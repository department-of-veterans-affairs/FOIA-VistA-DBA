Released ECX*3*84 SEQ #80
Extracted from mail message
**KIDS**:ECX*3.0*84^

**INSTALL NAME**
ECX*3.0*84
"BLD",6149,0)
ECX*3.0*84^DSS EXTRACTS^0^3051026^y
"BLD",6149,1,0)
^^1^1^3050607^
"BLD",6149,1,1,0)
DSS FY 2006 Updates
"BLD",6149,4,0)
^9.64PA^728.113^14
"BLD",6149,4,727,0)
727
"BLD",6149,4,727,2,0)
^9.641^727^1
"BLD",6149,4,727,2,727,0)
DSS EXTRACT LOG  (File-top level)
"BLD",6149,4,727,2,727,1,0)
^9.6411^3^2
"BLD",6149,4,727,2,727,1,3,0)
START DATE/TIME
"BLD",6149,4,727,2,727,1,16,0)
USER
"BLD",6149,4,727,222)
y^y^p^^^^n^^n
"BLD",6149,4,727,224)

"BLD",6149,4,727.802,0)
727.802
"BLD",6149,4,727.802,2,0)
^9.641^727.802^1
"BLD",6149,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",6149,4,727.802,2,727.802,1,0)
^9.6411^75^3
"BLD",6149,4,727.802,2,727.802,1,73,0)
ATTENDING PHYSICIAN PC
"BLD",6149,4,727.802,2,727.802,1,74,0)
PRIMARY WARD PROVIDER PC
"BLD",6149,4,727.802,2,727.802,1,75,0)
ENVIRONMENTAL CONTAMINANTS
"BLD",6149,4,727.802,222)
y^y^p^^^^n^^n
"BLD",6149,4,727.802,224)

"BLD",6149,4,727.808,0)
727.808
"BLD",6149,4,727.808,2,0)
^9.641^727.808^1
"BLD",6149,4,727.808,2,727.808,0)
PHYSICAL MOVEMENT EXTRACT  (File-top level)
"BLD",6149,4,727.808,2,727.808,1,0)
^9.6411^34^2
"BLD",6149,4,727.808,2,727.808,1,33,0)
DISCHARGE PC PROV PERSON CLASS
"BLD",6149,4,727.808,2,727.808,1,34,0)
DISCHARGE ASSOC PC PROVIDER PC
"BLD",6149,4,727.808,222)
y^y^p^^^^n^^n
"BLD",6149,4,727.808,224)

"BLD",6149,4,727.809,0)
727.809
"BLD",6149,4,727.809,2,0)
^9.641^727.809^1
"BLD",6149,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",6149,4,727.809,2,727.809,1,0)
^9.6411^58^1
"BLD",6149,4,727.809,2,727.809,1,58,0)
ORDERING STOP CODE
"BLD",6149,4,727.809,222)
y^y^p^^^^n^^n
"BLD",6149,4,727.809,224)

"BLD",6149,4,727.81,0)
727.81
"BLD",6149,4,727.81,2,0)
^9.641^727.81^1
"BLD",6149,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",6149,4,727.81,2,727.81,1,0)
^9.6411^83^1
"BLD",6149,4,727.81,2,727.81,1,83,0)
RX ORDER NUMBER
"BLD",6149,4,727.81,222)
y^y^p^^^^n^^n
"BLD",6149,4,727.81,224)

"BLD",6149,4,727.811,0)
727.811
"BLD",6149,4,727.811,2,0)
^9.641^727.811^1
"BLD",6149,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",6149,4,727.811,2,727.811,1,0)
^9.6411^76^5
"BLD",6149,4,727.811,2,727.811,1,72,0)
PRINCIPLE ANESTHETIST
"BLD",6149,4,727.811,2,727.811,1,73,0)
SURGEON PERSON CLASS
"BLD",6149,4,727.811,2,727.811,1,74,0)
ATTENDING SURGEON PC
"BLD",6149,4,727.811,2,727.811,1,75,0)
ANESTHESIA SUPERVISOR PC
"BLD",6149,4,727.811,2,727.811,1,76,0)
PRINCIPLE ANETHETIST PC
"BLD",6149,4,727.811,222)
y^y^p^^^^n^^n
"BLD",6149,4,727.811,224)

"BLD",6149,4,727.812,0)
727.812
"BLD",6149,4,727.812,2,0)
^9.641^727.812^1
"BLD",6149,4,727.812,2,727.812,0)
MENTAL HEALTH EXTRACT  (File-top level)
"BLD",6149,4,727.812,2,727.812,1,0)
^9.6411^60^2
"BLD",6149,4,727.812,2,727.812,1,59,0)
ATTENDING PHYSICIAN PC
"BLD",6149,4,727.812,2,727.812,1,60,0)
WARD PROVIDER PERSON CLASS
"BLD",6149,4,727.812,222)
y^y^p^^^^n^^n
"BLD",6149,4,727.812,224)

"BLD",6149,4,727.814,0)
727.814
"BLD",6149,4,727.814,2,0)
^9.641^727.814^1
"BLD",6149,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",6149,4,727.814,2,727.814,1,0)
^9.6411^34^6
"BLD",6149,4,727.814,2,727.814,1,34,0)
RAD STOP CODE
"BLD",6149,4,727.814,2,727.814,1,38,0)
ORDERING PROVIDER PERSON CLASS
"BLD",6149,4,727.814,2,727.814,1,39,0)
INTERPRETING RADIOLOGIST
"BLD",6149,4,727.814,2,727.814,1,40,0)
INTERPRETING RADIOLOGIST PC
"BLD",6149,4,727.814,2,727.814,1,41,0)
CLINIC NAME
"BLD",6149,4,727.814,2,727.814,1,42,0)
CLINIC STOP CODE
"BLD",6149,4,727.814,222)
y^y^p^^^^n^^n
"BLD",6149,4,727.814,224)

"BLD",6149,4,727.817,0)
727.817
"BLD",6149,4,727.817,2,0)
^9.641^727.817^1
"BLD",6149,4,727.817,2,727.817,0)
TREATING SPECIALTY CHANGE EXTRACT  (File-top level)
"BLD",6149,4,727.817,2,727.817,1,0)
^9.6411^39^4
"BLD",6149,4,727.817,2,727.817,1,36,0)
LOSING ATTENDING PHYSICIAN PC
"BLD",6149,4,727.817,2,727.817,1,37,0)
NEW PRIMARY WARD PROVIDER PC
"BLD",6149,4,727.817,2,727.817,1,38,0)
NEW ATTENDING PHYSICIAN PC
"BLD",6149,4,727.817,2,727.817,1,39,0)
LOSING PRIMARY WARD PROV PC
"BLD",6149,4,727.817,222)
y^y^p^^^^n^^n
"BLD",6149,4,727.817,224)

"BLD",6149,4,727.819,0)
727.819
"BLD",6149,4,727.819,2,0)
^9.641^727.819^1
"BLD",6149,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",6149,4,727.819,2,727.819,1,0)
^9.6411^38^1
"BLD",6149,4,727.819,2,727.819,1,38,0)
ORDERING STOP CODE
"BLD",6149,4,727.819,222)
y^y^p^^^^n^^n
"BLD",6149,4,727.819,224)

"BLD",6149,4,727.827,0)
727.827
"BLD",6149,4,727.827,2,0)
^9.641^727.827^1
"BLD",6149,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",6149,4,727.827,2,727.827,1,0)
^9.6411^85^2
"BLD",6149,4,727.827,2,727.827,1,84,0)
ENVIRONMENTAL CONTAMINANTS
"BLD",6149,4,727.827,2,727.827,1,85,0)
ENCOUNTER EC
"BLD",6149,4,727.827,222)
y^y^p^^^^n^^n
"BLD",6149,4,727.827,224)

"BLD",6149,4,727.829,0)
727.829
"BLD",6149,4,727.829,2,0)
^9.641^727.829^1
"BLD",6149,4,727.829,2,727.829,0)
BLOOD BANK EXTRACT  (File-top level)
"BLD",6149,4,727.829,2,727.829,1,0)
^9.6411^21^2
"BLD",6149,4,727.829,2,727.829,1,20,0)
ORDERING PROVIDER
"BLD",6149,4,727.829,2,727.829,1,21,0)
ORDERING PROVIDER PERSON CLASS
"BLD",6149,4,727.829,222)
y^y^p^^^^n^^n
"BLD",6149,4,727.829,224)

"BLD",6149,4,728.113,0)
728.113
"BLD",6149,4,728.113,2,0)
^9.641^728.113^1
"BLD",6149,4,728.113,2,728.113,0)
IV EXTRACT DATA  (File-top level)
"BLD",6149,4,728.113,2,728.113,1,0)
^9.6411^16^4
"BLD",6149,4,728.113,2,728.113,1,13,0)
CLINIC
"BLD",6149,4,728.113,2,728.113,1,14,0)
ORDER DATE
"BLD",6149,4,728.113,2,728.113,1,15,0)
IV ROOM
"BLD",6149,4,728.113,2,728.113,1,16,0)
VERIFICATION DATE
"BLD",6149,4,728.113,222)
y^y^p^^^^n^^n
"BLD",6149,4,728.113,224)

"BLD",6149,4,728.904,0)
728.904
"BLD",6149,4,728.904,2,0)
^9.641^728.904^1
"BLD",6149,4,728.904,2,728.904,0)
UNIT DOSE EXTRACT DATA  (File-top level)
"BLD",6149,4,728.904,2,728.904,1,0)
^9.6411^2.5^1
"BLD",6149,4,728.904,2,728.904,1,2.5,0)
ORDER NUMBER
"BLD",6149,4,728.904,222)
y^y^p^^^^n^^n
"BLD",6149,4,728.904,224)

"BLD",6149,4,"APDD",727,727)

"BLD",6149,4,"APDD",727,727,3)

"BLD",6149,4,"APDD",727,727,16)

"BLD",6149,4,"APDD",727.802,727.802)

"BLD",6149,4,"APDD",727.802,727.802,73)

"BLD",6149,4,"APDD",727.802,727.802,74)

"BLD",6149,4,"APDD",727.802,727.802,75)

"BLD",6149,4,"APDD",727.808,727.808)

"BLD",6149,4,"APDD",727.808,727.808,33)

"BLD",6149,4,"APDD",727.808,727.808,34)

"BLD",6149,4,"APDD",727.809,727.809)

"BLD",6149,4,"APDD",727.809,727.809,58)

"BLD",6149,4,"APDD",727.81,727.81)

"BLD",6149,4,"APDD",727.81,727.81,83)

"BLD",6149,4,"APDD",727.811,727.811)

"BLD",6149,4,"APDD",727.811,727.811,72)

"BLD",6149,4,"APDD",727.811,727.811,73)

"BLD",6149,4,"APDD",727.811,727.811,74)

"BLD",6149,4,"APDD",727.811,727.811,75)

"BLD",6149,4,"APDD",727.811,727.811,76)

"BLD",6149,4,"APDD",727.812,727.812)

"BLD",6149,4,"APDD",727.812,727.812,59)

"BLD",6149,4,"APDD",727.812,727.812,60)

"BLD",6149,4,"APDD",727.814,727.814)

"BLD",6149,4,"APDD",727.814,727.814,34)

"BLD",6149,4,"APDD",727.814,727.814,38)

"BLD",6149,4,"APDD",727.814,727.814,39)

"BLD",6149,4,"APDD",727.814,727.814,40)

"BLD",6149,4,"APDD",727.814,727.814,41)

"BLD",6149,4,"APDD",727.814,727.814,42)

"BLD",6149,4,"APDD",727.817,727.817)

"BLD",6149,4,"APDD",727.817,727.817,36)

"BLD",6149,4,"APDD",727.817,727.817,37)

"BLD",6149,4,"APDD",727.817,727.817,38)

"BLD",6149,4,"APDD",727.817,727.817,39)

"BLD",6149,4,"APDD",727.819,727.819)

"BLD",6149,4,"APDD",727.819,727.819,38)

"BLD",6149,4,"APDD",727.827,727.827)

"BLD",6149,4,"APDD",727.827,727.827,84)

"BLD",6149,4,"APDD",727.827,727.827,85)

"BLD",6149,4,"APDD",727.829,727.829)

"BLD",6149,4,"APDD",727.829,727.829,20)

"BLD",6149,4,"APDD",727.829,727.829,21)

"BLD",6149,4,"APDD",728.113,728.113)

"BLD",6149,4,"APDD",728.113,728.113,13)

"BLD",6149,4,"APDD",728.113,728.113,14)

"BLD",6149,4,"APDD",728.113,728.113,15)

"BLD",6149,4,"APDD",728.113,728.113,16)

"BLD",6149,4,"APDD",728.904,728.904)

"BLD",6149,4,"APDD",728.904,728.904,2.5)

"BLD",6149,4,"B",727,727)

"BLD",6149,4,"B",727.802,727.802)

"BLD",6149,4,"B",727.808,727.808)

"BLD",6149,4,"B",727.809,727.809)

"BLD",6149,4,"B",727.81,727.81)

"BLD",6149,4,"B",727.811,727.811)

"BLD",6149,4,"B",727.812,727.812)

"BLD",6149,4,"B",727.814,727.814)

"BLD",6149,4,"B",727.817,727.817)

"BLD",6149,4,"B",727.819,727.819)

"BLD",6149,4,"B",727.827,727.827)

"BLD",6149,4,"B",727.829,727.829)

"BLD",6149,4,"B",728.113,728.113)

"BLD",6149,4,"B",728.904,728.904)

"BLD",6149,6)
4^
"BLD",6149,"INIT")
EN^ECX384PT
"BLD",6149,"KRN",0)
^9.67PA^8989.52^19
"BLD",6149,"KRN",.4,0)
.4
"BLD",6149,"KRN",.4,"NM",0)
^9.68A^4^4
"BLD",6149,"KRN",.4,"NM",1,0)
ECX EXTRACT LOG PRINT    FILE #727^727^1^
"BLD",6149,"KRN",.4,"NM",2,0)
ECX LOG HEADER    FILE #727^727^1^
"BLD",6149,"KRN",.4,"NM",3,0)
ECX LAB TEST HEADER    FILE #727.2^727.2^0
"BLD",6149,"KRN",.4,"NM",4,0)
ECX LAB TEST PRINT    FILE #727.2^727.2^0
"BLD",6149,"KRN",.4,"NM","B","ECX EXTRACT LOG PRINT    FILE #727",1)

"BLD",6149,"KRN",.4,"NM","B","ECX LAB TEST HEADER    FILE #727.2",3)

"BLD",6149,"KRN",.4,"NM","B","ECX LAB TEST PRINT    FILE #727.2",4)

"BLD",6149,"KRN",.4,"NM","B","ECX LOG HEADER    FILE #727",2)

"BLD",6149,"KRN",.401,0)
.401
"BLD",6149,"KRN",.401,"NM",0)
^9.68A^3^3
"BLD",6149,"KRN",.401,"NM",1,0)
ECX LAB TEST SORT BY DSS NAME    FILE #727.2^727.2^0
"BLD",6149,"KRN",.401,"NM",2,0)
ECX LAB TEST SORT BY LOCAL    FILE #727.2^727.2^0
"BLD",6149,"KRN",.401,"NM",3,0)
ECX LAB TEST SORT BY NUMBER    FILE #727.2^727.2^0
"BLD",6149,"KRN",.401,"NM","B","ECX LAB TEST SORT BY DSS NAME    FILE #727.2",1)

"BLD",6149,"KRN",.401,"NM","B","ECX LAB TEST SORT BY LOCAL    FILE #727.2",2)

"BLD",6149,"KRN",.401,"NM","B","ECX LAB TEST SORT BY NUMBER    FILE #727.2",3)

"BLD",6149,"KRN",.402,0)
.402
"BLD",6149,"KRN",.403,0)
.403
"BLD",6149,"KRN",.5,0)
.5
"BLD",6149,"KRN",.84,0)
.84
"BLD",6149,"KRN",3.6,0)
3.6
"BLD",6149,"KRN",3.8,0)
3.8
"BLD",6149,"KRN",9.2,0)
9.2
"BLD",6149,"KRN",9.8,0)
9.8
"BLD",6149,"KRN",9.8,"NM",0)
^9.68A^36^33
"BLD",6149,"KRN",9.8,"NM",1,0)
ECXSCX2^^0^B7985175
"BLD",6149,"KRN",9.8,"NM",2,0)
ECXUTL^^0^B36783041
"BLD",6149,"KRN",9.8,"NM",3,0)
ECXSCXN^^0^B53183889
"BLD",6149,"KRN",9.8,"NM",4,0)
ECXSCX1^^0^B65910787
"BLD",6149,"KRN",9.8,"NM",5,0)
ECXUTL2^^0^B68550952
"BLD",6149,"KRN",9.8,"NM",7,0)
ECXRAD^^0^B29447080
"BLD",6149,"KRN",9.8,"NM",8,0)
ECXOPRX^^0^B71625093
"BLD",6149,"KRN",9.8,"NM",11,0)
ECXLPRO^^0^B25310596
"BLD",6149,"KRN",9.8,"NM",12,0)
ECXLPRO1^^0^B8515235
"BLD",6149,"KRN",9.8,"NM",13,0)
ECXTRAC^^0^B55910461
"BLD",6149,"KRN",9.8,"NM",14,0)
ECXUSUR^^0^B28150599
"BLD",6149,"KRN",9.8,"NM",15,0)
ECXLARP^^0^B6446893
"BLD",6149,"KRN",9.8,"NM",16,0)
ECXADM^^0^B30252904
"BLD",6149,"KRN",9.8,"NM",17,0)
ECXMOV^^0^B18912208
"BLD",6149,"KRN",9.8,"NM",18,0)
ECXTRT^^0^B56480766
"BLD",6149,"KRN",9.8,"NM",19,0)
ECXMTL^^0^B32017303
"BLD",6149,"KRN",9.8,"NM",20,0)
ECXLOG^^0^B20540020
"BLD",6149,"KRN",9.8,"NM",21,0)
ECXCPRO^^0^B31541311
"BLD",6149,"KRN",9.8,"NM",22,0)
ECXCPRO1^^0^B12615627
"BLD",6149,"KRN",9.8,"NM",23,0)
ECXDRUG2^^0^B15718997
"BLD",6149,"KRN",9.8,"NM",24,0)
ECXAPHA2^^0^B21081474
"BLD",6149,"KRN",9.8,"NM",25,0)
ECXUD^^0^B44193841
"BLD",6149,"KRN",9.8,"NM",26,0)
ECXPIVDN^^0^B62713375
"BLD",6149,"KRN",9.8,"NM",27,0)
ECXFEKEY^^0^B43028983
"BLD",6149,"KRN",9.8,"NM",28,0)
ECXDRUG^^0^B4540912
"BLD",6149,"KRN",9.8,"NM",29,0)
ECXNDC^^0^B15755233
"BLD",6149,"KRN",9.8,"NM",30,0)
ECXSURG^^0^B54498715
"BLD",6149,"KRN",9.8,"NM",31,0)
ECXUTL5^^0^B26003920
"BLD",6149,"KRN",9.8,"NM",32,0)
ECXTREX^^0^B11339972
"BLD",6149,"KRN",9.8,"NM",33,0)
ECXLBB^^0^B15231408
"BLD",6149,"KRN",9.8,"NM",34,0)
ECXKILL^^0^B6107432
"BLD",6149,"KRN",9.8,"NM",35,0)
ECXQSR^^0^B56207579
"BLD",6149,"KRN",9.8,"NM",36,0)
ECX384PT^^0^B473778
"BLD",6149,"KRN",9.8,"NM","B","ECX384PT",36)

"BLD",6149,"KRN",9.8,"NM","B","ECXADM",16)

"BLD",6149,"KRN",9.8,"NM","B","ECXAPHA2",24)

"BLD",6149,"KRN",9.8,"NM","B","ECXCPRO",21)

"BLD",6149,"KRN",9.8,"NM","B","ECXCPRO1",22)

"BLD",6149,"KRN",9.8,"NM","B","ECXDRUG",28)

"BLD",6149,"KRN",9.8,"NM","B","ECXDRUG2",23)

"BLD",6149,"KRN",9.8,"NM","B","ECXFEKEY",27)

"BLD",6149,"KRN",9.8,"NM","B","ECXKILL",34)

"BLD",6149,"KRN",9.8,"NM","B","ECXLARP",15)

"BLD",6149,"KRN",9.8,"NM","B","ECXLBB",33)

"BLD",6149,"KRN",9.8,"NM","B","ECXLOG",20)

"BLD",6149,"KRN",9.8,"NM","B","ECXLPRO",11)

"BLD",6149,"KRN",9.8,"NM","B","ECXLPRO1",12)

"BLD",6149,"KRN",9.8,"NM","B","ECXMOV",17)

"BLD",6149,"KRN",9.8,"NM","B","ECXMTL",19)

"BLD",6149,"KRN",9.8,"NM","B","ECXNDC",29)

"BLD",6149,"KRN",9.8,"NM","B","ECXOPRX",8)

"BLD",6149,"KRN",9.8,"NM","B","ECXPIVDN",26)

"BLD",6149,"KRN",9.8,"NM","B","ECXQSR",35)

"BLD",6149,"KRN",9.8,"NM","B","ECXRAD",7)

"BLD",6149,"KRN",9.8,"NM","B","ECXSCX1",4)

"BLD",6149,"KRN",9.8,"NM","B","ECXSCX2",1)

"BLD",6149,"KRN",9.8,"NM","B","ECXSCXN",3)

"BLD",6149,"KRN",9.8,"NM","B","ECXSURG",30)

"BLD",6149,"KRN",9.8,"NM","B","ECXTRAC",13)

"BLD",6149,"KRN",9.8,"NM","B","ECXTREX",32)

"BLD",6149,"KRN",9.8,"NM","B","ECXTRT",18)

"BLD",6149,"KRN",9.8,"NM","B","ECXUD",25)

"BLD",6149,"KRN",9.8,"NM","B","ECXUSUR",14)

"BLD",6149,"KRN",9.8,"NM","B","ECXUTL",2)

"BLD",6149,"KRN",9.8,"NM","B","ECXUTL2",5)

"BLD",6149,"KRN",9.8,"NM","B","ECXUTL5",31)

"BLD",6149,"KRN",19,0)
19
"BLD",6149,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",6149,"KRN",19,"NM",1,0)
ECXDENT^^1^
"BLD",6149,"KRN",19,"NM",2,0)
ECX SUR VOL REPORT^^0
"BLD",6149,"KRN",19,"NM",3,0)
ECX EXTRACT LOG SUMMARY^^0
"BLD",6149,"KRN",19,"NM","B","ECX EXTRACT LOG SUMMARY",3)

"BLD",6149,"KRN",19,"NM","B","ECX SUR VOL REPORT",2)

"BLD",6149,"KRN",19,"NM","B","ECXDENT",1)

"BLD",6149,"KRN",19.1,0)
19.1
"BLD",6149,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",6149,"KRN",101,0)
101
"BLD",6149,"KRN",101,"NM",0)
^9.68A^^
"BLD",6149,"KRN",409.61,0)
409.61
"BLD",6149,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",6149,"KRN",771,0)
771
"BLD",6149,"KRN",870,0)
870
"BLD",6149,"KRN",8989.51,0)
8989.51
"BLD",6149,"KRN",8989.52,0)
8989.52
"BLD",6149,"KRN",8994,0)
8994
"BLD",6149,"KRN","B",.4,.4)

"BLD",6149,"KRN","B",.401,.401)

"BLD",6149,"KRN","B",.402,.402)

"BLD",6149,"KRN","B",.403,.403)

"BLD",6149,"KRN","B",.5,.5)

"BLD",6149,"KRN","B",.84,.84)

"BLD",6149,"KRN","B",3.6,3.6)

"BLD",6149,"KRN","B",3.8,3.8)

"BLD",6149,"KRN","B",9.2,9.2)

"BLD",6149,"KRN","B",9.8,9.8)

"BLD",6149,"KRN","B",19,19)

"BLD",6149,"KRN","B",19.1,19.1)

"BLD",6149,"KRN","B",101,101)

"BLD",6149,"KRN","B",409.61,409.61)

"BLD",6149,"KRN","B",771,771)

"BLD",6149,"KRN","B",870,870)

"BLD",6149,"KRN","B",8989.51,8989.51)

"BLD",6149,"KRN","B",8989.52,8989.52)

"BLD",6149,"KRN","B",8994,8994)

"BLD",6149,"QUES",0)
^9.62^^
"BLD",6149,"REQB",0)
^9.611^7^6
"BLD",6149,"REQB",1,0)
ECX*3.0*71^2
"BLD",6149,"REQB",2,0)
ECX*3.0*80^2
"BLD",6149,"REQB",3,0)
ECX*3.0*78^2
"BLD",6149,"REQB",4,0)
ECX*3.0*81^2
"BLD",6149,"REQB",6,0)
PSJ*5.0*130^2
"BLD",6149,"REQB",7,0)
PSS*1.0*97^2
"BLD",6149,"REQB","B","ECX*3.0*71",1)

"BLD",6149,"REQB","B","ECX*3.0*78",3)

"BLD",6149,"REQB","B","ECX*3.0*80",2)

"BLD",6149,"REQB","B","ECX*3.0*81",4)

"BLD",6149,"REQB","B","PSJ*5.0*130",6)

"BLD",6149,"REQB","B","PSS*1.0*97",7)

"FIA",727)
DSS EXTRACT LOG
"FIA",727,0)
^ECX(727,
"FIA",727,0,0)
727I
"FIA",727,0,1)
y^y^p^^^^n^^n
"FIA",727,0,10)

"FIA",727,0,11)

"FIA",727,0,"RLRO")

"FIA",727,0,"VR")
3.0^ECX
"FIA",727,727)
1
"FIA",727,727,3)

"FIA",727,727,16)

"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^y^p^^^^n^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,73)

"FIA",727.802,727.802,74)

"FIA",727.802,727.802,75)

"FIA",727.808)
PHYSICAL MOVEMENT EXTRACT
"FIA",727.808,0)
^ECX(727.808,
"FIA",727.808,0,0)
727.808
"FIA",727.808,0,1)
y^y^p^^^^n^^n
"FIA",727.808,0,10)

"FIA",727.808,0,11)

"FIA",727.808,0,"RLRO")

"FIA",727.808,0,"VR")
3.0^ECX
"FIA",727.808,727.808)
1
"FIA",727.808,727.808,33)

"FIA",727.808,727.808,34)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^y^p^^^^n^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,58)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^y^p^^^^n^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,83)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^y^p^^^^n^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,72)

"FIA",727.811,727.811,73)

"FIA",727.811,727.811,74)

"FIA",727.811,727.811,75)

"FIA",727.811,727.811,76)

"FIA",727.812)
MENTAL HEALTH EXTRACT
"FIA",727.812,0)
^ECX(727.812,
"FIA",727.812,0,0)
727.812
"FIA",727.812,0,1)
y^y^p^^^^n^^n
"FIA",727.812,0,10)

"FIA",727.812,0,11)

"FIA",727.812,0,"RLRO")

"FIA",727.812,0,"VR")
3.0^ECX
"FIA",727.812,727.812)
1
"FIA",727.812,727.812,59)

"FIA",727.812,727.812,60)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^y^p^^^^n^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,34)

"FIA",727.814,727.814,38)

"FIA",727.814,727.814,39)

"FIA",727.814,727.814,40)

"FIA",727.814,727.814,41)

"FIA",727.814,727.814,42)

"FIA",727.817)
TREATING SPECIALTY CHANGE EXTRACT
"FIA",727.817,0)
^ECX(727.817,
"FIA",727.817,0,0)
727.817
"FIA",727.817,0,1)
y^y^p^^^^n^^n
"FIA",727.817,0,10)

"FIA",727.817,0,11)

"FIA",727.817,0,"RLRO")

"FIA",727.817,0,"VR")
3.0^ECX
"FIA",727.817,727.817)
1
"FIA",727.817,727.817,36)

"FIA",727.817,727.817,37)

"FIA",727.817,727.817,38)

"FIA",727.817,727.817,39)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^y^p^^^^n^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,38)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^y^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,84)

"FIA",727.827,727.827,85)

"FIA",727.829)
BLOOD BANK EXTRACT
"FIA",727.829,0)
^ECX(727.829,
"FIA",727.829,0,0)
727.829
"FIA",727.829,0,1)
y^y^p^^^^n^^n
"FIA",727.829,0,10)

"FIA",727.829,0,11)

"FIA",727.829,0,"RLRO")

"FIA",727.829,0,"VR")
3.0^ECX
"FIA",727.829,727.829)
1
"FIA",727.829,727.829,20)

"FIA",727.829,727.829,21)

"FIA",728.113)
IV EXTRACT DATA
"FIA",728.113,0)
^ECX(728.113,
"FIA",728.113,0,0)
728.113
"FIA",728.113,0,1)
y^y^p^^^^n^^n
"FIA",728.113,0,10)

"FIA",728.113,0,11)

"FIA",728.113,0,"RLRO")

"FIA",728.113,0,"VR")
3.0^ECX
"FIA",728.113,728.113)
1
"FIA",728.113,728.113,13)

"FIA",728.113,728.113,14)

"FIA",728.113,728.113,15)

"FIA",728.113,728.113,16)

"FIA",728.904)
UNIT DOSE EXTRACT DATA
"FIA",728.904,0)
^ECX(728.904,
"FIA",728.904,0,0)
728.904
"FIA",728.904,0,1)
y^y^p^^^^n^^n
"FIA",728.904,0,10)

"FIA",728.904,0,11)

"FIA",728.904,0,"RLRO")

"FIA",728.904,0,"VR")
3.0^ECX
"FIA",728.904,728.904)
1
"FIA",728.904,728.904,2.5)

"INIT")
EN^ECX384PT
"KRN",.4,2538,-1)
0^4
"KRN",.4,2538,0)
ECX LAB TEST PRINT^3050513.0846^@^727.2^^@^3050829
"KRN",.4,2538,"DXS",1,9)
X DXS(1,9.2) S X1=DIP(3) S X2=DIP(2) X "F %=1:1:$L(X1) F %Y=0:0 S %Y=$F(X2,$E(X1,%),%Y) Q:'%Y  S I=$E(X,%),X2=$E(X2,1,%Y-2)_I_$E(X2,%Y,999) S:I="""" %Y=%Y-1" S X=X2
"KRN",.4,2538,"DXS",1,9.2)
S X=$S('$D(D1):"",D1<0:"",1:D1),DIP(1)=$G(X) S X=4,X=$J(DIP(1),X),DIP(2)=$G(X) S X=" ",DIP(3)=$G(X) S X="0"
"KRN",.4,2538,"F",1)
1,X DXS(1,9) W X K DIP;C1;"";Z;"TRANSLATE($J(NUMBER,4)," ","0")"~1,.01;L20;C11~1,1,.01;L20;C35~1,2;L5;C59~
"KRN",.4,2538,"F",2)
1,1,-60,^LAB(60,^^S I(2,0)=D2 S I(1,0)=D1 S I(0,0)=D0 S DIP(1)=$S($D(^ECX(727.2,D0,1,D1,"LOC",D2,0)):^(0),1:"") S X=$P(DIP(1),U,1),X=X S D(0)=+X;Z;".01:"~
"KRN",.4,2538,"F",3)
1,1,-60,100,.01;L10;C69~1,1,-60,100,6;L5;C83~1,1,-60,500,1;C95~
"KRN",.4,2538,"H")
[DSS LAB TEST HEADER]
"KRN",.4,2539,-1)
0^3
"KRN",.4,2539,0)
ECX LAB TEST HEADER^3050526.1556^@^727.2^^@^3050829
"KRN",.4,2539,"DXS",1,9.2)
 S X="Printed on ",DIP(1)=$G(X),%=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100) S Y=X,X=DIP(1),X=X S X=X
"KRN",.4,2539,"F",1)
"DSS LAB TESTS NAMES DATASHEET";C1~S X="Page ",DIP(1)=$G(X),X=$S($D(DC)#2:DC,1:"") S Y=X,X=DIP(1),X=X S X=X_Y W X K DIP;C95;Z;""Page "_PAGE"~
"KRN",.4,2539,"F",2)
X DXS(1,9.2) S DIP(2)=X,X=Y S Y=X X ^DD("DD") S X=DIP(2)_Y S Y=X D DT K DIP;C1;Z;""Printed on "_NOW";d;L18~"RESULT";C1;S~"TEST ID";C1~"DSS LAB";C11~
"KRN",.4,2539,"F",3)
"LOCAL LAB";C35~"REPORTING";C81~"LMIP(s)/";C95~"NUMBER";C1~"TEST NAME";C11~"TEST NAME";C35~"SOURCE";C59~"SPECIMEN";C69~"UNITS";C83~"WKLD CODE(s)";C95~
"KRN",.4,2539,"F",4)
S $P(LN,"-",120)="" W LN;C1;Z;"S $P(LN,"-",120)="" W LN"~
"KRN",.4,2539,"H")
@
"KRN",.4,2539,"SUB")
1
"KRN",.4,2543,-1)
1^1
"KRN",.4,2543,0)
ECX EXTRACT LOG PRINT    FILE #727
"KRN",.4,2544,-1)
1^2
"KRN",.4,2544,0)
ECX LOG HEADER    FILE #727
"KRN",.401,1784,-1)
0^3
"KRN",.401,1784,0)
ECX LAB TEST SORT BY NUMBER^3050609.1946^@^727.2^^@^3050727
"KRN",.401,1784,2,0)
^.4014^2^2
"KRN",.401,1784,2,1,0)
727.2^.01^NAME^@^^^^^^4
"KRN",.401,1784,2,1,"GET")
S DISX(1)=$P($G(^ECX(727.2,D0,0)),U)
"KRN",.401,1784,2,1,"IX")
^ECX(727.2,"B",^ECX(727.2,^2
"KRN",.401,1784,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1784,2,1,"SER")
0^0
"KRN",.401,1784,2,1,"TXT")
NAME not null
"KRN",.401,1784,2,2,0)
727.21^0^NUMBER^@^^^^^^2
"KRN",.401,1784,2,2,1,0)
^.40141^1^1
"KRN",.401,1784,2,2,1,1,0)
727.2^1
"KRN",.401,1784,2,2,1,"B",727.2,1)

"KRN",.401,1784,2,2,"QCON")
I D1'=""
"KRN",.401,1784,2,2,"TXT")
NUMBER not null
"KRN",.401,1784,2,"B",727.2,1)

"KRN",.401,1784,2,"B",727.21,2)

"KRN",.401,1784,"%D",0)
^.4012^1^1^3050609^^^
"KRN",.401,1784,"%D",1,0)
DSS LAB TEST DATASHEET report sorted by DSS LAB TEST NUMBER.
"KRN",.401,1785,-1)
0^1
"KRN",.401,1785,0)
ECX LAB TEST SORT BY DSS NAME^3050510.1138^@^727.2^^@^3050829
"KRN",.401,1785,2,0)
^.4014^1^1
"KRN",.401,1785,2,1,0)
727.21^.01^DSS LAB TEST^@^^^^^^4
"KRN",.401,1785,2,1,1,0)
^.40141^1^1
"KRN",.401,1785,2,1,1,1,0)
727.2^1
"KRN",.401,1785,2,1,1,"B",727.2,1)

"KRN",.401,1785,2,1,"GET")
S DISX(1)=$P($G(^ECX(727.2,D0,1,D1,0)),U)
"KRN",.401,1785,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1785,2,1,"TXT")
DSS LAB TEST not null
"KRN",.401,1785,2,"B",727.21,1)

"KRN",.401,1785,"%D",0)
^.4012^1^1^3050510^^
"KRN",.401,1785,"%D",1,0)
DSS LAB TEST DATASHEET report sorted by DSS LAB TEST NAME.
"KRN",.401,1786,-1)
0^2
"KRN",.401,1786,0)
ECX LAB TEST SORT BY LOCAL^3050510.1051^@^727.2^^@^3050727
"KRN",.401,1786,2,0)
^.4014^1^1
"KRN",.401,1786,2,1,0)
727.211^^LOCAL LAB TEST NAME^@".01^^^^^^4
"KRN",.401,1786,2,1,1,0)
^.40141^2^2
"KRN",.401,1786,2,1,1,1,0)
727.2^1
"KRN",.401,1786,2,1,1,2,0)
727.21^LOC
"KRN",.401,1786,2,1,1,"B",727.2,1)

"KRN",.401,1786,2,1,1,"B",727.21,2)

"KRN",.401,1786,2,1,"CM")
S Y(1)=$S($D(^ECX(727.2,D0,1,D1,"LOC",D2,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(727.211,.01,"",$P(Y(1),U,1)) I D2>0 S DISX(1)=X
"KRN",.401,1786,2,1,"GET")
S Y(1)=$S($D(^ECX(727.2,D0,1,D1,"LOC",D2,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(727.211,.01,"",$P(Y(1),U,1)) I D2>0 S DISX(1)=X
"KRN",.401,1786,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1786,2,1,"TXT")
LOCAL LAB TEST NAME not null
"KRN",.401,1786,2,"B",727.211,1)

"KRN",.401,1786,"%D",0)
^^1^1^3050510^
"KRN",.401,1786,"%D",1,0)
DSS LAB TEST DATASHEET REPORT sort by local lab name.
"KRN",19,10157,-1)
0^3
"KRN",19,10157,0)
ECX EXTRACT LOG SUMMARY^Summary Report of Extract Logs^^R^^^^^^^^DSS EXTRACTS^^
"KRN",19,10157,1,0)
^19.06^3^3^3050613^^^^
"KRN",19,10157,1,1,0)
Using this option a summary report may be printed from the EXTRACT
"KRN",19,10157,1,2,0)
LOG file (#727) displaying extract number, feeder system, data set
"KRN",19,10157,1,3,0)
dates (date range), record count, date transmitted, and date purged.
"KRN",19,10157,20)

"KRN",19,10157,25)
EN^ECXLOG
"KRN",19,10157,60)
ECX(727,
"KRN",19,10157,62)
0
"KRN",19,10157,63)
[ECX LOG]
"KRN",19,10157,64)
[ECX LOG]
"KRN",19,10157,"U")
SUMMARY REPORT OF EXTRACT LOGS
"KRN",19,12503,-1)
0^2
"KRN",19,12503,0)
ECX SUR VOL REPORT^SUR Volume Report^^R^^^^^^^^DSS EXTRACTS^^1^1
"KRN",19,12503,1,0)
^19.06^3^3^3050510^^^^
"KRN",19,12503,1,1,0)
This option creates a report that lists volumes for all surgical 
"KRN",19,12503,1,2,0)
cases that would be generated by the Surgery extract (SUR) for
"KRN",19,12503,1,3,0)
transmission to AAC for review.
"KRN",19,12503,15)
K FLAG
"KRN",19,12503,20)
S FLAG=1
"KRN",19,12503,25)
EN^ECXUSUR
"KRN",19,12503,"U")
SUR VOLUME REPORT
"KRN",19,13158,-1)
1^1
"KRN",19,13158,0)
ECXDENT
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
84^3051026^3507
"PKG",513,22,1,"PAH",1,1,0)
^^1^1^3051026
"PKG",513,22,1,"PAH",1,1,1,0)
DSS FY 2006 Updates
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
33
"RTN","ECX384PT")
0^36^B473778
"RTN","ECX384PT",1,0)
ECX384PT ;ALB/GTS - Extract Log Report for DSS ; 10/26/05 1:45pm
"RTN","ECX384PT",2,0)
 ;;3.0;DSS EXTRACTS;**84**;Dec 22, 1997
"RTN","ECX384PT",3,0)
 ;
"RTN","ECX384PT",4,0)
EN ;entry point from option
"RTN","ECX384PT",5,0)
 D BMES^XPDUTL("Creating new index for file 727 for START DATE/TIME field (#3) ")
"RTN","ECX384PT",6,0)
 S DIK="^ECX(727,",DIK(1)="3^AE"
"RTN","ECX384PT",7,0)
 D ENALL^DIK
"RTN","ECX384PT",8,0)
 D BMES^XPDUTL("Indexing completed succesfully ")
"RTN","ECX384PT",9,0)
 Q
"RTN","ECXADM")
0^16^B30252904
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ; 9/20/05 9:21am
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71,84**;Dec 22, 1997
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 S QFLG=0
"RTN","ECXADM",10,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",11,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",12,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",13,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",14,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",15,0)
 Q
"RTN","ECXADM",16,0)
 ;
"RTN","ECXADM",17,0)
GET ;gather extract data
"RTN","ECXADM",18,0)
 N ADM,W,X,ECXNPRFI,ECXATTPC,ECXPRVPC,ECXEST
"RTN","ECXADM",19,0)
 ;patient demographics
"RTN","ECXADM",20,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",21,0)
 Q:ECXERR
"RTN","ECXADM",22,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",23,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",24,0)
 ;admission data
"RTN","ECXADM",25,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",26,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",27,0)
 S (ECDRG,ECDIA,ECXSADM)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF
"RTN","ECXADM",28,0)
 ;use movement record date & time
"RTN","ECXADM",29,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",30,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",31,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",32,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",33,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",34,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",35,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",36,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",37,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",38,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",39,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",40,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXADM",41,0)
 ;
"RTN","ECXADM",42,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",43,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",44,0)
 ;
"RTN","ECXADM",45,0)
 ;- Patient Type
"RTN","ECXADM",46,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",47,0)
 ;
"RTN","ECXADM",48,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",49,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",50,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",51,0)
 Q
"RTN","ECXADM",52,0)
 ;
"RTN","ECXADM",53,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",54,0)
 N OK,X
"RTN","ECXADM",55,0)
 K ECXPAT
"RTN","ECXADM",56,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",57,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",58,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",59,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",60,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",61,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",62,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",63,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",64,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",65,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",66,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",67,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",68,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",69,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",70,0)
 S ECXRELG=ECXPAT("RELIGION")
"RTN","ECXADM",71,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",72,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",73,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",74,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",75,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",76,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",77,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",78,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",79,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",80,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",81,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",82,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",83,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",84,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",85,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXADM",86,0)
 ;
"RTN","ECXADM",87,0)
 ;- Agent Orange location
"RTN","ECXADM",88,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",89,0)
 ;
"RTN","ECXADM",90,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",91,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",92,0)
 ; - Race and Ethnicity
"RTN","ECXADM",93,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",94,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",95,0)
 ;
"RTN","ECXADM",96,0)
 ;get primary care data
"RTN","ECXADM",97,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",98,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",99,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",100,0)
 ;get combat veteran data
"RTN","ECXADM",101,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",102,0)
 ;get national patient record flag if exist
"RTN","ECXADM",103,0)
 D NPRF^ECXUTL5
"RTN","ECXADM",104,0)
 Q
"RTN","ECXADM",105,0)
 ;
"RTN","ECXADM",106,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",107,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",108,0)
 N EC,EC1,ECX
"RTN","ECXADM",109,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",110,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",111,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",112,0)
 S ECDIA=$P($G(^ICD9(EC1,0)),U)
"RTN","ECXADM",113,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",114,0)
 Q
"RTN","ECXADM",115,0)
 ;
"RTN","ECXADM",116,0)
FILE ;file the extract record
"RTN","ECXADM",117,0)
 ;node0
"RTN","ECXADM",118,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^
"RTN","ECXADM",119,0)
 ;religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",120,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",121,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",122,0)
 ;ward^treating specialty^attending physician^mov #^DRG^diagnosis^
"RTN","ECXADM",123,0)
 ;time^primary care provider^race^primary ward provider
"RTN","ECXADM",124,0)
 ;node1
"RTN","ECXADM",125,0)
 ;mpi^dss dept^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",126,0)
 ;admission elig^mst status^^sharing payor^
"RTN","ECXADM",127,0)
 ;sharing insurance^enrollment location^
"RTN","ECXADM",128,0)
 ;pc prov person class^assoc pc provider^assoc pc prov person class^
"RTN","ECXADM",129,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^enrollment
"RTN","ECXADM",130,0)
 ;priority^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",131,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",132,0)
 ;^ethnicity^race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",133,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",134,0)
 ;national patient record flag ECXNPRFI^att phy person class ECXATTPC
"RTN","ECXADM",135,0)
 ;^primary war dprovider person class ECXPRVPC^environ conatmin ECXEST
"RTN","ECXADM",136,0)
 N DA,DIK
"RTN","ECXADM",137,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",138,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",139,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",140,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",141,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",142,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",143,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",144,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",145,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXATNPI_U_ECPTNPI_U_ECXPRNPI_U_ELGA_U
"RTN","ECXADM",146,0)
 S ECODE1=ECODE1_ECXMST_U_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",147,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",148,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",149,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",150,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",151,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",152,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATTPC_U_ECXPRVPC_U_ECXEST
"RTN","ECXADM",153,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXADM",154,0)
 S ECRN=ECRN+1
"RTN","ECXADM",155,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",156,0)
 Q
"RTN","ECXADM",157,0)
 ;
"RTN","ECXADM",158,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",159,0)
 S ECHEAD="ADM"
"RTN","ECXADM",160,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",161,0)
 Q
"RTN","ECXADM",162,0)
 ;
"RTN","ECXADM",163,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",164,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",165,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",166,0)
 ;
"RTN","ECXADM",167,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",168,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",169,0)
 ;
"RTN","ECXAPHA2")
0^24^B21081474
"RTN","ECXAPHA2",1,0)
ECXAPHA2 ;ALB/TMD-Pharmacy Extracts Unusual Volumes Report ; 8/23/05 10:36am
"RTN","ECXAPHA2",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,84**;Dec 22, 1997
"RTN","ECXAPHA2",3,0)
 ;
"RTN","ECXAPHA2",4,0)
EN ; entry point
"RTN","ECXAPHA2",5,0)
 N COUNT,ECUNIT,LINE,ECDFN,ECD,ECDRG,ECDAY,ECDFN,ECQTY,ECUNIT,ECCOST,ECDS
"RTN","ECXAPHA2",6,0)
 K ^TMP($J)
"RTN","ECXAPHA2",7,0)
 S (COUNT,ECDS)=0,ECUNIT=""
"RTN","ECXAPHA2",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXAPHA2",9,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",1:"EXIT")
"RTN","ECXAPHA2",10,0)
 D @LINE
"RTN","ECXAPHA2",11,0)
 Q
"RTN","ECXAPHA2",12,0)
 ;
"RTN","ECXAPHA2",13,0)
PRE ; entry point for PRE data
"RTN","ECXAPHA2",14,0)
 ; order through fills, refills and partial refills
"RTN","ECXAPHA2",15,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1,ECPRC
"RTN","ECXAPHA2",16,0)
 S ECREF=1
"RTN","ECXAPHA2",17,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  Q:ECXERR  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",18,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXAPHA2",19,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",20,0)
 Q
"RTN","ECXAPHA2",21,0)
 ;
"RTN","ECXAPHA2",22,0)
PRE2 ; get Prescription data
"RTN","ECXAPHA2",23,0)
 S ECDATA=$G(^PSRX(ECRX,0))
"RTN","ECXAPHA2",24,0)
 I ECRFL D
"RTN","ECXAPHA2",25,0)
 .S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0))
"RTN","ECXAPHA2",26,0)
 .S ECQTY=+$P(ECDATA1,U,4)
"RTN","ECXAPHA2",27,0)
 .S ECDS=+$P(ECDATA1,U,10)
"RTN","ECXAPHA2",28,0)
 .S ECPRC=+$P(ECDATA1,U,11)
"RTN","ECXAPHA2",29,0)
 I 'ECRFL D
"RTN","ECXAPHA2",30,0)
 .S ECQTY=+$P(ECDATA,U,7)
"RTN","ECXAPHA2",31,0)
 .S ECDS=+$P(ECDATA,U,8)
"RTN","ECXAPHA2",32,0)
 .S ECPRC=+$P(ECDATA,U,17)
"RTN","ECXAPHA2",33,0)
 ;check to see if quantity>threshold
"RTN","ECXAPHA2",34,0)
 I ECQTY>ECTHLD D
"RTN","ECXAPHA2",35,0)
 .S ECDAY=ECD
"RTN","ECXAPHA2",36,0)
 .S ECDFN=$P(ECDATA,U,2)
"RTN","ECXAPHA2",37,0)
 .S ECDRG=+$P(ECDATA,U,6)
"RTN","ECXAPHA2",38,0)
 .S ECCOST=ECQTY*ECPRC
"RTN","ECXAPHA2",39,0)
 .D FILE Q:ECXERR
"RTN","ECXAPHA2",40,0)
 Q
"RTN","ECXAPHA2",41,0)
 ;
"RTN","ECXAPHA2",42,0)
IVP ; entry point for IVP Data
"RTN","ECXAPHA2",43,0)
 N DFN,ON,DA,SA,ECCOUNT
"RTN","ECXAPHA2",44,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D  Q:ECXERR
"RTN","ECXAPHA2",45,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:ECXERR  I $D(^ECX(728.113,DA,0)) S EC=^(0) Q:ECXERR  D
"RTN","ECXAPHA2",46,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXAPHA2",47,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXAPHA2",48,0)
 ..; set up new record for first DA for this drug
"RTN","ECXAPHA2",49,0)
 ..I '$D(^TMP($J,SA,ECDRG)) D
"RTN","ECXAPHA2",50,0)
 ...S ECQTY=+$S(SA="A":+$P(EC,U,7),SA="S":+$P(EC,U,9),1:0)
"RTN","ECXAPHA2",51,0)
 ...S ECUNIT=$S(SA="A":$P(EC,U,8),SA="S":"ML",1:"")
"RTN","ECXAPHA2",52,0)
 ...S ECCOST=$P(EC,U,12),ECDFN=DFN
"RTN","ECXAPHA2",53,0)
 ...S ^TMP($J,SA,ECDRG)=ECUNIT_U_ECD_U_ECDFN_U_ECCOST_U_ECQTY
"RTN","ECXAPHA2",54,0)
 ...S ^(ECDRG,1)=0
"RTN","ECXAPHA2",55,0)
 ..; add to qty (0,1, or -1) to total
"RTN","ECXAPHA2",56,0)
 ..S ^TMP($J,SA,ECDRG,1)=^TMP($J,SA,ECDRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXAPHA2",57,0)
 .; looped thru all DAs for this order - now check for unusual volumes
"RTN","ECXAPHA2",58,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  Q:ECXERR  D
"RTN","ECXAPHA2",59,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U,5),ECCOUNT=^(ECDRG,1)
"RTN","ECXAPHA2",60,0)
 ..S ECQTY=ECQTY*ECCOUNT
"RTN","ECXAPHA2",61,0)
 ..; check to see if quantity is outside of threshold range
"RTN","ECXAPHA2",62,0)
 ..I (ECQTY>ECTHLD)!(ECQTY<-ECTHLD) D
"RTN","ECXAPHA2",63,0)
 ...S ECUNIT=$P(^TMP($J,SA,ECDRG),U)
"RTN","ECXAPHA2",64,0)
 ...S ECDAY=$P(^(ECDRG),U,2)
"RTN","ECXAPHA2",65,0)
 ...S ECDFN=$P(^(ECDRG),U,3)
"RTN","ECXAPHA2",66,0)
 ...S ECCOST=$P(^(ECDRG),U,4)*ECCOUNT
"RTN","ECXAPHA2",67,0)
 ...D FILE Q:ECXERR
"RTN","ECXAPHA2",68,0)
 K ^TMP($J,"A"),^("S")
"RTN","ECXAPHA2",69,0)
 Q
"RTN","ECXAPHA2",70,0)
 ;
"RTN","ECXAPHA2",71,0)
UDP ; entry point for UDP data
"RTN","ECXAPHA2",72,0)
 N ECXJ,ECDATA
"RTN","ECXAPHA2",73,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXAPHA2",74,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXAPHA2",75,0)
 ..S DATA=^ECX(728.904,ECXJ,0),ECQTY=$P(DATA,U,5)
"RTN","ECXAPHA2",76,0)
 ..;check to see if quantity>threshold
"RTN","ECXAPHA2",77,0)
 ..I ECQTY>ECTHLD D
"RTN","ECXAPHA2",78,0)
 ...S ECDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4),ECCOST=$P(DATA,U,8),ECDAY=ECD
"RTN","ECXAPHA2",79,0)
 ...D FILE Q:ECXERR
"RTN","ECXAPHA2",80,0)
 Q
"RTN","ECXAPHA2",81,0)
 ;
"RTN","ECXAPHA2",82,0)
FILE ; put records in temp file to print later
"RTN","ECXAPHA2",83,0)
 N OK,ECXPAT,ECNAME,ECSSN,ECGNAME,ECNDC,ECPROD,ECFKEY,ECXPHA
"RTN","ECXAPHA2",84,0)
 ; get demographics
"RTN","ECXAPHA2",85,0)
 S OK=$$PAT^ECXUTL3(ECDFN,$P(ECD,"."),"1;",.ECXPAT)
"RTN","ECXAPHA2",86,0)
 I 'OK Q
"RTN","ECXAPHA2",87,0)
 S ECNAME=ECXPAT("NAME")
"RTN","ECXAPHA2",88,0)
 S ECSSN=ECXPAT("SSN")
"RTN","ECXAPHA2",89,0)
 S ECDAY=$E(ECDAY,4,5)_"/"_$E(ECDAY,6,7)
"RTN","ECXAPHA2",90,0)
 ; get drug file data
"RTN","ECXAPHA2",91,0)
 S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXAPHA2",92,0)
 S ECGNAME=$P(ECXPHA,U)
"RTN","ECXAPHA2",93,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXAPHA2",94,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0)
"RTN","ECXAPHA2",95,0)
 S ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXAPHA2",96,0)
 S ECPROD=$P(ECXPHA,U,6)
"RTN","ECXAPHA2",97,0)
 S ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXAPHA2",98,0)
 S ECFKEY=ECPROD_ECNDC
"RTN","ECXAPHA2",99,0)
 I ECXOPT'=2 S ECUNIT=$P(ECXPHA,U,8)
"RTN","ECXAPHA2",100,0)
 ; file 
"RTN","ECXAPHA2",101,0)
 S ^TMP($J,ECFKEY,-ECQTY,ECSSN)=ECNAME_U_ECSSN_U_ECDAY_U_ECGNAME_U_ECFKEY_U_ECQTY_U_ECUNIT_U_"$"_$FNUMBER(ECCOST,",",2)_U_ECDS
"RTN","ECXAPHA2",102,0)
 S COUNT=COUNT+1
"RTN","ECXAPHA2",103,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZSTOP,ECXERR)=1
"RTN","ECXAPHA2",104,0)
 Q
"RTN","ECXAPHA2",105,0)
 ;
"RTN","ECXAPHA2",106,0)
EXIT S ECXERR=1 Q
"RTN","ECXCPRO")
0^21^B31541311
"RTN","ECXCPRO",1,0)
ECXCPRO ;ALB/JAP - PRO Extract YTD Report ; 8/23/05 1:36pm
"RTN","ECXCPRO",2,0)
 ;;3.0;DSS EXTRACTS;**21,24,33,84**;Dec 22, 1997
"RTN","ECXCPRO",3,0)
 ;accumulates extract data by hcpcs code for all extracts in fiscal year date range
"RTN","ECXCPRO",4,0)
 ;if an extract has been purged, then totals will be falsely low
"RTN","ECXCPRO",5,0)
 ;if more than 1 extract exists for a particular month, then totals will be falsely high
"RTN","ECXCPRO",6,0)
 ;if site is multidivisional, then user can generate report for
"RTN","ECXCPRO",7,0)
 ;  any one division - data stored under divisional station# (e.g., 326 or 326AB)
"RTN","ECXCPRO",8,0)
 ;  or for entire facility - data stored under primary station# (e.g., 326) but includes data from all subdivisions
"RTN","ECXCPRO",9,0)
 ;if site is non-divisional, then data stored under facility station#
"RTN","ECXCPRO",10,0)
 ;
"RTN","ECXCPRO",11,0)
 ;
"RTN","ECXCPRO",12,0)
EN ;setup & queue
"RTN","ECXCPRO",13,0)
 N DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,DIV,LAST,OUT
"RTN","ECXCPRO",14,0)
 S ECXERR=0
"RTN","ECXCPRO",15,0)
 S ECXHEAD="PRO"
"RTN","ECXCPRO",16,0)
 W !!,"Setup for PRO Extract YTD HCPCS Report --",!
"RTN","ECXCPRO",17,0)
 ;determine primary division
"RTN","ECXCPRO",18,0)
 W !,"If you belong to more than one Primary Division, you must"
"RTN","ECXCPRO",19,0)
 W !,"select a Primary Division for the report.",!
"RTN","ECXCPRO",20,0)
 S ECXPRIME=$$PDIV^ECXPUTL
"RTN","ECXCPRO",21,0)
 I ECXPRIME=0 D ^ECXKILL Q
"RTN","ECXCPRO",22,0)
 S DA=ECXPRIME,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99" D EN^DIQ1
"RTN","ECXCPRO",23,0)
 S ECXPRIME=ECXPRIME_U_$G(ECXDIC(4,DA,99,"I"))_U_$G(ECXDIC(4,DA,.01,"I"))
"RTN","ECXCPRO",24,0)
 ;select 1 or more prosthetics divisions for report
"RTN","ECXCPRO",25,0)
 D PRO^ECXDVSN2(DUZ,ECXPRIME,.ECXDIV,.ECXALL,.ECXERR)
"RTN","ECXCPRO",26,0)
 I ECXERR D  Q
"RTN","ECXCPRO",27,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXCPRO",28,0)
 ;determine fiscal year of report
"RTN","ECXCPRO",29,0)
 S DIR(0)="SMBA^C:CURRENT;P:PREVIOUS",DIR("A")="Select C(urrent) or P(revious) Fiscal Year: ",DIR("B")="CURRENT"
"RTN","ECXCPRO",30,0)
 W ! K X,Y D ^DIR K DIR
"RTN","ECXCPRO",31,0)
 I $D(DUOUT)!($D(DTOUT)) D  Q
"RTN","ECXCPRO",32,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXCPRO",33,0)
 I Y="C" D
"RTN","ECXCPRO",34,0)
 .S X=$$CYFY^ECXUTL1(DT),ECXARRAY("START")=$P(X,U,3),ECXARRAY("END")=$P(X,U,4)
"RTN","ECXCPRO",35,0)
 I Y="P" D
"RTN","ECXCPRO",36,0)
 .S YR=$E(DT,1,3),MON=$E(DT,4,5) S:+MON<10 YR=YR-1 S X1=YR_"0930"
"RTN","ECXCPRO",37,0)
 .S X=$$CYFY^ECXUTL1(X1),ECXARRAY("START")=$P(X,U,3),ECXARRAY("END")=$P(X,U,4)
"RTN","ECXCPRO",38,0)
 .K C,MON,YR,X1
"RTN","ECXCPRO",39,0)
 ;setup variables for taskmanager
"RTN","ECXCPRO",40,0)
 S ECXPGM="PROCESS^ECXCPRO",ECXDESC="PRO Extract YTD Lab Report"
"RTN","ECXCPRO",41,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")=""
"RTN","ECXCPRO",42,0)
 ;determine output device and queue if requested
"RTN","ECXCPRO",43,0)
 W !!,"Please note: The PRO Extract YTD HCPCS Report requires 132 columns."
"RTN","ECXCPRO",44,0)
 W !,"             Select an appropriate device for output."
"RTN","ECXCPRO",45,0)
 W ! D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXCPRO",46,0)
 I ECXSAVE("POP")=1 W ! D ^ECXKILL Q
"RTN","ECXCPRO",47,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXCPRO",48,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXCPRO",49,0)
 .D PROCESS
"RTN","ECXCPRO",50,0)
 ;clean-up and close
"RTN","ECXCPRO",51,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXCPRO",52,0)
 D HOME^%ZIS
"RTN","ECXCPRO",53,0)
 Q
"RTN","ECXCPRO",54,0)
 ;
"RTN","ECXCPRO",55,0)
PROCESS ;begin processing
"RTN","ECXCPRO",56,0)
 N DIVISION,E,EXTRACT,REC,NODE0,NODE1,LASTDAY
"RTN","ECXCPRO",57,0)
 K ^TMP($J,"ECXP") S LASTDAY=""
"RTN","ECXCPRO",58,0)
 ;determine which extracts contain data for report
"RTN","ECXCPRO",59,0)
 S (EXTRACT,E)=0
"RTN","ECXCPRO",60,0)
 F  S E=$O(^ECX(727,"E",ECXHEAD,E)) Q:'E  D
"RTN","ECXCPRO",61,0)
 .Q:'$D(^ECX(727,E,0))
"RTN","ECXCPRO",62,0)
 .Q:$P($G(^ECX(727,E,0)),U,4)<ECXARRAY("START")
"RTN","ECXCPRO",63,0)
 .Q:$P($G(^ECX(727,E,0)),U,4)>ECXARRAY("END")
"RTN","ECXCPRO",64,0)
 .Q:$G(^ECX(727,E,"DIV"))'=+ECXPRIME
"RTN","ECXCPRO",65,0)
 .S EXTRACT(E)=^ECX(727,E,0)
"RTN","ECXCPRO",66,0)
 .I $P(EXTRACT(E),U,5)>LASTDAY S LASTDAY=$P(EXTRACT(E),U,5)
"RTN","ECXCPRO",67,0)
 ;setup array of station numbers included in report
"RTN","ECXCPRO",68,0)
 F DIV=0:0 S DIV=$O(ECXDIV(DIV)) Q:'DIV  S ECXSTAT=$P(ECXDIV(DIV),U,2),DIVISION(ECXSTAT)=ECXDIV(DIV)
"RTN","ECXCPRO",69,0)
 ;get the extract data
"RTN","ECXCPRO",70,0)
 S E=0 F  S E=$O(EXTRACT(E)) Q:'E  S REC=0 I $D(^ECX(727.826,"AC",E)) F  S REC=$O(^ECX(727.826,"AC",E,REC)) Q:'REC  D
"RTN","ECXCPRO",71,0)
 .S NODE0=$G(^ECX(727.826,REC,0)),NODE1=$G(^ECX(727.826,REC,1)) Q:NODE0=""
"RTN","ECXCPRO",72,0)
 .S (ECXCTAMT,ECXLLC,ECXLMC)=0
"RTN","ECXCPRO",73,0)
 .S ECXFELOC=$P(NODE0,U,10),ECXFEKEY=$P(NODE0,U,11)
"RTN","ECXCPRO",74,0)
 .S ECXHCPC=$P(NODE0,U,33),ECXTYPE=$E(ECXFEKEY,6),ECXSRCE=$E(ECXFEKEY,7)
"RTN","ECXCPRO",75,0)
 .S ECXQTY=$P(NODE0,U,12),ECXCTAMT=$P(NODE0,U,25),ECXGRPR=$P(NODE1,U,4)
"RTN","ECXCPRO",76,0)
 .I ECXFELOC["NONL" S ECXSTAT=$P(ECXFELOC,"NONL",1),ECXFORM="NONL"
"RTN","ECXCPRO",77,0)
 .;if this station is lab requesting station, then count lab transaction
"RTN","ECXCPRO",78,0)
 .I ECXFELOC["ORD" D
"RTN","ECXCPRO",79,0)
 ..S ECXSTAT=$P(ECXFELOC,"ORD",1),ECXFORM="ORD"
"RTN","ECXCPRO",80,0)
 ..S ECXLLC=$P(NODE0,U,26),ECXLMC=$P(NODE0,U,27)
"RTN","ECXCPRO",81,0)
 .;ignore record for receiving station feeder location
"RTN","ECXCPRO",82,0)
 .Q:ECXFELOC["LAB"
"RTN","ECXCPRO",83,0)
 .;ignore record if division not included in this report
"RTN","ECXCPRO",84,0)
 .Q:ECXSTAT=""  Q:'$D(DIVISION(ECXSTAT))
"RTN","ECXCPRO",85,0)
 .;if combining data from all subdivisions, then set in ^tmp using primary station#
"RTN","ECXCPRO",86,0)
 .I ECXALL=1 S ECXSTAT=$P(ECXPRIME,U,2)
"RTN","ECXCPRO",87,0)
 .;be sure there's no padding on cost variables
"RTN","ECXCPRO",88,0)
 .S ECXCTAMT=+$TR(ECXCTAMT," ",0),ECXLLC=+$TR(ECXLLC," ",0),ECXLMC=+$TR(ECXLMC," ",0)
"RTN","ECXCPRO",89,0)
 .;tmp global holds - com qty^com cost^va nonlab qty^va nonlab cost^lab qty^lab labor cost^lab matrl cost
"RTN","ECXCPRO",90,0)
 .I '$D(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)) S ^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)="0^0^0^0^0^0^0"
"RTN","ECXCPRO",91,0)
 .I ECXSRCE="C",ECXFORM="NONL" D
"RTN","ECXCPRO",92,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,1)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,1)+ECXQTY
"RTN","ECXCPRO",93,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,2)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,2)+ECXCTAMT
"RTN","ECXCPRO",94,0)
 .I ECXSRCE="V",ECXFORM="NONL" D
"RTN","ECXCPRO",95,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,3)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,3)+ECXQTY
"RTN","ECXCPRO",96,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,4)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,4)+ECXCTAMT
"RTN","ECXCPRO",97,0)
 .I ECXFORM="ORD" D
"RTN","ECXCPRO",98,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,5)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,5)+ECXQTY
"RTN","ECXCPRO",99,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,6)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,6)+ECXLLC
"RTN","ECXCPRO",100,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,7)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,7)+ECXLMC
"RTN","ECXCPRO",101,0)
 ;setup hcpcs descriptions
"RTN","ECXCPRO",102,0)
 D HCPCS
"RTN","ECXCPRO",103,0)
 ;print report
"RTN","ECXCPRO",104,0)
 D PRINT^ECXCPRO1
"RTN","ECXCPRO",105,0)
 ;cleanup
"RTN","ECXCPRO",106,0)
 D AUDIT^ECXKILL
"RTN","ECXCPRO",107,0)
 Q
"RTN","ECXCPRO",108,0)
 ;
"RTN","ECXCPRO",109,0)
HCPCS ;setup hcpcs cross-reference
"RTN","ECXCPRO",110,0)
 N H,HCPCS,CODE,CPTNM,DESC
"RTN","ECXCPRO",111,0)
 S H=0
"RTN","ECXCPRO",112,0)
 F  S H=$O(^RMPR(661.1,H)) Q:+H<1  D
"RTN","ECXCPRO",113,0)
 .;don't skip inactive hcpcs in case doing previous fy
"RTN","ECXCPRO",114,0)
 .S HCPCS="",HCPCS=$P(^RMPR(661.1,H,0),U,1)
"RTN","ECXCPRO",115,0)
 .S CODE=$$CPT^ICPTCOD(HCPCS)
"RTN","ECXCPRO",116,0)
 .I +CODE>0 S CPTNM=$P(CODE,U,2),DESC=$E($P(CODE,U,3),1,26)
"RTN","ECXCPRO",117,0)
 .Q:CPTNM=""
"RTN","ECXCPRO",118,0)
 .S ^TMP($J,"HCPCS",CPTNM)=DESC
"RTN","ECXCPRO",119,0)
 Q
"RTN","ECXCPRO1")
0^22^B12615627
"RTN","ECXCPRO1",1,0)
ECXCPRO1 ;ALB/JAP - PRO Extract YTD Report (cont) ; 5/9/05 3:08pm
"RTN","ECXCPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**21,84**;Dec 22, 1997
"RTN","ECXCPRO1",3,0)
 ;
"RTN","ECXCPRO1",4,0)
PRINT ;print report
"RTN","ECXCPRO1",5,0)
 N PG,LN,QFLG,NODE,DESC,AVE,JJ,SS,TOTAL,TOT,TQTY
"RTN","ECXCPRO1",6,0)
 U IO
"RTN","ECXCPRO1",7,0)
 S QFLG=0,$P(LN,"-",132)=""
"RTN","ECXCPRO1",8,0)
 S Y=ECXARRAY("START") D DD^%DT S ECXSTART=Y
"RTN","ECXCPRO1",9,0)
 S Y=$S(LASTDAY:LASTDAY,ECXARRAY("END")>DT:DT,1:ECXARRAY("END")) D DD^%DT S ECXEND=Y
"RTN","ECXCPRO1",10,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXCPRO1",11,0)
 ;if ecxall=0, then only one subdivision of multidivision facility
"RTN","ECXCPRO1",12,0)
 ;if ecxall=1, then either entire facility (i.e., non-divisional), or all subdivisions combined under primary station#
"RTN","ECXCPRO1",13,0)
 ;but it's possible that no extract data was found
"RTN","ECXCPRO1",14,0)
 S ECXSTAT="",ECXSTAT=$O(^TMP($J,"ECXP",ECXSTAT)) I ECXSTAT="" D  Q
"RTN","ECXCPRO1",15,0)
 .I ECXALL=0 S ECXSTAT=$O(DIVISION(""))
"RTN","ECXCPRO1",16,0)
 .F ECXTYPE="N","X" D  Q:QFLG
"RTN","ECXCPRO1",17,0)
 ..S PG=0 D HEADER
"RTN","ECXCPRO1",18,0)
 ..W !!,?36,"No extract data available."
"RTN","ECXCPRO1",19,0)
 ..I $E(IOST)="C" D  Q:QFLG
"RTN","ECXCPRO1",20,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",21,0)
 ...S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",22,0)
 F ECXTYPE="N","X" D  Q:QFLG
"RTN","ECXCPRO1",23,0)
 .S PG=0 D HEADER
"RTN","ECXCPRO1",24,0)
 .S ECXHCPC=""
"RTN","ECXCPRO1",25,0)
 .I '$D(^TMP($J,"ECXP",ECXSTAT,ECXTYPE)) D  Q
"RTN","ECXCPRO1",26,0)
 ..W !!,?36,"No extract data available."
"RTN","ECXCPRO1",27,0)
 ..I $E(IOST)="C" D  Q:QFLG
"RTN","ECXCPRO1",28,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",29,0)
 ...S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",30,0)
 .F  S ECXHCPC=$O(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)) Q:ECXHCPC=""  D  Q:QFLG
"RTN","ECXCPRO1",31,0)
 ..S DESC=$G(^TMP($J,"HCPCS",ECXHCPC)) S:DESC="" DESC="(Unknown)" S DESC=ECXHCPC_" "_DESC
"RTN","ECXCPRO1",32,0)
 ..S NODE=^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)
"RTN","ECXCPRO1",33,0)
 ..;node holds - com qty^com cost^va nonlab qty^va nonlab cost^lab qty^lab labor cost^lab matrl cost
"RTN","ECXCPRO1",34,0)
 ..F I=1:1:7 S X(I)=+$P(NODE,U,I)
"RTN","ECXCPRO1",35,0)
 ..S AVE("C")=0,AVE("V")=0,AVE("L")=0,AVE("ALL")=0,TOT("L")=0,TOTAL=0,TQTY=0
"RTN","ECXCPRO1",36,0)
 ..S:X(1)>0 AVE("C")=X(2)/X(1) S:X(3)>0 AVE("V")=X(4)/X(3) S TOT("L")=X(6)+X(7) S:X(5)>0 AVE("L")=TOT("L")/X(5)
"RTN","ECXCPRO1",37,0)
 ..S TQTY=X(1)+X(3)+X(5),TOTAL=X(2)+X(4)+TOT("L")
"RTN","ECXCPRO1",38,0)
 ..S:TQTY>0 AVE("ALL")=TOTAL/TQTY
"RTN","ECXCPRO1",39,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXCPRO1",40,0)
 ..W !,DESC,?33,$J(X(1),8,0),?43,$J(X(2),8,0),?53,$J(AVE("C"),8,2),?63,$J(X(3),8,0),?73,$J(X(4),8,0),?83,$J(AVE("V"),8,2),?93,$J(X(5),8,0),?103,$J(TOT("L"),8,0),?113,$J(AVE("L"),8,2),?123,$J(AVE("ALL"),8,2)
"RTN","ECXCPRO1",41,0)
 .I 'QFLG,$E(IOST)="C" D
"RTN","ECXCPRO1",42,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",43,0)
 ..S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",44,0)
 W @IOF
"RTN","ECXCPRO1",45,0)
 Q
"RTN","ECXCPRO1",46,0)
 ;
"RTN","ECXCPRO1",47,0)
HEADER ;header & page control
"RTN","ECXCPRO1",48,0)
 I $E(IOST)="C" D
"RTN","ECXCPRO1",49,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",50,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",51,0)
 Q:QFLG
"RTN","ECXCPRO1",52,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXCPRO1",53,0)
 W "Prosthetics (PRO) Extract YTD HCPCS Report",?122,"Page "_PG
"RTN","ECXCPRO1",54,0)
 W !,"FY Date Range: "_ECXSTART_" to "_ECXEND
"RTN","ECXCPRO1",55,0)
 I ECXALL=0 W !,"Division:      "_$P(DIVISION(ECXSTAT),U,3)_" ("_$P(DIVISION(ECXSTAT),U,2)_")"
"RTN","ECXCPRO1",56,0)
 I ECXALL=1 W !,"Facility:      "_$P(ECXPRIME,U,3)_" ("_$P(ECXPRIME,U,2)_")"
"RTN","ECXCPRO1",57,0)
 W !,"Run Date/Time: "_ECXRUN
"RTN","ECXCPRO1",58,0)
 W:ECXTYPE="N" !!,"REPORT OF NEW PROSTHETICS ACTIVITIES (Initial, Replacement, or Spare)"
"RTN","ECXCPRO1",59,0)
 W:ECXTYPE="X" !!,"REPORT OF REPAIR PROSTHETICS ACTIVITIES"
"RTN","ECXCPRO1",60,0)
 W !,?36,"Qty.",?44,"Total $",?55,"Ave. $",?67,"Qty.",?74,"Total $",?85,"Ave. $",?97,"Qty.",?104,"Total $",?114,"Ave. $",?125,"Ave. $"
"RTN","ECXCPRO1",61,0)
 W !,"PSAS HCPCS",?35,"-Comm-",?44,"-Comm-",?55,"-Comm-",?67,"-VA-",?75,"-VA-",?85,"-VA-",?96,"-Lab-",?105,"-Lab-",?114,"-Lab-",?125,"-All-"
"RTN","ECXCPRO1",62,0)
 W !,LN,!
"RTN","ECXCPRO1",63,0)
 Q
"RTN","ECXDRUG")
0^28^B4540912
"RTN","ECXDRUG",1,0)
ECXDRUG ;BIR/DMA-Report of Drugs Missing Class or NDC ; 6/7/05 1:42pm
"RTN","ECXDRUG",2,0)
 ;;3.0;DSS EXTRACTS;**8,84**;Dec 22, 1997
"RTN","ECXDRUG",3,0)
 W @IOF,!!,"This routine will generate a list of drugs missing either VA Class or NDC.",!,"These two elements make up the feeder key for your drug products,",!,"and should be entered.",!!,"Note - supply items may not have an NDC",!!
"RTN","ECXDRUG",4,0)
 S %ZIS="Q" D ^%ZIS K %ZIS Q:POP
"RTN","ECXDRUG",5,0)
 I $D(IO("Q")) S ZTRTN="EN^ECXDRUG",ZTDESC="Report of drugs missing class or NDC" D ^%ZTLOAD,^%ZISC Q
"RTN","ECXDRUG",6,0)
 ;
"RTN","ECXDRUG",7,0)
EN ;entry point
"RTN","ECXDRUG",8,0)
 N ARRAY,DR,A,A1,B,J,DIR,DIRUT,ECQ
"RTN","ECXDRUG",9,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXDRUG",10,0)
 K @ARRAY
"RTN","ECXDRUG",11,0)
 ;Call pharmacy drug file (#50) api dbia 4483 and create ^TMP global
"RTN","ECXDRUG",12,0)
 D DATA^PSS50(,"??",DT,,,"ECXLIST")
"RTN","ECXDRUG",13,0)
 D HEAD
"RTN","ECXDRUG",14,0)
 S DR="" F  S DR=$O(@ARRAY@("B",DR)) Q:DR=""!$D(ECQ)  D
"RTN","ECXDRUG",15,0)
 .F J=0 S J=$O(@ARRAY@("B",DR,J)) Q:'J!$D(ECQ)  D
"RTN","ECXDRUG",16,0)
 ..S A=@ARRAY@(J,.01)_U_^(2)_U_^(3),B=^(31)
"RTN","ECXDRUG",17,0)
 ..I $P(A,U,2)=""!($P(A,U,3)["S")!(B="") D  I $Y+5>IOSL D HEAD
"RTN","ECXDRUG",18,0)
 ...W !,?5,$P(A,U) W:$P(A,U,2)="" ?50,"YES" W:B="" ?60,"YES" W:$P(A,U,3)["S" ?70,"YES"
"RTN","ECXDRUG",19,0)
 K @ARRAY
"RTN","ECXDRUG",20,0)
OUT D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","ECXDRUG",21,0)
HEAD I IOST["C-" S DIR(0)="E" D ^DIR I 'Y S ECQ=1 Q
"RTN","ECXDRUG",22,0)
 W:$Y @IOF W !,?25,"DRUG NAME",?48,"MISSING",?58,"MISSING",?68,"SUPPLY",!,?49,"CLASS",?60,"NDC",?69,"ITEM",! Q
"RTN","ECXDRUG",23,0)
 ;
"RTN","ECXDRUG2")
0^23^B15718997
"RTN","ECXDRUG2",1,0)
ECXDRUG2 ;ALB/TMD-Pharmacy Extracts Incomplete Feeder Key Report ; 6/13/05 3:31pm
"RTN","ECXDRUG2",2,0)
 ;;3.0;DSS EXTRACTS;**40,68,84**;Dec 22, 1997
"RTN","ECXDRUG2",3,0)
 ;
"RTN","ECXDRUG2",4,0)
EN ; entry point
"RTN","ECXDRUG2",5,0)
 N ECD,LINE,ECDRG,ECQTY,ECPRC
"RTN","ECXDRUG2",6,0)
 K ^TMP($J)
"RTN","ECXDRUG2",7,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXDRUG2",8,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",1:"EXIT")
"RTN","ECXDRUG2",9,0)
 D @LINE
"RTN","ECXDRUG2",10,0)
 Q
"RTN","ECXDRUG2",11,0)
 ;
"RTN","ECXDRUG2",12,0)
PRE ; entry point for PRE data
"RTN","ECXDRUG2",13,0)
 ; order through fills, refills and partial refills
"RTN","ECXDRUG2",14,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1
"RTN","ECXDRUG2",15,0)
 S ECREF=1
"RTN","ECXDRUG2",16,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED   Q:ECXERR  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  Q:ECXERR  D PRE2
"RTN","ECXDRUG2",17,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXDRUG2",18,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D PRE2
"RTN","ECXDRUG2",19,0)
 Q
"RTN","ECXDRUG2",20,0)
 ;
"RTN","ECXDRUG2",21,0)
PRE2 ; get Prescription data
"RTN","ECXDRUG2",22,0)
 S ECDATA=$G(^PSRX(ECRX,0))
"RTN","ECXDRUG2",23,0)
 S ECDRG=+$P(ECDATA,U,6)
"RTN","ECXDRUG2",24,0)
 I ECRFL D
"RTN","ECXDRUG2",25,0)
 .S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0))
"RTN","ECXDRUG2",26,0)
 .S ECQTY=+$P(ECDATA1,U,4),ECPRC=+$P(ECDATA1,U,11)
"RTN","ECXDRUG2",27,0)
 I 'ECRFL S ECQTY=+$P(ECDATA,U,7),ECPRC=+$P(ECDATA,U,17)
"RTN","ECXDRUG2",28,0)
 D TEST
"RTN","ECXDRUG2",29,0)
 Q
"RTN","ECXDRUG2",30,0)
 ;
"RTN","ECXDRUG2",31,0)
IVP ; entry point for IVP data
"RTN","ECXDRUG2",32,0)
 N ON,DFN,DA,SA
"RTN","ECXDRUG2",33,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECXERR  Q:ECD>ECED  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  Q:ECXERR  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D
"RTN","ECXDRUG2",34,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  I $D(^ECX(728.113,DA,0)) S EC=^(0) D
"RTN","ECXDRUG2",35,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXDRUG2",36,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXDRUG2",37,0)
 ..I SA'="" D
"RTN","ECXDRUG2",38,0)
 ...I '$D(^TMP($J,SA,ECDRG)) S ^(ECDRG)=0,$P(^(ECDRG),U,2)=$P(EC,U,12)
"RTN","ECXDRUG2",39,0)
 ...S $P(^TMP($J,SA,ECDRG),U)=$P(^TMP($J,SA,ECDRG),U)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXDRUG2",40,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXDRUG2",41,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  D
"RTN","ECXDRUG2",42,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U),ECPRC=$P(^(ECDRG),U,2)
"RTN","ECXDRUG2",43,0)
 ..D TEST
"RTN","ECXDRUG2",44,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXDRUG2",45,0)
 Q
"RTN","ECXDRUG2",46,0)
 ;
"RTN","ECXDRUG2",47,0)
UDP ; entry point for UDP data
"RTN","ECXDRUG2",48,0)
 N ECXJ,ECDATA
"RTN","ECXDRUG2",49,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXDRUG2",50,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXDRUG2",51,0)
 ..S DATA=^ECX(728.904,ECXJ,0)
"RTN","ECXDRUG2",52,0)
 ..S ECDRG=$P(DATA,U,4),ECQTY=$P(DATA,U,5),ECCOST=$P(DATA,U,8)
"RTN","ECXDRUG2",53,0)
 ..S ECPRC=ECCOST/ECQTY
"RTN","ECXDRUG2",54,0)
 ..D TEST
"RTN","ECXDRUG2",55,0)
 Q
"RTN","ECXDRUG2",56,0)
 ;
"RTN","ECXDRUG2",57,0)
TEST ; retrieve NDC and PSNDF VA Product Code Entry and test for missing NDC or VA Prod Code
"RTN","ECXDRUG2",58,0)
 N ECTYPE,ECNDC,ECZERO,K,ECPROD,ECFCHAR,ECSTOCK,ECXPHA
"RTN","ECXDRUG2",59,0)
 S ECTYPE=0,ECXPHA=""
"RTN","ECXDRUG2",60,0)
 ; call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXDRUG2",61,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXDRUG2",62,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXDRUG2",63,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXDRUG2",64,0)
 S ECZERO=1,ECSTOCK=0 F K=1:1:$L(ECNDC) D  Q:'ECZERO!ECSTOCK
"RTN","ECXDRUG2",65,0)
 .S ECFCHAR=$E(ECNDC,K)
"RTN","ECXDRUG2",66,0)
 .I ECFCHAR="S" S ECSTOCK=1 Q
"RTN","ECXDRUG2",67,0)
 .I ECFCHAR'=0 S ECZERO=0 Q
"RTN","ECXDRUG2",68,0)
 I ECZERO!ECSTOCK!(ECNDC["N/A") S ECTYPE=2
"RTN","ECXDRUG2",69,0)
 S ECPROD=$P(ECXPHA,U,6),ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXDRUG2",70,0)
 I ECTYPE,'ECPROD S ECTYPE=3
"RTN","ECXDRUG2",71,0)
 I 'ECTYPE,'ECPROD S ECTYPE=1
"RTN","ECXDRUG2",72,0)
 I ECTYPE D FILE
"RTN","ECXDRUG2",73,0)
 Q
"RTN","ECXDRUG2",74,0)
 ;
"RTN","ECXDRUG2",75,0)
FILE ; file record
"RTN","ECXDRUG2",76,0)
 N ECFKEY,ECGNAME,STATS,ECCOUNT,QTY,COST,ECCOST
"RTN","ECXDRUG2",77,0)
 ; create new record if none exists for this drug
"RTN","ECXDRUG2",78,0)
 I '$D(^TMP($J,ECDRG)) D
"RTN","ECXDRUG2",79,0)
 .S ECFKEY=ECPROD_ECNDC
"RTN","ECXDRUG2",80,0)
 .S ECGNAME=$P($G(^PSDRUG(ECDRG,0)),U)
"RTN","ECXDRUG2",81,0)
 .S ^TMP($J,ECDRG)=ECGNAME_U_ECFKEY_U_ECPRC_U_ECTYPE
"RTN","ECXDRUG2",82,0)
 .S ^TMP($J,ECDRG,0)="0^0^0"
"RTN","ECXDRUG2",83,0)
 ; add stats to record
"RTN","ECXDRUG2",84,0)
 S STATS=^TMP($J,ECDRG,0)
"RTN","ECXDRUG2",85,0)
 S ECCOUNT=$P(STATS,U),QTY=$P(STATS,U,2),COST=$P(STATS,U,3)
"RTN","ECXDRUG2",86,0)
 S ECCOUNT=ECCOUNT+1
"RTN","ECXDRUG2",87,0)
 S ECCOST=ECQTY*ECPRC
"RTN","ECXDRUG2",88,0)
 S ECQTY=ECQTY+QTY,ECCOST=ECCOST+COST
"RTN","ECXDRUG2",89,0)
 S ^TMP($J,ECDRG,0)=ECCOUNT_U_ECQTY_U_ECCOST
"RTN","ECXDRUG2",90,0)
 Q
"RTN","ECXDRUG2",91,0)
 ;
"RTN","ECXDRUG2",92,0)
EXIT S ECXERR=1 Q
"RTN","ECXFEKEY")
0^27^B43028983
"RTN","ECXFEKEY",1,0)
ECXFEKEY ;BIR/DMA,CML-Print Feeder Keys; [ 05/15/96  9:44 AM ] ; 6/7/05 1:45pm
"RTN","ECXFEKEY",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,40,84**;Dec 22, 1997
"RTN","ECXFEKEY",3,0)
EN ;entry point from option
"RTN","ECXFEKEY",4,0)
 W !!,"Print list of Feeder Keys:",!
"RTN","ECXFEKEY",5,0)
 W !,"Select : 1. CLI",!,?9,"2. DEN",!,?9,"3. ECS",!,?9,"4. LAB",!,?9,"5. NUR",!,?9,"6. PHA",!,?9,"7. RAD",!,?9,"8. SUR",! S DIR(0)="L^1:8" D ^DIR Q:$D(DIRUT)
"RTN","ECXFEKEY",6,0)
 S ECY=Y
"RTN","ECXFEKEY",7,0)
 I ECY["3" D
"RTN","ECXFEKEY",8,0)
 .W !!,"The Feeder Key List for the Feeder System ECS can be printed by:",!?5,"(O)ld Feeder Key sort by Category-Procedure",!?5,"(N)ew Feeder Key sort by Procedure-CPT Code"
"RTN","ECXFEKEY",9,0)
 .S DIR(0)="S^O:OLD;N:NEW",DIR("B")="NEW" D ^DIR K DIR Q:$D(DIRUT)  S ECECS=Y
"RTN","ECXFEKEY",10,0)
 S:ECY["4" ECLAB=$$SELLABKE^ECXFEKE1() ;**Prompt to select Lab Feeder key
"RTN","ECXFEKEY",11,0)
 G:($G(ECLAB)=-1) QUIT ;**GOTO Exit point
"RTN","ECXFEKEY",12,0)
 G:$D(DIRUT) QUIT
"RTN","ECXFEKEY",13,0)
 K %ZIS,IOP S %ZIS="QM",%ZIS("B")="" D ^%ZIS
"RTN","ECXFEKEY",14,0)
 I POP W !,"NO DEVICE SELECTED!!" G QUIT
"RTN","ECXFEKEY",15,0)
 I $D(IO("Q")) K IO("Q") D  G QUIT
"RTN","ECXFEKEY",16,0)
 .S ZTRTN="START^ECXFEKEY",ZTDESC="Feeder Key List (DSS)"
"RTN","ECXFEKEY",17,0)
 .S ZTSAVE("ECY")="",ZTSAVE("ECPHA")="",ZTSAVE("ECPHA2")="",ZTSAVE("ECECS")="",ZTSAVE("ECLAB")=""
"RTN","ECXFEKEY",18,0)
 .D ^%ZTLOAD I $D(ZTSK) W !,"Queued Task #: "_ZTSK
"RTN","ECXFEKEY",19,0)
 .D HOME^%ZIS K ZTSK
"RTN","ECXFEKEY",20,0)
 ;
"RTN","ECXFEKEY",21,0)
START ;queued entry point
"RTN","ECXFEKEY",22,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFEKEY",23,0)
 K ^TMP($J)
"RTN","ECXFEKEY",24,0)
 F ECLIST=1:1 S EC=$P(ECY,",",ECLIST) Q:EC=""  D:EC=1 CLI D:EC=2 DEN^ECXFEKE1 D:EC=3 ECS D:EC=4 LAB D:EC=5 NUR D:EC=6 PHA D:EC=7 RAD D:EC=8 SUR^ECXFEKE1
"RTN","ECXFEKEY",25,0)
 U IO D PRINT^ECXFEKE1
"RTN","ECXFEKEY",26,0)
 Q
"RTN","ECXFEKEY",27,0)
LAB S EC=0
"RTN","ECXFEKEY",28,0)
 ;
"RTN","ECXFEKEY",29,0)
 ;** OLD Feeder Key format
"RTN","ECXFEKEY",30,0)
 I $G(ECLAB)="O" DO
"RTN","ECXFEKEY",31,0)
 .F  S EC=$O(^LAB(60,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),^TMP($J,"LAB",EC,EC)=EC1
"RTN","ECXFEKEY",32,0)
 ;
"RTN","ECXFEKEY",33,0)
 ;** NEW Feeder key format (LMIP Code)
"RTN","ECXFEKEY",34,0)
 I $G(ECLAB)="N" DO
"RTN","ECXFEKEY",35,0)
 .N EC2
"RTN","ECXFEKEY",36,0)
 .F  S EC=$O(^LAM(EC)) Q:'EC  DO
"RTN","ECXFEKEY",37,0)
 ..I $D(^LAM(EC,0)) DO
"RTN","ECXFEKEY",38,0)
 ...S EC1=$P(^LAM(EC,0),U,1),EC1=$P(EC1,"~",1)
"RTN","ECXFEKEY",39,0)
 ...S EC2=$P(^LAM(EC,0),U,2)
"RTN","ECXFEKEY",40,0)
 ...I EC2'[".9999",(EC2'[".8") S EC2=EC2\1
"RTN","ECXFEKEY",41,0)
 ...S ^TMP($J,"LAB",+EC2,+EC2)=EC1
"RTN","ECXFEKEY",42,0)
 Q
"RTN","ECXFEKEY",43,0)
ECS ;old ECS feeder key list for pre-FY97 data
"RTN","ECXFEKEY",44,0)
 G:$G(ECECS)="N" ECS2
"RTN","ECXFEKEY",45,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",46,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) D
"RTN","ECXFEKEY",47,0)
 ..S EC1=$P($P(^(0),U),"-",3,4),EC2=$P(EC1,"-"),EC2=$S(+EC2:EC2,1:"***"),EC4=$S($P($G(^EC(726,+EC2,0)),U)]"":$P(^(0),U),1:"***")
"RTN","ECXFEKEY",48,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($G(^ICPT(+EC3,0)),U),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",49,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($G(^ICPT(+EC5,0)),U,2),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",50,0)
 ..S ^TMP($J,"ECS",EC2_" - "_EC3,EC3)=EC4_" - "_EC5
"RTN","ECXFEKEY",51,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P($P(^(0),U),"-",3,4),EC2=$E($P($G(^ECP(+EC1,0)),U),1,25),EC3=$E($P($G(^ECP(+$P(EC1,"-",2),0)),U),1,25),^TMP($J,"ECS",EC1,EC1)=EC2_" - "_EC3
"RTN","ECXFEKEY",52,0)
ECQ K EC1,EC2,EC3,EC4,EC5,EC6,EC7,EC8,EC9,EC10 Q
"RTN","ECXFEKEY",53,0)
ECS2 ;new ECS feeder key list for FY97 data
"RTN","ECXFEKEY",54,0)
 ;feeder key is <Procedure> if PCE CPT code is same or null;
"RTN","ECXFEKEY",55,0)
 ;feeder is <Procedure-PCE CPT> otherwise;
"RTN","ECXFEKEY",56,0)
 ;the description column of list shows procedure (EC5) in lowercase and CPT code (EC8) in uppercase;
"RTN","ECXFEKEY",57,0)
 ;but if procedure (EC3) is itself a CPT Code, convert EC5 to uppercase
"RTN","ECXFEKEY",58,0)
 ;concatenation of "A;" and "B;" are for proper sorting - CPT codes 1st, then other procedures
"RTN","ECXFEKEY",59,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",60,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^ECJ(EC,0)) D
"RTN","ECXFEKEY",61,0)
 ..S EC1=$P($P(^ECJ(EC,0),U),"-",3,4)
"RTN","ECXFEKEY",62,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($G(^ICPT(+EC3,0)),U),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",63,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($G(^ICPT(+EC5,0)),U,2),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",64,0)
 ..S EC5=$$LOW(EC5)
"RTN","ECXFEKEY",65,0)
 ..I EC1["ICPT" S EC5=$$UPP(EC5),EC3="A;"_EC3
"RTN","ECXFEKEY",66,0)
 ..S EC6=$P(EC1,"-",2),EC7="",EC8=""
"RTN","ECXFEKEY",67,0)
 ..I EC6["EC(725," D
"RTN","ECXFEKEY",68,0)
 ...S EC6=$S(+EC6>0:$P($G(^EC(725,+EC6,0)),U,5),1:"") S EC7=$S(+EC6>0:$P($G(^ICPT(+EC6,0)),U),1:"")
"RTN","ECXFEKEY",69,0)
 ...S EC8=$S(+EC6>0:$E($P($G(^ICPT(+EC6,0)),U,2),1,25),1:"")
"RTN","ECXFEKEY",70,0)
 ...S EC8=$$UPP(EC8),EC3="B;"_EC3
"RTN","ECXFEKEY",71,0)
 ..S EC9=$S(EC7'="":EC3_"-"_EC7,1:EC3),EC10=$S(EC8'="":EC5_" - "_EC8,1:EC5)
"RTN","ECXFEKEY",72,0)
 ..S ^TMP($J,"ECS",EC9,EC3)=EC10
"RTN","ECXFEKEY",73,0)
 G ECQ
"RTN","ECXFEKEY",74,0)
LOW(X) ;convert string to lowercase
"RTN","ECXFEKEY",75,0)
 F %=2:1:$L(X) I $E(X,%)?1U,$E(X,%-1)?1A S X=$E(X,0,%-1)_$C($A(X,%)+32)_$E(X,%+1,999)
"RTN","ECXFEKEY",76,0)
 Q X
"RTN","ECXFEKEY",77,0)
UPP(X) ;convert string to uppercase
"RTN","ECXFEKEY",78,0)
 F %=1:1:$L(X) S:$E(X,%)?1L X=$E(X,0,%-1)_$C($A(X,%)-32)_$E(X,%+1,999)
"RTN","ECXFEKEY",79,0)
 Q X
"RTN","ECXFEKEY",80,0)
 ;
"RTN","ECXFEKEY",81,0)
PHA ;NEW PHA Feeder Key List sorted by NDF Match
"RTN","ECXFEKEY",82,0)
 N ECPPDU,ECXPHA,ARRAY
"RTN","ECXFEKEY",83,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXFEKEY",84,0)
 K @ARRAY
"RTN","ECXFEKEY",85,0)
 ;Call pharmacy drug file (#50) api dbia 4483 and create ^TMP global
"RTN","ECXFEKEY",86,0)
 D DATA^PSS50(,"??",DT,,,"ECXLIST")
"RTN","ECXFEKEY",87,0)
 S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXFEKEY",88,0)
 ;$order thru "B" cross reference
"RTN","ECXFEKEY",89,0)
 S ECD="" F  S ECD=$O(@ARRAY@("B",ECD)) Q:ECD=""  D
"RTN","ECXFEKEY",90,0)
 .S EC=0 F  S EC=$O(@ARRAY@("B",ECD,EC)) Q:EC'>0  D
"RTN","ECXFEKEY",91,0)
 ..S ECD=$P(@ARRAY@(EC,.01),U),ECNDC=@ARRAY@(EC,31),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXFEKEY",92,0)
 ..S P1=$P(@ARRAY@(EC,20),U),P3=$P(@ARRAY@(EC,22),U)
"RTN","ECXFEKEY",93,0)
 ..;get the 17 character key
"RTN","ECXFEKEY",94,0)
 ..S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXFEKEY",95,0)
 ..Q:+ECNFC=0
"RTN","ECXFEKEY",96,0)
 ..S ECNFC="A"_ECNFC
"RTN","ECXFEKEY",97,0)
 ..S ECPPDU=@ARRAY@(EC,16),ECPPDU=$FNUMBER(ECPPDU,"P",4)
"RTN","ECXFEKEY",98,0)
 ..S ^TMP($J,"PHA",ECNFC,0)=ECD_U_ECPPDU
"RTN","ECXFEKEY",99,0)
 K @ARRAY
"RTN","ECXFEKEY",100,0)
 Q
"RTN","ECXFEKEY",101,0)
CLI S SC=0 F  S SC=$O(^SC(SC)) Q:'SC  I $D(^(SC,0)) S EC=^(0),ECD=$P(EC,U) I $P(EC,U,3)="C" D  S ^TMP($J,"CLI","A;"_P1_P2_ECLEN_P3_"0",SC)=ECD
"RTN","ECXFEKEY",102,0)
 .S ECSC=$P($G(^DIC(40.7,+$P(EC,U,7),0)),U,2),ECCSC=$P($G(^DIC(40.7,+$P(EC,U,18),0)),U,2)
"RTN","ECXFEKEY",103,0)
 .S ECLEN="NNN" I $D(^SC(SC,"SL")),$P(^("SL"),U,2)'="V" S ECLEN=$S($P(^("SL"),U):$P(^("SL"),U),1:"NNN"),ECLEN=$E("000"_ECLEN,$L(ECLEN)+1,$L(ECLEN)+3)
"RTN","ECXFEKEY",104,0)
 .S (P1,P2)="000",P3="0000" I '$D(^ECX(728.44,SC,0)),ECCSC]"" S ECST=5,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q
"RTN","ECXFEKEY",105,0)
 .I '$D(^ECX(728.44,SC,0)) S ECST=1,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3) Q
"RTN","ECXFEKEY",106,0)
 .S EC=^ECX(728.44,SC,0),ECST=$P(EC,U,6)
"RTN","ECXFEKEY",107,0)
 .I ECST=6 Q
"RTN","ECXFEKEY",108,0)
 .;action code 6 means ignore
"RTN","ECXFEKEY",109,0)
 .I $P(EC,U,4)]"" S ECSC=$P(EC,U,4)
"RTN","ECXFEKEY",110,0)
 .I $P(EC,U,5)]"" S ECCSC=$P(EC,U,5)
"RTN","ECXFEKEY",111,0)
 .I ECST="" S ECST=4,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P3=$E("0000"_SC,$L(SC)+1,$L(SC)+4) S:ECCSC P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q
"RTN","ECXFEKEY",112,0)
 .I ECST<2 S P1=ECSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q
"RTN","ECXFEKEY",113,0)
 .I ECST=2 S P1=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q
"RTN","ECXFEKEY",114,0)
 .I ECST=3 S P1=ECSC,P11=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P11=$E("000"_P11,$L(P11)+1,$L(P11)+3) Q
"RTN","ECXFEKEY",115,0)
 .I ECST>3,ECST<7 S P1=ECSC,P2=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P2=$E("000"_P2,$L(P2)+1,$L(P2)+3) S:ECST=4 P3=$P($G(^ECX(728.441,+$P(^ECX(728.44,SC,0),U,8),0)),U) I P3="" S P3=$E("0000"_SC,$L(SC)+1,$L(SC)+4)
"RTN","ECXFEKEY",116,0)
 K ECLEN Q
"RTN","ECXFEKEY",117,0)
RAD S EC=0 F  S EC=$O(^RAMIS(71,EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECD=$P(EC1,U),EC2=$P($G(^ICPT(+$P(EC1,U,9),0)),U) S:EC2="" EC2="Unknown" S ^TMP($J,"RAD",EC2,EC)=ECD
"RTN","ECXFEKEY",118,0)
 S ^TMP($J,"RAD",88888,88888)="Portable procedure",^TMP($J,"RAD",99999,99999)="OR procedure"
"RTN","ECXFEKEY",119,0)
 Q
"RTN","ECXFEKEY",120,0)
NUR F EC=1:1:11 S EC1=$P($T(@EC),";",3) F EC2=0:1:5 S ^TMP($J,"NUR",$P(EC1,U)_"-"_EC2,EC2)=$P(EC1,U,2)_" LEVEL "_EC2
"RTN","ECXFEKEY",121,0)
1 ;;PSI^PSYCHIATRIC
"RTN","ECXFEKEY",122,0)
2 ;;SUR^SURGICAL
"RTN","ECXFEKEY",123,0)
3 ;;MED^MEDICAL (EXCLUDE SCI)
"RTN","ECXFEKEY",124,0)
4 ;;SCI^MEDICAL (SCI)
"RTN","ECXFEKEY",125,0)
5 ;;NUR^NURSING HOME CARE UNIT
"RTN","ECXFEKEY",126,0)
6 ;;REC^RECOVERY ROOM
"RTN","ECXFEKEY",127,0)
7 ;;ITN^INTENSIVE CARE
"RTN","ECXFEKEY",128,0)
8 ;;HEM^HEMODIALYSIS
"RTN","ECXFEKEY",129,0)
9 ;;INT^INTERMEDIATE CARE
"RTN","ECXFEKEY",130,0)
10 ;;DOM^DOMICILIARY
"RTN","ECXFEKEY",131,0)
11 ;;ALC^ALCOHOL AND DRUG TREATMENT
"RTN","ECXFEKEY",132,0)
 Q
"RTN","ECXFEKEY",133,0)
QUIT ;
"RTN","ECXFEKEY",134,0)
 K ECY,ECPHA,ECECS,ECLAB,ECPPDU,DIR,DIRUT,DUOUT,X,Y
"RTN","ECXFEKEY",135,0)
 Q
"RTN","ECXKILL")
0^34^B6107432
"RTN","ECXKILL",1,0)
ECXKILL ;BIR/DMA,PTD-Kill Local Variables ; 9/13/05 10:24am
"RTN","ECXKILL",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,21,24,31,39,49,84**;Dec 22, 1997
"RTN","ECXKILL",3,0)
 ;
"RTN","ECXKILL",4,0)
 K %,%DT,%Y,%ZIS,A,A1,A2,ABR,B,BY,D,D0,D1,DA,DAT,DATA,DATA1,DATA2,DATA6
"RTN","ECXKILL",5,0)
 K DATAOP,DD,DFN,DHDH,DIC,DIE,DIK,DINUM,DIQ
"RTN","ECXKILL",6,0)
 K DIR,DIRUT,DO,DR,DTOUT,DUOUT,EC,EC0,EC1,EC10,EC11,EC16,EC2,EC23,EC2NODE
"RTN","ECXKILL",7,0)
 K EC3,EC42,EC50,EC6,EC7,ECA,ECAC,ECACA,ECAD,ECADM,ECALL
"RTN","ECXKILL",8,0)
 K ECANE,ECAO,ECARG,ECAS,ECAT,ECATSV,ECB,ECC,ECCA,ECCAN,ECCAT,ECCH,ECCN
"RTN","ECXKILL",9,0)
 K ECCNT,ECCS,ECCSC,ECD,ECD0,ECD1,ECDA,ECDAL,ECDAT
"RTN","ECXKILL",10,0)
 K ECDATA,ECDATA1,ECDATE,ECDEN,ECDEX,ECDF,ECDFN,ECDFN0,ECDI,ECDIA,ECDIF
"RTN","ECXKILL",11,0)
 K ECDIV,ECDL,ECDN,ECDNEW,ECDO,ECDOC,ECDR,ECDRG,ECDS,ECDSSU,ECDT,ECDTTM
"RTN","ECXKILL",12,0)
 K ECDU,ECEC0,ECED,ECED1,ECEDN,ECEDNEW,ECF,ECF1,ECFD,ECFDT,ECFILE,ECFK
"RTN","ECXKILL",13,0)
 K ECFL,ECFR,ECGRP,ECH,ECHD,ECHEAD,ECI,ECID,ECIEN,ECIFN,ECIN
"RTN","ECXKILL",14,0)
 K ECINST,ECINV,ECIV,ECJ,ECK,ECL,ECL1,ECLAN,ECLAST,ECLDT,ECLINK,ECLIST
"RTN","ECXKILL",15,0)
 K ECLL,ECLN,ECLOC,ECLRN,ECLX,ECLY,ECM,ECMAX,ECMIN
"RTN","ECXKILL",16,0)
 K ECXMISS,ECMN,ECMOD,ECMODS,ECMORE,ECMS,ECMSG,ECMSN,ECMT,ECMW,ECMY,ECN
"RTN","ECXKILL",17,0)
 K ECNA,ECNDC,ECNDF,ECNFC,ECNL,ECNO,ECNODE,ECNOGO
"RTN","ECXKILL",18,0)
 K ECNT,ECO,ECO0,ECO1,ECO2,ECOB,ECODE,ECODE0,ECODE1,ECOLD,ECONE,ECOPAY
"RTN","ECXKILL",19,0)
 K ECOPAYT,ECORTY,ECOS,ECP,ECPACK,ECPCE,ECPCE1,ECPCE2,ECPCE3,ECPCE4
"RTN","ECXKILL",20,0)
 K ECPCE5,ECPCE6,ECPCE7,ECPIECE,ECPN,ECPRC,ECPRO,ECODE2
"RTN","ECXKILL",21,0)
 K ECPROF,ECPT,ECPTF,ECPTPR,ECPTTM,ECQ,ECQT,ECQTY,ECRD,ECRE,ECRED,ECREF
"RTN","ECXKILL",22,0)
 K ECRFL,ECRN,ECROU,ECRR,ECRS,ECRSD,ECRTN,ECRX,ECS,ECSA,ECSC
"RTN","ECXKILL",23,0)
 K ECSD,ECSD1,ECSDN,ECSN,ECSR,ECSS,ECST,ECSTOP,ECSU,ECT,ECT1,ECTD,ECTD1
"RTN","ECXKILL",24,0)
 K ECTEMP,ECTM,ECTNTL,ECTOTAL,ECTREAT,ECTRT,ECTS,ECTY,ECXLOGIC,ECXDATES,ECXEST,ECXECE
"RTN","ECXKILL",25,0)
 ;
"RTN","ECXKILL",26,0)
AUDIT ;kill audit report variables, close slave printer
"RTN","ECXKILL",27,0)
 K ECX,ECXARRAY,ECXACC,ECXALL,ECXAUD,ECXCODE,ECXD,ECXDEF,ECXDESC,ECXDIV
"RTN","ECXKILL",28,0)
 K ECXRCST,ECXRQST,ECXEND,ECXERR,ECXEXT,ECXHEAD,ECXLOC,ECXPGM,ECXPHCPC
"RTN","ECXKILL",29,0)
 K ECXPRIME,ECXPRO,ECXREPT,ECXRUN,ECXSAVE,ECXSTART,ECXSRCE
"RTN","ECXKILL",30,0)
 K ECXCTAMT,ECXFEKEY,ECXFELOC,ECXFORM,ECXGRPR,ECXHCPC,ECXPHCPC,ECXHCPCS
"RTN","ECXKILL",31,0)
 K ECXLAB,ECXLLC,ECXLMC,ECXQTY,ECXREQ,ECXSTAT,ECXTYPE
"RTN","ECXKILL",32,0)
 K IO("Q"),POP,DIR,DIC,DIE,DA,DR,DO,DIRUT,DUOUT,DTOUT
"RTN","ECXKILL",33,0)
 K ^TMP($J)
"RTN","ECXKILL",34,0)
 I IO=IO(0),IOST'="C" D ^%ZISC
"RTN","ECXKILL",35,0)
 Q
"RTN","ECXKILL",36,0)
 ;
"RTN","ECXKILL",37,0)
 D ^ECXKILL1
"RTN","ECXKILL",38,0)
 Q
"RTN","ECXLARP")
0^15^B6446893
"RTN","ECXLARP",1,0)
ECXLARP ;BIR/CML/PTD/JRC-Print DSS Lab Tests Names Datasheet (LAR) ; 6/9/05 7:49pm
"RTN","ECXLARP",2,0)
 ;;3.0;DSS EXTRACTS;**8,51,84**;Dec 22, 1997
"RTN","ECXLARP",3,0)
EN ;entry point from option
"RTN","ECXLARP",4,0)
 ;Init variables and sort array
"RTN","ECXLARP",5,0)
 N QFLG,SORT
"RTN","ECXLARP",6,0)
 ;
"RTN","ECXLARP",7,0)
 S QFLG=1
"RTN","ECXLARP",8,0)
 W !!,"This option prints a list of the DSS Lab Tests and associated LMIP workload",!,"codes used for the Lab Results Extract (LAR).  It will display the local lab"
"RTN","ECXLARP",9,0)
 W !,"data names associated with each DSS Lab test name.  If there are LMIP workload",!,"codes they will be linked to the appropriate DSS lab test name or local lab",!,"test name."
"RTN","ECXLARP",10,0)
 ;
"RTN","ECXLARP",11,0)
 ;If no data in file (#727.2) quit
"RTN","ECXLARP",12,0)
 I '$O(^ECX(727.2,0)) W !!,"The DSS LAB TEST file (#727.2) does not exist on your system!" Q
"RTN","ECXLARP",13,0)
 ;
"RTN","ECXLARP",14,0)
 ;Get sort
"RTN","ECXLARP",15,0)
 D GETSORT Q:'QFLG
"RTN","ECXLARP",16,0)
 ;
"RTN","ECXLARP",17,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **",!!
"RTN","ECXLARP",18,0)
 ;
"RTN","ECXLARP",19,0)
 ;Print report using fileman sort and print templates
"RTN","ECXLARP",20,0)
 N L,DIC,FLDS,DHD,BY,FR,TO,DIOBEG
"RTN","ECXLARP",21,0)
 S L=0,DIC="^ECX(727.2,"
"RTN","ECXLARP",22,0)
 S FLDS="[ECX LAB TEST PRINT]",BY=$S(SORT=1:"[ECX LAB TEST SORT BY DSS NAME]",SORT=2:"[ECX LAB TEST SORT BY LOCAL]",SORT=3:"[ECX LAB TEST SORT BY NUMBER]"),FR="",TO="",DHD="[ECX LAB TEST HEADER]",DIOBEG="I $E(IOST,1,2)=""C-"" W @IOF"
"RTN","ECXLARP",23,0)
 D EN1^DIP
"RTN","ECXLARP",24,0)
 Q
"RTN","ECXLARP",25,0)
 ;
"RTN","ECXLARP",26,0)
GETSORT ;Prompt for sorting order for report
"RTN","ECXLARP",27,0)
 N DIR,X,Y,DIRUT
"RTN","ECXLARP",28,0)
 S DIR(0)="SC^1:DSS LAB TEST NAME;2:LOCAL LAB TEST NAME;3:RESULT TEST ID NUMBER"
"RTN","ECXLARP",29,0)
 S DIR("A")="Select sort for DSS LAB TEST DATASHEET report"
"RTN","ECXLARP",30,0)
 D ^DIR
"RTN","ECXLARP",31,0)
 I $D(DIRUT) S QFLG="" Q
"RTN","ECXLARP",32,0)
 S SORT=Y
"RTN","ECXLARP",33,0)
 Q
"RTN","ECXLARP",34,0)
 ;
"RTN","ECXLBB")
0^33^B15231408
"RTN","ECXLBB",1,0)
ECXLBB ;DALOI/KML - DSS BLOOD BANK EXTRACT ; 8/29/05 11:50am
"RTN","ECXLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,84**;Dec 22, 1997
"RTN","ECXLBB",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB",4,0)
 ; access to the LAB DATA file (#63) is supported by 
"RTN","ECXLBB",5,0)
 ; controlled subscription to IA 525  (global root ^LR)  
"RTN","ECXLBB",6,0)
BEG ;entry point from option
"RTN","ECXLBB",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB",9,0)
 Q
"RTN","ECXLBB",10,0)
 ;
"RTN","ECXLBB",11,0)
START ; Entry point from tasked job
"RTN","ECXLBB",12,0)
 ; begin package specific extract
"RTN","ECXLBB",13,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC
"RTN","ECXLBB",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST
"RTN","ECXLBB",15,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB",16,0)
 ; by taskmanager 
"RTN","ECXLBB",17,0)
 ; ECED defined in ^ECXTRAC - it represents the end date of the extract
"RTN","ECXLBB",18,0)
 ; sort process.  TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB",19,0)
 ; ECED and ECSD were assigned with input provided by the user interface
"RTN","ECXLBB",20,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB",21,0)
 ; Read through the TRANSFUSION RECORD sub-file (63.017) of 
"RTN","ECXLBB",22,0)
 ; the LAB DATA file (#63)
"RTN","ECXLBB",23,0)
 ;the global nodes containing transfusion record entries are constructed
"RTN","ECXLBB",24,0)
 ; by calculating the TRANSFUSION DATE/TIME (.01)
"RTN","ECXLBB",25,0)
 ; into its reverse date/time representation and then DINUM'd when 
"RTN","ECXLBB",26,0)
 ;filing the record entry 
"RTN","ECXLBB",27,0)
 ; ECD equals the reverse date/time of ECED+.3 and will need to be
"RTN","ECXLBB",28,0)
 ; reset for each DFN.
"RTN","ECXLBB",29,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB",30,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB",31,0)
 S ECTODT=9999999-ECSD1,ECLRDFN=0
"RTN","ECXLBB",32,0)
 F  S ECLRDFN=$O(^LR(ECLRDFN)) Q:'ECLRDFN  S ECXDFN=$$GETDFN(ECLRDFN),ECERR=$$PAT(ECXDFN) S ECD=9999999-(ECED+.3) F  S ECD=$O(^LR(ECLRDFN,1.6,ECD)) Q:ECERR  Q:'ECD!(ECD>ECTODT)  S EC0=^LR(ECLRDFN,1.6,ECD,0) D
"RTN","ECXLBB",33,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, 
"RTN","ECXLBB",34,0)
 .; ECARRY(3)=COMPONENT, ECARRY(4)=COMPONENT ABBREVIATION
"RTN","ECXLBB",35,0)
 .; ECARRY(5)=UNITS POOLED, ECARRY(6)=TRANSFUSION REACTION, 
"RTN","ECXLBB",36,0)
 .; ECARRY(7)=VOLUME TRANSFUSED, ECARRY(8)=TRANSFUSION REACTION TYPE
"RTN","ECXLBB",37,0)
 . S ECARRY(1)=$P(EC0,"^"),EC66=$P($G(^LAB(66,$P(EC0,"^",2),0)),"^",1,2)
"RTN","ECXLBB",38,0)
 . S ECARRY(3)=$E($P(EC66,"^"),1,15),ECARRY(4)=$P(EC66,"^",2)
"RTN","ECXLBB",39,0)
 . S ECARRY(5)=$S(+$P(EC0,"^",7)=0:1,1:+$P(EC0,"^",7))
"RTN","ECXLBB",40,0)
 . S ECARRY(6)=$S($P(EC0,"^",8)=1:"Y",1:"N"),ECARRY(7)=$P(EC0,"^",10)
"RTN","ECXLBB",41,0)
 . S ECARRY(8)=$P($G(^LAB(65.4,+$P(EC0,"^",11),0)),"^",2)
"RTN","ECXLBB",42,0)
 . S (ECXPHY,ECXPHYPC)=""
"RTN","ECXLBB",43,0)
 . D GETDATA
"RTN","ECXLBB",44,0)
 . K ECARRY
"RTN","ECXLBB",45,0)
 Q
"RTN","ECXLBB",46,0)
 ;
"RTN","ECXLBB",47,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB",48,0)
 ; entry in file 727.829
"RTN","ECXLBB",49,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB",50,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4) ; [FLD #5]
"RTN","ECXLBB",51,0)
 ;
"RTN","ECXLBB",52,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB",53,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB",54,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB",55,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB",56,0)
 Q:ECENCTR=""
"RTN","ECXLBB",57,0)
 ;
"RTN","ECXLBB",58,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECINST_"^^"
"RTN","ECXLBB",59,0)
 I ECXLOGIC>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB",60,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB",61,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD)=ECXSTR  ;temporary global array
"RTN","ECXLBB",62,0)
 ;   used in ECXPLBB (pre-extract audit report)
"RTN","ECXLBB",63,0)
 Q
"RTN","ECXLBB",64,0)
 ;
"RTN","ECXLBB",65,0)
GETDFN(ECXLRDFN) ;
"RTN","ECXLBB",66,0)
 ; INPUT - LRDFN
"RTN","ECXLBB",67,0)
 ; OUTPUT - DFN
"RTN","ECXLBB",68,0)
 ; Obtains DFN (Patient ID) from LRDFN (Lab Patient ID).
"RTN","ECXLBB",69,0)
 ; If no valid DFN exists, 0 is returned.
"RTN","ECXLBB",70,0)
 S ECXLRDFN=+$G(ECXLRDFN)
"RTN","ECXLBB",71,0)
 I $P($G(^LR(ECXLRDFN,0)),"^",2)'=2 Q 0
"RTN","ECXLBB",72,0)
 Q +$P(^LR(ECXLRDFN,0),"^",3)
"RTN","ECXLBB",73,0)
 ; 
"RTN","ECXLBB",74,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB",75,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB",76,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB",77,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB",78,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB",79,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB",80,0)
 ;                            1=error condition
"RTN","ECXLBB",81,0)
 N X,OK,ECXERR
"RTN","ECXLBB",82,0)
 ;get data
"RTN","ECXLBB",83,0)
 S ECXERR=0
"RTN","ECXLBB",84,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"",1,.ECPAT)
"RTN","ECXLBB",85,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB",86,0)
 Q ECXERR
"RTN","ECXLBB",87,0)
 ;
"RTN","ECXLBB",88,0)
FILE(ECODE) ;
"RTN","ECXLBB",89,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB",90,0)
 ;
"RTN","ECXLBB",91,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB",92,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB",93,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB",94,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB",95,0)
 ; reaction^reaction type^feeder location^DSS product dept^DSS IP #
"RTN","ECXLBB",96,0)
 ; ordering physician^ordering physician pc
"RTN","ECXLBB",97,0)
 ;note:  DSS product dept and DSS IP # are dependent on the release of
"RTN","ECXLBB",98,0)
 ; ECX*3*61
"RTN","ECXLBB",99,0)
 N DA,DIK,EC7
"RTN","ECXLBB",100,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB",101,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB",102,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,ECRN=ECRN+1
"RTN","ECXLBB",103,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB",104,0)
 Q
"RTN","ECXLBB",105,0)
 ;
"RTN","ECXLBB",106,0)
 ;
"RTN","ECXLBB",107,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB",108,0)
 S ECHEAD="LBB"
"RTN","ECXLBB",109,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB",110,0)
 Q
"RTN","ECXLBB",111,0)
 ;
"RTN","ECXLBB",112,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB",113,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB",114,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB",115,0)
 ;
"RTN","ECXLBB",116,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB",117,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB",118,0)
 Q
"RTN","ECXLBB",119,0)
 ;
"RTN","ECXLBB",120,0)
 ;ECXLBB
"RTN","ECXLOG")
0^20^B20540020
"RTN","ECXLOG",1,0)
ECXLOG ;ALB/GTS - Extract Log Report for DSS ; 10/26/05 3:01pm
"RTN","ECXLOG",2,0)
 ;;3.0;DSS EXTRACTS;**84**;Dec 22, 1997
"RTN","ECXLOG",3,0)
 ;
"RTN","ECXLOG",4,0)
EN ;entry point from option
"RTN","ECXLOG",5,0)
 ;Initialize varables
"RTN","ECXLOG",6,0)
 N DIR,ECSD1,ECED,X,Y
"RTN","ECXLOG",7,0)
 ;Prompt for start date
"RTN","ECXLOG",8,0)
 S DIR(0)="D^::EX"
"RTN","ECXLOG",9,0)
 S DIR("A")="Enter Report Start Date"
"RTN","ECXLOG",10,0)
 D ^DIR
"RTN","ECXLOG",11,0)
 I $D(DIRUT) Q
"RTN","ECXLOG",12,0)
 S ECSD1=Y
"RTN","ECXLOG",13,0)
 ;Prompt for end date
"RTN","ECXLOG",14,0)
 K DIR,X,Y
"RTN","ECXLOG",15,0)
 S DIR(0)="D^"_ECSD1_":"_DT_":EX"
"RTN","ECXLOG",16,0)
 S DIR("A")="Enter Report Ending Date"
"RTN","ECXLOG",17,0)
 D ^DIR
"RTN","ECXLOG",18,0)
 I $D(DIRUT) Q
"RTN","ECXLOG",19,0)
 S ECED=Y
"RTN","ECXLOG",20,0)
 ;Queue Report
"RTN","ECXLOG",21,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **",!!
"RTN","ECXLOG",22,0)
 N ZTDESC,ZTIO,ZTSAVE,I
"RTN","ECXLOG",23,0)
 S ZTIO=""
"RTN","ECXLOG",24,0)
 S ZTDESC="DSS EXTRACT LOG STATISTICS"
"RTN","ECXLOG",25,0)
 F I="ECSD1","ECED","ECXNUM","ECXPKG","ECXSET","ECXCNT","ECXTXDT","ECXPURGE","ECXTRACT","ECXMONTH","ECXUCONF" D
"RTN","ECXLOG",26,0)
 .S ZTSAVE(I)=""
"RTN","ECXLOG",27,0)
 D EN^XUTMDEVQ("EN1^ECXLOG",ZTDESC,.ZTSAVE)
"RTN","ECXLOG",28,0)
 Q
"RTN","ECXLOG",29,0)
 ;
"RTN","ECXLOG",30,0)
EN1 ;Tasked entry point
"RTN","ECXLOG",31,0)
 ;Input : ECSD1  -  FM format report start date
"RTN","ECXLOG",32,0)
 ;        ECED   -  FM format report end date
"RTN","ECXLOG",33,0)
 ;
"RTN","ECXLOG",34,0)
 ;Output : None
"RTN","ECXLOG",35,0)
 ;
"RTN","ECXLOG",36,0)
 ;Declare variables
"RTN","ECXLOG",37,0)
 N LN,PAGENUM,STOP,ECXCT,ECXDACT,ECXNUM,ECXPKG,ECXSET,ECXCOUNT,ECXTXDT
"RTN","ECXLOG",38,0)
 N ECXPURGE,ECXTRACT,ECXUMSG,ECXUSER,ECXMONTH,MSGNUM,COUNT,DIC,ECX0,X
"RTN","ECXLOG",39,0)
 N ECX1,ECXED1,QFLG,CNT
"RTN","ECXLOG",40,0)
 S ECXED1=ECED+.9999,ECXCT=ECSD1-.0001,(CNT,QFLG,PAGENUM,STOP)=0
"RTN","ECXLOG",41,0)
 D HEADER I STOP D EXIT Q
"RTN","ECXLOG",42,0)
 D GETDATA
"RTN","ECXLOG",43,0)
 I '$D(^TMP("ECXDSS",$J)) D  Q
"RTN","ECXLOG",44,0)
 .W !
"RTN","ECXLOG",45,0)
 .W !,"***********************************************"
"RTN","ECXLOG",46,0)
 .W !,"*  NOTHING TO REPORT FOR SELECTED TIME FRAME  *"
"RTN","ECXLOG",47,0)
 .W !,"***********************************************"
"RTN","ECXLOG",48,0)
 .D WAIT
"RTN","ECXLOG",49,0)
 D DETAIL I STOP D EXIT Q
"RTN","ECXLOG",50,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXLOG",51,0)
 Q
"RTN","ECXLOG",52,0)
 ;
"RTN","ECXLOG",53,0)
GETDATA ;Get data
"RTN","ECXLOG",54,0)
 F  S ECXCT=$O(^ECX(727,"AE",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXLOG",55,0)
 .S ECXDACT=0
"RTN","ECXLOG",56,0)
 .F  S ECXDACT=$O(^ECX(727,"AE",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXLOG",57,0)
 ..S CNT=CNT+1
"RTN","ECXLOG",58,0)
 ..;Get data nodes
"RTN","ECXLOG",59,0)
 ..S ECX0=$G(^ECX(727,ECXDACT,0)),ECX1=$G(^(1))
"RTN","ECXLOG",60,0)
 ..Q:ECX0=""
"RTN","ECXLOG",61,0)
 ..S ECXNUM=$P(ECX0,U,1),ECXPKG=$E($P(ECX0,U,3),1,13),ECXSET=$E($P(ECX0,U,4),2,7)_"-"_$E($P(ECX0,U,5),2,7),ECXCOUNT=$P(ECX0,U,6),ECXTXDT=$G(^ECX(727,ECXDACT,"TR")),ECXPURGE=$G(^ECX(727,ECXDACT,"PURG")),ECXTRACT=$P(ECX0,U,2),ECXUSER=$P(ECX0,U,7)
"RTN","ECXLOG",62,0)
 ..S ECXMONTH=$P($$FMTE^XLFDT($P(ECX0,U,4),"D")," ",1)_" "_$P($$FMTE^XLFDT($P(ECX0,U,4),"D")," ",3)
"RTN","ECXLOG",63,0)
 ..;Resolve external values for ECXUSER
"RTN","ECXLOG",64,0)
 ..K DIC S DIC="^VA(200,",DIC(0)="NZ",X=ECXUSER D ^DIC
"RTN","ECXLOG",65,0)
 ..S ECXUSER=$P($G(Y(0)),U,1)
"RTN","ECXLOG",66,0)
 ..;Count number of UNCONF messages in Message number multiple
"RTN","ECXLOG",67,0)
 ..S (MSGNUM,COUNT)=0 F  S MSGNUM=$O(^ECX(727,ECXDACT,1,MSGNUM)) Q:MSGNUM'>0  D
"RTN","ECXLOG",68,0)
 ...S COUNT=COUNT+1
"RTN","ECXLOG",69,0)
 ..S ECXUMSG=$G(COUNT)
"RTN","ECXLOG",70,0)
 ..;Save for later
"RTN","ECXLOG",71,0)
 ..S ^TMP("ECXDSS",$J,CNT)=ECXNUM_U_ECXPKG_U_ECXSET_U_ECXCOUNT_U_ECXTXDT_U_ECXPURGE_U_ECXTRACT_U_ECXMONTH_U_ECXUMSG_U_ECXUSER
"RTN","ECXLOG",72,0)
 ..Q
"RTN","ECXLOG",73,0)
 .Q
"RTN","ECXLOG",74,0)
 Q
"RTN","ECXLOG",75,0)
 ;
"RTN","ECXLOG",76,0)
HEADER ;print header
"RTN","ECXLOG",77,0)
 S PAGENUM=$G(PAGENUM)+1
"RTN","ECXLOG",78,0)
 S $P(LN,"-",132)=""
"RTN","ECXLOG",79,0)
 W @IOF
"RTN","ECXLOG",80,0)
 W !,?1,"DSS EXTRACT LOG STATISTICS",?120,"Page: ",PAGENUM
"RTN","ECXLOG",81,0)
 W !!,?1,"EXTRACT NUMBER",?20,"VISTA PACKAGE",?39,"DATA SET DATES",?59,"RECORD COUNT",?75,"DATE TRANSMITTED",?98,"DATE PURGED"
"RTN","ECXLOG",82,0)
 W !,?3,"DATE EXTRACTED",?25,"DATA MONTH",?40,"MSG UNCONF"
"RTN","ECXLOG",83,0)
 W ?60,"REQUESTOR"
"RTN","ECXLOG",84,0)
 W !?1,LN
"RTN","ECXLOG",85,0)
 Q
"RTN","ECXLOG",86,0)
 ;
"RTN","ECXLOG",87,0)
DETAIL ;Print detailed line
"RTN","ECXLOG",88,0)
 ;Input  :  ^TMP("ECXDSS",$J) full global reference
"RTN","ECXLOG",89,0)
 ;          ECXNUM    -   Extract Number
"RTN","ECXLOG",90,0)
 ;          ECXPKG    -   VistA Package
"RTN","ECXLOG",91,0)
 ;          ECXDATA   -   Data Set
"RTN","ECXLOG",92,0)
 ;          ECXCOUNT  -   Record Count
"RTN","ECXLOG",93,0)
 ;          ECXTXDT   -   Transmission Date
"RTN","ECXLOG",94,0)
 ;          ECXPURGE  -   Extract Purge Date
"RTN","ECXLOG",95,0)
 ;          ECXTRACT  -   Extract Date
"RTN","ECXLOG",96,0)
 ;          ECXMONTH  -   Data Month and Year
"RTN","ECXLOG",97,0)
 ;          ECXUCONF  -   Unconfirmed Messages
"RTN","ECXLOG",98,0)
 ;          ECXUSER   -   Requestor
"RTN","ECXLOG",99,0)
 ;Output  : None
"RTN","ECXLOG",100,0)
 ;
"RTN","ECXLOG",101,0)
 N NODE,RECORD
"RTN","ECXLOG",102,0)
 S RECORD=0 F  S RECORD=$O(^TMP("ECXDSS",$J,RECORD)) Q:'RECORD!(STOP)  D
"RTN","ECXLOG",103,0)
 .S NODE=^TMP("ECXDSS",$J,RECORD)
"RTN","ECXLOG",104,0)
 .W !!,?1,$P(NODE,U,1),?20,$P(NODE,U,2),?39,$P(NODE,U,3),?59,$P(NODE,U,4),?75,$$FMTE^XLFDT($P(NODE,U,5),"D"),?98,$P(NODE,U,6)
"RTN","ECXLOG",105,0)
 .W !,?3,$$FMTE^XLFDT($P(NODE,U,7),"D"),?25,$P(NODE,U,8),?40,$P(NODE,U,9),?60,$P(NODE,U,10)
"RTN","ECXLOG",106,0)
 .I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXLOG",107,0)
 .Q
"RTN","ECXLOG",108,0)
 Q
"RTN","ECXLOG",109,0)
 ;
"RTN","ECXLOG",110,0)
WAIT ;End of page logic
"RTN","ECXLOG",111,0)
 ;Input   ; None
"RTN","ECXLOG",112,0)
 ;Output  ; STOP - Flag inidcating if printing should continue
"RTN","ECXLOG",113,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXLOG",114,0)
 ;
"RTN","ECXLOG",115,0)
 S STOP=0
"RTN","ECXLOG",116,0)
 ;CRT - Prompt for continue
"RTN","ECXLOG",117,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXLOG",118,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXLOG",119,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXLOG",120,0)
 .S DIR(0)="E"
"RTN","ECXLOG",121,0)
 .D ^DIR
"RTN","ECXLOG",122,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXLOG",123,0)
 ;Background task - check taskman
"RTN","ECXLOG",124,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXLOG",125,0)
 I STOP D
"RTN","ECXLOG",126,0)
 .W !,"*********************************************"
"RTN","ECXLOG",127,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXLOG",128,0)
 .W !,"*********************************************"
"RTN","ECXLOG",129,0)
 Q
"RTN","ECXLOG",130,0)
EXIT ;Kill temp global
"RTN","ECXLOG",131,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXLOG",132,0)
 Q
"RTN","ECXLPRO")
0^11^B25310596
"RTN","ECXLPRO",1,0)
ECXLPRO ;ALB/JAP - PRO Extract YTD Lab Report ; 8/23/05 1:40pm
"RTN","ECXLPRO",2,0)
 ;;3.0;DSS EXTRACTS;**21,24,36,84**;Dec 22, 1997
"RTN","ECXLPRO",3,0)
 ;for data associated with prosthetic items produced by facility laboratory
"RTN","ECXLPRO",4,0)
 ;accumulates extract data by hcpcs code for all extracts in fiscal year date range
"RTN","ECXLPRO",5,0)
 ;if an extract has been purged, then totals will be falsely low
"RTN","ECXLPRO",6,0)
 ;if more than 1 extract exists for a particular month, then totals will be falsely high
"RTN","ECXLPRO",7,0)
 ;if site is multidivisional, then user can generate report for
"RTN","ECXLPRO",8,0)
 ;  any one division - data stored under divisional station# (e.g., 326 or 326AB)
"RTN","ECXLPRO",9,0)
 ;  or for entire facility - data stored under primary station# (e.g., 326) but includes data from all subdivisions
"RTN","ECXLPRO",10,0)
 ;if site is non-divisional, then data stored under facility station#
"RTN","ECXLPRO",11,0)
 ;
"RTN","ECXLPRO",12,0)
EN ;setup & queue
"RTN","ECXLPRO",13,0)
 N DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,DIV,LAST,OUT
"RTN","ECXLPRO",14,0)
 S ECXERR=0
"RTN","ECXLPRO",15,0)
 S ECXHEAD="PRO"
"RTN","ECXLPRO",16,0)
 W !!,"Setup for PRO Extract YTD Laboratory Report --",!
"RTN","ECXLPRO",17,0)
 ;determine primary division
"RTN","ECXLPRO",18,0)
 W !,"If you belong to more than one Primary Division, you must"
"RTN","ECXLPRO",19,0)
 W !,"select a Primary Division for the report.",!
"RTN","ECXLPRO",20,0)
 S ECXPRIME=$$PDIV^ECXPUTL
"RTN","ECXLPRO",21,0)
 I ECXPRIME=0 D ^ECXKILL Q
"RTN","ECXLPRO",22,0)
 S DA=ECXPRIME,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99" D EN^DIQ1
"RTN","ECXLPRO",23,0)
 S ECXPRIME=ECXPRIME_U_$G(ECXDIC(4,DA,99,"I"))_U_$G(ECXDIC(4,DA,.01,"I"))
"RTN","ECXLPRO",24,0)
 ;get all prosthetics divisions for report
"RTN","ECXLPRO",25,0)
 S ECXALL=1
"RTN","ECXLPRO",26,0)
 D PDIV3^ECXPUTL(DUZ,ECXPRIME,.ECXDIV)
"RTN","ECXLPRO",27,0)
 I ECXERR D  Q
"RTN","ECXLPRO",28,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXLPRO",29,0)
 ;determine fiscal year of report
"RTN","ECXLPRO",30,0)
 S DIR(0)="SMBA^C:CURRENT;P:PREVIOUS",DIR("A")="Select C(urrent) or P(revious) Fiscal Year: ",DIR("B")="CURRENT"
"RTN","ECXLPRO",31,0)
 W ! K X,Y D ^DIR K DIR
"RTN","ECXLPRO",32,0)
 I $D(DUOUT)!($D(DTOUT)) D  Q
"RTN","ECXLPRO",33,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXLPRO",34,0)
 I Y="C" D
"RTN","ECXLPRO",35,0)
 .S X=$$CYFY^ECXUTL1(DT),ECXARRAY("START")=$P(X,U,3),ECXARRAY("END")=$P(X,U,4)
"RTN","ECXLPRO",36,0)
 I Y="P" D
"RTN","ECXLPRO",37,0)
 .S YR=$E(DT,1,3),MON=$E(DT,4,5) S:+MON<10 YR=YR-1 S X1=YR_"0930"
"RTN","ECXLPRO",38,0)
 .S X=$$CYFY^ECXUTL1(X1),ECXARRAY("START")=$P(X,U,3),ECXARRAY("END")=$P(X,U,4)
"RTN","ECXLPRO",39,0)
 .K C,MON,YR,X1
"RTN","ECXLPRO",40,0)
 ;setup variables for taskmanager
"RTN","ECXLPRO",41,0)
 S ECXPGM="PROCESS^ECXLPRO",ECXDESC="PRO Extract YTD HCPCS Report"
"RTN","ECXLPRO",42,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")=""
"RTN","ECXLPRO",43,0)
 ;determine output device and queue if requested
"RTN","ECXLPRO",44,0)
 W !!,"Please note: The PRO Extract YTD Laboratory Report requires 132 columns."
"RTN","ECXLPRO",45,0)
 W !,"             Select an appropriate device for output."
"RTN","ECXLPRO",46,0)
 W ! D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXLPRO",47,0)
 I ECXSAVE("POP")=1 W ! D ^ECXKILL Q
"RTN","ECXLPRO",48,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXLPRO",49,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXLPRO",50,0)
 .D PROCESS
"RTN","ECXLPRO",51,0)
 ;clean-up and close
"RTN","ECXLPRO",52,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLPRO",53,0)
 D HOME^%ZIS
"RTN","ECXLPRO",54,0)
 Q
"RTN","ECXLPRO",55,0)
 ;
"RTN","ECXLPRO",56,0)
PROCESS ;begin processing
"RTN","ECXLPRO",57,0)
 N DIVISION,E,EXTRACT,REC,NODE0,NODE1,LASTDAY
"RTN","ECXLPRO",58,0)
 K ^TMP($J,"ECXP") S LASTDAY=""
"RTN","ECXLPRO",59,0)
 ;determine which extracts contain data for report
"RTN","ECXLPRO",60,0)
 S (EXTRACT,E)=0
"RTN","ECXLPRO",61,0)
 F  S E=$O(^ECX(727,"E",ECXHEAD,E)) Q:'E  D
"RTN","ECXLPRO",62,0)
 .Q:'$D(^ECX(727,E,0))
"RTN","ECXLPRO",63,0)
 .Q:$P($G(^ECX(727,E,0)),U,4)<ECXARRAY("START")
"RTN","ECXLPRO",64,0)
 .Q:$P($G(^ECX(727,E,0)),U,4)>ECXARRAY("END")
"RTN","ECXLPRO",65,0)
 .Q:$G(^ECX(727,E,"DIV"))'=+ECXPRIME
"RTN","ECXLPRO",66,0)
 .S EXTRACT(E)=^ECX(727,E,0)
"RTN","ECXLPRO",67,0)
 .I $P(EXTRACT(E),U,5)>LASTDAY S LASTDAY=$P(EXTRACT(E),U,5)
"RTN","ECXLPRO",68,0)
 ;setup array of station numbers included in report
"RTN","ECXLPRO",69,0)
 F DIV=0:0 S DIV=$O(ECXDIV(DIV)) Q:'DIV  S ECXSTAT=$P(ECXDIV(DIV),U,2),DIVISION(ECXSTAT)=ECXDIV(DIV)
"RTN","ECXLPRO",70,0)
 ;get the extract data
"RTN","ECXLPRO",71,0)
 S E=0 F  S E=$O(EXTRACT(E)) Q:'E  S REC=0 I $D(^ECX(727.826,"AC",E)) F  S REC=$O(^ECX(727.826,"AC",E,REC)) Q:'REC  D
"RTN","ECXLPRO",72,0)
 .S NODE0=$G(^ECX(727.826,REC,0)),NODE1=$G(^ECX(727.826,REC,1)) Q:NODE0=""
"RTN","ECXLPRO",73,0)
 .S (ECXCTAMT,ECXLLC,ECXLMC)=0
"RTN","ECXLPRO",74,0)
 .S ECXFELOC=$P(NODE0,U,10),ECXFEKEY=$P(NODE0,U,11)
"RTN","ECXLPRO",75,0)
 .;ignore any record which isn't for lab receiving station
"RTN","ECXLPRO",76,0)
 .Q:ECXFELOC'["LAB"
"RTN","ECXLPRO",77,0)
 .S ECXHCPC=$P(NODE0,U,33),ECXTYPE=$E(ECXFEKEY,6),ECXREQ=$P($E(ECXFEKEY,8,99),"REQ",1)
"RTN","ECXLPRO",78,0)
 .S ECXQTY=$P(NODE0,U,12),ECXCTAMT=$P(NODE0,U,25),ECXGRPR=$P(NODE1,U,4)
"RTN","ECXLPRO",79,0)
 .S ECXSTAT=$P(ECXFELOC,"LAB",1),ECXFORM="LAB"
"RTN","ECXLPRO",80,0)
 .S ECXLLC=$P(NODE0,U,26),ECXLMC=$P(NODE0,U,27)
"RTN","ECXLPRO",81,0)
 .;ignore record if division not included in this report
"RTN","ECXLPRO",82,0)
 .Q:ECXSTAT=""  Q:'$D(DIVISION(ECXSTAT))
"RTN","ECXLPRO",83,0)
 .;set in ^tmp using primary station#; determine if requesting station is same as or part of this station
"RTN","ECXLPRO",84,0)
 .S ECXLAB="",ECXSTAT=+ECXSTAT,ECXLAB=$S(ECXREQ'[ECXSTAT:"OTHER",1:"SAME")
"RTN","ECXLPRO",85,0)
 .;be sure there's no padding on cost variables
"RTN","ECXLPRO",86,0)
 .S ECXCTAMT=+$TR(ECXCTAMT," ",0),ECXLLC=+$TR(ECXLLC," ",0),ECXLMC=+$TR(ECXLMC," ",0)
"RTN","ECXLPRO",87,0)
 .;tmp global holds - lab qty^lab labor cost^lab matrl cost
"RTN","ECXLPRO",88,0)
 .I '$D(^TMP($J,"ECXP",ECXTYPE,ECXHCPC)) S ^TMP($J,"ECXP",ECXTYPE,ECXHCPC,"SAME")="0^0^0",^TMP($J,"ECXP",ECXTYPE,ECXHCPC,"OTHER")="0^0^0"
"RTN","ECXLPRO",89,0)
 .S $P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,1)=$P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,1)+ECXQTY
"RTN","ECXLPRO",90,0)
 .S $P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,2)=$P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,2)+ECXLLC
"RTN","ECXLPRO",91,0)
 .S $P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,3)=$P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,3)+ECXLMC
"RTN","ECXLPRO",92,0)
 ;setup hcpcs descriptions
"RTN","ECXLPRO",93,0)
 D HCPCS^ECXCPRO
"RTN","ECXLPRO",94,0)
 ;print report
"RTN","ECXLPRO",95,0)
 D PRINT^ECXLPRO1
"RTN","ECXLPRO",96,0)
 ;cleanup
"RTN","ECXLPRO",97,0)
 D AUDIT^ECXKILL
"RTN","ECXLPRO",98,0)
 Q
"RTN","ECXLPRO",99,0)
 ;
"RTN","ECXLPRO",100,0)
HCPCS ;setup hcpcs cross-reference
"RTN","ECXLPRO",101,0)
 N H,CPT,CPTNM,DESC
"RTN","ECXLPRO",102,0)
 S H=0
"RTN","ECXLPRO",103,0)
 F  S H=$O(^RMPR(661.1,H)) Q:+H<1  D
"RTN","ECXLPRO",104,0)
 .;don't skip inactive hcpcs in case doing previous fy
"RTN","ECXLPRO",105,0)
 .S CPTNM="",CPT=$P(^RMPR(661.1,H,0),U,4)
"RTN","ECXLPRO",106,0)
 .I +CPT>0 S CPTNM=$P(^ICPT(CPT,0),U,1),DESC=$E($P(^ICPT(CPT,0),U,2),1,26)
"RTN","ECXLPRO",107,0)
 .Q:CPTNM=""
"RTN","ECXLPRO",108,0)
 .S ^TMP($J,"HCPCS",CPTNM)=DESC
"RTN","ECXLPRO",109,0)
 Q
"RTN","ECXLPRO1")
0^12^B8515235
"RTN","ECXLPRO1",1,0)
ECXLPRO1 ;ALB/JAP - PRO Extract YTD Lab Report (cont) ; 5/9/05 3:25pm
"RTN","ECXLPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**21,84**;Dec 22, 1997
"RTN","ECXLPRO1",3,0)
 ;
"RTN","ECXLPRO1",4,0)
PRINT ;print report
"RTN","ECXLPRO1",5,0)
 N PG,LN,QFLG,NODE1,NODE2,DESC,AVE,JJ,SS,X1,X2
"RTN","ECXLPRO1",6,0)
 U IO
"RTN","ECXLPRO1",7,0)
 S QFLG=0,$P(LN,"-",132)=""
"RTN","ECXLPRO1",8,0)
 S Y=ECXARRAY("START") D DD^%DT S ECXSTART=Y
"RTN","ECXLPRO1",9,0)
 S Y=$S(LASTDAY:LASTDAY,ECXARRAY("END")>DT:DT,1:ECXARRAY("END")) D DD^%DT S ECXEND=Y
"RTN","ECXLPRO1",10,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXLPRO1",11,0)
 F ECXTYPE="N","X" D  Q:QFLG
"RTN","ECXLPRO1",12,0)
 .S PG=0 D HEADER
"RTN","ECXLPRO1",13,0)
 .S ECXHCPC=""
"RTN","ECXLPRO1",14,0)
 .;it's possible that no extract data was found
"RTN","ECXLPRO1",15,0)
 .I '$D(^TMP($J,"ECXP",ECXTYPE)) D  Q
"RTN","ECXLPRO1",16,0)
 ..W !!,?37,"No extract data available."
"RTN","ECXLPRO1",17,0)
 ..I $E(IOST)="C" D  Q:QFLG
"RTN","ECXLPRO1",18,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLPRO1",19,0)
 ...S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXLPRO1",20,0)
 .F  S ECXHCPC=$O(^TMP($J,"ECXP",ECXTYPE,ECXHCPC)) Q:ECXHCPC=""  D  Q:QFLG
"RTN","ECXLPRO1",21,0)
 ..S DESC=$G(^TMP($J,"HCPCS",ECXHCPC)) S:DESC="" DESC="(Unknown)" S DESC=ECXHCPC_" "_DESC
"RTN","ECXLPRO1",22,0)
 ..S NODE1=^TMP($J,"ECXP",ECXTYPE,ECXHCPC,"SAME"),NODE2=^TMP($J,"ECXP",ECXTYPE,ECXHCPC,"OTHER")
"RTN","ECXLPRO1",23,0)
 ..;node holds - lab qty^lab labor cost^lab matrl cost
"RTN","ECXLPRO1",24,0)
 ..F I=1:1:3 S X1(I)=+$P(NODE1,U,I),X2(I)=+$P(NODE2,U,I)
"RTN","ECXLPRO1",25,0)
 ..S AVE("O")=0,AVE("S")=0,TOT("O")=0,TOT("S")=0
"RTN","ECXLPRO1",26,0)
 ..S TOT("S")=X1(2)+X1(3),TOT("O")=X2(2)+X2(3)
"RTN","ECXLPRO1",27,0)
 ..S:X1(1)>0 AVE("S")=TOT("S")/X1(1) S:X2(1)>0 AVE("O")=TOT("O")/X2(1)
"RTN","ECXLPRO1",28,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXLPRO1",29,0)
 ..W !,DESC,?33,$J(X1(1),8,0),?43,$J(X1(2),8,0),?54,$J(X1(3),8,0),?65,$J(AVE("S"),8,2),?82,$J(X2(1),8,0),?93,$J(X2(2),8,0),?104,$J(X2(3),8,0),?115,$J(AVE("O"),8,2)
"RTN","ECXLPRO1",30,0)
 .I 'QFLG,$E(IOST)="C" D
"RTN","ECXLPRO1",31,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLPRO1",32,0)
 ..S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXLPRO1",33,0)
 W @IOF
"RTN","ECXLPRO1",34,0)
 Q
"RTN","ECXLPRO1",35,0)
 ;
"RTN","ECXLPRO1",36,0)
HEADER ;header & page control
"RTN","ECXLPRO1",37,0)
 I $E(IOST)="C" D
"RTN","ECXLPRO1",38,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLPRO1",39,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXLPRO1",40,0)
 Q:QFLG
"RTN","ECXLPRO1",41,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXLPRO1",42,0)
 W "Prosthetics (PRO) Extract YTD Laboratory Report",?122,"Page "_PG
"RTN","ECXLPRO1",43,0)
 W !,"FY Date Range: "_ECXSTART_" to "_ECXEND
"RTN","ECXLPRO1",44,0)
 W !,"Facility:      "_$P(ECXPRIME,U,3)_" ("_$P(ECXPRIME,U,2)_")"
"RTN","ECXLPRO1",45,0)
 W !,"Run Date/Time: "_ECXRUN
"RTN","ECXLPRO1",46,0)
 W:ECXTYPE="N" !!,"REPORT OF NEW PROSTHETICS ACTIVITIES (Initial, Replacement, or Spare)",!
"RTN","ECXLPRO1",47,0)
 W:ECXTYPE="X" !!,"REPORT OF REPAIR PROSTHETICS ACTIVITIES",!
"RTN","ECXLPRO1",48,0)
 W !,?37,"Produced for Station #"_$P(ECXPRIME,U,2),?86,"Produced for all other stations"
"RTN","ECXLPRO1",49,0)
 W !,"PSAS HCPCS",?37,"Qty.",?44,"Labor $",?55,"Mat'l $",?67,"Ave. $",?86,"Qty.",?94,"Labor $",?105,"Mat'l $",?117,"Ave. $"
"RTN","ECXLPRO1",50,0)
 W !,LN,!
"RTN","ECXLPRO1",51,0)
 Q
"RTN","ECXMOV")
0^17^B18912208
"RTN","ECXMOV",1,0)
ECXMOV ;ALB/JAP,BIR/DMA,PTD-Transfer and Discharge Extract ; 8/19/05 9:13am
"RTN","ECXMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,39,41,42,46,65,84**;Dec 22, 1997
"RTN","ECXMOV",3,0)
BEG ;entry point from option
"RTN","ECXMOV",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMOV",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMOV",6,0)
 Q
"RTN","ECXMOV",7,0)
 ;
"RTN","ECXMOV",8,0)
START ; start package specific extract
"RTN","ECXMOV",9,0)
 N ECXDSC,W,WTO,X1,X2,X,ECXDPRPC,ECXDAPPC
"RTN","ECXMOV",10,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXMOV",11,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXMOV",12,0)
 S ECED=ECED+.3,QFLG=0
"RTN","ECXMOV",13,0)
 F ECM=2,3 S ECARG="ATT"_ECM,ECD=ECSD1 D  Q:QFLG
"RTN","ECXMOV",14,0)
 .F  S ECD=$O(^DGPM(ECARG,ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D  Q:QFLG
"RTN","ECXMOV",15,0)
 ..F  S ECDA=$O(^DGPM(ECARG,ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXMOV",16,0)
 ...Q:'$D(^DGPM(ECDA,0))  S EC=^(0)
"RTN","ECXMOV",17,0)
 ...S ECXDFN=+$P(EC,U,3),ECMT=$P(EC,U,18),ECXDATE=ECD
"RTN","ECXMOV",18,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;",.ECXPAT)
"RTN","ECXMOV",19,0)
 ...I 'OK K ECXPAT Q
"RTN","ECXMOV",20,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMOV",21,0)
 ...S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",22,0)
 ...S WTO=$P(EC,U,6),ECXWTO=$P($G(^DIC(42,+WTO,44)),U)
"RTN","ECXMOV",23,0)
 ...;
"RTN","ECXMOV",24,0)
 ...;reset EC to admission movement
"RTN","ECXMOV",25,0)
 ...S ECCA=$P(EC,U,14),EC=^DGPM(ECCA,0),ECA=$P(EC,U)
"RTN","ECXMOV",26,0)
 ...;
"RTN","ECXMOV",27,0)
 ...;if date of previous xfer movement is greater than admit date,
"RTN","ECXMOV",28,0)
 ...;then reset EC to that previous xfer movement
"RTN","ECXMOV",29,0)
 ...S ECDL=9999999.9999999-ECD,ECDL=+$O(^DGPM("ATID2",ECXDFN,ECDL))
"RTN","ECXMOV",30,0)
 ...S ECDAL=+$O(^DGPM("ATID2",ECXDFN,ECDL,0))
"RTN","ECXMOV",31,0)
 ...I $D(^DGPM(ECDAL,0)),$P(^(0),U)>$P(EC,U) S EC=^(0)
"RTN","ECXMOV",32,0)
 ...;
"RTN","ECXMOV",33,0)
 ...I ECM=2 D
"RTN","ECXMOV",34,0)
 ....;if transact=Transfer,ECD (time)=ASIH (7chars) and >0,set ECXDATE
"RTN","ECXMOV",35,0)
 ....;to Admit DT/time before calling funct to get in/out stat & TS
"RTN","ECXMOV",36,0)
 ....I $L($P(ECD,".",2))=7,+$E($P(ECD,".",2),7)>0 S ECXDATE=ECA
"RTN","ECXMOV",37,0)
 ....S W=$P(EC,U,6)
"RTN","ECXMOV",38,0)
 ...;
"RTN","ECXMOV",39,0)
 ...I ECM=3 D
"RTN","ECXMOV",40,0)
 ....;subtract 1 second from dischg DT so IN5^VADPT call (in ECXUTL2
"RTN","ECXMOV",41,0)
 ....;API) will pick up discharge movmement record
"RTN","ECXMOV",42,0)
 ....S ECXDATE=$$FMADD^XLFDT(ECXDATE,,,,-1)
"RTN","ECXMOV",43,0)
 ....;set losing ward to ward at discharge
"RTN","ECXMOV",44,0)
 ....N WARD S WARD=$$GET1^DIQ(405,ECDA,200)
"RTN","ECXMOV",45,0)
 ....I WARD'="" S W=+$O(^DIC(42,"B",WARD,0))
"RTN","ECXMOV",46,0)
 ...;
"RTN","ECXMOV",47,0)
 ...;-Gets inpat/outpat status, DOM, Treating Spec (TS)
"RTN","ECXMOV",48,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMOV",49,0)
 ...;
"RTN","ECXMOV",50,0)
 ...S (ECXWRD,ECXFAC,ECXDSSD)=""
"RTN","ECXMOV",51,0)
 ...I W'="" D
"RTN","ECXMOV",52,0)
 ....S ECXWRD=$P($G(^DIC(42,W,44)),U),ECXFAC=$P($G(^DIC(42,W,0)),U,11)
"RTN","ECXMOV",53,0)
 ....S ECXDSSD=$P($G(^ECX(727.4,W,0)),U,2)
"RTN","ECXMOV",54,0)
 ...S ECDI=$S(ECM=2:"",1:$$ECXDATE^ECXUTL(ECD,ECXYM))
"RTN","ECXMOV",55,0)
 ...S X1=ECD,X2=$P(EC,U) D ^%DTC S ECXLOS=X
"RTN","ECXMOV",56,0)
 ...;
"RTN","ECXMOV",57,0)
 ...;- Get discharge PC Team, Primary and Assoc Primary Provider
"RTN","ECXMOV",58,0)
 ...S (ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC)=""
"RTN","ECXMOV",59,0)
 ...I ECM=3 D
"RTN","ECXMOV",60,0)
 ....S ECXDSC=$$PRIMARY^ECXUTL2(ECXDFN,ECD)
"RTN","ECXMOV",61,0)
 ....S ECXDPCT=$P(ECXDSC,U),ECXDPR=$P(ECXDSC,U,2),ECXDAPR=$P(ECXDSC,U,5),ECXDPRPC=$P(ECXDSC,U,3),ECXDAPPC=$P(ECXDSC,U,6)
"RTN","ECXMOV",62,0)
 ...;
"RTN","ECXMOV",63,0)
 ...;Get production division ;p-46
"RTN","ECXMOV",64,0)
 ...N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC) ;p-46 
"RTN","ECXMOV",65,0)
 ...;- Observation patient indicator (YES/NO)
"RTN","ECXMOV",66,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXMOV",67,0)
 ...;
"RTN","ECXMOV",68,0)
 ...;- If no encounter number, don't file record
"RTN","ECXMOV",69,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXMOV",70,0)
 ...D:ECXENC'="" FILE
"RTN","ECXMOV",71,0)
 Q
"RTN","ECXMOV",72,0)
 ;
"RTN","ECXMOV",73,0)
FILE ;file the extract record
"RTN","ECXMOV",74,0)
 ;node0
"RTN","ECXMOV",75,0)
 ;fac ECXFAC^dfn ECXDFN^ssn ECXSSN^name ECXPNM^in/out ECXA^
"RTN","ECXMOV",76,0)
 ;day (ECD)^^adm date (ECA)^disc date ECDI^mov # ECDA^
"RTN","ECXMOV",77,0)
 ;type ECM^losing ward ECXWARD^treat spec ^los ECXLOS^^
"RTN","ECXMOV",78,0)
 ;movement type ECMT^mov time ECTM^gaining ward ECXWTO^
"RTN","ECXMOV",79,0)
 ;adm time (ECA)^^^
"RTN","ECXMOV",80,0)
 ;node1
"RTN","ECXMOV",81,0)
 ;mpi ECXMPI^dss dept ECXDSSD^dom ECXDOM^observ pat ind ECXOBS^
"RTN","ECXMOV",82,0)
 ;encounter num ECXENC^disch prim prov ECXDPR^disch PC team ECXDPCT^
"RTN","ECXMOV",83,0)
 ;disch assoc prim prov ECXDAPR^production division ECXPDIV
"RTN","ECXMOV",84,0)
 ;^disch prov person class ECXDPRPC^disch assoc prov pe-
"RTN","ECXMOV",85,0)
 ;rson person class
"RTN","ECXMOV",86,0)
 N DA,DIK
"RTN","ECXMOV",87,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXMOV",88,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXMOV",89,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_U
"RTN","ECXMOV",90,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECA,ECXYM)_U_ECDI_U_ECDA_U_ECM_U_ECXWRD_U
"RTN","ECXMOV",91,0)
 S ECODE=ECODE_U_ECXLOS_U_U_ECMT_U_ECTM_U_ECXWTO_U
"RTN","ECXMOV",92,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECA)_U_U_U
"RTN","ECXMOV",93,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXDPR_U
"RTN","ECXMOV",94,0)
 S ECODE1=ECODE1_ECXDPCT_U_ECXDAPR_U_ECXPDIV ;p-46 added ECXPDIV
"RTN","ECXMOV",95,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXDPRPC_U_ECXDAPPC
"RTN","ECXMOV",96,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXMOV",97,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMOV",98,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMOV",99,0)
 Q
"RTN","ECXMOV",100,0)
 ;
"RTN","ECXMOV",101,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMOV",102,0)
 S ECHEAD="MOV"
"RTN","ECXMOV",103,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMOV",104,0)
 Q
"RTN","ECXMOV",105,0)
 ;
"RTN","ECXMOV",106,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXMOV",107,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXMTL")
0^19^B32017303
"RTN","ECXMTL",1,0)
ECXMTL ;ALB/JAP - DSS Mental Health Extract ; 9/12/05 4:02pm
"RTN","ECXMTL",2,0)
 ;;3.0;DSS EXTRACTS;**24,30,33,39,46,49,71,82,84**;Dec 22, 1997
"RTN","ECXMTL",3,0)
 ;
"RTN","ECXMTL",4,0)
BEG ;entry point from option
"RTN","ECXMTL",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMTL",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMTL",7,0)
 Q
"RTN","ECXMTL",8,0)
 ;
"RTN","ECXMTL",9,0)
START ;entry point from tasked job
"RTN","ECXMTL",10,0)
 S QFLG=0
"RTN","ECXMTL",11,0)
 ;get first record #
"RTN","ECXMTL",12,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1)
"RTN","ECXMTL",13,0)
 ;call mh/dss api for extract record creation
"RTN","ECXMTL",14,0)
 ;variables ecfile,ecxym,ecinst,ecsd,eced passed in by taskmanager
"RTN","ECXMTL",15,0)
 S ECXSEQ=EC7,ECXECX=$P(EC23,U,2),ECXERR=0
"RTN","ECXMTL",16,0)
 ;call mh api to create extract records
"RTN","ECXMTL",17,0)
 S X="YSDSS" X ^%ZOSF("TEST") I '$T S QFLG=1 Q
"RTN","ECXMTL",18,0)
 D UPD^YSDSS(ECFILE,.ECXSEQ,ECXYM,ECXECX,ECINST,ECSD,ECED,.ECXERR)
"RTN","ECXMTL",19,0)
 Q:ECXERR
"RTN","ECXMTL",20,0)
 Q:QFLG
"RTN","ECXMTL",21,0)
 ;if no error, continue
"RTN","ECXMTL",22,0)
 D UPDATE
"RTN","ECXMTL",23,0)
 Q
"RTN","ECXMTL",24,0)
 ;
"RTN","ECXMTL",25,0)
UPDATE ;add non-mh data to each record created by mh api
"RTN","ECXMTL",26,0)
 N ECXADT,JJ,ECXNPRFI
"RTN","ECXMTL",27,0)
 S EC7=EC7+1
"RTN","ECXMTL",28,0)
 F JJ=EC7:1:ECXSEQ Q:QFLG  D
"RTN","ECXMTL",29,0)
 .Q:'$D(^ECX(ECFILE,JJ,0))
"RTN","ECXMTL",30,0)
 .S ECXDFN=$P(^ECX(ECFILE,JJ,0),U,5),ECXDATE=$P(^ECX(ECFILE,JJ,0),U,9),ECXPRV=$P(^ECX(ECFILE,JJ,0),U,18)
"RTN","ECXMTL",31,0)
 .S ECXSCNUM=$P(^ECX(ECFILE,JJ,0),U,23),ECXSCNAM=$P(^ECX(ECFILE,JJ,0),U,24)
"RTN","ECXMTL",32,0)
 .D PAT(ECXDFN,ECXDATE)
"RTN","ECXMTL",33,0)
 .S (ECXPRCLS,ECXPRNPI,ECXDIV)="" I ECXPRV D PROV(.ECXPRV,ECXDATE)
"RTN","ECXMTL",34,0)
 .S ECXDSSI=""
"RTN","ECXMTL",35,0)
 .I ECXLOGIC>2003 D
"RTN","ECXMTL",36,0)
 ..I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXMTL",37,0)
 .;
"RTN","ECXMTL",38,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXMTL",39,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXMTL",40,0)
 .;
"RTN","ECXMTL",41,0)
 .;- set national patient record flag if exist
"RTN","ECXMTL",42,0)
 .D NPRF^ECXUTL5
"RTN","ECXMTL",43,0)
 .;
"RTN","ECXMTL",44,0)
 .;- If no encounter number don't file record
"RTN","ECXMTL",45,0)
 .S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXMTL",46,0)
 .S ECD=ECXDATE,ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXMTL",47,0)
 .;adjust scale name & scale number
"RTN","ECXMTL",48,0)
 .S ECXSCNAM=$E(ECXSCNAM,1,10)
"RTN","ECXMTL",49,0)
 .I ECXSCNUM]"",ECXSCNUM'=+ECXSCNUM S ECXSCNUM=+$E(ECXSCNUM,2,99)
"RTN","ECXMTL",50,0)
 .N ECXDEPT S ECXDEPT="" ;dss department use postponed S ECXDEPT=$$MTL^ECXDEPT(ECXDIV,ECXSCNAM,ECINST) ;p-46 line added
"RTN","ECXMTL",51,0)
 .N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV) ;p-46 line added
"RTN","ECXMTL",52,0)
 .;Set division to external value if extract is for FY05 or higher
"RTN","ECXMTL",53,0)
 .D FILE
"RTN","ECXMTL",54,0)
 Q
"RTN","ECXMTL",55,0)
 ;
"RTN","ECXMTL",56,0)
PAT(ECXDFN,ECXDATE) ;determine in/outpatient status, demographics, primary care
"RTN","ECXMTL",57,0)
 N OK
"RTN","ECXMTL",58,0)
 S (ECXADT,ECXPNM,ECXSSN,ECXMPI)=""
"RTN","ECXMTL",59,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;3;5;",.ECXPAT)
"RTN","ECXMTL",60,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMTL",61,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXMTL",62,0)
 ;
"RTN","ECXMTL",63,0)
 ;- Purple Heart Indicator, Period of Service, Agent Orange Location
"RTN","ECXMTL",64,0)
 S ECXPHI=$G(ECXPAT("PHI")),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL")
"RTN","ECXMTL",65,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXMTL",66,0)
 ;Combat Veteran Status
"RTN","ECXMTL",67,0)
 S X3=$$CVEDT^ECXUTL5(ECXDFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXMTL",68,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXMTL",69,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXMTL",70,0)
 ; - Race and Ethnicity
"RTN","ECXMTL",71,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXMTL",72,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXMTL",73,0)
 ;get primary care data
"RTN","ECXMTL",74,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE),ECPTTM=$P(X,U)
"RTN","ECXMTL",75,0)
 S ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXMTL",76,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXMTL",77,0)
 ;get inpatient data
"RTN","ECXMTL",78,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMTL",79,0)
 S ECXA=$P(X,U),(ECXADT,ECXADMDT)=$P($P(X,U,4),"."),ECXDCDT=$P($P(X,U,6),".")
"RTN","ECXMTL",80,0)
 S ECXWPRV=$P(X,U,7),ECXATT=$P(X,U,8)
"RTN","ECXMTL",81,0)
 ;Get ward provider and attending phy person classes
"RTN","ECXMTL",82,0)
 S ECXWPRPC=$P(X,U,11),ECXATTPC=$P(X,U,12)
"RTN","ECXMTL",83,0)
 I ECXADMDT S ECXADMDT=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXMTL",84,0)
 I ECXDCDT S ECXDCDT=$$ECXDATE^ECXUTL(ECXDCDT,ECXYM)
"RTN","ECXMTL",85,0)
 Q
"RTN","ECXMTL",86,0)
 ;
"RTN","ECXMTL",87,0)
PROV(ECXPRV,ECXDATE) ;get provider data
"RTN","ECXMTL",88,0)
 N INST,DGIEN,ARR,DIC,DR,DA,DIQ
"RTN","ECXMTL",89,0)
 S ECXPRCLS=$$PRVCLASS^ECXUTL(ECXPRV,ECXDATE)
"RTN","ECXMTL",90,0)
 S ECXPRNPI=""
"RTN","ECXMTL",91,0)
 ;get division identifier using provider
"RTN","ECXMTL",92,0)
 S ECXDIV=""
"RTN","ECXMTL",93,0)
 S IEN=0 F  D  Q:'IEN  Q:'INST  Q:ECXDIV
"RTN","ECXMTL",94,0)
 .;get pointer to file #4 from provider record
"RTN","ECXMTL",95,0)
 .I '$D(^VA(200,ECXPRV,0)) Q
"RTN","ECXMTL",96,0)
 .S IEN=$O(^VA(200,ECXPRV,2,IEN))
"RTN","ECXMTL",97,0)
 .Q:'IEN
"RTN","ECXMTL",98,0)
 .S DIC="^VA(200,",DR="16",DA=ECXPRV
"RTN","ECXMTL",99,0)
 .S DR(200.02)=".01",DA(200.02)=IEN,DIQ="ARR",DIQ(0)="I"
"RTN","ECXMTL",100,0)
 .D EN^DIQ1
"RTN","ECXMTL",101,0)
 .S INST=$G(ARR(200.02,IEN,.01,"I"))
"RTN","ECXMTL",102,0)
 .Q:'INST
"RTN","ECXMTL",103,0)
 .;get medical center division
"RTN","ECXMTL",104,0)
 .S DGIEN=$O(^DG(40.8,"AD",INST,0)) I DGIEN D
"RTN","ECXMTL",105,0)
 ..S ECXDIV=$P($G(^ECX(727.3,DGIEN,0)),U,2)
"RTN","ECXMTL",106,0)
 S ECXPRV="2"_ECXPRV
"RTN","ECXMTL",107,0)
 Q
"RTN","ECXMTL",108,0)
 ;
"RTN","ECXMTL",109,0)
FILE ;file record in #727.812
"RTN","ECXMTL",110,0)
 ;node0
"RTN","ECXMTL",111,0)
 ;facility^dfn^ssn ECXSSN^name ECXPNM^i/o status ECXA^
"RTN","ECXMTL",112,0)
 ;day ECXDATE^division ECXDIV^admit date ECXADMDT^
"RTN","ECXMTL",113,0)
 ;d/c date ECXDCDT^dss id ECXDSSI^pc team ECPTTM^pc provider ECPTPR^
"RTN","ECXMTL",114,0)
 ;pc provider npi ECPTNPI^pc prov person class ECCLAS^
"RTN","ECXMTL",115,0)
 ;provider ECXPRV^provider npi ECXPRNPI^prov person class ECXPRCLS^
"RTN","ECXMTL",116,0)
 ;test name ECXSCNAM(?)^test ien ECXSCNUM(?)^scale number^scale name^
"RTN","ECXMTL",117,0)
 ;test score^scale score^attend phys^ward provider
"RTN","ECXMTL",118,0)
 ;node1
"RTN","ECXMTL",119,0)
 ;mpi^assoc pc provider^assoc pc provider npi^
"RTN","ECXMTL",120,0)
 ;assoc pc prov person class^asi class^asi special^asi encounter date^
"RTN","ECXMTL",121,0)
 ;purple heart ind.^dom prrtp & saartp ind.^enrollment cat^
"RTN","ECXMTL",122,0)
 ;enrollment stat^enrollment prior^period of serv.^obs. pat ind.^
"RTN","ECXMTL",123,0)
 ;encounter num^agent orange loc^dob^production division^dss
"RTN","ECXMTL",124,0)
 ;department ECXDEPT^head & neck canc. indi.^ethnicity^race1^^
"RTN","ECXMTL",125,0)
 ;enrollment prior ECXPRIOR_enrollment subgroup
"RTN","ECXMTL",126,0)
 ;ECXSBGRP^enrollee user ECXUESTA^division ECXDIV^patient type
"RTN","ECXMTL",127,0)
 ;ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXMTL",128,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI
"RTN","ECXMTL",129,0)
 ;attending phy person class ECXATTPC^ward provider person class 
"RTN","ECXMTL",130,0)
 ;ECXWPRPC
"RTN","ECXMTL",131,0)
 N DA,DIK,STR
"RTN","ECXMTL",132,0)
 I $P(^ECX(ECFILE,JJ,0),U,21)="ASI" S $P(^ECX(ECFILE,JJ,1),U,7)=ECXDATE
"RTN","ECXMTL",133,0)
 S $P(^ECX(ECFILE,JJ,0),U,6,9)=ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE
"RTN","ECXMTL",134,0)
 S STR=$S(ECXLOGIC<2005:ECXDIV,1:"")_U_ECXADMDT_U_ECXDCDT_U_ECXDSSI_U_ECPTTM_U_ECPTPR_U
"RTN","ECXMTL",135,0)
 S STR=STR_ECPTNPI_U_ECCLAS,$P(^ECX(ECFILE,JJ,0),U,10,17)=STR,STR=""
"RTN","ECXMTL",136,0)
 S $P(^ECX(ECFILE,JJ,0),U,18,20)=ECXPRV_U_ECXPRNPI_U_ECXPRCLS
"RTN","ECXMTL",137,0)
 S $P(^ECX(ECFILE,JJ,0),U,23,24)=ECXSCNUM_U_ECXSCNAM
"RTN","ECXMTL",138,0)
 S $P(^ECX(ECFILE,JJ,0),U,27,29)=ECXATT_U_ECXWPRV_U
"RTN","ECXMTL",139,0)
 I '$D(^ECX(ECFILE,JJ,1)) S ^ECX(727.812,JJ,1)="^^^^^"
"RTN","ECXMTL",140,0)
 S $P(^ECX(ECFILE,JJ,1),U,1,4)=ECXMPI_U_ECASPR_U_ECASNPI_U_ECCLAS2
"RTN","ECXMTL",141,0)
 S STR=ECXPHI_U_ECXDOM_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U
"RTN","ECXMTL",142,0)
 S STR=STR_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXDOB_U_ECXPDIV_U_ECXDEPT_U
"RTN","ECXMTL",143,0)
 S STR=STR_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXMTL",144,0)
 I ECXLOGIC>2004 S STR=STR_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXDIV_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXMTL",145,0)
 I ECXLOGIC>2005 S STR=STR_U_ECXATTPC_U_ECXWPRPC
"RTN","ECXMTL",146,0)
 S $P(^ECX(ECFILE,JJ,1),U,8,22)=STR
"RTN","ECXMTL",147,0)
 S DA=JJ,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMTL",148,0)
 S ECRN=ECRN+1
"RTN","ECXMTL",149,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMTL",150,0)
 Q
"RTN","ECXMTL",151,0)
 ;
"RTN","ECXMTL",152,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMTL",153,0)
 S ECHEAD="MTL"
"RTN","ECXMTL",154,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMTL",155,0)
 Q
"RTN","ECXMTL",156,0)
 ;
"RTN","ECXMTL",157,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXMTL",158,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXMTL",159,0)
 Q
"RTN","ECXNDC")
0^29^B15755233
"RTN","ECXNDC",1,0)
ECXNDC ;ALB/JAP BIR/CML - Lookup Routine for NDC's ; 6/7/05 1:52pm
"RTN","ECXNDC",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,24,84**;Dec 22, 1997
"RTN","ECXNDC",3,0)
EN ;entry point from option
"RTN","ECXNDC",4,0)
 N F5068,QFLG
"RTN","ECXNDC",5,0)
 S F5068=0 I $T(PSNAPIS+1^PSNAPIS)[";;4.0;" S F5068=1
"RTN","ECXNDC",6,0)
 W @IOF
"RTN","ECXNDC",7,0)
 W !!,"Pharmacy Feeder Keys for DSS are built in the following manner."
"RTN","ECXNDC",8,0)
 I 'F5068 D NDF3 Q:QFLG
"RTN","ECXNDC",9,0)
 I F5068 D NDF4 Q:QFLG
"RTN","ECXNDC",10,0)
 W @IOF
"RTN","ECXNDC",11,0)
 W !,"This option will allow lookups on the local DRUG file (#50) using "
"RTN","ECXNDC",12,0)
 W !,"NDCs from DSS Pharmacy Feeder Keys that have been rejected because"
"RTN","ECXNDC",13,0)
 I 'F5068 D
"RTN","ECXNDC",14,0)
 .W !,"the first seven characters are zeros. (Ex. ""0000000051079014120"")"
"RTN","ECXNDC",15,0)
 I F5068 D
"RTN","ECXNDC",16,0)
 .W !,"the first five characters are zeros in a 17 character Feeder Key."
"RTN","ECXNDC",17,0)
 .W !,"(Ex. ""00000051079014120"")"
"RTN","ECXNDC",18,0)
 .W !,"OR"
"RTN","ECXNDC",19,0)
 .W !,"the first seven characters are zeros in a 19 character Feeder Key."
"RTN","ECXNDC",20,0)
 .W !,"(Ex. ""0000000051079014120"")"
"RTN","ECXNDC",21,0)
 W !!,"This would occur when a pharmacy item has not been matched to the"
"RTN","ECXNDC",22,0)
 W !,"the National Drug File (NDF)."
"RTN","ECXNDC",23,0)
 W !!,"Enter the NDC (last twelve characters) from a rejected feeder key"
"RTN","ECXNDC",24,0)
 W !,"to display information from the local DRUG file for any drug which"
"RTN","ECXNDC",25,0)
 W !,"has that NDC."
"RTN","ECXNDC",26,0)
 D ASK
"RTN","ECXNDC",27,0)
 K %,%H,%Y,DRG,DRGNM,ECD,LN,POP,X,Y,DUOUT,DTOUT
"RTN","ECXNDC",28,0)
 Q
"RTN","ECXNDC",29,0)
ASK ;select ndc for lookup
"RTN","ECXNDC",30,0)
 K DUOUT,DTOUT
"RTN","ECXNDC",31,0)
 W !!!,"Enter 12 numeric characters at the prompt or <cr> to exit.",!
"RTN","ECXNDC",32,0)
 S DIC=50,DIC(0)="QEA",D="NDC",DIC("A")="Select NDC: "
"RTN","ECXNDC",33,0)
 ;Use pharmacy encapsulation API for MIX^DIC1 dbia 4551
"RTN","ECXNDC",34,0)
 D MIX^PSSDI(50,"ECX",.DIC,D,,)
"RTN","ECXNDC",35,0)
 Q:Y<0  Q:($D(DUOUT)!$D(DTOUT))
"RTN","ECXNDC",36,0)
 S DRG=+Y
"RTN","ECXNDC",37,0)
 ;Use pharmacy encapsulation API for EN^DIQ1 dbia 4451
"RTN","ECXNDC",38,0)
 S DIQ="ECXDIQ",DIQ(0)="E" D EN^PSSDI(50,"DSS",DIC,".01;2;31;14.5;16",DRG,.DIQ)
"RTN","ECXNDC",39,0)
 K LN S DRGNM=ECXDIQ(50,DRG,.01,"E"),$P(LN,"-",$L(DRGNM)+1)=""
"RTN","ECXNDC",40,0)
 W !!,DRGNM,!,LN
"RTN","ECXNDC",41,0)
 W !,"NDC:           ",ECXDIQ(50,DRG,31,"E"),?40,"VA Classification:       ",ECXDIQ(50,DRG,2,"E")
"RTN","ECXNDC",42,0)
 W !,"Dispense Unit: ",ECXDIQ(50,DRG,14.5,"E"),?40,"Price per Dispense Unit: ",ECXDIQ(50,DRG,16,"E")
"RTN","ECXNDC",43,0)
 K ECXDIQ,X,Y,DIC,DIQ,DRG,ECXDIQ,D
"RTN","ECXNDC",44,0)
 G ASK
"RTN","ECXNDC",45,0)
 ;
"RTN","ECXNDC",46,0)
NDF3 ;before ndf v4
"RTN","ECXNDC",47,0)
 S QFLG=0
"RTN","ECXNDC",48,0)
 W !!,"Your site is running NATIONAL DRUG FILE (NDF) v3.18, so"
"RTN","ECXNDC",49,0)
 W !,"PHA Feeder Keys are composed of 19 numeric characters."
"RTN","ECXNDC",50,0)
 W !!?5,"Ex. ""0016006000003073531""   where characters:"
"RTN","ECXNDC",51,0)
 W !!?5,"1-4 (0016)          = pointer to the NATIONAL DRUG file (#50.6)"
"RTN","ECXNDC",52,0)
 W !?5,"5-7 (006)           = pointer to VA PRODUCT NAME subfile (#50.68)"
"RTN","ECXNDC",53,0)
 W !?5,"                      of the NATIONAL DRUG file (#50.6)"
"RTN","ECXNDC",54,0)
 W !?5,"8-19 (000003073531) = NDC from the local DRUG file (#50)"
"RTN","ECXNDC",55,0)
 I $E(IOST)="C" D
"RTN","ECXNDC",56,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXNDC",57,0)
 .S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXNDC",58,0)
 Q
"RTN","ECXNDC",59,0)
 ;
"RTN","ECXNDC",60,0)
NDF4 ;after ndf v4
"RTN","ECXNDC",61,0)
 S QFLG=0
"RTN","ECXNDC",62,0)
 W !!,"Your site is running NATIONAL DRUG FILE (NDF) v4.0."
"RTN","ECXNDC",63,0)
 W !,"If Pharmacy data is dated after September 30, 1998,"
"RTN","ECXNDC",64,0)
 W !,"then PHA Feeder Keys are composed of 17 numeric characters."
"RTN","ECXNDC",65,0)
 W !!?5,"Ex. ""12006000003073531""   where characters:"
"RTN","ECXNDC",66,0)
 W !?5,"1-5 (12006)         = pointer to VA PRODUCT NAME file (#50.68)"
"RTN","ECXNDC",67,0)
 W !?5,"6-17 (000003073531) = NDC from the local DRUG file (#50)"
"RTN","ECXNDC",68,0)
 W !!,"If Pharmacy data is dated prior to October 1, 1998,"
"RTN","ECXNDC",69,0)
 W !,"then PHA Feeder Keys are composed of 19 numeric characters."
"RTN","ECXNDC",70,0)
 W !!?5,"Ex. ""0016006000003073531""   where characters:"
"RTN","ECXNDC",71,0)
 W !!?5,"1-4 (0016)          = pointer to the NATIONAL DRUG file (#50.6)"
"RTN","ECXNDC",72,0)
 W !?5,"5-7 (006)           = pointer to VA PRODUCT NAME subfile (#50.68)"
"RTN","ECXNDC",73,0)
 W !?5,"                      of the NATIONAL DRUG file (#50.6)"
"RTN","ECXNDC",74,0)
 W !?5,"8-19 (000003073531) = NDC from the local DRUG file (#50)"
"RTN","ECXNDC",75,0)
 I $E(IOST)="C" D
"RTN","ECXNDC",76,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXNDC",77,0)
 .S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXNDC",78,0)
 Q
"RTN","ECXOPRX")
0^8^B71625093
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; 8/16/05 5:38pm
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49,71,81,84**;Dec 22, 1997
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
START ;entry when queued
"RTN","ECXOPRX",9,0)
 N X,DA,DIC,DIQ,DR,ECXNPRFI,ECRXPTST,ECNONVAP,ECRXNUM
"RTN","ECXOPRX",10,0)
 S QFLG=0
"RTN","ECXOPRX",11,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",12,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",13,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",14,0)
 ;before V6
"RTN","ECXOPRX",15,0)
 S ECPROF=6
"RTN","ECXOPRX",16,0)
 S ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",17,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",18,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",19,0)
 Q
"RTN","ECXOPRX",20,0)
 ;
"RTN","ECXOPRX",21,0)
V6 ;version 6 or better
"RTN","ECXOPRX",22,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",23,0)
 S ECPROF=2
"RTN","ECXOPRX",24,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",25,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",26,0)
 Q:QFLG
"RTN","ECXOPRX",27,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",28,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",29,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",30,0)
 Q
"RTN","ECXOPRX",31,0)
 ;
"RTN","ECXOPRX",32,0)
STUFF ;get data
"RTN","ECXOPRX",33,0)
 N ECXPHA
"RTN","ECXOPRX",34,0)
 S ECDATA=$G(^PSRX(ECRX,0)),ECXPHA=""
"RTN","ECXOPRX",35,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",36,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",37,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",38,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",39,0)
 ;
"RTN","ECXOPRX",40,0)
 S (ECXDSSD,ECXPROVN)="",ECXERR=0
"RTN","ECXOPRX",41,0)
 S (ECXCVE,ECXCVEDT,ECXCVENC,ECRXPTST,ECRXNUM)=""
"RTN","ECXOPRX",42,0)
 S ECXDATE=ECD
"RTN","ECXOPRX",43,0)
 S ECXDFN=$P(ECDATA,U,2)
"RTN","ECXOPRX",44,0)
 S ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",45,0)
 ;
"RTN","ECXOPRX",46,0)
 ;- Get rx patient status
"RTN","ECXOPRX",47,0)
 S ECRXPTST=$$RXPTST^ECXUTL5($P(ECDATA,U,3))
"RTN","ECXOPRX",48,0)
 ;
"RTN","ECXOPRX",49,0)
 ;- Get rx number
"RTN","ECXOPRX",50,0)
 S ECRXNUM=$P(ECDATA,U,1)
"RTN","ECXOPRX",51,0)
 ;
"RTN","ECXOPRX",52,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",53,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:"")
"RTN","ECXOPRX",54,0)
 S ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",55,0)
 ;
"RTN","ECXOPRX",56,0)
 ;- Check non-va provider flag and set to'Y' if exist
"RTN","ECXOPRX",57,0)
 S ECNONVAP=$$NONVAP^ECXUTL5($E(ECXPROV,2,99))
"RTN","ECXOPRX",58,0)
 ;
"RTN","ECXOPRX",59,0)
 ;get patient specific data
"RTN","ECXOPRX",60,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR)
"RTN","ECXOPRX",61,0)
 Q:ECXERR
"RTN","ECXOPRX",62,0)
 I 'ECRFL D
"RTN","ECXOPRX",63,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",64,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",65,0)
 I ECRFL D
"RTN","ECXOPRX",66,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",67,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",68,0)
 ;
"RTN","ECXOPRX",69,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2)
"RTN","ECXOPRX",70,0)
 S ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",71,0)
 ;call pharmacy drug file (#50) api
"RTN","ECXOPRX",72,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXOPRX",73,0)
 S ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)["I",ECINV=$S(ECINV:"I",1:"")
"RTN","ECXOPRX",74,0)
 S ECUI=$P(ECXPHA,U,8)
"RTN","ECXOPRX",75,0)
 S ECNDC=$P(ECXPHA,U,3),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXOPRX",76,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXOPRX",77,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",78,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",79,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",80,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",81,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",82,0)
 ;
"RTN","ECXOPRX",83,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXOPRX",84,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXOPRX",85,0)
 ;
"RTN","ECXOPRX",86,0)
 ;- Ordering physician (null for FY2002)
"RTN","ECXOPRX",87,0)
 S ECXORDPH=""
"RTN","ECXOPRX",88,0)
 ;
"RTN","ECXOPRX",89,0)
 ;- Ordering stop code
"RTN","ECXOPRX",90,0)
 S ECXORDST=$P($G(^ECX(728.44,+$P(ECDATA,U,5),0)),U,2)
"RTN","ECXOPRX",91,0)
 ;
"RTN","ECXOPRX",92,0)
 ;- Ordering date
"RTN","ECXOPRX",93,0)
 S ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)
"RTN","ECXOPRX",94,0)
 ;
"RTN","ECXOPRX",95,0)
 ;- CNH status (YES/NO)
"RTN","ECXOPRX",96,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXOPRX",97,0)
 ;
"RTN","ECXOPRX",98,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",99,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",100,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",101,0)
 ;
"RTN","ECXOPRX",102,0)
 ;- Set national patient record flag if exist
"RTN","ECXOPRX",103,0)
 D NPRF^ECXUTL5
"RTN","ECXOPRX",104,0)
 ;
"RTN","ECXOPRX",105,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",106,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",107,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",108,0)
 .I ECMW=2,ECXSSN'="" D
"RTN","ECXOPRX",109,0)
 ..N TMP
"RTN","ECXOPRX",110,0)
 ..S TMP=$$JULDT^ECXUTL4(ECD)
"RTN","ECXOPRX",111,0)
 ..S ECXENC=$E(ECXSSN,1,9)_TMP_"160"
"RTN","ECXOPRX",112,0)
 ..S ECXA="O"
"RTN","ECXOPRX",113,0)
 I ECXENC'="" D FILE
"RTN","ECXOPRX",114,0)
 Q
"RTN","ECXOPRX",115,0)
 ;
"RTN","ECXOPRX",116,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",117,0)
 N OK,X,PT
"RTN","ECXOPRX",118,0)
 ;init variables
"RTN","ECXOPRX",119,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP)=""
"RTN","ECXOPRX",120,0)
 ;get patient data if saved
"RTN","ECXOPRX",121,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",122,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2)
"RTN","ECXOPRX",123,0)
 .S ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",124,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8)
"RTN","ECXOPRX",125,0)
 .S ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",126,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14)
"RTN","ECXOPRX",127,0)
 .S ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",128,0)
 .S ECXPHI=$P(PT,U,20)
"RTN","ECXOPRX",129,0)
 .S ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",130,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26)
"RTN","ECXOPRX",131,0)
 .S ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",132,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",133,0)
 ;set patient data
"RTN","ECXOPRX",134,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",135,0)
 .K ECXPAT
"RTN","ECXOPRX",136,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",137,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",138,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXOPRX",139,0)
 .S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",140,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXOPRX",141,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",142,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXOPRX",143,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXOPRX",144,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",145,0)
 .;
"RTN","ECXOPRX",146,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",147,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",148,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",149,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXOPRX",150,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXOPRX",151,0)
 .; - Race and Ethnicity
"RTN","ECXOPRX",152,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXOPRX",153,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXOPRX",154,0)
 .;save for later
"RTN","ECXOPRX",155,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U
"RTN","ECXOPRX",156,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",157,0)
 ;get inpatient data
"RTN","ECXOPRX",158,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)=""
"RTN","ECXOPRX",159,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",160,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXOPRX",161,0)
 .S ECXADMDT=$P(X,U,4)
"RTN","ECXOPRX",162,0)
 ;get primary care data
"RTN","ECXOPRX",163,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXOPRX",164,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXOPRX",165,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",166,0)
 Q
"RTN","ECXOPRX",167,0)
 ;
"RTN","ECXOPRX",168,0)
FILE ;file record
"RTN","ECXOPRX",169,0)
 ;node0
"RTN","ECXOPRX",170,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX",171,0)
 ;placeholder1^new^placeholder2^qty^cost^placeholder3^
"RTN","ECXOPRX",172,0)
 ;mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX",173,0)
 ;feeder key^investigational^days supply^primary care team^
"RTN","ECXOPRX",174,0)
 ;primary care provider^time^race
"RTN","ECXOPRX",175,0)
 ;node1
"RTN","ECXOPRX",176,0)
 ;mpi^dss dept ECXDSSD^sex^zip+4^provider npi^pc provider npi^state^
"RTN","ECXOPRX",177,0)
 ;county^pc prov person class^pow status^pow location^
"RTN","ECXOPRX",178,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^
"RTN","ECXOPRX",179,0)
 ;mst status^enroll loc^assoc pc provider^assoc pc prov person class^
"RTN","ECXOPRX",180,0)
 ;assoc pc prov npi^dom ECXDOM^purple heart ECXPHI^
"RTN","ECXOPRX",181,0)
 ;enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX",182,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^
"RTN","ECXOPRX",183,0)
 ;period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX",184,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^
"RTN","ECXOPRX",185,0)
 ;ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX",186,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^ethnicity ECXETH^
"RTN","ECXOPRX",187,0)
 ;race ECXRC1^^enrollment priority ECXPRIOR_
"RTN","ECXOPRX",188,0)
 ;enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient type
"RTN","ECXOPRX",189,0)
 ;ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXOPRX",190,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXOPRX",191,0)
 ;rx patient status ECRXPTST^non-va prescriber ECNONVAP^rx # ECRXNUM
"RTN","ECXOPRX",192,0)
 N DA,DIK
"RTN","ECXOPRX",193,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX",194,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX",195,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX",196,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_U_ECQTY_U
"RTN","ECXOPRX",197,0)
 S ECODE=ECODE_ECXCOST_U_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX",198,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX",199,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX",200,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_ECPTNPI_U
"RTN","ECXOPRX",201,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX",202,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_U_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX",203,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX",204,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX",205,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX",206,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U
"RTN","ECXOPRX",207,0)
 S ECODE1=ECODE1_ECXRC1_U
"RTN","ECXOPRX",208,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U
"RTN","ECXOPRX",209,0)
 I ECXLOGIC>2004 S ECODE2=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECRXPTST_U_ECNONVAP
"RTN","ECXOPRX",210,0)
 I ECXLOGIC>2005 S ECODE2=ECODE2_U_ECRXNUM
"RTN","ECXOPRX",211,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXOPRX",212,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX",213,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX",214,0)
 Q
"RTN","ECXOPRX",215,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",216,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",217,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",218,0)
 Q
"RTN","ECXOPRX",219,0)
 ;
"RTN","ECXOPRX",220,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",221,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPIVDN")
0^26^B62713375
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; 10/19/05 9:06am
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49,71,84**;Dec 22, 1997
"RTN","ECXPIVDN",3,0)
START ; start package specific extract
"RTN","ECXPIVDN",4,0)
 N DIC,DA,DR,DIQ,DFN,ECXNPRFI,ECXPHA
"RTN","ECXPIVDN",5,0)
 S QFLG=0
"RTN","ECXPIVDN",6,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",7,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",8,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",9,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",10,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",11,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",12,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",13,0)
 .S ECXERR=0 D PAT(DFN,ECD,.ECXERR)
"RTN","ECXPIVDN",14,0)
 .Q:ECXERR
"RTN","ECXPIVDN",15,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",16,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",17,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",18,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",19,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",20,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",21,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",22,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",23,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",24,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",25,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",26,0)
 .S ECXDSSI=""
"RTN","ECXPIVDN",27,0)
 .;loop thru tmp global and call pharmacy drug file (#50) api
"RTN","ECXPIVDN",28,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(DRG) I $P(ECXPHA,U)'="" D STUFF Q:QFLG
"RTN","ECXPIVDN",29,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",30,0)
 Q
"RTN","ECXPIVDN",31,0)
STUFF ;get data
"RTN","ECXPIVDN",32,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT
"RTN","ECXPIVDN",33,0)
 S ECVACL=$P(ECXPHA,U,2)
"RTN","ECXPIVDN",34,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",35,0)
 I ECXA="O" D
"RTN","ECXPIVDN",36,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",37,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",38,0)
 .I $P(EC,U,15) S ECIVRM=$P(EC,U,15),ECXDIV=$P(^PS(59.5,ECIVRM,0),U,4)
"RTN","ECXPIVDN",39,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000"
"RTN","ECXPIVDN",40,0)
 .S ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",41,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",42,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",43,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",44,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",45,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",46,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",47,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",48,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",49,0)
 ..I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",50,0)
 S ECINV=$P(ECXPHA,U,4),ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVDN",51,0)
 S ECST=ECXCNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",52,0)
 S ECNDC=$P(ECXPHA,U,3),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",53,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXPIVDN",54,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",55,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",56,0)
 ;
"RTN","ECXPIVDN",57,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",58,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:"")
"RTN","ECXPIVDN",59,0)
 S ECXOPNPI=""
"RTN","ECXPIVDN",60,0)
 ;- Ordering date
"RTN","ECXPIVDN",61,0)
 S ECXORDDT=$P(EC,U,16)
"RTN","ECXPIVDN",62,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",63,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",64,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",65,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",66,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",67,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",68,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",69,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",70,0)
 S ECXORDST=""
"RTN","ECXPIVDN",71,0)
 I ECXA="O" D
"RTN","ECXPIVDN",72,0)
 .S ECXORDST=$$DOIVPO^ECXUTL5(DFN,ON)
"RTN","ECXPIVDN",73,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",74,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECXORDST,)
"RTN","ECXPIVDN",75,0)
 ;get BCMA data
"RTN","ECXPIVDN",76,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXPIVDN",77,0)
 ;
"RTN","ECXPIVDN",78,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",79,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",80,0)
 ;
"RTN","ECXPIVDN",81,0)
 ;set national patient record flag if exist
"RTN","ECXPIVDN",82,0)
 S ECXDFN=DFN D NPRF^ECXUTL5 K ECXDFN
"RTN","ECXPIVDN",83,0)
 ;
"RTN","ECXPIVDN",84,0)
 D:ECXENC'="" FILE K P1,P3
"RTN","ECXPIVDN",85,0)
 Q
"RTN","ECXPIVDN",86,0)
 ;
"RTN","ECXPIVDN",87,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",88,0)
 N X
"RTN","ECXPIVDN",89,0)
 ;init variables
"RTN","ECXPIVDN",90,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP)=""
"RTN","ECXPIVDN",91,0)
 ;get patient data if saved
"RTN","ECXPIVDN",92,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",93,0)
 .S PT=^TMP($J,"ECXP",ECXDFN)
"RTN","ECXPIVDN",94,0)
 .S ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",95,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXPIVDN",96,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",97,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXPIVDN",98,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",99,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXPIVDN",100,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",101,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXPIVDN",102,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",103,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",104,0)
 ;set patient data
"RTN","ECXPIVDN",105,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",106,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",107,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",108,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXPIVDN",109,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",110,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXPIVDN",111,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET")
"RTN","ECXPIVDN",112,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXPIVDN",113,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",114,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXPIVDN",115,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",116,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXPIVDN",117,0)
 .;get CNHU status
"RTN","ECXPIVDN",118,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPIVDN",119,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",120,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",121,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXPIVDN",122,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPIVDN",123,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",124,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXPIVDN",125,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",126,0)
 .;save for later
"RTN","ECXPIVDN",127,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",128,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",129,0)
 ;get primary care data
"RTN","ECXPIVDN",130,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",131,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXPIVDN",132,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",133,0)
 ;get inpatient data
"RTN","ECXPIVDN",134,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)=""
"RTN","ECXPIVDN",135,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",136,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4)
"RTN","ECXPIVDN",137,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2)
"RTN","ECXPIVDN",138,0)
 Q
"RTN","ECXPIVDN",139,0)
FILE ;file record
"RTN","ECXPIVDN",140,0)
 ;node0
"RTN","ECXPIVDN",141,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^
"RTN","ECXPIVDN",142,0)
 ;primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVDN",143,0)
 ;node1
"RTN","ECXPIVDN",144,0)
 ;mpi^dss dept^pc provider npi^pc prov person class^assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^obs pat ind^enc num^
"RTN","ECXPIVDN",145,0)
 ;ord pr^ord dt^req phys^nat prod division^means tst^elig^dob^sex^state^county^zip+4^vet^period of svc^pow stat^pow loc^ir stat^ao stat^
"RTN","ECXPIVDN",146,0)
 ;ao loc^purple heart ind.^mst stat^enrollment loc^enrollment cat^enrollment stat^enrollment prior^cnh/sh stat^ord pr npi
"RTN","ECXPIVDN",147,0)
 ;node2
"RTN","ECXPIVDN",148,0)
 ;head & neck cancer ind.^ethnicity^race1^bcma drug dispensed^
"RTN","ECXPIVDN",149,0)
 ;bcma dose given^bcma unit of administration^bcma ICU flag^
"RTN","ECXPIVDN",150,0)
 ;ordering provider person class^^user
"RTN","ECXPIVDN",151,0)
 ;enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXPIVDN",152,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^
"RTN","ECXPIVDN",153,0)
 ;national patient record flag ECXNPRFI,ordering stop code ECXIVPO
"RTN","ECXPIVDN",154,0)
 N DA,DIK
"RTN","ECXPIVDN",155,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVDN",156,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_DFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPIVDN",157,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECVACL_U_ECXCNT_U_ECXW_U
"RTN","ECXPIVDN",158,0)
 S ECODE=ECODE_ECXCOST_U_ECXMN_U_ECXTS_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U
"RTN","ECXPIVDN",159,0)
 S ECODE=ECODE_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U
"RTN","ECXPIVDN",160,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXPIVDN",161,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U_ECXDSSI_U
"RTN","ECXPIVDN",162,0)
 ;if outpat and not observ patient, admit date="" and admit time="000000"
"RTN","ECXPIVDN",163,0)
 I ECXA="O",(ECXOBS="NO") S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVDN",164,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECPTNPI_U_ECCLAS_U_ECASPR_U_ECCLAS2_U
"RTN","ECXPIVDN",165,0)
 S ECODE1=ECODE1_ECASNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDPR_U
"RTN","ECXPIVDN",166,0)
 S ECODE1=ECODE1_ECXORDST_U_$$ECXDATE^ECXUTL(ECXORDDT,ECXYM)_U
"RTN","ECXPIVDN",167,0)
 S ECODE1=ECODE1_ECXRPHY_U_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U
"RTN","ECXPIVDN",168,0)
 S ECODE1=ECODE1_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U
"RTN","ECXPIVDN",169,0)
 S ECODE1=ECODE1_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXPIVDN",170,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCAT_U
"RTN","ECXPIVDN",171,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXOPNPI_U
"RTN","ECXPIVDN",172,0)
 S ECODE2=ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXPIVDN",173,0)
 I ECXLOGIC>2003 D
"RTN","ECXPIVDN",174,0)
 .S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXPIVDN",175,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPIVDN",176,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPIVDN",177,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXPIVDN",178,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVDN",179,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVDN",180,0)
 Q
"RTN","ECXPIVDN",181,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",182,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",183,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",184,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",185,0)
 S ECVER=7
"RTN","ECXPIVDN",186,0)
 Q
"RTN","ECXPIVDN",187,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",188,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSR")
0^35^B56207579
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 9/26/05 7:23am
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84**;Dec 22, 1997
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
 ;
"RTN","ECXQSR",11,0)
START ;entry point from tasked job
"RTN","ECXQSR",12,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",13,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",14,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",15,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",16,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",17,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",18,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",19,0)
 Q
"RTN","ECXQSR",20,0)
 ;
"RTN","ECXQSR",21,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",22,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",23,0)
 S ECXQDT=""
"RTN","ECXQSR",24,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",25,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",26,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",28,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",29,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",30,0)
 Q
"RTN","ECXQSR",31,0)
 ;
"RTN","ECXQSR",32,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",33,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV
"RTN","ECXQSR",34,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",35,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",36,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",37,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",38,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",39,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",40,0)
 S ECHL=""
"RTN","ECXQSR",41,0)
 S ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",42,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",43,0)
 Q:ECSTOP=""
"RTN","ECXQSR",44,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",45,0)
 I ECAC D
"RTN","ECXQSR",46,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D
"RTN","ECXQSR",47,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2)
"RTN","ECXQSR",48,0)
 ..S ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2)
"RTN","ECXQSR",49,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",50,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",51,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",52,0)
 .I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",53,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",54,0)
 Q:'ECDU
"RTN","ECXQSR",55,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10)
"RTN","ECXQSR",56,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",57,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",58,0)
 ; was performed.
"RTN","ECXQSR",59,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",60,0)
 S (ECDIA,ECXMST,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECUN1NPI)=""
"RTN","ECXQSR",61,0)
 ;if QUASAR v2
"RTN","ECXQSR",62,0)
 I +ECXQV=2 D
"RTN","ECXQSR",63,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3)
"RTN","ECXQSR",64,0)
 .S ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",65,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",66,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U)
"RTN","ECXQSR",67,0)
 ..S XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",68,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",69,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",70,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",71,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0))
"RTN","ECXQSR",72,0)
 .S ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",73,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",74,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",75,0)
 ;if QUASAR v3
"RTN","ECXQSR",76,0)
 I +ECXQV=3 D
"RTN","ECXQSR",77,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",78,0)
 .S ECXMST=$P(EC2NODE,U,9),ECXMST=$S(ECXMST=1:"Y",ECXMST=0:"N",1:"")
"RTN","ECXQSR",79,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0))
"RTN","ECXQSR",80,0)
 .S ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0))
"RTN","ECXQSR",81,0)
 .S ECPN=0
"RTN","ECXQSR",82,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",83,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0)
"RTN","ECXQSR",84,0)
 ..S ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",85,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",86,0)
 ..I ECTP D
"RTN","ECXQSR",87,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",88,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",89,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",90,0)
 ..I 'ECTP D
"RTN","ECXQSR",91,0)
 ...S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",92,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5)
"RTN","ECXQSR",93,0)
 ..S ECXMOD="",MOD=0
"RTN","ECXQSR",94,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",95,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",96,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",97,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",98,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",99,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",100,0)
 ..S ECV=ECV+$G(LOC(ECXCPT))
"RTN","ECXQSR",101,0)
 ..S LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",102,0)
 .S ECIEN=0
"RTN","ECXQSR",103,0)
 .F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",104,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0)
"RTN","ECXQSR",105,0)
 ..S P=$P(DIA,U,2),P=$S(P=1:"P",1:"S"),CNT=$G(STR(P))+1
"RTN","ECXQSR",106,0)
 ..S STR(P,CNT)=$P($G(^ICD9(+DIA,0)),U),STR(P)=CNT
"RTN","ECXQSR",107,0)
 .S ECDIA=$G(STR("P",1))
"RTN","ECXQSR",108,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD9"_I)=STR("P",I)
"RTN","ECXQSR",109,0)
 .S:ECDIA="" ECDIA=$G(STR("S",1)),I=2
"RTN","ECXQSR",110,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD9"_J)=STR("S",J)
"RTN","ECXQSR",111,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",112,0)
 ;
"RTN","ECXQSR",113,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXQSR",114,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",115,0)
 ;set up Provider Person class
"RTN","ECXQSR",116,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXQSR",117,0)
 ;
"RTN","ECXQSR",118,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",119,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",120,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",121,0)
 F II=2,3 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",122,0)
 .S DA=@XVAR,(DIC,FILEN)=509850.3,DR=".01",DIQ="ECXQSR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXQSR",123,0)
 .S DA=ECXQSR(FILEN,DA,DR,"I"),(DIC,FILEN)=8930.3 D EN^DIQ1 S @XVAR=2_ECXQSR(FILEN,DA,DR,"I") K DA,DIC,DR,DIQ,ECXQSR
"RTN","ECXQSR",124,0)
 ;
"RTN","ECXQSR",125,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",126,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",127,0)
 ;
"RTN","ECXQSR",128,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",129,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",130,0)
 ;
"RTN","ECXQSR",131,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",132,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",133,0)
 ;
"RTN","ECXQSR",134,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",135,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",136,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",137,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",138,0)
 ;
"RTN","ECXQSR",139,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",140,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,)
"RTN","ECXQSR",141,0)
 Q:ECXENC=""
"RTN","ECXQSR",142,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",143,0)
 S CPT=""
"RTN","ECXQSR",144,0)
 F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",145,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",146,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",147,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD),ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",148,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",149,0)
 .D FILE
"RTN","ECXQSR",150,0)
 K CPT,LOC
"RTN","ECXQSR",151,0)
 Q
"RTN","ECXQSR",152,0)
 ;
"RTN","ECXQSR",153,0)
FILE ;file record in #727.825
"RTN","ECXQSR",154,0)
 ;node0
"RTN","ECXQSR",155,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^
"RTN","ECXQSR",156,0)
 ;day ECDAY^DSS unit ECDU^^
"RTN","ECXQSR",157,0)
 ;category ECPTTM^procedure ECP^volume ECV^
"RTN","ECXQSR",158,0)
 ;cost center ^ordering sec ^section^
"RTN","ECXQSR",159,0)
 ;provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^ECXPPC3^
"RTN","ECXQSR",160,0)
 ;mov # ECXMN^treat spec ECXTS^time ECTIME^
"RTN","ECXQSR",161,0)
 ;primary care team ECPTTM^
"RTN","ECXQSR",162,0)
 ;primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR",163,0)
 ;primary icd-9 code ECDIA^secondary icd-9 #1 ECXICD91^
"RTN","ECXQSR",164,0)
 ;secondary icd-9 #2 ECXICD92^secondary icd-9 #3 ECXICD93^
"RTN","ECXQSR",165,0)
 ;secondary icd-9 #4 ECXICD94^agent orange ECXAST^
"RTN","ECXQSR",166,0)
 ;radiation exposure ECRE^
"RTN","ECXQSR",167,0)
 ;environmental contaminants ECENV^
"RTN","ECXQSR",168,0)
 ;service connected ECSC^sent to pce^^dss identifier ECDSS^placeholder
"RTN","ECXQSR",169,0)
 ;node1
"RTN","ECXQSR",170,0)
 ;mpi ECXNPI^dss dept ECXDSSD^provider npi ECUN1NPI^^^
"RTN","ECXQSR",171,0)
 ;pc prov person class ECPTNPI^assoc pc provider ECASPR^
"RTN","ECXQSR",172,0)
 ;assoc pc prov person class ECCLAS2^assoc pc provider npi ECASNPI^
"RTN","ECXQSR",173,0)
 ;divison ECXDIV^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXQSR",174,0)
 ;enrollment status ECXSTAT^enrollment prior ECXPRIOR^period of
"RTN","ECXQSR",175,0)
 ;service ECXPOS^purple heart ECXPHI^observ pat ind ECXOBS^encounter
"RTN","ECXQSR",176,0)
 ;num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXQSR",177,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR",178,0)
 ;production division ECXPDIV^eligibility ECXELIG^ethnicity ECXETH^
"RTN","ECXQSR",179,0)
 ;race1 ECXRC1^enrollment location ECXENRL^^
"RTN","ECXQSR",180,0)
 ;enrollment priority ECXPRIOR_enrollment subgroup ECXSBGRP^user
"RTN","ECXQSR",181,0)
 ;enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^
"RTN","ECXQSR",182,0)
 ;combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^
"RTN","ECXQSR",183,0)
 ;national patient record flag ECXNPRFI
"RTN","ECXQSR",184,0)
 N DA,DIK
"RTN","ECXQSR",185,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR",186,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR",187,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR",188,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR",189,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR",190,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR",191,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR",192,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR",193,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR",194,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECUN1NPI_U_U_U_ECCLAS_U_ECPTNPI_U_ECASPR_U
"RTN","ECXQSR",195,0)
 S ECODE1=ECODE1_ECCLAS2_U_ECASNPI_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR",196,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR",197,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR",198,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR",199,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR",200,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR",201,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXQSR",202,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXQSR",203,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXQSR",204,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR",205,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR",206,0)
 Q
"RTN","ECXQSR",207,0)
 ;
"RTN","ECXQSR",208,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",209,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",210,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",211,0)
 Q
"RTN","ECXQSR",212,0)
 ;
"RTN","ECXQSR",213,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",214,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRAD")
0^7^B29447080
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ; 10/25/05 8:35am
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71,84**;Dec 22, 1997
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 S QFLG=0
"RTN","ECXRAD",10,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",11,0)
 S ECXDFN="",ECDT=ECSD-.1,ECED1=ECED+.3
"RTN","ECXRAD",12,0)
 F  S ECDT=$O(^RADPT("AR",ECDT)) Q:ECDT>ECED1!(ECDT'>0)  D  Q:QFLG
"RTN","ECXRAD",13,0)
 .S ECXDFN=""
"RTN","ECXRAD",14,0)
 .F  S ECXDFN=$O(^RADPT("AR",ECDT,ECXDFN)) Q:ECXDFN=""  I '$D(^TMP("ECL",$J,ECXDFN)) D GET Q:QFLG
"RTN","ECXRAD",15,0)
 K ^TMP("ECL",$J)
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GET ;get data
"RTN","ECXRAD",19,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC,ECXIS,ECXISPC,ECXPRCL,ECXCSC
"RTN","ECXRAD",20,0)
 S ^TMP("ECL",$J,ECXDFN)=""
"RTN","ECXRAD",21,0)
 ;with dfn get all exams within date range
"RTN","ECXRAD",22,0)
 S ECXMDT=ECSD-.1
"RTN","ECXRAD",23,0)
 F  S ECXMDT=$O(^RADPT(ECXDFN,"DT","B",ECXMDT)) Q:((ECXMDT>ECED1)!(ECXMDT=""))  D  Q:QFLG
"RTN","ECXRAD",24,0)
 .S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,"")) Q:ECXMDA=""
"RTN","ECXRAD",25,0)
 .S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",26,0)
 .S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",27,0)
 .S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",28,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;",.ECXPAT)
"RTN","ECXRAD",29,0)
 .Q:'OK
"RTN","ECXRAD",30,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",31,0)
 .S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",32,0)
 .S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",33,0)
 .S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",34,0)
 .S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",35,0)
 .S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXRAD",36,0)
 .;
"RTN","ECXRAD",37,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",38,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",39,0)
 .;for dfn & date get exam(s) ien
"RTN","ECXRAD",40,0)
 .S ECXMDA=""
"RTN","ECXRAD",41,0)
 .F  S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,ECXMDA)) Q:+ECXMDA=0  D
"RTN","ECXRAD",42,0)
 ..S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",43,0)
 ..;
"RTN","ECXRAD",44,0)
 ..;- Ordering stop code (based on imaging location)
"RTN","ECXRAD",45,0)
 ..S ECXORDST=$$GET1^DIQ(40.7,$$GET1^DIQ(79.1,$G(ECLOC),22,"I"),1)
"RTN","ECXRAD",46,0)
 ..;
"RTN","ECXRAD",47,0)
 ..;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",48,0)
 ..S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",49,0)
 ..S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",50,0)
 ..;
"RTN","ECXRAD",51,0)
 ..;- If no encounter number don't file record
"RTN","ECXRAD",52,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",53,0)
 ..;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",54,0)
 ..;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",55,0)
 ..S ECCN=0
"RTN","ECXRAD",56,0)
 ..F  S ECCN=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN)) Q:ECCN'>0  D
"RTN","ECXRAD",57,0)
 ...S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",58,0)
 ...S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",59,0)
 ...S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",60,0)
 ...S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",61,0)
 ...S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDOCNPI="",ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",62,0)
 ...S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",63,0)
 ...;get the primary interpreting staff and the person class DBIA #65
"RTN","ECXRAD",64,0)
 ...S ECXIS=$P(ECCA,U,15),ECXISPC=$$PRVCLASS^ECXUTL(ECXIS,ECDT)
"RTN","ECXRAD",65,0)
 ...S ECXIS="2"_ECXIS
"RTN","ECXRAD",66,0)
 ...;get the principal clinic ien DBIA #65
"RTN","ECXRAD",67,0)
 ...S ECXPRCL=$P(ECCA,U,8)
"RTN","ECXRAD",68,0)
 ...;get the clinic stop code from file #44
"RTN","ECXRAD",69,0)
 ...S ECXCSC=$$GET1^DIQ(40.7,$$GET1^DIQ(44,ECXPRCL,8,"I"),1)
"RTN","ECXRAD",70,0)
 ...Q:'ECPRO 
"RTN","ECXRAD",71,0)
 ...Q:+ECSTAT=0
"RTN","ECXRAD",72,0)
 ...;get CPT code & modifiers
"RTN","ECXRAD",73,0)
 ...S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",74,0)
 ...;quit if this is a 'parent' procedure
"RTN","ECXRAD",75,0)
 ...S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",76,0)
 ...Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",77,0)
 ...;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",78,0)
 ...K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",79,0)
 ...I $D(ARR("LABEL")) D
"RTN","ECXRAD",80,0)
 ....K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",81,0)
 ....Q:$D(ERR("DIERR"))
"RTN","ECXRAD",82,0)
 ....S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",83,0)
 ....Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",84,0)
 ....F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",85,0)
 ...S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",86,0)
 ...;get procedure radiology modifiers
"RTN","ECXRAD",87,0)
 ...S ECMOD=0,ECMODS=""
"RTN","ECXRAD",88,0)
 ...F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",89,0)
 ...S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",90,0)
 ...D FILE
"RTN","ECXRAD",91,0)
 Q
"RTN","ECXRAD",92,0)
 ;
"RTN","ECXRAD",93,0)
FILE ;file record
"RTN","ECXRAD",94,0)
 ;node0
"RTN","ECXRAD",95,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",96,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",97,0)
 ;imaging type^primary care team^primary care provider
"RTN","ECXRAD",98,0)
 ;node1
"RTN","ECXRAD",99,0)
 ;mpi^dss dept^req physician npi^pc provider npi^pc prov person class^
"RTN","ECXRAD",100,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^
"RTN","ECXRAD",101,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",102,0)
 ;dss product ECXDSSP^requesting provider person class ECDOCPC^interp-
"RTN","ECXRAD",103,0)
 ;reting radiologist ECXIS^interpreting radiologist pc ECXISPC^princi-
"RTN","ECXRAD",104,0)
 ;pal clinic ECXPRCL^clinc stop code ECXCSC
"RTN","ECXRAD",105,0)
 N DA,DIK
"RTN","ECXRAD",106,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",107,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",108,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",109,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTS_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",110,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",111,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECDOCNPI_U_ECPTNPI_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",112,0)
 S ECODE1=ECODE1_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",113,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",114,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",115,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXIS_U_ECXISPC_U_ECXPRCL_U_ECXCSC
"RTN","ECXRAD",116,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXRAD",117,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",118,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",119,0)
 Q
"RTN","ECXRAD",120,0)
 ;
"RTN","ECXRAD",121,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",122,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",123,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",124,0)
 Q
"RTN","ECXSCX1")
0^4^B65910787
"RTN","ECXSCX1",1,0)
ECXSCX1 ;ALB/JAP,BIR/DMA-Clinic Extract Message ; 8/10/05 7:10pm
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;**8,28,24,27,29,30,31,33,84**;Dec 22, 1997
"RTN","ECXSCX1",3,0)
EN ;entry point from ecxscx
"RTN","ECXSCX1",4,0)
 N ECX
"RTN","ECXSCX1",5,0)
 ;send missing clinic message
"RTN","ECXSCX1",6,0)
 S ECX=$O(^TMP($J,"ECXS","MISS",0)) D
"RTN","ECXSCX1",7,0)
 .Q:ECX=""
"RTN","ECXSCX1",8,0)
 .S XMSUB="MISSING CLINICS in File #728.44",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",9,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",10,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","MISS",ECX,0)=$P($T(MSG+ECX),";;",2)
"RTN","ECXSCX1",11,0)
 .S XMTEXT="^TMP($J,""ECXS"",""MISS""," D ^XMD
"RTN","ECXSCX1",12,0)
 ;send no division message
"RTN","ECXSCX1",13,0)
 S ECX=$O(^TMP($J,"ECXS","DIV",0)) D
"RTN","ECXSCX1",14,0)
 .Q:ECX=""
"RTN","ECXSCX1",15,0)
 .S XMSUB="CLINICS w/o DIVISION Data",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",16,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",17,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","DIV",ECX,0)=$P($T(MSG2+ECX),";;",2)
"RTN","ECXSCX1",18,0)
 .S XMTEXT="^TMP($J,""ECXS"",""DIV""," D ^XMD
"RTN","ECXSCX1",19,0)
 ;cleanup
"RTN","ECXSCX1",20,0)
 K ^TMP($J,"ECXS")
"RTN","ECXSCX1",21,0)
 Q
"RTN","ECXSCX1",22,0)
MSG ;text for missing clinic
"RTN","ECXSCX1",23,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",24,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",25,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",26,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",27,0)
 ;;  
"RTN","ECXSCX1",28,0)
 ;
"RTN","ECXSCX1",29,0)
MSG2 ;text for missing division
"RTN","ECXSCX1",30,0)
 ;;The following clinics in the HOSPITAL LOCATION file (#44) have not
"RTN","ECXSCX1",31,0)
 ;;been assigned to a division from the MEDICAL CENTER DIVISION file 
"RTN","ECXSCX1",32,0)
 ;;(#40.8).  CLI extract records associated with these clinics have
"RTN","ECXSCX1",33,0)
 ;;been given a default Division identifier of "1".
"RTN","ECXSCX1",34,0)
 ;;
"RTN","ECXSCX1",35,0)
 ;
"RTN","ECXSCX1",36,0)
MISS ;load ^tmp if clinic missing from #728.44
"RTN","ECXSCX1",37,0)
 N DAT,ID,RD
"RTN","ECXSCX1",38,0)
 S (ID,RD)=""
"RTN","ECXSCX1",39,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",40,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",41,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",42,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",43,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",44,0)
 S ^TMP($J,"ECXS","MISS",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)_ECSC_"/"_ECCSC
"RTN","ECXSCX1",45,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",46,0)
 Q
"RTN","ECXSCX1",47,0)
 ;
"RTN","ECXSCX1",48,0)
NODIV ;load ^tmp if clinic w/o division
"RTN","ECXSCX1",49,0)
 N DAT,ID,RD
"RTN","ECXSCX1",50,0)
 S (ID,RD)=""
"RTN","ECXSCX1",51,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",52,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",53,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",54,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",55,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",56,0)
 S ^TMP($J,"ECXS","DIV",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)
"RTN","ECXSCX1",57,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",58,0)
 Q
"RTN","ECXSCX1",59,0)
 ;
"RTN","ECXSCX1",60,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND,ECXDIV) ;get transmission style and feeder key variables
"RTN","ECXSCX1",61,0)
 ;feeder key = primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator
"RTN","ECXSCX1",62,0)
 ;   input
"RTN","ECXSCX1",63,0)
 ;   ECXSC = ien of clinic in file #44 (required)
"RTN","ECXSCX1",64,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX1",65,0)
 ;   ECXP1,ECXP2,ECXP3,ECXSEND passed by reference (required)
"RTN","ECXSCX1",66,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX1",67,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX1",68,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX1",69,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX1",70,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX1",71,0)
 ;   ECXDIV  = field #3.5 of file #44
"RTN","ECXSCX1",72,0)
 N ECSC,ECCSC,ECSD1,ECXNC,ECXMISS,CLIN,SC
"RTN","ECXSCX1",73,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000"
"RTN","ECXSCX1",74,0)
 S ECXSEND=1,ECXDIV=0
"RTN","ECXSCX1",75,0)
 Q:+ECXSC=0
"RTN","ECXSCX1",76,0)
 ;get needed data from ^tmp
"RTN","ECXSCX1",77,0)
 I $D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",78,0)
 .S CLIN=^TMP($J,"ECXS","SC",ECXSC)
"RTN","ECXSCX1",79,0)
 .S ECXP1=$P(CLIN,U),ECXP2=$P(CLIN,U,2),ECXP3=$P(CLIN,U,3),ECXSEND=$P(CLIN,U,4),ECXDIV=$P(CLIN,U,5)
"RTN","ECXSCX1",80,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4) S:ECXDIV=0 ECXDIV=1
"RTN","ECXSCX1",81,0)
 ;otherwise, set needed data in ^tmp
"RTN","ECXSCX1",82,0)
 I '$D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",83,0)
 .;get division or send no division msg
"RTN","ECXSCX1",84,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4)
"RTN","ECXSCX1",85,0)
 .I ECXDIV=0 S SC=ECXSC D NODIV S ECXDIV=1
"RTN","ECXSCX1",86,0)
 .;get other data from file #44 if no #727.44 record; send missing clinic msg
"RTN","ECXSCX1",87,0)
 .I '$D(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",88,0)
 ..S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P(^(0),U,18)
"RTN","ECXSCX1",89,0)
 ..S SC=ECXSC,ECSD1=ECXSD D MISS
"RTN","ECXSCX1",90,0)
 ..S:ECSC ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2),ECXP1=$$RJ^XLFSTR(+ECXP1,3,0)
"RTN","ECXSCX1",91,0)
 .;otherwise get other data from file #728.44
"RTN","ECXSCX1",92,0)
 .S EC=$G(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",93,0)
 ..Q:EC=""
"RTN","ECXSCX1",94,0)
 ..S ECXSEND=$P(EC,U,6)
"RTN","ECXSCX1",95,0)
 ..Q:ECXSEND=6
"RTN","ECXSCX1",96,0)
 ..S ECSC=+$P(EC,U,4),ECCSC=+$P(EC,U,5)
"RTN","ECXSCX1",97,0)
 ..I 'ECSC S ECSC=+$P(EC,U,2),ECCSC=+$P(EC,U,3)
"RTN","ECXSCX1",98,0)
 ..I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX1",99,0)
 ..;if primary stop not valid, use file #44 record
"RTN","ECXSCX1",100,0)
 ..I 'ECSC S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P($G(^(0)),U,18) I ECSC D
"RTN","ECXSCX1",101,0)
 ...S ECXP1=+$P($G(^DIC(40.7,ECSC,0)),U,2)
"RTN","ECXSCX1",102,0)
 ...S:ECCSC ECXP2=+$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXSCX1",103,0)
 ...S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX1",104,0)
 .;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX1",105,0)
 .I ECXSEND=1 S ECXP2="000"
"RTN","ECXSCX1",106,0)
 .;action code of 2 or 3 should not be used, but continue to follow v2t11 logic
"RTN","ECXSCX1",107,0)
 .I ECXSEND=2 S ECXP1=ECXP2,ECXP2="000"
"RTN","ECXSCX1",108,0)
 .;for action code=4, need to get national clinic code
"RTN","ECXSCX1",109,0)
 .I ECXSEND=4 D
"RTN","ECXSCX1",110,0)
 ..S ECXNC=+$P($G(^ECX(728.44,ECXSC,0)),U,8)
"RTN","ECXSCX1",111,0)
 ..I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),U),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX1",112,0)
 .;set data in ^tmp
"RTN","ECXSCX1",113,0)
 .S ^TMP($J,"ECXS","SC",ECXSC)=ECXP1_U_ECXP2_U_ECXP3_U_ECXSEND
"RTN","ECXSCX1",114,0)
 Q
"RTN","ECXSCX1",115,0)
 ;
"RTN","ECXSCX1",116,0)
VISIT(ECXDFN,ECXVISIT,ECXVIST,ECXERR) ;get visit specific data
"RTN","ECXSCX1",117,0)
 ;input  ECXVISIT  = pointer to file #9000010
"RTN","ECXSCX1",118,0)
 ;       ECXSVC  = sc percentage
"RTN","ECXSCX1",119,0)
 ;output ECXVSIT = data array
"RTN","ECXSCX1",120,0)
 ;       ECXERR  = 1 indicates error; otherwise, 0
"RTN","ECXSCX1",121,0)
 N AO,ARRAY,CM,CNT,CPT,DA,DATE,DA,DIQ,ICD,ICD9,IR,LEN,M,MOD,MST,NUM
"RTN","ECXSCX1",122,0)
 N PROV,PROVPC,REC,VAL,VISIT,X,Y,PGE
"RTN","ECXSCX1",123,0)
 S ECXERR=0,VISIT=ECXVISIT
"RTN","ECXSCX1",124,0)
 S (ECXVIST("AO"),ECXVIST("IR"),ECXVIST("PGE"))=""
"RTN","ECXSCX1",125,0)
 S (ECXVIST("MST"),ECXVIST("PROV"),ECXVIST("PROV CLASS"))=""
"RTN","ECXSCX1",126,0)
 S (ECXVIST("PROV NPI"),ECXVIST("SOURCE"))=""
"RTN","ECXSCX1",127,0)
 F I="P",1,2,3,4 S ECXVIST("ICD9"_I)=""
"RTN","ECXSCX1",128,0)
 F I=1:1:8 S ECXVIST("CPT"_I)=""
"RTN","ECXSCX1",129,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ECXSCX1",130,0)
 I $O(^TMP("PXKENC",$J,VISIT,""))']"" K ECXVIST S ECXERR=1
"RTN","ECXSCX1",131,0)
 Q:ECXERR
"RTN","ECXSCX1",132,0)
 S DATE=$P($P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),U,1),".",1)
"RTN","ECXSCX1",133,0)
 S ECXVIST("SOURCE")=$P($G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,812)),U,3)
"RTN","ECXSCX1",134,0)
 ;get icd9 codes upto 5; else use 799.9
"RTN","ECXSCX1",135,0)
 K ARY S ICD("P")=0,ICD("S")=0,(ARY,REC)=""
"RTN","ECXSCX1",136,0)
 F  S REC=$O(^TMP("PXKENC",$J,VISIT,"POV",REC)) Q:REC=""  D
"RTN","ECXSCX1",137,0)
 .S VAL=^TMP("PXKENC",$J,VISIT,"POV",REC,0) Q:'VAL
"RTN","ECXSCX1",138,0)
 .I $P(VAL,U,12)="P" D
"RTN","ECXSCX1",139,0)
 ..S:'$D(ARY("P",+VAL)) CNT=ICD("P")+1,ICD("P",CNT)=+VAL,ICD("P")=CNT
"RTN","ECXSCX1",140,0)
 ..S ARY("P",+VAL)=""
"RTN","ECXSCX1",141,0)
 .I $P(VAL,U,12)'="P" D
"RTN","ECXSCX1",142,0)
 ..S:'$D(ARY("S",+VAL)) CNT=ICD("S")+1,ICD("S",CNT)=+VAL,ICD("S")=CNT
"RTN","ECXSCX1",143,0)
 ..S ARY("S",+VAL)=""
"RTN","ECXSCX1",144,0)
 S CNT=0,ECXVIST("ICD9P")=$P($G(^ICD9(+$G(ICD("P",1),0),0)),U)
"RTN","ECXSCX1",145,0)
 F I=2:1 Q:'$D(ICD("P",I))  D  Q:CNT>4
"RTN","ECXSCX1",146,0)
 .S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$P($G(^ICD9(ICD("P",I),0)),U)
"RTN","ECXSCX1",147,0)
 I CNT<4 F I=1:1:8 Q:'$D(ICD("S",I))  D  Q:CNT>4
"RTN","ECXSCX1",148,0)
 .I '$D(ARY("P",ICD("S",I))) D
"RTN","ECXSCX1",149,0)
 ..S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$P($G(^ICD9(ICD("S",I),0)),U)
"RTN","ECXSCX1",150,0)
 S:(ECXVIST("ICD9P")="")&(ECXVIST("ICD91")="") ECXVIST("ICD9P")="799.9"
"RTN","ECXSCX1",151,0)
 ;get first provider designated as primary
"RTN","ECXSCX1",152,0)
 ;if no primary, then get first physician provider
"RTN","ECXSCX1",153,0)
 ;if no physician, then get first provider
"RTN","ECXSCX1",154,0)
 S (PROV,PROVPC)=""
"RTN","ECXSCX1",155,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",156,0)
 .S (REC,VAL)=0 D
"RTN","ECXSCX1",157,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",158,0)
 ...S:($P(^(REC,0),U,4)="P") VAL=+^(0)
"RTN","ECXSCX1",159,0)
 ...S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",160,0)
 .I 'VAL S (REC,VAL)=0 D
"RTN","ECXSCX1",161,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",162,0)
 ...S (PROV,VAL)=+^(REC,0)
"RTN","ECXSCX1",163,0)
 ...S PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE) Q:PROVPC=""
"RTN","ECXSCX1",164,0)
 ...S NUM=$E(PROVPC,2,7) S:(NUM<110000)!(NUM>119999) VAL=0,PROVPC=""
"RTN","ECXSCX1",165,0)
 .I 'VAL D
"RTN","ECXSCX1",166,0)
 ..S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",0)) Q:('REC)!(VAL)
"RTN","ECXSCX1",167,0)
 ..S VAL=+^(REC,0),PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",168,0)
 .S:PROV]"" PROV="2"_PROV
"RTN","ECXSCX1",169,0)
 S ECXVIST("PROV")=PROV,ECXVIST("PROV CLASS")=PROVPC
"RTN","ECXSCX1",170,0)
 S ECXVIST("PROV NPI")=""
"RTN","ECXSCX1",171,0)
 ;get cpt codes upto 8 & modifiers upto 5
"RTN","ECXSCX1",172,0)
 S CNT=1,PROV=$E(PROV,2,99)
"RTN","ECXSCX1",173,0)
 D:$O(^TMP("PXKENC",$J,VISIT,"CPT",0))
"RTN","ECXSCX1",174,0)
 .S REC=0 D:PROV]""
"RTN","ECXSCX1",175,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",176,0)
 ...S CPT="",NODE=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,12))
"RTN","ECXSCX1",177,0)
 ...Q:NODE=""
"RTN","ECXSCX1",178,0)
 ...S NOD1=$S($P(NODE,U,4)=PROV:^TMP("PXKENC",$J,VISIT,"CPT",REC,0),1:"")
"RTN","ECXSCX1",179,0)
 ...Q:$P(NOD1,U)=""
"RTN","ECXSCX1",180,0)
 ...S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",181,0)
 ...S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",182,0)
 ...F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",183,0)
 ....S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",184,0)
 ....S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",185,0)
 ...S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q),CNT=CNT+1
"RTN","ECXSCX1",186,0)
 ...K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",187,0)
 ..Q:CNT>8
"RTN","ECXSCX1",188,0)
 .Q:CNT>8  S REC=0
"RTN","ECXSCX1",189,0)
 .F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",190,0)
 ..S CPT="",NOD1=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,0))
"RTN","ECXSCX1",191,0)
 ..Q:$P(NOD1,U)=""
"RTN","ECXSCX1",192,0)
 ..S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",193,0)
 ..S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",194,0)
 ..F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",195,0)
 ...S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",196,0)
 ...S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",197,0)
 ..S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q),CNT=CNT+1
"RTN","ECXSCX1",198,0)
 ..K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",199,0)
 ..Q:CNT>8
"RTN","ECXSCX1",200,0)
 S:ECXVIST("CPT1")="" ECXVIST("CPT1")=9919901
"RTN","ECXSCX1",201,0)
 ;ao, ir, mst
"RTN","ECXSCX1",202,0)
 S (AO,IR,MST)=""
"RTN","ECXSCX1",203,0)
 I $D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800)) D
"RTN","ECXSCX1",204,0)
 .S AO=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,2)
"RTN","ECXSCX1",205,0)
 .S IR=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,3),MST=$P(^(800),U,5),PGE=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,4)
"RTN","ECXSCX1",206,0)
 .S ECXVIST("AO")=$S(AO=0:"N",AO=1:"Y",1:"")
"RTN","ECXSCX1",207,0)
 .S ECXVIST("IR")=$S(IR=0:"N",IR=1:"Y",1:"")
"RTN","ECXSCX1",208,0)
 .S ECXVIST("MST")=$S(MST=0:"N",MST=1:"Y",1:"")
"RTN","ECXSCX1",209,0)
 .S ECXVIST("PGE")=$S(PGE=1:"Y",1:"")
"RTN","ECXSCX1",210,0)
 Q
"RTN","ECXSCX2")
0^1^B7985175
"RTN","ECXSCX2",1,0)
ECXSCX2 ;ALB/ESD  DSS Clinic Extract Utilities (continued) ; 5/9/05 10:40am
"RTN","ECXSCX2",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,49,71,84**;Dec 22, 1997
"RTN","ECXSCX2",3,0)
 ;
"RTN","ECXSCX2",4,0)
 ;
"RTN","ECXSCX2",5,0)
INTPAT ;initialize patient variables
"RTN","ECXSCX2",6,0)
 S (ECXSSN,ECXPNM,ECPTPR,ECCLAS,ECPTNPI,ECASPR,ECCLAS2,ECASNPI,ECXZIP)=""
"RTN","ECXSCX2",7,0)
 S (ECPTTM,ECXVET,ECXRACE,ECXENRL,ECXMPI,ECXSEX)=""
"RTN","ECXSCX2",8,0)
 S (ECXDOB,ECXELIG,ECXPST,ECXPLOC,ECXRST,ECXAST,ECXMST,ECXSTATE)=""
"RTN","ECXSCX2",9,0)
 S (ECXCNTY,ECXATYP,ECXPVST,ECXMTST,ECXEST,ECXECE)=""
"RTN","ECXSCX2",10,0)
 Q
"RTN","ECXSCX2",11,0)
 ;
"RTN","ECXSCX2",12,0)
PAT1(ECXDFN,ECXDATE,ECXERR)     ;get patient demographic data
"RTN","ECXSCX2",13,0)
 N ECXPAT,K,OK,X
"RTN","ECXSCX2",14,0)
 S ECXERR=0
"RTN","ECXSCX2",15,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;4;5",.ECXPAT)
"RTN","ECXSCX2",16,0)
 I 'OK S ECXERR=1 Q
"RTN","ECXSCX2",17,0)
 S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXSCX2",18,0)
 S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXSCX2",19,0)
 S ECXVET=ECXPAT("VET"),ECXSVC=ECXPAT("SC%"),ECXRACE=ECXPAT("RACE")
"RTN","ECXSCX2",20,0)
 S ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXSCX2",21,0)
 S ECXRST=ECXPAT("IR STAT"),ECXAST=ECXPAT("AO STAT")
"RTN","ECXSCX2",22,0)
 S ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE")
"RTN","ECXSCX2",23,0)
 S ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP")
"RTN","ECXSCX2",24,0)
 S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXSCX2",25,0)
 ; changes for 2001
"RTN","ECXSCX2",26,0)
 S ECXPOS=ECXPAT("POS"),ECXPHI=ECXPAT("PHI")
"RTN","ECXSCX2",27,0)
 ;- Agent Orange location
"RTN","ECXSCX2",28,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXSCX2",29,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXSCX2",30,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSCX2",31,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",32,0)
 ; - Race and Ethnicity
"RTN","ECXSCX2",33,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXSCX2",34,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXSCX2",35,0)
 ; - Environmental Contminants
"RTN","ECXSCX2",36,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXSCX2",37,0)
 Q
"RTN","ECXSCX2",38,0)
 ;
"RTN","ECXSCX2",39,0)
PAT2(ECXDFN,ECXDATE)    ;get date specific patient data
"RTN","ECXSCX2",40,0)
 N K,X
"RTN","ECXSCX2",41,0)
 ;get primary care data
"RTN","ECXSCX2",42,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXSCX2",43,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXSCX2",44,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXSCX2",45,0)
 ;get inpatient data
"RTN","ECXSCX2",46,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXTS=$P(X,U,3)
"RTN","ECXSCX2",47,0)
 S ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXSCX2",48,0)
 ;- set national patient record flag if exist
"RTN","ECXSCX2",49,0)
 D NPRF^ECXUTL5
"RTN","ECXSCX2",50,0)
 Q
"RTN","ECXSCX2",51,0)
 ;
"RTN","ECXSCX2",52,0)
FILE2(ECXFILE,EC7,ECODE) ;file record
"RTN","ECXSCX2",53,0)
 N DA,DIK,X S X=""
"RTN","ECXSCX2",54,0)
 F  S X=$O(ECODE(X)) Q:X=""  S ^ECX(ECXFILE,EC7,X)=ECODE(X)
"RTN","ECXSCX2",55,0)
 S DA=EC7,DIK="^ECX("_ECXFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSCX2",56,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX2",57,0)
 Q
"RTN","ECXSCX2",58,0)
 ;
"RTN","ECXSCX2",59,0)
CBOC(MDIV) ;Determine whether patient's facility was CBOC
"RTN","ECXSCX2",60,0)
 N LOCARR,DIC,DR,DIQ,DA,INST,FTYP
"RTN","ECXSCX2",61,0)
 S DIC=40.8,DA=MDIV,DR=".07",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",62,0)
 S INST=$G(LOCARR(40.8,MDIV,.07,"I")) I INST="" Q ""
"RTN","ECXSCX2",63,0)
 K LOCARR S DIC=4,DA=INST,DR="13",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",64,0)
 S FTYP=$G(LOCARR(4,INST,13,"I")) I FTYP="" Q ""
"RTN","ECXSCX2",65,0)
 K LOCARR S DIC=4.1,DA=FTYP,DR=".01",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",66,0)
 Q $S($G(LOCARR(4.1,FTYP,.01,"I"))="CBOC":"Y",1:"")
"RTN","ECXSCXN")
0^3^B53183889
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ; 5/9/05 1:15pm
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84**;Dec 22, 1997
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,PROCESS,SOURCE,STOP,STAT,TOSEND
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",12,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",13,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI)=""
"RTN","ECXSCXN",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",15,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",16,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",17,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",18,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",19,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",20,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",21,0)
 .D EN^DIQ1
"RTN","ECXSCXN",22,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",23,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",24,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",25,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",26,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",27,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",28,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",29,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",30,0)
 ;send missing clinic msg
"RTN","ECXSCXN",31,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",32,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",33,0)
 Q
"RTN","ECXSCXN",34,0)
 ;
"RTN","ECXSCXN",35,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",36,0)
 N CHKOUT,ECD,JJ,K,OUT,PNODE,PP,STAT,STOP,MDIV
"RTN","ECXSCXN",37,0)
 S ECD=ECSD1
"RTN","ECXSCXN",38,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",39,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",40,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",41,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",42,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",43,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",44,0)
 ..S ECXTI=$P($$FMTE^XLFDT(+$G(LOCARR(409.68,ECXIEN,.01,"I")),1),"@",2)
"RTN","ECXSCXN",45,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",46,0)
 ..S:ECXTI="000000" ECXTI="000300" S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I"))
"RTN","ECXSCXN",47,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",48,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",49,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",50,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",51,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",52,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",53,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",54,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",55,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",56,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",57,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",58,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",59,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",62,0)
 ..S ECXERR=0
"RTN","ECXSCXN",63,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",64,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",65,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",66,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",67,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",68,0)
 ..;get date specific patient data
"RTN","ECXSCXN",69,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",70,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",71,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",72,0)
 ..;get visit specific data
"RTN","ECXSCXN",73,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",74,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",75,0)
 ..S ECXICD9P=$G(ECXVIST("ICD9P"))
"RTN","ECXSCXN",76,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=$G(ECXVIST("ICD9"_I))
"RTN","ECXSCXN",77,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",78,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV")
"RTN","ECXSCXN",79,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",80,0)
 ..S ECXECE=ECXVIST("PGE")
"RTN","ECXSCXN",81,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",82,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",83,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",84,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",85,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",86,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",87,0)
 ..;xray (105) or lab (108)
"RTN","ECXSCXN",88,0)
 ..I (ECXSTOP=105)!(ECXSTOP=108) D  Q
"RTN","ECXSCXN",89,0)
 ...S ECXKEY=ECXSTOP_"00003000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",90,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE       ;- Don't file rec if no encounter num
"RTN","ECXSCXN",91,0)
 ..;appointments
"RTN","ECXSCXN",92,0)
 ..I PROCESS=1 D  Q     ;get appt length
"RTN","ECXSCXN",93,0)
 ...S (ALEN,JJ,OUT)=0
"RTN","ECXSCXN",94,0)
 ...F  S JJ=$O(^SC(ECXCLIN,"S",ECXDATE,JJ)) Q:('JJ)!(OUT)  S K=0 D
"RTN","ECXSCXN",95,0)
 ....F  S K=$O(^SC(ECXCLIN,"S",ECXDATE,JJ,K)) Q:('K)!(OUT)  D
"RTN","ECXSCXN",96,0)
 .....S ECXOBI=$G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,"OB")),PP=$P($G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,0)),U)
"RTN","ECXSCXN",97,0)
 .....S:PP=ECXDFN OUT=1,ALEN=$P(^(0),U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",98,0)
 .....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",99,0)
 ....S ECXSTOP=P1
"RTN","ECXSCXN",100,0)
 ....S PNODE=$G(^DPT(ECXDFN,"S",ECXDATE,0)),ECXPVST=$P(PNODE,U,7),ECXATYP=$P(PNODE,U,16)  ;Get purpose of visit & appt type
"RTN","ECXSCXN",101,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN",102,0)
 .....S ECXKEY=P1_P2_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",103,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",104,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",105,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",106,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",107,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",108,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",109,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",110,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",111,0)
 ...S ALEN=0
"RTN","ECXSCXN",112,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",113,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",114,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",115,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",116,0)
 ..;dispositions
"RTN","ECXSCXN",117,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",118,0)
 ...S ECXKEY=ECXSTOP_"47906000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",119,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",120,0)
 Q
"RTN","ECXSCXN",121,0)
 ;
"RTN","ECXSCXN",122,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",123,0)
 N STR
"RTN","ECXSCXN",124,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",125,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",126,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",127,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY_U_ECXOBI_U
"RTN","ECXSCXN",128,0)
 S STR(0)=STR(0)_ECXCLIN_U_ECXTS_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",129,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",130,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",131,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",132,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",133,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",134,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",135,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_$G(ECXNPIPR)_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",136,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",137,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",138,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",139,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",140,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",141,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",142,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",143,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",144,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",145,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",146,0)
 Q
"RTN","ECXSCXN",147,0)
 ;
"RTN","ECXSCXN",148,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",149,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",150,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",151,0)
 Q
"RTN","ECXSURG")
0^30^B54498715
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ; 9/15/05 2:49pm
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84**;Dec 22, 1997
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",10,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",11,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",12,0)
 ..I $D(^SRF(ECD0,0)) S ECXDFN=+$P(^(0),U,1) D STUFF Q:QFLG
"RTN","ECXSURG",13,0)
 Q
"RTN","ECXSURG",14,0)
 ;
"RTN","ECXSURG",15,0)
STUFF ;gather data
"RTN","ECXSURG",16,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",17,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",18,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXSURG",19,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",20,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",21,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",22,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",23,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",24,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",25,0)
 S DATAOP=$S($D(^SRF(ECD0,"OP")):^("OP"),1:"")
"RTN","ECXSURG",26,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",27,0)
 ;get data
"RTN","ECXSURG",28,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",29,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",30,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",31,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",32,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",33,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",34,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",35,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",36,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",37,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",38,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",39,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",40,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",41,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",42,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",43,0)
 ;look for non-OR
"RTN","ECXSURG",44,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP)=""
"RTN","ECXSURG",45,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",46,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",47,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",48,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",49,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",50,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",51,0)
 .;
"RTN","ECXSURG",52,0)
 .;- Get DSS Stop Code to use in encounter number
"RTN","ECXSURG",53,0)
 .S ECXSTOP=$P($G(^ECX(728.44,ECXNONL,0)),U,4)
"RTN","ECXSURG",54,0)
 ;
"RTN","ECXSURG",55,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",56,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",57,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",58,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",59,0)
 ;get service of attending surgeon
"RTN","ECXSURG",60,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",61,0)
 ;
"RTN","ECXSURG",62,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",63,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",64,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",65,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",66,0)
 ;
"RTN","ECXSURG",67,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",68,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",69,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",70,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",71,0)
 ;anesthesia technique
"RTN","ECXSURG",72,0)
 S ECANE="",PP=""
"RTN","ECXSURG",73,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",74,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",75,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",76,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",77,0)
 ;get primary procedure
"RTN","ECXSURG",78,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",79,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",80,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",81,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",82,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",83,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",84,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",85,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",86,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",87,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",88,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",89,0)
 .N ECNTIME,ECSTIME,ECATIME
"RTN","ECXSURG",90,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",91,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",92,0)
 .I (A1&A2)&(+J=1) D TIME  S ECATIME=TIME
"RTN","ECXSURG",93,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",94,0)
 ..;
"RTN","ECXSURG",95,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",96,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",97,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",98,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",99,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",100,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",101,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",102,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",103,0)
 ; -Recovery Room Time
"RTN","ECXSURG",104,0)
 S ECRR=""
"RTN","ECXSURG",105,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",106,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",107,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",108,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",109,0)
 ;
"RTN","ECXSURG",110,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",111,0)
 S ECXORCT=($$FMDIFF^XLFDT($P($G(DATA2),U,14),$P($G(DATA2),U,13),2)/60)/15
"RTN","ECXSURG",112,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",113,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",114,0)
 ;
"RTN","ECXSURG",115,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",116,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",117,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",118,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",119,0)
 .I CON S ECXPTHA=ECXPTHA/2
"RTN","ECXSURG",120,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",121,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",122,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",123,0)
 ;
"RTN","ECXSURG",124,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",125,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",126,0)
 ;
"RTN","ECXSURG",127,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",128,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",129,0)
 ;
"RTN","ECXSURG",130,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",131,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",132,0)
 ;
"RTN","ECXSURG",133,0)
 D FILE
"RTN","ECXSURG",134,0)
 ;get secondary procedures
"RTN","ECXSURG",135,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",136,0)
 S ECXJ=0
"RTN","ECXSURG",137,0)
 F  S ECXJ=$O(^SRF(ECD0,13,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(2)),$P(^(2),U)]"" D
"RTN","ECXSURG",138,0)
 .S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",139,0)
 .K ARR,ERR
"RTN","ECXSURG",140,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",141,0)
 ..K ARR,ERR
"RTN","ECXSURG",142,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",143,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",144,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",145,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",146,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",147,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",148,0)
 .D FILE
"RTN","ECXSURG",149,0)
 ;get prostheses
"RTN","ECXSURG",150,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",151,0)
 S ECXJ=0
"RTN","ECXSURG",152,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",153,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",154,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",155,0)
 .D FILE
"RTN","ECXSURG",156,0)
 Q
"RTN","ECXSURG",157,0)
 ;
"RTN","ECXSURG",158,0)
FILE ;file record
"RTN","ECXSURG",159,0)
 ;node0
"RTN","ECXSURG",160,0)
 ;division^dfn^ssn^name^in/out (ECXA)^day^case #^
"RTN","ECXSURG",161,0)
 ;surg specialty^or room #^
"RTN","ECXSURG",162,0)
 ;surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG",163,0)
 ;primary/secondary/prostheses^cpt^^pt time^op time^anes time^
"RTN","ECXSURG",164,0)
 ;prostheses^qty^^
"RTN","ECXSURG",165,0)
 ;movement number^treating specialty^cancel/abort (ECCAN)^time^or type^
"RTN","ECXSURG",166,0)
 ;attending's service^non-or dss id^recovery room time^^
"RTN","ECXSURG",167,0)
 ;primary care team^primary care provider^admission date
"RTN","ECXSURG",168,0)
 ;node1
"RTN","ECXSURG",169,0)
 ;mpi^dss dept ECXDSSD^surgeon npi^attending npi^anes supervisor npi^
"RTN","ECXSURG",170,0)
 ;pc provider npi^pc prov person class^
"RTN","ECXSURG",171,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXSURG",172,0)
 ;cpt&modifiers ECXCPT^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXSURG",173,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXSURG",174,0)
 ;period of service ECXPOS^purple heart indicator ECXPHI^
"RTN","ECXSURG",175,0)
 ;observ pat ind ECXOBS^encounter num ECXENC^ao loc ECXAOL^
"RTN","ECXSURG",176,0)
 ;production division ECXPDIV^head & neck canc ind ECXHNCI^
"RTN","ECXSURG",177,0)
 ;ethnicity ECXETH^race1 ECXRC1^new quantity ECXQ^
"RTN","ECXSURG",178,0)
 ;^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXSURG",179,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC
"RTN","ECXSURG",180,0)
 ;or clean time ECXORCT^time pt in hold area ECXPTHA^national patient
"RTN","ECXSURG",181,0)
 ;record flag ECXNPRFI^princ anesthetist ECXPA^princ anesthetist PC
"RTN","ECXSURG",182,0)
 ;ECXPAPC^surgeon person class ECSRPC^attending person class ECATPC
"RTN","ECXSURG",183,0)
 ;^anesthesia super person class ECSAPC
"RTN","ECXSURG",184,0)
 N DA,DIK,STR
"RTN","ECXSURG",185,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG",186,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSURG",187,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECD0_U_ECSS_U_ECO_U
"RTN","ECXSURG",188,0)
 S ECODE=ECODE_ECSR_U_ECAT_U_ECSA_U_ECANE_U_ECODE0_U
"RTN","ECXSURG",189,0)
 S STR=ECXMN_U_ECXTS_U_$S(ECCAN'="":ECCAN,1:"")_U_ECXTM_U_ECORTY_U
"RTN","ECXSURG",190,0)
 S STR=STR_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD_U
"RTN","ECXSURG",191,0)
 S $P(ECODE,U,26,38)=STR
"RTN","ECXSURG",192,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECSRNPI_U_ECATNPI_U_ECSANPI_U_ECPTNPI_U
"RTN","ECXSURG",193,0)
 S ECODE1=ECODE1_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXCPT_U_ECXDOM_U
"RTN","ECXSURG",194,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXSURG",195,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXPDIV_U_ECXHNCI_U
"RTN","ECXSURG",196,0)
 S ECODE1=ECODE1_ECXETH_U_ECXRC1_U_ECXQ_U
"RTN","ECXSURG",197,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXORCT_U_ECXPTHA_U_ECXNPRFI
"RTN","ECXSURG",198,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXPA_U_ECSRPC_U,ECODE2=ECATPC_U_ECSAPC_U_ECXPAPC
"RTN","ECXSURG",199,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXSURG",200,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSURG",201,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG",202,0)
 ;
"RTN","ECXSURG",203,0)
TIME ; given date/time get increment
"RTN","ECXSURG",204,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",205,0)
 N CON,TIMEDIF
"RTN","ECXSURG",206,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",207,0)
 ;
"RTN","ECXSURG",208,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",209,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",210,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",211,0)
 I 'CON D
"RTN","ECXSURG",212,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",213,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",214,0)
 I CON D
"RTN","ECXSURG",215,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",216,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",217,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",218,0)
 Q
"RTN","ECXSURG",219,0)
 ;
"RTN","ECXSURG",220,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",221,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",222,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",223,0)
 Q
"RTN","ECXSURG",224,0)
 ;
"RTN","ECXSURG",225,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG",226,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTRAC")
0^13^B55910461
"RTN","ECXTRAC",1,0)
ECXTRAC ;ALB/GTS,JAP,BIR/DMA,CML-Package Extracts for DSS ; 5/9/05 10:39am
"RTN","ECXTRAC",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,14,24,30,33,49,84**;Dec 22, 1997
"RTN","ECXTRAC",3,0)
 ;Date range, queuing and message sending for package extracts
"RTN","ECXTRAC",4,0)
 ;Input
"RTN","ECXTRAC",5,0)
 ;  ECPACK   printed name of package (e.g. Lab, Prescriptions)
"RTN","ECXTRAC",6,0)
 ;  ECNODE   in file 728 where last date is stored
"RTN","ECXTRAC",7,0)
 ;  ECPIECE  piece of node where last date is stored
"RTN","ECXTRAC",8,0)
 ;  ECRTN    in the form of START^ROUTINE
"RTN","ECXTRAC",9,0)
 ;  ECGRP    name of local mail group to receive summary message
"RTN","ECXTRAC",10,0)
 ;           (MUST BE 1 TO 5 UPPER CASE ALPHA - NO SPACES)
"RTN","ECXTRAC",11,0)
 ;  ECFILE   file number of the local editing file
"RTN","ECXTRAC",12,0)
 ;  ECXLOGIC Fiscal year extract logic to use (optional)
"RTN","ECXTRAC",13,0)
 ;  ECXDATES StartDate^EndDate^DoNotUpdate728 (optional)
"RTN","ECXTRAC",14,0)
 ;Generates
"RTN","ECXTRAC",15,0)
 ;  EC23=2nd and 3rd piece of zero node in local editing file
"RTN","ECXTRAC",16,0)
 ;      =YYMM of end date^pointer to 727
"RTN","ECXTRAC",17,0)
 ;  ECXLOGIC=Fiscal year extract logic to use
"RTN","ECXTRAC",18,0)
 ;
"RTN","ECXTRAC",19,0)
EN ;entry point
"RTN","ECXTRAC",20,0)
 N OUT,CHKFLG
"RTN","ECXTRAC",21,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",22,0)
 I '$D(ECHEAD) S ECHEAD=" "
"RTN","ECXTRAC",23,0)
 I $P($G(^ECX(728,1,ECNODE+.1)),U,ECPIECE)]"" D  Q
"RTN","ECXTRAC",24,0)
 .W !!,$C(7),ECPACK," extract is already scheduled to run",!!
"RTN","ECXTRAC",25,0)
 .D PAUSE
"RTN","ECXTRAC",26,0)
 W @IOF,!,"Extract ",ECPACK," Information for DSS",!!
"RTN","ECXTRAC",27,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXTRAC",28,0)
 S ECXINST=ECINST
"RTN","ECXTRAC",29,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRAC",30,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRAC",31,0)
 ;* get last date for all extracts except prosthetics
"RTN","ECXTRAC",32,0)
 I ECGRP'="PRO" D
"RTN","ECXTRAC",33,0)
 .S ECLDT=$S($D(^ECX(728,1,ECNODE)):$P(^(ECNODE),U,ECPIECE),1:2610624)
"RTN","ECXTRAC",34,0)
 .S:ECLDT="" ECLDT=2610624
"RTN","ECXTRAC",35,0)
 ;* get last date for prosthetics
"RTN","ECXTRAC",36,0)
 I ECGRP="PRO" D
"RTN","ECXTRAC",37,0)
 .N ECXDA1
"RTN","ECXTRAC",38,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTRAC",39,0)
 .I $D(^ECX(728,ECXDA1,1,ECXINST,0)) D
"RTN","ECXTRAC",40,0)
 ..S ECLDT=$P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)
"RTN","ECXTRAC",41,0)
 .I '$D(^ECX(728,ECXDA1,1,ECXINST,0)) D
"RTN","ECXTRAC",42,0)
 ..S DA(1)=ECXDA1
"RTN","ECXTRAC",43,0)
 ..S DIC(0)="L" K ECXDD
"RTN","ECXTRAC",44,0)
 ..D FIELD^DID(728,59,,"SPECIFIER","ECXDD")
"RTN","ECXTRAC",45,0)
 ..S DIC("P")=ECXDD("SPECIFIER") K ECXDD
"RTN","ECXTRAC",46,0)
 ..S DIC="^ECX(728,"_DA(1)_",1,",X=ECXINST,DINUM=X
"RTN","ECXTRAC",47,0)
 ..K DD,DO D FILE^DICN
"RTN","ECXTRAC",48,0)
 ..K DIC,X,DINUM,Y,DA
"RTN","ECXTRAC",49,0)
 ..S ECLDT=2610624
"RTN","ECXTRAC",50,0)
 S X=$G(ECXDATES) S ECSD=$P(X,"^",1),ECED=$P(X,"^",2)
"RTN","ECXTRAC",51,0)
 S OUT=0
"RTN","ECXTRAC",52,0)
 I (ECSD="")!(ECED="") F  S (ECED,ECSD)="" D  Q:OUT
"RTN","ECXTRAC",53,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: " D ^%DT
"RTN","ECXTRAC",54,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXTRAC",55,0)
 .S ECSD=Y
"RTN","ECXTRAC",56,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT
"RTN","ECXTRAC",57,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXTRAC",58,0)
 .I Y<ECSD D  Q
"RTN","ECXTRAC",59,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXTRAC",60,0)
 ..W !,"Please try again.",!!
"RTN","ECXTRAC",61,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXTRAC",62,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXTRAC",63,0)
 ..W !,"Please try again.",!!
"RTN","ECXTRAC",64,0)
 .S ECED=Y
"RTN","ECXTRAC",65,0)
 .I ECLDT'<ECSD D  Q
"RTN","ECXTRAC",66,0)
 ..W !!,"The ",ECPACK," information has already been extracted through ",$$FMTE^XLFDT(ECLDT),"."
"RTN","ECXTRAC",67,0)
 ..W !,"Please enter a new date range.",!!
"RTN","ECXTRAC",68,0)
 .S OUT=1
"RTN","ECXTRAC",69,0)
 I ECED]"",ECSD]"" D QUE
"RTN","ECXTRAC",70,0)
 Q
"RTN","ECXTRAC",71,0)
 ;
"RTN","ECXTRAC",72,0)
QUE ;queue extract
"RTN","ECXTRAC",73,0)
 N CHKFLG
"RTN","ECXTRAC",74,0)
 ;if extract is ivp (i.e., file=727.819) and data in the intermediate file use new format
"RTN","ECXTRAC",75,0)
 I ECFILE=727.819 D  Q:CHKFLG
"RTN","ECXTRAC",76,0)
 .S CHKFLG=0
"RTN","ECXTRAC",77,0)
 .S X="PSIVSTAT" X ^%ZOSF("TEST") I '$T Q
"RTN","ECXTRAC",78,0)
 .I '$D(^ECX(728.113,"A")) S CHKFLG=1 D NOIVP Q
"RTN","ECXTRAC",79,0)
 .S DATE=$O(^ECX(728.113,"A",ECED+1),-1) I DATE<ECSD S CHKFLG=1 D NOIVP Q
"RTN","ECXTRAC",80,0)
 .D CHK^ECXDIVIV Q:CHKFLG
"RTN","ECXTRAC",81,0)
 .D CHK2
"RTN","ECXTRAC",82,0)
 .S ECRTN="START^ECXPIVDN",ECVER=7
"RTN","ECXTRAC",83,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",84,0)
 I '$D(ECHEAD) S ECHEAD=""
"RTN","ECXTRAC",85,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTRAC",86,0)
 K ZTSAVE
"RTN","ECXTRAC",87,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ZTSAVE(X)=""
"RTN","ECXTRAC",88,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ZTSAVE(X)=""
"RTN","ECXTRAC",89,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST" S ZTSAVE(X)=""
"RTN","ECXTRAC",90,0)
 F X="ECXLOGIC","ECXDATES" S ZTSAVE(X)=""
"RTN","ECXTRAC",91,0)
 S ZTDESC=ECPACK_" EXTRACT: "_ECSDN_" TO "_ECEDN,ZTRTN="START^ECXTRAC",ZTIO=""
"RTN","ECXTRAC",92,0)
 D ^%ZTLOAD
"RTN","ECXTRAC",93,0)
 I $D(ZTSK) D
"RTN","ECXTRAC",94,0)
 .S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="R"
"RTN","ECXTRAC",95,0)
 .W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXTRAC",96,0)
 .D PAUSE
"RTN","ECXTRAC",97,0)
 Q
"RTN","ECXTRAC",98,0)
 ;
"RTN","ECXTRAC",99,0)
NOIVP ;cannot generate ivp message
"RTN","ECXTRAC",100,0)
 W !!,?5,"There does not appear to be any data in the IV EXTRACT DATA"
"RTN","ECXTRAC",101,0)
 W !,?5,"file (#728.113) for the selected date range."
"RTN","ECXTRAC",102,0)
 W !!,?5,"The IVP extract cannot be generated."
"RTN","ECXTRAC",103,0)
 D PAUSE
"RTN","ECXTRAC",104,0)
 Q
"RTN","ECXTRAC",105,0)
 ;
"RTN","ECXTRAC",106,0)
START ; entry when queued
"RTN","ECXTRAC",107,0)
 S QFLG=0
"RTN","ECXTRAC",108,0)
 L +^ECX(727,0) S EC=$P(^ECX(727,0),U,3)+1,$P(^(0),U,3,4)=EC_U_EC L -^ECX(727,0)
"RTN","ECXTRAC",109,0)
 S ^ECX(727,EC,0)=EC_U_DT_U_ECPACK_U_ECSD_U_$E(ECED,1,7)_U_U_DUZ
"RTN","ECXTRAC",110,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTRAC",111,0)
 S:ECFILE=727.816 ECFILE=727.827 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTRAC",112,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTRAC",113,0)
 I $G(ECXLOGIC)="" S ECXLOGIC=$$FISCAL^ECXUTL1(ECSD)
"RTN","ECXTRAC",114,0)
 S ^ECX(727,EC,"VER")=$G(ECVER)_"^"_ECXLOGIC
"RTN","ECXTRAC",115,0)
 S ^ECX(727,EC,"DIV")=ECXINST
"RTN","ECXTRAC",116,0)
 S DA=EC,DIK="^ECX(727," D IX^DIK K DIK,DA
"RTN","ECXTRAC",117,0)
 S ECRN=0,ECXYM=$$ECXYM^ECXUTL(ECED),EC23=ECXYM_U_EC
"RTN","ECXTRAC",118,0)
 S ECXSTART=$P($$HTE^XLFDT($H),":",1,2),ECXNOW=$H
"RTN","ECXTRAC",119,0)
 ;do specific extract
"RTN","ECXTRAC",120,0)
 D @ECRTN
"RTN","ECXTRAC",121,0)
 ;if task gets stop request, set ztstop and quit
"RTN","ECXTRAC",122,0)
 I QFLG D  Q
"RTN","ECXTRAC",123,0)
 .S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="",ZTSTOP=1
"RTN","ECXTRAC",124,0)
 .D QKILL
"RTN","ECXTRAC",125,0)
 .D QMSG
"RTN","ECXTRAC",126,0)
 .D ^ECXKILL
"RTN","ECXTRAC",127,0)
 ;Set last date for extract
"RTN","ECXTRAC",128,0)
 I '$P($G(ECXDATES),"^",3) D
"RTN","ECXTRAC",129,0)
 .;* set last date for all extracts except prosthetics
"RTN","ECXTRAC",130,0)
 .I ECGRP'="PRO" S $P(^ECX(728,1,ECNODE),U,ECPIECE)=$P(ECED,".") Q
"RTN","ECXTRAC",131,0)
 .;* set last date for prosthetics
"RTN","ECXTRAC",132,0)
 .N ECXDA1
"RTN","ECXTRAC",133,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTRAC",134,0)
 .S $P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)=$P(ECED,".")
"RTN","ECXTRAC",135,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRAC",136,0)
 S $P(^ECX(727,$P(EC23,U,2),0),U,6)=ECRN
"RTN","ECXTRAC",137,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTRAC",138,0)
 S ECLAST=$O(^ECX(ECFILE,99999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTRAC",139,0)
 D MSG
"RTN","ECXTRAC",140,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)=""
"RTN","ECXTRAC",141,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECXTRAC",142,0)
 Q
"RTN","ECXTRAC",143,0)
 ;
"RTN","ECXTRAC",144,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRAC",145,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRAC",146,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRAC",147,0)
 S ECMSG(1,0)="The DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN
"RTN","ECXTRAC",148,0)
 S ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)
"RTN","ECXTRAC",149,0)
 S ECMSG(3,0)="and completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_"."
"RTN","ECXTRAC",150,0)
 S ECMSG(4,0)=" "
"RTN","ECXTRAC",151,0)
 S ECMSG(5,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRAC",152,0)
 S ECMSG(6,0)=" "
"RTN","ECXTRAC",153,0)
 S ECMSG(7,0)="Extract time was [HH:MM:SS] "_$$HDIFF^XLFDT($H,ECXNOW,3)
"RTN","ECXTRAC",154,0)
 S ECMSG(8,0)=" "
"RTN","ECXTRAC",155,0)
 S X=$E(ECXLOGIC,5) S X=$S((X="")!(X=" "):"",1:"revision "_X_" of ")
"RTN","ECXTRAC",156,0)
 S ECMSG(9,0)="The data was extracted using "_X_"fiscal year "_$E(ECXLOGIC,1,4)_" logic."
"RTN","ECXTRAC",157,0)
 S ECMSG(10,0)=" "
"RTN","ECXTRAC",158,0)
 S XMTEXT="ECMSG("
"RTN","ECXTRAC",159,0)
 D ^XMD
"RTN","ECXTRAC",160,0)
 Q
"RTN","ECXTRAC",161,0)
 ;
"RTN","ECXTRAC",162,0)
QMSG ; send abort message to mail group 'DSS-ECGRP'
"RTN","ECXTRAC",163,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRAC",164,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRAC",165,0)
 S ECMSG(1,0)="The DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN
"RTN","ECXTRAC",166,0)
 S ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)_"."
"RTN","ECXTRAC",167,0)
 S ECMSG(3,0)=" "
"RTN","ECXTRAC",168,0)
 S ECMSG(4,0)="A user stop request was received by Taskmanager which caused processing"
"RTN","ECXTRAC",169,0)
 S ECMSG(5,0)="to terminate before completion.  Any records which may have been created"
"RTN","ECXTRAC",170,0)
 S ECMSG(6,0)="in file #"_ECFILE_" for this extract have been deleted."
"RTN","ECXTRAC",171,0)
 S ECMSG(7,0)=" "
"RTN","ECXTRAC",172,0)
 S XMTEXT="ECMSG("
"RTN","ECXTRAC",173,0)
 D ^XMD
"RTN","ECXTRAC",174,0)
 Q
"RTN","ECXTRAC",175,0)
 ;
"RTN","ECXTRAC",176,0)
QKILL ;delete records created for any extract stopped at user request
"RTN","ECXTRAC",177,0)
 N ECX,FILE,IEN,DA,DIK
"RTN","ECXTRAC",178,0)
 S FILE="^ECX("_ECFILE_","
"RTN","ECXTRAC",179,0)
 S ECX=$P(EC23,U,2)
"RTN","ECXTRAC",180,0)
 F  S IEN=$O(^ECX(ECFILE,999999999),-1) Q:($P(^ECX(ECFILE,IEN,0),U,3)'=ECX)  D
"RTN","ECXTRAC",181,0)
 .S DIK=FILE,DA=IEN D ^DIK
"RTN","ECXTRAC",182,0)
 Q
"RTN","ECXTRAC",183,0)
 ;
"RTN","ECXTRAC",184,0)
CHK2 ;iv extract check - all active iv rooms to have a division
"RTN","ECXTRAC",185,0)
 S EC=0
"RTN","ECXTRAC",186,0)
 F  S EC=$O(^PS(59.5,EC)) Q:'EC  I '$P(^PS(59.5,EC,0),U,4) D  Q:CHKFLG
"RTN","ECXTRAC",187,0)
 .S CHKFLG=$S('$G(^PS(59.5,EC,"I")):1,$G(^PS(59.5,EC,"I"))>DT:1,1:0)
"RTN","ECXTRAC",188,0)
 .I CHKFLG D
"RTN","ECXTRAC",189,0)
 ..W !!,"All active IV Rooms in the IV Room file (#59.5) must have a ""DIVISION""",!,"assigned to run this extract!"
"RTN","ECXTRAC",190,0)
 ..W !!,"This information can be entered using the DSS Extract Manager's Maintenance ",!,"option ""Enter/Edit IV Room Division""."
"RTN","ECXTRAC",191,0)
 ..D PAUSE
"RTN","ECXTRAC",192,0)
 Q
"RTN","ECXTRAC",193,0)
 ;
"RTN","ECXTRAC",194,0)
PAUSE ;pause screen
"RTN","ECXTRAC",195,0)
 N DIR,X,Y
"RTN","ECXTRAC",196,0)
 S OUT=0
"RTN","ECXTRAC",197,0)
 I $E(IOST)="C" D
"RTN","ECXTRAC",198,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXTRAC",199,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXTRAC",200,0)
 I 'Y S OUT=1
"RTN","ECXTRAC",201,0)
 W !!
"RTN","ECXTRAC",202,0)
 Q
"RTN","ECXTREX")
0^32^B11339972
"RTN","ECXTREX",1,0)
ECXTREX ;BPFO/JRP - Queue DSS Fiscal Year Specific Extract;8-AUG-2003 ; 8/11/05 1:04pm
"RTN","ECXTREX",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,84**;Dec 22, 1997
"RTN","ECXTREX",3,0)
 ;
"RTN","ECXTREX",4,0)
EN ;Main entry point
"RTN","ECXTREX",5,0)
 W @IOF
"RTN","ECXTREX",6,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","ECXTREX",7,0)
 W !,"****************************************************************"
"RTN","ECXTREX",8,0)
 W !,"*                                                              *"
"RTN","ECXTREX",9,0)
 W !,"* This option should be used with caution as it allows for the *"
"RTN","ECXTREX",10,0)
 W !,"* extraction of data using specified fiscal year logic.  This  *"
"RTN","ECXTREX",11,0)
 W !,"* gives the ability to extract fiscal year 200x data using     *"
"RTN","ECXTREX",12,0)
 W !,"* fiscal year 200(x+1) logic and vice versa.  Note that data   *"
"RTN","ECXTREX",13,0)
 W !,"* extracted via this method may or may not be transmittable to *"
"RTN","ECXTREX",14,0)
 W !,"* the DSS production queue at the Austin Automation Center.    *"
"RTN","ECXTREX",15,0)
 W !,"*                                                              *"
"RTN","ECXTREX",16,0)
 W !,"*--------------------------------------------------------------*"
"RTN","ECXTREX",17,0)
 W !,"*                                                              *"
"RTN","ECXTREX",18,0)
 W !,"* Note that this option does not update the last date used for *"
"RTN","ECXTREX",19,0)
 W !,"* the given extraction.  It also does not verify that the time *"
"RTN","ECXTREX",20,0)
 W !,"* frame selected is after the last date used for the extract.  *"
"RTN","ECXTREX",21,0)
 W !,"*                                                              *"
"RTN","ECXTREX",22,0)
 W !,"****************************************************************"
"RTN","ECXTREX",23,0)
 W !!
"RTN","ECXTREX",24,0)
 ;Pick extract to queue
"RTN","ECXTREX",25,0)
 S DIC="^ECX(727.1,"
"RTN","ECXTREX",26,0)
 S DIC(0)="AEQMZ"
"RTN","ECXTREX",27,0)
 S DIC("A")="Select DSS Extract to queue: "
"RTN","ECXTREX",28,0)
 S DIC("S")="I ('$P(^(0),U,12))&($P(^(0),U,8)'="""")&($G(^(7))'[""Inactive"")"
"RTN","ECXTREX",29,0)
 S DIC("W")="W ""("",$P(^(0),U,8),"")"""
"RTN","ECXTREX",30,0)
 D ^DIC
"RTN","ECXTREX",31,0)
 I ($D(DUOUT))!($D(DTOUT))!(Y<1) Q
"RTN","ECXTREX",32,0)
 N ECXRTN,ECXDA
"RTN","ECXTREX",33,0)
 S ECXDA=+Y
"RTN","ECXTREX",34,0)
 ;Get extraxt specific routine name
"RTN","ECXTREX",35,0)
 S ECXRTN=$G(^ECX(727.1,ECXDA,"ROU"))
"RTN","ECXTREX",36,0)
 I ECXRTN="" D  Q
"RTN","ECXTREX",37,0)
 .W !!,"Selected extract is not correctly defined in the EXTRACT"
"RTN","ECXTREX",38,0)
 .W !,"DEFINITIONS file (#727.1).  The ROUTINE field (#4) does not"
"RTN","ECXTREX",39,0)
 .W !,"have a value in it."
"RTN","ECXTREX",40,0)
 .W !
"RTN","ECXTREX",41,0)
 .D PAUSE
"RTN","ECXTREX",42,0)
 ;Get time frame for extract
"RTN","ECXTREX",43,0)
 N STRTDT,ENDDT,DIR,DIRUT,DIROUT,OUT,ECXDATES
"RTN","ECXTREX",44,0)
 S OUT=0 F  S (STRTDT,ENDDT)="" D  Q:OUT
"RTN","ECXTREX",45,0)
 .;Get start date (must be in past)
"RTN","ECXTREX",46,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",47,0)
 .S $P(DIR(0),"^",2)=":"_DT_":AEXP"
"RTN","ECXTREX",48,0)
 .S DIR("A")="Starting with Date: "
"RTN","ECXTREX",49,0)
 .D ^DIR
"RTN","ECXTREX",50,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)="" S OUT=1 Q
"RTN","ECXTREX",51,0)
 .S STRTDT=Y
"RTN","ECXTREX",52,0)
 .K DIR
"RTN","ECXTREX",53,0)
 .;Get end date (must be in same month; must be in past)
"RTN","ECXTREX",54,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",55,0)
 .S X=$E(STRTDT,1,5)_"01"
"RTN","ECXTREX",56,0)
 .S X=$$FMADD^XLFDT(X,32)
"RTN","ECXTREX",57,0)
 .S X=$$FMADD^XLFDT(X,-($E(X,6,7)))
"RTN","ECXTREX",58,0)
 .I X>DT S X=DT
"RTN","ECXTREX",59,0)
 .S $P(DIR(0),"^",2)=STRTDT_":"_X_":AEXP"
"RTN","ECXTREX",60,0)
 .S DIR("A")="Ending with Date: "
"RTN","ECXTREX",61,0)
 .S DIR("B")=$$FMTE^XLFDT(X,"5D")
"RTN","ECXTREX",62,0)
 .D ^DIR
"RTN","ECXTREX",63,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)=""  S OUT=1 Q
"RTN","ECXTREX",64,0)
 .S ENDDT=Y
"RTN","ECXTREX",65,0)
 .S OUT=1
"RTN","ECXTREX",66,0)
 Q:(STRTDT="")!(ENDDT="")
"RTN","ECXTREX",67,0)
 S ECXDATES=STRTDT_"^"_ENDDT_"^1"
"RTN","ECXTREX",68,0)
 ;Get extract logic to use
"RTN","ECXTREX",69,0)
 N ECXLOGIC
"RTN","ECXTREX",70,0)
 K DIR
"RTN","ECXTREX",71,0)
 S DIR("A")="Select fiscal year logic to use for extract"
"RTN","ECXTREX",72,0)
 S DIR(0)="SO^"
"RTN","ECXTREX",73,0)
 F X=2003,2004,2005,2006 D
"RTN","ECXTREX",74,0)
 .S Y=$E(X,5)
"RTN","ECXTREX",75,0)
 .S Y=$S((Y="")!(Y=" "):"",1:"Revision "_Y_" of ")
"RTN","ECXTREX",76,0)
 .S DIR(0)=DIR(0)_X_":"_Y_"Fiscal Year "_$E(X,1,4)_";"
"RTN","ECXTREX",77,0)
 D ^DIR
"RTN","ECXTREX",78,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","ECXTREX",79,0)
 S ECXLOGIC=Y
"RTN","ECXTREX",80,0)
 ;Queue extract
"RTN","ECXTREX",81,0)
 D @("BEG^"_ECXRTN)
"RTN","ECXTREX",82,0)
 Q
"RTN","ECXTREX",83,0)
PAUSE ;pause screen
"RTN","ECXTREX",84,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXTREX",85,0)
 S DIR(0)="E"
"RTN","ECXTREX",86,0)
 W !!
"RTN","ECXTREX",87,0)
 D ^DIR
"RTN","ECXTREX",88,0)
 W !!
"RTN","ECXTREX",89,0)
 Q
"RTN","ECXTRT")
0^18^B56480766
"RTN","ECXTRT",1,0)
ECXTRT ;ALB/JAP,BIR/DMA,CML,PTD-Treating Specialty Change Extract ; 8/19/05 9:28am
"RTN","ECXTRT",2,0)
 ;;3.0;DSS EXTRACTS;**1,8,17,24,33,35,39,46,49,84**;Dec 22, 1997
"RTN","ECXTRT",3,0)
BEG ;entry point from option
"RTN","ECXTRT",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXTRT",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXTRT",6,0)
 Q
"RTN","ECXTRT",7,0)
 ;
"RTN","ECXTRT",8,0)
START ; start package specific extract
"RTN","ECXTRT",9,0)
 N LOC,SPC,TRT,WRD
"RTN","ECXTRT",10,0)
 S QFLG=0
"RTN","ECXTRT",11,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXTRT",12,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXTRT",13,0)
 K ^TMP($J,"ECXTMP") S TRT=0
"RTN","ECXTRT",14,0)
 F  S TRT=$O(^DIC(45.7,TRT)) Q:+TRT=0  S SPC=$P(^DIC(45.7,TRT,0),U,2),^TMP($J,"ECXTMP",TRT)=SPC
"RTN","ECXTRT",15,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXTRT",16,0)
 ;loop through type 6 movements to get treating specialty and provider changes
"RTN","ECXTRT",17,0)
 F  S ECD=$O(^DGPM("ATT6",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)!(QFLG)  F  S ECDA=$O(^DGPM("ATT6",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",18,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",19,0)
 ..S ECXMVD1=$P(EC,U),WRD=$P(EC,U,6)
"RTN","ECXTRT",20,0)
 ..;
"RTN","ECXTRT",21,0)
 ..;- Call sets ECXA (In/Out indicator)
"RTN","ECXTRT",22,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD1,"1;",13)
"RTN","ECXTRT",23,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U)
"RTN","ECXTRT",24,0)
 ..;skip the record if its the admission treat. spec. change for this episode of care
"RTN","ECXTRT",25,0)
 ..Q:ECXADM=$P(EC,U,24)
"RTN","ECXTRT",26,0)
 ..S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",27,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",28,0)
 ..;get data for current (new) ts movement
"RTN","ECXTRT",29,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",30,0)
 ..D FINDLOC(ECD1,.LOC,.ECXSPCN,.ECXPRVN,.ECXATTN,.ECXMOVN,.ECXTRTN)
"RTN","ECXTRT",31,0)
 ..Q:ECXSPCN=""
"RTN","ECXTRT",32,0)
 ..S ECD2=$O(LOC(ECD1)) Q:ECD2=""
"RTN","ECXTRT",33,0)
 ..S ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",34,0)
 ..;get data for previous (losing) ts movement
"RTN","ECXTRT",35,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",36,0)
 ..;if ts has changed, find los on losing ts
"RTN","ECXTRT",37,0)
 ..D:ECXTRTL'=ECXTRTN PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",38,0)
 ..;whether ts has changed or not, see if primary provider has changed
"RTN","ECXTRT",39,0)
 ..;dont bother if there's no data on current primary provider or no change in provider
"RTN","ECXTRT",40,0)
 ..D:(ECXPRVN'="")&(ECXPRVN'=ECXPRVL) PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",41,0)
 ..;whether ts has changed or not, see if attending physician has changed
"RTN","ECXTRT",42,0)
 ..;dont bother if theres no data on current attending physician or no change in attending
"RTN","ECXTRT",43,0)
 ..D:(ECXATTN'="")&(ECXATTN'=ECXATTL) PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",44,0)
 ..S ECXDATE=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",45,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT),ECXDCDT=""
"RTN","ECXTRT",46,0)
 ..;- Production Division
"RTN","ECXTRT",47,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",48,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",49,0)
 ..S (ECXALNPI,ECXANNPI,ECXPLNPI,ECXPNNPI)=""
"RTN","ECXTRT",50,0)
 ..;
"RTN","ECXTRT",51,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",52,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",53,0)
 ..;
"RTN","ECXTRT",54,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",55,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",56,0)
 ..;
"RTN","ECXTRT",57,0)
 ..;- Get providers person classes
"RTN","ECXTRT",58,0)
 .. S ECXATLPC=$$PRVCLASS^ECXUTL($E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",59,0)
 .. S ECXPRNPC=$$PRVCLASS^ECXUTL($E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",60,0)
 .. S ECXATNPC=$$PRVCLASS^ECXUTL($E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",61,0)
 .. S ECXPRLPC=$$PRVCLASS^ECXUTL($E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",62,0)
 ..;
"RTN","ECXTRT",63,0)
 ..;- If no encounter number, don't file record
"RTN","ECXTRT",64,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",65,0)
 ..D:ECXENC'="" FILE
"RTN","ECXTRT",66,0)
 ;for nhcu episodes with intervening asih stays, the los calculated here is not accurate,
"RTN","ECXTRT",67,0)
 ;but it never has been; this is best solution within current extract framework;
"RTN","ECXTRT",68,0)
 ;at discharge the los calculated for nhcu apisodes will be the los since admission w/o asih los subtracted;
"RTN","ECXTRT",69,0)
 ;
"RTN","ECXTRT",70,0)
 ;loop through discharges to get last treating specialty
"RTN","ECXTRT",71,0)
 S ECD=ECSD1
"RTN","ECXTRT",72,0)
 F  S ECD=$O(^DGPM("ATT3",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT3",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",73,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",74,0)
 ..S ECXMVD1=$P(EC,U),WRD=$P(EC,U,6)
"RTN","ECXTRT",75,0)
 ..S (ECXDATE,ECXDCDT)=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",76,0)
 ..I ECXDCDT'>0 S ECXDCDT=""
"RTN","ECXTRT",77,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U,1)
"RTN","ECXTRT",78,0)
 ..S (ECXTRTN,ECXSPCN,ECXPRVN,ECXATTN)="" S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",79,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",80,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",81,0)
 ..;get ts change just before d/c
"RTN","ECXTRT",82,0)
 ..S ECD2=$O(LOC(ECD1)),ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",83,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",84,0)
 ..;
"RTN","ECXTRT",85,0)
 ..;- Call sets ECXA (In/Out indicator) using date before discharge
"RTN","ECXTRT",86,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD2,"1;",13)
"RTN","ECXTRT",87,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT)
"RTN","ECXTRT",88,0)
 ..;if closest ts change is admission ts, cant go back any further
"RTN","ECXTRT",89,0)
 ..S TRT=$O(LOC(ECD2,0)),REC=$O(LOC(ECD2,TRT,0))
"RTN","ECXTRT",90,0)
 ..I REC=ECXADM D
"RTN","ECXTRT",91,0)
 ...S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOS=X
"RTN","ECXTRT",92,0)
 ...I ECXPRVL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSP=X
"RTN","ECXTRT",93,0)
 ...I ECXATTL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSA=X
"RTN","ECXTRT",94,0)
 ..;otherwise, need to find when change to last ts occurred
"RTN","ECXTRT",95,0)
 ..I REC'=ECXADM D
"RTN","ECXTRT",96,0)
 ...D PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",97,0)
 ...D PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",98,0)
 ...D PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",99,0)
 ..S:ECXLOS>9999 ECXLOS=9999 S:ECXLOSA>9999 ECXLOSA=9999
"RTN","ECXTRT",100,0)
 ..S:ECXLOSP>9999 ECXLOSP=9999
"RTN","ECXTRT",101,0)
 ..;- Production Division
"RTN","ECXTRT",102,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",103,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",104,0)
 ..S (ECXALNPI,ECXANNPI,ECXPLNPI,ECXPNNPI)=""
"RTN","ECXTRT",105,0)
 ..;
"RTN","ECXTRT",106,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",107,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",108,0)
 ..;
"RTN","ECXTRT",109,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",110,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",111,0)
 ..;
"RTN","ECXTRT",112,0)
 ..;- Get providers person classes
"RTN","ECXTRT",113,0)
 .. S ECXATLPC=$$PRVCLASS^ECXUTL($E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",114,0)
 .. S ECXPRNPC=$$PRVCLASS^ECXUTL($E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",115,0)
 .. S ECXATNPC=$$PRVCLASS^ECXUTL($E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",116,0)
 .. S ECXPRLPC=$$PRVCLASS^ECXUTL($E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",117,0)
 ..;
"RTN","ECXTRT",118,0)
 ..;- If no encounter number don't file record
"RTN","ECXTRT",119,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",120,0)
 ..D:ECXENC'="" FILE
"RTN","ECXTRT",121,0)
 D KPATDEM^ECXUTL2
"RTN","ECXTRT",122,0)
 Q
"RTN","ECXTRT",123,0)
 ;
"RTN","ECXTRT",124,0)
NPDIV(WRD) ;National Production Division
"RTN","ECXTRT",125,0)
 N DIV
"RTN","ECXTRT",126,0)
 S DIV=$$GET1^DIQ(42,WRD,.015,"I")
"RTN","ECXTRT",127,0)
 Q $S(DIV="":"",1:$$GETDIV^ECXDEPT(DIV))
"RTN","ECXTRT",128,0)
 ;
"RTN","ECXTRT",129,0)
SETLOC(ECXDFN,ECXADM,ECXPRO,ECXLOC) ;setup the local array from the ATS index
"RTN","ECXTRT",130,0)
 ; output
"RTN","ECXTRT",131,0)
 ; ECXLOC = local array (passed by reference)
"RTN","ECXTRT",132,0)
 ;
"RTN","ECXTRT",133,0)
 N SUB3,SUB4,SUB5,SPC,PRV,ATT,MOV
"RTN","ECXTRT",134,0)
 S SUB3=0
"RTN","ECXTRT",135,0)
 F  S SUB3=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3)) Q:SUB3=""  D
"RTN","ECXTRT",136,0)
 .S (SUB4,SUB5)=0
"RTN","ECXTRT",137,0)
 .S SUB4=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4))
"RTN","ECXTRT",138,0)
 .S SUB5=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4,SUB5))
"RTN","ECXTRT",139,0)
 .S ECXLOC(SUB3,SUB4,SUB5)="",SPC=$G(^TMP($J,"ECXTMP",SUB4))
"RTN","ECXTRT",140,0)
 .S DATA=$G(^DGPM(SUB5,0)),PRV=$P(DATA,U,8),ATT=$P(DATA,U,19)
"RTN","ECXTRT",141,0)
 .S MOV=$P(DATA,U,14)
"RTN","ECXTRT",142,0)
 .S:PRV]"" PRV=ECXPRO_PRV S:ATT]"" ATT=ECXPRO_ATT
"RTN","ECXTRT",143,0)
 .S ECXLOC(SUB3,SUB4,SUB5)=SPC_U_PRV_U_ATT_U_MOV
"RTN","ECXTRT",144,0)
 Q
"RTN","ECXTRT",145,0)
 ;
"RTN","ECXTRT",146,0)
FINDLOC(ECXTSD,ECXLOC,ECXSPC,ECXPRV,ECXATT,ECXMOV,ECXTRT) ;find local array node for current ts movement
"RTN","ECXTRT",147,0)
 ;   input
"RTN","ECXTRT",148,0)
 ;   ECXTSD = inverse date/time for current ts movement; required
"RTN","ECXTRT",149,0)
 ;   ECXLOC = local array; passed by reference; required
"RTN","ECXTRT",150,0)
 ;   output; data from record contained in MOVE
"RTN","ECXTRT",151,0)
 ;   ECXSPC = piece 1 of LOC (passed by reference)
"RTN","ECXTRT",152,0)
 ;   ECXPRV = piece 2 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",153,0)
 ;   ECXATT = piece 3 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",154,0)
 ;   ECXMOV = piece 4 of LOC (passed by reference)
"RTN","ECXTRT",155,0)
 ;   ECXTRT = pointer to file #45.7
"RTN","ECXTRT",156,0)
 ;
"RTN","ECXTRT",157,0)
 N SUB3,SUB4,SUB5,LOC
"RTN","ECXTRT",158,0)
 S (ECXSPC,ECXPRV,ECXATT,ECXMOV)=""
"RTN","ECXTRT",159,0)
 S SUB3=ECXTSD
"RTN","ECXTRT",160,0)
 I $D(ECXLOC(SUB3)) D
"RTN","ECXTRT",161,0)
 .S SUB4=$O(ECXLOC(SUB3,0)),SUB5=$O(ECXLOC(SUB3,SUB4,0))
"RTN","ECXTRT",162,0)
 .S LOC=ECXLOC(SUB3,SUB4,SUB5),ECXTRT=SUB4,ECXSPC=$P(LOC,U)
"RTN","ECXTRT",163,0)
 .S ECXPRV=$P(LOC,U,2),ECXATT=$P(LOC,U,3),ECXMOV=$P(LOC,U,4)
"RTN","ECXTRT",164,0)
 Q
"RTN","ECXTRT",165,0)
 ;
"RTN","ECXTRT",166,0)
FILE ;file the extract record
"RTN","ECXTRT",167,0)
 ;node0
"RTN","ECXTRT",168,0)
 ;^dfn^ssn^name^i/o (ECXA)^date^product^adm date^d/c date^
"RTN","ECXTRT",169,0)
 ;mov#^type^new ts^losing ts^losing ts los^
"RTN","ECXTRT",170,0)
 ;losing attending^movement type^time^adm time^new provider^
"RTN","ECXTRT",171,0)
 ;new attending^losing provider
"RTN","ECXTRT",172,0)
 ;node1
"RTN","ECXTRT",173,0)
 ;mpi^dss dept^losing attending npi^new provider npi^new attending npi^
"RTN","ECXTRT",174,0)
 ;losing provider npi^losing attending los^losing provider los^dom^
"RTN","ECXTRT",175,0)
 ;observ pat ind^encounter num
"RTN","ECXTRT",176,0)
 ;
"RTN","ECXTRT",177,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXTRT",178,0)
 S ECODE=EC7_U_EC23_U_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U_U
"RTN","ECXTRT",179,0)
 S ECODE=ECODE_ECXADMDT_U_ECXDCDT_U_ECDA_U_6_U_ECXSPCN_U_ECXSPCL_U
"RTN","ECXTRT",180,0)
 S ECODE=ECODE_ECXLOS_U_ECXATTL_U_ECMT_U_ECXTIME_U_ECXADMTM_U_ECXPRVN_U
"RTN","ECXTRT",181,0)
 S ECODE=ECODE_ECXATTN_U_ECXPRVL_U
"RTN","ECXTRT",182,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXALNPI_U_ECXPNNPI_U_ECXANNPI_U_ECXPLNPI_U
"RTN","ECXTRT",183,0)
 S ECODE1=ECODE1_ECXLOSA_U_ECXLOSP_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXPDIV
"RTN","ECXTRT",184,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATLPC_U_ECXPRNPC_U_ECXATNPC_U_ECXPRLPC
"RTN","ECXTRT",185,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXTRT",186,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXTRT",187,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXTRT",188,0)
 Q
"RTN","ECXTRT",189,0)
 ;
"RTN","ECXTRT",190,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT",191,0)
 S ECHEAD="TRT"
"RTN","ECXTRT",192,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXTRT",193,0)
 Q
"RTN","ECXTRT",194,0)
 ;
"RTN","ECXTRT",195,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT",196,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXTRT",197,0)
 Q
"RTN","ECXUD")
0^25^B44193841
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ; 8/17/05 10:58am
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49,71,84**;Dec 22, 1997
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 S QFLG=0
"RTN","ECXUD",11,0)
 S ECED=ECED+.3
"RTN","ECXUD",12,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",13,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",14,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",15,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",16,0)
 Q
"RTN","ECXUD",17,0)
 ;
"RTN","ECXUD",18,0)
STUFF ;get data
"RTN","ECXUD",19,0)
 N X,W,OK,P1,P3,PSTAT,PT,ECXPHA,ON,ECDRG
"RTN","ECXUD",20,0)
 S ECXDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4)
"RTN","ECXUD",21,0)
 ;
"RTN","ECXUD",22,0)
 ;get patient specific data
"RTN","ECXUD",23,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",24,0)
 Q:ECXERR
"RTN","ECXUD",25,0)
 ;
"RTN","ECXUD",26,0)
 S ECXPRO=$P(DATA,U,7),ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",27,0)
 S ECXPRNPI="",W=$P(DATA,U,6)
"RTN","ECXUD",28,0)
 S ECXDIV=$P($G(^DIC(42,+W,0)),U,11),ECXW=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXUD",29,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",30,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",31,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8),ON=$P(DATA,U,10)
"RTN","ECXUD",32,0)
 ;call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXUD",33,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXUD",34,0)
 S ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXUD",35,0)
 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",36,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXUD",37,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",38,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6),X="PSNAPIS"
"RTN","ECXUD",39,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",40,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",41,0)
 ; - Department and National Production Division
"RTN","ECXUD",42,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",43,0)
 S ECXDSSD=""
"RTN","ECXUD",44,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",45,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",46,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",47,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",48,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",49,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",50,0)
 .;Get ordering stop code based on FY 2006 logic for outpatient
"RTN","ECXUD",51,0)
 .S ECXORDST=$$DOUDO^ECXUTL5(ECXDFN,ON)
"RTN","ECXUD",52,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",53,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",54,0)
 ;BCMA data (place holder)
"RTN","ECXUD",55,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXUD",56,0)
 ;- Set national patient record flag if exist
"RTN","ECXUD",57,0)
 D NPRF^ECXUTL5
"RTN","ECXUD",58,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",59,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",60,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",61,0)
 Q
"RTN","ECXUD",62,0)
 ;
"RTN","ECXUD",63,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",64,0)
 ;init variables
"RTN","ECXUD",65,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP)=""
"RTN","ECXUD",66,0)
 ;get patient data if saved
"RTN","ECXUD",67,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",68,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",69,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",70,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",71,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",72,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",73,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",74,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",75,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",76,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",77,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",78,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",79,0)
 ;set patient data
"RTN","ECXUD",80,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",81,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",82,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",83,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",84,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",85,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",86,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET")
"RTN","ECXUD",87,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",88,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",89,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",90,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",91,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",92,0)
 .;get CNHU status
"RTN","ECXUD",93,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",94,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",95,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",96,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",97,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",98,0)
 .; - Race and Ethnicity
"RTN","ECXUD",99,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",100,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",101,0)
 .;save for later
"RTN","ECXUD",102,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",103,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",104,0)
 ;
"RTN","ECXUD",105,0)
 ;get inpatient data
"RTN","ECXUD",106,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",107,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10)
"RTN","ECXUD",108,0)
 ;
"RTN","ECXUD",109,0)
 ;get primary care data
"RTN","ECXUD",110,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",111,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",112,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",113,0)
 Q
"RTN","ECXUD",114,0)
 ;
"RTN","ECXUD",115,0)
FILE ;file record
"RTN","ECXUD",116,0)
 ;node0
"RTN","ECXUD",117,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",118,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",119,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",120,0)
 ;node1
"RTN","ECXUD",121,0)
 ;mpi^dss dept^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",122,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",123,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",124,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",125,0)
 ;enrollment cat^enrollment status^enrollment priority^pc team^
"RTN","ECXUD",126,0)
 ;pc provider^pc provider npi^pc provider p.class^assoc. pc provider^
"RTN","ECXUD",127,0)
 ;assoc. pc provider npi^assoc. pc provider p.class
"RTN","ECXUD",128,0)
 ;node2
"RTN","ECXUD",129,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^ethnicity^
"RTN","ECXUD",130,0)
 ;race1^bcma drug dispensed^bcma dose given^bcma unit of
"RTN","ECXUD",131,0)
 ;administration^bcma icu flag^ordering provider person class^
"RTN","ECXUD",132,0)
 ;^enrollment priority ECXPRIOR_enrollment subgroup
"RTN","ECXUD",133,0)
 ;ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet
"RTN","ECXUD",134,0)
 ;elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible
"RTN","ECXUD",135,0)
 ;ECXCVENC^national patient record flag ECXNPRFI
"RTN","ECXUD",136,0)
 N DA,DIK
"RTN","ECXUD",137,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",138,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",139,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",140,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",141,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",142,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",143,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXPRNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",144,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",145,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",146,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",147,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",148,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",149,0)
 S ECODE1=ECODE1_ECPTNPI_U_ECCLAS_U_ECASPR_U_ECASNPI_U_ECCLAS2_U
"RTN","ECXUD",150,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",151,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",152,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXUD",153,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",154,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXUD",155,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",156,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",157,0)
 Q
"RTN","ECXUD",158,0)
 ;
"RTN","ECXUD",159,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",160,0)
 S ECHEAD="UDP"
"RTN","ECXUD",161,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",162,0)
 Q
"RTN","ECXUD",163,0)
 ;
"RTN","ECXUD",164,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",165,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",166,0)
 Q
"RTN","ECXUSUR")
0^14^B28150599
"RTN","ECXUSUR",1,0)
ECXUSUR ;ALB/TJL-Surgery Extract Unusual Volume Report ; 5/26/05 2:44pm
"RTN","ECXUSUR",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,84**;July 1, 2003
"RTN","ECXUSUR",3,0)
 ;
"RTN","ECXUSUR",4,0)
EN ; entry point
"RTN","ECXUSUR",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXUSUR",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXFLAG
"RTN","ECXUSUR",7,0)
 S QFLG=0,ECTHLD="",ECXFLAG=$G(FLAG)
"RTN","ECXUSUR",8,0)
 ; get today's date
"RTN","ECXUSUR",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUSUR",10,0)
 I 'ECXFLAG D BEGIN Q:QFLG
"RTN","ECXUSUR",11,0)
 D SELECT Q:QFLG
"RTN","ECXUSUR",12,0)
 S ECXDESC=$S(ECXFLAG:"SUR Volume Report",1:"Surgery Extract Unusual Volume Report")
"RTN","ECXUSUR",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUSUR",14,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUSUR",15,0)
 D EN^XUTMDEVQ("PROCESS^ECXUSUR",ECXDESC,.ECXSAVE)
"RTN","ECXUSUR",16,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUSUR",17,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUSUR",18,0)
 D HOME^%ZIS
"RTN","ECXUSUR",19,0)
 D AUDIT^ECXKILL
"RTN","ECXUSUR",20,0)
 Q
"RTN","ECXUSUR",21,0)
 ;
"RTN","ECXUSUR",22,0)
BEGIN ; display report description
"RTN","ECXUSUR",23,0)
 W @IOF
"RTN","ECXUSUR",24,0)
 W !,"This report prints a listing of unusual volumes that would be"
"RTN","ECXUSUR",25,0)
 W !,"generated by the Surgery extract (SUR) as determined by a"
"RTN","ECXUSUR",26,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUSUR",27,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUSUR",28,0)
 W !,"necessary, any volumes determined to be erroneous."
"RTN","ECXUSUR",29,0)
 W !!,"Unusual volumes are those where either the Operation Time,"
"RTN","ECXUSUR",30,0)
 W !,"Patient Time, Anesthesia Time, Recovery Room Time, OR Clean Time"
"RTN","ECXUSUR",31,0)
 W !,"or Pt Holding Time field is greater than the threshold value."
"RTN","ECXUSUR",32,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUSUR",33,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUSUR",34,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUSUR",35,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUSUR",36,0)
 W !,"can be run as needed."
"RTN","ECXUSUR",37,0)
 W !!,"The report is sorted by descending Volume and Case Number."
"RTN","ECXUSUR",38,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUSUR",39,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUSUR",40,0)
 Q
"RTN","ECXUSUR",41,0)
 ;
"RTN","ECXUSUR",42,0)
SELECT ; user inputs for threshold volume and date range
"RTN","ECXUSUR",43,0)
 N DONE,OUT
"RTN","ECXUSUR",44,0)
 ; allow user to set threshold volume
"RTN","ECXUSUR",45,0)
 I 'ECXFLAG D
"RTN","ECXUSUR",46,0)
 .S ECTHLD=25
"RTN","ECXUSUR",47,0)
 .W !!,"The default threshold volume for the Surgery extract is "_ECTHLD_"."
"RTN","ECXUSUR",48,0)
 .W !,"The default threshold volume ("_ECTHLD_") equates to 6 hours."
"RTN","ECXUSUR",49,0)
 .S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUSUR",50,0)
 .I Y D
"RTN","ECXUSUR",51,0)
 ..W !!,"Volume > threshold"
"RTN","ECXUSUR",52,0)
 ..S DIR(0)="N^0:99",DIR("A")="Enter the new threshold volume" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUSUR",53,0)
 ; get date range from user
"RTN","ECXUSUR",54,0)
 Q:QFLG
"RTN","ECXUSUR",55,0)
 W !!,"Enter the date range for which you would like to scan the"
"RTN","ECXUSUR",56,0)
 W !,"Surgery Extract records.",!
"RTN","ECXUSUR",57,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUSUR",58,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",59,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",60,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUSUR",61,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUSUR",62,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",63,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",64,0)
 .I Y<ECSD D  Q
"RTN","ECXUSUR",65,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUSUR",66,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",67,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUSUR",68,0)
 ..W !!,"Beginning and ending dates must be in the same month and year"
"RTN","ECXUSUR",69,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",70,0)
 .S ECED=Y
"RTN","ECXUSUR",71,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUSUR",72,0)
 .S DONE=1
"RTN","ECXUSUR",73,0)
 Q
"RTN","ECXUSUR",74,0)
 ;
"RTN","ECXUSUR",75,0)
PROCESS ; entry point for queued report
"RTN","ECXUSUR",76,0)
 S ZTREQ="@"
"RTN","ECXUSUR",77,0)
 S ECXERR=0 D EN^ECXUSUR1 Q:ECXERR
"RTN","ECXUSUR",78,0)
 S QFLG=0 D PRINT
"RTN","ECXUSUR",79,0)
 Q
"RTN","ECXUSUR",80,0)
 ;
"RTN","ECXUSUR",81,0)
PRINT ; process temp file and print report
"RTN","ECXUSUR",82,0)
 N PG,QFLG,GTOT,LN,COUNT,VOL,SUB,REC
"RTN","ECXUSUR",83,0)
 U IO
"RTN","ECXUSUR",84,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUSUR",85,0)
 S (PG,QFLG,GTOT,COUNT)=0,$P(LN,"-",132)=""
"RTN","ECXUSUR",86,0)
 D HEADER Q:QFLG
"RTN","ECXUSUR",87,0)
 S VOL=-999999 F  S VOL=$O(^TMP($J,VOL)) Q:VOL=""!QFLG  D
"RTN","ECXUSUR",88,0)
 .S SUB="" F  S SUB=$O(^TMP($J,VOL,SUB)) Q:SUB=""!QFLG  S REC=^(SUB)  D
"RTN","ECXUSUR",89,0)
 ..S COUNT=COUNT+1
"RTN","ECXUSUR",90,0)
 ..I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUSUR",91,0)
 ..W !,$P(REC,U),?6,$P(REC,U,2),?17,$P(REC,U,3),?26,$P(REC,U,4)
"RTN","ECXUSUR",92,0)
 ..W ?33,$P(REC,U,5),?55,$$RJ^XLFSTR($P(REC,U,9),4)
"RTN","ECXUSUR",93,0)
 ..W ?63,$$RJ^XLFSTR($P(REC,U,10),4),?74,$$RJ^XLFSTR($P(REC,U,11),4)
"RTN","ECXUSUR",94,0)
 ..W ?83,$$RJ^XLFSTR($P(REC,U,6),4),?90,$$RJ^XLFSTR($P(REC,U,8),4)
"RTN","ECXUSUR",95,0)
 ..W ?101,$$RJ^XLFSTR($P(REC,U,7),4),?114,$P(REC,U,13)
"RTN","ECXUSUR",96,0)
 Q:QFLG
"RTN","ECXUSUR",97,0)
 I COUNT=0 W !!,?8,$S(FLAG=1:"No surgery volumes to report for this extract",1:"No unusual volumes to report for this extract")
"RTN","ECXUSUR",98,0)
CLOSE ;
"RTN","ECXUSUR",99,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUSUR",100,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",101,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUSUR",102,0)
 Q
"RTN","ECXUSUR",103,0)
 ;
"RTN","ECXUSUR",104,0)
HEADER ;header and page control
"RTN","ECXUSUR",105,0)
 N SS,JJ
"RTN","ECXUSUR",106,0)
 I $E(IOST)="C" D
"RTN","ECXUSUR",107,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",108,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUSUR",109,0)
 Q:QFLG
"RTN","ECXUSUR",110,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUSUR",111,0)
 W !,$S(ECXFLAG:"SUR Volume Report",1:"Surgery Extract Unusual Volume Report"),?124,"Page: "_PG
"RTN","ECXUSUR",112,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUSUR",113,0)
 W !,"  End Date: ",ECEND I 'ECXFLAG W ?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUSUR",114,0)
 W !!,?27,"Case",?37,"Encounter",?53,"Patient",?61,"Operation",?71,"Anesthesia",?83,"PACU",?89,"OR Clean",?99,"Pt Holding",?114,"Principal"
"RTN","ECXUSUR",115,0)
 W !,"Name",?9,"SSN",?19,"Day",?26,"Number",?39,"Number"
"RTN","ECXUSUR",116,0)
 W ?55,"Time",?63,"Time",?74,"Time",?83,"Time",?90,"Time",?101,"Time"
"RTN","ECXUSUR",117,0)
 W ?114,"Procedure"
"RTN","ECXUSUR",118,0)
 W !,LN,!
"RTN","ECXUSUR",119,0)
 Q
"RTN","ECXUSUR",120,0)
 ;
"RTN","ECXUTL")
0^2^B36783041
"RTN","ECXUTL",1,0)
ECXUTL ;ALB/JAP - Utilities for DSS Extracts ; 9/13/05 8:43am
"RTN","ECXUTL",2,0)
 ;;3.0;DSS EXTRACTS;**1,5,8,84**;Dec 22, 1997
"RTN","ECXUTL",3,0)
 ;
"RTN","ECXUTL",4,0)
ECXYM(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",5,0)
 ;converts any FM internal format date or date/time to a 6-character string
"RTN","ECXUTL",6,0)
 ;
"RTN","ECXUTL",7,0)
 ;   input
"RTN","ECXUTL",8,0)
 ;   ECXFMDT = date or date/time; FM internal format (required)
"RTN","ECXUTL",9,0)
 ;   output
"RTN","ECXUTL",10,0)
 ;   ECXYM = YYYYMM string
"RTN","ECXUTL",11,0)
 ;
"RTN","ECXUTL",12,0)
 N MONTH,YEAR,CENTURY,ECXYM
"RTN","ECXUTL",13,0)
 ;
"RTN","ECXUTL",14,0)
 ;error checks
"RTN","ECXUTL",15,0)
 I +ECXFMDT'=ECXFMDT S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",16,0)
 I $L($P(ECXFMDT,"."))'=7 S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",17,0)
 I +$E(ECXFMDT,4,5)<1!(+$E(ECXFMDT,4,5)>12) S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",18,0)
 ;
"RTN","ECXUTL",19,0)
 S MONTH=$E(ECXFMDT,4,5),YEAR=$E(ECXFMDT,2,3),CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",20,0)
 S ECXYM=CENTURY_YEAR_MONTH
"RTN","ECXUTL",21,0)
 Q ECXYM
"RTN","ECXUTL",22,0)
 ;
"RTN","ECXUTL",23,0)
ECXYMX(ECXYM) ;extrinsic function
"RTN","ECXUTL",24,0)
 ;converts a 6-character numeric string of format YYYYMM
"RTN","ECXUTL",25,0)
 ;to a FM external format date
"RTN","ECXUTL",26,0)
 ;
"RTN","ECXUTL",27,0)
 ;   input
"RTN","ECXUTL",28,0)
 ;   ECXYM = YYYYMM string (required)
"RTN","ECXUTL",29,0)
 ;   output
"RTN","ECXUTL",30,0)
 ;   ECXYMX = FM external format date;
"RTN","ECXUTL",31,0)
 ;            SEP 1997
"RTN","ECXUTL",32,0)
 ;   error code
"RTN","ECXUTL",33,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",34,0)
 ;
"RTN","ECXUTL",35,0)
 N Y,%DT,CENTURY,FMCENT,ECXYMX
"RTN","ECXUTL",36,0)
 ;
"RTN","ECXUTL",37,0)
 ;error checks
"RTN","ECXUTL",38,0)
 I ECXYM="" S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",39,0)
 I +ECXYM'=ECXYM S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",40,0)
 I $L(ECXYM)'=6 S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",41,0)
 I +$E(ECXYM,1,4)<1800 S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",42,0)
 I +$E(ECXYM,5,6)<1!(+$E(ECXYM,5,6)>12) S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",43,0)
 ;
"RTN","ECXUTL",44,0)
 S CENTURY=$E(ECXYM,1,2)
"RTN","ECXUTL",45,0)
 S FMCENT=CENTURY-17
"RTN","ECXUTL",46,0)
 S Y=FMCENT_$E(ECXYM,3,6) D DD^%DT S ECXYMX=Y
"RTN","ECXUTL",47,0)
 ;
"RTN","ECXUTL",48,0)
 ;error checks
"RTN","ECXUTL",49,0)
 I $L(ECXYMX)'=8 S ECXYMX="000000"
"RTN","ECXUTL",50,0)
 I "JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"'[$E(ECXYMX,1,3) S ECXYMX="000000"
"RTN","ECXUTL",51,0)
 Q ECXYMX
"RTN","ECXUTL",52,0)
 ;
"RTN","ECXUTL",53,0)
ECXDATE(ECXFMDT,ECXYM) ;extrinsic function
"RTN","ECXUTL",54,0)
 ;converts any FM internal format date or date/time to a 8-character string
"RTN","ECXUTL",55,0)
 ;
"RTN","ECXUTL",56,0)
 ;   input
"RTN","ECXUTL",57,0)
 ;   ECXFMDT = date or date/time; FM internal format (required)
"RTN","ECXUTL",58,0)
 ;   ECXYM = YYYYMM; year/month 6-character string (required)
"RTN","ECXUTL",59,0)
 ;   output
"RTN","ECXUTL",60,0)
 ;   ECXDATE = YYYYMMDD string
"RTN","ECXUTL",61,0)
 ;   error code
"RTN","ECXUTL",62,0)
 ;   "000000" returned, if problem with input
"RTN","ECXUTL",63,0)
 ;
"RTN","ECXUTL",64,0)
 N MONTH,YEAR,CENTURY,DAY,ECXDATE
"RTN","ECXUTL",65,0)
 ;
"RTN","ECXUTL",66,0)
 ;error checks
"RTN","ECXUTL",67,0)
 I +ECXYM'=ECXYM S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",68,0)
 I $L(ECXYM)'=6 S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",69,0)
 I +$E(ECXYM,1,4)<1800 S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",70,0)
 I +$E(ECXYM,5,6)<1!($E(ECXYM,5,6)>12) S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",71,0)
 ;special case where ecxfmdt is null; default to year/month of ecxym
"RTN","ECXUTL",72,0)
 I ECXFMDT="" S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",73,0)
 ;error checks
"RTN","ECXUTL",74,0)
 I +ECXFMDT'=ECXFMDT S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",75,0)
 I $L(ECXFMDT)<7 S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",76,0)
 I +$E(ECXFMDT,4,5)>12 S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",77,0)
 I +$E(ECXFMDT,6,7)>31 S ECXFMDT=$E(ECXFMDT,1,5)_"01"
"RTN","ECXUTL",78,0)
 ;default to 1st day of month
"RTN","ECXUTL",79,0)
 S DAY=$E(ECXFMDT,6,7) S:DAY="00" DAY="01"
"RTN","ECXUTL",80,0)
 ;default to month of ecxym
"RTN","ECXUTL",81,0)
 S MONTH=$E(ECXFMDT,4,5) S:MONTH="00" MONTH=$E(ECXYM,5,6)
"RTN","ECXUTL",82,0)
 S YEAR=$E(ECXFMDT,2,3)
"RTN","ECXUTL",83,0)
 S CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",84,0)
 S ECXDATE=CENTURY_YEAR_MONTH_DAY
"RTN","ECXUTL",85,0)
 Q ECXDATE
"RTN","ECXUTL",86,0)
 ;
"RTN","ECXUTL",87,0)
ECXDATEX(ECXDATE) ;extrinsic function
"RTN","ECXUTL",88,0)
 ;converts an 8-character numeric string of format YYYYMMDD
"RTN","ECXUTL",89,0)
 ;to a FM external format date
"RTN","ECXUTL",90,0)
 ;
"RTN","ECXUTL",91,0)
 ;   input
"RTN","ECXUTL",92,0)
 ;   ECXDATE = YYYYMMDD string (required)
"RTN","ECXUTL",93,0)
 ;   output
"RTN","ECXUTL",94,0)
 ;   ECXDATEX = FM external format date;
"RTN","ECXUTL",95,0)
 ;              SEP 12, 1997
"RTN","ECXUTL",96,0)
 ;   error code
"RTN","ECXUTL",97,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",98,0)
 ;
"RTN","ECXUTL",99,0)
 N Y,%DT,CENTURY,FMCENT,ECXDATEX
"RTN","ECXUTL",100,0)
 ;
"RTN","ECXUTL",101,0)
 ;error checks
"RTN","ECXUTL",102,0)
 I +ECXDATE'=ECXDATE S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",103,0)
 I $L(ECXDATE)'=8 S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",104,0)
 I +$E(ECXDATE,7,8)>31 S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",105,0)
 ;
"RTN","ECXUTL",106,0)
 S CENTURY=$E(ECXDATE,1,2)
"RTN","ECXUTL",107,0)
 S FMCENT=CENTURY-17
"RTN","ECXUTL",108,0)
 S Y=FMCENT_$E(ECXDATE,3,8) D DD^%DT S ECXDATEX=Y
"RTN","ECXUTL",109,0)
 ;
"RTN","ECXUTL",110,0)
 ;error checks
"RTN","ECXUTL",111,0)
 I $L(ECXDATEX)'=12 S ECXDATEX="000000"
"RTN","ECXUTL",112,0)
 I "JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"'[$E(ECXDATEX,1,3) S ECXDATEX="000000"
"RTN","ECXUTL",113,0)
 Q ECXDATEX
"RTN","ECXUTL",114,0)
 ;
"RTN","ECXUTL",115,0)
ECXDOB(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",116,0)
 ;converts a FM internal format date or date/time to a 6-character string
"RTN","ECXUTL",117,0)
 ;if ecxfmdt is null, the function returns 19420101
"RTN","ECXUTL",118,0)
 ;   input
"RTN","ECXUTL",119,0)
 ;   ECXFMDT = date or date/time (required); 
"RTN","ECXUTL",120,0)
 ;             must be valid FM internal format 
"RTN","ECXUTL",121,0)
 ;   output
"RTN","ECXUTL",122,0)
 ;   ECXDOB = YYYYMMDD string (required);
"RTN","ECXUTL",123,0)
 ;            defaults to 19420101
"RTN","ECXUTL",124,0)
 ;
"RTN","ECXUTL",125,0)
 N MONTH,YEAR,CENTURY,DAY,ECXDOB
"RTN","ECXUTL",126,0)
 ;only consider date portion
"RTN","ECXUTL",127,0)
 S ECXFMDT=$P(ECXFMDT,".",1)
"RTN","ECXUTL",128,0)
 ;special case where ecxfmdt is null
"RTN","ECXUTL",129,0)
 I ECXFMDT="" S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",130,0)
 ;error checks - return default
"RTN","ECXUTL",131,0)
 I +ECXFMDT'=ECXFMDT S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",132,0)
 I $L(ECXFMDT)<7 S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",133,0)
 I +ECXFMDT>DT S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",134,0)
 ;default to 1st day of month
"RTN","ECXUTL",135,0)
 S DAY=$E(ECXFMDT,6,7) S:DAY="00"!(+DAY>31) DAY="01"
"RTN","ECXUTL",136,0)
 ;default to 1st month of year
"RTN","ECXUTL",137,0)
 S MONTH=$E(ECXFMDT,4,5) S:MONTH="00"!(+MONTH>12) MONTH="01",DAY="01"
"RTN","ECXUTL",138,0)
 S YEAR=$E(ECXFMDT,2,3)
"RTN","ECXUTL",139,0)
 S CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",140,0)
 S ECXDOB=CENTURY_YEAR_MONTH_DAY
"RTN","ECXUTL",141,0)
 Q ECXDOB
"RTN","ECXUTL",142,0)
 ;
"RTN","ECXUTL",143,0)
ECXTIME(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",144,0)
 ;converts Fileman internal date/time to 6-character time string
"RTN","ECXUTL",145,0)
 ;format HHMMSS
"RTN","ECXUTL",146,0)
 ;
"RTN","ECXUTL",147,0)
 ;   input
"RTN","ECXUTL",148,0)
 ;   ECXFMDT = date or date/time (required); 
"RTN","ECXUTL",149,0)
 ;             must be valid FM internal format
"RTN","ECXUTL",150,0)
 ;   output
"RTN","ECXUTL",151,0)
 ;   ECXTIME = 6-character numeric string;
"RTN","ECXUTL",152,0)
 ;             format HHMMSS; string length always 6
"RTN","ECXUTL",153,0)
 ;
"RTN","ECXUTL",154,0)
 N J,JJ,TIME,HH,MM,SS,ECXTIME
"RTN","ECXUTL",155,0)
 ;if any non-numerics, set default
"RTN","ECXUTL",156,0)
 I +ECXFMDT=0 S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",157,0)
 ;use only time portion of fileman internal format
"RTN","ECXUTL",158,0)
 S TIME=$P(ECXFMDT,".",2),TIME=$E(TIME,1,6)
"RTN","ECXUTL",159,0)
 ;if time unknown, set default
"RTN","ECXUTL",160,0)
 I TIME="" S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",161,0)
 ;be sure time is 6 characters
"RTN","ECXUTL",162,0)
 S TIME=$$LJ^XLFSTR(TIME,6,0)
"RTN","ECXUTL",163,0)
 ;error checks -- set default
"RTN","ECXUTL",164,0)
 S HH=$E(TIME,1,2),MM=$E(TIME,3,4),SS=$E(TIME,5,6)
"RTN","ECXUTL",165,0)
 I +HH>23 S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",166,0)
 I +MM>59 S MM="59"
"RTN","ECXUTL",167,0)
 I +SS>59 S SS="59"
"RTN","ECXUTL",168,0)
 S ECXTIME=HH_MM_SS
"RTN","ECXUTL",169,0)
 Q ECXTIME
"RTN","ECXUTL",170,0)
 ;
"RTN","ECXUTL",171,0)
ECXTIMEX(ECXTIME,ECXMIL) ;extrinsic function
"RTN","ECXUTL",172,0)
 ;converts a 6-character time string to external, user readable format
"RTN","ECXUTL",173,0)
 ;used as output transform for time fields in many dss extract files
"RTN","ECXUTL",174,0)
 ;   input
"RTN","ECXUTL",175,0)
 ;   ECXTIME = 6-character numeric string (required); 
"RTN","ECXUTL",176,0)
 ;   ECXMIL = if "1", then return military time (optional)          
"RTN","ECXUTL",177,0)
 ;   output
"RTN","ECXUTL",178,0)
 ;   ECXTIMEX = character string;
"RTN","ECXUTL",179,0)
 ;              if ECXMIL=1, format HH:MM:SS
"RTN","ECXUTL",180,0)
 ;              otherwise, hours:mins AM/PM
"RTN","ECXUTL",181,0)
 ;   error code
"RTN","ECXUTL",182,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",183,0)
 ;              
"RTN","ECXUTL",184,0)
 N TIME,HH,MM,SS,ECXTIMEX,J,JJ
"RTN","ECXUTL",185,0)
 ;error checks
"RTN","ECXUTL",186,0)
 I $L(ECXTIME)'=6 S ECXTIMEX="000000" Q ECXTIMEX
"RTN","ECXUTL",187,0)
 F J=1:1:6 S JJ=$E(ECXTIME,J) I $A(JJ)<48!($A(JJ)>57) S ECXTIMEX="000000" Q
"RTN","ECXUTL",188,0)
 I $D(ECXTIMEX) Q ECXTIMEX
"RTN","ECXUTL",189,0)
 S HH=$E(ECXTIME,1,2),MM=$E(ECXTIME,3,4),SS=$E(ECXTIME,5,6)
"RTN","ECXUTL",190,0)
 I +HH>23!(+MM>59)!(+SS>59) S ECXTIMEX="000000" Q ECXTIMEX
"RTN","ECXUTL",191,0)
 ;if ecxmil=1, return military time
"RTN","ECXUTL",192,0)
 I $G(ECXMIL) S ECXTIMEX=HH_":"_MM_":"_SS Q ECXTIMEX
"RTN","ECXUTL",193,0)
 ;otherwise, use am/pm format
"RTN","ECXUTL",194,0)
 S X="0."_ECXTIME
"RTN","ECXUTL",195,0)
 S X=$E($P(X,".",2)_"0000",1,4),%=X>1159 S:X>1259 X=X-1200
"RTN","ECXUTL",196,0)
 S X=X\100_":"_$E(X#100+100,2,3)_" "_$E("AP",%+1)_"M"
"RTN","ECXUTL",197,0)
 S ECXTIMEX=X
"RTN","ECXUTL",198,0)
 Q ECXTIMEX
"RTN","ECXUTL",199,0)
 ;
"RTN","ECXUTL",200,0)
AOIRPOW(ECXDFN,ECXAIP) ;get data on ao, ir, pow status
"RTN","ECXUTL",201,0)
 ;
"RTN","ECXUTL",202,0)
 ;   input
"RTN","ECXUTL",203,0)
 ;   ECXDFN = ien in file #2 (required)
"RTN","ECXUTL",204,0)
 ;   ECXAIP = array for returned data (required)
"RTN","ECXUTL",205,0)
 ;            (passed by reference)
"RTN","ECXUTL",206,0)
 ;
"RTN","ECXUTL",207,0)
 ;   output
"RTN","ECXUTL",208,0)
 ;   ECXAIP("AO") = agent orange status
"RTN","ECXUTL",209,0)
 ;   ECXAIP("IR") = ion. radiation status
"RTN","ECXUTL",210,0)
 ;   ECXAIP("POW") = pow status
"RTN","ECXUTL",211,0)
 ;   ECXAIP("POWL") = pow location/period
"RTN","ECXUTL",212,0)
 ;
"RTN","ECXUTL",213,0)
 N J
"RTN","ECXUTL",214,0)
 S ECXAIP("AO")="",ECXAIP("IR")="",ECXAIP("POW")="",ECXAIP("POWL")=""
"RTN","ECXUTL",215,0)
 S ECXAIP("AO")=$P($G(^DPT(ECXDFN,.321)),U,2),ECXAIP("IR")=$P($G(^(.321)),U,3)
"RTN","ECXUTL",216,0)
 S ECXAIP("POW")=$P($G(^DPT(ECXDFN,.52)),U,5),ECXAIP("POWL")=$P($G(^(.52)),U,6)
"RTN","ECXUTL",217,0)
 F J="AO","IR","POW" I ECXAIP(J)="" S ECXAIP(J)="U"
"RTN","ECXUTL",218,0)
 I ECXAIP("POWL"),ECXAIP("POW")'="Y" S ECXAIP("POWL")=""
"RTN","ECXUTL",219,0)
 Q
"RTN","ECXUTL",220,0)
 ;
"RTN","ECXUTL",221,0)
PRVCLASS(PERS,DATE) ;determine the person class and return va code
"RTN","ECXUTL",222,0)
 ;   input
"RTN","ECXUTL",223,0)
 ;   PERS  = pointer to file #200 (required)
"RTN","ECXUTL",224,0)
 ;   DATE  = date on which person class must be active (required)
"RTN","ECXUTL",225,0)
 ;           (internal Fileman format)
"RTN","ECXUTL",226,0)
 ;   output
"RTN","ECXUTL",227,0)
 ;   VACODE = VA code field from file #8932.1
"RTN","ECXUTL",228,0)
 ;            (exactly 7 characters in length)
"RTN","ECXUTL",229,0)
 N ECX,VACODE
"RTN","ECXUTL",230,0)
 S VACODE=""
"RTN","ECXUTL",231,0)
 S ECX=$$GET^XUA4A72(PERS,DATE)
"RTN","ECXUTL",232,0)
 ;if no person class use alternate date to resolve person class
"RTN","ECXUTL",233,0)
 I +ECX'>0 D
"RTN","ECXUTL",234,0)
 .N DATE
"RTN","ECXUTL",235,0)
 .S DATE=$S(ECHEAD="LAB":$P(EC1,U,14),ECHEAD="LAR":$P(EC1,U,4),ECHEAD="PRE":$P(ECDATA,U,13),ECHEAD="RAD":$P($G(^RAO(75.1,+$G(ECXIEN),0)),U,16),1:"")
"RTN","ECXUTL",236,0)
 .S ECX=$$GET^XUA4A72(PERS,DATE)
"RTN","ECXUTL",237,0)
 .Q
"RTN","ECXUTL",238,0)
 S VACODE=$P(ECX,U,7) I $L(VACODE)'=7 S VACODE=""
"RTN","ECXUTL",239,0)
 Q VACODE
"RTN","ECXUTL2")
0^5^B68550952
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ; 5/25/05 12:00pm
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8,13,23,24,33,35,39,46,71,84**;Dec 22, 1997
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 ;
"RTN","ECXUTL2",16,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",17,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)="",ECXIEN=0
"RTN","ECXUTL2",18,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,ECXIEN))
"RTN","ECXUTL2",19,0)
 I ECXIEN=0 D  Q
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",26,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",27,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",28,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",29,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",30,0)
 .W !!
"RTN","ECXUTL2",31,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11",DIQ="ECXARR"
"RTN","ECXUTL2",32,0)
 D EN^DIQ1
"RTN","ECXUTL2",33,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",34,0)
 ;if this is an inactive extract type, skip it
"RTN","ECXUTL2",35,0)
 I ECXPACK["Inactive" D  Q
"RTN","ECXUTL2",36,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",37,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is no longer active/valid.")
"RTN","ECXUTL2",38,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",39,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",40,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",41,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",42,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",43,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",44,0)
 .W !!
"RTN","ECXUTL2",45,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",46,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",47,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",48,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",49,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",50,0)
 S ECXVER=7
"RTN","ECXUTL2",51,0)
 Q
"RTN","ECXUTL2",52,0)
 ;
"RTN","ECXUTL2",53,0)
PATDEM(DFN,DT1,PAR,FLG) ; determine patient information
"RTN","ECXUTL2",54,0)
 ;  DFN   =
"RTN","ECXUTL2",55,0)
 ;  DT    =
"RTN","ECXUTL2",56,0)
 ;  PAR   =
"RTN","ECXUTL2",57,0)
 ;  FLG   =
"RTN","ECXUTL2",58,0)
 N DT2,PAT,OK,X
"RTN","ECXUTL2",59,0)
 D KPATDEM
"RTN","ECXUTL2",60,0)
 S FLG=$G(FLG),PAR=$S($D(PAR):PAR,1:"1;2;3;4;5;"),DT2=$P(DT1,".")
"RTN","ECXUTL2",61,0)
 Q:'$$PAT^ECXUTL3(DFN,DT2,PAR,.PAT) 0
"RTN","ECXUTL2",62,0)
 S ECXMPI=PAT("MPI")
"RTN","ECXUTL2",63,0)
 I PAR["1" D
"RTN","ECXUTL2",64,0)
 .S ECXSSN=PAT("SSN"),ECXPNM=PAT("NAME"),ECXDOB=PAT("DOB")
"RTN","ECXUTL2",65,0)
 .S ECXSEX=PAT("SEX"),ECXREL=PAT("RELIGION"),ECXRACE=PAT("RACE")
"RTN","ECXUTL2",66,0)
 .S ECXMAR=PAT("MARITAL")
"RTN","ECXUTL2",67,0)
 .S ECXETH=PAT("ETHNIC"),ECXRC1=PAT("RACE1")
"RTN","ECXUTL2",68,0)
 I PAR["2" D
"RTN","ECXUTL2",69,0)
 .S ECXCNTY=PAT("COUNTY"),ECXSTATE=PAT("STATE"),ECXZIP=PAT("ZIP")
"RTN","ECXUTL2",70,0)
 I PAR["3" D
"RTN","ECXUTL2",71,0)
 .S ECXPOS=PAT("POS"),ECSC=PAT("SC STAT"),ECXSVC=PAT("SC%")
"RTN","ECXUTL2",72,0)
 .S ECXVET=PAT("VET"),ECXMEAN=PAT("MEANS"),ECXELIG=PAT("ELIG")
"RTN","ECXUTL2",73,0)
 .S ECXENRL=PAT("ENROLL LOC")
"RTN","ECXUTL2",74,0)
 I PAR["4" S ECXEMP=PAT("EMPLOY")
"RTN","ECXUTL2",75,0)
 I PAR["5" D
"RTN","ECXUTL2",76,0)
 .S ECXVIET=PAT("VIETNAM"),ECXAST=PAT("AO STAT"),ECXRST=PAT("IR STAT")
"RTN","ECXUTL2",77,0)
 .S ECXEST=PAT("EC STAT"),ECXPST=PAT("POW STAT"),ECXPLOC=PAT("POW LOC")
"RTN","ECXUTL2",78,0)
 .S ECXPHI=PAT("PHI"),ECXMST=PAT("MST STAT"),ECXAOL=PAT("AOL")
"RTN","ECXUTL2",79,0)
 I PAR["6" D
"RTN","ECXUTL2",80,0)
 .S (ECXPAYOR,ECXSAI)="" D VISN19(DFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXUTL2",81,0)
 I FLG'[3 D
"RTN","ECXUTL2",82,0)
 .S X=$$PRIMARY(DFN,DT2),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXUTL2",83,0)
 .S ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6)
"RTN","ECXUTL2",84,0)
 .S ECASNPI=$P(X,U,7)
"RTN","ECXUTL2",85,0)
 I FLG'[2 D
"RTN","ECXUTL2",86,0)
 .S ECXINP=$$INP^ECXUTL2(DFN,DT1),ECXA=$P(ECXINP,U),ECXMN=$P(ECXINP,U,2)
"RTN","ECXUTL2",87,0)
 .S ECXTS=$P(ECXINP,U,3),ECXDOM=$P(ECXINP,U,10),ECXADMDT=$P(ECXINP,U,4)
"RTN","ECXUTL2",88,0)
 I FLG'[1 S X=$$ENROLLM(DFN)
"RTN","ECXUTL2",89,0)
 Q 1
"RTN","ECXUTL2",90,0)
 ;
"RTN","ECXUTL2",91,0)
KPATDEM ;
"RTN","ECXUTL2",92,0)
 K ECXADMDT,ECAO,ECASNPI,ECASPR,ECCLAS,ECCLAS2,ECENV,ECPTNPI,ECPTPR,ECPTTM
"RTN","ECXUTL2",93,0)
 K ECRE,ECSC,ECXA,ECXAST,ECXCAT,ECXCNTY,ECXEST,ECXENRL,ECXDOB
"RTN","ECXUTL2",94,0)
 K ECXDOM,ECXELIG,ECXINP,ECXMPI,ECXMN,ECXNM,ECXPHI,ECXPLOC,ECXMEAN,ECXMST
"RTN","ECXUTL2",95,0)
 K ECXPAYOR,ECXPNM,ECXPOS,ECXPRIOR,ECXPST,ECXRACE,ECXREL,ECXRST,ECXSAI
"RTN","ECXUTL2",96,0)
 K ECXSEX,ECXSSN,ECXSTAT,ECXSTATE,ECXSVC,ECXTS,ECXVIET,ECXZIP,VA,VAERR
"RTN","ECXUTL2",97,0)
 K ECXSBGRP
"RTN","ECXUTL2",98,0)
 Q
"RTN","ECXUTL2",99,0)
 ;
"RTN","ECXUTL2",100,0)
ENROLLM(DFN,RNDT) ;determines enrollment status, category, priority
"RTN","ECXUTL2",101,0)
 ;and user enrolle status
"RTN","ECXUTL2",102,0)
 ; input
"RTN","ECXUTL2",103,0)
 ;    DFN      = IEN from Patient file (Required)
"RTN","ECXUTL2",104,0)
 ;    RNDT     = Entract Run Date
"RTN","ECXUTL2",105,0)
 ; output
"RTN","ECXUTL2",106,0)
 ;    ECXSTAT  = Enrollment status
"RTN","ECXUTL2",107,0)
 ;    ECXPRIOR = Enrollment priority
"RTN","ECXUTL2",108,0)
 ;    ECXCAT   = Enrollment priority
"RTN","ECXUTL2",109,0)
 ;    ECXSBGRP = Enrollment subgroup
"RTN","ECXUTL2",110,0)
 ;    ECXUESTA = User enrollee
"RTN","ECXUTL2",111,0)
 ;    return value 0 if no data found, 1 if data found
"RTN","ECXUTL2",112,0)
 ;
"RTN","ECXUTL2",113,0)
 N CAT,PRIOR,STAT,X,X1,X2,X3,ENRIEN,ENR,FL,SBGRP
"RTN","ECXUTL2",114,0)
 S (ECXCAT,ECXPRIOR,ECXSTAT,ECXSBGRP,ECXEUSTA)=""
"RTN","ECXUTL2",115,0)
 I $G(DFN)="" Q 0
"RTN","ECXUTL2",116,0)
 ;User enrollee status, if current or future date set to 'U'
"RTN","ECXUTL2",117,0)
 ;DBIA #3989
"RTN","ECXUTL2",118,0)
 S ECXUESTA=$S($$UESTAT^EASUER(DFN):"U",1:"")
"RTN","ECXUTL2",119,0)
 ;Patient type
"RTN","ECXUTL2",120,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL2",121,0)
 ;Combat Veteran Status DBIA #4156
"RTN","ECXUTL2",122,0)
 S X3=$$CVEDT^ECXUTL5(DFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXUTL2",123,0)
 ;enrollment priority DBIA
"RTN","ECXUTL2",124,0)
 S STAT=$$STATUS^DGENA(DFN),PRIOR=$$PRIORITY^DGENA(DFN)
"RTN","ECXUTL2",125,0)
 S CAT=$$CATEGORY^DGENA4(DFN,STAT),SBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",126,0)
 ;find current enrollment when status=2 or 19
"RTN","ECXUTL2",127,0)
 I "^2^19^"[("^"_STAT_"^") S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"") Q 1
"RTN","ECXUTL2",128,0)
 ;find previous enrollment
"RTN","ECXUTL2",129,0)
 S ENRIEN=$$FINDCUR^DGENA(DFN) I ENRIEN="" Q 0
"RTN","ECXUTL2",130,0)
 I $G(RNDT)="" D NOW^%DTC S RNDT=X
"RTN","ECXUTL2",131,0)
 S RNDT=($E(RNDT,1,3)-1)_$E(RNDT,4,7),FL=0
"RTN","ECXUTL2",132,0)
 F  S ENRIEN=$$FINDPRI^DGENA(ENRIEN) Q:'ENRIEN  D  Q:FL
"RTN","ECXUTL2",133,0)
 . S ENR=$$GET^DGENA(ENRIEN,.ENR)
"RTN","ECXUTL2",134,0)
 . I "^2^19^"[("^"_ENR("STATUS")_"^"),ENR("EFFDATE")>RNDT D
"RTN","ECXUTL2",135,0)
 . . S ECXSTAT=ENR("STATUS"),ECXPRIOR=PRIOR,FL=1
"RTN","ECXUTL2",136,0)
 . . S ECXCAT=$$CATEGORY^DGENA4(DFN,ECXSTAT)
"RTN","ECXUTL2",137,0)
 . . S ECXSBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",138,0)
 . . S ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",139,0)
 I FL Q 1
"RTN","ECXUTL2",140,0)
 ;no enrollment status found =2 or 19
"RTN","ECXUTL2",141,0)
 S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",142,0)
 Q 1
"RTN","ECXUTL2",143,0)
 ;
"RTN","ECXUTL2",144,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",145,0)
 ; input
"RTN","ECXUTL2",146,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",147,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",148,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",149,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",150,0)
 ; output
"RTN","ECXUTL2",151,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien^pc provider person class^pc provider npi
"RTN","ECXUTL2",152,0)
 ;             ^prefix_assoc pc provider ien^assoc pc provider person class^assoc pc provider npi
"RTN","ECXUTL2",153,0)
 ;
"RTN","ECXUTL2",154,0)
 N ECPTTM,ECPTPR,ECCLAS,ECPRIME,ECASPR,ECCLAS2
"RTN","ECXUTL2",155,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",156,0)
 ;get pc team data
"RTN","ECXUTL2",157,0)
 S ECPTTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",158,0)
 ;get primary pc provider data
"RTN","ECXUTL2",159,0)
 S ECPTPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",160,0)
 S ECCLAS="" I ECPTPR>0 S ECCLAS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXUTL2",161,0)
 S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",162,0)
 S ECPTNPI=""
"RTN","ECXUTL2",163,0)
 ;assoc pc provider call ok if routine scapmca from patch177 is present
"RTN","ECXUTL2",164,0)
 S ECASPR=""
"RTN","ECXUTL2",165,0)
 S X="SCAPMCA" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL2",166,0)
 .S ECASPR=+$$OUTPTAP^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",167,0)
 S ECCLAS2="" I ECASPR>0 S ECCLAS2=$$PRVCLASS^ECXUTL(ECASPR,ECXDATE)
"RTN","ECXUTL2",168,0)
 S:ECASPR=0 ECASPR="" S:ECASPR]"" ECASPR=ECXPREFX_ECASPR
"RTN","ECXUTL2",169,0)
 S ECASNPI=""
"RTN","ECXUTL2",170,0)
 ;assemble
"RTN","ECXUTL2",171,0)
 S ECXPRIME=ECPTTM_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXUTL2",172,0)
 Q ECXPRIME
"RTN","ECXUTL2",173,0)
 ;
"RTN","ECXUTL2",174,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",175,0)
 ; input
"RTN","ECXUTL2",176,0)
 ; ECXDFN  = file #2 ien (required)
"RTN","ECXUTL2",177,0)
 ; ECXDATE = date of interest (required)
"RTN","ECXUTL2",178,0)
 ; output
"RTN","ECXUTL2",179,0)
 ; ECXINP  = patient status^movment # (file #405 ien)
"RTN","ECXUTL2",180,0)
 ;       current treat. spec. (file #42.4 ien)^admission date/time^
"RTN","ECXUTL2",181,0)
 ;       current ward (file #42 ien)^discharge date/time^
"RTN","ECXUTL2",182,0)
 ;       ward provider^attending phys.^ward (file #44 ien);facility
"RTN","ECXUTL2",183,0)
 ;       (file #40.8 ien);dss dept^dom
"RTN","ECXUTL2",184,0)
 ;           where patient status = I for inpatient
"RTN","ECXUTL2",185,0)
 ;                                = O for outpatient
"RTN","ECXUTL2",186,0)
 ;
"RTN","ECXUTL2",187,0)
 N DFN,DSSDEPT,ECA,ECADM,ECMN,ECTS,ECWARD,ECDC,ECXINP,ECXPRO
"RTN","ECXUTL2",188,0)
 N ECXATP,ECXDD,ECXDOM,ECXPROF,ECXPWP,ECXWW,FAC,VAIP,WRD,ECXPWPPC
"RTN","ECXUTL2",189,0)
 N ECXATPPC
"RTN","ECXUTL2",190,0)
 D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXUTL2",191,0)
 S ECXPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXUTL2",192,0)
 ;
"RTN","ECXUTL2",193,0)
 ;- Inpat/outpat indicator (ECA) initially set to "O" (outpatient)
"RTN","ECXUTL2",194,0)
 S DFN=ECXDFN,ECA="O"
"RTN","ECXUTL2",195,0)
 S (DSSDEPT,ECMN,ECTS,ECADM,ECWARD,ECDC,ECXATP,ECXPWP,ECXWW,WRD,FAC,ECXPWPPC,ECXATPPC)=""
"RTN","ECXUTL2",196,0)
 S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",197,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",198,0)
 I ECMN D
"RTN","ECXUTL2",199,0)
 .S ECTS=+$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:ECTS=0 ECTS=""
"RTN","ECXUTL2",200,0)
 .;
"RTN","ECXUTL2",201,0)
 .;- Get inpat/outpat indicator
"RTN","ECXUTL2",202,0)
 .S ECA=$$INOUTP^ECXUTL4(ECTS)
"RTN","ECXUTL2",203,0)
 .S ECADM=+$G(VAIP(13,1)) S:ECADM=0 ECADM=""
"RTN","ECXUTL2",204,0)
 .S ECWARD=+$G(VAIP(5)) S:ECWARD=0 ECWARD=""
"RTN","ECXUTL2",205,0)
 .I ECWARD D
"RTN","ECXUTL2",206,0)
 ..S WRD=+$P($G(^DIC(42,+ECWARD,44)),U)
"RTN","ECXUTL2",207,0)
 ..S FAC=$P($G(^DIC(42,+ECWARD,0)),U,11)
"RTN","ECXUTL2",208,0)
 ..S DSSDEPT=$P($G(^ECX(727.4,ECWARD,0)),U,2)
"RTN","ECXUTL2",209,0)
 .S ECXWW=WRD_";"_FAC_";"_DSSDEPT,ECDC=+$G(VAIP(17,1)) S:ECDC=0 ECDC=""
"RTN","ECXUTL2",210,0)
 .S ECXPWP=+VAIP(7) S:ECXPWP=0 ECXPWP=""
"RTN","ECXUTL2",211,0)
 .S ECXATP=+VAIP(18) S:ECXATP=0 ECXATP=""
"RTN","ECXUTL2",212,0)
 .S ECXPWPPC=$$PRVCLASS^ECXUTL(ECXPWP,ECADM)
"RTN","ECXUTL2",213,0)
 .S ECXATPPC=$$PRVCLASS^ECXUTL(ECXATP,ECADM)
"RTN","ECXUTL2",214,0)
 .;prefix file #200 iens
"RTN","ECXUTL2",215,0)
 .S:ECXPWP ECXPWP=ECXPROF_ECXPWP S:ECXATP ECXATP=ECXPROF_ECXATP
"RTN","ECXUTL2",216,0)
 S ECXDOM=$P($G(^ECX(727.831,+ECTS,0)),U,2)
"RTN","ECXUTL2",217,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM_U_ECWARD_U_ECDC_U_ECXPWP_U_ECXATP_U_ECXWW_U_ECXDOM_U_ECXPWPPC_U_ECXATPPC
"RTN","ECXUTL2",218,0)
 Q ECXINP
"RTN","ECXUTL2",219,0)
 ;
"RTN","ECXUTL2",220,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",221,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",222,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",223,0)
 ;
"RTN","ECXUTL2",224,0)
 N JJ,ALIAS,INSUR,DIC,DIQ,DA,DR,ECXARY,ECXERR,ECXDA
"RTN","ECXUTL2",225,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",226,0)
 D GETS^DIQ(2,ECXDFN,"1*,","I","ECXARY","ECXERR")
"RTN","ECXUTL2",227,0)
 I $D(ECXERR) Q
"RTN","ECXUTL2",228,0)
 S JJ=0 F  S JJ=$O(ECXARY(2.01,JJ)) Q:JJ=""  D  I ECXPAYOR]"" Q
"RTN","ECXUTL2",229,0)
 . S ALIAS=$G(ECXARY(2.01,JJ,.01,"I"))
"RTN","ECXUTL2",230,0)
 . S ECXPAYOR=$S(ALIAS="SHARING AGREEMENT":"A",ALIAS="TRICARE":"B",ALIAS="CAT C":"C",ALIAS="CATEGORY C":"C",ALIAS="CHAMPVA":"D",ALIAS="CHAMPUS":"E",1:"")
"RTN","ECXUTL2",231,0)
 . W !,$G(CNT)+1
"RTN","ECXUTL2",232,0)
 . W !,"The value of ECXPAYOR is: ",ECXPAYOR
"RTN","ECXUTL2",233,0)
 ;K ECXARY,ECXERR
"RTN","ECXUTL2",234,0)
 I ECXPAYOR]"" D GETS^DIQ(2,ECXDFN,".3121*,","I","ECXARY","ECXERR") D
"RTN","ECXUTL2",235,0)
 . W !,"This is a test"
"RTN","ECXUTL2",236,0)
 . I $D(ECXERR) Q
"RTN","ECXUTL2",237,0)
 . S JJ=0,ECXDA=$O(ECXARY(2.312,JJ)) I ECXDA="" Q
"RTN","ECXUTL2",238,0)
 . S DA=$G(ECXARY(2.312,ECXDA,.01,"I")) I DA="" Q
"RTN","ECXUTL2",239,0)
 . S INSUR=$$GET1^DIQ(36,DA,".01","I","","ECXERR")
"RTN","ECXUTL2",240,0)
 . I '$D(ECXERR) S ECXSAI=$E(ECXARY(2.312,ECXDA,.01,"I"),1,11)
"RTN","ECXUTL2",241,0)
 Q
"RTN","ECXUTL5")
0^31^B26003920
"RTN","ECXUTL5",1,0)
ECXUTL5 ;BPFO/JRC - Utilities for DSS Extracts ; 9/29/05 8:42am
"RTN","ECXUTL5",2,0)
 ;;3.0;DSS EXTRACTS;**71,84**;Dec 22, 1997
"RTN","ECXUTL5",3,0)
 ;
"RTN","ECXUTL5",4,0)
REPEAT(CHAR,TIMES) ;REPEAT A STRING
"RTN","ECXUTL5",5,0)
 ;INPUT  : CHAR - Character to repeat
"RTN","ECXUTL5",6,0)
 ;         TIMES - Number of times to repeat CHAR
"RTN","ECXUTL5",7,0)
 ;OUTPUT : s - String of CHAR that is TIMES long
"RTN","ECXUTL5",8,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",9,0)
 ;
"RTN","ECXUTL5",10,0)
 ;CHECK INPUT
"RTN","ECXUTL5",11,0)
 Q:($G(CHAR)="") ""
"RTN","ECXUTL5",12,0)
 Q:((+$G(TIMES))=0) ""
"RTN","ECXUTL5",13,0)
 ;RETURN STRING
"RTN","ECXUTL5",14,0)
 Q $TR($J("",TIMES)," ",CHAR)
"RTN","ECXUTL5",15,0)
INSERT(INSTR,OUTSTR,COLUMN,LENGTH) ;INSERT A STRING INTO ANOTHER
"RTN","ECXUTL5",16,0)
 ;INPUT  : INSTR - String to insert
"RTN","ECXUTL5",17,0)
 ;         OUTSTR - String to insert into
"RTN","ECXUTL5",18,0)
 ;         COLUMN - Where to begin insertion (defaults to end of OUTSTR)
"RTN","ECXUTL5",19,0)
 ;         LENGTH - Number of characters to clear from OUTSTR
"RTN","ECXUTL5",20,0)
 ;                  (defaults to length of INSTR)
"RTN","ECXUTL5",21,0)
 ;OUTPUT : s - INSTR will be placed into OUTSTR starting at COLUMN
"RTN","ECXUTL5",22,0)
 ;             using LENGTH characters
"RTN","ECXUTL5",23,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",24,0)
 ;
"RTN","ECXUTL5",25,0)
 ;NOTE : This module is based on $$SETSTR^VALM1
"RTN","ECXUTL5",26,0)
 ;
"RTN","ECXUTL5",27,0)
 ;CHECK INPUT
"RTN","ECXUTL5",28,0)
 Q:('$D(INSTR)) ""
"RTN","ECXUTL5",29,0)
 Q:('$D(OUTSTR)) ""
"RTN","ECXUTL5",30,0)
 S:('$D(COLUMN)) COLUMN=$L(OUTSTR)+1
"RTN","ECXUTL5",31,0)
 S:('$D(LENGTH)) LENGTH=$L(INSTR)
"RTN","ECXUTL5",32,0)
 ;DECLARE VARIABLES
"RTN","ECXUTL5",33,0)
 N FRONT,END
"RTN","ECXUTL5",34,0)
 S FRONT=$E((OUTSTR_$J("",COLUMN-1)),1,(COLUMN-1))
"RTN","ECXUTL5",35,0)
 S END=$E(OUTSTR,(COLUMN+LENGTH),$L(OUTSTR))
"RTN","ECXUTL5",36,0)
 ;INSERT STRING
"RTN","ECXUTL5",37,0)
 Q FRONT_$E((INSTR_$J("",LENGTH)),1,LENGTH)_END
"RTN","ECXUTL5",38,0)
TYPE(DFN) ;Determine patient type DBIA #2511
"RTN","ECXUTL5",39,0)
 ;   input 
"RTN","ECXUTL5",40,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",41,0)
 ;
"RTN","ECXUTL5",42,0)
 ;   output
"RTN","ECXUTL5",43,0)
 ;   ECXPTYPE = patient type external value from fle 391
"RTN","ECXUTL5",44,0)
 ;
"RTN","ECXUTL5",45,0)
 ;          AC = ACTIVE DUTY        MI = MILITARY RETIREE
"RTN","ECXUTL5",46,0)
 ;          AL = ALLIED VETERAN     NO = NON-VETERAN (OTHER)
"RTN","ECXUTL5",47,0)
 ;          CO = COLLATERAL         NS = NSC VETERAN
"RTN","ECXUTL5",48,0)
 ;          EM = EMPLOYEE           SC = SC VETERAN
"RTN","ECXUTL5",49,0)
 ;          IN = INELIGIBLE         TR = TRICARE
"RTN","ECXUTL5",50,0)
 ;          return value 0 if no data found, 1 if data found
"RTN","ECXUTL5",51,0)
 ;
"RTN","ECXUTL5",52,0)
 N TYPE,ECXPTYPE
"RTN","ECXUTL5",53,0)
 ;Check input
"RTN","ECXUTL5",54,0)
 Q:'$D(DFN) ""
"RTN","ECXUTL5",55,0)
 S (TYPE,ECXPTYPE)=""
"RTN","ECXUTL5",56,0)
 S TYPE=$G(^DPT(DFN,"TYPE"))
"RTN","ECXUTL5",57,0)
 I 'TYPE Q ECXPTYPE
"RTN","ECXUTL5",58,0)
 S ECXPTYPE=$P($G(^DG(391,TYPE,0)),U,1)
"RTN","ECXUTL5",59,0)
 S ECXPTYPE=$E(ECXPTYPE,1,2)
"RTN","ECXUTL5",60,0)
 Q ECXPTYPE
"RTN","ECXUTL5",61,0)
CVEDT(DFN,DATE) ;Determine patient CV status DBIA #4156
"RTN","ECXUTL5",62,0)
 ;   input
"RTN","ECXUTL5",63,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",64,0)
 ;
"RTN","ECXUTL5",65,0)
 ;   output
"RTN","ECXUTL5",66,0)
 ;   ECXCVE = combat veteran status eligibility
"RTN","ECXUTL5",67,0)
 ;   ECXCVEDT = combat veteran eligibility end date
"RTN","ECXUTL5",68,0)
 ;   ECXCVENC = combat veteran encounter
"RTN","ECXUTL5",69,0)
 ;Initialize variables
"RTN","ECXUTL5",70,0)
 N CVSTAT
"RTN","ECXUTL5",71,0)
 S (CVSTAT,ECXCVE,ECXCVEDT,ECXCVENC)=""
"RTN","ECXUTL5",72,0)
 ;Check input
"RTN","ECXUTL5",73,0)
 Q:'$D(DFN) 0
"RTN","ECXUTL5",74,0)
 ;Call CV API
"RTN","ECXUTL5",75,0)
 S CVSTAT=$$CVEDT^DGCV(DFN,DATE)
"RTN","ECXUTL5",76,0)
 I CVSTAT<1 Q 0
"RTN","ECXUTL5",77,0)
 ;Veteran been given CV eligibility
"RTN","ECXUTL5",78,0)
 S ECXCVE=$S($P(CVSTAT,U,3)=1:"Y",$P(CVSTAT,U,3)=0:"E",1:"")
"RTN","ECXUTL5",79,0)
 ;Save CV eligibility end date and convert from FM to HL7 format
"RTN","ECXUTL5",80,0)
 S ECXCVEDT=$P(CVSTAT,U,2)
"RTN","ECXUTL5",81,0)
 S ECXCVEDT=$$FMTHL7^XLFDT(ECXCVEDT)
"RTN","ECXUTL5",82,0)
 ;Is the veteran eligible for CV in the date of encounter
"RTN","ECXUTL5",83,0)
 S ECXCVENC=$S($P(CVSTAT,U,3)=1:"Y",1:"")
"RTN","ECXUTL5",84,0)
 Q 1
"RTN","ECXUTL5",85,0)
NPRF ;National patient record flags DBIA #3860
"RTN","ECXUTL5",86,0)
 N ECXARR,FLG
"RTN","ECXUTL5",87,0)
 S ECXNPRFI="",CNT=$$GETACT^DGPFAPI(ECXDFN,"ECXARR"),FLG=""
"RTN","ECXUTL5",88,0)
 I 'CNT Q
"RTN","ECXUTL5",89,0)
 F I=1:1:CNT D  Q:FLG
"RTN","ECXUTL5",90,0)
 .I ECXARR(I,"CATEGORY")["NATIONAL" S ECXNPRFI="Y",FLG=1
"RTN","ECXUTL5",91,0)
 Q
"RTN","ECXUTL5",92,0)
RXPTST(K) ;Rx patient status DBIA #2511
"RTN","ECXUTL5",93,0)
 N ECXDIC,STAT
"RTN","ECXUTL5",94,0)
 S (ECXDIC,STAT)=""
"RTN","ECXUTL5",95,0)
 ;Check input
"RTN","ECXUTL5",96,0)
 Q:'$D(K) STAT
"RTN","ECXUTL5",97,0)
 S DA=K,DIC="^PS(53,",DIQ(0)="I",DIQ="ECXDIC",DR="6"
"RTN","ECXUTL5",98,0)
 D EN^DIQ1
"RTN","ECXUTL5",99,0)
 S STAT=$G(ECXDIC(53,K,6,"I"))
"RTN","ECXUTL5",100,0)
 S STAT=$S(STAT=1:"SC",STAT=2:"AA",STAT=3:"OTH",STAT=4:"INP",STAT=5:"NON",1:"")
"RTN","ECXUTL5",101,0)
 Q STAT
"RTN","ECXUTL5",102,0)
NONVAP(K) ;Non-va prescriber DBIA #10060
"RTN","ECXUTL5",103,0)
 N ECXDIC,NONVAP
"RTN","ECXUTL5",104,0)
 S (ECXDIC,NONVAP)=""
"RTN","ECXUTL5",105,0)
 Q:'$D(K) NONVAP
"RTN","ECXUTL5",106,0)
 S DA=K,DIC="^VA(200,",DIQ(0)="I",DIQ="ECXDIC",DR="53.91"
"RTN","ECXUTL5",107,0)
 D EN^DIQ1
"RTN","ECXUTL5",108,0)
 S NONVAP=$G(ECXDIC(200,K,53.91,"I"))
"RTN","ECXUTL5",109,0)
 I NONVAP S NONVAP="Y"
"RTN","ECXUTL5",110,0)
 Q NONVAP
"RTN","ECXUTL5",111,0)
DOIVPO(K,L) ;Add destination for outpatient ivp orders
"RTN","ECXUTL5",112,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",113,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",114,0)
 ;
"RTN","ECXUTL5",115,0)
 ;     Ouput     ordering stop code
"RTN","ECXUTL5",116,0)
 ;
"RTN","ECXUTL5",117,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",118,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",119,0)
 ;Check input
"RTN","ECXUTL5",120,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",121,0)
 ;Check treating specialty
"RTN","ECXUTL5",122,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",123,0)
 ;Go to pharmacy patient file (#55) and return value of field (#136)
"RTN","ECXUTL5",124,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="100",DR(55.01)="136",DA=K,DA(55.01)=L
"RTN","ECXUTL5",125,0)
 D EN^DIQ1
"RTN","ECXUTL5",126,0)
 S CLINIC=$G(ECXDIC(55.01,L,136,"I"))
"RTN","ECXUTL5",127,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",128,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",129,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",130,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",131,0)
 ;Get stop code external value
"RTN","ECXUTL5",132,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",133,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",134,0)
 Q SCODE
"RTN","ECXUTL5",135,0)
 ;
"RTN","ECXUTL5",136,0)
DOUDO(K,L) ;Add destination for outpatient udp orders
"RTN","ECXUTL5",137,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",138,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",139,0)
 ;
"RTN","ECXUTL5",140,0)
 ;     Ouput     ordering stop code
"RTN","ECXUTL5",141,0)
 ;
"RTN","ECXUTL5",142,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",143,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",144,0)
 ;Check treating specialty
"RTN","ECXUTL5",145,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",146,0)
 ;Check input
"RTN","ECXUTL5",147,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",148,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=K,DA(55.06)=L
"RTN","ECXUTL5",149,0)
 D EN^DIQ1
"RTN","ECXUTL5",150,0)
 S CLINIC=$G(ECXDIC(55.06,L,130,"I"))
"RTN","ECXUTL5",151,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",152,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",153,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",154,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",155,0)
 ;Get stop code external value
"RTN","ECXUTL5",156,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",157,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",158,0)
 Q SCODE
"RTN","ECXUTL5",159,0)
 ;
"RTN","ECXUTL5",160,0)
PHAAPI(DRUG) ;Call Pharmacy drug file API dbia 4483
"RTN","ECXUTL5",161,0)
 ;   Input: drug file (#50) ien
"RTN","ECXUTL5",162,0)
 ;
"RTN","ECXUTL5",163,0)
 ;   Output: generic name ^ classification ^ ndc ^ dea hand
"RTN","ECXUTL5",164,0)
 ;            ^ ndf file entry # ^ psndf va product entry ^
"RTN","ECXUTL5",165,0)
 ;            price per disp unit ^ dispense unit
"RTN","ECXUTL5",166,0)
 ;
"RTN","ECXUTL5",167,0)
 ;Initialize variables and scratch global
"RTN","ECXUTL5",168,0)
 N NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,UNIT,ARRAY,DATA
"RTN","ECXUTL5",169,0)
 S (NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,ARRAY,DATA)=""
"RTN","ECXUTL5",170,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXUTL5",171,0)
 K @ARRAY
"RTN","ECXUTL5",172,0)
 D DATA^PSS50(DRUG,,,,,"ECXLIST")
"RTN","ECXUTL5",173,0)
 I @ARRAY@(0)'>0 Q "^^^^^^"
"RTN","ECXUTL5",174,0)
 S NAME=@ARRAY@(DRUG,.01),CLASS=@ARRAY@(DRUG,2),NDC=@ARRAY@(DRUG,31)
"RTN","ECXUTL5",175,0)
 S INV=@ARRAY@(DRUG,3),P1=$P(@ARRAY@(DRUG,20),U),P3=$P(@ARRAY@(DRUG,22),U),PPDU=@ARRAY@(DRUG,16),UNIT=@ARRAY@(DRUG,14.5)
"RTN","ECXUTL5",176,0)
 K @ARRAY
"RTN","ECXUTL5",177,0)
 Q NAME_U_CLASS_U_NDC_U_INV_U_P1_U_P3_U_PPDU_U_UNIT
"RTN","ECXUTL5",178,0)
 ;
"RTN","ECXUTL5",179,0)
TSSC(X) ;Check treating specialty (ts) and if ts equals any of the following
"RTN","ECXUTL5",180,0)
 ;18,23,24,36,41,65,94 then assign predefined code and return value
"RTN","ECXUTL5",181,0)
 ;
"RTN","ECXUTL5",182,0)
 ;    Input: treating specialty
"RTN","ECXUTL5",183,0)
 ;    Output: Ordering stop code
"RTN","ECXUTL5",184,0)
 ;
"RTN","ECXUTL5",185,0)
 S CODE=$S(X=18:293,X=23:295,X=24:290,X=36:294,X=41:296,X=65:291,X=94:292,1:"")
"RTN","ECXUTL5",186,0)
 Q CODE
"VER")
8.0^22.0
"^DD",727,727,3,0)
START DATE/TIME^DI^^0;4^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",727,727,3,1,0)
^.1
"^DD",727,727,3,1,1,0)
727^AE
"^DD",727,727,3,1,1,1)
S ^ECX(727,"AE",$E(X,1,30),DA)=""
"^DD",727,727,3,1,1,2)
K ^ECX(727,"AE",$E(X,1,30),DA)
"^DD",727,727,3,1,1,"%D",0)
^^1^1^3051026^
"^DD",727,727,3,1,1,"%D",1,0)
Cross reference of start/date and time.
"^DD",727,727,3,1,1,"DT")
3051026
"^DD",727,727,3,21,0)
^^1^1^2971107^^^^
"^DD",727,727,3,21,1,0)
The beginning date covered by the extract.
"^DD",727,727,3,"DT")
3051026
"^DD",727,727,16,0)
USER^P200'^VA(200,^0;7^Q
"^DD",727,727,16,21,0)
^.001^2^2^3050510^^
"^DD",727,727,16,21,1,0)
Internal Entry Number (IEN) from the New Person File (#200) of the user
"^DD",727,727,16,21,2,0)
that ran the specified extract.
"^DD",727,727,16,"DT")
3050420
"^DD",727.802,727.802,73,0)
ATTENDING PHYSICIAN PC^F^^1;37^K:$L(X)>7!($L(X)<7) X
"^DD",727.802,727.802,73,3)
Answer must be 7 characters in length.
"^DD",727.802,727.802,73,21,0)
^.001^3^3^3050819^^
"^DD",727.802,727.802,73,21,1,0)
The VA Code of the Person Class of the Attending Physician associated 
"^DD",727.802,727.802,73,21,2,0)
with this record. The VA Code is always of the form "V"_six numeric 
"^DD",727.802,727.802,73,21,3,0)
digits; exactly 7.
"^DD",727.802,727.802,73,23,0)
^^3^3^3050819^
"^DD",727.802,727.802,73,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.802,727.802,73,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.802,727.802,73,23,3,0)
(#200).
"^DD",727.802,727.802,73,"DT")
3050819
"^DD",727.802,727.802,74,0)
PRIMARY WARD PROVIDER PC^F^^1;38^K:$L(X)>7!($L(X)<7) X
"^DD",727.802,727.802,74,3)
Answer must be 7 characters in length.
"^DD",727.802,727.802,74,21,0)
^.001^2^2^3050819^^
"^DD",727.802,727.802,74,21,1,0)
The VA Code of the Person Class of the Primary Ward Provider associated 
"^DD",727.802,727.802,74,21,2,0)
with this record.
"^DD",727.802,727.802,74,23,0)
^^3^3^3050819^
"^DD",727.802,727.802,74,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.802,727.802,74,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.802,727.802,74,23,3,0)
#200.
"^DD",727.802,727.802,74,"DT")
3050819
"^DD",727.802,727.802,75,0)
ENVIRONMENTAL CONTAMINANTS^S^Y:YES;N:N;U:UNKNOWN;^1;39^Q
"^DD",727.802,727.802,75,21,0)
^.001^3^3^3050819^^
"^DD",727.802,727.802,75,21,1,0)
This field is used to indicate that this visit represents treatment of a
"^DD",727.802,727.802,75,21,2,0)
VA patient for a problem that is related to Persian Gulf Exposure or 
"^DD",727.802,727.802,75,21,3,0)
Somalia.
"^DD",727.802,727.802,75,23,0)
^^7^7^3050819^
"^DD",727.802,727.802,75,23,1,0)
This field is derived from the ENVIRONMENTAL CONTAMINANTS field (#.322013)
"^DD",727.802,727.802,75,23,2,0)
in the Patient File (#2) using the patient's DFN. The status indicator is
"^DD",727.802,727.802,75,23,3,0)
returned by SVC^VADPT. The field values are:
"^DD",727.802,727.802,75,23,4,0)
 
"^DD",727.802,727.802,75,23,5,0)
 Y = YES
"^DD",727.802,727.802,75,23,6,0)
 N = NO
"^DD",727.802,727.802,75,23,7,0)
 U = UNKNOWN
"^DD",727.802,727.802,75,"DT")
3050819
"^DD",727.808,727.808,33,0)
DISCHARGE PC PROV PERSON CLASS^F^^1;10^K:$L(X)>7!($L(X)<1) X
"^DD",727.808,727.808,33,3)
Answer must be 1-7 characters in length.
"^DD",727.808,727.808,33,21,0)
^.001^3^3^3050425^^
"^DD",727.808,727.808,33,21,1,0)
The VA Code of the Person Class of the Interpreting Radiologist associated
"^DD",727.808,727.808,33,21,2,0)
with this record. The VA Code is always of the form "V"_six numeric
"^DD",727.808,727.808,33,21,3,0)
digits; exactly 7.
"^DD",727.808,727.808,33,23,0)
^^3^3^3050425^
"^DD",727.808,727.808,33,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.808,727.808,33,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.808,727.808,33,23,3,0)
#200.
"^DD",727.808,727.808,33,"DT")
3050420
"^DD",727.808,727.808,34,0)
DISCHARGE ASSOC PC PROVIDER PC^F^^1;11^K:$L(X)>7!($L(X)<1) X
"^DD",727.808,727.808,34,3)
Answer must be 1-7 characters in length.
"^DD",727.808,727.808,34,21,0)
^.001^3^3^3050425^^
"^DD",727.808,727.808,34,21,1,0)
The VA Code of the Person Class of the Interpreting Radiologist associated
"^DD",727.808,727.808,34,21,2,0)
with this record. The VA Code is always of the form "V"_six numeric
"^DD",727.808,727.808,34,21,3,0)
digits; exactly 7.
"^DD",727.808,727.808,34,23,0)
^^3^3^3050425^
"^DD",727.808,727.808,34,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.808,727.808,34,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.808,727.808,34,23,3,0)
#200.
"^DD",727.808,727.808,34,"DT")
3050420
"^DD",727.809,727.809,58,0)
ORDERING STOP CODE^F^^2;2^K:$L(X)>3!($L(X)<3) X
"^DD",727.809,727.809,58,3)
Answer must be 3 characters in length
"^DD",727.809,727.809,58,21,0)
^.001^1^1^3050613^^^
"^DD",727.809,727.809,58,21,1,0)
The ordering clinic's stop code.
"^DD",727.809,727.809,58,23,0)
^^15^15^3050613^
"^DD",727.809,727.809,58,23,1,0)
For outpatients the stop code is the primary stop code for the clinic
"^DD",727.809,727.809,58,23,2,0)
(first 3 characters of the DSS Identifier field of this extract). If none
"^DD",727.809,727.809,58,23,3,0)
exists, the value is set to null.
"^DD",727.809,727.809,58,23,4,0)
                             
"^DD",727.809,727.809,58,23,5,0)
For observation patients the stop code is translated using the following
"^DD",727.809,727.809,58,23,6,0)
table.
"^DD",727.809,727.809,58,23,7,0)
 
"^DD",727.809,727.809,58,23,8,0)
Treating Specialty      Observation Stop Code
"^DD",727.809,727.809,58,23,9,0)
       18                      293
"^DD",727.809,727.809,58,23,10,0)
       23                      295
"^DD",727.809,727.809,58,23,11,0)
       24                      290
"^DD",727.809,727.809,58,23,12,0)
       36                      296
"^DD",727.809,727.809,58,23,13,0)
       41                      294
"^DD",727.809,727.809,58,23,14,0)
       65                      291
"^DD",727.809,727.809,58,23,15,0)
       94                      292
"^DD",727.809,727.809,58,"DT")
3020611
"^DD",727.81,727.81,83,0)
RX ORDER NUMBER^NJ9,0^^2;8^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.81,727.81,83,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",727.81,727.81,83,21,0)
^^2^2^3050526^
"^DD",727.81,727.81,83,21,1,0)
This field contains the prescription number which shall be a whole number 
"^DD",727.81,727.81,83,21,2,0)
between 1 and 999999999.
"^DD",727.81,727.81,83,23,0)
^^2^2^3050526^
"^DD",727.81,727.81,83,23,1,0)
This field is populated from the RX # field (#.01) located in the
"^DD",727.81,727.81,83,23,2,0)
Prescription file (#52).
"^DD",727.81,727.81,83,"DT")
3050405
"^DD",727.811,727.811,72,0)
PRINCIPAL ANESTHETIST^F^^1;36^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,72,3)
Answer must be 1-11 characters in length.
"^DD",727.811,727.811,72,21,0)
^^4^4^3050929^
"^DD",727.811,727.811,72,21,1,0)
This is the name of the principal anesthesiologist or CRNA (or surgeon, if
"^DD",727.811,727.811,72,21,2,0)
local anesthesia). This field is extracted from field (#.31) PRINC 
"^DD",727.811,727.811,72,21,3,0)
ANESTHETIST located in the Surgery file (#130) and it is preceded by a 
"^DD",727.811,727.811,72,21,4,0)
'2'.
"^DD",727.811,727.811,72,"DT")
3050929
"^DD",727.811,727.811,73,0)
SURGEON PERSON CLASS^F^^1;37^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,73,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,73,21,0)
^.001^3^3^3050425^^^^
"^DD",727.811,727.811,73,21,1,0)
The VA Code of the Person Class of the Surgeon associated with this
"^DD",727.811,727.811,73,21,2,0)
record. The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.811,727.811,73,21,3,0)
7.
"^DD",727.811,727.811,73,23,0)
^.001^3^3^3050425^^
"^DD",727.811,727.811,73,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.811,727.811,73,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.811,727.811,73,23,3,0)
#200.
"^DD",727.811,727.811,73,"DT")
3050405
"^DD",727.811,727.811,74,0)
ATTENDING SURGEON PC^F^^2;1^K:$L(X)>7!($L(X)<7) X
"^DD",727.811,727.811,74,3)
Answer must be 7 characters in length.
"^DD",727.811,727.811,74,21,0)
^.001^3^3^3050426^^
"^DD",727.811,727.811,74,21,1,0)
The VA Code of the Person Class of the Attending Surgeon associated with
"^DD",727.811,727.811,74,21,2,0)
this record. The VA Code is always of the form "V"_six numeric digits;
"^DD",727.811,727.811,74,21,3,0)
exactly 7.
"^DD",727.811,727.811,74,23,0)
^.001^3^3^3050426^^^
"^DD",727.811,727.811,74,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.811,727.811,74,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.811,727.811,74,23,3,0)
#200.
"^DD",727.811,727.811,74,"DT")
3050426
"^DD",727.811,727.811,75,0)
ANESTHESIA SUPERVISOR PC^F^^2;2^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,75,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,75,21,0)
^.001^3^3^3050425^^^^
"^DD",727.811,727.811,75,21,1,0)
The VA Code of the Person Class of the Anesthesia Supervisor associated
"^DD",727.811,727.811,75,21,2,0)
with this record. The VA Code is always of the form "V"_six numeric
"^DD",727.811,727.811,75,21,3,0)
digits; exactly 7.
"^DD",727.811,727.811,75,23,0)
^^3^3^3050425^
"^DD",727.811,727.811,75,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.811,727.811,75,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.811,727.811,75,23,3,0)
#200.
"^DD",727.811,727.811,75,"DT")
3050405
"^DD",727.811,727.811,76,0)
PRINCIPAL ANESTHETIST PC^F^^2;3^K:$L(X)>7!($L(X)<7) X
"^DD",727.811,727.811,76,.1)

"^DD",727.811,727.811,76,3)
Answer must be 7 characters in length.
"^DD",727.811,727.811,76,21,0)
^^3^3^3050929^
"^DD",727.811,727.811,76,21,1,0)
The field will hold the VA Code associated with the active Person Class 
"^DD",727.811,727.811,76,21,2,0)
of the Principal Anesthetist. The VA Code is always of the form "V"_six 
"^DD",727.811,727.811,76,21,3,0)
numeric digits; exactly 7.
"^DD",727.811,727.811,76,23,0)
^.001^3^3^3050929^^^^
"^DD",727.811,727.811,76,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.811,727.811,76,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.811,727.811,76,23,3,0)
#200.
"^DD",727.811,727.811,76,"DT")
3050929
"^DD",727.812,727.812,59,0)
ATTENDING PHYSICIAN PC^F^^1;32^K:$L(X)>7!($L(X)<1) X
"^DD",727.812,727.812,59,3)
Answer must be 1-7 characters in length.
"^DD",727.812,727.812,59,21,0)
^.001^3^3^3050606^^^^
"^DD",727.812,727.812,59,21,1,0)
The field will hold the VA Code associated with the active Person Class of
"^DD",727.812,727.812,59,21,2,0)
the Attending Physician. The VA Code is always of the form "V"_six numeric
"^DD",727.812,727.812,59,21,3,0)
digits; exactly 7.
"^DD",727.812,727.812,59,23,0)
^.001^3^3^3050606^^
"^DD",727.812,727.812,59,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.812,727.812,59,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.812,727.812,59,23,3,0)
#200.
"^DD",727.812,727.812,59,"DT")
3050405
"^DD",727.812,727.812,60,0)
WARD PROVIDER PERSON CLASS^F^^1;33^K:$L(X)>7!($L(X)<1) X
"^DD",727.812,727.812,60,3)
Answer must be 1-7 characters in length.
"^DD",727.812,727.812,60,21,0)
^.001^3^3^3050425^^^
"^DD",727.812,727.812,60,21,1,0)
The field will hold the VA Code associated with the active Person Class of
"^DD",727.812,727.812,60,21,2,0)
the Attending Physician. The VA Code is always of the form "V"_six numeric
"^DD",727.812,727.812,60,21,3,0)
digits; exactly 7.
"^DD",727.812,727.812,60,23,0)
^^3^3^3050425^
"^DD",727.812,727.812,60,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.812,727.812,60,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.812,727.812,60,23,3,0)
#200.
"^DD",727.812,727.812,60,"DT")
3050405
"^DD",727.814,727.814,34,0)
RAD STOP CODE^F^^1;12^K:$L(X)>3!($L(X)<3) X
"^DD",727.814,727.814,34,3)
Answer must be 3 characters in length
"^DD",727.814,727.814,34,21,0)
^^2^2^3050913^
"^DD",727.814,727.814,34,21,1,0)
This field contains the stop code associated with the order and it 
"^DD",727.814,727.814,34,21,2,0)
represents the IMAGING LOCATION field (#4) of sub-file (#70.02).
"^DD",727.814,727.814,34,23,0)
^.001^2^2^3050913^^
"^DD",727.814,727.814,34,23,1,0)
This field is populated from the RAD/NUC MED PATIENT (#70) sub-file 
"^DD",727.814,727.814,34,23,2,0)
REGISTERED EXAMS (#70.02) field (#4) IMAGING LOCATION.
"^DD",727.814,727.814,34,"DT")
3050405
"^DD",727.814,727.814,38,0)
ORDERING PROVIDER PERSON CLASS^F^^1;16^K:$L(X)>7!($L(X)<1) X
"^DD",727.814,727.814,38,3)
Answer must be 1-7 characters in length.
"^DD",727.814,727.814,38,21,0)
^.001^7^7^3050425^^^
"^DD",727.814,727.814,38,21,1,0)
ORDERING PROVIDER PERSON CLASS shall be seven characters in length and 
"^DD",727.814,727.814,38,21,2,0)
will hold the VA code associated with the active person class of the 
"^DD",727.814,727.814,38,21,3,0)
Ordering Provider. The format of the field shall be V999999, where the 
"^DD",727.814,727.814,38,21,4,0)
999999 will be six numeric digits. ORDERING PROVIDER PERSON CLASS value 
"^DD",727.814,727.814,38,21,5,0)
is based on the REQUESTING PHYSICIAN field (#13). Once this is located,
"^DD",727.814,727.814,38,21,6,0)
then the New Person file (#200) points to the Person Class file (#8932.1)
"^DD",727.814,727.814,38,21,7,0)
for person class.  
"^DD",727.814,727.814,38,23,0)
^^3^3^3050425^
"^DD",727.814,727.814,38,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.814,727.814,38,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.814,727.814,38,23,3,0)
#200.
"^DD",727.814,727.814,38,"DT")
3040301
"^DD",727.814,727.814,39,0)
INTERPRETING RADIOLOGIST^F^^1;17^K:$L(X)>11!($L(X)<1) X
"^DD",727.814,727.814,39,3)
Answer must be 1-11 characters in length.
"^DD",727.814,727.814,39,21,0)
^.001^3^3^3050426^^^^
"^DD",727.814,727.814,39,21,1,0)
This is the IEN of the New Person file (#200) entry and it indicates the
"^DD",727.814,727.814,39,21,2,0)
person interpreting this radiology exam. The IEN of the New Person file
"^DD",727.814,727.814,39,21,3,0)
(#200) shall be prefixed with a '2'.
"^DD",727.814,727.814,39,"DT")
3050405
"^DD",727.814,727.814,40,0)
INTERPRETING RADIOLOGIST PC^F^^1;18^K:$L(X)>7!($L(X)<1) X
"^DD",727.814,727.814,40,3)
Answer must be 1-7 characters in length.
"^DD",727.814,727.814,40,21,0)
^.001^3^3^3050426^^^^
"^DD",727.814,727.814,40,21,1,0)
The VA Code of the Person Class of the Interpreting Radiologist associated
"^DD",727.814,727.814,40,21,2,0)
with this record. The VA Code is always of the form "V"_six numeric
"^DD",727.814,727.814,40,21,3,0)
digits; exactly 7.
"^DD",727.814,727.814,40,23,0)
^.001^3^3^3050426^^
"^DD",727.814,727.814,40,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.814,727.814,40,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.814,727.814,40,23,3,0)
#200.
"^DD",727.814,727.814,40,"DT")
3050405
"^DD",727.814,727.814,41,0)
CLINIC NAME^NJ8,0^^1;19^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.814,727.814,41,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",727.814,727.814,41,21,0)
^.001^2^2^3050526^^^^
"^DD",727.814,727.814,41,21,1,0)
This field identifies the specific clinic ordering the radiology exam. 
"^DD",727.814,727.814,41,21,2,0)
The clinic IEN should be retrieved from the Hospital Location file (#44).
"^DD",727.814,727.814,41,23,0)
^^4^4^3050526^
"^DD",727.814,727.814,41,23,1,0)
This field identifies the specific clinic (IEN) ordering the radiology
"^DD",727.814,727.814,41,23,2,0)
exam. The clinic name is retrieved from the RAD/NUC MED PATIENT file (#70)
"^DD",727.814,727.814,41,23,3,0)
sub-file (#70.03) PRINCIPAL CLINIC field (#8) which is a pointer to
"^DD",727.814,727.814,41,23,4,0)
HOSPITAL LOCATION FILE (#44).
"^DD",727.814,727.814,41,"DT")
3050405
"^DD",727.814,727.814,42,0)
CLINIC STOP CODE^F^^1;20^K:$L(X)>3!($L(X)<3) X
"^DD",727.814,727.814,42,3)
Answer must be 3 characters in length.
"^DD",727.814,727.814,42,21,0)
^.001^3^3^3050425^^^^
"^DD",727.814,727.814,42,21,1,0)
This is the ordering stop code of the clinic that ordered the radiology 
"^DD",727.814,727.814,42,21,2,0)
exam. This value is retrieved from the Hospital Location file (#44) field
"^DD",727.814,727.814,42,21,3,0)
(#8) 'STOP CODE NUMBER' and it is a pointer to CLINIC STOP file (#40.7).
"^DD",727.814,727.814,42,"DT")
3050405
"^DD",727.817,727.817,36,0)
LOSING ATTENDING PHYSICIAN PC^F^^1;13^K:$L(X)>7!($L(X)<1) X
"^DD",727.817,727.817,36,3)
Answer must be 1-7 characters in length.
"^DD",727.817,727.817,36,21,0)
^.001^3^3^3050425^^^
"^DD",727.817,727.817,36,21,1,0)
The VA Code of the Person Class of the Losing Attending Physician
"^DD",727.817,727.817,36,21,2,0)
associated with this record. The VA Code is always of the form "V"_six
"^DD",727.817,727.817,36,21,3,0)
numeric digits; exactly 7.
"^DD",727.817,727.817,36,23,0)
^^3^3^3050425^
"^DD",727.817,727.817,36,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.817,727.817,36,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.817,727.817,36,23,3,0)
#200.
"^DD",727.817,727.817,36,"DT")
3050405
"^DD",727.817,727.817,37,0)
NEW PRIMARY WARD PROVIDER PC^F^^1;14^K:$L(X)>7!($L(X)<1) X
"^DD",727.817,727.817,37,3)
Answer must be 1-7 characters in length.
"^DD",727.817,727.817,37,21,0)
^.001^3^3^3050425^^^
"^DD",727.817,727.817,37,21,1,0)
The VA Code of the Person Class of the New Primary Ward Provider
"^DD",727.817,727.817,37,21,2,0)
associated with this record. The VA Code is always of the form "V"_six
"^DD",727.817,727.817,37,21,3,0)
numeric digits; exactly 7.
"^DD",727.817,727.817,37,23,0)
^^3^3^3050425^
"^DD",727.817,727.817,37,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.817,727.817,37,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.817,727.817,37,23,3,0)
#200.
"^DD",727.817,727.817,37,"DT")
3050405
"^DD",727.817,727.817,38,0)
NEW ATTENDING PHYSICIAN PC^F^^1;15^K:$L(X)>7!($L(X)<1) X
"^DD",727.817,727.817,38,3)
Answer must be 1-7 characters in length.
"^DD",727.817,727.817,38,21,0)
^.001^3^3^3050502^^^^
"^DD",727.817,727.817,38,21,1,0)
The VA Code of the Person Class of the New Attending Provider associated
"^DD",727.817,727.817,38,21,2,0)
with this record. The VA Code is always of the form "V"_six numeric
"^DD",727.817,727.817,38,21,3,0)
digits; exactly 7.
"^DD",727.817,727.817,38,23,0)
^.001^3^3^3050502^^
"^DD",727.817,727.817,38,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.817,727.817,38,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.817,727.817,38,23,3,0)
#200.
"^DD",727.817,727.817,38,"DT")
3050502
"^DD",727.817,727.817,39,0)
LOSING PRIMARY WARD PROV PC^F^^1;16^K:$L(X)>7!($L(X)<1) X
"^DD",727.817,727.817,39,3)
Answer must be 1-7 characters in length.
"^DD",727.817,727.817,39,21,0)
^.001^3^3^3050425^^^^
"^DD",727.817,727.817,39,21,1,0)
The VA Code of the Person Class of the Losing Primary Ward Provider
"^DD",727.817,727.817,39,21,2,0)
associated with this record. The VA Code is always of the form "V"_six
"^DD",727.817,727.817,39,21,3,0)
numeric digits; exactly 7.
"^DD",727.817,727.817,39,23,0)
^^3^3^3050425^
"^DD",727.817,727.817,39,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.817,727.817,39,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.817,727.817,39,23,3,0)
#200.
"^DD",727.817,727.817,39,"DT")
3050405
"^DD",727.819,727.819,38,0)
ORDERING STOP CODE^F^^1;12^K:$L(X)>3!($L(X)<3) X
"^DD",727.819,727.819,38,3)
Answer must be 3 characters in length
"^DD",727.819,727.819,38,21,0)
^.001^2^2^3050613^^
"^DD",727.819,727.819,38,21,1,0)
This field contains the stop code associated with the order. This field is
"^DD",727.819,727.819,38,21,2,0)
set for outpatients only.
"^DD",727.819,727.819,38,23,0)
^^15^15^3050613^
"^DD",727.819,727.819,38,23,1,0)
For outpatients the stop code is the primary stop code for the clinic
"^DD",727.819,727.819,38,23,2,0)
(first 3 characters of the DSS Identifier field of this extract). If none
"^DD",727.819,727.819,38,23,3,0)
exists, the value is set to null.
"^DD",727.819,727.819,38,23,4,0)
 
"^DD",727.819,727.819,38,23,5,0)
For observation patients the stop code is translated using the following
"^DD",727.819,727.819,38,23,6,0)
table.
"^DD",727.819,727.819,38,23,7,0)
 
"^DD",727.819,727.819,38,23,8,0)
Treating Specialty      Observation Stop Code
"^DD",727.819,727.819,38,23,9,0)
       18                      293
"^DD",727.819,727.819,38,23,10,0)
       23                      295
"^DD",727.819,727.819,38,23,11,0)
       24                      290
"^DD",727.819,727.819,38,23,12,0)
       36                      296
"^DD",727.819,727.819,38,23,13,0)
       41                      294
"^DD",727.819,727.819,38,23,14,0)
       65                      291
"^DD",727.819,727.819,38,23,15,0)
       94                      292
"^DD",727.819,727.819,38,"DT")
3021002
"^DD",727.827,727.827,84,0)
ENVIRONMENTAL CONTAMINANTS^S^Y:YES;N:NO;U:UNKNOWN;^2;24^Q
"^DD",727.827,727.827,84,21,0)
^.001^2^2^3050801^^^^
"^DD",727.827,727.827,84,21,1,0)
This field indicates if the patient claims exposure to environmental 
"^DD",727.827,727.827,84,21,2,0)
contaminants while serving in the Persian Gulf or Somalia.
"^DD",727.827,727.827,84,23,0)
^^7^7^3050801^
"^DD",727.827,727.827,84,23,1,0)
This field is derived from the ENVIRONMENTAL CONTAMINANTS field (#.322013)
"^DD",727.827,727.827,84,23,2,0)
in the Patient File (#2) using the patient's DFN. The status indicator 
"^DD",727.827,727.827,84,23,3,0)
is returned by SVC^VADPT. The field values are:
"^DD",727.827,727.827,84,23,4,0)
 
"^DD",727.827,727.827,84,23,5,0)
 Y = YES
"^DD",727.827,727.827,84,23,6,0)
 N = NO
"^DD",727.827,727.827,84,23,7,0)
 U = UNKNOWN
"^DD",727.827,727.827,84,"DT")
3050405
"^DD",727.827,727.827,85,0)
ENCOUNTER EC^S^Y:YES;^2;25^Q
"^DD",727.827,727.827,85,21,0)
^.001^3^3^3050425^^^^
"^DD",727.827,727.827,85,21,1,0)
This field indicates whether treatment provided during this patient 
"^DD",727.827,727.827,85,21,2,0)
encounter is related to exposure to environmental contaminants while 
"^DD",727.827,727.827,85,21,3,0)
serving in the Persian Gulf or Somalia.
"^DD",727.827,727.827,85,23,0)
^.001^4^4^3050425^^^^
"^DD",727.827,727.827,85,23,1,0)
Using the pointer to the VISIT file (#90000.10) a call to the PCE API 
"^DD",727.827,727.827,85,23,2,0)
ENCEVENT^PXAPI is made. This call returns visit data including whether 
"^DD",727.827,727.827,85,23,3,0)
the visit was related to the patient's exposure to environmental 
"^DD",727.827,727.827,85,23,4,0)
contaminants while serving in the Persian Gulf or Somalia.
"^DD",727.827,727.827,85,"DT")
3050405
"^DD",727.829,727.829,20,0)
ORDERING PROVIDER^F^^0;21^K:$L(X)>11!($L(X)<1) X
"^DD",727.829,727.829,20,3)
Answer must be 1-11 characters in length.
"^DD",727.829,727.829,20,21,0)
^^4^4^3050426^
"^DD",727.829,727.829,20,21,1,0)
This is the IEN of the New Person file (#200) entry and it indicates the
"^DD",727.829,727.829,20,21,2,0)
provider that ordered the blood transfusion. The IEN of the New Person 
"^DD",727.829,727.829,20,21,3,0)
file (#200) shall be prefixed with a '2'. This field is extracted from the
"^DD",727.829,727.829,20,21,4,0)
PHYSICIAN field (#6.2) located in the Blood Inventory file (#65).
"^DD",727.829,727.829,20,"DT")
3050426
"^DD",727.829,727.829,21,0)
ORDERING PROVIDER PERSON CLASS^F^^0;22^K:$L(X)>7!($L(X)<7) X
"^DD",727.829,727.829,21,3)
Answer must be 7 characters in length.
"^DD",727.829,727.829,21,21,0)
^.001^3^3^3050426^^
"^DD",727.829,727.829,21,21,1,0)
The VA Code of the Person Class of the Ordering Provider associated
"^DD",727.829,727.829,21,21,2,0)
with this record. The VA Code is always of the form "V"_six numeric
"^DD",727.829,727.829,21,21,3,0)
digits; exactly 7.
"^DD",727.829,727.829,21,23,0)
^^3^3^3050426^
"^DD",727.829,727.829,21,23,1,0)
NEW PERSON file #200, Field #5; file #8932.1. Active Person Class is 
"^DD",727.829,727.829,21,23,2,0)
determined by $$GET^XUA4A72(PERS,DATE), where PERS is the IEN from file 
"^DD",727.829,727.829,21,23,3,0)
#200.
"^DD",727.829,727.829,21,"DT")
3050426
"^DD",728.113,728.113,13,0)
CLINIC^P44'^SC(^0;13^Q
"^DD",728.113,728.113,13,21,0)
^^2^2^2980722^^
"^DD",728.113,728.113,13,21,1,0)
If the patient is an outpatient, this holds a pointer to the clinic
"^DD",728.113,728.113,13,21,2,0)
where the outpatient visit was held.
"^DD",728.113,728.113,13,"DT")
2980713
"^DD",728.113,728.113,14,0)
ORDER DATE^D^^0;14^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",728.113,728.113,14,.1)
Order Date
"^DD",728.113,728.113,14,3)
Enter the date/time the order was made.
"^DD",728.113,728.113,14,21,0)
^.001^1^1^3051014^^
"^DD",728.113,728.113,14,21,1,0)
This is the date/time the medication was ordered.
"^DD",728.113,728.113,14,23,0)
^.001^2^2^3051014^^
"^DD",728.113,728.113,14,23,1,0)
Derived from the START DATE/TIME field (#.02) in the IV Multiple (file
"^DD",728.113,728.113,14,23,2,0)
55.01) of the PHARMACY PATIENT file (#55).
"^DD",728.113,728.113,14,"DT")
3051014
"^DD",728.113,728.113,15,0)
IV ROOM^F^^0;15^K:$L(X)>30!($L(X)<1) X
"^DD",728.113,728.113,15,3)
Answer must be 1-30 characters in length.
"^DD",728.113,728.113,15,21,0)
^.001^1^1^3051014^^
"^DD",728.113,728.113,15,21,1,0)
IV room where IV was prepared for administration.
"^DD",728.113,728.113,15,23,0)
^^3^3^3051014^
"^DD",728.113,728.113,15,23,1,0)
The value is resolved by retrieving the value from Pharmacy Patient file 
"^DD",728.113,728.113,15,23,2,0)
(#55), IV Sub file (#55.01), IV Room field (#.22) which is a pointer to 
"^DD",728.113,728.113,15,23,3,0)
IV ROOM file (#59.5).
"^DD",728.113,728.113,15,"DT")
3051014
"^DD",728.113,728.113,16,0)
VERIFICATION DATE^D^^0;16^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",728.113,728.113,16,21,0)
^.001^2^2^3051014^^
"^DD",728.113,728.113,16,21,1,0)
This is the date the order was acknowledged (through OE/RR) by the nurse 
"^DD",728.113,728.113,16,21,2,0)
if it exist, otherwise this is the date and time the order was entered.
"^DD",728.113,728.113,16,23,0)
^^3^3^3051014^
"^DD",728.113,728.113,16,23,1,0)
This value is retrieved from Pharmacy Patient file (#55), IV Subfile 
"^DD",728.113,728.113,16,23,2,0)
(#55.01), DATE VERIFIED BY NURSE field (#17) if exist. Otherwise it uses
"^DD",728.113,728.113,16,23,3,0)
LOGIN DATE/TIME field (#.21) and if it does not exist it leaves it null.
"^DD",728.113,728.113,16,"DT")
3051014
"^DD",728.904,728.904,2.5,0)
ORDER NUMBER^NJ10,0^^0;10^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",728.904,728.904,2.5,3)
Type a Number between 1 and 9999999999, 0 Decimal Digits
"^DD",728.904,728.904,2.5,21,0)
^^1^1^3040922^
"^DD",728.904,728.904,2.5,21,1,0)
Unit Dose Order number associated with patient record.
"^DD",728.904,728.904,2.5,"DT")
3040922
"BLD",6149,6)
^SEQ #80
**END**
**END**
