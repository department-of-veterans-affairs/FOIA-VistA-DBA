Released SD*5.3*405 SEQ #328
Extracted from mail message
**KIDS**:SD*5.3*405^

**INSTALL NAME**
SD*5.3*405
"BLD",5886,0)
SD*5.3*405^SCHEDULING^0^3041221^y
"BLD",5886,1,0)
^^2^2^3041130^
"BLD",5886,1,1,0)
Prevent the Ambulatory Care Transmission History Report from being 
"BLD",5886,1,2,0)
started if it is already running.
"BLD",5886,4,0)
^9.64PA^^
"BLD",5886,"ABPKG")
n
"BLD",5886,"KRN",0)
^9.67PA^8989.52^19
"BLD",5886,"KRN",.4,0)
.4
"BLD",5886,"KRN",.401,0)
.401
"BLD",5886,"KRN",.402,0)
.402
"BLD",5886,"KRN",.403,0)
.403
"BLD",5886,"KRN",.5,0)
.5
"BLD",5886,"KRN",.84,0)
.84
"BLD",5886,"KRN",3.6,0)
3.6
"BLD",5886,"KRN",3.8,0)
3.8
"BLD",5886,"KRN",9.2,0)
9.2
"BLD",5886,"KRN",9.8,0)
9.8
"BLD",5886,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5886,"KRN",9.8,"NM",1,0)
SCDXPRN2^^0^B31733220
"BLD",5886,"KRN",9.8,"NM","B","SCDXPRN2",1)

"BLD",5886,"KRN",19,0)
19
"BLD",5886,"KRN",19.1,0)
19.1
"BLD",5886,"KRN",101,0)
101
"BLD",5886,"KRN",409.61,0)
409.61
"BLD",5886,"KRN",771,0)
771
"BLD",5886,"KRN",870,0)
870
"BLD",5886,"KRN",8989.51,0)
8989.51
"BLD",5886,"KRN",8989.52,0)
8989.52
"BLD",5886,"KRN",8994,0)
8994
"BLD",5886,"KRN","B",.4,.4)

"BLD",5886,"KRN","B",.401,.401)

"BLD",5886,"KRN","B",.402,.402)

"BLD",5886,"KRN","B",.403,.403)

"BLD",5886,"KRN","B",.5,.5)

"BLD",5886,"KRN","B",.84,.84)

"BLD",5886,"KRN","B",3.6,3.6)

"BLD",5886,"KRN","B",3.8,3.8)

"BLD",5886,"KRN","B",9.2,9.2)

"BLD",5886,"KRN","B",9.8,9.8)

"BLD",5886,"KRN","B",19,19)

"BLD",5886,"KRN","B",19.1,19.1)

"BLD",5886,"KRN","B",101,101)

"BLD",5886,"KRN","B",409.61,409.61)

"BLD",5886,"KRN","B",771,771)

"BLD",5886,"KRN","B",870,870)

"BLD",5886,"KRN","B",8989.51,8989.51)

"BLD",5886,"KRN","B",8989.52,8989.52)

"BLD",5886,"KRN","B",8994,8994)

"BLD",5886,"QUES",0)
^9.62^^
"BLD",5886,"REQB",0)
^9.611^1^1
"BLD",5886,"REQB",1,0)
SD*5.3*135^1
"BLD",5886,"REQB","B","SD*5.3*135",1)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813
"PKG",16,22,1,"PAH",1,0)
405^3041221
"PKG",16,22,1,"PAH",1,1,0)
^^2^2^3041221
"PKG",16,22,1,"PAH",1,1,1,0)
Prevent the Ambulatory Care Transmission History Report from being 
"PKG",16,22,1,"PAH",1,1,2,0)
started if it is already running.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","SCDXPRN2")
0^1^B31733220
"RTN","SCDXPRN2",1,0)
SCDXPRN2 ;ALB/JRP - HISTORY FILE REPORTS;21-JUL-1997
"RTN","SCDXPRN2",2,0)
 ;;5.3;Scheduling;**128,135,405**;AUG 13, 1993
"RTN","SCDXPRN2",3,0)
 ;
"RTN","SCDXPRN2",4,0)
FULLHIST ;Print full transmission history report
"RTN","SCDXPRN2",5,0)
 ; - Report based within the ACRP Transmission History file (#409.77)
"RTN","SCDXPRN2",6,0)
 ; - User prompted for selection criteria
"RTN","SCDXPRN2",7,0)
 ;     Division (one/many/all)     Clinic (o/m/a)     Patient (o/m/a)
"RTN","SCDXPRN2",8,0)
 ; - User prompted for transmission date range
"RTN","SCDXPRN2",9,0)
 ; - Report formatted for 80 columns (allows output to screen)
"RTN","SCDXPRN2",10,0)
 ;
"RTN","SCDXPRN2",11,0)
 ;Declare variables
"RTN","SCDXPRN2",12,0)
 N VAUTSTR,VAUTNI,VAUTVB,VAUTNALL,VAUTD,VAUTC,VAUTN
"RTN","SCDXPRN2",13,0)
 N SCDXBEG,SCDXEND,SCDXGLO,X,Y,SCDXH,SCDXLOCK
"RTN","SCDXPRN2",14,0)
 ;SD*5.3*405 lock user from running multiple times in same session
"RTN","SCDXPRN2",15,0)
 I $D(^TMP("RPT-LOCK",$J,DUZ)) W !!,"Sorry, you either have this report already running or queued to run.",!,"Please try again later.",!! Q
"RTN","SCDXPRN2",16,0)
 ;Initialize selection global
"RTN","SCDXPRN2",17,0)
 S SCDXGLO=$NA(^TMP("SCDXPRN2",$J,"SELECT"))
"RTN","SCDXPRN2",18,0)
 K @SCDXGLO
"RTN","SCDXPRN2",19,0)
 ;Get division(s) - default to 'ALL' if single division
"RTN","SCDXPRN2",20,0)
 S VAUTD=1 I ($P($G(^DG(43,1,"GL")),"^",2)) D DIVISION^VAUTOMA Q:(Y<0)
"RTN","SCDXPRN2",21,0)
 ;Copy into global location [for tasking]
"RTN","SCDXPRN2",22,0)
 ; Local array not deleted - it's required input for clinic selection
"RTN","SCDXPRN2",23,0)
 M @SCDXGLO@("VAUTD")=VAUTD
"RTN","SCDXPRN2",24,0)
 ;Get clinic(s)
"RTN","SCDXPRN2",25,0)
 S VAUTNI=2 D CLINIC^VAUTOMA Q:(Y<0)
"RTN","SCDXPRN2",26,0)
 ;Copy into global location [for tasking] and delete local array
"RTN","SCDXPRN2",27,0)
 M @SCDXGLO@("VAUTC")=VAUTC
"RTN","SCDXPRN2",28,0)
 K VAUTC
"RTN","SCDXPRN2",29,0)
 ;Delete local array of selected divisions
"RTN","SCDXPRN2",30,0)
 K VAUTD
"RTN","SCDXPRN2",31,0)
 ;Get patient(s)
"RTN","SCDXPRN2",32,0)
 S VAUTNI=2 D PATIENT^VAUTOMA Q:(Y<0)
"RTN","SCDXPRN2",33,0)
 ;Copy into global location [for tasking] and delete array
"RTN","SCDXPRN2",34,0)
 M @SCDXGLO@("VAUTN")=VAUTN
"RTN","SCDXPRN2",35,0)
 K VAUTN
"RTN","SCDXPRN2",36,0)
 ;Set allowable date range
"RTN","SCDXPRN2",37,0)
 S SCDXBEG=2961001
"RTN","SCDXPRN2",38,0)
 S SCDXEND=$$DT^XLFDT()
"RTN","SCDXPRN2",39,0)
 ;Begin date help text
"RTN","SCDXPRN2",40,0)
 S SCDXH("B",1)="Enter transmission date to begin search from"
"RTN","SCDXPRN2",41,0)
 S SCDXH("B",2)=" "
"RTN","SCDXPRN2",42,0)
 S SCDXH("B",3)=$$FMTE^XLFDT(SCDXBEG)_" is the earliest date allowed"
"RTN","SCDXPRN2",43,0)
 S SCDXH("B",4)=$$FMTE^XLFDT(SCDXEND)_" will be the latest date allowed"
"RTN","SCDXPRN2",44,0)
 S SCDXH("B",5)=" "
"RTN","SCDXPRN2",45,0)
 S SCDXH("B",6)="Note: Encounter date does not always match date of"
"RTN","SCDXPRN2",46,0)
 S SCDXH("B")="      transmission to the National Patient Care Database"
"RTN","SCDXPRN2",47,0)
 ; End date help text
"RTN","SCDXPRN2",48,0)
 S SCDXH("E",1)="Enter transmission date to end search at"
"RTN","SCDXPRN2",49,0)
 S SCDXH("E",2)=" "
"RTN","SCDXPRN2",50,0)
 S SCDXH("E",3)=$$FMTE^XLFDT(SCDXEND)_" is the latest date allowed"
"RTN","SCDXPRN2",51,0)
 S SCDXH("E",4)=$$FMTE^XLFDT(SCDXBEG)_" was the earliest date allowed"
"RTN","SCDXPRN2",52,0)
 S SCDXH("E",5)=" "
"RTN","SCDXPRN2",53,0)
 S SCDXH("E",6)="Note: Encounter date does not always match date of"
"RTN","SCDXPRN2",54,0)
 S SCDXH("E")="      transmission to the National Patient Care Database"
"RTN","SCDXPRN2",55,0)
 S X=$$GETDTRNG^SCDXUTL1(SCDXBEG,SCDXEND,$NA(SCDXH("B")),$NA(SCDXH("E")))
"RTN","SCDXPRN2",56,0)
 Q:(X<0)
"RTN","SCDXPRN2",57,0)
 K SCDXH
"RTN","SCDXPRN2",58,0)
 S SCDXBEG=+$P(X,"^",1)
"RTN","SCDXPRN2",59,0)
 S SCDXEND=+$P(X,"^",2)
"RTN","SCDXPRN2",60,0)
 S SCDXLOCK=$J_U_DUZ  ;SD*5.3*405 lock variable for when report is queued
"RTN","SCDXPRN2",61,0)
 S ^TMP("RPT-LOCK",$J,DUZ)=""  ;SD*5.3*405 set lock for current user
"RTN","SCDXPRN2",62,0)
 ;Queue/run
"RTN","SCDXPRN2",63,0)
 W !!
"RTN","SCDXPRN2",64,0)
 S ZTDESC="ACRP TRANSMISSION HISTORY REPORT"
"RTN","SCDXPRN2",65,0)
 S ZTSAVE("SCDXBEG")=""
"RTN","SCDXPRN2",66,0)
 S ZTSAVE("SCDXEND")=""
"RTN","SCDXPRN2",67,0)
 S ZTSAVE("SCDXGLO")=""
"RTN","SCDXPRN2",68,0)
 S ZTSAVE("SCDXLOCK")=""  ;SD*5.3*405
"RTN","SCDXPRN2",69,0)
 S ZTSAVE($$OREF^DILF(SCDXGLO))=""
"RTN","SCDXPRN2",70,0)
 S IOP="Q"
"RTN","SCDXPRN2",71,0)
 D EN^XUTMDEVQ("PRINT^SCDXPRN2",ZTDESC,.ZTSAVE)
"RTN","SCDXPRN2",72,0)
 ;Done - reset IO variables (safety measure) and quit
"RTN","SCDXPRN2",73,0)
 I POP K ^TMP("RPT-LOCK",$J,DUZ)
"RTN","SCDXPRN2",74,0)
 I $D(X) I X="^" K ^TMP("RPT-LOCK",$J,DUZ)
"RTN","SCDXPRN2",75,0)
 D HOME^%ZIS
"RTN","SCDXPRN2",76,0)
 Q
"RTN","SCDXPRN2",77,0)
 ;
"RTN","SCDXPRN2",78,0)
PRINT ;Print report
"RTN","SCDXPRN2",79,0)
 ;Input  : SCDXBEG - Begin date (FileMan)
"RTN","SCDXPRN2",80,0)
 ;                 - Refers to date/time of transmission (not encounter)
"RTN","SCDXPRN2",81,0)
 ;         SCDXEND - End date (FileMan)
"RTN","SCDXPRN2",82,0)
 ;                 - Refers to date/time of transmission (not encounter)
"RTN","SCDXPRN2",83,0)
 ;         SCDXGLO - Global containing selection criteria
"RTN","SCDXPRN2",84,0)
 ;         SCDXLOCK- Equals user's DUZ and locks the same user from
"RTN","SCDXPRN2",85,0)
 ;                   queueing the report more than once at the same time
"RTN","SCDXPRN2",86,0)
 ;                   This was output of calls to VAUTOMA for division,
"RTN","SCDXPRN2",87,0)
 ;                   clinic, and patient (full global reference)
"RTN","SCDXPRN2",88,0)
 ;           Divisions selected   Clinics selected     Patients selected
"RTN","SCDXPRN2",89,0)
 ;           SCDXGLO("VAUTD")     SCDXGLO("VAUTC")     SCDXGLO("VAUTN")
"RTN","SCDXPRN2",90,0)
 ;           SCDXGLO("VAUTD",x)   SCDXGLO("VAUTC",x)   SCDXGLO("VAUTN",x)
"RTN","SCDXPRN2",91,0)
 ;Output : None
"RTN","SCDXPRN2",92,0)
 ;Notes  : All input is REQUIRED - report will not be generated if
"RTN","SCDXPRN2",93,0)
 ;         any of the variables are not defined
"RTN","SCDXPRN2",94,0)
 ;       : All input (including global location) will be deleted on exit
"RTN","SCDXPRN2",95,0)
 ;       : User will be prompted for device except on queued entry
"RTN","SCDXPRN2",96,0)
 ;
"RTN","SCDXPRN2",97,0)
 ;Declare variables
"RTN","SCDXPRN2",98,0)
 N DIC,L,BY,FR,TO,DHD,FLDS,DISPAR,DIOBEG,DIOEND,IOP,SCDXSLVE,DOLJ
"RTN","SCDXPRN2",99,0)
 ;Define sort criteria
"RTN","SCDXPRN2",100,0)
 S DIC="^SD(409.77,"
"RTN","SCDXPRN2",101,0)
 S L=0
"RTN","SCDXPRN2",102,0)
 ;Define sort array
"RTN","SCDXPRN2",103,0)
 S BY(0)="^TMP(""SCDXPRN2"",$J,""SORT"","
"RTN","SCDXPRN2",104,0)
 S L(0)=6
"RTN","SCDXPRN2",105,0)
 ;Make FileMan think sort already done (set fake value into array)
"RTN","SCDXPRN2",106,0)
 S ^TMP("SCDXPRN2",$J,"SORT",1,2,3,4,5,6)=""
"RTN","SCDXPRN2",107,0)
 ;Define sort routine
"RTN","SCDXPRN2",108,0)
 S DIOBEG="D SORT^SCDXPRN2"
"RTN","SCDXPRN2",109,0)
 ;Define post-report action
"RTN","SCDXPRN2",110,0)
 S DIOEND="K ^TMP(""SCDXPRN2"",$J,""SORT"")"
"RTN","SCDXPRN2",111,0)
 ;Form feed for each clinic
"RTN","SCDXPRN2",112,0)
 S DISPAR(0,2)="#^;"
"RTN","SCDXPRN2",113,0)
 ;Define print fields
"RTN","SCDXPRN2",114,0)
 S FLDS="[SCDX XMIT HIST FULL PRINT]"
"RTN","SCDXPRN2",115,0)
 ;Define header & footer
"RTN","SCDXPRN2",116,0)
 S DHD="[SCDX XMIT HIST FULL HEADER]-[SCDX XMIT HIST FULL FOOTER]"
"RTN","SCDXPRN2",117,0)
 ;Use current device
"RTN","SCDXPRN2",118,0)
 S IOP=IO
"RTN","SCDXPRN2",119,0)
 ;Remember IO("S")
"RTN","SCDXPRN2",120,0)
 S SCDXSLVE=+$G(IO("S"))
"RTN","SCDXPRN2",121,0)
 ;Print report
"RTN","SCDXPRN2",122,0)
 D EN1^DIP
"RTN","SCDXPRN2",123,0)
 ;Reset IO("S")
"RTN","SCDXPRN2",124,0)
 S:(SCDXSLVE) IO("S")=SCDXSLVE
"RTN","SCDXPRN2",125,0)
 ;Delete input array & variables
"RTN","SCDXPRN2",126,0)
 K @SCDXGLO
"RTN","SCDXPRN2",127,0)
 K SCDXBEG,SCDXEND,SCDXGLO
"RTN","SCDXPRN2",128,0)
 ;If queued, purge task
"RTN","SCDXPRN2",129,0)
 S:($D(ZTQUEUED)) ZTREQ="@"
"RTN","SCDXPRN2",130,0)
 ;SD*5.3*405 remove lock for current user
"RTN","SCDXPRN2",131,0)
 K ^TMP("RPT-LOCK",$P(SCDXLOCK,U,1),$P(SCDXLOCK,U,2))
"RTN","SCDXPRN2",132,0)
 Q
"RTN","SCDXPRN2",133,0)
 ;
"RTN","SCDXPRN2",134,0)
SORT ;Sort routine
"RTN","SCDXPRN2",135,0)
 ;Input  : See TASK entry point
"RTN","SCDXPRN2",136,0)
 ;Output : Global containing sorted entries for printing
"RTN","SCDXPRN2",137,0)
 ;           ^TMP("SCDXPRN2",$J,"SORT",Div,Clin,Pat,EncDate,VID,DA)
"RTN","SCDXPRN2",138,0)
 ;             Div = Division name     Clin = Clinic name
"RTN","SCDXPRN2",139,0)
 ;             Pat = Patient name      EncDate = Encounter date [no time]
"RTN","SCDXPRN2",140,0)
 ;             VID = Visit ID          DA = Pointer to entry in 409.77
"RTN","SCDXPRN2",141,0)
 ;Notes  : ^TMP("SCDXPRN2",$J,"SORT") will be initialized upon entry
"RTN","SCDXPRN2",142,0)
 ;       : Existance & validity of input is assumed
"RTN","SCDXPRN2",143,0)
 ;
"RTN","SCDXPRN2",144,0)
 ;Declare variables
"RTN","SCDXPRN2",145,0)
 N HISTPTR,NODE,DATE,NAME,CLINIC,DIVISION,VID
"RTN","SCDXPRN2",146,0)
 N BEGDATE,ENDDATE,TMP,VAUTD,VAUTC,VAUTN
"RTN","SCDXPRN2",147,0)
 ;Make begin and end dates opposing midnights
"RTN","SCDXPRN2",148,0)
 S BEGDATE=$$FMADD^XLFDT($P(SCDXBEG,".",1),-1,23,59,59)
"RTN","SCDXPRN2",149,0)
 S ENDDATE=$$FMADD^XLFDT($P(SCDXEND,".",1),0,23,59,59)
"RTN","SCDXPRN2",150,0)
 ;All divisions selected ?
"RTN","SCDXPRN2",151,0)
 S VAUTD=+$G(@SCDXGLO@("VAUTD"))
"RTN","SCDXPRN2",152,0)
 ;All clinics selected ?
"RTN","SCDXPRN2",153,0)
 S VAUTC=+$G(@SCDXGLO@("VAUTC"))
"RTN","SCDXPRN2",154,0)
 ;All patients selected ?
"RTN","SCDXPRN2",155,0)
 S VAUTN=+$G(@SCDXGLO@("VAUTN"))
"RTN","SCDXPRN2",156,0)
 ;Initialize sort array
"RTN","SCDXPRN2",157,0)
 K ^TMP("SCDXPRN2",$J,"SORT")
"RTN","SCDXPRN2",158,0)
 ;Sort/screen
"RTN","SCDXPRN2",159,0)
 F  S BEGDATE=+$O(^SD(409.77,"AXMIT",BEGDATE)) Q:(('BEGDATE)!(BEGDATE>ENDDATE))  D  Q:($$S^%ZTLOAD())
"RTN","SCDXPRN2",160,0)
 .S HISTPTR=0
"RTN","SCDXPRN2",161,0)
 .F  S HISTPTR=+$O(^SD(409.77,"AXMIT",BEGDATE,HISTPTR)) Q:('HISTPTR)  D  Q:($$S^%ZTLOAD())
"RTN","SCDXPRN2",162,0)
 ..;Grab zero node of entry
"RTN","SCDXPRN2",163,0)
 ..S NODE=$G(^SD(409.77,HISTPTR,0))
"RTN","SCDXPRN2",164,0)
 ..;Get encounter date (strip time)
"RTN","SCDXPRN2",165,0)
 ..S TMP=+$P(NODE,"^",2)
"RTN","SCDXPRN2",166,0)
 ..S DATE=$P(TMP,".",1)
"RTN","SCDXPRN2",167,0)
 ..;Get patient
"RTN","SCDXPRN2",168,0)
 ..S TMP=+$P(NODE,"^",3)
"RTN","SCDXPRN2",169,0)
 ..S NAME=$P($G(^DPT(TMP,0),"UNKNOWN"),"^",1)
"RTN","SCDXPRN2",170,0)
 ..;Patient selection screen
"RTN","SCDXPRN2",171,0)
 ..I ('VAUTN) Q:('$D(@SCDXGLO@("VAUTN",TMP)))
"RTN","SCDXPRN2",172,0)
 ..;Get clinic
"RTN","SCDXPRN2",173,0)
 ..S TMP=+$P(NODE,"^",4)
"RTN","SCDXPRN2",174,0)
 ..S CLINIC=$P($G(^SC(TMP,0),"UNKNOWN"),"^",1)
"RTN","SCDXPRN2",175,0)
 ..;Clinic selection screen
"RTN","SCDXPRN2",176,0)
 ..I ('VAUTC) Q:('$D(@SCDXGLO@("VAUTC",TMP)))
"RTN","SCDXPRN2",177,0)
 ..;Get division
"RTN","SCDXPRN2",178,0)
 ..S TMP=+$P(NODE,"^",5)
"RTN","SCDXPRN2",179,0)
 ..S DIVISION=$P($G(^DG(40.8,TMP,0),"UNKNOWN"),"^",1)
"RTN","SCDXPRN2",180,0)
 ..;Division selection screen
"RTN","SCDXPRN2",181,0)
 ..I ('VAUTD) Q:('$D(@SCDXGLO@("VAUTD",TMP)))
"RTN","SCDXPRN2",182,0)
 ..;Get visit ID
"RTN","SCDXPRN2",183,0)
 ..S VID=+$P(NODE,"^",6)
"RTN","SCDXPRN2",184,0)
 ..;Store in pre-sort array
"RTN","SCDXPRN2",185,0)
 ..S ^TMP("SCDXPRN2",$J,"SORT",DIVISION,CLINIC,NAME,DATE,VID,HISTPTR)=""
"RTN","SCDXPRN2",186,0)
 ;Done
"RTN","SCDXPRN2",187,0)
 Q
"VER")
8.0^22
**END**
**END**
