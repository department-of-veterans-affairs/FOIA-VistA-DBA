Released DG*5.3*572 SEQ #525
Extracted from mail message
**KIDS**:DG*5.3*572^

**INSTALL NAME**
DG*5.3*572
"BLD",4753,0)
DG*5.3*572^REGISTRATION^0^3040716^y
"BLD",4753,1,0)
^^1^1^3040331^
"BLD",4753,1,1,0)
See the Patch Description for DG*5.3*572 in the FORUM patch module.
"BLD",4753,4,0)
^9.64PA^391.23^1
"BLD",4753,4,391.23,0)
391.23
"BLD",4753,4,391.23,222)
y^y^f^^n^^y^r^n
"BLD",4753,4,391.23,224)

"BLD",4753,4,"B",391.23,391.23)

"BLD",4753,"ABPKG")
n
"BLD",4753,"KRN",0)
^9.67PA^8989.52^19
"BLD",4753,"KRN",.4,0)
.4
"BLD",4753,"KRN",.401,0)
.401
"BLD",4753,"KRN",.402,0)
.402
"BLD",4753,"KRN",.403,0)
.403
"BLD",4753,"KRN",.5,0)
.5
"BLD",4753,"KRN",.84,0)
.84
"BLD",4753,"KRN",3.6,0)
3.6
"BLD",4753,"KRN",3.8,0)
3.8
"BLD",4753,"KRN",9.2,0)
9.2
"BLD",4753,"KRN",9.8,0)
9.8
"BLD",4753,"KRN",9.8,"NM",0)
^9.68A^24^13
"BLD",4753,"KRN",9.8,"NM",1,0)
DGRODEBR^^0^B32880624
"BLD",4753,"KRN",9.8,"NM",2,0)
DGROHLU^^0^B21646553
"BLD",4753,"KRN",9.8,"NM",3,0)
DGROHLR^^0^B16649538
"BLD",4753,"KRN",9.8,"NM",4,0)
DGROHLU1^^0^B11941906
"BLD",4753,"KRN",9.8,"NM",5,0)
DGROMAIL^^0^B35432483
"BLD",4753,"KRN",9.8,"NM",17,0)
DGROUT^^0^B15077176
"BLD",4753,"KRN",9.8,"NM",18,0)
DGROHLR1^^0^B27240274
"BLD",4753,"KRN",9.8,"NM",19,0)
DGROAPI^^0^B3345396
"BLD",4753,"KRN",9.8,"NM",20,0)
DGROHLQ^^0^B11155545
"BLD",4753,"KRN",9.8,"NM",21,0)
DGROHLQ1^^0^B12371275
"BLD",4753,"KRN",9.8,"NM",22,0)
DGROHLQ3^^0^B10815904
"BLD",4753,"KRN",9.8,"NM",23,0)
DGROHLS^^0^B15986929
"BLD",4753,"KRN",9.8,"NM",24,0)
DGROUT2^^0^B2964547
"BLD",4753,"KRN",9.8,"NM","B","DGROAPI",19)

"BLD",4753,"KRN",9.8,"NM","B","DGRODEBR",1)

"BLD",4753,"KRN",9.8,"NM","B","DGROHLQ",20)

"BLD",4753,"KRN",9.8,"NM","B","DGROHLQ1",21)

"BLD",4753,"KRN",9.8,"NM","B","DGROHLQ3",22)

"BLD",4753,"KRN",9.8,"NM","B","DGROHLR",3)

"BLD",4753,"KRN",9.8,"NM","B","DGROHLR1",18)

"BLD",4753,"KRN",9.8,"NM","B","DGROHLS",23)

"BLD",4753,"KRN",9.8,"NM","B","DGROHLU",2)

"BLD",4753,"KRN",9.8,"NM","B","DGROHLU1",4)

"BLD",4753,"KRN",9.8,"NM","B","DGROMAIL",5)

"BLD",4753,"KRN",9.8,"NM","B","DGROUT",17)

"BLD",4753,"KRN",9.8,"NM","B","DGROUT2",24)

"BLD",4753,"KRN",19,0)
19
"BLD",4753,"KRN",19.1,0)
19.1
"BLD",4753,"KRN",101,0)
101
"BLD",4753,"KRN",409.61,0)
409.61
"BLD",4753,"KRN",771,0)
771
"BLD",4753,"KRN",870,0)
870
"BLD",4753,"KRN",8989.51,0)
8989.51
"BLD",4753,"KRN",8989.52,0)
8989.52
"BLD",4753,"KRN",8994,0)
8994
"BLD",4753,"KRN","B",.4,.4)

"BLD",4753,"KRN","B",.401,.401)

"BLD",4753,"KRN","B",.402,.402)

"BLD",4753,"KRN","B",.403,.403)

"BLD",4753,"KRN","B",.5,.5)

"BLD",4753,"KRN","B",.84,.84)

"BLD",4753,"KRN","B",3.6,3.6)

"BLD",4753,"KRN","B",3.8,3.8)

"BLD",4753,"KRN","B",9.2,9.2)

"BLD",4753,"KRN","B",9.8,9.8)

"BLD",4753,"KRN","B",19,19)

"BLD",4753,"KRN","B",19.1,19.1)

"BLD",4753,"KRN","B",101,101)

"BLD",4753,"KRN","B",409.61,409.61)

"BLD",4753,"KRN","B",771,771)

"BLD",4753,"KRN","B",870,870)

"BLD",4753,"KRN","B",8989.51,8989.51)

"BLD",4753,"KRN","B",8989.52,8989.52)

"BLD",4753,"KRN","B",8994,8994)

"BLD",4753,"QUES",0)
^9.62^^
"BLD",4753,"REQB",0)
^9.611^1^1
"BLD",4753,"REQB",1,0)
DG*5.3*533^2
"BLD",4753,"REQB","B","DG*5.3*533",1)

"DATA",391.23,1,0)
OCCUPATION^2^.07^OCCUPATION^0^I
"DATA",391.23,2,0)
STREET ADDRESS [LINE 1]^2^.111^STREET ADDRESS [Line 1]^0^I
"DATA",391.23,3,0)
ZIP+4^2^.1112^ZIP + 4^0^I
"DATA",391.23,4,0)
STREET ADDRESS [LINE 2]^2^.112^STREET ADDRESS [Line 2]^0^I
"DATA",391.23,5,0)
STREET ADDRESS [LINE 3]^2^.113^STREET ADDRESS [Line 3]^0^I
"DATA",391.23,6,0)
CITY^2^.114^CITY^0^I
"DATA",391.23,7,0)
STATE^2^.115^STATE^0^C
"DATA",391.23,8,0)
ZIP CODE^2^.116^ZIP CODE^0^I
"DATA",391.23,9,0)
COUNTY^2^.117^VA COUNTY CODE^0^I
"DATA",391.23,10,0)
ADDRESS CHANGE DT/TM^2^.118^ADDRESS CHANGE DT/TM^0^I
"DATA",391.23,11,0)
ADDRESS CHANGE SOURCE^2^.119^ADDRESS CHANGE SOURCE^0^I
"DATA",391.23,12,0)
ADDRESS CHANGE SITE^2^.12^ADDRESS CHANGE SITE^0^I
"DATA",391.23,13,0)
TEMPORARY ADDRESS ACTIVE?^2^.12105^TEMPORARY ADDRESS ACTIVE? (ZTA^0^C
"DATA",391.23,14,0)
TEMPORARY STREET [LINE 1]^2^.1211^TEMPORARY STREET [Line 1] (ZTA^0^I
"DATA",391.23,15,0)
TEMPORARY ADDRESS COUNTY^2^.12111^TEMPORARY ADDRESS COUNTY (ZTA ^0^I
"DATA",391.23,16,0)
TEMPORARY ZIP+4^2^.12112^TEMPORARY ZIP+4 (ZTA not retur^0^I
"DATA",391.23,17,0)
TEMPORARY STREET [LINE 2]^2^.1212^TEMPORARY STREET [Line 2] (ZTA^0^I
"DATA",391.23,18,0)
TEMPORARY STREET [LINE 3]^2^.1213^TEMPORARY STREET [Line 3] (ZTA^0^I
"DATA",391.23,19,0)
TEMPORARY CITY^2^.1214^TEMPORARY CITY (ZTA not return^0^I
"DATA",391.23,20,0)
TEMPORARY STATE^2^.1215^TEMPORARY STATE (ZTA not retur^0^E
"DATA",391.23,21,0)
TEMPORARY ZIP CODE^2^.1216^TEMPORARY ZIP CODE (ZTA not re^0^I
"DATA",391.23,22,0)
TEMPORARY ADDRESS START DATE^2^.1217^TEMPORARY ADDRESS START DATE (^0^E
"DATA",391.23,23,0)
TEMPORARY ADDRESS END DATE^2^.1218^TEMPORARY ADDRESS END DATE (ZT^0^I
"DATA",391.23,24,0)
TEMPORARY PHONE NUMBER^2^.1219^TEMPORARY PHONE NUMBER (ZTA no^0^I
"DATA",391.23,25,0)
PHONE NUMBER [RESIDENCE]^2^.131^PHONE NUMBER RESIDENCE ^0^I
"DATA",391.23,26,0)
PHONE NUMBER [WORK]^2^.132^PHONE NUMBER WORK ^0^I
"DATA",391.23,27,0)
CONFIDENTIAL ADDRESS CATEGORY^2.141^.01^CONFIDENTIAL ADDRESS CATEGORY^0^Q
"DATA",391.23,28,0)
CONFIDENTIAL ADDRESS ACTIVE?^2^.14105^CONFIDENTIAL ADDRESS ACTIVE (Y^0^C
"DATA",391.23,29,0)
CONFIDENTIAL STREET [LINE 1]^2^.1411^CONFIDENTIAL ADDRESS LINE 1^0^I
"DATA",391.23,30,0)
CONFIDENTIAL ADDRESS COUNTY^2^.14111^CONFIDENTIAL ADDRESS COUNTY^0^I
"DATA",391.23,31,0)
CONFIDENTIAL STREET [LINE 2]^2^.1412^CONFIDENTIAL ADDRESS LINE 2^0^I
"DATA",391.23,32,0)
CONFIDENTIAL STREET [LINE 3]^2^.1413^CONFIDENTIAL ADDRESS LINE 3^0^I
"DATA",391.23,33,0)
CONFIDENTIAL ADDRESS CITY^2^.1414^CONFIDENTIAL CITY^0^I
"DATA",391.23,34,0)
CONFIDENTIAL ADDRESS STATE^2^.1415^CONFIDENTIAL STATE^0^E
"DATA",391.23,35,0)
CONFIDENTIAL ADDRESS ZIP CODE^2^.1416^CONFIDENTIAL ZIP^0^I
"DATA",391.23,36,0)
CONFIDENTIAL START DATE^2^.1417^CONFIDENTIAL ADDRESS START DAT^0^D
"DATA",391.23,37,0)
CONFIDENTIAL END DATE^2^.1418^CONFIDENTIAL ADDRESS END DATE^0^I
"DATA",391.23,38,0)
K-WORK PHONE NUMBER^2^.21011^Business Phone Number (NK1) (N^0^I
"DATA",391.23,39,0)
K-NAME OF PRIMARY NOK^2^.211^Name (NK1) (Not returned to Vi^0^C
"DATA",391.23,40,0)
K2-WORK PHONE NUMBER^2^.211011^Business Phone Number (NK2) (N^0^I
"DATA",391.23,41,0)
K-RELATIONSHIP TO PATIENT^2^.212^Relationship (NK1) (Not return^0^I
"DATA",391.23,42,0)
K-STREET ADDRESS [LINE 1]^2^.213^STREET ADDRESS [LINE 1] (NK1) ^0^I
"DATA",391.23,43,0)
K-STREET ADDRESS [LINE 2]^2^.214^STREET ADDRESS [LINE 2] (NK1) ^0^I
"DATA",391.23,44,0)
K-STREET ADDRESS [LINE 3]^2^.215^STREET ADDRESS [LINE 3] (NK1) ^0^I
"DATA",391.23,45,0)
K-CITY^2^.216^CITY (NK1) (Not returned to Vi^0^I
"DATA",391.23,46,0)
K-STATE^2^.217^STATE (NK1) (Not returned to V^0^I
"DATA",391.23,47,0)
K-ZIP CODE^2^.218^ZIP (NK1) (Not returned to Vis^0^I
"DATA",391.23,48,0)
K-PHONE NUMBER^2^.219^Phone Number (NK1) (Not return^0^I
"DATA",391.23,49,0)
K2-NAME OF SECONDARY NOK^2^.2191^Name (NK2) (Not returned to Vi^0^E
"DATA",391.23,50,0)
K2-RELATIONSHIP TO PATIENT^2^.2192^Relationship (NK2) (Not return^0^I
"DATA",391.23,51,0)
K2-STREET ADDRESS [LINE 1]^2^.2193^STREET ADDRESS [LINE 1] (NK2) ^0^I
"DATA",391.23,52,0)
K2-STREET ADDRESS [LINE 2]^2^.2194^STREET ADDRESS [LINE 2] (NK2) ^0^I
"DATA",391.23,53,0)
K2-STREET ADDRESS [LINE 3]^2^.2195^STREET ADDRESS [LINE 3] (NK2) ^0^I
"DATA",391.23,54,0)
K2-CITY^2^.2196^CITY (NK2) (Not returned to Vi^0^I
"DATA",391.23,55,0)
K2-STATE^2^.2197^STATE (NK2) (Not returned to V^0^I
"DATA",391.23,56,0)
K2-ZIP CODE^2^.2198^ZIP (NK2) (Not returned to Vis^0^I
"DATA",391.23,57,0)
K2-PHONE NUMBER^2^.2199^Phone Number (NK2) (Not return^0^I
"DATA",391.23,58,0)
EMPLOYER ZIP+4^2^.2205^EMPLOYER ZIP+4^0^I
"DATA",391.23,59,0)
SPOUSE'S EMP ZIP+4^2^.2206^SPOUSE'S EMP ZIP+4^0^I
"DATA",391.23,60,0)
SPOUSE'S EMPLOYER NAME^2^.251^SPOUSE'S EMPLOYER NAME^0^E
"DATA",391.23,61,0)
SPOUSE'S OCCUPATION^2^.2514^SPOUSE'S OCCUPATION^0^I
"DATA",391.23,62,0)
SPOUSE'S EMPLOYMENT STATUS^2^.2515^SPOUSE'S EMPLOYMENT STATUS^0^I
"DATA",391.23,63,0)
SPOUSE'S EMP STREET [LINE 1]^2^.252^SPOUSE'S EMP STREET [LINE 1]^0^I
"DATA",391.23,64,0)
SPOUSE'S EMP STREET [LINE 2]^2^.253^SPOUSE'S EMP STREET [LINE 2]^0^I
"DATA",391.23,65,0)
SPOUSE'S EMP STREET [LINE 3]^2^.254^SPOUSE'S EMP STREET [LINE 3]^0^I
"DATA",391.23,66,0)
SPOUSE'S EMPLOYER'S CITY^2^.255^SPOUSE'S EMPLOYER'S CITY^0^I
"DATA",391.23,67,0)
SPOUSE'S EMPLOYER'S STATE^2^.256^SPOUSE'S EMPLOYER'S STATE^0^I
"DATA",391.23,68,0)
SPOUSE'S EMP PHONE NUMBER^2^.258^SPOUSE'S EMP PHONE NUMBER^0^I
"DATA",391.23,69,0)
EMPLOYER NAME^2^.3111^EMPLOYER NAME^0^E
"DATA",391.23,70,0)
EMPLOYMENT STATUS^2^.31115^EMPLOYMENT STATUS^0^C
"DATA",391.23,71,0)
EMPLOYER STREET [LINE 1]^2^.3113^EMPLOYER STREET LINE 1^0^I
"DATA",391.23,72,0)
EMPLOYER STREET [LINE 2]^2^.3114^EMPLOYER STREET LINE 2^0^I
"DATA",391.23,73,0)
EMPLOYER STREET [LINE 3]^2^.3115^EMPLOYER STREET LINE 3^0^I
"DATA",391.23,74,0)
EMPLOYER CITY^2^.3116^EMPLOYER CITY^0^I
"DATA",391.23,75,0)
EMPLOYER STATE^2^.3117^EMPLOYER STATE^0^I
"DATA",391.23,76,0)
EMPLOYER PHONE NUMBER^2^.3119^EMPLOYER PHONE^0^I
"DATA",391.23,77,0)
VIETNAM FROM DATE^2^.32104^VIETNAM FROM DATE^0^I
"DATA",391.23,78,0)
VIETNAM TO DATE^2^.32105^VIETNAM TO DATE^0^I
"DATA",391.23,79,0)
AGENT ORANGE REGISTRATION DATE^2^.32107^AGENT ORANGE REGISTRATION DATE^0^I
"DATA",391.23,80,0)
AGENT ORANGE EXAM DATE^2^.32109^AGENT ORANGE EXAM DATE^0^I
"DATA",391.23,81,0)
AGENT ORANGE REGISTRATION #^2^.3211^ AGENT ORANGE REGISTRATION #^0^I
"DATA",391.23,82,0)
RADIATION REGISTRATION DATE^2^.32111^RADIATION REGISTRATION DATE^0^I
"DATA",391.23,83,0)
RADIATION EXPOSURE METHOD^2^.3212^RADIATION EXPOSURE METHOD^0^I
"DATA",391.23,84,0)
PERSIAN GULF SERVICE?^2^.32201^PERSIAN GULF SERVICE?^0^C
"DATA",391.23,85,0)
PERSIAN GULF FROM DATE^2^.322011^PERSIAN GULF FROM DATE^0^E
"DATA",391.23,86,0)
PERSIAN GULF TO DATE^2^.322012^PERSIAN GULF TO DATE^0^I
"DATA",391.23,87,0)
SOMALIA SERVICE INDICATED?^2^.322016^SOMALIA SERVICE INDICATED?^0^C
"DATA",391.23,88,0)
SOMALIA FROM DATE^2^.322017^SOMALIA FROM DATE^0^E
"DATA",391.23,89,0)
SOMALIA TO DATE^2^.322018^SOMALIA TO DATE^0^I
"DATA",391.23,90,0)
YUGOSLAVIA SERVICE INDICATED?^2^.322019^YUGOSLAVIA SERVICE INDICATED?^0^C
"DATA",391.23,91,0)
YUGOSLAVIA FROM DATE^2^.32202^YUGOSLAVIA FROM DATE^0^E
"DATA",391.23,92,0)
YUGOSLAVIA TO DATE^2^.322021^YUGOSLAVIA TO DATE^0^I
"DATA",391.23,93,0)
LEBANON SERVICE INDICATED?^2^.3221^LEBANON SERVICE INDICATED?^0^C
"DATA",391.23,94,0)
LEBANON FROM DATE^2^.3222^LEBANON FROM DATE^0^E
"DATA",391.23,95,0)
LEBANON TO DATE^2^.3223^LEBANON TO DATE^0^I
"DATA",391.23,96,0)
GRENADA SERVICE INDICATED?^2^.3224^GRENADA SERVICE INDICATED?^0^C
"DATA",391.23,97,0)
GRENADA FROM DATE^2^.3225^GRENADA FROM DATE^0^E
"DATA",391.23,98,0)
GRENADA TO DATE^2^.3226^GRENADA TO DATE^0^I
"DATA",391.23,99,0)
PANAMA SERVICE INDICATED?^2^.3227^PANAMA SERVICE INDICATED?^0^C
"DATA",391.23,100,0)
PANAMA FROM DATE^2^.3228^PANAMA FROM DATE^0^E
"DATA",391.23,101,0)
PANAMA TO DATE^2^.3229^PANAMA TO DATE^0^I
"DATA",391.23,102,0)
SERVICE DISCHARGE TYPE [LAST]^2^.324^SERVICE DISCHARGE TYPE [LAST]^0^I
"DATA",391.23,103,0)
SERVICE BRANCH [LAST]^2^.325^SERVICE BRANCH [LAST]^0^I
"DATA",391.23,104,0)
SERVICE ENTRY DATE [LAST]^2^.326^SERVICE ENTRY DATE [LAST]^0^E
"DATA",391.23,105,0)
SERVICE SEPARATION DATE [LAST]^2^.327^SERVICE SEPARATION DATE [LAST]^0^I
"DATA",391.23,106,0)
SERVICE NUMBER [LAST]^2^.328^SERVICE NUMBER [LAST]^0^I
"DATA",391.23,107,0)
SERVICE SECOND EPISODE?^2^.3285^SERVICE SECOND EPISODE?^0^C
"DATA",391.23,108,0)
SERVICE DISCHARGE TYPE [NTL]^2^.329^SERVICE DISCHARGE TYPE [NTL]^0^I
"DATA",391.23,109,0)
SERVICE BRANCH [NTL]^2^.3291^SERVICE BRANCH [NTL]^0^I
"DATA",391.23,110,0)
SERVICE ENTRY DATE [NTL]^2^.3292^SERVICE ENTRY DATE [NTL]^0^H
"DATA",391.23,111,0)
SERVICE SEPARATION DATE [NTL]^2^.3293^SERVICE SEPARATION DATE [NTL]^0^I
"DATA",391.23,112,0)
SERVICE NUMBER [NTL]^2^.3294^SERVICE NUMBER [NTL]^0^I
"DATA",391.23,113,0)
SERVICE THIRD EPISODE?^2^.32945^SERVICE THIRD EPISODE?^0^E
"DATA",391.23,114,0)
SERVICE DISCHARGE TYPE [NNTL]^2^.3295^SERVICE DISCHARGE TYPE [NNTL]^0^I
"DATA",391.23,115,0)
SERVICE BRANCH [NNTL]^2^.3296^SERVICE BRANCH [NNTL]^0^I
"DATA",391.23,116,0)
SERVICE ENTRY DATE [NNTL]^2^.3297^SERVICE ENTRY DATE [NNTL]^0^I
"DATA",391.23,117,0)
SERVICE SEPARATION DATE [NNTL]^2^.3298^SERVICE SEPARATION DATE [NNTL]^0^I
"DATA",391.23,118,0)
SERVICE NUMBER [NNTL]^2^.3299^SERVICE NUMBER [NNTL]^0^I
"DATA",391.23,119,0)
E-WORK PHONE NUMBER^2^.33011^Business Phone Number (EC1) (N^0^I
"DATA",391.23,120,0)
E-NAME^2^.331^Name (EC1) (Not returned to Vi^0^C
"DATA",391.23,121,0)
E2-WORK PHONE NUMBER^2^.331011^Business Phone Number (EC2) (N^0^I
"DATA",391.23,122,0)
E2-NAME OF SECONDARY CONTACT^2^.3311^Name (EC2) (Not returned to Vi^0^E
"DATA",391.23,123,0)
E2-RELATIONSHIP TO PATIENT^2^.3312^Relationship (EC2)(Not returne^0^I
"DATA",391.23,124,0)
E2-STREET ADDRESS [LINE 1]^2^.3313^STREET ADDRESS [LINE 1] (EC2) ^0^I
"DATA",391.23,125,0)
E2-STREET ADDRESS [LINE 2]^2^.3314^STREET ADDRESS [LINE 2] (EC2) ^0^I
"DATA",391.23,126,0)
E2-STREET ADDRESS [LINE 3]^2^.3315^STREET ADDRESS [LINE 3] (EC2) ^0^I
"DATA",391.23,127,0)
E2-CITY^2^.3316^CITY (EC2) (Not returned to Vi^0^I
"DATA",391.23,128,0)
E2-STATE^2^.3317^STATE (EC2) (Not returned to V^0^I
"DATA",391.23,129,0)
E2-ZIP CODE^2^.3318^ZIP (EC2) (Not returned to Vis^0^I
"DATA",391.23,130,0)
E2-PHONE NUMBER^2^.3319^Phone Number (EC2) (Not return^0^I
"DATA",391.23,131,0)
E-RELATIONSHIP TO PATIENT^2^.332^Relationship (EC1) (Not return^0^I
"DATA",391.23,132,0)
E-STREET ADDRESS [LINE 1]^2^.333^STREET ADDRESS [LINE 1] (EC1) ^0^I
"DATA",391.23,133,0)
E-STREET ADDRESS [LINE 2]^2^.334^STREET ADDRESS [LINE 2] (EC1) ^0^I
"DATA",391.23,134,0)
E-STREET ADDRESS [LINE 3]^2^.335^STREET ADDRESS [LINE 3] (EC1) ^0^I
"DATA",391.23,135,0)
E-CITY^2^.336^CITY (EC1) (Not returned to Vi^0^I
"DATA",391.23,136,0)
E-STATE^2^.337^STATE (EC1) (Not returned to V^0^I
"DATA",391.23,137,0)
E-ZIP CODE^2^.338^ZIP (EC1) (Not returned to Vis^0^I
"DATA",391.23,138,0)
E-PHONE NUMBER^2^.339^Phone Number (EC1) (Not return^0^I
"DATA",391.23,139,0)
D-WORK PHONE NUMBER^2^.34011^Business Phone Number (DESIG) ^0^I
"DATA",391.23,140,0)
D-NAME OF DESIGNEE^2^.341^Name (DESIG) (Not returned to ^0^C
"DATA",391.23,141,0)
D-RELATIONSHIP TO PATIENT^2^.342^Relationship (DESIG) (Not retu^0^I
"DATA",391.23,142,0)
D-STREET ADDRESS [LINE 1]^2^.343^STREET ADDRESS [LINE 1] (DESIG^0^I
"DATA",391.23,143,0)
D-STREET ADDRESS [LINE 2]^2^.344^STREET ADDRESS [LINE 2] (DESIG^0^I
"DATA",391.23,144,0)
D-STREET ADDRESS [LINE 3]^2^.345^STREET ADDRESS [LINE 3] (DESIG^0^I
"DATA",391.23,145,0)
D-CITY^2^.346^CITY (DESIG) (Not returned to ^0^I
"DATA",391.23,146,0)
D-STATE^2^.347^STATE (DESIG) (Not returned to^0^I
"DATA",391.23,147,0)
D-ZIP CODE^2^.348^ZIP (DESIG) (Not returned to V^0^I
"DATA",391.23,148,0)
D-PHONE NUMBER^2^.349^Phone Number (DESIG) (Not retu^0^I
"DATA",391.23,149,0)
DATE OF DEATH^2^.351^DATE OF DEATH^0^I
"DATA",391.23,150,0)
POW CONFINEMENT LOCATION^2^.526^POW LOCATION^0^I
"DATA",391.23,151,0)
POW FROM DATE^2^.527^POW FROM DATE^0^I
"DATA",391.23,152,0)
POW TO DATE^2^.528^POW TO DATE^0^I
"DATA",391.23,153,0)
COMBAT SERVICE INDICATED?^2^.5291^COMBAT SERVICE INDICATED?^0^C
"DATA",391.23,154,0)
COMBAT SERVICE LOCATION^2^.5292^COMBAT SERVICE LOCATION^0^I
"DATA",391.23,155,0)
COMBAT FROM DATE^2^.5293^COMBAT FROM DATE^0^I
"DATA",391.23,156,0)
COMBAT TO DATE^2^.5294^COMBAT TO DATE^0^I
"DATA",391.23,157,0)
LAST EDITED BY^2^.355^^^I
"DATA",391.23,158,0)
ALIAS^2.01^.01^ALIAS^0^K
"DATA",391.23,159,0)
ALIAS SSN^2.01^1^ALIAS SSN ^0^K
"DATA",391.23,160,0)
SPONSOR^355.8^.01^SPONSOR NAME^0^i
"DATA",391.23,161,0)
MILITARY STATUS^355.8^.02^SPONSOR MILITARY STATUS^0^i
"DATA",391.23,162,0)
BRANCH^355.8^.03^SPONSOR BRANCH OF SERVICE^0^i
"DATA",391.23,163,0)
RANK^355.8^.04^SPONSOR RANK^0^i
"DATA",391.23,164,0)
FAMILY PREFIX^355.81^.03^SPONSOR PREFIX^0^m
"DATA",391.23,165,0)
SPONSOR TYPE^355.81^.04^SPONSOR TYPE^0^m
"DATA",391.23,166,0)
EFFECTIVE DATE^355.81^.05^SPONSOR EFFECTIVE DATE^0^m
"DATA",391.23,167,0)
EXPIRATION DATE^355.81^.06^SPONSOR EXPIRATION DATE^0^m
"DATA",391.23,168,0)
DATE OF BIRTH^355.82^.02^SPONSOR SOCIAL SECURITY NUMBER^0^p
"DATA",391.23,169,0)
MARRIED THIS YEAR^408.22^.14^Married this year^0^s
"DATA",391.23,170,0)
LIVING WITH PATIENT^408.22^.15^Living with Patient^0^s
"DATA",391.23,171,0)
BAD ADDRESS INDICATOR^2^.121^BAD ADDRESS INDICATOR^0^I
"DATA",391.23,172,0)
NAME^38.1^.01^NAME Pointer to Patient File^0^f
"DATA",391.23,173,0)
SECURITY LEVEL^38.1^2^SECURITY LEVEL SENS PATIENT^0^f
"DATA",391.23,174,0)
SPONSOR PERSON NAME^355.82^.01^NAME^0^p
"DATA",391.23,175,0)
SOCIAL SECURITY NUMBER^355.82^.03^SPONSOR SOCIAL SECURITY NUMBER^0^p
"DATA",391.23,176,0)
RACE^2.02^.01^RACE MULTIPLE SUB-FILE^^M
"DATA",391.23,177,0)
ETHNICITY^2.06^.01^ETHNICITY INFORMATION^^O
"DATA",391.23,178,0)
ETHNICITY METHOD OF COLLECTION^2.06^.02^ETHNICITY METHOD OF COLLECTION^^O
"DATA",391.23,179,0)
RACE METHOD OF COLLECTION^2.02^.02^RACE METHOD OF COLLECTION^^M
"DATA",391.23,180,0)
CONFIDENTIAL CATEGORY ACTIVE^2.141^1^CONFIDENTIAL CATEGORY ACTIVE^^Q
"DATA",391.23,181,0)
VIETNAM SERVICE INDICATED?^2^.32101^VIETNAM SERVICE INDICATED?^^C
"DATA",391.23,182,0)
DEATH ENTERED BY^2^.352^DEATH ENTERED BY^^I
"DATA",391.23,183,0)
SOURCE OF NOTIFICATION^2^.353^SOURCE OF NOTIFICATION^^I
"DATA",391.23,184,0)
DATE OF DEATH LAST UPDATED^2^.354^DATE OF DEATH LAST UPDATED^^I
"DATA",391.23,185,0)
POW STATUS INDICATED?^2^.525^POW STATUS INDICATED?^^I
"DATA",391.23,186,0)
AGENT ORANGE EXPOS. INDICATED?^2^.32102^AGENT ORANGE EXPOS. INDICATED?^^C
"DATA",391.23,187,0)
RADIATION EXPOSURE INDICATED?^2^.32103^RADIATION EXPOSURE INDICATED?^^C
"DATA",391.23,188,0)
AGENT ORANGE EXPOSURE LOCATION^2^.3213^AGENT ORANGE EXPOSURE LOCATION^^I
"DATA",391.23,189,0)
MARITAL STATUS^2^.05^MARITAL STATUS^0^C
"DATA",391.23,190,0)
PERIOD OF SERVICE^2^.323^^^I
"DATA",391.23,191,0)
PRIMARY ELIGIBILITY CODE^2^.361^PEC for Veteran^0^C
"FIA",391.23)
DG REGISTER ONCE FIELD DEFINITION
"FIA",391.23,0)
^DGRO(391.23,
"FIA",391.23,0,0)
391.23
"FIA",391.23,0,1)
y^y^f^^n^^y^r^n
"FIA",391.23,0,10)

"FIA",391.23,0,11)

"FIA",391.23,0,"RLRO")

"FIA",391.23,0,"VR")
5.3^DG
"FIA",391.23,391.23)
0
"IX",391.23,391.23,"C",0)
391.23^C^Cross reference on File and Field numbers^R^^R^IR^I^391.23^^^^^LS
"IX",391.23,391.23,"C",1)
S ^DGRO(391.23,"C",X(1),X(2),DA)=""
"IX",391.23,391.23,"C",2)
K ^DGRO(391.23,"C",X(1),X(2),DA)
"IX",391.23,391.23,"C",2.5)
K ^DGRO(391.23,"C")
"IX",391.23,391.23,"C",11.1,0)
^.114IA^2^2
"IX",391.23,391.23,"C",11.1,1,0)
1^F^391.23^1^^1^F
"IX",391.23,391.23,"C",11.1,2,0)
2^F^391.23^2^^2^F
"IX",391.23,391.23,"E",0)
391.23^E^Index on File Number, Field Number, and Order Index.^R^^R^IR^I^391.23^^^^^LS
"IX",391.23,391.23,"E",.1,0)
^^4^4^3040413^^
"IX",391.23,391.23,"E",.1,1,0)
This index cross references FILE NUMBER, FIELD NUMBER, and ORDER INDEX.
"IX",391.23,391.23,"E",.1,2,0)
It is used by ROM code to return the ORDER INDEX when given the FILE
"IX",391.23,391.23,"E",.1,3,0)
NUMBER and FIELD NUMBER.  It speeds up the filing of data at the Register
"IX",391.23,391.23,"E",.1,4,0)
Once Messaging Querying Site.
"IX",391.23,391.23,"E",1)
S ^DGRO(391.23,"E",X(1),X(2),$E(X(3),1,30),DA)=""
"IX",391.23,391.23,"E",2)
K ^DGRO(391.23,"E",X(1),X(2),$E(X(3),1,30),DA)
"IX",391.23,391.23,"E",2.5)
K ^DGRO(391.23,"E")
"IX",391.23,391.23,"E",11.1,0)
^.114IA^3^3
"IX",391.23,391.23,"E",11.1,1,0)
1^F^391.23^1^^1^F
"IX",391.23,391.23,"E",11.1,2,0)
2^F^391.23^2^^2^F
"IX",391.23,391.23,"E",11.1,3,0)
3^F^391.23^5^30^3^F
"MBREQ")
0
"PKG",145,-1)
1^1
"PKG",145,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",145,20,0)
^9.402P^^
"PKG",145,22,0)
^9.49I^1^1
"PKG",145,22,1,0)
5.3^2930813^2930926
"PKG",145,22,1,"PAH",1,0)
572^3040716^529139094
"PKG",145,22,1,"PAH",1,1,0)
^^1^1^3040716
"PKG",145,22,1,"PAH",1,1,1,0)
See the Patch Description for DG*5.3*572 in the FORUM patch module.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","DGROAPI")
0^19^B3345396
"RTN","DGROAPI",1,0)
DGROAPI ;DJH/AMA - ROM EXTERNAL USER INTERFACE APIs ; 27 Apr 2004  4:42 PM
"RTN","DGROAPI",2,0)
 ;;5.3;Registration;**533,572**;Aug 13, 1993
"RTN","DGROAPI",3,0)
 ;
"RTN","DGROAPI",4,0)
 ;This routine contains API entry points that are used by packages
"RTN","DGROAPI",5,0)
 ;and modules that are external to the Register Once module.
"RTN","DGROAPI",6,0)
 ;
"RTN","DGROAPI",7,0)
 Q  ;no direct entry
"RTN","DGROAPI",8,0)
 ;
"RTN","DGROAPI",9,0)
ROMQRY(DGDFN) ;query the LST for all patient demographic data
"RTN","DGROAPI",10,0)
 ;This function queries a given patient's Last Site Treated (LST)
"RTN","DGROAPI",11,0)
 ;site to retrieve all patient demographic data for the patient.
"RTN","DGROAPI",12,0)
 ;The function will only succeed when the QRY HL7 interface is
"RTN","DGROAPI",13,0)
 ;enabled, the patient has a national Integrated Control Number
"RTN","DGROAPI",14,0)
 ;(ICN), the patient's LST is not the local site and the HL7 query
"RTN","DGROAPI",15,0)
 ;receives an ACK from the LST site.
"RTN","DGROAPI",16,0)
 ;
"RTN","DGROAPI",17,0)
 ;  Input:
"RTN","DGROAPI",18,0)
 ;     DGDFN - pointer to patient in PATIENT (#2) file
"RTN","DGROAPI",19,0)
 ;
"RTN","DGROAPI",20,0)
 ;  Output:
"RTN","DGROAPI",21,0)
 ;     Function value - 1 on success, 0 on failure
"RTN","DGROAPI",22,0)
 ;
"RTN","DGROAPI",23,0)
 N DGRSLT,STRTIME,ENDTIME,ELAPTIME
"RTN","DGROAPI",24,0)
 S STRTIME=$P($H,",",2)
"RTN","DGROAPI",25,0)
 ;
"RTN","DGROAPI",26,0)
 S DGRSLT=$$SNDQRY^DGROHLS(DGDFN)
"RTN","DGROAPI",27,0)
 S ENDTIME=$P($H,",",2)
"RTN","DGROAPI",28,0)
 S ELAPTIME=ENDTIME-STRTIME
"RTN","DGROAPI",29,0)
 I DGRSLT=0&(ELAPTIME>59) D
"RTN","DGROAPI",30,0)
 . S DGMSG(1)=" "
"RTN","DGROAPI",31,0)
 . S DGMSG(2)="The connection to the Last Site Treated failed and timed out."
"RTN","DGROAPI",32,0)
 . S DGMSG(3)="Please continue with registration."
"RTN","DGROAPI",33,0)
 . S DGMSG(4)=" "
"RTN","DGROAPI",34,0)
 . D EN^DDIOL(.DGMSG)
"RTN","DGROAPI",35,0)
 ;
"RTN","DGROAPI",36,0)
 I DGRSLT D
"RTN","DGROAPI",37,0)
 . N ZTSAVE,A,ZTRTN,ZTDESC,ZTIO,ZTDTH,DGMSG
"RTN","DGROAPI",38,0)
 . ;Invoke IB Insurance Query (Patch IB*2.0*214)
"RTN","DGROAPI",39,0)
 . S ZTSAVE("IBTYPE")=1,ZTSAVE("DFN")=DGDFN,ZTSAVE("IBDUZ")=$G(DUZ)
"RTN","DGROAPI",40,0)
 . S ZTRTN="BACKGND^IBCNRDV"
"RTN","DGROAPI",41,0)
 . S ZTDTH=$H
"RTN","DGROAPI",42,0)
 . S ZTDESC="IBCN INSURANCE QUERY TASK"
"RTN","DGROAPI",43,0)
 . S ZTIO=""
"RTN","DGROAPI",44,0)
 . D ^%ZTLOAD
"RTN","DGROAPI",45,0)
 . ;display busy message to interactive users
"RTN","DGROAPI",46,0)
 . S DGMSG(2)="Insurance data retrieval has been initiated."
"RTN","DGROAPI",47,0)
 . S DGMSG(3)=" "
"RTN","DGROAPI",48,0)
 . D EN^DDIOL(.DGMSG) R A:5
"RTN","DGROAPI",49,0)
 Q DGRSLT
"RTN","DGROAPI",50,0)
 ;
"RTN","DGRODEBR")
0^1^B32880624
"RTN","DGRODEBR",1,0)
DGRODEBR ;DJH/AMA - ROM DATA ELEMENT BUSINESS RULES ; 27 Apr 2004  12:57 PM
"RTN","DGRODEBR",2,0)
 ;;5.3;Registration;**533,572**;Aug 13, 1993
"RTN","DGRODEBR",3,0)
 ;
"RTN","DGRODEBR",4,0)
 ;BUSINESS RULES TO BE CHECKED JUST BEFORE FILING THE
"RTN","DGRODEBR",5,0)
 ;PATIENT DATA RETRIEVED FROM THE LAST SITE TREATED (LST)
"RTN","DGRODEBR",6,0)
 ;
"RTN","DGRODEBR",7,0)
 ;* DG*5.3*572 changed "I"nternal references to "E"xternal references
"RTN","DGRODEBR",8,0)
POW(DGDATA,DFN,LSTDFN) ;POW STATUS INDICATED?
"RTN","DGRODEBR",9,0)
 ;   DGDATA - Data element array from LST, ^TMP("DGROFDA",$J)
"RTN","DGRODEBR",10,0)
 ;      DFN - Pointer to the PATIENT (#2) file
"RTN","DGRODEBR",11,0)
 ;   LSTDFN - Pointer to the patient data from the LST, in DGDATA
"RTN","DGRODEBR",12,0)
 N RSPOW    ;REQUESTING SITE POW STATUS INDICATED
"RTN","DGRODEBR",13,0)
 N LSTPOW   ;LAST SITE TREATED POW STATUS INDICATED
"RTN","DGRODEBR",14,0)
 S RSPOW=$$GET1^DIQ(2,DFN,.525)
"RTN","DGRODEBR",15,0)
 S LSTPOW=$G(@DGDATA@(2,LSTDFN_",",.525,"E"))
"RTN","DGRODEBR",16,0)
 ;If either of the POW STATUS INDICATED? flags
"RTN","DGRODEBR",17,0)
 ;are "N"o, don't file the POW data element(s)
"RTN","DGRODEBR",18,0)
 I (RSPOW="NO")!(LSTPOW="NO") D
"RTN","DGRODEBR",19,0)
 . N FIELD
"RTN","DGRODEBR",20,0)
 . F FIELD=.525:.001:.528 K @DGDATA@(2,LSTDFN_",",FIELD)
"RTN","DGRODEBR",21,0)
 Q
"RTN","DGRODEBR",22,0)
 ;
"RTN","DGRODEBR",23,0)
AO(DGDATA,DFN,LSTDFN) ;AGENT ORANGE EXPOSURE INDICATED?
"RTN","DGRODEBR",24,0)
 ;   DGDATA - Data element array from LST, ^TMP("DGROFDA",$J)
"RTN","DGRODEBR",25,0)
 ;      DFN - Pointer to the PATIENT (#2) file
"RTN","DGRODEBR",26,0)
 ;   LSTDFN - Pointer to the patient data from the LST, in DGDATA
"RTN","DGRODEBR",27,0)
 N RSAO    ;R.S. AGENT ORANGE EXPOSURE INDICATED
"RTN","DGRODEBR",28,0)
 N LSTAO   ;LST AGENT ORANGE EXPOSURE INDICATED
"RTN","DGRODEBR",29,0)
 S RSAO=$$GET1^DIQ(2,DFN,.32102)
"RTN","DGRODEBR",30,0)
 S LSTAO=$G(@DGDATA@(2,LSTDFN_",",.32102,"E"))
"RTN","DGRODEBR",31,0)
 ;If either of the AGENT ORANGE EXPOSURE INDICATED?
"RTN","DGRODEBR",32,0)
 ;flags are "N"o, delete the AO data element(s)
"RTN","DGRODEBR",33,0)
 I (RSAO="NO")!(LSTAO="NO") D
"RTN","DGRODEBR",34,0)
 . N FIELD
"RTN","DGRODEBR",35,0)
 . ;added AO LOCATION OF EXPOSURE (2/.3213) for DG*5.3*572  DJH
"RTN","DGRODEBR",36,0)
 . F FIELD=.32102,.32107,.32108,.32109,.3211,.3213 K @DGDATA@(2,LSTDFN_",",FIELD)
"RTN","DGRODEBR",37,0)
 Q
"RTN","DGRODEBR",38,0)
 ;
"RTN","DGRODEBR",39,0)
IR(DGDATA,DFN,LSTDFN) ;RADIATION EXPOSURE INDICATED?
"RTN","DGRODEBR",40,0)
 ;   DGDATA - Data element array from LST, ^TMP("DGROFDA",$J)
"RTN","DGRODEBR",41,0)
 ;      DFN - Pointer to the PATIENT (#2) file
"RTN","DGRODEBR",42,0)
 ;   LSTDFN - Pointer to the patient data from the LST, in DGDATA
"RTN","DGRODEBR",43,0)
 N RSIR    ;R.S. RADIATION EXPOSURE INDICATED
"RTN","DGRODEBR",44,0)
 N LSTIR   ;LST RADIATION EXPOSURE INDICATED
"RTN","DGRODEBR",45,0)
 S RSIR=$$GET1^DIQ(2,DFN,.32103)
"RTN","DGRODEBR",46,0)
 S LSTIR=$G(@DGDATA@(2,LSTDFN_",",.32103,"E"))
"RTN","DGRODEBR",47,0)
 ;If either of the RADIATION EXPOSURE INDICATED
"RTN","DGRODEBR",48,0)
 ;flags are "N"o, delete the IR data elements
"RTN","DGRODEBR",49,0)
 I (RSIR="NO")!(LSTIR="NO") D
"RTN","DGRODEBR",50,0)
 . N FIELD
"RTN","DGRODEBR",51,0)
 . F FIELD=.32103,.32111,.3212 K @DGDATA@(2,LSTDFN_",",FIELD)
"RTN","DGRODEBR",52,0)
 Q
"RTN","DGRODEBR",53,0)
 ;
"RTN","DGRODEBR",54,0)
DOD(DGDATA,DFN,LSTDFN) ;DATE OF DEATH
"RTN","DGRODEBR",55,0)
 ;Retrieve all DATE OF DEATH data elements, but instead of being filed,
"RTN","DGRODEBR",56,0)
 ;they will be placed into a mail message to the appropriate group.
"RTN","DGRODEBR",57,0)
 ;
"RTN","DGRODEBR",58,0)
 ;   DGDATA - Data element array from LST, ^TMP("DGROFDA",$J)
"RTN","DGRODEBR",59,0)
 ;      DFN - Pointer to the PATIENT (#2) file
"RTN","DGRODEBR",60,0)
 ;   LSTDFN - Pointer to the patient data from the LST, in DGDATA
"RTN","DGRODEBR",61,0)
 ;
"RTN","DGRODEBR",62,0)
 N DGMSG,FLD
"RTN","DGRODEBR",63,0)
 ;Only send messages if actual DOD is defined (field # .351) ;DG*5.3*572
"RTN","DGRODEBR",64,0)
 I $D(@DGDATA@(2,LSTDFN_",",.351)) D
"RTN","DGRODEBR",65,0)
 . D DODMAIL^DGROMAIL(DGDATA,DFN,LSTDFN)
"RTN","DGRODEBR",66,0)
 . S DGMSG(1)=" "
"RTN","DGRODEBR",67,0)
 . S DGMSG(2)="Date of Death information has been retrieved from the LST."
"RTN","DGRODEBR",68,0)
 . S DGMSG(3)="This information has NOT been filed into the patient's record."
"RTN","DGRODEBR",69,0)
 . S DGMSG(4)="A mail message has been sent to the Register Once mail group."
"RTN","DGRODEBR",70,0)
 . D EN^DDIOL(.DGMSG) R A:5
"RTN","DGRODEBR",71,0)
 ;Delete DoD fields from FDA array so they're not filed.
"RTN","DGRODEBR",72,0)
 F FLD=.351:.001:.355 K @DGDATA@(2,LSTDFN_",",FLD)   ;DG*5.3*572 - added .355
"RTN","DGRODEBR",73,0)
 Q
"RTN","DGRODEBR",74,0)
 ;
"RTN","DGRODEBR",75,0)
TA(DGDATA,LSTDFN) ;TEMPORARY ADDRESS
"RTN","DGRODEBR",76,0)
 ;   DGDATA - Data element array from LST, ^TMP("DGROFDA",$J)
"RTN","DGRODEBR",77,0)
 ;   LSTDFN - Pointer to the patient data from the LST, in DGDATA
"RTN","DGRODEBR",78,0)
 N LSTTAED ;LST TEMPORARY ADDRESS END DATE (EXTERNAL)
"RTN","DGRODEBR",79,0)
 N LSTTAEDF ;LST TEMPORARY ADDRESS END DATE FILEMAN (DG*5.3*572)
"RTN","DGRODEBR",80,0)
 S LSTTAED=$G(@DGDATA@(2,LSTDFN_",",.1218,"E"))
"RTN","DGRODEBR",81,0)
 ;*Convert External LST date to Fileman date (DG*5.3*572)
"RTN","DGRODEBR",82,0)
 S X=LSTTAED
"RTN","DGRODEBR",83,0)
 S %DT="RSN"
"RTN","DGRODEBR",84,0)
 D ^%DT
"RTN","DGRODEBR",85,0)
 S LSTTAEDF=Y
"RTN","DGRODEBR",86,0)
 ;If the TEMPORARY ADDRESS END DATE is less than the
"RTN","DGRODEBR",87,0)
 ;date of the query, delete the TA data elements
"RTN","DGRODEBR",88,0)
 I (LSTTAEDF>0),(LSTTAEDF<DT) D
"RTN","DGRODEBR",89,0)
 . N FIELD
"RTN","DGRODEBR",90,0)
 . F FIELD=.12105,.12111,.12112,.1211:.0001:.1219 K @DGDATA@(2,LSTDFN_",",FIELD)
"RTN","DGRODEBR",91,0)
 K X,%DT,Y
"RTN","DGRODEBR",92,0)
 Q
"RTN","DGRODEBR",93,0)
 ;
"RTN","DGRODEBR",94,0)
SP(DGDATA,DFN,LSTDFN) ;SENSITIVE PATIENT
"RTN","DGRODEBR",95,0)
 ;   DGDATA - Data element array from LST, ^TMP("DGROFDA",$J)
"RTN","DGRODEBR",96,0)
 ;      DFN - Pointer to the PATIENT (#2) file
"RTN","DGRODEBR",97,0)
 ;   LSTDFN - Pointer to the patient data from the LST, in DGDATA
"RTN","DGRODEBR",98,0)
 ;
"RTN","DGRODEBR",99,0)
 N RSSP    ;R.S. SENSITIVE PATIENT
"RTN","DGRODEBR",100,0)
 N LSTSP   ;LST SENSITIVE PATIENT
"RTN","DGRODEBR",101,0)
 S RSSP=$$GET1^DIQ(38.1,DFN,2)
"RTN","DGRODEBR",102,0)
 S LSTSP=$G(@DGDATA@(38.1,LSTDFN_",",2,"E"))
"RTN","DGRODEBR",103,0)
 ;
"RTN","DGRODEBR",104,0)
 ;* Remove code deleting Primary Eligibility Code (DG*5.3*572)
"RTN","DGRODEBR",105,0)
 ;* In all cases, delete Patient Type
"RTN","DGRODEBR",106,0)
 K @DGDATA@(2,LSTDFN_",",391)
"RTN","DGRODEBR",107,0)
 ;
"RTN","DGRODEBR",108,0)
 ;If the SENSITIVE PATIENT flag is received from the HEC -- OR -- if the
"RTN","DGRODEBR",109,0)
 ;flag is NOT received from both the HEC and LST, retrieve and file all
"RTN","DGRODEBR",110,0)
 ;Sensitive data elements, but NOT the fields for the Security Log file.
"RTN","DGRODEBR",111,0)
 I '((RSSP'="SENSITIVE")&(LSTSP="SENSITIVE")) D  I 1
"RTN","DGRODEBR",112,0)
 . K @DGDATA@(38.1)
"RTN","DGRODEBR",113,0)
 E  D
"RTN","DGRODEBR",114,0)
 . ;Otherwise (flag not received from the HEC but is from the LST),
"RTN","DGRODEBR",115,0)
 . ;send a mail message to the ISO and the "Register Once" mail
"RTN","DGRODEBR",116,0)
 . ;group that this patient is listed as Sensitive
"RTN","DGRODEBR",117,0)
 . D SPMAIL^DGROMAIL(DFN)
"RTN","DGRODEBR",118,0)
 . N DGMSG
"RTN","DGRODEBR",119,0)
 . S DGMSG(1)=" "
"RTN","DGRODEBR",120,0)
 . S DGMSG(2)="Sensitive Patient information has been retrieved from the LST."
"RTN","DGRODEBR",121,0)
 . S DGMSG(3)="This information has been filed into the patient's record."
"RTN","DGRODEBR",122,0)
 . S DGMSG(4)="A mail message has been sent to the Register Once mail group"
"RTN","DGRODEBR",123,0)
 . S DGMSG(5)="and the ISO explaining that this information has been received."
"RTN","DGRODEBR",124,0)
 . D EN^DDIOL(.DGMSG) R A:5
"RTN","DGRODEBR",125,0)
 Q
"RTN","DGRODEBR",126,0)
 ;
"RTN","DGRODEBR",127,0)
RE ;RACE AND ETHNICITY
"RTN","DGRODEBR",128,0)
 ;If the RACE AND ETHNICITY data not already
"RTN","DGRODEBR",129,0)
 ;populated, file it (already the basic rule)
"RTN","DGRODEBR",130,0)
 Q
"RTN","DGRODEBR",131,0)
 ;
"RTN","DGRODEBR",132,0)
CA(DGDATA,LSTDFN) ;CONFIDENTIAL ADDRESS
"RTN","DGRODEBR",133,0)
 ;   DGDATA - Data element array from LST, ^TMP("DGROFDA",$J)
"RTN","DGRODEBR",134,0)
 ;   LSTDFN - Pointer to the patient data from the LST, in DGDATA
"RTN","DGRODEBR",135,0)
 N LSTCAAF   ;LST CONFIDENTIAL ADDRESS ACTIVE FLAG
"RTN","DGRODEBR",136,0)
 N LSTCAED   ;LST CONFIDENTIAL ADDRESS END DATE
"RTN","DGRODEBR",137,0)
 N LSTCAEDF ;LST CONFIDENTIAL ADDRESS END DATE FILEMAN (DG*5.3*572)
"RTN","DGRODEBR",138,0)
 S LSTCAAF=$G(@DGDATA@(2,LSTDFN_",",.14105,"E"))
"RTN","DGRODEBR",139,0)
 S LSTCAED=$G(@DGDATA@(2,LSTDFN_",",.1418,"E"))
"RTN","DGRODEBR",140,0)
 ;*Convert LSTCAED to Fileman format date for compare (DG*5.3*572)
"RTN","DGRODEBR",141,0)
 S X=LSTCAED
"RTN","DGRODEBR",142,0)
 S %DT="RSN"
"RTN","DGRODEBR",143,0)
 D ^%DT
"RTN","DGRODEBR",144,0)
 S LSTCAEDF=Y
"RTN","DGRODEBR",145,0)
 ;If the CONFIDENTIAL ADDRESS FLAG from the Last Site Treated is "N"o,
"RTN","DGRODEBR",146,0)
 ;  OR  if the C.A. END DATE from the LST is less than the Query date,
"RTN","DGRODEBR",147,0)
 ;delete the C.A. data elements
"RTN","DGRODEBR",148,0)
 I (LSTCAAF'="YES")!((LSTCAEDF>0)&(LSTCAEDF<DT)) D
"RTN","DGRODEBR",149,0)
 . N FIELD
"RTN","DGRODEBR",150,0)
 . F FIELD=.14105,.14111,.1411:.0001:.1418 K @DGDATA@(2,LSTDFN_",",FIELD)
"RTN","DGRODEBR",151,0)
 . K @DGDATA@(2.141)
"RTN","DGRODEBR",152,0)
 ;Else the Confidential Address information will be filed
"RTN","DGRODEBR",153,0)
 ;and a User Interface message will be displayed.
"RTN","DGRODEBR",154,0)
 E  D
"RTN","DGRODEBR",155,0)
 . N DGMSG
"RTN","DGRODEBR",156,0)
 . N DATEFM ;*DATE converted to Fileman format (DG*5.3*572)
"RTN","DGRODEBR",157,0)
 . S DGMSG(1)=" "
"RTN","DGRODEBR",158,0)
 . S DGMSG(2)="Confidential Address information has been retrieved from the LST."
"RTN","DGRODEBR",159,0)
 . S DGMSG(3)="This information has been filed into the patient's record."
"RTN","DGRODEBR",160,0)
 . S DATE=$G(@DGDATA@(2,LSTDFN_",",.1417,"E"))
"RTN","DGRODEBR",161,0)
 . ;* Convert DATE to FM format (DG*5.3*572)
"RTN","DGRODEBR",162,0)
 . K X,%DT,Y
"RTN","DGRODEBR",163,0)
 . S X=DATE
"RTN","DGRODEBR",164,0)
 . S %DT="RSN"
"RTN","DGRODEBR",165,0)
 . D ^%DT
"RTN","DGRODEBR",166,0)
 . S DATEFM=Y
"RTN","DGRODEBR",167,0)
 . I DATEFM>DT D
"RTN","DGRODEBR",168,0)
 . . S DGMSG(4)="   NOTE:  Confidential Address Start Date is in the future, "_DATE
"RTN","DGRODEBR",169,0)
 . . S DGMSG(5)=" "
"RTN","DGRODEBR",170,0)
 . D EN^DDIOL(.DGMSG) R A:5
"RTN","DGRODEBR",171,0)
 K X,%DT,Y
"RTN","DGRODEBR",172,0)
 Q
"RTN","DGRODEBR",173,0)
 ;
"RTN","DGRODEBR",174,0)
PA(DGDATA,LSTDFN) ;PERMANENT ADDRESS
"RTN","DGRODEBR",175,0)
 ;   DGDATA - Data element array from LST, ^TMP("DGROFDA",$J)
"RTN","DGRODEBR",176,0)
 ;   LSTDFN - Pointer to the patient data from the LST, in DGDATA
"RTN","DGRODEBR",177,0)
 N LSTBAI   ;LST BAD ADDRESS INDICATOR
"RTN","DGRODEBR",178,0)
 S LSTBAI=$G(@DGDATA@(2,LSTDFN_",",.121,"E"))
"RTN","DGRODEBR",179,0)
 ;If the BAD ADDRESS INDICATOR from LST is NOT null,
"RTN","DGRODEBR",180,0)
 ;delete the PERMANENT ADDRESS data elements
"RTN","DGRODEBR",181,0)
 I LSTBAI'="" D
"RTN","DGRODEBR",182,0)
 . N FIELD
"RTN","DGRODEBR",183,0)
 . F FIELD=.1112,.111:.001:.119,.12,.121 K @DGDATA@(2,LSTDFN_",",FIELD)
"RTN","DGRODEBR",184,0)
 Q
"RTN","DGROHLQ")
0^20^B11155545
"RTN","DGROHLQ",1,0)
DGROHLQ ;DJH/AMA - ROM HL7 QRY/ORF PROCESSING ; 28 Apr 2004  4:21 PM
"RTN","DGROHLQ",2,0)
 ;;5.3;Registration;**533,572**;Aug 13, 1993
"RTN","DGROHLQ",3,0)
 ;
"RTN","DGROHLQ",4,0)
BLDQRY(DGDFN,DGICN,DGROOT,DGHL,DGUSER) ;Build QRY~R02 Message/Segments
"RTN","DGROHLQ",5,0)
 ;Called from SNDQRY^DGROHLS
"RTN","DGROHLQ",6,0)
 ;  Input:
"RTN","DGROHLQ",7,0)
 ;    DGDFN - (required) Pointer to patient in PATIENT (#2) file
"RTN","DGROHLQ",8,0)
 ;    DGICN - (required) Patient's Integrated Control Number
"RTN","DGROHLQ",9,0)
 ;   DGROOT - (required) Closed root array or global name for segment storage
"RTN","DGROHLQ",10,0)
 ;     DGHL - (required) VistA HL7 environment array
"RTN","DGROHLQ",11,0)
 ;   DGUSER - (required) String of user data from New Person File (SSN~Name~DUZ~Phone)
"RTN","DGROHLQ",12,0)
 ;
"RTN","DGROHLQ",13,0)
 ;  Output:
"RTN","DGROHLQ",14,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGROHLQ",15,0)
 ;           DGROOT - array of HL7 segments on success
"RTN","DGROHLQ",16,0)
 ;
"RTN","DGROHLQ",17,0)
 N DGCNT   ;segment counter
"RTN","DGROHLQ",18,0)
 N DGDEM   ;pt. demographics array
"RTN","DGROHLQ",19,0)
 N DGQRD   ;formatted QRD segment
"RTN","DGROHLQ",20,0)
 N DGQRF   ;formatted QRF segment
"RTN","DGROHLQ",21,0)
 N DGRSLT  ;function value
"RTN","DGROHLQ",22,0)
 N DGSTR   ;field string
"RTN","DGROHLQ",23,0)
 ;
"RTN","DGROHLQ",24,0)
 S (DGCNT,DGRSLT)=0
"RTN","DGROHLQ",25,0)
 ;
"RTN","DGROHLQ",26,0)
 I +$G(DGDFN),+$G(DGICN),$G(DGROOT)]"" D
"RTN","DGROHLQ",27,0)
 . ;
"RTN","DGROHLQ",28,0)
 . ;get patient demographics
"RTN","DGROHLQ",29,0)
 . Q:'$$GETPAT^DGROUT2(DGDFN,.DGDEM)
"RTN","DGROHLQ",30,0)
 . ;build QRD
"RTN","DGROHLQ",31,0)
 . S DGSTR="1,2,3,4,7,8,9,10"
"RTN","DGROHLQ",32,0)
 . S DGQRD=$$QRD^DGROHLQ1(DGDFN,DGICN,DGSTR,.DGHL,DGUSER)
"RTN","DGROHLQ",33,0)
 . Q:(DGQRD="")
"RTN","DGROHLQ",34,0)
 . S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGQRD
"RTN","DGROHLQ",35,0)
 . ;
"RTN","DGROHLQ",36,0)
 . ;build QRF
"RTN","DGROHLQ",37,0)
 . S DGSTR="1,4,5"
"RTN","DGROHLQ",38,0)
 . S DGQRF=$$QRF^DGROHLQ2($G(DGDEM("SSN")),$G(DGDEM("DOB")),DGSTR,.DGHL)
"RTN","DGROHLQ",39,0)
 . Q:(DGQRF="")
"RTN","DGROHLQ",40,0)
 . S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGQRF
"RTN","DGROHLQ",41,0)
 . ;
"RTN","DGROHLQ",42,0)
 . S DGRSLT=1
"RTN","DGROHLQ",43,0)
 Q DGRSLT
"RTN","DGROHLQ",44,0)
 ;
"RTN","DGROHLQ",45,0)
BLDORF(DGROOT,DGHL,DGDFN,DGQRY,DGSEGERR,DGQRYERR) ;Build ORF~R04 Message/Segments
"RTN","DGROHLQ",46,0)
 ;Called from SNDORF^DGROHLS
"RTN","DGROHLQ",47,0)
 ;  Input:
"RTN","DGROHLQ",48,0)
 ;     DGROOT - (required) Segment array, ^TMP("HLA",$J)
"RTN","DGROHLQ",49,0)
 ;       DGHL - (required) HL7 environment array
"RTN","DGROHLQ",50,0)
 ;      DGDFN - (required) Pointer to patient in PATIENT (#2) file
"RTN","DGROHLQ",51,0)
 ;      DGQRY - (required) Array of parsed QRY data
"RTN","DGROHLQ",52,0)
 ;   DGSEGERR - (optional) Array of errors encountered during QRY parsing
"RTN","DGROHLQ",53,0)
 ;   DGQRYERR - (optional) Error encountered during ICN to DFN conversion
"RTN","DGROHLQ",54,0)
 ;
"RTN","DGROHLQ",55,0)
 ;  Output:
"RTN","DGROHLQ",56,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGROHLQ",57,0)
 ;
"RTN","DGROHLQ",58,0)
 N DGACK     ;acknowledgment code (i.e. AA, AE)
"RTN","DGROHLQ",59,0)
 N DGAIENS   ;array of assignment IENS
"RTN","DGROHLQ",60,0)
 N DGCNT     ;segment counter
"RTN","DGROHLQ",61,0)
 N DGRSLT    ;function value
"RTN","DGROHLQ",62,0)
 N DGSEGSTR  ;formatted segment string
"RTN","DGROHLQ",63,0)
 N DGSTR     ;comma-delimited list of fields to include
"RTN","DGROHLQ",64,0)
 ;
"RTN","DGROHLQ",65,0)
 S DGRSLT=0
"RTN","DGROHLQ",66,0)
 ;
"RTN","DGROHLQ",67,0)
 I $G(DGROOT)]"",+$G(DGDFN)>0,$D(DGQRY) D
"RTN","DGROHLQ",68,0)
 . S DGCNT=0
"RTN","DGROHLQ",69,0)
 . ;
"RTN","DGROHLQ",70,0)
 . ;build MSA segment
"RTN","DGROHLQ",71,0)
 . S DGACK=$S($D(DGSEGERR):"AR",$D(DGQRYERR):"AE",1:"AA")
"RTN","DGROHLQ",72,0)
 . S DGSTR=$S(DGACK="AE":"1,2,6",1:"1,2")
"RTN","DGROHLQ",73,0)
 . I '$D(DGHL("MID")) S DGHL("MID")=+$G(DGHL("ICN"))
"RTN","DGROHLQ",74,0)
 . S DGSEGSTR=$$MSA^DGROHLU3(DGACK,DGHL("MID"),.DGQRYERR,DGSTR,.DGHL)
"RTN","DGROHLQ",75,0)
 . Q:(DGSEGSTR="")
"RTN","DGROHLQ",76,0)
 . S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGSEGSTR
"RTN","DGROHLQ",77,0)
 . ;
"RTN","DGROHLQ",78,0)
 . ;build ERR segments for any segment parsing errors
"RTN","DGROHLQ",79,0)
 . I DGACK="AR",'$$BLDERR^DGROHLU4(DGROOT,.DGSEGERR,.DGHL,.DGCNT) Q
"RTN","DGROHLQ",80,0)
 . ;
"RTN","DGROHLQ",81,0)
 . ;build QRD segment
"RTN","DGROHLQ",82,0)
 . S DGSTR="1,2,3,4,5,7,8,9,10"
"RTN","DGROHLQ",83,0)
 . S DGSEGSTR=$$QRD^DGROHLQ1($G(DGQRY("DFN")),$G(DGQRY("ICN")),DGSTR,.DGHL)
"RTN","DGROHLQ",84,0)
 . Q:(DGSEGSTR="")
"RTN","DGROHLQ",85,0)
 . S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGSEGSTR
"RTN","DGROHLQ",86,0)
 . ;
"RTN","DGROHLQ",87,0)
 . ;gather all of the patient data
"RTN","DGROHLQ",88,0)
 . N DGROFDA,DGX
"RTN","DGROHLQ",89,0)
 . S DGROFDA=$NA(^TMP("DGROFDA",$J)) K @DGROFDA
"RTN","DGROHLQ",90,0)
 . D DIQ^DGROHLU(.DGROFDA,2,DGDFN,.DGQRY)
"RTN","DGROHLQ",91,0)
 . ;
"RTN","DGROHLQ",92,0)
 . ;build FDA segment
"RTN","DGROHLQ",93,0)
 . K DGSEGSTR
"RTN","DGROHLQ",94,0)
 . D FDA^DGROHLU1(DGROFDA,.DGSEGSTR)
"RTN","DGROHLQ",95,0)
 . K @DGROFDA
"RTN","DGROHLQ",96,0)
 . ;
"RTN","DGROHLQ",97,0)
 . Q:'$D(DGSEGSTR)
"RTN","DGROHLQ",98,0)
 . S DGX=0 F  S DGX=$O(DGSEGSTR(DGX)) Q:'DGX  D
"RTN","DGROHLQ",99,0)
 . . S @DGROOT@(DGCNT+DGX)=DGSEGSTR(DGX)
"RTN","DGROHLQ",100,0)
 . ;
"RTN","DGROHLQ",101,0)
 . S DGRSLT=1
"RTN","DGROHLQ",102,0)
 Q DGRSLT
"RTN","DGROHLQ1")
0^21^B12371275
"RTN","DGROHLQ1",1,0)
DGROHLQ1 ;DJH/AMA - ROM HL7 BUILD QRD SEGMENT ; 28 Apr 2004  4:31 PM
"RTN","DGROHLQ1",2,0)
 ;;5.3;Registration;**533,572**;Aug 13, 1993
"RTN","DGROHLQ1",3,0)
 ;
"RTN","DGROHLQ1",4,0)
QRD(DGDFN,DGICN,DGFLD,DGHL,DGUSER) ;QRD HL7 segment API
"RTN","DGROHLQ1",5,0)
 ;This function wraps the data retrieval and segment creation APIs
"RTN","DGROHLQ1",6,0)
 ;and returns a formatted QRD segment.
"RTN","DGROHLQ1",7,0)
 ;  Called from BLDQRY and BLDORF^DGROHLQ
"RTN","DGROHLQ1",8,0)
 ;
"RTN","DGROHLQ1",9,0)
 ;  Input:
"RTN","DGROHLQ1",10,0)
 ;    DGDFN - (required) DFN
"RTN","DGROHLQ1",11,0)
 ;    DGICN - (required) Integrated Control Number
"RTN","DGROHLQ1",12,0)
 ;    DGFLD - (optional) List of comma-separated fields (sequence #'s)
"RTN","DGROHLQ1",13,0)
 ;            to include.  Defaults to all required fields (1-4,7-10).
"RTN","DGROHLQ1",14,0)
 ;     DGHL - VistA HL7 environment array
"RTN","DGROHLQ1",15,0)
 ;   DGUSER - (optional) String of user data from New Person File
"RTN","DGROHLQ1",16,0)
 ;               (SSN~Name~DUZ~Phone).  If this is populated, it means
"RTN","DGROHLQ1",17,0)
 ;               this is the QRY to the LST.  If not, it's the ORF going
"RTN","DGROHLQ1",18,0)
 ;               back to the Querying Site.     ;added in DG*5.3*572
"RTN","DGROHLQ1",19,0)
 ;
"RTN","DGROHLQ1",20,0)
 ; Output:
"RTN","DGROHLQ1",21,0)
 ;  Function Value - QRD segment on success, "" on failure
"RTN","DGROHLQ1",22,0)
 ;
"RTN","DGROHLQ1",23,0)
 N DGQRD,DGVAL
"RTN","DGROHLQ1",24,0)
 ;
"RTN","DGROHLQ1",25,0)
 S DGQRD=""
"RTN","DGROHLQ1",26,0)
 I $G(DGDFN)>0,$G(DGICN)]"" D
"RTN","DGROHLQ1",27,0)
 . S DGFLD=$$CKSTR^DGROHLUT("1,2,3,4,5,6,7,8,9,10",DGFLD) ;validte flds
"RTN","DGROHLQ1",28,0)
 . S DGFLD=","_DGFLD_","
"RTN","DGROHLQ1",29,0)
 . I $$QRDVAL(DGFLD,DGDFN,DGICN,.DGVAL,$G(DGUSER)) D   ;DG*5.3*572 added DGUSER
"RTN","DGROHLQ1",30,0)
 . . S DGQRD=$$BLDSEG^DGROHLUT("QRD",.DGVAL,.DGHL)
"RTN","DGROHLQ1",31,0)
 Q DGQRD
"RTN","DGROHLQ1",32,0)
 ;
"RTN","DGROHLQ1",33,0)
QRDVAL(DGFLD,DGDFN,DGICN,DGVAL,DGUSER) ;build QRD value array
"RTN","DGROHLQ1",34,0)
 ;
"RTN","DGROHLQ1",35,0)
 ;  Input:
"RTN","DGROHLQ1",36,0)
 ;    DGFLD - Fields string
"RTN","DGROHLQ1",37,0)
 ;    DGDFN - DFN
"RTN","DGROHLQ1",38,0)
 ;    DGICN - ICN
"RTN","DGROHLQ1",39,0)
 ;   DGUSER - (optional) String of user data from New Person File
"RTN","DGROHLQ1",40,0)
 ;               (SSN~Name~DUZ~Phone)   ;DG*5.3*572
"RTN","DGROHLQ1",41,0)
 ;    
"RTN","DGROHLQ1",42,0)
 ;  Output:
"RTN","DGROHLQ1",43,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGROHLQ1",44,0)
 ;            DGVAL - QRD field array [SUB1:field, SUB2:repetition,
"RTN","DGROHLQ1",45,0)
 ;                                     SUB3:component, SUB4:sub-component]
"RTN","DGROHLQ1",46,0)
 ;
"RTN","DGROHLQ1",47,0)
 N DGRSLT
"RTN","DGROHLQ1",48,0)
 ;
"RTN","DGROHLQ1",49,0)
 S DGRSLT=0
"RTN","DGROHLQ1",50,0)
 I $G(DGDFN)>0,$G(DGICN)]"",$G(DGFLD)]"" D
"RTN","DGROHLQ1",51,0)
 . ;
"RTN","DGROHLQ1",52,0)
 . ; seq 1 (required) Query Date/Time
"RTN","DGROHLQ1",53,0)
 . I DGFLD[",1," D  Q:(+DGVAL(1)'>0)
"RTN","DGROHLQ1",54,0)
 . . S DGVAL(1)=$$FMTHL7^XLFDT($$NOW^XLFDT())
"RTN","DGROHLQ1",55,0)
 . ;
"RTN","DGROHLQ1",56,0)
 . ; seq 2 (required) Query Format Code
"RTN","DGROHLQ1",57,0)
 . I DGFLD[",2," D
"RTN","DGROHLQ1",58,0)
 . . S DGVAL(2)="R"  ;always "R"ecord
"RTN","DGROHLQ1",59,0)
 . ;
"RTN","DGROHLQ1",60,0)
 . ; seq 3 (required) Query Priority
"RTN","DGROHLQ1",61,0)
 . I DGFLD[",3," D
"RTN","DGROHLQ1",62,0)
 . . S DGVAL(3)="I"  ;always "I"mmediate
"RTN","DGROHLQ1",63,0)
 . ;
"RTN","DGROHLQ1",64,0)
 . ; seq 4 (required) Identifying Information
"RTN","DGROHLQ1",65,0)
 . ;DG*5.3*572 - if the QRY to the LST, send the QS DFN and User info
"RTN","DGROHLQ1",66,0)
 . ;           - if the ORF back to the QS, just send the QS DFN
"RTN","DGROHLQ1",67,0)
 . I DGFLD[",4," D
"RTN","DGROHLQ1",68,0)
 . . S DGVAL(4)=DGDFN_$S($G(DGUSER):"~"_DGUSER,1:"")   ;DG*5.3*572
"RTN","DGROHLQ1",69,0)
 . ;
"RTN","DGROHLQ1",70,0)
 . ; seq 5 (optional) Deferred Response Type
"RTN","DGROHLQ1",71,0)
 . ; Indicates version of ROM messages
"RTN","DGROHLQ1",72,0)
 . I DGFLD[",5," D
"RTN","DGROHLQ1",73,0)
 . . S DGVAL(5)="572"
"RTN","DGROHLQ1",74,0)
 . ;
"RTN","DGROHLQ1",75,0)
 . ; seq 6 (optional) Deferred Response Date/Time
"RTN","DGROHLQ1",76,0)
 . I DGFLD[",6," D
"RTN","DGROHLQ1",77,0)
 . . S DGVAL(6)=""
"RTN","DGROHLQ1",78,0)
 . ;
"RTN","DGROHLQ1",79,0)
 . ; seq 7 (required) Quantity Limited Request
"RTN","DGROHLQ1",80,0)
 . I DGFLD[",7," D
"RTN","DGROHLQ1",81,0)
 . . S DGVAL(7,1,1)=10
"RTN","DGROHLQ1",82,0)
 . . S DGVAL(7,1,2)="RD"  ;records
"RTN","DGROHLQ1",83,0)
 . ;
"RTN","DGROHLQ1",84,0)
 . ; seq 8 (required) ICN
"RTN","DGROHLQ1",85,0)
 . I DGFLD[",8," D
"RTN","DGROHLQ1",86,0)
 . . S DGVAL(8,1,1)=DGICN
"RTN","DGROHLQ1",87,0)
 . . S DGVAL(8,1,9,1)="USVHA"
"RTN","DGROHLQ1",88,0)
 . . S DGVAL(8,1,9,2)=""
"RTN","DGROHLQ1",89,0)
 . . S DGVAL(8,1,9,3)="L"
"RTN","DGROHLQ1",90,0)
 . ;
"RTN","DGROHLQ1",91,0)
 . ; seq 9 (required) What Subject Filter
"RTN","DGROHLQ1",92,0)
 . I DGFLD[",9," D
"RTN","DGROHLQ1",93,0)
 . . S DGVAL(9,1,1)="OTH"
"RTN","DGROHLQ1",94,0)
 . . S DGVAL(9,1,2)="Other"
"RTN","DGROHLQ1",95,0)
 . . S DGVAL(9,1,3)="HL0048"
"RTN","DGROHLQ1",96,0)
 . ;
"RTN","DGROHLQ1",97,0)
 . ; seq 10 (required) What Dept. Data Code
"RTN","DGROHLQ1",98,0)
 . I DGFLD[",10," D
"RTN","DGROHLQ1",99,0)
 . . S DGVAL(10,1,1)="ROMDD"
"RTN","DGROHLQ1",100,0)
 . . S DGVAL(10,1,2)="Register Once Messaging Demographic Data"
"RTN","DGROHLQ1",101,0)
 . . S DGVAL(10,1,3)="L"
"RTN","DGROHLQ1",102,0)
 . ;
"RTN","DGROHLQ1",103,0)
 . ; seq 11 (optional) What Data Code Value Qual.
"RTN","DGROHLQ1",104,0)
 . I DGFLD[",11," D
"RTN","DGROHLQ1",105,0)
 . . S DGVAL(11)=""
"RTN","DGROHLQ1",106,0)
 . ;
"RTN","DGROHLQ1",107,0)
 . ; seq 12 (optional) Query Results Level
"RTN","DGROHLQ1",108,0)
 . I DGFLD[",12," D
"RTN","DGROHLQ1",109,0)
 . . S DGVAL(12)=""
"RTN","DGROHLQ1",110,0)
 . ;
"RTN","DGROHLQ1",111,0)
 . S DGRSLT=1
"RTN","DGROHLQ1",112,0)
 I 'DGRSLT K DGVAL
"RTN","DGROHLQ1",113,0)
 Q DGRSLT
"RTN","DGROHLQ3")
0^22^B10815904
"RTN","DGROHLQ3",1,0)
DGROHLQ3 ;DJH/AMA - ROM HL7 QRY/ORF PROCESSING ; 27 Apr 2004  4:50 PM
"RTN","DGROHLQ3",2,0)
 ;;5.3;Registration;**533,572**;Aug 13, 1993
"RTN","DGROHLQ3",3,0)
 ;
"RTN","DGROHLQ3",4,0)
PARSQRY(DGWRK,DGHL,DGQRY,DGROERR) ;Parse QRY~R02 Message/Segments
"RTN","DGROHLQ3",5,0)
 ;Called from RCVQRY^DGROHLR
"RTN","DGROHLQ3",6,0)
 ;  Input:
"RTN","DGROHLQ3",7,0)
 ;    DGWRK - Closed root global reference, ^TMP("DGROHL7",$J)
"RTN","DGROHLQ3",8,0)
 ;     DGHL - VistA HL7 environment array
"RTN","DGROHLQ3",9,0)
 ;
"RTN","DGROHLQ3",10,0)
 ;  Output:
"RTN","DGROHLQ3",11,0)
 ;    DGQRY - Patient lookup components array
"RTN","DGROHLQ3",12,0)
 ;   DGROERR - Undefined on success, ERR segment data array on failure
"RTN","DGROHLQ3",13,0)
 ;             Format:  DGROERR(seg_id,sequence,fld_pos)=error_code
"RTN","DGROHLQ3",14,0)
 ;
"RTN","DGROHLQ3",15,0)
 N DGFS      ;field separator
"RTN","DGROHLQ3",16,0)
 N DGCS      ;component separator
"RTN","DGROHLQ3",17,0)
 N DGRS      ;repetition separator
"RTN","DGROHLQ3",18,0)
 N DGSS      ;sub-component separator
"RTN","DGROHLQ3",19,0)
 N DGCURLIN  ;current segment line
"RTN","DGROHLQ3",20,0)
 N DGSEG     ;segment field data array
"RTN","DGROHLQ3",21,0)
 N DGROERR   ;error processing array
"RTN","DGROHLQ3",22,0)
 ;
"RTN","DGROHLQ3",23,0)
 S DGFS=DGHL("FS")
"RTN","DGROHLQ3",24,0)
 S DGCS=$E(DGHL("ECH"),1)
"RTN","DGROHLQ3",25,0)
 S DGRS=$E(DGHL("ECH"),2)
"RTN","DGROHLQ3",26,0)
 S DGSS=$E(DGHL("ECH"),4)
"RTN","DGROHLQ3",27,0)
 S DGCURLIN=0
"RTN","DGROHLQ3",28,0)
 ;
"RTN","DGROHLQ3",29,0)
 ;loop through the message segments and retrieve the field data
"RTN","DGROHLQ3",30,0)
 F  D  Q:'DGCURLIN
"RTN","DGROHLQ3",31,0)
 . N DGSEG
"RTN","DGROHLQ3",32,0)
 . S DGCURLIN=$$NXTSEG^DGROHLUT(DGWRK,DGCURLIN,DGFS,.DGSEG)
"RTN","DGROHLQ3",33,0)
 . Q:'DGCURLIN
"RTN","DGROHLQ3",34,0)
 . D @(DGSEG("TYPE")_"(.DGSEG,DGCS,DGRS,DGSS,.DGQRY,.DGROERR)")
"RTN","DGROHLQ3",35,0)
 Q
"RTN","DGROHLQ3",36,0)
 ;
"RTN","DGROHLQ3",37,0)
PARSORF(DGWRK,DGHL,DGORF,DGMSG,DGDATA) ;Parse ORF~R04 Message/Segments
"RTN","DGROHLQ3",38,0)
 ;Called RCVORF^DGROHLR
"RTN","DGROHLQ3",39,0)
 ;  Input:
"RTN","DGROHLQ3",40,0)
 ;    DGWRK - Closed root work global reference, ^TMP("DGROHL7",$J)
"RTN","DGROHLQ3",41,0)
 ;     DGHL - HL7 environment array
"RTN","DGROHLQ3",42,0)
 ;
"RTN","DGROHLQ3",43,0)
 ;  Output:
"RTN","DGROHLQ3",44,0)
 ;     DGORF - array of ORF results
"RTN","DGROHLQ3",45,0)
 ;             "ACKCODE" - acknowledgment code ("AA","AE","AR")
"RTN","DGROHLQ3",46,0)
 ;             "DFN"     - DFN
"RTN","DGROHLQ3",47,0)
 ;             "ICN"     - patient's Integrated Control Number
"RTN","DGROHLQ3",48,0)
 ;             "MSGDTM"  - message creation date/time in FileMan format
"RTN","DGROHLQ3",49,0)
 ;             "MSGID"   - Message ID for HL7
"RTN","DGROHLQ3",50,0)
 ;             "RCVFAC"  - receiving facility
"RTN","DGROHLQ3",51,0)
 ;             "SNDFAC"  - sending facility
"RTN","DGROHLQ3",52,0)
 ;    DGDATA - array of patient data to upload, ^TMP("DGROFDA",$J)
"RTN","DGROHLQ3",53,0)
 ;     DGMSG - undefined on success, array of MailMan text on failure
"RTN","DGROHLQ3",54,0)
 ;
"RTN","DGROHLQ3",55,0)
 N DGFS,DGCS,DGRS,DGSS,DGCURLIN
"RTN","DGROHLQ3",56,0)
 ;
"RTN","DGROHLQ3",57,0)
 S DGFS=DGHL("FS")
"RTN","DGROHLQ3",58,0)
 S DGCS=$E(DGHL("ECH"),1)
"RTN","DGROHLQ3",59,0)
 S DGRS=$E(DGHL("ECH"),2)
"RTN","DGROHLQ3",60,0)
 S DGSS=$E(DGHL("ECH"),4)
"RTN","DGROHLQ3",61,0)
 S DGCURLIN=0
"RTN","DGROHLQ3",62,0)
 ;
"RTN","DGROHLQ3",63,0)
 ;loop through the message segments and retrieve the field data
"RTN","DGROHLQ3",64,0)
 F  D  Q:'DGCURLIN
"RTN","DGROHLQ3",65,0)
 . N DGSEG
"RTN","DGROHLQ3",66,0)
 . S DGCURLIN=$$NXTSEG^DGROHLUT(DGWRK,DGCURLIN,DGFS,.DGSEG)
"RTN","DGROHLQ3",67,0)
 . Q:'DGCURLIN
"RTN","DGROHLQ3",68,0)
 . I DGSEG("TYPE")'="FDA" D @(DGSEG("TYPE")_"(.DGSEG,DGCS,DGRS,DGSS,.DGORF,.DGMSG)") I 1
"RTN","DGROHLQ3",69,0)
 . E  D FDA^DGROHLU(DGWRK,.DGCURLIN,DGFS,DGCS,DGRS,.DGDATA)
"RTN","DGROHLQ3",70,0)
 Q
"RTN","DGROHLQ3",71,0)
 ;
"RTN","DGROHLQ3",72,0)
MSH(DGSEG,DGCS,DGRS,DGSS,DGORF,DGERR) ;
"RTN","DGROHLQ3",73,0)
 ;
"RTN","DGROHLQ3",74,0)
 ;  Input:
"RTN","DGROHLQ3",75,0)
 ;    DGSEG - MSH segment field array
"RTN","DGROHLQ3",76,0)
 ;     DGCS - HL7 component separator
"RTN","DGROHLQ3",77,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGROHLQ3",78,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGROHLQ3",79,0)
 ;
"RTN","DGROHLQ3",80,0)
 ;  Output:
"RTN","DGROHLQ3",81,0)
 ;    DGORF - array of ORF results
"RTN","DGROHLQ3",82,0)
 ;            "SNDFAC" - sending facility
"RTN","DGROHLQ3",83,0)
 ;            "RCVFAC" - receiving facility
"RTN","DGROHLQ3",84,0)
 ;            "MSGDTM" - message creation date/time in FileMan format
"RTN","DGROHLQ3",85,0)
 ;    DGERR - undefined on success, error array on failure
"RTN","DGROHLQ3",86,0)
 ;
"RTN","DGROHLQ3",87,0)
 D MSH^DGROHLU4(.DGSEG,DGCS,DGRS,DGSS,.DGORF,.DGERR)
"RTN","DGROHLQ3",88,0)
 Q
"RTN","DGROHLQ3",89,0)
 ;
"RTN","DGROHLQ3",90,0)
MSA(DGSEG,DGCS,DGRS,DGSS,DGORF,DGERR) ;
"RTN","DGROHLQ3",91,0)
 ;
"RTN","DGROHLQ3",92,0)
 ;  Input:
"RTN","DGROHLQ3",93,0)
 ;    DGSEG - MSH segment field array
"RTN","DGROHLQ3",94,0)
 ;     DGCS - HL7 component separator
"RTN","DGROHLQ3",95,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGROHLQ3",96,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGROHLQ3",97,0)
 ;
"RTN","DGROHLQ3",98,0)
 ;  Output:
"RTN","DGROHLQ3",99,0)
 ;    DGORF - array of ORF results
"RTN","DGROHLQ3",100,0)
 ;            "ACKCODE" - Acknowledgment code
"RTN","DGROHLQ3",101,0)
 ;            "MSGID" - Message Control ID of the message being ACK'ed
"RTN","DGROHLQ3",102,0)
 ;    DGERR - undefined on success, error array on failure
"RTN","DGROHLQ3",103,0)
 ;
"RTN","DGROHLQ3",104,0)
 D MSA^DGROHLU4(.DGSEG,DGCS,DGRS,DGSS,.DGORF,.DGERR)
"RTN","DGROHLQ3",105,0)
 Q
"RTN","DGROHLQ3",106,0)
 ;
"RTN","DGROHLQ3",107,0)
ERR(DGSEG,DGCS,DGRS,DGSS,DGORF,DGERR) ;
"RTN","DGROHLQ3",108,0)
 ;
"RTN","DGROHLQ3",109,0)
 ;  Input:
"RTN","DGROHLQ3",110,0)
 ;    DGSEG - MSH segment field array
"RTN","DGROHLQ3",111,0)
 ;     DGCS - HL7 component separator
"RTN","DGROHLQ3",112,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGROHLQ3",113,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGROHLQ3",114,0)
 ;
"RTN","DGROHLQ3",115,0)
 ;  Output:
"RTN","DGROHLQ3",116,0)
 ;    DGORF - array of ORF results
"RTN","DGROHLQ3",117,0)
 ;    DGERR - undefined on success, error array on failure
"RTN","DGROHLQ3",118,0)
 ;
"RTN","DGROHLQ3",119,0)
 D ERR^DGROHLU4(.DGSEG,DGCS,DGRS,DGSS,.DGORF,.DGERR)
"RTN","DGROHLQ3",120,0)
 Q
"RTN","DGROHLQ3",121,0)
 ;
"RTN","DGROHLQ3",122,0)
QRD(DGSEG,DGCS,DGRS,DGSS,DGQRY,DGERR) ;
"RTN","DGROHLQ3",123,0)
 ;
"RTN","DGROHLQ3",124,0)
 ;  Input:
"RTN","DGROHLQ3",125,0)
 ;    DGSEG - MSH segment field array
"RTN","DGROHLQ3",126,0)
 ;     DGCS - HL7 component separator
"RTN","DGROHLQ3",127,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGROHLQ3",128,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGROHLQ3",129,0)
 ;
"RTN","DGROHLQ3",130,0)
 ;  Output:
"RTN","DGROHLQ3",131,0)
 ;    DGQRY("ICN") - Patient's Integrated Control Number
"RTN","DGROHLQ3",132,0)
 ;    DGQRY("DFN") - Query ID
"RTN","DGROHLQ3",133,0)
 ;   DGQRY("USER") - Query Site user's info   ;DG*5.3*572
"RTN","DGROHLQ3",134,0)
 ;           DGERR - undefined on success, error array on failure
"RTN","DGROHLQ3",135,0)
 ;                      format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGROHLQ3",136,0)
 ;
"RTN","DGROHLQ3",137,0)
 S DGQRY("DFN")=$P($G(DGSEG(4)),"~")
"RTN","DGROHLQ3",138,0)
 S DGQRY("USER")=$P($G(DGSEG(4)),"~",2,99)
"RTN","DGROHLQ3",139,0)
 S DGQRY("ICN")=+$P($G(DGSEG(8)),DGCS,1)
"RTN","DGROHLQ3",140,0)
 S DGQRY("PATCH")=$G(DGSEG(5))
"RTN","DGROHLQ3",141,0)
 I DGQRY("ICN")="" D
"RTN","DGROHLQ3",142,0)
 . S DGERR("QRD",1,8)="NM"
"RTN","DGROHLQ3",143,0)
 Q
"RTN","DGROHLQ3",144,0)
 ;
"RTN","DGROHLQ3",145,0)
QRF(DGSEG,DGCS,DGRS,DGSS,DGQRY,DGERR) ;
"RTN","DGROHLQ3",146,0)
 ;
"RTN","DGROHLQ3",147,0)
 ;  Input:
"RTN","DGROHLQ3",148,0)
 ;    DGSEG - PID segment field array
"RTN","DGROHLQ3",149,0)
 ;     DGCS - HL7 component separator
"RTN","DGROHLQ3",150,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGROHLQ3",151,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGROHLQ3",152,0)
 ;
"RTN","DGROHLQ3",153,0)
 ;  Output:
"RTN","DGROHLQ3",154,0)
 ;    DGQRY("SSN") - Patient's Social Security Number
"RTN","DGROHLQ3",155,0)
 ;    DGQRY("DOB") - Patient's Date of Birth
"RTN","DGROHLQ3",156,0)
 ;           DGERR - undefined on success, error array on failure
"RTN","DGROHLQ3",157,0)
 ;                   format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGROHLQ3",158,0)
 ;
"RTN","DGROHLQ3",159,0)
 S DGQRY("SSN")=$G(DGSEG(4))
"RTN","DGROHLQ3",160,0)
 I DGQRY("SSN")="" S DGERR("QRF",1,4)="NM"  ;no match
"RTN","DGROHLQ3",161,0)
 ;
"RTN","DGROHLQ3",162,0)
 S DGQRY("DOB")=+$$HL7TFM^XLFDT($G(DGSEG(5)))
"RTN","DGROHLQ3",163,0)
 I DGQRY("DOB")'>0 S DGERR("QRF",1,5)="NM"  ;no match
"RTN","DGROHLQ3",164,0)
 Q
"RTN","DGROHLR")
0^3^B16649538
"RTN","DGROHLR",1,0)
DGROHLR ;DJH/AMA - ROM HL7 RECEIVE DRIVERS ; 09 Jul 2003  4:41 PM
"RTN","DGROHLR",2,0)
 ;;5.3;Registration;**533,572**;Aug 13, 1993
"RTN","DGROHLR",3,0)
 ;
"RTN","DGROHLR",4,0)
RCV ;Receive all message types and route to message specific receiver
"RTN","DGROHLR",5,0)
 ;
"RTN","DGROHLR",6,0)
 ;This procedure is the main driver entry point for receiving all
"RTN","DGROHLR",7,0)
 ;message types (ACK, QRY and ORF) for Register Once Messaging.
"RTN","DGROHLR",8,0)
 ;
"RTN","DGROHLR",9,0)
 ;All procedures and functions assume that all VistA HL7 environment
"RTN","DGROHLR",10,0)
 ;variables are properly initialized and will produce a fatal error if
"RTN","DGROHLR",11,0)
 ;they are missing.
"RTN","DGROHLR",12,0)
 ;
"RTN","DGROHLR",13,0)
 ;The received message is copied to a temporary work global for
"RTN","DGROHLR",14,0)
 ;processing.  The message type is determined from the MSH segment and
"RTN","DGROHLR",15,0)
 ;a receive processing procedure specific to the message type is called.
"RTN","DGROHLR",16,0)
 ;(Ex. ORF~R01 message calls procedure: RCVORF).  The specific receive
"RTN","DGROHLR",17,0)
 ;processing procedure calls a message specific parse procedure to
"RTN","DGROHLR",18,0)
 ;validate the message data and return data arrays for storage.  If no
"RTN","DGROHLR",19,0)
 ;parse errors are reported during validation, then the data arrays are
"RTN","DGROHLR",20,0)
 ;stored by the receive processing procedure.  Control, along with any
"RTN","DGROHLR",21,0)
 ;parse validation errors, is then passed to the message specific send
"RTN","DGROHLR",22,0)
 ;processing procedures to build and transmit the acknowledgment and
"RTN","DGROHLR",23,0)
 ;query results messages.
"RTN","DGROHLR",24,0)
 ;
"RTN","DGROHLR",25,0)
 ;  The message specific procedures are as follows:
"RTN","DGROHLR",26,0)
 ;
"RTN","DGROHLR",27,0)
 ;  Message   Receive Procedure   Parse Procedure    Send Procedure
"RTN","DGROHLR",28,0)
 ;  -------   -----------------   ----------------    --------------
"RTN","DGROHLR",29,0)
 ;                                                   SNDACK^DGROHLS
"RTN","DGROHLR",30,0)
 ;  ACK~R01   RCVACK^DGROHLR      PARSACK^DGROHLU4   N/A
"RTN","DGROHLR",31,0)
 ;  QRY~R02   RCVQRY^DGROHLR      PARSQRY^DGROHLQ3   SNDORF^DGROHLS
"RTN","DGROHLR",32,0)
 ;  ORF~R01   RCVORF^DGROHLR      PARSORF^DGROHLQ3   N/A
"RTN","DGROHLR",33,0)
 ;
"RTN","DGROHLR",34,0)
 N DGCNT,DGMSGTYP,DGSEG,DGSEGCNT,DGWRK
"RTN","DGROHLR",35,0)
 ;
"RTN","DGROHLR",36,0)
 S DGWRK=$NA(^TMP("DGROHL7",$J))
"RTN","DGROHLR",37,0)
 K @DGWRK
"RTN","DGROHLR",38,0)
 ;
"RTN","DGROHLR",39,0)
 ;load work global with segments
"RTN","DGROHLR",40,0)
 F DGSEGCNT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","DGROHLR",41,0)
 . S DGCNT=0
"RTN","DGROHLR",42,0)
 . S @DGWRK@(DGSEGCNT,DGCNT)=HLNODE
"RTN","DGROHLR",43,0)
 . F  S DGCNT=$O(HLNODE(DGCNT)) Q:'DGCNT  D
"RTN","DGROHLR",44,0)
 . . S @DGWRK@(DGSEGCNT,DGCNT)=HLNODE(DGCNT)
"RTN","DGROHLR",45,0)
 ;
"RTN","DGROHLR",46,0)
 ;get message type from "MSH"
"RTN","DGROHLR",47,0)
 I $$NXTSEG^DGROHLUT(DGWRK,0,HL("FS"),.DGSEG),$G(DGSEG("TYPE"))="MSH" D
"RTN","DGROHLR",48,0)
 . S DGMSGTYP=$P(DGSEG(9),$E(HL("ECH"),1),1)
"RTN","DGROHLR",49,0)
 . ;HLMTIENS is only required by RCVORU and RCVQRY, thus $GET
"RTN","DGROHLR",50,0)
 . I DGMSGTYP="" S (DGMSGTYP,HL("MTN"))="ORF",HLMTIENS=HLMTIEN
"RTN","DGROHLR",51,0)
 . I DGMSGTYP=HL("MTN") D @("RCV"_DGMSGTYP_"(DGWRK,$G(HLMTIENS),.HL)")
"RTN","DGROHLR",52,0)
 ;
"RTN","DGROHLR",53,0)
 ;cleanup
"RTN","DGROHLR",54,0)
 K @DGWRK
"RTN","DGROHLR",55,0)
 Q
"RTN","DGROHLR",56,0)
 ;
"RTN","DGROHLR",57,0)
RCVACK(DGWRK,DGMIEN,DGHL) ;Receive ACK Message Types (ACK~R01)
"RTN","DGROHLR",58,0)
 ;
"RTN","DGROHLR",59,0)
 ;  Input:
"RTN","DGROHLR",60,0)
 ;    DGWRK - name of work global containing segments
"RTN","DGROHLR",61,0)
 ;   DGMIEN - IEN of message entry in file #773
"RTN","DGROHLR",62,0)
 ;     DGHL - HL environment array
"RTN","DGROHLR",63,0)
 ;
"RTN","DGROHLR",64,0)
 ;  Output:
"RTN","DGROHLR",65,0)
 ;    none
"RTN","DGROHLR",66,0)
 ;
"RTN","DGROHLR",67,0)
 N DGACK   ;ACK data array
"RTN","DGROHLR",68,0)
 N DGERR   ;error array
"RTN","DGROHLR",69,0)
 N DGLIEN  ;HL7 transmission log IEN
"RTN","DGROHLR",70,0)
 N DGROL   ;HL7 transmssion log data array
"RTN","DGROHLR",71,0)
 ;
"RTN","DGROHLR",72,0)
 S ACKCODE=0
"RTN","DGROHLR",73,0)
 D PARSACK^DGROHLU4(DGWRK,.DGHL,.DGACK,.DGERR)
"RTN","DGROHLR",74,0)
 I $G(DGACK("ACKCODE"))'="AA" S ACKCODE=1
"RTN","DGROHLR",75,0)
 Q
"RTN","DGROHLR",76,0)
 ;
"RTN","DGROHLR",77,0)
RCVQRY(DGWRK,DGMIEN,DGHL) ;Receive QRY Message Types (QRY~R02)
"RTN","DGROHLR",78,0)
 ;
"RTN","DGROHLR",79,0)
 ;  Input:
"RTN","DGROHLR",80,0)
 ;    DGWRK - name of work global containing segments
"RTN","DGROHLR",81,0)
 ;   DGMIEN - IEN of message entry in file #773
"RTN","DGROHLR",82,0)
 ;     DGHL - HL environment array
"RTN","DGROHLR",83,0)
 ;
"RTN","DGROHLR",84,0)
 ;  Output:
"RTN","DGROHLR",85,0)
 ;    none
"RTN","DGROHLR",86,0)
 ;
"RTN","DGROHLR",87,0)
 N DGDFN,DGQRY,DGQRYERR,DGSEGERR
"RTN","DGROHLR",88,0)
 ;
"RTN","DGROHLR",89,0)
 D PARSQRY^DGROHLQ3(DGWRK,.DGHL,.DGQRY,.DGSEGERR)
"RTN","DGROHLR",90,0)
 S DGDFN=$$GETDFN^DGROUT2(DGQRY("ICN"),DGQRY("DOB"),DGQRY("SSN"))
"RTN","DGROHLR",91,0)
 I DGDFN'>0 D
"RTN","DGROHLR",92,0)
 . S DGQRYERR="NM"
"RTN","DGROHLR",93,0)
 . ;
"RTN","DGROHLR",94,0)
 . ;THE ICN FROM THE MPI DOES NOT MATCH A PATIENT, SO NOTIFY THE MPI
"RTN","DGROHLR",95,0)
 . D MPIMAIL^DGROMAIL(.DGQRY)
"RTN","DGROHLR",96,0)
 . ;
"RTN","DGROHLR",97,0)
 D SNDORF^DGROHLS(.DGQRY,DGMIEN,.DGHL,DGDFN,.DGSEGERR,.DGQRYERR)
"RTN","DGROHLR",98,0)
 Q
"RTN","DGROHLR",99,0)
 ;
"RTN","DGROHLR",100,0)
RCVORF(DGWRK,DGMIEN,DGHL) ;Receive ORF Message Types (ORF~R01)
"RTN","DGROHLR",101,0)
 ;
"RTN","DGROHLR",102,0)
 ;  Input:
"RTN","DGROHLR",103,0)
 ;    DGWRK - name of work global containing segments, ^TMP("DGROHL7",$J)
"RTN","DGROHLR",104,0)
 ;   DGMIEN - IEN of message entry in file #773
"RTN","DGROHLR",105,0)
 ;     DGHL - HL environment array
"RTN","DGROHLR",106,0)
 ;
"RTN","DGROHLR",107,0)
 ;  Output:
"RTN","DGROHLR",108,0)
 ;    none
"RTN","DGROHLR",109,0)
 ;
"RTN","DGROHLR",110,0)
 N DGDATA    ;patient data array to upload
"RTN","DGROHLR",111,0)
 N DGERR     ;parse error array
"RTN","DGROHLR",112,0)
 N DGORF     ;ORF data array
"RTN","DGROHLR",113,0)
 ;
"RTN","DGROHLR",114,0)
 S DGDATA=$NA(^TMP("DGROFDA",$J)) K @DGDATA
"RTN","DGROHLR",115,0)
 D PARSORF^DGROHLQ3(DGWRK,.DGHL,.DGORF,.DGERR,.DGDATA)
"RTN","DGROHLR",116,0)
 ;
"RTN","DGROHLR",117,0)
 I $D(DGROVRCK) DO
"RTN","DGROHLR",118,0)
 . S:('$D(DGORF("PATCH"))) DGROVRCK=0
"RTN","DGROHLR",119,0)
 . I ($D(DGORF("PATCH"))),(+DGORF("PATCH")'=572) S DGROVRCK=0
"RTN","DGROHLR",120,0)
 ;
"RTN","DGROHLR",121,0)
 ;* QUIT conditions
"RTN","DGROHLR",122,0)
 Q:'$D(DGORF)
"RTN","DGROHLR",123,0)
 Q:(+$G(DGORF("DFN"))'>0)
"RTN","DGROHLR",124,0)
 Q:'$D(^DPT(DGORF("DFN"),0))
"RTN","DGROHLR",125,0)
 Q:('$D(DGORF("PATCH")))
"RTN","DGROHLR",126,0)
 Q:(+DGORF("PATCH")'=572)
"RTN","DGROHLR",127,0)
 ;
"RTN","DGROHLR",128,0)
 S DFN=DGORF("DFN")
"RTN","DGROHLR",129,0)
 ;
"RTN","DGROHLR",130,0)
 ;Get DFN at Last Site Treated
"RTN","DGROHLR",131,0)
 S LSTDFN=+$O(@DGDATA@(2,""))
"RTN","DGROHLR",132,0)
 ;CHECK BUSINESS RULES
"RTN","DGROHLR",133,0)
 D POW^DGRODEBR(DGDATA,DFN,LSTDFN)   ;POW STATUS
"RTN","DGROHLR",134,0)
 D AO^DGRODEBR(DGDATA,DFN,LSTDFN)    ;AGENT ORANGE EXPOSURE
"RTN","DGROHLR",135,0)
 D IR^DGRODEBR(DGDATA,DFN,LSTDFN)    ;RADIATION EXPOSURE
"RTN","DGROHLR",136,0)
 D DOD^DGRODEBR(DGDATA,DFN,LSTDFN)   ;DATE OF DEATH
"RTN","DGROHLR",137,0)
 D TA^DGRODEBR(DGDATA,LSTDFN)        ;TEMPORARY ADDRESS
"RTN","DGROHLR",138,0)
 D SP^DGRODEBR(DGDATA,DFN,LSTDFN)    ;SENSITIVE PATIENT
"RTN","DGROHLR",139,0)
 D CA^DGRODEBR(DGDATA,LSTDFN)        ;CONFIDENTIAL ADDRESS
"RTN","DGROHLR",140,0)
 D PA^DGRODEBR(DGDATA,LSTDFN)        ;PERMANENT ADDRESS
"RTN","DGROHLR",141,0)
 ;
"RTN","DGROHLR",142,0)
 ;File the data
"RTN","DGROHLR",143,0)
 D CONVFDA^DGROHLR1(DFN,DGDATA)
"RTN","DGROHLR",144,0)
 ;CLEAN UP
"RTN","DGROHLR",145,0)
 K @DGDATA
"RTN","DGROHLR",146,0)
 Q
"RTN","DGROHLR1")
0^18^B27240274
"RTN","DGROHLR1",1,0)
DGROHLR1 ;GTS - ROM HL7 RECEIVE DRIVERS ; 20 Apr 2004  8:30 AM
"RTN","DGROHLR1",2,0)
 ;;5.3;Registration;**572**;Aug 13, 1993
"RTN","DGROHLR1",3,0)
 ;
"RTN","DGROHLR1",4,0)
CONVFDA(DFN,DGDATA) ; LOOP THROUGH DATA TO FILE
"RTN","DGROHLR1",5,0)
 N DFNC,F,IEN,FIELD,DGROAR,FNUM,QVAR,INX
"RTN","DGROHLR1",6,0)
 ;
"RTN","DGROHLR1",7,0)
 ;*DGROAR: Indirect reference to DGROAYi where "i" is the ORDER INDEX
"RTN","DGROHLR1",8,0)
 ;* field value in 391.23.  ORDER INDEX defines order for a group of
"RTN","DGROHLR1",9,0)
 ;* fields loaded into the LST.
"RTN","DGROHLR1",10,0)
 ;* DGROAYi defined for each group maintaining proper order.
"RTN","DGROHLR1",11,0)
 ;*  DG*5.3*572
"RTN","DGROHLR1",12,0)
 ;
"RTN","DGROHLR1",13,0)
 S DFNC=DFN_","
"RTN","DGROHLR1",14,0)
 S INX=""
"RTN","DGROHLR1",15,0)
 F  S INX=$O(^DGRO(391.23,"D",INX)) Q:INX=""  D
"RTN","DGROHLR1",16,0)
 . S DGROAR="DGROAY"_INX
"RTN","DGROHLR1",17,0)
 . S QVAR=0
"RTN","DGROHLR1",18,0)
 . S F=""
"RTN","DGROHLR1",19,0)
 . F  S F=$O(@DGDATA@(F)) Q:F=""  D
"RTN","DGROHLR1",20,0)
 . . S IEN=""
"RTN","DGROHLR1",21,0)
 . . F  S IEN=$O(@DGDATA@(F,IEN)) Q:IEN=""  D
"RTN","DGROHLR1",22,0)
 . . . S FIELD=""
"RTN","DGROHLR1",23,0)
 . . . F  S FIELD=$O(@DGDATA@(F,IEN,FIELD)) Q:FIELD=""  D
"RTN","DGROHLR1",24,0)
 . . . . S ORDINX=$O(^DGRO(391.23,"E",F,FIELD,""))
"RTN","DGROHLR1",25,0)
 . . . . D:(ORDINX=INX) SETARY
"RTN","DGROHLR1",26,0)
 . . . . ;* Following line files Internal PEC, Rmv once Ext PEC is filed
"RTN","DGROHLR1",27,0)
 . . . . I (ORDINX=INX)&(F=2) DO
"RTN","DGROHLR1",28,0)
 . . . . .D:(FIELD=.361) FILEPEC
"RTN","DGROHLR1",29,0)
 . . . . .D:((FIELD=.117)!(FIELD=.12111)!(FIELD=.14111)) FILECNTY
"RTN","DGROHLR1",30,0)
 . . I (+$O(@DGROAR@(""))>0) S QVAR=1 D FILE
"RTN","DGROHLR1",31,0)
 Q
"RTN","DGROHLR1",32,0)
 ;
"RTN","DGROHLR1",33,0)
FILECNTY ;*Retrieve county IEN and file county
"RTN","DGROHLR1",34,0)
 ;*Retrieve State IEN corresponding to Temp, Conf, or Perm State
"RTN","DGROHLR1",35,0)
 I (FIELD=.117),($D(^DPT(DFN,.11))) S STATEIEN=$P(^DPT(DFN,.11),"^",5)
"RTN","DGROHLR1",36,0)
 I (FIELD=.12111),($D(^DPT(DFN,.121))) S STATEIEN=$P(^DPT(DFN,.121),"^",5)
"RTN","DGROHLR1",37,0)
 I (FIELD=.14111),($D(^DPT(DFN,.141))) S STATEIEN=$P(^DPT(DFN,.141),"^",5)
"RTN","DGROHLR1",38,0)
 ;
"RTN","DGROHLR1",39,0)
 ;*Retrieve County IEN for exact county returned from LST
"RTN","DGROHLR1",40,0)
 S DIC="^DIC(5,"_STATEIEN_",1,"
"RTN","DGROHLR1",41,0)
 S DIC(0)="XS"
"RTN","DGROHLR1",42,0)
 S X=@DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",43,0)
 D ^DIC
"RTN","DGROHLR1",44,0)
 S DGROCTY(F,DFNC,FIELD)=+Y
"RTN","DGROHLR1",45,0)
 D FILE^DIE("","DGROCTY","ERR") ;File County IEN
"RTN","DGROHLR1",46,0)
 K @DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",47,0)
 K STATEIEN,DGROCTY
"RTN","DGROHLR1",48,0)
 Q
"RTN","DGROHLR1",49,0)
 ;
"RTN","DGROHLR1",50,0)
FILEPEC ;File Internal value of Prim Elig Code
"RTN","DGROHLR1",51,0)
 ;Called from CONVFDA^DGROHLR1
"RTN","DGROHLR1",52,0)
 ;Remove this call when fields required by PEC are received
"RTN","DGROHLR1",53,0)
 ; from LST
"RTN","DGROHLR1",54,0)
 I $D(@DGROAR@(F,DFNC,FIELD)) DO
"RTN","DGROHLR1",55,0)
 . S DIC="^DIC(8,"
"RTN","DGROHLR1",56,0)
 . S DIC(0)="MNSX"
"RTN","DGROHLR1",57,0)
 . S X=@DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",58,0)
 . D ^DIC
"RTN","DGROHLR1",59,0)
 . S DGROPEC(F,DFNC,FIELD)=+Y
"RTN","DGROHLR1",60,0)
 . D FILE^DIE("","DGROPEC","ERR")
"RTN","DGROHLR1",61,0)
 . K @DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",62,0)
 . K DGROPEC,DIC,X
"RTN","DGROHLR1",63,0)
 Q
"RTN","DGROHLR1",64,0)
 ;
"RTN","DGROHLR1",65,0)
FILE ;*Execute FILE or UPDATE per FNUM (1st subscpt) for file # according
"RTN","DGROHLR1",66,0)
 ;* to file/multiple record add or adding existing Patient data add
"RTN","DGROHLR1",67,0)
 S FNUM=$O(@DGROAR@(""))
"RTN","DGROHLR1",68,0)
 K %DT ;* Clean up leaks from Input transforms that set %DT(0)
"RTN","DGROHLR1",69,0)
 ;
"RTN","DGROHLR1",70,0)
 ;* Patient file processing
"RTN","DGROHLR1",71,0)
 I +FNUM=2 DO
"RTN","DGROHLR1",72,0)
 . D FILE^DIE("E","@DGROAR","ERR") ;*Add to existing Patient entry
"RTN","DGROHLR1",73,0)
 ;
"RTN","DGROHLR1",74,0)
 ;* Patient file multiples processing
"RTN","DGROHLR1",75,0)
 I (+FNUM=2.01)!(+FNUM=2.141) DO
"RTN","DGROHLR1",76,0)
 . D UPDATE^DIE("E","@DGROAR","","ERR")
"RTN","DGROHLR1",77,0)
 I (+FNUM=2.02)!(+FNUM=2.06) DO
"RTN","DGROHLR1",78,0)
 . D UPDATE^DIE("","@DGROAR","","ERR") ;*Converted Ext to Int
"RTN","DGROHLR1",79,0)
 ;
"RTN","DGROHLR1",80,0)
 ;* Processing fields [indicated in 391.23] not part of Patient file.
"RTN","DGROHLR1",81,0)
 ;* Define IF section for each file not a Patient file field or
"RTN","DGROHLR1",82,0)
 ;* Multiple.
"RTN","DGROHLR1",83,0)
 I (+$P(FNUM,".")'=2) DO
"RTN","DGROHLR1",84,0)
 . I +FNUM=38.1 DO
"RTN","DGROHLR1",85,0)
 . . N DGROARBI
"RTN","DGROHLR1",86,0)
 . . S DGROARBI(1)=DFN ;*Set 38.1 IEN to DFN
"RTN","DGROHLR1",87,0)
 . . D UPDATE^DIE("E","@DGROAR","DGROARBI","ERR")
"RTN","DGROHLR1",88,0)
 ;
"RTN","DGROHLR1",89,0)
 K @DGROAR
"RTN","DGROHLR1",90,0)
 Q
"RTN","DGROHLR1",91,0)
 ;
"RTN","DGROHLR1",92,0)
SETARY ;* Setup arrays of data to be filed
"RTN","DGROHLR1",93,0)
 N U,D,DATA,NODE,NODE2,INENNUM
"RTN","DGROHLR1",94,0)
 ;
"RTN","DGROHLR1",95,0)
 I '$D(^DGRO(391.23,"C",F,FIELD)) Q
"RTN","DGROHLR1",96,0)
 ;
"RTN","DGROHLR1",97,0)
 S U="^"
"RTN","DGROHLR1",98,0)
 ;
"RTN","DGROHLR1",99,0)
 ;CHECK LOCAL PATIENT FILE FOR EXISTING DATA, DO NOT OVERWRITE
"RTN","DGROHLR1",100,0)
 S D=$$GET1^DIQ(F,DFNC,FIELD)
"RTN","DGROHLR1",101,0)
 I D'="" K @DGDATA@(F,IEN,FIELD) Q
"RTN","DGROHLR1",102,0)
 ;
"RTN","DGROHLR1",103,0)
 S DATA=$G(@DGDATA@(F,IEN,FIELD,"E"))
"RTN","DGROHLR1",104,0)
 Q:DATA=""
"RTN","DGROHLR1",105,0)
 ;
"RTN","DGROHLR1",106,0)
 ;* Design of this Subroutine:
"RTN","DGROHLR1",107,0)
 ;* Set array defining groups of date for Fileman filing in
"RTN","DGROHLR1",108,0)
 ;*  a predefined order.
"RTN","DGROHLR1",109,0)
 ;* Indirection defined various array names for different ordered
"RTN","DGROHLR1",110,0)
 ;*  data groups in CONVFDA.
"RTN","DGROHLR1",111,0)
 ;* File Ext. values returned from LST per ORDER INDEX.
"RTN","DGROHLR1",112,0)
 ;* DG*5.3*572
"RTN","DGROHLR1",113,0)
 ;
"RTN","DGROHLR1",114,0)
 ;* Get field entry IEN in ROM 391.23 file
"RTN","DGROHLR1",115,0)
 S INENNUM=INX
"RTN","DGROHLR1",116,0)
 ;
"RTN","DGROHLR1",117,0)
 I F=2 DO  Q
"RTN","DGROHLR1",118,0)
 . S @DGROAR@(F,DFNC,FIELD)=DATA ;*Indirection to Patient Array
"RTN","DGROHLR1",119,0)
 . K @DGDATA@(F,IEN,FIELD)
"RTN","DGROHLR1",120,0)
 ;
"RTN","DGROHLR1",121,0)
 ;* Set array for all other files (not Patient or Security files)
"RTN","DGROHLR1",122,0)
 ;* This section is for new entries in files.  Not for Multiples.
"RTN","DGROHLR1",123,0)
 ;*  Code to process specific files needed in CONVFDA
"RTN","DGROHLR1",124,0)
 I (+$P(F,".")'=2),(F'=38.1) DO  Q
"RTN","DGROHLR1",125,0)
 . S @DGROAR@(F,"+1,",FIELD)=DATA
"RTN","DGROHLR1",126,0)
 . K @DGDATA@(F,IEN,FIELD)
"RTN","DGROHLR1",127,0)
 ;
"RTN","DGROHLR1",128,0)
 ;SET ALIAS AND CONFIDENTIAL ADDRESS CAT. SUBFILE ARRAYS
"RTN","DGROHLR1",129,0)
 I (F=2.01)!(F=2.141) D  Q
"RTN","DGROHLR1",130,0)
 . S NODE2="+"
"RTN","DGROHLR1",131,0)
 . S NODE2=NODE2_$P(IEN,",")_","_DFNC
"RTN","DGROHLR1",132,0)
 . S @DGROAR@(F,NODE2,FIELD)=DATA ;*Indirection to Patient Array
"RTN","DGROHLR1",133,0)
 . K @DGDATA@(F,IEN,FIELD)
"RTN","DGROHLR1",134,0)
 ;
"RTN","DGROHLR1",135,0)
 ;SET RACE AND ETHNICITY ARRAYS
"RTN","DGROHLR1",136,0)
 I (F=2.02)!(F=2.06) D  Q
"RTN","DGROHLR1",137,0)
 . N REFILE,REIEN,DATA30,QFL,DATACOMP,TEST,ERR,INACTIVE
"RTN","DGROHLR1",138,0)
 . I (F=2.02),(FIELD=.01) S REFILE=10
"RTN","DGROHLR1",139,0)
 . I (F=2.06),(FIELD=.01) S REFILE=10.2
"RTN","DGROHLR1",140,0)
 . I FIELD=.02 S REFILE=10.3
"RTN","DGROHLR1",141,0)
 . S DATA30=$E(DATA,1,30) D
"RTN","DGROHLR1",142,0)
 . . S QFL=0,REIEN="",NODE=""
"RTN","DGROHLR1",143,0)
 . . D FIND^DIC(REFILE,"","@;.01;200","",DATA30,,"B","","","TEST","ERR")
"RTN","DGROHLR1",144,0)
 . . F  S NODE=$O(TEST("DILIST",2,NODE)) Q:'NODE  D  Q:$G(QFL)=1
"RTN","DGROHLR1",145,0)
 . . . S REIEN=$G(TEST("DILIST",2,NODE))
"RTN","DGROHLR1",146,0)
 . . . S INACTIVE=$G(TEST("DILIST","ID",NODE,200))
"RTN","DGROHLR1",147,0)
 . . . Q:INACTIVE="YES"  ;* QUIT if Race or Eth Inact
"RTN","DGROHLR1",148,0)
 . . . S DATACOMP=$G(TEST("DILIST","ID",NODE,.01))
"RTN","DGROHLR1",149,0)
 . . . I DATACOMP=DATA S QFL=1
"RTN","DGROHLR1",150,0)
 . Q:'QFL
"RTN","DGROHLR1",151,0)
 . Q:$G(INACTIVE)="YES"  ;* No entry for Inactive Race/Ethncty
"RTN","DGROHLR1",152,0)
 . S DATA=REIEN ;*Race/Ethncty/MOC (10/10.2/10.3) IEN for data recvd
"RTN","DGROHLR1",153,0)
 . ;
"RTN","DGROHLR1",154,0)
 . S NODE2="+" ;*+ for all fields, All fields added in one UPDATE
"RTN","DGROHLR1",155,0)
 . S NODE2=NODE2_$P(IEN,",")_","_DFNC ;*No + for DFNC, DPT record exists
"RTN","DGROHLR1",156,0)
 . S @DGROAR@(F,NODE2,FIELD)=DATA ;*Indirection to Patient Array
"RTN","DGROHLR1",157,0)
 . K @DGDATA@(F,IEN,FIELD)
"RTN","DGROHLR1",158,0)
 ;
"RTN","DGROHLR1",159,0)
 ;* Set all sensitive fields (38.1) in array
"RTN","DGROHLR1",160,0)
 I F=38.1 D  Q
"RTN","DGROHLR1",161,0)
 . Q:('$D(@DGDATA@(F)))  ;*Data already filed
"RTN","DGROHLR1",162,0)
 . S FIELD=.01
"RTN","DGROHLR1",163,0)
 . S @DGROAR@(F,"+1,",FIELD)=$$GET1^DIQ(2,DFN,.01)
"RTN","DGROHLR1",164,0)
 . F  S FIELD=$O(@DGDATA@(F,IEN,FIELD)) Q:'FIELD  D
"RTN","DGROHLR1",165,0)
 . . S @DGROAR@(F,"+1,",FIELD)=@DGDATA@(F,IEN,FIELD,"E")
"RTN","DGROHLR1",166,0)
 . K @DGDATA@(F,IEN)
"RTN","DGROHLR1",167,0)
 . S FIELD=999999 ;*Skip to end of 38.1 field list in @DGDATA
"RTN","DGROHLR1",168,0)
 Q
"RTN","DGROHLS")
0^23^B15986929
"RTN","DGROHLS",1,0)
DGROHLS ;DJH/AMA - ROM HL7 SEND DRIVERS ; 27 Apr 2004  5:16 PM
"RTN","DGROHLS",2,0)
 ;;5.3;Registration;**533,572**;Aug 13, 1993
"RTN","DGROHLS",3,0)
 ;
"RTN","DGROHLS",4,0)
SNDACK(DGACKTYP,DGMIEN,DGHL,DGSEGERR,DGSTOERR) ;Send ACK Message Type (ACK~R01)
"RTN","DGROHLS",5,0)
 ;This procedure assumes that the VistA HL7 environment is providing the
"RTN","DGROHLS",6,0)
 ;environment variables and will produce a fatal error if they are missing.
"RTN","DGROHLS",7,0)
 ;
"RTN","DGROHLS",8,0)
 ;  Input:
"RTN","DGROHLS",9,0)
 ;    DGACKTYP - (required) ACK message type ("AA","AE")
"RTN","DGROHLS",10,0)
 ;      DGMIEN - (required) IEN of message entry in file #773
"RTN","DGROHLS",11,0)
 ;        DGHL - (required) HL7 environment array
"RTN","DGROHLS",12,0)
 ;    DGSEGERR - (optional) Errors found during parsing
"RTN","DGROHLS",13,0)
 ;    DGSTOERR - (optional) Errors during data storage
"RTN","DGROHLS",14,0)
 ;
"RTN","DGROHLS",15,0)
 ;  Output:
"RTN","DGROHLS",16,0)
 ;    none
"RTN","DGROHLS",17,0)
 ;
"RTN","DGROHLS",18,0)
 N DGHLROOT,DGHLERR
"RTN","DGROHLS",19,0)
 ;
"RTN","DGROHLS",20,0)
 Q:($G(DGACKTYP)']"")
"RTN","DGROHLS",21,0)
 Q:('+$G(DGMIEN))
"RTN","DGROHLS",22,0)
 ;
"RTN","DGROHLS",23,0)
 S DGHLROOT=$NA(^TMP("HLA",$J))
"RTN","DGROHLS",24,0)
 K @DGHLROOT
"RTN","DGROHLS",25,0)
 ;
"RTN","DGROHLS",26,0)
 ;build ACK segments array
"RTN","DGROHLS",27,0)
 I $$BLDACK^DGROHLU4(DGACKTYP,DGHLROOT,.DGHL,.DGSEGERR,.DGSTOERR) D
"RTN","DGROHLS",28,0)
 . ;
"RTN","DGROHLS",29,0)
 . ;generate the message
"RTN","DGROHLS",30,0)
 . D GENACK^HLMA1(DGHL("EID"),DGMIEN,DGHL("EIDS"),"GM",1,.DGHLERR)
"RTN","DGROHLS",31,0)
 ;
"RTN","DGROHLS",32,0)
 ;cleanup
"RTN","DGROHLS",33,0)
 K @DGHLROOT
"RTN","DGROHLS",34,0)
 Q
"RTN","DGROHLS",35,0)
 ;
"RTN","DGROHLS",36,0)
SNDQRY(DGDFN) ;Send QRY Message Types (QRY~R02)
"RTN","DGROHLS",37,0)
 ;
"RTN","DGROHLS",38,0)
 ;  Input:
"RTN","DGROHLS",39,0)
 ;    DGDFN - (required) pointer to patient in PATIENT (#2) file
"RTN","DGROHLS",40,0)
 ;
"RTN","DGROHLS",41,0)
 ;  Output:
"RTN","DGROHLS",42,0)
 ;   Function value - 1 on success, 0 on failure
"RTN","DGROHLS",43,0)
 ;
"RTN","DGROHLS",44,0)
 ;   Use of the API $$GET^XUESSO1() supported by DBIA # 4342
"RTN","DGROHLS",45,0)
 ;
"RTN","DGROHLS",46,0)
 N DGLST,DGHLROOT,DGHLLNK,DGHL,DGUSER,DGICN,DGMSG,DGRSLT,HLL,HLEID,HLRSLT
"RTN","DGROHLS",47,0)
 ;
"RTN","DGROHLS",48,0)
 ;the following HL* variables are created by DIRECT^HLMA
"RTN","DGROHLS",49,0)
 N HL,HLCS,HLDOM,HLECH,HLFS,HLINST,HLINSTN,HLQ,ACKCODE
"RTN","DGROHLS",50,0)
 N HLMTIEN,HLNEXT,HLNODE,HLPARAM,HLPROD,HLQUIT
"RTN","DGROHLS",51,0)
 ;
"RTN","DGROHLS",52,0)
 S DGRSLT=0
"RTN","DGROHLS",53,0)
 S DGHLROOT=$NA(^TMP("HLS",$J))
"RTN","DGROHLS",54,0)
 K @DGHLROOT
"RTN","DGROHLS",55,0)
 ;
"RTN","DGROHLS",56,0)
 I +$G(DGDFN)>0,$D(^DPT(DGDFN,0)) D
"RTN","DGROHLS",57,0)
 . ;
"RTN","DGROHLS",58,0)
 . ;ICN must be national and LST must not be local site
"RTN","DGROHLS",59,0)
 . Q:'$$MPIOK^DGROUT(DGDFN,.DGICN,.DGLST)
"RTN","DGROHLS",60,0)
 . ;
"RTN","DGROHLS",61,0)
 . ;retrieve LST's HL Logical Link and build HLL array
"RTN","DGROHLS",62,0)
 . S DGHLLNK=$$GETLINK^DGROHLUT(DGLST)
"RTN","DGROHLS",63,0)
 . Q:(DGHLLNK=0)
"RTN","DGROHLS",64,0)
 . S HLL("LINKS",1)="DGRO ROM ORF/R04 SUBSC"_U_DGHLLNK
"RTN","DGROHLS",65,0)
 . ;
"RTN","DGROHLS",66,0)
 . ;initialize VistA HL7 environment
"RTN","DGROHLS",67,0)
 . S HLEID=$$INIT^DGROHLUT("DGRO ROM QRY/R02 EVENT",.DGHL)
"RTN","DGROHLS",68,0)
 . Q:'HLEID
"RTN","DGROHLS",69,0)
 . ;
"RTN","DGROHLS",70,0)
 . ;retrieve user info    ;DG*5.3*572
"RTN","DGROHLS",71,0)
 . S DGUSER=$$GET^XUESSO1()
"RTN","DGROHLS",72,0)
 . I +DGUSER<0 D  Q
"RTN","DGROHLS",73,0)
 . . ;display error message to interactive users
"RTN","DGROHLS",74,0)
 . . S DGMSG(1)=" "
"RTN","DGROHLS",75,0)
 . . S DGMSG(2)="The query to the LST has been terminated due to insufficient user data"
"RTN","DGROHLS",76,0)
 . . D EN^DDIOL(.DGMSG)
"RTN","DGROHLS",77,0)
 . S DGUSER=$P(DGUSER,U,1,2)_U_$P(DGUSER,U,5,6)
"RTN","DGROHLS",78,0)
 . S DGUSER=$TR(DGUSER,U,"~")
"RTN","DGROHLS",79,0)
 . ;
"RTN","DGROHLS",80,0)
 . ;build QRY segments array
"RTN","DGROHLS",81,0)
 . Q:'$$BLDQRY^DGROHLQ(DGDFN,DGICN,DGHLROOT,.DGHL,DGUSER)
"RTN","DGROHLS",82,0)
 . ;
"RTN","DGROHLS",83,0)
 . ;display busy message to interactive users
"RTN","DGROHLS",84,0)
 . S DGMSG(1)=" "
"RTN","DGROHLS",85,0)
 . S DGMSG(2)="Attempting to connect to the Last Site of Treatment ("_$G(DGLST)_") to search for Patient"
"RTN","DGROHLS",86,0)
 . S DGMSG(3)="Demographic Data.  This request may take some time, please be patient ..."
"RTN","DGROHLS",87,0)
 . D EN^DDIOL(.DGMSG)
"RTN","DGROHLS",88,0)
 . ;
"RTN","DGROHLS",89,0)
 . ;generate HL7 message
"RTN","DGROHLS",90,0)
 . D DIRECT^HLMA(HLEID,"GM",1,.HLRSLT,"","")
"RTN","DGROHLS",91,0)
 . Q:$P(HLRSLT,U,2)]""
"RTN","DGROHLS",92,0)
 . I HLMTIEN N DGROVRCK S DGROVRCK=1 D RCV^DGROHLR
"RTN","DGROHLS",93,0)
 . I ($D(DGROVRCK)),(DGROVRCK=0) K DGROVRCK QUIT
"RTN","DGROHLS",94,0)
 . Q:$G(ACKCODE)
"RTN","DGROHLS",95,0)
 . ;success
"RTN","DGROHLS",96,0)
 . S DGRSLT=1
"RTN","DGROHLS",97,0)
 ;
"RTN","DGROHLS",98,0)
 ;cleanup
"RTN","DGROHLS",99,0)
 K @DGHLROOT
"RTN","DGROHLS",100,0)
 Q DGRSLT
"RTN","DGROHLS",101,0)
 ;
"RTN","DGROHLS",102,0)
SNDORF(DGQRY,DGMIEN,DGHL,DGDFN,DGSEGERR,DGQRYERR) ;Send ORF Message Type (ORF~R04)
"RTN","DGROHLS",103,0)
 ;This procedure assumes the the VistA HL7 environment is providing the
"RTN","DGROHLS",104,0)
 ;environment variables and will produce a fatal error if they are
"RTN","DGROHLS",105,0)
 ;missing.  (Called from RCVQRY^DGROHLR)
"RTN","DGROHLS",106,0)
 ;
"RTN","DGROHLS",107,0)
 ;  Input:
"RTN","DGROHLS",108,0)
 ;       DGQRY - (required) Array of QRY parsing results
"RTN","DGROHLS",109,0)
 ;      DGMIEN - (required) IEN of message entry in file #773
"RTN","DGROHLS",110,0)
 ;        DGHL - (required) HL7 environment array
"RTN","DGROHLS",111,0)
 ;       DGDFN - (required) Pointer to patient in PATIENT (#2) file
"RTN","DGROHLS",112,0)
 ;    DGSEGERR - (optional) Errors found during parsing
"RTN","DGROHLS",113,0)
 ;    DGQRYERR - (optional) Errors found during query
"RTN","DGROHLS",114,0)
 ;
"RTN","DGROHLS",115,0)
 ;  Output:
"RTN","DGROHLS",116,0)
 ;    none
"RTN","DGROHLS",117,0)
 ;
"RTN","DGROHLS",118,0)
 N DGHLROOT
"RTN","DGROHLS",119,0)
 N DGHLERR
"RTN","DGROHLS",120,0)
 ;
"RTN","DGROHLS",121,0)
 Q:('$D(DGQRY))
"RTN","DGROHLS",122,0)
 Q:('+$G(DGMIEN))
"RTN","DGROHLS",123,0)
 Q:($TR(DGQRY("USER"),"~",U)']"")
"RTN","DGROHLS",124,0)
 ;
"RTN","DGROHLS",125,0)
 S DGHLROOT=$NA(^TMP("HLA",$J)) K @DGHLROOT
"RTN","DGROHLS",126,0)
 ;
"RTN","DGROHLS",127,0)
 ;build ORF segments array
"RTN","DGROHLS",128,0)
 I $$BLDORF^DGROHLQ(DGHLROOT,.DGHL,DGDFN,.DGQRY,.DGSEGERR,.DGQRYERR) D
"RTN","DGROHLS",129,0)
 . ;
"RTN","DGROHLS",130,0)
 . ;generate the message
"RTN","DGROHLS",131,0)
 . D GENACK^HLMA1(DGHL("EID"),DGMIEN,DGHL("EIDS"),"GM",1,.DGHLERR)
"RTN","DGROHLS",132,0)
 ;
"RTN","DGROHLS",133,0)
 ;cleanup
"RTN","DGROHLS",134,0)
 K @DGHLROOT
"RTN","DGROHLS",135,0)
 Q
"RTN","DGROHLU")
0^2^B21646553
"RTN","DGROHLU",1,0)
DGROHLU ;DJH/AMA - ROM HL7 BUILD ORF SEGMENT ; 03 May 2004  12:21 PM
"RTN","DGROHLU",2,0)
 ;;5.3;Registration;**533,572**;Aug 13, 1993
"RTN","DGROHLU",3,0)
 ;
"RTN","DGROHLU",4,0)
 Q
"RTN","DGROHLU",5,0)
 ;
"RTN","DGROHLU",6,0)
DIQ(DGROFDA,FILE,DFN,DGQRY)   ;GATHER THE PATIENT DATA USING GETS^DIQ
"RTN","DGROHLU",7,0)
 ;Called from BLDORF^DGROHLQ
"RTN","DGROHLU",8,0)
 ;  INPUT:
"RTN","DGROHLU",9,0)
 ;    DGROFDA = ROOT FILE NAME OF TEMP GLOBAL ARRAY, ^TMP("DGROFDA",$J)
"RTN","DGROHLU",10,0)
 ;    FILE    = FILE FROM WHICH TO GATHER THE DATA
"RTN","DGROHLU",11,0)
 ;    DFN     = POINTER TO PATIENT (#2) FILE
"RTN","DGROHLU",12,0)
 ;    DGQRY   = ARRAY OF PARSED "QRY" DATA   ;DG*5.3*572
"RTN","DGROHLU",13,0)
 ;
"RTN","DGROHLU",14,0)
 ;  OUTPUT:
"RTN","DGROHLU",15,0)
 ;    GLOBAL ARRAY OF REQUESTED DATA ELEMENTS, IN DGROFDA
"RTN","DGROHLU",16,0)
 ;
"RTN","DGROHLU",17,0)
 ;THIS ROUTINE ALSO CHECKS THE DG REGISTER ONCE FIELD DEFINITION
"RTN","DGROHLU",18,0)
 ;(#391.23) FILE TO ENSURE EACH DATA ELEMENT IS REQUESTED.
"RTN","DGROHLU",19,0)
 ;
"RTN","DGROHLU",20,0)
 N U,FLAG,FIELD,TMPFLD,F,IEN,CNT,F1,F2,F3,F4,EIEN,STATEIEN,CNTYIEN,CNTY
"RTN","DGROHLU",21,0)
 ;
"RTN","DGROHLU",22,0)
 ;BUILD THE INITIAL DATA ELEMENT GLOBAL ARRAY
"RTN","DGROHLU",23,0)
 ;* County name is sent instead of number (avoid duplicate on number)
"RTN","DGROHLU",24,0)
 ;*  Direct global reads of STATE file, COUNTY multiple supported with
"RTN","DGROHLU",25,0)
 ;*  IA #10056
"RTN","DGROHLU",26,0)
 ;
"RTN","DGROHLU",27,0)
 S U="^",FLAG="EN" ;*Get External value (DG*5.3*572)
"RTN","DGROHLU",28,0)
 S (STATEIEN,CNTYIEN)=""
"RTN","DGROHLU",29,0)
 S FILE=0
"RTN","DGROHLU",30,0)
 ;
"RTN","DGROHLU",31,0)
 F  S FILE=$O(^DGRO(391.23,"C",FILE)) Q:'FILE  D
"RTN","DGROHLU",32,0)
 . I (FILE=2.01)!(FILE=2.02)!(FILE=2.06)!(FILE=2.141) Q
"RTN","DGROHLU",33,0)
 . S FIELD=0
"RTN","DGROHLU",34,0)
 . F  S FIELD=$O(^DGRO(391.23,"C",FILE,FIELD)) Q:'FIELD  D
"RTN","DGROHLU",35,0)
 . . S (CNTY,CNTYIEN,STATEIEN)=0
"RTN","DGROHLU",36,0)
 . . I FILE=2 DO
"RTN","DGROHLU",37,0)
 . . . I (FIELD=.117),($D(^DPT(DFN,.11))) DO
"RTN","DGROHLU",38,0)
 . . . . S STATEIEN=$P(^DPT(DFN,.11),"^",5)
"RTN","DGROHLU",39,0)
 . . . . S CNTYIEN=$P(^DPT(DFN,.11),"^",7)
"RTN","DGROHLU",40,0)
 . . . . S:((+STATEIEN>0)&(+CNTYIEN>0)) @DGROFDA@(FILE,DFN,FIELD,"E")=$P(^DIC(5,STATEIEN,1,CNTYIEN,0),"^",1)
"RTN","DGROHLU",41,0)
 . . . . S CNTY=1
"RTN","DGROHLU",42,0)
 . . . I (FIELD=.12111),($D(^DPT(DFN,.121))) DO
"RTN","DGROHLU",43,0)
 . . . . S STATEIEN=$P(^DPT(DFN,.121),"^",5)
"RTN","DGROHLU",44,0)
 . . . . S CNTYIEN=$P(^DPT(DFN,.121),"^",11)
"RTN","DGROHLU",45,0)
 . . . . S:((+STATEIEN>0)&(+CNTYIEN>0)) @DGROFDA@(FILE,DFN,FIELD,"E")=$P(^DIC(5,STATEIEN,1,CNTYIEN,0),"^",1)
"RTN","DGROHLU",46,0)
 . . . . S CNTY=1
"RTN","DGROHLU",47,0)
 . . . I (FIELD=.14111),($D(^DPT(DFN,.141))) DO
"RTN","DGROHLU",48,0)
 . . . . S STATEIEN=$P(^DPT(DFN,.141),"^",5)
"RTN","DGROHLU",49,0)
 . . . . S CNTYIEN=$P(^DPT(DFN,.141),"^",11)
"RTN","DGROHLU",50,0)
 . . . . S:((+STATEIEN>0)&(+CNTYIEN>0)) @DGROFDA@(FILE,DFN,FIELD,"E")=$P(^DIC(5,STATEIEN,1,CNTYIEN,0),"^",1)
"RTN","DGROHLU",51,0)
 . . . . S CNTY=1
"RTN","DGROHLU",52,0)
 . . D:(CNTY=0) GETS^DIQ(FILE,DFN,FIELD,FLAG,DGROFDA)
"RTN","DGROHLU",53,0)
 ;
"RTN","DGROHLU",54,0)
 ;IF THERE'S NO DATE OF DEATH, KILL ALL OTHER DoD FIELDS
"RTN","DGROHLU",55,0)
 I '$D(@DGROFDA@(2,DFN_",",.351)) F FIELD=.351:.001:.355 K @DGROFDA@(2,DFN_",",FIELD)
"RTN","DGROHLU",56,0)
 ;
"RTN","DGROHLU",57,0)
 ;GET INTERNAL AND EXTERNAL VALUES - ALIAS, RACE, AND ETHNICITY SUB-FILES
"RTN","DGROHLU",58,0)
 F FILE=2.01,2.02,2.06,2.141 D
"RTN","DGROHLU",59,0)
 . N SBFL,SBDA,SBFLD
"RTN","DGROHLU",60,0)
 . S FLAG="IEN" ;*Get Internal and External; no Null values (DG*5.3*572)
"RTN","DGROHLU",61,0)
 . S SBFL=FILE-2 I FILE=2.141 S SBFL=.14
"RTN","DGROHLU",62,0)
 . S SBDA=0 F  S SBDA=$O(^DPT(DFN,SBFL,SBDA)) Q:'SBDA  D
"RTN","DGROHLU",63,0)
 . . S SBFLD=0 F  S SBFLD=$O(^DGRO(391.23,"C",FILE,SBFLD)) Q:'SBFLD  D
"RTN","DGROHLU",64,0)
 . . . D GETS^DIQ(FILE,SBDA_","_DFN,SBFLD,FLAG,DGROFDA)
"RTN","DGROHLU",65,0)
 ;ENSURE THE RACE DATA IS ACTIVE
"RTN","DGROHLU",66,0)
 S IEN="" F  S IEN=$O(@DGROFDA@(2.02,IEN)) Q:IEN=""  D
"RTN","DGROHLU",67,0)
 . N RIEN,MIEN
"RTN","DGROHLU",68,0)
 . S RIEN=$G(@DGROFDA@(2.02,IEN,.01,"I"))
"RTN","DGROHLU",69,0)
 . I $$GET1^DIQ(10,RIEN,200,"I") K @DGROFDA@(2.02,IEN) Q
"RTN","DGROHLU",70,0)
 . K @DGROFDA@(2.02,IEN,.01,"I")
"RTN","DGROHLU",71,0)
 . K @DGROFDA@(2.02,IEN,.02,"I")
"RTN","DGROHLU",72,0)
 ;ENSURE THE ETHNICITY DATA IS ACTIVE
"RTN","DGROHLU",73,0)
 S IEN="" F  S IEN=$O(@DGROFDA@(2.06,IEN)) Q:IEN=""  D
"RTN","DGROHLU",74,0)
 . N EIEN,MIEN
"RTN","DGROHLU",75,0)
 . S EIEN=$G(@DGROFDA@(2.06,IEN,.01,"I"))
"RTN","DGROHLU",76,0)
 . I $$GET1^DIQ(10.2,EIEN,200,"I") K @DGROFDA@(2.06,IEN) Q
"RTN","DGROHLU",77,0)
 . K @DGROFDA@(2.06,IEN,.01,"I")
"RTN","DGROHLU",78,0)
 . K @DGROFDA@(2.06,IEN,.02,"I")
"RTN","DGROHLU",79,0)
 ;
"RTN","DGROHLU",80,0)
 ;CHECK FOR SENSITIVE PATIENT; IF SO, THEN PUT THE QUERY SITE (QS)
"RTN","DGROHLU",81,0)
 ;USER IN THE NEW PERSON (#200) FILE, RECORD THE ACCESS IN THE
"RTN","DGROHLU",82,0)
 ;SECURITY LOG, AND SEND A MAIL BULLETIN TO THE ISO.    ;DG*5.3*572
"RTN","DGROHLU",83,0)
 I $D(@DGROFDA@(38.1)) D
"RTN","DGROHLU",84,0)
 . N DGREMS,DGREMN,DGUSER
"RTN","DGROHLU",85,0)
 . S DGREMS=$$IEN^XUAF4(DGQRY("SNDFAC"))   ;QS Institution File (#4) IEN
"RTN","DGROHLU",86,0)
 . S DGREMN=$P($$NS^XUAF4(DGREMS),U)       ;Get QS Station Name
"RTN","DGROHLU",87,0)
 . S DGUSER=$TR(DGQRY("USER"),"~",U)       ;Get QS user data
"RTN","DGROHLU",88,0)
 . ;
"RTN","DGROHLU",89,0)
 . ;Build input for New Person File
"RTN","DGROHLU",90,0)
 . ;(format: SSN^Name^Station Name^Station #^Remote DUZ^Phone)
"RTN","DGROHLU",91,0)
 . S DGUSER=$P(DGUSER,U,1,2)_U_DGREMN_U_DGQRY("SNDFAC")_U_$P(DGUSER,U,3,4)
"RTN","DGROHLU",92,0)
 . I '$$PUT^XUESSO1(DGUSER) K @DGROFDA Q
"RTN","DGROHLU",93,0)
 . ;
"RTN","DGROHLU",94,0)
 . S DUZ=$$FIND1^DIC(200,"","",$P(DGUSER,U),"SSN","")
"RTN","DGROHLU",95,0)
 . S EVENT="DGRO ROM QRY/R02 EVENT"
"RTN","DGROHLU",96,0)
 . D SETLOG1^DGSEC(DFN,DUZ,0,U_EVENT)   ;Create Security Log entry
"RTN","DGROHLU",97,0)
 . D BULTIN1^DGSEC(DFN,DUZ,U_EVENT)     ;Send ISO mail bulletin
"RTN","DGROHLU",98,0)
 Q
"RTN","DGROHLU",99,0)
 ;
"RTN","DGROHLU",100,0)
FDA(DGWRK,DGCURLIN,DGFS,DGCS,DGRS,DGDATA)   ;Download patient data from Last Site Treated
"RTN","DGROHLU",101,0)
 ;Called from PARSORF^DGROHLQ3
"RTN","DGROHLU",102,0)
 ;  Input:
"RTN","DGROHLU",103,0)
 ;    DGWRK - Root global with all of the patient data segments, ^TMP("DGROHL7",$J)
"RTN","DGROHLU",104,0)
 ;    DGCNT - Counter for the root global subscript
"RTN","DGROHLU",105,0)
 ;     DGFS - HL7 field separator
"RTN","DGROHLU",106,0)
 ;     DGCS - HL7 component separator
"RTN","DGROHLU",107,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGROHLU",108,0)
 ;
"RTN","DGROHLU",109,0)
 ;  Output:
"RTN","DGROHLU",110,0)
 ;    DGDATA - Root global for the patient data to upload, ^TMP("DGROFDA",$J)
"RTN","DGROHLU",111,0)
 ;
"RTN","DGROHLU",112,0)
 N DGSUBS,DGVAL,DGFILE,DGIEN,DGFIELD,DGINT,DGRODA
"RTN","DGROHLU",113,0)
 ;
"RTN","DGROHLU",114,0)
 S DGCURLIN=DGCURLIN-1
"RTN","DGROHLU",115,0)
 F  S DGCURLIN=$O(@DGWRK@(DGCURLIN)) Q:'DGCURLIN  D
"RTN","DGROHLU",116,0)
 . N DGSEG
"RTN","DGROHLU",117,0)
 . S DGSEG=$P(@DGWRK@(DGCURLIN,0),DGFS,2)
"RTN","DGROHLU",118,0)
 . S DGSUBS=$P(DGSEG,DGRS),DGVAL=$P(DGSEG,DGRS,2)
"RTN","DGROHLU",119,0)
 . S DGFILE=$P(DGSUBS,DGCS),DGIEN=$P(DGSUBS,DGCS,2)
"RTN","DGROHLU",120,0)
 . S DGFIELD=$P(DGSUBS,DGCS,3),DGINT=$P(DGVAL,DGCS)
"RTN","DGROHLU",121,0)
 . ;
"RTN","DGROHLU",122,0)
 . I '$D(^DGRO(391.23,"C",DGFILE,DGFIELD)) Q
"RTN","DGROHLU",123,0)
 . ;
"RTN","DGROHLU",124,0)
 . ;BUILD/STORE EXTERNAL VALUES INTO ;*DG*5.3*572
"RTN","DGROHLU",125,0)
 . ;  ^TMP("DGROFDA",$J,FILE,IEN,FIELD,"E")=VALUE
"RTN","DGROHLU",126,0)
 . S @DGDATA@(DGFILE,DGIEN,DGFIELD,"E")=DGINT
"RTN","DGROHLU",127,0)
 Q
"RTN","DGROHLU1")
0^4^B11941906
"RTN","DGROHLU1",1,0)
DGROHLU1 ;DJH/AMA - ROM HL7 BUILD FDA SEGMENT ; 24 Jun 2003  3:53 PM
"RTN","DGROHLU1",2,0)
 ;;5.3;Registration;**533,572**;Aug 13, 1993
"RTN","DGROHLU1",3,0)
 ;
"RTN","DGROHLU1",4,0)
 Q
"RTN","DGROHLU1",5,0)
 ;
"RTN","DGROHLU1",6,0)
FDA(DGROFDA,DGSEGSTR)    ; FDA SEGMENT API
"RTN","DGROHLU1",7,0)
 ;Called from BLDORF^DGROHLQ
"RTN","DGROHLU1",8,0)
 ;
"RTN","DGROHLU1",9,0)
 ;   INPUT:
"RTN","DGROHLU1",10,0)
 ;     DGROFDA - POINTER TO THE GLOBAL DATA ARRAY, ^TMP("DGROFDA",$J)
"RTN","DGROHLU1",11,0)
 ;
"RTN","DGROHLU1",12,0)
 ;   OUTPUT:
"RTN","DGROHLU1",13,0)
 ;     DGSEGSTR - ARRAY OF SEGMENTS
"RTN","DGROHLU1",14,0)
 ;
"RTN","DGROHLU1",15,0)
 N DGVAL
"RTN","DGROHLU1",16,0)
 ;
"RTN","DGROHLU1",17,0)
 Q:'$D(@DGROFDA)
"RTN","DGROHLU1",18,0)
 I $$FDAVAL(.DGVAL) D
"RTN","DGROHLU1",19,0)
 . D BLDFDA("FDA",.DGVAL,.DGSEGSTR,.DGHL)
"RTN","DGROHLU1",20,0)
 Q
"RTN","DGROHLU1",21,0)
 ;
"RTN","DGROHLU1",22,0)
FDAVAL(DGVAL)   ; FORMAT THE DATA ARRAY FOR THE FDA SEGMENT
"RTN","DGROHLU1",23,0)
 ;   Input:
"RTN","DGROHLU1",24,0)
 ;     DGVAL - array of data
"RTN","DGROHLU1",25,0)
 ;
"RTN","DGROHLU1",26,0)
 N DGRSLT,DGX,DGF,DGIEN,DGFLD,DGEI,DGCHAR
"RTN","DGROHLU1",27,0)
 ;
"RTN","DGROHLU1",28,0)
 S (DGRSLT,DGX)=0
"RTN","DGROHLU1",29,0)
 S DGF=0 F  S DGF=$O(@DGROFDA@(DGF)) Q:'DGF  D
"RTN","DGROHLU1",30,0)
 . S DGIEN="" F  S DGIEN=$O(@DGROFDA@(DGF,DGIEN)) Q:DGIEN=""  D
"RTN","DGROHLU1",31,0)
 . . S DGFLD=0 F  S DGFLD=$O(@DGROFDA@(DGF,DGIEN,DGFLD)) Q:'DGFLD  D
"RTN","DGROHLU1",32,0)
 . . . S DGX=DGX+1
"RTN","DGROHLU1",33,0)
 . . . S DGVAL(DGX,1,1)=DGF
"RTN","DGROHLU1",34,0)
 . . . S DGVAL(DGX,1,2)=DGIEN
"RTN","DGROHLU1",35,0)
 . . . S DGVAL(DGX,1,3)=DGFLD
"RTN","DGROHLU1",36,0)
 . . . ;*Get all External values (DG*5.3*572)
"RTN","DGROHLU1",37,0)
 . . . S DGVAL(DGX,2,1)=$G(@DGROFDA@(DGF,DGIEN,DGFLD,"E"))
"RTN","DGROHLU1",38,0)
 . S DGRSLT=1
"RTN","DGROHLU1",39,0)
 ;
"RTN","DGROHLU1",40,0)
 Q DGRSLT
"RTN","DGROHLU1",41,0)
 ;
"RTN","DGROHLU1",42,0)
BLDFDA(DGTYP,DGVAL,DGSEGSTR,DGHL)       ;FDA SEGMENT BUILDER
"RTN","DGROHLU1",43,0)
 ;BUILDS THE FDA SEGMENT IN THE FOLLOWING FORMAT:
"RTN","DGROHLU1",44,0)
 ;  FDA ^ FILE | IEN | FIELD ~ EXTERNAL VALUE
"RTN","DGROHLU1",45,0)
 ;  ADD ^ FILE | IEN | FIELD ~ EXTERNAL VALUE
"RTN","DGROHLU1",46,0)
 ;  ADD ^ FILE | IEN | FIELD ~ EXTERNAL VALUE
"RTN","DGROHLU1",47,0)
 ;   etc., etc.
"RTN","DGROHLU1",48,0)
 ;
"RTN","DGROHLU1",49,0)
 ;   INPUT:
"RTN","DGROHLU1",50,0)
 ;     DGTYP    - SEGMENT TYPE
"RTN","DGROHLU1",51,0)
 ;     DGVAL    - FIELD DATA ARRAY  [SUB1:field, SUB2:repetition
"RTN","DGROHLU1",52,0)
 ;                                   SUB3:component, SUB4:sub-component]
"RTN","DGROHLU1",53,0)
 ;     DGSEGSTR - ARRAY OF SEGMENTS, EACH NO GREATER THAN 245 CHARACTERS
"RTN","DGROHLU1",54,0)
 ;     DGHL     - HL7 ENVIRONMENT ARRAY
"RTN","DGROHLU1",55,0)
 ;
"RTN","DGROHLU1",56,0)
 ;   OUTPUT:
"RTN","DGROHLU1",57,0)
 ;     FUNCTION VALUE - FORMATTED ARRAY OF HL7 SEGMENTS ON SUCCESS, "" ON FAILURE
"RTN","DGROHLU1",58,0)
 ;
"RTN","DGROHLU1",59,0)
 N DGCNT     ;array counter
"RTN","DGROHLU1",60,0)
 N DGFS      ;field separator
"RTN","DGROHLU1",61,0)
 N DGCS      ;component separator
"RTN","DGROHLU1",62,0)
 N DGRS      ;repetition separator
"RTN","DGROHLU1",63,0)
 N DGSS      ;sub-component separator
"RTN","DGROHLU1",64,0)
 N DGFLD     ;field subscript
"RTN","DGROHLU1",65,0)
 N DGFLDVAL  ;field value
"RTN","DGROHLU1",66,0)
 N DGSEP     ;HL7 separator
"RTN","DGROHLU1",67,0)
 N DGREP     ;repetition subscript
"RTN","DGROHLU1",68,0)
 N DGREPVAL  ;repetition value
"RTN","DGROHLU1",69,0)
 N DGCMP     ;component subscript
"RTN","DGROHLU1",70,0)
 N DGCMPVAL  ;component value
"RTN","DGROHLU1",71,0)
 N DGSUB     ;sub-component subscript
"RTN","DGROHLU1",72,0)
 N DGSUBVAL  ;sub-component value
"RTN","DGROHLU1",73,0)
 ;
"RTN","DGROHLU1",74,0)
 Q:($G(DGTYP)']"")
"RTN","DGROHLU1",75,0)
 ;
"RTN","DGROHLU1",76,0)
 S DGCNT=1
"RTN","DGROHLU1",77,0)
 S DGSEGSTR(DGCNT)=DGTYP
"RTN","DGROHLU1",78,0)
 S DGFS=DGHL("FS")
"RTN","DGROHLU1",79,0)
 S DGCS=$E(DGHL("ECH"))
"RTN","DGROHLU1",80,0)
 S DGRS=$E(DGHL("ECH"),2)
"RTN","DGROHLU1",81,0)
 S DGSS=$E(DGHL("ECH"),4)
"RTN","DGROHLU1",82,0)
 ;
"RTN","DGROHLU1",83,0)
 F DGFLD=1:1:$O(DGVAL(""),-1) D
"RTN","DGROHLU1",84,0)
 . I DGTYP="ADD" S DGCNT=DGCNT+1,DGSEGSTR(DGCNT)=DGTYP
"RTN","DGROHLU1",85,0)
 . S DGFLDVAL=$G(DGVAL(DGFLD)),DGSEP=DGFS
"RTN","DGROHLU1",86,0)
 . D ADD(DGFLDVAL,DGSEP,.DGSEGSTR,.DGCNT)
"RTN","DGROHLU1",87,0)
 . F DGREP=1:1:$O(DGVAL(DGFLD,""),-1)  D
"RTN","DGROHLU1",88,0)
 . . S DGREPVAL=$G(DGVAL(DGFLD,DGREP))
"RTN","DGROHLU1",89,0)
 . . S DGSEP=$S(DGREP=1:"",1:DGRS)
"RTN","DGROHLU1",90,0)
 . . D ADD(DGREPVAL,DGSEP,.DGSEGSTR,.DGCNT)
"RTN","DGROHLU1",91,0)
 . . F DGCMP=1:1:$O(DGVAL(DGFLD,DGREP,""),-1) D
"RTN","DGROHLU1",92,0)
 . . . S DGCMPVAL=$G(DGVAL(DGFLD,DGREP,DGCMP))
"RTN","DGROHLU1",93,0)
 . . . S DGSEP=$S(DGCMP=1:"",1:DGCS)
"RTN","DGROHLU1",94,0)
 . . . D ADD(DGCMPVAL,DGSEP,.DGSEGSTR,.DGCNT)
"RTN","DGROHLU1",95,0)
 . . . F DGSUB=1:1:$O(DGVAL(DGFLD,DGREP,DGCMP,""),-1) D
"RTN","DGROHLU1",96,0)
 . . . . S DGSUBVAL=$G(DGVAL(DGFLD,DGREP,DGCMP,DGSUB))
"RTN","DGROHLU1",97,0)
 . . . . S DGSEP=$S(DGSUB=1:"",1:DGSS)
"RTN","DGROHLU1",98,0)
 . . . . D ADD(DGSUBVAL,DGSEP,.DGSEGSTR,.DGCNT)
"RTN","DGROHLU1",99,0)
 . S DGTYP="ADD"
"RTN","DGROHLU1",100,0)
 Q
"RTN","DGROHLU1",101,0)
 ;
"RTN","DGROHLU1",102,0)
ADD(DGVAL,DGSEP,DGSEGSTR,DGCNT) ;append a value onto segment
"RTN","DGROHLU1",103,0)
 ;
"RTN","DGROHLU1",104,0)
 ;  Input:
"RTN","DGROHLU1",105,0)
 ;    DGVAL - value to append
"RTN","DGROHLU1",106,0)
 ;    DGSEP - HL7 separator
"RTN","DGROHLU1",107,0)
 ;
"RTN","DGROHLU1",108,0)
 ;  Output:
"RTN","DGROHLU1",109,0)
 ;    DGSEGSTR(DGCNT) - segment passed by reference
"RTN","DGROHLU1",110,0)
 ;
"RTN","DGROHLU1",111,0)
 S DGSEP=$G(DGSEP)
"RTN","DGROHLU1",112,0)
 S DGVAL=$G(DGVAL)
"RTN","DGROHLU1",113,0)
 S DGSEGSTR(DGCNT)=DGSEGSTR(DGCNT)_DGSEP_DGVAL
"RTN","DGROHLU1",114,0)
 Q
"RTN","DGROMAIL")
0^5^B35432483
"RTN","DGROMAIL",1,0)
DGROMAIL ;DJH/AMA - ROM HL7 MAIL MESSAGE PROCESSING ; 28 Apr 2004  4:16 PM
"RTN","DGROMAIL",2,0)
 ;;5.3;Registration;**533,572**;Aug 13, 1993
"RTN","DGROMAIL",3,0)
 ;
"RTN","DGROMAIL",4,0)
 Q
"RTN","DGROMAIL",5,0)
 ;
"RTN","DGROMAIL",6,0)
MPIMAIL(DGQRY) ;LOG MPI EXCEPTION FROM LAST SITE TREATED
"RTN","DGROMAIL",7,0)
 ;The ICN sent from the MPI does not match the patient at the Last Site
"RTN","DGROMAIL",8,0)
 ;Treated, even though the site was on the Treatment Facility List
"RTN","DGROMAIL",9,0)
 ;received from the MPI.  Send the MPI an exception to this effect.
"RTN","DGROMAIL",10,0)
 ;CALLED FROM RCVQRY^DGROHLR
"RTN","DGROMAIL",11,0)
 ;
"RTN","DGROMAIL",12,0)
 ; Input:
"RTN","DGROMAIL",13,0)
 ;   DGQRY - Patient lookup components array
"RTN","DGROMAIL",14,0)
 N FACNAM,LINE,TEXT,DGXMTXT,MPIFL,SITE,HLMID,LST,QS
"RTN","DGROMAIL",15,0)
 S HLMID=$G(HL("MID"))
"RTN","DGROMAIL",16,0)
 S LST=+$G(HL("RFN"))
"RTN","DGROMAIL",17,0)
 S QS=+$G(HL("SAF"))
"RTN","DGROMAIL",18,0)
 ;
"RTN","DGROMAIL",19,0)
 S FACNAM="",LINE="",MPIFL=1,HL("MID")=""
"RTN","DGROMAIL",20,0)
 I '$G(DGQRY("RCVFAC")) D
"RTN","DGROMAIL",21,0)
 . S SITE=$$SITE^VASITE
"RTN","DGROMAIL",22,0)
 . S DGQRY("RCVFAC")=$P(SITE,U,3)
"RTN","DGROMAIL",23,0)
 . S QS=DGQRY("RCVAC")
"RTN","DGROMAIL",24,0)
 ;
"RTN","DGROMAIL",25,0)
 S RGEXC=219
"RTN","DGROMAIL",26,0)
 S TEXT="Unable to find ICN # "_DGQRY("ICN")_" at "_LST_" for a Register Once call from Station # "_QS
"RTN","DGROMAIL",27,0)
 D EXC^RGHLLOG(RGEXC,TEXT)
"RTN","DGROMAIL",28,0)
 S HL("MID")=HLMID
"RTN","DGROMAIL",29,0)
 Q
"RTN","DGROMAIL",30,0)
 ;
"RTN","DGROMAIL",31,0)
DODMAIL(DGDATA,DFN,LSTDFN) ;SEND MAIL MESSAGE TO DATE OF DEATH MAIL GROUP
"RTN","DGROMAIL",32,0)
 ;Date of Death data has been received from the Last Site Treated,
"RTN","DGROMAIL",33,0)
 ;so notify the appropriate people that this person is listed as
"RTN","DGROMAIL",34,0)
 ;deceased at the LST.
"RTN","DGROMAIL",35,0)
 ;  CALLED FROM DOD^DGRODEBR
"RTN","DGROMAIL",36,0)
 ;
"RTN","DGROMAIL",37,0)
 ; Input:
"RTN","DGROMAIL",38,0)
 ;   DGDATA - Data element array from LST, ^TMP("DGROFDA",$J)
"RTN","DGROMAIL",39,0)
 ;      DFN - Pointer to the PATIENT (#2) file
"RTN","DGROMAIL",40,0)
 ;   LSTDFN - Pointer to the patient data from the LST, in DGDATA
"RTN","DGROMAIL",41,0)
 N U,LINE,LNCNT,TEXT,DGXMTXT,MPIFL
"RTN","DGROMAIL",42,0)
 ;
"RTN","DGROMAIL",43,0)
 S U="^",LINE="",LNCNT=7,MPIFL=0
"RTN","DGROMAIL",44,0)
 S LINE(1)="* * * *  DG REGISTER ONCE NOTIFICATION  * * * *"
"RTN","DGROMAIL",45,0)
 S LINE(2)="Death Information has been received for the following patient:"
"RTN","DGROMAIL",46,0)
 S LINE(3)="Patient Name: "_$$GET1^DIQ(2,DFN,.01)
"RTN","DGROMAIL",47,0)
 S LINE(4)="Social Security Number: "_$$GET1^DIQ(2,DFN,.09)
"RTN","DGROMAIL",48,0)
 S LINE(5)="Date Of Birth: "_$$FMTE^XLFDT($$GET1^DIQ(2,DFN,.03,"I"))
"RTN","DGROMAIL",49,0)
 S LINE(6)="Integrated Control #: "_$$GET1^DIQ(2,DFN,991.01)
"RTN","DGROMAIL",50,0)
 ;
"RTN","DGROMAIL",51,0)
 S LINE(LNCNT)="Death data received:"
"RTN","DGROMAIL",52,0)
 I $D(@DGDATA@(2,LSTDFN_",",.351)) D
"RTN","DGROMAIL",53,0)
 . S LNCNT=LNCNT+1
"RTN","DGROMAIL",54,0)
 . ;* Format External date received per XLFDT for output consistency
"RTN","DGROMAIL",55,0)
 . K X,%DT,Y ;* DG*5.3*572
"RTN","DGROMAIL",56,0)
 . S X=@DGDATA@(2,LSTDFN_",",.351,"E")
"RTN","DGROMAIL",57,0)
 . S %DT="TSN"
"RTN","DGROMAIL",58,0)
 . D ^%DT
"RTN","DGROMAIL",59,0)
 . S LINE(LNCNT)="   Date of Death: "_$$FMTE^XLFDT(Y)
"RTN","DGROMAIL",60,0)
 ;
"RTN","DGROMAIL",61,0)
 I $D(@DGDATA@(2,LSTDFN_",",.353)) D
"RTN","DGROMAIL",62,0)
 . N DGSET,DGSRCE
"RTN","DGROMAIL",63,0)
 . ;* External DOD Source returned from LST
"RTN","DGROMAIL",64,0)
 . S DGSRCE=@DGDATA@(2,LSTDFN_",",.353,"E") ;* DG*5.3*572
"RTN","DGROMAIL",65,0)
 . S LNCNT=LNCNT+1
"RTN","DGROMAIL",66,0)
 . S LINE(LNCNT)="   Source Of Notification of D.o.D.: "_DGSRCE
"RTN","DGROMAIL",67,0)
 ;
"RTN","DGROMAIL",68,0)
 I $D(@DGDATA@(2,LSTDFN_",",.352)) D
"RTN","DGROMAIL",69,0)
 . S LNCNT=LNCNT+1
"RTN","DGROMAIL",70,0)
 . S LINE(LNCNT)="   D.o.D. Entered By: "_@DGDATA@(2,LSTDFN_",",.352,"E")
"RTN","DGROMAIL",71,0)
 ;
"RTN","DGROMAIL",72,0)
 I $D(@DGDATA@(2,LSTDFN_",",.354)) D
"RTN","DGROMAIL",73,0)
 . S LNCNT=LNCNT+1
"RTN","DGROMAIL",74,0)
 . ;* Format External date received per XLFDT for output consistency
"RTN","DGROMAIL",75,0)
 . K X,%DT,Y ;* DG*5.3*572
"RTN","DGROMAIL",76,0)
 . S X=@DGDATA@(2,LSTDFN_",",.354,"E")
"RTN","DGROMAIL",77,0)
 . S %DT="TSN"
"RTN","DGROMAIL",78,0)
 . D ^%DT
"RTN","DGROMAIL",79,0)
 . S LINE(LNCNT)="   D.o.D. Last Updated: "_$$FMTE^XLFDT(Y)
"RTN","DGROMAIL",80,0)
 ;
"RTN","DGROMAIL",81,0)
 ;DG*5.3*572 -- added field .355
"RTN","DGROMAIL",82,0)
 I $D(@DGDATA@(2,LSTDFN_",",.355)) D
"RTN","DGROMAIL",83,0)
 . S LNCNT=LNCNT+1
"RTN","DGROMAIL",84,0)
 . S LINE(LNCNT)="   D.o.D. Last Edited By: "_@DGDATA@(2,LSTDFN_",",.355,"E")
"RTN","DGROMAIL",85,0)
 ;
"RTN","DGROMAIL",86,0)
 S DGXMTXT=$NA(TEXT)
"RTN","DGROMAIL",87,0)
 D BLDMSG(.LINE,DGXMTXT)
"RTN","DGROMAIL",88,0)
 D SNDMSG(DGXMTXT,"DG REGISTER ONCE",MPIFL)
"RTN","DGROMAIL",89,0)
 K X,%DT,Y ;* DG*5.3*572
"RTN","DGROMAIL",90,0)
 Q
"RTN","DGROMAIL",91,0)
 ;
"RTN","DGROMAIL",92,0)
SPMAIL(DFN) ;SEND MAIL MESSAGE REGARDING A SENSITIVE PATIENT
"RTN","DGROMAIL",93,0)
 ;Sensitive Patient data has been received from the Last Site Treated,
"RTN","DGROMAIL",94,0)
 ;so notify the appropriate people that this person is listed as
"RTN","DGROMAIL",95,0)
 ;Sensitive at the LST.
"RTN","DGROMAIL",96,0)
 ;  CALLED FROM SP^DGRODEBR
"RTN","DGROMAIL",97,0)
 ;
"RTN","DGROMAIL",98,0)
 ; Input:
"RTN","DGROMAIL",99,0)
 ;   DGDATA - Data element array from LST, ^TMP("DGROFDA",$J)
"RTN","DGROMAIL",100,0)
 ;      DFN - Pointer to the PATIENT (#2) file
"RTN","DGROMAIL",101,0)
 N U,LINE,TEXT,DGXMTXT,MPIFL
"RTN","DGROMAIL",102,0)
 ;
"RTN","DGROMAIL",103,0)
 S U="^",LINE="",MPIFL=0
"RTN","DGROMAIL",104,0)
 S LINE(1)="* * * *  DG REGISTER ONCE NOTIFICATION  * * * *"
"RTN","DGROMAIL",105,0)
 S LINE(2)="Sensitive Patient Information has been received for the following patient:"
"RTN","DGROMAIL",106,0)
 S LINE(3)="Patient Name: "_$$GET1^DIQ(2,DFN,.01)
"RTN","DGROMAIL",107,0)
 S LINE(4)="Social Security Number: "_$$GET1^DIQ(2,DFN,.09)
"RTN","DGROMAIL",108,0)
 S LINE(5)="Date Of Birth: "_$$FMTE^XLFDT($$GET1^DIQ(2,DFN,.03,"I"))
"RTN","DGROMAIL",109,0)
 S LINE(6)="Integrated Control #: "_$$GET1^DIQ(2,DFN,991.01)
"RTN","DGROMAIL",110,0)
 ;
"RTN","DGROMAIL",111,0)
 S DGXMTXT=$NA(TEXT)
"RTN","DGROMAIL",112,0)
 D BLDMSG(.LINE,DGXMTXT)
"RTN","DGROMAIL",113,0)
 D SNDMSG(DGXMTXT,"DG REGISTER ONCE",MPIFL)
"RTN","DGROMAIL",114,0)
 Q
"RTN","DGROMAIL",115,0)
 ;
"RTN","DGROMAIL",116,0)
BLDMSG(LINE,DGXMTXT) ;build MailMan message array
"RTN","DGROMAIL",117,0)
 ;
"RTN","DGROMAIL",118,0)
 ;  Input:
"RTN","DGROMAIL",119,0)
 ;    LINE - message array
"RTN","DGROMAIL",120,0)
 ;
"RTN","DGROMAIL",121,0)
 ;  Output:
"RTN","DGROMAIL",122,0)
 ;    DGXMTXT - array of MailMan text lines
"RTN","DGROMAIL",123,0)
 ;
"RTN","DGROMAIL",124,0)
 N DGLIN   ;line counter
"RTN","DGROMAIL",125,0)
 N DGMAX   ;maximum line length
"RTN","DGROMAIL",126,0)
 N DGCNT   ;counter
"RTN","DGROMAIL",127,0)
 ;
"RTN","DGROMAIL",128,0)
 S DGLIN=0
"RTN","DGROMAIL",129,0)
 S DGMAX=65
"RTN","DGROMAIL",130,0)
 ;
"RTN","DGROMAIL",131,0)
 S DGCNT=0 F  S DGCNT=$O(LINE(DGCNT)) Q:'DGCNT  D
"RTN","DGROMAIL",132,0)
 . D ADDLINE("",0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGROMAIL",133,0)
 . D ADDLINE(LINE(DGCNT),0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGROMAIL",134,0)
 ;
"RTN","DGROMAIL",135,0)
 D ADDLINE("",0,DGMAX,.DGLIN,DGXMTXT)
"RTN","DGROMAIL",136,0)
 Q
"RTN","DGROMAIL",137,0)
 ;
"RTN","DGROMAIL",138,0)
ADDLINE(DGTEXT,DGINDENT,DGMAXLEN,DGCNT,DGXMTXT) ;add text line to message array
"RTN","DGROMAIL",139,0)
 ;
"RTN","DGROMAIL",140,0)
 ;  Input:
"RTN","DGROMAIL",141,0)
 ;     DGTEXT - text string
"RTN","DGROMAIL",142,0)
 ;   DGINDENT - number of spaces to insert at start of line
"RTN","DGROMAIL",143,0)
 ;   DGMAXLEN - maximum desired line length (default: 60)
"RTN","DGROMAIL",144,0)
 ;      DGCNT - line number passed by reference
"RTN","DGROMAIL",145,0)
 ;
"RTN","DGROMAIL",146,0)
 ;  Output:
"RTN","DGROMAIL",147,0)
 ;    DGXMTXT - array of text strings
"RTN","DGROMAIL",148,0)
 ;
"RTN","DGROMAIL",149,0)
 N DGAVAIL  ;available space for text
"RTN","DGROMAIL",150,0)
 N DGLINE   ;truncated text
"RTN","DGROMAIL",151,0)
 N DGLOC    ;location of space character
"RTN","DGROMAIL",152,0)
 N DGPAD    ;space indent
"RTN","DGROMAIL",153,0)
 ;
"RTN","DGROMAIL",154,0)
 S DGTEXT=$G(DGTEXT)
"RTN","DGROMAIL",155,0)
 S DGINDENT=+$G(DGINDENT)
"RTN","DGROMAIL",156,0)
 S DGMAXLEN=+$G(DGMAXLEN)
"RTN","DGROMAIL",157,0)
 S:'DGMAXLEN DGMAXLEN=60
"RTN","DGROMAIL",158,0)
 I DGINDENT>(DGMAXLEN-1) S DGINDENT=0
"RTN","DGROMAIL",159,0)
 S DGCNT=$G(DGCNT,0)  ;default to 0
"RTN","DGROMAIL",160,0)
 ;
"RTN","DGROMAIL",161,0)
 S DGPAD=$$REPEAT^XLFSTR(" ",DGINDENT)
"RTN","DGROMAIL",162,0)
 ;
"RTN","DGROMAIL",163,0)
 ;determine available space for text
"RTN","DGROMAIL",164,0)
 S DGAVAIL=(DGMAXLEN-DGINDENT)
"RTN","DGROMAIL",165,0)
 F  D  Q:('$L(DGTEXT))
"RTN","DGROMAIL",166,0)
 . ;
"RTN","DGROMAIL",167,0)
 . ;find potential line break
"RTN","DGROMAIL",168,0)
 . S DGLOC=$L($E(DGTEXT,1,DGAVAIL)," ")
"RTN","DGROMAIL",169,0)
 . ;
"RTN","DGROMAIL",170,0)
 . ;break a line that is too long when it has potential line breaks
"RTN","DGROMAIL",171,0)
 . I $L(DGTEXT)>DGAVAIL,DGLOC D
"RTN","DGROMAIL",172,0)
 . . S DGLINE=$P(DGTEXT," ",1,$S(DGLOC>1:DGLOC-1,1:1))
"RTN","DGROMAIL",173,0)
 . . S DGTEXT=$P(DGTEXT," ",$S(DGLOC>1:DGLOC,1:DGLOC+1),$L(DGTEXT," "))
"RTN","DGROMAIL",174,0)
 . E  D
"RTN","DGROMAIL",175,0)
 . . S DGLINE=DGTEXT,DGTEXT=""
"RTN","DGROMAIL",176,0)
 . ;
"RTN","DGROMAIL",177,0)
 . S DGCNT=DGCNT+1
"RTN","DGROMAIL",178,0)
 . S @DGXMTXT@(DGCNT)=DGPAD_DGLINE
"RTN","DGROMAIL",179,0)
 Q
"RTN","DGROMAIL",180,0)
 ;
"RTN","DGROMAIL",181,0)
SNDMSG(DGXMTXT,MAILGRP,MPIFL) ;send the MailMan message
"RTN","DGROMAIL",182,0)
 ;
"RTN","DGROMAIL",183,0)
 ;  Input:
"RTN","DGROMAIL",184,0)
 ;    DGXMTXT - name of message text array in closed format
"RTN","DGROMAIL",185,0)
 ;
"RTN","DGROMAIL",186,0)
 ;  Output:
"RTN","DGROMAIL",187,0)
 ;    none
"RTN","DGROMAIL",188,0)
 ;
"RTN","DGROMAIL",189,0)
 N DIFROM  ;protect FM package
"RTN","DGROMAIL",190,0)
 N XMDUZ   ;sender
"RTN","DGROMAIL",191,0)
 N XMSUB   ;message subject
"RTN","DGROMAIL",192,0)
 N XMTEXT  ;name of message text array in open format
"RTN","DGROMAIL",193,0)
 N XMY     ;recipient array
"RTN","DGROMAIL",194,0)
 N XMZ     ;returned message number
"RTN","DGROMAIL",195,0)
 ;
"RTN","DGROMAIL",196,0)
 S XMDUZ="DG Register Once Module"
"RTN","DGROMAIL",197,0)
 S XMSUB="DG REGISTER ONCE MESSAGE"
"RTN","DGROMAIL",198,0)
 S XMTEXT=$$OREF^DILF(DGXMTXT)
"RTN","DGROMAIL",199,0)
 S XMY("G."_MAILGRP)=""
"RTN","DGROMAIL",200,0)
 I '$G(MPIFL) S XMY(DUZ)=""
"RTN","DGROMAIL",201,0)
 D ^XMD
"RTN","DGROMAIL",202,0)
 Q
"RTN","DGROUT")
0^17^B15077176
"RTN","DGROUT",1,0)
DGROUT ;DJH/AMA - ROM UTILITIES ; 28 Apr 2004  12:24 PM
"RTN","DGROUT",2,0)
 ;;5.3;Registration;**533,572**;Aug 13, 1993
"RTN","DGROUT",3,0)
 ;
"RTN","DGROUT",4,0)
 Q   ;no direct entry
"RTN","DGROUT",5,0)
 ;
"RTN","DGROUT",6,0)
MPIOK(DGDFN,DGICN,DGLST) ;return non-local LST and ICN
"RTN","DGROUT",7,0)
 ;This function retrieves an ICN given a pointer to the PATIENT (#2)
"RTN","DGROUT",8,0)
 ;file for a patient.  When the ICN is not local and the local site
"RTN","DGROUT",9,0)
 ;is not the Last Site Treated (LST), the LST is retrieved as a
"RTN","DGROUT",10,0)
 ;pointer to the INSTITUTION (#4) file.
"RTN","DGROUT",11,0)
 ;  Called from SNDQRY^DGROHLR
"RTN","DGROUT",12,0)
 ;
"RTN","DGROUT",13,0)
 ;  Supported DBIA #2701:  The supported DBIA is used to access MPI
"RTN","DGROUT",14,0)
 ;                         APIs to retrieve ICN, determine if ICN
"RTN","DGROUT",15,0)
 ;                         is local and if site is LST.
"RTN","DGROUT",16,0)
 ;  Supported DBIA #2702:  The supported DBIA is used to retrieve the
"RTN","DGROUT",17,0)
 ;                         MPI node from the PATIENT (#2) file.
"RTN","DGROUT",18,0)
 ;
"RTN","DGROUT",19,0)
 ;  Input:
"RTN","DGROUT",20,0)
 ;    DGDFN - IEN of patient in PATIENT (#2) file
"RTN","DGROUT",21,0)
 ;    DGICN - passed by reference to contain national ICN
"RTN","DGROUT",22,0)
 ;    DGLST - passed by reference to contain LST
"RTN","DGROUT",23,0)
 ;
"RTN","DGROUT",24,0)
 ;  Output:
"RTN","DGROUT",25,0)
 ;   Function Value - 1 on national ICN and non-local LST, 0 on failure
"RTN","DGROUT",26,0)
 ;            DGICN - Patient's Integrated Control Number
"RTN","DGROUT",27,0)
 ;            DGLST - Pointer to INSTITUTION (#4) file for LST if LST
"RTN","DGROUT",28,0)
 ;                    is not local, undefined otherwise.
"RTN","DGROUT",29,0)
 ;
"RTN","DGROUT",30,0)
 N DGRSLT
"RTN","DGROUT",31,0)
 S DGRSLT=0
"RTN","DGROUT",32,0)
 I $G(DGDFN)>0,$D(^DPT(DGDFN,"MPI")) D
"RTN","DGROUT",33,0)
 . S DGICN=$$GETICN^MPIF001(DGDFN)
"RTN","DGROUT",34,0)
 . ;
"RTN","DGROUT",35,0)
 . ;ICN must be valid
"RTN","DGROUT",36,0)
 . I (DGICN'>0) D  Q
"RTN","DGROUT",37,0)
 . . S DGMSG(1)=" "
"RTN","DGROUT",38,0)
 . . S DGMSG(2)="The query to the LST has been terminated because required"
"RTN","DGROUT",39,0)
 . . S DGMSG(3)="information was not provided by the MPI."
"RTN","DGROUT",40,0)
 . . D EN^DDIOL(.DGMSG) R A:5
"RTN","DGROUT",41,0)
 . ;
"RTN","DGROUT",42,0)
 . ;ICN must not be local
"RTN","DGROUT",43,0)
 . I $$IFLOCAL^MPIF001(DGDFN) D  Q
"RTN","DGROUT",44,0)
 . . S DGMSG(1)=" "
"RTN","DGROUT",45,0)
 . . S DGMSG(2)="The query to the LST has been terminated because required"
"RTN","DGROUT",46,0)
 . . S DGMSG(3)="information was not provided by the MPI."
"RTN","DGROUT",47,0)
 . . D EN^DDIOL(.DGMSG) R A:5
"RTN","DGROUT",48,0)
 . ;
"RTN","DGROUT",49,0)
 . ;Get LST from Treating Facility List
"RTN","DGROUT",50,0)
 . S DGLST=$$TFL(DGDFN)
"RTN","DGROUT",51,0)
 . ;
"RTN","DGROUT",52,0)
 . I (DGLST'>0) D  Q
"RTN","DGROUT",53,0)
 . . S DGMSG(1)=" "
"RTN","DGROUT",54,0)
 . . S DGMSG(2)="The query to the LST has been terminated because required"
"RTN","DGROUT",55,0)
 . . S DGMSG(3)="information was not provided by the MPI."
"RTN","DGROUT",56,0)
 . . D EN^DDIOL(.DGMSG) R A:5
"RTN","DGROUT",57,0)
 . ;
"RTN","DGROUT",58,0)
 . S DGRSLT=1
"RTN","DGROUT",59,0)
 Q DGRSLT
"RTN","DGROUT",60,0)
 ;
"RTN","DGROUT",61,0)
TFL(DFN) ;
"RTN","DGROUT",62,0)
 ;Retrieve Last Site Treated from the Treating Facility List ^DGCN(391.91
"RTN","DGROUT",63,0)
 ;This function will retrieve the most recent treatment site
"RTN","DGROUT",64,0)
 ;from the Treating Facility List (TFL) received from the MPI
"RTN","DGROUT",65,0)
 ;
"RTN","DGROUT",66,0)
 ;  Input:
"RTN","DGROUT",67,0)
 ;    DFN - (required) IEN of patient in PATIENT (#2) File
"RTN","DGROUT",68,0)
 ;
"RTN","DGROUT",69,0)
 ;  Output:
"RTN","DGROUT",70,0)
 ;    Function value - Facility IEN on success, 0 on failure
"RTN","DGROUT",71,0)
 ;
"RTN","DGROUT",72,0)
 N RSLT       ;Result returned from call
"RTN","DGROUT",73,0)
 N QFL        ;Quit flag
"RTN","DGROUT",74,0)
 N TFLDR      ;Treating Facility List Record Number
"RTN","DGROUT",75,0)
 N DATA       ;Array of TFL data
"RTN","DGROUT",76,0)
 N RDATA      ;Array of Treating Facilities arranged by date and TFLDR
"RTN","DGROUT",77,0)
 N DATE,TFL
"RTN","DGROUT",78,0)
 ;
"RTN","DGROUT",79,0)
 S (RSLT,QFL)=0
"RTN","DGROUT",80,0)
 ;Check to see if there is a TFL for this patient.
"RTN","DGROUT",81,0)
 ;If not exit and return -1 to call.
"RTN","DGROUT",82,0)
 I '$D(^DGCN(391.91,"B",DFN)) G EXITTFL
"RTN","DGROUT",83,0)
 ;
"RTN","DGROUT",84,0)
 ;Go through the "B" index of TFL file and retrieve
"RTN","DGROUT",85,0)
 ;record numbers for the patient DFN.
"RTN","DGROUT",86,0)
 S TFLDR="" F  S TFLDR=$O(^DGCN(391.91,"B",DFN,TFLDR)) Q:TFLDR=""  D
"RTN","DGROUT",87,0)
 . ;Retrieve data from record and store in DATA array by record number.
"RTN","DGROUT",88,0)
 . S DATA(TFLDR)=$G(^DGCN(391.91,TFLDR,0))
"RTN","DGROUT",89,0)
 . ;Extract DATE from 3rd piece of record
"RTN","DGROUT",90,0)
 . S DATE=$P(DATA(TFLDR),"^",3)
"RTN","DGROUT",91,0)
 . ;Quit if DATE is null
"RTN","DGROUT",92,0)
 . Q:DATE=""
"RTN","DGROUT",93,0)
 . ;Get Station Number using the facility pointer to the Institution (#4) file
"RTN","DGROUT",94,0)
 . S FAC=$P(DATA(TFLDR),"^",2)
"RTN","DGROUT",95,0)
 . S FAC=$$STA^XUAF4(FAC) Q:FAC=""
"RTN","DGROUT",96,0)
 . ;Build RDATA array using the DATE and TFLDR
"RTN","DGROUT",97,0)
 . S RDATA(DATE,TFLDR)=FAC
"RTN","DGROUT",98,0)
 ;Exit if the RDATA array does not exist.
"RTN","DGROUT",99,0)
 G:'$D(RDATA) EXITTFL
"RTN","DGROUT",100,0)
 ;
"RTN","DGROUT",101,0)
 ;Reverse order through the RDATA array (start with the latest date).
"RTN","DGROUT",102,0)
 ;Extract the treating facility from the RDATA array.
"RTN","DGROUT",103,0)
 ;Check the facility against local facility number:  if they are
"RTN","DGROUT",104,0)
 ;the same, then get the next facility.  (Should never happen)
"RTN","DGROUT",105,0)
 S DATE="" F  S DATE=$O(RDATA(DATE),-1) Q:DATE=""  D  Q:QFL=1
"RTN","DGROUT",106,0)
 . S TFL="" F  S TFL=$O(RDATA(DATE,TFL)) Q:TFL=""  D  Q:QFL=1
"RTN","DGROUT",107,0)
 . . S FAC=RDATA(DATE,TFL) I FAC=$G(DIV(0)) Q
"RTN","DGROUT",108,0)
 . . ;If the facility is not the current facility, then set RSLT to the facility and quit
"RTN","DGROUT",109,0)
 . . S RSLT=FAC,QFL=1  ;set QFL to 1 to stop going through the RDATA array
"RTN","DGROUT",110,0)
EXITTFL Q RSLT  ;Return the LST to the calling routine
"RTN","DGROUT2")
0^24^B2964547
"RTN","DGROUT2",1,0)
DGROUT2 ;DJH/AMA - ROM UTILITIES CONTINUED ; 28 Apr 2004  12:28 PM
"RTN","DGROUT2",2,0)
 ;;5.3;Registration;**533,572**;Aug 13, 1993
"RTN","DGROUT2",3,0)
 ;
"RTN","DGROUT2",4,0)
 ; This routine contains generic calls for use throughout DGRO*.
"RTN","DGROUT2",5,0)
 ;
"RTN","DGROUT2",6,0)
 QUIT   ;no direct entry
"RTN","DGROUT2",7,0)
 ;
"RTN","DGROUT2",8,0)
GETPAT(DGDFN,DGPAT) ;retrieve patient identifying information
"RTN","DGROUT2",9,0)
 ;Used to obtain identifying information for a patient in the
"RTN","DGROUT2",10,0)
 ;PATIENT (#2) file and place it in an array format.
"RTN","DGROUT2",11,0)
 ;  Called from BLDQRY^DGROHLQ
"RTN","DGROUT2",12,0)
 ;
"RTN","DGROUT2",13,0)
 ; NOTE: Direct global reference of patient's zero node in the
"RTN","DGROUT2",14,0)
 ;       PATIENT (#2) file is supported by DBIA #10035
"RTN","DGROUT2",15,0)
 ;
"RTN","DGROUT2",16,0)
 ;  Input:
"RTN","DGROUT2",17,0)
 ;    DGDFN - (required) ien of patient in PATIENT (#2) file
"RTN","DGROUT2",18,0)
 ;
"RTN","DGROUT2",19,0)
 ;  Output:
"RTN","DGROUT2",20,0)
 ;    Function Value - returns 1 on success, 0 on failure
"RTN","DGROUT2",21,0)
 ;    DGPAT - output array containing patient identifying information
"RTN","DGROUT2",22,0)
 ;            on success, pass by reference.  Array subscripts are:
"RTN","DGROUT2",23,0)
 ;              "DFN"  - ien PATIENT (#2) file
"RTN","DGROUT2",24,0)
 ;              "NAME" - patient name
"RTN","DGROUT2",25,0)
 ;              "SSN"  - patient Social Security Number
"RTN","DGROUT2",26,0)
 ;              "DOB"  - patient date of birth (FM format)
"RTN","DGROUT2",27,0)
 ;              "SEX"  - patient sex
"RTN","DGROUT2",28,0)
 ;
"RTN","DGROUT2",29,0)
 N DGNODE,RESULT
"RTN","DGROUT2",30,0)
 ;
"RTN","DGROUT2",31,0)
 S RESULT=0
"RTN","DGROUT2",32,0)
 I $G(DGDFN)>0,$D(^DPT(DGDFN,0)) D
"RTN","DGROUT2",33,0)
 . S DGPAT("DFN")=DGDFN
"RTN","DGROUT2",34,0)
 . S DGPAT("NAME")=$$GET1^DIQ(2,DGDFN,.01)
"RTN","DGROUT2",35,0)
 . S DGPAT("SEX")=$$GET1^DIQ(2,DGDFN,.02)
"RTN","DGROUT2",36,0)
 . S DGPAT("DOB")=$$GET1^DIQ(2,DGDFN,.03,"I") ;* DG*5.3*572
"RTN","DGROUT2",37,0)
 . S DGPAT("SSN")=$$GET1^DIQ(2,DGDFN,.09)
"RTN","DGROUT2",38,0)
 . S RESULT=1  ;success
"RTN","DGROUT2",39,0)
 ;
"RTN","DGROUT2",40,0)
 Q RESULT
"RTN","DGROUT2",41,0)
 ;
"RTN","DGROUT2",42,0)
GETDFN(DGICN,DGDOB,DGSSN) ;Convert ICN to DFN after verifying DOB and SSN
"RTN","DGROUT2",43,0)
 ;Called from RCVQRY^DGROHLR
"RTN","DGROUT2",44,0)
 ;  Supported DBIA #2701:  The supported DBIA is used to retrieve the
"RTN","DGROUT2",45,0)
 ;                         pointer (DFN) to the PATIENT (#2) file for a
"RTN","DGROUT2",46,0)
 ;                         given ICN.
"RTN","DGROUT2",47,0)
 ;
"RTN","DGROUT2",48,0)
 ;  Input:
"RTN","DGROUT2",49,0)
 ;    DGICN - Integrated Control Number with or without checksum
"RTN","DGROUT2",50,0)
 ;    DGDOB - Date of Birth in FileMan format
"RTN","DGROUT2",51,0)
 ;    DGSSN - Social Security Number with no delimiters
"RTN","DGROUT2",52,0)
 ;
"RTN","DGROUT2",53,0)
 ;  Output:
"RTN","DGROUT2",54,0)
 ;   Function Value - DFN on success, 0 on failure
"RTN","DGROUT2",55,0)
 ;
"RTN","DGROUT2",56,0)
 N DGDFN   ;pointer to patient
"RTN","DGROUT2",57,0)
 N DGDPT   ;patient data array
"RTN","DGROUT2",58,0)
 N DGRSLT  ;function value
"RTN","DGROUT2",59,0)
 ;
"RTN","DGROUT2",60,0)
 S DGRSLT=0
"RTN","DGROUT2",61,0)
 S DGICN=+$G(DGICN)
"RTN","DGROUT2",62,0)
 S DGDOB=+$G(DGDOB)
"RTN","DGROUT2",63,0)
 S DGSSN=+$G(DGSSN)
"RTN","DGROUT2",64,0)
 I DGICN D  ;drops out of block on first failure   ;DG*5.3*572 removed SSN & DOB
"RTN","DGROUT2",65,0)
 . S DGDFN=+$$GETDFN^MPIF001(DGICN)
"RTN","DGROUT2",66,0)
 . Q:(DGDFN'>0)
"RTN","DGROUT2",67,0)
 . S DGRSLT=DGDFN
"RTN","DGROUT2",68,0)
 Q DGRSLT
"SEC","^DIC",391.23,391.23,0,"AUDIT")
@
"SEC","^DIC",391.23,391.23,0,"DD")
@
"SEC","^DIC",391.23,391.23,0,"DEL")
@
"SEC","^DIC",391.23,391.23,0,"LAYGO")
@
"SEC","^DIC",391.23,391.23,0,"RD")
@
"SEC","^DIC",391.23,391.23,0,"WR")
@
"VER")
8.0^22.0
"^DD",391.23,391.23,0)
FIELD^^5^6
"^DD",391.23,391.23,0,"DDA")
N
"^DD",391.23,391.23,0,"DT")
3040319
"^DD",391.23,391.23,0,"IX","B",391.23,.01)

"^DD",391.23,391.23,0,"IX","D",391.23,5)

"^DD",391.23,391.23,0,"NM","DG REGISTER ONCE FIELD DEFINITION")

"^DD",391.23,391.23,0,"VRPK")
DG
"^DD",391.23,391.23,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",391.23,391.23,.01,.1)
Description of Field
"^DD",391.23,391.23,.01,1,0)
^.1
"^DD",391.23,391.23,.01,1,1,0)
391.23^B
"^DD",391.23,391.23,.01,1,1,1)
S ^DGRO(391.23,"B",$E(X,1,30),DA)=""
"^DD",391.23,391.23,.01,1,1,2)
K ^DGRO(391.23,"B",$E(X,1,30),DA)
"^DD",391.23,391.23,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",391.23,391.23,.01,"DT")
3040107
"^DD",391.23,391.23,1,0)
FILE NUMBER^RNJ13,5^^0;2^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."6.N) X
"^DD",391.23,391.23,1,.1)
File Number of File
"^DD",391.23,391.23,1,3)
Type a number between 0 and 9999999, 5 Decimal Digits
"^DD",391.23,391.23,1,"DT")
3040413
"^DD",391.23,391.23,2,0)
FIELD NUMBER^RNJ15,6^^0;3^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."7.N) X
"^DD",391.23,391.23,2,3)
Type a number between 0 and 99999999, 6 Decimal Digits
"^DD",391.23,391.23,2,"DT")
3040413
"^DD",391.23,391.23,3,0)
FIELD DESCRIPTION^F^^0;4^K:$L(X)>30!($L(X)<3) X
"^DD",391.23,391.23,3,3)
Answer must be 3-30 characters in length
"^DD",391.23,391.23,3,"DT")
3030827
"^DD",391.23,391.23,4,0)
Disable Field^S^0:No;1:Yes;^0;5^Q
"^DD",391.23,391.23,4,3)
Enter Yes to disable the entry of this field from the LST.
"^DD",391.23,391.23,4,"DT")
3030718
"^DD",391.23,391.23,5,0)
ORDER INDEX^RF^^0;6^K:$L(X)>2!($L(X)<1)!'(X?1A.N) X
"^DD",391.23,391.23,5,1,0)
^.1^^-1
"^DD",391.23,391.23,5,1,1,0)
391.23^D
"^DD",391.23,391.23,5,1,1,1)
S ^DGRO(391.23,"D",$E(X,1,30),DA)=""
"^DD",391.23,391.23,5,1,1,2)
K ^DGRO(391.23,"D",$E(X,1,30),DA)
"^DD",391.23,391.23,5,1,1,3)
Do not delete.
"^DD",391.23,391.23,5,1,1,"%D",0)
^.101^4^4^3040413^^^^
"^DD",391.23,391.23,5,1,1,"%D",1,0)
This cross reference is required to define the arrays passed between
"^DD",391.23,391.23,5,1,1,"%D",2,0)
FileMan calls in Register Once Messaging software.  The ORDER INDEX field
"^DD",391.23,391.23,5,1,1,"%D",3,0)
defines the order that groups of fields are loaded into the data base at
"^DD",391.23,391.23,5,1,1,"%D",4,0)
the Querying Site.
"^DD",391.23,391.23,5,1,1,"DT")
3040322
"^DD",391.23,391.23,5,3)
Enter one Alpha character (mandatory) followed by 1 Numeric (optional).
"^DD",391.23,391.23,5,21,0)
^.001^5^5^3040413^^^^
"^DD",391.23,391.23,5,21,1,0)
This field indexes the order that data must be loaded into the respective
"^DD",391.23,391.23,5,21,2,0)
fields at the Querying Site.
"^DD",391.23,391.23,5,21,3,0)
 
"^DD",391.23,391.23,5,21,4,0)
Is of the format 1 Alpha character followed by an optional Numeric
"^DD",391.23,391.23,5,21,5,0)
character.
"^DD",391.23,391.23,5,23,0)
^.001^41^41^3040413^^^^
"^DD",391.23,391.23,5,23,1,0)
Referenced by Register Once Messaging routine which loads data returned
"^DD",391.23,391.23,5,23,2,0)
from the Last Site Treated into the Querying Site.
"^DD",391.23,391.23,5,23,3,0)
 
"^DD",391.23,391.23,5,23,4,0)
Is of the format 1 Alpha character followed by an optional Numeric
"^DD",391.23,391.23,5,23,5,0)
character.
"^DD",391.23,391.23,5,23,6,0)
 
"^DD",391.23,391.23,5,23,7,0)
With exception of the Patient file, Indices used must contain a
"^DD",391.23,391.23,5,23,8,0)
single file, only.  The Patient file can be referenced across
"^DD",391.23,391.23,5,23,9,0)
multiple indices to set order of entry for fields in that file.
"^DD",391.23,391.23,5,23,10,0)
However, Register Once Messaging will not support other files
"^DD",391.23,391.23,5,23,11,0)
using multiple indices.
"^DD",391.23,391.23,5,23,12,0)
 
"^DD",391.23,391.23,5,23,13,0)
The ORDER INDEX field must contain a letter and optionally may be
"^DD",391.23,391.23,5,23,14,0)
followed by a number.  The optional number is not used with initial
"^DD",391.23,391.23,5,23,15,0)
release but is allowed so that further levels of order may be added
"^DD",391.23,391.23,5,23,16,0)
within a specific "letter group" for the Patient file.
"^DD",391.23,391.23,5,23,17,0)
 
"^DD",391.23,391.23,5,23,18,0)
The DG REGISTER ONCE FIELD DEFINITION file is released with ORDER
"^DD",391.23,391.23,5,23,19,0)
INDEX defined for each field.  Groups of fields in the Patient file
"^DD",391.23,391.23,5,23,20,0)
has been defined with upper case letters.  Fields in other files
"^DD",391.23,391.23,5,23,21,0)
have been defined with lower case letters.  This is done to support
"^DD",391.23,391.23,5,23,22,0)
greater expansion for entries in the Patient file.  Use of upper case
"^DD",391.23,391.23,5,23,23,0)
letters for fields in files other than the Patient file should be
"^DD",391.23,391.23,5,23,24,0)
avoided unless those fields are depended upon by Patient file fields.
"^DD",391.23,391.23,5,23,25,0)
 
"^DD",391.23,391.23,5,23,26,0)
Reasons for the Constraints on defining ORDER INDEX values:
"^DD",391.23,391.23,5,23,27,0)
  Register Once Messaging is designed so that this field's value
"^DD",391.23,391.23,5,23,28,0)
  assumes a record EDIT for the PATIENT file (#2), ONLY.  Fields
"^DD",391.23,391.23,5,23,29,0)
  in other files and PATIENT file multiples will be added as new
"^DD",391.23,391.23,5,23,30,0)
  records.  Examples of other files include the DG SECURITY LOG
"^DD",391.23,391.23,5,23,31,0)
  file (#38.1).  Examples of PATIENT file multiples include the
"^DD",391.23,391.23,5,23,32,0)
  Patient file ALIAS multiple (2.01).
"^DD",391.23,391.23,5,23,33,0)
 
"^DD",391.23,391.23,5,23,34,0)
  The ORDER INDEX will NOT support adding data to existing records
"^DD",391.23,391.23,5,23,35,0)
  in any file or multiple EXCEPT the PATIENT file.  This means that
"^DD",391.23,391.23,5,23,36,0)
  only fields in the Patient file can have an ORDER INDEX different
"^DD",391.23,391.23,5,23,37,0)
  from another field in the Patient file.
"^DD",391.23,391.23,5,23,38,0)
 
"^DD",391.23,391.23,5,23,39,0)
Ordering modifications for the fields defined in this file MUST be designed
"^DD",391.23,391.23,5,23,40,0)
according to this ordering specification or a technical redesign of ROM
"^DD",391.23,391.23,5,23,41,0)
will be necessary.
"^DD",391.23,391.23,5,"DT")
3040413
"^DIC",391.23,391.23,0)
DG REGISTER ONCE FIELD DEFINITION^391.23
"^DIC",391.23,391.23,0,"GL")
^DGRO(391.23,
"^DIC",391.23,391.23,"%",0)
^1.005^^0
"^DIC",391.23,391.23,"%D",0)
^1.001^6^6^3040413^^^^
"^DIC",391.23,391.23,"%D",1,0)
This file is used to define the fields that are collected at a Last Site
"^DIC",391.23,391.23,"%D",2,0)
Treated and loaded into a Querying Site via Register Once Messaging.
"^DIC",391.23,391.23,"%D",3,0)
 
"^DIC",391.23,391.23,"%D",4,0)
NOTICE: This file is part of an implementation of a Nationally 
"^DIC",391.23,391.23,"%D",5,0)
        Controlled Procedure.  Local modifications to this file 
"^DIC",391.23,391.23,"%D",6,0)
        are prohibited per VHA Directive 10-93-142.  
"^DIC",391.23,"B","DG REGISTER ONCE FIELD DEFINITION",391.23)

**END**
**END**
