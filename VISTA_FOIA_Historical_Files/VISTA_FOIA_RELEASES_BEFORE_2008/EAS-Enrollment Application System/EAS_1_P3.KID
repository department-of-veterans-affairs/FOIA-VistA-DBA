KIDS Distribution saved on Apr 17, 2002@08:57:49
EAS*1.0*3
**KIDS**:EAS*1.0*3^SD*5.3*250^DG*5.3*411^PX*1.0*113^

**INSTALL NAME**
EAS*1.0*3
"BLD",2254,0)
EAS*1.0*3^ENROLLMENT APPLICATION SYSTEM^0^3020417^y
"BLD",2254,1,0)
^^11^11^3010905^
"BLD",2254,1,1,0)
This patch is in response to Item #22 in the Rossio Report.  In the area
"BLD",2254,1,2,0)
of Means Test (MT) Deficiencies, Item #22 required that the Veterans
"BLD",2254,1,3,0)
Health Administration (VHA) identify best practices for means testing and
"BLD",2254,1,4,0)
acquiring veterans' signatures at the local level and explore the
"BLD",2254,1,5,0)
promulgation of these best practices throughout the system.  In response
"BLD",2254,1,6,0)
to the Report, the Enrollment Task Force requested implementation on a
"BLD",2254,1,7,0)
national basis of local sites' initiative s developed to manage scheduling
"BLD",2254,1,8,0)
activities for veterans who require the completion of a means test.  This
"BLD",2254,1,9,0)
patch will provide a national patch release to the Enrollment Application
"BLD",2254,1,10,0)
Systems (EAS) software of locally implemented software that has been
"BLD",2254,1,11,0)
converted from Class III to Class I.
"BLD",2254,4,0)
^9.64PA^713.3^4
"BLD",2254,4,713,0)
713
"BLD",2254,4,713,222)
y^y^f^^n^^y^a^y
"BLD",2254,4,713.1,0)
713.1
"BLD",2254,4,713.1,222)
y^y^f^^^^n
"BLD",2254,4,713.2,0)
713.2
"BLD",2254,4,713.2,222)
y^y^f^^^^n
"BLD",2254,4,713.3,0)
713.3
"BLD",2254,4,713.3,222)
y^y^f^^n^^y^m^y
"BLD",2254,4,"B",713,713)

"BLD",2254,4,"B",713.1,713.1)

"BLD",2254,4,"B",713.2,713.2)

"BLD",2254,4,"B",713.3,713.3)

"BLD",2254,"KRN",0)
^9.67PA^19^17
"BLD",2254,"KRN",.4,0)
.4
"BLD",2254,"KRN",.401,0)
.401
"BLD",2254,"KRN",.402,0)
.402
"BLD",2254,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",2254,"KRN",.403,0)
.403
"BLD",2254,"KRN",.5,0)
.5
"BLD",2254,"KRN",.84,0)
.84
"BLD",2254,"KRN",3.6,0)
3.6
"BLD",2254,"KRN",3.6,"NM",0)
^9.68A^1^1
"BLD",2254,"KRN",3.6,"NM",1,0)
EAS MTCOMPLETION^^0
"BLD",2254,"KRN",3.6,"NM","B","EAS MTCOMPLETION",1)

"BLD",2254,"KRN",3.8,0)
3.8
"BLD",2254,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",2254,"KRN",3.8,"NM",1,0)
EAS MTLETTERS^^0
"BLD",2254,"KRN",3.8,"NM","B","EAS MTLETTERS",1)

"BLD",2254,"KRN",9.2,0)
9.2
"BLD",2254,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",2254,"KRN",9.8,0)
9.8
"BLD",2254,"KRN",9.8,"NM",0)
^9.68A^49^13
"BLD",2254,"KRN",9.8,"NM",2,0)
EASMTL1^^0^B28569109
"BLD",2254,"KRN",9.8,"NM",5,0)
EASMTL2^^0^B13839350
"BLD",2254,"KRN",9.8,"NM",6,0)
EASMTRPT^^0^B50625072
"BLD",2254,"KRN",9.8,"NM",7,0)
EASMTUTL^^0^B37921663
"BLD",2254,"KRN",9.8,"NM",10,0)
EASMTL6^^0^B43402900
"BLD",2254,"KRN",9.8,"NM",11,0)
EASMTL8^^0^B21560340
"BLD",2254,"KRN",9.8,"NM",40,0)
EASMTL10^^0^B29398415
"BLD",2254,"KRN",9.8,"NM",41,0)
EASMTL6A^^0^B18742449
"BLD",2254,"KRN",9.8,"NM",45,0)
EASMTCHK^^0^B20492908
"BLD",2254,"KRN",9.8,"NM",46,0)
EASMTRP1^^0^B23594979
"BLD",2254,"KRN",9.8,"NM",47,0)
EASMTPAR^^0^B3482325
"BLD",2254,"KRN",9.8,"NM",48,0)
EASMTRP2^^0^B4866817
"BLD",2254,"KRN",9.8,"NM",49,0)
EASMTL6B^^0^B5960140
"BLD",2254,"KRN",9.8,"NM","B","EASMTCHK",45)

"BLD",2254,"KRN",9.8,"NM","B","EASMTL1",2)

"BLD",2254,"KRN",9.8,"NM","B","EASMTL10",40)

"BLD",2254,"KRN",9.8,"NM","B","EASMTL2",5)

"BLD",2254,"KRN",9.8,"NM","B","EASMTL6",10)

"BLD",2254,"KRN",9.8,"NM","B","EASMTL6A",41)

"BLD",2254,"KRN",9.8,"NM","B","EASMTL6B",49)

"BLD",2254,"KRN",9.8,"NM","B","EASMTL8",11)

"BLD",2254,"KRN",9.8,"NM","B","EASMTPAR",47)

"BLD",2254,"KRN",9.8,"NM","B","EASMTRP1",46)

"BLD",2254,"KRN",9.8,"NM","B","EASMTRP2",48)

"BLD",2254,"KRN",9.8,"NM","B","EASMTRPT",6)

"BLD",2254,"KRN",9.8,"NM","B","EASMTUTL",7)

"BLD",2254,"KRN",19,0)
19
"BLD",2254,"KRN",19,"NM",0)
^9.68A^31^24
"BLD",2254,"KRN",19,"NM",3,0)
EAS MT 60 DAY LETTER PRINT^^0
"BLD",2254,"KRN",19,"NM",4,0)
EAS MT AUTO LETTERS MENU^^0
"BLD",2254,"KRN",19,"NM",6,0)
EAS MT LETTERS BG PRINT^^0
"BLD",2254,"KRN",19,"NM",7,0)
EAS MT LETTERS BG SEARCH^^0
"BLD",2254,"KRN",19,"NM",8,0)
EAS MT LETTERS EDIT^^0
"BLD",2254,"KRN",19,"NM",9,0)
EAS MT LETTERS SEARCH^^0
"BLD",2254,"KRN",19,"NM",10,0)
EAS MT PARAMETERS^^0
"BLD",2254,"KRN",19,"NM",11,0)
EAS MT PENDING LETTERS^^0
"BLD",2254,"KRN",19,"NM",12,0)
EAS MT PRINT MENU^^0
"BLD",2254,"KRN",19,"NM",13,0)
EAS MT PROHIBIT EDIT^^0
"BLD",2254,"KRN",19,"NM",14,0)
EAS MT REPORT MENU^^0
"BLD",2254,"KRN",19,"NM",15,0)
EAS MT REPRINT LETTERS^^0
"BLD",2254,"KRN",19,"NM",16,0)
EAS MT REPRINT SINGLE LETTER^^0
"BLD",2254,"KRN",19,"NM",17,0)
EAS MT RETURNED^^0
"BLD",2254,"KRN",19,"NM",18,0)
EAS MT SETUP MENU^^0
"BLD",2254,"KRN",19,"NM",20,0)
EAS MT SUMMARY REPORT^^0
"BLD",2254,"KRN",19,"NM",21,0)
EAS MT UNRETURNED LETTERS^^0
"BLD",2254,"KRN",19,"NM",24,0)
EAS MT 0 DAY LETTER PRINT^^0
"BLD",2254,"KRN",19,"NM",26,0)
EAS MT EXPIRATION BG PRINT^^0
"BLD",2254,"KRN",19,"NM",27,0)
EAS MT EXPIRATIONS^^0
"BLD",2254,"KRN",19,"NM",28,0)
EAS MT STATISTICS SUMMARY^^0
"BLD",2254,"KRN",19,"NM",29,0)
EAS MT CLEAR IN USE FLAG^^0
"BLD",2254,"KRN",19,"NM",30,0)
EAS MT 30 DAY LETTER PRINT^^0
"BLD",2254,"KRN",19,"NM",31,0)
EAS MT REPORT OF CONTACT^^0
"BLD",2254,"KRN",19,"NM","B","EAS MT 0 DAY LETTER PRINT",24)

"BLD",2254,"KRN",19,"NM","B","EAS MT 30 DAY LETTER PRINT",30)

"BLD",2254,"KRN",19,"NM","B","EAS MT 60 DAY LETTER PRINT",3)

"BLD",2254,"KRN",19,"NM","B","EAS MT AUTO LETTERS MENU",4)

"BLD",2254,"KRN",19,"NM","B","EAS MT CLEAR IN USE FLAG",29)

"BLD",2254,"KRN",19,"NM","B","EAS MT EXPIRATION BG PRINT",26)

"BLD",2254,"KRN",19,"NM","B","EAS MT EXPIRATIONS",27)

"BLD",2254,"KRN",19,"NM","B","EAS MT LETTERS BG PRINT",6)

"BLD",2254,"KRN",19,"NM","B","EAS MT LETTERS BG SEARCH",7)

"BLD",2254,"KRN",19,"NM","B","EAS MT LETTERS EDIT",8)

"BLD",2254,"KRN",19,"NM","B","EAS MT LETTERS SEARCH",9)

"BLD",2254,"KRN",19,"NM","B","EAS MT PARAMETERS",10)

"BLD",2254,"KRN",19,"NM","B","EAS MT PENDING LETTERS",11)

"BLD",2254,"KRN",19,"NM","B","EAS MT PRINT MENU",12)

"BLD",2254,"KRN",19,"NM","B","EAS MT PROHIBIT EDIT",13)

"BLD",2254,"KRN",19,"NM","B","EAS MT REPORT MENU",14)

"BLD",2254,"KRN",19,"NM","B","EAS MT REPORT OF CONTACT",31)

"BLD",2254,"KRN",19,"NM","B","EAS MT REPRINT LETTERS",15)

"BLD",2254,"KRN",19,"NM","B","EAS MT REPRINT SINGLE LETTER",16)

"BLD",2254,"KRN",19,"NM","B","EAS MT RETURNED",17)

"BLD",2254,"KRN",19,"NM","B","EAS MT SETUP MENU",18)

"BLD",2254,"KRN",19,"NM","B","EAS MT STATISTICS SUMMARY",28)

"BLD",2254,"KRN",19,"NM","B","EAS MT SUMMARY REPORT",20)

"BLD",2254,"KRN",19,"NM","B","EAS MT UNRETURNED LETTERS",21)

"BLD",2254,"KRN",19.1,0)
19.1
"BLD",2254,"KRN",19.1,"NM",0)
^9.68A^2^2
"BLD",2254,"KRN",19.1,"NM",1,0)
EAS MTOVERRIDE^^0
"BLD",2254,"KRN",19.1,"NM",2,0)
EAS MTSUPV^^0
"BLD",2254,"KRN",19.1,"NM","B","EAS MTOVERRIDE",1)

"BLD",2254,"KRN",19.1,"NM","B","EAS MTSUPV",2)

"BLD",2254,"KRN",101,0)
101
"BLD",2254,"KRN",101,"NM",0)
^9.68A^^0
"BLD",2254,"KRN",409.61,0)
409.61
"BLD",2254,"KRN",771,0)
771
"BLD",2254,"KRN",870,0)
870
"BLD",2254,"KRN",8994,0)
8994
"BLD",2254,"KRN","B",.4,.4)

"BLD",2254,"KRN","B",.401,.401)

"BLD",2254,"KRN","B",.402,.402)

"BLD",2254,"KRN","B",.403,.403)

"BLD",2254,"KRN","B",.5,.5)

"BLD",2254,"KRN","B",.84,.84)

"BLD",2254,"KRN","B",3.6,3.6)

"BLD",2254,"KRN","B",3.8,3.8)

"BLD",2254,"KRN","B",9.2,9.2)

"BLD",2254,"KRN","B",9.8,9.8)

"BLD",2254,"KRN","B",19,19)

"BLD",2254,"KRN","B",19.1,19.1)

"BLD",2254,"KRN","B",101,101)

"BLD",2254,"KRN","B",409.61,409.61)

"BLD",2254,"KRN","B",771,771)

"BLD",2254,"KRN","B",870,870)

"BLD",2254,"KRN","B",8994,8994)

"BLD",2254,"PRET")

"BLD",2254,"QUES",0)
^9.62^^
"BLD",2254,"REQB",0)
^9.611^1^1
"BLD",2254,"REQB",1,0)
XU*8.0*134^1
"BLD",2254,"REQB","B","XU*8.0*134",1)

"DATA",713,1,0)
1^^^^1170^^0^1^^0
"DATA",713,1,2,0)
^713.025PA^4^4
"DATA",713,1,2,1,0)
500^1184
"DATA",713,1,2,2,0)
515.6^1183
"DATA",713,1,2,3,0)
528^1185
"DATA",713,1,2,4,0)
532^1182
"DATA",713,1,"L")
0
"DATA",713.3,1,0)
60-DAY LETTER^1
"DATA",713.3,1,1,0)
^713.33^23^23^3020327^^
"DATA",713.3,1,1,1,0)
Each year the VA requires nonservice-connected veterans and 0% service-
"DATA",713.3,1,1,2,0)
connected veterans to complete a financial assessment (means test).  Our
"DATA",713.3,1,1,3,0)
records show that your annual means test is due |ANNVDT|.
"DATA",713.3,1,1,4,0)
 
"DATA",713.3,1,1,5,0)
What Does This Mean To You?
"DATA",713.3,1,1,6,0)
  o The means test you completed last year exempted you from copayments
"DATA",713.3,1,1,7,0)
    for health care provided for your nonservice-connected conditions.
"DATA",713.3,1,1,8,0)
  o Failure to complete the means test by the anniversary date will
"DATA",713.3,1,1,9,0)
    prevent us from being able to schedule you for any future care for
"DATA",713.3,1,1,10,0)
    your nonservice-connected conditions.
"DATA",713.3,1,1,11,0)
 
"DATA",713.3,1,1,12,0)
What Do You Need To Do?
"DATA",713.3,1,1,13,0)
  o Complete and sign the Financial Assessment portion of the enclosed VA
"DATA",713.3,1,1,14,0)
    Form 10-10EZ, Application for Health Benefits, reporting income and
"DATA",713.3,1,1,15,0)
    assets for the previous calendar year.
"DATA",713.3,1,1,16,0)
  o Return the completed and signed form in the enclosed envelope before
"DATA",713.3,1,1,17,0)
    your means test anniversary date.
"DATA",713.3,1,1,18,0)
  o When you report to your next health care appointment, bring your
"DATA",713.3,1,1,19,0)
    health insurance card so we may update your health insurance
"DATA",713.3,1,1,20,0)
    information.
"DATA",713.3,1,1,21,0)
  o Notify us if you feel you received this letter in error. 
"DATA",713.3,1,1,22,0)
 
"DATA",713.3,1,1,23,0)
What If You Have Questions? 
"DATA",713.3,1,2,0)
^713.34P^^0
"DATA",713.3,2,0)
30-DAY LETTER^2
"DATA",713.3,2,1,0)
^713.33^26^26^3020327^^^
"DATA",713.3,2,1,1,0)
Each year the VA requires nonservice-connected veterans and 0% service-
"DATA",713.3,2,1,2,0)
connected veterans to complete a financial assessment (means test).  Our
"DATA",713.3,2,1,3,0)
records show that your annual means test is due |ANNVDT|.
"DATA",713.3,2,1,4,0)
 
"DATA",713.3,2,1,5,0)
As of this date we have not received the updated financial income
"DATA",713.3,2,1,6,0)
information we requested in a previous letter.
"DATA",713.3,2,1,7,0)
 
"DATA",713.3,2,1,8,0)
What Does This Mean To You?
"DATA",713.3,2,1,9,0)
  o The means test you completed last year exempted you from copayments
"DATA",713.3,2,1,10,0)
    for health care provided for your nonservice-connected conditions.
"DATA",713.3,2,1,11,0)
  o Failure to complete the means test by the anniversary date will
"DATA",713.3,2,1,12,0)
    prevent us from being able to schedule you for any future care for
"DATA",713.3,2,1,13,0)
    your nonservice-connected conditions.
"DATA",713.3,2,1,14,0)
 
"DATA",713.3,2,1,15,0)
What Do You Need To Do?
"DATA",713.3,2,1,16,0)
  o Complete and sign the enclosed Financial Assessment portion of the
"DATA",713.3,2,1,17,0)
    enclosed VA Form 10-10EZ, Application for Health Benefits, reporting
"DATA",713.3,2,1,18,0)
    income and assets for the previous calendar year.
"DATA",713.3,2,1,19,0)
  o Return the completed and signed form in the enclosed envelope before
"DATA",713.3,2,1,20,0)
    your means test anniversary date. 
"DATA",713.3,2,1,21,0)
  o When you report to your next health care appointment, bring your
"DATA",713.3,2,1,22,0)
    health insurance card so we may update your health insurance
"DATA",713.3,2,1,23,0)
    information. 
"DATA",713.3,2,1,24,0)
  o Notify us if you feel you received this letter in error.
"DATA",713.3,2,1,25,0)
 
"DATA",713.3,2,1,26,0)
What If You Have Questions? 
"DATA",713.3,2,2,0)
^713.34P^^0
"DATA",713.3,4,0)
0-DAY LETTER^4
"DATA",713.3,4,1,0)
^713.33^25^25^3020327^^^^
"DATA",713.3,4,1,1,0)
According to our records you have not responded to our previous requests
"DATA",713.3,4,1,2,0)
to complete the financial section of VA Form 10-10EZ, Application for
"DATA",713.3,4,1,3,0)
Health Benefits.  This is to inform you that your current financial
"DATA",713.3,4,1,4,0)
assessment (means test) has expired.
"DATA",713.3,4,1,5,0)
 
"DATA",713.3,4,1,6,0)
How Does This Affect Your Eligibility for Cost Free Care?
"DATA",713.3,4,1,7,0)
  o We do not have a current means test for you on file as is required to
"DATA",713.3,4,1,8,0)
    determine your eligibility for cost-free care.
"DATA",713.3,4,1,9,0)
  o We are unable to schedule you for future care of your nonservice-
"DATA",713.3,4,1,10,0)
    connected conditions.
"DATA",713.3,4,1,11,0)
 
"DATA",713.3,4,1,12,0)
How Does This Affect Your Enrollment?
"DATA",713.3,4,1,13,0)
  o We are unable to determine your priority for enrollment in the VA
"DATA",713.3,4,1,14,0)
    health care system.
"DATA",713.3,4,1,15,0)
 
"DATA",713.3,4,1,16,0)
What Do You Need To Do?
"DATA",713.3,4,1,17,0)
  o Complete, sign and return a new VA Form 10-10EZ, including the
"DATA",713.3,4,1,18,0)
    financial section.
"DATA",713.3,4,1,19,0)
  o Read the enclosed VA Form 4107, Notice of Procedural and Appellate
"DATA",713.3,4,1,20,0)
    Rights. If you disagree with our decision, you or your representative
"DATA",713.3,4,1,21,0)
    may complete a Notice of Disagreement and return it to the Enrollment
"DATA",713.3,4,1,22,0)
    Coordinator or Health Benefits Advisor at your local VA health care
"DATA",713.3,4,1,23,0)
    facility.
"DATA",713.3,4,1,24,0)
 
"DATA",713.3,4,1,25,0)
What If You Have Questions? 
"DATA",713.3,4,2,0)
^713.34P^^0
"DATA",713.3,5,0)
REPORT OF CONTACT^3
"DATA",713.3,5,2,0)
^713.34P^^0
"FIA",713)
EAS MT PARAMETERS
"FIA",713,0)
^EAS(713,
"FIA",713,0,0)
713
"FIA",713,0,1)
y^y^f^^n^^y^a^y
"FIA",713,0,10)

"FIA",713,0,11)

"FIA",713,0,"RLRO")

"FIA",713,0,"VR")
1.0^EAS
"FIA",713,713)
0
"FIA",713,713.025)
0
"FIA",713.1)
EAS MT PATIENT STATUS
"FIA",713.1,0)
^EAS(713.1,
"FIA",713.1,0,0)
713.1P
"FIA",713.1,0,1)
y^y^f^^^^n
"FIA",713.1,0,10)

"FIA",713.1,0,11)

"FIA",713.1,0,"RLRO")

"FIA",713.1,0,"VR")
1.0^EAS
"FIA",713.1,713.1)
0
"FIA",713.2)
EAS MT LETTER STATUS
"FIA",713.2,0)
^EAS(713.2,
"FIA",713.2,0,0)
713.2DIA
"FIA",713.2,0,1)
y^y^f^^^^n
"FIA",713.2,0,10)

"FIA",713.2,0,11)

"FIA",713.2,0,"RLRO")

"FIA",713.2,0,"VR")
1.0^EAS
"FIA",713.2,713.2)
0
"FIA",713.2,713.27)
0
"FIA",713.3)
EAS MT LETTERS
"FIA",713.3,0)
^EAS(713.3,
"FIA",713.3,0,0)
713.3
"FIA",713.3,0,1)
y^y^f^^n^^y^m^y
"FIA",713.3,0,10)

"FIA",713.3,0,11)

"FIA",713.3,0,"RLRO")

"FIA",713.3,0,"VR")
1.0^EAS
"FIA",713.3,713.3)
0
"FIA",713.3,713.33)
0
"FIA",713.3,713.34)
0
"FIA",713.3,713.341)
0
"IX",713.1,713.1,"APDFN",0)
713.1^APDFN^PROHIBITED LETTERS BY PATIENT DFN^R^^R^IR^I^713.1^^^^^S
"IX",713.1,713.1,"APDFN",1)
S ^EAS(713.1,"APDFN",$E(X(1),1,3),$E(X(2),1,30),DA)=""
"IX",713.1,713.1,"APDFN",2)
K ^EAS(713.1,"APDFN",$E(X(1),1,3),$E(X(2),1,30),DA)
"IX",713.1,713.1,"APDFN",2.5)
K ^EAS(713.1,"APDFN")
"IX",713.1,713.1,"APDFN",11.1,0)
^.114IA^2^2
"IX",713.1,713.1,"APDFN",11.1,1,0)
1^F^713.1^2^3^1^F
"IX",713.1,713.1,"APDFN",11.1,1,3)

"IX",713.1,713.1,"APDFN",11.1,2,0)
2^F^713.1^.01^30^2^F
"IX",713.1,713.1,"APDFN",11.1,2,3)

"IX",713.2,713.2,"AN",0)
713.2^AN^CROSS-REF BY RECIPIANT AND ANNIVERSARY DATE^R^^R^IR^I^713.2^^^^^S
"IX",713.2,713.2,"AN",1)
S ^EAS(713.2,"AN",$E(X(1),1,30),$E(X(2),1,30),DA)=""
"IX",713.2,713.2,"AN",2)
K ^EAS(713.2,"AN",$E(X(1),1,30),$E(X(2),1,30),DA)
"IX",713.2,713.2,"AN",2.5)
K ^EAS(713.2,"AN")
"IX",713.2,713.2,"AN",11.1,0)
^.114IA^2^2
"IX",713.2,713.2,"AN",11.1,1,0)
1^F^713.2^2^30^1^F
"IX",713.2,713.2,"AN",11.1,1,3)

"IX",713.2,713.2,"AN",11.1,2,0)
2^F^713.2^3^30^2^F
"IX",713.2,713.2,"AN",11.1,2,3)

"KRN",3.6,220,-1)
0^1
"KRN",3.6,220,0)
EAS MTCOMPLETION^MEANS TEST COMPLETION
"KRN",3.6,220,1,0)
^3.61A^2^2^3020326^^
"KRN",3.6,220,1,1,0)
A Means Test for |1|, SSN(Last4) |2|
"KRN",3.6,220,1,2,0)
was completed on |3| by |4|
"KRN",3.6,220,3,0)
^3.63^1^1^3020326^^^^
"KRN",3.6,220,3,1,0)
This bulletin is for sending Means Test completion notices
"KRN",3.6,220,4,0)
^3.64A^4^4
"KRN",3.6,220,4,1,0)
1
"KRN",3.6,220,4,1,1,0)
^^1^1^3010824^
"KRN",3.6,220,4,1,1,1,0)
PATIENT    Patient's name from file #2
"KRN",3.6,220,4,2,0)
2
"KRN",3.6,220,4,2,1,0)
^3.65^1^1^3020326^^
"KRN",3.6,220,4,2,1,1,0)
Patient's SSN from file #2
"KRN",3.6,220,4,3,0)
3
"KRN",3.6,220,4,3,1,0)
^^1^1^3010824^
"KRN",3.6,220,4,3,1,1,0)
Date the Means test was completed
"KRN",3.6,220,4,4,0)
4
"KRN",3.6,220,4,4,1,0)
^3.65^1^1^3010824^^
"KRN",3.6,220,4,4,1,1,0)
USER   User completing the means test from file #200
"KRN",3.8,242,-1)
0^1
"KRN",3.8,242,0)
EAS MTLETTERS^PU^y^^^^
"KRN",3.8,242,2,0)
^3.801^1^1^3020124^^^^
"KRN",3.8,242,2,1,0)
Mail group for EAS automated Means Test letters statistics and reports
"KRN",3.8,242,3)

"KRN",19,11381,-1)
0^30
"KRN",19,11381,0)
EAS MT 30 DAY LETTER PRINT^Thirty Day Letters Print^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1^1
"KRN",19,11381,1,0)
^^1^1^3020308^
"KRN",19,11381,1,1,0)
Print all 30 day anniversary letters pending in the Letter Status file.
"KRN",19,11381,15)
K EATYP
"KRN",19,11381,20)
S EATYP=2 D EN^EASMTL6
"KRN",19,11381,25)
EN40^ANAMMT6
"KRN",19,11381,"U")
THIRTY DAY LETTERS PRINT
"KRN",19,11382,-1)
0^3
"KRN",19,11382,0)
EAS MT 60 DAY LETTER PRINT^Sixty Day Letters Print^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1^1
"KRN",19,11382,1,0)
^^1^1^3010723^
"KRN",19,11382,1,1,0)
Print all 60 day anniversary letters pending in the Letter Status file.
"KRN",19,11382,15)
K EATYP
"KRN",19,11382,20)
S EATYP=1 D EN^EASMTL6
"KRN",19,11382,25)

"KRN",19,11382,99)
58637,37364
"KRN",19,11382,"U")
SIXTY DAY LETTERS PRINT
"KRN",19,11384,-1)
0^24
"KRN",19,11384,0)
EAS MT 0 DAY LETTER PRINT^Zero Day Letters Print^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1^1
"KRN",19,11384,1,0)
^^1^1^2990225^^
"KRN",19,11384,1,1,0)
Prints all 0 day anniversary letters pending in the AMTL work list file.
"KRN",19,11384,15)
K EATYP
"KRN",19,11384,20)
S EATYP=4 D EN^EASMTL6
"KRN",19,11384,25)

"KRN",19,11384,"U")
ZERO DAY LETTERS PRINT
"KRN",19,11385,-1)
0^12
"KRN",19,11385,0)
EAS MT PRINT MENU^Letters Print Menu^^M^^^^^^^^ENROLLMENT APPLICATION SYSTEM
"KRN",19,11385,1,0)
^19.06^1^1^3020311^^^^
"KRN",19,11385,1,1,0)
Report and letter print menu
"KRN",19,11385,10,0)
^19.01IP^8^7
"KRN",19,11385,10,1,0)
11382^^1
"KRN",19,11385,10,1,"^")
EAS MT 60 DAY LETTER PRINT
"KRN",19,11385,10,2,0)
11381^^2
"KRN",19,11385,10,2,"^")
EAS MT 30 DAY LETTER PRINT
"KRN",19,11385,10,4,0)
11384^^4
"KRN",19,11385,10,4,"^")
EAS MT 0 DAY LETTER PRINT
"KRN",19,11385,10,5,0)
11392^^9
"KRN",19,11385,10,5,"^")
EAS MT REPRINT LETTERS
"KRN",19,11385,10,7,0)
11395^^10
"KRN",19,11385,10,7,"^")
EAS MT REPRINT SINGLE LETTER
"KRN",19,11385,10,8,0)
11420^^20
"KRN",19,11385,10,8,"^")
EAS MT REPORT OF CONTACT
"KRN",19,11385,99)
58874,46828
"KRN",19,11385,99.1)
58863,54272
"KRN",19,11385,"U")
LETTERS PRINT MENU
"KRN",19,11386,-1)
0^4
"KRN",19,11386,0)
EAS MT AUTO LETTERS MENU^Automated Means Test Letter Menu^^M^^^^^^^^ENROLLMENT APPLICATION SYSTEM
"KRN",19,11386,1,0)
^19.06^1^1^3010731^^^^
"KRN",19,11386,1,1,0)
Main menu for the automated mean test letters functionality
"KRN",19,11386,10,0)
^19.01IP^9^5
"KRN",19,11386,10,1,0)
11385^^3
"KRN",19,11386,10,1,"^")
EAS MT PRINT MENU
"KRN",19,11386,10,2,0)
11387^^1
"KRN",19,11386,10,2,"^")
EAS MT LETTERS SEARCH
"KRN",19,11386,10,5,0)
11390^^2
"KRN",19,11386,10,5,"^")
EAS MT RETURNED
"KRN",19,11386,10,6,0)
11393^^4
"KRN",19,11386,10,6,"^")
EAS MT REPORT MENU
"KRN",19,11386,10,9,0)
11407^^99
"KRN",19,11386,10,9,"^")
EAS MT SETUP MENU
"KRN",19,11386,99)
58752,51590
"KRN",19,11386,99.1)
58638,43835
"KRN",19,11386,"U")
AUTOMATED MEANS TEST LETTER ME
"KRN",19,11387,-1)
0^9
"KRN",19,11387,0)
EAS MT LETTERS SEARCH^Search For MT Anniversary Dates^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11387,1,0)
^^3^3^3010801^
"KRN",19,11387,1,1,0)
Interactive search for 60 day means test anniversary dates.  Adds new
"KRN",19,11387,1,2,0)
entries to the letter status file and creates 60, 40, 20 and zero trigger
"KRN",19,11387,1,3,0)
dates for letters/forms to be printed with another print option.
"KRN",19,11387,20)
D EN^EASMTL1
"KRN",19,11387,25)

"KRN",19,11387,"U")
SEARCH FOR MT ANNIVERSARY DATE
"KRN",19,11390,-1)
0^17
"KRN",19,11390,0)
EAS MT RETURNED^Veteran MT Return Edit^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11390,1,0)
^19.06^1^1^3010709^^^^
"KRN",19,11390,1,1,0)
Used to enter MT return information.
"KRN",19,11390,20)
D MTRTN^EASMTUTL
"KRN",19,11390,30)

"KRN",19,11390,31)

"KRN",19,11390,50)

"KRN",19,11390,51)

"KRN",19,11390,"U")
VETERAN MT RETURN EDIT
"KRN",19,11391,-1)
0^20
"KRN",19,11391,0)
EAS MT SUMMARY REPORT^Automated MT Letters Summary Report^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11391,1,0)
^19.06^1^1^3020116^^^^
"KRN",19,11391,1,1,0)
Lists count summaries of unreturned means tests grouped by letter type.
"KRN",19,11391,20)
D SUMMRY^EASMTRPT
"KRN",19,11391,25)

"KRN",19,11391,"U")
AUTOMATED MT LETTERS SUMMARY R
"KRN",19,11392,-1)
0^15
"KRN",19,11392,0)
EAS MT REPRINT LETTERS^Reprint Letters by Processing Date^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11392,1,0)
^^1^1^3010723^
"KRN",19,11392,1,1,0)
Reprint means test letters or forms for a date range
"KRN",19,11392,20)
D RERUN^EASMTL10
"KRN",19,11392,25)

"KRN",19,11392,"U")
REPRINT LETTERS BY PROCESSING 
"KRN",19,11393,-1)
0^14
"KRN",19,11393,0)
EAS MT REPORT MENU^Report Menu^^M^^^^^^^^ENROLLMENT APPLICATION SYSTEM
"KRN",19,11393,1,0)
^19.06^1^1^3011029^^^
"KRN",19,11393,1,1,0)
Report sub-menu for EAS MT auto-letters
"KRN",19,11393,10,0)
^19.01IP^5^5
"KRN",19,11393,10,1,0)
11391^^2
"KRN",19,11393,10,1,"^")
EAS MT SUMMARY REPORT
"KRN",19,11393,10,2,0)
11394^^1
"KRN",19,11393,10,2,"^")
EAS MT PENDING LETTERS
"KRN",19,11393,10,3,0)
11396^^3
"KRN",19,11393,10,3,"^")
EAS MT STATISTICS SUMMARY
"KRN",19,11393,10,4,0)
11404^^4
"KRN",19,11393,10,4,"^")
EAS MT UNRETURNED LETTERS
"KRN",19,11393,10,5,0)
11410^^6
"KRN",19,11393,10,5,"^")
EAS MT EXPIRATIONS
"KRN",19,11393,99)
58855,32553
"KRN",19,11393,99.1)
58863,54271
"KRN",19,11393,"U")
REPORT MENU
"KRN",19,11394,-1)
0^11
"KRN",19,11394,0)
EAS MT PENDING LETTERS^Count of pending letters to be printed^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11394,1,0)
^19.06^1^1^3020220^^^^
"KRN",19,11394,1,1,0)
Indicates how many letters or forms that have not printed yet.
"KRN",19,11394,20)
D QUE^EASMTRP2
"KRN",19,11394,25)

"KRN",19,11394,"U")
COUNT OF PENDING LETTERS TO BE
"KRN",19,11395,-1)
0^16
"KRN",19,11395,0)
EAS MT REPRINT SINGLE LETTER^Reprint Single Letter^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11395,1,0)
^19.06^1^1^3010719^^^^
"KRN",19,11395,1,1,0)
Reprints a single letter for a user inputed veteran/processing date.
"KRN",19,11395,20)
D SINGLE^EASMTL10
"KRN",19,11395,25)

"KRN",19,11395,"U")
REPRINT SINGLE LETTER
"KRN",19,11396,-1)
0^28
"KRN",19,11396,0)
EAS MT STATISTICS SUMMARY^Means Test Letters Statistic Report^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11396,1,0)
^19.06^1^1^3011115^^^^
"KRN",19,11396,1,1,0)
A statistical report for a given processing date range.
"KRN",19,11396,20)
D LTRSTAT^EASMTRPT
"KRN",19,11396,60)

"KRN",19,11396,62)

"KRN",19,11396,63)

"KRN",19,11396,64)

"KRN",19,11396,65)

"KRN",19,11396,66)

"KRN",19,11396,"U")
MEANS TEST LETTERS STATISTIC R
"KRN",19,11401,-1)
0^7
"KRN",19,11401,0)
EAS MT LETTERS BG SEARCH^Background search for MT Anniversary dates^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11401,1,0)
^^4^4^3010709^
"KRN",19,11401,1,1,0)
Background job to be scheduled for recurring searches for 60 day means
"KRN",19,11401,1,2,0)
test anniversary dates and creates a worklist record with 60, 40, 20 and
"KRN",19,11401,1,3,0)
zero trigger dates for letters/forms to be printed with another print
"KRN",19,11401,1,4,0)
option.
"KRN",19,11401,20)
D QUEUE^EASMTL1
"KRN",19,11401,"U")
BACKGROUND SEARCH FOR MT ANNIV
"KRN",19,11402,-1)
0^13
"KRN",19,11402,0)
EAS MT PROHIBIT EDIT^Prohibit MT Letters Add/Edit^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11402,1,0)
^19.06^3^3^3010709^^
"KRN",19,11402,1,1,0)
Add/Edit the Prohibit Patient flag in the EAS MT PATIENT STATUS file, 
"KRN",19,11402,1,2,0)
#713.1.  This flag will prevent the auto Means Test letters from being
"KRN",19,11402,1,3,0)
generated if the patient is flagged.
"KRN",19,11402,20)
D PROHBIT^EASMTUTL
"KRN",19,11402,"U")
PROHIBIT MT LETTERS ADD/EDIT
"KRN",19,11403,-1)
0^10
"KRN",19,11403,0)
EAS MT PARAMETERS^EAS MT Parameter Entry/Edit^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11403,1,0)
^19.06^1^1^3011109^^^^
"KRN",19,11403,1,1,0)
Add/Edit the automated Means Test Letters parameters file, #713
"KRN",19,11403,20)
D WR^EASMTPAR
"KRN",19,11403,30)

"KRN",19,11403,31)

"KRN",19,11403,32)

"KRN",19,11403,33)

"KRN",19,11403,50)

"KRN",19,11403,51)

"KRN",19,11403,"U")
EAS MT PARAMETER ENTRY/EDIT
"KRN",19,11404,-1)
0^21
"KRN",19,11404,0)
EAS MT UNRETURNED LETTERS^Unreturned Letter Statistic Report^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11404,1,0)
^^1^1^3010713^
"KRN",19,11404,1,1,0)
Count of letters printed but not returned by threshold date, summary report
"KRN",19,11404,20)
D UNRTN^EASMTRPT
"KRN",19,11404,"U")
UNRETURNED LETTER STATISTIC RE
"KRN",19,11405,-1)
0^6
"KRN",19,11405,0)
EAS MT LETTERS BG PRINT^Background print job for EAS MT Letters^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11405,1,0)
^19.06^1^1^3020225^^^
"KRN",19,11405,1,1,0)
Tasked bacground job to print all auto-generated Means Test Letters
"KRN",19,11405,20)
D BCKJOB^EASMTL6B
"KRN",19,11405,"U")
BACKGROUND PRINT JOB FOR EAS M
"KRN",19,11407,-1)
0^18
"KRN",19,11407,0)
EAS MT SETUP MENU^EAS MT Parameter Menu^^M^^EAS MTSUPV^^^^^^ENROLLMENT APPLICATION SYSTEM
"KRN",19,11407,1,0)
^19.06^1^1^3020117^^^^
"KRN",19,11407,1,1,0)
Menu for EAS MT blocking and letters parameter setup
"KRN",19,11407,10,0)
^19.01IP^5^4
"KRN",19,11407,10,2,0)
11402^^1
"KRN",19,11407,10,2,"^")
EAS MT PROHIBIT EDIT
"KRN",19,11407,10,3,0)
11403^^1
"KRN",19,11407,10,3,"^")
EAS MT PARAMETERS
"KRN",19,11407,10,4,0)
11408^^5
"KRN",19,11407,10,4,"^")
EAS MT LETTERS EDIT
"KRN",19,11407,10,5,0)
11413
"KRN",19,11407,10,5,"^")
EAS MT CLEAR IN USE FLAG
"KRN",19,11407,99)
58821,33199
"KRN",19,11407,"U")
EAS MT PARAMETER MENU
"KRN",19,11408,-1)
0^8
"KRN",19,11408,0)
EAS MT LETTERS EDIT^Edit Final Section of Letters^^E^^^^^^^^ENROLLMENT APPLICATION SYSTEM
"KRN",19,11408,1,0)
^19.06^2^2^3011023^^
"KRN",19,11408,1,1,0)
Add/Edit the final section of the auto means test letters for the respective
"KRN",19,11408,1,2,0)
division/facility.  This is for local and signatory information.
"KRN",19,11408,30)
EAS(713.3,
"KRN",19,11408,31)
AEQM
"KRN",19,11408,50)
EAS(713.3,
"KRN",19,11408,51)
4
"KRN",19,11408,"U")
EDIT FINAL SECTION OF LETTERS
"KRN",19,11410,-1)
0^27
"KRN",19,11410,0)
EAS MT EXPIRATIONS^Means Test Expiration Report^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11410,1,0)
^^1^1^3011029^
"KRN",19,11410,1,1,0)
Expiration report of means tests for selected anniversary date range.
"KRN",19,11410,20)
D EN^EASMTRP1
"KRN",19,11410,"U")
MEANS TEST EXPIRATION REPORT
"KRN",19,11411,-1)
0^26
"KRN",19,11411,0)
EAS MT EXPIRATION BG PRINT^Daily Means Test Expiration Report^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11411,1,0)
^^2^2^3011029^
"KRN",19,11411,1,1,0)
Tasked option for background printing of daily MT expiration of anniversary
"KRN",19,11411,1,2,0)
dates.
"KRN",19,11411,20)
D QUE^EASMTRP1
"KRN",19,11411,"U")
DAILY MEANS TEST EXPIRATION RE
"KRN",19,11413,-1)
0^29
"KRN",19,11413,0)
EAS MT CLEAR IN USE FLAG^Clear Letter Search In-Use flag^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11413,1,0)
^19.06^2^2^3020117^^
"KRN",19,11413,1,1,0)
Calls the lock utility to clear the EAS MT Parameters In-use flag for the
"KRN",19,11413,1,2,0)
means test threshold search if left in the in-use postion by a task error.
"KRN",19,11413,20)
N EAX S EAX=$$LOCK^EASMTUTL(0) W !!," >> ",$S(EAX:"Lock cleared",1:"Lock not cleared!")
"KRN",19,11413,"U")
CLEAR LETTER SEARCH IN-USE FLA
"KRN",19,11420,-1)
0^31
"KRN",19,11420,0)
EAS MT REPORT OF CONTACT^Print Report of Contact^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11420,1,0)
^^1^1^3020311^
"KRN",19,11420,1,1,0)
Prints a Report of Contact form for use in contacting a patient.
"KRN",19,11420,20)
D QUE^EASMTL8
"KRN",19,11420,"U")
PRINT REPORT OF CONTACT
"KRN",19.1,454,-1)
0^1
"KRN",19.1,454,0)
EAS MTOVERRIDE^OVERRIDE KEY FOR MT APPT BLOCK^^
"KRN",19.1,454,1,0)
^^2^2^3010726^
"KRN",19.1,454,1,1,0)
Override key to allow future appointments if a patient requires a new
"KRN",19.1,454,1,2,0)
means test or insurance review at the time of the booking.
"KRN",19.1,455,-1)
0^2
"KRN",19.1,455,0)
EAS MTSUPV^SUPERVISOR KEY TO LIMIT ACCESS
"KRN",19.1,455,1,0)
^^2^2^3010731^
"KRN",19.1,455,1,1,0)
Supervisor key to limit access to setup and parameter options for the 
"KRN",19.1,455,1,2,0)
EAS MT blocking software
"MBREQ")
0
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",531,-1)
1^1
"PKG",531,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",531,20,0)
^9.402P^^
"PKG",531,22,0)
^9.49I^1^1
"PKG",531,22,1,0)
1.0^3010315^3010419^11721
"PKG",531,22,1,"PAH",1,0)
3^3020417
"PKG",531,22,1,"PAH",1,1,0)
^^11^11^3020417
"PKG",531,22,1,"PAH",1,1,1,0)
This patch is in response to Item #22 in the Rossio Report.  In the area
"PKG",531,22,1,"PAH",1,1,2,0)
of Means Test (MT) Deficiencies, Item #22 required that the Veterans
"PKG",531,22,1,"PAH",1,1,3,0)
Health Administration (VHA) identify best practices for means testing and
"PKG",531,22,1,"PAH",1,1,4,0)
acquiring veterans' signatures at the local level and explore the
"PKG",531,22,1,"PAH",1,1,5,0)
promulgation of these best practices throughout the system.  In response
"PKG",531,22,1,"PAH",1,1,6,0)
to the Report, the Enrollment Task Force requested implementation on a
"PKG",531,22,1,"PAH",1,1,7,0)
national basis of local sites' initiative s developed to manage scheduling
"PKG",531,22,1,"PAH",1,1,8,0)
activities for veterans who require the completion of a means test.  This
"PKG",531,22,1,"PAH",1,1,9,0)
patch will provide a national patch release to the Enrollment Application
"PKG",531,22,1,"PAH",1,1,10,0)
Systems (EAS) software of locally implemented software that has been
"PKG",531,22,1,"PAH",1,1,11,0)
converted from Class III to Class I.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","EASMTCHK")
0^45^B20492908
"RTN","EASMTCHK",1,0)
EASMTCHK ;ALB/SCK -  MEANS TEST BLOCKING CHECK ; 8/13/01
"RTN","EASMTCHK",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;MAR 15,2001
"RTN","EASMTCHK",3,0)
 ; This routine provides an API, which when called from Appointment Management will allow 
"RTN","EASMTCHK",4,0)
 ; for the blocking of future appointments and appointment check-in/out if the patient 
"RTN","EASMTCHK",5,0)
 ; requires a Means Test or has a Means Test Status of Required. $$LST^DGMTU is used 
"RTN","EASMTCHK",6,0)
 ; to determine if a MT is REQUIRED.  If a MT does not have a status of REQUIRED, 
"RTN","EASMTCHK",7,0)
 ; but is more than 365 days out (same criteria used in OLD^DGMTU4), the MT will 
"RTN","EASMTCHK",8,0)
 ; be considered "REQUIRED" for blocking purposes. If a Means Test is required, the 
"RTN","EASMTCHK",9,0)
 ; following combinations of appointment actions will be blocked:
"RTN","EASMTCHK",10,0)
 ;    o Making a future appt for a Regular appt type
"RTN","EASMTCHK",11,0)
 ;    o Check In/Out an appt which is either a Regular or Research type
"RTN","EASMTCHK",12,0)
 ;
"RTN","EASMTCHK",13,0)
 ; A Walk-in will see the alert notice, and will be warned NOT to CHECK-IN the walk-in 
"RTN","EASMTCHK",14,0)
 ; appointment. Unscheduled/Walk-ins can ONLY be checked out.
"RTN","EASMTCHK",15,0)
 ;
"RTN","EASMTCHK",16,0)
 ; This API may be passed a flag to "silence" the screen display of the alert message, and 
"RTN","EASMTCHK",17,0)
 ; will accept an array variable to return the alert text in. Inpatient appointments 
"RTN","EASMTCHK",18,0)
 ; are not affected in any way.  Domicilary are not considered inpatients for the purpose 
"RTN","EASMTCHK",19,0)
 ; of Means Test Blocking for appointments
"RTN","EASMTCHK",20,0)
 ;
"RTN","EASMTCHK",21,0)
MT(DFN,EASAPT,EASACT,EASDT,EASQT,EASMSG) ; Entry point for MT Check
"RTN","EASMTCHK",22,0)
 ; Input Variables
"RTN","EASMTCHK",23,0)
 ;    DFN    - Patient's IEN in File #2
"RTN","EASMTCHK",24,0)
 ;    EASAPT - Appointment Type (File #409.1) [Optional]
"RTN","EASMTCHK",25,0)
 ;    EASACT - Appointment Action Flag [Optional] Default = "Other"
"RTN","EASMTCHK",26,0)
 ;             "M"  - Make an Appointment
"RTN","EASMTCHK",27,0)
 ;             "C"  - Check In/Out an existing appointment
"RTN","EASMTCHK",28,0)
 ;             "W"  - Unscheduled/Walk-in appointment
"RTN","EASMTCHK",29,0)
 ;             "O"  - Other
"RTN","EASMTCHK",30,0)
 ;             "L"  - Letters
"RTN","EASMTCHK",31,0)
 ;
"RTN","EASMTCHK",32,0)
 ;    EASDT  - Appointment Date/Time [Optional]
"RTN","EASMTCHK",33,0)
 ;    EASQT  - Silent flag [Optional], if set will prevent display of alert message
"RTN","EASMTCHK",34,0)
 ;    EASMSG - Return array for alert message [Optional], if passed in, the alert 
"RTN","EASMTCHK",35,0)
 ;             message text will be copied to this array
"RTN","EASMTCHK",36,0)
 ;
"RTN","EASMTCHK",37,0)
 ; Output
"RTN","EASMTCHK",38,0)
 ;    1  - Block action (MT Required)
"RTN","EASMTCHK",39,0)
 ;    0  - Don't block action (MT Not required)
"RTN","EASMTCHK",40,0)
 ;
"RTN","EASMTCHK",41,0)
 N RSLT,EASMT,EASTXT,EASX,EAMTS,DSPLY,IENS
"RTN","EASMTCHK",42,0)
 ;
"RTN","EASMTCHK",43,0)
 S RSLT=0
"RTN","EASMTCHK",44,0)
 S EASQT=+$G(EASQT)
"RTN","EASMTCHK",45,0)
 S EASAPT=+$G(EASAPT)
"RTN","EASMTCHK",46,0)
 S EASDT=$G(EASDT)
"RTN","EASMTCHK",47,0)
 S EASACT=$G(EASACT)
"RTN","EASMTCHK",48,0)
 S:EASACT']"" EASACT="O"
"RTN","EASMTCHK",49,0)
 ; If Appt type is not defined, action is CI/CO, get appt date
"RTN","EASMTCHK",50,0)
 I 'EASAPT,EASACT="C" D
"RTN","EASMTCHK",51,0)
 . S IENS=EASDT_","_DFN
"RTN","EASMTCHK",52,0)
 . S EASAPT=$$GET1^DIQ(2.98,IENS,9.5,"I")
"RTN","EASMTCHK",53,0)
 ;
"RTN","EASMTCHK",54,0)
 Q:$$INP(DFN) RSLT       ; Quit if inpatient
"RTN","EASMTCHK",55,0)
 S EAMTS=$$MTCHK(DFN,EASACT)    ; Get MT Check flag
"RTN","EASMTCHK",56,0)
 Q:'EAMTS RSLT
"RTN","EASMTCHK",57,0)
 ;
"RTN","EASMTCHK",58,0)
 ;Build Alert message 
"RTN","EASMTCHK",59,0)
 D BLDMSG(EASACT,.EASTXT)
"RTN","EASMTCHK",60,0)
 I $D(EASMSG) M @EASMSG=EASTXT ; If output array defined,copy message test
"RTN","EASMTCHK",61,0)
 ;
"RTN","EASMTCHK",62,0)
 ; Check appointment action and appointment type.  Set blocking action
"RTN","EASMTCHK",63,0)
 I EASACT="M",EASAPT=9 S (DSPLY,RSLT)=1 ; Make an Appt.
"RTN","EASMTCHK",64,0)
 ;
"RTN","EASMTCHK",65,0)
 I EASACT="C" D  ; Check-in an appt.
"RTN","EASMTCHK",66,0)
 . I EASAPT=9 S (DSPLY,RSLT)=1
"RTN","EASMTCHK",67,0)
 . I EASAPT=6 S (DSPLY,RSLT)=1
"RTN","EASMTCHK",68,0)
 ;
"RTN","EASMTCHK",69,0)
 I "W,O"[EASACT D  ; Walk-in/Other appt.
"RTN","EASMTCHK",70,0)
 . I "6,9"[$G(EASAPT) S DSPLY=1
"RTN","EASMTCHK",71,0)
 ;
"RTN","EASMTCHK",72,0)
 I $G(DSPLY) D
"RTN","EASMTCHK",73,0)
 . Q:EASQT  ; If silent flag is set, do not display alert
"RTN","EASMTCHK",74,0)
 . S EASX=0
"RTN","EASMTCHK",75,0)
 . W !?5,$CHAR(7),"******************************************************"
"RTN","EASMTCHK",76,0)
 . F  S EASX=$O(EASTXT(EASX)) Q:'EASX  D
"RTN","EASMTCHK",77,0)
 . . W !?5,EASTXT(EASX)
"RTN","EASMTCHK",78,0)
 ;
"RTN","EASMTCHK",79,0)
 ; Check for override key on making appointments
"RTN","EASMTCHK",80,0)
 I EASACT="M" D
"RTN","EASMTCHK",81,0)
 . I $D(^XUSEC("EAS MTOVERRIDE",DUZ)) S RSLT=0
"RTN","EASMTCHK",82,0)
 Q $G(RSLT)
"RTN","EASMTCHK",83,0)
 ;
"RTN","EASMTCHK",84,0)
MTCHK(DFN,EASACT) ; Check Means Test Status
"RTN","EASMTCHK",85,0)
 ; Input
"RTN","EASMTCHK",86,0)
 ;     DFN
"RTN","EASMTCHK",87,0)
 ;
"RTN","EASMTCHK",88,0)
 ; Output  
"RTN","EASMTCHK",89,0)
 ;     0   OK
"RTN","EASMTCHK",90,0)
 ;     1   MEANS TEST Required
"RTN","EASMTCHK",91,0)
 ;
"RTN","EASMTCHK",92,0)
 N RSLT,EASTAT,EASDT
"RTN","EASMTCHK",93,0)
 ;
"RTN","EASMTCHK",94,0)
 S RSLT=0
"RTN","EASMTCHK",95,0)
 S EASTAT=$$LST^DGMTU(DFN,"",1)
"RTN","EASMTCHK",96,0)
 I EASTAT]"" D
"RTN","EASMTCHK",97,0)
 . I $P(EASTAT,U,4)="R" S RSLT=1 Q
"RTN","EASMTCHK",98,0)
 . I "C,P"[$P(EASTAT,U,4),$$GET1^DIQ(408.31,+EASTAT,.11,"I"),$P(EASTAT,U,2)>2991005 Q
"RTN","EASMTCHK",99,0)
 . S EASDT=$P(EASTAT,U,2)
"RTN","EASMTCHK",100,0)
 . I ($$FMDIFF^XLFDT(DT,EASDT)>365) S RSLT=1
"RTN","EASMTCHK",101,0)
 . I $G(EASACT)="L" D
"RTN","EASMTCHK",102,0)
 . . ;; For letters, need to check for letters past 60-day threshold
"RTN","EASMTCHK",103,0)
 . . I ($$FMDIFF^XLFDT(DT,EASDT)>304) S RSLT=1
"RTN","EASMTCHK",104,0)
 ;
"RTN","EASMTCHK",105,0)
 I $P(EASTAT,U,4)="N" S RSLT=0
"RTN","EASMTCHK",106,0)
 Q $G(RSLT)
"RTN","EASMTCHK",107,0)
 ;
"RTN","EASMTCHK",108,0)
BLDMSG(EASACT,EASTXT) ; Build alert message to user
"RTN","EASMTCHK",109,0)
 N LINE
"RTN","EASMTCHK",110,0)
 ;
"RTN","EASMTCHK",111,0)
 S LINE=1
"RTN","EASMTCHK",112,0)
 S EASTXT(LINE)="Means Test Alert",LINE=LINE+1
"RTN","EASMTCHK",113,0)
 S EASTXT(LINE)="A Means Test is required or needs to be completed.",LINE=LINE+1
"RTN","EASMTCHK",114,0)
 ;
"RTN","EASMTCHK",115,0)
 I "M,C,W"[EASACT D
"RTN","EASMTCHK",116,0)
 . S EASTXT(LINE)="Please perform MEANS TEST or instruct patient",LINE=LINE+1
"RTN","EASMTCHK",117,0)
 . S EASTXT(LINE)="to report for Means Test interview.",LINE=LINE+1
"RTN","EASMTCHK",118,0)
 ;
"RTN","EASMTCHK",119,0)
 I EASACT="M" D
"RTN","EASMTCHK",120,0)
 . S EASTXT(LINE)=">> A future appointment cannot be made at this time."
"RTN","EASMTCHK",121,0)
 . S:$D(^XUSEC("EAS MTOVERRIDE",DUZ)) EASTXT(LINE)=">> Override Key in Effect."
"RTN","EASMTCHK",122,0)
 . S LINE=LINE+1
"RTN","EASMTCHK",123,0)
 ;
"RTN","EASMTCHK",124,0)
 I EASACT="C" S EASTXT(LINE)=">> This action may not be completed at this time.",LINE=LINE+1
"RTN","EASMTCHK",125,0)
 I EASACT="W" D
"RTN","EASMTCHK",126,0)
 . S EASTXT(LINE)=">> Check-Out ONLY.  Do NOT Check-In (CI) a walk-in appointment",LINE=LINE+1
"RTN","EASMTCHK",127,0)
 . S EASTXT(LINE)="   You will not be able to check-out the appt. if you do so.",LINE=LINE+1
"RTN","EASMTCHK",128,0)
 Q
"RTN","EASMTCHK",129,0)
 ;
"RTN","EASMTCHK",130,0)
INP(DFN) ; Check on Inpatient status
"RTN","EASMTCHK",131,0)
 N RSLT,VA,INDT,VAERR,SRVC,EAIN,VAROOT,VAINDT
"RTN","EASMTCHK",132,0)
 ;
"RTN","EASMTCHK",133,0)
 S VAINDT=$$NOW^XLFDT,VAROOT="EAIN"
"RTN","EASMTCHK",134,0)
 D INP^VADPT
"RTN","EASMTCHK",135,0)
 ; If inpatient and hosp service type is not "DOM", return 1
"RTN","EASMTCHK",136,0)
 I +$G(EAIN(4)) D
"RTN","EASMTCHK",137,0)
 . S SRVC=$$GET1^DIQ(42,+EAIN(4),.03,"I")
"RTN","EASMTCHK",138,0)
 . I SRVC'="D" S RSLT=1
"RTN","EASMTCHK",139,0)
 Q +$G(RSLT)
"RTN","EASMTL1")
0^2^B28569109
"RTN","EASMTL1",1,0)
EASMTL1 ;MIN/TCM ALB/SCK - AUTOMATED MEANS TEST LETTER - PATIENT SEARCH ; 07/2/01
"RTN","EASMTL1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;MAR 15,2001
"RTN","EASMTL1",3,0)
 ; Conversion from class III software
"RTN","EASMTL1",4,0)
 ;
"RTN","EASMTL1",5,0)
QUEUE ; Main entry point for tasked (background) letter search
"RTN","EASMTL1",6,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSK,ZDATE
"RTN","EASMTL1",7,0)
 ;
"RTN","EASMTL1",8,0)
 S ZTRTN="EN^EASMTL1"
"RTN","EASMTL1",9,0)
 S ZTDESC="AUTOMATED MT LETTERS GENERATOR"
"RTN","EASMTL1",10,0)
 S (ZTDTH,ZDATE)=$$NOW^XLFDT
"RTN","EASMTL1",11,0)
 S ZTIO=""
"RTN","EASMTL1",12,0)
 D ^%ZTLOAD
"RTN","EASMTL1",13,0)
 Q
"RTN","EASMTL1",14,0)
 ;
"RTN","EASMTL1",15,0)
SETDT(EASRUN) ;
"RTN","EASMTL1",16,0)
 ; Input
"RTN","EASMTL1",17,0)
 ;    EASRUN   - Default start date for processing
"RTN","EASMTL1",18,0)
 ;
"RTN","EASMTL1",19,0)
 ; Output
"RTN","EASMTL1",20,0)
 ;    1 - Ok
"RTN","EASMTL1",21,0)
 ;    0 - Quit
"RTN","EASMTL1",22,0)
 ;    EASRUN - Accepted start date for processing
"RTN","EASMTL1",23,0)
 ;
"RTN","EASMTL1",24,0)
 N DIR,DIRUT,RSLT
"RTN","EASMTL1",25,0)
 ;
"RTN","EASMTL1",26,0)
 S DIR("A",1)="The prior processing date is not available.  A default date"
"RTN","EASMTL1",27,0)
 S DIR("A",2)="of "_$$FMTE^XLFDT(EASRUN)_" will be used."
"RTN","EASMTL1",28,0)
 S DIR("A")="Ok to continue? "
"RTN","EASMTL1",29,0)
 S DIR(0)="YAO",DIR("B")="YES"
"RTN","EASMTL1",30,0)
 D ^DIR K DIR
"RTN","EASMTL1",31,0)
 I $D(DIRUT) Q 0
"RTN","EASMTL1",32,0)
 Q:Y Y
"RTN","EASMTL1",33,0)
 ;
"RTN","EASMTL1",34,0)
 S DIR(0)="DAO^:DT:EX",DIR("B")=$$FMTE^XLFDT(EASRUN)
"RTN","EASMTL1",35,0)
 S DIR("?")="^D HELP^%DTC"
"RTN","EASMTL1",36,0)
 S DIR("A",1)=""
"RTN","EASMTL1",37,0)
 S DIR("A")="Select new start date: "
"RTN","EASMTL1",38,0)
 D ^DIR K DIR
"RTN","EASMTL1",39,0)
 I $D(DIRUT) Q 0
"RTN","EASMTL1",40,0)
 S EASRUN=Y
"RTN","EASMTL1",41,0)
 Q 1
"RTN","EASMTL1",42,0)
 ;
"RTN","EASMTL1",43,0)
EN ; Main entry point for processing
"RTN","EASMTL1",44,0)
 N EASLAST,X,EASLST,EASABRT,EASN,EAS6CNT,EAS3CNT,EAS0CNT,EASDT,EASDTFLG,EADT,MSG,EASX
"RTN","EASMTL1",45,0)
 ;
"RTN","EASMTL1",46,0)
 ; Get last processing date, default to TODAY - 30 if date not available
"RTN","EASMTL1",47,0)
 S EASX=$$GET1^DIQ(713,1,2,"I")
"RTN","EASMTL1",48,0)
 S EADT=$$DT^XLFDT
"RTN","EASMTL1",49,0)
 ; If letter search has already been run for TODAY, quit
"RTN","EASMTL1",50,0)
 I EASX=EADT D  Q
"RTN","EASMTL1",51,0)
 . I '$D(ZTQUEUED) D
"RTN","EASMTL1",52,0)
 . . W !!,$CHAR(7),">> The Means Test Letter search has been run for today.",!
"RTN","EASMTL1",53,0)
 . . D PAUSE^EASMTUTL
"RTN","EASMTL1",54,0)
 ;
"RTN","EASMTL1",55,0)
 I EASX S EASLAST=$$FMADD^XLFDT(EASX,1)
"RTN","EASMTL1",56,0)
 I '$G(EASX) D  Q:$G(EASABRT)
"RTN","EASMTL1",57,0)
 . S EASLAST=$$FMADD^XLFDT(DT,-30)
"RTN","EASMTL1",58,0)
 . I '$D(ZTQUEUED) S:'$$SETDT(.EASLAST) EASABRT=1
"RTN","EASMTL1",59,0)
 ;
"RTN","EASMTL1",60,0)
 ; Check lock on parameter file, one process at a time, quit if locked
"RTN","EASMTL1",61,0)
 I '$$LOCK^EASMTUTL(1) D  Q
"RTN","EASMTL1",62,0)
 . I $D(ZTQUEUED) D  Q
"RTN","EASMTL1",63,0)
 . . D ALERT^EASMTUTL("Auto MT Letters: This process is already running, "_$$FMTE^XLFDT(EADT,"2D"))
"RTN","EASMTL1",64,0)
 . W !!,$CHAR(7),"This process is already running, please try again later"
"RTN","EASMTL1",65,0)
 . D PAUSE^EASMTUTL
"RTN","EASMTL1",66,0)
 ;
"RTN","EASMTL1",67,0)
 D BLDLST(EASLAST,EADT)    ; Build processing date list
"RTN","EASMTL1",68,0)
 D PROCESS                 ; Process dates
"RTN","EASMTL1",69,0)
 S EASX=$$LOCK^EASMTUTL(0)
"RTN","EASMTL1",70,0)
 D UPDPARAM(EADT)
"RTN","EASMTL1",71,0)
 D STATS(EASLAST,.EAS6CNT,EADT)
"RTN","EASMTL1",72,0)
 ;
"RTN","EASMTL1",73,0)
 I $D(ZTQUEUED) D
"RTN","EASMTL1",74,0)
 . S MSG="Auto-Letters Search completed: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","EASMTL1",75,0)
 . D ALERT^EASMTUTL(MSG)
"RTN","EASMTL1",76,0)
 Q
"RTN","EASMTL1",77,0)
 ;
"RTN","EASMTL1",78,0)
BLDLST(FRDT,TODT) ; Build processing date list
"RTN","EASMTL1",79,0)
 ; Input
"RTN","EASMTL1",80,0)
 ;   FRDT - Beginning date for processing list
"RTN","EASMTL1",81,0)
 ;   TODT - Ending date for processing list
"RTN","EASMTL1",82,0)
 ;
"RTN","EASMTL1",83,0)
 N EASN
"RTN","EASMTL1",84,0)
 ;
"RTN","EASMTL1",85,0)
 S EASN=FRDT,EASLST(FRDT)="",EASLST(TODT)=""
"RTN","EASMTL1",86,0)
 F  S EASN=$$FMADD^XLFDT(EASN,1) Q:EASN>TODT  S EASLST(EASN)=""
"RTN","EASMTL1",87,0)
 Q
"RTN","EASMTL1",88,0)
 ;
"RTN","EASMTL1",89,0)
PROCESS ;  Get anniversary and threshold dates
"RTN","EASMTL1",90,0)
 N EASPRCDT
"RTN","EASMTL1",91,0)
 ;
"RTN","EASMTL1",92,0)
 S (EAS0CNT,EAS3CNT,EAS6CNT)=0
"RTN","EASMTL1",93,0)
 ; Calculate Anniverary date and 60/30/0 dates based on the Anniverary date
"RTN","EASMTL1",94,0)
 S EASPRCDT=0 ; Begin loop through processing dates
"RTN","EASMTL1",95,0)
 F  S EASPRCDT=$O(EASLST(EASPRCDT)) Q:EASPRCDT'>0  D  Q:$G(ZTSTOP)  ; Quit if stop request
"RTN","EASMTL1",96,0)
 . K EASDT
"RTN","EASMTL1",97,0)
 . I '$D(ZTQUEUED) W !?5,">> Processing date  "_$$FMTE^XLFDT(EASPRCDT)_"  in progress <<",!
"RTN","EASMTL1",98,0)
 . ; Anniversary date is processing date minus one year plus sixty days
"RTN","EASMTL1",99,0)
 . ; Since this is intended as an interim solution, and that the date 
"RTN","EASMTL1",100,0)
 . ; conversion utilities only handle days, to stay within Y2K, 365 days
"RTN","EASMTL1",101,0)
 . ; will be used to subtract one year.  
"RTN","EASMTL1",102,0)
 . ;
"RTN","EASMTL1",103,0)
 . S EASDT("ANV")=$$FMADD^XLFDT(EASPRCDT,-305) ; Anv date: 365 days - 60 days
"RTN","EASMTL1",104,0)
 . S EASDT("60")=$$FMADD^XLFDT(EASDT("ANV"),(365-60)) ; Define 60 day letter print date
"RTN","EASMTL1",105,0)
 . S EASDT("30")=$$FMADD^XLFDT(EASDT("ANV"),(365-30)) ; Define 30 day letter print date
"RTN","EASMTL1",106,0)
 . S EASDT("0")=$$FMADD^XLFDT(EASDT("ANV"),365) ; Define 0 day letter print date
"RTN","EASMTL1",107,0)
 . ;
"RTN","EASMTL1",108,0)
 . ; Call the threshold date search
"RTN","EASMTL1",109,0)
 . D EN60^EASMTL2
"RTN","EASMTL1",110,0)
 . ; Check for stop request if queued
"RTN","EASMTL1",111,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1
"RTN","EASMTL1",112,0)
 Q
"RTN","EASMTL1",113,0)
 ;
"RTN","EASMTL1",114,0)
UPDPARAM(EASDT) ; Update the EAS Parameter file, #713
"RTN","EASMTL1",115,0)
 ; Input
"RTN","EASMTL1",116,0)
 ;   EASDT - Today's date
"RTN","EASMTL1",117,0)
 ;
"RTN","EASMTL1",118,0)
 N DIE,DA,DR
"RTN","EASMTL1",119,0)
 ;
"RTN","EASMTL1",120,0)
 S DIE="^EAS(713,",DA=1,DR="2////^S X=EASDT"
"RTN","EASMTL1",121,0)
 S:'$D(ZTQUEUED) DR=DR_";3////^S X=DUZ;4////^S X=EASDT"
"RTN","EASMTL1",122,0)
 D ^DIE K DIE
"RTN","EASMTL1",123,0)
 Q
"RTN","EASMTL1",124,0)
 ;
"RTN","EASMTL1",125,0)
STATS(EASLAST,EAS6CNT,EASDT) ;Gather and print statistics
"RTN","EASMTL1",126,0)
 ; Input
"RTN","EASMTL1",127,0)
 ;    EASLAST  - Last date processed (Beginning date)
"RTN","EASMTL1",128,0)
 ;    EAS6CNT  - Array of 60 day letters
"RTN","EASMTL1",129,0)
 ;    EASDT    - Ending date of processing
"RTN","EASMTL1",130,0)
 ;
"RTN","EASMTL1",131,0)
 N MSG,EASD,LINE,TOT,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","EASMTL1",132,0)
 ;
"RTN","EASMTL1",133,0)
 S MSG(.1)="Automated Means Test Letter Generator Statistics"
"RTN","EASMTL1",134,0)
 S MSG(.2)="------------------------------------------------"
"RTN","EASMTL1",135,0)
 S MSG(.3)=""
"RTN","EASMTL1",136,0)
 S MSG(.4)="Beginning Processing Date: "_$$FMTE^XLFDT(EASLAST)
"RTN","EASMTL1",137,0)
 S MSG(.5)="Ending Processing Date:    "_$$FMTE^XLFDT(EASDT)
"RTN","EASMTL1",138,0)
 S MSG(.6)=""
"RTN","EASMTL1",139,0)
 S MSG(11)="  60-day Letters: "_EAS6CNT
"RTN","EASMTL1",140,0)
 S MSG(16)=""
"RTN","EASMTL1",141,0)
 S LINE=18
"RTN","EASMTL1",142,0)
 ;
"RTN","EASMTL1",143,0)
 S LINE=LINE+1
"RTN","EASMTL1",144,0)
 S MSG(LINE)="60 Day Letter Totals:    "
"RTN","EASMTL1",145,0)
 S EASD=0
"RTN","EASMTL1",146,0)
 F  S EASD=$O(EAS6CNT(EASD)) Q:'EASD  D
"RTN","EASMTL1",147,0)
 . I +$G(EAS6CNT(EASD)) D
"RTN","EASMTL1",148,0)
 . . S LINE=LINE+1
"RTN","EASMTL1",149,0)
 . . S MSG(LINE)="  "_$$FMTE^XLFDT(EASD)_" : "_EAS6CNT(EASD)
"RTN","EASMTL1",150,0)
 ;
"RTN","EASMTL1",151,0)
 S XMSUB="AUTO MT LETTER RESULTS - "_$$FMTE^XLFDT(EASDT)
"RTN","EASMTL1",152,0)
 S XMTEXT="MSG("
"RTN","EASMTL1",153,0)
 S XMY("G.EAS MTLETTERS")=""
"RTN","EASMTL1",154,0)
 S XMDUZ="AUTOMATED MT LETTERS"
"RTN","EASMTL1",155,0)
 D ^XMD
"RTN","EASMTL1",156,0)
 Q
"RTN","EASMTL10")
0^40^B29398415
"RTN","EASMTL10",1,0)
EASMTL10 ;MIN/TCM ALB/SCK - AUTOMATED MEANS TEST LETTERS - RERUN LETTERS ; 7/17/01
"RTN","EASMTL10",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;Mar 15, 2001
"RTN","EASMTL10",3,0)
 ;
"RTN","EASMTL10",4,0)
RERUN ;  Main entry point to rerun a processing date
"RTN","EASMTL10",5,0)
 N EASDDD,DIR,DIRUT,EATYP,ZTSAVE,EASLOC,EASKIP,EASLOC,EASIEN,EASX
"RTN","EASMTL10",6,0)
 ;
"RTN","EASMTL10",7,0)
 I $$GET1^DIQ(713,1,8,"I") D  Q:$D(DIRUT)
"RTN","EASMTL10",8,0)
 . S DIR(0)="YAO",DIR("B")="YES",DIR("A")="Print letters for a specific location? "
"RTN","EASMTL10",9,0)
 . S DIR("?")="'YES' to print for a specific location, 'NO' to print for all locations"
"RTN","EASMTL10",10,0)
 . D ^DIR K DIR
"RTN","EASMTL10",11,0)
 . Q:$D(DIRUT)
"RTN","EASMTL10",12,0)
 . S EASLOC=+Y
"RTN","EASMTL10",13,0)
 . I 'EASLOC Q
"RTN","EASMTL10",14,0)
 . S DIR(0)="P^EAS(713,1,2,:QEM"
"RTN","EASMTL10",15,0)
 . D ^DIR K DIR
"RTN","EASMTL10",16,0)
 . Q:$D(DIRUT)
"RTN","EASMTL10",17,0)
 . S EASIEN=+Y
"RTN","EASMTL10",18,0)
 . S EASLOC=$$GET1^DIQ(713.025,EASIEN_",1",.01,"I")_"^"_EASIEN
"RTN","EASMTL10",19,0)
 E  D
"RTN","EASMTL10",20,0)
 . S EASLOC=0
"RTN","EASMTL10",21,0)
 ;
"RTN","EASMTL10",22,0)
 D LIST^EASMTL10 ; Display available processing dates
"RTN","EASMTL10",23,0)
ASKDT ; Ask for processing date to look for letters
"RTN","EASMTL10",24,0)
 S DIR(0)="DAO^:DT:EP"
"RTN","EASMTL10",25,0)
 S DIR("?")="^D LIST^EASMTL10"
"RTN","EASMTL10",26,0)
 S DIR("?",1)="Select Processing Date:"
"RTN","EASMTL10",27,0)
 S DIR("A",1)=""
"RTN","EASMTL10",28,0)
 S DIR("A")="Enter processing date to re-run letters: "
"RTN","EASMTL10",29,0)
 D ^DIR K DIR
"RTN","EASMTL10",30,0)
 Q:$D(DIRUT)
"RTN","EASMTL10",31,0)
 I '$D(^EAS(713.2,"AD",+Y)) D  G ASKDT
"RTN","EASMTL10",32,0)
 . W !!?5,$CHAR(7),"There are no entries with this processing date, type '?' for list.",!
"RTN","EASMTL10",33,0)
 S EASDDD=+Y
"RTN","EASMTL10",34,0)
 Q:'EASDDD
"RTN","EASMTL10",35,0)
 ;
"RTN","EASMTL10",36,0)
TYPE ;  Ask for a specific type of letter to print
"RTN","EASMTL10",37,0)
 S DIR(0)="SO^1:60-Day;2:30-Day;4:0-Day"
"RTN","EASMTL10",38,0)
 S DIR("A")="Select letter type",DIR("A",1)=""
"RTN","EASMTL10",39,0)
 S DIR("?")="Select the type of letter to re-print "
"RTN","EASMTL10",40,0)
 D ^DIR K DIR
"RTN","EASMTL10",41,0)
 Q:$D(DIRUT)
"RTN","EASMTL10",42,0)
 S EATYP=+Y
"RTN","EASMTL10",43,0)
 ;
"RTN","EASMTL10",44,0)
 S EASTMP="^TMP(""EASMT"",$J)"
"RTN","EASMTL10",45,0)
 K @EASTMP
"RTN","EASMTL10",46,0)
 ;
"RTN","EASMTL10",47,0)
 D WAIT^DICD
"RTN","EASMTL10",48,0)
 D BLD(EATYP,EASLOC,EASDDD,EASTMP)
"RTN","EASMTL10",49,0)
 I '$D(@EASTMP) D  Q
"RTN","EASMTL10",50,0)
 . W !?3,$CHAR(7),">> No letters found to reprint for these parameters.",!
"RTN","EASMTL10",51,0)
 ;
"RTN","EASMTL10",52,0)
QUE1 ;  Queue off the print job
"RTN","EASMTL10",53,0)
 F EASX="EASTMP","EATYP","EASLOC" S ZTSAVE(EASX)=""
"RTN","EASMTL10",54,0)
 D EN^XUTMDEVQ("EN1^EASMTL10","EAS MT RERUN LETTERS",.ZTSAVE)
"RTN","EASMTL10",55,0)
 Q
"RTN","EASMTL10",56,0)
EN1 ;  Queued entry point for letter rerun
"RTN","EASMTL10",57,0)
 N EASIEN,RSLTOK,EASLC,EADEVICE,EASBJ,EASABRT
"RTN","EASMTL10",58,0)
 ;
"RTN","EASMTL10",59,0)
 S EADEVICE="`"_$G(ION)
"RTN","EASMTL10",60,0)
 S (EASIEN,RSLTOK)=0
"RTN","EASMTL10",61,0)
 S EASLC=+EASLOC
"RTN","EASMTL10",62,0)
 ;
"RTN","EASMTL10",63,0)
 F  S EASIEN=$O(@EASTMP@(EASLC,EATYP,EASIEN)) Q:'EASIEN  D  Q:$D(EASABRT)
"RTN","EASMTL10",64,0)
 . D LETTER^EASMTL6A(EASIEN,EATYP,0)
"RTN","EASMTL10",65,0)
 . I $E(IOST,1,2)="C-" D
"RTN","EASMTL10",66,0)
 . . S DIR(0)="E"
"RTN","EASMTL10",67,0)
 . . D ^DIR K DIR
"RTN","EASMTL10",68,0)
 . . S:'Y EASABRT=1
"RTN","EASMTL10",69,0)
 ;
"RTN","EASMTL10",70,0)
 K @EASTMP
"RTN","EASMTL10",71,0)
 Q
"RTN","EASMTL10",72,0)
 ;
"RTN","EASMTL10",73,0)
BLD(EATYP,EASLOC,EASDDD,EASTMP) ;  Sort letters for processing date in groups by type
"RTN","EASMTL10",74,0)
 N EASIEN,EASPTR,DFN,EASLTR
"RTN","EASMTL10",75,0)
 ;
"RTN","EASMTL10",76,0)
 S EASIEN=0
"RTN","EASMTL10",77,0)
 F  S EASIEN=$O(^EAS(713.2,"AD",EASDDD,EASIEN)) Q:'EASIEN  D
"RTN","EASMTL10",78,0)
 . ; Begin Checks
"RTN","EASMTL10",79,0)
 . S EASPTR=$$GET1^DIQ(713.2,EASIEN,2,"I")
"RTN","EASMTL10",80,0)
 . S DFN=$$GET1^DIQ(713.1,EASPTR,.01,"I")
"RTN","EASMTL10",81,0)
 . I +EASLOC D  Q:EASPRF'=+EASLOC
"RTN","EASMTL10",82,0)
 . . S EASPRF=$$GET1^DIQ(2,DFN,27.02,"I")
"RTN","EASMTL10",83,0)
 . Q:$D(^EAS(713.2,"AC",1,EASIEN))  ; Quit if MT has been returned
"RTN","EASMTL10",84,0)
 . Q:$D(^EAS(713.1,"AP",1,EASPTR))  ; Quit if prohibit flag set
"RTN","EASMTL10",85,0)
 . Q:$$CHECKMT^EASMTUTL(EASPTR,EASIEN)  ; Quit if MT no longer required
"RTN","EASMTL10",86,0)
 . Q:$$FUTMT^EASMTUTL(EASIEN)  ; Quit if future MT on file
"RTN","EASMTL10",87,0)
 . Q:$$DECEASED^EASMTUTL(EASIEN)  ; Quit if patient deceased
"RTN","EASMTL10",88,0)
 . I $$CHKADR^EASMTL6A(EASPTR),EATYP'=3 Q
"RTN","EASMTL10",89,0)
 . S @EASTMP@($P(EASLOC,U),EATYP,EASIEN)=""
"RTN","EASMTL10",90,0)
 Q
"RTN","EASMTL10",91,0)
 ;
"RTN","EASMTL10",92,0)
PRINT ;  Print out letters selected for reprinting
"RTN","EASMTL10",93,0)
 Q
"RTN","EASMTL10",94,0)
 ;
"RTN","EASMTL10",95,0)
SINGLE ;  Rerun a single letter
"RTN","EASMTL10",96,0)
 N Y,DIR,DIRUT,EASPTR,DFN,EASIEN,ZTSAVE,EASLOC,IOP,EAX,PRNOVRD
"RTN","EASMTL10",97,0)
 ;
"RTN","EASMTL10",98,0)
ASKPAT ;  Select patient to reprint a letter for
"RTN","EASMTL10",99,0)
 S DIR(0)="PAO^713.1:EMZ"
"RTN","EASMTL10",100,0)
 S DIR("A")="Select PATIENT: "
"RTN","EASMTL10",101,0)
 S DIR("?")="Select Patient Letter status entry to reprint"
"RTN","EASMTL10",102,0)
 D ^DIR K DIR
"RTN","EASMTL10",103,0)
 Q:$D(DIRUT)
"RTN","EASMTL10",104,0)
 S EASPTR=+Y ; Ptr to file 713.1
"RTN","EASMTL10",105,0)
 S DFN=+Y(0)
"RTN","EASMTL10",106,0)
 Q:'DFN
"RTN","EASMTL10",107,0)
 ;
"RTN","EASMTL10",108,0)
 I $D(^EAS(713.1,"AP",1,EASPTR)) D  Q
"RTN","EASMTL10",109,0)
 . W !!?4,$CHAR(7),"The Prohibit flag is set for this patient"
"RTN","EASMTL10",110,0)
 I $$DECEASED^EASMTUTL("",DFN) D  Q
"RTN","EASMTL10",111,0)
 . W !!?4,$CHAR(7),"Patient is deceased"
"RTN","EASMTL10",112,0)
 ;
"RTN","EASMTL10",113,0)
ASKLTR ;  Select LETTER STATUS file entry
"RTN","EASMTL10",114,0)
 S DIR(0)="P^713.2:EMZ"
"RTN","EASMTL10",115,0)
 S DIR("?",1)="Select Processing Date: "
"RTN","EASMTL10",116,0)
 S DIR("A")="Select the letter processing date for this patient"
"RTN","EASMTL10",117,0)
 S DIR("S")="I $P(^(0),U,2)=EASPTR" ; Set screen for selected patient
"RTN","EASMTL10",118,0)
 D ^DIR K DIR
"RTN","EASMTL10",119,0)
 Q:$D(DIRUT)
"RTN","EASMTL10",120,0)
 S EASIEN=+Y
"RTN","EASMTL10",121,0)
 ;
"RTN","EASMTL10",122,0)
 I $$GET1^DIQ(713.2,EASIEN,4,"I") D  Q
"RTN","EASMTL10",123,0)
 . W !!?4,$CHAR(7),"A Means Test has already been returned by this patient"
"RTN","EASMTL10",124,0)
 ;
"RTN","EASMTL10",125,0)
 I $$CHECKMT^EASMTUTL(EASPTR,EASIEN) D  Q
"RTN","EASMTL10",126,0)
 . W !!?4,$CHAR(7),"Patient's Means Test is no longer required"
"RTN","EASMTL10",127,0)
 ;
"RTN","EASMTL10",128,0)
ASKTYP ; Allow only letters already sent to be reprinted
"RTN","EASMTL10",129,0)
 N EASSC,EAX
"RTN","EASMTL10",130,0)
 ;
"RTN","EASMTL10",131,0)
 F EAX=6,4,"Z" D
"RTN","EASMTL10",132,0)
 . I $P(^EAS(713.2,EASIEN,EAX),U,3) D
"RTN","EASMTL10",133,0)
 . . I EAX=6 S EASSC=$G(EASSC)_"1:60-Day;"
"RTN","EASMTL10",134,0)
 . . I EAX=4 S EASSC=$G(EASSC)_"2:30-Day;"
"RTN","EASMTL10",135,0)
 . . I EAX="Z" S EASSC=$G(EASSC)_"4:0-Day"
"RTN","EASMTL10",136,0)
 I $G(EASSC)']""  D  Q
"RTN","EASMTL10",137,0)
 . W !!?4,$CHAR(7),"There are no letters to re-print for this patient"
"RTN","EASMTL10",138,0)
 ;
"RTN","EASMTL10",139,0)
 S DIR(0)="SO^"_EASSC,DIR("A")="Select letter type"
"RTN","EASMTL10",140,0)
 S DIR("?")="Select letter type to re-print"
"RTN","EASMTL10",141,0)
 D ^DIR K DIR
"RTN","EASMTL10",142,0)
 Q:$D(DIRUT)
"RTN","EASMTL10",143,0)
 S EATYP=+Y
"RTN","EASMTL10",144,0)
 ;
"RTN","EASMTL10",145,0)
QUE2 ;  Que off print letter
"RTN","EASMTL10",146,0)
 S ZTSAVE("EASIEN")="",ZTSAVE("EASPTR")="",ZTSAVE("EATYP")="",ZTSAVE("EASLOC")=""
"RTN","EASMTL10",147,0)
 D EN^XUTMDEVQ("EN2^EASMTL10","EAS MT RERUN SINGLE LETTER",.ZTSAVE)
"RTN","EASMTL10",148,0)
 Q
"RTN","EASMTL10",149,0)
 ;
"RTN","EASMTL10",150,0)
EN2 ;  Queued entry point to re-run a single letter
"RTN","EASMTL10",151,0)
 ;
"RTN","EASMTL10",152,0)
 D LETTER^EASMTL6A(EASIEN,EATYP,0)
"RTN","EASMTL10",153,0)
 Q
"RTN","EASMTL10",154,0)
 ;
"RTN","EASMTL10",155,0)
LIST ;  List last processing dates for the Letter Status file
"RTN","EASMTL10",156,0)
 N EAX
"RTN","EASMTL10",157,0)
 ;
"RTN","EASMTL10",158,0)
 W !!,"Available Processing Dates:"
"RTN","EASMTL10",159,0)
 S EAX=0
"RTN","EASMTL10",160,0)
 F  S EAX=$O(^EAS(713.2,"AD",EAX)) Q:'EAX  D
"RTN","EASMTL10",161,0)
 . W !?6,$$FMTE^XLFDT(EAX,"2D")
"RTN","EASMTL10",162,0)
 Q
"RTN","EASMTL2")
0^5^B13839350
"RTN","EASMTL2",1,0)
EASMTL2 ;MIN/TCM ALB/SCK - AUTOMATED MEANS TEST LETTER - SEARCH ; 7/3/01
"RTN","EASMTL2",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;MAR 15,2001
"RTN","EASMTL2",3,0)
 ;
"RTN","EASMTL2",4,0)
EN60 ; Entry point for inital 60-day letter search for candidates 
"RTN","EASMTL2",5,0)
 N EASIEN,DFN,VADM,CNT,ANNVDT,EASLAST
"RTN","EASMTL2",6,0)
 ;
"RTN","EASMTL2",7,0)
 S CNT=0 ; Initialize counter
"RTN","EASMTL2",8,0)
 S ANNVDT=EASDT("ANV")
"RTN","EASMTL2",9,0)
 ; Check for means test data to process, quit if none found
"RTN","EASMTL2",10,0)
 Q:'$D(^DGMT(408.31,"B",ANNVDT))
"RTN","EASMTL2",11,0)
 ;
"RTN","EASMTL2",12,0)
 ; Retieve data for each Means Test entry being processed
"RTN","EASMTL2",13,0)
 S EASIEN=0
"RTN","EASMTL2",14,0)
 F  S EASIEN=$O(^DGMT(408.31,"B",ANNVDT,EASIEN)) Q:EASIEN'>0  D
"RTN","EASMTL2",15,0)
 . ; Quit further processing if means test is not MEANS TEST type
"RTN","EASMTL2",16,0)
 . Q:'$$GET1^DIQ(408.31,EASIEN,.019,"I")=1
"RTN","EASMTL2",17,0)
 . S DFN=$$GET1^DIQ(408.31,EASIEN,.02,"I") ; get patient's DFN
"RTN","EASMTL2",18,0)
 . ; Check conditions; if all passed, add new entry to worklist file, #713.2
"RTN","EASMTL2",19,0)
 . Q:'DFN                         ; Safety check for DFN
"RTN","EASMTL2",20,0)
 . S EASLAST=$$LST^DGMTU(DFN)     ; Get last MT on file
"RTN","EASMTL2",21,0)
 . Q:'(+EASLAST=EASIEN)  ; Not the latest MT record for patient
"RTN","EASMTL2",22,0)
 . Q:"L,N"[$P(EASLAST,U,4)        ; Quit, patient no longer requires means test (No Longer Applicable or No Longer Required)
"RTN","EASMTL2",23,0)
 . Q:$$DECEASED^EASMTUTL("",DFN)  ; Quit if patient deceased
"RTN","EASMTL2",24,0)
 . ;  If passed through all condition checks, update files
"RTN","EASMTL2",25,0)
 . Q:$$CHKSTAT(EASIEN,DFN)         ; Check current MT status
"RTN","EASMTL2",26,0)
 . Q:$$FUTURE(DFN)  ; Quit if a future means test is on file
"RTN","EASMTL2",27,0)
 . D NEWSTAT(DFN,.EASPT)
"RTN","EASMTL2",28,0)
 . Q:'EASPT  ; Safety check
"RTN","EASMTL2",29,0)
 . Q:'$$NEWLTR(EASPT,.EASDT)  ; Quit if letter status was not updated
"RTN","EASMTL2",30,0)
 . ; Finally, Update the counters
"RTN","EASMTL2",31,0)
 . S CNT=CNT+1
"RTN","EASMTL2",32,0)
 S EAS6CNT(EASPRCDT)=CNT,EAS6CNT=EAS6CNT+CNT
"RTN","EASMTL2",33,0)
 Q
"RTN","EASMTL2",34,0)
 ;
"RTN","EASMTL2",35,0)
NEWLTR(EASPT,EASDT) ; Add new entry to the work list file #713.2.
"RTN","EASMTL2",36,0)
 ; Input
"RTN","EASMTL2",37,0)
 ;   EASPT  - Ptr to 713.1 file
"RTN","EASMTL2",38,0)
 ;   EASDT  - Worklist date array
"RTN","EASMTL2",39,0)
 ;
"RTN","EASMTL2",40,0)
 ; Output
"RTN","EASMTL2",41,0)
 ;   RSLT   - 1 if new letter status entry added
"RTN","EASMTL2",42,0)
 ;            0 if new letter status was not added
"RTN","EASMTL2",43,0)
 ;
"RTN","EASMTL2",44,0)
 N ANNVDT,FDA,RSLT
"RTN","EASMTL2",45,0)
 ;
"RTN","EASMTL2",46,0)
 S ANNVDT=EASDT("ANV")
"RTN","EASMTL2",47,0)
 ;
"RTN","EASMTL2",48,0)
 ;; Check for an existing entry for patient and anniversary date
"RTN","EASMTL2",49,0)
 I $D(^EAS(713.2,"AN",EASPT,ANNVDT)) Q 0 ; Quit if duplicate entry
"RTN","EASMTL2",50,0)
 ;
"RTN","EASMTL2",51,0)
 ; Add new entry to the letter status file, #713.2
"RTN","EASMTL2",52,0)
 S FDA(1,713.2,"+1,",.01)=EADT
"RTN","EASMTL2",53,0)
 S FDA(1,713.2,"+1,",2)=EASPT
"RTN","EASMTL2",54,0)
 S FDA(1,713.2,"+1,",3)=ANNVDT
"RTN","EASMTL2",55,0)
 S FDA(1,713.2,"+1,",4)=0
"RTN","EASMTL2",56,0)
 S FDA(1,713.2,"+1,",8)=EASDT("60")
"RTN","EASMTL2",57,0)
 S FDA(1,713.2,"+1,",11)=EASDT("30")
"RTN","EASMTL2",58,0)
 S FDA(1,713.2,"+1,",17)=EASDT("0")
"RTN","EASMTL2",59,0)
 S FDA(1,713.2,"+1,",9)=1
"RTN","EASMTL2",60,0)
 D UPDATE^DIE("","FDA(1)","","ERRMSG")
"RTN","EASMTL2",61,0)
 Q 1
"RTN","EASMTL2",62,0)
 ;
"RTN","EASMTL2",63,0)
UPDLTR(EAS1,TYPE) ; Update Flagged to print field for letter type
"RTN","EASMTL2",64,0)
 ; Input
"RTN","EASMTL2",65,0)
 ;   EAS1  - Ptr to file 713.2
"RTN","EASMTL2",66,0)
 ;   TYPE  - Letter type
"RTN","EASMTL2",67,0)
 ;
"RTN","EASMTL2",68,0)
 N DIE,DR,DA
"RTN","EASMTL2",69,0)
 ;
"RTN","EASMTL2",70,0)
 S DIE="^EAS(713.2,",DA=EAS1
"RTN","EASMTL2",71,0)
 S DR=$S(TYPE=2:12,TYPE=4:18,1:0)
"RTN","EASMTL2",72,0)
 Q:'DR
"RTN","EASMTL2",73,0)
 S DR=DR_"///1"
"RTN","EASMTL2",74,0)
 D ^DIE K DIE
"RTN","EASMTL2",75,0)
 Q
"RTN","EASMTL2",76,0)
 ;
"RTN","EASMTL2",77,0)
NEWSTAT(DFN,EASPT) ; Update the Patient status file, #713.1
"RTN","EASMTL2",78,0)
 ; Input
"RTN","EASMTL2",79,0)
 ;   DFN   - Patient's DFN
"RTN","EASMTL2",80,0)
 ;   EASPT - Return Var, New IEN to 713.1 file
"RTN","EASMTL2",81,0)
 ;
"RTN","EASMTL2",82,0)
 N EASIEN
"RTN","EASMTL2",83,0)
 ;
"RTN","EASMTL2",84,0)
 ; Create new entry in the patient status file
"RTN","EASMTL2",85,0)
 I '$D(^EAS(713.1,"B",DFN)) D  Q
"RTN","EASMTL2",86,0)
 . S X=DFN,DIC="^EAS(713.1,",DIC(0)="Z"
"RTN","EASMTL2",87,0)
 . S DIC("DR")="2///0"
"RTN","EASMTL2",88,0)
 . D FILE^DICN K DIC
"RTN","EASMTL2",89,0)
 . S EASPT=+Y
"RTN","EASMTL2",90,0)
 ;
"RTN","EASMTL2",91,0)
 I $D(^EAS(713.1,"B",DFN)) D
"RTN","EASMTL2",92,0)
 . Q:'DFN
"RTN","EASMTL2",93,0)
 . S EASPT=$O(^EAS(713.1,"B",DFN,0))
"RTN","EASMTL2",94,0)
 Q
"RTN","EASMTL2",95,0)
 ;
"RTN","EASMTL2",96,0)
PRNTDT(EARY,ETYPE) ; Retrieve Print date and flagged to print status for letter type
"RTN","EASMTL2",97,0)
 ; Input
"RTN","EASMTL2",98,0)
 ;    EARY  - Data array from Patient Status file, #713.1, MT Anniversary date field, #11
"RTN","EASMTL2",99,0)
 ;    ETYPE - Search type, 30 or 0 day
"RTN","EASMTL2",100,0)
 ;
"RTN","EASMTL2",101,0)
 ; Output
"RTN","EASMTL2",102,0)
 ;    RSLT = Print date ^ Flagged to print status
"RTN","EASMTL2",103,0)
 ;           will be 0^0 if nothing found to return
"RTN","EASMTL2",104,0)
 ;
"RTN","EASMTL2",105,0)
 N RSLT
"RTN","EASMTL2",106,0)
 ;
"RTN","EASMTL2",107,0)
 S RSLT=$S(ETYPE=2:EARY(11,"I"),ETYPE=4:EARY(17,"I"),1:0)
"RTN","EASMTL2",108,0)
 S RSLT=RSLT_"^"_+$S(ETYPE=2:EARY(12,"I"),ETYPE=4:EARY(18,"I"),1:0)
"RTN","EASMTL2",109,0)
 Q RSLT
"RTN","EASMTL2",110,0)
 ;
"RTN","EASMTL2",111,0)
CHKSTAT(EASIEN,DFN) ; Check for means test status, still required or not
"RTN","EASMTL2",112,0)
 ; Input
"RTN","EASMTL2",113,0)
 ;    EASIEN  - Internal Entry Number to the ANNUAL MEANS TEST File, #408.31
"RTN","EASMTL2",114,0)
 ;
"RTN","EASMTL2",115,0)
 ; Output
"RTN","EASMTL2",116,0)
 ;    1 - if means test is no longer required or applicable
"RTN","EASMTL2",117,0)
 ;    0 - if means test is still required
"RTN","EASMTL2",118,0)
 ;
"RTN","EASMTL2",119,0)
 N RSLT,EASTAT
"RTN","EASMTL2",120,0)
 ;
"RTN","EASMTL2",121,0)
 ; If status = "NO LONGER REQUIRED" or "NO LONGER APPLICABLE" then set result to 1
"RTN","EASMTL2",122,0)
 ; The .03 field is a pointer to the MEANS TEST STATUS File, #408.32, checks
"RTN","EASMTL2",123,0)
 ; IEN=3 and IEN=10, NO LONGER REQUIRED and NO LONGER APPLICABLE entries respectively 
"RTN","EASMTL2",124,0)
 ; If the 408.32 file is changed, this code will need to be reviewed and updated if necessary.
"RTN","EASMTL2",125,0)
 ;
"RTN","EASMTL2",126,0)
 S RSLT=0,DFN=$G(DFN)
"RTN","EASMTL2",127,0)
 ;
"RTN","EASMTL2",128,0)
 S EASTAT=$$GET1^DIQ(408.31,EASIEN,.03,"I")
"RTN","EASMTL2",129,0)
 I (EASTAT=3)!(EASTAT=10) S RSLT=1
"RTN","EASMTL2",130,0)
 ;
"RTN","EASMTL2",131,0)
 ;; Check current MT Status from API (Looking for Cat-C, Agree to Pay Dedct, MT later than 10-5-99
"RTN","EASMTL2",132,0)
 I 'RSLT D
"RTN","EASMTL2",133,0)
 . S:'$$MTCHK^EASMTCHK(DFN,"L") RSLT=1
"RTN","EASMTL2",134,0)
 ;
"RTN","EASMTL2",135,0)
 Q $G(RSLT)
"RTN","EASMTL2",136,0)
 ;
"RTN","EASMTL2",137,0)
FUTURE(DFN) ;
"RTN","EASMTL2",138,0)
 N RSLT
"RTN","EASMTL2",139,0)
 ;
"RTN","EASMTL2",140,0)
 S RSLT=$$FUT^DGMTU(DFN)
"RTN","EASMTL2",141,0)
 Q $G(RSLT)
"RTN","EASMTL6")
0^10^B43402900
"RTN","EASMTL6",1,0)
EASMTL6 ; MIN/TCM ALB/SCK - AUTOMATED MEANS TEST LETTER-PRINT LETTERS ; 7-13-01
"RTN","EASMTL6",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;MAR 15,2001
"RTN","EASMTL6",3,0)
 ;
"RTN","EASMTL6",4,0)
EN ; Main entry point
"RTN","EASMTL6",5,0)
 ; Input, set in option call, if not passed in, or called interactively, user is asked to specify.
"RTN","EASMTL6",6,0)
 ;    EATYP - Used for selective printing of letters and forms
"RTN","EASMTL6",7,0)
 ;         1 : 60-Day
"RTN","EASMTL6",8,0)
 ;         2 : 30-Day
"RTN","EASMTL6",9,0)
 ;         4 :  0-Day
"RTN","EASMTL6",10,0)
 ;
"RTN","EASMTL6",11,0)
 N DIR,DIRUT,Y,ZTSAVE,EASLOC,EASIEN
"RTN","EASMTL6",12,0)
 N EASUSR,EASDEV,EASTMP,EASKP,EAPLOC
"RTN","EASMTL6",13,0)
 ;
"RTN","EASMTL6",14,0)
 ;; Select type of letter to print
"RTN","EASMTL6",15,0)
 I '$G(EATYP) D  Q:$D(DIRUT)
"RTN","EASMTL6",16,0)
 . S DIR(0)="SO^1:60-Day;2:30-Day;4:0-Day;A:All"
"RTN","EASMTL6",17,0)
 . S DIR("B")=$S($G(EATYP)]"":EATYP,1:"ALL")
"RTN","EASMTL6",18,0)
 . S DIR("?")="Select letter or ""A"" for All"
"RTN","EASMTL6",19,0)
 . D ^DIR K DIR
"RTN","EASMTL6",20,0)
 . S EATYP=+Y
"RTN","EASMTL6",21,0)
 ;
"RTN","EASMTL6",22,0)
 ;; Restrict letters to a specific location, or print all letters
"RTN","EASMTL6",23,0)
 I $$GET1^DIQ(713,1,8,"I") D  Q:$D(DIRUT)
"RTN","EASMTL6",24,0)
 . S DIR(0)="YAO",DIR("B")="YES",DIR("A")="Print letters for a specific location? "
"RTN","EASMTL6",25,0)
 . S DIR("?")="'YES' to print for a specific location, 'NO' to print for all locations"
"RTN","EASMTL6",26,0)
 . D ^DIR K DIR
"RTN","EASMTL6",27,0)
 . Q:$D(DIRUT)
"RTN","EASMTL6",28,0)
 . S EASLOC=+Y
"RTN","EASMTL6",29,0)
 . ;
"RTN","EASMTL6",30,0)
 . I 'EASLOC Q
"RTN","EASMTL6",31,0)
 . S DIR(0)="P^EAS(713,1,2,:QEM"
"RTN","EASMTL6",32,0)
 . D ^DIR K DIR
"RTN","EASMTL6",33,0)
 . Q:$D(DIRUT)
"RTN","EASMTL6",34,0)
 . S EASIEN=+Y
"RTN","EASMTL6",35,0)
 . S EASLOC("LOC")=$$GET1^DIQ(713.025,EASIEN_",1",.01,"I")_"^"_EASIEN
"RTN","EASMTL6",36,0)
 ;
"RTN","EASMTL6",37,0)
 S EASTMP="^TMP(""EASMT"",$J)" ; Clean out TMP array for sorting letters
"RTN","EASMTL6",38,0)
 K @EASTMP
"RTN","EASMTL6",39,0)
 ;
"RTN","EASMTL6",40,0)
 I $G(EASLOC) S EAPLOC=EASLOC("LOC")
"RTN","EASMTL6",41,0)
 E  S EAPLOC=0
"RTN","EASMTL6",42,0)
 W !!,"Scanning for letters"
"RTN","EASMTL6",43,0)
 D WAIT^DICD
"RTN","EASMTL6",44,0)
 D BLD(EATYP,EAPLOC,EASTMP,.EASKP)
"RTN","EASMTL6",45,0)
 W !?4,"     Letters to print: ",$J($FN(EASKP("CNT"),","),8)
"RTN","EASMTL6",46,0)
 W !?4,"Threshold not reached: ",$J($FN(EASKP("T"),","),8)
"RTN","EASMTL6",47,0)
 W !!?4,"The following letters were found, their printing will be canceled"
"RTN","EASMTL6",48,0)
 W !?4," Incomplete Addr : ",$J($FN(EASKP("I"),","),8)
"RTN","EASMTL6",49,0)
 W !?4,"        Deceased : ",$J($FN(EASKP("D"),","),8)
"RTN","EASMTL6",50,0)
 W !?4,"       MT Changed: ",$J($FN(EASKP("C"),","),8)
"RTN","EASMTL6",51,0)
 W !?4,"Prohibit flag set: ",$J($FN(EASKP("P"),","),8)
"RTN","EASMTL6",52,0)
 W !
"RTN","EASMTL6",53,0)
 S DIR(0)="YAO",DIR("B")="YES",DIR("A")="Continue? "
"RTN","EASMTL6",54,0)
 D ^DIR K DIR
"RTN","EASMTL6",55,0)
 I $D(DIRUT)!('Y) D  Q
"RTN","EASMTL6",56,0)
 . K EATYP,@EASTMP
"RTN","EASMTL6",57,0)
 ;
"RTN","EASMTL6",58,0)
 D PRINT(EATYP,EAPLOC,EASTMP)
"RTN","EASMTL6",59,0)
 K @EASTMP ; Clean out TMP array for sorting letters
"RTN","EASMTL6",60,0)
 D HOME^%ZIS
"RTN","EASMTL6",61,0)
 K EATYP
"RTN","EASMTL6",62,0)
 Q
"RTN","EASMTL6",63,0)
 ;
"RTN","EASMTL6",64,0)
BLD(EATYP,EASLOC,EASTMP,EASKP) ; Build TMP array of letters to print
"RTN","EASMTL6",65,0)
 N EASLTR,DFN,EADEM,EASIEN,EASPT,COUNT,EAX2,EASPTR
"RTN","EASMTL6",66,0)
 ;
"RTN","EASMTL6",67,0)
 F EAX2="P","D","C","F","T","I","CNT" S EASKP(EAX2)=0
"RTN","EASMTL6",68,0)
 S COUNT=0
"RTN","EASMTL6",69,0)
 ;
"RTN","EASMTL6",70,0)
 S EASIEN=0 ; Begin loop through un-returned means tests
"RTN","EASMTL6",71,0)
 F  S EASIEN=$O(^EAS(713.2,"AC",0,EASIEN)) Q:'EASIEN  D
"RTN","EASMTL6",72,0)
 . S EASPTR=$$GET1^DIQ(713.2,EASIEN,2,"I") ; Pointer to File 713.1
"RTN","EASMTL6",73,0)
 . ;; begin checks
"RTN","EASMTL6",74,0)
 . I $D(^EAS(713.1,"AP",1,EASPTR)) D  Q  ; Check Prohibit letter
"RTN","EASMTL6",75,0)
 . . D CLRFLG^EASMTUTL(0,EASIEN)
"RTN","EASMTL6",76,0)
 . . S EASKP("P")=EASKP("P")+1
"RTN","EASMTL6",77,0)
 . I $$DECEASED^EASMTUTL(EASIEN) D  Q  ; Check Deceased
"RTN","EASMTL6",78,0)
 . . D CLRFLG^EASMTUTL(0,EASIEN)
"RTN","EASMTL6",79,0)
 . . S EASKP("D")=EASKP("D")+1
"RTN","EASMTL6",80,0)
 . I $$CHECKMT^EASMTUTL(EASPTR,EASIEN) D  Q  ; Check MT changed?
"RTN","EASMTL6",81,0)
 . . D CLRFLG^EASMTUTL(0,EASIEN)
"RTN","EASMTL6",82,0)
 . . S EASKP("C")=EASKP("C")+1 Q  ; Check MT changed?
"RTN","EASMTL6",83,0)
 . I $$FUTMT^EASMTUTL(EASIEN) D  Q  ; Check Future MT
"RTN","EASMTL6",84,0)
 . . D CLRFLG^EASMTUTL(0,EASIEN)
"RTN","EASMTL6",85,0)
 . . S EASKP("F")=EASKP("F")+1
"RTN","EASMTL6",86,0)
 . I '$$LTRTYP^EASMTL6B(EASIEN,.EASLTR) Q  ; Check Pending letter
"RTN","EASMTL6",87,0)
 . I EATYP,EASLTR'=EATYP Q  ; Check default or selected letter type
"RTN","EASMTL6",88,0)
 . S DFN=+$G(^EAS(713.1,EASPTR,0))
"RTN","EASMTL6",89,0)
 . I +EASLOC,+EASLOC'=$$GET1^DIQ(2,DFN,27.02,"I") Q  ; Check Location
"RTN","EASMTL6",90,0)
 . I '$$THRSHLD(EASLTR,EASIEN) D  Q  ; Quit if letter threshold not reached
"RTN","EASMTL6",91,0)
 . . S EASKP("T")=EASKP("T")+1
"RTN","EASMTL6",92,0)
 . I $$CHKADR^EASMTL6A(EASPTR),EASLTR'=3 D  Q  ; Check for valid address
"RTN","EASMTL6",93,0)
 . . S EASKP("I")=EASKP("I")+1
"RTN","EASMTL6",94,0)
 . S @EASTMP@($P(EASLOC,U),EASLTR,EASIEN)="" ; Build entry
"RTN","EASMTL6",95,0)
 . S EASKP("CNT")=EASKP("CNT")+1
"RTN","EASMTL6",96,0)
 Q
"RTN","EASMTL6",97,0)
 ;
"RTN","EASMTL6",98,0)
PRINT(EATYP,EASLOC,EASTMP) ; Print batched letters
"RTN","EASMTL6",99,0)
 N RSLTOK,EASABRT,ZTRTN,ZTSAVE
"RTN","EASMTL6",100,0)
 ;
"RTN","EASMTL6",101,0)
 Q:'$D(@EASTMP)
"RTN","EASMTL6",102,0)
 I 'EATYP D
"RTN","EASMTL6",103,0)
 . S ZTRTN="PRNALL^EASMTL6"
"RTN","EASMTL6",104,0)
 E  D
"RTN","EASMTL6",105,0)
 . S ZTRTN="PRNTYP^EASMTL6"
"RTN","EASMTL6",106,0)
 S ZTSAVE("EATYP")="",ZTSAVE("EASLOC")="",ZTSAVE("EASTMP")=""
"RTN","EASMTL6",107,0)
 D EN^XUTMDEVQ(ZTRTN,"EAS MT LETTER PRINT",.ZTSAVE)
"RTN","EASMTL6",108,0)
 Q
"RTN","EASMTL6",109,0)
 ;
"RTN","EASMTL6",110,0)
PRNTYP ; Print a specific type of letter only
"RTN","EASMTL6",111,0)
 N EASIEN,EASLC,EASABRT
"RTN","EASMTL6",112,0)
 ;
"RTN","EASMTL6",113,0)
 S EASLC=+EASLOC,EASIEN=0
"RTN","EASMTL6",114,0)
 F  S EASIEN=$O(@EASTMP@(EASLC,EATYP,EASIEN)) Q:'EASIEN  D  Q:$G(EASABRT)
"RTN","EASMTL6",115,0)
 . D LETTER^EASMTL6A(EASIEN,EATYP,0)
"RTN","EASMTL6",116,0)
 . D UPDSTAT(EASIEN,EATYP) ; Update Letter status file, #713.2
"RTN","EASMTL6",117,0)
 . I $E(IOST,1,2)="C-" D
"RTN","EASMTL6",118,0)
 . . S DIR(0)="E"
"RTN","EASMTL6",119,0)
 . . D ^DIR K DIR
"RTN","EASMTL6",120,0)
 . . S:'Y EASABRT=1
"RTN","EASMTL6",121,0)
 Q
"RTN","EASMTL6",122,0)
 ;
"RTN","EASMTL6",123,0)
PRNALL ; Print all types of letters
"RTN","EASMTL6",124,0)
 N EASLC,EAX,EASIEN,EASABRT
"RTN","EASMTL6",125,0)
 ;
"RTN","EASMTL6",126,0)
 S EASLC=+EASLOC
"RTN","EASMTL6",127,0)
 F EAX=1,2,4 D  Q:$G(EASABRT)
"RTN","EASMTL6",128,0)
 . S EASIEN=0
"RTN","EASMTL6",129,0)
 . F  S EASIEN=$O(@EASTMP@(EASLC,EAX,EASIEN)) Q:'EASIEN  D  Q:$G(EASABRT)
"RTN","EASMTL6",130,0)
 . . D LETTER^EASMTL6A(EASIEN,EAX,0,.RSLTOK)
"RTN","EASMTL6",131,0)
 . . I $E(IOST,1,2)="C-" D  Q:$G(EASABRT)
"RTN","EASMTL6",132,0)
 . . . S DIR(0)="E"
"RTN","EASMTL6",133,0)
 . . . D ^DIR K DIR
"RTN","EASMTL6",134,0)
 . . . S:'Y EASABRT=1
"RTN","EASMTL6",135,0)
 . . D UPDSTAT(EASIEN,EAX) ; Update Letter status file, #713.2
"RTN","EASMTL6",136,0)
 Q
"RTN","EASMTL6",137,0)
 ;
"RTN","EASMTL6",138,0)
THRSHLD(EATYP,EASIEN) ; Check threshold for letter types
"RTN","EASMTL6",139,0)
 ; Input
"RTN","EASMTL6",140,0)
 ;    EATYP  - Letter type to print
"RTN","EASMTL6",141,0)
 ;    EASIEN - IEN for file #713.2
"RTN","EASMTL6",142,0)
 ;
"RTN","EASMTL6",143,0)
 ; Output
"RTN","EASMTL6",144,0)
 ;    RSLT = 1: Letter is inside threshold to print
"RTN","EASMTL6",145,0)
 ;           0: Letter is outside threshold (Don't print)
"RTN","EASMTL6",146,0)
 ;
"RTN","EASMTL6",147,0)
 N DIFF,THRESH,RSLT,ANVDT,MTDT
"RTN","EASMTL6",148,0)
 ;
"RTN","EASMTL6",149,0)
 S RSLT=1
"RTN","EASMTL6",150,0)
 Q:'$G(EATYP)
"RTN","EASMTL6",151,0)
 S THRESH=$S(EATYP=1:60,EATYP=2:30,1:0)
"RTN","EASMTL6",152,0)
 S MTDT=$$GET1^DIQ(713.2,EASIEN,3,"I")
"RTN","EASMTL6",153,0)
 S ANVDT=$$FMADD^XLFDT(MTDT,365)
"RTN","EASMTL6",154,0)
 S DIFF=$$FMDIFF^XLFDT(ANVDT,$$DT^XLFDT)
"RTN","EASMTL6",155,0)
 I DIFF>THRESH S RSLT=0
"RTN","EASMTL6",156,0)
 Q RSLT
"RTN","EASMTL6",157,0)
 ;
"RTN","EASMTL6",158,0)
UPDSTAT(EASN,EAX) ;
"RTN","EASMTL6",159,0)
 N DIE,DR,DA,EAPD,EAFLG,NXTFLG
"RTN","EASMTL6",160,0)
 ;
"RTN","EASMTL6",161,0)
 ; Update Letter status file, #713.2
"RTN","EASMTL6",162,0)
 S DIE="^EAS(713.2,",DA=EASN
"RTN","EASMTL6",163,0)
 S DR=$S(EAX=1:10,EAX=2:13,EAX=4:19,1:0)
"RTN","EASMTL6",164,0)
 Q:'DR
"RTN","EASMTL6",165,0)
 S EAPD=DR_".5",EAFLG=DR-1
"RTN","EASMTL6",166,0)
 S DR=DR_"///1;"_EAPD_"///^S X=$$DT^XLFDT;"_EAFLG_"///0"
"RTN","EASMTL6",167,0)
 S NXTFLG=$S(EAFLG=9:12,EAFLG=12:15,1:0)
"RTN","EASMTL6",168,0)
 S:NXTFLG>0 DR=DR_";"_NXTFLG_"///1"
"RTN","EASMTL6",169,0)
 D ^DIE K DIE
"RTN","EASMTL6",170,0)
 D CLRFLG^EASMTUTL(EAX,EASN)
"RTN","EASMTL6",171,0)
 Q
"RTN","EASMTL6",172,0)
 ;
"RTN","EASMTL6",173,0)
GETFAC(EADFN,EASARY,EASDEF) ;  set facility return address information
"RTN","EASMTL6",174,0)
 N EASITE,EAS4,EASIEN,EAX,RSLT,EAPFAC
"RTN","EASMTL6",175,0)
 ;
"RTN","EASMTL6",176,0)
 S EASDEF=$G(EASDEF)
"RTN","EASMTL6",177,0)
 S RSLT=1
"RTN","EASMTL6",178,0)
 S EASARY("PRIM")=$$SITE^VASITE ; Get Primary facility
"RTN","EASMTL6",179,0)
 S EASARY("PREF")=$$GET1^DIQ(2,EADFN,27.02,"I") ; Get preferred facility
"RTN","EASMTL6",180,0)
 ;
"RTN","EASMTL6",181,0)
 ;  If a preferred facility is not defined, then default to the primary facility
"RTN","EASMTL6",182,0)
 S EAPFAC=EASARY("PREF")
"RTN","EASMTL6",183,0)
 S:'EAPFAC EAPFAC=+EASARY("PRIM")
"RTN","EASMTL6",184,0)
 I EASDEF S EAPFAC=+EASARY("PRIM") ; Toggle to primary facility
"RTN","EASMTL6",185,0)
 Q:'EAPFAC
"RTN","EASMTL6",186,0)
 ;
"RTN","EASMTL6",187,0)
 ;  Get return address for selected facility
"RTN","EASMTL6",188,0)
 D GETS^DIQ(4,EAPFAC,".01;1.01;1.02;1.03;1.04;.02;100","EI","EAS4")
"RTN","EASMTL6",189,0)
 ;
"RTN","EASMTL6",190,0)
 ;  Check for valid return address (ST, City, State)
"RTN","EASMTL6",191,0)
 ;  If preferred facility does not return a valid return address, then get retrun address for primary
"RTN","EASMTL6",192,0)
 S EAPFAC=EAPFAC_","
"RTN","EASMTL6",193,0)
 I EAS4(4,EAPFAC,1.01,"E")']"",EAS4(4,EAPFAC,1.03,"E")']"",EAS4(4,EAPFAC,.02,"E")']"" D
"RTN","EASMTL6",194,0)
 . S:EAPFAC'=+EASARY("PRIM") EAPFAC=+EASARY("PRIM")
"RTN","EASMTL6",195,0)
 . D GETS^DIQ(4,EAPFAC,".01;1.01;1.02;1.03;1.04;.02;100","EI","EAS4")
"RTN","EASMTL6",196,0)
 . S EAPFAC=EAPFAC_","
"RTN","EASMTL6",197,0)
 S EASARY("FAC")=$$GET1^DIQ(4,EAPFAC,.01)
"RTN","EASMTL6",198,0)
 ;
"RTN","EASMTL6",199,0)
 F EAX=1.01,1.02,1.03,1.04,100 D
"RTN","EASMTL6",200,0)
 .  S EASARY(EAX)=EAS4(4,EAPFAC,EAX,"E")
"RTN","EASMTL6",201,0)
 S EASARY(.02)=EAS4(4,EAPFAC,.02,"E")_"^"_$$GET1^DIQ(5,EAS4(4,EAPFAC,.02,"I"),1)
"RTN","EASMTL6",202,0)
 Q
"RTN","EASMTL6A")
0^41^B18742449
"RTN","EASMTL6A",1,0)
EASMTL6A ; MIN/TCM ALB/SCK - AUTOMATED MEANS TEST LETTER-PRINT LETTERS CONT ; 7-13-01
"RTN","EASMTL6A",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;MAR 15,2001
"RTN","EASMTL6A",3,0)
 ;
"RTN","EASMTL6A",4,0)
LETTER(EASN,TYPE,EASBJ,EASDEV,EAERR) ;Print letter
"RTN","EASMTL6A",5,0)
 ; Input
"RTN","EASMTL6A",6,0)
 ;     EASN    - File #713.2 IEN
"RTN","EASMTL6A",7,0)
 ;     TYPE    - Letter type
"RTN","EASMTL6A",8,0)
 ;     EASBJ   - Background job status
"RTN","EASMTL6A",9,0)
 ;     EASDEV  - Print device [Optional]
"RTN","EASMTL6A",10,0)
 ;     EAERR   - Returns error condition [Optional]
"RTN","EASMTL6A",11,0)
 ;
"RTN","EASMTL6A",12,0)
 N DFN,EASADD,EASIN,EASNME,EALNE,EASFAC,EAPFAC,MSG,TAB,EAFIEN,EAX,LINE,EASANV,EASX,VADM,VAROOT,EASPRT,OFFSET
"RTN","EASMTL6A",13,0)
 N EASPTR,EASLIEN,EASPRM,EASPRF,EASITE,EASRTE,EASDEM,POP
"RTN","EASMTL6A",14,0)
 ;
"RTN","EASMTL6A",15,0)
 S EASDEV=$G(EASDEV)
"RTN","EASMTL6A",16,0)
 S TAB=3 ; Tab spacing for letters
"RTN","EASMTL6A",17,0)
 S OFFSET=+$$GET1^DIQ(713,1,10) ; Get print offset for address
"RTN","EASMTL6A",18,0)
 ;
"RTN","EASMTL6A",19,0)
 ;  Get patient data for letter
"RTN","EASMTL6A",20,0)
 S EASPTR=$$GET1^DIQ(713.2,EASN,2,"I")
"RTN","EASMTL6A",21,0)
 S DFN=$$GET1^DIQ(713.1,EASPTR,.01,"I")
"RTN","EASMTL6A",22,0)
 ;
"RTN","EASMTL6A",23,0)
 ;; Get patient mailing information
"RTN","EASMTL6A",24,0)
 D GETPAT(DFN,.EASDEM,.EASADD)
"RTN","EASMTL6A",25,0)
 ;;  Get return address info
"RTN","EASMTL6A",26,0)
 D GETFAC^EASMTL6(DFN,.EASFAC,1)
"RTN","EASMTL6A",27,0)
 ;
"RTN","EASMTL6A",28,0)
 I EASDEV D  Q:$G(EAERR)
"RTN","EASMTL6A",29,0)
 . S IOP="`"_EASDEV D ^%ZIS
"RTN","EASMTL6A",30,0)
 . I POP S EAERR=1 Q
"RTN","EASMTL6A",31,0)
 ;
"RTN","EASMTL6A",32,0)
 U IO
"RTN","EASMTL6A",33,0)
 W:'EASBJ @IOF
"RTN","EASMTL6A",34,0)
 W !!
"RTN","EASMTL6A",35,0)
 I EASFAC(100)]"" D
"RTN","EASMTL6A",36,0)
 . W ?TAB+OFFSET,EASFAC(100)
"RTN","EASMTL6A",37,0)
 E  D
"RTN","EASMTL6A",38,0)
 . W ?TAB+OFFSET,"VA MEDICAL CENTER"
"RTN","EASMTL6A",39,0)
 ;
"RTN","EASMTL6A",40,0)
 W !?TAB+OFFSET,EASFAC(1.01)
"RTN","EASMTL6A",41,0)
 I EASFAC(1.02)]"" W !?TAB+OFFSET,EASFAC(1.02)
"RTN","EASMTL6A",42,0)
 W !?TAB+OFFSET,EASFAC(1.03)_" "_$P(EASFAC(.02),U,2)_" "_EASFAC(1.04)
"RTN","EASMTL6A",43,0)
 W !!!?TAB+OFFSET,$$FMTE^XLFDT(DT,1)
"RTN","EASMTL6A",44,0)
 ;
"RTN","EASMTL6A",45,0)
 S EASITE=$$SITE^VASITE
"RTN","EASMTL6A",46,0)
 ;
"RTN","EASMTL6A",47,0)
 S EASNME("FILE")=2,EASNME("IENS")=DFN,EASNME("FIELD")=.01
"RTN","EASMTL6A",48,0)
 W !!!!?TAB+OFFSET,$$NAMEFMT^XLFNAME(.EASNME,"G")
"RTN","EASMTL6A",49,0)
 W !?TAB+OFFSET,EASADD(1)
"RTN","EASMTL6A",50,0)
 ;
"RTN","EASMTL6A",51,0)
 I EASADD(2)]"" W !?TAB+OFFSET,EASADD(2)
"RTN","EASMTL6A",52,0)
 W !?TAB+OFFSET,EASADD(4)
"RTN","EASMTL6A",53,0)
 I +EASADD(5) W " ",$$GET1^DIQ(5,$P(EASADD(5),U),1)
"RTN","EASMTL6A",54,0)
 W " ",$P(EASADD(11),U,2)
"RTN","EASMTL6A",55,0)
 ;
"RTN","EASMTL6A",56,0)
 S EASANV=$$GET1^DIQ(713.2,EASN,3,"I")
"RTN","EASMTL6A",57,0)
 W !!!!,?TAB,"MEANS TEST ANNIVERSARY DATE: ",$$FMTE^XLFDT($$FMADD^XLFDT(EASANV,365))
"RTN","EASMTL6A",58,0)
 ;
"RTN","EASMTL6A",59,0)
 S EASX=$P(EASDEM(5),U)
"RTN","EASMTL6A",60,0)
 W !!,?TAB,"Dear ",$S(EASX="M":"Mr. ",EASX="F":"Ms. ",1:"Mr./Ms. "),$$NAMEFMT^XLFNAME(.EASNME,"O","M"),":"
"RTN","EASMTL6A",61,0)
 ;
"RTN","EASMTL6A",62,0)
 ;  Print letter body
"RTN","EASMTL6A",63,0)
 S EASLIEN=$O(^EAS(713.3,"C",TYPE,0))
"RTN","EASMTL6A",64,0)
 Q:'EASLIEN
"RTN","EASMTL6A",65,0)
 S EALNE=0
"RTN","EASMTL6A",66,0)
 ;
"RTN","EASMTL6A",67,0)
 W !
"RTN","EASMTL6A",68,0)
 F  S EALNE=$O(^EAS(713.3,EASLIEN,1,EALNE)) Q:'EALNE  D
"RTN","EASMTL6A",69,0)
 . S LINE=^EAS(713.3,EASLIEN,1,EALNE,0)
"RTN","EASMTL6A",70,0)
 . I LINE["|ANNVDT|" W !?TAB,$P(LINE,"|ANNVDT|",1),$$FMTE^XLFDT($$FMADD^XLFDT(EASANV,365)),$P(LINE,"|ANNVDT|",2) Q
"RTN","EASMTL6A",71,0)
 . W !?TAB,LINE
"RTN","EASMTL6A",72,0)
 ;
"RTN","EASMTL6A",73,0)
 ; Retrieve division section of letter
"RTN","EASMTL6A",74,0)
 S:$G(EASFAC("PREF")) EAFIEN=$O(^EAS(713.3,EASLIEN,2,"B",+EASFAC("PREF"),0))
"RTN","EASMTL6A",75,0)
 S:'$G(EAFIEN) EAFIEN=$O(^EAS(713.3,EASLIEN,2,"B",+EASFAC("PRIM"),0))
"RTN","EASMTL6A",76,0)
 ;
"RTN","EASMTL6A",77,0)
 I 'EAFIEN D  ; Print default signature block
"RTN","EASMTL6A",78,0)
 . N EAX,LINE
"RTN","EASMTL6A",79,0)
 . F EAX=1:1:9  D
"RTN","EASMTL6A",80,0)
 . . S LINE=$P($T(DEFSIG+EAX),";;",2)
"RTN","EASMTL6A",81,0)
 . . I LINE["|FAC|" W !?TAB,$P(LINE,"|FAC|",1),$S(EASFAC(100)]"":EASFAC(100),1:"VA Medical Center"),$P(LINE,"|FAC|",2) Q
"RTN","EASMTL6A",82,0)
 . . W !?TAB,LINE
"RTN","EASMTL6A",83,0)
 ;
"RTN","EASMTL6A",84,0)
 I EAFIEN D  ; Print division/facility signature block
"RTN","EASMTL6A",85,0)
 . S EALNE=0
"RTN","EASMTL6A",86,0)
 . F  S EALNE=$O(^EAS(713.3,EASLIEN,2,EAFIEN,1,EALNE)) Q:'EALNE  D
"RTN","EASMTL6A",87,0)
 . . W !?TAB,^EAS(713.3,EASLIEN,2,EAFIEN,1,EALNE,0)
"RTN","EASMTL6A",88,0)
 ;
"RTN","EASMTL6A",89,0)
 W !!?TAB,"Enclosure"
"RTN","EASMTL6A",90,0)
 ;
"RTN","EASMTL6A",91,0)
 D:EASDEV ^%ZISC
"RTN","EASMTL6A",92,0)
 Q
"RTN","EASMTL6A",93,0)
 ;
"RTN","EASMTL6A",94,0)
GETPAT(DFN,EASDEM,EASADD) ; Get patient information
"RTN","EASMTL6A",95,0)
 N VAROOT,VAPA
"RTN","EASMTL6A",96,0)
 ;
"RTN","EASMTL6A",97,0)
 S VAROOT="EASADD",VAPA("P")=""
"RTN","EASMTL6A",98,0)
 D ADD^VADPT
"RTN","EASMTL6A",99,0)
 ;
"RTN","EASMTL6A",100,0)
 S VAROOT="EASDEM"
"RTN","EASMTL6A",101,0)
 D DEM^VADPT
"RTN","EASMTL6A",102,0)
 Q
"RTN","EASMTL6A",103,0)
 ;
"RTN","EASMTL6A",104,0)
CHKADR(EASPTR) ; Check for valid address
"RTN","EASMTL6A",105,0)
 N EASADD,VAPA,RSLT,DFN
"RTN","EASMTL6A",106,0)
 ;
"RTN","EASMTL6A",107,0)
 S DFN=$$GET1^DIQ(713.1,EASPTR,.01,"I")
"RTN","EASMTL6A",108,0)
 S RSLT=1
"RTN","EASMTL6A",109,0)
 S VAROOT="EASADD",VAPA("P")=""
"RTN","EASMTL6A",110,0)
 D ADD^VADPT
"RTN","EASMTL6A",111,0)
 ;; Check for valid mailing address
"RTN","EASMTL6A",112,0)
 I EASADD(1)]"",EASADD(4)]"",EASADD(5)]"",EASADD(11)]"" S RSLT=0
"RTN","EASMTL6A",113,0)
 D:RSLT ADRERR^EASMTUTL(.EASADD,DFN)
"RTN","EASMTL6A",114,0)
 Q $G(RSLT)
"RTN","EASMTL6A",115,0)
 ;
"RTN","EASMTL6A",116,0)
DEFSIG ; Default closing and signature block
"RTN","EASMTL6A",117,0)
 ;;Thank you for your assistance and cooperation.  If you have any
"RTN","EASMTL6A",118,0)
 ;;questions or need assistance in the completion of the information
"RTN","EASMTL6A",119,0)
 ;;requested, please contact the |FAC| Business 
"RTN","EASMTL6A",120,0)
 ;;Office between 8:00am and 4:00pm Monday through Friday.
"RTN","EASMTL6A",121,0)
 ;;
"RTN","EASMTL6A",122,0)
 ;;Sincerely,
"RTN","EASMTL6A",123,0)
 ;;
"RTN","EASMTL6A",124,0)
 ;;
"RTN","EASMTL6A",125,0)
 ;;
"RTN","EASMTL6B")
0^49^B5960140
"RTN","EASMTL6B",1,0)
EASMTL6B ;ALB/SCK - EAS QUEUED MEANS TEST LETTERS ; 2/25/02
"RTN","EASMTL6B",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;MAR 15,2001
"RTN","EASMTL6B",3,0)
 ;
"RTN","EASMTL6B",4,0)
BCKJOB ;  Queued entry point for tasked letter printing
"RTN","EASMTL6B",5,0)
 N EATYP,EASMULT,EASKP,EASARY,EASTMP,EASPTR,DFN,EASPRF,EASDEV,EASPRM,EAX,EASTSK,EASERR,EADPTR
"RTN","EASMTL6B",6,0)
 ;
"RTN","EASMTL6B",7,0)
 S EASTMP="^TMP(""EASMT"",$J)"
"RTN","EASMTL6B",8,0)
 K @EASTMP
"RTN","EASMTL6B",9,0)
 ;
"RTN","EASMTL6B",10,0)
 D BLD^EASMTL6(0,0,EASTMP,.EASKP)
"RTN","EASMTL6B",11,0)
 S EASPRM=$$GET1^DIQ(713,1,5,"I")
"RTN","EASMTL6B",12,0)
 ;
"RTN","EASMTL6B",13,0)
 Q:'$D(@EASTMP)
"RTN","EASMTL6B",14,0)
 S EATYP=0
"RTN","EASMTL6B",15,0)
 F  S EATYP=$O(@EASTMP@(0,EATYP)) Q:'EATYP  D
"RTN","EASMTL6B",16,0)
 . S EASIEN=0
"RTN","EASMTL6B",17,0)
 . F  S EASIEN=$O(@EASTMP@(0,EATYP,EASIEN)) Q:'EASIEN  D
"RTN","EASMTL6B",18,0)
 . . S EASPTR=$$GET1^DIQ(713.2,EASIEN,2,"I")
"RTN","EASMTL6B",19,0)
 . . S DFN=$$GET1^DIQ(713.1,EASPTR,.01,"I")
"RTN","EASMTL6B",20,0)
 . . S EASPRF=$$GET1^DIQ(2,DFN,27.02,"I")
"RTN","EASMTL6B",21,0)
 . . I EASPRF D
"RTN","EASMTL6B",22,0)
 . . . I $D(^EAS(713,1,2,"B",EASPRF)) D
"RTN","EASMTL6B",23,0)
 . . . . S EADPTR=$O(^EAS(713,1,2,"B",EASPRF,0))
"RTN","EASMTL6B",24,0)
 . . . . S EASDEV=$P($G(^EAS(713,1,2,EADPTR,0)),U,2)
"RTN","EASMTL6B",25,0)
 . . S:'$G(EASDEV) EASDEV=EASPRM
"RTN","EASMTL6B",26,0)
 . . D LETTER^EASMTL6A(EASIEN,EATYP,1,EASDEV,"EASERR")
"RTN","EASMTL6B",27,0)
 . . K EASPRF,EASDEV
"RTN","EASMTL6B",28,0)
 . . I $G(EASERR) K EASERR Q
"RTN","EASMTL6B",29,0)
 . . D UPDSTAT^EASMTL6(EASIEN,EATYP)
"RTN","EASMTL6B",30,0)
 ;
"RTN","EASMTL6B",31,0)
 D SNDSTAT(.EASKP)
"RTN","EASMTL6B",32,0)
 K @EASTMP
"RTN","EASMTL6B",33,0)
 Q
"RTN","EASMTL6B",34,0)
 ;
"RTN","EASMTL6B",35,0)
SNDSTAT(EASKP) ; Send job stats to mail group
"RTN","EASMTL6B",36,0)
 N XMTEXT,XNDUZ,XMSUB,MSG,XMDUZ,XMY
"RTN","EASMTL6B",37,0)
 ;
"RTN","EASMTL6B",38,0)
 S XMY("G.EAS MTLETTERS")=""
"RTN","EASMTL6B",39,0)
 S XMTEXT="MSG("
"RTN","EASMTL6B",40,0)
 S XMSUB="EAS TASKED MT LETTERS JOB"
"RTN","EASMTL6B",41,0)
 S XMDUZ="EAS AUTO MT LETTERS"
"RTN","EASMTL6B",42,0)
 S MSG(1)="     Letters to print: "_$J($FN(EASKP("CNT"),","),8)
"RTN","EASMTL6B",43,0)
 S MSG(2)="Threshold not reached: "_$J($FN(EASKP("T"),","),8)
"RTN","EASMTL6B",44,0)
 S MSG(2.5)=""
"RTN","EASMTL6B",45,0)
 S MSG(3)="The following letters were found, but will not be printed."
"RTN","EASMTL6B",46,0)
 S MSG(3.5)="    Invalid Addr : "_$J($FN(EASKP("I"),","),8)
"RTN","EASMTL6B",47,0)
 S MSG(4)="        Deceased : "_$J($FN(EASKP("D"),","),8)
"RTN","EASMTL6B",48,0)
 S MSG(5)="       MT Changed: "_$J($FN(EASKP("C"),","),8)
"RTN","EASMTL6B",49,0)
 S MSG(6)="Prohibit flag set: "_$J($FN(EASKP("P"),","),8)
"RTN","EASMTL6B",50,0)
 S MSG(7)=""
"RTN","EASMTL6B",51,0)
 S MSG(8)="Tasked Letters:"
"RTN","EASMTL6B",52,0)
 D ^XMD
"RTN","EASMTL6B",53,0)
 Q
"RTN","EASMTL6B",54,0)
 ;
"RTN","EASMTL6B",55,0)
LTRTYP(EASIEN,EASLTR) ;  Function lookup for letter type.  Select "latest" leTter type
"RTN","EASMTL6B",56,0)
 ;  Input
"RTN","EASMTL6B",57,0)
 ;     EASIEN - IEN in the Letter status file, #713.2
"RTN","EASMTL6B",58,0)
 ;     EASLTR - Variable to return letter type in
"RTN","EASMTL6B",59,0)
 ;
"RTN","EASMTL6B",60,0)
 ;  Output
"RTN","EASMTL6B",61,0)
 ;     1 - If letter pending to print was found in the Letter Status file
"RTN","EASMTL6B",62,0)
 ;     0 - If no pending letter was found
"RTN","EASMTL6B",63,0)
 ;
"RTN","EASMTL6B",64,0)
 I $P($G(^EAS(713.2,EASIEN,"Z")),U,2) S EASLTR=4 Q 1
"RTN","EASMTL6B",65,0)
 I $P($G(^EAS(713.2,EASIEN,4)),U,2) S EASLTR=2 Q 1
"RTN","EASMTL6B",66,0)
 I $P($G(^EAS(713.2,EASIEN,6)),U,2) S EASLTR=1 Q 1
"RTN","EASMTL6B",67,0)
 Q 0
"RTN","EASMTL8")
0^11^B21560340
"RTN","EASMTL8",1,0)
EASMTL8 ;618/TCM ALB/SCK - AUTOMATED MEANS TEST LETTER, 20-DAY REPORT OF CONTACT FORM ; 07/17/01
"RTN","EASMTL8",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;MAR 15,2001
"RTN","EASMTL8",3,0)
 ;
"RTN","EASMTL8",4,0)
QUE ;
"RTN","EASMTL8",5,0)
 N EASTMP,DIR,DUOUT,DTOUT,DIRUT
"RTN","EASMTL8",6,0)
 ;
"RTN","EASMTL8",7,0)
 S EASTMP="^TMP(""EASROC"",$J)"
"RTN","EASMTL8",8,0)
 K @EASTMP
"RTN","EASMTL8",9,0)
 ;
"RTN","EASMTL8",10,0)
START ;
"RTN","EASMTL8",11,0)
 S DIR(0)="PAO^713.2:EMZ",DIR("A")="Select Patient: "
"RTN","EASMTL8",12,0)
 S DIR("?")="Select patient or press ENTER when finished"
"RTN","EASMTL8",13,0)
 D ^DIR K DIR
"RTN","EASMTL8",14,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","EASMTL8",15,0)
 S @EASTMP@(+Y)=""
"RTN","EASMTL8",16,0)
 I '$D(DIRUT) G START
"RTN","EASMTL8",17,0)
END ;
"RTN","EASMTL8",18,0)
 S ZTSAVE("EASTMP")=""
"RTN","EASMTL8",19,0)
 D EN^XUTMDEVQ("PRINT^EASMTL8","EAS MT REPORT OF CONTACTS",.ZTSAVE)
"RTN","EASMTL8",20,0)
 Q
"RTN","EASMTL8",21,0)
 ;
"RTN","EASMTL8",22,0)
PRINT ;
"RTN","EASMTL8",23,0)
 N EASIEN
"RTN","EASMTL8",24,0)
 ;
"RTN","EASMTL8",25,0)
 S EASIEN=0
"RTN","EASMTL8",26,0)
 F  S EASIEN=$O(@EASTMP@(EASIEN)) Q:'EASIEN  D  Q:$D(DIRUT)
"RTN","EASMTL8",27,0)
 . D FORM(EASIEN)
"RTN","EASMTL8",28,0)
 . I $E(IOST,1,2)="C-" D
"RTN","EASMTL8",29,0)
 . . S DIR(0)="E"
"RTN","EASMTL8",30,0)
 . . D ^DIR K DIR
"RTN","EASMTL8",31,0)
 . . I 'Y S DIRUT=1
"RTN","EASMTL8",32,0)
 . . W @IOF
"RTN","EASMTL8",33,0)
 K @EASTMP
"RTN","EASMTL8",34,0)
 Q
"RTN","EASMTL8",35,0)
 ;
"RTN","EASMTL8",36,0)
FORM(EASIEN) ; Print 20 day form
"RTN","EASMTL8",37,0)
 N DFN,EASDEM,EASADD,EASHDR,EASFAC,EASLIEN,ULC,ULNE,EASANV,LINE,EASOK,EASDEV,XL,EAX,EASPTR
"RTN","EASMTL8",38,0)
 ;
"RTN","EASMTL8",39,0)
 S EASANV=$$GET1^DIQ(713.2,EASIEN,3,"I")
"RTN","EASMTL8",40,0)
 S EASPTR=$$GET1^DIQ(713.2,EASIEN,2,"I")
"RTN","EASMTL8",41,0)
 S DFN=$$GET1^DIQ(713.1,EASPTR,.01,"I")
"RTN","EASMTL8",42,0)
 D GETPAT^EASMTL6A(DFN,.EASDEM,.EASADD)
"RTN","EASMTL8",43,0)
 D GETFAC^EASMTL6(DFN,.EASFAC)
"RTN","EASMTL8",44,0)
 ;
"RTN","EASMTL8",45,0)
 ;  Merge FileMan data arrays into more usable formats
"RTN","EASMTL8",46,0)
 M EASHDR("F")=EASFAC
"RTN","EASMTL8",47,0)
 M EASHDR("D")=EASDEM
"RTN","EASMTL8",48,0)
 M EASHDR("A")=EASADD
"RTN","EASMTL8",49,0)
 ;
"RTN","EASMTL8",50,0)
 D HDR(.EASHDR)
"RTN","EASMTL8",51,0)
 ;
"RTN","EASMTL8",52,0)
 W !?5,"Means Test Anniversary Date: ",$$FMTE^XLFDT($$FMADD^XLFDT(EASANV,365),"D")
"RTN","EASMTL8",53,0)
 ;
"RTN","EASMTL8",54,0)
 S EASLIEN=$O(^EAS(713.3,"C",3,0))
"RTN","EASMTL8",55,0)
 Q:'EASLIEN
"RTN","EASMTL8",56,0)
 S EALNE=0
"RTN","EASMTL8",57,0)
 I $D(^EAS(713.3,EASLIEN,1)) D  S EASOK=1
"RTN","EASMTL8",58,0)
 . F  S EALNE=$O(^EAS(713.3,EASLIEN,1,EALNE)) Q:'EALNE  D
"RTN","EASMTL8",59,0)
 . . S LINE=^EAS(713.3,EASLIEN,1,EALNE,0)
"RTN","EASMTL8",60,0)
 . . I LINE["|ANNVDT|" W !?6,$P(LINE,"|ANNVDT|",1)," ",$$FMTE^XLFDT(EASANV,"D"),$P(LINE,"|ANNVDT|",2) Q
"RTN","EASMTL8",61,0)
 . . W !?6,LINE
"RTN","EASMTL8",62,0)
 ;
"RTN","EASMTL8",63,0)
 I $D(^EAS(713.3,EASLIEN,2)) D  S EASOK=1
"RTN","EASMTL8",64,0)
 . S EALNE=0
"RTN","EASMTL8",65,0)
 . F  S EALNE=$O(^EAS(713.3,EASLIEN,2,EALNE)) Q:'EALNE  D
"RTN","EASMTL8",66,0)
 . . S LINE=^EAS(713.3,EASLIEN,2,EALNE,0)
"RTN","EASMTL8",67,0)
 . . W !,LINE
"RTN","EASMTL8",68,0)
 ;
"RTN","EASMTL8",69,0)
 F EAX=0:0 Q:($Y+8)>IOSL  W !
"RTN","EASMTL8",70,0)
 W ! F XL=1:1:IOM-1 W "-"
"RTN","EASMTL8",71,0)
 W !,"| Division or Section",?40,"| Executed By (signature and title)",?(IOM-1),"|"
"RTN","EASMTL8",72,0)
 W !,"|",?40,"|",?(IOM-1),"|"
"RTN","EASMTL8",73,0)
 W !,"|",?40,"|",?(IOM-1),"|"
"RTN","EASMTL8",74,0)
 W ! F XL=1:1:IOM-1 W "-"
"RTN","EASMTL8",75,0)
 W !,?40,"PRINTED: ",$$FMTE^XLFDT($$NOW^XLFDT,"P")
"RTN","EASMTL8",76,0)
 Q
"RTN","EASMTL8",77,0)
 ;
"RTN","EASMTL8",78,0)
HDR(EASHDR) ; Print form header for report of contact
"RTN","EASMTL8",79,0)
 ; Input
"RTN","EASMTL8",80,0)
 ;    EASHDR - Header information array
"RTN","EASMTL8",81,0)
 ;
"RTN","EASMTL8",82,0)
 N EALNE,EAX,TS1,TS2,TS3,TS4
"RTN","EASMTL8",83,0)
 ;
"RTN","EASMTL8",84,0)
 Q:'$D(EASHDR)
"RTN","EASMTL8",85,0)
 D SETLNE(.EALNE)
"RTN","EASMTL8",86,0)
 ;
"RTN","EASMTL8",87,0)
 S TS2=40,TS3=58,TS4=$G(IOM)-1
"RTN","EASMTL8",88,0)
 ;W $E(EALNE("DD"),1,IOM)
"RTN","EASMTL8",89,0)
 W !,"D E P A R T M E N T  O F  V E T E R A N  A F F A I R S"
"RTN","EASMTL8",90,0)
 W !,$E(EALNE("DD"),1,IOM)
"RTN","EASMTL8",91,0)
 W !,"| REPORT OF CONTACT",?TS2,"| VA Office",?TS3,"| Identification No.",?TS4,"|"
"RTN","EASMTL8",92,0)
 W !,"| Note: This form must be filled out in",?TS2,"|",?TS3,"| ",?TS4,"|"
"RTN","EASMTL8",93,0)
 W !,"| ink or on typewriter as it becomes a"
"RTN","EASMTL8",94,0)
 W ?TS2,"| ",?TS3,"| ",$P(EASHDR("D",2),U,2),?TS4,"|"
"RTN","EASMTL8",95,0)
 W !,"| permanent record in veterans' folders.",?TS2,"|",?TS3,"|",?TS4,"|"
"RTN","EASMTL8",96,0)
 W !,$E(EALNE("D"),1,TS4)
"RTN","EASMTL8",97,0)
 W !,"| Last Name-First Name-Middle Name (Type or print)",?TS3,"| Date of Contact",?TS4,"|"
"RTN","EASMTL8",98,0)
 W !,"|",?TS3,"|",?TS4,"|"
"RTN","EASMTL8",99,0)
 W !,"| ",EASHDR("D",1),?TS3,"|",?TS4,"|"
"RTN","EASMTL8",100,0)
 W !,$E(EALNE("D"),1,TS4)
"RTN","EASMTL8",101,0)
 W !,"| Address of Veteran",?TS3,"| Telephone",?TS4,"|"
"RTN","EASMTL8",102,0)
 W !,"| ",EASHDR("A",1),?TS3,"| ",EASHDR("A",8),?TS4,"|"
"RTN","EASMTL8",103,0)
 I EASHDR("A",2)]"" W !,"| ",EASHDR("A",2),?TS3,"|",?TS4,"|"
"RTN","EASMTL8",104,0)
 I EASHDR("A",3)]"" W !,"| ",EASHDR("A",3),?TS3,"|",?TS4,"|"
"RTN","EASMTL8",105,0)
 W !,"| ",EASHDR("A",4)_", "_$P(EASHDR("A",5),U,2)_"  "_$P(EASHDR("A",11),U,2),?TS3,"|",?TS4,"|"
"RTN","EASMTL8",106,0)
 W !,$E(EALNE("D"),1,TS4)
"RTN","EASMTL8",107,0)
 W !,"| Person Contacted",?TS3,"| Type of Contact",?TS4,"|"
"RTN","EASMTL8",108,0)
 W !,"|",?TS3,"| Personal/Telephone",?TS4,"|"
"RTN","EASMTL8",109,0)
 W !,"|",?TS3,"|",?TS4,"|"
"RTN","EASMTL8",110,0)
 W !,$E(EALNE("D"),1,TS4)
"RTN","EASMTL8",111,0)
 W !,"| Address of Person Contacted",?TS3,"| Telephone",?TS4,"|"
"RTN","EASMTL8",112,0)
 W !,"|",?TS3,"|",?TS4,"|"
"RTN","EASMTL8",113,0)
 W !,"|",?TS3,"|",?TS4,"|"
"RTN","EASMTL8",114,0)
 W !,"|",?TS3,"|",?TS4,"|"
"RTN","EASMTL8",115,0)
 W !,$E(EALNE("D"),1,TS4)
"RTN","EASMTL8",116,0)
 W !,"  Brief statement of information requested and given",!
"RTN","EASMTL8",117,0)
EXIT Q
"RTN","EASMTL8",118,0)
 ;
"RTN","EASMTL8",119,0)
 ;
"RTN","EASMTL8",120,0)
SETLNE(EALNE) ;
"RTN","EASMTL8",121,0)
 N RMAR
"RTN","EASMTL8",122,0)
 ;
"RTN","EASMTL8",123,0)
 S RMAR=$G(IOM) S:'RMAR RMAR=80
"RTN","EASMTL8",124,0)
 S EALNE("D")="",EALNE("DD")="",EALNE("UL")=""
"RTN","EASMTL8",125,0)
 S $P(EALNE("D"),"-",RMAR)=""
"RTN","EASMTL8",126,0)
 S $P(EALNE("DD"),"=",RMAR)=""
"RTN","EASMTL8",127,0)
 Q
"RTN","EASMTPAR")
0^47^B3482325
"RTN","EASMTPAR",1,0)
EASMTPAR ; ALB/SCK - EAS MT PARAMETER ENTRY/EDIT ; 11/9/01
"RTN","EASMTPAR",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;MAR 15,2001
"RTN","EASMTPAR",3,0)
 ;
"RTN","EASMTPAR",4,0)
WR ;  Write current parameters
"RTN","EASMTPAR",5,0)
 N EANODE,EANOD,U,EASHD,LINE,SPACE,EAX,EAIEN,TAB,TAB2,IOP,EDT,DIRUT
"RTN","EASMTPAR",6,0)
 ;
"RTN","EASMTPAR",7,0)
 S U="^",IOP="HOME",TAB=5,TAB2=43
"RTN","EASMTPAR",8,0)
 D ^%ZIS K IOP
"RTN","EASMTPAR",9,0)
 ;
"RTN","EASMTPAR",10,0)
 S EASHD="EAS MEANS TEST LETTERS PARAMETER ENTRY/EDIT"
"RTN","EASMTPAR",11,0)
 S SPACE=(IOM-$L(EASHD))/2
"RTN","EASMTPAR",12,0)
 S $P(LINE,"=",IOM)=""
"RTN","EASMTPAR",13,0)
 ;
"RTN","EASMTPAR",14,0)
 W @IOF,!?SPACE,EASHD,!,LINE
"RTN","EASMTPAR",15,0)
 ;
"RTN","EASMTPAR",16,0)
 S EANODE=$G(^EAS(713,1,0))
"RTN","EASMTPAR",17,0)
 W !!,"[1]",?TAB,"Parameters"
"RTN","EASMTPAR",18,0)
 W !?TAB,"Primary Print Device:",?TAB2,": "
"RTN","EASMTPAR",19,0)
 I +$P($G(EANODE),U,5) W $$GET1^DIQ(3.5,$P(EANODE,U,5),.01)
"RTN","EASMTPAR",20,0)
 W !?TAB,"Allow Multiple Print Devices?",?TAB2,": ",$S($P(EANODE,U,8):"YES",1:"NO")
"RTN","EASMTPAR",21,0)
 W !?TAB,"Send Means Test Completion Notice?",?TAB2,": ",$S($P(EANODE,U,7):"YES",1:"NO")
"RTN","EASMTPAR",22,0)
 W !?TAB,"Envelope Offset",?TAB2,": ",+$$GET1^DIQ(713,1,10)
"RTN","EASMTPAR",23,0)
 ;
"RTN","EASMTPAR",24,0)
 W !!,"[2]",?TAB,"Additional Print Locations"
"RTN","EASMTPAR",25,0)
 F EAX=0:0 S EAX=$O(^EAS(713,1,2,EAX)) Q:'EAX  D
"RTN","EASMTPAR",26,0)
 . S EANOD=^EAS(713,1,2,EAX,0)
"RTN","EASMTPAR",27,0)
 . W !?TAB,$$GET1^DIQ(4,$P(EANOD,U),.01),?20,": "
"RTN","EASMTPAR",28,0)
 . I $P(EANOD,U,2)>0 W $$GET1^DIQ(3.5,$P(EANOD,U,2),.01)
"RTN","EASMTPAR",29,0)
 ;
"RTN","EASMTPAR",30,0)
 S DIR(0)="FAO",DIR("A")="Enter 1-2 to EDIT, or RETURN to QUIT: ",DIR("A",1)=""
"RTN","EASMTPAR",31,0)
 D ^DIR K DIR
"RTN","EASMTPAR",32,0)
 Q:$D(DIRUT)
"RTN","EASMTPAR",33,0)
 S EDT=+Y
"RTN","EASMTPAR",34,0)
 I "1,2"[EDT D @EDT
"RTN","EASMTPAR",35,0)
 G WR
"RTN","EASMTPAR",36,0)
 Q
"RTN","EASMTPAR",37,0)
 ;
"RTN","EASMTPAR",38,0)
1 ; Edit parameter set 1
"RTN","EASMTPAR",39,0)
 N DIE,DA,DR
"RTN","EASMTPAR",40,0)
 ;
"RTN","EASMTPAR",41,0)
 S DIE="^EAS(713,",DA=1
"RTN","EASMTPAR",42,0)
 S DR="5;8;7;10"
"RTN","EASMTPAR",43,0)
 D ^DIE K DIE
"RTN","EASMTPAR",44,0)
 Q
"RTN","EASMTPAR",45,0)
 ;
"RTN","EASMTPAR",46,0)
2 ; Edit parameter set 2
"RTN","EASMTPAR",47,0)
 N DIE,DA,DR
"RTN","EASMTPAR",48,0)
 ;
"RTN","EASMTPAR",49,0)
 Q:'$P($G(EANODE),U,8)
"RTN","EASMTPAR",50,0)
 S DIE="^EAS(713,",DA=1
"RTN","EASMTPAR",51,0)
 S DR="25"
"RTN","EASMTPAR",52,0)
 D ^DIE K DIE
"RTN","EASMTPAR",53,0)
 Q
"RTN","EASMTRP1")
0^46^B23594979
"RTN","EASMTRP1",1,0)
EASMTRP1 ;ALB/SCK - MEANS TEST DAILY EXPIRATION REPORT ; 10/26/2001
"RTN","EASMTRP1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;MAR 15,2001
"RTN","EASMTRP1",3,0)
 ;
"RTN","EASMTRP1",4,0)
EN ; Interactive report generation, select date range
"RTN","EASMTRP1",5,0)
 N DIR,EASBEG,EASEND,ZTSAVE,EAX,%ZIS,DIRUT
"RTN","EASMTRP1",6,0)
 ;
"RTN","EASMTRP1",7,0)
 D HOME^%ZIS
"RTN","EASMTRP1",8,0)
 W @IOF
"RTN","EASMTRP1",9,0)
 ;
"RTN","EASMTRP1",10,0)
 ; Get beginning date of date range, default to TODAY
"RTN","EASMTRP1",11,0)
 W !,$CHAR(7),"Enter date range for anniversary date search"
"RTN","EASMTRP1",12,0)
 S DIR(0)="D^::EX",DIR("?")="^D HELP^%DTC",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","EASMTRP1",13,0)
 S DIR("A")="   Start Date"
"RTN","EASMTRP1",14,0)
 D ^DIR K DIR
"RTN","EASMTRP1",15,0)
 Q:$D(DIRUT)
"RTN","EASMTRP1",16,0)
 S EASBEG=Y
"RTN","EASMTRP1",17,0)
 ;
"RTN","EASMTRP1",18,0)
 ; Get ending date of date range, default to TODAY
"RTN","EASMTRP1",19,0)
 S DIR(0)="D^::EX",DIR("?")="^D HELP^%DTC",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","EASMTRP1",20,0)
 S DIR("A")="     End Date"
"RTN","EASMTRP1",21,0)
 D ^DIR K DIR
"RTN","EASMTRP1",22,0)
 Q:$D(DIRUT)
"RTN","EASMTRP1",23,0)
 S EASEND=Y
"RTN","EASMTRP1",24,0)
 ;
"RTN","EASMTRP1",25,0)
 S EAX=$$GET1^DIQ(713,1,5)
"RTN","EASMTRP1",26,0)
 S:EAX]"" %ZIS("B")=EAX
"RTN","EASMTRP1",27,0)
 S ZTSAVE("EASBEG")="",ZTSAVE("EASEND")=""
"RTN","EASMTRP1",28,0)
 D EN^XUTMDEVQ("BLD^EASMTRP1","EAS MT EXPIRATION RPT",.ZTSAVE,.%ZIS)
"RTN","EASMTRP1",29,0)
 Q
"RTN","EASMTRP1",30,0)
 ;
"RTN","EASMTRP1",31,0)
QUE ; Queued report generation
"RTN","EASMTRP1",32,0)
 N ZTSAVE,ZTRTN,ZTDESC,EAX,%ZIS
"RTN","EASMTRP1",33,0)
 ;
"RTN","EASMTRP1",34,0)
 S (EASBEG,EASEND)=$$FMADD^XLFDT($$DT^XLFDT,-1)
"RTN","EASMTRP1",35,0)
 S ZTSAVE("EASBEG")="",ZTSAVE("EASEND")=""
"RTN","EASMTRP1",36,0)
 S IOP=""
"RTN","EASMTRP1",37,0)
 D EN^XUTMDEVQ("BLD^EASMTRP1","EAS MT EXPIRATION RPT",.ZTSAVE)
"RTN","EASMTRP1",38,0)
 Q
"RTN","EASMTRP1",39,0)
 ;
"RTN","EASMTRP1",40,0)
BLD ; Build the list of MT expirations to TMP global
"RTN","EASMTRP1",41,0)
 N EASIEN,EASANV,EASLST,EASENDT,DFN,EASTMP,EASDT,EASENDT
"RTN","EASMTRP1",42,0)
 ;
"RTN","EASMTRP1",43,0)
 K ^TMP("EASEXP",$J)
"RTN","EASMTRP1",44,0)
 ;
"RTN","EASMTRP1",45,0)
 S EASENDT=$$FMADD^XLFDT(EASEND,-365)
"RTN","EASMTRP1",46,0)
 S EASANV=$$FMADD^XLFDT(EASBEG,-365,"",-1) ; Subtract 1 minute to capture the 1st day
"RTN","EASMTRP1",47,0)
 F  S EASANV=$O(^DGMT(408.31,"B",EASANV)) Q:'EASANV!(EASANV>EASENDT)  D
"RTN","EASMTRP1",48,0)
 . S EASIEN=0
"RTN","EASMTRP1",49,0)
 . F  S EASIEN=$O(^DGMT(408.31,"B",EASANV,EASIEN)) Q:'EASIEN  D
"RTN","EASMTRP1",50,0)
 . . S DFN=$$GET1^DIQ(408.31,EASIEN,.02,"I")
"RTN","EASMTRP1",51,0)
 . . S EASLST=$$LST^DGMTU(DFN)
"RTN","EASMTRP1",52,0)
 . . Q:+EASLST'=EASIEN  ; Quit it this MT is not the last MT on file
"RTN","EASMTRP1",53,0)
 . . Q:$$DECEASED^EASMTUTL("",DFN)  ; Quit if patient is deceased
"RTN","EASMTRP1",54,0)
 . . Q:"N,P"[$P(EASLST,U,4)  ; Quit if MT No longer Required or Pending Adjudication
"RTN","EASMTRP1",55,0)
 . . ; Quit if Cat C, agrees to deductible and MT later the 10-5-99
"RTN","EASMTRP1",56,0)
 . . I $P(EASLST,U,4)="C",$$GET1^DIQ(408.31,+EASLST,.11,"I"),$P(EASLST,U,2)>2991005 Q
"RTN","EASMTRP1",57,0)
 . . ;;Q:$$FUTMT^EASMTUTL("","",DFN)  ; Quit if future MT on file
"RTN","EASMTRP1",58,0)
 . . S ^TMP("EASEXP",$J,EASANV,EASIEN)=DFN_U_EASLST
"RTN","EASMTRP1",59,0)
 ;
"RTN","EASMTRP1",60,0)
 S EASTMP="^TMP(""EASEXP"","_$J_")"
"RTN","EASMTRP1",61,0)
 S EASDT("BEG")=EASBEG,EASDT("END")=EASEND
"RTN","EASMTRP1",62,0)
 D PRT(EASTMP,.EASDT) ; Call print report
"RTN","EASMTRP1",63,0)
 Q
"RTN","EASMTRP1",64,0)
 ;
"RTN","EASMTRP1",65,0)
PRT(EASTMP,EASDT) ;
"RTN","EASMTRP1",66,0)
 N EASANV,EASIEN,PAGE,DFN,EASP,EASABRT
"RTN","EASMTRP1",67,0)
 ;
"RTN","EASMTRP1",68,0)
 S EASANV=0,PAGE=0
"RTN","EASMTRP1",69,0)
 D HDR(.EASDT)
"RTN","EASMTRP1",70,0)
 ;
"RTN","EASMTRP1",71,0)
 I '$D(@EASTMP) D  Q
"RTN","EASMTRP1",72,0)
 . W !!?3,">> No Means Test expirations for the selected date range."
"RTN","EASMTRP1",73,0)
 ;
"RTN","EASMTRP1",74,0)
 F  S EASANV=$O(@EASTMP@(EASANV)) Q:'EASANV  D  Q:$G(EASABRT)
"RTN","EASMTRP1",75,0)
 . S EASIEN=0
"RTN","EASMTRP1",76,0)
 . F  S EASIEN=$O(@EASTMP@(EASANV,EASIEN)) Q:'EASIEN  D  Q:$G(EASABRT)
"RTN","EASMTRP1",77,0)
 . . S EASDAT=@EASTMP@(EASANV,EASIEN)
"RTN","EASMTRP1",78,0)
 . . D PRTLINE(EASANV,EASDAT) ; Get data and format print line
"RTN","EASMTRP1",79,0)
 . . I $E(IOST,1,2)="C-",($Y+5)>IOSL D
"RTN","EASMTRP1",80,0)
 . . . S DIR(0)="E"
"RTN","EASMTRP1",81,0)
 . . . D ^DIR K DIR
"RTN","EASMTRP1",82,0)
 . . . I 'Y S EASABRT=1 Q
"RTN","EASMTRP1",83,0)
 . . . D HDR(.EASDT)
"RTN","EASMTRP1",84,0)
 Q
"RTN","EASMTRP1",85,0)
 ;
"RTN","EASMTRP1",86,0)
PRTLINE(EASANV,EASDAT) ; Format and print report line
"RTN","EASMTRP1",87,0)
 N DFN,EASNAME,EASTAT,EASAPT,EASF,EACL
"RTN","EASMTRP1",88,0)
 ;
"RTN","EASMTRP1",89,0)
 S DFN=$P(EASDAT,U)
"RTN","EASMTRP1",90,0)
 S EASNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","EASMTRP1",91,0)
 W !,$E(EASNAME,1,20)
"RTN","EASMTRP1",92,0)
 ;
"RTN","EASMTRP1",93,0)
 D PID^VADPT6
"RTN","EASMTRP1",94,0)
 W ?22,VA("PID")
"RTN","EASMTRP1",95,0)
 ;
"RTN","EASMTRP1",96,0)
 W ?35,$TR($$FMTE^XLFDT($$FMADD^XLFDT(EASANV,365),"2F")," ","0")
"RTN","EASMTRP1",97,0)
 S EASTAT=$P(EASDAT,U,5)
"RTN","EASMTRP1",98,0)
 W ?46,$S(EASTAT="C":"CAT C",EASTAT="A":"CAT A",EASTAT="R":"REQD",EASTAT="N":"NA",EASTAT="P":"PEND",1:"")
"RTN","EASMTRP1",99,0)
 ;
"RTN","EASMTRP1",100,0)
 D GETAPT(DFN,.EASAPT)
"RTN","EASMTRP1",101,0)
 I $D(EASAPT) D
"RTN","EASMTRP1",102,0)
 . S EACL=0 F  S EACL=$O(EASAPT(EACL)) Q:'EACL  D
"RTN","EASMTRP1",103,0)
 . . W:$G(EASF) !
"RTN","EASMTRP1",104,0)
 . . W ?54,$E($$GET1^DIQ(44,EACL,.01),1,15)," ",$$FMTE^XLFDT(EASAPT(EACL),"2D")
"RTN","EASMTRP1",105,0)
 . . S EASF=1
"RTN","EASMTRP1",106,0)
 ;
"RTN","EASMTRP1",107,0)
 D KVA^VADPT
"RTN","EASMTRP1",108,0)
 Q
"RTN","EASMTRP1",109,0)
 ;
"RTN","EASMTRP1",110,0)
GETAPT(DFN,EASAPT) ; Get future appointments for patient
"RTN","EASMTRP1",111,0)
 N EASBEG,EASAP,EASND,EASCL
"RTN","EASMTRP1",112,0)
 ;
"RTN","EASMTRP1",113,0)
 S EASBEG=$$DT^XLFDT,EASAP=EASBEG
"RTN","EASMTRP1",114,0)
 F EASAP=EASBEG:0 S EASAP=$O(^DPT(DFN,"S",EASAP)) Q:'EASAP  D
"RTN","EASMTRP1",115,0)
 . Q:'$D(^DPT(DFN,"S",EASAP,0))
"RTN","EASMTRP1",116,0)
 . S EASND=^DPT(DFN,"S",EASAP,0)
"RTN","EASMTRP1",117,0)
 . S EASCL=+EASND
"RTN","EASMTRP1",118,0)
 . S EASAPT(EASCL)=EASAP
"RTN","EASMTRP1",119,0)
 Q
"RTN","EASMTRP1",120,0)
 ;
"RTN","EASMTRP1",121,0)
HDR(EASDT) ; Print report header
"RTN","EASMTRP1",122,0)
 N LINE,SPACE,TXT,HDR,TAB
"RTN","EASMTRP1",123,0)
 ;
"RTN","EASMTRP1",124,0)
 I $E(IOST,1,2)="C-" W @IOF
"RTN","EASMTRP1",125,0)
 S TXT="Means Test Expiration Report"
"RTN","EASMTRP1",126,0)
 S SPACE=(IOM-$L(TXT))/2
"RTN","EASMTRP1",127,0)
 S $P(HDR," ",SPACE)="",HDR=HDR_TXT
"RTN","EASMTRP1",128,0)
 W !,HDR K HDR
"RTN","EASMTRP1",129,0)
 ;
"RTN","EASMTRP1",130,0)
 S TXT="Anniversary Date(s): "_$$FMTE^XLFDT(EASDT("BEG"),"5D")_" - "_$$FMTE^XLFDT(EASDT("END"),"5D")
"RTN","EASMTRP1",131,0)
 S SPACE=(IOM-$L(TXT))/2
"RTN","EASMTRP1",132,0)
 S $P(HDR," ",SPACE)="",HDR=HDR_TXT
"RTN","EASMTRP1",133,0)
 W !,HDR K HDR
"RTN","EASMTRP1",134,0)
 ;
"RTN","EASMTRP1",135,0)
 W !!,"Printed: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","EASMTRP1",136,0)
 S PAGE=$G(PAGE)+1
"RTN","EASMTRP1",137,0)
 S TAB=IOM-8
"RTN","EASMTRP1",138,0)
 W ?TAB,"Page "_PAGE
"RTN","EASMTRP1",139,0)
 ;
"RTN","EASMTRP1",140,0)
 W !,"Patient",?22,"SSN",?35,"MT Expired",?46,"Status",?53,"Future Appts"
"RTN","EASMTRP1",141,0)
 S $P(LINE,"=",IOM)="" W !,LINE
"RTN","EASMTRP1",142,0)
 Q
"RTN","EASMTRP2")
0^48^B4866817
"RTN","EASMTRP2",1,0)
EASMTRP2 ; ALB/SCK - MEANS TEST REPORTS 2 ; 2/19/02
"RTN","EASMTRP2",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;MAR 15,2001
"RTN","EASMTRP2",3,0)
 Q
"RTN","EASMTRP2",4,0)
 ;
"RTN","EASMTRP2",5,0)
QUE ;
"RTN","EASMTRP2",6,0)
 N ZTSAVE
"RTN","EASMTRP2",7,0)
 ;
"RTN","EASMTRP2",8,0)
 S ZTSAVE("EAS1")=""
"RTN","EASMTRP2",9,0)
 D EN^XUTMDEVQ("PEND^EASMTRP2","EAS LETTERS DETAILED PENDING REPORT",.ZTSAVE)
"RTN","EASMTRP2",10,0)
 Q
"RTN","EASMTRP2",11,0)
PEND ;
"RTN","EASMTRP2",12,0)
 N CNT,EASIEN,PCNT,RCNT,EASX,TOT,PAGE,EAS0,EAS4,EAS6,EASPDT,DIRUT,EAX
"RTN","EASMTRP2",13,0)
 ;
"RTN","EASMTRP2",14,0)
 K ^TMP("EASPND",$J)
"RTN","EASMTRP2",15,0)
 S EASIEN=0
"RTN","EASMTRP2",16,0)
 ;
"RTN","EASMTRP2",17,0)
 F  S EASIEN=$O(^EAS(713.2,EASIEN)) Q:'EASIEN  D
"RTN","EASMTRP2",18,0)
 . I $P($G(^EAS(713.2,EASIEN,"Z")),U,2) D
"RTN","EASMTRP2",19,0)
 . . Q:$P($G(^EAS(713.2,EASIEN,"Z")),U,3)
"RTN","EASMTRP2",20,0)
 . . S EAS0=$P($G(^EAS(713.2,EASIEN,"Z")),U,1)
"RTN","EASMTRP2",21,0)
 . . S ^TMP("EASPND",$J,EAS0,0)=$G(^TMP("EASPND",$J,EAS0,0))+1
"RTN","EASMTRP2",22,0)
 . ;
"RTN","EASMTRP2",23,0)
 . I $P($G(^EAS(713.2,EASIEN,4)),U,2) D
"RTN","EASMTRP2",24,0)
 . . Q:$P($G(^EAS(713.2,EASIEN,4)),U,3)
"RTN","EASMTRP2",25,0)
 . . S EAS4=$P($G(^EAS(713.2,EASIEN,4)),U,1)
"RTN","EASMTRP2",26,0)
 . . S ^TMP("EASPND",$J,EAS4,4)=$G(^TMP("EASPND",$J,EAS4,4))+1
"RTN","EASMTRP2",27,0)
 . ;
"RTN","EASMTRP2",28,0)
 . I $P($G(^EAS(713.2,EASIEN,6)),U,2) D
"RTN","EASMTRP2",29,0)
 . . Q:$P($G(^EAS(713.2,EASIEN,6)),U,3)
"RTN","EASMTRP2",30,0)
 . . S EAS6=$P($G(^EAS(713.2,EASIEN,6)),U,1)
"RTN","EASMTRP2",31,0)
 . . S ^TMP("EASPND",$J,EAS6,6)=$G(^TMP("EASPND",$J,EAS6,6))+1
"RTN","EASMTRP2",32,0)
 ;;
"RTN","EASMTRP2",33,0)
 S EASPDT=0
"RTN","EASMTRP2",34,0)
 D HDR
"RTN","EASMTRP2",35,0)
 F  S EASPDT=$O(^TMP("EASPND",$J,EASPDT)) Q:'EASPDT  D  Q:$D(DIRUT)
"RTN","EASMTRP2",36,0)
 . I ($Y+6)>IOSL D
"RTN","EASMTRP2",37,0)
 . . S DIR(0)="E"
"RTN","EASMTRP2",38,0)
 . . D ^DIR K DIR
"RTN","EASMTRP2",39,0)
 . . Q:$D(DIRUT)
"RTN","EASMTRP2",40,0)
 . . D HDR
"RTN","EASMTRP2",41,0)
 . W !?4,$$FMTE^XLFDT(EASPDT),?20
"RTN","EASMTRP2",42,0)
 . S TOT=0
"RTN","EASMTRP2",43,0)
 . F EAX=6,4,0 D
"RTN","EASMTRP2",44,0)
 . . S CNT=$G(^TMP("EASPND",$J,EASPDT,EAX))
"RTN","EASMTRP2",45,0)
 . . W $J(+CNT,6),"    "
"RTN","EASMTRP2",46,0)
 . . S TOT=$G(TOT)+(+CNT)
"RTN","EASMTRP2",47,0)
 . W $J(TOT,8)
"RTN","EASMTRP2",48,0)
 ;
"RTN","EASMTRP2",49,0)
 K ^TMP("EASPND",$J)
"RTN","EASMTRP2",50,0)
 Q
"RTN","EASMTRP2",51,0)
 ;
"RTN","EASMTRP2",52,0)
HDR ;
"RTN","EASMTRP2",53,0)
 N TAB,LINE
"RTN","EASMTRP2",54,0)
 ;
"RTN","EASMTRP2",55,0)
 I $E(IOST,1,2)="C-" W @IOF
"RTN","EASMTRP2",56,0)
 W !,"Detailed Pending Letters Report"
"RTN","EASMTRP2",57,0)
 W !,"Printed: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","EASMTRP2",58,0)
 S PAGE=$G(PAGE)+1
"RTN","EASMTRP2",59,0)
 S TAB=IOM-8
"RTN","EASMTRP2",60,0)
 W ?TAB,"PAGE: ",PAGE
"RTN","EASMTRP2",61,0)
 W !!?4,"Sched. Date",?20,"60-Day","    ","30-Day","    "," 0-day","    ","   TOTAL"
"RTN","EASMTRP2",62,0)
 S $P(LINE,"=",IOM)="" W !,LINE
"RTN","EASMTRP2",63,0)
 Q
"RTN","EASMTRPT")
0^6^B50625072
"RTN","EASMTRPT",1,0)
EASMTRPT ; MIN/TCM ALB/SCK - AUTOMATED MEANS TEST LETTERS REPORTS ; 7/6/01
"RTN","EASMTRPT",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;MAR 15,2001
"RTN","EASMTRPT",3,0)
 ;
"RTN","EASMTRPT",4,0)
UNRTN ;  Unreturned letters report
"RTN","EASMTRPT",5,0)
 N EASN,CTR,EASNODE,TOT,EAS6,EASIEN,EAX
"RTN","EASMTRPT",6,0)
 ;
"RTN","EASMTRPT",7,0)
 W @IOF
"RTN","EASMTRPT",8,0)
 D WAIT^DICD
"RTN","EASMTRPT",9,0)
 ;
"RTN","EASMTRPT",10,0)
 F EAX=0,30,60 S CTR(EAX)=0
"RTN","EASMTRPT",11,0)
 ;
"RTN","EASMTRPT",12,0)
 S EASIEN=0
"RTN","EASMTRPT",13,0)
 F  S EASIEN=$O(^EAS(713.2,"AC",0,EASIEN)) Q:'EASIEN  D
"RTN","EASMTRPT",14,0)
 . I $P($G(^EAS(713.2,EASIEN,"Z")),U,3) S CTR(0)=CTR(0)+1 Q
"RTN","EASMTRPT",15,0)
 . I $P($G(^EAS(713.2,EASIEN,4)),U,3) S CTR(30)=CTR(30)+1 Q
"RTN","EASMTRPT",16,0)
 . I $P($G(^EAS(713.2,EASIEN,6)),U,3) S CTR(60)=CTR(60)+1 Q
"RTN","EASMTRPT",17,0)
PRT1 ;
"RTN","EASMTRPT",18,0)
 W !!,$CHAR(7),"Summary of Most Recent Unreturned Means Test Letters"
"RTN","EASMTRPT",19,0)
 ;
"RTN","EASMTRPT",20,0)
 W !!,"60-day letters printed: ",$J(CTR(60),6)
"RTN","EASMTRPT",21,0)
 W !!,"30-day letters printed: ",$J(CTR(30),6)
"RTN","EASMTRPT",22,0)
 W !!," 0-day letters printed: ",$J(CTR(0),6)
"RTN","EASMTRPT",23,0)
 W !,"=============================="
"RTN","EASMTRPT",24,0)
 S TOT=CTR(60)+CTR(30)+CTR(0)
"RTN","EASMTRPT",25,0)
 W !!,"                 Total: ",$J(TOT,6)
"RTN","EASMTRPT",26,0)
 ;
"RTN","EASMTRPT",27,0)
 W !!
"RTN","EASMTRPT",28,0)
 D PAUSE^EASMTUTL
"RTN","EASMTRPT",29,0)
 ;
"RTN","EASMTRPT",30,0)
 Q
"RTN","EASMTRPT",31,0)
 ;
"RTN","EASMTRPT",32,0)
LTRSTAT ; Means Test Letter Statistics Report
"RTN","EASMTRPT",33,0)
 ;
"RTN","EASMTRPT",34,0)
 D EN^XUTMDEVQ("QUE2^EASMTRPT","EAS MT LETTER STATISTICS REPORT")
"RTN","EASMTRPT",35,0)
 Q
"RTN","EASMTRPT",36,0)
 ;
"RTN","EASMTRPT",37,0)
QUE2 ; Queued entry point for letters statistics
"RTN","EASMTRPT",38,0)
 N EAYCC,EANCC,EASN,EANTOT,EAYTOT,EASR,EAS1,EAS2,EASX,EAX,GTOT
"RTN","EASMTRPT",39,0)
 ;
"RTN","EASMTRPT",40,0)
 ; Begin search Letter Status File, #713.2
"RTN","EASMTRPT",41,0)
 ; Set counters
"RTN","EASMTRPT",42,0)
 S EAPRHB=0,GTOT=0
"RTN","EASMTRPT",43,0)
 F EASX=0,30,60 S EAYTOT(EASX)=0,EANTOT(EASX)=0
"RTN","EASMTRPT",44,0)
 ;
"RTN","EASMTRPT",45,0)
 S EAS1=0
"RTN","EASMTRPT",46,0)
 F  S EAS1=$O(^EAS(713.2,"AD",EAS1)) Q:'EAS1  D
"RTN","EASMTRPT",47,0)
 . S EAS2=0
"RTN","EASMTRPT",48,0)
 . F  S EAS2=$O(^EAS(713.2,"AD",EAS1,EAS2)) Q:'EAS2  D
"RTN","EASMTRPT",49,0)
 . . I $D(^EAS(713.2,"AC",1,EAS2)) D  ; Process returned Means Test letters
"RTN","EASMTRPT",50,0)
 . . . I $P($G(^EAS(713.2,EAS2,"Z")),U,3) S EAYTOT(0)=EAYTOT(0)+1 Q
"RTN","EASMTRPT",51,0)
 . . . I $P($G(^EAS(713.2,EAS2,4)),U,3) S EAYTOT(30)=EAYTOT(30)+1 Q
"RTN","EASMTRPT",52,0)
 . . . I $P($G(^EAS(713.2,EAS2,6)),U,3) S EAYTOT(60)=EAYTOT(60)+1 Q
"RTN","EASMTRPT",53,0)
 . . ;
"RTN","EASMTRPT",54,0)
 . . I $D(^EAS(713.2,"AC",0,EAS2)) D  ; Process unreturned MT Letters
"RTN","EASMTRPT",55,0)
 . . . D INCPRHB(EAS2,.EAPRHB)
"RTN","EASMTRPT",56,0)
 . . . I $P($G(^EAS(713.2,EAS2,"Z")),U,3) S EANTOT(0)=EANTOT(0)+1 Q
"RTN","EASMTRPT",57,0)
 . . . I $P($G(^EAS(713.2,EAS2,4)),U,3) S EANTOT(30)=EANTOT(30)+1 Q
"RTN","EASMTRPT",58,0)
 . . . I $P($G(^EAS(713.2,EAS2,6)),U,3) S EANTOT(60)=EANTOT(60)+1 Q
"RTN","EASMTRPT",59,0)
PRT2 ;
"RTN","EASMTRPT",60,0)
 D HDR("MEANS TEST LETTERS STATISTIC REPORT")
"RTN","EASMTRPT",61,0)
 ;
"RTN","EASMTRPT",62,0)
 W !,"Letter type:",?25,"60-day",?35,"30-day",?45," 0-day",?55,"Totals"
"RTN","EASMTRPT",63,0)
 ;
"RTN","EASMTRPT",64,0)
 W !!,"Letters printed:"
"RTN","EASMTRPT",65,0)
 W ?25,$J(EAYTOT(60)+EANTOT(60),6),?35,$J(EAYTOT(30)+EANTOT(30),6),?45,$J(EAYTOT(0)+EANTOT(0),6)
"RTN","EASMTRPT",66,0)
 F EAX=60,30,0 S GTOT=EAYTOT(EAX)+EANTOT(EAX)+$G(GTOT)
"RTN","EASMTRPT",67,0)
 W ?55,$J(GTOT,6)
"RTN","EASMTRPT",68,0)
 W !!,"Printed and Returned:"
"RTN","EASMTRPT",69,0)
 W ?25,$J(EAYTOT(60),6),?35,$J(EAYTOT(30),6),?45,$J(EAYTOT(0),6)
"RTN","EASMTRPT",70,0)
 W ?55,$J((EAYTOT(0)+EAYTOT(30)+EAYTOT(60)),6)
"RTN","EASMTRPT",71,0)
 W !!,"Printed and Not Returned:"
"RTN","EASMTRPT",72,0)
 W ?25,$J(EANTOT(60),6),?35,$J(EANTOT(30),6),?45,$J(EANTOT(0),6)
"RTN","EASMTRPT",73,0)
 W ?55,$J((EANTOT(0)+EANTOT(30)+EANTOT(60)),6)
"RTN","EASMTRPT",74,0)
 W !!,"Count of patient records set to prohibit letter during date range: ",EAPRHB
"RTN","EASMTRPT",75,0)
 I $E(IOST,1,2)="C-" D PAUSE^EASMTUTL
"RTN","EASMTRPT",76,0)
 Q
"RTN","EASMTRPT",77,0)
 ;
"RTN","EASMTRPT",78,0)
SUMMRY ;  Automated MT Ltrs Summary
"RTN","EASMTRPT",79,0)
 N SDATE,EDATE,EASDT,SDISP,EDISP,EAX
"RTN","EASMTRPT",80,0)
 ;
"RTN","EASMTRPT",81,0)
 S EASDT=$$ASK("Processing")
"RTN","EASMTRPT",82,0)
 Q:'EASDT
"RTN","EASMTRPT",83,0)
 S (SDATE,SDISP)=$P(EASDT,U)
"RTN","EASMTRPT",84,0)
 S (EDATE,EDISP)=$P(EASDT,U,2)
"RTN","EASMTRPT",85,0)
 S SDATE=$$FMADD^XLFDT(SDATE,"","","",-1)
"RTN","EASMTRPT",86,0)
 S ZTSAVE("SDATE")="",ZTSAVE("EDATE")="",ZTSAVE("SDISP")="",ZTSAVE("EDISP")=""
"RTN","EASMTRPT",87,0)
 W !!,$CHAR(7),"A 132-Column printer is required for this report"
"RTN","EASMTRPT",88,0)
 D EN^XUTMDEVQ("QUE3^EASMTRPT","EAS MT PROCESSING SUMMARY REPORT",.ZTSAVE)
"RTN","EASMTRPT",89,0)
 Q
"RTN","EASMTRPT",90,0)
 ;
"RTN","EASMTRPT",91,0)
QUE3 ;  PROCESSING SUMMARY REPORT
"RTN","EASMTRPT",92,0)
 N EASN,EASIEN,EANODE,EALNE,EATYP,PAGE,EASABRT,COL,EAWP,WP
"RTN","EASMTRPT",93,0)
 N COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9
"RTN","EASMTRPT",94,0)
 ;
"RTN","EASMTRPT",95,0)
 S COL1=0,COL2=10,COL3=50,COL4=63,COL5=73,COL6=84,COL7=95,COL8=108,COL9=120
"RTN","EASMTRPT",96,0)
 S PAGE=1
"RTN","EASMTRPT",97,0)
 D HDR("AUTOMATED MT LETTERS SUMMARY",SDISP,EDISP)
"RTN","EASMTRPT",98,0)
 ;
"RTN","EASMTRPT",99,0)
 W !!,"Entry",?COL2,"Patient",?COL3,"Means Test",?COL4,"Letter",?COL5,"Print",?COL6,"Flag to",?COL7,"Letter",?COL8,"Print",?COL9,"Prohibit"
"RTN","EASMTRPT",100,0)
 W !,?COL3,"Date",?COL4,"Type",?COL5,"Date",?COL6,"Print",?COL7,"Printed?",?COL8,"Date",?COL9,"Flag?",!
"RTN","EASMTRPT",101,0)
 ;
"RTN","EASMTRPT",102,0)
 S EASN=SDATE
"RTN","EASMTRPT",103,0)
 F  S EASN=$O(^EAS(713.2,"AD",EASN)) Q:'EASN!(EASN>EDATE)  D  Q:$G(EASABRT)
"RTN","EASMTRPT",104,0)
 . S EASIEN=0
"RTN","EASMTRPT",105,0)
 . F  S EASIEN=$O(^EAS(713.2,"AD",EASN,EASIEN)) Q:'EASIEN  D  Q:$G(EASABRT)
"RTN","EASMTRPT",106,0)
 . . K EANODE0 S EANODE0=$G(^EAS(713.2,EASIEN,0))
"RTN","EASMTRPT",107,0)
 . . W !,EASIEN,?COL2,$E($$GET1^DIQ(713.2,EASIEN,2),1,25)_" ("_$$LAST4($P(EANODE0,U,2))_")"
"RTN","EASMTRPT",108,0)
 . . I $$DECEASED^EASMTUTL(EASIEN) W " *D*"
"RTN","EASMTRPT",109,0)
 . . W ?COL3,$$FMTE^XLFDT($P(EANODE0,U,3),"2D")
"RTN","EASMTRPT",110,0)
 . . K EANODE6 S EANODE6=$G(^EAS(713.2,EASIEN,6))
"RTN","EASMTRPT",111,0)
 . . W ?COL4,"60-Day",?COL5,$$FMTE^XLFDT($P(EANODE6,U,1),"2D"),?COL6,$S($P(EANODE6,U,2)=1:"YES",1:"NO")
"RTN","EASMTRPT",112,0)
 . . W ?COL7,$S($P(EANODE6,U,3)=1:"YES",1:"NO"),?COL8,$$FMTE^XLFDT($P(EANODE6,U,4),"2D"),?COL9
"RTN","EASMTRPT",113,0)
 . . I $D(^EAS(713.1,"AP",1,$P(EANODE0,U,2))) W "YES"
"RTN","EASMTRPT",114,0)
 . . W !
"RTN","EASMTRPT",115,0)
 . . I $P($G(EANODE0),U,4) W ?15,"MT Returned: ",$$FMTE^XLFDT($P(EANODE0,U,5),"2D")
"RTN","EASMTRPT",116,0)
 . . K EANODE4 S EANODE4=$G(^EAS(713.2,EASIEN,4))
"RTN","EASMTRPT",117,0)
 . . W ?COL4,"30-Day",?COL5,$$FMTE^XLFDT($P(EANODE4,U,1),"2D"),?COL6,$S($P(EANODE4,U,2)=1:"YES",1:"NO")
"RTN","EASMTRPT",118,0)
 . . W ?COL7,$S($P(EANODE4,U,3)=1:"YES",1:"NO"),?COL8,$$FMTE^XLFDT($P(EANODE4,U,4),"2D"),!
"RTN","EASMTRPT",119,0)
 . . W ?15 I $P($G(EANODE0),U,4) S EAWP=$$GET1^DIQ(713.2,EASIEN,7,"","WP") D
"RTN","EASMTRPT",120,0)
 . . . W $E(WP(1),1,20)
"RTN","EASMTRPT",121,0)
 . . K EANODEZ S EANODEZ=$G(^EAS(713.2,EASIEN,"Z"))
"RTN","EASMTRPT",122,0)
 . . W ?COL4,"0-Day",?COL5,$$FMTE^XLFDT($P(EANODEZ,U,1),"2D"),?COL6,$S($P(EANODEZ,U,2)=1:"YES",1:"NO")
"RTN","EASMTRPT",123,0)
 . . W ?COL7,$S($P(EANODEZ,U,3)=1:"YES",1:"NO"),?COL8,$$FMTE^XLFDT($P(EANODEZ,U,4),"2D"),!
"RTN","EASMTRPT",124,0)
 . . S $P(LINE,"-",IOM)="" W !?42,$E(LINE,1,IOM-42)
"RTN","EASMTRPT",125,0)
 . . I ($Y+6)>IOSL D
"RTN","EASMTRPT",126,0)
 . . . D HDR("AUTOMATED MT LETTERS SUMMARY",SDISP,EDISP)
"RTN","EASMTRPT",127,0)
 . . . Q:$G(EASABRT)
"RTN","EASMTRPT",128,0)
 . . . W !!,"Entry",?COL2,"Patient",?COL3,"Means Test",?COL4,"Letter",?COL5,"Print",?COL6,"Flag to",?COL7,"Letter",?COL8,"Print",?COL9,"Prohibit"
"RTN","EASMTRPT",129,0)
 . . . W !,?COL3,"Date",?COL4,"Type",?COL5,"Date",?COL6,"Print",?COL7,"Printed?",?COL8,"Date",?COL9,"Flag?",!
"RTN","EASMTRPT",130,0)
 Q
"RTN","EASMTRPT",131,0)
 ;
"RTN","EASMTRPT",132,0)
HDR(TITLE,SDISP,EDISP) ;  Print report header
"RTN","EASMTRPT",133,0)
 N LINE,TAB
"RTN","EASMTRPT",134,0)
 ;
"RTN","EASMTRPT",135,0)
 I $E(IOST,1,2)="C-" D  Q:$G(EASABRT)
"RTN","EASMTRPT",136,0)
 . S DIR(0)="E"
"RTN","EASMTRPT",137,0)
 . D ^DIR K DIR
"RTN","EASMTRPT",138,0)
 . I 'Y S EASABRT=1
"RTN","EASMTRPT",139,0)
 ;
"RTN","EASMTRPT",140,0)
 W @IOF
"RTN","EASMTRPT",141,0)
 W TITLE
"RTN","EASMTRPT",142,0)
 S SDISP=$G(SDISP),EDISP=$G(EDISP)
"RTN","EASMTRPT",143,0)
 I SDISP>0,EDISP>0 W !,"Date Range: ",$$FMTE^XLFDT(SDISP)," thru ",$$FMTE^XLFDT(EDISP)
"RTN","EASMTRPT",144,0)
 ;
"RTN","EASMTRPT",145,0)
 W !!,"Print Date: ",$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","EASMTRPT",146,0)
 S TAB=IOM-8
"RTN","EASMTRPT",147,0)
 I $G(PAGE) W ?TAB,"Page "_PAGE S PAGE=PAGE+1
"RTN","EASMTRPT",148,0)
 ;
"RTN","EASMTRPT",149,0)
 S $P(LINE,"=",IOM)="" W !,LINE
"RTN","EASMTRPT",150,0)
 Q
"RTN","EASMTRPT",151,0)
 ;
"RTN","EASMTRPT",152,0)
ASK(PRMPT)   ; Get Date range
"RTN","EASMTRPT",153,0)
 N DIR,DIRUT,SDATE,EDATE
"RTN","EASMTRPT",154,0)
 ;
"RTN","EASMTRPT",155,0)
 ; Get date range for the report
"RTN","EASMTRPT",156,0)
 S DIR(0)="DAO^2881001:DT:EX"
"RTN","EASMTRPT",157,0)
 S DIR("A")="Start with "_PRMPT_" date: "
"RTN","EASMTRPT",158,0)
 S DIR("?",1)="Date cannot be earlier than October 1, 1988"
"RTN","EASMTRPT",159,0)
 S DIR("?")="^D HELP^%DTC"
"RTN","EASMTRPT",160,0)
 S DIR("B")="OCT 1, 1998"
"RTN","EASMTRPT",161,0)
 D ^DIR
"RTN","EASMTRPT",162,0)
 I $D(DIRUT) Q 0
"RTN","EASMTRPT",163,0)
 S SDATE=Y
"RTN","EASMTRPT",164,0)
 ;
"RTN","EASMTRPT",165,0)
 S DIR(0)="DAO^"_SDATE_":DT:EX"
"RTN","EASMTRPT",166,0)
 S DIR("A")="Ending "_PRMPT_" date: "
"RTN","EASMTRPT",167,0)
 S DIR("?",1)="Date must after "_$$FMTE^XLFDT(SDATE)_" and before or equal to "_$$FMTE^XLFDT(DT)
"RTN","EASMTRPT",168,0)
 S DIR("?")="^D HELP^%DTC"
"RTN","EASMTRPT",169,0)
 S DIR("B")="TODAY"
"RTN","EASMTRPT",170,0)
 D ^DIR K DIR
"RTN","EASMTRPT",171,0)
 I $D(DIRUT) Q 0
"RTN","EASMTRPT",172,0)
 S EDATE=Y
"RTN","EASMTRPT",173,0)
 Q $G(SDATE)_U_$G(EDATE)
"RTN","EASMTRPT",174,0)
 ;
"RTN","EASMTRPT",175,0)
INCPRHB(EASN,EAPRHB) ; Increment Prohibited Letters Flag count
"RTN","EASMTRPT",176,0)
 ; Input
"RTN","EASMTRPT",177,0)
 ;    EASN   -
"RTN","EASMTRPT",178,0)
 ;    EAPRHB -
"RTN","EASMTRPT",179,0)
 ;
"RTN","EASMTRPT",180,0)
 N EASPAT,EASDFN
"RTN","EASMTRPT",181,0)
 ;
"RTN","EASMTRPT",182,0)
 Q:'EASN
"RTN","EASMTRPT",183,0)
 S EASPAT=$G(^EAS(713.2,EASN,2))
"RTN","EASMTRPT",184,0)
 Q:'EASPAT
"RTN","EASMTRPT",185,0)
 I $D(^EAS(713.1,"AP",1,EASPAT))  D
"RTN","EASMTRPT",186,0)
 . S EAPRHB=EAPRHB+1
"RTN","EASMTRPT",187,0)
 . S EASDFN=$O(^EAS(713.1,"B",EASPAT,0))
"RTN","EASMTRPT",188,0)
 . S EAPRHB(EASDFN)=""
"RTN","EASMTRPT",189,0)
 Q
"RTN","EASMTRPT",190,0)
 ;
"RTN","EASMTRPT",191,0)
LAST4(EASIEN) ; Return last four for patient
"RTN","EASMTRPT",192,0)
 N DFN,RSLT
"RTN","EASMTRPT",193,0)
 ;
"RTN","EASMTRPT",194,0)
 S DFN=$$GET1^DIQ(713.1,EASIEN,.01,"I")
"RTN","EASMTRPT",195,0)
 I '$G(DFN) Q 0
"RTN","EASMTRPT",196,0)
 D PID^VADPT
"RTN","EASMTRPT",197,0)
 S RSLT=VA("BID")
"RTN","EASMTRPT",198,0)
 D KVA^VADPT
"RTN","EASMTRPT",199,0)
 Q RSLT
"RTN","EASMTUTL")
0^7^B37921663
"RTN","EASMTUTL",1,0)
EASMTUTL ; ALB/SCK - AUTOMATED MEANS TEST LETTERS UTILITIES ; 7/2/01
"RTN","EASMTUTL",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3**;MAR 15,2001
"RTN","EASMTUTL",3,0)
 ;
"RTN","EASMTUTL",4,0)
 Q
"RTN","EASMTUTL",5,0)
 ;
"RTN","EASMTUTL",6,0)
PAUSE ;  Screen pause, user must press key to continue
"RTN","EASMTUTL",7,0)
 S DIR(0)="FAO",DIR("A")="Press any key to continue..."
"RTN","EASMTUTL",8,0)
 D ^DIR K DIR
"RTN","EASMTUTL",9,0)
 Q
"RTN","EASMTUTL",10,0)
 ;
"RTN","EASMTUTL",11,0)
CLRFLG(EAX,DA) ; Clears flags in File #713.2, For development
"RTN","EASMTUTL",12,0)
 N DIE,DR
"RTN","EASMTUTL",13,0)
 ;
"RTN","EASMTUTL",14,0)
 Q:EAX=1
"RTN","EASMTUTL",15,0)
 S:EAX=2 DR="9///0"
"RTN","EASMTUTL",16,0)
 S:EAX=3 DR="9///0;12///0"
"RTN","EASMTUTL",17,0)
 S:EAX=4 DR="9///0;12///0"
"RTN","EASMTUTL",18,0)
 S:EAX=0 DR="9///0;12///0;18///0"
"RTN","EASMTUTL",19,0)
 S DIE="^EAS(713.2,"
"RTN","EASMTUTL",20,0)
 D ^DIE K DIE
"RTN","EASMTUTL",21,0)
 Q
"RTN","EASMTUTL",22,0)
 ;
"RTN","EASMTUTL",23,0)
LOCK(ACTION) ; Flag IN USE field in EAS Parameters file, #713
"RTN","EASMTUTL",24,0)
 ; Input
"RTN","EASMTUTL",25,0)
 ;   ACTION - Locking action
"RTN","EASMTUTL",26,0)
 ;            1 = Flag IN USE for Automated Generator is running
"RTN","EASMTUTL",27,0)
 ;            0 = Flag IN USE for Automated Generator is not running
"RTN","EASMTUTL",28,0)
 ; Output
"RTN","EASMTUTL",29,0)
 ;        1 if action was successful
"RTN","EASMTUTL",30,0)
 ;        0 if action was not successful
"RTN","EASMTUTL",31,0)
 N RSLT
"RTN","EASMTUTL",32,0)
 ;
"RTN","EASMTUTL",33,0)
 I ACTION,$D(^EAS(713,"ALOCK",1)) Q $G(RSLT)
"RTN","EASMTUTL",34,0)
 ;
"RTN","EASMTUTL",35,0)
 S DIE="^EAS(713,",DA=1,DR="30////^S X=ACTION"
"RTN","EASMTUTL",36,0)
 D ^DIE K DIE
"RTN","EASMTUTL",37,0)
 S RSLT=1
"RTN","EASMTUTL",38,0)
 Q +$G(RSLT)
"RTN","EASMTUTL",39,0)
 ;
"RTN","EASMTUTL",40,0)
ALERT(ERRMSG) ; Post an alert message to the EAS Letters Mail group
"RTN","EASMTUTL",41,0)
 N XMY,XMTEXT,XMDUZ,XMSUB,MSG
"RTN","EASMTUTL",42,0)
 ;
"RTN","EASMTUTL",43,0)
 S MSG(1)="Notification:"
"RTN","EASMTUTL",44,0)
 S MSG(2)=ERRMSG
"RTN","EASMTUTL",45,0)
 ;
"RTN","EASMTUTL",46,0)
 S XMY("G.EAS MTLETTERS")=""
"RTN","EASMTUTL",47,0)
 S XMTEXT="MSG("
"RTN","EASMTUTL",48,0)
 S XMDUZ="EAS Auto MT Letters"
"RTN","EASMTUTL",49,0)
 S XMSUB="EAS Means Test Letter's Notice"
"RTN","EASMTUTL",50,0)
 D ^XMD
"RTN","EASMTUTL",51,0)
 Q
"RTN","EASMTUTL",52,0)
 ;
"RTN","EASMTUTL",53,0)
ADRERR(EASADD,DFN) ; Error notification for missing or invalid patient address
"RTN","EASMTUTL",54,0)
 N MSG,XMY,XMTEXT,XMDUZ,XMSUB,VAROOT,EASDEM,VA,EASPRF
"RTN","EASMTUTL",55,0)
 ;
"RTN","EASMTUTL",56,0)
 S VAROOT="EASDEM"
"RTN","EASMTUTL",57,0)
 D DEM^VADPT
"RTN","EASMTUTL",58,0)
 D PID^VADPT6
"RTN","EASMTUTL",59,0)
 S EASPRF=$$GET1^DIQ(2,DFN,27.02)
"RTN","EASMTUTL",60,0)
 I EASPRF']"" S EASPRF="No Preferred Facility"
"RTN","EASMTUTL",61,0)
 ;
"RTN","EASMTUTL",62,0)
 S MSG(1)="The following patient does not have a complete permanent mailing"
"RTN","EASMTUTL",63,0)
 S MSG(2)="address.  A means test reminder letter could not be mailed."
"RTN","EASMTUTL",64,0)
 S MSG(3)=" "
"RTN","EASMTUTL",65,0)
 S MSG(4)="       Patient : "_EASDEM(1)
"RTN","EASMTUTL",66,0)
 S MSG(5)="        Last 4 : "_VA("BID")
"RTN","EASMTUTL",67,0)
 S MSG(6)="Address Line 1 : "_EASADD(1)
"RTN","EASMTUTL",68,0)
 S MSG(7)="          City : "_EASADD(4)
"RTN","EASMTUTL",69,0)
 S MSG(8)="         State : "_$P(EASADD(5),U,2)
"RTN","EASMTUTL",70,0)
 S MSG(9)="       Zipcode : "_$P(EASADD(11),U,2)
"RTN","EASMTUTL",71,0)
 S MSG(10)=""
"RTN","EASMTUTL",72,0)
 S MSG(11)="           DFN : "_$G(DFN)
"RTN","EASMTUTL",73,0)
 S MSG(13)=""
"RTN","EASMTUTL",74,0)
 S MSG(14)="This patient's letter entry will stay in 'FLAGGED-TO-PRINT' status until"
"RTN","EASMTUTL",75,0)
 S MSG(15)="the address is corrected."
"RTN","EASMTUTL",76,0)
 ;
"RTN","EASMTUTL",77,0)
 S XMY("G.EAS MTLETTERS")=""
"RTN","EASMTUTL",78,0)
 S XMTEXT="MSG("
"RTN","EASMTUTL",79,0)
 S XMDUZ="EAS Auto MT Letters"
"RTN","EASMTUTL",80,0)
 S XMSUB="Incomplete Addr: "_EASPRF
"RTN","EASMTUTL",81,0)
 D ^XMD
"RTN","EASMTUTL",82,0)
 Q
"RTN","EASMTUTL",83,0)
 ;
"RTN","EASMTUTL",84,0)
CLRLCK ;  Clears IN USE field of the EAS MT PARAMETERS if an error occurs and locks the field
"RTN","EASMTUTL",85,0)
 N DIE,DR,DA
"RTN","EASMTUTL",86,0)
 ;
"RTN","EASMTUTL",87,0)
 S DA=1,DIE="^EAS(713,",DR="30///0"
"RTN","EASMTUTL",88,0)
 D ^DIE
"RTN","EASMTUTL",89,0)
 Q
"RTN","EASMTUTL",90,0)
 ;
"RTN","EASMTUTL",91,0)
PROHBIT ; Set or delete the Prohibit fields in the Patient Status file, #713.1
"RTN","EASMTUTL",92,0)
 N DIR,DIRUT,EASF,DIC,DIE,Y,X,EASIEN,DR,DA,DFN,EASN
"RTN","EASMTUTL",93,0)
 ;
"RTN","EASMTUTL",94,0)
 S DIR(0)="S^S:Set Prohibit Flag;R:Remove Prohibit Flag"
"RTN","EASMTUTL",95,0)
 S DIR("A")="Set or remove the MT Prohibit flag"
"RTN","EASMTUTL",96,0)
 S DIR("?")="Select 'S' to set flag, 'R' to remove the flag"
"RTN","EASMTUTL",97,0)
 D ^DIR K DIR
"RTN","EASMTUTL",98,0)
 Q:$D(DIRUT)
"RTN","EASMTUTL",99,0)
 S EASF=Y
"RTN","EASMTUTL",100,0)
 ;
"RTN","EASMTUTL",101,0)
 I EASF="R"!(EASF="r") D  Q:$D(DIRUT) 
"RTN","EASMTUTL",102,0)
 . S DIR(0)="PAO^713.1:EMZ"
"RTN","EASMTUTL",103,0)
 . S DIR("A")="Select Patient: "
"RTN","EASMTUTL",104,0)
 . D ^DIR K DIR
"RTN","EASMTUTL",105,0)
 . S EASIEN=+Y
"RTN","EASMTUTL",106,0)
 ;
"RTN","EASMTUTL",107,0)
 I EASF="S"!(EASF="s") D  Q:$D(DIRUT)
"RTN","EASMTUTL",108,0)
 . S DIR(0)="PAO^2:EMZ"
"RTN","EASMTUTL",109,0)
 . S DIR("A")="Select Patient: "
"RTN","EASMTUTL",110,0)
 . D ^DIR K DIR
"RTN","EASMTUTL",111,0)
 . Q:$D(DIRUT)
"RTN","EASMTUTL",112,0)
 . S DFN=+Y
"RTN","EASMTUTL",113,0)
 . I '$D(^EAS(713.1,"B",DFN)) D  Q:$D(DIRUT)!('Y)
"RTN","EASMTUTL",114,0)
 . . S DIR(0)="Y",DIR("B")="YES"
"RTN","EASMTUTL",115,0)
 . . S DIR("A")="Add patient to the Patient Status File"
"RTN","EASMTUTL",116,0)
 . . D ^DIR K DIR
"RTN","EASMTUTL",117,0)
 . . Q:$D(DIRUT)!('Y)
"RTN","EASMTUTL",118,0)
 . . S DIC="^EAS(713.1,",DIC(0)="Z",X=DFN
"RTN","EASMTUTL",119,0)
 . . D FILE^DICN
"RTN","EASMTUTL",120,0)
 . . S EASIEN=+Y
"RTN","EASMTUTL",121,0)
 . I $D(^EAS(713.1,"B",DFN)) S EASIEN=$O(^EAS(713.1,"B",DFN,0))
"RTN","EASMTUTL",122,0)
 ;
"RTN","EASMTUTL",123,0)
 Q:'EASIEN
"RTN","EASMTUTL",124,0)
 ;
"RTN","EASMTUTL",125,0)
 S DIE="^EAS(713.1,",DA=EASIEN
"RTN","EASMTUTL",126,0)
 S:EASF="S" DR="2///YES;3;5///^S X=$$NOW^XLFDT;4///^S X=DUZ;10"
"RTN","EASMTUTL",127,0)
 S:EASF="R" DR="2///@;3///@;5///@;4///@;10///@"
"RTN","EASMTUTL",128,0)
 D ^DIE K DIE
"RTN","EASMTUTL",129,0)
 ;
"RTN","EASMTUTL",130,0)
 Q
"RTN","EASMTUTL",131,0)
 ;
"RTN","EASMTUTL",132,0)
EDTLTRS ;
"RTN","EASMTUTL",133,0)
 N DIR,EASIEN
"RTN","EASMTUTL",134,0)
 ;
"RTN","EASMTUTL",135,0)
 S DIR(0)="P^713.3:EMZ"
"RTN","EASMTUTL",136,0)
 S DIR("A")="Select Letter"
"RTN","EASMTUTL",137,0)
 D ^DIR K DIR
"RTN","EASMTUTL",138,0)
 Q:$D(DIRUT)
"RTN","EASMTUTL",139,0)
 S EASIEN=+Y
"RTN","EASMTUTL",140,0)
 ;
"RTN","EASMTUTL",141,0)
 S DIE="^EAS(713.3,",DA=EASIEN,DR="4"
"RTN","EASMTUTL",142,0)
 D ^DIE
"RTN","EASMTUTL",143,0)
 Q
"RTN","EASMTUTL",144,0)
 ;
"RTN","EASMTUTL",145,0)
MTRTN ; Update the letter status file, #713.2, with returned Means Test information
"RTN","EASMTUTL",146,0)
 N DIE,DIC,EASIEN,DR,DA,Y
"RTN","EASMTUTL",147,0)
 ;
"RTN","EASMTUTL",148,0)
 S DIC="^EAS(713.2,",DIC(0)="AEQM",DIC("A")="Select the Letter Status entry to update: "
"RTN","EASMTUTL",149,0)
 D ^DIC K DIC
"RTN","EASMTUTL",150,0)
 Q:Y<0
"RTN","EASMTUTL",151,0)
 S EASIEN=+Y
"RTN","EASMTUTL",152,0)
 ;
"RTN","EASMTUTL",153,0)
 S DIE="^EAS(713.2,",DA=EASIEN
"RTN","EASMTUTL",154,0)
 S DR="4;I X=0 S Y=0;5;7;6////^S X=DUZ"
"RTN","EASMTUTL",155,0)
 L +^EAS(713.2,EASIEN):0 I $T D 
"RTN","EASMTUTL",156,0)
 . D ^DIE K DIE
"RTN","EASMTUTL",157,0)
 E  W !,$CHAR(7),"Entry is being edited by another user."
"RTN","EASMTUTL",158,0)
 L -^EAS(713.2,EASIEN)
"RTN","EASMTUTL",159,0)
 ;
"RTN","EASMTUTL",160,0)
 Q
"RTN","EASMTUTL",161,0)
 ;
"RTN","EASMTUTL",162,0)
DECEASED(EASIEN,DFN) ;  Check deceased status for patient
"RTN","EASMTUTL",163,0)
 N RSLT,EADEM,EAS1,VAROOT
"RTN","EASMTUTL",164,0)
 ;
"RTN","EASMTUTL",165,0)
 S EASIEN=$G(EASIEN)
"RTN","EASMTUTL",166,0)
 S DFN=$G(DFN)
"RTN","EASMTUTL",167,0)
 I EASIEN>0 D
"RTN","EASMTUTL",168,0)
 . S EAS1=$$GET1^DIQ(713.2,EASIEN,2,"I")
"RTN","EASMTUTL",169,0)
 . S DFN=$$GET1^DIQ(713.1,EAS1,.01,"I")
"RTN","EASMTUTL",170,0)
 Q:'DFN 0
"RTN","EASMTUTL",171,0)
 S RSLT=0
"RTN","EASMTUTL",172,0)
 ;
"RTN","EASMTUTL",173,0)
 S VAROOT="EADEM"
"RTN","EASMTUTL",174,0)
 D DEM^VADPT
"RTN","EASMTUTL",175,0)
 S:+EADEM(6) RSLT=1
"RTN","EASMTUTL",176,0)
 D KVA^VADPT
"RTN","EASMTUTL",177,0)
 Q RSLT
"RTN","EASMTUTL",178,0)
 ;
"RTN","EASMTUTL",179,0)
CHECKMT(EASPT,EAIEN) ; Check current MT status
"RTN","EASMTUTL",180,0)
 N DFN,RTN,EACHK,DIE,DR,DA
"RTN","EASMTUTL",181,0)
 ;
"RTN","EASMTUTL",182,0)
 S RTN=0
"RTN","EASMTUTL",183,0)
 I '$G(EASPT) S RTN=1 G CHKQ ; Safety check
"RTN","EASMTUTL",184,0)
 S DFN=$$GET1^DIQ(713.1,EASPT,.01,"I") ; Get DFN
"RTN","EASMTUTL",185,0)
 I '$G(DFN) S RTN=1 G CHKQ ; Safety check
"RTN","EASMTUTL",186,0)
 ;
"RTN","EASMTUTL",187,0)
 S EACHK=$$MTCHK^EASMTCHK(DFN,"L") ; Check current MT to see if it's changed
"RTN","EASMTUTL",188,0)
 I 'EACHK D  ; If MT no longer required, update letter status file
"RTN","EASMTUTL",189,0)
 . S DIE="^EAS(713.2,",DA=EAIEN
"RTN","EASMTUTL",190,0)
 . S DR="4///YES;5///TODAY;7///AUTO-GENERATED;9///NO;12///NO;18///NO"
"RTN","EASMTUTL",191,0)
 . D ^DIE K DIE ;; Remove before release
"RTN","EASMTUTL",192,0)
 . S RTN=1
"RTN","EASMTUTL",193,0)
 ;
"RTN","EASMTUTL",194,0)
CHKQ Q RTN
"RTN","EASMTUTL",195,0)
 ;
"RTN","EASMTUTL",196,0)
FUTMT(EASIEN) ; Check for a future MT
"RTN","EASMTUTL",197,0)
 ;  Input
"RTN","EASMTUTL",198,0)
 ;    EASIEN - IEN for record in Letter Status file
"RTN","EASMTUTL",199,0)
 ;
"RTN","EASMTUTL",200,0)
 ;  Output
"RTN","EASMTUTL",201,0)
 ;     1 - Future MT exist's (API call)
"RTN","EASMTUTL",202,0)
 ;     0 - Future MT does not exist
"RTN","EASMTUTL",203,0)
 ;
"RTN","EASMTUTL",204,0)
 N EASPTR,DFN,EASFUT
"RTN","EASMTUTL",205,0)
 ;
"RTN","EASMTUTL",206,0)
 S RTN=0
"RTN","EASMTUTL",207,0)
 S EASPTR=$$GET1^DIQ(713.2,EASIEN,2,"I")
"RTN","EASMTUTL",208,0)
 S DFN=$$GET1^DIQ(713.1,EASPTR,.01,"I")
"RTN","EASMTUTL",209,0)
 ;
"RTN","EASMTUTL",210,0)
 ;; Call API for future MT check
"RTN","EASMTUTL",211,0)
 S EASFUT=$$FUT^DGMTU(DFN)
"RTN","EASMTUTL",212,0)
 ;
"RTN","EASMTUTL",213,0)
 I +$G(EASFUT) D  ; Turn off letters if future MT present
"RTN","EASMTUTL",214,0)
 . Q:'EASIEN
"RTN","EASMTUTL",215,0)
 . S DIE="^EAS(713.2,",DA=EASIEN
"RTN","EASMTUTL",216,0)
 . S DR="4///YES;5///TODAY;7///FUTURE MEANS TEST;9///NO;12///NO;18///NO"
"RTN","EASMTUTL",217,0)
 . D ^DIE K DIE
"RTN","EASMTUTL",218,0)
 . S RTN=1
"RTN","EASMTUTL",219,0)
 Q RTN
"SEC","^DD",713.3,713.3,3,9)

"SEC","^DD",713.3,713.33,.01,9)

"SEC","^DIC",713,713,0,"AUDIT")
@
"SEC","^DIC",713,713,0,"DD")
@
"SEC","^DIC",713,713,0,"DEL")
@
"SEC","^DIC",713,713,0,"LAYGO")
@
"SEC","^DIC",713,713,0,"RD")
@
"SEC","^DIC",713,713,0,"WR")
@
"SEC","^DIC",713.1,713.1,0,"AUDIT")
@
"SEC","^DIC",713.1,713.1,0,"DD")
@
"SEC","^DIC",713.1,713.1,0,"DEL")
@
"SEC","^DIC",713.1,713.1,0,"LAYGO")
@
"SEC","^DIC",713.1,713.1,0,"RD")
@
"SEC","^DIC",713.1,713.1,0,"WR")
@
"SEC","^DIC",713.2,713.2,0,"AUDIT")
@
"SEC","^DIC",713.2,713.2,0,"DD")
@
"SEC","^DIC",713.2,713.2,0,"DEL")
@
"SEC","^DIC",713.2,713.2,0,"LAYGO")
@
"SEC","^DIC",713.2,713.2,0,"RD")
@
"SEC","^DIC",713.2,713.2,0,"WR")
@
"SEC","^DIC",713.3,713.3,0,"AUDIT")
@
"SEC","^DIC",713.3,713.3,0,"DD")
@
"SEC","^DIC",713.3,713.3,0,"DEL")
@
"SEC","^DIC",713.3,713.3,0,"LAYGO")
@
"SEC","^DIC",713.3,713.3,0,"RD")
@
"SEC","^DIC",713.3,713.3,0,"WR")
@
"VER")
8.0^22.0
"^DD",713,713,0)
FIELD^^10^10
"^DD",713,713,0,"DDA")
N
"^DD",713,713,0,"DT")
3020122
"^DD",713,713,0,"IX","ALOCK",713,30)

"^DD",713,713,0,"IX","B",713,.01)

"^DD",713,713,0,"NM","EAS MT PARAMETERS")

"^DD",713,713,.01,0)
ONE^RFX^^0;1^K:+X'=X!(X>1)!(X<0)!(X?.E1"."1N.N) X
"^DD",713,713,.01,1,0)
^.1
"^DD",713,713,.01,1,1,0)
713^B
"^DD",713,713,.01,1,1,1)
S ^EAS(713,"B",$E(X,1,30),DA)=""
"^DD",713,713,.01,1,1,2)
K ^EAS(713,"B",$E(X,1,30),DA)
"^DD",713,713,.01,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 1
"^DD",713,713,.01,21,0)
^^2^2^3010621^
"^DD",713,713,.01,21,1,0)
'One' designates the 'one' EAS MT Parameter.  There can only be one set of
"^DD",713,713,.01,21,2,0)
parameters.
"^DD",713,713,.01,"DT")
3010621
"^DD",713,713,2,0)
LAST RUN DATE^D^^0;2^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",713,713,2,3)
(No range limit on date)
"^DD",713,713,2,21,0)
^^3^3^3010621^
"^DD",713,713,2,21,1,0)
The date and time the last means test letter generator searched for letter
"^DD",713,713,2,21,2,0)
candidates.  This date may be either a tasked run date or an interactive
"^DD",713,713,2,21,3,0)
run date.
"^DD",713,713,2,"DT")
3010706
"^DD",713,713,3,0)
LAST INTERACTIVE USER^P200'^VA(200,^0;3^Q
"^DD",713,713,3,3)
Enter the user who last ran the letter generator
"^DD",713,713,3,21,0)
^^1^1^3010621^
"^DD",713,713,3,21,1,0)
The last user to initiate an interactive letter generation.
"^DD",713,713,3,"DT")
3010621
"^DD",713,713,4,0)
LAST INTERACTIVE RUN DATE^D^^0;4^S %DT="ETXR" D ^%DT S X=Y K:X<1 X
"^DD",713,713,4,3)
Enter the last interactive run date
"^DD",713,713,4,21,0)
^^1^1^3010621^
"^DD",713,713,4,21,1,0)
The date and time the letter generator was last run interactively.
"^DD",713,713,4,"DT")
3010621
"^DD",713,713,5,0)
PRIMARY PRINT DEVICE^P3.5'^%ZIS(1,^0;5^Q
"^DD",713,713,5,3)
Enter the primary  print device for the MT letters
"^DD",713,713,5,21,0)
^^3^3^3010621^
"^DD",713,713,5,21,1,0)
This the default printer to send the MT letters and 10-10EZ forms to.
"^DD",713,713,5,21,2,0)
This is primarily used when the letter generator is run in a tasked
"^DD",713,713,5,21,3,0)
environment.
"^DD",713,713,5,"DT")
3011108
"^DD",713,713,7,0)
MT COMPLETION BULLETIN?^S^1:YES;0:NO;^0;7^Q
"^DD",713,713,7,3)
Enter "YES" to send a completion bulletin when completing a Means Test
"^DD",713,713,7,21,0)
^^1^1^3010824^
"^DD",713,713,7,21,1,0)
If YES, a completion bulletin is send upon completion of a Means Test
"^DD",713,713,7,"DT")
3010824
"^DD",713,713,8,0)
ALLOW MULTIPLE PRINT DEVICES?^S^1:YES;0:NO;^0;8^Q
"^DD",713,713,8,3)
Allow printing to multiple locations?
"^DD",713,713,8,21,0)
^^2^2^3011108^
"^DD",713,713,8,21,1,0)
If yes, letter's may be printed to multiple locations, based on the
"^DD",713,713,8,21,2,0)
patients preferred facility stored in the PATIENT File.
"^DD",713,713,8,"DT")
3011108
"^DD",713,713,10,0)
ENVELOPE OFFSET^NJ1,0^^0;10^K:+X'=X!(X>6)!(X<0)!(X?.E1"."1N.N) X
"^DD",713,713,10,3)
Type a Number between 0 and 6, 0 Decimal Digits
"^DD",713,713,10,21,0)
^.001^3^3^3020122^^^
"^DD",713,713,10,21,1,0)
Offset for printing means test letters for samll adjustments to fit 
"^DD",713,713,10,21,2,0)
windowed envelopes.  This field should not be changed unless the patient
"^DD",713,713,10,21,3,0)
address is not aligning with the envelope window.
"^DD",713,713,10,"DT")
3020122
"^DD",713,713,25,0)
ADDITIONAL PRINT LOCATIONS^713.025PA^^2;0
"^DD",713,713,25,"DT")
3011109
"^DD",713,713,30,0)
IN USE^S^1:YES;0:NO;^L;1^Q
"^DD",713,713,30,1,0)
^.1
"^DD",713,713,30,1,1,0)
713^ALOCK
"^DD",713,713,30,1,1,1)
S ^EAS(713,"ALOCK",$E(X,1,30),DA)=""
"^DD",713,713,30,1,1,2)
K ^EAS(713,"ALOCK",$E(X,1,30),DA)
"^DD",713,713,30,1,1,"%D",0)
^^1^1^3010706^
"^DD",713,713,30,1,1,"%D",1,0)
Check for lock status of the automated letters generator
"^DD",713,713,30,1,1,"DT")
3010706
"^DD",713,713,30,3)
Yes indicates the letters generator is running, No indicates no process is running
"^DD",713,713,30,21,0)
^^2^2^3010706^
"^DD",713,713,30,21,1,0)
This field will be set to YES when an automated MT Letters generator
"^DD",713,713,30,21,2,0)
process is running.  If no process is running, the field will be NO.
"^DD",713,713,30,"DT")
3010706
"^DD",713,713.025,0)
ADDITIONAL PRINT LOCATIONS SUB-FIELD^^1^2
"^DD",713,713.025,0,"DT")
3011113
"^DD",713,713.025,0,"IX","B",713.025,.01)

"^DD",713,713.025,0,"NM","ADDITIONAL PRINT LOCATIONS")

"^DD",713,713.025,0,"UP")
713
"^DD",713,713.025,.01,0)
LOCATION^P4'^DIC(4,^0;1^Q
"^DD",713,713.025,.01,1,0)
^.1
"^DD",713,713.025,.01,1,1,0)
713.025^B
"^DD",713,713.025,.01,1,1,1)
S ^EAS(713,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",713,713.025,.01,1,1,2)
K ^EAS(713,DA(1),2,"B",$E(X,1,30),DA)
"^DD",713,713.025,.01,3)
Select Division/Location where letters are to be printed
"^DD",713,713.025,.01,21,0)
^^5^5^3011113^
"^DD",713,713.025,.01,21,1,0)
This is the location where the Means Test letters may be printed.  If a
"^DD",713,713.025,.01,21,2,0)
veteran has specified a Preferred Facility and the printing of letters to
"^DD",713,713.025,.01,21,3,0)
alternate locations has been activated, then if there is a matching
"^DD",713,713.025,.01,21,4,0)
facility/location here, the letters will be directed to the associated
"^DD",713,713.025,.01,21,5,0)
print device.
"^DD",713,713.025,.01,"DT")
3011113
"^DD",713,713.025,1,0)
PRINT DEVICE AT LOCATION^P3.5'^%ZIS(1,^0;2^Q
"^DD",713,713.025,1,3)
Enter the print device for this location
"^DD",713,713.025,1,"DT")
3011109
"^DD",713.1,713.1,0)
FIELD^^10^6
"^DD",713.1,713.1,0,"DDA")
N
"^DD",713.1,713.1,0,"DT")
3010712
"^DD",713.1,713.1,0,"IX","AP",713.1,2)

"^DD",713.1,713.1,0,"IX","B",713.1,.01)

"^DD",713.1,713.1,0,"NM","EAS MT PATIENT STATUS")

"^DD",713.1,713.1,0,"PT",713.2,2)

"^DD",713.1,713.1,.01,0)
NAME^RP2'^DPT(^0;1^Q
"^DD",713.1,713.1,.01,1,0)
^.1^^-1
"^DD",713.1,713.1,.01,1,1,0)
713.1^B
"^DD",713.1,713.1,.01,1,1,1)
S ^EAS(713.1,"B",$E(X,1,30),DA)=""
"^DD",713.1,713.1,.01,1,1,2)
K ^EAS(713.1,"B",$E(X,1,30),DA)
"^DD",713.1,713.1,.01,3)
Enter the patient associated with this means test.
"^DD",713.1,713.1,.01,21,0)
^^1^1^3010720^
"^DD",713.1,713.1,.01,21,1,0)
This field contains the patient associated with this annual test.
"^DD",713.1,713.1,.01,"DT")
3011114
"^DD",713.1,713.1,2,0)
PROHIBIT LETTER FROM PRINTING^S^1:YES;0:NO;^0;2^Q
"^DD",713.1,713.1,2,1,0)
^.1^^-1
"^DD",713.1,713.1,2,1,1,0)
713.1^AP
"^DD",713.1,713.1,2,1,1,1)
S ^EAS(713.1,"AP",$E(X,1,30),DA)=""
"^DD",713.1,713.1,2,1,1,2)
K ^EAS(713.1,"AP",$E(X,1,30),DA)
"^DD",713.1,713.1,2,1,1,"%D",0)
^^3^3^3010628^
"^DD",713.1,713.1,2,1,1,"%D",1,0)
This cross-reference is used for determining whether a patient has a 
"^DD",713.1,713.1,2,1,1,"%D",2,0)
prohibit letters flag set.  If the cross-reference exists, then no
"^DD",713.1,713.1,2,1,1,"%D",3,0)
letters should be generated.
"^DD",713.1,713.1,2,1,1,"DT")
3010628
"^DD",713.1,713.1,2,3)
Enter 'Y'es to prohibit letters, 'N'o to enable
"^DD",713.1,713.1,2,21,0)
^^2^2^3010627^
"^DD",713.1,713.1,2,21,1,0)
Setting this field to 'Yes' will prohibit Means Test letters from being
"^DD",713.1,713.1,2,21,2,0)
generated by the automated MT letters functionality for this patient.
"^DD",713.1,713.1,2,"DT")
3011029
"^DD",713.1,713.1,3,0)
PROHIBIT LETTER EFFECTIVE DATE^D^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",713.1,713.1,3,3)
Enter date on which the Prohibit letters became effective
"^DD",713.1,713.1,3,4)

"^DD",713.1,713.1,3,21,0)
^.001^1^1^3010720^^
"^DD",713.1,713.1,3,21,1,0)
The date the prohibit letters became effective for the patient.
"^DD",713.1,713.1,3,"DT")
3010720
"^DD",713.1,713.1,4,0)
WHO ENTERED PROHIBIT FLAG^P200'^VA(200,^0;4^Q
"^DD",713.1,713.1,4,1,0)
^.1^^0
"^DD",713.1,713.1,4,3)
Enter the user who entered the prohibit flag.
"^DD",713.1,713.1,4,21,0)
^^2^2^3010720^
"^DD",713.1,713.1,4,21,1,0)
This is the user who entered the means test letter prohibit flag for the 
"^DD",713.1,713.1,4,21,2,0)
patient.  
"^DD",713.1,713.1,4,"DT")
3010720
"^DD",713.1,713.1,5,0)
DATE PROHIBIT FLAG ENTERED^D^^0;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",713.1,713.1,5,3)
Enter the date the prohibit flag was entered
"^DD",713.1,713.1,5,4)

"^DD",713.1,713.1,5,21,0)
^.001^1^1^3010720^^^
"^DD",713.1,713.1,5,21,1,0)
This is the date and time the prohibit flag was entered for the patient.
"^DD",713.1,713.1,5,"DT")
3010720
"^DD",713.1,713.1,10,0)
PROHIBIT LETTER REASON^F^^10;1^K:$L(X)>60!($L(X)<3) X
"^DD",713.1,713.1,10,3)
Answer must be 3-60 characters in length
"^DD",713.1,713.1,10,21,0)
^^2^2^3010627^
"^DD",713.1,713.1,10,21,1,0)
This is a short description of why MT letters are prohibited for the
"^DD",713.1,713.1,10,21,2,0)
patient
"^DD",713.1,713.1,10,"DT")
3010627
"^DD",713.2,713.2,0)
FIELD^^19.5^20
"^DD",713.2,713.2,0,"DDA")
N
"^DD",713.2,713.2,0,"DT")
3010723
"^DD",713.2,713.2,0,"ID",2)
S %I=Y,Y=$S('$D(^(0)):"",$D(^EAS(713.1,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(713.1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",713.2,713.2,0,"ID",3)
W "   ",$$FMTE^DILIBF($P(^(0),U,3),5)
"^DD",713.2,713.2,0,"IX","AC",713.2,4)

"^DD",713.2,713.2,0,"IX","AD",713.2,.01)

"^DD",713.2,713.2,0,"IX","B",713.2,.01)

"^DD",713.2,713.2,0,"IX","C",713.2,2)

"^DD",713.2,713.2,0,"NM","EAS MT LETTER STATUS")

"^DD",713.2,713.2,.001,0)
ENTRY NUMBER^NJ6,0^^ ^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",713.2,713.2,.001,3)
Type a Number between 1 and 999999, 0 Decimal Digits
"^DD",713.2,713.2,.001,"DT")
3010720
"^DD",713.2,713.2,.01,0)
PROCESSING DATE^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",713.2,713.2,.01,1,0)
^.1
"^DD",713.2,713.2,.01,1,1,0)
713.2^B
"^DD",713.2,713.2,.01,1,1,1)
S ^EAS(713.2,"B",$E(X,1,30),DA)=""
"^DD",713.2,713.2,.01,1,1,2)
K ^EAS(713.2,"B",$E(X,1,30),DA)
"^DD",713.2,713.2,.01,1,2,0)
713.2^AD^MUMPS
"^DD",713.2,713.2,.01,1,2,1)
S ^EAS(713.2,"AD",$P(X,".",1),DA)=""
"^DD",713.2,713.2,.01,1,2,2)
K ^EAS(713.2,"AD",$P(X,".",1),DA)
"^DD",713.2,713.2,.01,1,2,"%D",0)
^.101^1^1^3010720^^
"^DD",713.2,713.2,.01,1,2,"%D",1,0)
Cross-reference on processing date, using the date only.  Strips the time
"^DD",713.2,713.2,.01,1,2,"DT")
3010720
"^DD",713.2,713.2,.01,3)
Enter processing date for entry, time required
"^DD",713.2,713.2,.01,21,0)
^^1^1^3010720^
"^DD",713.2,713.2,.01,21,1,0)
Initial processing date for the patient's means test anniversary date
"^DD",713.2,713.2,.01,"DT")
3010720
"^DD",713.2,713.2,2,0)
RECIPIENT^RP713.1'^EAS(713.1,^0;2^Q
"^DD",713.2,713.2,2,1,0)
^.1
"^DD",713.2,713.2,2,1,1,0)
713.2^C
"^DD",713.2,713.2,2,1,1,1)
S ^EAS(713.2,"C",$E(X,1,30),DA)=""
"^DD",713.2,713.2,2,1,1,2)
K ^EAS(713.2,"C",$E(X,1,30),DA)
"^DD",713.2,713.2,2,1,1,"%D",0)
^^1^1^3010712^
"^DD",713.2,713.2,2,1,1,"%D",1,0)
Cross-reference by patient in the patient status file, #713.1
"^DD",713.2,713.2,2,1,1,"DT")
3010712
"^DD",713.2,713.2,2,3)
Select the recipient for the MT letters
"^DD",713.2,713.2,2,21,0)
^^2^2^3010720^
"^DD",713.2,713.2,2,21,1,0)
Pointer to the EAS MT LETTERS File, The patietn whose means test is coming
"^DD",713.2,713.2,2,21,2,0)
due.
"^DD",713.2,713.2,2,"DT")
3011029
"^DD",713.2,713.2,3,0)
MEANS TEST DATE^RD^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",713.2,713.2,3,1,0)
^.1^^0
"^DD",713.2,713.2,3,3)
(No range limit on date)
"^DD",713.2,713.2,3,21,0)
^^2^2^3020307^
"^DD",713.2,713.2,3,21,1,0)
The current means test date for the patient (from the ANNUAL MEANS TEST
"^DD",713.2,713.2,3,21,2,0)
File)
"^DD",713.2,713.2,3,"DT")
3020307
"^DD",713.2,713.2,4,0)
MEANS TEST RETURNED?^RS^1:YES;0:NO;^0;4^Q
"^DD",713.2,713.2,4,1,0)
^.1
"^DD",713.2,713.2,4,1,1,0)
713.2^AC
"^DD",713.2,713.2,4,1,1,1)
S ^EAS(713.2,"AC",$E(X,1,30),DA)=""
"^DD",713.2,713.2,4,1,1,2)
K ^EAS(713.2,"AC",$E(X,1,30),DA)
"^DD",713.2,713.2,4,1,1,"%D",0)
^^1^1^3010712^
"^DD",713.2,713.2,4,1,1,"%D",1,0)
Cross reference on returned/not-returned means tests
"^DD",713.2,713.2,4,1,1,"DT")
3010712
"^DD",713.2,713.2,4,3)
Enter "Y"es if returned, "N"o if it has not
"^DD",713.2,713.2,4,21,0)
^^2^2^3010720^
"^DD",713.2,713.2,4,21,1,0)
Indicates whether a response (10-10EZ form) has been received in response
"^DD",713.2,713.2,4,21,2,0)
to one of the reminder letters.
"^DD",713.2,713.2,4,"DT")
3010713
"^DD",713.2,713.2,5,0)
DATE MEANS TEST RETURNED^D^^0;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",713.2,713.2,5,3)
(No range limit on date)
"^DD",713.2,713.2,5,21,0)
^^1^1^3010720^
"^DD",713.2,713.2,5,21,1,0)
Date the completed 10-10EZ form was recieved and processed
"^DD",713.2,713.2,5,"DT")
3010720
"^DD",713.2,713.2,6,0)
WHO ENTERED RETURNED MT^P200'^VA(200,^0;6^Q
"^DD",713.2,713.2,6,3)
Select the user entering the returned MT data
"^DD",713.2,713.2,6,21,0)
^^1^1^3010720^
"^DD",713.2,713.2,6,21,1,0)
User entering the returned MT letter information
"^DD",713.2,713.2,6,"DT")
3010712
"^DD",713.2,713.2,7,0)
COMMENTS^713.27^^1;0
"^DD",713.2,713.2,8,0)
60-DAY LETTER DATE^D^^6;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",713.2,713.2,8,1,0)
^.1^^0
"^DD",713.2,713.2,8,3)
Enter the 60-day MT anniversary date threshold
"^DD",713.2,713.2,8,21,0)
^.001^1^1^3010720^^
"^DD",713.2,713.2,8,21,1,0)
Means Test anniversary date minus 60 days
"^DD",713.2,713.2,8,"DT")
3020307
"^DD",713.2,713.2,9,0)
60-DAY FLAG TO PRINT?^S^1:YES;0:NO;^6;2^Q
"^DD",713.2,713.2,9,3)
Enter "Y"es for flagged, "N"o for not flagged
"^DD",713.2,713.2,9,21,0)
^^1^1^3010720^
"^DD",713.2,713.2,9,21,1,0)
Flag indicates the letter is ready for printing
"^DD",713.2,713.2,9,"DT")
3010712
"^DD",713.2,713.2,10,0)
60-DAY LETTER PRINTED?^S^1:YES;0:NO;^6;3^Q
"^DD",713.2,713.2,10,3)
Enter "Y"es for printed, "N"o for not printed
"^DD",713.2,713.2,10,21,0)
^^1^1^3010720^
"^DD",713.2,713.2,10,21,1,0)
The 60-day letter has been printed
"^DD",713.2,713.2,10,"DT")
3010712
"^DD",713.2,713.2,10.5,0)
60-DAY PRINT DATE^D^^6;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",713.2,713.2,10.5,3)
Enter date 60-day letter was printed
"^DD",713.2,713.2,10.5,21,0)
^^1^1^3010723^
"^DD",713.2,713.2,10.5,21,1,0)
60-Day print date
"^DD",713.2,713.2,10.5,"DT")
3010723
"^DD",713.2,713.2,11,0)
30-DAY LETTER DATE^D^^4;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",713.2,713.2,11,3)
Enter the 30-day MT anniversary date threshold
"^DD",713.2,713.2,11,21,0)
^^1^1^3020307^
"^DD",713.2,713.2,11,21,1,0)
Means Test anniversary date minus 30 days
"^DD",713.2,713.2,11,"DT")
3020307
"^DD",713.2,713.2,12,0)
30-DAY FLAG TO PRINT?^S^1:YES;0:NO;^4;2^Q
"^DD",713.2,713.2,12,3)
Enter "Y"es for flagged, "N"o for not flagged
"^DD",713.2,713.2,12,21,0)
^^1^1^3020307^
"^DD",713.2,713.2,12,21,1,0)
Flag indicates the letter is ready for printing
"^DD",713.2,713.2,12,"DT")
3020307
"^DD",713.2,713.2,13,0)
30-DAY LETTER PRINTED?^S^1:YES;0:NO;^4;3^Q
"^DD",713.2,713.2,13,3)
Enter "Y"es if letter printed, "N"o if it has not
"^DD",713.2,713.2,13,21,0)
^^1^1^3020307^
"^DD",713.2,713.2,13,21,1,0)
The 30-day letter has been printed
"^DD",713.2,713.2,13,"DT")
3020307
"^DD",713.2,713.2,13.5,0)
30-DAY PRINT DATE^D^^4;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",713.2,713.2,13.5,3)
Enter date 30-day letter was printed
"^DD",713.2,713.2,13.5,21,0)
^^1^1^3020307^
"^DD",713.2,713.2,13.5,21,1,0)
Date the 30-Day letter was printed
"^DD",713.2,713.2,13.5,"DT")
3020307
"^DD",713.2,713.2,17,0)
ZERO-DAY LETTER DATE^D^^Z;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",713.2,713.2,17,3)
Enter the 0-day MT anniversary date threshold
"^DD",713.2,713.2,17,21,0)
^^1^1^3010720^
"^DD",713.2,713.2,17,21,1,0)
Means Test anniversary date minus 0 days
"^DD",713.2,713.2,17,"DT")
3010720
"^DD",713.2,713.2,18,0)
ZERO-DAY FLAG TO PRINT?^S^1:YES;0:NO;^Z;2^Q
"^DD",713.2,713.2,18,3)
Enter "Y"es for flagged, "N"o for not flagged
"^DD",713.2,713.2,18,21,0)
^^1^1^3010720^
"^DD",713.2,713.2,18,21,1,0)
Flag indicates the letter is ready for printing
"^DD",713.2,713.2,18,"DT")
3010712
"^DD",713.2,713.2,19,0)
ZERO-DAY LETTER PRINTED?^S^1:YES;0:NO;^Z;3^Q
"^DD",713.2,713.2,19,3)
Enter "Y"es if letter printed, "N"o if it has not
"^DD",713.2,713.2,19,21,0)
^^1^1^3010720^
"^DD",713.2,713.2,19,21,1,0)
The 0-day letter has been printed
"^DD",713.2,713.2,19,"DT")
3010712
"^DD",713.2,713.2,19.5,0)
ZERO-DAY PRINT DATE^D^^Z;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",713.2,713.2,19.5,3)
Enter date 0-day letter was printed
"^DD",713.2,713.2,19.5,21,0)
^^1^1^3010723^
"^DD",713.2,713.2,19.5,21,1,0)
0-day letter print date
"^DD",713.2,713.2,19.5,"DT")
3010723
"^DD",713.2,713.27,0)
COMMENTS SUB-FIELD^^.01^1
"^DD",713.2,713.27,0,"DT")
3010712
"^DD",713.2,713.27,0,"NM","COMMENTS")

"^DD",713.2,713.27,0,"UP")
713.2
"^DD",713.2,713.27,.01,0)
COMMENTS^W^^0;1
"^DD",713.2,713.27,.01,3)
Enter any comments associated with the returned Means Test
"^DD",713.2,713.27,.01,"DT")
3010712
"^DD",713.3,713.3,0)
FIELD^^4^4
"^DD",713.3,713.3,0,"DDA")
N
"^DD",713.3,713.3,0,"DT")
3020314
"^DD",713.3,713.3,0,"IX","B",713.3,.01)

"^DD",713.3,713.3,0,"IX","C",713.3,2)

"^DD",713.3,713.3,0,"NM","EAS MT LETTERS")

"^DD",713.3,713.3,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",713.3,713.3,.01,1,0)
^.1
"^DD",713.3,713.3,.01,1,1,0)
713.3^B
"^DD",713.3,713.3,.01,1,1,1)
S ^EAS(713.3,"B",$E(X,1,30),DA)=""
"^DD",713.3,713.3,.01,1,1,2)
K ^EAS(713.3,"B",$E(X,1,30),DA)
"^DD",713.3,713.3,.01,3)
The name must be 3 - 30 characters, not numeric or starting with punctuation
"^DD",713.3,713.3,.01,21,0)
^^3^3^3010625^
"^DD",713.3,713.3,.01,21,1,0)
The name of a letter that has been initially created for automated means
"^DD",713.3,713.3,.01,21,2,0)
test letters.  These letters are utilized mostly in the Enrollment
"^DD",713.3,713.3,.01,21,3,0)
Application System (EAS) software.
"^DD",713.3,713.3,.01,"DT")
3010625
"^DD",713.3,713.3,2,0)
TYPE^S^1:60-DAY LETTERS;2:30-DAY LETTERS;3:REPORT OF CONTACT;4:ZERO-DAY LETTERS;^0;2^Q
"^DD",713.3,713.3,2,1,0)
^.1
"^DD",713.3,713.3,2,1,1,0)
713.3^C
"^DD",713.3,713.3,2,1,1,1)
S ^EAS(713.3,"C",$E(X,1,30),DA)=""
"^DD",713.3,713.3,2,1,1,2)
K ^EAS(713.3,"C",$E(X,1,30),DA)
"^DD",713.3,713.3,2,1,1,"DT")
3010625
"^DD",713.3,713.3,2,3)
Answer must be 3-30 characters in length
"^DD",713.3,713.3,2,21,0)
^^2^2^3010716^
"^DD",713.3,713.3,2,21,1,0)
This field is used by the Letter Generation routines to select the
"^DD",713.3,713.3,2,21,2,0)
appropriate letter to print.
"^DD",713.3,713.3,2,"DT")
3020314
"^DD",713.3,713.3,3,0)
INITIAL SECTION OF LETTER^713.33^^1;0
"^DD",713.3,713.3,3,21,0)
^.001^2^2^3011018^^^
"^DD",713.3,713.3,3,21,1,0)
Main body of the letter.  Do not modify, changes will be directed as
"^DD",713.3,713.3,3,21,2,0)
necessary
"^DD",713.3,713.3,3,23,0)
^^4^4^3011018^
"^DD",713.3,713.3,3,23,1,0)
This data has been drafted by the Health Administration Service and is
"^DD",713.3,713.3,3,23,2,0)
not to be edited or modified at the local level.  Changes to the wording
"^DD",713.3,713.3,3,23,3,0)
of this letter field will be distributed by patch as directed by the 
"^DD",713.3,713.3,3,23,4,0)
HAS Office.
"^DD",713.3,713.3,4,0)
PREFERRED LOCATION^713.34P^^2;0
"^DD",713.3,713.3,4,21,0)
^.001^1^1^3010730^^^
"^DD",713.3,713.3,4,21,1,0)
Division related section of the letter
"^DD",713.3,713.3,4,"DT")
3011113
"^DD",713.3,713.33,0)
INITIAL SECTION OF LETTER SUB-FIELD^^.01^1
"^DD",713.3,713.33,0,"DT")
3010720
"^DD",713.3,713.33,0,"NM","INITIAL SECTION OF LETTER")

"^DD",713.3,713.33,0,"UP")
713.3
"^DD",713.3,713.33,.01,0)
INITIAL SECTION OF LETTER^WL^^0;1^Q
"^DD",713.3,713.33,.01,3)
Enter the initial section of the letter
"^DD",713.3,713.33,.01,21,0)
^.001^4^4^3011018^^^
"^DD",713.3,713.33,.01,21,1,0)
The initial section of the letter is the portion of the letter that has
"^DD",713.3,713.33,.01,21,2,0)
been pre-\ programmed by the developer to include items such as the
"^DD",713.3,713.33,.01,21,3,0)
veteran's name, address, social security number and is in the format of a
"^DD",713.3,713.33,.01,21,4,0)
VA style letter.
"^DD",713.3,713.33,.01,"DT")
3011018
"^DD",713.3,713.34,0)
PREFERRED LOCATION SUB-FIELD^^1^2
"^DD",713.3,713.34,0,"DT")
3011113
"^DD",713.3,713.34,0,"IX","B",713.34,.01)

"^DD",713.3,713.34,0,"NM","PREFERRED LOCATION")

"^DD",713.3,713.34,0,"UP")
713.3
"^DD",713.3,713.34,.01,0)
LOCATION^P4'^DIC(4,^0;1^Q
"^DD",713.3,713.34,.01,1,0)
^.1
"^DD",713.3,713.34,.01,1,1,0)
713.34^B
"^DD",713.3,713.34,.01,1,1,1)
S ^EAS(713.3,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",713.3,713.34,.01,1,1,2)
K ^EAS(713.3,DA(1),2,"B",$E(X,1,30),DA)
"^DD",713.3,713.34,.01,3)
Select the location for final section of letter
"^DD",713.3,713.34,.01,21,0)
^^4^4^3011113^
"^DD",713.3,713.34,.01,21,1,0)
This field allows tailoring the letters to specific locations in
"^DD",713.3,713.34,.01,21,2,0)
multi-station or Integrated networks.  The Preferred Facility field in the
"^DD",713.3,713.34,.01,21,3,0)
PATIENT file, #2, is used as the key in determining which final section to
"^DD",713.3,713.34,.01,21,4,0)
print for the veteran's letter.
"^DD",713.3,713.34,.01,"DT")
3011113
"^DD",713.3,713.34,1,0)
FINAL SECTION^713.341^^1;0
"^DD",713.3,713.341,0)
FINAL SECTION SUB-FIELD^^.01^1
"^DD",713.3,713.341,0,"DT")
3010730
"^DD",713.3,713.341,0,"NM","FINAL SECTION")

"^DD",713.3,713.341,0,"UP")
713.34
"^DD",713.3,713.341,.01,0)
FINAL SECTION^WL^^0;1^Q
"^DD",713.3,713.341,.01,3)
Enter local data and signature block
"^DD",713.3,713.341,.01,21,0)
^^3^3^3010730^
"^DD",713.3,713.341,.01,21,1,0)
This is the local information and signature block applicable to the
"^DD",713.3,713.341,.01,21,2,0)
facilit that that will be printed for veterans that have specified a
"^DD",713.3,713.341,.01,21,3,0)
preferred facility.
"^DD",713.3,713.341,.01,"DT")
3011109
"^DIC",713,713,0)
EAS MT PARAMETERS^713
"^DIC",713,713,0,"GL")
^EAS(713,
"^DIC",713,713,"%",0)
^1.005^^
"^DIC",713,713,"%D",0)
^^4^4^3020417^
"^DIC",713,713,"%D",1,0)
This file contains the site specific parameters which are used by the
"^DIC",713,713,"%D",2,0)
Enrollment Application System. The parameters are set by using the 'EAS
"^DIC",713,713,"%D",3,0)
MT Parameters' menu option.  The parameters are used in the
"^DIC",713,713,"%D",4,0)
auto-generation of the 60, 30 and zero day means test letters.
"^DIC",713,"B","EAS MT PARAMETERS",713)

"^DIC",713.1,713.1,0)
EAS MT PATIENT STATUS^713.1
"^DIC",713.1,713.1,0,"GL")
^EAS(713.1,
"^DIC",713.1,713.1,"%",0)
^1.005^^
"^DIC",713.1,713.1,"%D",0)
^^4^4^3010720^
"^DIC",713.1,713.1,"%D",1,0)
This file contains the patient list for which the automated means test
"^DIC",713.1,713.1,"%D",2,0)
letters have been generated.  This file will also allow specific patients
"^DIC",713.1,713.1,"%D",3,0)
to be flagged from having means test reminder letters generated.  Based on
"^DIC",713.1,713.1,"%D",4,0)
local class III file #6185243
"^DIC",713.1,"B","EAS MT PATIENT STATUS",713.1)

"^DIC",713.2,713.2,0)
EAS MT LETTER STATUS^713.2
"^DIC",713.2,713.2,0,"GL")
^EAS(713.2,
"^DIC",713.2,713.2,"%",0)
^1.005^^
"^DIC",713.2,713.2,"%D",0)
^^5^5^3020417^
"^DIC",713.2,713.2,"%D",1,0)
This file contains the patients Means Test anniversary date and letter
"^DIC",713.2,713.2,"%D",2,0)
threshold dates.  Entries are generated when the auto-generated Means Test
"^DIC",713.2,713.2,"%D",3,0)
Letter functionality runs for reminder letters. 60, 30 and zero day
"^DIC",713.2,713.2,"%D",4,0)
thresholds are set, with respective Flag to Print? and Printed status
"^DIC",713.2,713.2,"%D",5,0)
fields.
"^DIC",713.2,"B","EAS MT LETTER STATUS",713.2)

"^DIC",713.3,713.3,0)
EAS MT LETTERS^713.3
"^DIC",713.3,713.3,0,"GL")
^EAS(713.3,
"^DIC",713.3,713.3,"%",0)
^1.005^^
"^DIC",713.3,713.3,"%D",0)
^^4^4^3010720^
"^DIC",713.3,713.3,"%D",1,0)
This file contains the EAS Means Test letters that may be sent out by a
"^DIC",713.3,713.3,"%D",2,0)
site.  The initial section of the letter should not be modified locally.
"^DIC",713.3,713.3,"%D",3,0)
Facilities should enter facility specific information in the FINAL SECTION
"^DIC",713.3,713.3,"%D",4,0)
field.
"^DIC",713.3,"B","EAS MT LETTERS",713.3)

**INSTALL NAME**
SD*5.3*250
"BLD",2259,0)
SD*5.3*250^SCHEDULING^0^3020417^y
"BLD",2259,1,0)
^^9^9^3010905^
"BLD",2259,1,1,0)
This patch is in response to Item #22 in the Rossio Report.  In the area
"BLD",2259,1,2,0)
of Means Test (MT) Deficiencies, Item #22 required that the Veterans
"BLD",2259,1,3,0)
Health Administration (VHA) identify best practices for means testing and
"BLD",2259,1,4,0)
acquiring veterans' signatures at the local level and explore the
"BLD",2259,1,5,0)
promulgation of these best practices throughout the system.  This patch
"BLD",2259,1,6,0)
incorporates into the scheduling software an Enrollment Application
"BLD",2259,1,7,0)
Systems (EAS) API which will inidcate whether to block or allow future
"BLD",2259,1,8,0)
appointments and appointment check-in/out for veterans based on their
"BLD",2259,1,9,0)
current means test status.
"BLD",2259,4,0)
^9.64PA^^
"BLD",2259,"KRN",0)
^9.67PA^19^17
"BLD",2259,"KRN",.4,0)
.4
"BLD",2259,"KRN",.401,0)
.401
"BLD",2259,"KRN",.402,0)
.402
"BLD",2259,"KRN",.403,0)
.403
"BLD",2259,"KRN",.5,0)
.5
"BLD",2259,"KRN",.84,0)
.84
"BLD",2259,"KRN",3.6,0)
3.6
"BLD",2259,"KRN",3.8,0)
3.8
"BLD",2259,"KRN",9.2,0)
9.2
"BLD",2259,"KRN",9.8,0)
9.8
"BLD",2259,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",2259,"KRN",9.8,"NM",1,0)
SDAM2^^0^B20562028
"BLD",2259,"KRN",9.8,"NM",2,0)
SDAMWI^^0^B12959158
"BLD",2259,"KRN",9.8,"NM",3,0)
SDCO1^^0^B24281526
"BLD",2259,"KRN",9.8,"NM",4,0)
SDM^^0^B25395591
"BLD",2259,"KRN",9.8,"NM","B","SDAM2",1)

"BLD",2259,"KRN",9.8,"NM","B","SDAMWI",2)

"BLD",2259,"KRN",9.8,"NM","B","SDCO1",3)

"BLD",2259,"KRN",9.8,"NM","B","SDM",4)

"BLD",2259,"KRN",19,0)
19
"BLD",2259,"KRN",19.1,0)
19.1
"BLD",2259,"KRN",101,0)
101
"BLD",2259,"KRN",409.61,0)
409.61
"BLD",2259,"KRN",771,0)
771
"BLD",2259,"KRN",870,0)
870
"BLD",2259,"KRN",8994,0)
8994
"BLD",2259,"KRN","B",.4,.4)

"BLD",2259,"KRN","B",.401,.401)

"BLD",2259,"KRN","B",.402,.402)

"BLD",2259,"KRN","B",.403,.403)

"BLD",2259,"KRN","B",.5,.5)

"BLD",2259,"KRN","B",.84,.84)

"BLD",2259,"KRN","B",3.6,3.6)

"BLD",2259,"KRN","B",3.8,3.8)

"BLD",2259,"KRN","B",9.2,9.2)

"BLD",2259,"KRN","B",9.8,9.8)

"BLD",2259,"KRN","B",19,19)

"BLD",2259,"KRN","B",19.1,19.1)

"BLD",2259,"KRN","B",101,101)

"BLD",2259,"KRN","B",409.61,409.61)

"BLD",2259,"KRN","B",771,771)

"BLD",2259,"KRN","B",870,870)

"BLD",2259,"KRN","B",8994,8994)

"BLD",2259,"QUES",0)
^9.62^^
"BLD",2259,"REQB",0)
^9.611^3^3
"BLD",2259,"REQB",1,0)
SD*5.3*241^1
"BLD",2259,"REQB",2,0)
SD*5.3*193^1
"BLD",2259,"REQB",3,0)
SD*5.3*223^1
"BLD",2259,"REQB","B","SD*5.3*193",2)

"BLD",2259,"REQB","B","SD*5.3*223",3)

"BLD",2259,"REQB","B","SD*5.3*241",1)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930824
"PKG",16,22,1,"PAH",1,0)
250^3020417
"PKG",16,22,1,"PAH",1,1,0)
^^9^9^3020417
"PKG",16,22,1,"PAH",1,1,1,0)
This patch is in response to Item #22 in the Rossio Report.  In the area
"PKG",16,22,1,"PAH",1,1,2,0)
of Means Test (MT) Deficiencies, Item #22 required that the Veterans
"PKG",16,22,1,"PAH",1,1,3,0)
Health Administration (VHA) identify best practices for means testing and
"PKG",16,22,1,"PAH",1,1,4,0)
acquiring veterans' signatures at the local level and explore the
"PKG",16,22,1,"PAH",1,1,5,0)
promulgation of these best practices throughout the system.  This patch
"PKG",16,22,1,"PAH",1,1,6,0)
incorporates into the scheduling software an Enrollment Application
"PKG",16,22,1,"PAH",1,1,7,0)
Systems (EAS) API which will inidcate whether to block or allow future
"PKG",16,22,1,"PAH",1,1,8,0)
appointments and appointment check-in/out for veterans based on their
"PKG",16,22,1,"PAH",1,1,9,0)
current means test status.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","SDAM2")
0^1^B20562028
"RTN","SDAM2",1,0)
SDAM2 ;MJK/ALB - Appt Mgt (cont); 12/1/91
"RTN","SDAM2",2,0)
 ;;5.3;Scheduling;**250**;Aug 13, 1993
"RTN","SDAM2",3,0)
 ;
"RTN","SDAM2",4,0)
CI ; -- protocol SDAM APPT CHECK IN entry pt
"RTN","SDAM2",5,0)
 ; input:  VALMY := array entries
"RTN","SDAM2",6,0)
 ;
"RTN","SDAM2",7,0)
 N SDI,SDAT,VALMY,SDAMCIDT,SDCIACT
"RTN","SDAM2",8,0)
 D SEL^VALM2 S SDI=0,SDCIACT=""
"RTN","SDAM2",9,0)
 D NOW^%DTC S SDAMCIDT=$P(%,".")_"."_$E($P(%,".",2)_"0000",1,4)
"RTN","SDAM2",10,0)
 F  S SDI=$O(VALMY(SDI)) Q:'SDI  I $D(^TMP("SDAMIDX",$J,SDI)) K SDAT D
"RTN","SDAM2",11,0)
 .S SDAT=^TMP("SDAMIDX",$J,SDI)
"RTN","SDAM2",12,0)
 .W !,^TMP("SDAM",$J,+SDAT,0)
"RTN","SDAM2",13,0)
 .D:VALMCC SELECT^VALM10(+SDAT,1)
"RTN","SDAM2",14,0)
 .D ONE($P(SDAT,U,2),$P(SDAT,U,4),$P(SDAT,U,3),$P(SDAT,U,5),0,SDAMCIDT)
"RTN","SDAM2",15,0)
 .D:VALMCC SELECT^VALM10(+SDAT,0)
"RTN","SDAM2",16,0)
 S VALMBCK=$S(VALMCC:"",1:"R")
"RTN","SDAM2",17,0)
 Q
"RTN","SDAM2",18,0)
 ;
"RTN","SDAM2",19,0)
ONE(DFN,SDCL,SDT,SDDA,SDASK,SDAMCIDT) ; -- check in one appt
"RTN","SDAM2",20,0)
 ; input:  DFN := ifn of patient
"RTN","SDAM2",21,0)
 ;        SDCL := clinic# 
"RTN","SDAM2",22,0)
 ;         SDT := appt d/t
"RTN","SDAM2",23,0)
 ;        SDDA := ifn in ^SC multiple or null
"RTN","SDAM2",24,0)
 ;       SDASK := ask d/t of ci always [1|yes or 0|no]
"RTN","SDAM2",25,0)
 ;    SDAMCIDT := ci date/time [optional]
"RTN","SDAM2",26,0)
 ;
"RTN","SDAM2",27,0)
 I $D(XRTL) D T0^%ZOSV
"RTN","SDAM2",28,0)
 S:'SDDA SDDA=$$FIND(DFN,SDT,SDCL)
"RTN","SDAM2",29,0)
 I 'SDDA W !!,*7,"You cannot check in this appointment." D PAUSE^VALM1 G ONEQ
"RTN","SDAM2",30,0)
 N SDATA,SDCIHDL,X S SDATA=SDDA_U_DFN_U_SDT_U_SDCL,SDCIHDL=$$HANDLE^SDAMEVT(1)
"RTN","SDAM2",31,0)
 D BEFORE^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCIHDL)
"RTN","SDAM2",32,0)
 I '$D(^SD(409.63,"ACI",1,+SDATA("BEFORE","STATUS"))) W !!,*7,"You cannot check in this appointment." D PAUSE^VALM1 G ONEQ
"RTN","SDAM2",33,0)
 ; *** mt blocking
"RTN","SDAM2",34,0)
 S X="EASMTCHK" X ^%ZOSF("TEST") I $T,$G(EASACT)'="W",$$MT^EASMTCHK(DFN,"","C",SDT) D PAUSE^VALM1 G ONEQ
"RTN","SDAM2",35,0)
 ; ***
"RTN","SDAM2",36,0)
 I $P(SDT,".")>DT W !!,*7,"It is too soon to check in this appointment." D PAUSE^VALM1 G ONEQ
"RTN","SDAM2",37,0)
 S:'$D(^SC(SDCL,"S",0)) ^(0)="^44.001DA^^"
"RTN","SDAM2",38,0)
 S DR="",X=$G(^SC(SDCL,"S",SDT,1,SDDA,"C"))
"RTN","SDAM2",39,0)
 I +X S DR=309
"RTN","SDAM2",40,0)
 ; -- already co'ed
"RTN","SDAM2",41,0)
 I DR="",$P(X,U,3) D
"RTN","SDAM2",42,0)
 .S DR="309//"
"RTN","SDAM2",43,0)
 .I $P(^SC(SDCL,0),U,24)!(SDASK) S DR=DR_$$FTIME^VALM1($P(X,U,3)) Q
"RTN","SDAM2",44,0)
 .S DR=DR_"//^S X="_$P(X,U,3)
"RTN","SDAM2",45,0)
 ;
"RTN","SDAM2",46,0)
 I DR="",$P(^SC(SDCL,0),U,24)!(SDASK) S DR="309//"_$S(SDAMCIDT:$$FTIME^VALM1(SDAMCIDT),1:"NOW")
"RTN","SDAM2",47,0)
 I DR="" S DR="309///"_$S(SDAMCIDT:"/"_SDAMCIDT,1:"NOW")
"RTN","SDAM2",48,0)
 S DA(2)=SDCL,DA(1)=SDT,DA=SDDA,DIE="^SC("_DA(2)_",""S"","_DA(1)_",1," D ^DIE
"RTN","SDAM2",49,0)
 D AFTER^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCIHDL)
"RTN","SDAM2",50,0)
 I '$P(SDATA("AFTER","STATUS"),U,4),'$P(SDATA("BEFORE","STATUS"),U,4) W !?8,*7,"...appointment has not been checked in" D PAUSE^VALM1
"RTN","SDAM2",51,0)
 I SDATA("BEFORE","STATUS")'=SDATA("AFTER","STATUS") D
"RTN","SDAM2",52,0)
 .I $P(SDATA("AFTER","STATUS"),U,4),'$P(SDATA("BEFORE","STATUS"),U,4) W !?8,"...checked in ",$$FTIME^VALM1($P(SDATA("AFTER","STATUS"),U,4))
"RTN","SDAM2",53,0)
 .I $D(SDCIACT) D
"RTN","SDAM2",54,0)
 ..S Y=SDATA("AFTER","STATUS"),Y1=$P(Y,U,4),Y=$P(Y,U,3)
"RTN","SDAM2",55,0)
 ..I $P(SDATA("BEFORE","STATUS"),U,3)'=Y D UPD($$LOWER^VALM1(Y),"STAT",+SDAT,1),UPD("","TIME",+SDAT,1)
"RTN","SDAM2",56,0)
 ..I $P(SDATA("AFTER","STATUS"),U,3)["CHECKED IN" D UPD($S($P(Y1,".")=DT:$$TIME^SDAM1($P(Y1,".",2)),1:"     "),"TIME",+SDAT,1)
"RTN","SDAM2",57,0)
 .D EVT^SDAMEVT(.SDATA,4,0,SDCIHDL) ; 4 := ci evt , 0 := interactive mode
"RTN","SDAM2",58,0)
 I $D(XRT0) S XRTN="SDAM2" D T1^%ZOSV
"RTN","SDAM2",59,0)
ONEQ K DA,DIE,DR,DQ,DE,Y,Y1 Q
"RTN","SDAM2",60,0)
 ;
"RTN","SDAM2",61,0)
 ;
"RTN","SDAM2",62,0)
FIND(DFN,SDT,SDCL) ; -- return appt ifn for pat
"RTN","SDAM2",63,0)
 ;   input:        DFN := ifn of pat.
"RTN","SDAM2",64,0)
 ;                 SDT := appt d/t
"RTN","SDAM2",65,0)
 ;                SDCL := ifn of clinic
"RTN","SDAM2",66,0)
 ;  output: [returned] := ifn if pat has appt on date/time
"RTN","SDAM2",67,0)
 ;
"RTN","SDAM2",68,0)
 N Y
"RTN","SDAM2",69,0)
 S Y=0 F  S Y=$O(^SC(SDCL,"S",SDT,1,Y)) Q:'Y  I $D(^(Y,0)),DFN=+^(0),$D(^DPT(+DFN,"S",SDT,0)),$$VALID(DFN,SDCL,SDT,Y) Q
"RTN","SDAM2",70,0)
 Q Y
"RTN","SDAM2",71,0)
 ;
"RTN","SDAM2",72,0)
UPD(TEXT,FLD,LINE,SAVE) ; -- update data for screen
"RTN","SDAM2",73,0)
 D FLDTEXT^VALM10(LINE,FLD,TEXT)
"RTN","SDAM2",74,0)
 D:VALMCC CNTRL^VALM10(LINE,$P(VALMDDF(FLD),U,2),$P(VALMDDF(FLD),U,3),IOINHI,IOINORM,+$G(SAVE))
"RTN","SDAM2",75,0)
 Q
"RTN","SDAM2",76,0)
 ;
"RTN","SDAM2",77,0)
MAKE ; -- make appt action
"RTN","SDAM2",78,0)
 N ORACTION,ORVP,XQORQUIT,SDAMERR
"RTN","SDAM2",79,0)
 D FULL^VALM1
"RTN","SDAM2",80,0)
 W !!,VALMHDR(1)
"RTN","SDAM2",81,0)
 D ^SDM
"RTN","SDAM2",82,0)
 I '$D(SDAMERR) D BLD^SDAM
"RTN","SDAM2",83,0)
 I $D(SDAMERR) D PAUSE^VALM1
"RTN","SDAM2",84,0)
 D SDM^SDKILL S VALMBCK="R"
"RTN","SDAM2",85,0)
 Q
"RTN","SDAM2",86,0)
 ;
"RTN","SDAM2",87,0)
WI ; -- walk-in visit action
"RTN","SDAM2",88,0)
 S VALMBCK="R"
"RTN","SDAM2",89,0)
 D FULL^VALM1
"RTN","SDAM2",90,0)
 I SDAMTYP="P" I $$CL^SDAMWI(SDFN) D BLD^SDAM1
"RTN","SDAM2",91,0)
 I SDAMTYP="C" I $$PT^SDAMWI(SDCLN) D BLD^SDAM3
"RTN","SDAM2",92,0)
 Q
"RTN","SDAM2",93,0)
 ;
"RTN","SDAM2",94,0)
DATE ; -- change date range
"RTN","SDAM2",95,0)
 S VALMB=SDBEG D RANGE^VALM11
"RTN","SDAM2",96,0)
 I $S('VALMBEG:1,SDBEG'=VALMBEG:0,1:SDEND=VALMEND) W !!,"Date range was not changed." D PAUSE^VALM1 S VALMBCK="" G DATEQ
"RTN","SDAM2",97,0)
 S SDBEG=VALMBEG,SDEND=VALMEND
"RTN","SDAM2",98,0)
 I SDAMTYP="P" D BLD^SDAM1
"RTN","SDAM2",99,0)
 I SDAMTYP="C" D BLD^SDAM3
"RTN","SDAM2",100,0)
 S VALMBCK="R"
"RTN","SDAM2",101,0)
DATEQ K VALMB,VALMBEG,VALMEND Q
"RTN","SDAM2",102,0)
 ;
"RTN","SDAM2",103,0)
INP(DFN,VDATE) ; -- determine inpat status ; dom is not an inpat appt
"RTN","SDAM2",104,0)
 N SDINP,VAINDT,VADMVT
"RTN","SDAM2",105,0)
 S SDINP="",VAINDT=VDATE D ADM^VADPT2 G INPQ:'VADMVT
"RTN","SDAM2",106,0)
 I $P(^DG(43,1,0),U,21),$P($G(^DIC(42,+$P($G(^DGPM(VADMVT,0)),U,6),0)),U,3)="D" G INPQ
"RTN","SDAM2",107,0)
 S SDINP="I"
"RTN","SDAM2",108,0)
INPQ Q SDINP
"RTN","SDAM2",109,0)
 ;
"RTN","SDAM2",110,0)
VALID(DFN,SDCL,SDT,SDDA) ; -- return valid appt.
"RTN","SDAM2",111,0)
 ; **NOTE:  For speed consideration the ^SC and ^DPT nodes must be
"RTN","SDAM2",112,0)
 ;          check to see they exist prior to calling this entry point.
"RTN","SDAM2",113,0)
 ;   input:        DFN := ifn of pat.
"RTN","SDAM2",114,0)
 ;                 SDT := appt d/t
"RTN","SDAM2",115,0)
 ;                SDCL := ifn of clinic
"RTN","SDAM2",116,0)
 ;                SDDA := ifn of appt
"RTN","SDAM2",117,0)
 ;  output: [returned] := 1 for valid appt., 0 for not valid
"RTN","SDAM2",118,0)
 Q $S($P(^SC(SDCL,"S",SDT,1,SDDA,0),U,9)'="C":1,$P(^DPT(DFN,"S",SDT,0),U,2)["C":1,1:0)
"RTN","SDAMWI")
0^2^B12959158
"RTN","SDAMWI",1,0)
SDAMWI ;ALB/MJK - Unscheduled Appointments ; 13 Jun 2001  4:02 PM
"RTN","SDAMWI",2,0)
 ;;5.3;Scheduling;**63,94,241,250**;Aug 13, 1993
"RTN","SDAMWI",3,0)
 ;
"RTN","SDAMWI",4,0)
EN(DFN,SC) ; -- main entry point
"RTN","SDAMWI",5,0)
 ;    input: DFN ; SC := clinic#
"RTN","SDAMWI",6,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",7,0)
 ;
"RTN","SDAMWI",8,0)
 N SDY,SDAPTYP,SDRE,SDRE1,SDIN,SDSL,SDD,SDALLE,SDATD,SDDECOD,SDEC,SDEMP,SDOEL,SDPL,SDRT,SDSC,SDTTM,COLLAT,SDX,SDSTART,ORDER,SDREP,SDDA,SDCL
"RTN","SDAMWI",9,0)
 D 2^VADPT I +VADM(6) W !!?5,*7,"o  Patient has died!" D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",10,0)
 S SDCL=SC,SDSL=$S($D(^SC(SC,"SL")):+^("SL"),1:""),SDD=0
"RTN","SDAMWI",11,0)
 K SDRE,SDIN,SDRE1
"RTN","SDAMWI",12,0)
 I $D(^SC(SC,"I")) S Y=^("I"),SDIN=+Y,SDRE=+$P(Y,U,2),SDRE1=$$FDATE^VALM1(SDRE)
"RTN","SDAMWI",13,0)
 I $D(SDIN),SDIN,SDIN'>DT,SDRE,SDRE>DT W !!?5,*7,"o  Clinic is inactive from ",$$FTIME^VALM1(SDIN)," to "_SDRE1 D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",14,0)
 I $D(SDIN),SDIN,SDIN'>DT,'SDRE W !!?5,*7,"o  Clinic is inactive as of ",$$FTIME^VALM1(SDIN) D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",15,0)
 I '$$TIME(.DFN,.SC,.SDT) S SDY=0 G ENQ
"RTN","SDAMWI",16,0)
 S Y=SDT D ^SDM4 I X="^" S SDY=0 G ENQ
"RTN","SDAMWI",17,0)
 ; ** SD*5.3*250 MT Blocking check
"RTN","SDAMWI",18,0)
 S X="EASMTCHK" X ^%ZOSF("TEST") I $T N EASACT S EASACT="W" I $$MT^EASMTCHK(DFN,+$G(SDAPTYP),EASACT) D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",19,0)
 ;-- get sub-category for appointment type
"RTN","SDAMWI",20,0)
 S SDXSCAT=$$SUB^DGSAUTL(SDAPTYP,2,"")
"RTN","SDAMWI",21,0)
 S SDY=$$MAKE^SDAMWI1(DFN,SDCL,SDT)
"RTN","SDAMWI",22,0)
 K SDXSCAT
"RTN","SDAMWI",23,0)
ENQ D KVAR^VADPT
"RTN","SDAMWI",24,0)
 Q SDY
"RTN","SDAMWI",25,0)
 ;
"RTN","SDAMWI",26,0)
TIME(DFN,SC,SDT) ; -- get appt date/time
"RTN","SDAMWI",27,0)
 ;    input: DFN ; SC := clinic#
"RTN","SDAMWI",28,0)
 ;   output: SDT := date/time of wi appt
"RTN","SDAMWI",29,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",30,0)
 ;
"RTN","SDAMWI",31,0)
 N SDY,%DT
"RTN","SDAMWI",32,0)
ASK R !!,"APPOINTMENT TIME: NOW// ",X:DTIME S X=$$UPPER^VALM1(X)
"RTN","SDAMWI",33,0)
 I X["^"!('$T) S SDY=0 G TIMEQ
"RTN","SDAMWI",34,0)
 I X?.E1"?" D  G ASK
"RTN","SDAMWI",35,0)
 .W !,"  Enter a time or date@time for the appointment or return for 'NOW'."
"RTN","SDAMWI",36,0)
 .W !,"The date must be today or earlier."
"RTN","SDAMWI",37,0)
 S:X=""!(X="N")!(X="NO") X="NOW"
"RTN","SDAMWI",38,0)
 I X'="NOW",X'["@" S X="T@"_X
"RTN","SDAMWI",39,0)
 S %DT="TEP",%DT(0)=-(DT+1) D ^%DT G ASK:Y<0 S SDT=Y
"RTN","SDAMWI",40,0)
 G:'$$CANCHK(.SC,.SDT) ASK
"RTN","SDAMWI",41,0)
 I $D(^DPT(DFN,"S",SDT,0)) W !?5,*7,"o  Patient already has an appt on ",$$FTIME^VALM1(SDT) G ASK
"RTN","SDAMWI",42,0)
 S SDY=1
"RTN","SDAMWI",43,0)
TIMEQ Q SDY
"RTN","SDAMWI",44,0)
 ;
"RTN","SDAMWI",45,0)
CANCHK(SC,SDT) ; -- is clinic cancelled for date
"RTN","SDAMWI",46,0)
 ;    input: SC := clinic# ; SDT := date/time of wi appt
"RTN","SDAMWI",47,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",48,0)
 ;
"RTN","SDAMWI",49,0)
 N SDY
"RTN","SDAMWI",50,0)
 S SDY=1
"RTN","SDAMWI",51,0)
 I $D(^SC(SC,"ST",$P(SDT,"."))),'$D(^SC(SC,"ST",$P(SDT,"."),"CAN")) G CANCHKQ
"RTN","SDAMWI",52,0)
 I $D(^SC(SC,"ST",$P(SDT,"."),"CAN")),$G(^SC(SC,"ST",$P(SDT,"."),1))["CANCEL" W !?5,*7,"o  This date's clinic has been cancelled!" S SDY=0 G CANCHKQ
"RTN","SDAMWI",53,0)
 I $D(^SC(SC,"ST",$P(SDT,"."),"CAN")),$G(^SC(SC,"ST",$P(SDT,"."),1))'["CANCEL" W !?5,*7,"o  Warning: Part of this day's clinic has been cancelled!" G CANCHKQ
"RTN","SDAMWI",54,0)
 S SDY=$$AVAIL(.SC,.SDT)
"RTN","SDAMWI",55,0)
CANCHKQ Q SDY
"RTN","SDAMWI",56,0)
 ;
"RTN","SDAMWI",57,0)
AVAIL(SC,SDT) ; -- does clinic meet
"RTN","SDAMWI",58,0)
 ;    input: SC := clinic# ; SDT := date/time of wi appt
"RTN","SDAMWI",59,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",60,0)
 ;
"RTN","SDAMWI",61,0)
 N SDY
"RTN","SDAMWI",62,0)
 S X=$P(SDT,".") D DOW^SDM0
"RTN","SDAMWI",63,0)
 I $D(^SC(SC,"T"_Y)) S Z=$O(^SC(SC,"T"_Y,DT)) I Z'="",$D(^SC(SC,"T"_Y,Z,1)),^(1)]"" S SDY=1 G AVAILQ
"RTN","SDAMWI",64,0)
 W !?5,*7,"o  Clinic does not meet on this date!" S SDY=0
"RTN","SDAMWI",65,0)
AVAILQ Q SDY
"RTN","SDAMWI",66,0)
 ;
"RTN","SDAMWI",67,0)
CL(DFN) ; -- make wi appt
"RTN","SDAMWI",68,0)
 ;    input: DFN
"RTN","SDAMWI",69,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",70,0)
 ;
"RTN","SDAMWI",71,0)
 S DIC="^SC(",DIC(0)="AEMQ",DIC("A")="Select Clinic: ",DIC("S")="I $P(^(0),U,3)=""C"",'$G(^(""OOS""))"
"RTN","SDAMWI",72,0)
 D ^DIC K DIC
"RTN","SDAMWI",73,0)
 I Y<0 S SDY=0 G CLQ
"RTN","SDAMWI",74,0)
 S SC=+Y S SDY=$$EN(.DFN,.SC)
"RTN","SDAMWI",75,0)
CLQ Q SDY
"RTN","SDAMWI",76,0)
 ;
"RTN","SDAMWI",77,0)
PT(SC) ;
"RTN","SDAMWI",78,0)
 ;    input:  SC := clinic#
"RTN","SDAMWI",79,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",80,0)
 ;
"RTN","SDAMWI",81,0)
 S DIC="^DPT(",DIC(0)="AEMQ",DIC("A")="Select Patient: "
"RTN","SDAMWI",82,0)
 D ^DIC K DIC
"RTN","SDAMWI",83,0)
 I Y<0 S SDY=0 G PTQ
"RTN","SDAMWI",84,0)
 S DFN=+Y S SDY=$$EN(.DFN,.SC)
"RTN","SDAMWI",85,0)
PTQ Q SDY
"RTN","SDAMWI",86,0)
 ;
"RTN","SDCO1")
0^3^B24281526
"RTN","SDCO1",1,0)
SDCO1 ;ALB/RMO - Appointment - Check Out;Apr 23 1999
"RTN","SDCO1",2,0)
 ;;5.3;Scheduling;**27,132,149,193,250**;08/13/93
"RTN","SDCO1",3,0)
 ;
"RTN","SDCO1",4,0)
EN ;Entry point for SDCO APPT CHECK OUT protocol
"RTN","SDCO1",5,0)
 N SDCOALBF,SDCOAP,SDCOBG,SDCODT,VALMY
"RTN","SDCO1",6,0)
 S VALMBCK=""
"RTN","SDCO1",7,0)
 D EN^VALM2(XQORNOD(0))
"RTN","SDCO1",8,0)
 D FULL^VALM1
"RTN","SDCO1",9,0)
 S SDCOAP=0 D NOW^%DTC S SDCODT=$P(%,".")_"."_$E($P(%,".",2)_"0000",1,4)
"RTN","SDCO1",10,0)
 F  S SDCOAP=$O(VALMY(SDCOAP)) Q:'SDCOAP  D
"RTN","SDCO1",11,0)
 .I $D(^TMP("SDAMIDX",$J,SDCOAP)) K SDAT S SDAT=^(SDCOAP) D
"RTN","SDCO1",12,0)
 ..W !!,^TMP("SDAM",$J,+SDAT,0)
"RTN","SDCO1",13,0)
 ..I $$CHK^SDCOU(SDCOAP) D CO(+$P(SDAT,"^",2),+$P(SDAT,"^",3),+$P(SDAT,"^",4),+$P(SDAT,"^",5),0,SDCODT,"CO",+SDAT,.SDCOALBF)
"RTN","SDCO1",14,0)
 I $G(SDCOALBF) S SDCOBG=VALMBG W ! D BLD^SDAM S:$D(@VALMAR@(SDCOBG,0)) VALMBG=SDCOBG
"RTN","SDCO1",15,0)
 S VALMBCK="R"
"RTN","SDCO1",16,0)
 K SDAT
"RTN","SDCO1",17,0)
 Q
"RTN","SDCO1",18,0)
 ;
"RTN","SDCO1",19,0)
CO(DFN,SDT,SDCL,SDDA,SDASK,SDCODT,SDCOACT,SDLNE,SDCOALBF) ;Appt Check Out
"RTN","SDCO1",20,0)
 ; Input  -- DFN      Patient file IEN
"RTN","SDCO1",21,0)
 ;           SDT      Appointment Date/Time
"RTN","SDCO1",22,0)
 ;           SDCL     Hospital Location file IEN for Appt
"RTN","SDCO1",23,0)
 ;           SDDA     IEN in ^SC multiple or null [Optional]
"RTN","SDCO1",24,0)
 ;           SDASK    Ask Check Out Date/Time     [Optional]
"RTN","SDCO1",25,0)
 ;           SDCODT   Date/Time of Check Out      [Optional]
"RTN","SDCO1",26,0)
 ;           SDCOACT  Appt Mgmt Check Out Action  [Optional]
"RTN","SDCO1",27,0)
 ;           SDLNE    Appt Mgmt Line Number       [Optional]
"RTN","SDCO1",28,0)
 ; Output -- SDCOALBF Re-build Appt Mgmt List
"RTN","SDCO1",29,0)
 I $D(XRTL) D T0^%ZOSV
"RTN","SDCO1",30,0)
 N SDCOQUIT,SDOE,SDATA
"RTN","SDCO1",31,0)
 S:'SDDA SDDA=$$FIND^SDAM2(DFN,SDT,SDCL)
"RTN","SDCO1",32,0)
 I 'SDDA W !!,*7,">>> You cannot check out this appointment." D PAUSE^VALM1 G COQ
"RTN","SDCO1",33,0)
 S SDATA=$G(^DPT(DFN,"S",SDT,0))
"RTN","SDCO1",34,0)
 ; ** MT Blocking
"RTN","SDCO1",35,0)
 S X="EASMTCHK" X ^%ZOSF("TEST") I $T,$G(EASACT)'="W",$$MT^EASMTCHK(DFN,$P($G(SDATA),U,16),"C",$G(SDT)) D PAUSE^VALM1 G COQ
"RTN","SDCO1",36,0)
 ; **
"RTN","SDCO1",37,0)
 ;
"RTN","SDCO1",38,0)
 ;-- if new encounter, pass to PCE
"RTN","SDCO1",39,0)
 I $$NEW^SDPCE(SDT) D  S VALMBCK="R",SDCOALBF=1 G COQ
"RTN","SDCO1",40,0)
 . N SDCOED
"RTN","SDCO1",41,0)
 . S SDOE=$$GETAPT^SDVSIT2(DFN,SDT,SDCL)
"RTN","SDCO1",42,0)
 . ;
"RTN","SDCO1",43,0)
 . ; -- has appt already been checked out
"RTN","SDCO1",44,0)
 . S SDCOED=$$CHK($TR($$STATUS^SDAM1(DFN,SDT,SDCL,SDATA,SDDA),";","^"))
"RTN","SDCO1",45,0)
 . ;
"RTN","SDCO1",46,0)
 . ; -- if not checked out then do interview process
"RTN","SDCO1",47,0)
 . IF '$$CODT^SDCOU(DFN,SDT,SDCL) D
"RTN","SDCO1",48,0)
 . . N SDCOMKF,SDTRES
"RTN","SDCO1",49,0)
 . . ;
"RTN","SDCO1",50,0)
 . . ; -- first, check if should make follow-up appt
"RTN","SDCO1",51,0)
 . . IF $G(SDCOACT)="CO",'SDCOED D
"RTN","SDCO1",52,0)
 . . . N SDCOMKF
"RTN","SDCO1",53,0)
 . . . D MC^SDCO5(SDOE,1,.SDCOMKF,.SDCOQUIT) Q:$D(SDCOQUIT)
"RTN","SDCO1",54,0)
 . . . ;
"RTN","SDCO1",55,0)
 . . . ; -- Set flag to re-build appointment list
"RTN","SDCO1",56,0)
 . . . IF $G(SDCOMKF) S SDCOALBF=1
"RTN","SDCO1",57,0)
 . . ;
"RTN","SDCO1",58,0)
 . . ; -- c/o interview if user didn't quit
"RTN","SDCO1",59,0)
 . . I '$D(SDCOQUIT),'SDCOED D
"RTN","SDCO1",60,0)
 . . . N SDAPTYP
"RTN","SDCO1",61,0)
 . . . S SDTRES=$$INTV^PXAPI("INTV","SD","PIMS",$P($G(^SCE(+SDOE,0)),U,5),$P($G(^SCE(+SDOE,0)),U,4),DFN)
"RTN","SDCO1",62,0)
 . . . Q:SDTRES<0
"RTN","SDCO1",63,0)
 . . . ;
"RTN","SDCO1",64,0)
 . . . ; -- ask user if they want to see c/o screen
"RTN","SDCO1",65,0)
 . . . S SDGAFC=$$ASK^SDCO6
"RTN","SDCO1",66,0)
 . . . I 'SDGAFC D
"RTN","SDCO1",67,0)
 . . . .N SDELIG
"RTN","SDCO1",68,0)
 . . . .S SDELIG=$$ELSTAT^SDUTL2(DFN)
"RTN","SDCO1",69,0)
 . . . .I $$MHCLIN^SDUTL2(SDCL),'($$COLLAT^SDUTL2(SDELIG)!$P(SDATA,U,11)) D
"RTN","SDCO1",70,0)
 . . . . .I $$NEWGAF^SDUTL2(DFN) D
"RTN","SDCO1",71,0)
 . . . . . .I '$$GAFCM^SDUTL2() S SDGAFC=1
"RTN","SDCO1",72,0)
 . . .I SDGAFC D EN^SDCO(SDOE,,1)
"RTN","SDCO1",73,0)
 . ;
"RTN","SDCO1",74,0)
 . ; -- if already checked out then show c/o screen
"RTN","SDCO1",75,0)
 . E  D EN^SDCO(SDOE,,1)
"RTN","SDCO1",76,0)
 ;
"RTN","SDCO1",77,0)
 ; -- view if old encounters
"RTN","SDCO1",78,0)
 S SDOE=$$GETAPT^SDVSIT2(DFN,SDT,SDCL)
"RTN","SDCO1",79,0)
 D EN^SDCO(SDOE,,1)
"RTN","SDCO1",80,0)
 ;
"RTN","SDCO1",81,0)
COQ K % Q
"RTN","SDCO1",82,0)
 ;
"RTN","SDCO1",83,0)
BEFORE(SDATA,DFN,SDT,SDCL,SDDA,SDHDL) ; -- event driver before ; not used
"RTN","SDCO1",84,0)
 S SDATA=SDDA_"^"_DFN_"^"_SDT_"^"_SDCL,SDHDL=$$HANDLE^SDAMEVT(1)
"RTN","SDCO1",85,0)
 D BEFORE^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDHDL)
"RTN","SDCO1",86,0)
 Q
"RTN","SDCO1",87,0)
 ;
"RTN","SDCO1",88,0)
AFTER(SDATA,DFN,SDT,SDCL,SDDA,SDHDL,SDLNE) ; -- event driver after ; not used
"RTN","SDCO1",89,0)
 D AFTER^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDHDL)
"RTN","SDCO1",90,0)
 D:$G(SDLNE) UPD(DFN,SDT,SDCL,SDLNE,SDATA("BEFORE","STATUS"),SDATA("AFTER","STATUS"))
"RTN","SDCO1",91,0)
 D EVT^SDAMEVT(.SDATA,5,0,SDHDL)
"RTN","SDCO1",92,0)
 Q
"RTN","SDCO1",93,0)
 ;
"RTN","SDCO1",94,0)
UPD(DFN,SDT,SDCL,SDLNE,SDSTB,SDSTA) ; -- update appt mgmt screen ; used by AFTER but AFTER is not used
"RTN","SDCO1",95,0)
 N SDAMBOLD
"RTN","SDCO1",96,0)
 I $P(SDSTB,"^",3)'=$P(SDSTA,"^",3) D UPD^SDAM2($$LOWER^VALM1($P(SDSTA,"^",3)),"STAT",SDLNE),UPD^SDAM2("","TIME",SDLNE) S SDAMBOLD(DFN,SDT,SDCL)=""
"RTN","SDCO1",97,0)
 I $P(SDSTA,"^",3)["CHECKED OUT",$P($P(SDSTA,"^",5),".")=DT D UPD^SDAM2($$TIME^SDAM1($P($P(SDSTA,"^",5),".",2)),"TIME",SDLNE)
"RTN","SDCO1",98,0)
 Q
"RTN","SDCO1",99,0)
 ;
"RTN","SDCO1",100,0)
ELIG(DFN,SDT,SDCL,SDDA) ; -- update elig if blank
"RTN","SDCO1",101,0)
 N X,DR
"RTN","SDCO1",102,0)
 I $P(^SC(SDCL,"S",SDT,1,SDDA,0),U,10)="" D
"RTN","SDCO1",103,0)
 .S X=+$G(^DPT(DFN,.36)),X=$S('$D(^DIC(8,X,0)):"",$P(^(0),U,4)=6:"",1:X)
"RTN","SDCO1",104,0)
 .I X]"" S DR="30////^S X="_X D DIE(SDCL,SDT,SDDA,DR)
"RTN","SDCO1",105,0)
 Q
"RTN","SDCO1",106,0)
 ;
"RTN","SDCO1",107,0)
CHK(SDSTB) ; -- is appointment checked out
"RTN","SDCO1",108,0)
 N Y
"RTN","SDCO1",109,0)
 I "^2^8^12^"[("^"_+SDSTB_"^"),$P(SDSTB,"^",3)["CHECKED OUT" S Y=1
"RTN","SDCO1",110,0)
 Q +$G(Y)
"RTN","SDCO1",111,0)
 ;
"RTN","SDCO1",112,0)
DT(DFN,SDT,SDCL,SDDA,SDASK,SDCODT,SDCOQUIT) ;Update Check Out Date
"RTN","SDCO1",113,0)
 N %DT,DR,SDCIDT,X
"RTN","SDCO1",114,0)
 S:'$D(^SC(SDCL,"S",0)) ^(0)="^44.001DA^^"
"RTN","SDCO1",115,0)
 S DR="",SDCIDT=$P($G(^SC(SDCL,"S",SDT,1,SDDA,"C")),"^"),X=$P($G(^("C")),"^",3)
"RTN","SDCO1",116,0)
 I X G DTQ:'SDASK  S DR="303R"
"RTN","SDCO1",117,0)
 I DR="",$P(^SC(SDCL,0),U,24),$$REQ^SDM1A(SDT)="CO" S DR="303R//"_$S($G(SDCODT):$$FTIME^VALM1($S(SDCODT<SDCIDT:SDCIDT,1:SDCODT)),1:"NOW")
"RTN","SDCO1",118,0)
 I DR="" S DR="303R///"_$S($G(SDCODT):"/"_$S(SDCODT<SDCIDT:SDCIDT,1:SDCODT),1:"NOW")
"RTN","SDCO1",119,0)
 S DR="S SDCOQUIT="""";"_DR_";K SDCOQUIT"
"RTN","SDCO1",120,0)
 D DIE(SDCL,SDT,SDDA,DR)
"RTN","SDCO1",121,0)
DTQ Q
"RTN","SDCO1",122,0)
 ;
"RTN","SDCO1",123,0)
DIE(SDCL,SDT,SDDA,DR) ; -- update appt data in ^SC
"RTN","SDCO1",124,0)
 N DA,DIE
"RTN","SDCO1",125,0)
 S DA(2)=SDCL,DA(1)=SDT,DA=SDDA,DIE="^SC("_DA(2)_",""S"","_DA(1)_",1,"
"RTN","SDCO1",126,0)
 D ^DIE K DQ,DE
"RTN","SDCO1",127,0)
DIEQ Q
"RTN","SDM")
0^4^B25395591
"RTN","SDM",1,0)
SDM ;SF/GFT,ALB/BOK - MAKE AN APPOINTMENT ; 08 Nov 2000  2:26 PM
"RTN","SDM",2,0)
 ;;5.3;Scheduling;**15,32,38,41,44,79,94,167,168,218,223,250**;AUG 13, 1993
"RTN","SDM",3,0)
 ;                                           If defined...
"RTN","SDM",4,0)
 ; appt mgt vars:  SDFN := DFN of patient....will not be asked
"RTN","SDM",5,0)
 ;                SDCLN := ifn of clinic.....will not be asked    
"RTN","SDM",6,0)
 ;              SDAMERR := returned if error occurs
"RTN","SDM",7,0)
 ; 
"RTN","SDM",8,0)
 S:'$D(SDMM) SDMM=0
"RTN","SDM",9,0)
EN1 L  W !! D I^SDUTL I '$D(SDCLN) S DIC="^SC(",DIC(0)="AEMZQ",DIC("A")="Select CLINIC: ",DIC("S")="I $P(^(0),U,3)=""C"",'$G(^(""OOS""))" D ^DIC K DIC G:Y<0!'$D(^("SL")) END
"RTN","SDM",10,0)
 K SDAPTYP,SDIN,SDRE,SDXXX S:$D(SDCLN) Y=+SDCLN
"RTN","SDM",11,0)
 I $D(^SC(+Y,"I")) S SDIN=+^("I"),SDRE=+$P(^("I"),U,2)
"RTN","SDM",12,0)
 K SDINA I $D(SDIN),SDIN S SDINA=SDIN K SDIN
"RTN","SDM",13,0)
 I $D(SD),$D(SC),+Y'=+SC K SD
"RTN","SDM",14,0)
 S SL=$G(^SC(+Y,"SL")),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SC=Y,SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2) K Y
"RTN","SDM",15,0)
 I $D(^SC(+SC,"SDPROT")),$P(^("SDPROT"),U)="Y",'$D(^SC(+SC,"SDPRIV",DUZ)) W !,*7,"Access to ",$$CNAM(+SC)," is prohibited!",!,"Only users with a special code may access this clinic.",*7 S:$D(SDCLN) SDAMERR="" G END:$D(SDCLN),SDM
"RTN","SDM",16,0)
 D CS^SDM1A S SDW="",WY="Y"
"RTN","SDM",17,0)
 I '$D(ORACTION),'$D(SDFN) S (DIC,DIE)="^DPT(",DIC(0)="AQZME" D ^DIC S DFN=+Y G:Y<0 END:$D(SDCLN),^SDM0:X[U,SDM
"RTN","SDM",18,0)
 S:$D(SDFN) DFN=SDFN
"RTN","SDM",19,0)
 I $D(^DPT(DFN,.35)),$P(^(.35),U)]"" W !?10,*7,"PATIENT HAS DIED." S:$D(SDFN) SDAMERR="" G END:$D(SDFN),SDM
"RTN","SDM",20,0)
 D ^SDM4 I $S('$D(COLLAT):1,COLLAT=7:1,1:0) G:$D(SDCLN) END G SDM
"RTN","SDM",21,0)
 ;-- get sub-category for appointment type
"RTN","SDM",22,0)
 S SDXSCAT=$$SUB^DGSAUTL(SDAPTYP,2,"")
"RTN","SDM",23,0)
 K SDXXX D EN G END:$D(SDCLN),SDM
"RTN","SDM",24,0)
EN K SDMLT1 W:$P(VAEL(9),U,2)]"" !!,?15,"MEANS TEST STATUS: ",$P(VAEL(9),U,2),!
"RTN","SDM",25,0)
 ; *** sck, mt blocking
"RTN","SDM",26,0)
 S X="EASMTCHK" X ^%ZOSF("TEST") I $T,$$MT^EASMTCHK(DFN,+$G(SDAPTYP),"M") S SDAMERR="" Q
"RTN","SDM",27,0)
 S Y=DFN,Y(0)=^DPT(DFN,0) I VADM(7)]"" W !?3,*7,VADM(7)
"RTN","SDM",28,0)
 I $D(^DGS(41.1,"B",DFN)) F I=0:0 S I=$O(^DGS(41.1,"B",DFN,I)) Q:I'>0  I $P(^DGS(41.1,I,0),U,2)'<DT&('$P(^DGS(41.1,I,0),U,13)) W !,"SCHEDULED FOR ADMISSION ON " S Y=$P(^(0),U,2) D DT^SDM0
"RTN","SDM",29,0)
PEND S %="" W:$O(^DPT(DFN,"S",DT))'>DT !,"NO PENDING APPOINTMENTS"
"RTN","SDM",30,0)
 I $O(^DPT(DFN,"S",DT))>DT D  G END:%<0,HELP:'%
"RTN","SDM",31,0)
 .S %=2 W !,"DISPLAY PENDING APPOINTMENTS:"
"RTN","SDM",32,0)
 .D YN^DICN
"RTN","SDM",33,0)
 .I %Y["^" S SDMLT1=1
"RTN","SDM",34,0)
 D:%=1
"RTN","SDM",35,0)
 .N DX,DY,SDXY,SDEND S SDXY="S DX=$X,DY=0"_$S($L($G(^%ZOSF("XY"))):" "_^("XY"),1:"") X SDXY
"RTN","SDM",36,0)
 .F Y=DT:0 S Y=$O(^DPT(DFN,"S",Y)) Q:Y'>0  I "I"[$P(^(Y,0),U,2) X:(($Y+4)>IOSL) "D OUT^SDUTL X SDXY" Q:$G(SDEND)  D CHKSO W:$X>9 ! W ?11 D DT^SDM0 W ?32 S DA=+SSC W SDLN,$S($D(^SC(DA,0)):$P(^(0),U),1:"DELETED CLINIC "),COV,"  ",SDAT16
"RTN","SDM",37,0)
 ;Prompt for RACE if no value is currently on file
"RTN","SDM",38,0)
 S DA=DFN,DR=$S($P(^DPT(DFN,0),U,6)="":.06,1:"")
"RTN","SDM",39,0)
 I DR]"" S DIE="^DPT(" D ^DIE K DR
"RTN","SDM",40,0)
 S DA=DFN,DR=$S('$D(^DPT(DA,.11)):"[SDM1]",$P(^(.11),U)="":"[SDM1]",1:"")
"RTN","SDM",41,0)
 S DIE="^DPT(" D ^DIE:DR]"" K DR Q:$D(SDXXX)
"RTN","SDM",42,0)
E S Y=$P(SL,U,5)
"RTN","SDM",43,0)
 S SDW="" I $D(^DPT(DFN,.1)) S SDW=^(.1) W !,"NOTE - PATIENT IS NOW IN WARD "_SDW
"RTN","SDM",44,0)
 Q:$D(SDXXX)
"RTN","SDM",45,0)
EN2 F X=0:0 S X=$O(^DPT(DFN,"DE",X)) Q:'$D(^(+X,0))  I ^(0)-SC=0!'(^(0)-Y) F XX=0:0 S XX=$O(^DPT(DFN,"DE",X,1,XX)) Q:XX<1  S SDDIS=$P(^(XX,0),U,3) G ^SDM0:'SDDIS
"RTN","SDM",46,0)
 I '$D(^SC(+Y,0)) S Y=+SC
"RTN","SDM",47,0)
 S Y=$P(^SC(Y,0),U)
"RTN","SDM",48,0)
 ; SCRESTA = Array of pt's teams causing restricted consults
"RTN","SDM",49,0)
 N SCRESTA
"RTN","SDM",50,0)
 S SCREST=$$RESTPT^SCAPMCU4(DFN,DT,"SCRESTA")
"RTN","SDM",51,0)
 IF SCREST D
"RTN","SDM",52,0)
 .N SCTM
"RTN","SDM",53,0)
 . S SCCLNM=Y
"RTN","SDM",54,0)
 . W !,?5,"Patient has restricted consults due to team assignment(s):"
"RTN","SDM",55,0)
 .S SCTM=0
"RTN","SDM",56,0)
 .F  S SCTM=$O(SCRESTA(SCTM)) Q:'SCTM  W !,?10,SCRESTA(SCTM)
"RTN","SDM",57,0)
 IF SCREST&'$G(SCOKCONS) D  Q
"RTN","SDM",58,0)
 .W !,?5,"This patient may only be given appointments and enrolled in clinics via"
"RTN","SDM",59,0)
 .W !,?15,"Make Consult Appointment Option, and"
"RTN","SDM",60,0)
 .W !,?15,"Edit Clinic Enrollment Data option"
"RTN","SDM",61,0)
 D:$G(SCREST) MAIL^SCMCCON(DFN,.SCCLNM,2,DT,"SCRESTA")
"RTN","SDM",62,0)
 K DR,SCREST,SCCLNM
"RTN","SDM",63,0)
 G ^SDM0
"RTN","SDM",64,0)
 ;
"RTN","SDM",65,0)
CHKSO S COV=$S($P(^DPT(DFN,"S",Y,0),U,11)=1:" (COLLATERAL)",1:""),HY=Y,SSC=^(0),SDAT16=$S($D(^SD(409.1,+$P(SSC,U,16),0)):$P(^(0),U),1:"")
"RTN","SDM",66,0)
 F SDJ=3,4,5 I $P(^DPT(DFN,"S",HY,0),U,SDJ)]"" S Y=$P(^(0),U,SDJ) W:$X>9 ! W ?10,"*" D DT^SDM0 W ?32,$S(SDJ=3:"LAB",SDJ=4:"XRAY",1:"EKG")
"RTN","SDM",67,0)
 S SDLN="" F J=0:0 S J=$O(^SC(+SSC,"S",HY,1,J)) Q:'J  I $D(^(J,0)),+^(0)=DFN S SDLN="("_$P(^(0),U,2)_" MINUTES) " Q
"RTN","SDM",68,0)
 S Y=HY Q
"RTN","SDM",69,0)
 ;
"RTN","SDM",70,0)
END D KVAR^VADPT K SDAPTYP,SDSC,%,%DT,ASKC,COV,DA,DIC,DIE,DP,DR,HEY,HSI,HY,J,SB,SC,SDDIF,SDJ,SDLN,SD17,SDMAX,SDU,SDYC,SI,SL,SSC,STARTDAY,STR
"RTN","SDM",71,0)
 K WY,X,XX,Y,S,SD,SDAP16,SDEDT,SDTY,SM,SS,ST,ARG,CCX,CCXN,HX,I,PXR,SDINA,SDW,COLLAT,SDDIS I $D(SDMM) K:'SDMM SDMM
"RTN","SDM",72,0)
 I '$D(SDMLT) K SDMLT1
"RTN","SDM",73,0)
 Q
"RTN","SDM",74,0)
 ;
"RTN","SDM",75,0)
OERR S XQORQUIT=1 Q:'$D(ORVP)  S DFN=+ORVP G SDM
"RTN","SDM",76,0)
 ;
"RTN","SDM",77,0)
HELP W !,"YES - TO DISPLAY FUTURE APPOINTMENTS",!,"NO - FUTURE APPOINTMENTS NOT DISPLAYED" G PEND
"RTN","SDM",78,0)
 ;
"RTN","SDM",79,0)
CNAM(SDCL) ;Return clinic name
"RTN","SDM",80,0)
 ;Input: SDCL=clinic ien
"RTN","SDM",81,0)
 N SDX
"RTN","SDM",82,0)
 S SDX=$P($G(^SC(+SDCL,0)),U)
"RTN","SDM",83,0)
 Q $S($L(SDX):SDX,1:"this clinic")
"VER")
8.0^22.0
**INSTALL NAME**
DG*5.3*411
"BLD",2260,0)
DG*5.3*411^REGISTRATION^0^3020417^y
"BLD",2260,1,0)
^^7^7^3010921^
"BLD",2260,1,1,0)
This patch is in response to Item #22 in the Rossio Report.  In the area
"BLD",2260,1,2,0)
of Means Test (MT) Deficiencies, Item #22 required that the Veterans
"BLD",2260,1,3,0)
Health Administration (VHA) identify best practices for means testing and
"BLD",2260,1,4,0)
acquiring veterans' signatures at the local level and explore the
"BLD",2260,1,5,0)
promulgation of these best practices throughout the system.  This patch
"BLD",2260,1,6,0)
adds a site controllable parameter to post a means test completion
"BLD",2260,1,7,0)
bulletin to a local mail group.
"BLD",2260,4,0)
^9.64PA^^
"BLD",2260,"KRN",0)
^9.67PA^19^17
"BLD",2260,"KRN",.4,0)
.4
"BLD",2260,"KRN",.401,0)
.401
"BLD",2260,"KRN",.402,0)
.402
"BLD",2260,"KRN",.403,0)
.403
"BLD",2260,"KRN",.5,0)
.5
"BLD",2260,"KRN",.84,0)
.84
"BLD",2260,"KRN",3.6,0)
3.6
"BLD",2260,"KRN",3.8,0)
3.8
"BLD",2260,"KRN",9.2,0)
9.2
"BLD",2260,"KRN",9.8,0)
9.8
"BLD",2260,"KRN",9.8,"NM",0)
^9.68A^3^2
"BLD",2260,"KRN",9.8,"NM",2,0)
DGMTDD^^0^B13786672
"BLD",2260,"KRN",9.8,"NM",3,0)
DGMTU^^0^B51368145
"BLD",2260,"KRN",9.8,"NM","B","DGMTDD",2)

"BLD",2260,"KRN",9.8,"NM","B","DGMTU",3)

"BLD",2260,"KRN",19,0)
19
"BLD",2260,"KRN",19.1,0)
19.1
"BLD",2260,"KRN",101,0)
101
"BLD",2260,"KRN",409.61,0)
409.61
"BLD",2260,"KRN",771,0)
771
"BLD",2260,"KRN",870,0)
870
"BLD",2260,"KRN",8994,0)
8994
"BLD",2260,"KRN","B",.4,.4)

"BLD",2260,"KRN","B",.401,.401)

"BLD",2260,"KRN","B",.402,.402)

"BLD",2260,"KRN","B",.403,.403)

"BLD",2260,"KRN","B",.5,.5)

"BLD",2260,"KRN","B",.84,.84)

"BLD",2260,"KRN","B",3.6,3.6)

"BLD",2260,"KRN","B",3.8,3.8)

"BLD",2260,"KRN","B",9.2,9.2)

"BLD",2260,"KRN","B",9.8,9.8)

"BLD",2260,"KRN","B",19,19)

"BLD",2260,"KRN","B",19.1,19.1)

"BLD",2260,"KRN","B",101,101)

"BLD",2260,"KRN","B",409.61,409.61)

"BLD",2260,"KRN","B",771,771)

"BLD",2260,"KRN","B",870,870)

"BLD",2260,"KRN","B",8994,8994)

"BLD",2260,"QUES",0)
^9.62^^
"BLD",2260,"REQB",0)
^9.611^4^2
"BLD",2260,"REQB",3,0)
DG*5.3*182^1
"BLD",2260,"REQB",4,0)
DG*5.3*426^1
"BLD",2260,"REQB","B","DG*5.3*182",3)

"BLD",2260,"REQB","B","DG*5.3*426",4)

"MBREQ")
0
"PKG",114,-1)
1^1
"PKG",114,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",114,20,0)
^9.402P^^
"PKG",114,22,0)
^9.49I^1^1
"PKG",114,22,1,0)
5.3^2930813^2930821
"PKG",114,22,1,"PAH",1,0)
411^3020417
"PKG",114,22,1,"PAH",1,1,0)
^^7^7^3020417
"PKG",114,22,1,"PAH",1,1,1,0)
This patch is in response to Item #22 in the Rossio Report.  In the area
"PKG",114,22,1,"PAH",1,1,2,0)
of Means Test (MT) Deficiencies, Item #22 required that the Veterans
"PKG",114,22,1,"PAH",1,1,3,0)
Health Administration (VHA) identify best practices for means testing and
"PKG",114,22,1,"PAH",1,1,4,0)
acquiring veterans' signatures at the local level and explore the
"PKG",114,22,1,"PAH",1,1,5,0)
promulgation of these best practices throughout the system.  This patch
"PKG",114,22,1,"PAH",1,1,6,0)
adds a site controllable parameter to post a means test completion
"PKG",114,22,1,"PAH",1,1,7,0)
bulletin to a local mail group.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DGMTDD")
0^2^B13786672
"RTN","DGMTDD",1,0)
DGMTDD ;ALB/RMO,CAW,CJM - Annual Means Test file (#408.31) Data Dictionary Calls ;9 JAN 1992 9:30 pm
"RTN","DGMTDD",2,0)
 ;;5.3;Registration;**33,182,411**;Aug 13, 1993
"RTN","DGMTDD",3,0)
 ;
"RTN","DGMTDD",4,0)
CUR ;Cross-reference on the Status field (#.03) 
"RTN","DGMTDD",5,0)
 ;to update the Current Means Test Status field (#.14)
"RTN","DGMTDD",6,0)
 ;in the Patient file (#2)
"RTN","DGMTDD",7,0)
 N DFN,DGCS,DGDT,DGIX,DGMTI,DGMTS
"RTN","DGMTDD",8,0)
 S DFN=$P($G(^DGMT(408.31,DA,0)),U,2),DGCS=$P($G(^DPT(DFN,0)),U,14),(DGDT,DGMTS)=""
"RTN","DGMTDD",9,0)
 S DGMTI=+$$MTIENLT^DGMTU3(1,DFN,"")
"RTN","DGMTDD",10,0)
 I $D(^DGMT(408.31,DGMTI,0)) S DGMTS=$P(^(0),U,3) G CURQ:DGCS=DGMTS
"RTN","DGMTDD",11,0)
 I DGCS]"" D
"RTN","DGMTDD",12,0)
 .N DA,X
"RTN","DGMTDD",13,0)
 .S DA=DFN,X=DGCS,DGIX=0
"RTN","DGMTDD",14,0)
 .F  S DGIX=$O(^DD(2,.14,1,DGIX)) Q:'DGIX  X ^(DGIX,2) S X=DGCS
"RTN","DGMTDD",15,0)
 S $P(^DPT(DFN,0),U,14)=DGMTS I DGMTS]"" D
"RTN","DGMTDD",16,0)
 .N DA,X
"RTN","DGMTDD",17,0)
 .S DA=DFN,X=DGMTS,DGIX=0
"RTN","DGMTDD",18,0)
 .F  S DGIX=$O(^DD(2,.14,1,DGIX)) Q:'DGIX  X ^(DGIX,1) S X=DGMTS
"RTN","DGMTDD",19,0)
CURQ Q
"RTN","DGMTDD",20,0)
 ;
"RTN","DGMTDD",21,0)
COM ;Input Transform check of the Completion date/time field (#.07)
"RTN","DGMTDD",22,0)
 N DGDT,DGMT0,XMB,XMDUZ
"RTN","DGMTDD",23,0)
 S DGMT0=$G(^DGMT(408.31,DA,0))
"RTN","DGMTDD",24,0)
 I X<+DGMT0 W !?5,"The completion date/time cannot be before the date of test." K X
"RTN","DGMTDD",25,0)
 I $D(X) S DGDT=+$O(^DGMT(408.31,"AD",$P(DGMT0,U,19),$P(DGMT0,U,2),+DGMT0)) I DGDT,X'<DGDT W !?5,"The completion date/time cannot be after the next date of test." K X
"RTN","DGMTDD",26,0)
 ; DG*5.3*411 - MT Completion Bulletin
"RTN","DGMTDD",27,0)
 ;
"RTN","DGMTDD",28,0)
 I $D(X) D
"RTN","DGMTDD",29,0)
 . N EASDT S EASDT=X
"RTN","DGMTDD",30,0)
 . Q:'$$GET1^DIQ(713,1,7,"I")
"RTN","DGMTDD",31,0)
 . Q:$P(DGMT0,U,19)'=1
"RTN","DGMTDD",32,0)
 . S XMB="EAS MTCOMPLETION"
"RTN","DGMTDD",33,0)
 . S XMB(1)=$$GET1^DIQ(2,$P(DGMT0,U,2),.01)
"RTN","DGMTDD",34,0)
 . S XMB(2)=$E($$GET1^DIQ(2,$P(DGMT0,U,2),.09),6,10)
"RTN","DGMTDD",35,0)
 . S XMB(3)=$$FMTE^XLFDT(EASDT)
"RTN","DGMTDD",36,0)
 . S XMB(4)=$$GET1^DIQ(200,DUZ,.01)
"RTN","DGMTDD",37,0)
 . S XMDUZ="EAS MT Completion"
"RTN","DGMTDD",38,0)
 . D ^XMB
"RTN","DGMTDD",39,0)
COMQ Q
"RTN","DGMTDD",40,0)
 ;
"RTN","DGMTDD",41,0)
SCR(DGMTS,DGMTI,DGMTYPT,DGMTACT) ;Screen for the Status field (#.03)
"RTN","DGMTDD",42,0)
 ;                         Input  -- DGMTS    Means Test Status IEN
"RTN","DGMTDD",43,0)
 ;                                   DGMTI    Annual Means Test IEN
"RTN","DGMTDD",44,0)
 ;                                   DGMTYPT  Type of Test 1=MT 2=COPAY
"RTN","DGMTDD",45,0)
 ;                                   DGMTACT  Means Test Action (Opt)
"RTN","DGMTDD",46,0)
 ;                         Output -- 1=SELECTABLE and 0=NOT SELECTABLE
"RTN","DGMTDD",47,0)
 N DA,DGMT0,DGMTDT,Y
"RTN","DGMTDD",48,0)
 S DGMT0=$G(^DGMT(408.31,DGMTI,0)),DGMTDT=+DGMT0
"RTN","DGMTDD",49,0)
 I DGMTYPT=1,$$ACT(DGMTS,DGMTDT),$$MTS(DGMTS,DGMTDT,DGMT0,$G(DGMTACT),DGMTYPT) S Y=1
"RTN","DGMTDD",50,0)
 I DGMTYPT=2,$$ACT(DGMTS,DGMTDT),$P(^DG(408.32,DGMTS,0),U,19)=2,$$MTS(DGMTS,DGMTDT,DGMT0,$G(DGMTACT),DGMTYPT) S Y=1
"RTN","DGMTDD",51,0)
 Q +$G(Y)
"RTN","DGMTDD",52,0)
 ;
"RTN","DGMTDD",53,0)
ACT(DGMTS,DGMTDT) ;Determine if means test status is active
"RTN","DGMTDD",54,0)
 ;                 Input  -- DGMTS   Means Test Status IEN
"RTN","DGMTDD",55,0)
 ;                           DGMTDT  Date of Test
"RTN","DGMTDD",56,0)
 ;                 Output -- 1=ACTIVE and 0=INACTIVE
"RTN","DGMTDD",57,0)
 N Y
"RTN","DGMTDD",58,0)
 S:'$P(DGMTDT,".",2) DGMTDT=DGMTDT_.2359
"RTN","DGMTDD",59,0)
 I $D(^DG(408.32,DGMTS,"E",+$O(^(+$O(^DG(408.32,DGMTS,"E","AID",-DGMTDT)),0)),0)),$P($G(^(0)),U,2) S Y=1
"RTN","DGMTDD",60,0)
 Q +$G(Y)
"RTN","DGMTDD",61,0)
 ;
"RTN","DGMTDD",62,0)
MTS(DGMTS,DGMTDT,DGMT0,DGMTACT,DGMTYPT) ;Determine if means test status is selectable
"RTN","DGMTDD",63,0)
 ;                      Input  -- DGMTS    Means Test Status IEN
"RTN","DGMTDD",64,0)
 ;                                DGMTDT   Date of Test
"RTN","DGMTDD",65,0)
 ;                                DGMT0    Annual Means Test 0th node
"RTN","DGMTDD",66,0)
 ;                                DGMTACT  Means Test Action  (Opt)
"RTN","DGMTDD",67,0)
 ;                                DGMTYPT  Type of Test 1=MT 2=COPAY
"RTN","DGMTDD",68,0)
 ;                      Output -- 1=SELECTABLE and 0=NOT SELECTABLE
"RTN","DGMTDD",69,0)
 N DGDET,DGINT,DGLY,DGMTPAR,DGNWT,DGOMTS,DGTHA,DGTHB,DGTHPF,DGTSRC
"RTN","DGMTDD",70,0)
 S Y=0
"RTN","DGMTDD",71,0)
 I DGMTYPT=1 D
"RTN","DGMTDD",72,0)
 .S DGOMTS=$P(DGMT0,U,3),DGINT=$P(DGMT0,U,4),DGNWT=$P(DGMT0,U,5),DGDET=$P(DGMT0,U,15),DGLY=$E(DGMTDT,1,3)-1_"0000"
"RTN","DGMTDD",73,0)
 .S:$$ACT(4,DGMTDT) DGTHA=$P(DGMT0,U,12) S:$$ACT(5,DGMTDT) DGTHB=$P(DGMT0,U,13)
"RTN","DGMTDD",74,0)
 .S DGMTPAR=$G(^DG(43,1,"MT",$S($P(DGMT0,U,16):DGLY,1:DGLY+10000),0))
"RTN","DGMTDD",75,0)
 .S DGTHPF=$S((DGNWT+DGINT-DGDET)>$P(DGMTPAR,U,8):1,1:0)
"RTN","DGMTDD",76,0)
 .S DGTSRC=$P($G(^DG(408.34,+$P(DGMT0,U,23),0)),U)
"RTN","DGMTDD",77,0)
 .I DGMTS=2,$G(DGMTACT)="CAT" D
"RTN","DGMTDD",78,0)
 ..S:DGTHPF Y=1
"RTN","DGMTDD",79,0)
 ..S:((DGTSRC="VAMC")&(DGOMTS=4)) Y=0
"RTN","DGMTDD",80,0)
 .I DGMTS=4 S Y=1
"RTN","DGMTDD",81,0)
 .I DGMTS=5 D
"RTN","DGMTDD",82,0)
 ..S:DGTHPF!(DGINT>$G(DGTHA)) Y=1
"RTN","DGMTDD",83,0)
 ..S:((DGTSRC="VAMC")&(DGOMTS=4)) Y=0
"RTN","DGMTDD",84,0)
 .I DGMTS=6 D
"RTN","DGMTDD",85,0)
 ..S:DGTHPF!(DGINT>$G(DGTHA)&(DGINT>$G(DGTHB))) Y=1
"RTN","DGMTDD",86,0)
 ..S:((DGTSRC="VAMC")&(DGOMTS=4)) Y=0
"RTN","DGMTDD",87,0)
 I DGMTYPT=2 D
"RTN","DGMTDD",88,0)
 .I DGMTS=7 S Y=1
"RTN","DGMTDD",89,0)
 .I DGMTS=8 S Y=1
"RTN","DGMTDD",90,0)
 .I DGMTS=9 S Y=1
"RTN","DGMTDD",91,0)
 .I DGMTS=10 S Y=0
"RTN","DGMTDD",92,0)
 .I DGMTS=11 S Y=0
"RTN","DGMTDD",93,0)
 Q +$G(Y)
"RTN","DGMTDD",94,0)
 ;
"RTN","DGMTDD",95,0)
STOPAUTO(DA) ;
"RTN","DGMTDD",96,0)
 ;This is the kill logic for an xref on the Test Determined Status field.
"RTN","DGMTDD",97,0)
 ;If the status changes, and there is a linked test via the Linked
"RTN","DGMTDD",98,0)
 ;Rx Copay/Means Test field, the Test Determined Status of the linked
"RTN","DGMTDD",99,0)
 ;test should be deleted.
"RTN","DGMTDD",100,0)
 ;
"RTN","DGMTDD",101,0)
 ;Input - DA is the ien of a test in the Annual Means Test file
"RTN","DGMTDD",102,0)
 ;Output - none
"RTN","DGMTDD",103,0)
 ;
"RTN","DGMTDD",104,0)
 N LINKEDMT
"RTN","DGMTDD",105,0)
 Q:'$G(DA)
"RTN","DGMTDD",106,0)
 S LINKEDMT=$P($G(^DGMT(408.31,DA,2)),"^",6)
"RTN","DGMTDD",107,0)
 I LINKEDMT D
"RTN","DGMTDD",108,0)
 .S $P(^DGMT(408.31,LINKEDMT,2),"^",2)=$$NOW^XLFDT
"RTN","DGMTDD",109,0)
 .S $P(^DGMT(408.31,LINKEDMT,2),"^",3)=""
"RTN","DGMTDD",110,0)
 Q
"RTN","DGMTU")
0^3^B51368145
"RTN","DGMTU",1,0)
DGMTU ;ALB/RMO - Means Test Utilities ; 2/20/02
"RTN","DGMTU",2,0)
 ;;5.3;Registration;**4,33,182,277,290,374,358,420,426,411**;Aug 13, 1993
"RTN","DGMTU",3,0)
 ;
"RTN","DGMTU",4,0)
LST(DFN,DGDT,DGMTYPT) ;Last means test for a patient
"RTN","DGMTU",5,0)
 ;         Input  -- DFN   Patient IEN
"RTN","DGMTU",6,0)
 ;                   DGDT  Date/Time  (Optional- default today@2359)
"RTN","DGMTU",7,0)
 ;                DGMTYPT  Type of Test (Optional - if not defined 
"RTN","DGMTU",8,0)
 ;                                       Means Test will be assumed)
"RTN","DGMTU",9,0)
 ;         Output -- Annual Means Test IEN^Date of Test
"RTN","DGMTU",10,0)
 ;                   ^Status Name^Status Code^Source of Test
"RTN","DGMTU",11,0)
 N DGIDT,DGMTFL1,DGMTI,DGNOD,Y I '$D(DGMTYPT) S DGMTYPT=1
"RTN","DGMTU",12,0)
 S DGIDT=$S($G(DGDT)>0:-DGDT,1:-DT) S:'$P(DGIDT,".",2) DGIDT=DGIDT_.2359
"RTN","DGMTU",13,0)
 F  S DGIDT=+$O(^DGMT(408.31,"AID",DGMTYPT,DFN,DGIDT)) Q:'DGIDT!$G(DGMTFL1)  D
"RTN","DGMTU",14,0)
 .F DGMTI=0:0 S DGMTI=+$O(^DGMT(408.31,"AID",DGMTYPT,DFN,DGIDT,DGMTI)) Q:'DGMTI!$G(DGMTFL1)  D
"RTN","DGMTU",15,0)
 ..S DGNOD=$G(^DGMT(408.31,DGMTI,0)) I DGNOD,$G(^("PRIM")) S DGMTFL1=1,Y=DGMTI_"^"_$P(^(0),"^")_"^"_$$MTS(DFN,+$P(^(0),"^",3))_"^"_$P(DGNOD,"^",23) ; chk for primary MT
"RTN","DGMTU",16,0)
 Q $G(Y)
"RTN","DGMTU",17,0)
 ;
"RTN","DGMTU",18,0)
LVMT(DFN,DGDT) ;Last valid means test (status other than required)
"RTN","DGMTU",19,0)
 ;          Input  -- DFN    Patient IEN
"RTN","DGMTU",20,0)
 ;                    DGDT   Date (Optional - default today)
"RTN","DGMTU",21,0)
 ;          Output -- Annual Means Test IEN^Date of Test^Status Name
"RTN","DGMTU",22,0)
 ;                     ^Status Code
"RTN","DGMTU",23,0)
 N DGMT,DGMTL
"RTN","DGMTU",24,0)
 S:'$D(DGDT) DGDT=DT S DGMTL=$$LST^DGMTU(DFN,DGDT)
"RTN","DGMTU",25,0)
 I $P(DGMTL,"^",4)="R" F  S DGMT=$$LST^DGMTU(DFN,DGDT) Q:DGMT']""!($P(DGMT,U,4)'="R")  S DGDT=$P(DGMT,U,2)-1
"RTN","DGMTU",26,0)
 Q $S($G(DGMT)]"":DGMT,1:$G(DGMTL))
"RTN","DGMTU",27,0)
 ;
"RTN","DGMTU",28,0)
NVMT(DFN,DGDT) ;Next valid means test (status other than required)
"RTN","DGMTU",29,0)
 ;          Input  -- DFN    Patient IEN
"RTN","DGMTU",30,0)
 ;                    DGDT   Date (Required)
"RTN","DGMTU",31,0)
 ;          Output -- Annual Means Test IEN^Date of Test^Status Name
"RTN","DGMTU",32,0)
 ;                     ^Status Code
"RTN","DGMTU",33,0)
 N DGDTE,DGMT,DGMT0,DGMTI,DGMTPR,DGMTS
"RTN","DGMTU",34,0)
 S DGDTE=DGDT
"RTN","DGMTU",35,0)
 F  S DGDTE=$O(^DGMT(408.31,"AD",1,DFN,DGDTE)) Q:'DGDTE!$G(DGMT)  D
"RTN","DGMTU",36,0)
 .F DGMTI=0:0 S DGMTI=$O(^DGMT(408.31,"AD",1,DFN,DGDTE,DGMTI)) Q:'DGMTI  S DGMT0=$G(^DGMT(408.31,DGMTI,0)),DGMTS=+$P(DGMT0,"^",3),DGMTPR=$G(^("PRIM")) I +DGMT0,DGMTS'=1,DGMTPR S DGMT=DGMTI_"^"_+DGMT0_"^"_$$MTS^DGMTU(DFN,DGMTS) Q
"RTN","DGMTU",37,0)
 Q $G(DGMT)
"RTN","DGMTU",38,0)
 ;
"RTN","DGMTU",39,0)
MTS(DFN,DGMTS) ;Means test status -- default current
"RTN","DGMTU",40,0)
 ;         Input  -- DFN    Patient IEN
"RTN","DGMTU",41,0)
 ;                   DGMTS  Means Test Status IEN  (Optional)
"RTN","DGMTU",42,0)
 ;         Output -- Status Name^Status Code
"RTN","DGMTU",43,0)
 N Y
"RTN","DGMTU",44,0)
 S DGMTS=$S($G(DGMTS)>0:DGMTS,1:$P($G(^DPT(DFN,0)),"^",14))
"RTN","DGMTU",45,0)
 I DGMTS S Y=$P($G(^DG(408.32,DGMTS,0)),"^",1,2)
"RTN","DGMTU",46,0)
 Q $G(Y)
"RTN","DGMTU",47,0)
 ;
"RTN","DGMTU",48,0)
DIS(DFN) ;Display patients current means test status,
"RTN","DGMTU",49,0)
 ;        eligibility for care, deductible information,
"RTN","DGMTU",50,0)
 ;        date of test and date of completion
"RTN","DGMTU",51,0)
 ;         Input  -- DFN    Patient IEN
"RTN","DGMTU",52,0)
 ;         Output -- None
"RTN","DGMTU",53,0)
 N DGCS,DGDED,DGMTI,DGMT0
"RTN","DGMTU",54,0)
 S DGCS=$P($G(^DPT(DFN,0)),"^",14) G DISQ:DGCS=""
"RTN","DGMTU",55,0)
 S DGMTI=+$$LST^DGMTU(DFN),DGMT0=$G(^DGMT(408.31,DGMTI,0))
"RTN","DGMTU",56,0)
 S MTSIG=$P(DGMT0,"^",29)
"RTN","DGMTU",57,0)
 W !,"Means Test Signed?: ",$S(MTSIG=1:"YES",MTSIG=0:"NO",MTSIG=9:"DELETED",1:"")
"RTN","DGMTU",58,0)
 I DGCS=1 W !!,"Patient Requires a Means Test"
"RTN","DGMTU",59,0)
 I DGCS=2 W !!,"Patient's Means Test is Pending Adjudication"
"RTN","DGMTU",60,0)
 I DGCS=3 W !!,"Means Test Not Required"
"RTN","DGMTU",61,0)
 I ("^4^5^6^")[("^"_DGCS_"^") W !!,"Patient is Category ",$P($$MTS(DFN,DGCS),"^",2)," based on primary means test"
"RTN","DGMTU",62,0)
 I $D(^DG(408.32,DGCS,"MSG")) W !,^("MSG")
"RTN","DGMTU",63,0)
 I DGCS=6 S DGDED=$P(DGMT0,"^",11) W ! W:DGDED]"" "Has",$S(DGDED:"",1:" not")," agreed to pay the deductible"
"RTN","DGMTU",64,0)
 S Y=$P(DGMT0,"^") X ^DD("DD") W !,"Primary Means Test ",$S(DGCS=1:"Required from",1:"Last Applied")," '",Y,"'"
"RTN","DGMTU",65,0)
 I ("^2^4^5^6^")[("^"_DGCS_"^") S Y=$P(DGMT0,"^",7) X ^DD("DD") W " (COMPLETED: ",Y,")"
"RTN","DGMTU",66,0)
 I DGCS=3 S Y=$P(DGMT0,"^",17) X ^DD("DD") W " (NO LONGER REQUIRED: ",Y,")"
"RTN","DGMTU",67,0)
DISQ Q
"RTN","DGMTU",68,0)
 ;
"RTN","DGMTU",69,0)
EDT(DFN,DGDT) ;Display patients current means test information and provide
"RTN","DGMTU",70,0)
 ;        the user with the option of proceeding with a required
"RTN","DGMTU",71,0)
 ;        means test or editing an existing means test
"RTN","DGMTU",72,0)
 ;         Input  -- DFN    Patient IEN
"RTN","DGMTU",73,0)
 ;                   DGDT   Date/Time
"RTN","DGMTU",74,0)
 ;         Output -- None
"RTN","DGMTU",75,0)
 ;
"RTN","DGMTU",76,0)
 ; obtain lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTU",77,0)
 I $$LOCK^DGMTUTL(DFN)
"RTN","DGMTU",78,0)
 ;
"RTN","DGMTU",79,0)
 D DIS(DFN)
"RTN","DGMTU",80,0)
 S DGMTI=+$$LST(DFN,DGDT) G EDTQ:'DGMTI!(DGMTI'=+$$LST^DGMTU(DFN))
"RTN","DGMTU",81,0)
 S DGMT0=$G(^DGMT(408.31,DGMTI,0)),DGMTDT=+DGMT0,DGMTS=$P(DGMT0,"^",3)
"RTN","DGMTU",82,0)
 S DIR("A")="Do you wish to "_$S(DGMTS=1:"proceed with",1:"edit")_" the means test at this time"
"RTN","DGMTU",83,0)
 S DIR("B")=$S(DGMTS=1:"YES",1:"NO"),DIR(0)="Y"
"RTN","DGMTU",84,0)
 W ! D ^DIR G EDTQ:$D(DTOUT)!($D(DUOUT))
"RTN","DGMTU",85,0)
 I Y S DGMTYPT=1,DGMTACT="EDT",DGMTROU="EDTQ^DGMTU" G EN^DGMTSC
"RTN","DGMTU",86,0)
EDTQ K DGMT0,DGMTACT,DGMTDT,DGMTI,DGMTROU,DGMTS,DIR,DTOUT,DUOUT,Y
"RTN","DGMTU",87,0)
 ;
"RTN","DGMTU",88,0)
 ; release lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTU",89,0)
 D UNLOCK^DGMTUTL(DFN)
"RTN","DGMTU",90,0)
 ;
"RTN","DGMTU",91,0)
 Q
"RTN","DGMTU",92,0)
 ;
"RTN","DGMTU",93,0)
CMTS(DFN) ;Get Current Means Test Status - query HEC if necessary
"RTN","DGMTU",94,0)
 ;
"RTN","DGMTU",95,0)
 ;        Input: DFN=patient ien
"RTN","DGMTU",96,0)
 ;       Output: MT IEN^Date of Test^Status Name
"RTN","DGMTU",97,0)
 ;                 ^Status Code^Source of Test
"RTN","DGMTU",98,0)
 ;
"RTN","DGMTU",99,0)
 N X,Y,DGMTDATA,DGQSENT,DGDOD,NODE0,DGRET,DGMFLG,DGTAG,DGMTYPT
"RTN","DGMTU",100,0)
 S DGMTYPT=1,DGMTDATA=$$LST(DFN,"",DGMTYPT)
"RTN","DGMTU",101,0)
 ;Next line checks to see if patient has expired, if so, Query not initiated
"RTN","DGMTU",102,0)
 S DGDOD=$P($G(^DPT(DFN,.35)),U)
"RTN","DGMTU",103,0)
 I +DGDOD Q DGMTDATA
"RTN","DGMTU",104,0)
 ;Next line checks to see if current test exists, if not, Query not initiated 
"RTN","DGMTU",105,0)
 I '$G(DGMTDATA) Q DGMTDATA
"RTN","DGMTU",106,0)
 D:+$$QFLG(DGMTDATA)
"RTN","DGMTU",107,0)
 .I $G(IVMZ10)'="UPLOAD IN PROGRESS",'$$OPEN^IVMCQ2(DFN),'$$SENT^IVMCQ2(DFN),$G(DGMFLG)'=0 D
"RTN","DGMTU",108,0)
 ..I $$LOCK^DGMTUTL(DFN)
"RTN","DGMTU",109,0)
 ..D QRYQUE2^IVMCQ2(DFN,$G(DUZ),0,$G(XQY)) S DGQSENT=1
"RTN","DGMTU",110,0)
 ..I '$D(ZTQUEUED),'$G(DGMSGF),$G(DGQSENT) W !!,"Financial query queued to be sent to HEC...",! H .5
"RTN","DGMTU",111,0)
 ..D UNLOCK^DGMTUTL(DFN)
"RTN","DGMTU",112,0)
 .S DGMTDATA=$$LST(DFN,"",DGMTYPT)
"RTN","DGMTU",113,0)
 D:+$$MFLG(DGMTDATA)
"RTN","DGMTU",114,0)
 .S DGMFLG=$$MFLG(DGMTDATA)
"RTN","DGMTU",115,0)
 .S DGTAG=$S(DGMFLG=1:"MSG"_DGMFLG,DGMFLG=2:"MSG"_DGMFLG,1:0)
"RTN","DGMTU",116,0)
 .I DGTAG["MSG",'$G(DGMSGF) D @DGTAG
"RTN","DGMTU",117,0)
 Q DGMTDATA   ;return most current MT data
"RTN","DGMTU",118,0)
MFLG(DGMTDATA) ;Set up appropriate informational message flag for user's
"RTN","DGMTU",119,0)
 ;benefit.
"RTN","DGMTU",120,0)
 ;Input        -     DGMTDATA as defined by $$LST function.
"RTN","DGMTU",121,0)
 ;Output       -     DGRETV
"RTN","DGMTU",122,0)
 ;                   1 = Patient's Current Test is REQUIRED
"RTN","DGMTU",123,0)
 ;                   2 = Patient's Test is > 365 days old and
"RTN","DGMTU",124,0)
 ;                       is in a status of other than REQUIRED or
"RTN","DGMTU",125,0)
 ;                       NO LONGER REQUIRED
"RTN","DGMTU",126,0)
 ;                   0 = Patient is CAT C/Pending Adj. and has
"RTN","DGMTU",127,0)
 ;                       a test date of 10/6/99 or greater and has
"RTN","DGMTU",128,0)
 ;                       agreed to the deductible.
"RTN","DGMTU",129,0)
 ;               OR  0 = Patient is Cat C, declined to provide income
"RTN","DGMTU",130,0)
 ;                       info and has agreed to pay deductible.
"RTN","DGMTU",131,0)
 N DGRETV
"RTN","DGMTU",132,0)
 S DGRETV=0
"RTN","DGMTU",133,0)
 I $P($G(DGMTDATA),U,4)="R" S DGRETV=1
"RTN","DGMTU",134,0)
 I $$OLD^DGMTU4($P(DGMTDATA,U,2)),($P($G(DGMTDATA),U,4)'="N")&($P($G(DGMTDATA),U,4)'="R") S DGRETV=2
"RTN","DGMTU",135,0)
 I ($P($G(DGMTDATA),U,4)="C")!($P($G(DGMTDATA),U,4)="P"),$P($G(DGMTDATA),U,2)>2991005,$P($G(^DGMT(408.31,+DGMTDATA,0)),U,11)=1 S DGRETV=0
"RTN","DGMTU",136,0)
 I ($P($G(DGMTDATA),U,4)="C"),+$P($G(^DGMT(408.31,+DGMTDATA,0)),U,14),+$P($G(^DGMT(408.31,+DGMTDATA,0)),U,11) S DGRETV=0
"RTN","DGMTU",137,0)
 D DOM^DGMTR I $G(DGDOM) S DGRETV=0
"RTN","DGMTU",138,0)
 Q DGRETV
"RTN","DGMTU",139,0)
MSG1 ;Informational message 1
"RTN","DGMTU",140,0)
 N NODE0,Y
"RTN","DGMTU",141,0)
 S NODE0=$G(^DGMT(408.31,+DGMTDATA,0))
"RTN","DGMTU",142,0)
 W !!,$C(7),?15,"*** Patient Requires a Means Test ***",!
"RTN","DGMTU",143,0)
 S Y=$P(NODE0,U) X ^DD("DD") W !,?14,"Primary Means Test Required from "_Y,!
"RTN","DGMTU",144,0)
 I $G(IOST)["C-" R !!,"Enter <RETURN> to continue.",DGRET:DTIME
"RTN","DGMTU",145,0)
 Q
"RTN","DGMTU",146,0)
MSG2 ;Informational message 2
"RTN","DGMTU",147,0)
 N NODE0,Y
"RTN","DGMTU",148,0)
 S NODE0=$G(^DGMT(408.31,+DGMTDATA,0))
"RTN","DGMTU",149,0)
 W !!,$C(7),?17,"*** Patient Requires a Means Test ***",!
"RTN","DGMTU",150,0)
 S Y=$P(NODE0,U) X ^DD("DD") W !,?10,"Patient's Test dated "_Y_" is "_$P(DGMTDATA,U,3)_"."_" The test"
"RTN","DGMTU",151,0)
 W !,?10,"date is greater than 365 days old.  Please update."
"RTN","DGMTU",152,0)
 I $G(IOST)["C-" R !!,"Enter <RETURN> to continue.",DGRET:DTIME
"RTN","DGMTU",153,0)
 Q
"RTN","DGMTU",154,0)
QFLG(DGMTDATA) ;
"RTN","DGMTU",155,0)
 ;INPUT - DGMTDATA
"RTN","DGMTU",156,0)
 ;OUTPUT- IVMQFLG 1 if query is necessary 0 if not
"RTN","DGMTU",157,0)
 N IVMQFLG
"RTN","DGMTU",158,0)
 S IVMQFLG=0
"RTN","DGMTU",159,0)
 ;Set flag to 1 if Means test is Required.
"RTN","DGMTU",160,0)
 I $P($G(DGMTDATA),U,4)="R" S IVMQFLG=1
"RTN","DGMTU",161,0)
 ;Set flag to 1 if Means test is older than 365 days and status is not
"RTN","DGMTU",162,0)
 ;equal to No Longer Required and not equal to REQUIRED.
"RTN","DGMTU",163,0)
 I $$OLD^DGMTU4($P(DGMTDATA,U,2)),($P($G(DGMTDATA),U,4)'="N")&($P($G(DGMTDATA),U,4)'="R") S IVMQFLG=1
"RTN","DGMTU",164,0)
 ;If Cat C/Pending Adj.,older than 365 days,agreed to pay, test date >
"RTN","DGMTU",165,0)
 ;10/5/99 reset flag to 0 - no query is necessary.
"RTN","DGMTU",166,0)
 I ($P($G(DGMTDATA),U,4)="C")!($P($G(DGMTDATA),U,4)="P"),$P($G(DGMTDATA),U,2)>2991005,$P($G(^DGMT(408.31,+DGMTDATA,0)),U,11)=1 S IVMQFLG=0
"RTN","DGMTU",167,0)
 ;If patient is Cat C, declined to provide income info but has agreed to
"RTN","DGMTU",168,0)
 ;pay deductible, no query necessary - reset flag to 0
"RTN","DGMTU",169,0)
 I (+$P($G(DGMTDATA),U,4)="C"),+$P($G(^DGMT(408.31,+DGMTDATA,0)),U,14),+$P($G(^DGMT(408.31,+DGMTDATA,0)),U,11) S DGRETV=0
"RTN","DGMTU",170,0)
 ;If patient is on a DOM ward, don't initiate query
"RTN","DGMTU",171,0)
 D DOM^DGMTR I $G(DGDOM) S IVMQFLG=0
"RTN","DGMTU",172,0)
 Q IVMQFLG
"RTN","DGMTU",173,0)
 ;
"RTN","DGMTU",174,0)
FUT(DFN,DGDT,DGMTYPT) ; Future Means Tests for a patient
"RTN","DGMTU",175,0)
 ; Input:
"RTN","DGMTU",176,0)
 ;       DFN      Patient IEN
"RTN","DGMTU",177,0)
 ;       DGDT     Date (Optional- default to today)
"RTN","DGMTU",178,0)
 ;       DGMTYPT  Type of Test (Optional - default to Means Test)
"RTN","DGMTU",179,0)
 ; Output:
"RTN","DGMTU",180,0)
 ;       If a DCD test was performed it will be returned, else the
"RTN","DGMTU",181,0)
 ;       earliest performed future test for the Income Year.
"RTN","DGMTU",182,0)
 ;       Future MT IEN^Date of Test (Future)^Status Name^Status Code^
"RTN","DGMTU",183,0)
 ;       Source of Test
"RTN","DGMTU",184,0)
 ;
"RTN","DGMTU",185,0)
 N DGIDT,Y,MTIEN,SRCE,DONE,MTNOD,ARR,FIRST
"RTN","DGMTU",186,0)
 S:'$D(DGMTYPT) DGMTYPT=1
"RTN","DGMTU",187,0)
 S DGIDT=$S($G(DGDT)>0:DGDT,1:DT),DONE=0
"RTN","DGMTU",188,0)
 S (ARR,FIRST,Y)=""
"RTN","DGMTU",189,0)
 ; Strip off the time, if it was sent
"RTN","DGMTU",190,0)
 S:$P(DGIDT,".",2) DGIDT=$P(DGIDT,".")
"RTN","DGMTU",191,0)
 F  S DGIDT=$O(^IVM(301.5,"AE",DFN,DGIDT)) Q:'DGIDT!(DONE)  D
"RTN","DGMTU",192,0)
 .S MTIEN=0
"RTN","DGMTU",193,0)
 .F  S MTIEN=$O(^IVM(301.5,"AE",DFN,DGIDT,MTIEN)) Q:'MTIEN!(DONE)  D
"RTN","DGMTU",194,0)
 ..Q:'$D(^DGMT(408.31,MTIEN,0))
"RTN","DGMTU",195,0)
 ..S MTNOD=^DGMT(408.31,MTIEN,0),SRCE=$P(MTNOD,U,23)
"RTN","DGMTU",196,0)
 ..I SRCE'=1 S DONE=1,Y=MTIEN_U_$P(MTNOD,U)_U_$$MTS^DGMTU(DFN,+$P(MTNOD,U,3))_U_$P(MTNOD,U,23) Q
"RTN","DGMTU",197,0)
 ..I 'DONE,'$D(ARR($P(MTNOD,U))) S ARR($P(MTNOD,U))=MTIEN_U_$P(MTNOD,U)_U_$$MTS^DGMTU(DFN,+$P(MTNOD,U,3))_U_$P(MTNOD,U,23)
"RTN","DGMTU",198,0)
 I 'DONE S FIRST=$O(ARR("")) I FIRST S Y=ARR(FIRST)
"RTN","DGMTU",199,0)
 Q $G(Y)
"VER")
8.0^22.0
**INSTALL NAME**
PX*1.0*113
"BLD",2262,0)
PX*1.0*113^PCE PATIENT CARE ENCOUNTER^0^3020417^y
"BLD",2262,1,0)
^^9^9^3010921^
"BLD",2262,1,1,0)
This patch is in response to Item #22 in the Rossio Report.  In the area
"BLD",2262,1,2,0)
of Means Test (MT) Deficiencies, Item #22 required that the Veterans
"BLD",2262,1,3,0)
Health Administration (VHA) identify best practices for means testing and
"BLD",2262,1,4,0)
acquiring veterans' signatures at the local level and explore the
"BLD",2262,1,5,0)
promulgation of these best practices throughout the system.  This patch
"BLD",2262,1,6,0)
incorporates into the Patient Care Encounter software an Enrollment
"BLD",2262,1,7,0)
Application Systems (EAS) API which will inidcate whether to block the
"BLD",2262,1,8,0)
checkout of an existing appointment through the PCE menu or not.  This
"BLD",2262,1,9,0)
blocking is based on the veterans current means test status.
"BLD",2262,4,0)
^9.64PA^^
"BLD",2262,"KRN",0)
^9.67PA^19^17
"BLD",2262,"KRN",.4,0)
.4
"BLD",2262,"KRN",.401,0)
.401
"BLD",2262,"KRN",.402,0)
.402
"BLD",2262,"KRN",.403,0)
.403
"BLD",2262,"KRN",.5,0)
.5
"BLD",2262,"KRN",.84,0)
.84
"BLD",2262,"KRN",3.6,0)
3.6
"BLD",2262,"KRN",3.8,0)
3.8
"BLD",2262,"KRN",9.2,0)
9.2
"BLD",2262,"KRN",9.8,0)
9.8
"BLD",2262,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",2262,"KRN",9.8,"NM",1,0)
PXBAPI1^^0^B47871971
"BLD",2262,"KRN",9.8,"NM","B","PXBAPI1",1)

"BLD",2262,"KRN",19,0)
19
"BLD",2262,"KRN",19.1,0)
19.1
"BLD",2262,"KRN",101,0)
101
"BLD",2262,"KRN",409.61,0)
409.61
"BLD",2262,"KRN",771,0)
771
"BLD",2262,"KRN",870,0)
870
"BLD",2262,"KRN",8994,0)
8994
"BLD",2262,"KRN","B",.4,.4)

"BLD",2262,"KRN","B",.401,.401)

"BLD",2262,"KRN","B",.402,.402)

"BLD",2262,"KRN","B",.403,.403)

"BLD",2262,"KRN","B",.5,.5)

"BLD",2262,"KRN","B",.84,.84)

"BLD",2262,"KRN","B",3.6,3.6)

"BLD",2262,"KRN","B",3.8,3.8)

"BLD",2262,"KRN","B",9.2,9.2)

"BLD",2262,"KRN","B",9.8,9.8)

"BLD",2262,"KRN","B",19,19)

"BLD",2262,"KRN","B",19.1,19.1)

"BLD",2262,"KRN","B",101,101)

"BLD",2262,"KRN","B",409.61,409.61)

"BLD",2262,"KRN","B",771,771)

"BLD",2262,"KRN","B",870,870)

"BLD",2262,"KRN","B",8994,8994)

"BLD",2262,"QUES",0)
^9.62^^
"BLD",2262,"REQB",0)
^9.611^1^1
"BLD",2262,"REQB",1,0)
PX*1.0*111^1
"BLD",2262,"REQB","B","PX*1.0*111",1)

"MBREQ")
0
"PKG",507,-1)
1^1
"PKG",507,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter
"PKG",507,20,0)
^9.402P^^
"PKG",507,22,0)
^9.49I^1^1
"PKG",507,22,1,0)
1.0^2960812^2960912^10958
"PKG",507,22,1,"PAH",1,0)
113^3020417^11984
"PKG",507,22,1,"PAH",1,1,0)
^^9^9^3020417
"PKG",507,22,1,"PAH",1,1,1,0)
This patch is in response to Item #22 in the Rossio Report.  In the area
"PKG",507,22,1,"PAH",1,1,2,0)
of Means Test (MT) Deficiencies, Item #22 required that the Veterans
"PKG",507,22,1,"PAH",1,1,3,0)
Health Administration (VHA) identify best practices for means testing and
"PKG",507,22,1,"PAH",1,1,4,0)
acquiring veterans' signatures at the local level and explore the
"PKG",507,22,1,"PAH",1,1,5,0)
promulgation of these best practices throughout the system.  This patch
"PKG",507,22,1,"PAH",1,1,6,0)
incorporates into the Patient Care Encounter software an Enrollment
"PKG",507,22,1,"PAH",1,1,7,0)
Application Systems (EAS) API which will inidcate whether to block the
"PKG",507,22,1,"PAH",1,1,8,0)
checkout of an existing appointment through the PCE menu or not.  This
"PKG",507,22,1,"PAH",1,1,9,0)
blocking is based on the veterans current means test status.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","PXBAPI1")
0^1^B47871971
"RTN","PXBAPI1",1,0)
PXBAPI1 ;ISL/JVS,dee - PCE's API - interview questions ;10/15/96
"RTN","PXBAPI1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**1,9,23,56,104,111,113**;Aug 12, 1996
"RTN","PXBAPI1",3,0)
 ;;
"RTN","PXBAPI1",4,0)
 Q
"RTN","PXBAPI1",5,0)
 ;
"RTN","PXBAPI1",6,0)
PROCESS(PXBEXIT) ;
"RTN","PXBAPI1",7,0)
 I WHAT="INTV" D
"RTN","PXBAPI1",8,0)
 . ;-- Interview is all of the questions
"RTN","PXBAPI1",9,0)
 . D ADQ(.PXBEXIT) I PXBEXIT<1 Q 
"RTN","PXBAPI1",10,0)
1 . D PRV(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",11,0)
3 . D POV(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",12,0)
2 . D CPT(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",13,0)
 . I $P($G(^AUPNVSIT($G(PXBVST),150)),"^",3)="O" S PXBEXIT=0 Q
"RTN","PXBAPI1",14,0)
 . I '$$DISPOSIT^PXUTL1($G(PXBPAT),$P($G(^AUPNVSIT(PXBVST,0)),"^",1),$G(PXBVST)) D STP(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",15,0)
 E  I WHAT="ADDEDIT" D
"RTN","PXBAPI1",16,0)
 . D ADDEDIT
"RTN","PXBAPI1",17,0)
 E  I WHAT="ADQ" D
"RTN","PXBAPI1",18,0)
 . ;-- Adminstrative questions
"RTN","PXBAPI1",19,0)
 . D ADQ(.PXBEXIT)
"RTN","PXBAPI1",20,0)
 E  I WHAT="CODT" D
"RTN","PXBAPI1",21,0)
 . ;-- Check out Date/Time
"RTN","PXBAPI1",22,0)
 . D CODT(.PXBEXIT)
"RTN","PXBAPI1",23,0)
 . Q:PXBEXIT<1
"RTN","PXBAPI1",24,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",25,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",26,0)
 E  I WHAT="SCC" D
"RTN","PXBAPI1",27,0)
 . ;-- Service connected conditions
"RTN","PXBAPI1",28,0)
 . D SCC(.PXBEXIT)
"RTN","PXBAPI1",29,0)
 . Q:PXBEXIT<1
"RTN","PXBAPI1",30,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",31,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",32,0)
 E  I WHAT="PRV" D
"RTN","PXBAPI1",33,0)
 . ;-- Providers
"RTN","PXBAPI1",34,0)
 . D PRV(.PXBEXIT)
"RTN","PXBAPI1",35,0)
 E  I WHAT="CPT" D
"RTN","PXBAPI1",36,0)
 . ;-- Providers and CPT codes
"RTN","PXBAPI1",37,0)
 . D CPT(.PXBEXIT)
"RTN","PXBAPI1",38,0)
 E  I WHAT="POV" D
"RTN","PXBAPI1",39,0)
 . ;-- Diagnoses
"RTN","PXBAPI1",40,0)
 . D POV(.PXBEXIT)
"RTN","PXBAPI1",41,0)
 E  I WHAT="STP" D
"RTN","PXBAPI1",42,0)
 . ;-- Stop Codes
"RTN","PXBAPI1",43,0)
 . D STP(.PXBEXIT)
"RTN","PXBAPI1",44,0)
 E  S PXBEXIT=-3 W !,"Procedure ""INTV^PXAPI"" was called incorrectly, contact IRM."
"RTN","PXBAPI1",45,0)
 Q
"RTN","PXBAPI1",46,0)
 ;
"RTN","PXBAPI1",47,0)
ADDEDIT ;
"RTN","PXBAPI1",48,0)
 N ANS
"RTN","PXBAPI1",49,0)
ADDEDIT1 ;
"RTN","PXBAPI1",50,0)
 D ADQ(.PXBEXIT)
"RTN","PXBAPI1",51,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",52,0)
 D PRV(.PXBEXIT)
"RTN","PXBAPI1",53,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",54,0)
 D POV(.PXBEXIT)
"RTN","PXBAPI1",55,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",56,0)
 ;
"RTN","PXBAPI1",57,0)
 ;Call to CPT is not determined by a credit stop code any more
"RTN","PXBAPI1",58,0)
 ;
"RTN","PXBAPI1",59,0)
 D CPT(.PXBEXIT)
"RTN","PXBAPI1",60,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",61,0)
ADDEDIT2 ;
"RTN","PXBAPI1",62,0)
 I PXBVST>0,'$D(^AUPNVCPT("AD",PXBVST)),'$D(^AUPNVSIT("AD",PXBVST)) D  I ANS'=1 S PXBEXIT=1 G ADDEDIT1
"RTN","PXBAPI1",63,0)
 . N DIR,X,Y
"RTN","PXBAPI1",64,0)
 . W !!
"RTN","PXBAPI1",65,0)
 . S DIR(0)="Y"
"RTN","PXBAPI1",66,0)
 . S DIR("A",1)="Must have a STOP CODE or a PROCEDURE to complete this action."
"RTN","PXBAPI1",67,0)
 . S DIR("A")="Do you want to delete this encounter"
"RTN","PXBAPI1",68,0)
 . S DIR("B")="NO"
"RTN","PXBAPI1",69,0)
 . D ^DIR
"RTN","PXBAPI1",70,0)
 . S ANS=Y
"RTN","PXBAPI1",71,0)
 . Q:ANS'=1
"RTN","PXBAPI1",72,0)
 . I $$DELVFILE^PXAPIDEL("ALL",PXBVST,"","","","","")=1 S PXBEXIT=-1
"RTN","PXBAPI1",73,0)
 I PXBVST>0,'$D(^AUPNVSIT(PXBVST,0)) S PXBVST=""
"RTN","PXBAPI1",74,0)
 Q
"RTN","PXBAPI1",75,0)
 ;
"RTN","PXBAPI1",76,0)
ADQ(PXBEXIT) ;Ask the Administration questions
"RTN","PXBAPI1",77,0)
 I PXBVST'>0 D
"RTN","PXBAPI1",78,0)
 . ;This is only done for new visits
"RTN","PXBAPI1",79,0)
 . I PXBPAT'>0 S PXBPAT=$$ASKPAT I PXBPAT'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",80,0)
 . S DFN=PXBPAT
"RTN","PXBAPI1",81,0)
 . I PXBHLOC'>0 S PXBHLOC=$$ASKHL I PXBHLOC'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",82,0)
 . S PXBVSTDT=$S(PXBAPPT>0:PXBAPPT,1:$$ASKDT) I PXBVSTDT'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",83,0)
 . I PXBAPPT'>0&PXBHLOC'=+$G(^DPT(PXBPAT,"S",PXBVSTDT,0)) D
"RTN","PXBAPI1",84,0)
 .. ;This is only done if there is no appointment.
"RTN","PXBAPI1",85,0)
 .. S PXELAP=$$ELAP^SDPCE(PXBPAT,PXBHLOC)
"RTN","PXBAPI1",86,0)
 I PXBEXIT'<1,PXBHLOC'>0 S PXBHLOC=$$ASKHL I PXBHLOC'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",87,0)
 I PXBEXIT'<1 D CODT(.PXBEXIT)
"RTN","PXBAPI1",88,0)
 I PXBEXIT'<1 D SCC(.PXBEXIT)
"RTN","PXBAPI1",89,0)
 I PXBEXIT'<1 D
"RTN","PXBAPI1",90,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",91,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",92,0)
 Q
"RTN","PXBAPI1",93,0)
 ;
"RTN","PXBAPI1",94,0)
ASKPAT() ;Ask user for a patient
"RTN","PXBAPI1",95,0)
 ;DIC on file 9000001
"RTN","PXBAPI1",96,0)
 N DIR,DIC,Y,X,DA
"RTN","PXBAPI1",97,0)
 S DIR(0)="P^9000001:AEMQ"
"RTN","PXBAPI1",98,0)
 S DIR("A")="Patient Name"
"RTN","PXBAPI1",99,0)
 D ^DIR
"RTN","PXBAPI1",100,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",101,0)
 ;
"RTN","PXBAPI1",102,0)
ASKHL() ;Ask user for a Hospital Location
"RTN","PXBAPI1",103,0)
ASKHL2 ;DIC on file 44
"RTN","PXBAPI1",104,0)
 N DIR,DIC,Y,X,DA
"RTN","PXBAPI1",105,0)
 S DIR(0)="PA^44:AEMQ"
"RTN","PXBAPI1",106,0)
 S DIR("A")="Clinic: "
"RTN","PXBAPI1",107,0)
 ; not occasion of service and not dispositioning
"RTN","PXBAPI1",108,0)
 I PXALHLOC S DIR("S")="I '+$G(^(""OOS""))&'$O(^PX(815,1,""DHL"",""B"",Y,0))"
"RTN","PXBAPI1",109,0)
 ; only clinic that are not occasion of service and not dispositioning
"RTN","PXBAPI1",110,0)
 E  S DIR("S")="I $P(^(0),U,3)=""C""&'+$G(^(""OOS""))&'$O(^PX(815,1,""DHL"",""B"",Y,0))"
"RTN","PXBAPI1",111,0)
 D ^DIR
"RTN","PXBAPI1",112,0)
 I $D(^PX(815,1,"DHL","B",+Y)) D HELPDISP^PXCEVSIT W !,$C(7) G ASKHL2
"RTN","PXBAPI1",113,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",114,0)
 ;
"RTN","PXBAPI1",115,0)
ASKDT() ;Ask user for the encounter Date/Time
"RTN","PXBAPI1",116,0)
 N DIR,Y,X,DA
"RTN","PXBAPI1",117,0)
 S DIR(0)="D^"_$S(PXLIMDT>2960000:PXLIMDT,1:"")_":"_(DT+.24)_":AEPRSX"
"RTN","PXBAPI1",118,0)
 S DIR("A")="Encounter Date and Time"
"RTN","PXBAPI1",119,0)
 S DIR("?")="Enter the Date and Time of this encounter"
"RTN","PXBAPI1",120,0)
 D ^DIR
"RTN","PXBAPI1",121,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",122,0)
 ;
"RTN","PXBAPI1",123,0)
CODT(PXBEXIT) ;Ask the user the Check out Date/Time
"RTN","PXBAPI1",124,0)
 N PXCHKOUT
"RTN","PXBAPI1",125,0)
 D CHIKOUT^PXBAPI2("",PXBPAT,PXBHLOC,PXBVSTDT)
"RTN","PXBAPI1",126,0)
 S PXBCODT=PXCHKOUT
"RTN","PXBAPI1",127,0)
 S:PXCHKOUT=-1 PXBCODT=""
"RTN","PXBAPI1",128,0)
 ;; PX*1*113 - Change for EAS*1*3 Appointment processing
"RTN","PXBAPI1",129,0)
 S X="EASMTCHK" X ^%ZOSF("TEST") I $T D  Q:PXBEXIT<1
"RTN","PXBAPI1",130,0)
 . S:$G(EASACT)'="W" EASACT="C"
"RTN","PXBAPI1",131,0)
 . I $$MT^EASMTCHK(PXBPAT,"",EASACT,PXBVSTDT) D  S PXBEXIT=-1
"RTN","PXBAPI1",132,0)
 . . D PAUSE^VALM1
"RTN","PXBAPI1",133,0)
 ;; **
"RTN","PXBAPI1",134,0)
 I WHAT'["ADDEDIT",PXCHKOUT=-1 S PXBEXIT=-1
"RTN","PXBAPI1",135,0)
 I $G(PXBVST),$$DISPOSIT^PXUTL1(DFN,$P($G(^AUPNVSIT(PXBVST,0)),"^",1),PXBVST) S PXBEXIT=1
"RTN","PXBAPI1",136,0)
 Q
"RTN","PXBAPI1",137,0)
 ;
"RTN","PXBAPI1",138,0)
SCC(PXBEXIT) ;Ask the user the Service connected conditions
"RTN","PXBAPI1",139,0)
 N PXBDATA,PXBCLASS,PXBOUTEN
"RTN","PXBAPI1",140,0)
 S PXBOUTEN=""
"RTN","PXBAPI1",141,0)
 ;I $$APPOINT^PXUTL1(PXBPAT,PXBVSTDT,PXBHLOC) D
"RTN","PXBAPI1",142,0)
 ;. S PXBOUTEN=$P($G(^DPT(+PXBPAT,"S",+PXBVSTDT,0)),"^",20)
"RTN","PXBAPI1",143,0)
 ;E  I $$DISPOSIT^PXUTL1(PXBPAT,PXBVSTDT,PXBVST) D
"RTN","PXBAPI1",144,0)
 ;. S PXBOUTEN=+$P($G(^DPT(+PXBPAT,"DIS",9999999-PXBVSTDT,0)),"^",18)
"RTN","PXBAPI1",145,0)
 ;I 'PXBOUTEN,$G(PXBVST)>0 S PXBOUTEN=$O(^SCE("AVSIT",PXBVST,0))
"RTN","PXBAPI1",146,0)
 ;D CLASS^PXBAPI21(PXBOUTEN,PXBPAT,PXBVSTDT,PXBHLOC)
"RTN","PXBAPI1",147,0)
 D CLASS^PXBAPI21(PXBOUTEN,PXBPAT,PXBVSTDT,PXBHLOC,PXBVST)
"RTN","PXBAPI1",148,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",149,0)
 F PXBCLASS=1:1:6 I $G(PXBDATA("ERR",PXBCLASS))=4 S PXBEXIT=-1 Q  ; changed 6/17/98 for MST enhancement
"RTN","PXBAPI1",150,0)
 Q:PXBEXIT<1
"RTN","PXBAPI1",151,0)
 S PXB800(1)=$P($G(PXBDATA(3)),"^",2)
"RTN","PXBAPI1",152,0)
 S PXB800(2)=$P($G(PXBDATA(1)),"^",2)
"RTN","PXBAPI1",153,0)
 S PXB800(3)=$P($G(PXBDATA(2)),"^",2)
"RTN","PXBAPI1",154,0)
 S PXB800(4)=$P($G(PXBDATA(4)),"^",2)
"RTN","PXBAPI1",155,0)
 S PXB800(5)=$P($G(PXBDATA(5)),"^",2) ;added 6/17/98 for MST enhancement
"RTN","PXBAPI1",156,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",157,0)
 S PXB800(6)=$P($G(PXBDATA(6)),"^",2)
"RTN","PXBAPI1",158,0)
 Q
"RTN","PXBAPI1",159,0)
 ;
"RTN","PXBAPI1",160,0)
VISIT(PXBEXIT) ;Creat or edit the Visit
"RTN","PXBAPI1",161,0)
 ;Set up ^TMP("PXK",$J and call PXK
"RTN","PXBAPI1",162,0)
 I PXBVST>0 L +^AUPNVSIT(PXBVST):10 E  W !!,$C(7),"Cannot edit at this time, try again later." D WAIT^PXCEHELP S PXBEXIT=-2 Q
"RTN","PXBAPI1",163,0)
 K ^TMP("PXK",$J)
"RTN","PXBAPI1",164,0)
 N PXBNODE,PXBAFTER,PXKERROR
"RTN","PXBAPI1",165,0)
 F PXBNODE=0,21,150,800,811,812 D
"RTN","PXBAPI1",166,0)
 . S PXBAFTER(PXBNODE)=$S(PXBVST>0:$G(^AUPNVSIT(PXBVST,PXBNODE)),1:"")
"RTN","PXBAPI1",167,0)
 . S ^TMP("PXK",$J,"VST",1,PXBNODE,"BEFORE")=PXBAFTER(PXBNODE)
"RTN","PXBAPI1",168,0)
 I PXBVST'>0 D
"RTN","PXBAPI1",169,0)
 . S $P(PXBAFTER(0),"^",1)=PXBVSTDT
"RTN","PXBAPI1",170,0)
 . S $P(PXBAFTER(0),"^",5)=PXBPAT
"RTN","PXBAPI1",171,0)
 . S $P(PXBAFTER(0),"^",8)=$P(^SC(PXBHLOC,0),"^",7)
"RTN","PXBAPI1",172,0)
 . S:PXBAPPT>0 $P(PXBAFTER(0),"^",16)="A"
"RTN","PXBAPI1",173,0)
 . S $P(PXBAFTER(150),"^",3)="P"
"RTN","PXBAPI1",174,0)
 . S $P(PXBAFTER(812),"^",2)=PXBPKG
"RTN","PXBAPI1",175,0)
 . S $P(PXBAFTER(812),"^",3)=PXBSOURC
"RTN","PXBAPI1",176,0)
 S $P(PXBAFTER(0),"^",18)=$G(PXBCODT)
"RTN","PXBAPI1",177,0)
 S:$P(PXBAFTER(0),"^",22)="" $P(PXBAFTER(0),"^",22)=PXBHLOC
"RTN","PXBAPI1",178,0)
 S $P(PXBAFTER(800),"^",1)=$G(PXB800(1))
"RTN","PXBAPI1",179,0)
 S $P(PXBAFTER(800),"^",2)=$G(PXB800(2))
"RTN","PXBAPI1",180,0)
 S $P(PXBAFTER(800),"^",3)=$G(PXB800(3))
"RTN","PXBAPI1",181,0)
 S $P(PXBAFTER(800),"^",4)=$G(PXB800(4))
"RTN","PXBAPI1",182,0)
 S $P(PXBAFTER(800),"^",5)=$G(PXB800(5)) ;added 6/17/98 for MST emhancement
"RTN","PXBAPI1",183,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",184,0)
 S $P(PXBAFTER(800),"^",6)=$G(PXB800(6))
"RTN","PXBAPI1",185,0)
 I $D(PXELAP)#2 D
"RTN","PXBAPI1",186,0)
 . S $P(PXBAFTER(0),"^",21)=+PXELAP
"RTN","PXBAPI1",187,0)
 F PXBNODE=0,21,150,800,811,812 D
"RTN","PXBAPI1",188,0)
 . S ^TMP("PXK",$J,"VST",1,PXBNODE,"AFTER")=PXBAFTER(PXBNODE)
"RTN","PXBAPI1",189,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=$S(PXBVST>0:PXBVST,1:"")
"RTN","PXBAPI1",190,0)
 S ^TMP("PXK",$J,"SOR")=PXBSOURC
"RTN","PXBAPI1",191,0)
 D EN1^PXKMAIN
"RTN","PXBAPI1",192,0)
 I PXBVST>0 L -^AUPNVSIT(PXBVST):5
"RTN","PXBAPI1",193,0)
 S PXBVST=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXBAPI1",194,0)
 Q
"RTN","PXBAPI1",195,0)
 ;
"RTN","PXBAPI1",196,0)
CPT(PXBEXIT) ;Ask the user Providers and CTPs
"RTN","PXBAPI1",197,0)
 D CPT^PXBMCPT(PXBVST) K PRVDR
"RTN","PXBAPI1",198,0)
 Q
"RTN","PXBAPI1",199,0)
 ;
"RTN","PXBAPI1",200,0)
POV(PXBEXIT) ;Ask the user Diagnoses
"RTN","PXBAPI1",201,0)
 D POV^PXBMPOV(PXBVST) K PRVDR
"RTN","PXBAPI1",202,0)
 Q
"RTN","PXBAPI1",203,0)
 ;
"RTN","PXBAPI1",204,0)
PRV(PXBEXIT) ;Ask the user Providers
"RTN","PXBAPI1",205,0)
 D PRV^PXBMPRV(PXBVST,"PRV") K PRVDR
"RTN","PXBAPI1",206,0)
 Q
"RTN","PXBAPI1",207,0)
 ;
"RTN","PXBAPI1",208,0)
STP(PXBEXIT) ;Ask the user Stop Codes
"RTN","PXBAPI1",209,0)
 I $L($T(DATE^SCDXUTL)),$$DATE^SCDXUTL(+$G(^AUPNVSIT(PXBVST,0))) Q
"RTN","PXBAPI1",210,0)
 D STP^PXBMSTP(PXBVST) K PRVDR
"RTN","PXBAPI1",211,0)
 Q
"RTN","PXBAPI1",212,0)
 ;
"VER")
8.0^22.0
**END**
**END**
