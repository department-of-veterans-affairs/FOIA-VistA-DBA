Released TIU*1*225 SEQ #213
Extracted from mail message
**KIDS**:TIU*1.0*225^

**INSTALL NAME**
TIU*1.0*225
"BLD",5603,0)
TIU*1.0*225^TEXT INTEGRATION UTILITIES^0^3070605^y
"BLD",5603,1,0)
^^2^2^3070605^^
"BLD",5603,1,1,0)
The description of this patch may be found in the National Patch Module
"BLD",5603,1,2,0)
under TIU*1*225.
"BLD",5603,4,0)
^9.64PA^4.001^3
"BLD",5603,4,4.001,0)
4.001
"BLD",5603,4,4.001,222)
n^n^f^^n^^y^o^n
"BLD",5603,4,4.001,224)
I Y=8926.1
"BLD",5603,4,8925.1,0)
8925.1
"BLD",5603,4,8925.1,2,0)
^9.641^8925.1^1
"BLD",5603,4,8925.1,2,8925.1,0)
TIU DOCUMENT DEFINITION  (File-top level)
"BLD",5603,4,8925.1,2,8925.1,1,0)
^9.6411^1501^1
"BLD",5603,4,8925.1,2,8925.1,1,1501,0)
VHA ENTERPRISE STANDARD TITLE
"BLD",5603,4,8925.1,222)
y^n^p^^^^n^^n
"BLD",5603,4,8925.1,224)

"BLD",5603,4,8926.1,0)
8926.1
"BLD",5603,4,8926.1,2,0)
^9.641^8926.199^2
"BLD",5603,4,8926.1,2,8926.1,0)
TIU VHA ENTERPRISE STANDARD TITLE  (File-top level)
"BLD",5603,4,8926.1,2,8926.1,1,0)
^9.6411^.01^1
"BLD",5603,4,8926.1,2,8926.1,1,.01,0)
STANDARD TITLE
"BLD",5603,4,8926.1,2,8926.199,0)
EFFECTIVE DATE/TIME  (sub-file)
"BLD",5603,4,8926.1,2,8926.199,1,0)
^9.6411^.02^1
"BLD",5603,4,8926.1,2,8926.199,1,.02,0)
STATUS
"BLD",5603,4,8926.1,222)
y^y^p^^^^n^^n
"BLD",5603,4,8926.1,224)

"BLD",5603,4,"APDD",8925.1,8925.1)

"BLD",5603,4,"APDD",8925.1,8925.1,1501)

"BLD",5603,4,"APDD",8926.1,8926.1)

"BLD",5603,4,"APDD",8926.1,8926.1,.01)

"BLD",5603,4,"APDD",8926.1,8926.199)

"BLD",5603,4,"APDD",8926.1,8926.199,.02)

"BLD",5603,4,"B",4.001,4.001)

"BLD",5603,4,"B",8925.1,8925.1)

"BLD",5603,4,"B",8926.1,8926.1)

"BLD",5603,6.3)
13
"BLD",5603,"ABPKG")
n^n
"BLD",5603,"INI")
TIUPR225
"BLD",5603,"INIT")
TIUPS225
"BLD",5603,"KRN",0)
^9.67PA^8989.52^19
"BLD",5603,"KRN",.4,0)
.4
"BLD",5603,"KRN",.401,0)
.401
"BLD",5603,"KRN",.402,0)
.402
"BLD",5603,"KRN",.403,0)
.403
"BLD",5603,"KRN",.5,0)
.5
"BLD",5603,"KRN",.84,0)
.84
"BLD",5603,"KRN",3.6,0)
3.6
"BLD",5603,"KRN",3.6,"NM",0)
^9.68A^1^1
"BLD",5603,"KRN",3.6,"NM",1,0)
TIU ENTERPRISE STANDARD TITLES^^0
"BLD",5603,"KRN",3.6,"NM","B","TIU ENTERPRISE STANDARD TITLES",1)

"BLD",5603,"KRN",3.8,0)
3.8
"BLD",5603,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",5603,"KRN",3.8,"NM",1,0)
TIU CACS^^0
"BLD",5603,"KRN",3.8,"NM","B","TIU CACS",1)

"BLD",5603,"KRN",9.2,0)
9.2
"BLD",5603,"KRN",9.8,0)
9.8
"BLD",5603,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",5603,"KRN",9.8,"NM",1,0)
TIUDD61^^0^B9982481
"BLD",5603,"KRN",9.8,"NM",2,0)
TIUFHA3^^0^B47428645
"BLD",5603,"KRN",9.8,"NM",3,0)
TIUFLF1^^0^B44625867
"BLD",5603,"KRN",9.8,"NM",4,0)
TIUFLF6^^0^B13478630
"BLD",5603,"KRN",9.8,"NM",5,0)
TIUMAP^^0^B58466071
"BLD",5603,"KRN",9.8,"NM",6,0)
TIUMLIST^^0^B39325758
"BLD",5603,"KRN",9.8,"NM",7,0)
TIUPS225^^0^B9768335
"BLD",5603,"KRN",9.8,"NM",8,0)
TIUPR225^^0^B286669
"BLD",5603,"KRN",9.8,"NM","B","TIUDD61",1)

"BLD",5603,"KRN",9.8,"NM","B","TIUFHA3",2)

"BLD",5603,"KRN",9.8,"NM","B","TIUFLF1",3)

"BLD",5603,"KRN",9.8,"NM","B","TIUFLF6",4)

"BLD",5603,"KRN",9.8,"NM","B","TIUMAP",5)

"BLD",5603,"KRN",9.8,"NM","B","TIUMLIST",6)

"BLD",5603,"KRN",9.8,"NM","B","TIUPR225",8)

"BLD",5603,"KRN",9.8,"NM","B","TIUPS225",7)

"BLD",5603,"KRN",19,0)
19
"BLD",5603,"KRN",19.1,0)
19.1
"BLD",5603,"KRN",101,0)
101
"BLD",5603,"KRN",409.61,0)
409.61
"BLD",5603,"KRN",771,0)
771
"BLD",5603,"KRN",870,0)
870
"BLD",5603,"KRN",8989.51,0)
8989.51
"BLD",5603,"KRN",8989.52,0)
8989.52
"BLD",5603,"KRN",8994,0)
8994
"BLD",5603,"KRN","B",.4,.4)

"BLD",5603,"KRN","B",.401,.401)

"BLD",5603,"KRN","B",.402,.402)

"BLD",5603,"KRN","B",.403,.403)

"BLD",5603,"KRN","B",.5,.5)

"BLD",5603,"KRN","B",.84,.84)

"BLD",5603,"KRN","B",3.6,3.6)

"BLD",5603,"KRN","B",3.8,3.8)

"BLD",5603,"KRN","B",9.2,9.2)

"BLD",5603,"KRN","B",9.8,9.8)

"BLD",5603,"KRN","B",19,19)

"BLD",5603,"KRN","B",19.1,19.1)

"BLD",5603,"KRN","B",101,101)

"BLD",5603,"KRN","B",409.61,409.61)

"BLD",5603,"KRN","B",771,771)

"BLD",5603,"KRN","B",870,870)

"BLD",5603,"KRN","B",8989.51,8989.51)

"BLD",5603,"KRN","B",8989.52,8989.52)

"BLD",5603,"KRN","B",8994,8994)

"BLD",5603,"PRET")

"BLD",5603,"QUES",0)
^9.62^^
"BLD",5603,"REQB",0)
^9.611^1^1
"BLD",5603,"REQB",1,0)
TIU*1.0*211^2
"BLD",5603,"REQB","B","TIU*1.0*211",1)

"DATA",4.001,8926.1,0)
8926.1^^TIU Titles^^^^TIU Titles
"DATA",4.001,8926.1,1,0)
^4.011^7^7
"DATA",4.001,8926.1,1,1,0)
Term^.01^^^^^^^^^^^^^1
"DATA",4.001,8926.1,1,2,0)
has_SMD^.04^^^^^^^^^^^VUID^^2
"DATA",4.001,8926.1,1,3,0)
has_role^.05^^^^^^^^^^^VUID^^3
"DATA",4.001,8926.1,1,4,0)
has_setting^.06^^^^^^^^^^^VUID^^4
"DATA",4.001,8926.1,1,5,0)
has_service^.07^^^^^^^^^^^VUID^^5
"DATA",4.001,8926.1,1,6,0)
has_doctype^.08^^^^^^^^^^^VUID^^6
"DATA",4.001,8926.1,1,7,0)
Status^.02^^8926.199^^Status^^^^^^^^^7
"DATA",4.001,8926.1,2)
D MFSUP^HDISVF09(8926.1,$G(ERROR)),BULL^TIUDD61
"DATA",4.001,8926.1,"MFE")
^^^^^^^B
"FIA",4.001)
MASTER FILE PARAMETERS
"FIA",4.001,0)
^DIC(4.001,
"FIA",4.001,0,0)
4.001P
"FIA",4.001,0,1)
n^n^f^^n^^y^o^n
"FIA",4.001,0,10)

"FIA",4.001,0,11)
I Y=8926.1
"FIA",4.001,0,"RLRO")

"FIA",4.001,0,"VR")
1.0^TIU
"FIA",4.001,4.001)
0
"FIA",4.001,4.011)
0
"FIA",4.001,4.111)
0
"FIA",8925.1)
TIU DOCUMENT DEFINITION
"FIA",8925.1,0)
^TIU(8925.1,
"FIA",8925.1,0,0)
8925.1I
"FIA",8925.1,0,1)
y^n^p^^^^n^^n
"FIA",8925.1,0,10)

"FIA",8925.1,0,11)

"FIA",8925.1,0,"RLRO")

"FIA",8925.1,0,"VR")
1.0^TIU
"FIA",8925.1,8925.1)
1
"FIA",8925.1,8925.1,1501)

"FIA",8926.1)
TIU VHA ENTERPRISE STANDARD TITLE
"FIA",8926.1,0)
^TIU(8926.1,
"FIA",8926.1,0,0)
8926.1
"FIA",8926.1,0,1)
y^y^p^^^^n^^n
"FIA",8926.1,0,10)

"FIA",8926.1,0,11)

"FIA",8926.1,0,"RLRO")

"FIA",8926.1,0,"VR")
1.0^TIU
"FIA",8926.1,8926.1)
1
"FIA",8926.1,8926.1,.01)

"FIA",8926.1,8926.199)
1
"FIA",8926.1,8926.199,.02)

"INI")
TIUPR225
"INIT")
TIUPS225
"KRN",3.6,221,-1)
0^1
"KRN",3.6,221,0)
TIU ENTERPRISE STANDARD TITLES^Enterprise Standard Title Deployment^21
"KRN",3.6,221,1,0)
^^12^12^3070315^
"KRN",3.6,221,1,1,0)
                  *** TIU TITLE DEPLOYMENT COMPLETED ***
"KRN",3.6,221,1,2,0)
  
"KRN",3.6,221,1,3,0)
The VHA Enterprise Standard Title Deployment has completed. The following
"KRN",3.6,221,1,4,0)
is a listing of titles which were either activated or inactivated by the
"KRN",3.6,221,1,5,0)
deployment. If the Clinical Applications Coordinator(s) at your facility 
"KRN",3.6,221,1,6,0)
are not among the recipients of this bulletin, please forward it to them.
"KRN",3.6,221,1,7,0)
 
"KRN",3.6,221,1,8,0)
                  TITLE DEPLOYMENT STATUS CHANGE REPORT
"KRN",3.6,221,1,9,0)
                  =====================================
"KRN",3.6,221,1,10,0)
 
"KRN",3.6,221,1,11,0)
  DEPLOYMENT STARTED:  |1|
"KRN",3.6,221,1,12,0)
DEPLOYMENT COMPLETED:  |2|
"KRN",3.6,221,3,0)
^^3^3^3070315^
"KRN",3.6,221,3,1,0)
This bulletin will be delivered to members of the TIU CAC and XUMF SERVER
"KRN",3.6,221,3,2,0)
mail groups when a deployment of Enterprise Standard Titles modifies the
"KRN",3.6,221,3,3,0)
activation status of one or more Titles.
"KRN",3.6,221,4,0)
^3.64A^2^2
"KRN",3.6,221,4,1,0)
1
"KRN",3.6,221,4,1,1,0)
^^1^1^3070313^
"KRN",3.6,221,4,1,1,1,0)
Date/Time deployment started.
"KRN",3.6,221,4,2,0)
2
"KRN",3.6,221,4,2,1,0)
^3.65^1^1^3070315^^^^
"KRN",3.6,221,4,2,1,1,0)
Date/Time deployment completed.
"KRN",3.8,251,-1)
0^1
"KRN",3.8,251,0)
TIU CACS^PU^n^^^^
"KRN",3.8,251,2,0)
^^3^3^3070312^
"KRN",3.8,251,2,1,0)
This cross-reference identifies the people who should receive 
"KRN",3.8,251,2,2,0)
informational bulletins concerning the implementation of the Text 
"KRN",3.8,251,2,3,0)
Integration Utilities (TIU) Package.
"KRN",3.8,251,3)

"MBREQ")
0
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"PKG",452,-1)
1^1
"PKG",452,0)
TEXT INTEGRATION UTILITIES^TIU^Text Integration Utilities 
"PKG",452,20,0)
^9.402P^^
"PKG",452,22,0)
^9.49I^1^1
"PKG",452,22,1,0)
1.0^2970620^2971106^27
"PKG",452,22,1,"PAH",1,0)
225^3070605
"PKG",452,22,1,"PAH",1,1,0)
^^2^2^3070605
"PKG",452,22,1,"PAH",1,1,1,0)
The description of this patch may be found in the National Patch Module
"PKG",452,22,1,"PAH",1,1,2,0)
under TIU*1*225.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","TIUDD61")
0^1^B9982481^n/a
"RTN","TIUDD61",1,0)
TIUDD61 ; ISL/JER - M-Type X-refs for file 8926.1 ; 03/23/2007
"RTN","TIUDD61",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**225**;Jun 20, 1997;Build 13
"RTN","TIUDD61",3,0)
SET ; Set list of inactivated titles
"RTN","TIUDD61",4,0)
 ; if no entries logged, initialize log
"RTN","TIUDD61",5,0)
 N SUBS,TTL
"RTN","TIUDD61",6,0)
 I '$D(^XTMP("TIUBULL")) D
"RTN","TIUDD61",7,0)
 . S ^XTMP("TIUBULL",0)=$$FMADD^XLFDT(DT,1)_U_DT
"RTN","TIUDD61",8,0)
 . S ^XTMP("TIUBULL","T0")=$$NOW^XLFDT
"RTN","TIUDD61",9,0)
 . S ^XTMP("TIUBULL","ACT",0)=0
"RTN","TIUDD61",10,0)
 . S ^XTMP("TIUBULL","INACT",0)=0
"RTN","TIUDD61",11,0)
 ; set entry being processed into log
"RTN","TIUDD61",12,0)
 S SUBS=$S(+X:"ACT",1:"INACT")
"RTN","TIUDD61",13,0)
 S TTL=$P($G(^TIU(8926.1,+DA(1),0)),U)
"RTN","TIUDD61",14,0)
 S ^XTMP("TIUBULL",SUBS,0)=^XTMP("TIUBULL",SUBS,0)+1
"RTN","TIUDD61",15,0)
 S ^XTMP("TIUBULL",SUBS,TTL)=DA(1)
"RTN","TIUDD61",16,0)
 I +$O(^TIU(8925.1,"ALOINC",DA(1),0)) D
"RTN","TIUDD61",17,0)
 . N TIUI,TIUJ S (TIUI,TIUJ)=0
"RTN","TIUDD61",18,0)
 . F  S TIUI=$O(^TIU(8925.1,"ALOINC",DA(1),TIUI)) Q:+TIUI'>0  D
"RTN","TIUDD61",19,0)
 . . S TIUJ=TIUJ+1
"RTN","TIUDD61",20,0)
 . . S ^XTMP("TIUBULL",SUBS,TTL,"MAP",TIUJ)=TIUI_U_$P($G(^TIU(8925.1,TIUI,0)),U)
"RTN","TIUDD61",21,0)
 Q
"RTN","TIUDD61",22,0)
BULL ; Send Bulletin to CACs
"RTN","TIUDD61",23,0)
 N TIUSTRT,TIUEND,TIUACNT,TIUICNT,TIUARR,TIUTXT,XMB,XMDUZ,XMTEXT
"RTN","TIUDD61",24,0)
 S TIUTXT=$NA(^TMP("TIUBULL",$J))
"RTN","TIUDD61",25,0)
 K @TIUTXT
"RTN","TIUDD61",26,0)
 S TIUARR=$NA(^XTMP("TIUBULL"))
"RTN","TIUDD61",27,0)
 S @TIUARR@("T1")=$$NOW^XLFDT
"RTN","TIUDD61",28,0)
 D FORMAT(TIUARR,TIUTXT)
"RTN","TIUDD61",29,0)
 S XMB="TIU ENTERPRISE STANDARD TITLES"
"RTN","TIUDD61",30,0)
 S XMDUZ="TIU ENTERPRISE STANDARD TITLES DEPLOYMENT"
"RTN","TIUDD61",31,0)
 S XMB(1)=$$DATE^TIULS(@TIUARR@("T0"),"MM/DD/YY HR:MIN")
"RTN","TIUDD61",32,0)
 S XMB(2)=$$DATE^TIULS(@TIUARR@("T1"),"MM/DD/YY HR:MIN")
"RTN","TIUDD61",33,0)
 S XMTEXT="^TMP(""TIUBULL"",$J,"
"RTN","TIUDD61",34,0)
 D ^XMB,KILL^XM
"RTN","TIUDD61",35,0)
 K @TIUTXT,@TIUARR
"RTN","TIUDD61",36,0)
 Q
"RTN","TIUDD61",37,0)
FORMAT(TIUARR,TIUTXT) ; Format the body of the bulletin
"RTN","TIUDD61",38,0)
 N LINE,TIUI,TAB,TIUT
"RTN","TIUDD61",39,0)
 S TAB="        ",TIUI=0
"RTN","TIUDD61",40,0)
 S LINE="=========================================================================="
"RTN","TIUDD61",41,0)
 S TIUI=TIUI+1,@TIUTXT@(TIUI,0)=" "
"RTN","TIUDD61",42,0)
 S TIUI=TIUI+1,@TIUTXT@(TIUI,0)="    TITLES ACTIVATED:  "_+$G(@TIUARR@("ACT",0))
"RTN","TIUDD61",43,0)
 S TIUI=TIUI+1,@TIUTXT@(TIUI,0)="Enterprise Standard Title"
"RTN","TIUDD61",44,0)
 S TIUI=TIUI+1,@TIUTXT@(TIUI,0)=TAB_"Mapped to Local Title(s)"
"RTN","TIUDD61",45,0)
 S TIUI=TIUI+1,@TIUTXT@(TIUI,0)=LINE
"RTN","TIUDD61",46,0)
 S TIUT=0
"RTN","TIUDD61",47,0)
 F  S TIUT=$O(@TIUARR@("ACT",TIUT)) Q:TIUT']""  D
"RTN","TIUDD61",48,0)
 . N TIUJ S TIUJ=0
"RTN","TIUDD61",49,0)
 . S TIUI=TIUI+1,@TIUTXT@(TIUI,0)=TIUT
"RTN","TIUDD61",50,0)
 . F  S TIUJ=$O(@TIUARR@("ACT",TIUT,"MAP",TIUJ)) Q:+TIUJ'>0  D
"RTN","TIUDD61",51,0)
 . . S TIUI=TIUI+1,@TIUTXT@(TIUI,0)=TAB_$P(@TIUARR@("ACT",TIUT,"MAP",TIUJ),U,2)
"RTN","TIUDD61",52,0)
 S TIUI=TIUI+1,@TIUTXT@(TIUI,0)=" "
"RTN","TIUDD61",53,0)
 S TIUI=TIUI+1,@TIUTXT@(TIUI,0)=" "
"RTN","TIUDD61",54,0)
 S TIUI=TIUI+1,@TIUTXT@(TIUI,0)="  TITLES INACTIVATED:  "_+$G(@TIUARR@("INACT",0))
"RTN","TIUDD61",55,0)
 S TIUI=TIUI+1,@TIUTXT@(TIUI,0)="Enterprise Standard Title"
"RTN","TIUDD61",56,0)
 S TIUI=TIUI+1,@TIUTXT@(TIUI,0)=TAB_"Mapped to Local Title(s)"
"RTN","TIUDD61",57,0)
 S TIUI=TIUI+1,@TIUTXT@(TIUI,0)=LINE
"RTN","TIUDD61",58,0)
 S TIUT=0
"RTN","TIUDD61",59,0)
 F  S TIUT=$O(@TIUARR@("INACT",TIUT)) Q:TIUT']""  D
"RTN","TIUDD61",60,0)
 . N TIUJ S TIUJ=0
"RTN","TIUDD61",61,0)
 . S TIUI=TIUI+1,@TIUTXT@(TIUI,0)=TIUT
"RTN","TIUDD61",62,0)
 . F  S TIUJ=$O(@TIUARR@("INACT",TIUT,"MAP",TIUJ)) Q:+TIUJ'>0  D
"RTN","TIUDD61",63,0)
 . . S TIUI=TIUI+1,@TIUTXT@(TIUI,0)=TAB_$P(@TIUARR@("INACT",TIUT,"MAP",TIUJ),U,2)
"RTN","TIUDD61",64,0)
 Q
"RTN","TIUDD61",65,0)
TEST ; Test setting up and sending bulletin w/o having to deploy...
"RTN","TIUDD61",66,0)
 N DA,TIUDA,X S DA=1
"RTN","TIUDD61",67,0)
 F TIUDA=46,117,66,75,299,250,1520 D
"RTN","TIUDD61",68,0)
 . S DA(1)=TIUDA,X=TIUDA#2 D SET
"RTN","TIUDD61",69,0)
 D BULL
"RTN","TIUDD61",70,0)
 Q
"RTN","TIUFHA3")
0^2^B47428645^B47490712
"RTN","TIUFHA3",1,0)
TIUFHA3 ; SLC/MAM - LM Templates H, A Action Edit Status, INACTIVE(TYPE,FILEDA,NODE0), WARNING, WARNOBJI(FILEDA) ; 03/16/2007
"RTN","TIUFHA3",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**13,64,211,225**;Jun 20, 1997;Build 13
"RTN","TIUFHA3",3,0)
 ;
"RTN","TIUFHA3",4,0)
EDSTAT ; Action Edit Status for Templates H, A, J, C
"RTN","TIUFHA3",5,0)
 N STATUS,TIUFXNOD,TIUFFULL
"RTN","TIUFHA3",6,0)
 N DTOUT,DIRUT,DIROUT
"RTN","TIUFHA3",7,0)
 S VALMBCK="",TIUFXNOD=$G(XQORNOD(0))
"RTN","TIUFHA3",8,0)
 S STATUS=$$SELSTAT^TIUFLF5,STATUS=$P(STATUS,U,2) I $D(DTOUT)!(STATUS="") G EDSTX
"RTN","TIUFHA3",9,0)
 I "AJ"[TIUFTMPL D TMPLA(STATUS) G EDSTX
"RTN","TIUFHA3",10,0)
 ;               Template H, C
"RTN","TIUFHA3",11,0)
 I STATUS'="ACTIVE" D ONE(STATUS) G EDSTX
"RTN","TIUFHA3",12,0)
 D MANY(STATUS)
"RTN","TIUFHA3",13,0)
EDSTX I $D(DTOUT) S VALMBCK="Q" Q
"RTN","TIUFHA3",14,0)
 I $G(TIUFFULL) S VALMBCK="R" D RESET^TIUFXHLX
"RTN","TIUFHA3",15,0)
 Q
"RTN","TIUFHA3",16,0)
 ;
"RTN","TIUFHA3",17,0)
MANY(STATUS) ; Select multiple entries for Status ACTIVE for Templates H, C.
"RTN","TIUFHA3",18,0)
 ; Requires STATUS
"RTN","TIUFHA3",19,0)
 N LINENO,INFO,TIUFQUIT
"RTN","TIUFHA3",20,0)
 I $P(TIUFXNOD,U,4)'["=" W !!," Selecting Entries for Status ACTIVE.  You may enter multiple entries",!,"at the same time."
"RTN","TIUFHA3",21,0)
 D EN^VALM2(TIUFXNOD,"O") Q:'$O(VALMY(0))  K DIRUT
"RTN","TIUFHA3",22,0)
 S (LINENO,TIUFQUIT)=0 F  S LINENO=$O(VALMY(LINENO)) Q:'LINENO  S INFO=$G(^TMP("TIUF1IDX",$J,LINENO)) D EDONE(STATUS,INFO,.TIUFQUIT) Q:TIUFQUIT  D LINEUP^TIUFLLM1(INFO,TIUFTMPL) Q:$D(DIRUT)
"RTN","TIUFHA3",23,0)
 Q
"RTN","TIUFHA3",24,0)
 ;
"RTN","TIUFHA3",25,0)
ONE(STATUS) ; Select one entry (in loop) for Status INACTIVE or TEST for Templates H, C.
"RTN","TIUFHA3",26,0)
 N INFO,TIUFQUIT,EXPAND
"RTN","TIUFHA3",27,0)
 I $P(TIUFXNOD,U,4)'["=" W !!," Selecting Entry for Status ",STATUS,".  Please select ONE entry.  You will be",!,"prompted for another." K DIRUT
"RTN","TIUFHA3",28,0)
 F  D EN^VALM2(TIUFXNOD,"SO") Q:'$O(VALMY(0))  S INFO=$G(^TMP("TIUF1IDX",$J,$O(VALMY(0)))) D  Q:TIUFQUIT!$D(DIRUT)
"RTN","TIUFHA3",29,0)
 . I STATUS="TEST" W " ... "
"RTN","TIUFHA3",30,0)
 . S (EXPAND,TIUFQUIT)=0 K DIRUT D EDONE(STATUS,.INFO,.TIUFQUIT,.EXPAND) Q:TIUFQUIT!$D(DIRUT)
"RTN","TIUFHA3",31,0)
 . D LINEUP^TIUFLLM1(INFO,TIUFTMPL)
"RTN","TIUFHA3",32,0)
 . I EXPAND D EXPAND1^TIUFH1(.INFO) S VALMCNT=VALMCNT+$P(INFO,U,3)
"RTN","TIUFHA3",33,0)
 . I VALMBCK="R" S VALMSG=$$VMSG^TIUFL D RE^VALM4
"RTN","TIUFHA3",34,0)
 . S $P(TIUFXNOD,U,4)="ST"
"RTN","TIUFHA3",35,0)
 . W !!,"Selecting Another Entry for Status "_STATUS_":"
"RTN","TIUFHA3",36,0)
 Q
"RTN","TIUFHA3",37,0)
 ;
"RTN","TIUFHA3",38,0)
TMPLA(STATUS) ; Select multiple entries for Status edit for Template A
"RTN","TIUFHA3",39,0)
 ; Requires STATUS
"RTN","TIUFHA3",40,0)
 N LINENO,INFO,TIUFQUIT
"RTN","TIUFHA3",41,0)
 I $P(TIUFXNOD,U,4)'["=" W !!," Selecting Entries for Status ",STATUS,".  You may enter multiple entries",!,"at the same time."
"RTN","TIUFHA3",42,0)
 D EN^VALM2(TIUFXNOD,"O") Q:'$O(VALMY(0))  K DIRUT
"RTN","TIUFHA3",43,0)
 S (LINENO,TIUFQUIT)=0 F  S LINENO=$O(VALMY(LINENO)) Q:'LINENO  S INFO=$G(^TMP("TIUF1IDX",$J,LINENO)) D EDONE(STATUS,INFO,.TIUFQUIT) Q:TIUFQUIT!$D(DIRUT)
"RTN","TIUFHA3",44,0)
 I VALMBCK="R" D INIT^TIUFA
"RTN","TIUFHA3",45,0)
 Q
"RTN","TIUFHA3",46,0)
 ;
"RTN","TIUFHA3",47,0)
EDONE(STATUS,INFO,TIUFQUIT,EXPAND) ; Edit Status for one LM entry.
"RTN","TIUFHA3",48,0)
 ; Requires STATUS,INFO; returns TIUFQUIT, EXPAND.
"RTN","TIUFHA3",49,0)
 N FILEDA,NODE0,TYPE,MSG,STATOK,PFILEDA,LIST
"RTN","TIUFHA3",50,0)
 S (TIUFQUIT,EXPAND)=0 S:STATUS'="ACTIVE" VALMBCK=""
"RTN","TIUFHA3",51,0)
 I 'INFO W !!," Missing List Manager Information; See IRM",! D PAUSE^TIUFXHLX S TIUFQUIT=1 G EDONX
"RTN","TIUFHA3",52,0)
 S FILEDA=+$P(INFO,U,2),NODE0=$G(^TIU(8925.1,FILEDA,0))
"RTN","TIUFHA3",53,0)
 I NODE0="" W !!," Entry "_+INFO_" does not exist in the File; See IRM",! D PAUSE^TIUFXHLX S TIUFQUIT=1 G EDONX
"RTN","TIUFHA3",54,0)
 S TYPE=$P(NODE0,U,4)
"RTN","TIUFHA3",55,0)
 I FILEDA=81!(FILEDA=512) S MSG=" Addendum; Can't edit Status" W !!,MSG,! D PAUSE^TIUFXHLX G EDONX ;P64
"RTN","TIUFHA3",56,0)
 I $P(NODE0,U,13),TYPE'="DOC",TIUFWHO'="N" S MSG=" Entry "_+INFO_" is National; Can't edit Status" W !!,MSG,! D PAUSE^TIUFXHLX G EDONX ;P64 restrict msg to nontitles
"RTN","TIUFHA3",57,0)
 I TYPE="O" W !!,"Entry "_+INFO_" is an Object.  To edit Status please select action Detailed",!,"Display and then select Basics.",! D PAUSE^TIUFXHLX G EDONX
"RTN","TIUFHA3",58,0)
 I "AJ"[TIUFTMPL!(STATUS="ACTIVE") S MSG=" Editing Status for Entry "_+INFO_" ... " W !!,MSG H 1
"RTN","TIUFHA3",59,0)
 I TYPE="CO",$P(NODE0,U,10) S MSG=" Shared Components have no Status; Can't Edit Status" W !,MSG,! D PAUSE^TIUFXHLX G EDONX
"RTN","TIUFHA3",60,0)
 I TYPE="CO" S MSG=" Component Status is determined by Parent; Can't Edit Status" W !,MSG,! D PAUSE^TIUFXHLX G EDONX
"RTN","TIUFHA3",61,0)
 L +^TIU(8925.1,FILEDA):1 I '$T W !!," Another user is editing this entry; please try later.",! D PAUSE^TIUFXHLX G EDONX
"RTN","TIUFHA3",62,0)
 S PFILEDA=+$O(^TIU(8925.1,"AD",FILEDA,0))
"RTN","TIUFHA3",63,0)
 D STATLIST^TIUFLF5(FILEDA,PFILEDA,$E(STATUS),.MSG,.LIST) G:$D(DTOUT) EDONX I LIST'[$E(STATUS) W !,MSG,! D PAUSE^TIUFXHLX G EDONX
"RTN","TIUFHA3",64,0)
 I $$STATWORD^TIUFLF5($P(NODE0,U,7))=STATUS S MSG=" Status already "_STATUS W MSG,! D PAUSE^TIUFXHLX G EDONX
"RTN","TIUFHA3",65,0)
 D INACTIVE(TYPE,FILEDA,NODE0):STATUS="INACTIVE",TEST(FILEDA,NODE0):STATUS="TEST",ACTIVE(FILEDA,NODE0):STATUS="ACTIVE"
"RTN","TIUFHA3",66,0)
 I STATUS="INACTIVE",TYPE="CL"!(TYPE="DC")!(TYPE="DOC") D COLLEXPD(.INFO,0,.EXPAND)
"RTN","TIUFHA3",67,0)
 I STATUS="ACTIVE",TYPE="DOC" D COLLEXPD(.INFO,1)
"RTN","TIUFHA3",68,0)
 I STATUS="TEST" D COLLEXPD(.INFO,0,.EXPAND)
"RTN","TIUFHA3",69,0)
 S VALMSG=$$VMSG^TIUFL
"RTN","TIUFHA3",70,0)
EDONX L -^TIU(8925.1,FILEDA)
"RTN","TIUFHA3",71,0)
 Q
"RTN","TIUFHA3",72,0)
 ;
"RTN","TIUFHA3",73,0)
INACTIVE(TYPE,FILEDA,NODE0) ; Change Status to Inactive.
"RTN","TIUFHA3",74,0)
 ; Requires TYPE, FILEDA, NODE0 
"RTN","TIUFHA3",75,0)
 N CONTINUE
"RTN","TIUFHA3",76,0)
 I TYPE="O" S CONTINUE=$$WARNOBJI(FILEDA) D  G:'CONTINUE INACX
"RTN","TIUFHA3",77,0)
 . I CONTINUE W " Inactivated" H 1 Q
"RTN","TIUFHA3",78,0)
 . W " NOT Inactivated" H 1
"RTN","TIUFHA3",79,0)
 I TYPE="CL"!(TYPE="DC"),$$HASITEMS^TIUFLF1(FILEDA) S CONTINUE=$$WARNING I 'CONTINUE W "  NOT Inactivated" H 1 G INACX
"RTN","TIUFHA3",80,0)
 I TYPE'="O" D
"RTN","TIUFHA3",81,0)
 . I $G(CONTINUE) W !," Entry and descendants Inactivated" H 1 Q
"RTN","TIUFHA3",82,0)
 . I TYPE="DOC" W !," Entry (& any nonShared Components) Inactivated" H 1 Q
"RTN","TIUFHA3",83,0)
 . W " Entry Inactivated" H 1
"RTN","TIUFHA3",84,0)
 D AUTOSTAT^TIUFLF6(FILEDA,NODE0,"INACTIVE") S:$P(TIUFXNOD,U,3)["Status" VALMBCK="R"
"RTN","TIUFHA3",85,0)
INACX Q
"RTN","TIUFHA3",86,0)
 ;
"RTN","TIUFHA3",87,0)
COLLEXPD(INFO,EXPDFLG,EXPAND) ; Collapse entry, reexpand (to items only) if EXPDFLG=1
"RTN","TIUFHA3",88,0)
 ; Requires string INFO. Passes back array INFO.  If 'EXPDFLG, must reexpand later, or reinit the whole screen.
"RTN","TIUFHA3",89,0)
 S EXPAND=$P(INFO,U,3) Q:'EXPAND
"RTN","TIUFHA3",90,0)
 D PARSE^TIUFLLM(.INFO),COLLAPSE^TIUFH1(.INFO)
"RTN","TIUFHA3",91,0)
 I $G(EXPDFLG) D EXPAND1^TIUFH1(.INFO)
"RTN","TIUFHA3",92,0)
 S VALMCNT=$S($G(EXPDFLG):VALMCNT-EXPAND+$P(INFO,U,3),1:VALMCNT-EXPAND)
"RTN","TIUFHA3",93,0)
 Q
"RTN","TIUFHA3",94,0)
 ;
"RTN","TIUFHA3",95,0)
WARNING() ; Function Warns user who asks to Inactivate,  Returns 1 to Inactivate, 0 to not Inactivate.
"RTN","TIUFHA3",96,0)
 N DIR,X,Y
"RTN","TIUFHA3",97,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A",1)=" This will Inactivate ALL DESCENDANTS (except Shared Components).  Before"
"RTN","TIUFHA3",98,0)
 S DIR("A",2)="Inactivating, please note which Descendants are presently Inactive.  This will"
"RTN","TIUFHA3",99,0)
 S DIR("A",3)="help you know which Descendants NOT to reactivate later."
"RTN","TIUFHA3",100,0)
 S DIR("A")="  Sure you want to Inactivate"
"RTN","TIUFHA3",101,0)
 D ^DIR W " ... "
"RTN","TIUFHA3",102,0)
 Q Y
"RTN","TIUFHA3",103,0)
 ;
"RTN","TIUFHA3",104,0)
ACTIVE(FILEDA,NODE0) ; Change Status to Active.
"RTN","TIUFHA3",105,0)
 N TIUOUT
"RTN","TIUFHA3",106,0)
 D FULL^VALM1
"RTN","TIUFHA3",107,0)
 I ($P(NODE0,U,4)="DOC"),(+$G(^TIU(8925.1,FILEDA,15))'>0) D  Q:+$G(TIUOUT)
"RTN","TIUFHA3",108,0)
 . W !!,$C(7),"You MUST first map ",$P(NODE0,U),!
"RTN","TIUFHA3",109,0)
 . D DIRECT^TIUMAP2(FILEDA)
"RTN","TIUFHA3",110,0)
 . I +$G(^TIU(8925.1,FILEDA,15))'>0 W $C(7)," Status unchanged...",! H 2
"RTN","TIUFHA3",111,0)
 . I  S TIUOUT=1,VALMBCK="R"
"RTN","TIUFHA3",112,0)
 D AUTOSTAT^TIUFLF6(FILEDA,NODE0,"ACTIVE") S VALMBCK="R"
"RTN","TIUFHA3",113,0)
 I $P(NODE0,U,4)="DOC" W " Entry and any (nonShared) Components Activated",! H 1 Q
"RTN","TIUFHA3",114,0)
 W " Entry Activated",! H 1
"RTN","TIUFHA3",115,0)
 Q
"RTN","TIUFHA3",116,0)
 ;
"RTN","TIUFHA3",117,0)
TEST(FILEDA,NODE0) ; Change Status to Test.
"RTN","TIUFHA3",118,0)
 ; Requires FILEDA, NODE0, INFO from EDSTAT.
"RTN","TIUFHA3",119,0)
 D AUTOSTAT^TIUFLF6(FILEDA,NODE0,"TEST") S VALMBCK="R"
"RTN","TIUFHA3",120,0)
 W !," Entry & any (nonShared) Components changed to TEST",! H 1
"RTN","TIUFHA3",121,0)
 Q
"RTN","TIUFHA3",122,0)
 ;
"RTN","TIUFHA3",123,0)
WARNOBJI(FILEDA) ; Function Warns user inactivating an object,  Returns 1 to Proceed, 0 to Stop.
"RTN","TIUFHA3",124,0)
 N DIR,X,Y,USED,WARNANS
"RTN","TIUFHA3",125,0)
 S USED=$$OBJUSED^TIUFLJ(FILEDA) I USED'["A" S WARNANS=1 G WARNX
"RTN","TIUFHA3",126,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A",1)=" WARNING: Object is embedded in boilerplate text of active titles.  If you"
"RTN","TIUFHA3",127,0)
 S DIR("A",2)="inactivate the object, it will not function when users enter documents against"
"RTN","TIUFHA3",128,0)
 S DIR("A",3)="such titles.  You might want to warn users or even take such titles offline"
"RTN","TIUFHA3",129,0)
 S DIR("A",4)="while the Object is inactive."
"RTN","TIUFHA3",130,0)
 S DIR("A")="  Continue"
"RTN","TIUFHA3",131,0)
 D ^DIR W " ... " S WARNANS=Y
"RTN","TIUFHA3",132,0)
WARNX Q WARNANS
"RTN","TIUFHA3",133,0)
 ;
"RTN","TIUFLF1")
0^3^B44625867^B44650573
"RTN","TIUFLF1",1,0)
TIUFLF1 ; SLC/MAM - Library; File 8925.1 Related:  HASITEMS(FILEDA), ASKFLDS(FILEDA,FIELDS,PFILEDA,NEWSFLG,XFLG), BADNAP(NAP,FILEDA,OBJFLG) ; 03/16/2007
"RTN","TIUFLF1",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**2,12,17,64,211,225**;Jun 20, 1997;Build 13
"RTN","TIUFLF1",3,0)
 ;
"RTN","TIUFLF1",4,0)
 ;
"RTN","TIUFLF1",5,0)
 ;*** INCLUDES JOEL'S MODS FOR VUID PATCH ***
"RTN","TIUFLF1",6,0)
 ;
"RTN","TIUFLF1",7,0)
BADNAP(NAP,FILEDA,OBJFLG) ; Function returns 1 if NAP is ambiguous as a
"RTN","TIUFLF1",8,0)
 ;name, abbrev or print name for FILEDA AND such ambiguity is a problem.
"RTN","TIUFLF1",9,0)
 ;Else 0.  Used when editing entries, or when finding permitted types.
"RTN","TIUFLF1",10,0)
 ; Ambiguity is a problem if OBJFLG=1.  OBJFLG=1 if FILEDA is an object,
"RTN","TIUFLF1",11,0)
 ;or FILEDA WILL BE an object since we're in Create Objects, or we are
"RTN","TIUFLF1",12,0)
 ;deciding whether to include type O as a permitted type
"RTN","TIUFLF1",13,0)
 ;in TYPELIST^TIUFLF7.
"RTN","TIUFLF1",14,0)
 ; TYPELIST, NAME of object in ASKFLDS must SEND OBJFLG=1.  Others are SET here.
"RTN","TIUFLF1",15,0)
 N NAPANS,XREF,OFILEDA
"RTN","TIUFLF1",16,0)
 S NAPANS=0 I NAP="" G BADNX
"RTN","TIUFLF1",17,0)
 I $D(^TIU(8925.1,"AT","O",FILEDA)) S OBJFLG=1
"RTN","TIUFLF1",18,0)
 I $G(TIUFTMPL)="J" S OBJFLG=1
"RTN","TIUFLF1",19,0)
 I $G(TIUFXNOD)["Copy",$P($G(NODE0),U,4)="O" S OBJFLG=1
"RTN","TIUFLF1",20,0)
 S OBJFLG=+$G(OBJFLG)
"RTN","TIUFLF1",21,0)
 I 'OBJFLG G BADNX
"RTN","TIUFLF1",22,0)
 F XREF="B","C","D" D  Q:NAPANS
"RTN","TIUFLF1",23,0)
 . S OFILEDA=0 F  S OFILEDA=$O(^TIU(8925.1,XREF,NAP,OFILEDA)) Q:'OFILEDA  D  Q:NAPANS
"RTN","TIUFLF1",24,0)
 . . I OFILEDA'=FILEDA,$D(^TIU(8925.1,"AT","O",OFILEDA)) S NAPANS=1
"RTN","TIUFLF1",25,0)
BADNX Q NAPANS
"RTN","TIUFLF1",26,0)
 ;
"RTN","TIUFLF1",27,0)
HASITEMS(FILEDA) ; Function returns 0 if FILEDA has no items, else returns 1.
"RTN","TIUFLF1",28,0)
 Q $O(^TIU(8925.1,+FILEDA,10,0))
"RTN","TIUFLF1",29,0)
 ;
"RTN","TIUFLF1",30,0)
ASKFLDS(FILEDA,FIELDS,PFILEDA,NEWSFLG,XFLG) ; Ask FIELDS (String subset of: ;.01;.02;.03;.04;.05;.06;.07;.1;.13;3.03) w ;'s on ends as well as between numbers for file entry FILEDA.
"RTN","TIUFLF1",31,0)
 ; Requires FILEDA, FIELDS.
"RTN","TIUFLF1",32,0)
 ; If field is determined, correct, and exists, module doesn't ask even if it is contained in FIELDS.
"RTN","TIUFLF1",33,0)
 ; Returns NEWSFLG=1 if ASKFIELDS has changed Status of FILEDA, else 0
"RTN","TIUFLF1",34,0)
 ; Returns XFLG=1 if user ^exited, else 0.
"RTN","TIUFLF1",35,0)
 ; Requires PFILEDA (= Actual/Anticipated parent) if FIELDS [ .04 Type
"RTN","TIUFLF1",36,0)
 ;or .07 Status. If no such parent, send PFILEDA=0.
"RTN","TIUFLF1",37,0)
 ; Should Lock FILEDA before calling ASKFLDS.
"RTN","TIUFLF1",38,0)
 ; After calling ASKFLDS, Set back to screen mode if nec, set VALMBCK = "R" if necessary.
"RTN","TIUFLF1",39,0)
 N DIE,DA,X,Y,NODE0,DR,PFDA,TYPEDR,USED,ITEMIFN,DIR,NAME,ANS
"RTN","TIUFLF1",40,0)
 N TIUFQUIT,TIUFY,SIGNERS,TIUFTLST,TIUFTMSG,TIUFIMSG,DEFLT,CONTINUE
"RTN","TIUFLF1",41,0)
 N SUPVISIT
"RTN","TIUFLF1",42,0)
 S NEWSFLG=0,XFLG=0,NODE0=^TIU(8925.1,FILEDA,0)
"RTN","TIUFLF1",43,0)
 S USED=$S($P(NODE0,U,4)="O":1,1:$$DDEFUSED^TIUFLF(FILEDA))
"RTN","TIUFLF1",44,0)
 S DIE=8925.1,DA=FILEDA,TIUFQUIT=0
"RTN","TIUFLF1",45,0)
 S PFILEDA=+$G(PFILEDA) K DIRUT
"RTN","TIUFLF1",46,0)
 D FULL^VALM1 S TIUFFULL=1
"RTN","TIUFLF1",47,0)
 I FIELDS'[";.01;" G ABBREV
"RTN","TIUFLF1",48,0)
 I $P(NODE0,U,4)="O" S CONTINUE=$$WARNOBJ^TIUFLJ("N",FILEDA,NODE0) G:$D(DIRUT) ASKFX G:'CONTINUE ABBREV
"RTN","TIUFLF1",49,0)
NAME S DEFLT=$P(NODE0,U) K DIRUT S NAME=$$SELNAME^TIUFLF2(DEFLT) G:$D(DIRUT) ASKFX
"RTN","TIUFLF1",50,0)
 I PFILEDA,$$DUPITEM^TIUFLF7(NAME,PFILEDA,FILEDA) W !!,"Please enter a different Name; Parent already has Item with that Name",! G NAME
"RTN","TIUFLF1",51,0)
 D TYPELIST^TIUFLF7(NAME,FILEDA,PFILEDA,.TIUFTMSG,.TIUFTLST) G:$D(DTOUT) ASKFX
"RTN","TIUFLF1",52,0)
 I $D(TIUFTMSG("T")) W !!,TIUFTMSG("T"),!,"Can't edit Entry",! D PAUSE^TIUFXHLX G ASKFX
"RTN","TIUFLF1",53,0)
 I TIUFTLST="" W !!," Please enter a different Name; File already has entries of every permitted Type",!,"with that Name",! G NAME
"RTN","TIUFLF1",54,0)
 I $P(NODE0,U,4)'="",TIUFTLST'[(U_$P(NODE0,U,4)_U) W !!,"Please enter a different Name; File already has entry of this Type",!,"with that Name",! G NAME
"RTN","TIUFLF1",55,0)
 I $P(NODE0,U,4)="O",$$BADNAP^TIUFLF1(NAME,FILEDA,1) W " ??",!,"Object Name must be unique among all object Names, Abbreviations,",!,"and Print Names." G NAME
"RTN","TIUFLF1",56,0)
 S DR=".01///^S X=NAME" D ^DIE S NODE0=^TIU(8925.1,FILEDA,0)
"RTN","TIUFLF1",57,0)
 I $D(DIRUT)!$D(Y)!$D(DTOUT) S DUOUT=1 G ASKFX
"RTN","TIUFLF1",58,0)
ABBREV I FIELDS'[";.02;" G PRINTN
"RTN","TIUFLF1",59,0)
 I $P(NODE0,U,4)="O" S CONTINUE=$$WARNOBJ^TIUFLJ("A",FILEDA,NODE0) G:$D(DIRUT) ASKFX G:'CONTINUE PRINTN
"RTN","TIUFLF1",60,0)
ABBREV1 S DR=".02" D ^DIE S NODE0=^TIU(8925.1,FILEDA,0)
"RTN","TIUFLF1",61,0)
 I $D(DIRUT)!$D(Y)!$D(DTOUT) S DUOUT=1 G ASKFX
"RTN","TIUFLF1",62,0)
PRINTN I FIELDS'[";.03;" G LOINC
"RTN","TIUFLF1",63,0)
 I $P(NODE0,U,4)="O" S CONTINUE=$$WARNOBJ^TIUFLJ("P",FILEDA,NODE0) G:$D(DIRUT) ASKFX G:'CONTINUE LOINC
"RTN","TIUFLF1",64,0)
PRINTN1 N TIUFUPP S DR=".03" D ^DIE S NODE0=^TIU(8925.1,FILEDA,0)
"RTN","TIUFLF1",65,0)
 I $D(DIRUT)!$D(Y)!$D(DTOUT) S DUOUT=1 G ASKFX
"RTN","TIUFLF1",66,0)
 ; <VUID PATCH>
"RTN","TIUFLF1",67,0)
LOINC I FIELDS'[";1501;"!($P(NODE0,U,4)'="DOC") G NATL
"RTN","TIUFLF1",68,0)
 N TIUOUT S TIUOUT=0
"RTN","TIUFLF1",69,0)
 W !!,"EVERY Local Title must be mapped to a VHA Enterprise Standard Title.",!
"RTN","TIUFLF1",70,0)
 S DR="1501" D DIRECT^TIUMAP2(FILEDA) S NODE0=^TIU(8925.1,FILEDA,0)
"RTN","TIUFLF1",71,0)
 I $D(DIRUT)!+$G(TIUOUT)!$D(DTOUT) S DUOUT=1 G ASKFX
"RTN","TIUFLF1",72,0)
 ; </VUID PATCH>
"RTN","TIUFLF1",73,0)
NATL I FIELDS[";.13;",TIUFWHO="N" D  G:XFLG ASKFX S NODE0=^TIU(8925.1,FILEDA,0)
"RTN","TIUFLF1",74,0)
 . S DIR("B")=$S($P(NODE0,U,13):"YES",1:"NO")
"RTN","TIUFLF1",75,0)
 . D
"RTN","TIUFLF1",76,0)
 . . S DIR(0)="YO",(DIR("?"),DIR("??"))="^D HELP2^TIUFXHLX(.13)"
"RTN","TIUFLF1",77,0)
 . . S DIR("A")="NATIONAL"
"RTN","TIUFLF1",78,0)
 . . D ^DIR I $D(DUOUT)!$D(DTOUT) S XFLG=1 Q
"RTN","TIUFLF1",79,0)
 . . S ANS=Y,DR=".13////^S X=ANS" D ^DIE
"RTN","TIUFLF1",80,0)
TYPE I FIELDS[";.04;" K DIRUT D EDTYPE^TIUFLF7(FILEDA,.NODE0,PFILEDA,.XFLG,USED) G:$D(DIRUT) ASKFX
"RTN","TIUFLF1",81,0)
SHARE G:FIELDS'[";.1;" OWNER
"RTN","TIUFLF1",82,0)
 N PARENT1,PARENT2,SHARE,STATUS,DIR
"RTN","TIUFLF1",83,0)
 I "NM"'[TIUFWHO G OWNER
"RTN","TIUFLF1",84,0)
 I $P(NODE0,U,4)'="CO" G OWNER
"RTN","TIUFLF1",85,0)
 I '$$PERSOWNS^TIUFLF2(FILEDA,DUZ) W !!,"SHARED: Only an Owner can edit SHARED",! G OWNER
"RTN","TIUFLF1",86,0)
 S SHARE=$P(NODE0,U,10)
"RTN","TIUFLF1",87,0)
 ; If not presently SHARED set default=NO:
"RTN","TIUFLF1",88,0)
 I 'SHARE S DIR("B")="NO"
"RTN","TIUFLF1",89,0)
 ; If presently SHARED but only used once, set default=YES:
"RTN","TIUFLF1",90,0)
 S PARENT1=$O(^TIU(8925.1,"AD",FILEDA,0)),PARENT2=$S('PARENT1:0,1:$O(^TIU(8925.1,"AD",FILEDA,PARENT1)))
"RTN","TIUFLF1",91,0)
 I SHARE,'PARENT2 S DIR("B")="YES" I $P($G(^TIU(8925.1,+PARENT1,0)),U,10) W !!,"SHARED: Subcomponent of Shared Component; Must remain Shared",! G OWNER
"RTN","TIUFLF1",92,0)
 I 'SHARE,$P($G(^TIU(8925.1,+PARENT1,0)),U,10) S DIR("B")="YES"
"RTN","TIUFLF1",93,0)
 N Y
"RTN","TIUFLF1",94,0)
 I $D(DIR("B")) D  G:XFLG ASKFX S NODE0=^TIU(8925.1,FILEDA,0)
"RTN","TIUFLF1",95,0)
 . S DIR(0)="YO",(DIR("?"),DIR("??"))="^D HELP2^TIUFXHLX(.1)"
"RTN","TIUFLF1",96,0)
 . S DIR("A")="SHARED"
"RTN","TIUFLF1",97,0)
 . D ^DIR I $D(DUOUT)!$D(DTOUT) S XFLG=1 Q
"RTN","TIUFLF1",98,0)
 . S ANS=Y,DR=".1////^S X=ANS" D ^DIE
"RTN","TIUFLF1",99,0)
 I 'SHARE,$G(ANS),$$HASITEMS^TIUFLF1(FILEDA) D DSETSHAR^TIUFLD1(FILEDA) G OWNER
"RTN","TIUFLF1",100,0)
 I SHARE,PARENT2 W !!,"SHARED: Entry is SHARED with multiple parents; Can't edit SHARED"
"RTN","TIUFLF1",101,0)
OWNER I FIELDS[";.05;" D EDOWN^TIUFLF8(FILEDA,.XFLG) G:XFLG ASKFX
"RTN","TIUFLF1",102,0)
OKDIST I FIELDS[";3.02;",TIUFWHO="N" S DR="3.02//NO" D ^DIE I $D(Y)!$D(DTOUT) S DUOUT=1 G ASKFX
"RTN","TIUFLF1",103,0)
SUPVISIT I FIELDS[";3.03;",$P(NODE0,U,4)="CL"!($P(NODE0,U,4)="DC")!($P(NODE0,U,4)="DOC") D  G:$D(DUOUT) ASKFX
"RTN","TIUFLF1",104,0)
 . S SUPVISIT=$P($G(^TIU(8925.1,FILEDA,3)),U,3)
"RTN","TIUFLF1",105,0)
 . S SUPVISIT=$S(SUPVISIT=0:"NO",SUPVISIT=1:"YES",1:"")
"RTN","TIUFLF1",106,0)
 . I SUPVISIT="" D INHERIT^TIUFLD(FILEDA,0,3.03,"E","","",.SUPVISIT) S SUPVISIT=SUPVISIT("E")
"RTN","TIUFLF1",107,0)
 . S DR="3.03//^S X=SUPVISIT" D ^DIE I $D(Y)!$D(DTOUT) S DUOUT=1 Q
"RTN","TIUFLF1",108,0)
 . I SUPVISIT="NO",$P($G(^TIU(8925.1,FILEDA,3)),U,3) S CONTINUE=$$WARNSUP D
"RTN","TIUFLF1",109,0)
 . . I 'CONTINUE S DR="3.03///^S X=SUPVISIT" D ^DIE W " NOT"
"RTN","TIUFLF1",110,0)
 . . W " Suppressed" H 1
"RTN","TIUFLF1",111,0)
STATUS I FIELDS'[";.07;" G ASKFX
"RTN","TIUFLF1",112,0)
 I $P(NODE0,U,4)="CO",$P(NODE0,U,10) W !,"STATUS: Shared Components have no Status; Can't Edit Status" H:TIUFXNOD["Basics"!(TIUFXNOD["Boil") 2 G ASKFX ;P64 add msg and hang
"RTN","TIUFLF1",113,0)
 I TIUFTMPL="A",$G(TIUFSTMP)="",($P(NODE0,U,4)="CL")!($P(NODE0,U,4)="DC")!($P(NODE0,U,4)="DOC")!($P(NODE0,U,4)="CO") W !,"STATUS: Orphans are Inactive; Can't Edit Status" H 2 G ASKFX
"RTN","TIUFLF1",114,0)
 I $P(NODE0,U,4)="CO" W !,"STATUS: Components get their Status from their Parent; Can't Edit Status" H:TIUFXNOD["Basics"!(TIUFXNOD["Boil") 2 G ASKFX
"RTN","TIUFLF1",115,0)
 D ASKSTAT^TIUFLF6(FILEDA,.NODE0,PFILEDA,.NEWSFLG,.XFLG)
"RTN","TIUFLF1",116,0)
ASKFX S:$D(DTOUT)!$D(DUOUT) XFLG=1
"RTN","TIUFLF1",117,0)
 Q
"RTN","TIUFLF1",118,0)
 ;
"RTN","TIUFLF1",119,0)
WARNSUP() ; Function Warns user who asks to Suppress Visit,  Returns 1 to Suppress, 0 to not Suppress.
"RTN","TIUFLF1",120,0)
 N DIR,X,Y
"RTN","TIUFLF1",121,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A",1)=" Warning: You will NOT GET WORKLOAD CREDIT if you Suppress Visit Selection."
"RTN","TIUFLF1",122,0)
 S DIR("A")=" Sure you want to Suppress Visit Selection"
"RTN","TIUFLF1",123,0)
 W ! D ^DIR W " ... "
"RTN","TIUFLF1",124,0)
 Q Y
"RTN","TIUFLF1",125,0)
 ;
"RTN","TIUFLF6")
0^4^B13478630^B13508572
"RTN","TIUFLF6",1,0)
TIUFLF6 ; SLC/MAM - Library; File 8925.1 Related:  ASKSTAT(FILEDA,NODE0,PFILEDA,NEWFLAG,XFLG), AUTOSTAT(FILEDA,NODE0,STAT),DESCSTAT(FILEDA,NEWSTAT) ; 03/16/2007
"RTN","TIUFLF6",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**13,211,225**;Jun 20, 1997;Build 13
"RTN","TIUFLF6",3,0)
 ;
"RTN","TIUFLF6",4,0)
ASKSTAT(FILEDA,NODE0,PFILEDA,NEWFLAG,XFLG) ; User edit FILEDA Status. Does AUTOSTAT.
"RTN","TIUFLF6",5,0)
 ; Requires FILEDA,NODE0
"RTN","TIUFLF6",6,0)
 ; Requires PFILEDA if FILEDA has an actual/prospective parent.
"RTN","TIUFLF6",7,0)
 ; Returns NEWFLAG=0 if Status unchanged, = 1^ExternalNewStatus if changed, e.g. 1^ACTIVE
"RTN","TIUFLF6",8,0)
 ; Returns XFLG=1 if user ^exited or timed out, else as received.
"RTN","TIUFLF6",9,0)
 N XQORM,TIUJ,NEWSTAT,DIR,X,Y,TIUFSTAT,TIUFPFDA,CONTINUE
"RTN","TIUFLF6",10,0)
 N STATUS,DEFLT
"RTN","TIUFLF6",11,0)
 S NEWFLAG=0
"RTN","TIUFLF6",12,0)
 S DEFLT=$$STATWORD^TIUFLF5($P(NODE0,U,7))
"RTN","TIUFLF6",13,0)
READST K DUOUT S:(DEFLT'="NO/BAD") STATUS=$$SELSTAT^TIUFLF5(FILEDA,PFILEDA,DEFLT) S:(DEFLT="NO/BAD") STATUS=$$SELSTAT^TIUFLF5(FILEDA,PFILEDA)
"RTN","TIUFLF6",14,0)
 I $D(DUOUT)!$D(DTOUT) G ASKSX
"RTN","TIUFLF6",15,0)
 I STATUS="" W "  ?? Enter appropriate Status or '^' to exit",! H 2 G READST
"RTN","TIUFLF6",16,0)
 S NEWSTAT=STATUS I +NEWSTAT'=$P(NODE0,U,7) S NEWFLAG="1^"_$P(NEWSTAT,U,2)
"RTN","TIUFLF6",17,0)
 S NEWSTAT=$P(NEWSTAT,U,2) ;e.g. ACTIVE
"RTN","TIUFLF6",18,0)
 I NEWFLAG,NEWSTAT="INACTIVE" D INACTIVE^TIUFHA3($P(NODE0,U,4),FILEDA,NODE0)
"RTN","TIUFLF6",19,0)
 I 'NEWFLAG!(NEWSTAT'="INACTIVE") D AUTOSTAT(FILEDA,NODE0,NEWSTAT)
"RTN","TIUFLF6",20,0)
ASKSX S:$D(DUOUT)!$D(DTOUT) XFLG=1
"RTN","TIUFLF6",21,0)
 Q
"RTN","TIUFLF6",22,0)
 ;
"RTN","TIUFLF6",23,0)
AUTOSTAT(FILEDA,NODE0,STAT) ; Auto edit FILEDA to Status STAT; Auto edit FILEDA descendants
"RTN","TIUFLF6",24,0)
 N DIE,DR,X,Y,DA
"RTN","TIUFLF6",25,0)
 S DA=FILEDA
"RTN","TIUFLF6",26,0)
 I STAT="INACTIVE" D
"RTN","TIUFLF6",27,0)
 . S DIE=8925.1,DR=".07///^S X=STAT" D ^DIE
"RTN","TIUFLF6",28,0)
 . Q:$P(NODE0,U,4)="O"
"RTN","TIUFLF6",29,0)
 . ;Inactivate descendants, all the way down
"RTN","TIUFLF6",30,0)
 . D DESCSTAT(FILEDA,"INACTIVE")
"RTN","TIUFLF6",31,0)
 I STAT="TEST" D
"RTN","TIUFLF6",32,0)
 . S DIE=8925.1,DR=".07///^S X=STAT" D ^DIE
"RTN","TIUFLF6",33,0)
 . D DESCSTAT(FILEDA,"TEST")
"RTN","TIUFLF6",34,0)
 I STAT="ACTIVE" D
"RTN","TIUFLF6",35,0)
 . N TIUOUT
"RTN","TIUFLF6",36,0)
 . I ($P(NODE0,U,4)="DOC"),(+$G(^TIU(8925.1,DA,15))'>0) D  Q:+$G(TIUOUT)
"RTN","TIUFLF6",37,0)
 . . W !!,$C(7),"You MUST first map ",$P(NODE0,U),!
"RTN","TIUFLF6",38,0)
 . . D DIRECT^TIUMAP2(DA)
"RTN","TIUFLF6",39,0)
 . . I +$G(^TIU(8925.1,DA,15))'>0 W $C(7)," Status Unchanged...",! H 2
"RTN","TIUFLF6",40,0)
 . . I  S TIUOUT=1,VALMBCK="R"
"RTN","TIUFLF6",41,0)
 . W " Entry Activated.",! H 1
"RTN","TIUFLF6",42,0)
 . S DIE=8925.1,DR=".07///^S X=STAT" D ^DIE
"RTN","TIUFLF6",43,0)
 . ; I DOC, activate all descendants.
"RTN","TIUFLF6",44,0)
 . I $P(NODE0,U,4)="DOC" D DESCSTAT(FILEDA,STAT)
"RTN","TIUFLF6",45,0)
 . ; I CL or DC, let user activate desc by using separate option
"RTN","TIUFLF6",46,0)
 . ; I O, done.
"RTN","TIUFLF6",47,0)
 Q
"RTN","TIUFLF6",48,0)
 ;
"RTN","TIUFLF6",49,0)
DESCSTAT(FILEDA,NEWSTAT) ;  Edits Status of all descendants of FILEDA
"RTN","TIUFLF6",50,0)
 ;except Shared Components.
"RTN","TIUFLF6",51,0)
 ; Gives them Status NEWSTAT
"RTN","TIUFLF6",52,0)
 ; Requires FILEDA.  Requires NEWSTAT = ACTIVE, TEST, or INACTIVE
"RTN","TIUFLF6",53,0)
 ; Called with NEWSTAT="ACTIVE" for Components ONLY.
"RTN","TIUFLF6",54,0)
 N TIUI,IFILEDA,INODE0,DIE,X,Y,STATUS,DA
"RTN","TIUFLF6",55,0)
 S TIUI=0,DIE=8925.1
"RTN","TIUFLF6",56,0)
 F  S TIUI=$O(^TIU(8925.1,FILEDA,10,TIUI)) Q:'TIUI  D
"RTN","TIUFLF6",57,0)
 . S IFILEDA=+^TIU(8925.1,FILEDA,10,TIUI,0)
"RTN","TIUFLF6",58,0)
 . S INODE0=$G(^TIU(8925.1,IFILEDA,0))
"RTN","TIUFLF6",59,0)
 . I INODE0="" W !!," File Entry "_FILEDA_" has Nonexistent item "_IFILEDA_"; See IRM",! H 5 Q
"RTN","TIUFLF6",60,0)
 . I $P(INODE0,U,10) Q
"RTN","TIUFLF6",61,0)
 . S DA=IFILEDA,DR=".07///^S X=NEWSTAT" D ^DIE
"RTN","TIUFLF6",62,0)
 . D DESCSTAT(IFILEDA,NEWSTAT)
"RTN","TIUFLF6",63,0)
DESCX Q
"RTN","TIUFLF6",64,0)
 ;
"RTN","TIUFLF6",65,0)
CANEDIT(FILEDA) ; Function returns 1 if Shared Component can be edited, else 0
"RTN","TIUFLF6",66,0)
 ; Can be edited if all parent Titles are Inactive.  Ignores parents which don't exist or have no Status.
"RTN","TIUFLF6",67,0)
 N PFILEDA,PSTATUS,EDITANS,PNODE0,PTYPE
"RTN","TIUFLF6",68,0)
 S EDITANS=1,PFILEDA=0
"RTN","TIUFLF6",69,0)
 F  S PFILEDA=$O(^TIU(8925.1,"AD",FILEDA,PFILEDA)) G:'PFILEDA CANEX D  G:'EDITANS!$D(DTOUT) CANEX
"RTN","TIUFLF6",70,0)
 . I '$D(^TIU(8925.1,PFILEDA,0)) W " File Entry "_PFILEDA_" from AD XREF is missing from the file: See IRM" D PAUSE^TIUFXHLX Q
"RTN","TIUFLF6",71,0)
 . S PNODE0=^TIU(8925.1,PFILEDA,0),PTYPE=$P(PNODE0,U,4)
"RTN","TIUFLF6",72,0)
 . I PTYPE="DOC" S PSTATUS=$P(PNODE0,U,7),PSTATUS=$$STATWORD^TIUFLF5(PSTATUS) I PSTATUS="NO/BAD" W " File Entry "_PFILEDA_" has No Status/Bad Status" D PAUSE^TIUFXHLX Q
"RTN","TIUFLF6",73,0)
 . I PTYPE="DOC" S:(PSTATUS="ACTIVE"!(PSTATUS="TEST")) EDITANS=0 Q
"RTN","TIUFLF6",74,0)
 . I PTYPE="CO" S EDITANS=$$CANEDIT(PFILEDA)
"RTN","TIUFLF6",75,0)
CANEX S:$D(DTOUT) EDITANS=0
"RTN","TIUFLF6",76,0)
 Q EDITANS
"RTN","TIUFLF6",77,0)
 ;
"RTN","TIUMAP")
0^5^B58466071^B54446041
"RTN","TIUMAP",1,0)
TIUMAP ; ISL/JER - TIU/VHA Enterprise Document Type Ontology Mapper ; 04/18/07
"RTN","TIUMAP",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**211,225**;Jun 20, 1997;Build 13
"RTN","TIUMAP",3,0)
MAIN ; Main subroutine
"RTN","TIUMAP",4,0)
 N TIUOK,TIUMODE,TIULUSE,TIUHOUR,TIUNOW,TIUZR,TIUTOD,TIUBACK,TIUACT,TIUMAPT
"RTN","TIUMAP",5,0)
 N SALUT,GREET,PROGRESS,DIRUT,DUOUT,DTOUT,TIUOUT S TIUOUT=0
"RTN","TIUMAP",6,0)
 S ^XTMP("TIUMAP",0)=$$FMADD^XLFDT(DT,730)_U_DT,TIUNOW=$$NOW^XLFDT
"RTN","TIUMAP",7,0)
 S TIUHOUR=$E($P(TIUNOW,".",2),1,2)
"RTN","TIUMAP",8,0)
 S TIUTOD=$S(TIUHOUR'<17:"EVENING",TIUHOUR'<12:"AFTERNOON",1:"MORNING")
"RTN","TIUMAP",9,0)
 S TIUZR=$$NAME^TIULS($$PERSNAME^TIULC1(DUZ),"FIRST")
"RTN","TIUMAP",10,0)
 S TIULUSE=+$G(^XTMP("TIUMAP","USER",DUZ))
"RTN","TIUMAP",11,0)
 S TIUMAPT=+$$MAPTCNT,TIUACT=+$$ACTCNT
"RTN","TIUMAP",12,0)
 S PROGRESS(0)="So far, "_TIUMAPT_" of "_TIUACT_" Active Titles have been mapped!"
"RTN","TIUMAP",13,0)
 S PROGRESS(1)=$$PROGRESS(TIUMAPT,TIUACT)
"RTN","TIUMAP",14,0)
 S SALUT="Good "_TIUTOD_" "_TIUZR_"!"
"RTN","TIUMAP",15,0)
 S GREET=$S(+TIULUSE:"And WELCOME BACK for ANOTHER ride on the MTA!!!",1:"And WELCOME to your FIRST RIDE on the MTA!!!")
"RTN","TIUMAP",16,0)
 W @IOF,!!?9,"****************************************************************"
"RTN","TIUMAP",17,0)
 W !?9,"*",$$PAD(SALUT,"L"),SALUT,$$PAD(SALUT,"R"),"*"
"RTN","TIUMAP",18,0)
 W !?9,"*",$$PAD(GREET,"L"),GREET,$$PAD(GREET,"R"),"*"
"RTN","TIUMAP",19,0)
 I '+TIULUSE D
"RTN","TIUMAP",20,0)
 . W !?9,"*                                                              *"
"RTN","TIUMAP",21,0)
 . W !?9,"*  This option will help you map your LOCAL TIU Titles to the  *"
"RTN","TIUMAP",22,0)
 . W !?9,"* VHA Enterprise Document Type Ontology which VA is helping to *"
"RTN","TIUMAP",23,0)
 . W !?9,"*  Develop as an International Normative Standard supporting   *"
"RTN","TIUMAP",24,0)
 . W !?9,"*              interchange of Clinical Documents.              *"
"RTN","TIUMAP",25,0)
 I +TIUMAPT>0 D
"RTN","TIUMAP",26,0)
 . W !?9,"*                                                              *"
"RTN","TIUMAP",27,0)
 . W !?9,"*",$$PAD(PROGRESS(0),"L"),PROGRESS(0),$$PAD(PROGRESS(0),"R"),"*"
"RTN","TIUMAP",28,0)
 . W !?9,"*",$$PAD(PROGRESS(1),"L"),PROGRESS(1),$$PAD(PROGRESS(1),"R"),"*"
"RTN","TIUMAP",29,0)
 W !?9,"*                                                              *"
"RTN","TIUMAP",30,0)
 W !?9,"*  In preparation for migration to the HDR, ALL LOCAL titles   *"
"RTN","TIUMAP",31,0)
 W !?9,"* MUST be mapped to Standard Titles BEFORE transmittal of TIU  *"
"RTN","TIUMAP",32,0)
 W !?9,"*               Documents to the HDR can begin.                *"
"RTN","TIUMAP",33,0)
 W !?9,"*                                                              *"
"RTN","TIUMAP",34,0)
 W !?9,"*  You may quit mapping titles at any time, and continue your  *"
"RTN","TIUMAP",35,0)
 W !?9,"*    work from the last successfully mapped title. The only    *"
"RTN","TIUMAP",36,0)
 W !?9,"*  catch is that any ACTIVE LOCAL Titles that are not mapped   *"
"RTN","TIUMAP",37,0)
 W !?9,"*      when transmission to the HDR is initiated will be       *"
"RTN","TIUMAP",38,0)
 W !?9,"* INACTIVATED, so please finish this process expeditiously...  *"
"RTN","TIUMAP",39,0)
 W !?9,"****************************************************************",!
"RTN","TIUMAP",40,0)
 S TIUOK=$$READ^TIUU("Y","         ... Are you READY to map","NO") Q:$D(DIRUT)
"RTN","TIUMAP",41,0)
 I +TIUOK'>0 W !!?9,$C(7),"... Very well, no damage done!" Q
"RTN","TIUMAP",42,0)
 S ^XTMP("TIUMAP","USER",DUZ)=TIUNOW
"RTN","TIUMAP",43,0)
 D LOOP
"RTN","TIUMAP",44,0)
 Q
"RTN","TIUMAP",45,0)
PROGRESS(MAPPED,ACTIVE) ; Figure out progress
"RTN","TIUMAP",46,0)
 N TIUI,TIUY,BR,BRSIZE S TIUY="You're at Kendall Square Station..."
"RTN","TIUMAP",47,0)
 S BRSIZE=ACTIVE/17,BR=MAPPED\BRSIZE+1
"RTN","TIUMAP",48,0)
 S TIUY=$P($T(STOPS+BR),";",3)
"RTN","TIUMAP",49,0)
 Q TIUY
"RTN","TIUMAP",50,0)
STOPS ; Get the stops
"RTN","TIUMAP",51,0)
 ;;You're at Kendall Square Station...Hand in your dime!
"RTN","TIUMAP",52,0)
 ;;You're at Charles Circle/MGH...
"RTN","TIUMAP",53,0)
 ;;You're at Park Street Station, changing for Jamaica Plain...
"RTN","TIUMAP",54,0)
 ;;You're at Boyleston Street Station...
"RTN","TIUMAP",55,0)
 ;;You're at Arlington Station...
"RTN","TIUMAP",56,0)
 ;;You're at Copley Station...
"RTN","TIUMAP",57,0)
 ;;You're at Prudential Station...
"RTN","TIUMAP",58,0)
 ;;You're at Symphony Station...
"RTN","TIUMAP",59,0)
 ;;You're at Northeastern University Station...
"RTN","TIUMAP",60,0)
 ;;You're at Museum of Fine Arts Station...
"RTN","TIUMAP",61,0)
 ;;You're at Longwood Medical Area Station...
"RTN","TIUMAP",62,0)
 ;;You're at Brigham Circle Station...
"RTN","TIUMAP",63,0)
 ;;You're at Fenwood Street Station...
"RTN","TIUMAP",64,0)
 ;;You're at Mission Park Station...
"RTN","TIUMAP",65,0)
 ;;You're at Riverway Station...
"RTN","TIUMAP",66,0)
 ;;You're at Back of the Hill Station...
"RTN","TIUMAP",67,0)
 ;;You're at Heath Street Station..."One more nickel."
"RTN","TIUMAP",68,0)
 ;;Wuzzat? NO NICKEL?! Then you'll NEVER return! Ah-HA-Ha-ha!!!
"RTN","TIUMAP",69,0)
 Q
"RTN","TIUMAP",70,0)
PAD(MESSAGE,SIDE) ; Compute pad for message
"RTN","TIUMAP",71,0)
 N LEN,PAD
"RTN","TIUMAP",72,0)
 S LEN=(64-$L(MESSAGE))\2
"RTN","TIUMAP",73,0)
 I $L(MESSAGE)#2,SIDE="R" S LEN=LEN+1
"RTN","TIUMAP",74,0)
 S $P(PAD," ",LEN)=""
"RTN","TIUMAP",75,0)
 Q PAD
"RTN","TIUMAP",76,0)
LOOP ; Loop sequentially through titles
"RTN","TIUMAP",77,0)
 N TIUDA,TIUOUT W @IOF
"RTN","TIUMAP",78,0)
 S TIUDA=+$G(^XTMP("TIUMAP","CHKPNT"))
"RTN","TIUMAP",79,0)
 F  S TIUDA=$O(^TIU(8925.1,"AT","DOC",TIUDA)) Q:TIUDA'>0  D  Q:+$G(DIROUT)!+$G(TIUOUT)
"RTN","TIUMAP",80,0)
 . N TIUD0,TIUNM,TIUTYP,DIRUT
"RTN","TIUMAP",81,0)
 . Q:+$G(^TIU(8925.1,TIUDA,15))  ; If already mapped, continue to next
"RTN","TIUMAP",82,0)
 . S TIUD0=$G(^TIU(8925.1,TIUDA,0)),TIUTYP=$P(TIUD0,U,4)
"RTN","TIUMAP",83,0)
 . ; Don't process non-title type document definitions
"RTN","TIUMAP",84,0)
 . Q:TIUTYP'="DOC"
"RTN","TIUMAP",85,0)
 . Q:+$P(TIUD0,U,7)'=11  ; Only require mapping of ACTIVE local titles
"RTN","TIUMAP",86,0)
 . S TIUNM=$$STRIP^TIUMAP2($P(TIUD0,U))
"RTN","TIUMAP",87,0)
 . L +^TIU(8925.1,TIUDA,15):1
"RTN","TIUMAP",88,0)
 . E  Q  ; If lock request fails, continue to next title
"RTN","TIUMAP",89,0)
 . W !,"For the LOCAL Title: ",TIUNM,!
"RTN","TIUMAP",90,0)
 . D MAP(TIUDA,TIUNM)
"RTN","TIUMAP",91,0)
 . L -^TIU(8925.1,TIUDA,15):1 ; Decrement lock
"RTN","TIUMAP",92,0)
 . Q:+$G(TIUOUT)
"RTN","TIUMAP",93,0)
 . I +$G(DIRUT) D  Q
"RTN","TIUMAP",94,0)
 . . N DIRUT
"RTN","TIUMAP",95,0)
 . . W:$$READ^TIUU("E") "" S:+$G(DIRUT) TIUOUT=1
"RTN","TIUMAP",96,0)
 . S ^XTMP("TIUMAP","CHKPNT")=TIUDA
"RTN","TIUMAP",97,0)
 . S ^XTMP("TIUMAP","MAPCNT")=+$G(^XTMP("TIUMAP","MAPCNT"))+1
"RTN","TIUMAP",98,0)
 Q
"RTN","TIUMAP",99,0)
SINGLES ; Map specific INDIVIDUAL titles
"RTN","TIUMAP",100,0)
 N TIUDA,TIUOUT W @IOF
"RTN","TIUMAP",101,0)
 F  S TIUDA=+$$LTTL D  Q:TIUDA'>0!+$G(DIROUT)!+$G(TIUOUT)
"RTN","TIUMAP",102,0)
 . N TIUD0,TIUNM,TIUTYP,DIRUT
"RTN","TIUMAP",103,0)
 . S TIUD0=$G(^TIU(8925.1,TIUDA,0)),TIUTYP=$P(TIUD0,U,4)
"RTN","TIUMAP",104,0)
 . ; Don't process non-title type document definitions
"RTN","TIUMAP",105,0)
 . Q:TIUTYP'="DOC"
"RTN","TIUMAP",106,0)
 . S TIUNM=$$STRIP^TIUMAP2($P(TIUD0,U))
"RTN","TIUMAP",107,0)
 . Q:'$$PAGE^TIUMAP2(TIUNM)  W !!,"For the LOCAL Title: ",TIUNM,!
"RTN","TIUMAP",108,0)
 . D MAP(TIUDA,TIUNM) Q:+$G(DIRUT)
"RTN","TIUMAP",109,0)
 Q
"RTN","TIUMAP",110,0)
LTTL() ; Call DIC to look-up title
"RTN","TIUMAP",111,0)
 N TIUDA,TIUNM,DIC,X,Y,DTOUT,DUOUT
"RTN","TIUMAP",112,0)
 S DIC=8925.1,DIC(0)="AEMQ",DIC("A")="Select TITLE: "
"RTN","TIUMAP",113,0)
 S DIC("S")="I $P(^(0),U,4)=""DOC"",($P(^(0),U,7)=11)"
"RTN","TIUMAP",114,0)
 D ^DIC K DIC("S") I $D(DTOUT)!$D(DUOUT) S DIRUT=1 S:X="^^" DIROUT=1
"RTN","TIUMAP",115,0)
 Q Y
"RTN","TIUMAP",116,0)
ACTCNT() ; Get count of active titles
"RTN","TIUMAP",117,0)
 N TIUI,TIUY,TIUT S (TIUI,TIUT,TIUY)=0
"RTN","TIUMAP",118,0)
 F  S TIUI=$O(^TIU(8925.1,"AT","DOC",TIUI)) Q:+TIUI'>0  S TIUT=TIUT+1 I $$ACTIVE(TIUI) S TIUY=TIUY+1
"RTN","TIUMAP",119,0)
 Q TIUY_U_TIUT
"RTN","TIUMAP",120,0)
MAPTCNT() ; Get count of mapped titles
"RTN","TIUMAP",121,0)
 N TIUI,TIUY S (TIUI,TIUY)=0
"RTN","TIUMAP",122,0)
 F  S TIUI=$O(^TIU(8925.1,"ALOINC",TIUI)) Q:+TIUI'>0  D
"RTN","TIUMAP",123,0)
 . N TIUJ S TIUJ=0
"RTN","TIUMAP",124,0)
 . F  S TIUJ=$O(^TIU(8925.1,"ALOINC",TIUI,TIUJ)) Q:+TIUJ'>0  I $$ACTIVE(TIUJ) S TIUY=TIUY+1
"RTN","TIUMAP",125,0)
 I (+$G(^XTMP("TIUMAP","MAPCNT"))>0),(^("MAPCNT")'=TIUY) S ^("MAPCNT")=TIUY
"RTN","TIUMAP",126,0)
 Q TIUY
"RTN","TIUMAP",127,0)
ACTIVE(TIUDA) ; Is a given title active?
"RTN","TIUMAP",128,0)
 Q $P($G(^TIU(8925.1,TIUDA,0)),U,7)=11
"RTN","TIUMAP",129,0)
MAP(TIUDA,TIUNM) ; Map each LOCAL Title
"RTN","TIUMAP",130,0)
 N RESULT S RESULT=0
"RTN","TIUMAP",131,0)
 Q:'$$PAGE^TIUMAP2(TIUNM)  W !,"Attempting to map ",TIUNM,!?2,"to a VHA Enterprise Standard Title...",!
"RTN","TIUMAP",132,0)
 ; Bid for LOCK
"RTN","TIUMAP",133,0)
 L +^TIU(8925.1,TIUDA,15):1
"RTN","TIUMAP",134,0)
 E  D  Q
"RTN","TIUMAP",135,0)
 . W !,$C(7),"Another user is mapping this title...",!
"RTN","TIUMAP",136,0)
 . W:$$READ^TIUU("E") "" S:+$G(DIRUT) TIUOUT=1
"RTN","TIUMAP",137,0)
 ; First, check whether the LOCAL Title is already mapped
"RTN","TIUMAP",138,0)
 I +$G(^TIU(8925.1,+TIUDA,15)) D  Q:RESULT<0!+$G(DIRUT)
"RTN","TIUMAP",139,0)
 . N TIUY S TIUY=0
"RTN","TIUMAP",140,0)
 . W !?5,"The LOCAL Title: ",TIUNM,!?7,"is already mapped to",!,"VHA Enterprise Title: ",$$LOINCNM(+$G(^TIU(8925.1,+TIUDA,15))),!
"RTN","TIUMAP",141,0)
 . S TIUY=$$READ^TIUU("YA","Do you want to RE-MAP it? ","NO")
"RTN","TIUMAP",142,0)
 . I +TIUY'>0 W $C(7),!,"... OK, No Harm Done!",! S RESULT=-1
"RTN","TIUMAP",143,0)
 . E  W !
"RTN","TIUMAP",144,0)
 ; Next, check for an exact match
"RTN","TIUMAP",145,0)
 S RESULT=+$O(^TIU(8926.1,"B",TIUNM,RESULT))
"RTN","TIUMAP",146,0)
 I RESULT D  Q:+RESULT'>0!+$G(DIRUT)  I 1
"RTN","TIUMAP",147,0)
 . Q:'$$PAGE^TIUMAP2(TIUNM)  W !,"Found Exact Match with VHA Enterprise Standard Title: ",TIUNM,"."
"RTN","TIUMAP",148,0)
 . I $$SCREEN^XTID(8926.1,"",+RESULT_",") D  Q:'+RESULT
"RTN","TIUMAP",149,0)
 . . N TIUACT
"RTN","TIUMAP",150,0)
 . . W !,"The corresponding VHA Enterprise Standard Title is INACTIVE."
"RTN","TIUMAP",151,0)
 . . W !,"You'll need to map ",TIUNM," manually to a different title,",!," or inactivate the local title.",!
"RTN","TIUMAP",152,0)
 . . S RESULT=0
"RTN","TIUMAP",153,0)
 . . S TIUACT=$$READ^TIUU("SA^M:map;I:inactivate","Select action: ","map") I +$G(DIRUT) S TIUOUT=1 Q
"RTN","TIUMAP",154,0)
 . . I $P(TIUACT,U)="I" D INACT^TIUMAP2(TIUDA) Q
"RTN","TIUMAP",155,0)
 . . I $P(TIUACT,U)="M" W !!,"Attempting to map ",TIUNM," to a different title...",! D PARSE^TIUMAP1(.RESULT,TIUNM)
"RTN","TIUMAP",156,0)
 . S RESULT(1)=RESULT_U_$P($G(^TIU(8926.1,+RESULT,0)),U)_U_TIUNM
"RTN","TIUMAP",157,0)
 . D CONFIRM^TIUMAP1(.RESULT,"Yes")
"RTN","TIUMAP",158,0)
 . I +RESULT'>0!+$G(DIRUT) D LOG^TIUMAP1(TIUNM,TIUDA)
"RTN","TIUMAP",159,0)
 ; Otherwise, parse the title, attempting to map each word
"RTN","TIUMAP",160,0)
 E  D  Q:+RESULT'>0!+$G(DIRUT)!+$G(TIUOUT)
"RTN","TIUMAP",161,0)
 . D PARSE^TIUMAP1(.RESULT,TIUNM)
"RTN","TIUMAP",162,0)
 . I RESULT>0,'+$G(DIRUT) D CONFIRM^TIUMAP1(.RESULT,"Yes")
"RTN","TIUMAP",163,0)
 . I +RESULT'>0!+$G(DIRUT) D LOG^TIUMAP1(TIUNM,TIUDA)
"RTN","TIUMAP",164,0)
 D POINT(TIUDA,.RESULT)
"RTN","TIUMAP",165,0)
 Q
"RTN","TIUMAP",166,0)
LOINCNM(TIULDA) ; Resolve name of VHA Enterprise Title
"RTN","TIUMAP",167,0)
 Q $P($G(^TIU(8926.1,+TIULDA,0)),U)
"RTN","TIUMAP",168,0)
POINT(DA,RESULT) ; Point the LOCAL Title entry in file #8925.1 at the VHA Enterprise Title
"RTN","TIUMAP",169,0)
 N DIE,DR S DIE="^TIU(8925.1,",DR="1501////^S X="_+RESULT_";1502////^S X="_$$NOW^XLFDT_";1503////^S X="_DUZ
"RTN","TIUMAP",170,0)
 D ^DIE W !?13,"Done.",!
"RTN","TIUMAP",171,0)
 ; Drop LOCK
"RTN","TIUMAP",172,0)
 L -^TIU(8925.1,DA,15):1
"RTN","TIUMAP",173,0)
 I $P($G(RESULT(1)),U,3)]"" K ^XTMP("TIUMAP","FAIL",$P($G(RESULT(1)),U,3),DA)
"RTN","TIUMAP",174,0)
 Q
"RTN","TIUMLIST")
0^6^B39325758^B37016435
"RTN","TIUMLIST",1,0)
TIUMLIST ; ISL/JER - Review Unmapped Titles ; 03/21/07
"RTN","TIUMLIST",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**211,225**;Jun 20, 1997;Build 13
"RTN","TIUMLIST",3,0)
EN ; Invoke List Manager
"RTN","TIUMLIST",4,0)
 D EN^VALM("TIU REVIEW UNMAPPED TITLES")
"RTN","TIUMLIST",5,0)
 S VALMBCK="Q"
"RTN","TIUMLIST",6,0)
 Q
"RTN","TIUMLIST",7,0)
 ;
"RTN","TIUMLIST",8,0)
MAKELIST ; Prompt for search criteria
"RTN","TIUMLIST",9,0)
 N MAPSTAT,TIUEDT,TIULDT,USER
"RTN","TIUMLIST",10,0)
 S MAPSTAT="U^unmapped",TIUEDT=0,TIULDT=0,USER=DUZ_U_$$PERSNAME^TIULC1(DUZ)
"RTN","TIUMLIST",11,0)
 S MAPSTAT=$$SELSTAT("unmapped (ACTIVE)")
"RTN","TIUMLIST",12,0)
 I +$G(DIRUT) S VALMQUIT=1 Q
"RTN","TIUMLIST",13,0)
 I $S(MAPSTAT="*":0,MAPSTAT="U":0,MAPSTAT="A":0,MAPSTAT="I":0,1:1) D  Q:+$G(VALMQUIT)
"RTN","TIUMLIST",14,0)
 . S USER=$$SELUSER(DUZ)
"RTN","TIUMLIST",15,0)
 . I '$S(+USER:1,USER="A":1,1:0)!+$G(DIRUT) S VALMQUIT=1 Q
"RTN","TIUMLIST",16,0)
 . S TIUEDT=+$$EDATE^TIULA("Mapping","T-30")
"RTN","TIUMLIST",17,0)
 . I TIUEDT'>0!+$G(DIRUT) S VALMQUIT=1 Q
"RTN","TIUMLIST",18,0)
 . S TIULDT=+$$LDATE^TIULA("Mapping")
"RTN","TIUMLIST",19,0)
 . I TIULDT'>0!+$G(DIRUT) S VALMQUIT=1 Q
"RTN","TIUMLIST",20,0)
 . ; If TIUEDT is NOT earlier than TIULDT, then swap
"RTN","TIUMLIST",21,0)
 . I TIUEDT>TIULDT S TIUTMP=TIUEDT,TIUEDT=TIULDT,TIULDT=TIUTMP
"RTN","TIUMLIST",22,0)
 W !,"Searching for the events."
"RTN","TIUMLIST",23,0)
 D BUILD(MAPSTAT,TIUEDT,TIULDT,USER)
"RTN","TIUMLIST",24,0)
 K TIUDI,SELDIV
"RTN","TIUMLIST",25,0)
 Q
"RTN","TIUMLIST",26,0)
 ;
"RTN","TIUMLIST",27,0)
SELSTAT(DFLT) ; Select Mapping Status
"RTN","TIUMLIST",28,0)
 N PRMT,READTYPE,X,Y
"RTN","TIUMLIST",29,0)
 S PRMT="Select Mapping Status: "
"RTN","TIUMLIST",30,0)
 S READTYPE="SMA^M:mapped;U:unmapped (ACTIVE);F:failed mappings;A:active;I:inactive;*:standard title inactivated"
"RTN","TIUMLIST",31,0)
 S Y=$P($$READ^TIUU(READTYPE,PRMT,DFLT),U)
"RTN","TIUMLIST",32,0)
 Q Y
"RTN","TIUMLIST",33,0)
 ;
"RTN","TIUMLIST",34,0)
SELUSER(DFLT) ; Select Resolution status
"RTN","TIUMLIST",35,0)
 N PRMT,READTYPE,X,Y
"RTN","TIUMLIST",36,0)
 I +DFLT>0 S DFLT=$$PERSNAME^TIULC1(DFLT)
"RTN","TIUMLIST",37,0)
 S PRMT="Select USER: "
"RTN","TIUMLIST",38,0)
 S READTYPE="SMA^A:any;S:selected user"
"RTN","TIUMLIST",39,0)
 S Y=$P($$READ^TIUU(READTYPE,PRMT,"ANY"),U)
"RTN","TIUMLIST",40,0)
 I Y="S" D
"RTN","TIUMLIST",41,0)
 . S READTYPE="PA^200:AEMQ"
"RTN","TIUMLIST",42,0)
 . S Y=+$$READ^TIUU(READTYPE,PRMT,DFLT)
"RTN","TIUMLIST",43,0)
 Q Y
"RTN","TIUMLIST",44,0)
 ;
"RTN","TIUMLIST",45,0)
BUILD(MAPSTAT,TIUEDT,TIULDT,USER) ; Build review screen list
"RTN","TIUMLIST",46,0)
 N TIUCNT,TIUTTL
"RTN","TIUMLIST",47,0)
 S (TIUCNT,VALMCNT)=0
"RTN","TIUMLIST",48,0)
 K ^TMP("TIUMLIST",$J),^TMP("TIUMLISTIDX",$J)
"RTN","TIUMLIST",49,0)
 ; If MAPSTAT="M^mapped"
"RTN","TIUMLIST",50,0)
 ; Loop through ^TIU(8925.1,"ALOINC")
"RTN","TIUMLIST",51,0)
 I $P(MAPSTAT,U)="M"!($P(MAPSTAT,U)="*") D
"RTN","TIUMLIST",52,0)
 . N TIUSDA S TIUSDA=0
"RTN","TIUMLIST",53,0)
 . F  S TIUSDA=$O(^TIU(8925.1,"ALOINC",TIUSDA)) Q:+TIUSDA'>0  D
"RTN","TIUMLIST",54,0)
 . . N TIUTDA S TIUTDA=0
"RTN","TIUMLIST",55,0)
 . . F  S TIUTDA=$O(^TIU(8925.1,"ALOINC",TIUSDA,TIUTDA)) Q:+TIUTDA'>0  D:$$PASS(MAPSTAT,TIUTDA,USER,TIUEDT,TIULDT) SORT(TIUTDA)
"RTN","TIUMLIST",56,0)
 . N TIUNM S TIUNM=""
"RTN","TIUMLIST",57,0)
 . F  S TIUNM=$O(^TMP("TIUMLIST",$J,"ALPHA",TIUNM)) Q:TIUNM']""  D
"RTN","TIUMLIST",58,0)
 . . N TIUTDA S TIUTDA=0
"RTN","TIUMLIST",59,0)
 . . F  S TIUTDA=$O(^TMP("TIUMLIST",$J,"ALPHA",TIUNM,TIUTDA)) Q:+TIUTDA'>0  D
"RTN","TIUMLIST",60,0)
 . . . S TIUCNT=+$G(TIUCNT)+1
"RTN","TIUMLIST",61,0)
 . . . D SETLSTEL(TIUTDA,TIUCNT)
"RTN","TIUMLIST",62,0)
 ; If MAPSTAT="U^unmapped" or MAPSTAT="A^all active titles"
"RTN","TIUMLIST",63,0)
 ; Loop through ^TIU(8925.1,"AT","DOC")
"RTN","TIUMLIST",64,0)
 I $S($P(MAPSTAT,U)="U":1,$P(MAPSTAT,U)="A":1,$P(MAPSTAT,U)="I":1,1:0) D
"RTN","TIUMLIST",65,0)
 . N TIUTDA S TIUTDA=0
"RTN","TIUMLIST",66,0)
 . F  S TIUTDA=$O(^TIU(8925.1,"AT","DOC",TIUTDA)) Q:+TIUTDA'>0  D
"RTN","TIUMLIST",67,0)
 . . I ($P(MAPSTAT,U)'="I"),(+$P($G(^TIU(8925.1,TIUTDA,0)),U,7)'=11) Q
"RTN","TIUMLIST",68,0)
 . . I ($P(MAPSTAT,U)="I"),(+$P($G(^TIU(8925.1,TIUTDA,0)),U,7)'=13) Q
"RTN","TIUMLIST",69,0)
 . . I $P(MAPSTAT,U)="U",(+$P($G(^TIU(8925.1,TIUTDA,15)),U)>0) Q
"RTN","TIUMLIST",70,0)
 . . D:$S($P(MAPSTAT,U)="U":1,$P(MAPSTAT,U)="A":1,$P(MAPSTAT,U)="I":1,$$PASS(TIUTDA,USER,TIUEDT,TIULDT):1,1:0) SORT(TIUTDA)
"RTN","TIUMLIST",71,0)
 . N TIUNM S TIUNM=""
"RTN","TIUMLIST",72,0)
 . F  S TIUNM=$O(^TMP("TIUMLIST",$J,"ALPHA",TIUNM)) Q:TIUNM']""  D
"RTN","TIUMLIST",73,0)
 . . N TIUTDA S TIUTDA=0
"RTN","TIUMLIST",74,0)
 . . F  S TIUTDA=$O(^TMP("TIUMLIST",$J,"ALPHA",TIUNM,TIUTDA)) Q:+TIUTDA'>0  D
"RTN","TIUMLIST",75,0)
 . . . S TIUCNT=+$G(TIUCNT)+1
"RTN","TIUMLIST",76,0)
 . . . D SETLSTEL(TIUTDA,TIUCNT)
"RTN","TIUMLIST",77,0)
 ; If MAPSTAT="F^failed mappings"
"RTN","TIUMLIST",78,0)
 ; Loop through ^XTMP("TIUMAP","FAIL")
"RTN","TIUMLIST",79,0)
 I $P(MAPSTAT,U)="F" D
"RTN","TIUMLIST",80,0)
 . S TIUTTL="" F  S TIUTTL=$O(^XTMP("TIUMAP","FAIL",TIUTTL)) Q:TIUTTL']""  D
"RTN","TIUMLIST",81,0)
 . . N TIUTDA S TIUTDA=0
"RTN","TIUMLIST",82,0)
 . . F  S TIUTDA=$O(^XTMP("TIUMAP","FAIL",TIUTTL,TIUTDA)) Q:+TIUTDA'>0  D
"RTN","TIUMLIST",83,0)
 . . . I '$$PASS(TIUTDA,USER,TIUEDT,TIULDT) Q
"RTN","TIUMLIST",84,0)
 . . . S TIUCNT=+$G(TIUCNT)+1
"RTN","TIUMLIST",85,0)
 . . . D SETLSTEL(TIUTDA,TIUCNT)
"RTN","TIUMLIST",86,0)
 ;
"RTN","TIUMLIST",87,0)
 S ^TMP("TIUMLIST",$J,0)=+$G(TIUCNT)_U_MAPSTAT,VALMCNT=2*TIUCNT
"RTN","TIUMLIST",88,0)
 S TIUPICK=+$O(^ORD(101,"B","TIU ACTION SELECT LIST ELEMENT",0))
"RTN","TIUMLIST",89,0)
 S ^TMP("TIUMLIST",$J,"#")=TIUPICK_"^1:"_+$G(TIUCNT)
"RTN","TIUMLIST",90,0)
 I $D(VALMHDR)>9 D HDR
"RTN","TIUMLIST",91,0)
 I +$G(TIUCNT)'>0 D
"RTN","TIUMLIST",92,0)
 . S ^TMP("TIUMLIST",$J,1,0)="",VALMCNT=2
"RTN","TIUMLIST",93,0)
 . S ^TMP("TIUMLIST",$J,2,0)="No "_$$STATXFRM(MAPSTAT)_$S(MAPSTAT'="F":" Local Titles",1:"")_" found meeting the search criteria"
"RTN","TIUMLIST",94,0)
 . D RESTORE^VALM10(2)
"RTN","TIUMLIST",95,0)
 Q
"RTN","TIUMLIST",96,0)
 ;
"RTN","TIUMLIST",97,0)
PASS(MAPSTAT,TIUTDA,USER,TIUEDT,TIULDT) ; Does record passes criteria?
"RTN","TIUMLIST",98,0)
 N Y,TIUTD15,TIUDT,TIUDUZ S Y=0
"RTN","TIUMLIST",99,0)
 S TIUTD15=$G(^TIU(8925.1,TIUTDA,15))
"RTN","TIUMLIST",100,0)
 I $P(MAPSTAT,U)="*",$$SCREEN^XTID(8926.1,"",+TIUTD15_",") S Y=1 G PASSX
"RTN","TIUMLIST",101,0)
 S TIUDT=$P(TIUTD15,U,2),TIUDUZ=$P(TIUTD15,U,3)
"RTN","TIUMLIST",102,0)
 I (TIUDT'<TIUEDT),(TIUDT'>TIULDT_".235959"),$S(USER="A":1,USER=TIUDUZ:1,1:0) S Y=1
"RTN","TIUMLIST",103,0)
PASSX Q Y
"RTN","TIUMLIST",104,0)
 ;
"RTN","TIUMLIST",105,0)
SORT(TIUTDA) ; Alpha sort titles
"RTN","TIUMLIST",106,0)
 N TIUNM S TIUNM=$P($G(^TIU(8925.1,TIUTDA,0)),U)
"RTN","TIUMLIST",107,0)
 S ^TMP("TIUMLIST",$J,"ALPHA",TIUNM,TIUTDA)=""
"RTN","TIUMLIST",108,0)
 Q
"RTN","TIUMLIST",109,0)
 ;
"RTN","TIUMLIST",110,0)
SETLSTEL(TIUTDA,TIUCNT) ; Set List element for each title
"RTN","TIUMLIST",111,0)
 N ATTEMPT,USER,LOCAL,VHATITLE,VHATDA,USERDUZ,TIUD15,TIUTTL,TIUS
"RTN","TIUMLIST",112,0)
 S TIUTTL=$P($G(^TIU(8925.1,TIUTDA,0)),U)
"RTN","TIUMLIST",113,0)
 S TIUD15=$G(^TIU(8925.1,TIUTDA,15))
"RTN","TIUMLIST",114,0)
 S USERDUZ=$P(TIUD15,U,3),USER=$S(+USERDUZ>0:$$GET1^DIQ(200,USERDUZ,.01),1:"UNKNOWN")
"RTN","TIUMLIST",115,0)
 S ATTEMPT=$P(TIUD15,U,2)
"RTN","TIUMLIST",116,0)
 S:USER'="UNKNOWN" USER=$$NAME^TIULS(USER,"LAST, FIRST")
"RTN","TIUMLIST",117,0)
 S ATTEMPT=$S(+ATTEMPT>0:$$DATE^TIULS(ATTEMPT,"MM/DD/YY HR:MIN"),1:"N/A")
"RTN","TIUMLIST",118,0)
 S VHATDA=0,VHATDA=$P(TIUD15,U)
"RTN","TIUMLIST",119,0)
 S VHATITLE=$S(+VHATDA:$P($G(^TIU(8926.1,+VHATDA,0)),U),1:"")
"RTN","TIUMLIST",120,0)
 S TIUREC=$$SETFLD^VALM1(TIUCNT,"","NUMBER")
"RTN","TIUMLIST",121,0)
 S TIUREC=$$SETFLD^VALM1(TIUTTL,TIUREC,"LOCAL")
"RTN","TIUMLIST",122,0)
 S TIUREC=$$SETFLD^VALM1(ATTEMPT,TIUREC,"ATTEMPTED")
"RTN","TIUMLIST",123,0)
 S TIUREC=$$SETFLD^VALM1(USER,TIUREC,"USER")
"RTN","TIUMLIST",124,0)
 S TIUS=(2*TIUCNT)-1
"RTN","TIUMLIST",125,0)
 S ^TMP("TIUMLIST",$J,TIUS,0)=TIUREC
"RTN","TIUMLIST",126,0)
 D RESTORE^TIULM(TIUS)
"RTN","TIUMLIST",127,0)
 S ^TMP("TIUMLIST",$J,"IDX",TIUS,TIUCNT)=""
"RTN","TIUMLIST",128,0)
 S ^TMP("TIUMLIST",$J,"PICK",TIUCNT,TIUS)=""
"RTN","TIUMLIST",129,0)
 S ^TMP("TIUMLISTIDX",$J,TIUCNT)=TIUS_U_TIUTDA_U_TIUTTL
"RTN","TIUMLIST",130,0)
 S TIUS=+$G(TIUS)+1 W:TIUS#5'>0 "."
"RTN","TIUMLIST",131,0)
 S ^TMP("TIUMLIST",$J,TIUS,0)=$$SETFLD^VALM1(VHATITLE,"","VHATITLE")
"RTN","TIUMLIST",132,0)
 D RESTORE^TIULM(TIUS)
"RTN","TIUMLIST",133,0)
 S ^TMP("TIUMLIST",$J,"IDX",TIUS,TIUCNT)=""
"RTN","TIUMLIST",134,0)
 S ^TMP("TIUMLIST",$J,"PICK",TIUCNT,TIUS)=""
"RTN","TIUMLIST",135,0)
 Q
"RTN","TIUMLIST",136,0)
 ;
"RTN","TIUMLIST",137,0)
STATXFRM(STATUS) ; Transform status
"RTN","TIUMLIST",138,0)
 Q $S(STATUS="M":"MAPPED",STATUS="U":"UNMAPPED (ACTIVE)",STATUS="F":"FAILED Mapping Attempts",STATUS="A":"ACTIVE",STATUS="*":"MAPPED to INACTIVE STANDARD",1:"INACTIVE")
"RTN","TIUMLIST",139,0)
 ;
"RTN","TIUMLIST",140,0)
HDR ; Initialize header for review screen
"RTN","TIUMLIST",141,0)
 N TITLE,STATUS,MAPSTAT S STATUS=$P(@VALMAR@(0),U,2)
"RTN","TIUMLIST",142,0)
 S MAPSTAT=$$STATXFRM(STATUS)
"RTN","TIUMLIST",143,0)
 S TITLE=MAPSTAT_$S(STATUS'="F":" Titles",1:"")
"RTN","TIUMLIST",144,0)
 S VALMHDR(1)=$$CENTER^TIULS(TITLE)
"RTN","TIUMLIST",145,0)
 S VALMHDR(2)="     LOCAL Title"
"RTN","TIUMLIST",146,0)
 Q
"RTN","TIUMLIST",147,0)
 ;
"RTN","TIUMLIST",148,0)
VIDATTS(LINE) ; Set default video attributes for LINE
"RTN","TIUMLIST",149,0)
 D RESTORE^TIULM(LINE),FLDCTRL^VALM10(LINE,"NUMBER",IOINHI,IOINORM)
"RTN","TIUMLIST",150,0)
 Q
"RTN","TIUMLIST",151,0)
 ;
"RTN","TIUMLIST",152,0)
CLEAN ; Clean up your mess!
"RTN","TIUMLIST",153,0)
 K ^TMP("TIUMLIST",$J),^TMP("TIUMLISTIDX",$J) D CLEAN^VALM10
"RTN","TIUMLIST",154,0)
 K VALMY
"RTN","TIUMLIST",155,0)
 Q
"RTN","TIUPR225")
0^8^B286669^n/a
"RTN","TIUPR225",1,0)
TIUPR225 ; ISL/JER - Pre-install for TIU*1*225 ; 04/23/2007
"RTN","TIUPR225",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**225**;Jun 20, 1997;Build 13
"RTN","TIUPR225",3,0)
 ;
"RTN","TIUPR225",4,0)
MAIN ; control subroutine
"RTN","TIUPR225",5,0)
 D REMLOINC
"RTN","TIUPR225",6,0)
 Q
"RTN","TIUPR225",7,0)
REMLOINC ; Remove "LOINC" x-ref on file 8925.1
"RTN","TIUPR225",8,0)
 N TIUOUT
"RTN","TIUPR225",9,0)
 D BMES^XPDUTL("REMOVING ""LOINC"" CROSS-REFERENCE ON FILE 8925.1")
"RTN","TIUPR225",10,0)
 D DELIX^DDMOD(8925.1,1501,1,"K","TIUOUT")
"RTN","TIUPR225",11,0)
 Q
"RTN","TIUPS225")
0^7^B9768335^n/a
"RTN","TIUPS225",1,0)
TIUPS225 ; ISL/JER - Post-install for TIU*1*225 ; 06/05/2007
"RTN","TIUPS225",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**225**;Jun 20, 1997;Build 13
"RTN","TIUPS225",3,0)
 ;
"RTN","TIUPS225",4,0)
MAIN ; control subroutine
"RTN","TIUPS225",5,0)
 D SETID
"RTN","TIUPS225",6,0)
 D BALOINC
"RTN","TIUPS225",7,0)
 D SETSEC
"RTN","TIUPS225",8,0)
 D SETMGS
"RTN","TIUPS225",9,0)
 Q
"RTN","TIUPS225",10,0)
SETID ; Create "Write identifier" for file 8925.1
"RTN","TIUPS225",11,0)
 N TIUID
"RTN","TIUPS225",12,0)
 D BMES^XPDUTL("SETTING ""WRITE"" IDENTIFIER ON FILE 8925.1")
"RTN","TIUPS225",13,0)
 S TIUID="S %I=Y,Y=$S('$D(^(15)):"""",$D(^TIU(8926.1,+$P(^(15),U,1),0))#2:$P(^(0),U,1),1:"""") N DIERR S:Y]"""" Y=$$EXTERNAL^DILFD(8926.1,.01,"""",Y,""DIERR"") D:Y]"""" EN^DDIOL(Y,"""",""!?6,""""Std Title: """""") S Y=%I K %I"
"RTN","TIUPS225",14,0)
 S ^DD(8925.1,0,"ID","W.1501")=TIUID
"RTN","TIUPS225",15,0)
 Q
"RTN","TIUPS225",16,0)
BALOINC ; Build "ALOINC" x-ref on file 8925.1
"RTN","TIUPS225",17,0)
 N DA,DIK,TIUCNT
"RTN","TIUPS225",18,0)
 D BMES^XPDUTL("BUILDING NEW ""ALOINC"" CROSS-REFERENCE ON FILE 8925.1")
"RTN","TIUPS225",19,0)
 ; remove "LOINC" cross-reference in preparation for building "ALOINC"
"RTN","TIUPS225",20,0)
 K ^TIU(8925.1,"LOINC")
"RTN","TIUPS225",21,0)
 S (DA,TIUCNT)=0,DIK="^TIU(8925.1,",DIK(1)="1501^ALOINC"
"RTN","TIUPS225",22,0)
 F  S DA=$O(^TIU(8925.1,DA)) Q:+DA'>0  D
"RTN","TIUPS225",23,0)
 . D EN1^DIK
"RTN","TIUPS225",24,0)
 . S TIUCNT=TIUCNT+1
"RTN","TIUPS225",25,0)
 . I '(TIUCNT#10) D UPDATE^XPDID(TIUCNT)
"RTN","TIUPS225",26,0)
 Q
"RTN","TIUPS225",27,0)
SETSEC ; set file security on 8926.1
"RTN","TIUPS225",28,0)
 N TIUSC S TIUSC("RD")=""
"RTN","TIUPS225",29,0)
 D FILESEC^DDMOD(8926.1,.TIUSC)
"RTN","TIUPS225",30,0)
 Q
"RTN","TIUPS225",31,0)
SETMGS ; set mail groups for TIU ENTERPRISE STANDARD TITLES bulletin
"RTN","TIUPS225",32,0)
 N TIUBIEN,TIUBNM,TIUERRF,TIUFDA,TIUGIEN,TIUGNM,TIULNE
"RTN","TIUPS225",33,0)
 N TIUMSG,TIUTXT
"RTN","TIUPS225",34,0)
 K TIUMSG
"RTN","TIUPS225",35,0)
 D BMES^XPDUTL("Attaching Mail Groups to TIU ENTERPRISE STANDARD TITLES Bulletin")
"RTN","TIUPS225",36,0)
 S TIUBNM="TIU ENTERPRISE STANDARD TITLES"
"RTN","TIUPS225",37,0)
 S TIUBIEN=$$FIND1^DIC(3.6,"","X",TIUBNM,"","","")
"RTN","TIUPS225",38,0)
 ;If Bulletin not found, error
"RTN","TIUPS225",39,0)
 I TIUBIEN'>0 D  I 1
"RTN","TIUPS225",40,0)
 . S TIUMSG(1)="**"
"RTN","TIUPS225",41,0)
 . S TIUMSG(2)="** Bulletin "_TIUBNM_" not found"
"RTN","TIUPS225",42,0)
 . D MES^XPDUTL(.TIUMSG) K TIUMSG
"RTN","TIUPS225",43,0)
 . S TIUERRF=1
"RTN","TIUPS225",44,0)
 ELSE  F TIUGNM="TIU CACS","XUMF SERVER" D  Q:+$G(TIUERRF)
"RTN","TIUPS225",45,0)
 . S TIUGIEN=$$FIND1^DIC(3.8,"","X",TIUGNM,"","","")
"RTN","TIUPS225",46,0)
 . ;If Mail Group not found, error
"RTN","TIUPS225",47,0)
 . I TIUGIEN'>0 D  Q
"RTN","TIUPS225",48,0)
 . . S TIUMSG(1)="**"
"RTN","TIUPS225",49,0)
 . . S TIUMSG(2)="** Mail Group "_TIUGNM_" not found"
"RTN","TIUPS225",50,0)
 . . D MES^XPDUTL(.TIUMSG) K TIUMSG
"RTN","TIUPS225",51,0)
 . . S TIUERRF=1
"RTN","TIUPS225",52,0)
 . ;Attach Mail Group to Bulletin
"RTN","TIUPS225",53,0)
 . N TIUFDA,TIUIEN,TIUMSG
"RTN","TIUPS225",54,0)
 . S TIUFDA(3.62,"?+2,"_TIUBIEN_",",.01)=TIUGIEN
"RTN","TIUPS225",55,0)
 . D UPDATE^DIE("","TIUFDA","TIUIEN","TIUMSG")
"RTN","TIUPS225",56,0)
 . ;Check for error
"RTN","TIUPS225",57,0)
 . I $D(TIUMSG("DIERR")) D  Q
"RTN","TIUPS225",58,0)
 . . S TIUMSG(1)="**"
"RTN","TIUPS225",59,0)
 . . S TIUMSG(2)="** Unable to attach "_TIUGNM_" to "_TIUBNM
"RTN","TIUPS225",60,0)
 . . D MES^XPDUTL(.TIUMSG) K TIUMSG
"RTN","TIUPS225",61,0)
 . . S TIUERRF=1
"RTN","TIUPS225",62,0)
 . S TIUMSG(1)=" "
"RTN","TIUPS225",63,0)
 . S TIUMSG(2)="... G."_TIUGNM_$S($G(TIUIEN(2,0))="?":" already",1:"")_" attached to "_TIUBNM_" Bulletin"
"RTN","TIUPS225",64,0)
 . D MES^XPDUTL(.TIUMSG) K TIUMSG
"RTN","TIUPS225",65,0)
 ;Check for error
"RTN","TIUPS225",66,0)
 I $G(TIUERRF) D
"RTN","TIUPS225",67,0)
 . S TIUMSG(1)="** Post-installation interrupted"
"RTN","TIUPS225",68,0)
 . S TIUMSG(2)="** Please contact Enterprise VistA Support"
"RTN","TIUPS225",69,0)
 . D MES^XPDUTL(.TIUMSG) K TIUMSG
"RTN","TIUPS225",70,0)
 Q
"SEC","^DD",8926.1,8926.1,.01,8)
 @
"SEC","^DD",8926.1,8926.1,.01,8.5)
 @
"UP",8926.1,8926.199,-1)
8926.1^TERMSTATUS
"UP",8926.1,8926.199,0)
8926.199
"VER")
8.0^22.0
"^DD",4.001,4.001,0)
FIELD^^5^27
"^DD",4.001,4.001,0,"DDA")
N
"^DD",4.001,4.001,0,"DT")
3060525
"^DD",4.001,4.001,0,"IX","B",4.001,.01)

"^DD",4.001,4.001,0,"IX","MFI",4.001,.03)

"^DD",4.001,4.001,0,"IX","MFID",4.001,.07)

"^DD",4.001,4.001,0,"IX","ZZZ",4.001,.02)

"^DD",4.001,4.001,0,"NM","MASTER FILE PARAMETERS")

"^DD",4.001,4.001,0,"VRPK")
XU
"^DD",4.001,4.001,.01,0)
MASTER FILE^RP1X^DIC(^0;1^S DINUM=X
"^DD",4.001,4.001,.01,1,0)
^.1
"^DD",4.001,4.001,.01,1,1,0)
4.001^B
"^DD",4.001,4.001,.01,1,1,1)
S ^DIC(4.001,"B",$E(X,1,30),DA)=""
"^DD",4.001,4.001,.01,1,1,2)
K ^DIC(4.001,"B",$E(X,1,30),DA)
"^DD",4.001,4.001,.01,3)
Select file to be supported by the Master File Server (MFS) mechanism.
"^DD",4.001,4.001,.01,21,0)
^^3^3^3031223^
"^DD",4.001,4.001,.01,21,1,0)
This field is the Internal File Number (IFN) of the
"^DD",4.001,4.001,.01,21,2,0)
Master File table supported by the Master File Server
"^DD",4.001,4.001,.01,21,3,0)
(MFS).
"^DD",4.001,4.001,.01,"DT")
3031226
"^DD",4.001,4.001,.02,0)
SEGMENT NAME^RFX^^0;2^K:$L(X)>3!($L(X)<3) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,.02,1,0)
^.1
"^DD",4.001,4.001,.02,1,1,0)
4.001^ZZZ
"^DD",4.001,4.001,.02,1,1,1)
S ^DIC(4.001,"ZZZ",$E(X,1,30),DA)=""
"^DD",4.001,4.001,.02,1,1,2)
K ^DIC(4.001,"ZZZ",$E(X,1,30),DA)
"^DD",4.001,4.001,.02,1,1,"%D",0)
^^3^3^3031223^
"^DD",4.001,4.001,.02,1,1,"%D",1,0)
This x-ref is the segment name.  The MFS handler
"^DD",4.001,4.001,.02,1,1,"%D",2,0)
checks incoming message data segments against this
"^DD",4.001,4.001,.02,1,1,"%D",3,0)
x-ref to verify the file is supported.
"^DD",4.001,4.001,.02,1,1,"DT")
3031223
"^DD",4.001,4.001,.02,3)
Enter the HL7 data segment or Z segment name.
"^DD",4.001,4.001,.02,21,0)
^^2^2^3031223^
"^DD",4.001,4.001,.02,21,1,0)
This field holds the name of the HL7 data segment
"^DD",4.001,4.001,.02,21,2,0)
that hold the actual table values.
"^DD",4.001,4.001,.02,"DT")
3031226
"^DD",4.001,4.001,.03,0)
MFI CODE^RFX^^0;3^K:$L(X)>60!($L(X)<2) X
"^DD",4.001,4.001,.03,1,0)
^.1
"^DD",4.001,4.001,.03,1,1,0)
4.001^MFI
"^DD",4.001,4.001,.03,1,1,1)
S ^DIC(4.001,"MFI",$E(X,1,60),DA)=""
"^DD",4.001,4.001,.03,1,1,2)
K ^DIC(4.001,"MFI",$E(X,1,60),DA)
"^DD",4.001,4.001,.03,1,1,"%D",0)
^^1^1^3031223^
"^DD",4.001,4.001,.03,1,1,"%D",1,0)
This x-ref is the Master File Identifier (MFI).
"^DD",4.001,4.001,.03,1,1,"DT")
3031223
"^DD",4.001,4.001,.03,3)
Answer must be 2-60 characters in length.
"^DD",4.001,4.001,.03,21,0)
^^1^1^3031224^^
"^DD",4.001,4.001,.03,21,1,0)
This code identifies the master file.
"^DD",4.001,4.001,.03,"DT")
3041220
"^DD",4.001,4.001,.04,0)
PRE-UPDATE ROUTINE^RFX^^0;4^K:$L(X)>20!($L(X)<3) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,.04,3)
Enter the label of sub-routine in XUMFR to be executed prior to the MFS update.
"^DD",4.001,4.001,.04,21,0)
^^20^20^3031226^^^
"^DD",4.001,4.001,.04,21,1,0)
This field holds the label of the 
"^DD",4.001,4.001,.04,21,2,0)
sub-routine in XUMFR that gets called
"^DD",4.001,4.001,.04,21,3,0)
before an update by the MFS for a
"^DD",4.001,4.001,.04,21,4,0)
data type segment.  
"^DD",4.001,4.001,.04,21,5,0)
                                 
"^DD",4.001,4.001,.04,21,6,0)
Enter the label without '^XUMFR'.  The
"^DD",4.001,4.001,.04,21,7,0)
sub-routine can assume the presence of the
"^DD",4.001,4.001,.04,21,8,0)
variables IFN and IEN.  All local variables
"^DD",4.001,4.001,.04,21,9,0)
within the sub-routine must be NEW'd 
"^DD",4.001,4.001,.04,21,10,0)
before using them.
"^DD",4.001,4.001,.04,21,11,0)
                                 
"^DD",4.001,4.001,.04,21,12,0)
The default value for this field is 
"^DD",4.001,4.001,.04,21,13,0)
'PRE'.  The PRE sub-routine builds
"^DD",4.001,4.001,.04,21,14,0)
the current values of the entry in
"^DD",4.001,4.001,.04,21,15,0)
question (associated with the IEN)
"^DD",4.001,4.001,.04,21,16,0)
into an array (^TMP("XUMF PRE",$J,SEQ)
"^DD",4.001,4.001,.04,21,17,0)
=fieldLabel_": "_value). 
"^DD",4.001,4.001,.04,21,18,0)

"^DD",4.001,4.001,.04,21,19,0)
This field is required, so if you have
"^DD",4.001,4.001,.04,21,20,0)
no processing use NULL.
"^DD",4.001,4.001,.04,"DT")
3031226
"^DD",4.001,4.001,.05,0)
POST-UPDATE ROUTINE^FX^^0;5^K:$L(X)>20!($L(X)<3) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,.05,3)
Enter the label of sub-routine in XUMFR to be executed after MFS updates.
"^DD",4.001,4.001,.05,21,0)
^.001^18^18^3050516^^^^
"^DD",4.001,4.001,.05,21,1,0)
This field holds the label of the sub-routine in XUMFR that gets called
"^DD",4.001,4.001,.05,21,2,0)
after an update by the MFS for a data type segment.
"^DD",4.001,4.001,.05,21,3,0)
 
"^DD",4.001,4.001,.05,21,4,0)
Enter the label without '^XUMFR'.  The sub-routine can assume the presence
"^DD",4.001,4.001,.05,21,5,0)
of the variables IFN and IEN.  All local variables within the sub-routine
"^DD",4.001,4.001,.05,21,6,0)
must be NEW'd before using them.
"^DD",4.001,4.001,.05,21,7,0)
 
"^DD",4.001,4.001,.05,21,8,0)
The default value for this field is 'POST'.  The POST sub-routine builds
"^DD",4.001,4.001,.05,21,9,0)
the new values of the entry in question (associated with the IEN) and
"^DD",4.001,4.001,.05,21,10,0)
compares them against the previous values (prior to update) to determine
"^DD",4.001,4.001,.05,21,11,0)
if any values changed.  If the values have changed a MailMan notification
"^DD",4.001,4.001,.05,21,12,0)
is sent to the XUMF SERVER mail group and the group identified by MAIL
"^DD",4.001,4.001,.05,21,13,0)
GROUP of this MASTER FILE PARAMERS entry.
"^DD",4.001,4.001,.05,21,14,0)
 
"^DD",4.001,4.001,.05,21,15,0)
Note: if the post-update routine calls POST^XUMFR then pre-update routine
"^DD",4.001,4.001,.05,21,16,0)
must call PRE^XUMFR.
"^DD",4.001,4.001,.05,21,17,0)

"^DD",4.001,4.001,.05,21,18,0)
This field is required, so if you have no processing use NULL.
"^DD",4.001,4.001,.05,"DT")
3050516
"^DD",4.001,4.001,.06,0)
MAIL GROUP^P3.8X^XMB(3.8,^0;6^K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,.06,3)
Enter the mail group that will receive update notifications.
"^DD",4.001,4.001,.06,21,0)
^^3^3^3031224^^
"^DD",4.001,4.001,.06,21,1,0)
This mail group will be notified when an HL7 unsolicited update
"^DD",4.001,4.001,.06,21,2,0)
message is received from the MFS server.  This group will be notified
"^DD",4.001,4.001,.06,21,3,0)
in addition to the group XUMF SERVER.
"^DD",4.001,4.001,.06,"DT")
3031226
"^DD",4.001,4.001,.07,0)
MASTER FILE IDENTIFIER^F^^0;7^K:$L(X)>30!($L(X)<2) X
"^DD",4.001,4.001,.07,1,0)
^.1
"^DD",4.001,4.001,.07,1,1,0)
4.001^MFID
"^DD",4.001,4.001,.07,1,1,1)
S ^DIC(4.001,"MFID",$E(X,1,30),DA)=""
"^DD",4.001,4.001,.07,1,1,2)
K ^DIC(4.001,"MFID",$E(X,1,30),DA)
"^DD",4.001,4.001,.07,1,1,"%D",0)
^^2^2^3060516^
"^DD",4.001,4.001,.07,1,1,"%D",1,0)
This identifier is used in the HL7 segment to identify the file
"^DD",4.001,4.001,.07,1,1,"%D",2,0)
to be updated.
"^DD",4.001,4.001,.07,1,1,"DT")
3060516
"^DD",4.001,4.001,.07,3)
Answer must be 2-30 characters in length.
"^DD",4.001,4.001,.07,9)
@
"^DD",4.001,4.001,.07,21,0)
^^1^1^3060516^
"^DD",4.001,4.001,.07,21,1,0)
This field identifies the file to be updated.
"^DD",4.001,4.001,.07,"DT")
3060516
"^DD",4.001,4.001,1,0)
COLUMN^4.011^^1;0
"^DD",4.001,4.001,1,21,0)
^.001^4^4^3040420^^^^
"^DD",4.001,4.001,1,21,1,0)
The COLUMN DESCRIPTION multiple maps the data type segment fields
"^DD",4.001,4.001,1,21,2,0)
and components to FileMan fields for a standard table.  There are
"^DD",4.001,4.001,1,21,3,0)
additional fields within the sub-file to handle multiple field types
"^DD",4.001,4.001,1,21,4,0)
and extended references.
"^DD",4.001,4.001,1,"DT")
3040420
"^DD",4.001,4.001,2,0)
POST-PROCESSING LOGIC^K^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",4.001,4.001,2,3)
This is Standard MUMPS code.
"^DD",4.001,4.001,2,9)
@
"^DD",4.001,4.001,2,21,0)
^^1^1^3060207^
"^DD",4.001,4.001,2,21,1,0)
This is Standard MUMPS code that gets executed after message processing.
"^DD",4.001,4.001,2,"DT")
3060207
"^DD",4.001,4.001,3,0)
ADD-PROCESSING LOGIC^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",4.001,4.001,3,3)
This is Standard MUMPS code.
"^DD",4.001,4.001,3,9)
@
"^DD",4.001,4.001,3,21,0)
^^1^1^3060207^
"^DD",4.001,4.001,3,21,1,0)
This is Standard MUMPS code that gets executed before message processing.
"^DD",4.001,4.001,3,"DT")
3060522
"^DD",4.001,4.001,4,0)
MFE-PROCESSING LOGIC^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",4.001,4.001,4,3)
This is Standard MUMPS code.
"^DD",4.001,4.001,4,9)
@
"^DD",4.001,4.001,4,21,0)
^^1^1^3060207^
"^DD",4.001,4.001,4,21,1,0)
This is Standard MUMPS code that gets executed for each MFE segment.
"^DD",4.001,4.001,4,"DT")
3060207
"^DD",4.001,4.001,4.1,0)
MFE ID FIELD^RRNJ17,7X^^MFE;1^Q
"^DD",4.001,4.001,4.1,3)
Enter the field # that corresponds to the PKV id.
"^DD",4.001,4.001,4.1,21,0)
^^5^5^3031224^
"^DD",4.001,4.001,4.1,21,1,0)
This field holds the field number that corresponds to the ID
"^DD",4.001,4.001,4.1,21,2,0)
of the Primary Key Value in MFE.
"^DD",4.001,4.001,4.1,21,3,0)
 
"^DD",4.001,4.001,4.1,21,4,0)
This field # is the SDS field added to the file to store the internal
"^DD",4.001,4.001,4.1,21,5,0)
identifier to the SDS database.
"^DD",4.001,4.001,4.1,"DT")
3031230
"^DD",4.001,4.001,4.11,0)
MFE ID TYPE^RP771.4'X^HL(771.4,^MFE;11^K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.11,3)
Enter HL7 data type.
"^DD",4.001,4.001,4.11,21,0)
^^1^1^3031224^
"^DD",4.001,4.001,4.11,21,1,0)
MFE ID HL7 data type.
"^DD",4.001,4.001,4.11,"DT")
3031226
"^DD",4.001,4.001,4.12,0)
MFE TEXT TYPE^RP771.4'X^HL(771.4,^MFE;12^K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.12,3)
Enter the HL7 data type.
"^DD",4.001,4.001,4.12,21,0)
^^1^1^3031224^
"^DD",4.001,4.001,4.12,21,1,0)
Enter the MFE TEXT HL7 data type.
"^DD",4.001,4.001,4.12,"DT")
3031226
"^DD",4.001,4.001,4.14,0)
MFE ALT ID TYPE^RP771.4'X^HL(771.4,^MFE;14^K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.14,3)
Enter the HL7 data type.
"^DD",4.001,4.001,4.14,21,0)
^^1^1^3031224^
"^DD",4.001,4.001,4.14,21,1,0)
Enter the MFE ID HL7 data type.
"^DD",4.001,4.001,4.14,"DT")
3031226
"^DD",4.001,4.001,4.15,0)
MFE ALT TEXT TYPE^RP771.4'X^HL(771.4,^MFE;15^K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.15,3)
Enter the HL7 data type.
"^DD",4.001,4.001,4.15,21,0)
^^1^1^3031224^
"^DD",4.001,4.001,4.15,21,1,0)
Enter the MFE ALT TEXT HL7 data type.
"^DD",4.001,4.001,4.15,"DT")
3031226
"^DD",4.001,4.001,4.16,0)
MFE PRE-UPDATE ROUTINE^RFX^^MFE;16^K:$L(X)>8!($L(X)<2) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.16,3)
Enter the subroutine label that executes prior to MFE.
"^DD",4.001,4.001,4.16,21,0)
^.001^6^6^3050516^^
"^DD",4.001,4.001,4.16,21,1,0)
This field holds the label of the sub-routine in XUMFRMFE that gets called
"^DD",4.001,4.001,4.16,21,2,0)
before an update by the MFS for an MFE segment.
"^DD",4.001,4.001,4.16,21,3,0)
 
"^DD",4.001,4.001,4.16,21,4,0)
Enter the label without '^XUMFRMFE'.  The sub-routine can assume the presence
"^DD",4.001,4.001,4.16,21,5,0)
of the variable IFN.  All local variables within the sub-routine
"^DD",4.001,4.001,4.16,21,6,0)
must be NEW'd before using the.
"^DD",4.001,4.001,4.16,"DT")
3031226
"^DD",4.001,4.001,4.17,0)
MFE POST-UPDATE ROUTINE^RFX^^MFE;17^K:$L(X)>8!($L(X)<2) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.17,3)
Enter the subroutine label that executes after the MFE segment.
"^DD",4.001,4.001,4.17,21,0)
^.001^6^6^3050516^^
"^DD",4.001,4.001,4.17,21,1,0)
This field holds the label of the sub-routine in XUMFRMFE that gets called
"^DD",4.001,4.001,4.17,21,2,0)
after an update by the MFS for an MFE segment.                             
"^DD",4.001,4.001,4.17,21,3,0)
 
"^DD",4.001,4.001,4.17,21,4,0)
Enter the label without '^XUMFRMFE'.  The sub-routine can assume the presence
"^DD",4.001,4.001,4.17,21,5,0)
of the variables IFN and IEN.  All local variables within the sub-routine
"^DD",4.001,4.001,4.17,21,6,0)
must be NEW'd before using them.
"^DD",4.001,4.001,4.17,"DT")
3031226
"^DD",4.001,4.001,4.2,0)
MFE TEXT FIELD^RNJ17,7X^^MFE;2^Q
"^DD",4.001,4.001,4.2,3)
Enter the field # that corresponds to the PKV text.
"^DD",4.001,4.001,4.2,21,0)
^^2^2^3031224^^
"^DD",4.001,4.001,4.2,21,1,0)
This field holds the field number that corresponds to the TEXT
"^DD",4.001,4.001,4.2,21,2,0)
of the Primary Key Value in MFE.
"^DD",4.001,4.001,4.2,"DT")
3031230
"^DD",4.001,4.001,4.3,0)
MFE CODSYS^RFX^^MFE;3^K:$L(X)>20!($L(X)<1) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.3,3)
Enter the coding system for the MFE ID.
"^DD",4.001,4.001,4.3,21,0)
^^2^2^3031224^^
"^DD",4.001,4.001,4.3,21,1,0)
This field holds the coding system that corresponds to the ID
"^DD",4.001,4.001,4.3,21,2,0)
of the Primary Key Value in MFE.
"^DD",4.001,4.001,4.3,"DT")
3031226
"^DD",4.001,4.001,4.4,0)
MFE ALT ID FIELD^RNJ17,7X^^MFE;4^Q
"^DD",4.001,4.001,4.4,3)
Enter the field # that corresponds to the PKV alternate id.
"^DD",4.001,4.001,4.4,21,0)
^^7^7^3031224^
"^DD",4.001,4.001,4.4,21,1,0)
This field holds the field number that corresponds to the
"^DD",4.001,4.001,4.4,21,2,0)
alternate ID of the Primary Key Value in MFE.
"^DD",4.001,4.001,4.4,21,3,0)
 
"^DD",4.001,4.001,4.4,21,4,0)
The field # should be a key field to the file (not the SDS identifier
"^DD",4.001,4.001,4.4,21,5,0)
field).  This field will be used by MFS to determine which entry in
"^DD",4.001,4.001,4.4,21,6,0)
the file corresponds to the PKV id if it hasn't been already associated.
"^DD",4.001,4.001,4.4,21,7,0)
Ideally, this field is a unique key to the file.
"^DD",4.001,4.001,4.4,"DT")
3031230
"^DD",4.001,4.001,4.5,0)
MFE ALT TEXT FIELD^RNJ17,7X^^MFE;5^Q
"^DD",4.001,4.001,4.5,3)
Enter the field # that corresponds to the PKV alternate text.
"^DD",4.001,4.001,4.5,21,0)
^^2^2^3031224^
"^DD",4.001,4.001,4.5,21,1,0)
This field holds the field number that corresponds to the
"^DD",4.001,4.001,4.5,21,2,0)
alternate TEXT of the Primary Key Value in MFE.
"^DD",4.001,4.001,4.5,"DT")
3031230
"^DD",4.001,4.001,4.6,0)
MFE ALT CODSYS^RFX^^MFE;6^K:$L(X)>20!($L(X)<2) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.6,3)
Enter the alternate coding system of the PKV.
"^DD",4.001,4.001,4.6,21,0)
^.001^2^2^3050331^^
"^DD",4.001,4.001,4.6,21,1,0)
This field holds the alternate coding system that corresponds
"^DD",4.001,4.001,4.6,21,2,0)
to the ID of the Primary Key Value in MFE.
"^DD",4.001,4.001,4.6,"DT")
3031226
"^DD",4.001,4.001,4.7,0)
MFE PKV TYPE^RP771.4'X^HL(771.4,^MFE;7^K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.7,3)
Enter the PKV type (i.e., CE or PL) CE or Composite Element.
"^DD",4.001,4.001,4.7,21,0)
^^3^3^3031224^^
"^DD",4.001,4.001,4.7,21,1,0)
This field holds the Primary Key Value data
"^DD",4.001,4.001,4.7,21,2,0)
type.  Valid values stored in HL7 Table 0355 -
"^DD",4.001,4.001,4.7,21,3,0)
Primary key value type.
"^DD",4.001,4.001,4.7,"DT")
3031226
"^DD",4.001,4.001,4.8,0)
MFE PKV X-REF^RFX^^MFE;8^K:$L(X)>10!($L(X)<1) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.8,3)
Enter the FM x-ref of non-SDS key field - MFE.4.4
"^DD",4.001,4.001,4.8,21,0)
^^6^6^3031224^^
"^DD",4.001,4.001,4.8,21,1,0)
This field hold the FileMan cross-reference of
"^DD",4.001,4.001,4.8,21,2,0)
the Primary Key Value (PKV).
"^DD",4.001,4.001,4.8,21,3,0)
 
"^DD",4.001,4.001,4.8,21,4,0)
Since MFE.4.1 is the SDS internal identifier then provide
"^DD",4.001,4.001,4.8,21,5,0)
the alternate ID (MFE.4.4) cross-reference.  The natural
"^DD",4.001,4.001,4.8,21,6,0)
FileMan key x-ref that corresponds to the alt id.
"^DD",4.001,4.001,4.8,"DT")
3031226
"^DD",4.001,4.001,4.9,0)
ASSIGNING AUTHORITY^RFX^^MFE;9^K:$L(X)>20!($L(X)<2) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.9,3)
Enter the entity responsible for assigning IDs for coding system.
"^DD",4.001,4.001,4.9,21,0)
^^11^11^3031226^^^
"^DD",4.001,4.001,4.9,21,1,0)
This field holds the assigning authority responsible for
"^DD",4.001,4.001,4.9,21,2,0)
the code system used in the HL7 MFE PKV segment sequence.
"^DD",4.001,4.001,4.9,21,3,0)
 
"^DD",4.001,4.001,4.9,21,4,0)
See QRD segment.  Who Subject Filter.
"^DD",4.001,4.001,4.9,21,5,0)

"^DD",4.001,4.001,4.9,21,6,0)
This field holds the code that identifies the standards
"^DD",4.001,4.001,4.9,21,7,0)
body, or in the case of VA specific data the routing
"^DD",4.001,4.001,4.9,21,8,0)
symbol (or other identifying code) of the data owner of
"^DD",4.001,4.001,4.9,21,9,0)
steward.
"^DD",4.001,4.001,4.9,21,10,0)

"^DD",4.001,4.001,4.9,21,11,0)
If all else fails, use 'VA' as the code.
"^DD",4.001,4.001,4.9,"DT")
3031226
"^DD",4.001,4.001,5,0)
ZRT-PROCESSING LOGIC^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",4.001,4.001,5,3)
This is Standard MUMPS code.
"^DD",4.001,4.001,5,9)
@
"^DD",4.001,4.001,5,21,0)
^^1^1^3060207^
"^DD",4.001,4.001,5,21,1,0)
This is Standard MUMPS code that gets executed for each ZRT segment.
"^DD",4.001,4.001,5,"DT")
3060207
"^DD",4.001,4.011,0)
COLUMN SUB-FIELD^^1^16
"^DD",4.001,4.011,0,"DT")
3060525
"^DD",4.001,4.011,0,"IX","ASEQ",4.011,.15)

"^DD",4.001,4.011,0,"IX","B",4.011,.01)

"^DD",4.001,4.011,0,"NM","COLUMN")

"^DD",4.001,4.011,0,"UP")
4.001
"^DD",4.001,4.011,.01,0)
COLUMN DESCRIPTION^MF^^0;1^K:$L(X)>40!($L(X)<1) X
"^DD",4.001,4.011,.01,1,0)
^.1
"^DD",4.001,4.011,.01,1,1,0)
4.011^B
"^DD",4.001,4.011,.01,1,1,1)
S ^DIC(4.001,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",4.001,4.011,.01,1,1,2)
K ^DIC(4.001,DA(1),1,"B",$E(X,1,30),DA)
"^DD",4.001,4.011,.01,3)
Answer must be 1-40 characters in length.
"^DD",4.001,4.011,.01,21,0)
^.001^21^21^3040420^^^^
"^DD",4.001,4.011,.01,21,1,0)
The column description is the identifier that
"^DD",4.001,4.011,.01,21,2,0)
names the data element that gets mapped to a
"^DD",4.001,4.011,.01,21,3,0)
FileMan field.  The RDF segment (table row 
"^DD",4.001,4.011,.01,21,4,0)
definition) has a field (the 3rd sequence) that
"^DD",4.001,4.011,.01,21,5,0)
is a repeating element.  The 1st component of
"^DD",4.001,4.011,.01,21,6,0)
the element is the column description.  It is
"^DD",4.001,4.011,.01,21,7,0)
the column name in central repository master
"^DD",4.001,4.011,.01,21,8,0)
table.
"^DD",4.001,4.011,.01,21,9,0)

"^DD",4.001,4.011,.01,21,10,0)
(The 2nd component is the HL7 data type.  The
"^DD",4.001,4.011,.01,21,11,0)
3rd component is the length of the field.) 
"^DD",4.001,4.011,.01,21,12,0)
                                
"^DD",4.001,4.011,.01,21,13,0)
The RDF segment defines the format of
"^DD",4.001,4.011,.01,21,14,0)
subsequent RDT segment (table row data).  The
"^DD",4.001,4.011,.01,21,15,0)
sequence of column description fields in the
"^DD",4.001,4.011,.01,21,16,0)
RDF segment maps the sequence of the
"^DD",4.001,4.011,.01,21,17,0)
corresponding data values in the RDT segment.
"^DD",4.001,4.011,.01,21,18,0)

"^DD",4.001,4.011,.01,21,19,0)
(The 2nd field of the RDF segment is the number
"^DD",4.001,4.011,.01,21,20,0)
of columns or data elements passed in the RDF
"^DD",4.001,4.011,.01,21,21,0)
and RDT segments.) 
"^DD",4.001,4.011,.01,"DT")
3040420
"^DD",4.001,4.011,.02,0)
FIELD NUMBER^RNJ17,7X^^0;2^K:+X'=X!(X>999999999)!(X<.01)!(X?.E1"."8N.N) X ;  K:'$$ECHO^XUMF(DA(1),DA,X,+$G(XUMF)) X
"^DD",4.001,4.011,.02,3)
Enter the field number for the data element.
"^DD",4.001,4.011,.02,21,0)
^.001^6^6^3031224^^^
"^DD",4.001,4.011,.02,21,1,0)
This field holds the FileMan field number that corresponds to
"^DD",4.001,4.011,.02,21,2,0)
the segment sequence number in question.
"^DD",4.001,4.011,.02,21,3,0)
 
"^DD",4.001,4.011,.02,21,4,0)
If this sequence component maps to a FileMan sub-file (multiple)
"^DD",4.001,4.011,.02,21,5,0)
then the SUBFILE NUMBER (#.04) is required before FIELD NUMBER to
"^DD",4.001,4.011,.02,21,6,0)
be able to validate (input transform.)
"^DD",4.001,4.011,.02,"DT")
3040420
"^DD",4.001,4.011,.03,0)
HL7 DATA TYPE^RP771.4'X^HL(771.4,^0;3^;K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.011,.03,3)
Enter the HL7 data type.
"^DD",4.001,4.011,.03,21,0)
^^1^1^3031224^
"^DD",4.001,4.011,.03,21,1,0)
This field holds the HL7 data type of the sequence.
"^DD",4.001,4.011,.03,"DT")
3040420
"^DD",4.001,4.011,.04,0)
SUBFILE NUMBER^NJ17,7X^^0;4^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."8.N) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.011,.04,3)
If multiple field, enter sub-file number.
"^DD",4.001,4.011,.04,21,0)
^^2^2^3031224^
"^DD",4.001,4.011,.04,21,1,0)
This field holds the FileMan sub-file number.  ONLY if FIELD NUMBER
"^DD",4.001,4.011,.04,21,2,0)
relates to a field in a multiple.
"^DD",4.001,4.011,.04,"DT")
3031226
"^DD",4.001,4.011,.05,0)
SUBFILE LKUP LITERAL^FX^^0;5^K:$L(X)>30!($L(X)<2) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.011,.05,3)
If subfile and .01 not in HL7 segment, enter literal value of the .01
"^DD",4.001,4.011,.05,21,0)
^^9^9^3031224^^
"^DD",4.001,4.011,.05,21,1,0)
If this sequence is a field in a subfile and the .01 of the multiple
"^DD",4.001,4.011,.05,21,2,0)
is not included in the HL7 segment but is some literal, then provide
"^DD",4.001,4.011,.05,21,3,0)
the literal string here.
"^DD",4.001,4.011,.05,21,4,0)
 
"^DD",4.001,4.011,.05,21,5,0)
If SUBFILE LKUP LITERAL is NULL then SUBFILE LKUP SEQUENCE must not
"^DD",4.001,4.011,.05,21,6,0)
be NULL.
"^DD",4.001,4.011,.05,21,7,0)

"^DD",4.001,4.011,.05,21,8,0)
If SUBFILE LKUP LITERAL is not NULL then SUBFILE LKUP SEQUENCE must
"^DD",4.001,4.011,.05,21,9,0)
be NULL.
"^DD",4.001,4.011,.05,"DT")
3031226
"^DD",4.001,4.011,.06,0)
SUBFILE LKUP COLUMN^F^^0;6^K:$L(X)>40!($L(X)<1) X
"^DD",4.001,4.011,.06,3)
Enter the COLUMN DESCRIPTION identifier that is the lookup (.01) to this field
"^DD",4.001,4.011,.06,21,0)
^.001^11^11^3050519^^^^
"^DD",4.001,4.011,.06,21,1,0)
If the FIELD NUMBER is associated with a multiple field, then this
"^DD",4.001,4.011,.06,21,2,0)
field holds the COLUMN DESCRIPTION of the .01 field of the multiple. 
"^DD",4.001,4.011,.06,21,3,0)
 
"^DD",4.001,4.011,.06,21,4,0)
If the .01 field is not a sequence, then leave this field blank and
"^DD",4.001,4.011,.06,21,5,0)
provide a value for SUBFILE LKUP LITERAL.
"^DD",4.001,4.011,.06,21,6,0)
 
"^DD",4.001,4.011,.06,21,7,0)
If SUBFILE LKUP LITERAL is NULL then SUBFILE LKUP SEQUENCE must not
"^DD",4.001,4.011,.06,21,8,0)
be NULL.
"^DD",4.001,4.011,.06,21,9,0)

"^DD",4.001,4.011,.06,21,10,0)
If SUBFILE LKUP LITERAL is not NULL then SUBFILE LKUP SEQUENCE must
"^DD",4.001,4.011,.06,21,11,0)
be NULL.
"^DD",4.001,4.011,.06,"DT")
3040525
"^DD",4.001,4.011,.07,0)
EXTENDED POINTER LKUP^NJ17,7X^^0;7^K:+X'=X!(X>999999999)!(X<.01)!(X?.E1"."8.N) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.011,.07,3)
Enter the field number which is the key to the extended reference of FIELD NAME if other than .01
"^DD",4.001,4.011,.07,21,0)
^.001^8^8^3050516^^
"^DD",4.001,4.011,.07,21,1,0)
If FIELD NUMBER is a pointer and you want to look-up
"^DD",4.001,4.011,.07,21,2,0)
the entry by a field other than its .01, then enter
"^DD",4.001,4.011,.07,21,3,0)
that field number.
"^DD",4.001,4.011,.07,21,4,0)

"^DD",4.001,4.011,.07,21,5,0)
Example: Parent facility, in the association multiple
"^DD",4.001,4.011,.07,21,6,0)
of the Institution file points to Institution.  The
"^DD",4.001,4.011,.07,21,7,0)
Institution NAME may not be unique.  It would be more
"^DD",4.001,4.011,.07,21,8,0)
useful to look-up the Institution by STATION NUMBER.
"^DD",4.001,4.011,.07,"DT")
3031226
"^DD",4.001,4.011,.08,0)
LIST^S^1:YES;0:NO;^0;8^Q
"^DD",4.001,4.011,.08,3)
Is this a member of a sub-file to be compared against the message
"^DD",4.001,4.011,.08,"DT")
3060413
"^DD",4.001,4.011,.09,0)
COLUMN LENGTH^RNJ2,0^^0;9^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",4.001,4.011,.09,3)
Type the maximum column width
"^DD",4.001,4.011,.09,21,0)
^.001^4^4^3040525^^^^
"^DD",4.001,4.011,.09,21,1,0)
This field holds the maximum column width of the column in question.
"^DD",4.001,4.011,.09,21,2,0)
The column description is the 3rd sequence of the RDF segment.  It
"^DD",4.001,4.011,.09,21,3,0)
is a repeating element.  The maximum column width is the 3rd component
"^DD",4.001,4.011,.09,21,4,0)
of the element.
"^DD",4.001,4.011,.09,"DT")
3040525
"^DD",4.001,4.011,.11,0)
REPEATING FIELD^S^1:YES;0:NO;^0;11^Q
"^DD",4.001,4.011,.11,21,0)
^^5^5^3040817^
"^DD",4.001,4.011,.11,21,1,0)
If this field is repeating - a single valued multiple (a multiple
"^DD",4.001,4.011,.11,21,2,0)
field with only a .01 field) - field, then set the flag to YES.
"^DD",4.001,4.011,.11,21,3,0)

"^DD",4.001,4.011,.11,21,4,0)
If the multiple should be cleaned out first, then also set the CLEAN
"^DD",4.001,4.011,.11,21,5,0)
MULTIPLE flag too.
"^DD",4.001,4.011,.11,"DT")
3040817
"^DD",4.001,4.011,.12,0)
CLEAN MULTIPLE^S^1:YES;0:NO;^0;12^Q
"^DD",4.001,4.011,.12,3)
delete existing values before updating
"^DD",4.001,4.011,.12,21,0)
^^6^6^3040817^
"^DD",4.001,4.011,.12,21,1,0)
If this field is a single valued repeating element (see REPEATING FIELD)
"^DD",4.001,4.011,.12,21,2,0)
and the existing values should be deleted before the update occurs, then
"^DD",4.001,4.011,.12,21,3,0)
set this flag to YES.
"^DD",4.001,4.011,.12,21,4,0)

"^DD",4.001,4.011,.12,21,5,0)
By setting this flag, you indicate all the valid data is contained within
"^DD",4.001,4.011,.12,21,6,0)
the incoming message, so purge existing values and start clean.
"^DD",4.001,4.011,.12,"DT")
3040817
"^DD",4.001,4.011,.13,0)
VUID PREFIX^F^^0;13^K:$L(X)>10!($L(X)<1) X
"^DD",4.001,4.011,.13,3)
Enter string (i.e. "VUID") to indicate VUID value is passed instead of VALUE
"^DD",4.001,4.011,.13,21,0)
^.001^7^7^3050516^^
"^DD",4.001,4.011,.13,21,1,0)
String indicates that the field is a Pointer, and
"^DD",4.001,4.011,.13,21,2,0)
the VUID may be used instead of the value (.01).
"^DD",4.001,4.011,.13,21,3,0)

"^DD",4.001,4.011,.13,21,4,0)
Example:  Instead of Drug Class name, you may be use
"^DD",4.001,4.011,.13,21,5,0)
the VUID of the drug class such as "VUID123456", where
"^DD",4.001,4.011,.13,21,6,0)
123456 is the VUID of the Drug Class and "VUID" is the
"^DD",4.001,4.011,.13,21,7,0)
prefix.
"^DD",4.001,4.011,.13,"DT")
3041019
"^DD",4.001,4.011,.14,0)
TIME ZONE FLAG^S^L:LOCAL;U:UTC;^0;14^Q
"^DD",4.001,4.011,.14,3)
Should the local or UTC time be filed?
"^DD",4.001,4.011,.14,21,0)
^.001^7^7^3050317^^^^
"^DD",4.001,4.011,.14,21,1,0)
If this column/field represents a date data type then MFS
"^DD",4.001,4.011,.14,21,2,0)
needs to know how to handle the time zone.
"^DD",4.001,4.011,.14,21,3,0)
 
"^DD",4.001,4.011,.14,21,4,0)
This field indicates how FileMan should file the HL7 date --
"^DD",4.001,4.011,.14,21,5,0)
local time or UTC time.
"^DD",4.001,4.011,.14,21,6,0)

"^DD",4.001,4.011,.14,21,7,0)
Note: VUID effective date/time should always be flagged LOCAL.
"^DD",4.001,4.011,.14,"DT")
3050317
"^DD",4.001,4.011,.15,0)
SEQUENCE^NJ3,0^^0;15^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",4.001,4.011,.15,1,0)
^.1
"^DD",4.001,4.011,.15,1,1,0)
4.011^ASEQ
"^DD",4.001,4.011,.15,1,1,1)
S ^DIC(4.001,DA(1),1,"ASEQ",$E(X,1,30),DA)=""
"^DD",4.001,4.011,.15,1,1,2)
K ^DIC(4.001,DA(1),1,"ASEQ",$E(X,1,30),DA)
"^DD",4.001,4.011,.15,1,1,"%D",0)
^^2^2^3060301^
"^DD",4.001,4.011,.15,1,1,"%D",1,0)
The sequence number of the data segments returned in a query.  
"^DD",4.001,4.011,.15,1,1,"%D",2,0)
Sub-file entries should use fractional digits to group data.
"^DD",4.001,4.011,.15,1,1,"DT")
3060301
"^DD",4.001,4.011,.15,3)
Type a Number between 1 and 999
"^DD",4.001,4.011,.15,21,0)
^^6^6^3060306^
"^DD",4.001,4.011,.15,21,1,0)
The sequence number of the data segments returned in a query.
"^DD",4.001,4.011,.15,21,2,0)
 
"^DD",4.001,4.011,.15,21,3,0)
If this field is a Sub-file record, enter the sequence of the .01.
"^DD",4.001,4.011,.15,21,4,0)
If the sequence has associated sub-record fields, use the SUBFILE
"^DD",4.001,4.011,.15,21,5,0)
SEQUENCE of this sequence number to sequence the fields of the
"^DD",4.001,4.011,.15,21,6,0)
sub-record.
"^DD",4.001,4.011,.15,"DT")
3060306
"^DD",4.001,4.011,.16,0)
WP FIELD^S^1:YES;0:NO;^0;16^Q
"^DD",4.001,4.011,.16,3)
Is this a Word Processing field
"^DD",4.001,4.011,.16,21,0)
^^2^2^3060511^
"^DD",4.001,4.011,.16,21,1,0)
If this field is a word processing field then set this flag
"^DD",4.001,4.011,.16,21,2,0)
to YES.
"^DD",4.001,4.011,.16,"DT")
3060511
"^DD",4.001,4.011,1,0)
SUBFILE SEQUENCE^4.111^^1;0
"^DD",4.001,4.111,0)
SUBFILE SEQUENCE SUB-FIELD^^.05^5
"^DD",4.001,4.111,0,"DT")
3060525
"^DD",4.001,4.111,0,"IX","ASEQ1",4.111,.01)

"^DD",4.001,4.111,0,"IX","B",4.111,.01)

"^DD",4.001,4.111,0,"NM","SUBFILE SEQUENCE")

"^DD",4.001,4.111,0,"UP")
4.011
"^DD",4.001,4.111,.01,0)
SUBFILE SEQUENCE^MNJ2,0^^0;1^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",4.001,4.111,.01,1,0)
^.1
"^DD",4.001,4.111,.01,1,1,0)
4.111^B
"^DD",4.001,4.111,.01,1,1,1)
S ^DIC(4.001,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",4.001,4.111,.01,1,1,2)
K ^DIC(4.001,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",4.001,4.111,.01,1,2,0)
4.111^ASEQ1
"^DD",4.001,4.111,.01,1,2,1)
S ^DIC(4.001,DA(2),1,DA(1),1,"ASEQ1",$E(X,1,30),DA)=""
"^DD",4.001,4.111,.01,1,2,2)
K ^DIC(4.001,DA(2),1,DA(1),1,"ASEQ1",$E(X,1,30),DA)
"^DD",4.001,4.111,.01,1,2,"DT")
3060306
"^DD",4.001,4.111,.01,3)
Type a Number between 1 and 99
"^DD",4.001,4.111,.01,21,0)
^^2^2^3060306^
"^DD",4.001,4.111,.01,21,1,0)
If the SEQUENCE is a subfile, and it has associated fields at the
"^DD",4.001,4.111,.01,21,2,0)
sub-file level, enter the sequence of sub-record fields.
"^DD",4.001,4.111,.01,"DT")
3060306
"^DD",4.001,4.111,.02,0)
SUBFILE COLUMN NAME^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",4.001,4.111,.02,.1)

"^DD",4.001,4.111,.02,3)
Enter the subfile field # to be returned.
"^DD",4.001,4.111,.02,21,0)
^^2^2^3060525^
"^DD",4.001,4.111,.02,21,1,0)
Enter the field name associated with the sub-file sequence for
"^DD",4.001,4.111,.02,21,2,0)
the sequence.
"^DD",4.001,4.111,.02,"DT")
3060525
"^DD",4.001,4.111,.03,0)
SUBFILE FIELD NUMBER^NJ19,9^^0;3^K:+X'=X!(X>999999999)!(X<.001)!(X?.E1"."10N.N) X
"^DD",4.001,4.111,.03,3)
Enter the field number.
"^DD",4.001,4.111,.03,21,0)
^^2^2^3060525^
"^DD",4.001,4.111,.03,21,1,0)
Enter the field name associated with the sub-file sequence
"^DD",4.001,4.111,.03,21,2,0)
for the sequence.
"^DD",4.001,4.111,.03,"DT")
3060525
"^DD",4.001,4.111,.04,0)
SUBFILE FIELD VUID^S^1:YES;^0;4^Q
"^DD",4.001,4.111,.04,21,0)
^^2^2^3060525^
"^DD",4.001,4.111,.04,21,1,0)
If this field references another file entry by VUID set the flag
"^DD",4.001,4.111,.04,21,2,0)
to YES, otherwise leave empty.
"^DD",4.001,4.111,.04,"DT")
3060525
"^DD",4.001,4.111,.05,0)
SUBFILE FIELD TYPE^F^^0;5^K:$L(X)>2!($L(X)<2) X
"^DD",4.001,4.111,.05,3)
Enter the 2 character HL7 data type.
"^DD",4.001,4.111,.05,21,0)
^^1^1^3060525^
"^DD",4.001,4.111,.05,21,1,0)
This is the HL7 data type of the field.  The default is ST (string).
"^DD",4.001,4.111,.05,"DT")
3060525
"^DD",8925.1,8925.1,1501,0)
VHA ENTERPRISE STANDARD TITLE^*P8926.1'^TIU(8926.1,^15;1^S DIC("S")="I '$$SCREEN^XTID(8926.1,"""",Y_"","")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",8925.1,8925.1,1501,1,0)
^.1
"^DD",8925.1,8925.1,1501,1,1,0)
8925.1^ALOINC
"^DD",8925.1,8925.1,1501,1,1,1)
S ^TIU(8925.1,"ALOINC",$E(X,1,30),DA)=""
"^DD",8925.1,8925.1,1501,1,1,2)
K ^TIU(8925.1,"ALOINC",$E(X,1,30),DA)
"^DD",8925.1,8925.1,1501,1,1,3)
** DO NOT DELETE **
"^DD",8925.1,8925.1,1501,1,1,"%D",0)
^^2^2^3070306^
"^DD",8925.1,8925.1,1501,1,1,"%D",1,0)
This REGULAR FileMan cross-reference will facilitate searching by VHA
"^DD",8925.1,8925.1,1501,1,1,"%D",2,0)
Enterprise Standard Titles.
"^DD",8925.1,8925.1,1501,1,1,"DT")
3070306
"^DD",8925.1,8925.1,1501,3)
Please identify the VHA Enterprise Title to which this local title should be mapped.
"^DD",8925.1,8925.1,1501,12)
Only ACTIVE Enterprise Titles may be selected.
"^DD",8925.1,8925.1,1501,12.1)
S DIC("S")="I '$$SCREEN^XTID(8926.1,"""",Y_"","")"
"^DD",8925.1,8925.1,1501,21,0)
^.001^2^2^3070321^^
"^DD",8925.1,8925.1,1501,21,1,0)
This reference to the VHA ENTERPRISE STANDARD TITLE FILE provides for the
"^DD",8925.1,8925.1,1501,21,2,0)
mapping of local titles to the Enterprise Standard Titles.
"^DD",8925.1,8925.1,1501,"DT")
3070321
"^DD",8926.1,8926.1,.01,0)
STANDARD TITLE^RF^^0;1^K:$L(X)>90!($L(X)<3)!'(X'?1P.E) X
"^DD",8926.1,8926.1,.01,.1)
VHA ENTERPRISE NAME
"^DD",8926.1,8926.1,.01,1,0)
^.1
"^DD",8926.1,8926.1,.01,1,1,0)
8926.1^B
"^DD",8926.1,8926.1,.01,1,1,1)
S ^TIU(8926.1,"B",$E(X,1,90),DA)=""
"^DD",8926.1,8926.1,.01,1,1,2)
K ^TIU(8926.1,"B",$E(X,1,90),DA)
"^DD",8926.1,8926.1,.01,1,1,3)
** DO NOT DELETE **
"^DD",8926.1,8926.1,.01,1,1,"%D",0)
^^2^2^3060322^
"^DD",8926.1,8926.1,.01,1,1,"%D",1,0)
This Regular FileMan cross-reference will facilitate look-up and sorting 
"^DD",8926.1,8926.1,.01,1,1,"%D",2,0)
by VHA Enterprise Standard Title.
"^DD",8926.1,8926.1,.01,1,2,0)
8926.1^KWIC^KWIC
"^DD",8926.1,8926.1,.01,1,2,1)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,90),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^TIU(8926.1,"KWIC",I,DA)=""
"^DD",8926.1,8926.1,.01,1,2,2)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,90),%1=%+1 I $L(I)>2 K ^TIU(8926.1,"KWIC",I,DA)
"^DD",8926.1,8926.1,.01,1,2,3)
** DO NOT DELETE **
"^DD",8926.1,8926.1,.01,1,2,"%D",0)
^^2^2^3051028^
"^DD",8926.1,8926.1,.01,1,2,"%D",1,0)
This Key Word In Context (KWIC) cross-reference will facilitate look-up 
"^DD",8926.1,8926.1,.01,1,2,"%D",2,0)
by partial names.
"^DD",8926.1,8926.1,.01,1,2,"DT")
3051028
"^DD",8926.1,8926.1,.01,3)
Answer must be 3-90 characters in length
"^DD",8926.1,8926.1,.01,7.5)
I $G(DIC(0))["L",'$D(XUMF) K X D EN^DDIOL("Entries must be edited via the Master File Server (MFS).","","!?5,$C(7)")
"^DD",8926.1,8926.1,.01,9)
^
"^DD",8926.1,8926.1,.01,10)
Created by concatenating the SMD, Role, Setting, Service, & Document Type axes, in that order.
"^DD",8926.1,8926.1,.01,21,0)
^^4^4^3060322^
"^DD",8926.1,8926.1,.01,21,1,0)
This is the VHA Enterprise Standard Title, which is created by
"^DD",8926.1,8926.1,.01,21,2,0)
concatenating the Subject Matter Domain (SMD), Role, Setting, Service, &
"^DD",8926.1,8926.1,.01,21,3,0)
Document Type axes, in that order (e.g., Cardiology Attending Inpatient
"^DD",8926.1,8926.1,.01,21,4,0)
Initial Evaluation Note).
"^DD",8926.1,8926.1,.01,"DEL",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be inactivated via the Master File Server (MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",8926.1,8926.1,.01,"DT")
3060525
"^DD",8926.1,8926.1,.01,"LAYGO",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be added via the Master File Server (MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",8926.1,8926.199,.02,0)
STATUS^RSI^1:ACTIVE;0:INACTIVE;^0;2^Q
"^DD",8926.1,8926.199,.02,1,0)
^.1
"^DD",8926.1,8926.199,.02,1,1,0)
8926.1^AREG^MUMPS
"^DD",8926.1,8926.199,.02,1,1,1)
D SET^TIUDD61
"^DD",8926.1,8926.199,.02,1,1,2)
Q
"^DD",8926.1,8926.199,.02,1,1,3)
** DO NOT DELETE **
"^DD",8926.1,8926.199,.02,1,1,"%D",0)
^^5^5^3070312^
"^DD",8926.1,8926.199,.02,1,1,"%D",1,0)
This MUMPS-type cross-reference registers entries for which the 
"^DD",8926.1,8926.199,.02,1,1,"%D",2,0)
activation status has changed during deployment of Enterprise Standard 
"^DD",8926.1,8926.199,.02,1,1,"%D",3,0)
Titles from ETS. When the deployment process finishes, a bulletin will be 
"^DD",8926.1,8926.199,.02,1,1,"%D",4,0)
sent to the TIU CACS mail group indicating which titles were either 
"^DD",8926.1,8926.199,.02,1,1,"%D",5,0)
activated or inactivated by the deployment.
"^DD",8926.1,8926.199,.02,1,1,"DT")
3070312
"^DD",8926.1,8926.199,.02,9)
^
"^DD",8926.1,8926.199,.02,21,0)
^^4^4^3050201^
"^DD",8926.1,8926.199,.02,21,1,0)
The Status of a reference term is either 'ACTIVE' or 'INACTIVE'. If 
"^DD",8926.1,8926.199,.02,21,2,0)
'ACTIVE', then the term will be accessible by end-users to document a 
"^DD",8926.1,8926.199,.02,21,3,0)
particular patient event. If 'INACTIVE', then the term will only be 
"^DD",8926.1,8926.199,.02,21,4,0)
accessible by the application to display legacy data.
"^DD",8926.1,8926.199,.02,"DT")
3070312
"^DIC",4.001,4.001,0)
MASTER FILE PARAMETERS^4.001P
"^DIC",4.001,4.001,0,"GL")
^DIC(4.001,
"^DIC",4.001,4.001,"%",0)
^1.005^^0
"^DIC",4.001,4.001,"%D",0)
^^9^9^3031228^^
"^DIC",4.001,4.001,"%D",1,0)
The file holds parameters related to the Master File Server (MFS).
"^DIC",4.001,4.001,"%D",2,0)
 
"^DIC",4.001,4.001,"%D",3,0)
DO NOT EDIT THIS FILE!
"^DIC",4.001,4.001,"%D",4,0)
 
"^DIC",4.001,4.001,"%D",5,0)
The parameters map HL7 segment data to standard
"^DIC",4.001,4.001,"%D",6,0)
FileMan data files.  Local modifications to this
"^DIC",4.001,4.001,"%D",7,0)
file will seriously disrupt standard file updating
"^DIC",4.001,4.001,"%D",8,0)
and have negative consequences to existing VistA
"^DIC",4.001,4.001,"%D",9,0)
applications.
"^DIC",4.001,"B","MASTER FILE PARAMETERS",4.001)

"BLD",5603,6)
^213
**END**
**END**
