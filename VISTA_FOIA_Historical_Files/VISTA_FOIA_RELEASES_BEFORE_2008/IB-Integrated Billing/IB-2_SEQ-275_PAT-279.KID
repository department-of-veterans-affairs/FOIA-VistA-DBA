Released IB*2*279 SEQ #275
Extracted from mail message
**KIDS**:IB*2.0*279^

**INSTALL NAME**
IB*2.0*279
"BLD",5656,0)
IB*2.0*279^INTEGRATED BILLING^0^3041020^y
"BLD",5656,1,0)
^^1^1^3041012^^
"BLD",5656,1,1,0)
This patch corrects invalid Care Unit combination pointers if any exist.
"BLD",5656,4,0)
^9.64PA^^
"BLD",5656,"INI")
PRE^IB20P279
"BLD",5656,"INID")
^^n
"BLD",5656,"KRN",0)
^9.67PA^8989.52^19
"BLD",5656,"KRN",.4,0)
.4
"BLD",5656,"KRN",.401,0)
.401
"BLD",5656,"KRN",.402,0)
.402
"BLD",5656,"KRN",.403,0)
.403
"BLD",5656,"KRN",.5,0)
.5
"BLD",5656,"KRN",.84,0)
.84
"BLD",5656,"KRN",3.6,0)
3.6
"BLD",5656,"KRN",3.8,0)
3.8
"BLD",5656,"KRN",9.2,0)
9.2
"BLD",5656,"KRN",9.8,0)
9.8
"BLD",5656,"KRN",9.8,"NM",0)
^9.68A^^
"BLD",5656,"KRN",19,0)
19
"BLD",5656,"KRN",19.1,0)
19.1
"BLD",5656,"KRN",101,0)
101
"BLD",5656,"KRN",409.61,0)
409.61
"BLD",5656,"KRN",771,0)
771
"BLD",5656,"KRN",870,0)
870
"BLD",5656,"KRN",8989.51,0)
8989.51
"BLD",5656,"KRN",8989.52,0)
8989.52
"BLD",5656,"KRN",8994,0)
8994
"BLD",5656,"KRN","B",.4,.4)

"BLD",5656,"KRN","B",.401,.401)

"BLD",5656,"KRN","B",.402,.402)

"BLD",5656,"KRN","B",.403,.403)

"BLD",5656,"KRN","B",.5,.5)

"BLD",5656,"KRN","B",.84,.84)

"BLD",5656,"KRN","B",3.6,3.6)

"BLD",5656,"KRN","B",3.8,3.8)

"BLD",5656,"KRN","B",9.2,9.2)

"BLD",5656,"KRN","B",9.8,9.8)

"BLD",5656,"KRN","B",19,19)

"BLD",5656,"KRN","B",19.1,19.1)

"BLD",5656,"KRN","B",101,101)

"BLD",5656,"KRN","B",409.61,409.61)

"BLD",5656,"KRN","B",771,771)

"BLD",5656,"KRN","B",870,870)

"BLD",5656,"KRN","B",8989.51,8989.51)

"BLD",5656,"KRN","B",8989.52,8989.52)

"BLD",5656,"KRN","B",8994,8994)

"BLD",5656,"QUES",0)
^9.62^^
"BLD",5656,"REQB",0)
^9.611^1^1
"BLD",5656,"REQB",1,0)
IB*2.0*232^1
"BLD",5656,"REQB","B","IB*2.0*232",1)

"INI")
PRE^IB20P279
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
279^3041020
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3041020
"PKG",200,22,1,"PAH",1,1,1,0)
This patch corrects invalid Care Unit combination pointers if any exist.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IB20P279")
0^^B85255584
"RTN","IB20P279",1,0)
IB20P279 ;ISP/TDP - IB*2*279 PRE-INIT ROUTINE ;07/21/2004
"RTN","IB20P279",2,0)
 ;;2.0;INTEGRATED BILLING;**279**;21-MAR-94
"RTN","IB20P279",3,0)
 ;
"RTN","IB20P279",4,0)
ENV ; environment check
"RTN","IB20P279",5,0)
PRE ; set up check points for pre-init
"RTN","IB20P279",6,0)
 N %
"RTN","IB20P279",7,0)
 S %=$$NEWCP^XPDUTL("PROVID","PROVID^IB20P279")
"RTN","IB20P279",8,0)
 Q
"RTN","IB20P279",9,0)
PROVID ;Search files 355.9 and 355.91 for invalid Care Unit pointers to file
"RTN","IB20P279",10,0)
 ;355.96.
"RTN","IB20P279",11,0)
 D BMES^XPDUTL("Beginning invalid Care Unit pointer search.")
"RTN","IB20P279",12,0)
 D 3559,35591 I $D(^TMP($J,"IB20P279")) D MESSAGE
"RTN","IB20P279",13,0)
 D COMPLETE
"RTN","IB20P279",14,0)
 D END
"RTN","IB20P279",15,0)
 Q
"RTN","IB20P279",16,0)
35591 ;Search file 355.91 for invalid Care Unit pointers to file 355.96.
"RTN","IB20P279",17,0)
 D BMES^XPDUTL("Searching for invalid Care Unit pointers in file 355.91.")
"RTN","IB20P279",18,0)
 N DA,DIE,DR,IB35591,IBCARE,IBCIVAL,IBCNT,IBCU,IBCUCHK,IBECNT,IBFORM
"RTN","IB20P279",19,0)
 N IBINS,IBINSNM,IBNUM,IBPRVID,IBPRVTYP
"RTN","IB20P279",20,0)
 S (IBCNT,IBECNT,IBNUM)=0
"RTN","IB20P279",21,0)
 S DIE="^IBA(355.91,"
"RTN","IB20P279",22,0)
 F  S IBNUM=$O(^IBA(355.91,IBNUM)) Q:IBNUM=""  D
"RTN","IB20P279",23,0)
 . I 'IBNUM Q
"RTN","IB20P279",24,0)
 . S IB35591=$G(^IBA(355.91,IBNUM,0)) I IB35591="" Q
"RTN","IB20P279",25,0)
 . S IBINS=$P(IB35591,U,1)
"RTN","IB20P279",26,0)
 . S IBCU=$P(IB35591,U,3) I IBCU="" Q
"RTN","IB20P279",27,0)
 . S IBFORM=$P(IB35591,U,4)
"RTN","IB20P279",28,0)
 . S IBCARE=$P(IB35591,U,5)
"RTN","IB20P279",29,0)
 . S IBPRVID=$P(IB35591,U,6)
"RTN","IB20P279",30,0)
 . D VALIDCU I IBCIVAL=IBCU Q
"RTN","IB20P279",31,0)
 . S IBCUCHK=0 D CUCHK I IBCUCHK D  Q
"RTN","IB20P279",32,0)
 .. S IBINSNM=$P($G(^DIC(36,IBINS,0)),U,1) I IBINSNM="" S IBINSNM="UNKNOWN (IEN "_IBINS_")"
"RTN","IB20P279",33,0)
 .. S IBPRVTYP=$P($G(^IBE(355.97,IBPRVID,0)),U,1)
"RTN","IB20P279",34,0)
 .. S ^TMP($J,"IB20P279",IBINSNM,IBPRVTYP,"<<INS CO DEFAULT>>",IBNUM)=IB35591
"RTN","IB20P279",35,0)
 .. S IBECNT=IBECNT+1
"RTN","IB20P279",36,0)
 .. D OUTPUT
"RTN","IB20P279",37,0)
 . D FILE
"RTN","IB20P279",38,0)
 D TOTALS
"RTN","IB20P279",39,0)
 Q
"RTN","IB20P279",40,0)
3559 ;Search file 355.9 for invalid Care Unit pointers to file 355.96.
"RTN","IB20P279",41,0)
 D BMES^XPDUTL("Searching for invalid Care Unit pointers in file 355.9.")
"RTN","IB20P279",42,0)
 N DA,DIE,DR,IB3559,IBCARE,IBCIVAL,IBCNT,IBCU,IBCUCHK,IBECNT,IBFORM,IBGBL
"RTN","IB20P279",43,0)
 N IBINS,IBINSNM,IBNAME,IBNUM,IBPROV,IBPRVID,IBPRVTYP
"RTN","IB20P279",44,0)
 K ^TMP($J,"IB20P279")
"RTN","IB20P279",45,0)
 S (IBCNT,IBECNT,IBNUM)=0
"RTN","IB20P279",46,0)
 S DIE="^IBA(355.9,"
"RTN","IB20P279",47,0)
 F  S IBNUM=$O(^IBA(355.9,IBNUM)) Q:IBNUM=""  D
"RTN","IB20P279",48,0)
 . I 'IBNUM Q
"RTN","IB20P279",49,0)
 . S IB3559=$G(^IBA(355.9,IBNUM,0)) I IB3559="" Q
"RTN","IB20P279",50,0)
 . S IBPROV=$P(IB3559,U,1)
"RTN","IB20P279",51,0)
 . S IBINS=$P(IB3559,U,2)
"RTN","IB20P279",52,0)
 . S IBCU=$P(IB3559,U,3) I IBCU="" Q
"RTN","IB20P279",53,0)
 . S IBFORM=$P(IB3559,U,4)
"RTN","IB20P279",54,0)
 . S IBCARE=$P(IB3559,U,5)
"RTN","IB20P279",55,0)
 . S IBPRVID=$P(IB3559,U,6)
"RTN","IB20P279",56,0)
 . D VALIDCU I IBCIVAL=IBCU Q
"RTN","IB20P279",57,0)
 . S IBCUCHK=0 D CUCHK I IBCUCHK D  Q
"RTN","IB20P279",58,0)
 .. S IBINSNM=$P($G(^DIC(36,IBINS,0)),U,1) I IBINSNM="" S IBINSNM="UNKNOWN (IEN "_IBINS_")"
"RTN","IB20P279",59,0)
 .. S IBPRVTYP=$P($G(^IBE(355.97,IBPRVID,0)),U,1)
"RTN","IB20P279",60,0)
 .. S IBGBL="^"_$P($G(IBPROV),";",2)_$P($G(IBPROV),";",1)_",0)"
"RTN","IB20P279",61,0)
 .. S IBNAME=$P($G(@IBGBL),"^",1)
"RTN","IB20P279",62,0)
 .. S ^TMP($J,"IB20P279",IBINSNM,IBPRVTYP,IBNAME,IBNUM)=IB3559
"RTN","IB20P279",63,0)
 .. S IBECNT=IBECNT+1
"RTN","IB20P279",64,0)
 .. D OUTPUT
"RTN","IB20P279",65,0)
 . D FILE
"RTN","IB20P279",66,0)
 D TOTALS
"RTN","IB20P279",67,0)
 Q
"RTN","IB20P279",68,0)
TOTALS ; Print cleanup totals.
"RTN","IB20P279",69,0)
 N IBFILE
"RTN","IB20P279",70,0)
 S IBFILE=$S(DIE["355.91":"355.91.",1:"355.9.")
"RTN","IB20P279",71,0)
 I 'IBCNT,'IBECNT D BMES^XPDUTL("There were no invalid Care Unit pointers in file "_IBFILE) Q
"RTN","IB20P279",72,0)
 I IBCNT D BMES^XPDUTL(IBCNT_" total invalid Care Unit pointer(s) were corrected in file "_IBFILE)
"RTN","IB20P279",73,0)
 I IBECNT D BMES^XPDUTL(IBECNT_" total invalid Care Unit pointer(s) were NOT corrected in file "_IBFILE)
"RTN","IB20P279",74,0)
 Q
"RTN","IB20P279",75,0)
OUTPUT ; Failed conversion message.
"RTN","IB20P279",76,0)
 D MES^XPDUTL("> Cannot change Care Unit Pointer for "_DIE_IBNUM_").  A Mailman")
"RTN","IB20P279",77,0)
 D MES^XPDUTL("  message will be generated with more information.")
"RTN","IB20P279",78,0)
 Q
"RTN","IB20P279",79,0)
FILE ; Save change and display success message.
"RTN","IB20P279",80,0)
 N IBL,IBLOCK,X
"RTN","IB20P279",81,0)
 S IBL=0
"RTN","IB20P279",82,0)
 S IBLOCK=DIE_IBNUM_")"
"RTN","IB20P279",83,0)
 F X=1:1:10 L +@IBLOCK:2 H:'$T 5 I $T S IBL=1 Q
"RTN","IB20P279",84,0)
 I 'IBL D  Q
"RTN","IB20P279",85,0)
 . S IBINSNM=$P($G(^DIC(36,IBINS,0)),U,1) I IBINSNM="" S IBINSNM="UNKNOWN (IEN "_IBINS_")"
"RTN","IB20P279",86,0)
 . S IBPRVTYP=$P($G(^IBE(355.97,IBPRVID,0)),U,1)
"RTN","IB20P279",87,0)
 . S IBGBL="^"_$P($G(IBPROV),";",2)_$P($G(IBPROV),";",1)_",0)"
"RTN","IB20P279",88,0)
 . S IBNAME=$P($G(@IBGBL),"^",1)
"RTN","IB20P279",89,0)
 . S ^TMP($J,"IB20P279",IBINSNM,IBPRVTYP,IBNAME,IBNUM)=$S($D(IB3559):IB3559,1:IB35591)
"RTN","IB20P279",90,0)
 . S IBECNT=IBECNT+1
"RTN","IB20P279",91,0)
 . D OUTPUT
"RTN","IB20P279",92,0)
 S DA=IBNUM
"RTN","IB20P279",93,0)
 S DR=".03////"_IBCIVAL
"RTN","IB20P279",94,0)
 D ^DIE K DA,DR
"RTN","IB20P279",95,0)
 L -@IBLOCK
"RTN","IB20P279",96,0)
 D MES^XPDUTL("> Care Unit Pointer for "_DIE_IBNUM_") has been updated.")
"RTN","IB20P279",97,0)
 S IBCNT=IBCNT+1
"RTN","IB20P279",98,0)
 Q
"RTN","IB20P279",99,0)
VALIDCU ;Checks for valid Care Unit combination.
"RTN","IB20P279",100,0)
 ;Set IBCIVAL to insure Care Unit Pointer (355.9 and 355.91) is correct.
"RTN","IB20P279",101,0)
 N IBCUVAL
"RTN","IB20P279",102,0)
 S IBCUVAL=$P($G(^IBA(355.96,+IBCU,0)),U,1) I IBCUVAL="" S IBCIVAL="@" Q
"RTN","IB20P279",103,0)
 S IBCIVAL=$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,IBFORM,IBCARE,IBPRVID,"")) I IBCIVAL'="" Q
"RTN","IB20P279",104,0)
 S IBCIVAL=$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,IBFORM,0,IBPRVID,"")) I IBCIVAL'="" Q
"RTN","IB20P279",105,0)
 S IBCIVAL=$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,IBCARE,IBPRVID,"")) I IBCIVAL'="" Q
"RTN","IB20P279",106,0)
 S IBCIVAL=$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,0,IBPRVID,"")) I IBCIVAL'="" Q
"RTN","IB20P279",107,0)
 S IBCIVAL="@"
"RTN","IB20P279",108,0)
 Q
"RTN","IB20P279",109,0)
CUCHK ;Checks for existing Care Unit combination.
"RTN","IB20P279",110,0)
 I DIE="^IBA(355.91,",$D(^IBA(355.91,"AUNIQ",IBINS,$S(IBCIVAL="@":"*N/A*",IBCIVAL:IBCIVAL,1:$P(IB35591,U,10)),IBFORM,IBCARE,IBPRVID)) S IBCUCHK=1
"RTN","IB20P279",111,0)
 I DIE="^IBA(355.9,",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,$S(IBCIVAL="@":"*N/A*",IBCIVAL:IBCIVAL,1:$P(IB3559,U,16)),IBFORM,IBCARE,IBPRVID)) S IBCUCHK=1
"RTN","IB20P279",112,0)
 Q
"RTN","IB20P279",113,0)
MESSAGE ;Send message to user if unable to change Care Unit pointer(s).
"RTN","IB20P279",114,0)
 N IBC,IBCARE,IBCNT,IBCU,IBDATA,IBFORM,IBGROUP,IBGRP,IBINS,IBMSG,IBNAME
"RTN","IB20P279",115,0)
 N IBNCNT,IBNETNM,IBNME,IBNMSPC,IBNUM,IBPARAM,IBPRV,IBPRVID,IBTST,IBTXT
"RTN","IB20P279",116,0)
 N XMDUZ,XMERR,XMSUB,XMTEXT,XMY
"RTN","IB20P279",117,0)
 S XMSUB="PROVIDER ID CARE UNIT POINTERS INVALID"
"RTN","IB20P279",118,0)
 I DUZ="" N DUZ S DUZ=.5 ; if user not defined set to postmaster
"RTN","IB20P279",119,0)
 S XMDUZ=DUZ,XMTEXT="IBTXT"
"RTN","IB20P279",120,0)
 S IBPARAM("FROM")="PATCH IB*2.0*279 PRE-INIT"
"RTN","IB20P279",121,0)
 S IBGROUP="IB EDI SUPERVISOR"
"RTN","IB20P279",122,0)
 S IBGRP=$O(^XMB(3.8,"B",IBGROUP,"")) I IBGRP D  ; billing group defined
"RTN","IB20P279",123,0)
 . I +$P($G(^XMB(3.8,IBGRP,1,0)),U,4)'>0 Q  ; no members defined
"RTN","IB20P279",124,0)
 . S XMY("G."_IBGROUP)="" ; send message to the group.
"RTN","IB20P279",125,0)
 S XMY(DUZ)="" ; send message to user
"RTN","IB20P279",126,0)
 S IBTST=".TEST.MIR.TST.MIRROR.TRAIN."     ; various test names
"RTN","IB20P279",127,0)
 S IBNETNM=$G(^XMB("NETNAME"))
"RTN","IB20P279",128,0)
 I IBNETNM'="",('$F(IBTST,"."_$P(IBNETNM,".",1)_".")) S XMY("PHELPS,TY@FORUM.VA.GOV")=""
"RTN","IB20P279",129,0)
 S IBC=0
"RTN","IB20P279",130,0)
 S IBC=IBC+1,IBTXT(IBC)="This message has been sent by patch IB*2.0*279 at the completion of"
"RTN","IB20P279",131,0)
 S IBC=IBC+1,IBTXT(IBC)="the pre-init routine."
"RTN","IB20P279",132,0)
 S IBC=IBC+1,IBTXT(IBC)="  "
"RTN","IB20P279",133,0)
 S IBC=IBC+1,IBTXT(IBC)="The Care Unit pointer values could not be corrected automatically for the"
"RTN","IB20P279",134,0)
 S IBC=IBC+1,IBTXT(IBC)="following Provider ID entries.  These entries need to be deleted or modified"
"RTN","IB20P279",135,0)
 S IBC=IBC+1,IBTXT(IBC)="by choosing INSURANCE CO IDS from the Provider ID Maintenance [IBCE PROVIDER"
"RTN","IB20P279",136,0)
 S IBC=IBC+1,IBTXT(IBC)="MAINT] menu option.  If there is only one entry with the combination"
"RTN","IB20P279",137,0)
 S IBC=IBC+1,IBTXT(IBC)="selected, then choose Edit an ID Record and accept all the defaults.  The"
"RTN","IB20P279",138,0)
 S IBC=IBC+1,IBTXT(IBC)="Care Unit combination pointer will be corrected.  If there are two (2)"
"RTN","IB20P279",139,0)
 S IBC=IBC+1,IBTXT(IBC)="identical entries, and you are unable to determine which one needs to be"
"RTN","IB20P279",140,0)
 S IBC=IBC+1,IBTXT(IBC)="corrected, then delete both entries and then re-enter the data.  If you are"
"RTN","IB20P279",141,0)
 S IBC=IBC+1,IBTXT(IBC)="able to distinguish which entry is the invalid one, then you can either edit"
"RTN","IB20P279",142,0)
 S IBC=IBC+1,IBTXT(IBC)="the Care Unit to a new one which does not create a duplicate combination or"
"RTN","IB20P279",143,0)
 S IBC=IBC+1,IBTXT(IBC)="you may delete it.  It is important that the invalid entry NOT be left"
"RTN","IB20P279",144,0)
 S IBC=IBC+1,IBTXT(IBC)="unchanged on the system."
"RTN","IB20P279",145,0)
 S IBC=IBC+1,IBTXT(IBC)="  "
"RTN","IB20P279",146,0)
 S IBC=IBC+1,IBTXT(IBC)="INSURANCE CO."
"RTN","IB20P279",147,0)
 S IBC=IBC+1,IBTXT(IBC)="   PROVIDER ID TYPE                  CARE"
"RTN","IB20P279",148,0)
 S IBC=IBC+1,IBTXT(IBC)="      PROVIDER                 FORM  TYPE       CARE UNIT        ID#"
"RTN","IB20P279",149,0)
 S IBC=IBC+1,IBTXT(IBC)="==============================================================================="
"RTN","IB20P279",150,0)
 S IBNMSPC="                         "
"RTN","IB20P279",151,0)
 S IBCNT=0,IBINS=""
"RTN","IB20P279",152,0)
 F  S IBINS=$O(^TMP($J,"IB20P279",IBINS)) Q:IBINS=""  D
"RTN","IB20P279",153,0)
 . S IBC=IBC+1,IBTXT(IBC)="  "
"RTN","IB20P279",154,0)
 . S IBC=IBC+1,IBTXT(IBC)=IBINS
"RTN","IB20P279",155,0)
 . S IBPRV=""
"RTN","IB20P279",156,0)
 . F  S IBPRV=$O(^TMP($J,"IB20P279",IBINS,IBPRV)) Q:IBPRV=""  D
"RTN","IB20P279",157,0)
 .. S IBC=IBC+1,IBTXT(IBC)="   "_IBPRV
"RTN","IB20P279",158,0)
 .. S IBNAME=""
"RTN","IB20P279",159,0)
 .. F  S IBNAME=$O(^TMP($J,"IB20P279",IBINS,IBPRV,IBNAME)) Q:IBNAME=""  D
"RTN","IB20P279",160,0)
 ... S IBNME=$E(IBNAME_"                         ",1,24)_" "
"RTN","IB20P279",161,0)
 ... S IBNCNT=0
"RTN","IB20P279",162,0)
 ... S IBNUM=""
"RTN","IB20P279",163,0)
 ... F  S IBNUM=$O(^TMP($J,"IB20P279",IBINS,IBPRV,IBNAME,IBNUM)) Q:IBNUM=""  D
"RTN","IB20P279",164,0)
 .... S IBDATA=$G(^TMP($J,"IB20P279",IBINS,IBPRV,IBNAME,IBNUM)) I IBDATA="" Q
"RTN","IB20P279",165,0)
 .... S IBFORM=$P(IBDATA,U,4),IBFORM=$E($S(IBFORM=1:"UB-92",IBFORM=2:"HCFA",1:"BOTH")_"     ",1,5)_" "
"RTN","IB20P279",166,0)
 .... S IBCARE=$P(IBDATA,U,5),IBCARE=$E($S(IBCARE=1:"INPT",IBCARE=2:"OUTPT",1:"INPT/OUTPT")_"          ",1,10)_" "
"RTN","IB20P279",167,0)
 .... S IBCU=$P($G(^IBA(355.95,$P($G(^IBA(355.96,$P(IBDATA,U,3),0)),"^",1),0)),"^",1),IBCU=$E(IBCU_"                ",1,16)_" "
"RTN","IB20P279",168,0)
 .... S IBPRVID=$E($P(IBDATA,U,7)_"              ",1,14)
"RTN","IB20P279",169,0)
 .... S IBC=IBC+1,IBTXT(IBC)="      "_$S(IBNCNT:IBNMSPC,1:IBNME)_IBFORM_IBCARE_IBCU_IBPRVID
"RTN","IB20P279",170,0)
 .... S IBCNT=IBCNT+1
"RTN","IB20P279",171,0)
 .... I 'IBNCNT S IBNCNT=1
"RTN","IB20P279",172,0)
 S IBC=IBC+1,IBTXT(IBC)="  "
"RTN","IB20P279",173,0)
 S IBC=IBC+1,IBTXT(IBC)="  "
"RTN","IB20P279",174,0)
 S IBC=IBC+1,IBTXT(IBC)="Total records needing to be modified: "_IBCNT_"."
"RTN","IB20P279",175,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUB,XMTEXT,.XMY,.IBPARAM,"","")
"RTN","IB20P279",176,0)
 S IBMSG(1)=" "
"RTN","IB20P279",177,0)
 S IBMSG(2)="******************************************************************************"
"RTN","IB20P279",178,0)
 S IBMSG(3)="** Provider ID Care Unit clean up message "_$S($D(XMERR):"not sent due to error in",1:"sent to the ")
"RTN","IB20P279",179,0)
 I $D(XMERR) S IBMSG(4)="** message set up.  Dumping message to screen."
"RTN","IB20P279",180,0)
 I '$D(XMERR) S IBMSG(3)=IBMSG(3)_$S(DUZ=.5:"postmaster",1:"user")_$S('$D(XMY("G.IB EDI SUPERVISOR")):".",1:"")
"RTN","IB20P279",181,0)
 I '$D(XMERR) S IBMSG(4)=$S($D(XMY("G.IB EDI SUPERVISOR")):"** and the IB EDI SUPERVISOR mail group.",1:"** Please forward message to your billing staff for action.")
"RTN","IB20P279",182,0)
 S IBMSG(5)="******************************************************************************"
"RTN","IB20P279",183,0)
 D BMES^XPDUTL(.IBMSG)
"RTN","IB20P279",184,0)
 I $D(XMERR) D BMES^XPDUTL("  "),BMES^XPDUTL(.IBTXT)
"RTN","IB20P279",185,0)
 K ^TMP($J,"IB20P279")
"RTN","IB20P279",186,0)
 Q
"RTN","IB20P279",187,0)
COMPLETE ; display message that step has completed
"RTN","IB20P279",188,0)
 D BMES^XPDUTL("Step complete.")
"RTN","IB20P279",189,0)
 Q
"RTN","IB20P279",190,0)
END ; display message that pre-init has completed successfully
"RTN","IB20P279",191,0)
 D BMES^XPDUTL("Pre-init complete")
"RTN","IB20P279",192,0)
 Q
"VER")
8.0^22
**END**
**END**
