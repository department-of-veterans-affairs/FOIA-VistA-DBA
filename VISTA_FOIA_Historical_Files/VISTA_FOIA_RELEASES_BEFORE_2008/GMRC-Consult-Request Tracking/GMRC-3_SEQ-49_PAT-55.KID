Released GMRC*3*55 SEQ #49
Extracted from mail message
**KIDS**:GMRC*3.0*55^

**INSTALL NAME**
GMRC*3.0*55
"BLD",6987,0)
GMRC*3.0*55^CONSULT/REQUEST TRACKING^0^3070112^y
"BLD",6987,1,0)
^^2^2^3061026^
"BLD",6987,1,1,0)
This patch modifies alert recipients in certain circumstances.  It also 
"BLD",6987,1,2,0)
modifies an api used to determine a users update authority.
"BLD",6987,4,0)
^9.64PA^^
"BLD",6987,6)
2^
"BLD",6987,6.3)
4
"BLD",6987,"KRN",0)
^9.67PA^8989.52^19
"BLD",6987,"KRN",.4,0)
.4
"BLD",6987,"KRN",.401,0)
.401
"BLD",6987,"KRN",.402,0)
.402
"BLD",6987,"KRN",.403,0)
.403
"BLD",6987,"KRN",.5,0)
.5
"BLD",6987,"KRN",.84,0)
.84
"BLD",6987,"KRN",3.6,0)
3.6
"BLD",6987,"KRN",3.8,0)
3.8
"BLD",6987,"KRN",9.2,0)
9.2
"BLD",6987,"KRN",9.8,0)
9.8
"BLD",6987,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",6987,"KRN",9.8,"NM",1,0)
GMRCACMT^^0^B27581442
"BLD",6987,"KRN",9.8,"NM",2,0)
GMRCACTM^^0^B7864624
"BLD",6987,"KRN",9.8,"NM",3,0)
GMRCAU^^0^B65632107
"BLD",6987,"KRN",9.8,"NM",4,0)
GMRCCP^^0^B36410418
"BLD",6987,"KRN",9.8,"NM",5,0)
GMRCGUIB^^0^B43683798
"BLD",6987,"KRN",9.8,"NM",6,0)
GMRCP^^0^B20265103
"BLD",6987,"KRN",9.8,"NM","B","GMRCACMT",1)

"BLD",6987,"KRN",9.8,"NM","B","GMRCACTM",2)

"BLD",6987,"KRN",9.8,"NM","B","GMRCAU",3)

"BLD",6987,"KRN",9.8,"NM","B","GMRCCP",4)

"BLD",6987,"KRN",9.8,"NM","B","GMRCGUIB",5)

"BLD",6987,"KRN",9.8,"NM","B","GMRCP",6)

"BLD",6987,"KRN",19,0)
19
"BLD",6987,"KRN",19.1,0)
19.1
"BLD",6987,"KRN",101,0)
101
"BLD",6987,"KRN",409.61,0)
409.61
"BLD",6987,"KRN",771,0)
771
"BLD",6987,"KRN",870,0)
870
"BLD",6987,"KRN",8989.51,0)
8989.51
"BLD",6987,"KRN",8989.52,0)
8989.52
"BLD",6987,"KRN",8994,0)
8994
"BLD",6987,"KRN","B",.4,.4)

"BLD",6987,"KRN","B",.401,.401)

"BLD",6987,"KRN","B",.402,.402)

"BLD",6987,"KRN","B",.403,.403)

"BLD",6987,"KRN","B",.5,.5)

"BLD",6987,"KRN","B",.84,.84)

"BLD",6987,"KRN","B",3.6,3.6)

"BLD",6987,"KRN","B",3.8,3.8)

"BLD",6987,"KRN","B",9.2,9.2)

"BLD",6987,"KRN","B",9.8,9.8)

"BLD",6987,"KRN","B",19,19)

"BLD",6987,"KRN","B",19.1,19.1)

"BLD",6987,"KRN","B",101,101)

"BLD",6987,"KRN","B",409.61,409.61)

"BLD",6987,"KRN","B",771,771)

"BLD",6987,"KRN","B",870,870)

"BLD",6987,"KRN","B",8989.51,8989.51)

"BLD",6987,"KRN","B",8989.52,8989.52)

"BLD",6987,"KRN","B",8994,8994)

"BLD",6987,"QUES",0)
^9.62^^
"BLD",6987,"REQB",0)
^9.611^3^3
"BLD",6987,"REQB",1,0)
GMRC*3.0*37^1
"BLD",6987,"REQB",2,0)
GMRC*3.0*47^1
"BLD",6987,"REQB",3,0)
GMRC*3.0*53^1
"BLD",6987,"REQB","B","GMRC*3.0*37",1)

"BLD",6987,"REQB","B","GMRC*3.0*47",2)

"BLD",6987,"REQB","B","GMRC*3.0*53",3)

"MBREQ")
0
"PKG",222,-1)
1^1
"PKG",222,0)
CONSULT/REQUEST TRACKING^GMRC^CONSULTS/REQUESTS
"PKG",222,22,0)
^9.49I^1^1
"PKG",222,22,1,0)
3.0^2980101^2990325^66481
"PKG",222,22,1,"PAH",1,0)
55^3070112^12463
"PKG",222,22,1,"PAH",1,1,0)
^^2^2^3070112
"PKG",222,22,1,"PAH",1,1,1,0)
This patch modifies alert recipients in certain circumstances.  It also 
"PKG",222,22,1,"PAH",1,1,2,0)
modifies an api used to determine a users update authority.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","GMRCACMT")
0^1^B27581442^B27403592
"RTN","GMRCACMT",1,0)
GMRCACMT ;SLC/DLT,DCM,MA,JFR - Comment Action and alerting ;8/19/03 07:27
"RTN","GMRCACMT",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**4,14,18,20,22,29,35,47,55**;DEC 27, 1997;Build 4
"RTN","GMRCACMT",3,0)
 ; This routine invokes IA #10060
"RTN","GMRCACMT",4,0)
 ;
"RTN","GMRCACMT",5,0)
COMMENT(GMRCO) ;Add a comment without changing the status
"RTN","GMRCACMT",6,0)
 K GMRCQIT,GMRCQUT N GMRCA
"RTN","GMRCACMT",7,0)
 I $D(IOTM),$D(IOBM),$D(IOSTBM) D FULL^VALM1
"RTN","GMRCACMT",8,0)
 S GMRCNOW=$$NOW^XLFDT,GMRCAD=GMRCNOW
"RTN","GMRCACMT",9,0)
 S GMRCOM=1,GMRCA=20,GMRCPROV=$P(^GMR(123,GMRCO,0),"^",14) D AUDIT^GMRCP
"RTN","GMRCACMT",10,0)
 ; GMRCOM=1 defined the variable and tells AUDIT^GMRCP that the 
"RTN","GMRCACMT",11,0)
 ; word-processing logic should be executed. If an actual comment is 
"RTN","GMRCACMT",12,0)
 ; added, $P(GMRCOM,"^",2)=1 (send alert), if not GMRCOM=1 and no '^' 
"RTN","GMRCACMT",13,0)
 ; exists (do not send alert)
"RTN","GMRCACMT",14,0)
 I $G(GMRCERR)=1 S GMRCMSG=GMRCERMS D EXAC^GMRCADC(GMRCMSG),END Q
"RTN","GMRCACMT",15,0)
 ;continue if no lock problems occurred
"RTN","GMRCACMT",16,0)
 I $P(GMRCOM,"^",2) D
"RTN","GMRCACMT",17,0)
 . I $P($G(^GMR(123,GMRCO,12)),U,5)="F" D
"RTN","GMRCACMT",18,0)
 .. W !!,"The ordering provider for this inter-facility consult will"
"RTN","GMRCACMT",19,0)
 .. W " automatically be ",!,"notified.",!
"RTN","GMRCACMT",20,0)
 . D PROCALRT("",1,20,GMRCO)
"RTN","GMRCACMT",21,0)
 . ;update LAST ACTION field even though no status change
"RTN","GMRCACMT",22,0)
 . N GMRCDR,GMRCSTS
"RTN","GMRCACMT",23,0)
 . S GMRCSTS="",GMRCDR="9////20"
"RTN","GMRCACMT",24,0)
 . D STATUS^GMRCP
"RTN","GMRCACMT",25,0)
 D END
"RTN","GMRCACMT",26,0)
 Q
"RTN","GMRCACMT",27,0)
 ;
"RTN","GMRCACMT",28,0)
PROCALRT(GMRCORTX,GMRCDELR,ACTION,GMRCO) ;Process alert for comments
"RTN","GMRCACMT",29,0)
 ;If GMRCDELR=1, the ordering provider can be deleted from the list.
"RTN","GMRCACMT",30,0)
 N GMRCADUZ,GMRCANS,NOTIF,GMRCQIT,GMRCTM
"RTN","GMRCACMT",31,0)
 ;S GMRCANS=$$READ("Y","Do You Wish To Send An Alert With This Comment","N","Enter Y to continue with recipient prompts. Otherwise, enter N.",1)
"RTN","GMRCACMT",32,0)
 ;I (GMRCANS[U)!(GMRCANS=0) D END Q
"RTN","GMRCACMT",33,0)
 ;
"RTN","GMRCACMT",34,0)
 D WHOTO
"RTN","GMRCACMT",35,0)
 ;I $G(GMRCQIT) D END Q  ;User "^" at requesting provider.
"RTN","GMRCACMT",36,0)
 ;
"RTN","GMRCACMT",37,0)
 N GMRCALT
"RTN","GMRCACMT",38,0)
 S NOTIF=$S(ACTION=20:63,ACTION=8:63,1:23)
"RTN","GMRCACMT",39,0)
 ;
"RTN","GMRCACMT",40,0)
 D SENDMSG(NOTIF,+GMRCO,$G(GMRCTM))
"RTN","GMRCACMT",41,0)
 Q
"RTN","GMRCACMT",42,0)
 ;
"RTN","GMRCACMT",43,0)
SENDMSG(NOTIF,GMRCO,GMRCATM) ;Send the alert
"RTN","GMRCACMT",44,0)
 N GMRCDFN
"RTN","GMRCACMT",45,0)
 I '$D(GMRCADUZ) S GMRCADUZ=""
"RTN","GMRCACMT",46,0)
 W !,"Processing Alerts..."
"RTN","GMRCACMT",47,0)
 S GMRCDFN=$P($G(^GMR(123,+GMRCO,0)),"^",2)
"RTN","GMRCACMT",48,0)
 I '$L(GMRCORTX) D
"RTN","GMRCACMT",49,0)
 . N TXT
"RTN","GMRCACMT",50,0)
 . S TXT="Comment Added to "
"RTN","GMRCACMT",51,0)
 . I $P($G(^GMR(123,GMRCO,12)),U,5)'="P" S GMRCORTX=TXT_"consult " Q
"RTN","GMRCACMT",52,0)
 . S GMRCORTX=TXT_"remote consult "
"RTN","GMRCACMT",53,0)
 S GMRCORTX=GMRCORTX_$$ORTX^GMRCAU(+GMRCO)
"RTN","GMRCACMT",54,0)
 D MSG^GMRCP(GMRCDFN,GMRCORTX,+GMRCO,NOTIF,.GMRCADUZ,$G(GMRCATM))
"RTN","GMRCACMT",55,0)
 Q
"RTN","GMRCACMT",56,0)
 ;
"RTN","GMRCACMT",57,0)
END ;kill off variables and exit
"RTN","GMRCACMT",58,0)
 K GMRC,GMRCA,GMRCMSG,GMRCOM,GMRCO,GMRCORTX,GMRCERR,GMRCERMS,GMRCQUT,GMRCUT
"RTN","GMRCACMT",59,0)
 I $D(DTOUT)!$D(DIROUT) S GMRCQIT=""
"RTN","GMRCACMT",60,0)
 K DTOUT,DIROUT,DUOUT,DIRUT
"RTN","GMRCACMT",61,0)
 S:$D(^TMP("GMRC",$J,"CURRENT","MENU")) XQORM("HIJACK")=^("MENU")
"RTN","GMRCACMT",62,0)
 Q
"RTN","GMRCACMT",63,0)
 ;
"RTN","GMRCACMT",64,0)
WHOTO ;Get the users who should receive an alert
"RTN","GMRCACMT",65,0)
 ;Asks about requesting provider first, then prompts for additional users
"RTN","GMRCACMT",66,0)
 ;Returns GMRCADUZ array of users to send an alert to and GMRCQIT if "^"
"RTN","GMRCACMT",67,0)
 N GMRCRP,GMRCANS,GMRCUPD
"RTN","GMRCACMT",68,0)
 S GMRCRP=+$P($G(^GMR(123,+GMRCO,0)),U,14) ;requesting provider entry
"RTN","GMRCACMT",69,0)
 S GMRCUPD=$$VALID^GMRCAU($P(^GMR(123,+GMRCO,0),U,5),GMRCO,DUZ)
"RTN","GMRCACMT",70,0)
 I GMRCRP=DUZ D  ;alert team if ord. prov. takes the action
"RTN","GMRCACMT",71,0)
 . S GMRCTM=1
"RTN","GMRCACMT",72,0)
 . W !,"Service update users will be notified.",!
"RTN","GMRCACMT",73,0)
 I +GMRCUPD>1,GMRCRP'=DUZ D  ; alert ord. prov if update users takes action
"RTN","GMRCACMT",74,0)
 . S GMRCADUZ(GMRCRP)=""
"RTN","GMRCACMT",75,0)
 . W !,"Requesting provider will be notified.",!
"RTN","GMRCACMT",76,0)
 I '$G(GMRCTM),+GMRCUPD<2 D  ;alert both if not ord. prov or update user
"RTN","GMRCACMT",77,0)
 . S GMRCTM=1,GMRCADUZ(GMRCRP)=""
"RTN","GMRCACMT",78,0)
 . W !,"Requesting provider and service update users will be notified.",!
"RTN","GMRCACMT",79,0)
 ;
"RTN","GMRCACMT",80,0)
 ;
"RTN","GMRCACMT",81,0)
ANDTO ;Ask for additional recipients
"RTN","GMRCACMT",82,0)
 D NAMELIST("Additional alert recipients: ",.GMRCADUZ,GMRCDELR)
"RTN","GMRCACMT",83,0)
 Q
"RTN","GMRCACMT",84,0)
 ;
"RTN","GMRCACMT",85,0)
NAMELIST(GMRCP,GMRCOLD,GMRCDELR) ;manage the list of recipients
"RTN","GMRCACMT",86,0)
 ;
"RTN","GMRCACMT",87,0)
 ; GMRCP - Prompt
"RTN","GMRCACMT",88,0)
 ; GMRCOLD - Original list with ordering provider.
"RTN","GMRCACMT",89,0)
 ; GMRCDELR - 1 means the original list may have names deleted
"RTN","GMRCACMT",90,0)
 ; Returns final list in GMRCOLD array
"RTN","GMRCACMT",91,0)
 ;
"RTN","GMRCACMT",92,0)
 N GMRCNEW,GMRCNT,GMRCDUZ,GMRCUSER,GMRCQ,GMRCADD,DIC,X,Y
"RTN","GMRCACMT",93,0)
 ;
"RTN","GMRCACMT",94,0)
 M GMRCNEW=GMRCOLD
"RTN","GMRCACMT",95,0)
 I GMRCDELR=1 K GMRCOLD S GMRCOLD="" ;Remove mandatory users from GMRCOLD
"RTN","GMRCACMT",96,0)
 S GMRCNT=0 F  D  Q:(GMRCUSER[U)
"RTN","GMRCACMT",97,0)
 .S GMRCUSER=$$READ("FAO;3;46",$S(GMRCNT:"And ",1:"")_GMRCP,"","^D NAMEHELP^GMRCACMT")
"RTN","GMRCACMT",98,0)
 .S:'$L(GMRCUSER) GMRCUSER=U Q:(GMRCUSER[U)
"RTN","GMRCACMT",99,0)
 .I ($E(GMRCUSER,1)="-") S GMRCADD=0,GMRCUSER=$E(GMRCUSER,2,$L(GMRCUSER))
"RTN","GMRCACMT",100,0)
 .E  S GMRCADD=1
"RTN","GMRCACMT",101,0)
 .;
"RTN","GMRCACMT",102,0)
 .S X=GMRCUSER,DIC=200,DIC(0)="EMQ" D ^DIC
"RTN","GMRCACMT",103,0)
 .;
"RTN","GMRCACMT",104,0)
 .I (Y>0) D  I 1
"RTN","GMRCACMT",105,0)
 ..;W $E($P(Y,U,2),$L(GMRCUSER)+1,$L($P(Y,U,2)))
"RTN","GMRCACMT",106,0)
 ..;
"RTN","GMRCACMT",107,0)
 ..I GMRCADD D
"RTN","GMRCACMT",108,0)
 ...I $D(GMRCNEW(+Y)) W " already in the list." Q
"RTN","GMRCACMT",109,0)
 ...S GMRCNEW(+Y)="" W " added to the list." S GMRCNT=GMRCNT+1
"RTN","GMRCACMT",110,0)
 ..;
"RTN","GMRCACMT",111,0)
 ..I 'GMRCADD D
"RTN","GMRCACMT",112,0)
 ...I $D(GMRCOLD(+Y)) W " can't delete this name from the list." Q
"RTN","GMRCACMT",113,0)
 ...I '$D(GMRCNEW(+Y)) W " not currently in the list." Q
"RTN","GMRCACMT",114,0)
 ...K GMRCNEW(+Y) S GMRCNT=GMRCNT-1 W " deleted from the list."
"RTN","GMRCACMT",115,0)
 .;
"RTN","GMRCACMT",116,0)
 .E  I $L(GMRCUSER) W "  Name not found."
"RTN","GMRCACMT",117,0)
 ;
"RTN","GMRCACMT",118,0)
 M GMRCOLD=GMRCNEW
"RTN","GMRCACMT",119,0)
 Q
"RTN","GMRCACMT",120,0)
 ;
"RTN","GMRCACMT",121,0)
READ(GMRC0,GMRCA,GMRCB,GMRCH,GMRCL) ;read logic
"RTN","GMRCACMT",122,0)
 ;
"RTN","GMRCACMT",123,0)
 ;  GMRC0 -> DIR(0) --- Type of read
"RTN","GMRCACMT",124,0)
 ;  GMRCA -> DIR("A") - Prompt
"RTN","GMRCACMT",125,0)
 ;  GMRCB -> DIR("B") - Default Answer
"RTN","GMRCACMT",126,0)
 ;  GMRCH -> DIR("?") - Help text or ^Execute code
"RTN","GMRCACMT",127,0)
 ;  GMRCL -> Number of blank lines to put before Prompt
"RTN","GMRCACMT",128,0)
 ;
"RTN","GMRCACMT",129,0)
 ;  Returns "^" or answer
"RTN","GMRCACMT",130,0)
 ;
"RTN","GMRCACMT",131,0)
 N GMRCLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","GMRCACMT",132,0)
 Q:'$L($G(GMRC0)) U
"RTN","GMRCACMT",133,0)
 S DIR(0)=GMRC0
"RTN","GMRCACMT",134,0)
 S:$L($G(GMRCA)) DIR("A")=GMRCA
"RTN","GMRCACMT",135,0)
 S:$L($G(GMRCB)) DIR("B")=GMRCB
"RTN","GMRCACMT",136,0)
 S:$L($G(GMRCH)) DIR("?")=GMRCH
"RTN","GMRCACMT",137,0)
 F GMRCLINE=1:1:($G(GMRCL)-1) W !
"RTN","GMRCACMT",138,0)
 D ^DIR
"RTN","GMRCACMT",139,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U
"RTN","GMRCACMT",140,0)
 Q Y
"RTN","GMRCACMT",141,0)
 ;
"RTN","GMRCACMT",142,0)
 ;
"RTN","GMRCACMT",143,0)
NAMEHELP ;Help for the recipient list logic
"RTN","GMRCACMT",144,0)
 N GMRCDUZ
"RTN","GMRCACMT",145,0)
 W !,"Enter the name of the user to send the alert to,"
"RTN","GMRCACMT",146,0)
 W !," or put a '-' in front of a name to delete from the list."
"RTN","GMRCACMT",147,0)
 W !
"RTN","GMRCACMT",148,0)
 W !,"  Example:"
"RTN","GMRCACMT",149,0)
 W !,"     SMITH,FRED  ->  to add Fred to the list."
"RTN","GMRCACMT",150,0)
 W !,"     -SMITH,FRED ->  to delete Fred from the list."
"RTN","GMRCACMT",151,0)
 W !,"Already selected: "
"RTN","GMRCACMT",152,0)
 W !
"RTN","GMRCACMT",153,0)
 S GMRCDUZ=0 F  S GMRCDUZ=$O(GMRCNEW(GMRCDUZ)) Q:'GMRCDUZ  D
"RTN","GMRCACMT",154,0)
 .W !,?5,$P(^VA(200,GMRCDUZ,0),U,1)
"RTN","GMRCACMT",155,0)
 .W:$D(GMRCOLD(GMRCDUZ)) "  <mandatory>"
"RTN","GMRCACMT",156,0)
 W !
"RTN","GMRCACMT",157,0)
 Q
"RTN","GMRCACMT",158,0)
 ;
"RTN","GMRCACTM")
0^2^B7864624^B6768099
"RTN","GMRCACTM",1,0)
GMRCACTM ; SLC/DLT,DCM,JFR - Set action menus  ;10/17/01 22:41
"RTN","GMRCACTM",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**1,4,11,18,15,17,22,55**;DEC 27, 1997;Build 4
"RTN","GMRCACTM",3,0)
 ;
"RTN","GMRCACTM",4,0)
 ; This routine invokes IA #2425
"RTN","GMRCACTM",5,0)
 ;
"RTN","GMRCACTM",6,0)
CPRS(GMRCPM,GUI) ;Entry point for setting menu actions for CPRS user
"RTN","GMRCACTM",7,0)
 ;Input:
"RTN","GMRCACTM",8,0)
 ;  GMRCPM=a list of File 123 IEN's to check for menu actions.
"RTN","GMRCACTM",9,0)
 ;       Passed in as '300;303;295;309;313'
"RTN","GMRCACTM",10,0)
 ;  GUI =1 if coming from the GUI; return field name in ORFLG also
"RTN","GMRCACTM",11,0)
 ;Output:
"RTN","GMRCACTM",12,0)
 ;  ORFLG(ien)= A^B^C^D^E^F^G^H where:
"RTN","GMRCACTM",13,0)
 ;    Ien = internal entry of record in file 123
"RTN","GMRCACTM",14,0)
 ;    A = a number representing one of the following:
"RTN","GMRCACTM",15,0)
 ;       1 - user has only review capabilities
"RTN","GMRCACTM",16,0)
 ;       2 - user has full update capabilities
"RTN","GMRCACTM",17,0)
 ;       3 - user has administrative update capabilities
"RTN","GMRCACTM",18,0)
 ;       4 - user has full update and admin user capabilities
"RTN","GMRCACTM",19,0)
 ;       5 - user has full update capabilities via unrestricted access
"RTN","GMRCACTM",20,0)
 ;    B = field in file 123.5 (REQUEST SERVICES) that gave the user 
"RTN","GMRCACTM",21,0)
 ;        update authority (ex.  Update user w/o Notification)
"RTN","GMRCACTM",22,0)
 ;    C = Service in file 123.5 (REQUEST SERVICES) that gave the user
"RTN","GMRCACTM",23,0)
 ;        update authority (ex. CARDIOLOGY,NEUROLOGY)
"RTN","GMRCACTM",24,0)
 ;    D = contains a 1 if user is allowed to associate medicine results
"RTN","GMRCACTM",25,0)
 ;        with a consult procedure request
"RTN","GMRCACTM",26,0)
 ;    F = contain a 1 if user can disassociate a medicine result that was
"RTN","GMRCACTM",27,0)
 ;        incorrectly associated with a consult procedure request
"RTN","GMRCACTM",28,0)
 ;    G = contains a 1 if user is allowed to EDIT and RESUBMIT a canceled
"RTN","GMRCACTM",29,0)
 ;        request
"RTN","GMRCACTM",30,0)
 ;    H = 0-4 depending on actions allowed on a Clin. Proc. request
"RTN","GMRCACTM",31,0)
 ;
"RTN","GMRCACTM",32,0)
 I '$L(GMRCPM) S ORFLG=1 Q
"RTN","GMRCACTM",33,0)
 K ORFLG
"RTN","GMRCACTM",34,0)
 N I,GMRCSS,GMRCIEN
"RTN","GMRCACTM",35,0)
 F I=1:1 S ORFLG=1,GMRCIEN=$P(GMRCPM,";",I) Q:GMRCIEN=""  D
"RTN","GMRCACTM",36,0)
 .S ORFLG(GMRCIEN)=1 ;set default answer to read only
"RTN","GMRCACTM",37,0)
 .I $P($G(^GMR(123,GMRCIEN,12)),U,5)="P" D  Q  ;IFC placer so only ED/RES
"RTN","GMRCACTM",38,0)
 .. ;can user edit/resubmit
"RTN","GMRCACTM",39,0)
 .. I $$VALPROV^GMRCEDIT(GMRCIEN) S $P(ORFLG(GMRCIEN),U,6)=1
"RTN","GMRCACTM",40,0)
 .S GMRCSS=+$P($G(^GMR(123,+GMRCIEN,0)),"^",5)
"RTN","GMRCACTM",41,0)
 .Q:'+$G(GMRCSS)
"RTN","GMRCACTM",42,0)
 .;when service is defined, check for service user 
"RTN","GMRCACTM",43,0)
 .D EN
"RTN","GMRCACTM",44,0)
 .S ORFLG(GMRCIEN)=ORFLG
"RTN","GMRCACTM",45,0)
 . ;what actions to allow if a Clincial Procedure
"RTN","GMRCACTM",46,0)
 . S $P(ORFLG(GMRCIEN),U,7)=$$CPACTM^GMRCCP(GMRCIEN)
"RTN","GMRCACTM",47,0)
 .I ORFLG>1 D
"RTN","GMRCACTM",48,0)
 .. ;can DUZ associate med results?  only if not a CP!
"RTN","GMRCACTM",49,0)
 .. N P4
"RTN","GMRCACTM",50,0)
 .. S P4=$S(+$P(ORFLG(GMRCIEN),U,7):0,1:$$CANDOMED^GMRCGUIU(GMRCIEN))
"RTN","GMRCACTM",51,0)
 .. S $P(ORFLG(GMRCIEN),U,4)=P4
"RTN","GMRCACTM",52,0)
 . ;can DUZ disassociate a med result?
"RTN","GMRCACTM",53,0)
 . S $P(ORFLG(GMRCIEN),U,5)=+$$REMUSR^GMRCDIS(GMRCIEN)
"RTN","GMRCACTM",54,0)
 . ;can user edit/resubmit
"RTN","GMRCACTM",55,0)
 . I $$VALPROV^GMRCEDIT(GMRCIEN) S $P(ORFLG(GMRCIEN),U,6)=1
"RTN","GMRCACTM",56,0)
 . Q
"RTN","GMRCACTM",57,0)
 Q
"RTN","GMRCACTM",58,0)
 ;
"RTN","GMRCACTM",59,0)
EN ;Set GMRCACTM with appropriate menu of actions based on user
"RTN","GMRCACTM",60,0)
 ;If ORFLG is DEFINED then GMRCACTM is returned as a set of codes:
"RTN","GMRCACTM",61,0)
 ;    1 = GMRCACTM USER REVIEW SCREEN - simple actions
"RTN","GMRCACTM",62,0)
 ;    2 = GMRCACTM SERVICE ACTION menu  - all actions possible for
"RTN","GMRCACTM",63,0)
 ;        clinical user in service
"RTN","GMRCACTM",64,0)
 ;    3 =  administrative user
"RTN","GMRCACTM",65,0)
 ; initialize GMRCACTM for read only
"RTN","GMRCACTM",66,0)
 S GMRCACTM="GMRCACTM USER REVIEW SCREEN"
"RTN","GMRCACTM",67,0)
 ; if service and entry aren't defined, assume read only access
"RTN","GMRCACTM",68,0)
 I '$D(XQADATA),$S('+$G(GMRCSS):1,1:0) D  Q
"RTN","GMRCACTM",69,0)
 .I $D(ORFLG) S ORFLG(GMRCIEN)=1 K GMRCACTM
"RTN","GMRCACTM",70,0)
 .Q
"RTN","GMRCACTM",71,0)
 ;
"RTN","GMRCACTM",72,0)
 ;Get the users service update level
"RTN","GMRCACTM",73,0)
 N GMRCFLG
"RTN","GMRCACTM",74,0)
 S GMRCFLG=$$VALID^GMRCAU(+GMRCSS,"",,$G(GUI))
"RTN","GMRCACTM",75,0)
 S:+GMRCFLG=1 GMRCFLG=$S(($D(ORFLG)&($$PATCH^XPDUTL("OR*3.0*243"))):"5^"_$P(GMRCFLG,U,2,9999),1:"2^"_$P(GMRCFLG,U,2,9999))
"RTN","GMRCACTM",76,0)
 ;
"RTN","GMRCACTM",77,0)
 ;If ORFLG is all that should be returned, than set and exit
"RTN","GMRCACTM",78,0)
 I $D(ORFLG) D  Q
"RTN","GMRCACTM",79,0)
 . K GMRCACTM
"RTN","GMRCACTM",80,0)
 . I GMRCFLG=0 S ORFLG=1 Q
"RTN","GMRCACTM",81,0)
 . S ORFLG=GMRCFLG Q
"RTN","GMRCACTM",82,0)
 ;
"RTN","GMRCACTM",83,0)
 ; If GMRCSS=and IFC sending service, only allow review screen
"RTN","GMRCACTM",84,0)
 I $D(^GMR(123.5,+GMRCSS,"IFC")),$P(^("IFC"),U) S GMRCFLG=0
"RTN","GMRCACTM",85,0)
 ;
"RTN","GMRCACTM",86,0)
 ;Process the GMRCFLG value to get the GMRCACTM defined.
"RTN","GMRCACTM",87,0)
 I GMRCFLG>0 D  Q
"RTN","GMRCACTM",88,0)
 . S GMRCACTM="GMRCACTM SERVICE ACTION MENU"
"RTN","GMRCACTM",89,0)
 Q
"RTN","GMRCAU")
0^3^B65632107^B65349968
"RTN","GMRCAU",1,0)
GMRCAU ;SLC/DLT,JFR - Action Utilities  ;10/17/01 18:31
"RTN","GMRCAU",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**1,4,11,14,12,15,17,22,55**;DEC 27, 1997;Build 4
"RTN","GMRCAU",3,0)
 ;
"RTN","GMRCAU",4,0)
 ; This routine invokes IA #2324,#2692
"RTN","GMRCAU",5,0)
 ;
"RTN","GMRCAU",6,0)
GETPROV K GMRCORNP N DIR S DIR(0)="123.02,3"
"RTN","GMRCAU",7,0)
 S DIR("A")=$S($D(GETPROV):GETPROV,1:"Responsible Clinician")
"RTN","GMRCAU",8,0)
 D ^DIR K DIR I $D(DTOUT)!$D(DIROUT)!(X="^") S GMRCQIT="Q" Q
"RTN","GMRCAU",9,0)
 G:Y<1 GETPROV S GMRCORNP=+Y
"RTN","GMRCAU",10,0)
 Q
"RTN","GMRCAU",11,0)
GETDT ;Get actual activity date
"RTN","GMRCAU",12,0)
 K GMRCQIT,%
"RTN","GMRCAU",13,0)
 D NOW^%DTC S (X,GMRCDT)=% D REGDTM^GMRCU S GMRCAD=X
"RTN","GMRCAU",14,0)
 S DIR(0)="123.02,2",DIR("A")=$S($D(GETDT):GETDT,1:"Date/Time of Actual Activity"),DIR("B")="NOW" D ^DIR K DIR I $D(DIRUT) S GMRCQIT="Q" Q
"RTN","GMRCAU",15,0)
 I X="NOW" K GMRCAD,Y Q
"RTN","GMRCAU",16,0)
 S GMRCAD=Y K X,Y,DIRUT,DUOUT
"RTN","GMRCAU",17,0)
 Q
"RTN","GMRCAU",18,0)
ORTX(GMRCO) ;Get the abbreviated text for alert displays
"RTN","GMRCAU",19,0)
 ;GMRCO is the consult entry from 123
"RTN","GMRCAU",20,0)
 N GMRCSVC,GMRCSSNM,GMRCPROC,GMRCORTX
"RTN","GMRCAU",21,0)
 S GMRCSSNM=$$SVC(GMRCO)
"RTN","GMRCAU",22,0)
 S GMRCPROC=$$PROC(GMRCO)
"RTN","GMRCAU",23,0)
 S GMRCORTX=$S($L(GMRCPROC):($E(GMRCSSNM,1,10)_" "_$E(GMRCPROC,1,10)),1:$E(GMRCSSNM,1,20))
"RTN","GMRCAU",24,0)
 Q GMRCORTX
"RTN","GMRCAU",25,0)
 ;
"RTN","GMRCAU",26,0)
SVC(GMRCO) ;Get abbreviated service text
"RTN","GMRCAU",27,0)
 N GMRCSSNM,GMRCSVC
"RTN","GMRCAU",28,0)
 S GMRCSVC=$P(^GMR(123,+GMRCO,0),"^",5),GMRCSSNM=""
"RTN","GMRCAU",29,0)
 I +GMRCSVC S GMRCSSNM=$S($L($G(^GMR(123.5,+GMRCSVC,.1))):^(.1),1:$P($G(^GMR(123.5,+GMRCSVC,0)),U,1))
"RTN","GMRCAU",30,0)
 Q GMRCSSNM
"RTN","GMRCAU",31,0)
PROC(GMRCO) ;Get abbreviated procedure text
"RTN","GMRCAU",32,0)
 N GMRCPROC
"RTN","GMRCAU",33,0)
 S GMRCPROC=$P(^GMR(123,+GMRCO,0),"^",8)
"RTN","GMRCAU",34,0)
 I +GMRCPROC S GMRCPROC=$$GET1^DIQ(123.3,+GMRCPROC,.01)
"RTN","GMRCAU",35,0)
 Q GMRCPROC
"RTN","GMRCAU",36,0)
 ;
"RTN","GMRCAU",37,0)
LMTX(GMRCO) ;Get the text for list manager displays
"RTN","GMRCAU",38,0)
 ;GMRCO is the consult entry from 123
"RTN","GMRCAU",39,0)
 N GMRCSVC,GMRCSSNM,GMRCREQ,GMRCORTX
"RTN","GMRCAU",40,0)
 S GMRCSSNM=$$SVC(GMRCO)
"RTN","GMRCAU",41,0)
 S GMRCREQ=$$PROC(GMRCO)
"RTN","GMRCAU",42,0)
 S GMRCORTX=$S($L(GMRCREQ):($E(GMRCSSNM,1,10)_" "_$E(GMRCREQ,1,10)),1:$E(GMRCSSNM,1,20))
"RTN","GMRCAU",43,0)
 Q GMRCORTX
"RTN","GMRCAU",44,0)
 ;
"RTN","GMRCAU",45,0)
 ;
"RTN","GMRCAU",46,0)
VALID(GMRCSER,GMRCO,GMRCUSER,GMRCTST,GMRCIFC) ;Get users update authority
"RTN","GMRCAU",47,0)
 ; check GMRCSS and all parents for authority
"RTN","GMRCAU",48,0)
 ; codes returned are same as $$VALIDU
"RTN","GMRCAU",49,0)
 N GMRCUPDL,GMRCLIS,GMRCHKD,GMRCNT,GMRCLP,GMRCQUIT
"RTN","GMRCAU",50,0)
 I '$G(GMRCUSER) S GMRCUSER=DUZ
"RTN","GMRCAU",51,0)
 ; check initial service first
"RTN","GMRCAU",52,0)
 S GMRCUPDL=$$VALIDU(GMRCSER,GMRCUSER,$G(GMRCIFC)) I +GMRCUPDL D  G VALEX
"RTN","GMRCAU",53,0)
 . I $G(GMRCTST) S $P(GMRCUPDL,U,3)=$P($G(^GMR(123.5,+GMRCSER,0)),U)
"RTN","GMRCAU",54,0)
 S GMRCHKD(+GMRCSER)="",GMRCNT=1
"RTN","GMRCAU",55,0)
 ; find parents if set to process, quit if none
"RTN","GMRCAU",56,0)
 I '$P($G(^GMR(123.5,+GMRCSER,0)),U,7) G VALEX ;process parents = 0
"RTN","GMRCAU",57,0)
 D FINDPAR(GMRCSER,.GMRCNT) I '$D(GMRCLIS) S GMRCUPDL=0 G VALEX
"RTN","GMRCAU",58,0)
 S GMRCLP=0
"RTN","GMRCAU",59,0)
 F  S GMRCLP=$O(GMRCLIS(GMRCLP)) Q:'GMRCLP!($D(GMRCQUIT))  D  I +GMRCUPDL G VALEX
"RTN","GMRCAU",60,0)
 . I +$P(GMRCLIS(GMRCLP),U,2) K GMRCLIS(GMRCLP) Q  ;been checked
"RTN","GMRCAU",61,0)
 . I '$D(GMRCHKD(+GMRCLIS(GMRCLP))) D
"RTN","GMRCAU",62,0)
 .. ; check parent 
"RTN","GMRCAU",63,0)
 .. S GMRCUPDL=$$VALIDU(+GMRCLIS(GMRCLP),GMRCUSER,$G(GMRCIFC))
"RTN","GMRCAU",64,0)
 .. S GMRCHKD(+GMRCLIS(GMRCLP))=""
"RTN","GMRCAU",65,0)
 . S $P(GMRCLIS(GMRCLP),U,2)=1
"RTN","GMRCAU",66,0)
 . I +GMRCUPDL D  Q  ;got one
"RTN","GMRCAU",67,0)
 .. S:$G(GMRCTST) $P(GMRCUPDL,U,3)=$P($G(^GMR(123.5,+GMRCLIS(GMRCLP),0)),U)
"RTN","GMRCAU",68,0)
 . I $P(^GMR(123.5,+GMRCLIS(GMRCLP),0),U,7) D  ;process parents
"RTN","GMRCAU",69,0)
 .. D FINDPAR(+GMRCLIS(GMRCLP),.GMRCNT)
"RTN","GMRCAU",70,0)
 . S GMRCLP=0 ;start back at top and don't miss any
"RTN","GMRCAU",71,0)
VALEX Q GMRCUPDL
"RTN","GMRCAU",72,0)
FINDPAR(SERV,ARCNT)     ;find parents of SERV
"RTN","GMRCAU",73,0)
 ; SERV = service to find parents of
"RTN","GMRCAU",74,0)
 ; ARCNT = next array element
"RTN","GMRCAU",75,0)
 N PARENT
"RTN","GMRCAU",76,0)
 S PARENT=0
"RTN","GMRCAU",77,0)
 F  S PARENT=$O(^GMR(123.5,"APC",SERV,PARENT)) Q:'PARENT  D
"RTN","GMRCAU",78,0)
 . S GMRCLIS(ARCNT)=PARENT
"RTN","GMRCAU",79,0)
 . S ARCNT=ARCNT+1
"RTN","GMRCAU",80,0)
 Q
"RTN","GMRCAU",81,0)
 ;
"RTN","GMRCAU",82,0)
VALIDU(GMRCSS,GMRCUSR,GMRCIFC) ;Check to see if user is an update user
"RTN","GMRCAU",83,0)
 ;The value returned is the equivalent of this set of codes:
"RTN","GMRCAU",84,0)
 ;    0 = not an update user
"RTN","GMRCAU",85,0)
 ;    1 = unrestricted access user
"RTN","GMRCAU",86,0)
 ;    2 = update user
"RTN","GMRCAU",87,0)
 ;    3 = administrative update user
"RTN","GMRCAU",88,0)
 ;    4 = admin AND update user
"RTN","GMRCAU",89,0)
 ;    5 = IFC coordinator
"RTN","GMRCAU",90,0)
 ;
"RTN","GMRCAU",91,0)
 N GMRCUPD,GMRCAD,GMRCUP
"RTN","GMRCAU",92,0)
 I '$G(GMRCUSR) S GMRCUSR=DUZ
"RTN","GMRCAU",93,0)
 I '+$G(GMRCSS) Q 0
"RTN","GMRCAU",94,0)
 S GMRCAD=0,GMRCUP=0
"RTN","GMRCAU",95,0)
 I $G(GMRCIFC),$P($G(^GMR(123.5,GMRCSS,"IFC")),U,3) Q 5
"RTN","GMRCAU",96,0)
 I 'GMRCUP,$D(^GMR(123.5,+GMRCSS,123.3,"B",GMRCUSR)) D
"RTN","GMRCAU",97,0)
 . S GMRCUP=2_$$FIELD(123.3)
"RTN","GMRCAU",98,0)
 I 'GMRCUP,GMRCUSR=$P($G(^GMR(123.5,+GMRCSS,123)),"^",8) D
"RTN","GMRCAU",99,0)
 . S GMRCUP=2_$$FIELD(123.08)
"RTN","GMRCAU",100,0)
 I 'GMRCUP,+$P($G(^GMR(123.5,GMRCSS,0)),U,6) S GMRCUP=1_$$FIELD(.06)
"RTN","GMRCAU",101,0)
 I $D(^GMR(123.5,+GMRCSS,123.33,"B",GMRCUSR)) S GMRCAD=3_$$FIELD(123.33)
"RTN","GMRCAU",102,0)
 ;
"RTN","GMRCAU",103,0)
 I GMRCAD,GMRCUP Q $$BOTH(GMRCAD,GMRCUP) ;admin and upd user
"RTN","GMRCAU",104,0)
 ;
"RTN","GMRCAU",105,0)
 S GMRCUPD=0
"RTN","GMRCAU",106,0)
 ; check service teams to notify, update teams w/o
"RTN","GMRCAU",107,0)
 I 'GMRCUP N NODE F NODE=123.1,123.31 D  I +GMRCUP Q
"RTN","GMRCAU",108,0)
 . I '$D(^GMR(123.5,+GMRCSS,NODE)) Q
"RTN","GMRCAU",109,0)
 . D TEAM(.GMRCUP,NODE,GMRCUSR)
"RTN","GMRCAU",110,0)
 ;
"RTN","GMRCAU",111,0)
 I GMRCAD,GMRCUP Q $$BOTH(GMRCUP,GMRCAD) ;admin and upd user
"RTN","GMRCAU",112,0)
 ;
"RTN","GMRCAU",113,0)
 I 'GMRCAD D  ;check adm teams w/o
"RTN","GMRCAU",114,0)
 . I '$D(^GMR(123.5,+GMRCSS,123.34)) Q
"RTN","GMRCAU",115,0)
 . D TEAM(.GMRCAD,123.34,GMRCUSR)
"RTN","GMRCAU",116,0)
 ; 
"RTN","GMRCAU",117,0)
 I GMRCAD,GMRCUP Q $$BOTH(GMRCUP,GMRCAD) ;admin and upd user
"RTN","GMRCAU",118,0)
 ;
"RTN","GMRCAU",119,0)
 ; check ASU user classes in field 123.35
"RTN","GMRCAU",120,0)
 I 'GMRCUP S GMRCUP=$$USR(GMRCSS,GMRCUSR)
"RTN","GMRCAU",121,0)
 ;
"RTN","GMRCAU",122,0)
 I GMRCAD,GMRCUP Q $$BOTH(GMRCUP,GMRCAD) ;admin and upd
"RTN","GMRCAU",123,0)
 ;
"RTN","GMRCAU",124,0)
 I 'GMRCUP I $D(^GMR(123.5,+GMRCSS,123.2)) D LOC(.GMRCUP)
"RTN","GMRCAU",125,0)
 ;
"RTN","GMRCAU",126,0)
 I GMRCAD,GMRCUP Q $$BOTH(GMRCUP,GMRCAD) ;admin and upd
"RTN","GMRCAU",127,0)
 I GMRCUP,'GMRCAD Q GMRCUP ;update user only
"RTN","GMRCAU",128,0)
 I GMRCAD,'GMRCUP Q GMRCAD ;admin user only
"RTN","GMRCAU",129,0)
 Q 0
"RTN","GMRCAU",130,0)
 ;
"RTN","GMRCAU",131,0)
BOTH(ADMN,UPD) ;return string with fields if testing
"RTN","GMRCAU",132,0)
 I $G(GMRCTST) Q "4^"_$P(ADMN,U,2)_" and "_$P(UPD,U,2)
"RTN","GMRCAU",133,0)
 Q 4
"RTN","GMRCAU",134,0)
 ;
"RTN","GMRCAU",135,0)
LOC(GMRCUPD) ;Check for the DUZ in the NOTIFICATION BY PT LOCATION multiple
"RTN","GMRCAU",136,0)
 N GMRCL,GMRCTM
"RTN","GMRCAU",137,0)
 S GMRCL=0 ;Check if DUZ is associated with any location/ward
"RTN","GMRCAU",138,0)
 F  S GMRCL=$O(^GMR(123.5,+GMRCSS,123.2,GMRCL))  Q:'GMRCL!+GMRCUPD  D  Q:+GMRCUPD
"RTN","GMRCAU",139,0)
 . ;Get user and/or team assigned to location
"RTN","GMRCAU",140,0)
 . S GMRCL(0)=$G(^GMR(123.5,+GMRCSS,123.2,+GMRCL,0))
"RTN","GMRCAU",141,0)
 . I $P(GMRCL(0),"^",2)=DUZ S GMRCUPD=2 Q
"RTN","GMRCAU",142,0)
 . I $P(GMRCL(0),"^",3) S GMRCTM=$P(GMRCL(0),"^",3) ;D CHKTM
"RTN","GMRCAU",143,0)
 Q
"RTN","GMRCAU",144,0)
 ;
"RTN","GMRCAU",145,0)
TEAM(TYPE,SUBSC,USER) ;Check for the DUZ in the multiple of SUBSC
"RTN","GMRCAU",146,0)
 N GMRCTM,GMRCHIT
"RTN","GMRCAU",147,0)
 S GMRCTM=""
"RTN","GMRCAU",148,0)
 I '$G(USER) S USER=DUZ
"RTN","GMRCAU",149,0)
 F  S GMRCTM=$O(^GMR(123.5,GMRCSS,SUBSC,"B",GMRCTM)) Q:'GMRCTM!+TYPE  D
"RTN","GMRCAU",150,0)
 . S GMRCHIT=$$CHKTM(GMRCTM,USER) Q:'GMRCHIT
"RTN","GMRCAU",151,0)
 . S TYPE=$S(SUBSC=123.34:3,1:2)_$$FIELD(SUBSC)
"RTN","GMRCAU",152,0)
 Q
"RTN","GMRCAU",153,0)
 ;
"RTN","GMRCAU",154,0)
CHKTM(TEAM,PERS) ;checks for PERS in list of users on TEAM
"RTN","GMRCAU",155,0)
 ;Input:  TEAM must be set to the Order Team entry number
"RTN","GMRCAU",156,0)
 ;Output: 1 will be returned PERS is on TEAM
"RTN","GMRCAU",157,0)
 N ND,GMRCLST,FOUND
"RTN","GMRCAU",158,0)
 S GMRCLST=""
"RTN","GMRCAU",159,0)
 D TEAMPROV^ORQPTQ1(.GMRCLST,TEAM)
"RTN","GMRCAU",160,0)
 I $P(GMRCLST(1),"^",2)="No providers found." Q 0
"RTN","GMRCAU",161,0)
 S ND=0
"RTN","GMRCAU",162,0)
 F  S ND=$O(GMRCLST(ND)) Q:ND=""  I +GMRCLST(ND)=PERS S FOUND=1 Q
"RTN","GMRCAU",163,0)
 Q $S($G(FOUND):1,1:0)
"RTN","GMRCAU",164,0)
 ;
"RTN","GMRCAU",165,0)
USR(SERV,USER) ; check USR classes for user
"RTN","GMRCAU",166,0)
 N UCLS,UPD
"RTN","GMRCAU",167,0)
 I '$O(^GMR(123.5,+SERV,123.35,0)) Q 0
"RTN","GMRCAU",168,0)
 S UCLS=0,UPD=0
"RTN","GMRCAU",169,0)
 F  S UCLS=$O(^GMR(123.5,+SERV,123.35,"B",UCLS)) Q:'UCLS!(+UPD)  D
"RTN","GMRCAU",170,0)
 . Q:'UCLS
"RTN","GMRCAU",171,0)
 . S UPD=$$ISA^USRLM(USER,UCLS)
"RTN","GMRCAU",172,0)
 . I +UPD S UPD=2_$$FIELD(123.35)
"RTN","GMRCAU",173,0)
 . Q
"RTN","GMRCAU",174,0)
 Q UPD
"RTN","GMRCAU",175,0)
FIELD(GMRCFLD) ;return field name where became update user
"RTN","GMRCAU",176,0)
 I '$G(GMRCTST) Q ""
"RTN","GMRCAU",177,0)
 D FIELD^DID(123.5,GMRCFLD,,"LABEL","GMRCFLD")
"RTN","GMRCAU",178,0)
 Q "^"_$G(GMRCFLD("LABEL"))
"RTN","GMRCAU",179,0)
COMPLETE(GMRCA) ;Determine if the action is a complete action (10,13,14)
"RTN","GMRCAU",180,0)
 S GMRCA=$G(GMRCA)
"RTN","GMRCAU",181,0)
 Q $S(GMRCA=13:1,GMRCA=14:1,GMRCA=10:1,1:0)
"RTN","GMRCAU",182,0)
 ;   10=administrative complete, 13=ADDENDUM ADDED, 14=New Note
"RTN","GMRCAU",183,0)
 ;
"RTN","GMRCAU",184,0)
RESOLUA(GMRCA) ;Determine if action has resolution info for clinician
"RTN","GMRCAU",185,0)
 ;Action value is based on value in ^ORD(100.01,"
"RTN","GMRCAU",186,0)
 ;Returns 1 for consult resolution, 0 for pending resolution
"RTN","GMRCAU",187,0)
 S GMRCA=$G(GMRCA)
"RTN","GMRCAU",188,0)
 Q $S(GMRCA=4:1,GMRCA=6:1,GMRCA=10:1,GMRCA=11:1,GMRCA=12:1,GMRCA=13:1,GMRCA=14:1,GMRCA=19:1,1:0)
"RTN","GMRCAU",189,0)
 ;    4=Sig Findings, 6=discontinued, 10=administrative complete
"RTN","GMRCAU",190,0)
 ;    11=Edit/resubmit
"RTN","GMRCAU",191,0)
 ;    12=Disassociate result, 13=Addendum Added, 14=New Note
"RTN","GMRCAU",192,0)
 ;    19=cancelled
"RTN","GMRCAU",193,0)
 ;
"RTN","GMRCAU",194,0)
RESOLUS(GMRCSTS) ;Determine status indicates the consult has a resolution
"RTN","GMRCAU",195,0)
 ;Status value is based on values in ^ORD(100.01,"
"RTN","GMRCAU",196,0)
 ;Returns 1 for consult resolution, 0 for pending resolution
"RTN","GMRCAU",197,0)
 S GMRCSTS=$G(GMRCSTS)
"RTN","GMRCAU",198,0)
 Q $S(GMRCSTS:1,GMRCSTS=2:1,GMRCSTS=13:1,1:0)
"RTN","GMRCAU",199,0)
 ;    1=dc,2=comp,13=canc
"RTN","GMRCAU",200,0)
 ;
"RTN","GMRCAU",201,0)
TEST ;called from GMRC UPDATE AUTHORITY
"RTN","GMRCAU",202,0)
 ; determines how a user gets update authority for a service 
"RTN","GMRCAU",203,0)
 W !
"RTN","GMRCAU",204,0)
 N GMRCSRV,GMRCUSR,UPD,GMRCDG,GMRC1
"RTN","GMRCAU",205,0)
 N DIR,DIROUT,DIRUT,DUOUT,DTOUT,X,Y
"RTN","GMRCAU",206,0)
 S DIR(0)="PO^123.5:EM",DIR("A")="Select Consult Service"
"RTN","GMRCAU",207,0)
 S DIR("?")="Choose the consult service to check update status of user"
"RTN","GMRCAU",208,0)
 S DIR("??")="^D TESTHELP^GMRCAU(""ALL SERVICES"")" D ^DIR
"RTN","GMRCAU",209,0)
 I $D(DIRUT) Q
"RTN","GMRCAU",210,0)
 S GMRCSRV=+Y
"RTN","GMRCAU",211,0)
 N DIR
"RTN","GMRCAU",212,0)
 S DIR(0)="PO^200:EM",DIR("A")="Choose user to check for update status"
"RTN","GMRCAU",213,0)
 D ^DIR I $D(DIRUT) Q
"RTN","GMRCAU",214,0)
 S GMRCUSR=+Y
"RTN","GMRCAU",215,0)
 S UPD=$$VALID(GMRCSRV,,GMRCUSR,1)
"RTN","GMRCAU",216,0)
 I +UPD=0 W !!,"This user has no update authority"
"RTN","GMRCAU",217,0)
 I +UPD D
"RTN","GMRCAU",218,0)
 . I +UPD=2 W !!,"This user is an update user for: ",$P(UPD,U,3)
"RTN","GMRCAU",219,0)
 . I +UPD=3 W !!,"This user is an administrative user for: ",$P(UPD,U,3)
"RTN","GMRCAU",220,0)
 . I +UPD=4 D
"RTN","GMRCAU",221,0)
 .. W !!,"This user is both and administrative and update user"
"RTN","GMRCAU",222,0)
 .. W " for: ",!,$P(UPD,U,3)
"RTN","GMRCAU",223,0)
 . W !,"via the ",$P(UPD,U,2)," field",$S(+UPD=4:"(s).",1:".")
"RTN","GMRCAU",224,0)
 . W ! I $L($P(UPD,U,3)) D
"RTN","GMRCAU",225,0)
 .. I $P(UPD,U,3)'=$P(^GMR(123.5,+GMRCSRV,0),U) D HIER^GMRCT($P(UPD,U,3))
"RTN","GMRCAU",226,0)
 W !!
"RTN","GMRCAU",227,0)
 K GMRCSRV,GMRCUSR,UPD
"RTN","GMRCAU",228,0)
 K DIR,DIROUT,DIRUT,DUOUT,DTOUT,X,Y
"RTN","GMRCAU",229,0)
 G TEST
"RTN","GMRCAU",230,0)
TESTHELP(GMRCSVNM) ;wrapper for LISTSRV^GMRCASV
"RTN","GMRCAU",231,0)
 N DIR,GMRC1,GMRCDG
"RTN","GMRCAU",232,0)
 D LISTSRV^GMRCASV
"RTN","GMRCAU",233,0)
 Q
"RTN","GMRCAU",234,0)
TSTINTRO ;entry action of GMRC UPDATE AUTHORITY option
"RTN","GMRCAU",235,0)
 W !!,"This option will allow you to check a user's update authority for any given"
"RTN","GMRCAU",236,0)
 W !,"service in the consults hierarchy.  If the PROCESS PARENTS FOR UPDATES field"
"RTN","GMRCAU",237,0)
 W !,"is set to YES, all ancestors of the selected service will be checked."
"RTN","GMRCAU",238,0)
 W !,"The type of update authority and the service to which they are assigned will"
"RTN","GMRCAU",239,0)
 W !,"be displayed.",!!
"RTN","GMRCAU",240,0)
 Q
"RTN","GMRCCP")
0^4^B36410418^B35721674
"RTN","GMRCCP",1,0)
GMRCCP ;SLC/JFR - utilities for clinical procedures; 10/07/04 15:24
"RTN","GMRCCP",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**17,25,37,55**;DEC 27, 1997;Build 4
"RTN","GMRCCP",3,0)
 ; 
"RTN","GMRCCP",4,0)
 ; This routine invokes IAs #3378,#3468
"RTN","GMRCCP",5,0)
 ;
"RTN","GMRCCP",6,0)
 Q
"RTN","GMRCCP",7,0)
CPLIST(GMRCPT,GMRCPR,GMRCRET) ;return list of patient CP requests
"RTN","GMRCCP",8,0)
 ; Input:
"RTN","GMRCCP",9,0)
 ;   GMRCPT = patient DFN              (required)
"RTN","GMRCCP",10,0)
 ;   GMRCPR = ien from file 702.01     (optional)
"RTN","GMRCCP",11,0)
 ;            if just one procedure
"RTN","GMRCCP",12,0)
 ;            desired; defaults to all
"RTN","GMRCCP",13,0)
 ;   GMRCRET= global array in which to (required)
"RTN","GMRCCP",14,0)
 ;            return results
"RTN","GMRCCP",15,0)
 ;
"RTN","GMRCCP",16,0)
 ; Output:
"RTN","GMRCCP",17,0)
 ;   ^global(array)=
"RTN","GMRCCP",18,0)
 ;          date of request^CP DEF nam^urgency^status^cons #^CP DEF ien
"RTN","GMRCCP",19,0)
 ;
"RTN","GMRCCP",20,0)
 N GMRCDA,COUNT
"RTN","GMRCCP",21,0)
 S COUNT=1
"RTN","GMRCCP",22,0)
 I '$G(GMRCPT)!('$D(GMRCRET)) Q
"RTN","GMRCCP",23,0)
 I $G(GMRCPR) D
"RTN","GMRCCP",24,0)
 . S GMRCDA=0
"RTN","GMRCCP",25,0)
 . F  S GMRCDA=$O(^GMR(123,"ACP",GMRCPR,GMRCPT,GMRCDA)) Q:'GMRCDA  D
"RTN","GMRCCP",26,0)
 .. I '$$EXTDATA^MDAPI(GMRCPR) Q  ; if no ext. data, don't send
"RTN","GMRCCP",27,0)
 .. D LOADAR(GMRCDA,GMRCRET,COUNT) S COUNT=COUNT+1
"RTN","GMRCCP",28,0)
 . Q
"RTN","GMRCCP",29,0)
 I '$G(GMRCPR) S GMRCPR=0 D
"RTN","GMRCCP",30,0)
 . F  S GMRCPR=$O(^GMR(123,"ACP",GMRCPR)) Q:'GMRCPR  D
"RTN","GMRCCP",31,0)
 .. I '$$EXTDATA^MDAPI(GMRCPR) Q  ;don't send if no ext. data
"RTN","GMRCCP",32,0)
 .. S GMRCDA=0
"RTN","GMRCCP",33,0)
 .. F  S GMRCDA=$O(^GMR(123,"ACP",GMRCPR,GMRCPT,GMRCDA)) Q:'GMRCDA  D
"RTN","GMRCCP",34,0)
 ... D LOADAR(GMRCDA,GMRCRET,COUNT) S COUNT=COUNT+1
"RTN","GMRCCP",35,0)
 .. Q
"RTN","GMRCCP",36,0)
 . Q
"RTN","GMRCCP",37,0)
 Q
"RTN","GMRCCP",38,0)
 ;
"RTN","GMRCCP",39,0)
LOADAR(IEN,GMRCAR,CNT) ;set up array and return data for given file 123 ien
"RTN","GMRCCP",40,0)
 N GMRCDT,GMRCCP,GMRCUR,STS,GMRC,GMRCCPI
"RTN","GMRCCP",41,0)
 Q:'$D(^GMR(123,IEN,0))
"RTN","GMRCCP",42,0)
 Q:'+$G(^GMR(123,IEN,1))
"RTN","GMRCCP",43,0)
 S GMRC(0)=^GMR(123,IEN,0)
"RTN","GMRCCP",44,0)
 S GMRCDT=$P(GMRC(0),U,7)
"RTN","GMRCCP",45,0)
 S GMRCCPI=+^GMR(123,IEN,1)
"RTN","GMRCCP",46,0)
 S GMRCCP=$$GET1^DIQ(702.01,GMRCCPI,.01)
"RTN","GMRCCP",47,0)
 S GMRCUR=$$GET1^DIQ(101,+$P(GMRC(0),U,9),1)
"RTN","GMRCCP",48,0)
 S STS=$$GET1^DIQ(100.01,+$P(GMRC(0),U,12),.1)
"RTN","GMRCCP",49,0)
 S @(GMRCAR)@(CNT)=GMRCDT_U_GMRCCP_U_GMRCUR_U_STS_U_IEN_U_GMRCCPI
"RTN","GMRCCP",50,0)
 Q
"RTN","GMRCCP",51,0)
 ;
"RTN","GMRCCP",52,0)
CPROC(PROC) ;is orderable procedure mapped to Clinical Procedures
"RTN","GMRCCP",53,0)
 Q +$P($G(^GMR(123.3,PROC,0)),U,4)
"RTN","GMRCCP",54,0)
CPLINK(PROC) ;check "AC" x-ref to see if PROC is linked to entry in 123.3
"RTN","GMRCCP",55,0)
 ; PROC - ien from 702.01
"RTN","GMRCCP",56,0)
 Q $E($D(^GMR(123.3,"AC",+PROC)),1)
"RTN","GMRCCP",57,0)
CPLINKS(NAMES,PROC) ;return list of procedure names linked to a CP
"RTN","GMRCCP",58,0)
 ; Input
"RTN","GMRCCP",59,0)
 ;   PROC - ien from PROCEDURE DEFINITION (#702.01)   - (required)
"RTN","GMRCCP",60,0)
 ; Output:
"RTN","GMRCCP",61,0)
 ;   NAMES - passed by reference 
"RTN","GMRCCP",62,0)
 ;           returned as array of GMRC PROCEDUREs linked to PROC 
"RTN","GMRCCP",63,0)
 ;           in format;
"RTN","GMRCCP",64,0)
 ;             NAMES(x)=GMRC PROCEDURE name^GMRC PROCEDURE ien
"RTN","GMRCCP",65,0)
 ;               NAMES(1)="EKG^21"
"RTN","GMRCCP",66,0)
 ;               NAMES(2)="EKG PORTABLE^32"
"RTN","GMRCCP",67,0)
 ;           if not currently linked, returned as:
"RTN","GMRCCP",68,0)
 ;             NAMES(1)="-1^not currently linked"
"RTN","GMRCCP",69,0)
 N GMRCPR,I
"RTN","GMRCCP",70,0)
 S I=1,GMRCPR=0
"RTN","GMRCCP",71,0)
 F  S GMRCPR=$O(^GMR(123.3,"AC",PROC,GMRCPR)) Q:'GMRCPR  D
"RTN","GMRCCP",72,0)
 . S NAMES(I)=$P($G(^GMR(123.3,GMRCPR,0)),U)_U_GMRCPR
"RTN","GMRCCP",73,0)
 . S I=I+1
"RTN","GMRCCP",74,0)
 I '$D(NAMES(1)) S NAMES(1)="-1^not currently linked"
"RTN","GMRCCP",75,0)
 Q
"RTN","GMRCCP",76,0)
CPDOC(GMRCDA,TIUDA,ACTION) ;update file 123 entry with CLIN PROC DOC
"RTN","GMRCCP",77,0)
 ; Input:
"RTN","GMRCCP",78,0)
 ;   GMRCDA = ien from file 123
"RTN","GMRCCP",79,0)
 ;   TIUDA  = ien from file 8925
"RTN","GMRCCP",80,0)
 ;   ACTION = 1   - associate stub record
"RTN","GMRCCP",81,0)
 ;          = 2   - partial results ready
"RTN","GMRCCP",82,0)
 ;          = 3   - retract record
"RTN","GMRCCP",83,0)
 ;
"RTN","GMRCCP",84,0)
 ; Output: 
"RTN","GMRCCP",85,0)
 ;   1       = successful
"RTN","GMRCCP",86,0)
 ;   0^error = unsuccessful^problem 
"RTN","GMRCCP",87,0)
 ;
"RTN","GMRCCP",88,0)
 ;
"RTN","GMRCCP",89,0)
 N QVAL,GMRCADUZ
"RTN","GMRCCP",90,0)
 I '$D(^GMR(123,+GMRCDA,0)) Q "0^Invalid procedure record"
"RTN","GMRCCP",91,0)
 I '$G(ACTION) Q "0^Invalid action code"
"RTN","GMRCCP",92,0)
 I '$G(TIUDA) Q "0^No document to associate"
"RTN","GMRCCP",93,0)
 S QVAL=""
"RTN","GMRCCP",94,0)
 I ACTION=1 D  Q QVAL
"RTN","GMRCCP",95,0)
 . S QVAL="0^Not a current API implementation"
"RTN","GMRCCP",96,0)
 . Q
"RTN","GMRCCP",97,0)
 I ACTION=2 D  Q QVAL
"RTN","GMRCCP",98,0)
 . N GMRCCPA
"RTN","GMRCCP",99,0)
 . I $D(^GMR(123,+GMRCDA,50,"B",TIUDA_";TIU(8925")) Q
"RTN","GMRCCP",100,0)
 . S GMRCCPA=1 ; tell audit trail it's coming from CP ; slc/jfr 1/15/03
"RTN","GMRCCP",101,0)
 . D GET^GMRCTIU(+GMRCDA,TIUDA,"INCOMPLETE") ;update to pr
"RTN","GMRCCP",102,0)
 . D EN^GMRCT(+$P(^GMR(123,+GMRCDA,0),U,5)) ;get svc notif recips
"RTN","GMRCCP",103,0)
 . I $D(GMRCADUZ) D
"RTN","GMRCCP",104,0)
 .. N MSG,GMRCDFN,GMRCREF
"RTN","GMRCCP",105,0)
 .. S MSG="Procedure ready for interpretation"
"RTN","GMRCCP",106,0)
 .. S GMRCDFN=$P(^GMR(123,+GMRCDA,0),U,2)
"RTN","GMRCCP",107,0)
 .. S GMRCREF=+GMRCDA_"|"_+TIUDA_";TIU(8925,"
"RTN","GMRCCP",108,0)
 .. D MSG^GMRCP(GMRCDFN,MSG,GMRCREF,66,.GMRCADUZ,0) ;send #66 alert
"RTN","GMRCCP",109,0)
 . S QVAL="1"
"RTN","GMRCCP",110,0)
 . Q
"RTN","GMRCCP",111,0)
 I ACTION=3 D  Q QVAL
"RTN","GMRCCP",112,0)
 . I '$D(^GMR(123,+GMRCDA,50,"B",TIUDA_";TIU(8925")) D  Q
"RTN","GMRCCP",113,0)
 .. S QVAL="0^Not an associated document"
"RTN","GMRCCP",114,0)
 . D ROLLBACK^GMRCTIU1(+GMRCDA,+TIUDA)
"RTN","GMRCCP",115,0)
 . S QVAL=1
"RTN","GMRCCP",116,0)
 . Q
"RTN","GMRCCP",117,0)
 Q
"RTN","GMRCCP",118,0)
CPACTM(GMRCDA) ;return actions available for a CP request
"RTN","GMRCCP",119,0)
 ;Input:
"RTN","GMRCCP",120,0)
 ;  GMRCDA = file 123 ien
"RTN","GMRCCP",121,0)
 ;Output:
"RTN","GMRCCP",122,0)
 ;  0 = not a CP request or TIU*1*109 not present
"RTN","GMRCCP",123,0)
 ;  1 = CP request but no instrument report expected
"RTN","GMRCCP",124,0)
 ;  2 = CP and still waiting on instr. or images
"RTN","GMRCCP",125,0)
 ;  3 = CP and incomplete CP doc attached
"RTN","GMRCCP",126,0)
 ;  4 = CP and complete CP doc attached
"RTN","GMRCCP",127,0)
 ;
"RTN","GMRCCP",128,0)
 N EXTDTA,CPDOC
"RTN","GMRCCP",129,0)
 I '$$PATCH^XPDUTL("TIU*1.0*109") Q 0
"RTN","GMRCCP",130,0)
 I '$G(^GMR(123,GMRCDA,1)) Q 0
"RTN","GMRCCP",131,0)
 S EXTDTA=$$EXTDATA^MDAPI(+^GMR(123,GMRCDA,1))
"RTN","GMRCCP",132,0)
 S CPDOC=$G(^GMR(123,GMRCDA,50,+$O(^GMR(123,GMRCDA,50,0)),0))
"RTN","GMRCCP",133,0)
 I 'EXTDTA,'+CPDOC Q 1 ;no ext & no stub
"RTN","GMRCCP",134,0)
 I EXTDTA,'+CPDOC Q 2 ;ext data & no data
"RTN","GMRCCP",135,0)
 I $$GET1^DIQ(8925,+CPDOC,.05)'="COMPLETED" Q 3 ;partial results
"RTN","GMRCCP",136,0)
 Q 4 ;CP is done, allow additional CP titles
"RTN","GMRCCP",137,0)
 ;
"RTN","GMRCCP",138,0)
CPINTERP(GMRCTIU,GMRCUSER) ;is user an interpreter for TIU doc GMRCTIU
"RTN","GMRCCP",139,0)
 ;
"RTN","GMRCCP",140,0)
 ; Input:
"RTN","GMRCCP",141,0)
 ;   GMRCTIU   = ien from file 8925
"RTN","GMRCCP",142,0)
 ;   GMRCUSER  = DUZ of person to evaluate
"RTN","GMRCCP",143,0)
 ;
"RTN","GMRCCP",144,0)
 ; Output:
"RTN","GMRCCP",145,0)
 ;   1 = GMRCUSER is an interpreter
"RTN","GMRCCP",146,0)
 ;   0 = GMRCUSER is NOT an interpreter
"RTN","GMRCCP",147,0)
 ;
"RTN","GMRCCP",148,0)
 N GMRCSRV,GMRCDA,GMRCINT
"RTN","GMRCCP",149,0)
 S GMRCDA=$O(^GMR(123,"R",GMRCTIU_";TIU(8925,",0))
"RTN","GMRCCP",150,0)
 I 'GMRCDA Q 0 ;TIU doc not attached
"RTN","GMRCCP",151,0)
 S GMRCSRV=$P(^GMR(123,+GMRCDA,0),U,5)
"RTN","GMRCCP",152,0)
 I 'GMRCSRV Q 0 ;no service, can't tell if interpreter
"RTN","GMRCCP",153,0)
 S GMRCINT=+$$VALID^GMRCAU(GMRCSRV,,GMRCUSER) ;get upd authority
"RTN","GMRCCP",154,0)
 Q $S(GMRCINT=1:1,GMRCINT=2:1,GMRCINT=4:1,1:0) ;1=unrstrctd (upd) user, 2=upd user, 4=adm & upd user
"RTN","GMRCCP",155,0)
 ;
"RTN","GMRCCP",156,0)
CPPAT(GMRCDA,GMRCDFN) ;is patient object of given request?
"RTN","GMRCCP",157,0)
 ; Input:
"RTN","GMRCCP",158,0)
 ;  GMRCDA   = ien from file 123
"RTN","GMRCCP",159,0)
 ;  GMRCDFN  = patient DFN
"RTN","GMRCCP",160,0)
 ;
"RTN","GMRCCP",161,0)
 ; Output:
"RTN","GMRCCP",162,0)
 ;  1 = patient is object of request GMRCDA
"RTN","GMRCCP",163,0)
 ;  0 = patient is NOT object of request in GMRCDA
"RTN","GMRCCP",164,0)
 I $P($G(^GMR(123,GMRCDA,0)),U,2)'=GMRCDFN Q 0
"RTN","GMRCCP",165,0)
 Q 1
"RTN","GMRCCP",166,0)
 ;
"RTN","GMRCCP",167,0)
MCCNVT(GMRCMOD,GMRCMC,GMRCTIU) ;convert MC pointer to TIU pointer in file 123
"RTN","GMRCCP",168,0)
 ;Input:
"RTN","GMRCCP",169,0)
 ;  GMRCMOD = boolean 1 (convert if found) or 0 (test conversion)
"RTN","GMRCCP",170,0)
 ;  GMRCMC  = var;ptr to a Medicine package result
"RTN","GMRCCP",171,0)
 ;  GMRCTIU = ptr to file 8925
"RTN","GMRCCP",172,0)
 ;
"RTN","GMRCCP",173,0)
 ;Output:
"RTN","GMRCCP",174,0)
 ;  -1^Description of error
"RTN","GMRCCP",175,0)
 ;   0^No Action needed 
"RTN","GMRCCP",176,0)
 ;   1^Success message^Consult IEN
"RTN","GMRCCP",177,0)
 ;
"RTN","GMRCCP",178,0)
 I '$D(GMRCMOD) Q "-1^Mode unknown"
"RTN","GMRCCP",179,0)
 I '$G(GMRCMC) Q "-1^No MC results sent"
"RTN","GMRCCP",180,0)
 N GMRCIEN,GMRCRIEN,GMRCACT,GMRCERR,FDA
"RTN","GMRCCP",181,0)
 S GMRCIEN=$O(^GMR(123,"R",GMRCMC,0))
"RTN","GMRCCP",182,0)
 I 'GMRCIEN Q "0^No action needed"
"RTN","GMRCCP",183,0)
 I GMRCMOD=0 Q "1^Not converted^"_GMRCIEN
"RTN","GMRCCP",184,0)
 I '$G(GMRCTIU) Q "-1^No TIU ref sent"
"RTN","GMRCCP",185,0)
 S GMRCRIEN=$O(^GMR(123,"R",GMRCMC,GMRCIEN,0))
"RTN","GMRCCP",186,0)
 S FDA(1,123.03,GMRCRIEN_","_GMRCIEN_",",.01)=GMRCTIU_";TIU(8925,"
"RTN","GMRCCP",187,0)
 D FILE^DIE("K","FDA(1)","GMRCERR")
"RTN","GMRCCP",188,0)
 I $D(GMRCERR) Q "-1^Unable to convert"
"RTN","GMRCCP",189,0)
 ; rest of field conversions
"RTN","GMRCCP",190,0)
 I $P(^GMR(123,GMRCIEN,0),U,15)=GMRCMC D
"RTN","GMRCCP",191,0)
 . S FDA(1,123,GMRCIEN_",",11)="@"
"RTN","GMRCCP",192,0)
 . D FILE^DIE("K","FDA(1)","GMRCERR")
"RTN","GMRCCP",193,0)
 ;
"RTN","GMRCCP",194,0)
 S GMRCACT=0
"RTN","GMRCCP",195,0)
 F  S GMRCACT=$O(^GMR(123,GMRCIEN,40,GMRCACT)) Q:'GMRCACT  D
"RTN","GMRCCP",196,0)
 . I $P(^GMR(123,GMRCIEN,40,GMRCACT,0),U,9)'=GMRCMC Q  ;no need to chg
"RTN","GMRCCP",197,0)
 . K FDA,GMRCERR
"RTN","GMRCCP",198,0)
 . S FDA(1,123.02,GMRCACT_","_GMRCIEN_",",9)=GMRCTIU_";TIU(8925,"
"RTN","GMRCCP",199,0)
 . D FILE^DIE("K","FDA(1)","GMRCERR")
"RTN","GMRCCP",200,0)
 ; NO IFC implications at this time
"RTN","GMRCCP",201,0)
 Q "1^Successfully converted^"_GMRCIEN
"RTN","GMRCCP",202,0)
 ;
"RTN","GMRCCP",203,0)
 Q
"RTN","GMRCGUIB")
0^5^B43683798^B43541445
"RTN","GMRCGUIB",1,0)
GMRCGUIB ;SLC/DCM,JFR,MA - GUI actions for consults ;8/19/03 07:31
"RTN","GMRCGUIB",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**4,12,18,20,17,22,29,30,35,45,53,55**;DEC 27, 1997;Build 4
"RTN","GMRCGUIB",3,0)
 ; This routine invokes IA #2980
"RTN","GMRCGUIB",4,0)
 ;
"RTN","GMRCGUIB",5,0)
SETDA() ;set DA of where audit actions are to be filed
"RTN","GMRCGUIB",6,0)
 S:'$D(^GMR(123,+GMRCO,40,0)) ^GMR(123,GMRCO,40,0)="^123.02DA^^"
"RTN","GMRCGUIB",7,0)
 S DA=$S($P(^GMR(123,+GMRCO,40,0),"^",3):$P(^(0),"^",3)+1,1:1)
"RTN","GMRCGUIB",8,0)
 S $P(^GMR(123,+GMRCO,40,0),"^",3,4)=DA_"^"_DA
"RTN","GMRCGUIB",9,0)
 Q DA
"RTN","GMRCGUIB",10,0)
REASON(GMRCFN,GMRCRQ,GMRCDT) ;Load the reason for the request into ^GMR(123,GMRCO,20
"RTN","GMRCGUIB",11,0)
 ;GMRCFN=File 123 IFN; GMRCRQ=Array containing Reason For Request
"RTN","GMRCGUIB",12,0)
 ;GMRCDT=Date time of entry
"RTN","GMRCGUIB",13,0)
 S ^GMR(123,GMRCFN,20,0)="^^^"_GMRCDT_"^"
"RTN","GMRCGUIB",14,0)
 S L=0,LN=1 F  S L=$O(GMRCRQ(L)) Q:L=""  S ^GMR(123,GMRCFN,20,LN,0)=GMRCRQ(L),LN=LN+1
"RTN","GMRCGUIB",15,0)
 S LN=LN-1,$P(^GMR(123,GMRCFN,20,0),"^",3)=LN
"RTN","GMRCGUIB",16,0)
 K LN,L
"RTN","GMRCGUIB",17,0)
 Q
"RTN","GMRCGUIB",18,0)
SETCOM(COMMENT,WHO) ;Set comment array into tracking actions
"RTN","GMRCGUIB",19,0)
 N GMRCNOW,DR,DIE
"RTN","GMRCGUIB",20,0)
 S GMRCNOW=$$NOW^XLFDT
"RTN","GMRCGUIB",21,0)
 S DIE="^GMR(123,GMRCO,40,",DA(1)=GMRCO,DR=".01////^S X=GMRCNOW;1////^S X=GMRCA;2////^S X=GMRCAD;3////^S X=$G(GMRCORNP);4////^S X=$S($G(WHO):WHO,1:DUZ);6////^S X=$G(GMRCFR);8////^S X=$G(GMRCFF)"
"RTN","GMRCGUIB",22,0)
 D ^DIE
"RTN","GMRCGUIB",23,0)
 S ^GMR(123,GMRCO,40,DA,1,0)="^^^^"_GMRCAD_"^"
"RTN","GMRCGUIB",24,0)
 S (GMRCND,GMRCND1)=0 F  S GMRCND1=$O(COMMENT(GMRCND1)) Q:GMRCND1=""  S GMRCND=GMRCND+1,^GMR(123,GMRCO,40,DA,1,GMRCND,0)=COMMENT(GMRCND)
"RTN","GMRCGUIB",25,0)
 S $P(^GMR(123,GMRCO,40,DA,1,0),"^",3)=GMRCND,$P(^(0),"^",4)=GMRCND,^GMR(123,GMRCO,40,"B",GMRCNOW,DA)=""
"RTN","GMRCGUIB",26,0)
 ;
"RTN","GMRCGUIB",27,0)
 ; if an IFC, call event handler to generate a msg to remote site
"RTN","GMRCGUIB",28,0)
 I $D(^GMR(123,+GMRCO,12)),$D(^(40,DA)) D TRIGR^GMRCIEVT(GMRCO,DA)
"RTN","GMRCGUIB",29,0)
 ;
"RTN","GMRCGUIB",30,0)
 K GMRCND,GMRCND1
"RTN","GMRCGUIB",31,0)
 Q
"RTN","GMRCGUIB",32,0)
CMT(GMRCO,GMRCOM,GMRCADUZ,GMRCWHN,GMRCWHO) ;add comment to consult 
"RTN","GMRCGUIB",33,0)
 ; GMRCO = IEN from file 123
"RTN","GMRCGUIB",34,0)
 ; GMRCOM = array of comments in format GMRCOM(1)="xxxx", GMRCOM(2)="xxx"
"RTN","GMRCGUIB",35,0)
 ; GMRCADUZ = array of alert recipients as GMRCADUZ(DUZ)="" (optional)
"RTN","GMRCGUIB",36,0)
 ; GMRCWHO = IEN from file 200 who's responsible activity (optional)
"RTN","GMRCGUIB",37,0)
 ; GMRCWHN = date time of activity in FM format
"RTN","GMRCGUIB",38,0)
 ;
"RTN","GMRCGUIB",39,0)
 N DA,GMRCA,GMRCAD,GMRCORTX,GMRCDFN,GMRCTM,GMRCRP,GMRCUPD
"RTN","GMRCGUIB",40,0)
 S DA=$$SETDA ; get next activity tracking entry
"RTN","GMRCGUIB",41,0)
 S GMRCA=20,GMRCAD=GMRCWHN S:$G(GMRCWHO) GMRCORNP=GMRCWHO
"RTN","GMRCGUIB",42,0)
 D SETCOM(.GMRCOM,$G(GMRCWHO))
"RTN","GMRCGUIB",43,0)
 D  ;update LAST ACTION field even though no status change
"RTN","GMRCGUIB",44,0)
 . N GMRCDR,GMRCSTS
"RTN","GMRCGUIB",45,0)
 . S GMRCSTS="",GMRCDR="9////20"
"RTN","GMRCGUIB",46,0)
 . D STATUS^GMRCP
"RTN","GMRCGUIB",47,0)
 S GMRCDFN=$P(^GMR(123,+GMRCO,0),"^",2)
"RTN","GMRCGUIB",48,0)
 S GMRCORTX="Comment Added to Consult "
"RTN","GMRCGUIB",49,0)
 I $P($G(^GMR(123,GMRCO,12)),U,5)="P" D
"RTN","GMRCGUIB",50,0)
 . S GMRCORTX="Comment Added to remote consult "
"RTN","GMRCGUIB",51,0)
 S GMRCORTX=GMRCORTX_$$ORTX^GMRCAU(+GMRCO)
"RTN","GMRCGUIB",52,0)
 S GMRCRP=+$P(^GMR(123,GMRCO,0),U,14)
"RTN","GMRCGUIB",53,0)
 S GMRCUPD=$$VALID^GMRCAU($P(^GMR(123,+GMRCO,0),U,5),GMRCO,DUZ)
"RTN","GMRCGUIB",54,0)
 I GMRCRP=DUZ D  ;alert team if ord. prov. takes the action
"RTN","GMRCGUIB",55,0)
 . S GMRCTM=1
"RTN","GMRCGUIB",56,0)
 I GMRCUPD>1,GMRCRP'=DUZ D  ; alert ord. prov if update users takes action
"RTN","GMRCGUIB",57,0)
 . S GMRCADUZ(GMRCRP)=""
"RTN","GMRCGUIB",58,0)
 I '$G(GMRCTM),GMRCUPD<2 D  ;alert both if not ord. prov or update user
"RTN","GMRCGUIB",59,0)
 . S GMRCTM=1,GMRCADUZ(GMRCRP)=""
"RTN","GMRCGUIB",60,0)
 D MSG^GMRCP(GMRCDFN,GMRCORTX,+GMRCO,63,.GMRCADUZ,$G(GMRCTM))
"RTN","GMRCGUIB",61,0)
 Q
"RTN","GMRCGUIB",62,0)
SFILE(GMRCO,GMRCA,GMRCSF,GMRCORNP,GMRCDUZ,GMRCOM,GMRCALF,GMRCATO,GMRCAD) ;Process various file update functions from the GUI for a consult
"RTN","GMRCGUIB",63,0)
 ; ADMIN COMPLETE or SIGNIFICANT FINDINGS
"RTN","GMRCGUIB",64,0)
 ;Input variables:
"RTN","GMRCGUIB",65,0)
 ;GMRCO=File 123 IEN of the consult record
"RTN","GMRCGUIB",66,0)
 ;GMRCA=pointer to REQUEST ACTION TYPES (#123.1) 10=complete, 4=Sig find.
"RTN","GMRCGUIB",67,0)
 ;GMRCSF=Significant Findings flag: 'Y'= significant finding
"RTN","GMRCGUIB",68,0)
 ;                                : 'N'= no significant finding
"RTN","GMRCGUIB",69,0)
 ;                                : 'U'=unknown significant finding
"RTN","GMRCGUIB",70,0)
 ;GMRCORNP=Provider Responsible for action
"RTN","GMRCGUIB",71,0)
 ;GMRCDUZ=Person actually doing the action
"RTN","GMRCGUIB",72,0)
 ;GMRCOM=An array of comments by reference ARRAY(1)="xxx",ARRAY(2)="xxx"
"RTN","GMRCGUIB",73,0)
 ;GMRCALF=Flag to signal that alerts are to be sent; 'N'=NO, 'Y'=YES
"RTN","GMRCGUIB",74,0)
 ;GMRCATO=Who alerts are to be sent to; a comma delimited string of DUZ's
"RTN","GMRCGUIB",75,0)
 ;GMRCAD =FM date/time of activity
"RTN","GMRCGUIB",76,0)
 ;
"RTN","GMRCGUIB",77,0)
 ;Output:
"RTN","GMRCGUIB",78,0)
 ; GMRCERR=Error Flag: 0 if no error, 1 if error occurred
"RTN","GMRCGUIB",79,0)
 ; GMRCERMS - Error message or null
"RTN","GMRCGUIB",80,0)
 ;    returned as GMRCERR^GMRCERMS
"RTN","GMRCGUIB",81,0)
 ;
"RTN","GMRCGUIB",82,0)
 N GMRCERR,GMRCERMS
"RTN","GMRCGUIB",83,0)
 L +^GMR(123,GMRCO):5 I '$T S GMRCERR=1,GMRCERMS="Record Locked. File Update Not Accomplished." Q GMRCERR_"^"_GMRCERMS
"RTN","GMRCGUIB",84,0)
 S GMRCERR=0,GMRCERMS="",DR="",GMRCORTX=""
"RTN","GMRCGUIB",85,0)
 N GMRCADUZ S GMRCADUZ=""
"RTN","GMRCGUIB",86,0)
 S GMRCNOW=$$NOW^XLFDT,GMRCSTS=$P(^GMR(123,+GMRCO,0),"^",12),GMRCDFN=$P(^(0),"^",2)
"RTN","GMRCGUIB",87,0)
 I '$G(GMRCDUZ) S GMRCDUZ=DUZ
"RTN","GMRCGUIB",88,0)
 I '$G(GMRCAD) S GMRCAD=GMRCNOW
"RTN","GMRCGUIB",89,0)
 ;Insure comment array contains text for Complete action.
"RTN","GMRCGUIB",90,0)
 I GMRCA=10 D  I GMRCERR=1 S GMRCERMS="Comment field must contain a text value!" Q GMRCERR_"^"_GMRCERMS
"RTN","GMRCGUIB",91,0)
 . S GMRCERR=1
"RTN","GMRCGUIB",92,0)
 . I '$D(GMRCOM) Q
"RTN","GMRCGUIB",93,0)
 . N GMRCOM1 S GMRCOM1=""
"RTN","GMRCGUIB",94,0)
 . F  S GMRCOM1=$O(GMRCOM(GMRCOM1)) Q:(GMRCOM1=""!(GMRCERR=0))  D
"RTN","GMRCGUIB",95,0)
 .. I $TR($G(GMRCOM(GMRCOM1))," ","")'="" S GMRCERR=0 Q
"RTN","GMRCGUIB",96,0)
 I +$G(GMRCA),GMRCA=10 D
"RTN","GMRCGUIB",97,0)
 .S GMRCSF=$G(GMRCSF,"")
"RTN","GMRCGUIB",98,0)
 .S GMRCSTS=2
"RTN","GMRCGUIB",99,0)
 .S DR="8////^S X=GMRCSTS;9////^S X=GMRCA;15////^S X=GMRCSF"
"RTN","GMRCGUIB",100,0)
 .S GMRCORTX="Completed Consult "_$$ORTX^GMRCAU(+GMRCO)_$S(GMRCSF="Y":" with Sig Findings",GMRCSF="N":" with no Sig Findings",1:"")
"RTN","GMRCGUIB",101,0)
 .I $P($G(^GMR(123,+GMRCO,0)),U,14) S GMRCADUZ($P($G(^(0)),U,14))=""
"RTN","GMRCGUIB",102,0)
 .Q
"RTN","GMRCGUIB",103,0)
 I $G(GMRCALF)=1 D
"RTN","GMRCGUIB",104,0)
 .N I
"RTN","GMRCGUIB",105,0)
 .F I=1:1  S X=$P(GMRCATO,";",I) Q:X=""  S GMRCADUZ(X)=""
"RTN","GMRCGUIB",106,0)
 .Q
"RTN","GMRCGUIB",107,0)
 I $L(GMRCA),GMRCA=4 S DR=DR_$S($L(DR):";",1:"")_"9////^S X=GMRCA;15////^S X=GMRCSF" D
"RTN","GMRCGUIB",108,0)
 .S GMRCORTX=$S(GMRCSF="Y":"Sig Findings ",GMRCSF="N":"No Sig Findings ",1:"Unknown Sig Findings ")_"for consult "_$$ORTX^GMRCAU(GMRCO)
"RTN","GMRCGUIB",109,0)
 .I $P($G(^GMR(123,+GMRCO,0)),U,14) S GMRCADUZ($P($G(^(0)),U,14))=""
"RTN","GMRCGUIB",110,0)
 .Q
"RTN","GMRCGUIB",111,0)
 I $L(DR) S DIE="^GMR(123,",DA=GMRCO D ^DIE K DIE,DR
"RTN","GMRCGUIB",112,0)
 I '$O(GMRCOM(0)) D AUDIT^GMRCP
"RTN","GMRCGUIB",113,0)
 I $D(GMRCOM),$O(GMRCOM(0)) D
"RTN","GMRCGUIB",114,0)
 .N DA
"RTN","GMRCGUIB",115,0)
 .S DA=$$SETDA()
"RTN","GMRCGUIB",116,0)
 .D SETCOM(.GMRCOM,GMRCDUZ)
"RTN","GMRCGUIB",117,0)
 .Q
"RTN","GMRCGUIB",118,0)
 L -^GMR(123,GMRCO)
"RTN","GMRCGUIB",119,0)
 ;
"RTN","GMRCGUIB",120,0)
 D MSG^GMRCP(GMRCDFN,GMRCORTX,+GMRCO,$S(GMRCA=20:63,1:23),.GMRCADUZ,0)
"RTN","GMRCGUIB",121,0)
 ;
"RTN","GMRCGUIB",122,0)
 I $S(GMRCA=10:1,(GMRCA=4&($P(^GMR(123,GMRCO,0),U,12)=2)):1,1:0) D
"RTN","GMRCGUIB",123,0)
 . D EN^GMRCHL7($P(^GMR(123,GMRCO,0),"^",2),GMRCO,$G(GMRCTYPE),$G(GMRCRB),"RE",GMRCORNP,$G(GMRCVSIT),.GMRCOM,,GMRCAD)
"RTN","GMRCGUIB",124,0)
 K DIE,DR,DA,GMRCDT,GMRCNOW,GMRCAD,GMRCORNP,GMRCDUZ,GMRCRSLT,GMRCSTS,GMRCADUZ,GMRCORTX,GMRCDFN
"RTN","GMRCGUIB",125,0)
 Q GMRCERR_"^"_GMRCERMS
"RTN","GMRCGUIB",126,0)
 ;
"RTN","GMRCGUIB",127,0)
SCH(GMRCO,GMRCORNP,GMRCAD,GMRCADUZ,GMRCMT) ;schedule a consult API
"RTN","GMRCGUIB",128,0)
 ; Input variables:
"RTN","GMRCGUIB",129,0)
 ;GMRCO - The internal file number of the consult from File 123
"RTN","GMRCGUIB",130,0)
 ;GMRCORNP - Name of the person who actually 'Received' the consult 
"RTN","GMRCGUIB",131,0)
 ;GMRCAD - Actual date time that consult was received into the service.
"RTN","GMRCGUIB",132,0)
 ;GMRCADUZ - array of alert recipients as chosen by user (by reference)
"RTN","GMRCGUIB",133,0)
 ;   ARRAY(DUZ)="" 
"RTN","GMRCGUIB",134,0)
 ;GMRCMT - array of comments if entered (by reference)
"RTN","GMRCGUIB",135,0)
 ;   ARRAY(1)="FIRST LINE OF COMMENT"
"RTN","GMRCGUIB",136,0)
 ;   ARRAY(2)="SECOND LINE OF COMMENT"
"RTN","GMRCGUIB",137,0)
 ;
"RTN","GMRCGUIB",138,0)
 ;Output:
"RTN","GMRCGUIB",139,0)
 ;GMRCERR - Error Condition Code: 0 = NO error, 1=error
"RTN","GMRCGUIB",140,0)
 ;GMRCERMS - Error message or null
"RTN","GMRCGUIB",141,0)
 ;  returned as GMRCERR^GMRCERMS
"RTN","GMRCGUIB",142,0)
        ;
"RTN","GMRCGUIB",143,0)
 N DFN,GMRCSTS,GMRCNOW,GMRCERR,GMRCERMS
"RTN","GMRCGUIB",144,0)
 S GMRCERR=0,GMRCERMS="",GMRCNOW=$$NOW^XLFDT
"RTN","GMRCGUIB",145,0)
 S:$G(GMRCAD)="" GMRCAD=GMRCNOW
"RTN","GMRCGUIB",146,0)
 S:'$G(GMRCDUZ) GMRCDUZ=DUZ
"RTN","GMRCGUIB",147,0)
 S DFN=$P($G(^GMR(123,GMRCO,0)),"^",2) I DFN="" D  Q GMRCERR_"^"_GMRCERMS
"RTN","GMRCGUIB",148,0)
 . S GMRCERR="1",GMRCERMS="Not A Valid Consult - File Not Found."
"RTN","GMRCGUIB",149,0)
 . D EXIT^GMRCGUIA
"RTN","GMRCGUIB",150,0)
 S GMRCSTS=8,GMRCA=8
"RTN","GMRCGUIB",151,0)
 D STATUS^GMRCP I $D(GMRCQUT) D EXIT^GMRCGUIA Q GMRCERR_"^"_GMRCERMS
"RTN","GMRCGUIB",152,0)
 I '$O(GMRCMT(0)) D AUDIT^GMRCP
"RTN","GMRCGUIB",153,0)
 I $O(GMRCMT(0)) D
"RTN","GMRCGUIB",154,0)
 . S DA=$$SETDA
"RTN","GMRCGUIB",155,0)
 . D SETCOM(.GMRCMT,GMRCDUZ)
"RTN","GMRCGUIB",156,0)
 D EN^GMRCHL7(DFN,GMRCO,"","","SC",GMRCORNP,"","","",GMRCAD)
"RTN","GMRCGUIB",157,0)
 D  ;send alerts
"RTN","GMRCGUIB",158,0)
 . N TXT
"RTN","GMRCGUIB",159,0)
 . S TXT="Scheduled Consult: "_$$ORTX^GMRCAU(GMRCO)
"RTN","GMRCGUIB",160,0)
 . I $P(^GMR(123,+GMRCO,0),U,14) S GMRCADUZ($P(^(0),U,14))=""
"RTN","GMRCGUIB",161,0)
 . D MSG^GMRCP(DFN,TXT,GMRCO,63,.GMRCADUZ,0)
"RTN","GMRCGUIB",162,0)
 D EXIT^GMRCGUIA
"RTN","GMRCGUIB",163,0)
 Q GMRCERR_"^"_GMRCERMS
"RTN","GMRCGUIB",164,0)
DOCLIST(GMRCAR,GMRCDA,GMRCMED)  ;return list of linked results
"RTN","GMRCGUIB",165,0)
 ; Input:
"RTN","GMRCGUIB",166,0)
 ;  GMRCAR - array to return list, passed by reference
"RTN","GMRCGUIB",167,0)
 ;  GMRCDA - ien from file 123
"RTN","GMRCGUIB",168,0)
 ;  GMRCMED- 1 = include med results; 0 = only TIU docs
"RTN","GMRCGUIB",169,0)
 ;
"RTN","GMRCGUIB",170,0)
 ; Output:
"RTN","GMRCGUIB",171,0)
 ;  GMRCAR - array in format
"RTN","GMRCGUIB",172,0)
 ;       GMRCAR(0)=zero node of record
"RTN","GMRCGUIB",173,0)
 ;       GMRCAR(50,1)="ien;global ref," e.g. 5;TIU(8925, or 3;MCAR(691,
"RTN","GMRCGUIB",174,0)
 ;       GMRCAR(50,2)="ien;global ref,"
"RTN","GMRCGUIB",175,0)
 ;
"RTN","GMRCGUIB",176,0)
 I '$D(^GMR(123,GMRCDA,0)) Q
"RTN","GMRCGUIB",177,0)
 S GMRCAR(0)=^GMR(123,GMRCDA,0),$P(GMRCAR(0),U,20)=""
"RTN","GMRCGUIB",178,0)
 N RES,CNT S RES="",CNT=1
"RTN","GMRCGUIB",179,0)
 F  S RES=$O(^GMR(123,GMRCDA,50,"B",RES)) Q:RES=""  D
"RTN","GMRCGUIB",180,0)
 . I '$G(GMRCMED) Q:RES'["TIU(8925"
"RTN","GMRCGUIB",181,0)
 . S GMRCAR(50,CNT)=RES
"RTN","GMRCGUIB",182,0)
 . I RES["MCAR" D
"RTN","GMRCGUIB",183,0)
 .. N ARR,STR
"RTN","GMRCGUIB",184,0)
 .. D MEDLKUP^MCARUTL3(.ARR,+$P(RES,"MCAR(",2),+RES)
"RTN","GMRCGUIB",185,0)
 .. I '+ARR K GMRCAR(50,CNT) Q
"RTN","GMRCGUIB",186,0)
 .. S STR=$P(ARR,U,9)_U_$P(ARR,U,6)_$S($P(ARR,U,10):"^^^^^^^^1",1:"")
"RTN","GMRCGUIB",187,0)
 .. S GMRCAR(50,CNT)=GMRCAR(50,CNT)_U_STR
"RTN","GMRCGUIB",188,0)
 . S CNT=CNT+1
"RTN","GMRCGUIB",189,0)
 Q
"RTN","GMRCP")
0^6^B20265103^B19313009
"RTN","GMRCP",1,0)
GMRCP ;SLC/DLT,DCM - Message audit and status process ;4/19/01  11:52
"RTN","GMRCP",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**1,4,17,22,27,53,55**;DEC 27, 1997;Build 4
"RTN","GMRCP",3,0)
 ;Processing action on Generic Requests/Consults from OE/RR
"RTN","GMRCP",4,0)
MSG(GMRCDFN,GMRCALRM,GMRCIFN,ORN,GMRCADUZ,FLG) ;send alert notification information to OERR for notification or update
"RTN","GMRCP",5,0)
 ;GMRCDFN=patient's DFN           GMRCORFN=OR file # ^OR(100,GMRCORFN
"RTN","GMRCP",6,0)
 ;GMRCALRM=alert message to be displayed with alert
"RTN","GMRCP",7,0)
 ;GMRCIFN=internal file number of consult in file 123
"RTN","GMRCP",8,0)
 ;GMRCADUZ=set in call to EN^GMRCT=array of providers who will be alerted
"RTN","GMRCP",9,0)
 ;FLG=1 if need to get list of service's providers, 0 if service dc'd.
"RTN","GMRCP",10,0)
 ;ORN=IFN from file ^ORD(100.9, for consult notification action
"RTN","GMRCP",11,0)
 N GMRCSS,GMRCORFN
"RTN","GMRCP",12,0)
 S GMRCORFN=$P(^GMR(123,+GMRCIFN,0),"^",3)
"RTN","GMRCP",13,0)
 S GMRCSS=$P($G(^GMR(123,+GMRCIFN,0)),"^",5)
"RTN","GMRCP",14,0)
 I FLG,GMRCSS D EN^GMRCT(GMRCSS)
"RTN","GMRCP",15,0)
 I $P($G(^GMR(123,+GMRCIFN,12)),U,5)="P" D
"RTN","GMRCP",16,0)
 . Q:ORN=27  ; don't notify requestor if a new order they placed, duh...
"RTN","GMRCP",17,0)
 . I DUZ=+$P(^GMR(123,+GMRCIFN,0),U,14) Q  ; don;t alert on own actions
"RTN","GMRCP",18,0)
 . S GMRCADUZ(+$P(^GMR(123,+GMRCIFN,0),U,14))=""
"RTN","GMRCP",19,0)
 I FLG,$P(^GMR(123,+GMRCIFN,0),"^",11) S GMRCADUZ($P(^(0),"^",11))=""
"RTN","GMRCP",20,0)
 S:'$D(GMRCADUZ) GMRCADUZ=""
"RTN","GMRCP",21,0)
 N X S X="" F  S X=$O(GMRCADUZ(X)) Q:((X="")!(X=DUZ))  I +X=DUZ K GMRCADUZ(X) ;Don't send alert to user generating alert
"RTN","GMRCP",22,0)
 D EN^ORB3(ORN,GMRCDFN,GMRCORFN,.GMRCADUZ,GMRCALRM,GMRCIFN)
"RTN","GMRCP",23,0)
 Q
"RTN","GMRCP",24,0)
AUDIT ;Build processing activity audit trail multiple.
"RTN","GMRCP",25,0)
 S GMRCDT=$$NOW^XLFDT
"RTN","GMRCP",26,0)
AUDIT0 ;alternate entry with date already defined
"RTN","GMRCP",27,0)
 L +^GMR(123,+GMRCO,40):5 I '$T S GMRCUT=1,GMRCERR=1,GMRCERMS="Activity Trail Not filed - Consult In Use By Another User." L -^GMR(123,+GMRCO,40)  Q
"RTN","GMRCP",28,0)
 S:'$D(^GMR(123,+GMRCO,40,0)) ^(0)="^123.02DA^^"
"RTN","GMRCP",29,0)
 S DA=$S($P(^GMR(123,+GMRCO,40,0),"^",3):$P(^(0),"^",3)+1,1:1)
"RTN","GMRCP",30,0)
 S $P(^GMR(123,+GMRCO,40,0),"^",3,4)=DA_"^"_DA
"RTN","GMRCP",31,0)
AUDIT1 ;entry when the DA is not incremented (INCOMPLETE RPT writeovers)
"RTN","GMRCP",32,0)
 S GMRCORNP=$G(GMRCORNP) S:'$D(GMRCOM) GMRCOM=0
"RTN","GMRCP",33,0)
 S GMRCDEV=$G(GMRCDEV),GMRCFF=$G(GMRCFF),GMRCPA=$G(GMRCPA)
"RTN","GMRCP",34,0)
 S GMRCAD=$S('$D(GMRCAD):GMRCDT,1:GMRCAD)
"RTN","GMRCP",35,0)
 S GMRCRSLT=$G(GMRCRSLT) ;Added result with GMRC*3.0*4
"RTN","GMRCP",36,0)
 S DIE="^GMR(123,"_+GMRCO_",40,",DA(1)=+GMRCO
"RTN","GMRCP",37,0)
 I '$D(^GMR(123,DA(1),40,DA,0)) D
"RTN","GMRCP",38,0)
 . S DR=".01////^S X=GMRCDT;1////^S X=GMRCA;2////^S X=GMRCAD;3////^S X=GMRCORNP"
"RTN","GMRCP",39,0)
 . I GMRCA'=22 S DR=DR_";4////^S X=DUZ" ;if it's a print, pkg did it
"RTN","GMRCP",40,0)
 . S DR=DR_";6////^S X=GMRCFF;7////^S X=GMRCPA;9////^S X=GMRCRSLT;8///^S X=GMRCDEV"
"RTN","GMRCP",41,0)
 E  D
"RTN","GMRCP",42,0)
 . ;DR string on .01 allows write over, rather than forced new entry
"RTN","GMRCP",43,0)
 . S DR=".01///^S X=GMRCDT;1////^S X=GMRCA;2////^S X=GMRCAD;3////^S X=GMRCORNP;4////^S X=DUZ;6////^S X=GMRCFF;7////^S X=GMRCPA;9////^S X=GMRCRSLT;8///^S X=GMRCDEV"
"RTN","GMRCP",44,0)
 ;Added result to the DR string
"RTN","GMRCP",45,0)
 D ^DIE
"RTN","GMRCP",46,0)
COMMENT ;Enter comment
"RTN","GMRCP",47,0)
 I +$G(GMRCOM) S GMRCOM(0)=DA D
"RTN","GMRCP",48,0)
 . W !,"Enter COMMENT..."
"RTN","GMRCP",49,0)
 . N DIC,DWPK,DWLW,DIWESUB
"RTN","GMRCP",50,0)
 . S DIC=DIE_DA_",1,",DWPK=1,DWLW=74
"RTN","GMRCP",51,0)
 . S DIWESUB="COMMENTS" D EN^DIWE
"RTN","GMRCP",52,0)
 . I $P($G(^GMR(123.1,+$P(^GMR(123,+GMRCO,40,DA,0),U,2),0)),U)="ADDED COMMENT",'$O(^GMR(123,+GMRCO,40,DA,0)) D  Q
"RTN","GMRCP",53,0)
 .. S DA(1)=+GMRCO,DIK="^GMR(123,"_DA(1)_",40," D ^DIK K DIK
"RTN","GMRCP",54,0)
 .. Q
"RTN","GMRCP",55,0)
 . I $P($G(^GMR(123.1,+$P(^GMR(123,+GMRCO,40,DA,0),U,2),0)),U)="COMPLETE/UPDATE",$P($G(^GMR(123,+GMRCO,40,DA,0)),U,9)="" D
"RTN","GMRCP",56,0)
 .. N GMRCMT,GMRCMT1
"RTN","GMRCP",57,0)
 .. S (GMRCMT,GMRCMT1)=0
"RTN","GMRCP",58,0)
 .. F  S GMRCMT=$O(^GMR(123,+GMRCO,40,DA,1,GMRCMT)) Q:GMRCMT=""  D  Q:GMRCMT1=1
"RTN","GMRCP",59,0)
 ... I $TR($G(^GMR(123,+GMRCO,40,DA,1,GMRCMT,0))," ","")'="" S GMRCMT1=1
"RTN","GMRCP",60,0)
 .. I 'GMRCMT1 D  G:'GMRCQUIT COMMENT Q
"RTN","GMRCP",61,0)
 ... S GMRCQUIT=0
"RTN","GMRCP",62,0)
 ... W !!,"A comment is required to complete this request!",!
"RTN","GMRCP",63,0)
 ... D WP^DIE(123.02,DA_","_+GMRCO_",",5,,"@")
"RTN","GMRCP",64,0)
 ... K DIR
"RTN","GMRCP",65,0)
 ... S DIR("A")="Type 'Q' to quit or 'C' to continue entering a comment:"
"RTN","GMRCP",66,0)
 ... S DIR("B")="C"
"RTN","GMRCP",67,0)
 ... S DIR(0)="S^C:CONTINUE;Q:QUIT"
"RTN","GMRCP",68,0)
 ... S DIR("?")="Type 'Q' if you would like to abort completion of this Consult/Procedure."
"RTN","GMRCP",69,0)
 ... S DIR("?",1)="Type 'C' or press <RETURN> to re-enter your comments."
"RTN","GMRCP",70,0)
 ... D ^DIR K DIR I Y'="C" S GMRCQUIT=1,DA(1)=+GMRCO,DIK="^GMR(123,"_DA(1)_",40," D ^DIK K DIK
"RTN","GMRCP",71,0)
 . I '$G(DA) S DA=D0
"RTN","GMRCP",72,0)
 . I $D(^GMR(123,+GMRCO,40,DA,0)),$O(^GMR(123,+GMRCO,40,DA,0)) S $P(GMRCOM,"^",2)=1
"RTN","GMRCP",73,0)
 . Q
"RTN","GMRCP",74,0)
 L -^GMR(123,+GMRCO,40)
"RTN","GMRCP",75,0)
 ; if an IFC, call event handler to generate a msg to remote site
"RTN","GMRCP",76,0)
 I $D(^GMR(123,GMRCO,12)),$L($P(^(12),U,5)) D
"RTN","GMRCP",77,0)
 . Q:'$D(^GMR(123,GMRCO,40,DA)) 
"RTN","GMRCP",78,0)
 . D TRIGR^GMRCIEVT(GMRCO,DA)
"RTN","GMRCP",79,0)
 ;
"RTN","GMRCP",80,0)
 K DIE,DA,DR,GMRCDEV,GMRCFF,GMRCPA,X,% Q
"RTN","GMRCP",81,0)
 ;
"RTN","GMRCP",82,0)
STATUS ;Update the status for the Request/Consultation File
"RTN","GMRCP",83,0)
 K GMRCQUT
"RTN","GMRCP",84,0)
 Q:'$D(GMRCSTS)!('$D(GMRCA))
"RTN","GMRCP",85,0)
 S DIE=123,DA=+GMRCO
"RTN","GMRCP",86,0)
 I $D(GMRCDR),$L(GMRCDR) S DR=GMRCDR
"RTN","GMRCP",87,0)
 E  S DR="8////^S X=GMRCSTS;9////^S X=GMRCA"
"RTN","GMRCP",88,0)
 L +^GMR(123,GMRCO):2 I '$T S GMRCQUT=1,GMRCERR=1,GMRCERMS="Unable to update status and last action - Consult In Use By Another User." Q
"RTN","GMRCP",89,0)
 D ^DIE
"RTN","GMRCP",90,0)
 L -^GMR(123,+GMRCO)
"RTN","GMRCP",91,0)
 K DIE,DA,DR,GMRCDR
"RTN","GMRCP",92,0)
 Q
"VER")
8.0^22.0
"BLD",6987,6)
^49
**END**
**END**
