Released DG*5.3*737 SEQ #664
Extracted from mail message
**KIDS**:DG*5.3*737^

**INSTALL NAME**
DG*5.3*737
"BLD",7073,0)
DG*5.3*737^REGISTRATION^0^3070404^y
"BLD",7073,1,0)
^^2^2^3070321^
"BLD",7073,1,1,0)
This patch corrects certain dates in the PXRMINDX index,
"BLD",7073,1,2,0)
an unnecesary "incomplete" message, and turns on audit for the ICN.
"BLD",7073,4,0)
^9.64PA^^
"BLD",7073,6)
1^
"BLD",7073,6.3)
8
"BLD",7073,"INI")
EN^DG737PRE
"BLD",7073,"INIT")

"BLD",7073,"KRN",0)
^9.67PA^8989.52^19
"BLD",7073,"KRN",.4,0)
.4
"BLD",7073,"KRN",.401,0)
.401
"BLD",7073,"KRN",.402,0)
.402
"BLD",7073,"KRN",.403,0)
.403
"BLD",7073,"KRN",.5,0)
.5
"BLD",7073,"KRN",.84,0)
.84
"BLD",7073,"KRN",3.6,0)
3.6
"BLD",7073,"KRN",3.8,0)
3.8
"BLD",7073,"KRN",9.2,0)
9.2
"BLD",7073,"KRN",9.8,0)
9.8
"BLD",7073,"KRN",9.8,"NM",0)
^9.68A^4^3
"BLD",7073,"KRN",9.8,"NM",1,0)
DG737PRE^^0^B1047364
"BLD",7073,"KRN",9.8,"NM",2,0)
DG737PST^^0^B26838048
"BLD",7073,"KRN",9.8,"NM",4,0)
DGRP6EF^^0^B16559019
"BLD",7073,"KRN",9.8,"NM","B","DG737PRE",1)

"BLD",7073,"KRN",9.8,"NM","B","DG737PST",2)

"BLD",7073,"KRN",9.8,"NM","B","DGRP6EF",4)

"BLD",7073,"KRN",19,0)
19
"BLD",7073,"KRN",19.1,0)
19.1
"BLD",7073,"KRN",101,0)
101
"BLD",7073,"KRN",409.61,0)
409.61
"BLD",7073,"KRN",771,0)
771
"BLD",7073,"KRN",870,0)
870
"BLD",7073,"KRN",8989.51,0)
8989.51
"BLD",7073,"KRN",8989.52,0)
8989.52
"BLD",7073,"KRN",8994,0)
8994
"BLD",7073,"KRN","B",.4,.4)

"BLD",7073,"KRN","B",.401,.401)

"BLD",7073,"KRN","B",.402,.402)

"BLD",7073,"KRN","B",.403,.403)

"BLD",7073,"KRN","B",.5,.5)

"BLD",7073,"KRN","B",.84,.84)

"BLD",7073,"KRN","B",3.6,3.6)

"BLD",7073,"KRN","B",3.8,3.8)

"BLD",7073,"KRN","B",9.2,9.2)

"BLD",7073,"KRN","B",9.8,9.8)

"BLD",7073,"KRN","B",19,19)

"BLD",7073,"KRN","B",19.1,19.1)

"BLD",7073,"KRN","B",101,101)

"BLD",7073,"KRN","B",409.61,409.61)

"BLD",7073,"KRN","B",771,771)

"BLD",7073,"KRN","B",870,870)

"BLD",7073,"KRN","B",8989.51,8989.51)

"BLD",7073,"KRN","B",8989.52,8989.52)

"BLD",7073,"KRN","B",8994,8994)

"BLD",7073,"PRE")
DG737PRE
"BLD",7073,"QUES",0)
^9.62^^
"BLD",7073,"REQB",0)
^9.611^3^1
"BLD",7073,"REQB",3,0)
DG*5.3*659^1
"BLD",7073,"REQB","B","DG*5.3*659",3)

"INI")
EN^DG737PRE
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
737^3070404^100850
"PKG",5,22,1,"PAH",1,1,0)
^^2^2^3070404
"PKG",5,22,1,"PAH",1,1,1,0)
This patch corrects certain dates in the PXRMINDX index,
"PKG",5,22,1,"PAH",1,1,2,0)
an unnecesary "incomplete" message, and turns on audit for the ICN.
"PRE")
DG737PRE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","DG737PRE")
0^1^B1047364^n/a
"RTN","DG737PRE",1,0)
DG737PRE ;BAY/JAT;restore the audit on the INTEGRATION CONTROL NUMBER
"RTN","DG737PRE",2,0)
 ;;5.3;Registration;**737**;Aug 13,1993;Build 8
"RTN","DG737PRE",3,0)
 ; This is an environment check and a pre-init routine for DG*5.3*737
"RTN","DG737PRE",4,0)
 ; The purpose is to turn on the audit on the INTEGRATION CONTROL NUMBER (ICN)
"RTN","DG737PRE",5,0)
 ; (field 991.01 on the Patient file) which was inadvertently turned off 
"RTN","DG737PRE",6,0)
 ; by patch DG*5.3*650
"RTN","DG737PRE",7,0)
 ;
"RTN","DG737PRE",8,0)
 S XPDABORT=""
"RTN","DG737PRE",9,0)
 D PROGCHK(.XPDABORT)
"RTN","DG737PRE",10,0)
 I XPDABORT="" K XPDABORT
"RTN","DG737PRE",11,0)
 ;
"RTN","DG737PRE",12,0)
 Q
"RTN","DG737PRE",13,0)
 ;
"RTN","DG737PRE",14,0)
PROGCHK(XPDABORT) ;
"RTN","DG737PRE",15,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") DO
"RTN","DG737PRE",16,0)
 .D BMES^XPDUTL("*****")
"RTN","DG737PRE",17,0)
 .D MES^XPDUTL("Your programming variables are not set up properly.")
"RTN","DG737PRE",18,0)
 .D MES^XPDUTL("Installation aborted.")
"RTN","DG737PRE",19,0)
 .D MES^XPDUTL("*****")
"RTN","DG737PRE",20,0)
 .S XPDABORT=2
"RTN","DG737PRE",21,0)
 .Q
"RTN","DG737PRE",22,0)
EN ;
"RTN","DG737PRE",23,0)
  N FLDNUM
"RTN","DG737PRE",24,0)
  S FLDNUM=991.01
"RTN","DG737PRE",25,0)
  D TURNON^DIAUTL(2,FLDNUM)
"RTN","DG737PRE",26,0)
  W !,"Adding AUDIT to field #",FLDNUM
"RTN","DG737PRE",27,0)
  Q
"RTN","DG737PST")
0^2^B26838048^n/a
"RTN","DG737PST",1,0)
DG737PST ;BAY/JAT ;file #45 cleanup
"RTN","DG737PST",2,0)
 ;;5.3;Registration;**737**;Aug 13, 1993;Build 8
"RTN","DG737PST",3,0)
 Q
"RTN","DG737PST",4,0)
 ; loosely based on PXRMINDD routine released in PX*2*4
"RTN","DG737PST",5,0)
CHECK ;Driver for making index date checks & stripping trailing zeros
"RTN","DG737PST",6,0)
 N GBL,LIST,ROUTINE
"RTN","DG737PST",7,0)
 W !,"Queue the Clinical Reminders Index date check and update."
"RTN","DG737PST",8,0)
 S GBL(4)=45
"RTN","DG737PST",9,0)
 S LIST="4,"
"RTN","DG737PST",10,0)
 S ROUTINE(45)="CNTPTF^DG737PST"
"RTN","DG737PST",11,0)
 D TASKIT(LIST,.GBL,.ROUTINE)
"RTN","DG737PST",12,0)
 Q
"RTN","DG737PST",13,0)
 ;
"RTN","DG737PST",14,0)
CNTPTF(FILENUM,NSD) ;Check for string dates for PTF indexes where the
"RTN","DG737PST",15,0)
 ;date is at subscript 7. Works for file numbers:
"RTN","DG737PST",16,0)
 ;45
"RTN","DG737PST",17,0)
 K ^TMP($J,"SDATE"),^TMP("PXRMXMZ",$J)
"RTN","DG737PST",18,0)
 N DAS,DATE,DFN,IND,ITEM,NODE,TYPE
"RTN","DG737PST",19,0)
 I '$D(ZTQUEUED) W !,"Checking file number "_FILENUM
"RTN","DG737PST",20,0)
 S IND=0
"RTN","DG737PST",21,0)
 ; only procedure codes affected (file 80.1) therefore only
"RTN","DG737PST",22,0)
 ; sub-file 45.01 or 45.05 are involved
"RTN","DG737PST",23,0)
 F TYPE="ICD0" D
"RTN","DG737PST",24,0)
 . S DFN=""
"RTN","DG737PST",25,0)
 . F  S DFN=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN)) Q:DFN=""  D
"RTN","DG737PST",26,0)
 .. S IND=IND+1
"RTN","DG737PST",27,0)
 .. I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","DG737PST",28,0)
 .. S NODE=""
"RTN","DG737PST",29,0)
 .. F  S NODE=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE)) Q:NODE=""  D
"RTN","DG737PST",30,0)
 ... S ITEM=""
"RTN","DG737PST",31,0)
 ... F  S ITEM=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE,ITEM)) Q:ITEM=""  D
"RTN","DG737PST",32,0)
 .... S DATE=""
"RTN","DG737PST",33,0)
 .... F  S DATE=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE,ITEM,DATE)) Q:DATE=""  D
"RTN","DG737PST",34,0)
 ..... I +DATE=DATE Q
"RTN","DG737PST",35,0)
 ..... S DAS=""
"RTN","DG737PST",36,0)
 ..... F  S DAS=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","DG737PST",37,0)
 ...... S NSD=NSD+1
"RTN","DG737PST",38,0)
 ...... S ^TMP($J,"SDATE",NSD)="^PXRMINDX("_FILENUM_","_TYPE_",""PNI"","_DFN_","_NODE_","_ITEM_","""_DATE_""","_DAS_")"
"RTN","DG737PST",39,0)
 ...... D UPDATE
"RTN","DG737PST",40,0)
 Q
"RTN","DG737PST",41,0)
 ;
"RTN","DG737PST",42,0)
UPDATE ; strip trailing zeros from date,e.g., 3031005.1340 or 3010816.134050
"RTN","DG737PST",43,0)
 N DGNEWDT,DGFILE,DGDA,DGIENS,FDA
"RTN","DG737PST",44,0)
 S DGNEWDT=+DATE
"RTN","DG737PST",45,0)
 S DGFILE=$P(DAS,";",2)
"RTN","DG737PST",46,0)
 I DGFILE'="P"&(DGFILE'="S") Q
"RTN","DG737PST",47,0)
 I DGFILE="P" S DGFILE=45.05
"RTN","DG737PST",48,0)
 I DGFILE="S" S DGFILE=45.01
"RTN","DG737PST",49,0)
 ; below patterned after UPD^DGENDBS
"RTN","DG737PST",50,0)
 S DGDA=$P(DAS,";",3)
"RTN","DG737PST",51,0)
 S DGDA(1)=+DAS
"RTN","DG737PST",52,0)
 S DGIENS=$$IENS^DILF(.DGDA)
"RTN","DG737PST",53,0)
 S FDA(DGFILE,DGIENS,.01)=DGNEWDT
"RTN","DG737PST",54,0)
 D FILE^DIE("K","FDA")
"RTN","DG737PST",55,0)
 Q
"RTN","DG737PST",56,0)
 ; 
"RTN","DG737PST",57,0)
 ;========================================================
"RTN","DG737PST",58,0)
MESSAGE(FILENUM,NSD,START,END) ;Build the MailMan message giving the
"RTN","DG737PST",59,0)
 ;list of entries with string dates.
"RTN","DG737PST",60,0)
 N IND,NAME,NL,TEXT,XMSUB
"RTN","DG737PST",61,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","DG737PST",62,0)
 S XMSUB="CR Index string date check for file #"_FILENUM
"RTN","DG737PST",63,0)
 S NAME=$$GET1^DID(FILENUM,"","","NAME")_", file #"_FILENUM
"RTN","DG737PST",64,0)
 I NSD=0 S TEXT="No string dates were found for "_NAME_"."
"RTN","DG737PST",65,0)
 I NSD>0 S TEXT="A total of "_NSD_" string dates were found for "_NAME_"."
"RTN","DG737PST",66,0)
 S ^TMP("PXRMXMZ",$J,1,0)=TEXT
"RTN","DG737PST",67,0)
 S ^TMP("PXRMXMZ",$J,2,0)="Check finished at "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","DG737PST",68,0)
 S ^TMP("PXRMXMZ",$J,3,0)=$$ETIME^DG737PST(START,END)
"RTN","DG737PST",69,0)
 S ^TMP("PXRMXMZ",$J,4,0)=" "
"RTN","DG737PST",70,0)
 I NSD=0,'$D(^PXRMINDX(FILENUM)) D
"RTN","DG737PST",71,0)
 . S ^TMP("PXRMXMZ",$J,5,0)="The index for file number "_FILENUM_" does not exist."
"RTN","DG737PST",72,0)
 . S ^TMP("PXRMXMZ",$J,6,0)=" "
"RTN","DG737PST",73,0)
 I NSD>0 D
"RTN","DG737PST",74,0)
 . S ^TMP("PXRMXMZ",$J,5,0)="The following entries with string dates were found:"
"RTN","DG737PST",75,0)
 . S NL=5
"RTN","DG737PST",76,0)
 . F IND=1:1:NSD D
"RTN","DG737PST",77,0)
 .. S NL=NL+1
"RTN","DG737PST",78,0)
 .. S ^TMP("PXRMXMZ",$J,NL,0)=" "_^TMP($J,"SDATE",IND)
"RTN","DG737PST",79,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" "
"RTN","DG737PST",80,0)
 D SEND^DG737PST(XMSUB,DUZ)
"RTN","DG737PST",81,0)
 ;K ^TMP($J,"SDATE"),^TMP("PXRMXMZ",$J)
"RTN","DG737PST",82,0)
 Q
"RTN","DG737PST",83,0)
 ;
"RTN","DG737PST",84,0)
 ;===============================================================
"RTN","DG737PST",85,0)
RUNNOW(LIST,GBL) ;Run the routine now.
"RTN","DG737PST",86,0)
 N END,FN,IND,LI,NSD,NUM,ROUTINE,RTN,START,TOTAL
"RTN","DG737PST",87,0)
 K ^TMP($J,"SDATE")
"RTN","DG737PST",88,0)
 S ROUTINE(45)="CNTPTF^DG737PST"
"RTN","DG737PST",89,0)
 S NUM=$L(LIST,",")-1
"RTN","DG737PST",90,0)
 F IND=1:1:NUM D
"RTN","DG737PST",91,0)
 . S LI=$P(LIST,",",IND)
"RTN","DG737PST",92,0)
 . S NSD=0
"RTN","DG737PST",93,0)
 . S FN=GBL(LI)
"RTN","DG737PST",94,0)
 . S RTN=ROUTINE(FN)
"RTN","DG737PST",95,0)
 . S RTN=RTN_"("_FN_",.NSD)"
"RTN","DG737PST",96,0)
 . S START=$H
"RTN","DG737PST",97,0)
 . I $D(^PXRMINDX(FN)) D @RTN
"RTN","DG737PST",98,0)
 . S END=$H
"RTN","DG737PST",99,0)
 . D MESSAGE(FN,NSD,START,END)
"RTN","DG737PST",100,0)
 Q
"RTN","DG737PST",101,0)
 ;
"RTN","DG737PST",102,0)
 ;===============================================================
"RTN","DG737PST",103,0)
TASKIT(LIST,GBL,ROUTINE) ;Check the indexes as a tasked job.
"RTN","DG737PST",104,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,MINDT,SDTIME,X,Y
"RTN","DG737PST",105,0)
 S MINDT=$$NOW^XLFDT
"RTN","DG737PST",106,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","DG737PST",107,0)
 S DIR("A",2)="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")
"RTN","DG737PST",108,0)
 S DIR("A")="Start the task at: "
"RTN","DG737PST",109,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","DG737PST",110,0)
 D ^DIR
"RTN","DG737PST",111,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","DG737PST",112,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","DG737PST",113,0)
 S SDTIME=Y
"RTN","DG737PST",114,0)
 K DIR
"RTN","DG737PST",115,0)
 ;Put the task into the queue.
"RTN","DG737PST",116,0)
 K ZTSAVE
"RTN","DG737PST",117,0)
 S ZTSAVE("LIST")=""
"RTN","DG737PST",118,0)
 S ZTSAVE("GBL(")=""
"RTN","DG737PST",119,0)
 S ZTRTN="TASKJOB^DG737PST"
"RTN","DG737PST",120,0)
 S ZTDESC="Clinical Reminders Index string date check and update"
"RTN","DG737PST",121,0)
 S ZTDTH=SDTIME
"RTN","DG737PST",122,0)
 S ZTIO=""
"RTN","DG737PST",123,0)
 D ^%ZTLOAD
"RTN","DG737PST",124,0)
 W !,"Task number ",ZTSK," queued."
"RTN","DG737PST",125,0)
 Q
"RTN","DG737PST",126,0)
 ;
"RTN","DG737PST",127,0)
 ;===============================================================
"RTN","DG737PST",128,0)
TASKJOB ;Execute as tasked job. LIST and GBL come through ZTSAVE.
"RTN","DG737PST",129,0)
 N IND,LI,NUM
"RTN","DG737PST",130,0)
 S ZTREQ="@"
"RTN","DG737PST",131,0)
 S ZTSTOP=0
"RTN","DG737PST",132,0)
 S NUM=$L(LIST,",")-1
"RTN","DG737PST",133,0)
 F IND=1:1:NUM D
"RTN","DG737PST",134,0)
 .;Check to see if the task has had a stop request
"RTN","DG737PST",135,0)
 . I $$S^%ZTLOAD S ZTSTOP=1,IND=NUM Q
"RTN","DG737PST",136,0)
 . S LI=$P(LIST,",",IND)_","
"RTN","DG737PST",137,0)
 . D RUNNOW^DG737PST(LI,.GBL)
"RTN","DG737PST",138,0)
 Q
"RTN","DG737PST",139,0)
 ;
"RTN","DG737PST",140,0)
ETIME(START,END) ;Calculate and format the elapsed time.
"RTN","DG737PST",141,0)
 ;START and END are $H times.
"RTN","DG737PST",142,0)
 N ETIME,TEXT
"RTN","DG737PST",143,0)
 S ETIME=$$HDIFF^XLFDT(END,START,2)
"RTN","DG737PST",144,0)
 I ETIME>90 D
"RTN","DG737PST",145,0)
 . S ETIME=$$HDIFF^XLFDT(END,START,3)
"RTN","DG737PST",146,0)
 . S TEXT="Elapsed time: "_ETIME
"RTN","DG737PST",147,0)
 E  S TEXT="Elapsed time: "_ETIME_" secs"
"RTN","DG737PST",148,0)
 Q TEXT
"RTN","DG737PST",149,0)
SEND(XMSUB,USER) ;Send a MailMan message to the user. The text of the message is in
"RTN","DG737PST",150,0)
 ;^TMP("PXRMXMZ",$J,N,0), where there are N lines of text. The subject
"RTN","DG737PST",151,0)
 ;is the string XMSUB.
"RTN","DG737PST",152,0)
 N MGIEN,MGROUP,NL,REF,XMDUZ,XMY,XMZ
"RTN","DG737PST",153,0)
 ;If this is a test run write out the message.
"RTN","DG737PST",154,0)
 ;I $G(PXRMDEBG) D
"RTN","DG737PST",155,0)
 ;. S REF="^TMP(""PXRMXMZ"",$J)"
"RTN","DG737PST",156,0)
 ;. D AWRITE^PXRMUTIL(REF)
"RTN","DG737PST",157,0)
 ;Make sure the subject does not exceed 64 characters.
"RTN","DG737PST",158,0)
 S XMSUB=$E(XMSUB,1,64)
"RTN","DG737PST",159,0)
 ;Make the sender the Postmaster.
"RTN","DG737PST",160,0)
 S XMDUZ=0.5
"RTN","DG737PST",161,0)
RETRY    ;Get the message number.
"RTN","DG737PST",162,0)
 D XMZ^XMA2
"RTN","DG737PST",163,0)
 I XMZ<1 G RETRY
"RTN","DG737PST",164,0)
 ;Load the message
"RTN","DG737PST",165,0)
 M ^XMB(3.9,XMZ,2)=^TMP("PXRMXMZ",$J)
"RTN","DG737PST",166,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","DG737PST",167,0)
 S NL=$O(^XMB(3.9,XMZ,2,""),-1)
"RTN","DG737PST",168,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92^"_+NL_U_+NL_U_DT
"RTN","DG737PST",169,0)
 ;Send message to requestor if USER is defined
"RTN","DG737PST",170,0)
 I $G(USER)'="" S XMY(DUZ)="" D ENT1^XMD Q
"RTN","DG737PST",171,0)
 ;Send the message to the site defined mail group or the user if
"RTN","DG737PST",172,0)
 ;there is no mail group.
"RTN","DG737PST",173,0)
 ;S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","DG737PST",174,0)
 ;I MGIEN'="" D
"RTN","DG737PST",175,0)
 ;. S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","DG737PST",176,0)
 ;. S XMY(MGROUP)=""
"RTN","DG737PST",177,0)
 ;E  S XMY(DUZ)=""
"RTN","DG737PST",178,0)
 ;D ENT1^XMD
"RTN","DG737PST",179,0)
 Q
"RTN","DGRP6EF")
0^4^B16559019^B16194584
"RTN","DGRP6EF",1,0)
DGRP6EF ;ALB/TMK,EG - REGISTRATION SCREEN 6 FIELDS FOR EXPOSURE FACTORS; 07/20/2006
"RTN","DGRP6EF",2,0)
 ;;5.3;Registration;**689,659,737**;Aug 13, 1993;Build 8
"RTN","DGRP6EF",3,0)
 ;
"RTN","DGRP6EF",4,0)
EN(DFN,QUIT) ; Display Environmental exposure factors/allow to edit
"RTN","DGRP6EF",5,0)
 N I,IND,DG321,DG322,DGCT,DIR,Z,X,Y,DIE,DR,DA,DGNONT
"RTN","DGRP6EF",6,0)
 ; Returns QUIT=1 if ^ entered
"RTN","DGRP6EF",7,0)
 ;
"RTN","DGRP6EF",8,0)
EN1 D CLEAR^VALM1
"RTN","DGRP6EF",9,0)
 N DTOUT,DUOUT
"RTN","DGRP6EF",10,0)
 S DG321=$G(^DPT(DFN,.321)),DG322=$G(^DPT(DFN,.322))
"RTN","DGRP6EF",11,0)
 ;
"RTN","DGRP6EF",12,0)
 S DIR(0)="SA^",DGCT=0
"RTN","DGRP6EF",13,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$$SSNNM^DGRPU(DFN)
"RTN","DGRP6EF",14,0)
 S DGCT=DGCT+1,DIR("A",DGCT)="",$P(DIR("A",DGCT),"=",81)=""
"RTN","DGRP6EF",15,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$J("",23)_"**** ENVIRONMENTAL FACTORS ****",DGCT=DGCT+1,DIR("A",DGCT)=" "
"RTN","DGRP6EF",16,0)
 S IND=$S('$G(DGRPV):"[]",1:"<>")
"RTN","DGRP6EF",17,0)
 S DGCT=DGCT+1
"RTN","DGRP6EF",18,0)
 S Z=$E(IND)_"1"_$E(IND,2)
"RTN","DGRP6EF",19,0)
 S DIR("A",DGCT)=$J("",2)_Z_"   A/O Exp.: "_$$YN^DGRP6CL(DG321,2)_$S($P(DG321,U,13)="K":" (DMZ) ",$P(DG321,U,13)="V":" (VIET)",1:$J("",7))_" Reg: "_$$DAT^DGRP6CL(DG321,7,12)_"  Exam: "_$$DAT^DGRP6CL(DG321,9,12)_"A/O#: "_$P(DG321,U,10)
"RTN","DGRP6EF",20,0)
 S Z=$E(IND)_"2"_$E(IND,2)
"RTN","DGRP6EF",21,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$J("",2)_Z_"   ION Rad.: "_$$YN^DGRP6CL(DG321,3)_$J("",8)_"Reg: "_$$DAT^DGRP6CL(DG321,11,12)_"Method: "
"RTN","DGRP6EF",22,0)
 S:$P(DG321,U,12)>7 $P(DG321,U,12)="" S DIR("A",DGCT)=DIR("A",DGCT)_$P($T(SELTBL+$P(DG321,U,12)),";;",2)
"RTN","DGRP6EF",23,0)
 S Z=$E(IND)_"3"_$E(IND,2)
"RTN","DGRP6EF",24,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$J("",2)_Z_" Env Contam: "_$$YN^DGRP6CL(DG322,13)_$J("",8)_"Reg: "_$$DAT^DGRP6CL(DG322,14,12)_"  Exam: "_$$DAT^DGRP6CL(DG322,15,11)
"RTN","DGRP6EF",25,0)
 S DGNONT=0 I $$GETSTAT^DGNTAPI1(DFN)>2,'$D(^XUSEC("DGNT VERIFY",DUZ)) S DGNONT=1
"RTN","DGRP6EF",26,0)
 I $G(DGRPV) S DGNONT=1
"RTN","DGRP6EF",27,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$J("",2)_$S(DGNONT:"<",1:"[")_"4"_$S(DGNONT:">",1:"]")_" N/T Radium: " N DGNT S DGRPX=$$GETCUR^DGNTAPI(DFN,"DGNT") S DIR("A",DGCT)=DIR("A",DGCT)_$G(DGNT("INTRP"))
"RTN","DGRP6EF",28,0)
 ;
"RTN","DGRP6EF",29,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=" "
"RTN","DGRP6EF",30,0)
 S DIR("A")=$S('$G(DGRPV):"SELECT AN ENVIRONMENTAL FACTOR (1-"_(4-DGNONT)_") OR (Q)UIT: ",1:"PRESS RETURN TO CONTINUE ")
"RTN","DGRP6EF",31,0)
 S DIR(0)=$S('$G(DGRPV):"SA^1:A/O Exp;2:ION Rad;3:Env Contam;"_$S(DGNONT:"",1:"4:N/T Radium;")_"Q:QUIT",1:"EA")
"RTN","DGRP6EF",32,0)
 I '$G(DGRPV) S DIR("B")="QUIT"
"RTN","DGRP6EF",33,0)
 D ^DIR K DIR
"RTN","DGRP6EF",34,0)
 I $G(DGRPV)!$D(DUOUT)!$D(DTOUT)!(Y="Q") S:Y'="Q" QUIT=1 G QUIT
"RTN","DGRP6EF",35,0)
 S Z="603"_$E("0",2-$L(+Y))_+Y
"RTN","DGRP6EF",36,0)
 S DIE=2,DA=DFN,DR=$P($T(@Z),";;",2) D:DR'="" ^DIE
"RTN","DGRP6EF",37,0)
 K DIE,DA,DR
"RTN","DGRP6EF",38,0)
 G EN1
"RTN","DGRP6EF",39,0)
 ;
"RTN","DGRP6EF",40,0)
QUIT Q
"RTN","DGRP6EF",41,0)
 ;
"RTN","DGRP6EF",42,0)
EF(DFN,LIN) ;
"RTN","DGRP6EF",43,0)
 N DG321,DG322,LENGTH,Z,SEQ
"RTN","DGRP6EF",44,0)
 K LIN S (LENGTH,LIN)=0
"RTN","DGRP6EF",45,0)
 S DG321=$G(^DPT(DFN,.321)),DG322=$G(^(.322))
"RTN","DGRP6EF",46,0)
 I $P(DG321,U,2)="Y" D
"RTN","DGRP6EF",47,0)
 . S Z="A/O Exp.",SEQ=1
"RTN","DGRP6EF",48,0)
 . ;S:'$P(DG321,U,7)!'$P(DG321,U,9)!($P(DG321,U,10)="") Z=Z_"(Incomplete)"
"RTN","DGRP6EF",49,0)
 . S:'$P(DG321,U,7)!('$P(DG321,U,9))="" Z=Z_"(Incomplete)"
"RTN","DGRP6EF",50,0)
 . D SETLNEX^DGRP6(Z,SEQ,.LIN,.LENGTH)
"RTN","DGRP6EF",51,0)
 ;
"RTN","DGRP6EF",52,0)
 I $P(DG321,U,3)="Y" D
"RTN","DGRP6EF",53,0)
 . S Z="Ion Rad.",SEQ=2
"RTN","DGRP6EF",54,0)
 . S:'$P(DG321,U,11)!($P(DG321,U,12)="") Z=Z_"(Incomplete)"
"RTN","DGRP6EF",55,0)
 . D SETLNEX^DGRP6(Z,SEQ,.LIN,.LENGTH)
"RTN","DGRP6EF",56,0)
 ;
"RTN","DGRP6EF",57,0)
 I $P(DG322,U,13)="Y" D
"RTN","DGRP6EF",58,0)
 . I 'LIN S LIN=LIN+1,LIN(LIN)=""
"RTN","DGRP6EF",59,0)
 . S Z="Env Contam.",SEQ=3
"RTN","DGRP6EF",60,0)
 . S:'$P(DG322,U,14)!'$P(DG322,U,15) Z=Z_"(Incomplete)"
"RTN","DGRP6EF",61,0)
 . D SETLNEX^DGRP6(Z,SEQ,.LIN,.LENGTH)
"RTN","DGRP6EF",62,0)
 ; N/T Radium Exposure
"RTN","DGRP6EF",63,0)
 N DGNT,DGRPX S DGRPX=$$GETCUR^DGNTAPI(DFN,"DGNT")
"RTN","DGRP6EF",64,0)
 I "NO"'[$G(DGNT("INTRP")) D
"RTN","DGRP6EF",65,0)
 . I 'LIN S LIN=LIN+1,LIN(LIN)=""
"RTN","DGRP6EF",66,0)
 . S SEQ=4 D SETLNEX^DGRP6("N/T Radium ("_$P(DGNT("INTRP"),"YES,",2)_")",SEQ,.LIN,.LENGTH)
"RTN","DGRP6EF",67,0)
  Q
"RTN","DGRP6EF",68,0)
  ; The following tag is a table of values.  Do not change location of values including null at SELTBL+0
"RTN","DGRP6EF",69,0)
SELTBL ;;
"RTN","DGRP6EF",70,0)
 ;;NO VALUE
"RTN","DGRP6EF",71,0)
 ;;HIROSHIMA/NAGASAKI
"RTN","DGRP6EF",72,0)
 ;;ATMOSPHERIC NUCLEAR TEST
"RTN","DGRP6EF",73,0)
 ;;H/N AND ATMOSPHERIC TEST
"RTN","DGRP6EF",74,0)
 ;;UNDERGROUND NUCLEAR TEST
"RTN","DGRP6EF",75,0)
 ;;EXP. AT NUCLEAR FACILITY
"RTN","DGRP6EF",76,0)
 ;;OTHER
"RTN","DGRP6EF",77,0)
60301 ;;.32102//NO;S:X'="Y" Y="@65";.3213;.32107;.32109;.3211;@65;
"RTN","DGRP6EF",78,0)
60302 ;;.32103//NO;S:X'="Y" Y="@66";.3212;.32111;@66;
"RTN","DGRP6EF",79,0)
60303 ;;.322013//NO;S:X'="Y" Y="@612";.322014;Q;.322015;@612;
"RTN","DGRP6EF",80,0)
60304 ;;D REG^DGNTQ(DFN)
"RTN","DGRP6EF",81,0)
 ;;
"VER")
8.0^22.0
"BLD",7073,6)
^664
**END**
**END**
