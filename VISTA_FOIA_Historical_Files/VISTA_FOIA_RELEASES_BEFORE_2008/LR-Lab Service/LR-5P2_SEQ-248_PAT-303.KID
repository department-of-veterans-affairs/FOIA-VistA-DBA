Released LR*5.2*303 SEQ #248
Extracted from mail message
**KIDS**:LR*5.2*303^

**INSTALL NAME**
LR*5.2*303
"BLD",15978,0)
LR*5.2*303^LAB SERVICE^0^3050204^y
"BLD",15978,1,0)
^9.61A^257^257^3050204^^^^
"BLD",15978,1,1,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*303 does not
"BLD",15978,1,2,0)
contain any changes to the VISTA BLOOD BANK Software as defined by VHA
"BLD",15978,1,3,0)
DIRECTIVE 2004-058 titled VISTA BLOOD BANK SOFTWARE VERSION 5.2.
"BLD",15978,1,4,0)
 
"BLD",15978,1,5,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*303 does not
"BLD",15978,1,6,0)
alter or modify any software design safeguards or safety critical elements
"BLD",15978,1,7,0)
functions.
"BLD",15978,1,8,0)
 
"BLD",15978,1,9,0)
RISK ANALYSIS: Changes made by patch LR*5.2*303 have no effect on Blood
"BLD",15978,1,10,0)
Bank software functionality, therefore RISK is none.
"BLD",15978,1,11,0)
 
"BLD",15978,1,12,0)
VALIDATION REQUIREMENTS BY OPTION: Because of the nature of the changes
"BLD",15978,1,13,0)
made, no specific validation requirements exist as a result of installation
"BLD",15978,1,14,0)
of this patch.
"BLD",15978,1,15,0)
 
"BLD",15978,1,16,0)
The Laboratory package, in support of the VA Health Data Repository (HDR)
"BLD",15978,1,17,0)
efforts, has developed the following reports to support VA Data
"BLD",15978,1,18,0)
Standardization of laboratory results. These reports/extracts will
"BLD",15978,1,19,0)
facilitate centralized mapping and data validation of National Laboratory
"BLD",15978,1,20,0)
Test (NLT) and Logical Observation Identifiers Names and Codes (LOINC)
"BLD",15978,1,21,0)
within VistA Laboratory.
"BLD",15978,1,22,0)
 
"BLD",15978,1,23,0)
************************************************************************** 
"BLD",15978,1,24,0)
This patch must be installed within five days of receipt in order to
"BLD",15978,1,25,0)
provide information to a centralized LOINC mapping team which will use
"BLD",15978,1,26,0)
this information to provide recommended NLT and LOINC mappings for CH
"BLD",15978,1,27,0)
subscript - chemistry, hematology, coagulation, urinalysis, serology type
"BLD",15978,1,28,0)
results) used by each facility.  These recommendations will be sent back
"BLD",15978,1,29,0)
to the facility for review and action. Installation of this patch is for
"BLD",15978,1,30,0)
this reporting purpose only and has no effect on current laboratory
"BLD",15978,1,31,0)
functionality.
"BLD",15978,1,32,0)
************************************************************************** 
"BLD",15978,1,33,0)

"BLD",15978,1,34,0)
 
"BLD",15978,1,35,0)
1. These LRLABSERVER server reports are available with this patch:
"BLD",15978,1,36,0)
 
"BLD",15978,1,37,0)
LOCAL REPORT
"BLD",15978,1,38,0)
 Send a message to: S.LRLABSERVER@domain name
"BLD",15978,1,39,0)
           Subject:LOCAL REPORT
"BLD",15978,1,40,0)
 
"BLD",15978,1,41,0)
   The body of the message will be ignored.  This will scan the database
"BLD",15978,1,42,0)
for mapped LOINC data and return the results to the person sending the
"BLD",15978,1,43,0)
mail message request.
"BLD",15978,1,44,0)
 
"BLD",15978,1,45,0)
 
"BLD",15978,1,46,0)
LOCAL REPORT DELIMIT
"BLD",15978,1,47,0)
  Send a message to: S.LRLABSERVER@domain name
"BLD",15978,1,48,0)
            Subject: LOCAL REPORT DELIMIT
"BLD",15978,1,49,0)
 
"BLD",15978,1,50,0)
  The body of the message will be ignored. This will scan the database
"BLD",15978,1,51,0)
for mapped NLT and LOINC data. Results are returned to the person sending
"BLD",15978,1,52,0)
the mail message request. The extracted data is returned as an attached
"BLD",15978,1,53,0)
file in a delimited format using the "|" character as the field delimiter.
"BLD",15978,1,54,0)
 
"BLD",15978,1,55,0)
  Record legend for attached file: Station #-64 ien-61 ien-Time Aspect|NLT
"BLD",15978,1,56,0)
 Code|NLT Name|Default LOINC Code|Default LOINC Name|Default Test|Time
"BLD",15978,1,57,0)
 Aspect|Specimen|Data Location|Data Type|Input Transform|Units|Test Name|
"BLD",15978,1,58,0)
 LOINC Code|LOINC Name|Reference Low|Reference High|Therapeutic Low|
"BLD",15978,1,59,0)
 Therapeutic High|Subscript|Lab Section|
"BLD",15978,1,60,0)
 
"BLD",15978,1,61,0)
 
"BLD",15978,1,62,0)
RELMA
"BLD",15978,1,63,0)
  Send a message to: S.LRLABSERVER@domain name
"BLD",15978,1,64,0)
            Subject: RELMA
"BLD",15978,1,65,0)
 
"BLD",15978,1,66,0)
  The body of the message will be ignored. This will scan the local site's
"BLD",15978,1,67,0)
LABORATORY TEST file (#60) and ANTIMICROBIAL SUSCEPTIBILITY file (#62.06)
"BLD",15978,1,68,0)
and extract data in a format for input into the Regenstrief LOINC Mapping
"BLD",15978,1,69,0)
Assistant (RELMA) mapping tool. Results are returned to the person sending
"BLD",15978,1,70,0)
the mail message request. The extracted data is returned as an attached
"BLD",15978,1,71,0)
file in a delimited format using the "|" character as the field delimiter.
"BLD",15978,1,72,0)
 
"BLD",15978,1,73,0)
 Record legend for attached file:  Station #-60 ien-Spec ien|TestName|Spec
"BLD",15978,1,74,0)
 |Time Aspect|Units|LOINC|NLT #|Battery Code|Battery Description|Lab
"BLD",15978,1,75,0)
 Section|Subscript|Comments|Data Type|Reference low|Reference high|
"BLD",15978,1,76,0)
 Therapeutic low|Therapeutic high|
"BLD",15978,1,77,0)
 
"BLD",15978,1,78,0)
 
"BLD",15978,1,79,0)
2. Lab server mail messages will be purged after successful completion of
"BLD",15978,1,80,0)
the server request. Supported MailMan API ZAPSERV^XMXAPI will be called to
"BLD",15978,1,81,0)
delete the message from POSTMASTER server basket S.LRLABSERVER.
"BLD",15978,1,82,0)
 
"BLD",15978,1,83,0)
 
"BLD",15978,1,84,0)
 ASSOCIATED E3R
"BLD",15978,1,85,0)
 --------------
"BLD",15978,1,86,0)
 None
"BLD",15978,1,87,0)
 
"BLD",15978,1,88,0)
 ASSOCIATED NOIS
"BLD",15978,1,89,0)
 ---------------
"BLD",15978,1,90,0)
 None
"BLD",15978,1,91,0)
 
"BLD",15978,1,92,0)
 
"BLD",15978,1,93,0)
 TEST SITES
"BLD",15978,1,94,0)
 ----------
"BLD",15978,1,95,0)
 Altoona VAMC
"BLD",15978,1,96,0)
 Bay Pines VAMC
"BLD",15978,1,97,0)
 Bulter VAMC
"BLD",15978,1,98,0)
 Cheyenne VAMC
"BLD",15978,1,99,0)
 Clarksburg VAMC
"BLD",15978,1,100,0)
 Coatesville VAMC
"BLD",15978,1,101,0)
 Erie VAMC
"BLD",15978,1,102,0)
 Grand Junction VAMC
"BLD",15978,1,103,0)
 Heartland-East HCS
"BLD",15978,1,104,0)
 Heartland-West HCS
"BLD",15978,1,105,0)
 Lebanon VAMC
"BLD",15978,1,106,0)
 Martinsburg VAMC
"BLD",15978,1,107,0)
 Maryland HCS
"BLD",15978,1,108,0)
 Milwaukee VAMC
"BLD",15978,1,109,0)
 Montana HCS
"BLD",15978,1,110,0)
 Philadelphia VAMC
"BLD",15978,1,111,0)
 Pittsburg HCS
"BLD",15978,1,112,0)
 Puget Sound HCS
"BLD",15978,1,113,0)
 Roseburg VAMC
"BLD",15978,1,114,0)
 Salt Lake City VAMC
"BLD",15978,1,115,0)
 Sheridan VAMC
"BLD",15978,1,116,0)
 Walla Walla VAMC
"BLD",15978,1,117,0)
 Washington VAMC
"BLD",15978,1,118,0)
 White City VAMC
"BLD",15978,1,119,0)
 Wike Barre VAMC
"BLD",15978,1,120,0)
 Wilmington VAMC
"BLD",15978,1,121,0)
 
"BLD",15978,1,122,0)
 
"BLD",15978,1,123,0)
ROUTINE SUMMARY
"BLD",15978,1,124,0)
===============
"BLD",15978,1,125,0)
  The following routines are included in this patch.  The second line
"BLD",15978,1,126,0)
  of each of these routines now looks like:
"BLD",15978,1,127,0)
  <tab> ;;5.2;LAB SERVICE;<patchlist>;Sep 27, 1994
"BLD",15978,1,128,0)
 
"BLD",15978,1,129,0)
                    Checksum       Checksum
"BLD",15978,1,130,0)
   Routine Name     Before Patch   After Patch    Patch List
"BLD",15978,1,131,0)
   ------------     ------------   -----------    ------------
"BLD",15978,1,132,0)
   LR303            N/A            4831421        **303** (Deleted by KIDS)
"BLD",15978,1,133,0)
   LRLNCPMP         7461913        7416816        **215,232,278,303**
"BLD",15978,1,134,0)
   LRSRVR           16543787       5915085        **232,303**
"BLD",15978,1,135,0)
   LRSRVR1          N/A            11247287       **303**
"BLD",15978,1,136,0)
   LRSRVR2          N/A            12542186       **303**
"BLD",15978,1,137,0)
   LRSRVR3          N/A            13571036       **303**
"BLD",15978,1,138,0)
   LRSRVR4          N/A            538253         **303**
"BLD",15978,1,139,0)
 
"BLD",15978,1,140,0)
 List of preceding patches: 232, 278
"BLD",15978,1,141,0)
 Sites should use CHECK^XTSUMBLD to verify checksums.
"BLD",15978,1,142,0)
  
"BLD",15978,1,143,0)
 
"BLD",15978,1,144,0)
INSTALLATION INSTRUCTIONS
"BLD",15978,1,145,0)
-------------------------
"BLD",15978,1,146,0)
  The install time for this patch is less than 5 minute. This patch
"BLD",15978,1,147,0)
  can be installed when Laboratory users are on the system.
"BLD",15978,1,148,0)
  Suggested time to install: non-peak requirement hours.
"BLD",15978,1,149,0)
 
"BLD",15978,1,150,0)
 
"BLD",15978,1,151,0)
NOTE: Kernel patches must be current on the target system to avoid
"BLD",15978,1,152,0)
      problems loading and/or installing this patch.
"BLD",15978,1,153,0)
 
"BLD",15978,1,154,0)
      Patch installation needs to be coordinated with the Laboratory
"BLD",15978,1,155,0)
      Information Manager (LIM/ADPAC).
"BLD",15978,1,156,0)
 
"BLD",15978,1,157,0)
 
"BLD",15978,1,158,0)
  1.  If any of the above routines are mapped, disable mapping for them.
"BLD",15978,1,159,0)
 
"BLD",15978,1,160,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",15978,1,161,0)
        option will load the KIDS package onto your system.
"BLD",15978,1,162,0)
 
"BLD",15978,1,163,0)
  3.  On the 'Kernel Installation & Distribution System' Menu (KIDS),
"BLD",15978,1,164,0)
      select the 'Installation' menu.
"BLD",15978,1,165,0)
 
"BLD",15978,1,166,0)
  4.  From this menu, you may then elect to use the following options
"BLD",15978,1,167,0)
      (when prompted for the INSTALL NAME, enter LR*5.2*303):
"BLD",15978,1,168,0)
        a. Print Transport Global
"BLD",15978,1,169,0)
        b. Backup a Transport Global
"BLD",15978,1,170,0)
        c. Compare Transport Global to Current System
"BLD",15978,1,171,0)
        d. Verify Checksums in Transport Global
"BLD",15978,1,172,0)
 
"BLD",15978,1,173,0)
      Use the 'Verify Checksum in Transport Global' option and verify that
"BLD",15978,1,174,0)
      all routines have the correct checksums.
"BLD",15978,1,175,0)
 
"BLD",15978,1,176,0)
  5.  Use the 'Install Package(s)' option under the 'Installation' menu
"BLD",15978,1,177,0)
      and select the package 'LR*5.2*303'.  When prompted 'Want KIDS to
"BLD",15978,1,178,0)
      INHIBIT LOGONs during the install? YES// choose 'NO'.  When prompted
"BLD",15978,1,179,0)
      'Want to DISABLE Scheduled Options, Menu Options, and Protocols?
"BLD",15978,1,180,0)
      YES//', choose 'NO'.
"BLD",15978,1,181,0)
 
"BLD",15978,1,182,0)
  6.  On a mapped system, rebuild your map set.
"BLD",15978,1,183,0)
 
"BLD",15978,1,184,0)
 Note: Routine LR303 will be deleted after successful patch installation.
"BLD",15978,1,185,0)
 
"BLD",15978,1,186,0)
 
"BLD",15978,1,187,0)
INSTALLATION EXAMPLE
"BLD",15978,1,188,0)
====================
"BLD",15978,1,189,0)
 
"BLD",15978,1,190,0)
Select Installation Option:
"BLD",15978,1,191,0)
 
"BLD",15978,1,192,0)
Select Kernel Installation & Distribution System Option:  Installation
"BLD",15978,1,193,0)
 
"BLD",15978,1,194,0)
Select Installation Option:  Install Package(s)
"BLD",15978,1,195,0)
Select INSTALL NAME: LR*5.2*303 Loaded from Distribution 12/21/04@13:39:35
"BLD",15978,1,196,0)
     => LR*5.2*303
"BLD",15978,1,197,0)
 
"BLD",15978,1,198,0)
This Distribution was loaded on Dec 21, 2004@13:39:35 with header of
"BLD",15978,1,199,0)
   LR*5.2*303
"BLD",15978,1,200,0)
   It consisted of the following Install(s):
"BLD",15978,1,201,0)
     LR*5.2*303
"BLD",15978,1,202,0)
Checking Install for Package LR*5.2*303
"BLD",15978,1,203,0)
Will first run the Environment Check Routine, LR303
"BLD",15978,1,204,0)
 
"BLD",15978,1,205,0)
 
"BLD",15978,1,206,0)
               Sending install started alert to mail group G.LMI
"BLD",15978,1,207,0)
 
"BLD",15978,1,208,0)
                        --- Environment Check is Ok ---
"BLD",15978,1,209,0)
 
"BLD",15978,1,210,0)
Install Questions for LR*5.2*303
"BLD",15978,1,211,0)
 
"BLD",15978,1,212,0)
 
"BLD",15978,1,213,0)
 
"BLD",15978,1,214,0)
Want KIDS to INHIBIT LOGONs during the install? YES// n  NO
"BLD",15978,1,215,0)
Want to DISABLE Scheduled Options, Menu Options, and Protocols? YES// n  NO
"BLD",15978,1,216,0)
 
"BLD",15978,1,217,0)
Enter the Device you want to print the Install messages.
"BLD",15978,1,218,0)
You can queue the install by enter a 'Q' at the device prompt.
"BLD",15978,1,219,0)
Enter a '^' to abort the install.
"BLD",15978,1,220,0)
 
"BLD",15978,1,221,0)
DEVICE: HOME// TELNET VIRTUAL
"BLD",15978,1,222,0)
 
"BLD",15978,1,223,0)
 
"BLD",15978,1,224,0)
 Install Started for LR*5.2*303 :
"BLD",15978,1,225,0)
               Dec 21, 2004@13:40:26
"BLD",15978,1,226,0)
 
"BLD",15978,1,227,0)
Build Distribution Date: Dec 21, 2004
"BLD",15978,1,228,0)
 
"BLD",15978,1,229,0)
 Installing Routines:........
"BLD",15978,1,230,0)
               Dec 21, 2004@13:40:27
"BLD",15978,1,231,0)
 
"BLD",15978,1,232,0)
 Running Pre-Install Routine: PRE^LR303.
"BLD",15978,1,233,0)
 
"BLD",15978,1,234,0)
                          *** Pre install started ***
"BLD",15978,1,235,0)
 
"BLD",15978,1,236,0)
                           *** No action required ***
"BLD",15978,1,237,0)
 
"BLD",15978,1,238,0)
                         *** Pre install completed ***
"BLD",15978,1,239,0)
 
"BLD",15978,1,240,0)
 Running Post-Install Routine: POST^LR303.
"BLD",15978,1,241,0)
 
"BLD",15978,1,242,0)
                          *** Post install started ***
"BLD",15978,1,243,0)
 
"BLD",15978,1,244,0)
                           *** No action required ***
"BLD",15978,1,245,0)
 
"BLD",15978,1,246,0)
                         *** Post install completed ***
"BLD",15978,1,247,0)
 
"BLD",15978,1,248,0)
              Sending install completion alert to mail group G.LMI
"BLD",15978,1,249,0)
 
"BLD",15978,1,250,0)
 Updating Routine file......
"BLD",15978,1,251,0)
 
"BLD",15978,1,252,0)
 Updating KIDS files.......
"BLD",15978,1,253,0)
 
"BLD",15978,1,254,0)
 LR*5.2*303 Installed.
"BLD",15978,1,255,0)
               Dec 21, 2004@13:40:27
"BLD",15978,1,256,0)
 
"BLD",15978,1,257,0)
 Install Message sent #xxx
"BLD",15978,4,0)
^9.64PA^^
"BLD",15978,"ABPKG")
n
"BLD",15978,"INI")
PRE^LR303
"BLD",15978,"INID")
y
"BLD",15978,"INIT")
POST^LR303
"BLD",15978,"KRN",0)
^9.67PA^8989.52^19
"BLD",15978,"KRN",.4,0)
.4
"BLD",15978,"KRN",.401,0)
.401
"BLD",15978,"KRN",.402,0)
.402
"BLD",15978,"KRN",.403,0)
.403
"BLD",15978,"KRN",.5,0)
.5
"BLD",15978,"KRN",.84,0)
.84
"BLD",15978,"KRN",3.6,0)
3.6
"BLD",15978,"KRN",3.8,0)
3.8
"BLD",15978,"KRN",9.2,0)
9.2
"BLD",15978,"KRN",9.8,0)
9.8
"BLD",15978,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",15978,"KRN",9.8,"NM",1,0)
LRSRVR^^0^B18875049
"BLD",15978,"KRN",9.8,"NM",2,0)
LRSRVR1^^0^B41108233
"BLD",15978,"KRN",9.8,"NM",3,0)
LRLNCPMP^^0^B24345962
"BLD",15978,"KRN",9.8,"NM",4,0)
LRSRVR2^^0^B60700026
"BLD",15978,"KRN",9.8,"NM",5,0)
LRSRVR3^^0^B40554780
"BLD",15978,"KRN",9.8,"NM",6,0)
LRSRVR4^^0^B1066289
"BLD",15978,"KRN",9.8,"NM","B","LRLNCPMP",3)

"BLD",15978,"KRN",9.8,"NM","B","LRSRVR",1)

"BLD",15978,"KRN",9.8,"NM","B","LRSRVR1",2)

"BLD",15978,"KRN",9.8,"NM","B","LRSRVR2",4)

"BLD",15978,"KRN",9.8,"NM","B","LRSRVR3",5)

"BLD",15978,"KRN",9.8,"NM","B","LRSRVR4",6)

"BLD",15978,"KRN",19,0)
19
"BLD",15978,"KRN",19,"NM",0)
^9.68A^^0
"BLD",15978,"KRN",19.1,0)
19.1
"BLD",15978,"KRN",101,0)
101
"BLD",15978,"KRN",409.61,0)
409.61
"BLD",15978,"KRN",771,0)
771
"BLD",15978,"KRN",870,0)
870
"BLD",15978,"KRN",8989.51,0)
8989.51
"BLD",15978,"KRN",8989.52,0)
8989.52
"BLD",15978,"KRN",8994,0)
8994
"BLD",15978,"KRN","B",.4,.4)

"BLD",15978,"KRN","B",.401,.401)

"BLD",15978,"KRN","B",.402,.402)

"BLD",15978,"KRN","B",.403,.403)

"BLD",15978,"KRN","B",.5,.5)

"BLD",15978,"KRN","B",.84,.84)

"BLD",15978,"KRN","B",3.6,3.6)

"BLD",15978,"KRN","B",3.8,3.8)

"BLD",15978,"KRN","B",9.2,9.2)

"BLD",15978,"KRN","B",9.8,9.8)

"BLD",15978,"KRN","B",19,19)

"BLD",15978,"KRN","B",19.1,19.1)

"BLD",15978,"KRN","B",101,101)

"BLD",15978,"KRN","B",409.61,409.61)

"BLD",15978,"KRN","B",771,771)

"BLD",15978,"KRN","B",870,870)

"BLD",15978,"KRN","B",8989.51,8989.51)

"BLD",15978,"KRN","B",8989.52,8989.52)

"BLD",15978,"KRN","B",8994,8994)

"BLD",15978,"PRE")
LR303
"BLD",15978,"QUES",0)
^9.62^^
"BLD",15978,"REQB",0)
^9.611^1^1
"BLD",15978,"REQB",1,0)
LR*5.2*232^2
"BLD",15978,"REQB","B","LR*5.2*232",1)

"INI")
PRE^LR303
"INIT")
POST^LR303
"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2941128
"PKG",26,22,1,"PAH",1,0)
303^3050204
"PKG",26,22,1,"PAH",1,1,0)
^^257^257^3050204
"PKG",26,22,1,"PAH",1,1,1,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*303 does not
"PKG",26,22,1,"PAH",1,1,2,0)
contain any changes to the VISTA BLOOD BANK Software as defined by VHA
"PKG",26,22,1,"PAH",1,1,3,0)
DIRECTIVE 2004-058 titled VISTA BLOOD BANK SOFTWARE VERSION 5.2.
"PKG",26,22,1,"PAH",1,1,4,0)
 
"PKG",26,22,1,"PAH",1,1,5,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*303 does not
"PKG",26,22,1,"PAH",1,1,6,0)
alter or modify any software design safeguards or safety critical elements
"PKG",26,22,1,"PAH",1,1,7,0)
functions.
"PKG",26,22,1,"PAH",1,1,8,0)
 
"PKG",26,22,1,"PAH",1,1,9,0)
RISK ANALYSIS: Changes made by patch LR*5.2*303 have no effect on Blood
"PKG",26,22,1,"PAH",1,1,10,0)
Bank software functionality, therefore RISK is none.
"PKG",26,22,1,"PAH",1,1,11,0)
 
"PKG",26,22,1,"PAH",1,1,12,0)
VALIDATION REQUIREMENTS BY OPTION: Because of the nature of the changes
"PKG",26,22,1,"PAH",1,1,13,0)
made, no specific validation requirements exist as a result of installation
"PKG",26,22,1,"PAH",1,1,14,0)
of this patch.
"PKG",26,22,1,"PAH",1,1,15,0)
 
"PKG",26,22,1,"PAH",1,1,16,0)
The Laboratory package, in support of the VA Health Data Repository (HDR)
"PKG",26,22,1,"PAH",1,1,17,0)
efforts, has developed the following reports to support VA Data
"PKG",26,22,1,"PAH",1,1,18,0)
Standardization of laboratory results. These reports/extracts will
"PKG",26,22,1,"PAH",1,1,19,0)
facilitate centralized mapping and data validation of National Laboratory
"PKG",26,22,1,"PAH",1,1,20,0)
Test (NLT) and Logical Observation Identifiers Names and Codes (LOINC)
"PKG",26,22,1,"PAH",1,1,21,0)
within VistA Laboratory.
"PKG",26,22,1,"PAH",1,1,22,0)
 
"PKG",26,22,1,"PAH",1,1,23,0)
************************************************************************** 
"PKG",26,22,1,"PAH",1,1,24,0)
This patch must be installed within five days of receipt in order to
"PKG",26,22,1,"PAH",1,1,25,0)
provide information to a centralized LOINC mapping team which will use
"PKG",26,22,1,"PAH",1,1,26,0)
this information to provide recommended NLT and LOINC mappings for CH
"PKG",26,22,1,"PAH",1,1,27,0)
subscript - chemistry, hematology, coagulation, urinalysis, serology type
"PKG",26,22,1,"PAH",1,1,28,0)
results) used by each facility.  These recommendations will be sent back
"PKG",26,22,1,"PAH",1,1,29,0)
to the facility for review and action. Installation of this patch is for
"PKG",26,22,1,"PAH",1,1,30,0)
this reporting purpose only and has no effect on current laboratory
"PKG",26,22,1,"PAH",1,1,31,0)
functionality.
"PKG",26,22,1,"PAH",1,1,32,0)
************************************************************************** 
"PKG",26,22,1,"PAH",1,1,33,0)

"PKG",26,22,1,"PAH",1,1,34,0)
 
"PKG",26,22,1,"PAH",1,1,35,0)
1. These LRLABSERVER server reports are available with this patch:
"PKG",26,22,1,"PAH",1,1,36,0)
 
"PKG",26,22,1,"PAH",1,1,37,0)
LOCAL REPORT
"PKG",26,22,1,"PAH",1,1,38,0)
 Send a message to: S.LRLABSERVER@domain name
"PKG",26,22,1,"PAH",1,1,39,0)
           Subject:LOCAL REPORT
"PKG",26,22,1,"PAH",1,1,40,0)
 
"PKG",26,22,1,"PAH",1,1,41,0)
   The body of the message will be ignored.  This will scan the database
"PKG",26,22,1,"PAH",1,1,42,0)
for mapped LOINC data and return the results to the person sending the
"PKG",26,22,1,"PAH",1,1,43,0)
mail message request.
"PKG",26,22,1,"PAH",1,1,44,0)
 
"PKG",26,22,1,"PAH",1,1,45,0)
 
"PKG",26,22,1,"PAH",1,1,46,0)
LOCAL REPORT DELIMIT
"PKG",26,22,1,"PAH",1,1,47,0)
  Send a message to: S.LRLABSERVER@domain name
"PKG",26,22,1,"PAH",1,1,48,0)
            Subject: LOCAL REPORT DELIMIT
"PKG",26,22,1,"PAH",1,1,49,0)
 
"PKG",26,22,1,"PAH",1,1,50,0)
  The body of the message will be ignored. This will scan the database
"PKG",26,22,1,"PAH",1,1,51,0)
for mapped NLT and LOINC data. Results are returned to the person sending
"PKG",26,22,1,"PAH",1,1,52,0)
the mail message request. The extracted data is returned as an attached
"PKG",26,22,1,"PAH",1,1,53,0)
file in a delimited format using the "|" character as the field delimiter.
"PKG",26,22,1,"PAH",1,1,54,0)
 
"PKG",26,22,1,"PAH",1,1,55,0)
  Record legend for attached file: Station #-64 ien-61 ien-Time Aspect|NLT
"PKG",26,22,1,"PAH",1,1,56,0)
 Code|NLT Name|Default LOINC Code|Default LOINC Name|Default Test|Time
"PKG",26,22,1,"PAH",1,1,57,0)
 Aspect|Specimen|Data Location|Data Type|Input Transform|Units|Test Name|
"PKG",26,22,1,"PAH",1,1,58,0)
 LOINC Code|LOINC Name|Reference Low|Reference High|Therapeutic Low|
"PKG",26,22,1,"PAH",1,1,59,0)
 Therapeutic High|Subscript|Lab Section|
"PKG",26,22,1,"PAH",1,1,60,0)
 
"PKG",26,22,1,"PAH",1,1,61,0)
 
"PKG",26,22,1,"PAH",1,1,62,0)
RELMA
"PKG",26,22,1,"PAH",1,1,63,0)
  Send a message to: S.LRLABSERVER@domain name
"PKG",26,22,1,"PAH",1,1,64,0)
            Subject: RELMA
"PKG",26,22,1,"PAH",1,1,65,0)
 
"PKG",26,22,1,"PAH",1,1,66,0)
  The body of the message will be ignored. This will scan the local site's
"PKG",26,22,1,"PAH",1,1,67,0)
LABORATORY TEST file (#60) and ANTIMICROBIAL SUSCEPTIBILITY file (#62.06)
"PKG",26,22,1,"PAH",1,1,68,0)
and extract data in a format for input into the Regenstrief LOINC Mapping
"PKG",26,22,1,"PAH",1,1,69,0)
Assistant (RELMA) mapping tool. Results are returned to the person sending
"PKG",26,22,1,"PAH",1,1,70,0)
the mail message request. The extracted data is returned as an attached
"PKG",26,22,1,"PAH",1,1,71,0)
file in a delimited format using the "|" character as the field delimiter.
"PKG",26,22,1,"PAH",1,1,72,0)
 
"PKG",26,22,1,"PAH",1,1,73,0)
 Record legend for attached file:  Station #-60 ien-Spec ien|TestName|Spec
"PKG",26,22,1,"PAH",1,1,74,0)
 |Time Aspect|Units|LOINC|NLT #|Battery Code|Battery Description|Lab
"PKG",26,22,1,"PAH",1,1,75,0)
 Section|Subscript|Comments|Data Type|Reference low|Reference high|
"PKG",26,22,1,"PAH",1,1,76,0)
 Therapeutic low|Therapeutic high|
"PKG",26,22,1,"PAH",1,1,77,0)
 
"PKG",26,22,1,"PAH",1,1,78,0)
 
"PKG",26,22,1,"PAH",1,1,79,0)
2. Lab server mail messages will be purged after successful completion of
"PKG",26,22,1,"PAH",1,1,80,0)
the server request. Supported MailMan API ZAPSERV^XMXAPI will be called to
"PKG",26,22,1,"PAH",1,1,81,0)
delete the message from POSTMASTER server basket S.LRLABSERVER.
"PKG",26,22,1,"PAH",1,1,82,0)
 
"PKG",26,22,1,"PAH",1,1,83,0)
 
"PKG",26,22,1,"PAH",1,1,84,0)
 ASSOCIATED E3R
"PKG",26,22,1,"PAH",1,1,85,0)
 --------------
"PKG",26,22,1,"PAH",1,1,86,0)
 None
"PKG",26,22,1,"PAH",1,1,87,0)
 
"PKG",26,22,1,"PAH",1,1,88,0)
 ASSOCIATED NOIS
"PKG",26,22,1,"PAH",1,1,89,0)
 ---------------
"PKG",26,22,1,"PAH",1,1,90,0)
 None
"PKG",26,22,1,"PAH",1,1,91,0)
 
"PKG",26,22,1,"PAH",1,1,92,0)
 
"PKG",26,22,1,"PAH",1,1,93,0)
 TEST SITES
"PKG",26,22,1,"PAH",1,1,94,0)
 ----------
"PKG",26,22,1,"PAH",1,1,95,0)
 Altoona VAMC
"PKG",26,22,1,"PAH",1,1,96,0)
 Bay Pines VAMC
"PKG",26,22,1,"PAH",1,1,97,0)
 Bulter VAMC
"PKG",26,22,1,"PAH",1,1,98,0)
 Cheyenne VAMC
"PKG",26,22,1,"PAH",1,1,99,0)
 Clarksburg VAMC
"PKG",26,22,1,"PAH",1,1,100,0)
 Coatesville VAMC
"PKG",26,22,1,"PAH",1,1,101,0)
 Erie VAMC
"PKG",26,22,1,"PAH",1,1,102,0)
 Grand Junction VAMC
"PKG",26,22,1,"PAH",1,1,103,0)
 Heartland-East HCS
"PKG",26,22,1,"PAH",1,1,104,0)
 Heartland-West HCS
"PKG",26,22,1,"PAH",1,1,105,0)
 Lebanon VAMC
"PKG",26,22,1,"PAH",1,1,106,0)
 Martinsburg VAMC
"PKG",26,22,1,"PAH",1,1,107,0)
 Maryland HCS
"PKG",26,22,1,"PAH",1,1,108,0)
 Milwaukee VAMC
"PKG",26,22,1,"PAH",1,1,109,0)
 Montana HCS
"PKG",26,22,1,"PAH",1,1,110,0)
 Philadelphia VAMC
"PKG",26,22,1,"PAH",1,1,111,0)
 Pittsburg HCS
"PKG",26,22,1,"PAH",1,1,112,0)
 Puget Sound HCS
"PKG",26,22,1,"PAH",1,1,113,0)
 Roseburg VAMC
"PKG",26,22,1,"PAH",1,1,114,0)
 Salt Lake City VAMC
"PKG",26,22,1,"PAH",1,1,115,0)
 Sheridan VAMC
"PKG",26,22,1,"PAH",1,1,116,0)
 Walla Walla VAMC
"PKG",26,22,1,"PAH",1,1,117,0)
 Washington VAMC
"PKG",26,22,1,"PAH",1,1,118,0)
 White City VAMC
"PKG",26,22,1,"PAH",1,1,119,0)
 Wike Barre VAMC
"PKG",26,22,1,"PAH",1,1,120,0)
 Wilmington VAMC
"PKG",26,22,1,"PAH",1,1,121,0)
 
"PKG",26,22,1,"PAH",1,1,122,0)
 
"PKG",26,22,1,"PAH",1,1,123,0)
ROUTINE SUMMARY
"PKG",26,22,1,"PAH",1,1,124,0)
===============
"PKG",26,22,1,"PAH",1,1,125,0)
  The following routines are included in this patch.  The second line
"PKG",26,22,1,"PAH",1,1,126,0)
  of each of these routines now looks like:
"PKG",26,22,1,"PAH",1,1,127,0)
  <tab> ;;5.2;LAB SERVICE;<patchlist>;Sep 27, 1994
"PKG",26,22,1,"PAH",1,1,128,0)
 
"PKG",26,22,1,"PAH",1,1,129,0)
                    Checksum       Checksum
"PKG",26,22,1,"PAH",1,1,130,0)
   Routine Name     Before Patch   After Patch    Patch List
"PKG",26,22,1,"PAH",1,1,131,0)
   ------------     ------------   -----------    ------------
"PKG",26,22,1,"PAH",1,1,132,0)
   LR303            N/A            4831421        **303** (Deleted by KIDS)
"PKG",26,22,1,"PAH",1,1,133,0)
   LRLNCPMP         7461913        7416816        **215,232,278,303**
"PKG",26,22,1,"PAH",1,1,134,0)
   LRSRVR           16543787       5915085        **232,303**
"PKG",26,22,1,"PAH",1,1,135,0)
   LRSRVR1          N/A            11247287       **303**
"PKG",26,22,1,"PAH",1,1,136,0)
   LRSRVR2          N/A            12542186       **303**
"PKG",26,22,1,"PAH",1,1,137,0)
   LRSRVR3          N/A            13571036       **303**
"PKG",26,22,1,"PAH",1,1,138,0)
   LRSRVR4          N/A            538253         **303**
"PKG",26,22,1,"PAH",1,1,139,0)
 
"PKG",26,22,1,"PAH",1,1,140,0)
 List of preceding patches: 232, 278
"PKG",26,22,1,"PAH",1,1,141,0)
 Sites should use CHECK^XTSUMBLD to verify checksums.
"PKG",26,22,1,"PAH",1,1,142,0)
  
"PKG",26,22,1,"PAH",1,1,143,0)
 
"PKG",26,22,1,"PAH",1,1,144,0)
INSTALLATION INSTRUCTIONS
"PKG",26,22,1,"PAH",1,1,145,0)
-------------------------
"PKG",26,22,1,"PAH",1,1,146,0)
  The install time for this patch is less than 5 minute. This patch
"PKG",26,22,1,"PAH",1,1,147,0)
  can be installed when Laboratory users are on the system.
"PKG",26,22,1,"PAH",1,1,148,0)
  Suggested time to install: non-peak requirement hours.
"PKG",26,22,1,"PAH",1,1,149,0)
 
"PKG",26,22,1,"PAH",1,1,150,0)
 
"PKG",26,22,1,"PAH",1,1,151,0)
NOTE: Kernel patches must be current on the target system to avoid
"PKG",26,22,1,"PAH",1,1,152,0)
      problems loading and/or installing this patch.
"PKG",26,22,1,"PAH",1,1,153,0)
 
"PKG",26,22,1,"PAH",1,1,154,0)
      Patch installation needs to be coordinated with the Laboratory
"PKG",26,22,1,"PAH",1,1,155,0)
      Information Manager (LIM/ADPAC).
"PKG",26,22,1,"PAH",1,1,156,0)
 
"PKG",26,22,1,"PAH",1,1,157,0)
 
"PKG",26,22,1,"PAH",1,1,158,0)
  1.  If any of the above routines are mapped, disable mapping for them.
"PKG",26,22,1,"PAH",1,1,159,0)
 
"PKG",26,22,1,"PAH",1,1,160,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",26,22,1,"PAH",1,1,161,0)
        option will load the KIDS package onto your system.
"PKG",26,22,1,"PAH",1,1,162,0)
 
"PKG",26,22,1,"PAH",1,1,163,0)
  3.  On the 'Kernel Installation & Distribution System' Menu (KIDS),
"PKG",26,22,1,"PAH",1,1,164,0)
      select the 'Installation' menu.
"PKG",26,22,1,"PAH",1,1,165,0)
 
"PKG",26,22,1,"PAH",1,1,166,0)
  4.  From this menu, you may then elect to use the following options
"PKG",26,22,1,"PAH",1,1,167,0)
      (when prompted for the INSTALL NAME, enter LR*5.2*303):
"PKG",26,22,1,"PAH",1,1,168,0)
        a. Print Transport Global
"PKG",26,22,1,"PAH",1,1,169,0)
        b. Backup a Transport Global
"PKG",26,22,1,"PAH",1,1,170,0)
        c. Compare Transport Global to Current System
"PKG",26,22,1,"PAH",1,1,171,0)
        d. Verify Checksums in Transport Global
"PKG",26,22,1,"PAH",1,1,172,0)
 
"PKG",26,22,1,"PAH",1,1,173,0)
      Use the 'Verify Checksum in Transport Global' option and verify that
"PKG",26,22,1,"PAH",1,1,174,0)
      all routines have the correct checksums.
"PKG",26,22,1,"PAH",1,1,175,0)
 
"PKG",26,22,1,"PAH",1,1,176,0)
  5.  Use the 'Install Package(s)' option under the 'Installation' menu
"PKG",26,22,1,"PAH",1,1,177,0)
      and select the package 'LR*5.2*303'.  When prompted 'Want KIDS to
"PKG",26,22,1,"PAH",1,1,178,0)
      INHIBIT LOGONs during the install? YES// choose 'NO'.  When prompted
"PKG",26,22,1,"PAH",1,1,179,0)
      'Want to DISABLE Scheduled Options, Menu Options, and Protocols?
"PKG",26,22,1,"PAH",1,1,180,0)
      YES//', choose 'NO'.
"PKG",26,22,1,"PAH",1,1,181,0)
 
"PKG",26,22,1,"PAH",1,1,182,0)
  6.  On a mapped system, rebuild your map set.
"PKG",26,22,1,"PAH",1,1,183,0)
 
"PKG",26,22,1,"PAH",1,1,184,0)
 Note: Routine LR303 will be deleted after successful patch installation.
"PKG",26,22,1,"PAH",1,1,185,0)
 
"PKG",26,22,1,"PAH",1,1,186,0)
 
"PKG",26,22,1,"PAH",1,1,187,0)
INSTALLATION EXAMPLE
"PKG",26,22,1,"PAH",1,1,188,0)
====================
"PKG",26,22,1,"PAH",1,1,189,0)
 
"PKG",26,22,1,"PAH",1,1,190,0)
Select Installation Option:
"PKG",26,22,1,"PAH",1,1,191,0)
 
"PKG",26,22,1,"PAH",1,1,192,0)
Select Kernel Installation & Distribution System Option:  Installation
"PKG",26,22,1,"PAH",1,1,193,0)
 
"PKG",26,22,1,"PAH",1,1,194,0)
Select Installation Option:  Install Package(s)
"PKG",26,22,1,"PAH",1,1,195,0)
Select INSTALL NAME: LR*5.2*303 Loaded from Distribution 12/21/04@13:39:35
"PKG",26,22,1,"PAH",1,1,196,0)
     => LR*5.2*303
"PKG",26,22,1,"PAH",1,1,197,0)
 
"PKG",26,22,1,"PAH",1,1,198,0)
This Distribution was loaded on Dec 21, 2004@13:39:35 with header of
"PKG",26,22,1,"PAH",1,1,199,0)
   LR*5.2*303
"PKG",26,22,1,"PAH",1,1,200,0)
   It consisted of the following Install(s):
"PKG",26,22,1,"PAH",1,1,201,0)
     LR*5.2*303
"PKG",26,22,1,"PAH",1,1,202,0)
Checking Install for Package LR*5.2*303
"PKG",26,22,1,"PAH",1,1,203,0)
Will first run the Environment Check Routine, LR303
"PKG",26,22,1,"PAH",1,1,204,0)
 
"PKG",26,22,1,"PAH",1,1,205,0)
 
"PKG",26,22,1,"PAH",1,1,206,0)
               Sending install started alert to mail group G.LMI
"PKG",26,22,1,"PAH",1,1,207,0)
 
"PKG",26,22,1,"PAH",1,1,208,0)
                        --- Environment Check is Ok ---
"PKG",26,22,1,"PAH",1,1,209,0)
 
"PKG",26,22,1,"PAH",1,1,210,0)
Install Questions for LR*5.2*303
"PKG",26,22,1,"PAH",1,1,211,0)
 
"PKG",26,22,1,"PAH",1,1,212,0)
 
"PKG",26,22,1,"PAH",1,1,213,0)
 
"PKG",26,22,1,"PAH",1,1,214,0)
Want KIDS to INHIBIT LOGONs during the install? YES// n  NO
"PKG",26,22,1,"PAH",1,1,215,0)
Want to DISABLE Scheduled Options, Menu Options, and Protocols? YES// n  NO
"PKG",26,22,1,"PAH",1,1,216,0)
 
"PKG",26,22,1,"PAH",1,1,217,0)
Enter the Device you want to print the Install messages.
"PKG",26,22,1,"PAH",1,1,218,0)
You can queue the install by enter a 'Q' at the device prompt.
"PKG",26,22,1,"PAH",1,1,219,0)
Enter a '^' to abort the install.
"PKG",26,22,1,"PAH",1,1,220,0)
 
"PKG",26,22,1,"PAH",1,1,221,0)
DEVICE: HOME// TELNET VIRTUAL
"PKG",26,22,1,"PAH",1,1,222,0)
 
"PKG",26,22,1,"PAH",1,1,223,0)
 
"PKG",26,22,1,"PAH",1,1,224,0)
 Install Started for LR*5.2*303 :
"PKG",26,22,1,"PAH",1,1,225,0)
               Dec 21, 2004@13:40:26
"PKG",26,22,1,"PAH",1,1,226,0)
 
"PKG",26,22,1,"PAH",1,1,227,0)
Build Distribution Date: Dec 21, 2004
"PKG",26,22,1,"PAH",1,1,228,0)
 
"PKG",26,22,1,"PAH",1,1,229,0)
 Installing Routines:........
"PKG",26,22,1,"PAH",1,1,230,0)
               Dec 21, 2004@13:40:27
"PKG",26,22,1,"PAH",1,1,231,0)
 
"PKG",26,22,1,"PAH",1,1,232,0)
 Running Pre-Install Routine: PRE^LR303.
"PKG",26,22,1,"PAH",1,1,233,0)
 
"PKG",26,22,1,"PAH",1,1,234,0)
                          *** Pre install started ***
"PKG",26,22,1,"PAH",1,1,235,0)
 
"PKG",26,22,1,"PAH",1,1,236,0)
                           *** No action required ***
"PKG",26,22,1,"PAH",1,1,237,0)
 
"PKG",26,22,1,"PAH",1,1,238,0)
                         *** Pre install completed ***
"PKG",26,22,1,"PAH",1,1,239,0)
 
"PKG",26,22,1,"PAH",1,1,240,0)
 Running Post-Install Routine: POST^LR303.
"PKG",26,22,1,"PAH",1,1,241,0)
 
"PKG",26,22,1,"PAH",1,1,242,0)
                          *** Post install started ***
"PKG",26,22,1,"PAH",1,1,243,0)
 
"PKG",26,22,1,"PAH",1,1,244,0)
                           *** No action required ***
"PKG",26,22,1,"PAH",1,1,245,0)
 
"PKG",26,22,1,"PAH",1,1,246,0)
                         *** Post install completed ***
"PKG",26,22,1,"PAH",1,1,247,0)
 
"PKG",26,22,1,"PAH",1,1,248,0)
              Sending install completion alert to mail group G.LMI
"PKG",26,22,1,"PAH",1,1,249,0)
 
"PKG",26,22,1,"PAH",1,1,250,0)
 Updating Routine file......
"PKG",26,22,1,"PAH",1,1,251,0)
 
"PKG",26,22,1,"PAH",1,1,252,0)
 Updating KIDS files.......
"PKG",26,22,1,"PAH",1,1,253,0)
 
"PKG",26,22,1,"PAH",1,1,254,0)
 LR*5.2*303 Installed.
"PKG",26,22,1,"PAH",1,1,255,0)
               Dec 21, 2004@13:40:27
"PKG",26,22,1,"PAH",1,1,256,0)
 
"PKG",26,22,1,"PAH",1,1,257,0)
 Install Message sent #xxx
"PRE")
LR303
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","LR303")
0^^B9400441
"RTN","LR303",1,0)
LR303 ;DALOI/JMC - LR*5.2*303 PATCH ENVIRONMENT CHECK ROUTINE ;3 AUG 2004
"RTN","LR303",2,0)
 ;;5.2;LAB SERVICE;**303**;Sep 27, 1994
"RTN","LR303",3,0)
EN ; Does not prevent loading of the transport global.
"RTN","LR303",4,0)
 ; Environment check is done only during the install.
"RTN","LR303",5,0)
 ;
"RTN","LR303",6,0)
 N XQA,XQAMSG
"RTN","LR303",7,0)
 ;
"RTN","LR303",8,0)
 I '$G(XPDENV) D  Q
"RTN","LR303",9,0)
 . S XQAMSG="Transport global for patch "_$G(XPDNM,"Unknown patch")_" loaded on "_$$HTE^XLFDT($H)
"RTN","LR303",10,0)
 . S XQA("G.LMI")=""
"RTN","LR303",11,0)
 . D SETUP^XQALERT
"RTN","LR303",12,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Sending transport global loaded alert to mail group G.LMI",80))
"RTN","LR303",13,0)
 ;
"RTN","LR303",14,0)
 S XQAMSG="Installation of patch "_$G(XPDNM,"Unknown patch")_" started on "_$$HTE^XLFDT($H)
"RTN","LR303",15,0)
 S XQA("G.LMI")=""
"RTN","LR303",16,0)
 D SETUP^XQALERT
"RTN","LR303",17,0)
 D BMES^XPDUTL($$CJ^XLFSTR("Sending install started alert to mail group G.LMI",80))
"RTN","LR303",18,0)
 ;
"RTN","LR303",19,0)
 D CHECK
"RTN","LR303",20,0)
 D EXIT
"RTN","LR303",21,0)
 Q
"RTN","LR303",22,0)
 ;
"RTN","LR303",23,0)
CHECK ; Perform environment check
"RTN","LR303",24,0)
 I $S('$G(IOM):1,'$G(IOSL):1,$G(U)'="^":1,1:0) D  Q
"RTN","LR303",25,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Terminal Device is not defined",80))
"RTN","LR303",26,0)
 . S XPDQUIT=2
"RTN","LR303",27,0)
 I $S('$G(DUZ):1,$D(DUZ)[0:1,$D(DUZ(0))[0:1,1:0) D  Q
"RTN","LR303",28,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Please log in to set local DUZ... variables",80))
"RTN","LR303",29,0)
 . S XPDQUIT=2
"RTN","LR303",30,0)
 I $P($$ACTIVE^XUSER(DUZ),"^")'=1 D  Q
"RTN","LR303",31,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("You are not a valid user on this system",80))
"RTN","LR303",32,0)
 . S XPDQUIT=2
"RTN","LR303",33,0)
 S XPDIQ("XPZ1","B")="NO"
"RTN","LR303",34,0)
 Q
"RTN","LR303",35,0)
 ;
"RTN","LR303",36,0)
EXIT ;
"RTN","LR303",37,0)
 I $G(XPDQUIT) D BMES^XPDUTL($$CJ^XLFSTR("--- Install Environment Check FAILED ---",80))
"RTN","LR303",38,0)
 I '$G(XPDQUIT) D BMES^XPDUTL($$CJ^XLFSTR("--- Environment Check is Ok ---",80))
"RTN","LR303",39,0)
 Q
"RTN","LR303",40,0)
 ;
"RTN","LR303",41,0)
PRE ; KIDS Pre install
"RTN","LR303",42,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Pre install started ***",80))
"RTN","LR303",43,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** No action required ***",80))
"RTN","LR303",44,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Pre install completed ***",80))
"RTN","LR303",45,0)
 Q
"RTN","LR303",46,0)
 ;
"RTN","LR303",47,0)
POST ; KIDS Post install
"RTN","LR303",48,0)
 N XQA,XQAMSG
"RTN","LR303",49,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Post install started ***",80))
"RTN","LR303",50,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** No action required ***",80))
"RTN","LR303",51,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Post install completed ***",80))
"RTN","LR303",52,0)
 D BMES^XPDUTL($$CJ^XLFSTR("Sending install completion alert to mail group G.LMI",80))
"RTN","LR303",53,0)
 S XQAMSG="Installation of patch "_$G(XPDNM,"Unknown patch")_" completed on "_$$HTE^XLFDT($H)
"RTN","LR303",54,0)
 S XQA("G.LMI")=""
"RTN","LR303",55,0)
 D SETUP^XQALERT
"RTN","LR303",56,0)
 S XQAMSG="LIM: Review description for "_$G(XPDNM,"Unknown patch")_" use KIDS:Utilities:Build File Print"
"RTN","LR303",57,0)
 S XQA("G.LMI")=""
"RTN","LR303",58,0)
 D SETUP^XQALERT
"RTN","LR303",59,0)
 Q
"RTN","LRLNCPMP")
0^3^B24345962
"RTN","LRLNCPMP",1,0)
LRLNCPMP ;DALOI/FHS - PRINT LAB TESTS MAPPED/NOT MAPPED TO LOINC CODES ;1-OCT-1998
"RTN","LRLNCPMP",2,0)
 ;;5.2;LAB SERVICE;**215,232,278,303**;Sep 27,1994
"RTN","LRLNCPMP",3,0)
EN ;
"RTN","LRLNCPMP",4,0)
 W @IOF K LRMAP,LREND
"RTN","LRLNCPMP",5,0)
 W !,$$CJ^XLFSTR("This option prints a list of the LABORATORY TESTS from the LABORATORY TEST FILE.",IOM)
"RTN","LRLNCPMP",6,0)
 W !,$$CJ^XLFSTR("You will be prompted to print lab tests that are",IOM)
"RTN","LRLNCPMP",7,0)
 W !,$$CJ^XLFSTR("mapped/not mapped to a LOINC code.",IOM)
"RTN","LRLNCPMP",8,0)
 W !,$$CJ^XLFSTR("Inactive(Type:Neither) lab tests are not reported.",IOM)
"RTN","LRLNCPMP",9,0)
WHICH ;
"RTN","LRLNCPMP",10,0)
 W !!!,"Print lab tests that are mapped/not mapped to a LOINC code."
"RTN","LRLNCPMP",11,0)
 K DIR,LRMAP
"RTN","LRLNCPMP",12,0)
 S DIR("?")="Select 1 for mapped, 0 for not mapped or 2 for Individual"
"RTN","LRLNCPMP",13,0)
 S DIR(0)="SO^0:Not Mapped;1:Mapped test;2:Individual Mapped Test"
"RTN","LRLNCPMP",14,0)
 D ^DIR K DIR
"RTN","LRLNCPMP",15,0)
 I Y=""!($D(DIRUT)) D EXIT Q
"RTN","LRLNCPMP",16,0)
 S LRMAP=Y
"RTN","LRLNCPMP",17,0)
 D:+Y=2 SING G:$G(LREND) EXIT
"RTN","LRLNCPMP",18,0)
 K %ZIS S %ZIS="Q" D ^%ZIS G:POP EXIT
"RTN","LRLNCPMP",19,0)
 I $D(IO("Q")) D QUE Q
"RTN","LRLNCPMP",20,0)
 ;
"RTN","LRLNCPMP",21,0)
 U IO
"RTN","LRLNCPMP",22,0)
 D START,^%ZISC
"RTN","LRLNCPMP",23,0)
 Q
"RTN","LRLNCPMP",24,0)
 ;
"RTN","LRLNCPMP",25,0)
 ;
"RTN","LRLNCPMP",26,0)
SING ; Select individual lab test for report
"RTN","LRLNCPMP",27,0)
 I LRMAP=2 D
"RTN","LRLNCPMP",28,0)
 . K LRMAP
"RTN","LRLNCPMP",29,0)
 . S LREND=0,LRMAP=2
"RTN","LRLNCPMP",30,0)
 . W !,$$CJ^XLFSTR("You can only select test that have been mapped.",IOM)
"RTN","LRLNCPMP",31,0)
 . W !,$$CJ^XLFSTR("You can a quick list of mapped tests by entering '?'.",IOM)
"RTN","LRLNCPMP",32,0)
 . W !,$$CJ^XLFSTR("Then enter 'Yes' you want a complete list.",IOM),!
"RTN","LRLNCPMP",33,0)
 . K DIR,X,Y
"RTN","LRLNCPMP",34,0)
 . S DIR(0)="PO^60:EZNMQ"
"RTN","LRLNCPMP",35,0)
 . S DIR("S")="I $S($D(^LAM(""AL"",+Y)):1,$D(^LAM(""AM"",+Y)):1,1:0)"
"RTN","LRLNCPMP",36,0)
 . S DIR("?")="You must select a Mapped LABORATORY TEST"
"RTN","LRLNCPMP",37,0)
 . F  D ^DIR Q:Y<1!($D(DIRUT))  S LRMAP(+Y)=Y
"RTN","LRLNCPMP",38,0)
 . I '$O(LRMAP(0)) W !!?5,"Nothing Selected" S LREND=1
"RTN","LRLNCPMP",39,0)
 Q
"RTN","LRLNCPMP",40,0)
QUE ;
"RTN","LRLNCPMP",41,0)
 S ZTRTN="START^LRLNCPMP"
"RTN","LRLNCPMP",42,0)
 S ZTDESC="LAB TESTS MAP REPORT",ZTSAVE("LRMAP*")=""
"RTN","LRLNCPMP",43,0)
 D ^%ZTLOAD
"RTN","LRLNCPMP",44,0)
 I $D(ZTSK)'[0 W !,"REQUEST QUEUED ",ION
"RTN","LRLNCPMP",45,0)
 D HOME^%ZIS
"RTN","LRLNCPMP",46,0)
 K IO("Q")
"RTN","LRLNCPMP",47,0)
 Q
"RTN","LRLNCPMP",48,0)
 ;
"RTN","LRLNCPMP",49,0)
 ;
"RTN","LRLNCPMP",50,0)
START ; Begins report
"RTN","LRLNCPMP",51,0)
 N LINE,LOINCDTA,LOINCDTB,LOINCTAS,LRAA,LRAA1,LRPNTA,LRPNTB,LRSUB
"RTN","LRLNCPMP",52,0)
 S LINE=0
"RTN","LRLNCPMP",53,0)
 D INI
"RTN","LRLNCPMP",54,0)
 I LRMAP'=2 D EN1
"RTN","LRLNCPMP",55,0)
 I LRMAP=2 D
"RTN","LRLNCPMP",56,0)
 . S LRIEN=0
"RTN","LRLNCPMP",57,0)
 . F  S LRIEN=$O(LRMAP(LRIEN)) Q:LRIEN<1  S LRNODE=$G(^LAB(60,LRIEN,0)) D YMAP
"RTN","LRLNCPMP",58,0)
 D YMAPPRT,EXIT
"RTN","LRLNCPMP",59,0)
 Q
"RTN","LRLNCPMP",60,0)
 ;
"RTN","LRLNCPMP",61,0)
 ;
"RTN","LRLNCPMP",62,0)
EN1 ; Print mapped or not mapped lab tests if there is a data name 
"RTN","LRLNCPMP",63,0)
 S LRTEST=""
"RTN","LRLNCPMP",64,0)
 S LRTST="^LAB(60,""B"",0)"
"RTN","LRLNCPMP",65,0)
 F  S LRTST=$Q(@LRTST) Q:$QS(LRTST,2)'="B"  D  Q:$G(LREND)
"RTN","LRLNCPMP",66,0)
 . Q:$G(@LRTST)
"RTN","LRLNCPMP",67,0)
 . S LRIEN=$QS(LRTST,4)
"RTN","LRLNCPMP",68,0)
 . Q:'$D(^LAB(60,LRIEN,0))#2  S LRNODE=^(0)
"RTN","LRLNCPMP",69,0)
 . I $S($P(LRNODE,U,3)="":1,$P(LRNODE,U,3)="N":1,'$P($P(LRNODE,U,5),";",2):1,1:0) Q
"RTN","LRLNCPMP",70,0)
 . N LRNLT
"RTN","LRLNCPMP",71,0)
 . S LRNLT=+$P($G(^LAB(60,LRIEN,64)),U,2)
"RTN","LRLNCPMP",72,0)
 . I 'LRMAP,$S(('$D(^LAM("AL",LRIEN))&('$D(^LAM("AM",LRIEN)))):1,1:0) D NMAP
"RTN","LRLNCPMP",73,0)
 . I LRMAP,$S($D(^LAM("AL",LRIEN)):1,$D(^LAM("AM",LRIEN)):1,1:0) D YMAP
"RTN","LRLNCPMP",74,0)
 Q
"RTN","LRLNCPMP",75,0)
 ;
"RTN","LRLNCPMP",76,0)
 ;
"RTN","LRLNCPMP",77,0)
YMAPPRT I $D(^TMP($J,"LRDATA")) D
"RTN","LRLNCPMP",78,0)
 . S LRPRT=0
"RTN","LRLNCPMP",79,0)
 . F  S LRPRT=$O(^TMP($J,"LRDATA",LRPRT)) Q:LRPRT=""  D  Q:$G(LREND)
"RTN","LRLNCPMP",80,0)
 .. I $Y+4>IOSL D HDR Q:$G(LREND)
"RTN","LRLNCPMP",81,0)
 .. W !,^TMP($J,"LRDATA",LRPRT)
"RTN","LRLNCPMP",82,0)
 Q
"RTN","LRLNCPMP",83,0)
 ;
"RTN","LRLNCPMP",84,0)
 ;
"RTN","LRLNCPMP",85,0)
NMAP ;
"RTN","LRLNCPMP",86,0)
 I $Y+4>IOSL D HDR Q:$G(LREND)
"RTN","LRLNCPMP",87,0)
 S LRTESTN=$P(LRNODE,U)
"RTN","LRLNCPMP",88,0)
 W !,?1,LRTESTN
"RTN","LRLNCPMP",89,0)
 S LRNLT=$P($G(^LAB(60,LRIEN,64)),U,2)
"RTN","LRLNCPMP",90,0)
 I LRNLT D
"RTN","LRLNCPMP",91,0)
 . N LROUT
"RTN","LRLNCPMP",92,0)
 . D GETS^DIQ(64,LRNLT_",",".01;1","E","LROUT")
"RTN","LRLNCPMP",93,0)
 . W !?5,$G(LROUT(64,LRNLT_",",1,"E")),?18,$G(LROUT(64,LRNLT_",",.01,"E"))
"RTN","LRLNCPMP",94,0)
 W !
"RTN","LRLNCPMP",95,0)
 Q
"RTN","LRLNCPMP",96,0)
 ;
"RTN","LRLNCPMP",97,0)
 ;
"RTN","LRLNCPMP",98,0)
YMAP ;
"RTN","LRLNCPMP",99,0)
 S LINE=$G(LINE)+1
"RTN","LRLNCPMP",100,0)
 S ^TMP($J,"LRDATA",LINE)="LAB TEST :  "_$P(LRNODE,U),LINE=LINE+1
"RTN","LRLNCPMP",101,0)
 S LRSUB="LOCAL REPORT"
"RTN","LRLNCPMP",102,0)
 N LRA,LRNLTX
"RTN","LRLNCPMP",103,0)
 S LRNLT=0
"RTN","LRLNCPMP",104,0)
 F  S LRNLT=$O(^LAM("AM",LRIEN,LRNLT)) Q:LRNLT=""  I '$D(LRNLTX(LRNLT)) D
"RTN","LRLNCPMP",105,0)
 . S LRA=LRNLT,LRNLTX(LRNLT)=1
"RTN","LRLNCPMP",106,0)
 . D LOINCLA^LRSRVR1
"RTN","LRLNCPMP",107,0)
 S LRNLT=0
"RTN","LRLNCPMP",108,0)
 F  S LRNLT=$O(^LAM("AL",LRIEN,LRNLT)) Q:LRNLT=""  I '$D(LRNLTX(LRNLT)) D
"RTN","LRLNCPMP",109,0)
 . S LRA=LRNLT,LRNLTX(LRNLT)=1
"RTN","LRLNCPMP",110,0)
 . D LOINCLA^LRSRVR1
"RTN","LRLNCPMP",111,0)
 S LINE=$G(LINE)+1,^TMP($J,"LRDATA",LINE)="-------------------"
"RTN","LRLNCPMP",112,0)
 S LINE=LINE+1,^TMP($J,"LRDATA",LINE)="",LINE=LINE+1
"RTN","LRLNCPMP",113,0)
 Q
"RTN","LRLNCPMP",114,0)
 ;
"RTN","LRLNCPMP",115,0)
 ;
"RTN","LRLNCPMP",116,0)
INI ; Initialize variables
"RTN","LRLNCPMP",117,0)
 K ^TMP($J,"LRDATA")
"RTN","LRLNCPMP",118,0)
 S (LREND,LRPAGE)=0,$P(LRLINE,"=",(IOM-1))=""
"RTN","LRLNCPMP",119,0)
 S LRPDT=$$HTE^XLFDT($H,"MZ")
"RTN","LRLNCPMP",120,0)
 ;
"RTN","LRLNCPMP",121,0)
HDR ; Print heading
"RTN","LRLNCPMP",122,0)
 I LRPAGE,$E(IOST,1,2)="C-" W !,"Press RETURN to continue or '^' to exit: " R N:DTIME S LREND='$T!(N="^") Q:LREND
"RTN","LRLNCPMP",123,0)
 S LRPAGE=LRPAGE+1
"RTN","LRLNCPMP",124,0)
 W @IOF,!?16,"LAB TESTS"_$S(LRMAP=2:" Individual Mapped",LRMAP=1:" Mapped",LRMAP'=1:" NOT Mapped",1:0)_" TO LOINC CODES"
"RTN","LRLNCPMP",125,0)
 W !?5,LRPDT,?(IOM-15)," Page ",$J(LRPAGE,3)
"RTN","LRLNCPMP",126,0)
 I 'LRMAP W !,?5,"LAB TEST"
"RTN","LRLNCPMP",127,0)
 I 'LRMAP W !,?10,"RESULT NLT"
"RTN","LRLNCPMP",128,0)
 W !,LRLINE,!
"RTN","LRLNCPMP",129,0)
 Q
"RTN","LRLNCPMP",130,0)
 ;
"RTN","LRLNCPMP",131,0)
 ;
"RTN","LRLNCPMP",132,0)
EXIT I $E(IOST,1,2)="P-" W @IOF
"RTN","LRLNCPMP",133,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRLNCPMP",134,0)
 Q:$G(LRDBUG)
"RTN","LRLNCPMP",135,0)
 K DIR,DIRUT,LREND,LRPAGE,I,J,LRA,LRLOC,LRIEN,LRPREV,ZTIO,ZTDESC,ZTRTN
"RTN","LRLNCPMP",136,0)
 K LRMAP,LRSPEC,LRTEST,LRTESTN,LRLOINC,LRPDT,LRLINE,LRX,DUOUT,ZTSAVE
"RTN","LRLNCPMP",137,0)
 K LRNLT,LRNLTN,LRNODE,LRPRT,LRSPECN,LRTST,N,Y,POP,ZTSK,ZTQUEUED,ZTREQ
"RTN","LRLNCPMP",138,0)
 K ^TMP($J,"LRDATA")
"RTN","LRLNCPMP",139,0)
 Q
"RTN","LRSRVR")
0^1^B18875049
"RTN","LRSRVR",1,0)
LRSRVR ;DALOI/RLM/JMC - LAB DATA SERVER ; MAY 10, 2001
"RTN","LRSRVR",2,0)
 ;;5.2;LAB SERVICE;**232,303**;Sep 27, 1994
"RTN","LRSRVR",3,0)
 ; Reference to ^%ZOSF supported by IA #10096
"RTN","LRSRVR",4,0)
 ; Reference to ^DPT supported by IA #10035
"RTN","LRSRVR",5,0)
 ; Reference to ^DD("DD" supported by IA #10017
"RTN","LRSRVR",6,0)
 ; Reference to $$SITE^VASITE supported by IA #10112
"RTN","LRSRVR",7,0)
 ; Reference to $$FMTE^XLFDT() supported by IA #10103
"RTN","LRSRVR",8,0)
 ;
"RTN","LRSRVR",9,0)
START ;
"RTN","LRSRVR",10,0)
 N LRSITE,LRXMZ
"RTN","LRSRVR",11,0)
 ;
"RTN","LRSRVR",12,0)
 ; Save incoming server message id for cleanup
"RTN","LRSRVR",13,0)
 S LRXMZ=XMZ
"RTN","LRSRVR",14,0)
 ;
"RTN","LRSRVR",15,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LRDTERR")
"RTN","LRSRVR",16,0)
 ; Determine station name and number
"RTN","LRSRVR",17,0)
 S LRSITE=$$SITE^VASITE,LRSTN=$P(LRSITE,"^",2),LRST=$P(LRSITE,"^",3)
"RTN","LRSRVR",18,0)
 I LRST="" S LRST="???"
"RTN","LRSRVR",19,0)
 ;
"RTN","LRSRVR",20,0)
 S LRSUB=$$UP^XLFSTR(XQSUB)
"RTN","LRSRVR",21,0)
 ;
"RTN","LRSRVR",22,0)
 ; The first line of the message tells who requested the action and when
"RTN","LRSRVR",23,0)
 ; The second line tells when the server is activated and no data can be
"RTN","LRSRVR",24,0)
 ; gathered from the MailMan message.  This line gets replaced if the
"RTN","LRSRVR",25,0)
 ; server finds something to do.
"RTN","LRSRVR",26,0)
 S ^TMP($J,"LRDATA",1)=LRSUB_" triggered at "_LRSTN_" by "_XMFROM_" on "_XQDATE
"RTN","LRSRVR",27,0)
 S LRACTION=$S(LRSUB["CHECKSUM":"Checksums Generated",1:LRSUB)
"RTN","LRSRVR",28,0)
 S ^TMP($J,"LRDATA",2)="I don't know how to "_LRACTION_" at "_LRSTN
"RTN","LRSRVR",29,0)
 ;
"RTN","LRSRVR",30,0)
 ;
"RTN","LRSRVR",31,0)
 ; If the subject contains "CHECKSUM" send a report of the current checksums to the LABTEAM group on RDMAIL
"RTN","LRSRVR",32,0)
 I LRSUB["CHECKSUM" D CSUM Q
"RTN","LRSRVR",33,0)
 ;
"RTN","LRSRVR",34,0)
 ; If the subject contains "LIST" send a report based on the list of routines in the body of the message back to the original sender.
"RTN","LRSRVR",35,0)
 I LRSUB["LIST" D SUMLST Q
"RTN","LRSRVR",36,0)
 ;
"RTN","LRSRVR",37,0)
 ; If the subject equals "LOINC" send the local LOINC data to the national list.
"RTN","LRSRVR",38,0)
 I LRSUB="LOINC" D LOINC^LRSRVR1 Q
"RTN","LRSRVR",39,0)
 ;
"RTN","LRSRVR",40,0)
 ; If the subject contains "LOCAL REPORT" send the local LOINC data to the sender.
"RTN","LRSRVR",41,0)
 I LRSUB="LOCAL REPORT" D LOINCL^LRSRVR1 Q
"RTN","LRSRVR",42,0)
 I LRSUB="LOCAL REPORT DELIMIT" D LOINCLD^LRSRVR3 Q
"RTN","LRSRVR",43,0)
 ;
"RTN","LRSRVR",44,0)
 ; Send RELMA mapper formatted message
"RTN","LRSRVR",45,0)
 I LRSUB="RELMA" D SERVER^LRSRVR2 Q
"RTN","LRSRVR",46,0)
 ;
"RTN","LRSRVR",47,0)
 ; If subject not understood by server, send a message to the sender
"RTN","LRSRVR",48,0)
 ;  that the server can't understand their instructions.
"RTN","LRSRVR",49,0)
 K XMY
"RTN","LRSRVR",50,0)
 S XMY(XQSND)=""
"RTN","LRSRVR",51,0)
 ;
"RTN","LRSRVR",52,0)
EXIT ; If all went well, report that too.
"RTN","LRSRVR",53,0)
 ; Mail the errors and successes back to the Roll-Up group at Forum.
"RTN","LRSRVR",54,0)
 N LRNOW
"RTN","LRSRVR",55,0)
 S LRNOW=$$NOW^XLFDT
"RTN","LRSRVR",56,0)
 S XMDUN="Lab Server",XMDUZ=".5",XMSUB=LRSTN_" LAB SERVER ("_LRNOW_")"
"RTN","LRSRVR",57,0)
 S XMTEXT="^TMP($J,""LRDATA"","
"RTN","LRSRVR",58,0)
 I '$D(XMY) S XMY("G.LABTEAM@ISC-DALLAS.VA.GOV")=""
"RTN","LRSRVR",59,0)
 D ^XMD
"RTN","LRSRVR",60,0)
 ;
"RTN","LRSRVR",61,0)
CLEAN ; Cleanup and exit
"RTN","LRSRVR",62,0)
 I $D(^TMP($J,"LRDTERR")) D
"RTN","LRSRVR",63,0)
 . S XMDUN="Lab Server",XMDUZ=".5"
"RTN","LRSRVR",64,0)
 . S XMSUB=LRSTN_" LAB SERVER ERROR ("_LRNOW_")"
"RTN","LRSRVR",65,0)
 . S XMTEXT="^TMP($J,""LRDTERR"","
"RTN","LRSRVR",66,0)
 . S XMY("G.LABTEAM@ISC-DALLAS.VA.GOV")="",XMY(XQSND)=""
"RTN","LRSRVR",67,0)
 . D ^XMD
"RTN","LRSRVR",68,0)
 ;
"RTN","LRSRVR",69,0)
 ; Clean up server message in MailMan
"RTN","LRSRVR",70,0)
 I $G(LRXMZ)>0 D ZAPSERV^XMXAPI("S.LRLABSERVER",LRXMZ)
"RTN","LRSRVR",71,0)
 ;
"RTN","LRSRVR",72,0)
 K %,%DT,%H,D,DD,DIC,DIERR,ERROR,FILL,LINE,LOINCDTA,LOINCDTB,LOINCTAS
"RTN","LRSRVR",73,0)
 K LRA,LRAA,LRACTION,LRB,LRCLST,LRDA,LRERR,LRFOUND,LRFOUND1,LRI,LRLINE
"RTN","LRSRVR",74,0)
 K LRNDE,LROUT,LRPNT,LRPNTA,LRPNTB,LRRDT,LRRN,LRROOT,LRST,LRSTN,LRSUB
"RTN","LRSRVR",75,0)
 K X,XMDUN,XMDUZ,XMER,XMFROM,XMREC,XMRG,XMSUB,XMTEXT,XMY,XMZ,XQDATE
"RTN","LRSRVR",76,0)
 K XQSND,XQSUB,Y,ZTQUEUED,ZTSK
"RTN","LRSRVR",77,0)
 ;
"RTN","LRSRVR",78,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LRDTERR")
"RTN","LRSRVR",79,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRSRVR",80,0)
 Q
"RTN","LRSRVR",81,0)
 ;
"RTN","LRSRVR",82,0)
 ;
"RTN","LRSRVR",83,0)
CSUM ;Calculate checksum for routines and transmit errors to LABTEAM group
"RTN","LRSRVR",84,0)
 S X=$T(+0) X ^%ZOSF("RSUM") S ^TMP($J,"LRDATA",2)=X_" at "_LRSTN_" = "_Y
"RTN","LRSRVR",85,0)
 S LRI=0 F  S LRI=$O(^LAB(69.91,1,"ROU",LRI)) Q:'LRI  S X=$P(^LAB(69.91,1,"ROU",LRI,0),"^"),LRA=$P(^LAB(69.91,1,"ROU",LRI,0),"^",4) D
"RTN","LRSRVR",86,0)
  . X ^%ZOSF("TEST") I '$T S ^TMP($J,"LRDATA",LRI+3)=X_" is missing." Q
"RTN","LRSRVR",87,0)
  . X ^%ZOSF("RSUM") I +$G(Y)'=LRA S ^TMP($J,"LRDATA",LRI+3)=X_" should be "_LRA_" is "_+$G(Y)
"RTN","LRSRVR",88,0)
 S XMSUB="Lab Checksum data at "_LRSTN_" run on "_XQDATE
"RTN","LRSRVR",89,0)
 D EXIT
"RTN","LRSRVR",90,0)
 Q
"RTN","LRSRVR",91,0)
 ;
"RTN","LRSRVR",92,0)
SUMLST ;Calculate checksum for routines and transmit to requestor
"RTN","LRSRVR",93,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LRDTERR")
"RTN","LRSRVR",94,0)
 S LRCLST=$P($$SITE^VASITE,"^",2),LINE=2,LINR=1,$P(FILL," ",8)=""
"RTN","LRSRVR",95,0)
 S ^TMP($J,"LRDATA",1)="Lab Server triggered at "_LRCLST_" by "_XMFROM_" on "_XQDATE
"RTN","LRSRVR",96,0)
 F  X XMREC Q:XMER<0  S X=XMRG D
"RTN","LRSRVR",97,0)
  . ;check for a plus sign in front of the routine name.  Bypass the
"RTN","LRSRVR",98,0)
  . ;test to see if the routine exists if it's there.
"RTN","LRSRVR",99,0)
  . ;DSM won't check %routines to make sure they exist, Cache will.
"RTN","LRSRVR",100,0)
  . I X'?1"+".E X ^%ZOSF("TEST") I '$T S ^TMP($J,"LRDATA",LINE)=X_$E(FILL,$L(X),8)_" is missing.",LINE=LINE+1 Q
"RTN","LRSRVR",101,0)
  . ;Strip off the plus sign so that the checksum routine can find it.
"RTN","LRSRVR",102,0)
  . S X=$TR(X,"+","")
"RTN","LRSRVR",103,0)
  . X ^%ZOSF("RSUM") S ^TMP($J,"LRDATA",LINE)=X_$E(FILL,$L(X),8)_" is "_Y,LINE=LINE+1
"RTN","LRSRVR",104,0)
 S XMSUB="Checksum data at "_LRCLST_" run on "_XQDATE
"RTN","LRSRVR",105,0)
 D EXIT
"RTN","LRSRVR",106,0)
 Q
"RTN","LRSRVR",107,0)
 ;
"RTN","LRSRVR",108,0)
 ;
"RTN","LRSRVR",109,0)
ZEOR ;LRSRVR
"RTN","LRSRVR1")
0^2^B41108233
"RTN","LRSRVR1",1,0)
LRSRVR1 ;DALOI/JMC -LAB DATA SERVER, CONT'D - LOINC SECTION ; March 25, 2002
"RTN","LRSRVR1",2,0)
 ;;5.2;LAB SERVICE;**303**;Sep 27, 1994
"RTN","LRSRVR1",3,0)
 ;
"RTN","LRSRVR1",4,0)
 ;
"RTN","LRSRVR1",5,0)
LOINC ; Scan for LOINC Coding
"RTN","LRSRVR1",6,0)
 ;
"RTN","LRSRVR1",7,0)
 N LR60,LR61,LRLLINA,LRLLINB,LRLLINC,LRX
"RTN","LRSRVR1",8,0)
 K XMY
"RTN","LRSRVR1",9,0)
 ;S XMY("G.LOINCSERVER@ISC-DALLAS.VA.GOV")=""
"RTN","LRSRVR1",10,0)
 S XMY(XQSND)=""
"RTN","LRSRVR1",11,0)
 S ^TMP($J,"LRDATA",1)="*"_$$NOW^XLFDT
"RTN","LRSRVR1",12,0)
 S ^TMP($J,"LRDATA",2)="No codes defined at "_LRSTN
"RTN","LRSRVR1",13,0)
 K ^TMP($J,"LRSERVER","LOINC")
"RTN","LRSRVR1",14,0)
 S LINE=2,LINR=1
"RTN","LRSRVR1",15,0)
 F LRSUB="AI","AH" D
"RTN","LRSRVR1",16,0)
 . S LRA=""
"RTN","LRSRVR1",17,0)
 . F  S LRA=$O(^LAM(LRSUB,LRA)) Q:'LRA  D
"RTN","LRSRVR1",18,0)
 . . S LRB=""
"RTN","LRSRVR1",19,0)
 . . F  S LRB=$O(^LAM(LRSUB,LRA,LRB)) Q:LRB=""  S ^TMP($J,"LRSERVER","LOINC",LRB)=""
"RTN","LRSRVR1",20,0)
 ;
"RTN","LRSRVR1",21,0)
 S LRA=""
"RTN","LRSRVR1",22,0)
 F  S LRA=$O(^TMP($J,"LRSERVER","LOINC",LRA)) Q:LRA=""  D
"RTN","LRSRVR1",23,0)
 . K LOINCDTA,LOINCDTB,LRERR
"RTN","LRSRVR1",24,0)
 . D GETS^DIQ(64,LRA,".01;1;25;25.5","IE","LOINCDTB","LRERR")
"RTN","LRSRVR1",25,0)
 . D GETS^DIQ(64,LRA,"20*","IE","LOINCDTA","LRERR")
"RTN","LRSRVR1",26,0)
 . S LRPNTB=$O(LOINCDTB(64,"")) Q:LRPNTB=""
"RTN","LRSRVR1",27,0)
 . I LINE>2 F  Q:'$D(^TMP($J,"LRDATA",LINE))  S LINE=LINE+1
"RTN","LRSRVR1",28,0)
 . S LRLLINA="~"_LRST_"^"_$G(LOINCDTB(64,LRPNTB,.01,"E"))
"RTN","LRSRVR1",29,0)
 . ;PROCEDURE (64,.01)
"RTN","LRSRVR1",30,0)
 . S LRLLINA=LRLLINA_"^"_$G(LOINCDTB(64,LRPNTB,1,"E"))
"RTN","LRSRVR1",31,0)
 . ;WKLD CODE (64,1)
"RTN","LRSRVR1",32,0)
 . S LRLLINA=LRLLINA_"^"_$G(LOINCDTB(64,LRPNTB,25,"E"))
"RTN","LRSRVR1",33,0)
 . ;DEFAULT LOINC CODE (64,25)
"RTN","LRSRVR1",34,0)
 . S LRLLINA=LRLLINA_"^"_$G(LOINCDTB(64,LRPNTB,25.5,"E"))
"RTN","LRSRVR1",35,0)
 . ;LOOK FOR 64.01 & 64.02 HERE
"RTN","LRSRVR1",36,0)
 . I '$O(LOINCDTA(64.01,"")) S ^TMP($J,"LRDATA",LINE)=LRLLINA S LINE=LINE+1
"RTN","LRSRVR1",37,0)
 . S LRAA1=""
"RTN","LRSRVR1",38,0)
 . F  S LRAA1=$O(LOINCDTA(64.01,LRAA1)) Q:LRAA1=""  D
"RTN","LRSRVR1",39,0)
 . . I '$D(LOINCDTA(64.01,LRAA1,.01,"I")) D  Q
"RTN","LRSRVR1",40,0)
 . . . S ^TMP($J,"LRDTERR",LINR)="Specimen sub-field error in file 64!!  "_LRAA1,LINR=LINR+1
"RTN","LRSRVR1",41,0)
 . . . S ^TMP($J,"LRDTERR",LINR)=$G(LRERR("DIERR",1,"TEXT",1)),LINR=LINR+1
"RTN","LRSRVR1",42,0)
 . . S LRPNTA=LOINCDTA(64.01,LRAA1,.01,"I")
"RTN","LRSRVR1",43,0)
 . . D GETS^DIQ(61,LRPNTA,.0961,,"LOINCTAS","LRERR")
"RTN","LRSRVR1",44,0)
 . . S LRLLINB="^"_$G(LOINCTAS(61,LRPNTA_",",.0961))
"RTN","LRSRVR1",45,0)
 . . ;TIME ASPECT (61,.0961)
"RTN","LRSRVR1",46,0)
 . . S LRLLINB=LRLLINB_"^"_LOINCDTA(64.01,LRAA1,.01,"E")
"RTN","LRSRVR1",47,0)
 . . ;SPECIMEN (64.01,.01)
"RTN","LRSRVR1",48,0)
 . . I '$O(LOINCDTA(64.02,"")) S ^TMP($J,"LRDATA",LINE)=LRLLINA_LRLLINB,LINE=LINE+1
"RTN","LRSRVR1",49,0)
 . . S LRAA=""
"RTN","LRSRVR1",50,0)
 . . F  S LRAA=$O(LOINCDTA(64.02,LRAA)) Q:LRAA=""  D
"RTN","LRSRVR1",51,0)
 . . . S LRLLINC="^"_$G(LOINCDTA(64.02,LRAA,2,"E"))
"RTN","LRSRVR1",52,0)
 . . . ;DATA LOCATION (64.02,2)
"RTN","LRSRVR1",53,0)
 . . . D TSTNAM
"RTN","LRSRVR1",54,0)
 . . . ;TEST (64.02,3)
"RTN","LRSRVR1",55,0)
 . . . S LRLLINC=LRLLINC_"^"_$G(LOINCDTA(64.02,LRAA,4,"E"))
"RTN","LRSRVR1",56,0)
 . . . S ^TMP($J,"LRDATA",LINE)=LRLLINA_LRLLINB_LRLLINC
"RTN","LRSRVR1",57,0)
 . . . D TSTTYP,TSTUNS
"RTN","LRSRVR1",58,0)
 . . . S LINE=LINE+1
"RTN","LRSRVR1",59,0)
 D EXIT^LRSRVR
"RTN","LRSRVR1",60,0)
 Q
"RTN","LRSRVR1",61,0)
 ;
"RTN","LRSRVR1",62,0)
 ;
"RTN","LRSRVR1",63,0)
LOINCL ; Build and send local LOINC report
"RTN","LRSRVR1",64,0)
 ;
"RTN","LRSRVR1",65,0)
 N LINE,LINR,LRA,LRXREF
"RTN","LRSRVR1",66,0)
 K ^TMP($J,"LRSERVER","LOINC")
"RTN","LRSRVR1",67,0)
 K XMY
"RTN","LRSRVR1",68,0)
 S XMY(XQSND)=""
"RTN","LRSRVR1",69,0)
 S ^TMP($J,"LRDATA",1)="Report Generated "_$$FMTE^XLFDT($$NOW^XLFDT)_" at "_LRSTN
"RTN","LRSRVR1",70,0)
 S ^TMP($J,"LRDATA",2)="No codes defined at "_LRSTN
"RTN","LRSRVR1",71,0)
 S LINE=2,LINR=1
"RTN","LRSRVR1",72,0)
 F LRXREF="AI","AH" D
"RTN","LRSRVR1",73,0)
 . S LRA=""
"RTN","LRSRVR1",74,0)
 . F  S LRA=$O(^LAM(LRXREF,LRA)) Q:'LRA  D
"RTN","LRSRVR1",75,0)
 . . S LRB=""
"RTN","LRSRVR1",76,0)
 . . F  S LRB=$O(^LAM(LRXREF,LRA,LRB)) Q:LRB=""  S ^TMP($J,"LRSERVER","LOINC",LRB)=""
"RTN","LRSRVR1",77,0)
 ;
"RTN","LRSRVR1",78,0)
 S LRA=""
"RTN","LRSRVR1",79,0)
 F  S LRA=$O(^TMP($J,"LRSERVER","LOINC",LRA)) Q:LRA=""  D LOINCLA
"RTN","LRSRVR1",80,0)
 D EXIT^LRSRVR
"RTN","LRSRVR1",81,0)
 Q
"RTN","LRSRVR1",82,0)
 ;
"RTN","LRSRVR1",83,0)
 ;
"RTN","LRSRVR1",84,0)
LOINCLA ;
"RTN","LRSRVR1",85,0)
 N LR60,LR61,LRERR,LOINCDTA,LOINCDTB,LRPNTB,LRX
"RTN","LRSRVR1",86,0)
 S:'$D(LINE) LINE=1 S:'$D(LINR) LINR=1
"RTN","LRSRVR1",87,0)
 D GETS^DIQ(64,LRA,".01;1;25;25.5","IE","LOINCDTB","LRERR")
"RTN","LRSRVR1",88,0)
 D GETS^DIQ(64,LRA,"20*","IE","LOINCDTA","LRERR")
"RTN","LRSRVR1",89,0)
 S LRPNTB=$O(LOINCDTB(64,"")) Q:LRPNTB=""
"RTN","LRSRVR1",90,0)
 S ^TMP($J,"LRDATA",LINE)="",LINE=LINE+1
"RTN","LRSRVR1",91,0)
 S ^TMP($J,"LRDATA",LINE)="NLT Procedure: "_$G(LOINCDTB(64,LRPNTB,.01,"E")),LINE=LINE+1
"RTN","LRSRVR1",92,0)
 ;
"RTN","LRSRVR1",93,0)
 ; Procedure (64,.01)
"RTN","LRSRVR1",94,0)
 S ^TMP($J,"LRDATA",LINE)="NLT Code: "_$G(LOINCDTB(64,LRPNTB,1,"E")),LINE=LINE+1
"RTN","LRSRVR1",95,0)
 ;
"RTN","LRSRVR1",96,0)
 ; WKLD CODE (64,1)
"RTN","LRSRVR1",97,0)
 S ^TMP($J,"LRDATA",LINE)="Default LOINC Code: "_$G(LOINCDTB(64,LRPNTB,25,"E"))_" : "_$G(^LAB(95.3,+$G(LOINCDTB(64,LRPNTB,25,"E")),80)),LINE=LINE+1
"RTN","LRSRVR1",98,0)
 ;
"RTN","LRSRVR1",99,0)
 ; Default LOINC code (64,25)
"RTN","LRSRVR1",100,0)
 S ^TMP($J,"LRDATA",LINE)="Default LOINC Code Test: "_$G(LOINCDTB(64,LRPNTB,25.5,"E")),LINE=LINE+1
"RTN","LRSRVR1",101,0)
 ;
"RTN","LRSRVR1",102,0)
 ; Look for 64.01 & 64.02 here
"RTN","LRSRVR1",103,0)
 S LRAA1=""
"RTN","LRSRVR1",104,0)
 F  S LRAA1=$O(LOINCDTA(64.01,LRAA1)) Q:LRAA1=""  D
"RTN","LRSRVR1",105,0)
 . I '$D(LOINCDTA(64.01,LRAA1,.01,"I")) D  Q
"RTN","LRSRVR1",106,0)
 . . S ^TMP($J,"LRDATA",LINE)="Specimen sub-field error in file 64!!  "_LRAA1,LINE=LINE+1
"RTN","LRSRVR1",107,0)
 . . S ^TMP($J,"LRDATA",LINE)=$G(LRERR("DIERR",1,"TEXT",1)),LINE=LINE+1
"RTN","LRSRVR1",108,0)
 . S LRPNTA=LOINCDTA(64.01,LRAA1,.01,"I")
"RTN","LRSRVR1",109,0)
 . D GETS^DIQ(61,LRPNTA,.0961,,"LOINCTAS","LRERR")
"RTN","LRSRVR1",110,0)
 . S ^TMP($J,"LRDATA",LINE)="Time Aspect: "_LOINCTAS(61,LRPNTA_",",.0961),LINE=LINE+1
"RTN","LRSRVR1",111,0)
 . ; TIME ASPECT (61,.0961)
"RTN","LRSRVR1",112,0)
 . S ^TMP($J,"LRDATA",LINE)="Specimen: "_LOINCDTA(64.01,LRAA1,.01,"E"),LINE=LINE+1
"RTN","LRSRVR1",113,0)
 . ; SPECIMEN (64.01,.01)
"RTN","LRSRVR1",114,0)
 . S LRAA=""
"RTN","LRSRVR1",115,0)
 . F  S LRAA=$O(LOINCDTA(64.02,LRAA)) Q:LRAA=""  I LRAA[LRAA1 D
"RTN","LRSRVR1",116,0)
 . . S ^TMP($J,"LRDATA",LINE)="Data Location: "_$G(LOINCDTA(64.02,LRAA,2,"E")),LINE=LINE+1
"RTN","LRSRVR1",117,0)
 . . ; DATA LOCATION (64.02,2)
"RTN","LRSRVR1",118,0)
 . . D TSTTYP,TSTNAM,TSTUNS
"RTN","LRSRVR1",119,0)
 . . S ^TMP($J,"LRDATA",LINE)="LOINC Code: "_$G(LOINCDTA(64.02,LRAA,4,"E"))_" : "_$G(^LAB(95.3,+$G(LOINCDTA(64.02,LRAA,4,"E")),80)),LINE=LINE+1
"RTN","LRSRVR1",120,0)
 . . ; LOINC CODE (64.02,4)
"RTN","LRSRVR1",121,0)
 Q
"RTN","LRSRVR1",122,0)
 ;
"RTN","LRSRVR1",123,0)
 ;
"RTN","LRSRVR1",124,0)
TSTTYP ; Determine test data type
"RTN","LRSRVR1",125,0)
 N LRX,LRTYPE,LRY
"RTN","LRSRVR1",126,0)
 I LOINCDTA(64.02,LRAA,2,"I")="" Q
"RTN","LRSRVR1",127,0)
 S LRX=$P(LOINCDTA(64.02,LRAA,2,"I"),"(",2)
"RTN","LRSRVR1",128,0)
 S LRTYPE=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"","TYPE")
"RTN","LRSRVR1",129,0)
 I LRSUB="LOINC" S $P(^TMP($J,"LRDATA",LINE),"^",11)=LRTYPE
"RTN","LRSRVR1",130,0)
 I LRSUB="LOCAL REPORT" S ^TMP($J,"LRDATA",LINE)="Data Type: "_LRTYPE,LINE=LINE+1
"RTN","LRSRVR1",131,0)
 S LRY=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"",$S(LRTYPE="SET":"POINTER",1:"INPUT TRANSFORM"))
"RTN","LRSRVR1",132,0)
 I LRSUB="LOINC" S LRY=$TR(LRY,"^","~"),$P(^TMP($J,"LRDATA",LINE),"^",12)=LRY
"RTN","LRSRVR1",133,0)
 I LRSUB="LOCAL REPORT" S ^TMP($J,"LRDATA",LINE)="Data Values: "_LRY,LINE=LINE+1
"RTN","LRSRVR1",134,0)
 S LRY=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"","HELP-PROMPT")
"RTN","LRSRVR1",135,0)
 I LRSUB="LOINC" S $P(^TMP($J,"LRDATA",LINE),"^",13)=LRY
"RTN","LRSRVR1",136,0)
 I LRSUB="LOCAL REPORT" S ^TMP($J,"LRDATA",LINE)="Data Help: "_LRY,LINE=LINE+1
"RTN","LRSRVR1",137,0)
 Q
"RTN","LRSRVR1",138,0)
 ;
"RTN","LRSRVR1",139,0)
 ;
"RTN","LRSRVR1",140,0)
TSTNAM ; Test name and units
"RTN","LRSRVR1",141,0)
 N LRX,LRY
"RTN","LRSRVR1",142,0)
 S LRX=LOINCDTA(64.02,LRAA,3,"E")
"RTN","LRSRVR1",143,0)
 S LRY=""
"RTN","LRSRVR1",144,0)
 I LOINCDTA(64.02,LRAA,3,"I") S LRY=LOINCDTA(64.02,LRAA,3,"I")_"-"_LOINCDTA(64.01,$P(LRAA,",",2,4),.01,"I")
"RTN","LRSRVR1",145,0)
 I LRSUB="LOCAL REPORT" D
"RTN","LRSRVR1",146,0)
 . S ^TMP($J,"LRDATA",LINE)="Test: "_LRX,LINE=LINE+1
"RTN","LRSRVR1",147,0)
 . I LRY'="" S ^TMP($J,"LRDATA",LINE)="Test-Spec: "_LRY,LINE=LINE+1
"RTN","LRSRVR1",148,0)
 I LRSUB="LOINC" D
"RTN","LRSRVR1",149,0)
 . S LRLLINC=LRLLINC_"^"_LRX
"RTN","LRSRVR1",150,0)
 . S $P(^TMP($J,"LRDATA",LINE),"^",15)=LRY
"RTN","LRSRVR1",151,0)
 Q
"RTN","LRSRVR1",152,0)
 ;
"RTN","LRSRVR1",153,0)
 ;
"RTN","LRSRVR1",154,0)
TSTUNS ; Test units
"RTN","LRSRVR1",155,0)
 N LR60,LR61,LRY
"RTN","LRSRVR1",156,0)
 S LR60=+LOINCDTA(64.02,LRAA,3,"I"),LR61=+LOINCDTA(64.01,$P(LRAA,",",2,4),.01,"I")
"RTN","LRSRVR1",157,0)
 S LRY=$$GET1^DIQ(60.01,LR61_","_LR60_",",6)
"RTN","LRSRVR1",158,0)
 I LRSUB="LOINC" S $P(^TMP($J,"LRDATA",LINE),"^",14)=LRY
"RTN","LRSRVR1",159,0)
 I LRSUB="LOCAL REPORT" S ^TMP($J,"LRDATA",LINE)="Units: "_LRY,LINE=LINE+1
"RTN","LRSRVR1",160,0)
 Q
"RTN","LRSRVR2")
0^4^B60700026
"RTN","LRSRVR2",1,0)
LRSRVR2 ;DALIO/FHS - LAB DATA SERVER CONT'D RELMA EXTRACT ; Aug 26, 2004
"RTN","LRSRVR2",2,0)
 ;;5.2;LAB SERVICE;**303**;Sep 27, 1994
"RTN","LRSRVR2",3,0)
 ; Produces LOINC RELMA extract - via LRLABSERVER or option
"RTN","LRSRVR2",4,0)
 ;
"RTN","LRSRVR2",5,0)
EN ; Called by option [LR LOINC EXTRACT RELMA FORMAT]
"RTN","LRSRVR2",6,0)
 ; Entry point for the option - user must capture output
"RTN","LRSRVR2",7,0)
 N DIR,DIRUT,LREND,LRCNT,LRSUB,LRVAL,LRST,LRSTN,LRTXT,X,Y
"RTN","LRSRVR2",8,0)
 S DIR(0)="Y",DIR("A")="Ready to Capture",DIR("B")="Yes"
"RTN","LRSRVR2",9,0)
 D ^DIR
"RTN","LRSRVR2",10,0)
 I $D(DIRUT) Q
"RTN","LRSRVR2",11,0)
 D WAIT^DICD
"RTN","LRSRVR2",12,0)
 S LRSUB="RELMA",LRTXT=1
"RTN","LRSRVR2",13,0)
 D BUILD
"RTN","LRSRVR2",14,0)
 W !
"RTN","LRSRVR2",15,0)
 S LRL=0
"RTN","LRSRVR2",16,0)
 F  S LRL=$O(^TMP($J,"LRDATA",LRL)) Q:LRL<1  W !,^(LRL)
"RTN","LRSRVR2",17,0)
 D CLEAN
"RTN","LRSRVR2",18,0)
 Q
"RTN","LRSRVR2",19,0)
 ;
"RTN","LRSRVR2",20,0)
 ;
"RTN","LRSRVR2",21,0)
SERVER ; Server entry Point
"RTN","LRSRVR2",22,0)
 N I,LRCNT,LREND,LRL,LRTXT,LRX,LRY
"RTN","LRSRVR2",23,0)
 S LRTXT=0
"RTN","LRSRVR2",24,0)
 D BUILD
"RTN","LRSRVR2",25,0)
 S XMSUB=LRST_" "_LRSTN_" RELMA EXTRACT "_$$HTE^XLFDT($H,"1M")
"RTN","LRSRVR2",26,0)
 S XMY(XQSND)="",XMTEXT="^TMP($J,""LRDATA"","
"RTN","LRSRVR2",27,0)
 S XMDUN="Lab Server",XMDUZ=".5"
"RTN","LRSRVR2",28,0)
 D ^XMD
"RTN","LRSRVR2",29,0)
 D CLEAN
"RTN","LRSRVR2",30,0)
 Q
"RTN","LRSRVR2",31,0)
 ;
"RTN","LRSRVR2",32,0)
 ;
"RTN","LRSRVR2",33,0)
BUILD ; Build extract
"RTN","LRSRVR2",34,0)
 N I,LR6206,LR64,LRCNT,LRCRLF,LRLEN,LRQUIT,LRROOT,LRSS,LRSTR,LRSTUB,LRVAL
"RTN","LRSRVR2",35,0)
 S LRVAL=$$SITE^VASITE,LRST=$P(LRVAL,"^",3),LRSTN=$P(LRVAL,"^",2)
"RTN","LRSRVR2",36,0)
 I LRST="" S LRST="???"
"RTN","LRSRVR2",37,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LR60")
"RTN","LRSRVR2",38,0)
 S LRCNT=0,LRCRLF=$C(13,10),LRSTR=""
"RTN","LRSRVR2",39,0)
 F I=0,1,2,3 S LRCNT(I)=0
"RTN","LRSRVR2",40,0)
 D HDR
"RTN","LRSRVR2",41,0)
 ;
"RTN","LRSRVR2",42,0)
 ; Step down the B X-ref - exclude synomyms
"RTN","LRSRVR2",43,0)
 S LRROOT="^LAB(60,""B"")"
"RTN","LRSRVR2",44,0)
 F  S LRROOT=$Q(@LRROOT) Q:LRROOT=""  Q:$QS(LRROOT,2)'="B"  D
"RTN","LRSRVR2",45,0)
 . Q:$G(@LRROOT)
"RTN","LRSRVR2",46,0)
 . D TEST
"RTN","LRSRVR2",47,0)
 ;
"RTN","LRSRVR2",48,0)
 ; Process microbiology antibiotics
"RTN","LRSRVR2",49,0)
 S LR6206=0,LRSS="MI"
"RTN","LRSRVR2",50,0)
 F  S LR6206=$O(^LAB(62.06,LR6206)) Q:'LR6206  D
"RTN","LRSRVR2",51,0)
 . S LR64=$$GET1^DIQ(62.06,LR6206_",",64,"I")
"RTN","LRSRVR2",52,0)
 . S LRX=$$MICRO^LRSRVR3(LR64)
"RTN","LRSRVR2",53,0)
 . S LRSTUB=$P(LRX,"|",5)_"||||"_$P(LRX,"|",3)_"|"_$P(LRX,"|",1)_"|||"_$P(LRX,"|",20)_"|"_$P(LRX,"|",19)
"RTN","LRSRVR2",54,0)
 . S LRSTR=LRSTR_LRST_"-"_LR64_"-"_"AB"_LR6206_"|"_LRSTUB
"RTN","LRSRVR2",55,0)
 . D SETDATA S LRCNT(3)=LRCNT(3)+1
"RTN","LRSRVR2",56,0)
 ;
"RTN","LRSRVR2",57,0)
 ; Set the final info into the ^TMP message global
"RTN","LRSRVR2",58,0)
 I 'LRTXT D
"RTN","LRSRVR2",59,0)
 . S LRNODE=$O(^TMP($J,"LRDATA",""),-1)+1
"RTN","LRSRVR2",60,0)
 . I LRSTR'="" S ^TMP($J,"LRDATA",LRNODE)=$$UUEN^LRSRVR4(LRSTR)
"RTN","LRSRVR2",61,0)
 . S ^TMP($J,"LRDATA",LRNODE+1)=" "
"RTN","LRSRVR2",62,0)
 . S ^TMP($J,"LRDATA",LRNODE+2)="end"
"RTN","LRSRVR2",63,0)
 ;
"RTN","LRSRVR2",64,0)
 S ^TMP($J,"LRDATA",6)="Total number of records: "_$J(LRCNT,5)
"RTN","LRSRVR2",65,0)
 S ^TMP($J,"LRDATA",7)="Total number of tests..: "_$J(LRCNT(0),5)
"RTN","LRSRVR2",66,0)
 S ^TMP($J,"LRDATA",8)="Tests with LOINC code..: "_$J(LRCNT(1),5)
"RTN","LRSRVR2",67,0)
 S ^TMP($J,"LRDATA",9)="Tests with NLT code....: "_$J(LRCNT(2),5)
"RTN","LRSRVR2",68,0)
 S ^TMP($J,"LRDATA",10)="Antimicrobials.........: "_$J(LRCNT(3),5)
"RTN","LRSRVR2",69,0)
 ;
"RTN","LRSRVR2",70,0)
 Q
"RTN","LRSRVR2",71,0)
 ;
"RTN","LRSRVR2",72,0)
 ;
"RTN","LRSRVR2",73,0)
CLEAN ;
"RTN","LRSRVR2",74,0)
 K ^TMP($J,"LR60")
"RTN","LRSRVR2",75,0)
 K ERR,LR60IEN,LR60NM,LR6421,LR64IEN,LR64N,LR64NM
"RTN","LRSRVR2",76,0)
 K LRACTION,LRCC,LRCCNX,LOINCDTA,LRRNLT,LRCDEF,LREND
"RTN","LRSRVR2",77,0)
 K LRL,LRLNC,LRLNC80,LRLNCN,LRLNCX,LRNODE,LROUT,LROUT1,LRR64
"RTN","LRSRVR2",78,0)
 K LRSPEC,LRSPEC60,LRSPECHL,LRSPECN,LRSPECTA,LRSPCN,LRST,LRSTN,LRSTR
"RTN","LRSRVR2",79,0)
 K LRTA,LRUNIT,LRX,LRY,X,Y
"RTN","LRSRVR2",80,0)
 D CLEAN^LRSRVR
"RTN","LRSRVR2",81,0)
 D ^%ZISC
"RTN","LRSRVR2",82,0)
 Q
"RTN","LRSRVR2",83,0)
 ;
"RTN","LRSRVR2",84,0)
 ;
"RTN","LRSRVR2",85,0)
TEST ; Pull out test info
"RTN","LRSRVR2",86,0)
 N LA7TREE,LR60,LRBATTY,LRBATTYN
"RTN","LRSRVR2",87,0)
 K LROUT,LRSPEC,ERR
"RTN","LRSRVR2",88,0)
 S LR60NM=$QS(LRROOT,3),LR60IEN=$QS(LRROOT,4)
"RTN","LRSRVR2",89,0)
 ;
"RTN","LRSRVR2",90,0)
 ; Bypass "neither" type tests.
"RTN","LRSRVR2",91,0)
 I $P(^LAB(60,LR60IEN,0),"^",3)="N" Q
"RTN","LRSRVR2",92,0)
 ; Bypass "workload" type tests.
"RTN","LRSRVR2",93,0)
 I $P(^LAB(60,LR60IEN,0),"^",4)="WK" Q
"RTN","LRSRVR2",94,0)
 ;
"RTN","LRSRVR2",95,0)
 S LRBATTY=LRST_"-"_LR60IEN,LRBATTYN=LR60NM
"RTN","LRSRVR2",96,0)
 ; Panel test
"RTN","LRSRVR2",97,0)
 I $O(^LAB(60,LR60IEN,2,0)) D  Q
"RTN","LRSRVR2",98,0)
 . D UNWIND^LA7ADL1(LR60IEN,9,0)
"RTN","LRSRVR2",99,0)
 . S LR60=0
"RTN","LRSRVR2",100,0)
 . F  S LR60=$O(LA7TREE(LR60)) Q:'LR60  D
"RTN","LRSRVR2",101,0)
 . . I $D(^TMP($J,"LR60",LR60)) Q
"RTN","LRSRVR2",102,0)
 . . S LR60IEN=LR60,LR60NM=$P(^LAB(60,LR60IEN,0),"^")
"RTN","LRSRVR2",103,0)
 . . S LRRNLT="",LRR64=+$P($G(^LAB(60,+LR60IEN,64)),U,2)
"RTN","LRSRVR2",104,0)
 . . I LRR64 S LRRNLT=$$GET1^DIQ(64,LRR64_",",1,"E")
"RTN","LRSRVR2",105,0)
 . . D SPEC
"RTN","LRSRVR2",106,0)
 ;
"RTN","LRSRVR2",107,0)
 I $D(^TMP($J,"LR60",LR60IEN)) Q
"RTN","LRSRVR2",108,0)
 ; Not a panel test
"RTN","LRSRVR2",109,0)
 ; Get result NLT code
"RTN","LRSRVR2",110,0)
 S LRRNLT="",LRR64=+$P($G(^LAB(60,+LR60IEN,64)),U,2),LR6421=0
"RTN","LRSRVR2",111,0)
 I LRR64 D
"RTN","LRSRVR2",112,0)
 . S LRRNLT=$$GET1^DIQ(64,LRR64_",",1,"E")
"RTN","LRSRVR2",113,0)
 . S LR6421=$$GET1^DIQ(64,LRR64_",",13,"I")
"RTN","LRSRVR2",114,0)
 D SPEC
"RTN","LRSRVR2",115,0)
 Q
"RTN","LRSRVR2",116,0)
 ;
"RTN","LRSRVR2",117,0)
 ;
"RTN","LRSRVR2",118,0)
SPEC ; Check each specimen for this test
"RTN","LRSRVR2",119,0)
 K LRSPEC,LROUT
"RTN","LRSRVR2",120,0)
 S (LRCDEF,LRSPEC,LRSPECHL,LRSPECN,LRLNC,LRLNCN,LRLNCX,LRLNC80,Y)=""
"RTN","LRSRVR2",121,0)
 S (LR64NM,LR64N,LRSPECHL,LRUNIT)="",LRTA="POINT"
"RTN","LRSRVR2",122,0)
 S LRSPEC60=0
"RTN","LRSRVR2",123,0)
 F  S LRSPEC60=$O(^LAB(60,+LR60IEN,1,LRSPEC60)) Q:'LRSPEC60  D
"RTN","LRSRVR2",124,0)
 . Q:'$D(^LAB(60,+LR60IEN,1,LRSPEC60,0))#2
"RTN","LRSRVR2",125,0)
 . S LRUNIT=$$TRIM^XLFSTR($P(^(0),U,7)," ","RL")
"RTN","LRSRVR2",126,0)
 . K LROUT,ERR
"RTN","LRSRVR2",127,0)
 . D GETS^DIQ(61,LRSPEC60_",",".01;.09;.0961","E","LROUT","ERR")
"RTN","LRSRVR2",128,0)
 . S LRSPECN=$G(LROUT(61,LRSPEC60_",",.01,"E"))
"RTN","LRSRVR2",129,0)
 . S LRSPECHL=$G(LROUT(61,LRSPEC60_",",.09,"E"))
"RTN","LRSRVR2",130,0)
 . S LRSPECTA=$G(LROUT(61,LRSPEC60_",",.0961,"E"))
"RTN","LRSRVR2",131,0)
 . S LRSPEC(LRSPEC60)=LRSPEC60_U_LRSPECN_U_LRSPECHL_U_LRSPECTA_U_LRUNIT
"RTN","LRSRVR2",132,0)
 D SPECLOOP
"RTN","LRSRVR2",133,0)
 Q
"RTN","LRSRVR2",134,0)
 ;
"RTN","LRSRVR2",135,0)
 ;
"RTN","LRSRVR2",136,0)
SPECLOOP ; Check to see if specimen has been linked to LOINC
"RTN","LRSRVR2",137,0)
 ;
"RTN","LRSRVR2",138,0)
 S LRSPEC=0
"RTN","LRSRVR2",139,0)
 F  S LRSPEC=$O(LRSPEC(LRSPEC)) Q:'LRSPEC  D
"RTN","LRSRVR2",140,0)
 . K Y
"RTN","LRSRVR2",141,0)
 . S LRSPCN=$P(LRSPEC(LRSPEC),U),LRSPECN=$P(LRSPEC(LRSPEC),U,2)
"RTN","LRSRVR2",142,0)
 . S LRTA=$P(LRSPEC(LRSPEC),U,4)
"RTN","LRSRVR2",143,0)
 . S LRUNIT=$$TRIM^XLFSTR($P(LRSPEC(LRSPEC),U,5),"RL"," ")
"RTN","LRSRVR2",144,0)
 . S LRLNCX=$$RNLT^LRVER1(LR60IEN),LRLNC=$P(LRLNCX,"!",2)
"RTN","LRSRVR2",145,0)
 . D VAL
"RTN","LRSRVR2",146,0)
 Q
"RTN","LRSRVR2",147,0)
 ;
"RTN","LRSRVR2",148,0)
 ;
"RTN","LRSRVR2",149,0)
VAL ; Get LOINC code info
"RTN","LRSRVR2",150,0)
 S LRLNC80="" I 'LRLNC D WRT Q
"RTN","LRSRVR2",151,0)
 N ERR,LROUT1,X,Y
"RTN","LRSRVR2",152,0)
 D GETS^DIQ(95.3,LRLNC_",",".01;80","E","LROUT1","ERR")
"RTN","LRSRVR2",153,0)
 I LRTXT,$D(ERR) W !,LRLNC_"  *  LOINC LOOKUP ERR",! Q
"RTN","LRSRVR2",154,0)
 S LRLNC=LROUT1(95.3,+LRLNC_",",.01,"E")
"RTN","LRSRVR2",155,0)
 S LRLNC80=LROUT1(95.3,+LRLNC_",",80,"E")
"RTN","LRSRVR2",156,0)
 D WRT
"RTN","LRSRVR2",157,0)
 Q
"RTN","LRSRVR2",158,0)
 ;
"RTN","LRSRVR2",159,0)
 ;
"RTN","LRSRVR2",160,0)
WRT ; Set ^TMP( with extracted data
"RTN","LRSRVR2",161,0)
 N LRQUIT,LRLEN,LRSS,X,Y
"RTN","LRSRVR2",162,0)
 ;
"RTN","LRSRVR2",163,0)
 ; Set flag that this file #60 test has been processed - avoid duplicate
"RTN","LRSRVR2",164,0)
 ; processing as component of panel and individual test
"RTN","LRSRVR2",165,0)
 S ^TMP($J,"LR60",LR60IEN)=""
"RTN","LRSRVR2",166,0)
 ;
"RTN","LRSRVR2",167,0)
 S:LRTA="" LRTA="POINT"
"RTN","LRSRVR2",168,0)
 S LR60NM=$$TRIM^XLFSTR(LR60NM,"RL"," ")
"RTN","LRSRVR2",169,0)
 S LRBATTY=$$TRIM^XLFSTR(LRBATTY,"RL"," ")
"RTN","LRSRVR2",170,0)
 S LRSTR=LRSTR_LRST_"-"_LR60IEN_"-"_LRSPEC
"RTN","LRSRVR2",171,0)
 S LRSTR=LRSTR_"|"_LR60NM_"|"_LRSPECN_"|"_LRTA_"|"_LRUNIT_"|"_LRLNC_"|"_$P(LRLNCX,"!")_"|"
"RTN","LRSRVR2",172,0)
 S LRSTR=LRSTR_LRBATTY_"|"_LRBATTYN_"|"
"RTN","LRSRVR2",173,0)
 ;
"RTN","LRSRVR2",174,0)
 ; Lab section specified for this NLT code.
"RTN","LRSRVR2",175,0)
 S LRSTR=LRSTR_$S($G(LR6421)>0:$$GET1^DIQ(64.21,LR6421_",",1),1:"")_"|"
"RTN","LRSRVR2",176,0)
 ;
"RTN","LRSRVR2",177,0)
 ; Subscript
"RTN","LRSRVR2",178,0)
 S LRSS=$$GET1^DIQ(60,LR60IEN_",",4,"I")
"RTN","LRSRVR2",179,0)
 S LRSTR=LRSTR_LRSS_"|"
"RTN","LRSRVR2",180,0)
 ; Test info - data type, help prompt
"RTN","LRSRVR2",181,0)
 I LRSS'="CH" S LRSTR=LRSTR_"||"
"RTN","LRSRVR2",182,0)
 I LRSS="CH" S LRSTR=LRSTR_$$TSTTYP^LRSRVR3($$GET1^DIQ(60,LR60IEN_",",13))_"|"
"RTN","LRSRVR2",183,0)
 ;
"RTN","LRSRVR2",184,0)
 ; Test reference low|reference high|therapeutic low|therapeutic high|
"RTN","LRSRVR2",185,0)
 S X=$G(^LAB(60,LR60IEN,1,LRSPEC,0))
"RTN","LRSRVR2",186,0)
 S Y=$P(X,"^",2)_"|"_$P(X,"^",3)_"|"_$P(X,"^",11)_"|"_$P(X,"^",12)
"RTN","LRSRVR2",187,0)
 S LRSTR=LRSTR_$TR(Y,$C(34),"")
"RTN","LRSRVR2",188,0)
 S LRCNT(0)=LRCNT(0)+1
"RTN","LRSRVR2",189,0)
 I LRLNC'="" S LRCNT(1)=LRCNT(1)+1
"RTN","LRSRVR2",190,0)
 I $P(LRLNCX,"!")'="" S LRCNT(2)=LRCNT(2)+1
"RTN","LRSRVR2",191,0)
 ;
"RTN","LRSRVR2",192,0)
 ;
"RTN","LRSRVR2",193,0)
SETDATA ; Set data into report structure
"RTN","LRSRVR2",194,0)
 I 'LRTXT S LRSTR=LRSTR_LRCRLF
"RTN","LRSRVR2",195,0)
 S LRCNT=LRCNT+1
"RTN","LRSRVR2",196,0)
 S LRNODE=$O(^TMP($J,"LRDATA",""),-1)
"RTN","LRSRVR2",197,0)
 I LRTXT S LRNODE=LRNODE+1,^TMP($J,"LRDATA",LRNODE)=LRSTR,LRSTR="" Q
"RTN","LRSRVR2",198,0)
 I 'LRTXT D ENCODE^LRSRVR4(.LRSTR)
"RTN","LRSRVR2",199,0)
 Q
"RTN","LRSRVR2",200,0)
 ;
"RTN","LRSRVR2",201,0)
 ;
"RTN","LRSRVR2",202,0)
HDR ; Set the header information
"RTN","LRSRVR2",203,0)
 S ^TMP($J,"LRDATA",1)="Report Generated.......: "_$$FMTE^XLFDT($$NOW^XLFDT)_" at "_LRSTN
"RTN","LRSRVR2",204,0)
 S ^TMP($J,"LRDATA",2)="Report requested.......: "_LRSUB
"RTN","LRSRVR2",205,0)
 S ^TMP($J,"LRDATA",3)="LOINC version..........: "_$$GET1^DID(95.3,"","","PACKAGE REVISION DATA")
"RTN","LRSRVR2",206,0)
 S ^TMP($J,"LRDATA",4)="VistA File version.....: "_$G(^LAB(95.3,"VR"))
"RTN","LRSRVR2",207,0)
 F I=5,11,12 S ^TMP($J,"LRDATA",I)=" "
"RTN","LRSRVR2",208,0)
 S ^TMP($J,"LRDATA",13)="Legend:"
"RTN","LRSRVR2",209,0)
 S X="Station #-60 ien-Spec ien|Test Name|Spec|Time Aspect|Units|LOINC|NLT #|Battery Code|Battery Description|Lab Section|Subscript|Comments|Data Type|Reference low|Reference high|Therapeutic low|Therapeutic high|"
"RTN","LRSRVR2",210,0)
 S ^TMP($J,"LRDATA",14)=X
"RTN","LRSRVR2",211,0)
 S X="           1             |    2    |  3 |     4     |  5  |  6  |  7  |    8       |     9             |     10    |   11    |    12   |     13 |   14        |     15       |      16       |       17       |"
"RTN","LRSRVR2",212,0)
 S ^TMP($J,"LRDATA",15)=X
"RTN","LRSRVR2",213,0)
 S ^TMP($J,"LRDATA",16)=$$REPEAT^XLFSTR("-",$L(X))
"RTN","LRSRVR2",214,0)
 S ^TMP($J,"LRDATA",17)=" "
"RTN","LRSRVR2",215,0)
 I 'LRTXT D
"RTN","LRSRVR2",216,0)
 . S LRFILENM=$TR(LRSTN," ","_")_"-"_LRSUB_"-"_$P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")_".TXT"
"RTN","LRSRVR2",217,0)
 . S ^TMP($J,"LRDATA",11)="Attached LMOF file.....: "_LRFILENM
"RTN","LRSRVR2",218,0)
 . S ^TMP($J,"LRDATA",18)="begin 0644 "_LRFILENM
"RTN","LRSRVR2",219,0)
 Q
"RTN","LRSRVR3")
0^5^B40554780
"RTN","LRSRVR3",1,0)
LRSRVR3 ;DALOI/JMC -LAB DATA SERVER, CONT'D - LOINC SECTION ; Nov 24, 2004
"RTN","LRSRVR3",2,0)
 ;;5.2;LAB SERVICE;**303**;Sep 27, 1994
"RTN","LRSRVR3",3,0)
 ;
"RTN","LRSRVR3",4,0)
 ;
"RTN","LRSRVR3",5,0)
LOINCLD ; Build and send local delimited LOINC report
"RTN","LRSRVR3",6,0)
 N I,LR6206,LR64,LINR,LRA,LRB,LRCNT,LRCRLF,LRNODE,LRSTR,LRTXT,LRXREF,X,Y
"RTN","LRSRVR3",7,0)
 ;
"RTN","LRSRVR3",8,0)
 K ^TMP($J,"LRSERVER","LOINC"),^TMP($J,"LRDATA")
"RTN","LRSRVR3",9,0)
 S ^TMP($J,"LRDATA",1)="Report Generated.......: "_$$FMTE^XLFDT($$NOW^XLFDT)_" at "_LRSTN
"RTN","LRSRVR3",10,0)
 S ^TMP($J,"LRDATA",2)="Report requested.......: "_LRSUB
"RTN","LRSRVR3",11,0)
 S ^TMP($J,"LRDATA",3)="LOINC version..........: "_$$GET1^DID(95.3,"","","PACKAGE REVISION DATA")
"RTN","LRSRVR3",12,0)
 S ^TMP($J,"LRDATA",4)="File version...........: "_$G(^LAB(95.3,"VR"))
"RTN","LRSRVR3",13,0)
 S LRFILENM=$TR(LRSTN," ","_")_"-"_LRSUB_"-"_$P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")_".TXT"
"RTN","LRSRVR3",14,0)
 S ^TMP($J,"LRDATA",5)="Attached file..........: "_LRFILENM
"RTN","LRSRVR3",15,0)
 S ^TMP($J,"LRDATA",7)=" "
"RTN","LRSRVR3",16,0)
 S ^TMP($J,"LRDATA",8)="Legend:"
"RTN","LRSRVR3",17,0)
 S X="Station #-64 ien-61 ien-Time Aspect|NLT Code|NLT Name|Default LOINC Code|Default LOINC Name|Default Test|Time Aspect|Specimen|Data Location|Data Type|Input Transform|Units|Test Name|LOINC Code|LOINC Name"
"RTN","LRSRVR3",18,0)
 S ^TMP($J,"LRDATA",9)=X
"RTN","LRSRVR3",19,0)
 S Y="|Reference Low|Reference High|Therapeutic Low|Therapeutic High|Subscript|Lab Section|"
"RTN","LRSRVR3",20,0)
 S ^TMP($J,"LRDATA",10)=Y
"RTN","LRSRVR3",21,0)
 S ^TMP($J,"LRDATA",11)="                 1                 |    2   |   3    |          4       |        5         |      6     |     7     |   8    |     9       |   10    |       11      |  12 |    13   |    14    |    15    "
"RTN","LRSRVR3",22,0)
 S ^TMP($J,"LRDATA",12)="|     16      |      17      |      18       |     19         |    20   |     21    |"
"RTN","LRSRVR3",23,0)
 S ^TMP($J,"LRDATA",13)=$$REPEAT^XLFSTR("-",$L(X))
"RTN","LRSRVR3",24,0)
 S ^TMP($J,"LRDATA",14)=$$REPEAT^XLFSTR("-",$L(Y))
"RTN","LRSRVR3",25,0)
 S ^TMP($J,"LRDATA",15)=" "
"RTN","LRSRVR3",26,0)
 S ^TMP($J,"LRDATA",16)="begin 0644 "_LRFILENM
"RTN","LRSRVR3",27,0)
 S LINR=1,LRCNT=0,LRSTR="",LRTXT=0,LRCRLF=$C(13,10)
"RTN","LRSRVR3",28,0)
 ;
"RTN","LRSRVR3",29,0)
 F LRXREF="AI","AH" D
"RTN","LRSRVR3",30,0)
 . S LRA=""
"RTN","LRSRVR3",31,0)
 . F  S LRA=$O(^LAM(LRXREF,LRA)) Q:'LRA  D
"RTN","LRSRVR3",32,0)
 . . S LRB=""
"RTN","LRSRVR3",33,0)
 . . F  S LRB=$O(^LAM(LRXREF,LRA,LRB)) Q:LRB=""  S ^TMP($J,"LRSERVER","LOINC",LRB)=""
"RTN","LRSRVR3",34,0)
 ;
"RTN","LRSRVR3",35,0)
 S LR64=""
"RTN","LRSRVR3",36,0)
 F  S LR64=$O(^TMP($J,"LRSERVER","LOINC",LR64)) Q:LR64=""  D LOINCLA
"RTN","LRSRVR3",37,0)
 ;
"RTN","LRSRVR3",38,0)
 S LR6206=0,LRSS="MI"
"RTN","LRSRVR3",39,0)
 F  S LR6206=$O(^LAB(62.06,LR6206)) Q:'LR6206  D
"RTN","LRSRVR3",40,0)
 . S LR64=$$GET1^DIQ(62.06,LR6206_",",64,"I")
"RTN","LRSRVR3",41,0)
 . S LRREC=$$MICRO(LR64)
"RTN","LRSRVR3",42,0)
 . S LRINDX=LRST_"-"_LR64_"-"_"AB"_LR6206
"RTN","LRSRVR3",43,0)
 . S LRSTR=LRSTR_LRINDX_"|"_LRREC
"RTN","LRSRVR3",44,0)
 . D SETDATA^LRSRVR2
"RTN","LRSRVR3",45,0)
 ;
"RTN","LRSRVR3",46,0)
 S ^TMP($J,"LRDATA",6)="Total number of records: "_LRCNT
"RTN","LRSRVR3",47,0)
 I '$O(^TMP($J,"LRDATA",15)) S ^TMP($J,"LRDATA",12)="No LOINC codes mapped at "_LRSTN
"RTN","LRSRVR3",48,0)
 ;
"RTN","LRSRVR3",49,0)
 ; Set the final info into the ^TMP( message global
"RTN","LRSRVR3",50,0)
 S LRNODE=$O(^TMP($J,"LRDATA",""),-1)+1
"RTN","LRSRVR3",51,0)
 I LRSTR'="" S ^TMP($J,"LRDATA",LRNODE)=$$UUEN^LRSRVR4(LRSTR)
"RTN","LRSRVR3",52,0)
 S ^TMP($J,"LRDATA",LRNODE+1)=" "
"RTN","LRSRVR3",53,0)
 S ^TMP($J,"LRDATA",LRNODE+2)="end"
"RTN","LRSRVR3",54,0)
 ;
"RTN","LRSRVR3",55,0)
 K XMY
"RTN","LRSRVR3",56,0)
 S XMY(XQSND)="",XMTEXT="^TMP($J,""LRDATA"","
"RTN","LRSRVR3",57,0)
 S XMSUB=LRST_" "_LRSTN_" LOCAL REPORT DELIMIT "_$$HTE^XLFDT($H,"1M")
"RTN","LRSRVR3",58,0)
 S XMDUN="Lab Server",XMDUZ=".5"
"RTN","LRSRVR3",59,0)
 D ^XMD
"RTN","LRSRVR3",60,0)
 D CLEAN^LRSRVR
"RTN","LRSRVR3",61,0)
 Q
"RTN","LRSRVR3",62,0)
 ;
"RTN","LRSRVR3",63,0)
 ;
"RTN","LRSRVR3",64,0)
LOINCLA ;
"RTN","LRSRVR3",65,0)
 N LR60,LR61,LRAA,LRAA1,LRERR,LRINDX,LOINCDTA,LOINCDTB,LRPNTA,LRPNTB,LRREC,LRSS,LRX
"RTN","LRSRVR3",66,0)
 D GETS^DIQ(64,LR64,".01;1;13;25;25.5","IE","LOINCDTB","LRERR")
"RTN","LRSRVR3",67,0)
 D GETS^DIQ(64,LR64,"20*","IE","LOINCDTA","LRERR")
"RTN","LRSRVR3",68,0)
 S LRPNTB=$O(LOINCDTB(64,"")) Q:LRPNTB=""
"RTN","LRSRVR3",69,0)
 ;
"RTN","LRSRVR3",70,0)
 ; NLT Code/Procedure
"RTN","LRSRVR3",71,0)
 S LRSTUB=$G(LOINCDTB(64,LRPNTB,1,"E"))
"RTN","LRSRVR3",72,0)
 S $P(LRSTUB,"|",2)=$G(LOINCDTB(64,LRPNTB,.01,"I"))
"RTN","LRSRVR3",73,0)
 ;
"RTN","LRSRVR3",74,0)
 ; Default LOINC code/name
"RTN","LRSRVR3",75,0)
 S $P(LRSTUB,"|",3)=$G(LOINCDTB(64,LRPNTB,25,"E"))
"RTN","LRSRVR3",76,0)
 S $P(LRSTUB,"|",4)=$G(^LAB(95.3,+$G(LOINCDTB(64,LRPNTB,25,"I")),81))
"RTN","LRSRVR3",77,0)
 ;
"RTN","LRSRVR3",78,0)
 ; Default LOINC code test (64,25.5)
"RTN","LRSRVR3",79,0)
 S $P(LRSTUB,"|",5)=$G(LOINCDTB(64,LRPNTB,25.5,"I"))
"RTN","LRSRVR3",80,0)
 ;
"RTN","LRSRVR3",81,0)
 ; Look for 64.01 & 64.02 here
"RTN","LRSRVR3",82,0)
 S LRAA1=""
"RTN","LRSRVR3",83,0)
 F  S LRAA1=$O(LOINCDTA(64.01,LRAA1)) Q:LRAA1=""  D
"RTN","LRSRVR3",84,0)
 . I '$D(LOINCDTA(64.01,LRAA1,.01,"I")) D  Q
"RTN","LRSRVR3",85,0)
 . . S $P(LRSTUB,"|",6)="Specimen sub-field error in file 64 - "_LRAA1
"RTN","LRSRVR3",86,0)
 . . S $P(LRSTUB,"|",7)=$G(LRERR("DIERR",1,"TEXT",1))
"RTN","LRSRVR3",87,0)
 . . D SETDATA^LRSRVR2
"RTN","LRSRVR3",88,0)
 . S LRPNTA=LOINCDTA(64.01,LRAA1,.01,"I")
"RTN","LRSRVR3",89,0)
 . S $P(LRSTUB,"|",6)=$$GET1^DIQ(61,LRPNTA_",",.0961) ; Time Aspect
"RTN","LRSRVR3",90,0)
 . S $P(LRSTUB,"|",7)=LOINCDTA(64.01,LRAA1,.01,"E") ; Specimen
"RTN","LRSRVR3",91,0)
 . S LRAA=""
"RTN","LRSRVR3",92,0)
 . F  S LRAA=$O(LOINCDTA(64.02,LRAA)) Q:LRAA=""  I LRAA[LRAA1 D
"RTN","LRSRVR3",93,0)
 . . S $P(LRSTUB,"|",8)=$G(LOINCDTA(64.02,LRAA,2,"E")) ; Data location
"RTN","LRSRVR3",94,0)
 . . S LR60=+LOINCDTA(64.02,LRAA,3,"I")
"RTN","LRSRVR3",95,0)
 . . S LR61=+LOINCDTA(64.01,$P(LRAA,",",2,4),.01,"I")
"RTN","LRSRVR3",96,0)
 . . S $P(LRSTUB,"|",9,10)=$$TSTTYP(LOINCDTA(64.02,LRAA,2,"I"))
"RTN","LRSRVR3",97,0)
 . . S LRSS=$$GET1^DIQ(60,LR60_",",4,"I") ; Subscript
"RTN","LRSRVR3",98,0)
 . . S LRX=$$GET1^DIQ(60.01,LR61_","_LR60_",",6) ; Units
"RTN","LRSRVR3",99,0)
 . . S $P(LRSTUB,"|",11)=$$TRIM^XLFSTR(LRX,"LR"," ")
"RTN","LRSRVR3",100,0)
 . . S $P(LRSTUB,"|",12)=LOINCDTA(64.02,LRAA,3,"E") ; Test name
"RTN","LRSRVR3",101,0)
 . . S $P(LRSTUB,"|",13)=$G(LOINCDTA(64.02,LRAA,4,"E")) ; Loinc code
"RTN","LRSRVR3",102,0)
 . . S $P(LRSTUB,"|",14)=$G(^LAB(95.3,+$G(LOINCDTA(64.02,LRAA,4,"E")),81)) ; LOINC code (64.02,4)
"RTN","LRSRVR3",103,0)
 . . S X=$G(^LAB(60,LR60,1,LR61,0))
"RTN","LRSRVR3",104,0)
 . . S $P(LRSTUB,"|",15)=$P(X,"^",2) ; Test reference low
"RTN","LRSRVR3",105,0)
 . . S $P(LRSTUB,"|",16)=$P(X,"^",3) ; Test reference high
"RTN","LRSRVR3",106,0)
 . . S $P(LRSTUB,"|",17)=$P(X,"^",11) ; Test therapeutic low
"RTN","LRSRVR3",107,0)
 . . S $P(LRSTUB,"|",18)=$P(X,"^",12) ; Test therapeutic high
"RTN","LRSRVR3",108,0)
 . . S $P(LRSTUB,"|",19)=LRSS ; Lab subscript
"RTN","LRSRVR3",109,0)
 . . S $P(LRSTUB,"|",20)=$G(LOINCDTB(64,LRPNTB,13,"E")) ; Lab section
"RTN","LRSRVR3",110,0)
 . . S LRINDX=LRST_"-"_LR64_"-"_LR61_"-"_LOINCDTA(64.02,LRAA,.01,"I")
"RTN","LRSRVR3",111,0)
 . . S LRSTR=LRSTR_LRINDX_"|"_LRSTUB
"RTN","LRSRVR3",112,0)
 . . D SETDATA^LRSRVR2
"RTN","LRSRVR3",113,0)
 Q
"RTN","LRSRVR3",114,0)
 ;
"RTN","LRSRVR3",115,0)
 ;
"RTN","LRSRVR3",116,0)
MICRO(LR64) ;
"RTN","LRSRVR3",117,0)
 N LOINCDTB,LR6421,LRPNTB,LRSTUB
"RTN","LRSRVR3",118,0)
 S LRSTUB=""
"RTN","LRSRVR3",119,0)
 D GETS^DIQ(64,LR64,".01;1;13;25;25.5","IE","LOINCDTB","LRERR")
"RTN","LRSRVR3",120,0)
 D GETS^DIQ(64,LR64,"20*","IE","LOINCDTA","LRERR")
"RTN","LRSRVR3",121,0)
 S LRPNTB=$O(LOINCDTB(64,"")) Q:LRPNTB="" LRSTUB
"RTN","LRSRVR3",122,0)
 ;
"RTN","LRSRVR3",123,0)
 ; NLT Code/Procedure
"RTN","LRSRVR3",124,0)
 S LRSTUB=$G(LOINCDTB(64,LRPNTB,1,"E"))
"RTN","LRSRVR3",125,0)
 S $P(LRSTUB,"|",2)=$G(LOINCDTB(64,LRPNTB,.01,"I"))
"RTN","LRSRVR3",126,0)
 ;
"RTN","LRSRVR3",127,0)
 ; Default LOINC code/name
"RTN","LRSRVR3",128,0)
 S $P(LRSTUB,"|",3)=$G(LOINCDTB(64,LRPNTB,25,"E"))
"RTN","LRSRVR3",129,0)
 S $P(LRSTUB,"|",4)=$G(^LAB(95.3,+$G(LOINCDTB(64,LRPNTB,25,"I")),81))
"RTN","LRSRVR3",130,0)
 ;
"RTN","LRSRVR3",131,0)
 ; Anti-microbial Suscept (62.06,.01)
"RTN","LRSRVR3",132,0)
 S $P(LRSTUB,"|",5)=$$GET1^DIQ(62.06,LR6206_",",.01)
"RTN","LRSRVR3",133,0)
 ;
"RTN","LRSRVR3",134,0)
 ; Lab subscript/section
"RTN","LRSRVR3",135,0)
 S $P(LRSTUB,"|",19)=LRSS
"RTN","LRSRVR3",136,0)
 I $G(LOINCDTB(64,LRPNTB,13,"I")) D  ; Lab section
"RTN","LRSRVR3",137,0)
 . S LR6421=LOINCDTB(64,LRPNTB,13,"I")
"RTN","LRSRVR3",138,0)
 . S $P(LRSTUB,"|",20)=$$GET1^DIQ(64.21,LR6421_",",1)
"RTN","LRSRVR3",139,0)
 ;
"RTN","LRSRVR3",140,0)
 Q LRSTUB
"RTN","LRSRVR3",141,0)
 ;
"RTN","LRSRVR3",142,0)
 ;
"RTN","LRSRVR3",143,0)
TSTTYP(LRX) ; Determine test data type
"RTN","LRSRVR3",144,0)
 N LRSTUB,LRTYPE,LRY
"RTN","LRSRVR3",145,0)
 I LRX="" Q ""
"RTN","LRSRVR3",146,0)
 S LRX=$P(LRX,"(",2)
"RTN","LRSRVR3",147,0)
 ;
"RTN","LRSRVR3",148,0)
 ; Data type
"RTN","LRSRVR3",149,0)
 S LRTYPE=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"","TYPE")
"RTN","LRSRVR3",150,0)
 S $P(LRSTUB,"|",2)=LRTYPE
"RTN","LRSRVR3",151,0)
 ;
"RTN","LRSRVR3",152,0)
 ; Input transform
"RTN","LRSRVR3",153,0)
 S LRY=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"",$S(LRTYPE="SET":"POINTER",1:"INPUT TRANSFORM"))
"RTN","LRSRVR3",154,0)
 I LRTYPE="NUMERIC",LRY["LRNUM" D
"RTN","LRSRVR3",155,0)
 . S LRX=$P(LRY,"""",2)
"RTN","LRSRVR3",156,0)
 . I LRX?.1"-".N1","1.N1","1N S LRY="Number from "_$P(LRX,",")_" to "_$P(LRX,",",2)_" with "_$P(LRX,",",3)_" decimal"
"RTN","LRSRVR3",157,0)
 S $P(LRSTUB,"|",1)=LRY
"RTN","LRSRVR3",158,0)
 ; Help prompt
"RTN","LRSRVR3",159,0)
 I LRTYPE="FREE TEXT" D
"RTN","LRSRVR3",160,0)
  . S LRY=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"","HELP-PROMPT")
"RTN","LRSRVR3",161,0)
  . S $P(LRSTUB,"|",1)=LRY
"RTN","LRSRVR3",162,0)
 Q LRSTUB
"RTN","LRSRVR4")
0^6^B1066289
"RTN","LRSRVR4",1,0)
LRSRVR4 ;DALOI/JMC -LAB DATA SERVER, CONT'D - UUENCODE UTILITY ; Dec 14, 2004
"RTN","LRSRVR4",2,0)
 ;;5.2;LAB SERVICE;**303**;Sep 27, 1994
"RTN","LRSRVR4",3,0)
 ;
"RTN","LRSRVR4",4,0)
 ;
"RTN","LRSRVR4",5,0)
UUEN(STR) ; Uuencode string passed in.
"RTN","LRSRVR4",6,0)
 N J,K,LEN,LRI,LRX,S,TMP,X,Y
"RTN","LRSRVR4",7,0)
 S TMP="",LEN=$L(STR)
"RTN","LRSRVR4",8,0)
 F LRI=1:3:LEN D
"RTN","LRSRVR4",9,0)
 . S LRX=$E(STR,LRI,LRI+2)
"RTN","LRSRVR4",10,0)
 . I $L(LRX)<3 S LRX=LRX_$E("   ",1,3-$L(LRX))
"RTN","LRSRVR4",11,0)
 . S S=$A(LRX,1)*256+$A(LRX,2)*256+$A(LRX,3),Y=""
"RTN","LRSRVR4",12,0)
 . F K=0:1:23 S Y=(S\(2**K)#2)_Y
"RTN","LRSRVR4",13,0)
 . F K=1:6:24 D
"RTN","LRSRVR4",14,0)
 . . S J=$$DEC^XLFUTL($E(Y,K,K+5),2)
"RTN","LRSRVR4",15,0)
 . . S TMP=TMP_$C(J+32)
"RTN","LRSRVR4",16,0)
 S TMP=$C(LEN+32)_TMP
"RTN","LRSRVR4",17,0)
 Q TMP
"RTN","LRSRVR4",18,0)
 ;
"RTN","LRSRVR4",19,0)
 ;
"RTN","LRSRVR4",20,0)
ENCODE(LRSTR) ; Encode a string, keep remainder for next line
"RTN","LRSRVR4",21,0)
 ; Call with LRSTR by reference, Remainder returned in LRSTR
"RTN","LRSRVR4",22,0)
 ;
"RTN","LRSRVR4",23,0)
 S LRQUIT=0,LRLEN=$L(LRSTR)
"RTN","LRSRVR4",24,0)
 F  D  Q:LRQUIT
"RTN","LRSRVR4",25,0)
 . I $L(LRSTR)<45 S LRQUIT=1 Q
"RTN","LRSRVR4",26,0)
 . S LRX=$E(LRSTR,1,45)
"RTN","LRSRVR4",27,0)
 . S LRNODE=LRNODE+1,^TMP($J,"LRDATA",LRNODE)=$$UUEN(LRX)
"RTN","LRSRVR4",28,0)
 . S LRSTR=$E(LRSTR,46,LRLEN)
"RTN","LRSRVR4",29,0)
 Q
"VER")
8.0^22.0
**END**
**END**
