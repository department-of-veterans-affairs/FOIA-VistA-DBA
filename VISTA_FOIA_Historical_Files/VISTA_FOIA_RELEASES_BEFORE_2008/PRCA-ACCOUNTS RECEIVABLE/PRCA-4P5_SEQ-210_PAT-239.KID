EMERGENCY Released PRCA*4.5*239 SEQ #210
Extracted from mail message
**KIDS**:PRCA*4.5*239^

**INSTALL NAME**
PRCA*4.5*239
"BLD",5744,0)
PRCA*4.5*239^ACCOUNTS RECEIVABLE^0^3051229^y
"BLD",5744,1,0)
^^5^5^3051031^
"BLD",5744,1,1,0)
Patch PRCA*4.5*239 contains modifications to the Bad Debt Report.
"BLD",5744,1,2,0)
These modifications were recommended by a management audit conducted
"BLD",5744,1,3,0)
by the Systems Quality Assurance Service at the Austin
"BLD",5744,1,4,0)
Automation Center.  Please refer to the patch description for
"BLD",5744,1,5,0)
a concise list of enhancements included in this patch.
"BLD",5744,4,0)
^9.64PA^^
"BLD",5744,"KRN",0)
^9.67PA^8989.52^19
"BLD",5744,"KRN",.4,0)
.4
"BLD",5744,"KRN",.401,0)
.401
"BLD",5744,"KRN",.402,0)
.402
"BLD",5744,"KRN",.403,0)
.403
"BLD",5744,"KRN",.5,0)
.5
"BLD",5744,"KRN",.84,0)
.84
"BLD",5744,"KRN",3.6,0)
3.6
"BLD",5744,"KRN",3.8,0)
3.8
"BLD",5744,"KRN",9.2,0)
9.2
"BLD",5744,"KRN",9.8,0)
9.8
"BLD",5744,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",5744,"KRN",9.8,"NM",1,0)
RCRJR^^0^B19437277
"BLD",5744,"KRN",9.8,"NM",2,0)
RCRJRBD^^0^B64259374
"BLD",5744,"KRN",9.8,"NM",3,0)
RCRJRBDE^^0^B14335641
"BLD",5744,"KRN",9.8,"NM",4,0)
RCRJRBDR^^0^B75826184
"BLD",5744,"KRN",9.8,"NM",5,0)
RCRJRBDT^^0^B54449549
"BLD",5744,"KRN",9.8,"NM",6,0)
RCRJRCO^^0^B61342220
"BLD",5744,"KRN",9.8,"NM",7,0)
RCRJRCOC^^0^B56544530
"BLD",5744,"KRN",9.8,"NM",8,0)
RCXFMSSV^^0^B57335503
"BLD",5744,"KRN",9.8,"NM",9,0)
RCRJRCOR^^0^B67290990
"BLD",5744,"KRN",9.8,"NM","B","RCRJR",1)

"BLD",5744,"KRN",9.8,"NM","B","RCRJRBD",2)

"BLD",5744,"KRN",9.8,"NM","B","RCRJRBDE",3)

"BLD",5744,"KRN",9.8,"NM","B","RCRJRBDR",4)

"BLD",5744,"KRN",9.8,"NM","B","RCRJRBDT",5)

"BLD",5744,"KRN",9.8,"NM","B","RCRJRCO",6)

"BLD",5744,"KRN",9.8,"NM","B","RCRJRCOC",7)

"BLD",5744,"KRN",9.8,"NM","B","RCRJRCOR",9)

"BLD",5744,"KRN",9.8,"NM","B","RCXFMSSV",8)

"BLD",5744,"KRN",19,0)
19
"BLD",5744,"KRN",19.1,0)
19.1
"BLD",5744,"KRN",101,0)
101
"BLD",5744,"KRN",409.61,0)
409.61
"BLD",5744,"KRN",771,0)
771
"BLD",5744,"KRN",870,0)
870
"BLD",5744,"KRN",8989.51,0)
8989.51
"BLD",5744,"KRN",8989.52,0)
8989.52
"BLD",5744,"KRN",8994,0)
8994
"BLD",5744,"KRN","B",.4,.4)

"BLD",5744,"KRN","B",.401,.401)

"BLD",5744,"KRN","B",.402,.402)

"BLD",5744,"KRN","B",.403,.403)

"BLD",5744,"KRN","B",.5,.5)

"BLD",5744,"KRN","B",.84,.84)

"BLD",5744,"KRN","B",3.6,3.6)

"BLD",5744,"KRN","B",3.8,3.8)

"BLD",5744,"KRN","B",9.2,9.2)

"BLD",5744,"KRN","B",9.8,9.8)

"BLD",5744,"KRN","B",19,19)

"BLD",5744,"KRN","B",19.1,19.1)

"BLD",5744,"KRN","B",101,101)

"BLD",5744,"KRN","B",409.61,409.61)

"BLD",5744,"KRN","B",771,771)

"BLD",5744,"KRN","B",870,870)

"BLD",5744,"KRN","B",8989.51,8989.51)

"BLD",5744,"KRN","B",8989.52,8989.52)

"BLD",5744,"KRN","B",8994,8994)

"BLD",5744,"QUES",0)
^9.62^^
"BLD",5744,"REQB",0)
^9.611^2^2
"BLD",5744,"REQB",1,0)
PRCA*4.5*215^1
"BLD",5744,"REQB",2,0)
PRCA*4.5*184^1
"BLD",5744,"REQB","B","PRCA*4.5*184",2)

"BLD",5744,"REQB","B","PRCA*4.5*215",1)

"MBREQ")
0
"PKG",142,-1)
1^1
"PKG",142,0)
ACCOUNTS RECEIVABLE^PRCA^BILL COLLECTIONS
"PKG",142,20,0)
^9.402P^1^1
"PKG",142,20,1,0)
2^^PRCAMRG
"PKG",142,20,1,1)

"PKG",142,20,"B",2,1)

"PKG",142,22,0)
^9.49I^1^1
"PKG",142,22,1,0)
4.5^3040809^3040812^8
"PKG",142,22,1,"PAH",1,0)
239^3051229
"PKG",142,22,1,"PAH",1,1,0)
^^5^5^3051229
"PKG",142,22,1,"PAH",1,1,1,0)
Patch PRCA*4.5*239 contains modifications to the Bad Debt Report.
"PKG",142,22,1,"PAH",1,1,2,0)
These modifications were recommended by a management audit conducted
"PKG",142,22,1,"PAH",1,1,3,0)
by the Systems Quality Assurance Service at the Austin
"PKG",142,22,1,"PAH",1,1,4,0)
Automation Center.  Please refer to the patch description for
"PKG",142,22,1,"PAH",1,1,5,0)
a concise list of enhancements included in this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","RCRJR")
0^1^B19437277
"RTN","RCRJR",1,0)
RCRJR ;WISC/RFJ,TJK-nightly process, monthly data extractors ;1 Mar 98
"RTN","RCRJR",2,0)
 ;;4.5;Accounts Receivable;**101,103,78,153,191,239**;Mar 20, 1995
"RTN","RCRJR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJR",4,0)
 Q
"RTN","RCRJR",5,0)
 ;
"RTN","RCRJR",6,0)
 ;
"RTN","RCRJR",7,0)
START ;  start the nightly process
"RTN","RCRJR",8,0)
 ;  called by PRCABJ
"RTN","RCRJR",9,0)
 N X,Y
"RTN","RCRJR",10,0)
 ;
"RTN","RCRJR",11,0)
 ;  if the 15th of the month, warn user of deletion
"RTN","RCRJR",12,0)
 I $E(DT,6,7)=15 D CLEANXMB
"RTN","RCRJR",13,0)
 ;
"RTN","RCRJR",14,0)
 ;  clean up old mailman messages on day 1
"RTN","RCRJR",15,0)
 ;  monthly transmission of reports on day 1
"RTN","RCRJR",16,0)
 I +$E(DT,6,7)=$E($$LDATE(DT)+1,6,7) D
"RTN","RCRJR",17,0)
 .   ;  clean up old mailman messages
"RTN","RCRJR",18,0)
 .   D CLEANXMB
"RTN","RCRJR",19,0)
 .   ;  NDB and monthly FMS summary documents, bad debt report
"RTN","RCRJR",20,0)
 .   ;  oig extract (end of quarter)
"RTN","RCRJR",21,0)
 .   D QUEUE("AR Data Collector","DQ^RCRJRCO")
"RTN","RCRJR",22,0)
 ;
"RTN","RCRJR",23,0)
 ;  monthly transmission on the second to last workday
"RTN","RCRJR",24,0)
 ;
"RTN","RCRJR",25,0)
 ;    Code commented out with patch PRCA*4.5*239
"RTN","RCRJR",26,0)
 ;     Allowances are now transmitted to FMS by the ARDC
"RTN","RCRJR",27,0)
 ;     when it runs on the third to last workday of month.
"RTN","RCRJR",28,0)
 ;
"RTN","RCRJR",29,0)
 ;   I +$E(DT,6,7)=$E($$LDAY(DT),6,7) D
"RTN","RCRJR",30,0)
 ;   .   ;  bad debt report sent to FMS
"RTN","RCRJR",31,0)
 ;   .   D QUEUE("Bad Debt Report","BADDEBT^RCXFMSSV")
"RTN","RCRJR",32,0)
 ;
"RTN","RCRJR",33,0)
 ;  quarterly oig transaction report on 15th
"RTN","RCRJR",34,0)
 I $E(DT,4,5)#3=1,$E(DT,6,7)=15 D QUEUE("AR OIG Transaction Extract","EN2^RCNRIG")
"RTN","RCRJR",35,0)
 ;
"RTN","RCRJR",36,0)
 ;  reports sent on tuesday and thursdays (dmc)
"RTN","RCRJR",37,0)
 S X=DT D DW^%DTC
"RTN","RCRJR",38,0)
 I $E(X)="T" D
"RTN","RCRJR",39,0)
 .   ;  dmc 90 day reports
"RTN","RCRJR",40,0)
 .   N ZTSAVE
"RTN","RCRJR",41,0)
 .   I '$O(^RC(342,0)) Q
"RTN","RCRJR",42,0)
 .   ;  tUesday
"RTN","RCRJR",43,0)
 .   I $E(X,2)="U",$D(^RCD(340,"DMC")) D  Q
"RTN","RCRJR",44,0)
 .   .   S ZTSAVE("RCDOC")="W" D QUEUE("DMC 90 Day Reports","ENTER^RCDMC90")
"RTN","RCRJR",45,0)
 .   S X1=DT,X2=7 D C^%DTC I $E(DT,4,5)=$E(X,4,5) Q
"RTN","RCRJR",46,0)
 .   S ZTSAVE("RCDOC")="M" D QUEUE("DMC 90 Day Reports","ENTER^RCDMC90")
"RTN","RCRJR",47,0)
 Q
"RTN","RCRJR",48,0)
 ;
"RTN","RCRJR",49,0)
 ;
"RTN","RCRJR",50,0)
QUEUE(ZTDESC,ZTRTN) ;  create taskmanager task
"RTN","RCRJR",51,0)
 N %X,%Y,Y,ZTSK
"RTN","RCRJR",52,0)
 S ZTIO="",ZTDTH=$H
"RTN","RCRJR",53,0)
 D ^%ZTLOAD
"RTN","RCRJR",54,0)
 D ^%ZISC
"RTN","RCRJR",55,0)
 Q
"RTN","RCRJR",56,0)
 ;
"RTN","RCRJR",57,0)
 ;
"RTN","RCRJR",58,0)
CLEANXMB ;  clean up old mailman messages generated by AR
"RTN","RCRJR",59,0)
 N SUBJECT,VERIFY
"RTN","RCRJR",60,0)
 ;
"RTN","RCRJR",61,0)
 ;  delete the AR Data Collector Detail Report
"RTN","RCRJR",62,0)
 S SUBJECT="ARDC Detail Report For "
"RTN","RCRJR",63,0)
 S VERIFY="I $E(DATA,65)=""."",$E(DATA,76)=""."""
"RTN","RCRJR",64,0)
 D GETXMZ(SUBJECT,VERIFY)
"RTN","RCRJR",65,0)
 ;
"RTN","RCRJR",66,0)
 ;  delete the mccr ndb return reports
"RTN","RCRJR",67,0)
 S SUBJECT="MCCR NDB Site "
"RTN","RCRJR",68,0)
 S VERIFY="I $E(DATA,1,14)=""MCCR NDB Site """
"RTN","RCRJR",69,0)
 D GETXMZ(SUBJECT,VERIFY)
"RTN","RCRJR",70,0)
 ;
"RTN","RCRJR",71,0)
 ;  delete the nightly interest/admin/penalty messages
"RTN","RCRJR",72,0)
 S SUBJECT="AR Nightly Interest/Admin/Pen"
"RTN","RCRJR",73,0)
 S VERIFY="I $E(DATA,1,18)=""BILL      DATEPREP"""
"RTN","RCRJR",74,0)
 D GETXMZ(SUBJECT,VERIFY)
"RTN","RCRJR",75,0)
 Q
"RTN","RCRJR",76,0)
 ;
"RTN","RCRJR",77,0)
 ;
"RTN","RCRJR",78,0)
GETXMZ(RCSUBJCT,RCVERIFY) ;  find a message to delete
"RTN","RCRJR",79,0)
 ;  loop through a subject, execute a check on the message, kill it
"RTN","RCRJR",80,0)
 N DATA,RCSUBJ,RCXMZ
"RTN","RCRJR",81,0)
 S RCSUBJ=RCSUBJCT
"RTN","RCRJR",82,0)
 F  S RCSUBJ=$O(^XMB(3.9,"B",RCSUBJ)) Q:$E(RCSUBJ,1,$L(RCSUBJCT))'=RCSUBJCT  D
"RTN","RCRJR",83,0)
 .   S RCXMZ=0
"RTN","RCRJR",84,0)
 .   F  S RCXMZ=$O(^XMB(3.9,"B",RCSUBJ,RCXMZ)) Q:'RCXMZ  D
"RTN","RCRJR",85,0)
 .   .   S DATA=$G(^XMB(3.9,RCXMZ,2,1,0))
"RTN","RCRJR",86,0)
 .   .   X RCVERIFY
"RTN","RCRJR",87,0)
 .   .   ;  message found
"RTN","RCRJR",88,0)
 .   .   I $T D
"RTN","RCRJR",89,0)
 .   .   .   ;  if the current date is not the first, warn the user
"RTN","RCRJR",90,0)
 .   .   .   ;  if the current date is the first, kill the message
"RTN","RCRJR",91,0)
 .   .   .   I $E(DT,6,7)'=$E($$LDATE(DT)+1,6,7) D WARNKILL(RCXMZ) Q
"RTN","RCRJR",92,0)
 .   .   .   ;
"RTN","RCRJR",93,0)
 .   .   .   ;  only kill the message if it was created before the
"RTN","RCRJR",94,0)
 .   .   .   ;  15th day of the previous month (since no warning
"RTN","RCRJR",95,0)
 .   .   .   ;  message would of been generated).
"RTN","RCRJR",96,0)
 .   .   .   I $P($$ZNODE^XMXUTIL2(RCXMZ),"^",3)>($E($$FMDIFF^XLFDT(DT,-1),1,5)_19.999999) Q
"RTN","RCRJR",97,0)
 .   .   .   ;
"RTN","RCRJR",98,0)
 .   .   .   D KILLXMZ(RCXMZ)
"RTN","RCRJR",99,0)
 Q
"RTN","RCRJR",100,0)
 ;
"RTN","RCRJR",101,0)
 ;
"RTN","RCRJR",102,0)
KILLXMZ(XMZ) ;  kills a message and responses
"RTN","RCRJR",103,0)
 N K,X,XMABORT,XMKILL,Y
"RTN","RCRJR",104,0)
 S XMABORT=0,(XMKILL("MSG"),XMKILL("RESP"))=0
"RTN","RCRJR",105,0)
 D KILL^XMA32A(XMZ,.XMKILL,XMABORT)
"RTN","RCRJR",106,0)
 Q
"RTN","RCRJR",107,0)
 ;
"RTN","RCRJR",108,0)
 ;
"RTN","RCRJR",109,0)
WARNKILL(RCXMZ) ;  enter response to the message warning the user the message
"RTN","RCRJR",110,0)
 ;   will deleted on the first of the month
"RTN","RCRJR",111,0)
 N %,%H,%I,I,MESSAGE,XMZ2,Y
"RTN","RCRJR",112,0)
 ;
"RTN","RCRJR",113,0)
 ;  get the first of next month (add 30 days and reset day to 1)
"RTN","RCRJR",114,0)
 ;S Y=$E($$FMADD^XLFDT(DT,30),1,5)_"01" D DD^%DT
"RTN","RCRJR",115,0)
 S Y=$$LDATE(DT)+1 D DD^%DT
"RTN","RCRJR",116,0)
 ;  create response
"RTN","RCRJR",117,0)
 S MESSAGE(1)="WARNING, This message will be deleted on "_Y_".  Please save"
"RTN","RCRJR",118,0)
 S MESSAGE(2)="the data in this message to an excel spreadsheet or word document"
"RTN","RCRJR",119,0)
 S MESSAGE(3)="prior to "_Y_"."
"RTN","RCRJR",120,0)
 S %=$$ENT^XMA2R(RCXMZ,"Message Deletion",.MESSAGE,"","AR Package")
"RTN","RCRJR",121,0)
 Q
"RTN","RCRJR",122,0)
LDATE(X) ; DETERMINE CUT-OFF DATE FOR THE MONTH
"RTN","RCRJR",123,0)
 S X=$E(X,1,5)_$P("31^28^31^30^31^30^31^31^30^31^30^31","^",+$E(X,4,5))
"RTN","RCRJR",124,0)
 I +$E(X,6,7)=28,$E(X,2,3)#4=0 S $E(X,6,7)=29
"RTN","RCRJR",125,0)
 S X=$$WORKPLUS^XUWORKDY(X,-3)
"RTN","RCRJR",126,0)
 Q X
"RTN","RCRJR",127,0)
LDAY(X) ;SECOND LAST WORKDAY OF THE MONTH
"RTN","RCRJR",128,0)
 S X=$E(X,1,5)_$P("31^28^31^30^31^30^31^31^30^31^30^31","^",+$E(X,4,5))
"RTN","RCRJR",129,0)
 I +$E(X,6,7)=28,$E(X,2,3)#4=0 S $E(X,6,7)=29
"RTN","RCRJR",130,0)
 S X=$$WORKPLUS^XUWORKDY(X,-1)
"RTN","RCRJR",131,0)
 Q X
"RTN","RCRJRBD")
0^2^B64259374
"RTN","RCRJRBD",1,0)
RCRJRBD ;WISC/RFJ,TJK-bad debt extractor and report ;1 Feb 98
"RTN","RCRJRBD",2,0)
 ;;4.5;Accounts Receivable;**101,139,170,193,203,215,220,138,239**;Mar 20, 1995
"RTN","RCRJRBD",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRBD",4,0)
 ; IA 4385 for calls to $$MRATYPE^IBCEMU2 and $$MRADTACT^IBCEMU2
"RTN","RCRJRBD",5,0)
 Q
"RTN","RCRJRBD",6,0)
 ;
"RTN","RCRJRBD",7,0)
 ;
"RTN","RCRJRBD",8,0)
START(DATEEND) ;  run bad debt report
"RTN","RCRJRBD",9,0)
 ;  the DATEEND is the last day of the month being run
"RTN","RCRJRBD",10,0)
 ;  from the routine RCRJRCOL which is the data extractor.  The
"RTN","RCRJRBD",11,0)
 ;  current receivable dollars is stored in ^TMP($J,"RCRJRBD",SGL)
"RTN","RCRJRBD",12,0)
 ;  where SGL is the standard general ledger 1319, 1338, or 1339.
"RTN","RCRJRBD",13,0)
 ;
"RTN","RCRJRBD",14,0)
 N ACTDATE,ACTUALCA,ACTUALWO,BEGDATE,BILLDA,CATEGORY
"RTN","RCRJRBD",15,0)
 N COLLECT,CONTRACT,DR,ENDDATE,FUND,PAY,PAYMENT,PRIN,PRINCPAL
"RTN","RCRJRBD",16,0)
 N RCRJFMM,RCRJDATE,SGL,TRANDA,TRANDATE,TRANTYPE,VALUE,WRITEOFF
"RTN","RCRJRBD",17,0)
 N RCPRIN,RCTOMCCF,RCVALUE,RSC,MRATYPE,ARACTDT
"RTN","RCRJRBD",18,0)
 ;
"RTN","RCRJRBD",19,0)
 ;  lock the bad debt file for storing data, lock cannot fail
"RTN","RCRJRBD",20,0)
 ;  this lock can be used to monitor if the report is running
"RTN","RCRJRBD",21,0)
 L +^RC(348.1)
"RTN","RCRJRBD",22,0)
 ;
"RTN","RCRJRBD",23,0)
 ;  calculate the base percentages from past data
"RTN","RCRJRBD",24,0)
 ;  example:  DATEEND=2980331  => BEGDATE=2970300
"RTN","RCRJRBD",25,0)
 ;                             => ENDDATE=2980229
"RTN","RCRJRBD",26,0)
 ;   add one day to ending date to go to next month
"RTN","RCRJRBD",27,0)
 S BEGDATE=($E(DATEEND,1,3)-1)_$E(DATEEND,4,5)_"00"
"RTN","RCRJRBD",28,0)
 S ENDDATE=($$FMADD^XLFDT($E(DATEEND,1,5)_"00",-1))+1
"RTN","RCRJRBD",29,0)
 ;  loop bills activated between these dates
"RTN","RCRJRBD",30,0)
 S ACTDATE=BEGDATE
"RTN","RCRJRBD",31,0)
 F  S ACTDATE=$O(^PRCA(430,"ACTDT",ACTDATE)) Q:'ACTDATE!(ACTDATE>ENDDATE)  D
"RTN","RCRJRBD",32,0)
 . S BILLDA=0 F  S BILLDA=$O(^PRCA(430,"ACTDT",ACTDATE,BILLDA)) Q:'BILLDA  D
"RTN","RCRJRBD",33,0)
 . . S CATEGORY=+$P($G(^PRCA(430,BILLDA,0)),"^",2)
"RTN","RCRJRBD",34,0)
 . . ;  do not look at prepayments
"RTN","RCRJRBD",35,0)
 . . I 'CATEGORY!(CATEGORY=26) Q
"RTN","RCRJRBD",36,0)
 . . ;
"RTN","RCRJRBD",37,0)
 . . ;  only look at bills with a 0 principal balance
"RTN","RCRJRBD",38,0)
 . . I $P($G(^PRCA(430,BILLDA,7)),"^") Q
"RTN","RCRJRBD",39,0)
 . . ;
"RTN","RCRJRBD",40,0)
 . . ;  only report fund 528701,03,04, and 4032/528709 bills
"RTN","RCRJRBD",41,0)
 . . S FUND=$$GETFUNDB^RCXFMSUF(BILLDA,1)
"RTN","RCRJRBD",42,0)
 . . I '$$PTACCT^PRCAACC(FUND),$E(FUND,1,4)'=4032 Q
"RTN","RCRJRBD",43,0)
 . . ;
"RTN","RCRJRBD",44,0)
 . . ;  determine MRA type of bill, given bill# and bill active date
"RTN","RCRJRBD",45,0)
 . . ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRBD",46,0)
 . . S MRATYPE=$$MRATYPE^IBCEMU2(BILLDA,ACTDATE)
"RTN","RCRJRBD",47,0)
 . . ;
"RTN","RCRJRBD",48,0)
 . . ;  derive standard general ledger (SGL) from cat/fund/MRA type
"RTN","RCRJRBD",49,0)
 . . S SGL=$$BDRSGL(CATEGORY,FUND,MRATYPE)
"RTN","RCRJRBD",50,0)
 . . ;
"RTN","RCRJRBD",51,0)
 . . ;  determine the original amount of the bill (add increase
"RTN","RCRJRBD",52,0)
 . . ;  adjustments below)
"RTN","RCRJRBD",53,0)
 . . S PRIN=$P($G(^PRCA(430,BILLDA,0)),"^",3)
"RTN","RCRJRBD",54,0)
 . . S PAY=0
"RTN","RCRJRBD",55,0)
 . . ;
"RTN","RCRJRBD",56,0)
 . . ;  get the $ transations for bills
"RTN","RCRJRBD",57,0)
 . . S TRANDA=0
"RTN","RCRJRBD",58,0)
 . . F  S TRANDA=$O(^PRCA(433,"C",BILLDA,TRANDA)) Q:'TRANDA  D
"RTN","RCRJRBD",59,0)
 . . . S TRANTYPE=$P($G(^PRCA(433,TRANDA,1)),"^",2)
"RTN","RCRJRBD",60,0)
 . . . I "^1^2^34^43^"'[("^"_TRANTYPE_"^") Q
"RTN","RCRJRBD",61,0)
 . . . S VALUE=$$TRANBAL^RCRJRCOT(TRANDA) I VALUE="" Q
"RTN","RCRJRBD",62,0)
 . . . ;  increase adjustments or re-establish
"RTN","RCRJRBD",63,0)
 . . . I TRANTYPE=1!(TRANTYPE=43) S PRIN=PRIN+$P(VALUE,"^") Q
"RTN","RCRJRBD",64,0)
 . . . ;  payments
"RTN","RCRJRBD",65,0)
 . . . I TRANTYPE=2!(TRANTYPE=34) S PAY=PAY+$P(VALUE,"^") Q
"RTN","RCRJRBD",66,0)
 . . ;
"RTN","RCRJRBD",67,0)
 . . ;  payment cannot be greater than principle
"RTN","RCRJRBD",68,0)
 . . I PAY>PRIN S PAY=PRIN
"RTN","RCRJRBD",69,0)
 . . ;
"RTN","RCRJRBD",70,0)
 . . ;  store the data
"RTN","RCRJRBD",71,0)
 . . S PRINCPAL(SGL)=$G(PRINCPAL(SGL))+PRIN
"RTN","RCRJRBD",72,0)
 . . S PAYMENT(SGL)=$G(PAYMENT(SGL))+PAY
"RTN","RCRJRBD",73,0)
 . . ;
"RTN","RCRJRBD",74,0)
 ;
"RTN","RCRJRBD",75,0)
 ;  calculate the writeoffs from 2/0/98
"RTN","RCRJRBD",76,0)
 ;  2/0/98 is when fms cleared out actual writeoffs and contract adj
"RTN","RCRJRBD",77,0)
 K ^XTMP("PRCABDET")
"RTN","RCRJRBD",78,0)
 S ^XTMP("PRCABDET",0)=$$FMADD^XLFDT(DT,10)_"^"_DT_"^BAD DEBT REPORT AUDIT"
"RTN","RCRJRBD",79,0)
 F TRANTYPE=8,9,10,11,35 D
"RTN","RCRJRBD",80,0)
 . S TRANDATE=2980200
"RTN","RCRJRBD",81,0)
 . ;  do not pick up transactions after the end date
"RTN","RCRJRBD",82,0)
 . F  S TRANDATE=$O(^PRCA(433,"AT",TRANTYPE,TRANDATE)) Q:'TRANDATE!($P(TRANDATE,".")>DATEEND)  D
"RTN","RCRJRBD",83,0)
 . . S TRANDA=0 F  S TRANDA=$O(^PRCA(433,"AT",TRANTYPE,TRANDATE,TRANDA)) Q:'TRANDA  D
"RTN","RCRJRBD",84,0)
 . . . ;  do not look at decrease adj which are not contract adj
"RTN","RCRJRBD",85,0)
 . . . I TRANTYPE=35,'$P($G(^PRCA(433,TRANDA,8)),"^",8) Q
"RTN","RCRJRBD",86,0)
 . . . ;
"RTN","RCRJRBD",87,0)
 . . . S BILLDA=$P($G(^PRCA(433,TRANDA,0)),"^",2)
"RTN","RCRJRBD",88,0)
 . . . I 'BILLDA Q
"RTN","RCRJRBD",89,0)
 . . . S CATEGORY=+$P($G(^PRCA(430,BILLDA,0)),"^",2)
"RTN","RCRJRBD",90,0)
 . . . ;  do not look at prepayments
"RTN","RCRJRBD",91,0)
 . . . I 'CATEGORY!(CATEGORY=26) Q
"RTN","RCRJRBD",92,0)
 . . . ;
"RTN","RCRJRBD",93,0)
 . . . ;  only report fund 528701,03,04 and 4032/528709 (ltc) bills
"RTN","RCRJRBD",94,0)
 . . . S FUND=$$GETFUNDB^RCXFMSUF(BILLDA,1)
"RTN","RCRJRBD",95,0)
 . . . I '$$PTACCT^PRCAACC(FUND),$E(FUND,1,4)'=4032 Q
"RTN","RCRJRBD",96,0)
 . . . ;
"RTN","RCRJRBD",97,0)
 . . . ;  get bill active date
"RTN","RCRJRBD",98,0)
 . . . S ARACTDT=+$P($P($G(^PRCA(430,BILLDA,6)),"^",21),".")
"RTN","RCRJRBD",99,0)
 . . . ;  determine MRA type of bill, given bill# and bill active date
"RTN","RCRJRBD",100,0)
 . . . ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRBD",101,0)
 . . . S MRATYPE=$$MRATYPE^IBCEMU2(BILLDA,ARACTDT)
"RTN","RCRJRBD",102,0)
 . . . ;
"RTN","RCRJRBD",103,0)
 . . . ; derive standard general ledger (SGL) from cat/fund/MRA type
"RTN","RCRJRBD",104,0)
 . . . S SGL=$$BDRSGL(CATEGORY,FUND,MRATYPE)
"RTN","RCRJRBD",105,0)
 . . . ;
"RTN","RCRJRBD",106,0)
 . . . ;  get the principal transaction value
"RTN","RCRJRBD",107,0)
 . . . S RCVALUE=+$P($$TRANBAL^RCRJRCOT(TRANDA),"^")
"RTN","RCRJRBD",108,0)
 . . . ;  temp variable for value (used below)
"RTN","RCRJRBD",109,0)
 . . . S RCPRIN=RCVALUE
"RTN","RCRJRBD",110,0)
 . . . ;
"RTN","RCRJRBD",111,0)
 . . . ;  add actual writeoff amount for fiscal year
"RTN","RCRJRBD",112,0)
 . . . I TRANTYPE'=35 S ACTUALWO(SGL)=$G(ACTUALWO(SGL))+RCVALUE
"RTN","RCRJRBD",113,0)
 . . . ;  add actual contract adjustments for fiscal year
"RTN","RCRJRBD",114,0)
 . . . I TRANTYPE=35 S ACTUALCA(SGL)=$G(ACTUALCA(SGL))+RCVALUE
"RTN","RCRJRBD",115,0)
 . . . S RSC=$$CALCRSC^RCXFMSUR(BILLDA)
"RTN","RCRJRBD",116,0)
 . . . S ^XTMP("PRCABDET",BILLDA,CATEGORY,FUND,RSC,SGL,TRANDA,TRANDATE,TRANTYPE,RCPRIN,RCVALUE,0,0)=""
"RTN","RCRJRBD",117,0)
 ;
"RTN","RCRJRBD",118,0)
 ;  remove all the entries from the bad debt file
"RTN","RCRJRBD",119,0)
 D DELETALL
"RTN","RCRJRBD",120,0)
 ;
"RTN","RCRJRBD",121,0)
 ;  calculate percentages and store them
"RTN","RCRJRBD",122,0)
 F SGL=1319,1319.2,1319.3,1319.4,1338,1339,"133N" D
"RTN","RCRJRBD",123,0)
 . ;  collection %
"RTN","RCRJRBD",124,0)
 . S COLLECT=0 I $G(PRINCPAL(SGL)) S COLLECT=$J($G(PAYMENT(SGL))/PRINCPAL(SGL)*100,0,2)
"RTN","RCRJRBD",125,0)
 . ;  patch PRCA*4.5*138: for the first year from when MRA is activated at a site, there is no collection
"RTN","RCRJRBD",126,0)
 . ;  history for post-MRA non-Medicare bills(SGL 133N). So, to calculate the percentage for SGL 133N, the
"RTN","RCRJRBD",127,0)
 . ;  payment and the principal for SGL 1339 are used in the first year.
"RTN","RCRJRBD",128,0)
 . ;  override the collection value for SGL=133N for the first year from MRA activation.
"RTN","RCRJRBD",129,0)
 . ;;  Re-evaluate the calc. of the percentage for 133N as well as 1339.
"RTN","RCRJRBD",130,0)
 . ;;I SGL="133N",$G(PRINCIPAL(1339)) D  ;
"RTN","RCRJRBD",131,0)
 . ;;. N X1,X2,X,%Y
"RTN","RCRJRBD",132,0)
 . ;;. ;  X2=MRA Activation Date, X1=Today, X=diff in days, %Y=0 invalid dates
"RTN","RCRJRBD",133,0)
 . ;;. ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRBD",134,0)
 . ;;. S X2=$$MRADTACT^IBCEMU2,X1=$$DT^XLFDT D ^%DTC
"RTN","RCRJRBD",135,0)
 . ;;. I %Y,X'>364.25 S COLLECT=$J($G(PAYMENT(1339))/PRINCPAL(1339)*100,0,2)
"RTN","RCRJRBD",136,0)
 . S DR=".02////"_+COLLECT_";"
"RTN","RCRJRBD",137,0)
 . ;
"RTN","RCRJRBD",138,0)
 . ;  current month receivable (this is built in the routine
"RTN","RCRJRBD",139,0)
 . ;  RCRJRCO1 and is stored in ^TMP($J,"RCRJRBD",SGL))
"RTN","RCRJRBD",140,0)
 . S DR=DR_".07////"_+$G(^TMP($J,"RCRJRBD",SGL))_";"
"RTN","RCRJRBD",141,0)
 . ;
"RTN","RCRJRBD",142,0)
 . ;  calculate allowance estimate for 1319 and 1338
"RTN","RCRJRBD",143,0)
 . ;  .08 allowance estimate = (writeoff % * current receivables)
"RTN","RCRJRBD",144,0)
 . ;  .09 actual writeoffs fytd
"RTN","RCRJRBD",145,0)
 . I SGL=1319!(SGL=1319.2)!(SGL=1319.3)!(SGL=1319.4)!(SGL=1338) D
"RTN","RCRJRBD",146,0)
 . . S WRITEOFF=100-COLLECT
"RTN","RCRJRBD",147,0)
 . . S DR=DR_".03////"_WRITEOFF_";"
"RTN","RCRJRBD",148,0)
 . . S DR=DR_".08////"_$J((WRITEOFF/100)*$G(^TMP($J,"RCRJRBD",SGL)),0,2)_";"
"RTN","RCRJRBD",149,0)
 . . S DR=DR_".09////"_+$G(ACTUALWO(SGL))_";"
"RTN","RCRJRBD",150,0)
 . ;  calculate allowance estimate for 1339
"RTN","RCRJRBD",151,0)
 . ;  .08 allowance estimate = (contract % * current receivables)
"RTN","RCRJRBD",152,0)
 . ;  .09 actual contract adjustments fytd
"RTN","RCRJRBD",153,0)
 . I SGL=1339!(SGL="133N") D
"RTN","RCRJRBD",154,0)
 . . S CONTRACT=100-COLLECT
"RTN","RCRJRBD",155,0)
 . . S DR=DR_".04////"_CONTRACT_";"
"RTN","RCRJRBD",156,0)
 . . S DR=DR_".08////"_$J((CONTRACT/100)*$G(^TMP($J,"RCRJRBD",SGL)),0,2)_";"
"RTN","RCRJRBD",157,0)
 . . S DR=DR_".09////"_+$G(ACTUALCA(SGL))_";"
"RTN","RCRJRBD",158,0)
 . ;
"RTN","RCRJRBD",159,0)
 . ;  set changed locally flag to no
"RTN","RCRJRBD",160,0)
 . S DR=DR_".1////0;"
"RTN","RCRJRBD",161,0)
 . D STORE(SGL,DR)
"RTN","RCRJRBD",162,0)
 ;
"RTN","RCRJRBD",163,0)
 L -^RC(348.1)
"RTN","RCRJRBD",164,0)
 ;
"RTN","RCRJRBD",165,0)
 ;   ;  put the report in a mail message (rcrjfmm=1)
"RTN","RCRJRBD",166,0)
 ;   S RCRJFMM=1
"RTN","RCRJRBD",167,0)
 ;   S RCRJDATE=DATEEND
"RTN","RCRJRBD",168,0)
 ;   D DQ^RCRJRBDR
"RTN","RCRJRBD",169,0)
 ;
"RTN","RCRJRBD",170,0)
 ;  transmit the allowances to FMS, and then generate the report.
"RTN","RCRJRBD",171,0)
 D BADDEBT^RCXFMSSV(DATEEND)
"RTN","RCRJRBD",172,0)
 Q
"RTN","RCRJRBD",173,0)
 ;
"RTN","RCRJRBD",174,0)
 ;
"RTN","RCRJRBD",175,0)
STORE(SGL,DR) ;  store data for Standard Ledger Account
"RTN","RCRJRBD",176,0)
 N D0,DA,DD,DI,DIC,DIE,DINUM,DO,DQ,X,Y
"RTN","RCRJRBD",177,0)
 S DIC="^RC(348.1,",DIC(0)="L",X=SGL,DIC("DR")=DR
"RTN","RCRJRBD",178,0)
 D FILE^DICN
"RTN","RCRJRBD",179,0)
 Q
"RTN","RCRJRBD",180,0)
 ;
"RTN","RCRJRBD",181,0)
 ;
"RTN","RCRJRBD",182,0)
DELETALL ;  delete all the entries from the bad debt file
"RTN","RCRJRBD",183,0)
 N %,DA,DIC,DIK,X,Y
"RTN","RCRJRBD",184,0)
 S DIK="^RC(348.1,"
"RTN","RCRJRBD",185,0)
 S DA=0 F  S DA=$O(^RC(348.1,DA)) Q:'DA  D ^DIK
"RTN","RCRJRBD",186,0)
 Q
"RTN","RCRJRBD",187,0)
 ;
"RTN","RCRJRBD",188,0)
 ;
"RTN","RCRJRBD",189,0)
WD3() ;  return the third work day of the month
"RTN","RCRJRBD",190,0)
 N J,P,V,X
"RTN","RCRJRBD",191,0)
 S J=0 F P=$E(DT,1,5)_"01":1 S V=$$DOW^XLFDT(P,1) I V,V<6,'$D(^HOLIDAY("B",P)) S J=J+1 Q:J=3
"RTN","RCRJRBD",192,0)
 S X=+$E(P,6,7)
"RTN","RCRJRBD",193,0)
 Q X
"RTN","RCRJRBD",194,0)
 ;
"RTN","RCRJRBD",195,0)
 ;
"RTN","RCRJRBD",196,0)
PREVMONT(FORDATE) ; return the previous month's date
"RTN","RCRJRBD",197,0)
 N PREVDATE
"RTN","RCRJRBD",198,0)
 S PREVDATE=$E(FORDATE,1,5)-1
"RTN","RCRJRBD",199,0)
 I $E(PREVDATE,4,5)="00" S PREVDATE=($E(PREVDATE,1,3)-1)_12
"RTN","RCRJRBD",200,0)
 Q PREVDATE_"00"
"RTN","RCRJRBD",201,0)
 ;
"RTN","RCRJRBD",202,0)
 ; derive standard general ledger (SGL) from category and fund
"RTN","RCRJRBD",203,0)
SGL(CATEGORY,FUND) ;
"RTN","RCRJRBD",204,0)
 I $G(FUND)=528709 Q 1319.2 ;new long term care fund
"RTN","RCRJRBD",205,0)
 I $E($G(FUND),1,4)=4032 Q 1319.2 ; breakout long term care as a subset
"RTN","RCRJRBD",206,0)
 I CATEGORY=8 Q 1339   ; crime or per. vio.
"RTN","RCRJRBD",207,0)
 I CATEGORY=9 Q 1339   ; reimbursable health insurance
"RTN","RCRJRBD",208,0)
 I CATEGORY=10 Q 1338  ; tort feasor
"RTN","RCRJRBD",209,0)
 I CATEGORY=21 Q 1339  ; medicare
"RTN","RCRJRBD",210,0)
 Q 1319
"RTN","RCRJRBD",211,0)
 ;
"RTN","RCRJRBD",212,0)
 ;
"RTN","RCRJRBD",213,0)
BDRSGL(CAT,FUND,MRATYPE) ; Calculate SGLs for the BDR process
"RTN","RCRJRBD",214,0)
 ;
"RTN","RCRJRBD",215,0)
 ; This API will be used by both the ARDC (routine RCRJRCOC)
"RTN","RCRJRBD",216,0)
 ; and the BDR estimate calculator to associate receivables
"RTN","RCRJRBD",217,0)
 ; with the correct standard general ledger account (SGL).
"RTN","RCRJRBD",218,0)
 ; The following table will be implemented:
"RTN","RCRJRBD",219,0)
 ;
"RTN","RCRJRBD",220,0)
 ; Receivable Type (Category)        Fund      SGL
"RTN","RCRJRBD",221,0)
 ;==================================================
"RTN","RCRJRBD",222,0)
 ; Medical Care Co-payments          528703    1319
"RTN","RCRJRBD",223,0)
 ;  (plus Inelig, Emerg./Hum. rec.)
"RTN","RCRJRBD",224,0)
 ; Long Term Care Co-payments        528709    1319.2
"RTN","RCRJRBD",225,0)
 ; Medication Co-payments            528701    1319.3
"RTN","RCRJRBD",226,0)
 ; Crimes of Personal Violence (8),  528704    1319.4
"RTN","RCRJRBD",227,0)
 ;  Medicare (21), No-Fault Auto
"RTN","RCRJRBD",228,0)
 ;  (7), Workman's Comp (6)
"RTN","RCRJRBD",229,0)
 ; Tort Feasor (10)                  528704    1338
"RTN","RCRJRBD",230,0)
 ; RHI (9), pre-MRA                  528704    1339
"RTN","RCRJRBD",231,0)
 ; RHI (9), post-MRA, MRA rec.       528704    133H
"RTN","RCRJRBD",232,0)
 ; RHI (9), post-MRA, non-MRA rec.   528704    133N
"RTN","RCRJRBD",233,0)
 ;
"RTN","RCRJRBD",234,0)
 ;  Input:  CAT  --  Pointer to the receivable category in file 430.2
"RTN","RCRJRBD",235,0)
 ;         FUND  --  Receivable fund calcualted by routine RCXFMSUF
"RTN","RCRJRBD",236,0)
 ;      MRATYPE  --  Indicator of an MRA (2) or non-MRA (3) receivable
"RTN","RCRJRBD",237,0)
 ;
"RTN","RCRJRBD",238,0)
 ;
"RTN","RCRJRBD",239,0)
 I $G(FUND)=528709 Q 1319.2
"RTN","RCRJRBD",240,0)
 I $E($G(FUND),1,4)=4032 Q 1319.2
"RTN","RCRJRBD",241,0)
 I $G(FUND)=528701 Q 1319.3
"RTN","RCRJRBD",242,0)
 I CAT=8!(CAT=21)!(CAT=7)!(CAT=6) Q 1319.4
"RTN","RCRJRBD",243,0)
 I CAT=10 Q 1338
"RTN","RCRJRBD",244,0)
 I CAT=9 Q $S(MRATYPE=2:"133H",MRATYPE=3:"133N",1:1339)
"RTN","RCRJRBD",245,0)
 Q 1319
"RTN","RCRJRBDE")
0^3^B14335641
"RTN","RCRJRBDE",1,0)
RCRJRBDE ;WISC/RFJ,TJK-bad debt edit the report ;1 Feb 98
"RTN","RCRJRBDE",2,0)
 ;;4.5;Accounts Receivable;**101,191,184,239**;Mar 20, 1995
"RTN","RCRJRBDE",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRBDE",4,0)
 Q
"RTN","RCRJRBDE",5,0)
 ;
"RTN","RCRJRBDE",6,0)
 ;
"RTN","RCRJRBDE",7,0)
EDIT ;  over-ride values, called from menu option
"RTN","RCRJRBDE",8,0)
 ;W !!,"This option will allow you to over-ride the current month allowance"
"RTN","RCRJRBDE",9,0)
 ;W !,"estimate for the Bad Debt Report.  If you change the allowance estimate,"
"RTN","RCRJRBDE",10,0)
 ;W !,"it will change the value sent to FMS (on the last workday of the month).",!
"RTN","RCRJRBDE",11,0)
 ;
"RTN","RCRJRBDE",12,0)
 ; - deactivate the over-ride option with patch PRCA*4.5*239
"RTN","RCRJRBDE",13,0)
 W !!,"This option will no longer allow you to over-ride the current"
"RTN","RCRJRBDE",14,0)
 W !,"month Bad Debt allowance estimates.  These estimates are"
"RTN","RCRJRBDE",15,0)
 W !,"automatically transmitted to FMS when they are calculated"
"RTN","RCRJRBDE",16,0)
 W !,"by the AR Data Collector on the third to the last business"
"RTN","RCRJRBDE",17,0)
 W !,"day of the month.",!!
"RTN","RCRJRBDE",18,0)
 ;
"RTN","RCRJRBDE",19,0)
 S DIR(0)="E" D ^DIR K DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","RCRJRBDE",20,0)
 ;
"RTN","RCRJRBDE",21,0)
 Q
"RTN","RCRJRBDE",22,0)
 ;
"RTN","RCRJRBDE",23,0)
 ;
"RTN","RCRJRBDE",24,0)
 ;
"RTN","RCRJRBDE",25,0)
 N DIR,X,Y
"RTN","RCRJRBDE",26,0)
 ;I $E(DT,6,7)'<$$WD3^RCRJRBD D  Q
"RTN","RCRJRBDE",27,0)
 I $E(DT,6,7)<$E($$LDATE^RCRJR(DT)+1,6,7)!($E(DT,6,7)'<$E($$LDAY^RCRJR(DT),6,7)) D  Q
"RTN","RCRJRBDE",28,0)
 .   W !,"The Bad Debt Report is submitted to FMS on the next to last workday of the"
"RTN","RCRJRBDE",29,0)
 .   W !,"month.  You can only use this option to change the data from the day"
"RTN","RCRJRBDE",30,0)
 .   W !,"after the EOAM cut off date to the next to last workday of the month."
"RTN","RCRJRBDE",31,0)
 .   ;  ask to print report
"RTN","RCRJRBDE",32,0)
 .   S DIR(0)="YO",DIR("B")="NO"
"RTN","RCRJRBDE",33,0)
 .   S DIR("A")="  Do you want to print the report for last month"
"RTN","RCRJRBDE",34,0)
 .   W ! D ^DIR
"RTN","RCRJRBDE",35,0)
 .   I Y=1 D PRINT^RCRJRBDR
"RTN","RCRJRBDE",36,0)
 ;
"RTN","RCRJRBDE",37,0)
 N CHANGED,D,D0,DA,DATA,DI,DIC,DIE,DQ,DR,RCRJALLO,RCRJFEND,X,Y
"RTN","RCRJRBDE",38,0)
 F  D  Q:$G(RCRJFEND)
"RTN","RCRJRBDE",39,0)
 .   ;  check to see if report is running
"RTN","RCRJRBDE",40,0)
 .   L +^RC(348.1):5
"RTN","RCRJRBDE",41,0)
 .   I '$T W !,"The Bad Debt Report is currently running or being edit by another user.",!,"Try again later." S RCRJFEND=1 Q
"RTN","RCRJRBDE",42,0)
 .   ;
"RTN","RCRJRBDE",43,0)
 .   S (DIC,DIE)="^RC(348.1,",DIC(0)="QEAM"
"RTN","RCRJRBDE",44,0)
 .   W ! D ^DIC
"RTN","RCRJRBDE",45,0)
 .   I Y<1 L -^RC(348.1) S RCRJFEND=1 Q
"RTN","RCRJRBDE",46,0)
 .   S DA=+Y
"RTN","RCRJRBDE",47,0)
 .   ;  store current estimate allowance and show report
"RTN","RCRJRBDE",48,0)
 .   S RCRJALLO=+$P(^RC(348.1,+Y,0),"^",8)
"RTN","RCRJRBDE",49,0)
 .   W !!?20,"This what the CURRENT report looks like:"
"RTN","RCRJRBDE",50,0)
 .   W !?20,"========================================"
"RTN","RCRJRBDE",51,0)
 .   D SHOW(DA)
"RTN","RCRJRBDE",52,0)
 .   W !!,"You now have the option to over-ride the estimated allowance:"
"RTN","RCRJRBDE",53,0)
 .   S DR=".08;" D ^DIE
"RTN","RCRJRBDE",54,0)
 .   L -^RC(348.1)
"RTN","RCRJRBDE",55,0)
 .   ;  no changes to data
"RTN","RCRJRBDE",56,0)
 .   I +$P(^RC(348.1,DA,0),"^",8)=RCRJALLO W "...No changes made." Q
"RTN","RCRJRBDE",57,0)
 .   ;  set flag to show changes made
"RTN","RCRJRBDE",58,0)
 .   S DR=".1////1;" D ^DIE
"RTN","RCRJRBDE",59,0)
 .   ;  show new report
"RTN","RCRJRBDE",60,0)
 .   W !!?20,"This is what the NEW report looks like:"
"RTN","RCRJRBDE",61,0)
 .   W !?20,"======================================="
"RTN","RCRJRBDE",62,0)
 .   D SHOW(DA)
"RTN","RCRJRBDE",63,0)
 Q
"RTN","RCRJRBDE",64,0)
 ;
"RTN","RCRJRBDE",65,0)
 ;
"RTN","RCRJRBDE",66,0)
SHOW(DA) ;  show the values for entry
"RTN","RCRJRBDE",67,0)
 S DATA=$G(^RC(348.1,DA,0))
"RTN","RCRJRBDE",68,0)
 W !!,"Allowance for Bad Debt - SGL ",$P(DATA,"^"),":"
"RTN","RCRJRBDE",69,0)
 W !,"----------------------------------------------------"
"RTN","RCRJRBDE",70,0)
 S CHANGED="  " I $P(DATA,"^",10) S CHANGED="**"
"RTN","RCRJRBDE",71,0)
 W !,"Allowance Estimate for Month",?35,":",$J($P(DATA,"^",8),16,2)," ",CHANGED," (Normally Credit Value)"
"RTN","RCRJRBDE",72,0)
 W !,"Bad Debt Write-Off FYTD (Plus)",?35,":",$J($P(DATA,"^",9),16,2),"    (Normally Debit Value )"
"RTN","RCRJRBDE",73,0)
 W !,"----------------------------------------------------"
"RTN","RCRJRBDE",74,0)
 W !,"Transmitted Amount to FMS for Month",?35,":",$J($P(DATA,"^",8)+$P(DATA,"^",9),16,2)," ",CHANGED," (Normally Credit Value)"
"RTN","RCRJRBDE",75,0)
 I $P(DATA,"^",10) W !?53,"**  Changed Locally"
"RTN","RCRJRBDE",76,0)
 Q
"RTN","RCRJRBDR")
0^4^B75826184
"RTN","RCRJRBDR",1,0)
RCRJRBDR ;WISC/RFJ,TJK-bad debt report generator ;1 Feb 98
"RTN","RCRJRBDR",2,0)
 ;;4.5;Accounts Receivable;**101,139,170,191,203,215,220,138,239**;Mar 20, 1995
"RTN","RCRJRBDR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRBDR",4,0)
 Q
"RTN","RCRJRBDR",5,0)
 ;
"RTN","RCRJRBDR",6,0)
 ;
"RTN","RCRJRBDR",7,0)
PRINT ;  print report on printer, called from menu option
"RTN","RCRJRBDR",8,0)
 N RCRJDATE
"RTN","RCRJRBDR",9,0)
 W !!,"This option will print the Bad Debt Report.  The Bad Debt allowance"
"RTN","RCRJRBDR",10,0)
 W !,"estimates are computed by the AR Data Collector at the end of the"
"RTN","RCRJRBDR",11,0)
 W !,"accounting month, and sent to FMS at that time.  The allowance"
"RTN","RCRJRBDR",12,0)
 W !,"estimate is no longer editable prior to transmission to FMS.",!
"RTN","RCRJRBDR",13,0)
 N %ZIS,POP,ZTRTN,ZTDESC S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCRJRBDR",14,0)
 I $D(IO("Q")) D  Q
"RTN","RCRJRBDR",15,0)
 . S ZTRTN="DQ^RCRJRBDR",ZTDESC="Bad Debt Report"
"RTN","RCRJRBDR",16,0)
 . D ^%ZTLOAD
"RTN","RCRJRBDR",17,0)
 ;
"RTN","RCRJRBDR",18,0)
 W !,"please wait"
"RTN","RCRJRBDR",19,0)
 D DQ
"RTN","RCRJRBDR",20,0)
 Q
"RTN","RCRJRBDR",21,0)
 ;
"RTN","RCRJRBDR",22,0)
 ;
"RTN","RCRJRBDR",23,0)
DQ ;  generate the report
"RTN","RCRJRBDR",24,0)
 ;  rcrjfmm = flag to put in mail message (if $g(rcrjfmm)) (optional)
"RTN","RCRJRBDR",25,0)
 ;  rcrjdate = date month and year for report (optional)
"RTN","RCRJRBDR",26,0)
 ;  rcrjfxsv = fms document id number if sent to fms (optional)
"RTN","RCRJRBDR",27,0)
 ;             (newed and set by rcxfmssv, label Q)
"RTN","RCRJRBDR",28,0)
 ;
"RTN","RCRJRBDR",29,0)
 N %,%I,CHANGED,DATA,DATA1319,DATA1338,DATA1339,DATALTC,DATEREPT,ENDDATE,X
"RTN","RCRJRBDR",30,0)
 N LINE,RCRJFLAG,SCREEN,SPACE,Y,DATA133N
"RTN","RCRJRBDR",31,0)
 ;
"RTN","RCRJRBDR",32,0)
 K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRBDR",33,0)
 S SPACE="",$P(SPACE," ",81)=""
"RTN","RCRJRBDR",34,0)
 ;  the date of the report is for previous month if the DT is before the EOAM date of the current month,  it is for the current month if the date is after the EOAM cut-off date.
"RTN","RCRJRBDR",35,0)
 I $G(RCRJDATE) S RCRJDATE=$E($$LDATE^RCRJR(RCRJDATE),1,5)_"00"
"RTN","RCRJRBDR",36,0)
 I '$G(RCRJDATE) D
"RTN","RCRJRBDR",37,0)
 .I $E(DT,6,7)'>$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$$PREVMONT^RCRJRBD(DT)
"RTN","RCRJRBDR",38,0)
 .I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$E($$LDATE^RCRJR(DT),1,5)_"00"
"RTN","RCRJRBDR",39,0)
 S Y=$E(RCRJDATE,1,5)_"00" D DD^%DT S DATEREPT=Y
"RTN","RCRJRBDR",40,0)
 S LINE=0
"RTN","RCRJRBDR",41,0)
 ;
"RTN","RCRJRBDR",42,0)
 ;  jump to RCRJRBDT to generate the new Bad Debt Report,
"RTN","RCRJRBDR",43,0)
 ;  in order to save the code for the older report.
"RTN","RCRJRBDR",44,0)
 D BDR^RCRJRBDT G MAIL
"RTN","RCRJRBDR",45,0)
 ;
"RTN","RCRJRBDR",46,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",47,0)
 D SETLINE($E(SPACE,1,32)_"Bad Debt Report")
"RTN","RCRJRBDR",48,0)
 D SETLINE($E(SPACE,1,13)_"Allowance for Bad Debt and Contract Adjustment Report")
"RTN","RCRJRBDR",49,0)
 D SETLINE($E(SPACE,1,27)_"for the month of "_DATEREPT)
"RTN","RCRJRBDR",50,0)
 I $D(RCRJFXSV) D
"RTN","RCRJRBDR",51,0)
 . D SETLINE(" ")
"RTN","RCRJRBDR",52,0)
 . I $E(RCRJFXSV,1,2)="SV" D SETLINE($E(SPACE,1,13)_"***** Report sent to FMS, doc id: "_RCRJFXSV_" *****") Q
"RTN","RCRJRBDR",53,0)
 . ;  report errored out or did not get generated to fms
"RTN","RCRJRBDR",54,0)
 . D SETLINE($E(SPACE,1,10)_"***** NOTICE:  Report was NOT sent to FMS, the message is *****")
"RTN","RCRJRBDR",55,0)
 . D SETLINE($E(SPACE,1,10)_"***** "_RCRJFXSV_" *****")
"RTN","RCRJRBDR",56,0)
 ;
"RTN","RCRJRBDR",57,0)
 ;  show mccf
"RTN","RCRJRBDR",58,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",59,0)
 D SETLINE($E(SPACE,1,26)_"Medical Care Collection Fund")
"RTN","RCRJRBDR",60,0)
 I $E($G(RCRJDATE),2,5)'<"0410" D SETLINE($E(SPACE,1,26)_" Funds 528701, 528703, & 528704")
"RTN","RCRJRBDR",61,0)
 I $E($G(RCRJDATE),2,5)<"0410" D SETLINE($E(SPACE,1,26)_" Funds 5287.1, 5287.3, & 5287.4")
"RTN","RCRJRBDR",62,0)
 D SETLINE($E(SPACE,1,26)_"----------------------------")
"RTN","RCRJRBDR",63,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",64,0)
 D SETLINE("Calculated           "_$J("            ",14)_$J(" Third Party",14)_$J(" Third Party",14))
"RTN","RCRJRBDR",65,0)
 D SETLINE("Percentages          "_$J(" First Party",14)_$J("    Cont Adj",14)_$J("    Cont Adj",14)_$J("Tort Feasors",14))
"RTN","RCRJRBDR",66,0)
 D SETLINE("For                  "_$J("    SGL 1319",14)_$J("    SGL 1339",14)_$J("    SGL 133N",14)_$J("    SGL 1338",14))
"RTN","RCRJRBDR",67,0)
 D SETLINE("---------------------"_$J("------------",14)_$J("------------",14)_$J("------------",14)_$J("------------",14))
"RTN","RCRJRBDR",68,0)
 S DATA1319=$G(^RC(348.1,+$O(^RC(348.1,"B",1319,0)),0))
"RTN","RCRJRBDR",69,0)
 S DATA1338=$G(^RC(348.1,+$O(^RC(348.1,"B",1338,0)),0))
"RTN","RCRJRBDR",70,0)
 S DATA1339=$G(^RC(348.1,+$O(^RC(348.1,"B",1339,0)),0))
"RTN","RCRJRBDR",71,0)
 S DATA133N=$G(^RC(348.1,+$O(^RC(348.1,"B","133N",0)),0))
"RTN","RCRJRBDR",72,0)
 D SETLINE("Collection          %"_$J($P(DATA1319,"^",2),14,2)_$J($P(DATA1339,"^",2),14,2)_$J($P(DATA133N,"^",2),14,2)_$J($P(DATA1338,"^",2),14,2))
"RTN","RCRJRBDR",73,0)
 D SETLINE("Write-Off           %"_$J($P(DATA1319,"^",3),14,2)_$J($P(DATA1339,"^",3),14,2)_$J($P(DATA133N,"^",3),14,2)_$J($P(DATA1338,"^",3),14,2))
"RTN","RCRJRBDR",74,0)
 D SETLINE("Contract Adjustment %"_$J($P(DATA1319,"^",4),14,2)_$J($P(DATA1339,"^",4),14,2)_$J($P(DATA133N,"^",4),14,2)_$J($P(DATA1338,"^",4),14,2))
"RTN","RCRJRBDR",75,0)
 D SETLINE("---------------------"_$J("------------",14)_$J("------------",14)_$J("------------",14)_$J("------------",14))
"RTN","RCRJRBDR",76,0)
 D SETLINE("TOTAL               %"_$J(100,14,2)_$J(100,14,2)_$J(100,14,2)_$J(100,14,2))
"RTN","RCRJRBDR",77,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",78,0)
 ;
"RTN","RCRJRBDR",79,0)
 S DATALTC=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.2,0)),0))
"RTN","RCRJRBDR",80,0)
 I $E($G(RCRJDATE),2,5)'<"0410" D SETLINE($E(SPACE,1,26)_"  Extended (LTC) Care Fund 528709")
"RTN","RCRJRBDR",81,0)
 I $E($G(RCRJDATE),2,5)<"0410" D SETLINE($E(SPACE,1,26)_"  Extended (LTC) Care Fund 4032")
"RTN","RCRJRBDR",82,0)
 D SETLINE($E(SPACE,1,26)_"---------------------------------")
"RTN","RCRJRBDR",83,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",84,0)
 I $E($G(RCRJDATE),2,5)'<"0410" D SETLINE("Calculated           "_$J("   Fund 528709",18))
"RTN","RCRJRBDR",85,0)
 I $E($G(RCRJDATE),2,5)<"0410" D SETLINE("Calculated           "_$J("   Fund 4032",18))
"RTN","RCRJRBDR",86,0)
 D SETLINE("Percentages          "_$J(" First Party",18))
"RTN","RCRJRBDR",87,0)
 D SETLINE("For                  "_$J("    SGL 1319",18))
"RTN","RCRJRBDR",88,0)
 D SETLINE("---------------------"_$J("------------",18))
"RTN","RCRJRBDR",89,0)
 D SETLINE("Collection          %"_$J($P(DATALTC,"^",2),18,2))
"RTN","RCRJRBDR",90,0)
 D SETLINE("Write-Off           %"_$J($P(DATALTC,"^",3),18,2))
"RTN","RCRJRBDR",91,0)
 D SETLINE("Contract Adjustment %"_$J($P(DATALTC,"^",4),18,2))
"RTN","RCRJRBDR",92,0)
 D SETLINE("---------------------"_$J("------------",18))
"RTN","RCRJRBDR",93,0)
 D SETLINE("TOTAL               %"_$J(100,18,2))
"RTN","RCRJRBDR",94,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",95,0)
 ;
"RTN","RCRJRBDR",96,0)
 ;  show totals
"RTN","RCRJRBDR",97,0)
 ;  1319 mccf allowance
"RTN","RCRJRBDR",98,0)
 D SETLINE("Allowance for Bad Debt - First Party (SGL 1319 MCCF):")
"RTN","RCRJRBDR",99,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",100,0)
 S CHANGED="  " I $P(DATA1319,"^",10) S CHANGED="**"
"RTN","RCRJRBDR",101,0)
 D SETLINE($E("Allowance Estimate for "_DATEREPT_SPACE,1,35)_":"_$J($P(DATA1319,"^",8),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",102,0)
 D SETLINE($E("Bad Debt Write-Off (Plus)  "_SPACE,1,35)_":"_$J($P(DATA1319,"^",9),16,2)_"    (Normally Debit Value )")
"RTN","RCRJRBDR",103,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",104,0)
 D SETLINE($E("Transmitted Amount to FMS for Month"_SPACE,1,35)_":"_$J($P(DATA1319,"^",8)+$P(DATA1319,"^",9),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",105,0)
 I $P(DATA1319,"^",10) D SETLINE($E(SPACE,1,53)_"**  Changed Locally")
"RTN","RCRJRBDR",106,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",107,0)
 ;
"RTN","RCRJRBDR",108,0)
 ;  1319 ltc allowance
"RTN","RCRJRBDR",109,0)
 D SETLINE("Allowance for Bad Debt - First Party (SGL 1319 LTC 528709):")
"RTN","RCRJRBDR",110,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",111,0)
 S CHANGED="  " I $P(DATALTC,"^",10) S CHANGED="**"
"RTN","RCRJRBDR",112,0)
 D SETLINE($E("Allowance Estimate for "_DATEREPT_SPACE,1,35)_":"_$J($P(DATALTC,"^",8),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",113,0)
 D SETLINE($E("Bad Debt Write-Off (Plus)  "_SPACE,1,35)_":"_$J($P(DATALTC,"^",9),16,2)_"    (Normally Debit Value )")
"RTN","RCRJRBDR",114,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",115,0)
 D SETLINE($E("Transmitted Amount to FMS for Month"_SPACE,1,35)_":"_$J($P(DATALTC,"^",8)+$P(DATALTC,"^",9),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",116,0)
 I $P(DATALTC,"^",10) D SETLINE($E(SPACE,1,53)_"**  Changed Locally")
"RTN","RCRJRBDR",117,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",118,0)
 ;
"RTN","RCRJRBDR",119,0)
 ;  1339 allowance
"RTN","RCRJRBDR",120,0)
 D SETLINE("Allowance for Contract Adj - Third Party (SGL 1339):")
"RTN","RCRJRBDR",121,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",122,0)
 S CHANGED="  " I $P(DATA1339,"^",10) S CHANGED="**"
"RTN","RCRJRBDR",123,0)
 D SETLINE($E("Allowance Estimate for "_DATEREPT_SPACE,1,35)_":"_$J($P(DATA1339,"^",8),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",124,0)
 D SETLINE($E("Bad Debt Contract Adj (Plus)  "_SPACE,1,35)_":"_$J($P(DATA1339,"^",9),16,2)_"    (Normally Debit Value )")
"RTN","RCRJRBDR",125,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",126,0)
 D SETLINE($E("Transmitted Amount to FMS for Month"_SPACE,1,35)_":"_$J($P(DATA1339,"^",8)+$P(DATA1339,"^",9),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",127,0)
 I $P(DATA1339,"^",10) D SETLINE($E(SPACE,1,53)_"**  Changed Locally")
"RTN","RCRJRBDR",128,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",129,0)
 ;
"RTN","RCRJRBDR",130,0)
 ;  133N allowance - Post-MRA non-Medicare
"RTN","RCRJRBDR",131,0)
 D SETLINE("Allowance for Contract Adj - Third Party (SGL 133N):")
"RTN","RCRJRBDR",132,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",133,0)
 S CHANGED="  " I $P(DATA133N,"^",10) S CHANGED="**"
"RTN","RCRJRBDR",134,0)
 D SETLINE($E("Allowance Estimate for "_DATEREPT_SPACE,1,35)_":"_$J($P(DATA133N,"^",8),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",135,0)
 D SETLINE($E("Bad Debt Contract Adj (Plus)  "_SPACE,1,35)_":"_$J($P(DATA133N,"^",9),16,2)_"    (Normally Debit Value )")
"RTN","RCRJRBDR",136,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",137,0)
 D SETLINE($E("Transmitted Amount to FMS for Month"_SPACE,1,35)_":"_$J($P(DATA133N,"^",8)+$P(DATA133N,"^",9),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",138,0)
 I $P(DATA133N,"^",10) D SETLINE($E(SPACE,1,53)_"**  Changed Locally")
"RTN","RCRJRBDR",139,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",140,0)
 ;
"RTN","RCRJRBDR",141,0)
 ;  1338 allowance
"RTN","RCRJRBDR",142,0)
 D SETLINE("Allowance for Bad Debt - Tort Feasors (SGL 1338):")
"RTN","RCRJRBDR",143,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",144,0)
 S CHANGED="  " I $P(DATA1338,"^",10) S CHANGED="**"
"RTN","RCRJRBDR",145,0)
 D SETLINE($E("Allowance Estimate for "_DATEREPT_SPACE,1,35)_":"_$J($P(DATA1338,"^",8),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",146,0)
 D SETLINE($E("Bad Debt Write-Off (Plus)  "_SPACE,1,35)_":"_$J($P(DATA1338,"^",9),16,2)_"    (Normally Debit Value )")
"RTN","RCRJRBDR",147,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",148,0)
 D SETLINE($E("Transmitted Amount to FMS for Month"_SPACE,1,35)_":"_$J($P(DATA1338,"^",8)+$P(DATA1338,"^",9),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",149,0)
 I $P(DATA1338,"^",10) D SETLINE($E(SPACE,1,53)_"**  Changed Locally")
"RTN","RCRJRBDR",150,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",151,0)
 D SETLINE("Report Footnotes:")
"RTN","RCRJRBDR",152,0)
 D SETLINE("-----------------")
"RTN","RCRJRBDR",153,0)
 ;
"RTN","RCRJRBDR",154,0)
 D ENDOFREP^RCRJRBDT
"RTN","RCRJRBDR",155,0)
 ;
"RTN","RCRJRBDR",156,0)
MAIL ;  put report in mailman
"RTN","RCRJRBDR",157,0)
 I $G(RCRJFMM) D  D Q Q
"RTN","RCRJRBDR",158,0)
 . N XMY
"RTN","RCRJRBDR",159,0)
 . S XMY("G.RC AR DATA COLLECTOR")=""
"RTN","RCRJRBDR",160,0)
 . S %=$$SENDMSG^RCRJRCOR("BAD DEBT REPORT",.XMY)
"RTN","RCRJRBDR",161,0)
 ;
"RTN","RCRJRBDR",162,0)
 ;  print report
"RTN","RCRJRBDR",163,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCRJRBDR",164,0)
 U IO I SCREEN W @IOF
"RTN","RCRJRBDR",165,0)
 S LINE=1 F  S LINE=$O(^TMP($J,"RCRJRCORMM",LINE)) Q:'LINE!($G(RCRJFLAG))  D
"RTN","RCRJRBDR",166,0)
 . I $Y>(IOSL-5) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  W @IOF F %=2:1:5 W !,^TMP($J,"RCRJRCORMM",%)
"RTN","RCRJRBDR",167,0)
 . W !,^TMP($J,"RCRJRCORMM",LINE)
"RTN","RCRJRBDR",168,0)
 I '$G(RCRJFLAG),SCREEN R !!,"<end of report, press return to continue>",X:DTIME
"RTN","RCRJRBDR",169,0)
 D ^%ZISC
"RTN","RCRJRBDR",170,0)
 ;
"RTN","RCRJRBDR",171,0)
Q K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRBDR",172,0)
 Q
"RTN","RCRJRBDR",173,0)
 ;
"RTN","RCRJRBDR",174,0)
 ;
"RTN","RCRJRBDR",175,0)
SETLINE(DATA) ;  build the line for the report
"RTN","RCRJRBDR",176,0)
 S LINE=LINE+1,^TMP($J,"RCRJRCORMM",LINE)=DATA
"RTN","RCRJRBDR",177,0)
 Q
"RTN","RCRJRBDT")
0^5^B54449549
"RTN","RCRJRBDT",1,0)
RCRJRBDT ;WISC/RFJ-bad debt retransmit ;1 Feb 98
"RTN","RCRJRBDT",2,0)
 ;;4.5;Accounts Receivable;**101,170,191,138,239**;Mar 20, 1995
"RTN","RCRJRBDT",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRBDT",4,0)
 ;
"RTN","RCRJRBDT",5,0)
 ;
"RTN","RCRJRBDT",6,0)
 ; - deactivate this option with patch PRCA*4.5*239
"RTN","RCRJRBDT",7,0)
 W !!,"This option may no longer be used to retransmit the Bad Debt"
"RTN","RCRJRBDT",8,0)
 W !,"allowance estimates to FMS."
"RTN","RCRJRBDT",9,0)
 W !!,"Please use the option 'Monthly NDB, SV and WR Regenerate' to"
"RTN","RCRJRBDT",10,0)
 W !,"recalculate the allowance estimates and transmit them to FMS.",!!
"RTN","RCRJRBDT",11,0)
 ;
"RTN","RCRJRBDT",12,0)
 S DIR(0)="E" D ^DIR K DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","RCRJRBDT",13,0)
 ;
"RTN","RCRJRBDT",14,0)
 Q
"RTN","RCRJRBDT",15,0)
 ;
"RTN","RCRJRBDT",16,0)
 ;
"RTN","RCRJRBDT",17,0)
 N DA347,DATEMOYR,FMSDOCNO,GECSDATA,RCRJFSV
"RTN","RCRJRBDT",18,0)
 ;  the date of the report is for previous month if the DT is before the EOAM date of the current month,  it is for the current month if the date is after the EOAM cut-off date.
"RTN","RCRJRBDT",19,0)
 I $E(DT,6,7)'>$E($$LDATE^RCRJR(DT),6,7) S DATEMOYR=$$PREVMONT^RCRJRBD(DT)
"RTN","RCRJRBDT",20,0)
 I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S DATEMOYR=$E($$LDATE^RCRJR(DT),1,5)_"00"
"RTN","RCRJRBDT",21,0)
 ;S DATEMOYR=$$PREVMONT^RCRJRBD(DT)
"RTN","RCRJRBDT",22,0)
 W !!,"This option will retransmit the Bad Debt documents to FMS (SV23, SV27, SV2B)."
"RTN","RCRJRBDT",23,0)
 ;
"RTN","RCRJRBDT",24,0)
 ;I +$E(DT,6,7)<$$WD3^RCRJRBD D  Q
"RTN","RCRJRBDT",25,0)
 I $E(DT,6,7)<$E($$LDATE^RCRJR(DT),6,7)!($E(DT,6,7)'<$E($$LDAY^RCRJR(DT),6,7)) D  Q
"RTN","RCRJRBDT",26,0)
 .  W !,"The FMS documents will be automatically sent to FMS on the second to last ",!,"workday of this month."
"RTN","RCRJRBDT",27,0)
 ;  try and find SV document to see if its accepted
"RTN","RCRJRBDT",28,0)
 S FMSDOCNO=""
"RTN","RCRJRBDT",29,0)
 K GECSDATA
"RTN","RCRJRBDT",30,0)
 S DA347=$O(^RC(347,"D","SV-"_$E(DATEMOYR,1,5)_"01",0))
"RTN","RCRJRBDT",31,0)
 I DA347 S FMSDOCNO=$P($G(^RC(347,DA347,0)),"^",9)
"RTN","RCRJRBDT",32,0)
 ;  if there is an entry, find the code sheet in gcs to rebuild
"RTN","RCRJRBDT",33,0)
 ;  gecsdata will be the ien for file 2100.1
"RTN","RCRJRBDT",34,0)
 I FMSDOCNO'="" D DATA^GECSSGET(FMSDOCNO,0)
"RTN","RCRJRBDT",35,0)
 I $G(GECSDATA) D
"RTN","RCRJRBDT",36,0)
 .   W !!,"The SV document has been transmitted to fms, document number: "_FMSDOCNO
"RTN","RCRJRBDT",37,0)
 .   I $E($G(GECSDATA(2100.1,GECSDATA,3,"E")))="A" D  Q
"RTN","RCRJRBDT",38,0)
 .   .   W !,"The SV document has been ACCEPTED in FMS and will not be resent."
"RTN","RCRJRBDT",39,0)
 .   .   S RCRJFSV=1
"RTN","RCRJRBDT",40,0)
 .   W !,"The SV document has NOT been ACCEPTED and will be RETRANSMITTED."
"RTN","RCRJRBDT",41,0)
 I $G(RCRJFSV) Q
"RTN","RCRJRBDT",42,0)
 ;
"RTN","RCRJRBDT",43,0)
 I $$ASKOKAY(DATEMOYR)'=1 Q
"RTN","RCRJRBDT",44,0)
 ;
"RTN","RCRJRBDT",45,0)
 ;  make sure this code is not executed.
"RTN","RCRJRBDT",46,0)
 ;W !!,"Re-sending the documents to FMS ..."
"RTN","RCRJRBDT",47,0)
 ;D BADDEBT^RCXFMSSV
"RTN","RCRJRBDT",48,0)
 ;W " Done.",!,"The Bad Debt Report will be sent to the G.FMS mail group."
"RTN","RCRJRBDT",49,0)
 Q
"RTN","RCRJRBDT",50,0)
 ;
"RTN","RCRJRBDT",51,0)
 ;
"RTN","RCRJRBDT",52,0)
ASKOKAY(DATEMOYR) ;  ask if its okay
"RTN","RCRJRBDT",53,0)
 ;  1 is yes, otherwise no
"RTN","RCRJRBDT",54,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCRJRBDT",55,0)
 S Y=DATEMOYR D DD^%DT
"RTN","RCRJRBDT",56,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCRJRBDT",57,0)
 S DIR("A")="  Are you SURE you want to resend the Bad Debt Report for "_Y
"RTN","RCRJRBDT",58,0)
 W ! D ^DIR
"RTN","RCRJRBDT",59,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCRJRBDT",60,0)
 Q Y
"RTN","RCRJRBDT",61,0)
 ;
"RTN","RCRJRBDT",62,0)
 ;
"RTN","RCRJRBDT",63,0)
ENDOFREP ;  print end of bad debt report footnotes
"RTN","RCRJRBDT",64,0)
 ;  called from rcrjrbdr
"RTN","RCRJRBDT",65,0)
 ;
"RTN","RCRJRBDT",66,0)
 ;  print footnote
"RTN","RCRJRBDT",67,0)
 S Y=RCRJDATE D DD^%DT S ENDDATE=Y
"RTN","RCRJRBDT",68,0)
 F %=1:1 S DATA=$P($T(FOOTNOTE+%),";",3,99) Q:DATA=""  D
"RTN","RCRJRBDT",69,0)
 .   I DATA["DATEREPT" S DATA=$P(DATA,"DATEREPT")_DATEREPT_$P(DATA,"DATEREPT",2)
"RTN","RCRJRBDT",70,0)
 .   I DATA["ENDDATE" S DATA=$P(DATA,"ENDDATE")_ENDDATE_$P(DATA,"ENDDATE",2)
"RTN","RCRJRBDT",71,0)
 .   D SETLINE^RCRJRBDR(DATA)
"RTN","RCRJRBDT",72,0)
 Q
"RTN","RCRJRBDT",73,0)
 ;
"RTN","RCRJRBDT",74,0)
 ;
"RTN","RCRJRBDT",75,0)
FOOTNOTE ;  report footnotes (from rcrjrbdr)
"RTN","RCRJRBDT",76,0)
 ;;(1) Calculated Percentages and the Allowance for Contract Adj - Third Party
"RTN","RCRJRBDT",77,0)
 ;;    for SGL 1339 are based on bills created prior to the activation of the
"RTN","RCRJRBDT",78,0)
 ;;    Medicare Remittance Advice software.  Over time, there will no longer be
"RTN","RCRJRBDT",79,0)
 ;;    any bills in this category.
"RTN","RCRJRBDT",80,0)
 ;; 
"RTN","RCRJRBDT",81,0)
 ;;(2) Calculated Percentages and the Allowance for Contract Adj - Third Party
"RTN","RCRJRBDT",82,0)
 ;;    for SGL 133N are based on non-Medicare WNR bills created after the
"RTN","RCRJRBDT",83,0)
 ;;    activation of the Medicare Remittance Advice software.
"RTN","RCRJRBDT",84,0)
 ;; 
"RTN","RCRJRBDT",85,0)
 ;;(3) The "Allowance Estimate for DATEREPT" is the dollar value estimated
"RTN","RCRJRBDT",86,0)
 ;;    as the Allowance for Bad Debt or Contract Adjustment for the month.
"RTN","RCRJRBDT",87,0)
 ;; 
"RTN","RCRJRBDT",88,0)
 ;;(4) The "Bad Debt Write-Off (Plus)" is the actual write-offs or contract
"RTN","RCRJRBDT",89,0)
 ;;    adjustments accomplished from FEB 1,1998 thru ENDDATE.
"RTN","RCRJRBDT",90,0)
 ;; 
"RTN","RCRJRBDT",91,0)
 ;;(5) The "Transmitted Amount to FMS for Month" is the sum of (3) and (4).
"RTN","RCRJRBDT",92,0)
 ;;    The transmitted dollar value is normally a credit value.
"RTN","RCRJRBDT",93,0)
 ;; 
"RTN","RCRJRBDT",94,0)
 ;;(6) Facilities are responsible for reporting monthly accrued unbilled
"RTN","RCRJRBDT",95,0)
 ;;    amounts.  When such amounts are identified and reported, a portion of
"RTN","RCRJRBDT",96,0)
 ;;    those dollars should be reported as uncollectable.  The estimated
"RTN","RCRJRBDT",97,0)
 ;;    uncollectable value of the unbilled amounts should be included as part
"RTN","RCRJRBDT",98,0)
 ;;    of the facility's monthly allowance for bad debt or contract adjustments.
"RTN","RCRJRBDT",99,0)
 ;;    The AR Override Option should be used to adjust the value provided to
"RTN","RCRJRBDT",100,0)
 ;;    report the estimated uncollectable accrued unbilled amounts for the
"RTN","RCRJRBDT",101,0)
 ;;    month.  Facilities may wish to consider using the allowance percentages
"RTN","RCRJRBDT",102,0)
 ;;    provided with this report, if no other means of determining the
"RTN","RCRJRBDT",103,0)
 ;;    estimated allowance for the accrued unbilled amount is acceptable.
"RTN","RCRJRBDT",104,0)
 ;; 
"RTN","RCRJRBDT",105,0)
 ;;(7) Only members in the facility's local RC AR DATA COLLECTOR mail group
"RTN","RCRJRBDT",106,0)
 ;;    will receive this report.
"RTN","RCRJRBDT",107,0)
 ;
"RTN","RCRJRBDT",108,0)
 ;
"RTN","RCRJRBDT",109,0)
 ;
"RTN","RCRJRBDT",110,0)
BDR ; Compile new Bad Debt Report.
"RTN","RCRJRBDT",111,0)
 ;   This code will be used to compile the new Bad Debt Report.
"RTN","RCRJRBDT",112,0)
 ;   This routine is invokved by routine RCRJRDBR when the Bad
"RTN","RCRJRBDT",113,0)
 ;   Debt Report needs to be printed.
"RTN","RCRJRBDT",114,0)
 ;
"RTN","RCRJRBDT",115,0)
 ;     Variable input:  LINE  --  set to 0
"RTN","RCRJRBDT",116,0)
 ;                     SPACE  --  set to 81 space characters
"RTN","RCRJRBDT",117,0)
 ;                  DATEREPT  --  formatted month and year
"RTN","RCRJRBDT",118,0)
 ;
"RTN","RCRJRBDT",119,0)
 N RCARR,RCX,RCD,RCDATA,RCREC,X
"RTN","RCRJRBDT",120,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",121,0)
 D SETLINE($E(SPACE,1,32)_"Bad Debt Report")
"RTN","RCRJRBDT",122,0)
 D SETLINE($E(SPACE,1,13)_"Allowance for Bad Debt and Contract Adjustment Report")
"RTN","RCRJRBDT",123,0)
 D SETLINE($E(SPACE,1,27)_"for the month of "_DATEREPT)
"RTN","RCRJRBDT",124,0)
 I $D(RCRJFXSV) D
"RTN","RCRJRBDT",125,0)
 . D SETLINE(" ")
"RTN","RCRJRBDT",126,0)
 . I $E(RCRJFXSV,1,2)="SV" D SETLINE($E(SPACE,1,13)_"***** Report sent to FMS, doc id: "_RCRJFXSV_" *****") Q
"RTN","RCRJRBDT",127,0)
 . ;  report errored out or did not get generated to fms
"RTN","RCRJRBDT",128,0)
 . D SETLINE($E(SPACE,1,10)_"***** NOTICE:  Report was NOT sent to FMS, the message is *****")
"RTN","RCRJRBDT",129,0)
 . D SETLINE($E(SPACE,1,10)_"***** "_RCRJFXSV_" *****")
"RTN","RCRJRBDT",130,0)
 ;
"RTN","RCRJRBDT",131,0)
 ;  show mccf
"RTN","RCRJRBDT",132,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",133,0)
 D SETLINE($E(SPACE,1,26)_"Medical Care Collection Fund")
"RTN","RCRJRBDT",134,0)
 D SETLINE($E(SPACE,1,20)_" Funds 528701; 528703; 528704; and 528709")
"RTN","RCRJRBDT",135,0)
 D SETLINE($E(SPACE,1,26)_"----------------------------")
"RTN","RCRJRBDT",136,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",137,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",138,0)
 D SETLINE($E(SPACE,1,57)_"Contract           EOM")
"RTN","RCRJRBDT",139,0)
 D SETLINE("FUND - SGL Account     Collection%     Write-Off%     Adjustment%     Allowance")
"RTN","RCRJRBDT",140,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",141,0)
 ;
"RTN","RCRJRBDT",142,0)
 ; List the fund/SGLs as:
"RTN","RCRJRBDT",143,0)
 ;   Order     SGL in file      Fund - SGL on report
"RTN","RCRJRBDT",144,0)
 ;   ===============================================
"RTN","RCRJRBDT",145,0)
 ;     1            1319.3             528701 - 1319
"RTN","RCRJRBDT",146,0)
 ;     2              1319             528703 - 1319
"RTN","RCRJRBDT",147,0)
 ;     3            1319.4             528704 - 1319
"RTN","RCRJRBDT",148,0)
 ;     4              1339             528704 - 1339
"RTN","RCRJRBDT",149,0)
 ;     5              133N             528704 - 133N
"RTN","RCRJRBDT",150,0)
 ;     6              1338             528704 - 1338
"RTN","RCRJRBDT",151,0)
 ;     7            1319.2             528709 - 1319
"RTN","RCRJRBDT",152,0)
 ;
"RTN","RCRJRBDT",153,0)
 S RCARR(1)="1319.3^528701 - 1319"
"RTN","RCRJRBDT",154,0)
 S RCARR(2)="1319^528703 - 1319"
"RTN","RCRJRBDT",155,0)
 S RCARR(3)="1319.4^528704 - 1319"
"RTN","RCRJRBDT",156,0)
 S RCARR(4)="1339^528704 - 1339"
"RTN","RCRJRBDT",157,0)
 S RCARR(5)="133N^528704 - 133N"
"RTN","RCRJRBDT",158,0)
 S RCARR(6)="1338^528704 - 1338"
"RTN","RCRJRBDT",159,0)
 S RCARR(7)="1319.2^528709 - 1319"
"RTN","RCRJRBDT",160,0)
 ;
"RTN","RCRJRBDT",161,0)
 S RCX="" F  S RCX=$O(RCARR(RCX)) Q:RCX=""  S RCD=RCARR(RCX) D
"RTN","RCRJRBDT",162,0)
 .S RCDATA=$G(^RC(348.1,+$O(^RC(348.1,"B",$P(RCD,"^"),0)),0))
"RTN","RCRJRBDT",163,0)
 .Q:RCDATA=""
"RTN","RCRJRBDT",164,0)
 .S RCREC=$P(RCD,"^",2)_$J($P(RCDATA,"^",2),21,2)
"RTN","RCRJRBDT",165,0)
 .S RCREC=RCREC_$J($P(RCDATA,"^",3),15,2)
"RTN","RCRJRBDT",166,0)
 .S RCREC=RCREC_$J($P(RCDATA,"^",4),16,2)
"RTN","RCRJRBDT",167,0)
 .S X=+$P(RCDATA,"^",8)
"RTN","RCRJRBDT",168,0)
 .S X=$FN(X,",")_$S(X[".":"",1:".")_$E("00",$L($P(X,".",2))+1,2)
"RTN","RCRJRBDT",169,0)
 .S RCREC=RCREC_$J(X,14)
"RTN","RCRJRBDT",170,0)
 .D SETLINE(RCREC)
"RTN","RCRJRBDT",171,0)
 ;
"RTN","RCRJRBDT",172,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",173,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",174,0)
 D SETLINE("SGL Definitions")
"RTN","RCRJRBDT",175,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",176,0)
 D SETLINE("1319 - Allowance for Bad Debt")
"RTN","RCRJRBDT",177,0)
 D SETLINE("1338 - Allowance for Tort Feasors")
"RTN","RCRJRBDT",178,0)
 D SETLINE("1339 - Allowance for Contract Adjustments pre-MRA (Medicare Remittance Advice)")
"RTN","RCRJRBDT",179,0)
 D SETLINE("133N - Allowance for Contract Adjustments post-MRA")
"RTN","RCRJRBDT",180,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",181,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",182,0)
 D SETLINE("Only members in the facility's local RC AR DATA COLLECTOR mail group")
"RTN","RCRJRBDT",183,0)
 D SETLINE("will receive this report.")
"RTN","RCRJRBDT",184,0)
 Q
"RTN","RCRJRBDT",185,0)
 ;
"RTN","RCRJRBDT",186,0)
SETLINE(DATA) ;  build the line for the report
"RTN","RCRJRBDT",187,0)
 S LINE=LINE+1,^TMP($J,"RCRJRCORMM",LINE)=DATA
"RTN","RCRJRBDT",188,0)
 Q
"RTN","RCRJRCO")
0^6^B61342220
"RTN","RCRJRCO",1,0)
RCRJRCO ;WISC/RFJ-control collection of monthly data ;1 Nov 97
"RTN","RCRJRCO",2,0)
 ;;4.5;Accounts Receivable;**96,106,101,103,147,156,169,170,174,191,203,239**;Mar 20, 1995
"RTN","RCRJRCO",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRCO",4,0)
 ;  called by menu option to regenerate monthly data
"RTN","RCRJRCO",5,0)
 N %,%DT,%X,%Y,DA347,DIQ2,DATEMOYR,FMSDOCNO,GECSDATA,LASTMONT,RCRJFAR1,RCRJFAR2,RCRJFBDR,RCRJFOIG,RCRJFSV,RCRJFTR,RCRJFWR,X,Y,ZTSK,RCNOHSIF
"RTN","RCRJRCO",6,0)
 ;
"RTN","RCRJRCO",7,0)
 S RCNOHSIF=$$NOHSIF() ; HSIF is disabed
"RTN","RCRJRCO",8,0)
 ;
"RTN","RCRJRCO",9,0)
 W !!,"This option will re-run the AR Data Collector, extracting data from"
"RTN","RCRJRCO",10,0)
 W !,"the AR database and sending the data to the National Database and FMS."
"RTN","RCRJRCO",11,0)
 W !,"It will also re-generate the Bad Debt Report and the OIG Extract."
"RTN","RCRJRCO",12,0)
 W !!,"This option will perform the following tasks:",!
"RTN","RCRJRCO",13,0)
 W !,"  1.  Re-send the data to the National Database.  The data will only be"
"RTN","RCRJRCO",14,0)
 W !,"      re-sent if you answer YES to the prompt.  The data will only be"
"RTN","RCRJRCO",15,0)
 W !,"      accepted in the NDB if the month-year has not been closed (in the NDB)."
"RTN","RCRJRCO",16,0)
 W !,"  2.  Re-send the data to FMS on the SV and WR documents.  The data"
"RTN","RCRJRCO",17,0)
 W !,"      will only be re-sent if it has not been previously accepted by FMS."
"RTN","RCRJRCO",18,0)
 W !,"  3.  Re-send the OIG Extract.  If the selected month is the end of the"
"RTN","RCRJRCO",19,0)
 W !,"      quarter (December, March, June, or September), the OIG Extract can"
"RTN","RCRJRCO",20,0)
 W !,"      be re-generated."
"RTN","RCRJRCO",21,0)
 ;
"RTN","RCRJRCO",22,0)
 ;  do not allow dates in future to be selected
"RTN","RCRJRCO",23,0)
 ;S (LASTMONT,DATEMOYR)=$$PREVMONT^RCRJRBD(DT)
"RTN","RCRJRCO",24,0)
 I $E(DT,6,7)'>$E($$LDATE^RCRJR(DT),6,7) S (LASTMONT,DATEMOYR)=$$PREVMONT^RCRJRBD(DT)
"RTN","RCRJRCO",25,0)
 I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S (LASTMONT,DATEMOYR)=$E($$LDATE^RCRJR(DT),1,5)_"00"
"RTN","RCRJRCO",26,0)
 S %DT(0)=-LASTMONT
"RTN","RCRJRCO",27,0)
 S %DT("A")="Retransmit AR Data Collector data for Month/Year: "
"RTN","RCRJRCO",28,0)
 S %DT="AEMP"
"RTN","RCRJRCO",29,0)
 W ! D ^%DT
"RTN","RCRJRCO",30,0)
 I Y<1 Q
"RTN","RCRJRCO",31,0)
 ;
"RTN","RCRJRCO",32,0)
 S (DATEMOYR,Y)=$E(Y,1,5)_"00" D DD^%DT
"RTN","RCRJRCO",33,0)
 ;
"RTN","RCRJRCO",34,0)
 ;  try and find SV document to see if its accepted
"RTN","RCRJRCO",35,0)
 K GECSDATA
"RTN","RCRJRCO",36,0)
 D KEYLOOK^GECSSGET("SV-"_DATEMOYR,1)
"RTN","RCRJRCO",37,0)
 I $G(GECSDATA) D  Q:'$G(GECSDATA)
"RTN","RCRJRCO",38,0)
 .   W !!,"The SV document has been transmitted to fms, document number: "_GECSDATA("2100.1",GECSDATA,".01","E")
"RTN","RCRJRCO",39,0)
 .   I $E($G(GECSDATA(2100.1,GECSDATA,3,"E")))="A" D  Q
"RTN","RCRJRCO",40,0)
 .   .   W !,"The SV document has been ACCEPTED in FMS and will not be resent."
"RTN","RCRJRCO",41,0)
 .   .   S RCRJFSV=1
"RTN","RCRJRCO",42,0)
 .   I $E($G(GECSDATA(2100.1,GECSDATA,3,"E")))="R" D  Q
"RTN","RCRJRCO",43,0)
 .   .   W !,"The SV document has REJECTED and will be RETRANSMITTED."
"RTN","RCRJRCO",44,0)
 .   W !,"The SV document has NOT been ACCEPTED in FMS."
"RTN","RCRJRCO",45,0)
 .   S %=$$ASKTRANS I %<0 K GECSDATA Q
"RTN","RCRJRCO",46,0)
 .   I %'=1 S RCRJFSV=1  ;do not send document
"RTN","RCRJRCO",47,0)
 ;
"RTN","RCRJRCO",48,0)
 ;  try and find WR document to see if its accepted
"RTN","RCRJRCO",49,0)
 K GECSDATA
"RTN","RCRJRCO",50,0)
 D KEYLOOK^GECSSGET("WR-"_DATEMOYR,1)
"RTN","RCRJRCO",51,0)
 I $G(GECSDATA) D  Q:'$G(GECSDATA)
"RTN","RCRJRCO",52,0)
 .   W !!,"The WR document has been transmitted to fms, document number: "_GECSDATA("2100.1",GECSDATA,".01","E")
"RTN","RCRJRCO",53,0)
 .   I $E($G(GECSDATA(2100.1,GECSDATA,3,"E")))="A" D  Q
"RTN","RCRJRCO",54,0)
 .   .   W !,"The WR document has been ACCEPTED in FMS and will not be resent."
"RTN","RCRJRCO",55,0)
 .   .   S RCRJFWR=1
"RTN","RCRJRCO",56,0)
 .   I $E($G(GECSDATA(2100.1,GECSDATA,3,"E")))="R" D  Q
"RTN","RCRJRCO",57,0)
 .   .   W !,"The WR document has REJECTED and will be RETRANSMITTED."
"RTN","RCRJRCO",58,0)
 .   W !,"The WR document has NOT been ACCEPTED in FMS."
"RTN","RCRJRCO",59,0)
 .   S %=$$ASKTRANS I %<0 K GECSDATA Q
"RTN","RCRJRCO",60,0)
 .   I %'=1 S RCRJFWR=1  ;do not send document
"RTN","RCRJRCO",61,0)
 ;
"RTN","RCRJRCO",62,0)
 ;  try and find the Bad Debt SV document to see if its accepted
"RTN","RCRJRCO",63,0)
 K GECSDATA
"RTN","RCRJRCO",64,0)
 D KEYLOOK^GECSSGET("SV-"_$E(DATEMOYR,1,5)_"01",1)
"RTN","RCRJRCO",65,0)
 I $G(GECSDATA) D  Q:'$G(GECSDATA)
"RTN","RCRJRCO",66,0)
 .   W !!,"The Bad Debt SV document has been transmitted to fms, document number: "_GECSDATA("2100.1",GECSDATA,".01","E")
"RTN","RCRJRCO",67,0)
 .   I $E($G(GECSDATA(2100.1,GECSDATA,3,"E")))="A" D  Q
"RTN","RCRJRCO",68,0)
 .   .   W !,"The Bad Debt SV document has been ACCEPTED in FMS and will not be resent."
"RTN","RCRJRCO",69,0)
 .   .   S RCRJFBDR=1
"RTN","RCRJRCO",70,0)
 .   I $E($G(GECSDATA(2100.1,GECSDATA,3,"E")))="R" D  Q
"RTN","RCRJRCO",71,0)
 .   .   W !,"The Bad Debt SV document has REJECTED and will be RETRANSMITTED."
"RTN","RCRJRCO",72,0)
 .   W !,"The Bad Debt SV document has NOT been ACCEPTED in FMS."
"RTN","RCRJRCO",73,0)
 .   S %=$$ASKTRANS I %<0 K GECSDATA Q
"RTN","RCRJRCO",74,0)
 .   I %'=1 S RCRJFBDR=1  ;do not send document
"RTN","RCRJRCO",75,0)
 ;
"RTN","RCRJRCO",76,0)
 ;  try and find TR document to see if its accepted
"RTN","RCRJRCO",77,0)
 K GECSDATA
"RTN","RCRJRCO",78,0)
 I 'RCNOHSIF D KEYLOOK^GECSSGET("TR-"_DATEMOYR,1)
"RTN","RCRJRCO",79,0)
 I $G(GECSDATA) D  Q:'$G(GECSDATA)
"RTN","RCRJRCO",80,0)
 .   W !!,"The TR document has been transmitted to fms, document number: "_GECSDATA("2100.1",GECSDATA,".01","E")
"RTN","RCRJRCO",81,0)
 .   I $E($G(GECSDATA(2100.1,GECSDATA,3,"E")))="A" D  Q
"RTN","RCRJRCO",82,0)
 .   .   W !,"The TR document has been ACCEPTED in FMS and will not be resent."
"RTN","RCRJRCO",83,0)
 .   .   S RCRJFTR=1
"RTN","RCRJRCO",84,0)
 .   I $E($G(GECSDATA(2100.1,GECSDATA,3,"E")))="R" D  Q
"RTN","RCRJRCO",85,0)
 .   .   W !,"The TR document has REJECTED and will be RETRANSMITTED."
"RTN","RCRJRCO",86,0)
 .   W !,"The TR document has NOT been ACCEPTED in FMS."
"RTN","RCRJRCO",87,0)
 .   S %=$$ASKTRANS I %<0 K GECSDATA Q
"RTN","RCRJRCO",88,0)
 .   I %'=1 S RCRJFTR=1  ;do not send document
"RTN","RCRJRCO",89,0)
 ;
"RTN","RCRJRCO",90,0)
 I RCNOHSIF S RCRJFTR=1  ;do not send TR if disabled
"RTN","RCRJRCO",91,0)
 ;
"RTN","RCRJRCO",92,0)
 ;  ask to resend AR1 NDB data
"RTN","RCRJRCO",93,0)
 S %=$$ASKNDB("AR1") I %<0 Q
"RTN","RCRJRCO",94,0)
 I %'=1 S RCRJFAR1=1  ;do not send to ndb
"RTN","RCRJRCO",95,0)
 ;
"RTN","RCRJRCO",96,0)
 ;  ask to resend AR2 NDB data
"RTN","RCRJRCO",97,0)
 S %=$$ASKNDB("AR2") I %<0 Q
"RTN","RCRJRCO",98,0)
 I %'=1 S RCRJFAR2=1  ;do not send to ndb
"RTN","RCRJRCO",99,0)
 ;
"RTN","RCRJRCO",100,0)
 ;  ask to resend the OIG extract
"RTN","RCRJRCO",101,0)
 S RCRJFOIG=1  ;  resend the OIG extract
"RTN","RCRJRCO",102,0)
 D  I %<0 Q
"RTN","RCRJRCO",103,0)
 .   S %=$$ASKOIG I %<0 Q
"RTN","RCRJRCO",104,0)
 .   I %=1 S RCRJFOIG=0  ;re-send oig extract
"RTN","RCRJRCO",105,0)
 ;
"RTN","RCRJRCO",106,0)
 ;
"RTN","RCRJRCO",107,0)
 I $G(RCRJFAR1),$G(RCRJFAR2),$G(RCRJFSV),$G(RCRJFWR),$G(RCRJFTR),$G(RCRJFBDR),$G(RCRJFOIG) W !!,"No reports have been selected for retransmission." Q
"RTN","RCRJRCO",108,0)
 ;
"RTN","RCRJRCO",109,0)
 W !!,"This option will retransmit the following monthly reports:"
"RTN","RCRJRCO",110,0)
 I '$G(RCRJFAR1) W !,"  AR1 to the NDB."
"RTN","RCRJRCO",111,0)
 I '$G(RCRJFAR2) W !,"  AR2 to the NDB."
"RTN","RCRJRCO",112,0)
 I '$G(RCRJFSV) W !,"  SV document to FMS."
"RTN","RCRJRCO",113,0)
 I '$G(RCRJFWR) W !,"  WR document to FMS."
"RTN","RCRJRCO",114,0)
 I '$G(RCRJFTR) W !,"  TR document to FMS."
"RTN","RCRJRCO",115,0)
 I '$G(RCRJFBDR) W !,"  rebuild the Bad Debt Report."
"RTN","RCRJRCO",116,0)
 I '$G(RCRJFOIG) W !,"  resend the OIG Extract."
"RTN","RCRJRCO",117,0)
 ;
"RTN","RCRJRCO",118,0)
 I $$ASKOKAY(DATEMOYR)=1 D
"RTN","RCRJRCO",119,0)
 .   W !!,"This will be queued to run in the background.  When it completes,"
"RTN","RCRJRCO",120,0)
 .   W !,"a mail message will be sent to the mail group RC AR DATA COLLECTOR."
"RTN","RCRJRCO",121,0)
 .   S ZTDESC="AR Data Collector",ZTRTN="DQ^RCRJRCO",ZTDTH=$H,ZTIO=""
"RTN","RCRJRCO",122,0)
 .   S ZTSAVE("DATEMOYR")="",ZTSAVE("RCRJF*")="",ZTSAVE("ZTREQ")="@"
"RTN","RCRJRCO",123,0)
 .   D ^%ZTLOAD
"RTN","RCRJRCO",124,0)
 .   W !!,"Queued to run in task ",$G(ZTSK)
"RTN","RCRJRCO",125,0)
 Q
"RTN","RCRJRCO",126,0)
 ;
"RTN","RCRJRCO",127,0)
 ;
"RTN","RCRJRCO",128,0)
DQ ;  start collection of monthly data
"RTN","RCRJRCO",129,0)
 ;  datemoyr is for the month and year to run collector (ex 2971000)
"RTN","RCRJRCO",130,0)
 ;  rcrjfsv and rcrjfwr are flags to stop the sv and wr documents
"RTN","RCRJRCO",131,0)
 ;  rcrjfbdr is a flag to stop the rebuild of the bad debt report
"RTN","RCRJRCO",132,0)
 N %,DATEBEG,DATEEND,PRCASITE,X
"RTN","RCRJRCO",133,0)
 ;
"RTN","RCRJRCO",134,0)
 I $$NOHSIF() S RCRJFTR=1 ; disable TR to FMS
"RTN","RCRJRCO",135,0)
 ;  get last month
"RTN","RCRJRCO",136,0)
 I $G(DATEMOYR) S DATEEND=$$LDATE^RCRJR(DATEMOYR)
"RTN","RCRJRCO",137,0)
 I '$G(DATEMOYR) S DATEEND=$$LDATE^RCRJR(DT),DATEMOYR=$E(DATEEND,1,5)_"00"
"RTN","RCRJRCO",138,0)
 ;
"RTN","RCRJRCO",139,0)
 ;S DATEBEG=$$LDATE^RCRJR($$PREVMONT^RCRJRBD(DATEEND))+1
"RTN","RCRJRCO",140,0)
 S DATEBEG=$S(+$E(DATEEND,2,5)=309:$E(DATEEND,1,5)_"01",1:$$LDATE^RCRJR($$PREVMONT^RCRJRBD(DATEEND))+1)
"RTN","RCRJRCO",141,0)
 ;S DATEEND=$P("31^28^31^30^31^30^31^31^30^31^30^31","^",+$E(DATEMOYR,4,5)) I DATEEND=28,((17+$E(DATEMOYR))_$E(DATEMOYR,2,3))#4=0 S DATEEND=29
"RTN","RCRJRCO",142,0)
 ;S DATEEND=$$LDATE^RCRJR(DT)
"RTN","RCRJRCO",143,0)
 ;S DATEEND=$E(DATEMOYR,1,5)_DATEEND
"RTN","RCRJRCO",144,0)
 ;
"RTN","RCRJRCO",145,0)
 S PRCASITE=$$SITE^RCMSITE
"RTN","RCRJRCO",146,0)
 ;
"RTN","RCRJRCO",147,0)
 ;  queue the AR2 data collector to run in the background
"RTN","RCRJRCO",148,0)
 I '$G(RCRJFAR2) D
"RTN","RCRJRCO",149,0)
 .   S ZTDESC="AR2 Data Collector",ZTRTN="DQ^RCRJRCO2",ZTDTH=$H,ZTIO=""
"RTN","RCRJRCO",150,0)
 .   S ZTSAVE("PRCASITE")="",ZTSAVE("DATEBEG")="",ZTSAVE("DATEEND")="",ZTSAVE("ZTREQ")="@"
"RTN","RCRJRCO",151,0)
 .   D ^%ZTLOAD
"RTN","RCRJRCO",152,0)
 ;
"RTN","RCRJRCO",153,0)
 ;  no point in running data collector, nothing being sent
"RTN","RCRJRCO",154,0)
 I $G(RCRJFAR1),$G(RCRJFSV),$G(RCRJFWR),$G(RCRJFTR),$G(RCRJFBDR),$G(RCRJFOIG) Q
"RTN","RCRJRCO",155,0)
 ;
"RTN","RCRJRCO",156,0)
 ;  run the AR1 data collector
"RTN","RCRJRCO",157,0)
 D START^RCRJRCOL(PRCASITE,DATEBEG,DATEEND)
"RTN","RCRJRCO",158,0)
 Q
"RTN","RCRJRCO",159,0)
 ;
"RTN","RCRJRCO",160,0)
 ;
"RTN","RCRJRCO",161,0)
ASKNDB(REPORT) ;  ask to resend to national database
"RTN","RCRJRCO",162,0)
 ;  report = AR1 or AR2
"RTN","RCRJRCO",163,0)
 ;  1 is yes, otherwise no
"RTN","RCRJRCO",164,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCRJRCO",165,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCRJRCO",166,0)
 S DIR("A")="  Do you want to resend the "_REPORT_" data to the National Database"
"RTN","RCRJRCO",167,0)
 W ! D ^DIR
"RTN","RCRJRCO",168,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCRJRCO",169,0)
 Q Y
"RTN","RCRJRCO",170,0)
 ;
"RTN","RCRJRCO",171,0)
 ;
"RTN","RCRJRCO",172,0)
ASKBDR() ;  ask to rebuild the bad debt report
"RTN","RCRJRCO",173,0)
 ;  1 is yes, otherwise no
"RTN","RCRJRCO",174,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCRJRCO",175,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCRJRCO",176,0)
 S DIR("A")="  Do you want to rebuild the Bad Debt Report"
"RTN","RCRJRCO",177,0)
 W ! D ^DIR
"RTN","RCRJRCO",178,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCRJRCO",179,0)
 Q Y
"RTN","RCRJRCO",180,0)
 ;
"RTN","RCRJRCO",181,0)
 ;
"RTN","RCRJRCO",182,0)
ASKOKAY(DATEMOYR) ;  ask if its okay
"RTN","RCRJRCO",183,0)
 ;  1 is yes, otherwise no
"RTN","RCRJRCO",184,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCRJRCO",185,0)
 S Y=DATEMOYR D DD^%DT
"RTN","RCRJRCO",186,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCRJRCO",187,0)
 S DIR("A")="  Are you SURE you want to regenerate the data for "_Y
"RTN","RCRJRCO",188,0)
 W ! D ^DIR
"RTN","RCRJRCO",189,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCRJRCO",190,0)
 Q Y
"RTN","RCRJRCO",191,0)
 ;
"RTN","RCRJRCO",192,0)
 ;
"RTN","RCRJRCO",193,0)
ASKTRANS() ;  ask if its okay to retransmit document to FMS
"RTN","RCRJRCO",194,0)
 ;  1 is yes, otherwise no
"RTN","RCRJRCO",195,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCRJRCO",196,0)
 S Y=DATEMOYR D DD^%DT
"RTN","RCRJRCO",197,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCRJRCO",198,0)
 S DIR("A")="  Do you want to regenerate and retransmit this document to FMS"
"RTN","RCRJRCO",199,0)
 D ^DIR
"RTN","RCRJRCO",200,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCRJRCO",201,0)
 Q Y
"RTN","RCRJRCO",202,0)
 ;
"RTN","RCRJRCO",203,0)
 ;
"RTN","RCRJRCO",204,0)
ASKOIG() ;  ask to resend to oig
"RTN","RCRJRCO",205,0)
 ;  1 is yes, otherwise no
"RTN","RCRJRCO",206,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCRJRCO",207,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCRJRCO",208,0)
 S DIR("A")="  Do you want to resend the data to the OIG"
"RTN","RCRJRCO",209,0)
 W ! D ^DIR
"RTN","RCRJRCO",210,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCRJRCO",211,0)
 Q Y
"RTN","RCRJRCO",212,0)
 ;
"RTN","RCRJRCO",213,0)
 ;The Date when AAC is ready for Point Accounts:
"RTN","RCRJRCO",214,0)
PAEFFDT() Q 3031001 ;10/1/2003
"RTN","RCRJRCO",215,0)
 ;
"RTN","RCRJRCO",216,0)
 ; The Data Collector cannot send 5287 Point Accounts before the Effective Date
"RTN","RCRJRCO",217,0)
 ; This function adjusts the fund depending on the current date
"RTN","RCRJRCO",218,0)
ADJFUND(RCFUND) ;
"RTN","RCRJRCO",219,0)
 I DT'<$$PAEFFDT() Q RCFUND ; Do nothing after the effective date
"RTN","RCRJRCO",220,0)
 I $E(RCFUND,1,4)=5287 Q 5287 ; No point accounts before the effective date
"RTN","RCRJRCO",221,0)
 Q RCFUND
"RTN","RCRJRCO",222,0)
 ;
"RTN","RCRJRCO",223,0)
 ; The function returns 1 if MCCF-HSIF transfer is disabled
"RTN","RCRJRCO",224,0)
NOHSIF() ;
"RTN","RCRJRCO",225,0)
 Q (DT'<$$PAEFFDT())  ; Disabled after the AAC is ready.
"RTN","RCRJRCOC")
0^7^B56544530
"RTN","RCRJRCOC",1,0)
RCRJRCOC ;WISC/RFJ/BGJ-count current receivables ;1 Aug 00
"RTN","RCRJRCOC",2,0)
 ;;4.5;Accounts Receivable;**156,170,182,203,220,138,239**;Mar 20, 1995
"RTN","RCRJRCOC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRCOC",4,0)
 ; IA 4385 for call to $$MRATYPE^IBCEMU2
"RTN","RCRJRCOC",5,0)
 Q
"RTN","RCRJRCOC",6,0)
 ;
"RTN","RCRJRCOC",7,0)
 ;
"RTN","RCRJRCOC",8,0)
CURRENT(RCBILLDA,RCVALUE) ;  count current bills balance
"RTN","RCRJRCOC",9,0)
 ;  rcvalue = prin ^ int ^ admin ^ mf ^ cc
"RTN","RCRJRCOC",10,0)
 ;
"RTN","RCRJRCOC",11,0)
 N %,RCFUND,RCRSC,RCTOHSIF,RCTOMCCF,SGL,TYPE,MRATYPE,ARACTDT,CATEGORY
"RTN","RCRJRCOC",12,0)
 ;
"RTN","RCRJRCOC",13,0)
 ;  calculate the rsc for the bill.  the rsc is only used for
"RTN","RCRJRCOC",14,0)
 ;  mccf bills
"RTN","RCRJRCOC",15,0)
 S RCRSC=""
"RTN","RCRJRCOC",16,0)
 I $$ACCK^PRCAACC(RCBILLDA) S RCRSC=$$CALCRSC^RCXFMSUR(RCBILLDA)
"RTN","RCRJRCOC",17,0)
 ;
"RTN","RCRJRCOC",18,0)
 ;  calculate the amount that goes to mccf and hsif
"RTN","RCRJRCOC",19,0)
 D MCCFHSIF(RCBILLDA,RCVALUE,RCRSC,DATEEND+1)
"RTN","RCRJRCOC",20,0)
 ;
"RTN","RCRJRCOC",21,0)
 ;  store the data for the ndb, if a 0 is returned by the function,
"RTN","RCRJRCOC",22,0)
 ;  then the bill has already been counted as a current receivable,quit
"RTN","RCRJRCOC",23,0)
 I '$$NDBSTORE(RCBILLDA,RCVALUE,1) Q
"RTN","RCRJRCOC",24,0)
 ;
"RTN","RCRJRCOC",25,0)
 ;  store results for FMS SV document for accrued bills only
"RTN","RCRJRCOC",26,0)
 ;  do not include prepayments (26)
"RTN","RCRJRCOC",27,0)
 I $$ACCK^PRCAACC(RCBILLDA),$P($G(^PRCA(430,RCBILLDA,0)),"^",2)'=26 D
"RTN","RCRJRCOC",28,0)
 .   ;  get the bills fund and category
"RTN","RCRJRCOC",29,0)
 .   S RCFUND=$$GETFUNDB^RCXFMSUF(RCBILLDA)
"RTN","RCRJRCOC",30,0)
 .   S RCFUND=$$ADJFUND^RCRJRCO(RCFUND) ; may remove the line after 10/1/03
"RTN","RCRJRCOC",31,0)
 .   S CATEGORY=+$P($G(^PRCA(430,RCBILLDA,0)),"^",2)
"RTN","RCRJRCOC",32,0)
 .   ;
"RTN","RCRJRCOC",33,0)
 .   ;  ----- this code is used to set up the SV code sheet -----
"RTN","RCRJRCOC",34,0)
 .   S TYPE=21
"RTN","RCRJRCOC",35,0)
 .   ;  special type for tort feasor
"RTN","RCRJRCOC",36,0)
 .   I $E(RCRSC,1,2)=86 S TYPE="2A"
"RTN","RCRJRCOC",37,0)
 .   ;
"RTN","RCRJRCOC",38,0)
 .   ;  Get ARACTDT=AR Date Active for bill
"RTN","RCRJRCOC",39,0)
 .   S ARACTDT=+$P($P($G(^PRCA(430,RCBILLDA,6)),"^",21),".")
"RTN","RCRJRCOC",40,0)
 .   ;  determine Receivable Type: 1=pre-MRA, 2=post-MRA Medicre, 3=post-MRA non-Medicare
"RTN","RCRJRCOC",41,0)
 .   ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRCOC",42,0)
 .   S MRATYPE=$$MRATYPE^IBCEMU2(RCBILLDA,ARACTDT)
"RTN","RCRJRCOC",43,0)
 .   ;  set TYPE to 2F for post-MRA Medicare bills or to 2L for
"RTN","RCRJRCOC",44,0)
 .   ;  post-MRA non-Medicare bills (for RHI receivables only)
"RTN","RCRJRCOC",45,0)
 .   I $E(RCRSC,1,2)=85,MRATYPE>1 S TYPE=$S(MRATYPE=2:"2F",1:"2L")
"RTN","RCRJRCOC",46,0)
 .   ;
"RTN","RCRJRCOC",47,0)
 .   ;  store dollars to mccf and hsif
"RTN","RCRJRCOC",48,0)
 .   I RCTOMCCF S ^TMP($J,"RCRJRCOLSV",TYPE,RCFUND,RCRSC)=$G(^TMP($J,"RCRJRCOLSV",TYPE,RCFUND,RCRSC))+RCTOMCCF
"RTN","RCRJRCOC",49,0)
 .   I RCTOHSIF S ^TMP($J,"RCRJRCOLSV",21,5358.1,$S(RCRSC="8BZZ":"8B1Z",1:"8C1Z"))=$G(^TMP($J,"RCRJRCOLSV",21,5358.1,$S(RCRSC="8BZZ":"8B1Z",1:"8C1Z")))+RCTOHSIF
"RTN","RCRJRCOC",50,0)
 .   ;
"RTN","RCRJRCOC",51,0)
 .   ;  ----- this code is used to build the user report
"RTN","RCRJRCOC",52,0)
 .   S %=+$P($P($G(^PRCA(430,RCBILLDA,6)),"^",21),".")
"RTN","RCRJRCOC",53,0)
 .   S ^TMP($J,"RCRJRCOLREPORT",%,RCBILLDA)=$P(RCVALUE,"^")_"^"_($P(RCVALUE,"^",2)+$P(RCVALUE,"^",3)+$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5))_"^SV"_TYPE
"RTN","RCRJRCOC",54,0)
 .   ;
"RTN","RCRJRCOC",55,0)
 .   ;  ----- this code is used to build the OIG extract, piece 3 = GL acct
"RTN","RCRJRCOC",56,0)
 .   S ^TMP($J,"RCRJROIG",RCBILLDA)=$P(RCVALUE,"^")_"^"_($P(RCVALUE,"^",2)+$P(RCVALUE,"^",3)+$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5))_"^"_$S(TYPE=21:1315,1:1333)
"RTN","RCRJRCOC",57,0)
 .   ;
"RTN","RCRJRCOC",58,0)
 .   ;  ----- this code is used to set up medicare supplemental SVs
"RTN","RCRJRCOC",59,0)
 .   S %=$G(^PRCA(430,RCBILLDA,13))
"RTN","RCRJRCOC",60,0)
 .   ;  medicare contract adjustment field 131 for bills activated in AR during the month the ARDC is running
"RTN","RCRJRCOC",61,0)
 .   I $P(%,"^",1),ARACTDT'<DATEBEG D  ;
"RTN","RCRJRCOC",62,0)
 .   .   S ^TMP($J,"RCRJRCOLSV",17)=$G(^TMP($J,"RCRJRCOLSV",17))+$P(%,"^",1)
"RTN","RCRJRCOC",63,0)
 .   .   S ^TMP($J,"RCRJRCOLSV",17,RCFUND,RCRSC)=$G(^TMP($J,"RCRJRCOLSV",17,RCFUND,RCRSC))+$P(%,"^",1)
"RTN","RCRJRCOC",64,0)
 .   ;  medicare unreimbursable medicare expense field 132 for bills activated in AR during the month the ARDC is running
"RTN","RCRJRCOC",65,0)
 .   I $P(%,"^",2),ARACTDT'<DATEBEG D  ;
"RTN","RCRJRCOC",66,0)
 .   .   S ^TMP($J,"RCRJRCOLSV",18)=$G(^TMP($J,"RCRJRCOLSV",18))+$P(%,"^",2)
"RTN","RCRJRCOC",67,0)
 .   .   S ^TMP($J,"RCRJRCOLSV",18,RCFUND,RCRSC)=$G(^TMP($J,"RCRJRCOLSV",18,RCFUND,RCRSC))+$P(%,"^",2)
"RTN","RCRJRCOC",68,0)
 .   ;
"RTN","RCRJRCOC",69,0)
 .   ;  ----- this code is used to set up the bad debt report -----
"RTN","RCRJRCOC",70,0)
 .   S SGL=$$BDRSGL^RCRJRBD(CATEGORY,RCFUND,MRATYPE)
"RTN","RCRJRCOC",71,0)
 .   ;  store dollars to mccf and hsif.  both are sgl 1319 so 1319.1 is
"RTN","RCRJRCOC",72,0)
 .   ;  used to put hsif in a subset of 1319
"RTN","RCRJRCOC",73,0)
 .   I RCTOMCCF S ^TMP($J,"RCRJRBD",SGL)=$G(^TMP($J,"RCRJRBD",SGL))+RCTOMCCF
"RTN","RCRJRCOC",74,0)
 .   I RCTOHSIF S ^TMP($J,"RCRJRBD",1319.1)=$G(^TMP($J,"RCRJRBD",1319.1))+RCTOHSIF
"RTN","RCRJRCOC",75,0)
 ;
"RTN","RCRJRCOC",76,0)
 ;  store the interest, admin, mf, cc on the SV code sheet
"RTN","RCRJRCOC",77,0)
 ;  interest (type P2; fund 1435; rsc 8047)
"RTN","RCRJRCOC",78,0)
 I $P(RCVALUE,"^",2) S ^TMP($J,"RCRJRCOLSV","P2",1435,8047)=$G(^TMP($J,"RCRJRCOLSV","P2",1435,8047))+$P(RCVALUE,"^",2)
"RTN","RCRJRCOC",79,0)
 ;  admin (type P2; fund 3220; rsc 8046)
"RTN","RCRJRCOC",80,0)
 I $P(RCVALUE,"^",3) S ^TMP($J,"RCRJRCOLSV","P2",3220,8046)=$G(^TMP($J,"RCRJRCOLSV","P2",3220,8046))+$P(RCVALUE,"^",3)
"RTN","RCRJRCOC",81,0)
 ;  mf + cc (type P2; fund 0869; rsc 8048)
"RTN","RCRJRCOC",82,0)
 S %=$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5)
"RTN","RCRJRCOC",83,0)
 I % S ^TMP($J,"RCRJRCOLSV","P2","0869",8048)=$G(^TMP($J,"RCRJRCOLSV","P2","0869",8048))+%
"RTN","RCRJRCOC",84,0)
 Q
"RTN","RCRJRCOC",85,0)
 ;
"RTN","RCRJRCOC",86,0)
 ;
"RTN","RCRJRCOC",87,0)
WRITEOFF(RCBILLDA,RCVALUE,RCRITER2) ;  count write offs
"RTN","RCRJRCOC",88,0)
 ;  rcvalue = prin ^ int ^ admin ^ mf ^ cc
"RTN","RCRJRCOC",89,0)
 ;  rcriter2 = write off criteria tracked in ndb
"RTN","RCRJRCOC",90,0)
 ;
"RTN","RCRJRCOC",91,0)
 N %,RCFUND,RCRSC,RCTOHSIF,RCTOMCCF,TYPE,MRATYPE,ARACTDT
"RTN","RCRJRCOC",92,0)
 ;
"RTN","RCRJRCOC",93,0)
 ;  calculate the rsc for the bill.  the rsc is only used for
"RTN","RCRJRCOC",94,0)
 ;  mccf bills
"RTN","RCRJRCOC",95,0)
 S RCRSC=""
"RTN","RCRJRCOC",96,0)
 I $$ACCK^PRCAACC(RCBILLDA) S RCRSC=$$CALCRSC^RCXFMSUR(RCBILLDA)
"RTN","RCRJRCOC",97,0)
 ;
"RTN","RCRJRCOC",98,0)
 ;  calculate the amount that goes to mccf and hsif
"RTN","RCRJRCOC",99,0)
 D MCCFHSIF(RCBILLDA,RCVALUE,RCRSC,DATEEND+1)
"RTN","RCRJRCOC",100,0)
 ;
"RTN","RCRJRCOC",101,0)
 ;  store the data for the ndb, if a 0 is returned by the function,
"RTN","RCRJRCOC",102,0)
 ;  then the bill has already been counted as a current receivable,quit
"RTN","RCRJRCOC",103,0)
 I '$$NDBSTORE(RCBILLDA,RCVALUE,RCRITER2) Q
"RTN","RCRJRCOC",104,0)
 ;
"RTN","RCRJRCOC",105,0)
 ;  store results for FMS WR document
"RTN","RCRJRCOC",106,0)
 ;  do not include prepayments (26)
"RTN","RCRJRCOC",107,0)
 I $$ACCK^PRCAACC(RCBILLDA),$P($G(^PRCA(430,RCBILLDA,0)),"^",2)'=26 D
"RTN","RCRJRCOC",108,0)
 .   ;  get the bills fund
"RTN","RCRJRCOC",109,0)
 .   S RCFUND=$$GETFUNDB^RCXFMSUF(RCBILLDA)
"RTN","RCRJRCOC",110,0)
 .   S RCFUND=$$ADJFUND^RCRJRCO(RCFUND) ; may remove the line after 10/1/03
"RTN","RCRJRCOC",111,0)
 .   ;
"RTN","RCRJRCOC",112,0)
 .   S TYPE=37
"RTN","RCRJRCOC",113,0)
 .   ;  special type for tort feasor
"RTN","RCRJRCOC",114,0)
 .   I $E(RCRSC,1,2)=86 S TYPE=39
"RTN","RCRJRCOC",115,0)
 .   S ARACTDT=+$P($P($G(^PRCA(430,RCBILLDA,6)),"^",21),".")
"RTN","RCRJRCOC",116,0)
 .   ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRCOC",117,0)
 .   S MRATYPE=$$MRATYPE^IBCEMU2(RCBILLDA,ARACTDT)
"RTN","RCRJRCOC",118,0)
 .   ;  for contract adjustments (criter2=20), the type is 38 for pre-
"RTN","RCRJRCOC",119,0)
 .   ;  MRA, 4N for post-MRA non-Medicare and 08 for post-MRA Medicare
"RTN","RCRJRCOC",120,0)
 .   I RCRITER2=20 S TYPE=$S(MRATYPE=1:38,MRATYPE=2:"08",1:"4N")
"RTN","RCRJRCOC",121,0)
 .   ;  store dollars to mccf and hsif
"RTN","RCRJRCOC",122,0)
 .   I RCTOMCCF S ^TMP($J,"RCRJRCOLWR",TYPE,RCFUND,RCRSC)=$G(^TMP($J,"RCRJRCOLWR",TYPE,RCFUND,RCRSC))+RCTOMCCF
"RTN","RCRJRCOC",123,0)
 .   I RCTOHSIF S ^TMP($J,"RCRJRCOLWR",TYPE,5358.1,$S(RCRSC="8BZZ":"8B1Z",1:"8C1Z"))=$G(^TMP($J,"RCRJRCOLWR",TYPE,5358.1,$S(RCRSC="8BZZ":"8B1Z",1:"8C1Z")))+RCTOHSIF
"RTN","RCRJRCOC",124,0)
 ;
"RTN","RCRJRCOC",125,0)
 ;  store the interest, admin, mf, cc on the WR code sheet
"RTN","RCRJRCOC",126,0)
 ;  interest (type P4; fund 1435; rsc 8047)
"RTN","RCRJRCOC",127,0)
 I $P(RCVALUE,"^",2) S ^TMP($J,"RCRJRCOLWR","P4",1435,8047)=$G(^TMP($J,"RCRJRCOLWR","P4",1435,8047))+$P(RCVALUE,"^",2)
"RTN","RCRJRCOC",128,0)
 ;  admin (type P4; fund 3220; rsc 8046)
"RTN","RCRJRCOC",129,0)
 I $P(RCVALUE,"^",3) S ^TMP($J,"RCRJRCOLWR","P4",3220,8046)=$G(^TMP($J,"RCRJRCOLWR","P4",3220,8046))+$P(RCVALUE,"^",3)
"RTN","RCRJRCOC",130,0)
 ;  mf + cc (type P4; fund 0869; rsc 8048)
"RTN","RCRJRCOC",131,0)
 S %=$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5)
"RTN","RCRJRCOC",132,0)
 I % S ^TMP($J,"RCRJRCOLWR","P4","0869",8048)=$G(^TMP($J,"RCRJRCOLWR","P4","0869",8048))+%
"RTN","RCRJRCOC",133,0)
 Q
"RTN","RCRJRCOC",134,0)
 ;
"RTN","RCRJRCOC",135,0)
 ;
"RTN","RCRJRCOC",136,0)
NDBSTORE(RCBILLDA,RCVALUE,RCRITER2) ;  store the data for the NDB
"RTN","RCRJRCOC",137,0)
 ;  returns a 1 if the bill has not been counted
"RTN","RCRJRCOC",138,0)
 ;  returns a 0 if the bill has been counted
"RTN","RCRJRCOC",139,0)
 N %,CRITERIA
"RTN","RCRJRCOC",140,0)
 ;
"RTN","RCRJRCOC",141,0)
 ;  this line of code will prevent duplicate counts if a sites cross
"RTN","RCRJRCOC",142,0)
 ;  references in file 430 (actdt and asdt) are duplicated (incorrect)
"RTN","RCRJRCOC",143,0)
 I RCRITER2<13,$D(^TMP($J,"RCRJRCOL","COUNT",RCBILLDA,RCRITER2)) Q 0
"RTN","RCRJRCOC",144,0)
 ;
"RTN","RCRJRCOC",145,0)
 ;  get a bills criteria 1,3,4,5
"RTN","RCRJRCOC",146,0)
 S CRITERIA=$G(^TMP($J,"RCRJRCOL","CRITERIA",RCBILLDA))
"RTN","RCRJRCOC",147,0)
 I CRITERIA="" S CRITERIA=$$CRITERIA^RCRJRCOL(RCBILLDA),^TMP($J,"RCRJRCOL","CRITERIA",RCBILLDA)=CRITERIA
"RTN","RCRJRCOC",148,0)
 S $P(CRITERIA,"-",2)=RCRITER2
"RTN","RCRJRCOC",149,0)
 ;
"RTN","RCRJRCOC",150,0)
 ;  store results for ndb
"RTN","RCRJRCOC",151,0)
 S %=$G(@DATASTOR)
"RTN","RCRJRCOC",152,0)
 S $P(%,"^")=$P(%,"^")+1
"RTN","RCRJRCOC",153,0)
 S $P(%,"^",2)=$P(%,"^",2)+$P(RCVALUE,"^")
"RTN","RCRJRCOC",154,0)
 S $P(%,"^",3)=$P(%,"^",3)+$P(RCVALUE,"^",2)+$P(RCVALUE,"^",3)+$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5)
"RTN","RCRJRCOC",155,0)
 S @DATASTOR=%
"RTN","RCRJRCOC",156,0)
 ;
"RTN","RCRJRCOC",157,0)
 ;  keep a count of current receivables counted
"RTN","RCRJRCOC",158,0)
 S ^TMP($J,"RCRJRCOL","COUNT",RCBILLDA,RCRITER2)=""
"RTN","RCRJRCOC",159,0)
 S ^TMP($J,"RCRJRCOL","CRIT2",RCRITER2,RCBILLDA)=""
"RTN","RCRJRCOC",160,0)
 Q 1
"RTN","RCRJRCOC",161,0)
 ;
"RTN","RCRJRCOC",162,0)
 ;
"RTN","RCRJRCOC",163,0)
MCCFHSIF(RCBILLDA,RCVALUE,RCRSC,ASOFDATE) ;  calculate the amount that goes
"RTN","RCRJRCOC",164,0)
 ;
"RTN","RCRJRCOC",165,0)
 ;  to mccf and hsif
"RTN","RCRJRCOC",166,0)
 ;
"RTN","RCRJRCOC",167,0)
 ;  returns RCTOMCCF and RCTOHSIF as the outstanding balance to mccf
"RTN","RCRJRCOC",168,0)
 ;  and the outstanding balance to hsif
"RTN","RCRJRCOC",169,0)
 N MCCFHSIF
"RTN","RCRJRCOC",170,0)
 ;
"RTN","RCRJRCOC",171,0)
 S RCTOMCCF=$P(RCVALUE,"^"),RCTOHSIF=0
"RTN","RCRJRCOC",172,0)
 ;
"RTN","RCRJRCOC",173,0)
 I $$NOHSIF^RCRJRCO() Q  ; disabled HSIF
"RTN","RCRJRCOC",174,0)
 ;
"RTN","RCRJRCOC",175,0)
 ; if revenue source code is not 8BZZ or 8CZZ then it all goes to mccf
"RTN","RCRJRCOC",176,0)
 I RCRSC="8BZZ"!(RCRSC="8CZZ") D
"RTN","RCRJRCOC",177,0)
 .   ;  get the amount for each fund mccf and hsif
"RTN","RCRJRCOC",178,0)
 .   ;  this call returns the total amount owed to mccf (piece 1),
"RTN","RCRJRCOC",179,0)
 .   ;  total amount owed to hsif (piece 2), total amount paid
"RTN","RCRJRCOC",180,0)
 .   ;  to mccf (piece 3), total amount paid to hsif (piece 4).
"RTN","RCRJRCOC",181,0)
 .   ;  for outstanding balance you must subtract the payment in
"RTN","RCRJRCOC",182,0)
 .   ;  pieces 3 and 4 which are returned as negative amounts.
"RTN","RCRJRCOC",183,0)
 .   S MCCFHSIF=$$BILLFUND^RCBMILLC(RCBILLDA,ASOFDATE)
"RTN","RCRJRCOC",184,0)
 .   S RCTOMCCF=$P(MCCFHSIF,"^",1)+$P(MCCFHSIF,"^",3)
"RTN","RCRJRCOC",185,0)
 .   S RCTOHSIF=$P(MCCFHSIF,"^",2)+$P(MCCFHSIF,"^",4)
"RTN","RCRJRCOC",186,0)
 Q
"RTN","RCRJRCOR")
0^9^B67290990
"RTN","RCRJRCOR",1,0)
RCRJRCOR ;WISC/RFJ-ar data collector summary report ;1 Mar 97
"RTN","RCRJRCOR",2,0)
 ;;4.5;Accounts Receivable;**68,96,139,103,156,170,174,191,220,138,239**;Mar 20, 1995
"RTN","RCRJRCOR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRCOR",4,0)
 Q
"RTN","RCRJRCOR",5,0)
 ;
"RTN","RCRJRCOR",6,0)
 ;
"RTN","RCRJRCOR",7,0)
SEND ;  send data to ndb and data to FMS
"RTN","RCRJRCOR",8,0)
 N %,AMOUNT,DATEMOYR,FUND,LINE,RSC,SPACE,TOTAL,TOTALFUN,TOTALTYP,TYPE,X,XMY,Y
"RTN","RCRJRCOR",9,0)
 ;
"RTN","RCRJRCOR",10,0)
 ;  ---------- send to ndb ----------
"RTN","RCRJRCOR",11,0)
 ;  data stored in tmp($j,rcrjrcolndb)
"RTN","RCRJRCOR",12,0)
 I '$G(RCRJFAR1) D NDB(PRCASITE,DATEBEG,DATEEND)
"RTN","RCRJRCOR",13,0)
 ;
"RTN","RCRJRCOR",14,0)
 ;
"RTN","RCRJRCOR",15,0)
 ;  ---------- send sv to fms ----------
"RTN","RCRJRCOR",16,0)
 ;  data stored in tmp($j,rcrjrcolsv)
"RTN","RCRJRCOR",17,0)
 ;  rcrjfsv is a flag set in the routine rcrjrco for retransmission
"RTN","RCRJRCOR",18,0)
 ;  to prevent accepted fms documents from being resent
"RTN","RCRJRCOR",19,0)
 I '$G(RCRJFSV) D STARTSV^RCXFMSSV(DATEEND)
"RTN","RCRJRCOR",20,0)
 ;
"RTN","RCRJRCOR",21,0)
 ;
"RTN","RCRJRCOR",22,0)
 ;  ---------- send wr to fms ----------
"RTN","RCRJRCOR",23,0)
 ;  data stored in tmp($j,rcrjrcolwr)
"RTN","RCRJRCOR",24,0)
 ;  rcrjfwr is a flag set in the routine rcrjrco for retransmission
"RTN","RCRJRCOR",25,0)
 ;  to prevent accepted fms documents from being resent
"RTN","RCRJRCOR",26,0)
 I '$G(RCRJFWR) D STARTWR^RCXFMSWR(DATEEND)
"RTN","RCRJRCOR",27,0)
 ;
"RTN","RCRJRCOR",28,0)
 ;  ---------- send tr to fms ----------
"RTN","RCRJRCOR",29,0)
 N RCTRANS
"RTN","RCRJRCOR",30,0)
 ;  this call returns rctrans array (see rcxfmstx for description)
"RTN","RCRJRCOR",31,0)
 ;  rcrjftr is a flag set in the routine rcrjrco for retransmission
"RTN","RCRJRCOR",32,0)
 ;  to prevent accepted fms documents from being resent
"RTN","RCRJRCOR",33,0)
 I '$G(RCRJFTR) D STARTTR^RCXFMSTX(DATEEND)
"RTN","RCRJRCOR",34,0)
 ;
"RTN","RCRJRCOR",35,0)
 ;  ---------- send oig extract ----------
"RTN","RCRJRCOR",36,0)
 ;  data stored in tmp(j,rcrjroig)
"RTN","RCRJRCOR",37,0)
 ;  get non-mccf bills for extract and user report
"RTN","RCRJRCOR",38,0)
 D NONMCCF^RCRJROIG(DATEEND)
"RTN","RCRJRCOR",39,0)
 ;  rcrjfoig is a flag set in the routine rcrjrco for retransmission
"RTN","RCRJRCOR",40,0)
 ;  to prevent the oig extract from being resent
"RTN","RCRJRCOR",41,0)
 I '$G(RCRJFOIG) D OIG^RCRJROIG(DATEEND)
"RTN","RCRJRCOR",42,0)
 ;
"RTN","RCRJRCOR",43,0)
 ;  generate a mailman message to the group showing the data
"RTN","RCRJRCOR",44,0)
 K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRCOR",45,0)
 S Y=$E(DATEEND,1,5)_"00" D DD^%DT S DATEMOYR=Y
"RTN","RCRJRCOR",46,0)
 S LINE=0,SPACE="",$P(SPACE," ",80)=""
"RTN","RCRJRCOR",47,0)
 D SET("Data has been collected for the month "_DATEMOYR_".  The data has been")
"RTN","RCRJRCOR",48,0)
 D SET("transmitted to the following systems:")
"RTN","RCRJRCOR",49,0)
 D SET(" ")
"RTN","RCRJRCOR",50,0)
 ;
"RTN","RCRJRCOR",51,0)
 I '$G(RCRJFAR1) D
"RTN","RCRJRCOR",52,0)
 .   D SET("NATIONAL DATABASE DATA")
"RTN","RCRJRCOR",53,0)
 .   D SET("----------------------")
"RTN","RCRJRCOR",54,0)
 .   D SET("The data has been sent to the National Database.  For a detail list")
"RTN","RCRJRCOR",55,0)
 .   D SET("of the data sent, please review the Return Reports which are sent")
"RTN","RCRJRCOR",56,0)
 .   D SET("from the National Database.")
"RTN","RCRJRCOR",57,0)
 .   D SET(" ")
"RTN","RCRJRCOR",58,0)
 ;
"RTN","RCRJRCOR",59,0)
 I '$G(RCRJFSV) D
"RTN","RCRJRCOR",60,0)
 .   D SET("FMS, STANDARD VOUCHER (SV) DOCUMENT")
"RTN","RCRJRCOR",61,0)
 .   D SET("-----------------------------------")
"RTN","RCRJRCOR",62,0)
 .   D SET("The following data has been transmitted to FMS in the SV document:")
"RTN","RCRJRCOR",63,0)
 .   D SET("  Revenue Source Code                                        Type       Amount")
"RTN","RCRJRCOR",64,0)
 .   D SET("  -------------------                                        ----       ------")
"RTN","RCRJRCOR",65,0)
 .   S TOTAL=0
"RTN","RCRJRCOR",66,0)
 .   S TYPE="" F  S TYPE=$O(^TMP($J,"RCRJRCOLSV",TYPE)) Q:TYPE=""  D
"RTN","RCRJRCOR",67,0)
 .   .   I TYPE=17!(TYPE=18) Q    ; display the Medicare totals later
"RTN","RCRJRCOR",68,0)
 .   .   S TOTALTYP=0
"RTN","RCRJRCOR",69,0)
 .   .   S FUND="" F  S FUND=$O(^TMP($J,"RCRJRCOLSV",TYPE,FUND)) Q:FUND=""  D
"RTN","RCRJRCOR",70,0)
 .   .   .   S TOTALFUN=0
"RTN","RCRJRCOR",71,0)
 .   .   .   S RSC="" F  S RSC=$O(^TMP($J,"RCRJRCOLSV",TYPE,FUND,RSC)) Q:RSC=""  S AMOUNT=^(RSC) D
"RTN","RCRJRCOR",72,0)
 .   .   .   .   D SET("  "_RSC_" "_$E($$GETDESC^RCXFMSPR(RSC)_SPACE,1,54)_"  "_TYPE_$J(AMOUNT,13,2))
"RTN","RCRJRCOR",73,0)
 .   .   .   .   S TOTALFUN=TOTALFUN+AMOUNT
"RTN","RCRJRCOR",74,0)
 .   .   .   .   S TOTALTYP=TOTALTYP+AMOUNT
"RTN","RCRJRCOR",75,0)
 .   .   .   .   S TOTAL=TOTAL+AMOUNT
"RTN","RCRJRCOR",76,0)
 .   .   .   ;
"RTN","RCRJRCOR",77,0)
 .   .   .   N RCFUND S RCFUND=$S($E(DATEEND,2,5)<"0410":$E(FUND,1,4)_"."_$E(FUND,6),1:$E(FUND,1,4)_"0"_$E(FUND,6))
"RTN","RCRJRCOR",78,0)
 .   .   .   I TYPE=21 D SET($E("            Sub-Total by Fund "_RCFUND_":"_SPACE,1,38)_$J(TOTALFUN,12,2))
"RTN","RCRJRCOR",79,0)
 .   .   ;
"RTN","RCRJRCOR",80,0)
 .   .   D SET("                                                                    ----------")
"RTN","RCRJRCOR",81,0)
 .   .   D SET("                                                    TOTAL TYPE "_TYPE_$J(TOTALTYP,13,2))
"RTN","RCRJRCOR",82,0)
 .   .   D SET(" ")
"RTN","RCRJRCOR",83,0)
 .   ;
"RTN","RCRJRCOR",84,0)
 .   ; Display Medicare totals and update the SV total
"RTN","RCRJRCOR",85,0)
 .   S AMOUNT=+$G(^TMP($J,"RCRJRCOLSV",17)),TOTAL=TOTAL+AMOUNT
"RTN","RCRJRCOR",86,0)
 .   D SET("       Medicare Contractual Adjustment              TOTAL TYPE 17"_$J(AMOUNT,13,2))
"RTN","RCRJRCOR",87,0)
 .   S AMOUNT=+$G(^TMP($J,"RCRJRCOLSV",18)),TOTAL=TOTAL+AMOUNT
"RTN","RCRJRCOR",88,0)
 .   D SET("       Unreimbursable Medicare Expense              TOTAL TYPE 18"_$J(AMOUNT,13,2))
"RTN","RCRJRCOR",89,0)
 .   D SET(" ")
"RTN","RCRJRCOR",90,0)
 .   ;
"RTN","RCRJRCOR",91,0)
 .   D SET("                                                                    ----------")
"RTN","RCRJRCOR",92,0)
 .   D SET("                                                         TOTAL SV"_$J(TOTAL,13,2))
"RTN","RCRJRCOR",93,0)
 .   D SET(" ")
"RTN","RCRJRCOR",94,0)
 ;
"RTN","RCRJRCOR",95,0)
 I '$G(RCRJFWR) D
"RTN","RCRJRCOR",96,0)
 .   D SET("FMS, WRITEOFFS/CONTRACT ADJUSTMENTS (WR) DOCUMENT")
"RTN","RCRJRCOR",97,0)
 .   D SET("-------------------------------------------------")
"RTN","RCRJRCOR",98,0)
 .   D SET("The following data has been transmitted to FMS in the WR document:")
"RTN","RCRJRCOR",99,0)
 .   D SET("  Revenue Source Code                                        Type       Amount")
"RTN","RCRJRCOR",100,0)
 .   D SET("  -------------------                                        ----       ------")
"RTN","RCRJRCOR",101,0)
 .   S TOTAL=0
"RTN","RCRJRCOR",102,0)
 .   S TYPE="" F  S TYPE=$O(^TMP($J,"RCRJRCOLWR",TYPE)) Q:TYPE=""  D
"RTN","RCRJRCOR",103,0)
 .   .   S TOTALTYP=0
"RTN","RCRJRCOR",104,0)
 .   .   S FUND="" F  S FUND=$O(^TMP($J,"RCRJRCOLWR",TYPE,FUND)) Q:FUND=""  D
"RTN","RCRJRCOR",105,0)
 .   .   .   S TOTALFUN=0
"RTN","RCRJRCOR",106,0)
 .   .   .   S RSC="" F  S RSC=$O(^TMP($J,"RCRJRCOLWR",TYPE,FUND,RSC)) Q:RSC=""  S AMOUNT=^(RSC) D
"RTN","RCRJRCOR",107,0)
 .   .   .   .   D SET("  "_RSC_" "_$E($$GETDESC^RCXFMSPR(RSC)_SPACE,1,54)_"  "_TYPE_$J(AMOUNT,13,2))
"RTN","RCRJRCOR",108,0)
 .   .   .   .   S TOTALFUN=TOTALFUN+AMOUNT
"RTN","RCRJRCOR",109,0)
 .   .   .   .   S TOTALTYP=TOTALTYP+AMOUNT
"RTN","RCRJRCOR",110,0)
 .   .   .   .   S TOTAL=TOTAL+AMOUNT
"RTN","RCRJRCOR",111,0)
 .   .   .   ;
"RTN","RCRJRCOR",112,0)
 .   .   .   N RCFUND S RCFUND=$S($E(DATEEND,2,5)<"0410":$E(FUND,1,4)_"."_$E(FUND,6),1:$E(FUND,1,4)_"0"_$E(FUND,6))
"RTN","RCRJRCOR",113,0)
 .   .   .   I TYPE=37 D SET($E("            Sub-Total by Fund "_RCFUND_":"_SPACE,1,38)_$J(TOTALFUN,12,2))
"RTN","RCRJRCOR",114,0)
 .   .   ;
"RTN","RCRJRCOR",115,0)
 .   .   D SET("                                                                    ----------")
"RTN","RCRJRCOR",116,0)
 .   .   D SET("                                                    TOTAL TYPE "_TYPE_$J(TOTALTYP,13,2))
"RTN","RCRJRCOR",117,0)
 .   .   D SET(" ")
"RTN","RCRJRCOR",118,0)
 .   D SET("                                                                    ----------")
"RTN","RCRJRCOR",119,0)
 .   D SET("                                                         TOTAL WR"_$J(TOTAL,13,2))
"RTN","RCRJRCOR",120,0)
 .   D SET(" ")
"RTN","RCRJRCOR",121,0)
 ;
"RTN","RCRJRCOR",122,0)
 I '$G(RCRJFTR) D
"RTN","RCRJRCOR",123,0)
 .   D SET("FMS, TRANSFER FROM MCCF TO HSIF (TR) DOCUMENT")
"RTN","RCRJRCOR",124,0)
 .   D SET("-------------------------------------------------")
"RTN","RCRJRCOR",125,0)
 .   D SET("The following data has been transmitted to FMS in the TR document:")
"RTN","RCRJRCOR",126,0)
 .   D SET("  From Fund    From RSC       To Fund    To RSC                         Amount")
"RTN","RCRJRCOR",127,0)
 .   D SET("  ---------    --------       -------    ------                     ----------")
"RTN","RCRJRCOR",128,0)
 .   I $O(RCTRANS(""))="" D SET("  No Dollars to Transfer.") Q
"RTN","RCRJRCOR",129,0)
 .   ;
"RTN","RCRJRCOR",130,0)
 .   S FUND="" F  S FUND=$O(RCTRANS(FUND)) Q:FUND=""  D
"RTN","RCRJRCOR",131,0)
 .   .   S RSC="" F  S RSC=$O(RCTRANS(FUND,RSC)) Q:RSC=""  D
"RTN","RCRJRCOR",132,0)
 .   .   .   ;  rctrans(fromfund,fromrsc) = tofund ^ torsc ^ amount
"RTN","RCRJRCOR",133,0)
 .   .   .   S AMOUNT=RCTRANS(FUND,RSC)
"RTN","RCRJRCOR",134,0)
 .   .   .   D SET($J(FUND,11)_$J(RSC,12)_$J($P(AMOUNT,"^"),14)_$J($P(AMOUNT,"^",2),10)_$J($P(AMOUNT,"^",3),31,2))
"RTN","RCRJRCOR",135,0)
 ;
"RTN","RCRJRCOR",136,0)
 S XMY("G.RC AR DATA COLLECTOR")=""
"RTN","RCRJRCOR",137,0)
 S %=$$SENDMSG("AR Data Collector for "_DATEMOYR_" Station "_PRCASITE,.XMY)
"RTN","RCRJRCOR",138,0)
 K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRCOR",139,0)
 ;
"RTN","RCRJRCOR",140,0)
 ;  send users detail report
"RTN","RCRJRCOR",141,0)
 D USERREPT^RCRJRCOU(DATEMOYR)
"RTN","RCRJRCOR",142,0)
 Q
"RTN","RCRJRCOR",143,0)
 ;
"RTN","RCRJRCOR",144,0)
 ;
"RTN","RCRJRCOR",145,0)
NDB(PRCASITE,DATEBEG,DATEEND) ;  send data to the national database
"RTN","RCRJRCOR",146,0)
 N %,BATCNAME,COUNT,CRITERIA,DATA,LINE,XMY,X,Y
"RTN","RCRJRCOR",147,0)
 K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRCOR",148,0)
 S LINE=2,DATA="D$ "
"RTN","RCRJRCOR",149,0)
 S CRITERIA="" F COUNT=1:1 S CRITERIA=$O(^TMP($J,"RCRJRCOLNDB",CRITERIA)) Q:CRITERIA=""  D
"RTN","RCRJRCOR",150,0)
 .   S DATA=DATA_":"_COUNT_"/"_CRITERIA_"/"_^TMP($J,"RCRJRCOLNDB",CRITERIA)
"RTN","RCRJRCOR",151,0)
 .   I $L(DATA)>200 D SET(DATA) S DATA="D$ "
"RTN","RCRJRCOR",152,0)
 I DATA'="D$ " D SET(DATA)
"RTN","RCRJRCOR",153,0)
 ;
"RTN","RCRJRCOR",154,0)
 ;  build the first two control lines in mail message
"RTN","RCRJRCOR",155,0)
 S Y=DATEBEG D DD^%DT
"RTN","RCRJRCOR",156,0)
 S BATCNAME="AR1-"_$E(Y,1,3)_$E(DATEBEG,6,7)_$TR($P(Y,",",2)," ")
"RTN","RCRJRCOR",157,0)
 S Y=DATEEND D DD^%DT
"RTN","RCRJRCOR",158,0)
 S BATCNAME=BATCNAME_"-"_$E(Y,1,3)_$E(DATEEND,6,7)_$TR($P(Y,",",2)," ")
"RTN","RCRJRCOR",159,0)
 S ^TMP($J,"RCRJRCORMM",1)="T$ "_PRCASITE_"$"_BATCNAME_"$$$$$*"
"RTN","RCRJRCOR",160,0)
 ;  get end time (in %)
"RTN","RCRJRCOR",161,0)
 D NOW^%DTC
"RTN","RCRJRCOR",162,0)
 S ^TMP($J,"RCRJRCORMM",2)="S$ "_STRTTIME_"^"_%_"$0$"_(COUNT-1)
"RTN","RCRJRCOR",163,0)
 ;
"RTN","RCRJRCOR",164,0)
 S XMY("S.PRQN DATA COLLECTION MONITOR@FO-ALBANY.MED.VA.GOV")=""
"RTN","RCRJRCOR",165,0)
 S %=$$SENDMSG("AR1 "_$E(DATEEND,4,5)_"/"_$E(DATEEND,2,3)_" NDB DATA FOR SITE "_PRCASITE,.XMY)
"RTN","RCRJRCOR",166,0)
 K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRCOR",167,0)
 Q
"RTN","RCRJRCOR",168,0)
 ;
"RTN","RCRJRCOR",169,0)
 ;
"RTN","RCRJRCOR",170,0)
SUMMARY ;  print summary report in mailman bulletin
"RTN","RCRJRCOR",171,0)
 N %,BILLDA,CRITER2,CRITERIA,DATA0,DFN,LINE,STAT,TOTAL,VA,XMY
"RTN","RCRJRCOR",172,0)
 K ^TMP($J,"RCRJRCOR")   ; used to identify test patients
"RTN","RCRJRCOR",173,0)
 K ^TMP($J,"RCRJRCORMM") ; used to build mailman message
"RTN","RCRJRCOR",174,0)
 ;
"RTN","RCRJRCOR",175,0)
 ;  print any test patient bills which have not been closed
"RTN","RCRJRCOR",176,0)
 S BILLDA=0 F  S BILLDA=$O(^TMP($J,"RCRJRCOL","CRIT2",1,BILLDA)) Q:'BILLDA  I $D(^(BILLDA,1)) D
"RTN","RCRJRCOR",177,0)
 .   S DATA0=$G(^PRCA(430,BILLDA,0)),STAT=$P(DATA0,"^",8)
"RTN","RCRJRCOR",178,0)
 .   I STAT'=16,STAT='42 Q  ; bill not currently open
"RTN","RCRJRCOR",179,0)
 .   S DFN=+$P(DATA0,"^",7) I 'DFN Q
"RTN","RCRJRCOR",180,0)
 .   D PID^VADPT
"RTN","RCRJRCOR",181,0)
 .   I $E($TR($G(VA("PID")),"-"),1,5)="00000" S ^TMP($J,"RCRJRCOR","TEST",BILLDA)=""
"RTN","RCRJRCOR",182,0)
 ;
"RTN","RCRJRCOR",183,0)
 I '$D(^TMP($J,"RCRJRCOR","TEST")) Q
"RTN","RCRJRCOR",184,0)
 ;
"RTN","RCRJRCOR",185,0)
 ;  print data
"RTN","RCRJRCOR",186,0)
 S LINE=0
"RTN","RCRJRCOR",187,0)
 D SET(" ")
"RTN","RCRJRCOR",188,0)
 D SET("The following bills are active and linked to test patients:")
"RTN","RCRJRCOR",189,0)
 S BILLDA=0 F  S BILLDA=$O(^TMP($J,"RCRJRCOR","TEST",BILLDA)) Q:'BILLDA  D SET("  "_$P($G(^PRCA(430,BILLDA,0)),"^")_" (#",BILLDA_")")
"RTN","RCRJRCOR",190,0)
 ;
"RTN","RCRJRCOR",191,0)
 S XMY("G.RC AR DATA COLLECTOR")=""
"RTN","RCRJRCOR",192,0)
 S %=$$SENDMSG("MCCR DATA COLLECTOR INFORMATION",.XMY)
"RTN","RCRJRCOR",193,0)
 K ^TMP($J,"RCRJRCOR")
"RTN","RCRJRCOR",194,0)
 K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRCOR",195,0)
 Q
"RTN","RCRJRCOR",196,0)
 ;
"RTN","RCRJRCOR",197,0)
 ;
"RTN","RCRJRCOR",198,0)
SET(DATA)          ;  store report
"RTN","RCRJRCOR",199,0)
 S LINE=LINE+1,^TMP($J,"RCRJRCORMM",LINE)=DATA
"RTN","RCRJRCOR",200,0)
 Q
"RTN","RCRJRCOR",201,0)
 ;
"RTN","RCRJRCOR",202,0)
 ;
"RTN","RCRJRCOR",203,0)
SENDMSG(XMSUB,XMY) ;  send message with subject and recipients
"RTN","RCRJRCOR",204,0)
 N %X,D0,D1,D2,DIC,DICR,DIW,X,XCNP,XMDISPI,XMDUN,XMDUZ,XMTEXT,XMZ,ZTPAR
"RTN","RCRJRCOR",205,0)
 S XMDUZ="AR PACKAGE",XMTEXT="^TMP($J,""RCRJRCORMM"","
"RTN","RCRJRCOR",206,0)
 D ^XMD
"RTN","RCRJRCOR",207,0)
 Q +$G(XMZ)
"RTN","RCXFMSSV")
0^8^B57335503
"RTN","RCXFMSSV",1,0)
RCXFMSSV ;WISC/RFJ-fms standard voucher (sv) code sheet generator ;1 Nov 97
"RTN","RCXFMSSV",2,0)
 ;;4.5;Accounts Receivable;**96,101,135,139,98,156,170,191,203,220,138,184,239**;Mar 20, 1995
"RTN","RCXFMSSV",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCXFMSSV",4,0)
 Q
"RTN","RCXFMSSV",5,0)
 ;
"RTN","RCXFMSSV",6,0)
 ;
"RTN","RCXFMSSV",7,0)
STARTSV(RCDATEND) ;  top entry point to generate a sv code sheet
"RTN","RCXFMSSV",8,0)
 ;
"RTN","RCXFMSSV",9,0)
 ;  rcdatend is the ending date of the period.
"RTN","RCXFMSSV",10,0)
 ;  This date is the 3rd work day from the end of the month.
"RTN","RCXFMSSV",11,0)
 ;  The utility $$LDATE^RCRJR is used to figure it out. It will
"RTN","RCXFMSSV",12,0)
 ;  change from month to month and figures in holidays also.
"RTN","RCXFMSSV",13,0)
 ;  For example,  if running the ARDC for the month of June 2003
"RTN","RCXFMSSV",14,0)
 ;  the EOAM will calculate out to be June 25, 2003.
"RTN","RCXFMSSV",15,0)
 ;  This is called by the background monthly data collector
"RTN","RCXFMSSV",16,0)
 ;
"RTN","RCXFMSSV",17,0)
 ;  data stored in tmp($j,rcrjrcolsv,type,fund,revsourcecode)
"RTN","RCXFMSSV",18,0)
 ;  this is called by the background monthly data collector
"RTN","RCXFMSSV",19,0)
 ;
"RTN","RCXFMSSV",20,0)
 N GECSDATA,RCTRANID,RESULT
"RTN","RCXFMSSV",21,0)
 ;  lookup fms document number to see if the monthly sv has been sent
"RTN","RCXFMSSV",22,0)
 ;  example rcdatend=3010531, lookup on 3010500
"RTN","RCXFMSSV",23,0)
 D KEYLOOK^GECSSGET("SV-"_$E(RCDATEND,1,5)_"00",1)
"RTN","RCXFMSSV",24,0)
 ;
"RTN","RCXFMSSV",25,0)
 ;  get the transacion id for the fms document
"RTN","RCXFMSSV",26,0)
 ;  if it is not sent, get the next number available
"RTN","RCXFMSSV",27,0)
 I $G(GECSDATA) S RCTRANID=$E($P(GECSDATA("2100.1",GECSDATA,".01","E"),"-",2),1,11)
"RTN","RCXFMSSV",28,0)
 I $G(RCTRANID)="" S RCTRANID=$$ENUM^RCMSNUM
"RTN","RCXFMSSV",29,0)
 I RCTRANID<0 Q  ;unable to retrieve the next number
"RTN","RCXFMSSV",30,0)
 ;  remove dash (example 460-K1A05HY)
"RTN","RCXFMSSV",31,0)
 S RCTRANID=$TR(RCTRANID,"-")
"RTN","RCXFMSSV",32,0)
 ;
"RTN","RCXFMSSV",33,0)
 ;  build and send the sv document to fms
"RTN","RCXFMSSV",34,0)
 S RESULT=$$BUILDSV(RCDATEND,+$G(GECSDATA),RCTRANID,"00")
"RTN","RCXFMSSV",35,0)
 ;  error in building code sheet
"RTN","RCXFMSSV",36,0)
 I 'RESULT Q
"RTN","RCXFMSSV",37,0)
 ;
"RTN","RCXFMSSV",38,0)
 ;  add/update entry in file 347 for reports
"RTN","RCXFMSSV",39,0)
 N %DT,%X,D,D0,DA347,DI,DQ,DIC,ERROR
"RTN","RCXFMSSV",40,0)
 S DA347=$O(^RC(347,"C",$P(RESULT,"^",2),0))
"RTN","RCXFMSSV",41,0)
 ;  if not in the file, addit   fmsdocid   sv   id
"RTN","RCXFMSSV",42,0)
 I 'DA347 D OPEN^RCFMDRV1($P(RESULT,"^",2),4,"SV-"_$E(RCDATEND,1,5)_"00",.DA347,.ERROR)
"RTN","RCXFMSSV",43,0)
 I DA347 D SSTAT^RCFMFN02($P(RESULT,"^",2),1)
"RTN","RCXFMSSV",44,0)
 Q
"RTN","RCXFMSSV",45,0)
 ;
"RTN","RCXFMSSV",46,0)
 ;
"RTN","RCXFMSSV",47,0)
BUILDSV(RCDATEND,RCGECSDA,RCTRANID,RCKS) ;  generate a wr code sheet for monthly data
"RTN","RCXFMSSV",48,0)
 ;  rcgecsda is the ien for the gcs stack file 2100.1 for rebuilds
"RTN","RCXFMSSV",49,0)
 ;  data stored in tmp($j,rcrjrcolsv)
"RTN","RCXFMSSV",50,0)
 ;  rcks is the "key suffix" to distinguish the gecs lookup key
"RTN","RCXFMSSV",51,0)
 ;   for the SRB SV from the lookup key for the BDR SV
"RTN","RCXFMSSV",52,0)
 ;
"RTN","RCXFMSSV",53,0)
 N AMOUNT,COUNT,DESCRIP,DOCTOTAL,FISCALYR,FMSLINE,FUND,FY,GECSFMS,MONTH,REVDATE,REVFY,REVMONTH,RSC,SV2,TYPE,FMAMOUNT
"RTN","RCXFMSSV",54,0)
 ;
"RTN","RCXFMSSV",55,0)
 S FISCALYR=$$FY^RCFN01(RCDATEND)
"RTN","RCXFMSSV",56,0)
 ;
"RTN","RCXFMSSV",57,0)
 S COUNT=0,DOCTOTAL=0
"RTN","RCXFMSSV",58,0)
 S TYPE="" F  S TYPE=$O(^TMP($J,"RCRJRCOLSV",TYPE)) Q:TYPE=""  D
"RTN","RCXFMSSV",59,0)
 . S FUND="" F  S FUND=$O(^TMP($J,"RCRJRCOLSV",TYPE,FUND)) Q:FUND=""  D
"RTN","RCXFMSSV",60,0)
 . . S RSC="" F  S RSC=$O(^TMP($J,"RCRJRCOLSV",TYPE,FUND,RSC)) Q:RSC=""  D
"RTN","RCXFMSSV",61,0)
 . . . S AMOUNT=^TMP($J,"RCRJRCOLSV",TYPE,FUND,RSC),DOCTOTAL=DOCTOTAL+AMOUNT
"RTN","RCXFMSSV",62,0)
 . . . I +AMOUNT=0 Q
"RTN","RCXFMSSV",63,0)
 . . . S COUNT=COUNT+1
"RTN","RCXFMSSV",64,0)
 . . . S FMSLINE(COUNT)="LIN^~SVA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSSV",65,0)
 . . . S $P(FMSLINE(COUNT),"^",4)=TYPE
"RTN","RCXFMSSV",66,0)
 . . . S $P(FMSLINE(COUNT),"^",5)=FISCALYR ;begin fy
"RTN","RCXFMSSV",67,0)
 . . . I $E(FUND,1,4)=5287 S $P(FMSLINE(COUNT),"^",5)="05"
"RTN","RCXFMSSV",68,0)
 . . . S $P(FMSLINE(COUNT),"^",7)=FUND
"RTN","RCXFMSSV",69,0)
 . . . S $P(FMSLINE(COUNT),"^",9)=$E(RCTRANID,1,3)  ;site number
"RTN","RCXFMSSV",70,0)
 . . . ;  for transaction types 23,27,2B the RSC is 0, send null
"RTN","RCXFMSSV",71,0)
 . . . S $P(FMSLINE(COUNT),"^",14)=$S(RSC=0:"",1:RSC)
"RTN","RCXFMSSV",72,0)
 . . . ;
"RTN","RCXFMSSV",73,0)
 . . . ;  vendor id
"RTN","RCXFMSSV",74,0)
 . . . S $P(FMSLINE(COUNT),"^",18)="MCCFVALUE"
"RTN","RCXFMSSV",75,0)
 . . . ;  for transaction type P2, send vendorid of PERSONOTH
"RTN","RCXFMSSV",76,0)
 . . . I TYPE="P2" S $P(FMSLINE(COUNT),"^",18)="PERSONOTH"
"RTN","RCXFMSSV",77,0)
 . . . ;  if it is hsif fund 5358.1, send vendorid of HSIFVALUE
"RTN","RCXFMSSV",78,0)
 . . . I FUND=5358.1 S $P(FMSLINE(COUNT),"^",18)="HSIFVALUE"
"RTN","RCXFMSSV",79,0)
 . . . ;  if it is ltc fund 4032 or 528709, send vendorid of EXCFVALUE
"RTN","RCXFMSSV",80,0)
 . . . I FUND=4032!(FUND=528709) D
"RTN","RCXFMSSV",81,0)
 . . . . S $P(FMSLINE(COUNT),"^",18)="EXCFVALUE"
"RTN","RCXFMSSV",82,0)
 . . . . S:FUND=4032 $P(FMSLINE(COUNT),"^",5)="03" ; FY
"RTN","RCXFMSSV",83,0)
 . . . . S:$E(FUND,1,4)=5287 $P(FMSLINE(COUNT),"^",5)="05" ; FY
"RTN","RCXFMSSV",84,0)
 . . . ;
"RTN","RCXFMSSV",85,0)
 . . . ;  send pos figure to FMS; neg amt requires a "D"
"RTN","RCXFMSSV",86,0)
 . . . S FMAMOUNT=$S(AMOUNT<0:-AMOUNT,1:AMOUNT)
"RTN","RCXFMSSV",87,0)
 . . . S $P(FMSLINE(COUNT),"^",19)="~SVB"
"RTN","RCXFMSSV",88,0)
 . . . S $P(FMSLINE(COUNT),"^",20)=$J(FMAMOUNT,0,2)
"RTN","RCXFMSSV",89,0)
 . . . S $P(FMSLINE(COUNT),"^",21)=$S(AMOUNT<0:"D",1:"I")
"RTN","RCXFMSSV",90,0)
 . . . ;  for transaction types 23,27,2B the RSC is 0, send G
"RTN","RCXFMSSV",91,0)
 . . . S $P(FMSLINE(COUNT),"^",23)=$S(RSC=0:"G",1:"R")
"RTN","RCXFMSSV",92,0)
 . . . S $P(FMSLINE(COUNT),"^",25)=$E(RCDATEND,2,3)
"RTN","RCXFMSSV",93,0)
 . . . S $P(FMSLINE(COUNT),"^",26)=$E(RCDATEND,4,5)
"RTN","RCXFMSSV",94,0)
 . . . S $P(FMSLINE(COUNT),"^",27)=$E(RCDATEND,6,7)
"RTN","RCXFMSSV",95,0)
 . . . S $P(FMSLINE(COUNT),"^",28)="~"
"RTN","RCXFMSSV",96,0)
 ;
"RTN","RCXFMSSV",97,0)
 ;  no code sheets to send
"RTN","RCXFMSSV",98,0)
 I COUNT=0 Q "0^No sv code sheets to send for this month"
"RTN","RCXFMSSV",99,0)
 ;
"RTN","RCXFMSSV",100,0)
 ;  calculate the accounting month and fy
"RTN","RCXFMSSV",101,0)
 S FY=$E(RCDATEND,2,3) I $E(RCDATEND,4,5)>9 S FY=FY+1 I FY=100 S FY="00"
"RTN","RCXFMSSV",102,0)
 I $L(FY)=1 S FY="0"_FY
"RTN","RCXFMSSV",103,0)
 S MONTH=$P("04^05^06^07^08^09^10^11^12^01^02^03","^",$E(RCDATEND,4,5))
"RTN","RCXFMSSV",104,0)
 ;  calculate the reversal month and fy (next month, add 1 day)
"RTN","RCXFMSSV",105,0)
 S REVDATE=$$FMADD^XLFDT(RCDATEND,9)
"RTN","RCXFMSSV",106,0)
 S REVFY=$E(REVDATE,2,3) I $E(REVDATE,4,5)>9 S REVFY=REVFY+1 I REVFY=100 S REVFY="00"
"RTN","RCXFMSSV",107,0)
 I $L(REVFY)=1 S REVFY="0"_REVFY
"RTN","RCXFMSSV",108,0)
 S REVMONTH=$P("04^05^06^07^08^09^10^11^12^01^02^03","^",$E(REVDATE,4,5))
"RTN","RCXFMSSV",109,0)
 ;
"RTN","RCXFMSSV",110,0)
 S SV2="SV2^"_$E(RCDATEND,2,3)_"^"_$E(RCDATEND,4,5)_"^"_$E(RCDATEND,6,7)
"RTN","RCXFMSSV",111,0)
 S $P(SV2,"^",5)=MONTH         ;accounting period month
"RTN","RCXFMSSV",112,0)
 S $P(SV2,"^",6)=FY            ;accounting period year
"RTN","RCXFMSSV",113,0)
 S $P(SV2,"^",7)="E"
"RTN","RCXFMSSV",114,0)
 S $P(SV2,"^",12)=REVFY        ;reversal period year
"RTN","RCXFMSSV",115,0)
 S $P(SV2,"^",13)=REVMONTH     ;reversal period month
"RTN","RCXFMSSV",116,0)
 S:DOCTOTAL<0 DOCTOTAL=-DOCTOTAL ; document total must be positive
"RTN","RCXFMSSV",117,0)
 S $P(SV2,"^",16)=$J(DOCTOTAL,0,2)_"^~"
"RTN","RCXFMSSV",118,0)
 ;
"RTN","RCXFMSSV",119,0)
 ;  put together document in gcs
"RTN","RCXFMSSV",120,0)
 N %DT,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCXFMSSV",121,0)
 S Y=$E(RCDATEND,1,5)_"00" D DD^%DT
"RTN","RCXFMSSV",122,0)
 S DESCRIP="Monthly Standard Voucher for "_Y
"RTN","RCXFMSSV",123,0)
 I 'RCGECSDA D CONTROL^GECSUFMS("A",$E(RCTRANID,1,3),RCTRANID,"SV",10,0,"",DESCRIP)
"RTN","RCXFMSSV",124,0)
 I RCGECSDA D REBUILD^GECSUFM1(RCGECSDA,"A",10,"","Rebuild "_DESCRIP) S GECSFMS("DA")=RCGECSDA
"RTN","RCXFMSSV",125,0)
 ;
"RTN","RCXFMSSV",126,0)
 ;  store document in gcs
"RTN","RCXFMSSV",127,0)
 D SETCS^GECSSTAA(GECSFMS("DA"),SV2)
"RTN","RCXFMSSV",128,0)
 F COUNT=1:1 Q:'$D(FMSLINE(COUNT))  D SETCS^GECSSTAA(GECSFMS("DA"),FMSLINE(COUNT))
"RTN","RCXFMSSV",129,0)
 D SETCODE^GECSSDCT(GECSFMS("DA"),"D RETN^RCFMFN02")
"RTN","RCXFMSSV",130,0)
 D SETSTAT^GECSSTAA(GECSFMS("DA"),"Q")
"RTN","RCXFMSSV",131,0)
 ;  set the key for lookup
"RTN","RCXFMSSV",132,0)
 D SETKEY^GECSSTAA(GECSFMS("DA"),"SV-"_$E(RCDATEND,1,5)_RCKS)
"RTN","RCXFMSSV",133,0)
 ;
"RTN","RCXFMSSV",134,0)
 ;  return 1 for success ^ fms document transaction number
"RTN","RCXFMSSV",135,0)
 Q "1^SV-"_$P(GECSFMS("CTL"),"^",9)
"RTN","RCXFMSSV",136,0)
 ;
"RTN","RCXFMSSV",137,0)
 ;
"RTN","RCXFMSSV",138,0)
BADDEBT(RCRJDATE) ;  top entry point to generate a sv code sheet
"RTN","RCXFMSSV",139,0)
 ;  for the bad debt report, transaction types 23, 27, 2B and 2J.
"RTN","RCXFMSSV",140,0)
 ;  The fms document number in file 347 is SV-$e(dateend,1,5)_"01"
"RTN","RCXFMSSV",141,0)
 ;
"RTN","RCXFMSSV",142,0)
 ;  Input:  RCRJDATE  -- last day of accounting month
"RTN","RCXFMSSV",143,0)
 ;
"RTN","RCXFMSSV",144,0)
 N DATA1319,DATA1338,DATA1339,DATA4032,DATAHSIF,GECSDATA,RESULT,RCRJFMM,RCRJFXSV,RCTRANID,X,RCNOHSIF,LTCFUND,DATA133M,DATA133T
"RTN","RCXFMSSV",145,0)
 N DATA133N
"RTN","RCXFMSSV",146,0)
 ;
"RTN","RCXFMSSV",147,0)
 S RCNOHSIF=$$NOHSIF^RCRJRCO() ; disabled HSIF
"RTN","RCXFMSSV",148,0)
 ;
"RTN","RCXFMSSV",149,0)
 ;  lock cannot fail
"RTN","RCXFMSSV",150,0)
 L +^RC(348.1)
"RTN","RCXFMSSV",151,0)
 ;
"RTN","RCXFMSSV",152,0)
 ;  get the data from the bad debt allowance file 348.1
"RTN","RCXFMSSV",153,0)
 K ^TMP($J,"RCRJRCOLSV")
"RTN","RCXFMSSV",154,0)
 S DATA1319=$G(^RC(348.1,+$O(^RC(348.1,"B",1319,0)),0))
"RTN","RCXFMSSV",155,0)
 S DATA1338=$G(^RC(348.1,+$O(^RC(348.1,"B",1338,0)),0))
"RTN","RCXFMSSV",156,0)
 S DATA1339=$G(^RC(348.1,+$O(^RC(348.1,"B",1339,0)),0))
"RTN","RCXFMSSV",157,0)
 S DATA133N=$G(^RC(348.1,+$O(^RC(348.1,"B","133N",0)),0))
"RTN","RCXFMSSV",158,0)
 I 'RCNOHSIF S DATAHSIF=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.1,0)),0))
"RTN","RCXFMSSV",159,0)
 S DATA4032=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.2,0)),0))
"RTN","RCXFMSSV",160,0)
 S DATA133M=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.3,0)),0))
"RTN","RCXFMSSV",161,0)
 S DATA133T=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.4,0)),0))
"RTN","RCXFMSSV",162,0)
 ;
"RTN","RCXFMSSV",163,0)
 ; the revenue source code here is a 0
"RTN","RCXFMSSV",164,0)
 S ^TMP($J,"RCRJRCOLSV","23",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.3,1:528703)),0)=$P(DATA1319,"^",8)
"RTN","RCXFMSSV",165,0)
 I 'RCNOHSIF S ^TMP($J,"RCRJRCOLSV","23",5358.1,0)=$P(DATAHSIF,"^",8)
"RTN","RCXFMSSV",166,0)
 ;patch 220 replaces 4032 fund with 528709
"RTN","RCXFMSSV",167,0)
 S LTCFUND=$S(DT'<$$ADDPTEDT^PRCAACC():528709,1:4032)
"RTN","RCXFMSSV",168,0)
 S ^TMP($J,"RCRJRCOLSV","23",LTCFUND,0)=$P(DATA4032,"^",8)
"RTN","RCXFMSSV",169,0)
 S ^TMP($J,"RCRJRCOLSV","23",528701,0)=$P(DATA133M,"^",8)
"RTN","RCXFMSSV",170,0)
 S ^TMP($J,"RCRJRCOLSV","23",528704,0)=$P(DATA133T,"^",8)
"RTN","RCXFMSSV",171,0)
 ;
"RTN","RCXFMSSV",172,0)
 S ^TMP($J,"RCRJRCOLSV","2B",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.4,1:528704)),0)=$P(DATA1338,"^",8)
"RTN","RCXFMSSV",173,0)
 S ^TMP($J,"RCRJRCOLSV","27",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.4,1:528704)),0)=$P(DATA1339,"^",8)
"RTN","RCXFMSSV",174,0)
 ; post-MRA non-Medicare bills
"RTN","RCXFMSSV",175,0)
 S ^TMP($J,"RCRJRCOLSV","2J",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.4,1:528704)),0)=$P(DATA133N,"^",8)
"RTN","RCXFMSSV",176,0)
 ;
"RTN","RCXFMSSV",177,0)
 ;  the date is for previous month
"RTN","RCXFMSSV",178,0)
 ;S RCRJDATE=$$PREVMONT^RCRJRBD(DT)
"RTN","RCXFMSSV",179,0)
 ;I $E(DT,6,7)<$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$$PREVMONT^RCRJRBD(DT)
"RTN","RCXFMSSV",180,0)
 ;I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$E($$LDATE^RCRJR(DT),1,5)_"00"
"RTN","RCXFMSSV",181,0)
 ;I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$$LDATE^RCRJR(DT)
"RTN","RCXFMSSV",182,0)
 ;  find the last day of the month for the end date
"RTN","RCXFMSSV",183,0)
 ;S RCRJDATE=$E(RCRJDATE,1,5)_$P("31^28^31^30^31^30^31^31^30^31^30^31","^",+$E(RCRJDATE,4,5))
"RTN","RCXFMSSV",184,0)
 ;I $E(RCRJDATE,6,7)=28,$E(RCRJDATE,2,3)#4=0 S RCRJDATE=$E(RCRJDATE,1,5)_"29"
"RTN","RCXFMSSV",185,0)
 ;
"RTN","RCXFMSSV",186,0)
 ;  lookup fms document number to see if the monthly sv has been sent
"RTN","RCXFMSSV",187,0)
 ;  example rcdatend=3010531, lookup on 3010501
"RTN","RCXFMSSV",188,0)
 D KEYLOOK^GECSSGET("SV-"_$E(RCRJDATE,1,5)_"01",1)
"RTN","RCXFMSSV",189,0)
 ;
"RTN","RCXFMSSV",190,0)
 ;  get the transacion id for the fms document
"RTN","RCXFMSSV",191,0)
 ;  if it is not sent, get the next number available
"RTN","RCXFMSSV",192,0)
 I $G(GECSDATA) S RCTRANID=$E($P(GECSDATA("2100.1",GECSDATA,".01","E"),"-",2),1,11)
"RTN","RCXFMSSV",193,0)
 I $G(RCTRANID)="" S RCTRANID=$$ENUM^RCMSNUM
"RTN","RCXFMSSV",194,0)
 I RCTRANID<0 Q  ;unable to retrieve the next number
"RTN","RCXFMSSV",195,0)
 ;  remove dash (example 460-K1A05HY)
"RTN","RCXFMSSV",196,0)
 S RCTRANID=$TR(RCTRANID,"-")
"RTN","RCXFMSSV",197,0)
 ;
"RTN","RCXFMSSV",198,0)
 ;  build and send the sv document to fms
"RTN","RCXFMSSV",199,0)
 S RESULT=$$BUILDSV(RCRJDATE,+$G(GECSDATA),RCTRANID,"01")
"RTN","RCXFMSSV",200,0)
 K ^TMP($J,"RCRJRCOLSV")
"RTN","RCXFMSSV",201,0)
 ;  error in building code sheet
"RTN","RCXFMSSV",202,0)
 I 'RESULT D Q Q
"RTN","RCXFMSSV",203,0)
 ;
"RTN","RCXFMSSV",204,0)
 ;  add/update entry in file 347 for reports
"RTN","RCXFMSSV",205,0)
 N %DT,%X,D,D0,DA347,DI,DQ,DIC,ERROR
"RTN","RCXFMSSV",206,0)
 S DA347=$O(^RC(347,"D","SV-"_$E(RCRJDATE,1,5)_"01",0))
"RTN","RCXFMSSV",207,0)
 ;  if not in the file, addit   fmsdocid   sv   id
"RTN","RCXFMSSV",208,0)
 I 'DA347 D OPEN^RCFMDRV1($P(RESULT,"^",2),4,"SV-"_$E(RCRJDATE,1,5)_"01",.DA347,.ERROR)
"RTN","RCXFMSSV",209,0)
 I DA347 D SSTAT^RCFMFN02($P(RESULT,"^",2),1)
"RTN","RCXFMSSV",210,0)
 ;
"RTN","RCXFMSSV",211,0)
Q ;  jump here to finish
"RTN","RCXFMSSV",212,0)
 ;  generate bad debt report
"RTN","RCXFMSSV",213,0)
 S RCRJFXSV=$P(RESULT,"^",2),RCRJFMM=1 D DQ^RCRJRBDR
"RTN","RCXFMSSV",214,0)
 L -^RC(348.1)
"RTN","RCXFMSSV",215,0)
 Q
"VER")
8.0^22.0
"BLD",5744,6)
^210
**END**
**END**
