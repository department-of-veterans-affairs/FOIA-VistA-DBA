Released SD*5.3*460 SEQ #418
Extracted from mail message
**KIDS**:SD*5.3*460^

**INSTALL NAME**
SD*5.3*460
"BLD",5888,0)
SD*5.3*460^SCHEDULING^0^3070326^y
"BLD",5888,1,0)
^^2^2^3051212^^
"BLD",5888,1,1,0)
Option 'Retroactive Visits List' [SDAM RPT RETROACTIVE LIST] has been
"BLD",5888,1,2,0)
modified to call a Scheduling API to retrieve appointment data.
"BLD",5888,4,0)
^9.64PA^^
"BLD",5888,"ABPKG")
n
"BLD",5888,"KRN",0)
^9.67PA^8989.52^19
"BLD",5888,"KRN",.4,0)
.4
"BLD",5888,"KRN",.401,0)
.401
"BLD",5888,"KRN",.402,0)
.402
"BLD",5888,"KRN",.403,0)
.403
"BLD",5888,"KRN",.5,0)
.5
"BLD",5888,"KRN",.84,0)
.84
"BLD",5888,"KRN",3.6,0)
3.6
"BLD",5888,"KRN",3.8,0)
3.8
"BLD",5888,"KRN",9.2,0)
9.2
"BLD",5888,"KRN",9.8,0)
9.8
"BLD",5888,"KRN",9.8,"NM",0)
^9.68A^2^1
"BLD",5888,"KRN",9.8,"NM",2,0)
SDAMOL1^^0^B26330628
"BLD",5888,"KRN",9.8,"NM","B","SDAMOL1",2)

"BLD",5888,"KRN",19,0)
19
"BLD",5888,"KRN",19.1,0)
19.1
"BLD",5888,"KRN",101,0)
101
"BLD",5888,"KRN",409.61,0)
409.61
"BLD",5888,"KRN",771,0)
771
"BLD",5888,"KRN",870,0)
870
"BLD",5888,"KRN",8989.51,0)
8989.51
"BLD",5888,"KRN",8989.52,0)
8989.52
"BLD",5888,"KRN",8994,0)
8994
"BLD",5888,"KRN","B",.4,.4)

"BLD",5888,"KRN","B",.401,.401)

"BLD",5888,"KRN","B",.402,.402)

"BLD",5888,"KRN","B",.403,.403)

"BLD",5888,"KRN","B",.5,.5)

"BLD",5888,"KRN","B",.84,.84)

"BLD",5888,"KRN","B",3.6,3.6)

"BLD",5888,"KRN","B",3.8,3.8)

"BLD",5888,"KRN","B",9.2,9.2)

"BLD",5888,"KRN","B",9.8,9.8)

"BLD",5888,"KRN","B",19,19)

"BLD",5888,"KRN","B",19.1,19.1)

"BLD",5888,"KRN","B",101,101)

"BLD",5888,"KRN","B",409.61,409.61)

"BLD",5888,"KRN","B",771,771)

"BLD",5888,"KRN","B",870,870)

"BLD",5888,"KRN","B",8989.51,8989.51)

"BLD",5888,"KRN","B",8989.52,8989.52)

"BLD",5888,"KRN","B",8994,8994)

"BLD",5888,"QUES",0)
^9.62^^
"BLD",5888,"REQB",0)
^9.611^6^4
"BLD",5888,"REQB",2,0)
SD*5.3*132^2
"BLD",5888,"REQB",4,0)
SD*5.3*466^2
"BLD",5888,"REQB",5,0)
SD*5.3*266^2
"BLD",5888,"REQB",6,0)
SD*5.3*301^2
"BLD",5888,"REQB","B","SD*5.3*132",2)

"BLD",5888,"REQB","B","SD*5.3*266",5)

"BLD",5888,"REQB","B","SD*5.3*301",6)

"BLD",5888,"REQB","B","SD*5.3*466",4)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930925
"PKG",16,22,1,"PAH",1,0)
460^3070326
"PKG",16,22,1,"PAH",1,1,0)
^^2^2^3070326
"PKG",16,22,1,"PAH",1,1,1,0)
Option 'Retroactive Visits List' [SDAM RPT RETROACTIVE LIST] has been
"PKG",16,22,1,"PAH",1,1,2,0)
modified to call a Scheduling API to retrieve appointment data.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","SDAMOL1")
0^2^B26330628^B12779195
"RTN","SDAMOL1",1,0)
SDAMOL1 ;ALB/CAW - Retroactive Appointment List (con't);4/15/92 ; 2/16/07 2:59pm
"RTN","SDAMOL1",2,0)
 ;;5.3;Scheduling;**132,466,460**;Aug 13, 1993
"RTN","SDAMOL1",3,0)
 ;
"RTN","SDAMOL1",4,0)
 ;02/16/07  SD*5.3*466  Applied 466 changes to include inpatients
"RTN","SDAMOL1",5,0)
 ;09/27/05  SD*5.3*460    Direct access to patient appointments is now encapsulated
"RTN","SDAMOL1",6,0)
 ;                        via SDAPI API. SDAPI supports distributed appointment files
"RTN","SDAMOL1",7,0)
 ;                        (whether actual files are located in VistA DB or non-VistA DB).
"RTN","SDAMOL1",8,0)
 ;                        -- M.M.
"RTN","SDAMOL1",9,0)
 ;****************************************************************************************
"RTN","SDAMOL1",10,0)
 ;
"RTN","SDAMOL1",11,0)
MAIN ; main sort, by division
"RTN","SDAMOL1",12,0)
 N SDTMP,SDX,SDTMP1,SDTMP2
"RTN","SDAMOL1",13,0)
 K ^TMP("SDRL",$J),^TMP("SDRAL",$J)
"RTN","SDAMOL1",14,0)
 ;
"RTN","SDAMOL1",15,0)
 ; -- get list of database close out dates
"RTN","SDAMOL1",16,0)
 S SDTMP=SDBEG
"RTN","SDAMOL1",17,0)
 F  D  S SDTMP=$$NEXTDT(SDTMP) Q:SDTMP>SDEND
"RTN","SDAMOL1",18,0)
 . S SDX=$P($$CLOSEOUT^SCDXFU04(SDTMP),U,SDNPDB)
"RTN","SDAMOL1",19,0)
 . IF SDX'=-1 S ^TMP("SDRL",$J,SDTMP)=SDX
"RTN","SDAMOL1",20,0)
 ;
"RTN","SDAMOL1",21,0)
 I ($D(VAUTC)>1)!($D(VAUTS)>1) D  ; Return Appts for Specifc Clinics/Stop Codes.
"RTN","SDAMOL1",22,0)
 .N SDARRAY,SDERR,SDRESULT K ^TMP($J,"SDAMA301")
"RTN","SDAMOL1",23,0)
 .S SDARRAY(1)=SDBEG_";"_SDEND ; Date Range of Appts.
"RTN","SDAMOL1",24,0)
 .I $D(VAUTC)>1 S SDARRAY(2)="VAUTC(" ; Search Appts for Selected Clinics.
"RTN","SDAMOL1",25,0)
 .I $D(VAUTS)>1 D  ; Search Appts for Selected Stop Codes.
"RTN","SDAMOL1",26,0)
 ..S (SDARRAY(13),SDTMP1)=""
"RTN","SDAMOL1",27,0)
 ..F  S SDTMP1=$O(VAUTS(SDTMP1)) Q:SDTMP1=""  D
"RTN","SDAMOL1",28,0)
 ...S SDTMP2=+$P($G(^DIC(40.7,SDTMP1,0)),"^",2) I SDTMP2<1 Q
"RTN","SDAMOL1",29,0)
 ...S SDARRAY(13)=SDARRAY(13)_SDTMP2_";"
"RTN","SDAMOL1",30,0)
 .S SDARRAY("FLDS")="16",SDRESULT=$$SDAPI^SDAMA301(.SDARRAY)
"RTN","SDAMOL1",31,0)
 .I SDRESULT<1 D  D MAINQ Q  ; SDAPI Returned an Error.
"RTN","SDAMOL1",32,0)
 ..S SDERR=$$SDAPIERR^SDAMUTDT() I $L(SDERR) W !!,SDERR,! D OUT^SDUTL
"RTN","SDAMOL1",33,0)
 ;
"RTN","SDAMOL1",34,0)
 D SCAN
"RTN","SDAMOL1",35,0)
 D BLD^SDAMOLP
"RTN","SDAMOL1",36,0)
 ;
"RTN","SDAMOL1",37,0)
MAINQ ; -- exit logic
"RTN","SDAMOL1",38,0)
 K SDDV,SDSC,SDCLK,SDCLNM,SDCN,SDCNT,SDAD,SDATA,SDDFN,SDCLIN
"RTN","SDAMOL1",39,0)
 K SDCLINIC,SDCLC,SDASH,SDCSC,SDDIV,SDDATE,SDAPPT,SDFLEN,SDFLG
"RTN","SDAMOL1",40,0)
 K SDPAT,SDPAGE,SDSLEN,SDFST,SDROU,SDSEC,SDSTOP,SDSTPC,SDSTPCDE
"RTN","SDAMOL1",41,0)
 K SDTYPE,SDVISIT,SDWHEN,SDVDT,SDVST,SDVSTDT,SDY,SDTRANS,SDTMP
"RTN","SDAMOL1",42,0)
 K VA,VAERR,X,^TMP("SDRAL",$J),^TMP($J,"SDAMA301")
"RTN","SDAMOL1",43,0)
 Q
"RTN","SDAMOL1",44,0)
 ;
"RTN","SDAMOL1",45,0)
SCAN ; -- api to invoke scan
"RTN","SDAMOL1",46,0)
 ;
"RTN","SDAMOL1",47,0)
 ; -- send message to task manager and check for stop request
"RTN","SDAMOL1",48,0)
 IF $$S^%ZTLOAD("Searching for Retroactive Encounters...") S ZTSTOP=1 G SCANQ
"RTN","SDAMOL1",49,0)
 N SDCB,SDQID
"RTN","SDAMOL1",50,0)
 S SDCB="D CB^SDAMOL1(.Y,.Y0,.SDSTOP)"
"RTN","SDAMOL1",51,0)
 D OPEN^SDQ(.SDQID)
"RTN","SDAMOL1",52,0)
 D ACTIVE^SDQ(.SDQID,"FALSE","SET")
"RTN","SDAMOL1",53,0)
 D INDEX^SDQ(.SDQID,"DATE/TIME","SET")
"RTN","SDAMOL1",54,0)
 D DATE^SDQ(.SDQID,SDBEG,SDEND,"SET")
"RTN","SDAMOL1",55,0)
 D SCANCB^SDQ(.SDQID,SDCB,"SET")
"RTN","SDAMOL1",56,0)
 D ACTIVE^SDQ(.SDQID,"TRUE","SET")
"RTN","SDAMOL1",57,0)
 D SCAN^SDQ(.SDQID,"FORWARD")
"RTN","SDAMOL1",58,0)
 D CLOSE^SDQ(.SDQID)
"RTN","SDAMOL1",59,0)
SCANQ Q
"RTN","SDAMOL1",60,0)
 ;
"RTN","SDAMOL1",61,0)
 ;
"RTN","SDAMOL1",62,0)
CB(SDOE,SDOE0,SDSTOP) ; -- main callback
"RTN","SDAMOL1",63,0)
 N SDVISIT,SDVSTDT,SDPAT,SDSC,SDCL,SDOEP,SDORG,SDEXT,SDDIV,SDOEU
"RTN","SDAMOL1",64,0)
 N SDCLK,SDWHEN,SDCLNM,SDSTPCDE,SDTYPE,SDVSIT,SDCODT,SDSTATUS
"RTN","SDAMOL1",65,0)
 ;
"RTN","SDAMOL1",66,0)
 ; -- has user asked to stop job ; if yes, kill data & quit
"RTN","SDAMOL1",67,0)
 IF $$S^%ZTLOAD() D  G CBQ
"RTN","SDAMOL1",68,0)
 . S (SDSTOP,ZTSTOP)=1
"RTN","SDAMOL1",69,0)
 . K ^TMP("SDRAL",$J)
"RTN","SDAMOL1",70,0)
 ;
"RTN","SDAMOL1",71,0)
 ; -- set up variables for data fields
"RTN","SDAMOL1",72,0)
 S SDVISIT=SDOE
"RTN","SDAMOL1",73,0)
 S SDVSTDT=+SDOE0
"RTN","SDAMOL1",74,0)
 S SDPAT=+$P(SDOE0,U,2)
"RTN","SDAMOL1",75,0)
 S SDSC=+$P(SDOE0,U,3)
"RTN","SDAMOL1",76,0)
 S SDCL=+$P(SDOE0,U,4)
"RTN","SDAMOL1",77,0)
 S SDVSIT=+$P(SDOE0,U,5)
"RTN","SDAMOL1",78,0)
 S SDOEP=+$P(SDOE0,U,6)
"RTN","SDAMOL1",79,0)
 S SDCODT=+$P(SDOE0,U,7)
"RTN","SDAMOL1",80,0)
 S SDORG=+$P(SDOE0,U,8)
"RTN","SDAMOL1",81,0)
 S SDEXT=+$P(SDOE0,U,9)
"RTN","SDAMOL1",82,0)
 S SDDIV=+$P(SDOE0,U,11)
"RTN","SDAMOL1",83,0)
 S SDSTATUS=+$P(SDOE0,U,12)
"RTN","SDAMOL1",84,0)
 S SDOEU=$G(^SCE(SDOE,"USER"))
"RTN","SDAMOL1",85,0)
 S SDCLK=+SDOEU
"RTN","SDAMOL1",86,0)
 S SDWHEN=+$P(SDOEU,U,4)
"RTN","SDAMOL1",87,0)
 ;
"RTN","SDAMOL1",88,0)
 ; -- drived data
"RTN","SDAMOL1",89,0)
 IF 'SDWHEN,SDORG=1,SDEXT S SDWHEN=+$$APPT^SDAMOL1(SDCL,SDPAT,SDVSTDT) ; Return 'Date Appt Made'.
"RTN","SDAMOL1",90,0)
 IF 'SDWHEN S SDWHEN=+$P($G(^AUPNVSIT(SDVSIT,0)),U,2)
"RTN","SDAMOL1",91,0)
 S SDCLNM=$P($G(^SC(SDCL,0),0),U)
"RTN","SDAMOL1",92,0)
 S SDSTPCDE=+$P($G(^DIC(40.7,SDSC,0)),U,2)
"RTN","SDAMOL1",93,0)
 S SDTYPE=$S(SDORG=1:"APPOINTMENT",SDORG=2:"STANDALONE",SDORG=3:"DISPOSITION",1:"UNKNOWN")
"RTN","SDAMOL1",94,0)
 ;
"RTN","SDAMOL1",95,0)
 ; -- quit if encounter has parent
"RTN","SDAMOL1",96,0)
 IF SDOEP G CBQ
"RTN","SDAMOL1",97,0)
 ;
"RTN","SDAMOL1",98,0)
 ; -- quit if no 'created' date found
"RTN","SDAMOL1",99,0)
 IF 'SDWHEN G CBQ
"RTN","SDAMOL1",100,0)
 ;
"RTN","SDAMOL1",101,0)
 ; -- quit if 'created' before close out date
"RTN","SDAMOL1",102,0)
 IF '$$TMP(+SDOE0,SDWHEN) G CBQ
"RTN","SDAMOL1",103,0)
 ;
"RTN","SDAMOL1",104,0)
 ; -- quit if no checked out completion date/time
"RTN","SDAMOL1",105,0)
 IF 'SDCODT G CBQ
"RTN","SDAMOL1",106,0)
 ;
"RTN","SDAMOL1",107,0)
 ; -- quit if not status is not 'checked out' or 'inpatient'
"RTN","SDAMOL1",108,0)
 IF "^8^2^"'[("^"_SDSTATUS_"^") G CBQ
"RTN","SDAMOL1",109,0)
 ;
"RTN","SDAMOL1",110,0)
 ;-- quit if non-count clinic
"RTN","SDAMOL1",111,0)
 IF $P($G(^SC(SDCL,0)),U,17)="Y" G CBQ
"RTN","SDAMOL1",112,0)
 ;
"RTN","SDAMOL1",113,0)
 ; -- quit if division or clinic or stop code not valid for report
"RTN","SDAMOL1",114,0)
 IF '$$DIV() G CBQ
"RTN","SDAMOL1",115,0)
 IF '$$CLINIC() G CBQ
"RTN","SDAMOL1",116,0)
 IF '$$STOP() G CBQ
"RTN","SDAMOL1",117,0)
 ;
"RTN","SDAMOL1",118,0)
 D SET
"RTN","SDAMOL1",119,0)
CBQ Q
"RTN","SDAMOL1",120,0)
 ;
"RTN","SDAMOL1",121,0)
 ;
"RTN","SDAMOL1",122,0)
NEXTDT(X1) ; -- get next date
"RTN","SDAMOL1",123,0)
 N X2
"RTN","SDAMOL1",124,0)
 S X2=1 D C^%DTC
"RTN","SDAMOL1",125,0)
 Q X
"RTN","SDAMOL1",126,0)
 ;
"RTN","SDAMOL1",127,0)
SET ;^TMP("SDRAL",$J,Division,Stop Code,Visit Date,Patient)
"RTN","SDAMOL1",128,0)
 ;
"RTN","SDAMOL1",129,0)
 S ^TMP("SDRAL",$J,SDDIV,SDSTPCDE,SDVSTDT,SDPAT)=SDVISIT_U_SDWHEN_U_SDCLK_U_SDTYPE_U_^TMP("SDRL",$J,$P(SDVSTDT,"."))_U_SDCLNM
"RTN","SDAMOL1",130,0)
SETQ Q
"RTN","SDAMOL1",131,0)
 ;
"RTN","SDAMOL1",132,0)
TMP(SDENCDT,SDMADE) ; -- Check to see if ^TMP("SDRL",$J,Encounter Date/Time)
"RTN","SDAMOL1",133,0)
 ;                    exists
"RTN","SDAMOL1",134,0)
 ;  input - SDENCDT := encounter date/time
"RTN","SDAMOL1",135,0)
 ;          SDMADE  := date encounter made
"RTN","SDAMOL1",136,0)
 ;
"RTN","SDAMOL1",137,0)
 ; output - 1 or 0
"RTN","SDAMOL1",138,0)
 ;
"RTN","SDAMOL1",139,0)
 IF '$D(^TMP("SDRL",$J,$P(SDENCDT,"."))) Q 0
"RTN","SDAMOL1",140,0)
 Q ^TMP("SDRL",$J,$P(SDENCDT,"."))<(SDMADE_.9)
"RTN","SDAMOL1",141,0)
 ;
"RTN","SDAMOL1",142,0)
DIV() ; -- valid division for report ?
"RTN","SDAMOL1",143,0)
 Q $S(VAUTD=1:1,1:$D(VAUTD(SDDIV)))
"RTN","SDAMOL1",144,0)
 ;
"RTN","SDAMOL1",145,0)
CLINIC() ; -- valid clinic for report ?
"RTN","SDAMOL1",146,0)
 Q $S('$D(VAUTC):1,VAUTC=1:1,1:$D(VAUTC(SDCL)))
"RTN","SDAMOL1",147,0)
 ;
"RTN","SDAMOL1",148,0)
STOP() ; -- valid stop code for report ?
"RTN","SDAMOL1",149,0)
 Q $S('$D(VAUTS):1,VAUTS=1:1,1:$D(VAUTS(SDSC)))
"RTN","SDAMOL1",150,0)
 ;
"RTN","SDAMOL1",151,0)
APPT(SDCL,SDPAT,SDVSTDT) ; Return 'Date Appt Made' field.
"RTN","SDAMOL1",152,0)
 ; If user selected specific Clinic or Stop Code then SDAPI has been called in line tag MAIN+nnn above.
"RTN","SDAMOL1",153,0)
 I ($D(VAUTC)>1)!($D(VAUTS)>1) Q $P($G(^TMP($J,"SDAMA301",SDPAT,SDCL,SDVSTDT)),U,16)
"RTN","SDAMOL1",154,0)
 ;
"RTN","SDAMOL1",155,0)
 ; If User selected ALL Clinics/Stop Codes then search for specific Appt.
"RTN","SDAMOL1",156,0)
 N SDARRAY,SDERR,SDRESULT K ^TMP($J,"SDAMA301")
"RTN","SDAMOL1",157,0)
 S SDARRAY(1)=SDVSTDT ; Specific Date of Appt.
"RTN","SDAMOL1",158,0)
 S SDARRAY(2)=SDCL ; Specific Clinic.
"RTN","SDAMOL1",159,0)
 S SDARRAY(4)=SDPAT ;  Specific Patient.
"RTN","SDAMOL1",160,0)
 S SDARRAY("MAX")=1 ; Should Return Only One Appt.
"RTN","SDAMOL1",161,0)
 S SDARRAY("FLDS")="16",SDRESULT=$$SDAPI^SDAMA301(.SDARRAY)
"RTN","SDAMOL1",162,0)
 I SDRESULT<1 D  Q 0  ; SDAPI Returned an Error.
"RTN","SDAMOL1",163,0)
 .S SDERR=$$SDAPIERR^SDAMUTDT() I $L(SDERR) W !!,SDERR,! D OUT^SDUTL
"RTN","SDAMOL1",164,0)
 Q $P($G(^TMP($J,"SDAMA301",SDPAT,SDCL,SDVSTDT)),U,16)  ; Return Date Appt Made.
"RTN","SDAMOL1",165,0)
 ;
"VER")
8.0^22.0
"BLD",5888,6)
^418
**END**
**END**
