Released DG*5.3*657 SEQ #653
Extracted from mail message
**KIDS**:DG*5.3*657^

**INSTALL NAME**
DG*5.3*657
"BLD",6020,0)
DG*5.3*657^REGISTRATION^0^3061024^y
"BLD",6020,4,0)
^9.64PA^2^1
"BLD",6020,4,2,0)
2
"BLD",6020,4,2,2,0)
^9.641^2^1
"BLD",6020,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",6020,4,2,2,2,1,0)
^9.6411^1901^1
"BLD",6020,4,2,2,2,1,1901,0)
VETERAN (Y/N)?
"BLD",6020,4,2,222)
y^n^p^^^^n^^n
"BLD",6020,4,2,224)

"BLD",6020,4,38.6,2,38.6,1,50,0)
DESCRIPTION
"BLD",6020,4,"APDD",2,2)

"BLD",6020,4,"APDD",2,2,1901)

"BLD",6020,4,"APDD",38.6,38.6,50)

"BLD",6020,4,"B",2,2)

"BLD",6020,6)
11^
"BLD",6020,6.3)
19
"BLD",6020,"ABPKG")
n
"BLD",6020,"INI")

"BLD",6020,"INID")
^n^n
"BLD",6020,"INIT")
EN^DG53657P
"BLD",6020,"KRN",0)
^9.67PA^8989.52^19
"BLD",6020,"KRN",.4,0)
.4
"BLD",6020,"KRN",.401,0)
.401
"BLD",6020,"KRN",.402,0)
.402
"BLD",6020,"KRN",.403,0)
.403
"BLD",6020,"KRN",.5,0)
.5
"BLD",6020,"KRN",.84,0)
.84
"BLD",6020,"KRN",3.6,0)
3.6
"BLD",6020,"KRN",3.8,0)
3.8
"BLD",6020,"KRN",9.2,0)
9.2
"BLD",6020,"KRN",9.8,0)
9.8
"BLD",6020,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",6020,"KRN",9.8,"NM",1,0)
DGRP7CC^^0^B9449490
"BLD",6020,"KRN",9.8,"NM",2,0)
DGRPC3^^0^B20051384
"BLD",6020,"KRN",9.8,"NM",3,0)
DGRPC2^^0^B65148755
"BLD",6020,"KRN",9.8,"NM",4,0)
DPTLK1^^0^B42806553
"BLD",6020,"KRN",9.8,"NM",5,0)
DGRPCE1^^0^B60025284
"BLD",6020,"KRN",9.8,"NM",6,0)
DG53657P^^0^B18327297
"BLD",6020,"KRN",9.8,"NM","B","DG53657P",6)

"BLD",6020,"KRN",9.8,"NM","B","DGRP7CC",1)

"BLD",6020,"KRN",9.8,"NM","B","DGRPC2",3)

"BLD",6020,"KRN",9.8,"NM","B","DGRPC3",2)

"BLD",6020,"KRN",9.8,"NM","B","DGRPCE1",5)

"BLD",6020,"KRN",9.8,"NM","B","DPTLK1",4)

"BLD",6020,"KRN",19,0)
19
"BLD",6020,"KRN",19,"NM",0)
^9.68A^^
"BLD",6020,"KRN",19.1,0)
19.1
"BLD",6020,"KRN",101,0)
101
"BLD",6020,"KRN",101,"NM",0)
^9.68A^^
"BLD",6020,"KRN",409.61,0)
409.61
"BLD",6020,"KRN",771,0)
771
"BLD",6020,"KRN",870,0)
870
"BLD",6020,"KRN",8989.51,0)
8989.51
"BLD",6020,"KRN",8989.52,0)
8989.52
"BLD",6020,"KRN",8994,0)
8994
"BLD",6020,"KRN","B",.4,.4)

"BLD",6020,"KRN","B",.401,.401)

"BLD",6020,"KRN","B",.402,.402)

"BLD",6020,"KRN","B",.403,.403)

"BLD",6020,"KRN","B",.5,.5)

"BLD",6020,"KRN","B",.84,.84)

"BLD",6020,"KRN","B",3.6,3.6)

"BLD",6020,"KRN","B",3.8,3.8)

"BLD",6020,"KRN","B",9.2,9.2)

"BLD",6020,"KRN","B",9.8,9.8)

"BLD",6020,"KRN","B",19,19)

"BLD",6020,"KRN","B",19.1,19.1)

"BLD",6020,"KRN","B",101,101)

"BLD",6020,"KRN","B",409.61,409.61)

"BLD",6020,"KRN","B",771,771)

"BLD",6020,"KRN","B",870,870)

"BLD",6020,"KRN","B",8989.51,8989.51)

"BLD",6020,"KRN","B",8989.52,8989.52)

"BLD",6020,"KRN","B",8994,8994)

"BLD",6020,"QUES",0)
^9.62^^
"BLD",6020,"REQB",0)
^9.611^6^4
"BLD",6020,"REQB",1,0)
DG*5.3*570^2
"BLD",6020,"REQB",4,0)
DG*5.3*673^2
"BLD",6020,"REQB",5,0)
DG*5.3*538^2
"BLD",6020,"REQB",6,0)
DG*5.3*689^2
"BLD",6020,"REQB","B","DG*5.3*538",5)

"BLD",6020,"REQB","B","DG*5.3*570",1)

"BLD",6020,"REQB","B","DG*5.3*673",4)

"BLD",6020,"REQB","B","DG*5.3*689",6)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,1901)

"FIA",38.6)
INCONSISTENT DATA ELEMENTS
"FIA",38.6,0)
^DGIN(38.6,
"FIA",38.6,0,0)
38.6s
"FIA",38.6,0,1)
^^f
"FIA",38.6,0,10)

"FIA",38.6,0,11)

"FIA",38.6,0,"RLRO")

"FIA",38.6,0,"VR")
5.3^DG
"FIA",38.6,38.6)
0
"FIA",38.6,38.61)
0
"INIT")
EN^DG53657P
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
657^3061024^123456834
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","DG53657P")
0^6^B18327297^n/a
"RTN","DG53657P",1,0)
DG53657P ;BAJ - Patch DG*5.3*657 Pre-Install Utility Routine ; 10/24/2006
"RTN","DG53657P",2,0)
 ;;5.3;Registration;**657**;AUG 13, 1993;Build 19
"RTN","DG53657P",3,0)
 Q
"RTN","DG53657P",4,0)
 ;
"RTN","DG53657P",5,0)
 ;
"RTN","DG53657P",6,0)
EN N XPDABORT
"RTN","DG53657P",7,0)
 D LKUP(61,"MISSING PHONE NUMBER DATA","C")
"RTN","DG53657P",8,0)
 ;2 - consistency check not there, 3 - consistency check is wrong
"RTN","DG53657P",9,0)
 I ($G(XPDABORT)=2)!($G(XPDABORT)=3) Q  ;Find file 38.6 entry
"RTN","DG53657P",10,0)
 D LKUP(87,"SC ELIG BUT NO RD CODES","A")
"RTN","DG53657P",11,0)
 Q:$G(XPDABORT)=3
"RTN","DG53657P",12,0)
 D POSTN ;Modify file 38.6 entry
"RTN","DG53657P",13,0)
 D CREATE ;add the 87 consistency check
"RTN","DG53657P",14,0)
 D COMPILE
"RTN","DG53657P",15,0)
 Q
"RTN","DG53657P",16,0)
 ;
"RTN","DG53657P",17,0)
LKUP(RULE,FIELD01,MODE) ; Update entry in INCONSISTENT DATA ELEMENTS file (#38.6)
"RTN","DG53657P",18,0)
 ;MODE = 'C' change
"RTN","DG53657P",19,0)
 ;MODE = 'A' add
"RTN","DG53657P",20,0)
 N ERR,DA,DIE,DR,X
"RTN","DG53657P",21,0)
 K XPDABORT
"RTN","DG53657P",22,0)
 D BMES^XPDUTL("Checking entry #"_RULE_" in 38.6 file.")
"RTN","DG53657P",23,0)
 S DIE=38.6,DA=$$FIND1^DIC(DIE,"","X",RULE)
"RTN","DG53657P",24,0)
 I 'DA,MODE="C" D  Q
"RTN","DG53657P",25,0)
 . S XPDABORT=2
"RTN","DG53657P",26,0)
 . D MES^XPDUTL("    *** Entry not found! ***")
"RTN","DG53657P",27,0)
 . D BMES^XPDUTL("    *** Please contact EVS for assistance ***")
"RTN","DG53657P",28,0)
 . D BMES^XPDUTL("    *** INSTALLATION ABORTED ***")
"RTN","DG53657P",29,0)
 . D BMES^XPDUTL("")
"RTN","DG53657P",30,0)
 . Q
"RTN","DG53657P",31,0)
 S X=""
"RTN","DG53657P",32,0)
 I $G(DA)'="" S X=$G(^DGIN(38.6,DA,0))
"RTN","DG53657P",33,0)
 I X'="",$P(X,"^",1)'=FIELD01 D  Q
"RTN","DG53657P",34,0)
 . S XPDABORT=3
"RTN","DG53657P",35,0)
 . D MES^XPDUTL("    *** Field #.01 should be "_FIELD01_"! ***")
"RTN","DG53657P",36,0)
 . D BMES^XPDUTL("    *** Please contact EVS for assistance ***")
"RTN","DG53657P",37,0)
 . D BMES^XPDUTL("    *** INSTALLATION ABORTED ***")
"RTN","DG53657P",38,0)
 . D BMES^XPDUTL("")
"RTN","DG53657P",39,0)
 . Q
"RTN","DG53657P",40,0)
 Q
"RTN","DG53657P",41,0)
POSTN ; Update entry in INCONSISTENT DATA ELEMENTS file (#38.6)
"RTN","DG53657P",42,0)
 N FILE,IENS,FIELD,DGWP,ERRORS,FDA
"RTN","DG53657P",43,0)
 D BMES^XPDUTL("Updating Consistency #61")
"RTN","DG53657P",44,0)
 ;FDA_ROOT(FILE#,"IENS",FIELD#)="VALUE"
"RTN","DG53657P",45,0)
 S FILE=38.6,IENS="61,",FIELD=50
"RTN","DG53657P",46,0)
 S DGWP(1,0)="Inconsistency results if the patient's Employment Status is EMPLOYED FULL"
"RTN","DG53657P",47,0)
 S DGWP(2,0)="TIME, EMPLOYED PART TIME, or SELF EMPLOYED and the PHONE NUMBER [WORK] has"
"RTN","DG53657P",48,0)
 S DGWP(3,0)="not been entered."
"RTN","DG53657P",49,0)
 S FDA(FILE,IENS,FIELD)="DGWP"
"RTN","DG53657P",50,0)
 D FILE^DIE("K","FDA","ERRORS(1)")
"RTN","DG53657P",51,0)
 I $D(ERRORS) D  Q
"RTN","DG53657P",52,0)
 . D MES^XPDUTL("    *** Error filing Data Dictionary update! ***")
"RTN","DG53657P",53,0)
 . D BMES^XPDUTL("    *** Please contact EVS for assistance ***")
"RTN","DG53657P",54,0)
 . D BMES^XPDUTL("    *** INSTALLATION ABORTED ***")
"RTN","DG53657P",55,0)
 . D BMES^XPDUTL("")
"RTN","DG53657P",56,0)
 . Q
"RTN","DG53657P",57,0)
 D MES^XPDUTL("    *** Update Complete ***")
"RTN","DG53657P",58,0)
 D BMES^XPDUTL("")
"RTN","DG53657P",59,0)
 Q
"RTN","DG53657P",60,0)
 ;
"RTN","DG53657P",61,0)
CREATE ;Post-Install
"RTN","DG53657P",62,0)
 N MSGROOT,FDAWP,FDAROOT,IENROOT,IEN,X,ERR,LN,LN2
"RTN","DG53657P",63,0)
 S X=$G(^DGIN(38.6,87,0))
"RTN","DG53657P",64,0)
 I $L(X),$P(X,"^",1)'="SC ELIG BUT NO RD CODES" D  Q
"RTN","DG53657P",65,0)
 . D BMES^XPDUTL("An entry already exists in file 38.6 for consistency #87.")
"RTN","DG53657P",66,0)
 . D MES^XPDUTL("Cannot add SC ELIG BUT NO RD CODES.")
"RTN","DG53657P",67,0)
 . Q
"RTN","DG53657P",68,0)
 I $L(X),$P(X,"^",1)="SC ELIG BUT NO RD CODES" Q
"RTN","DG53657P",69,0)
 D BMES^XPDUTL("Adding Consistency #87")
"RTN","DG53657P",70,0)
 S IEN="+1,"
"RTN","DG53657P",71,0)
 S FDAROOT(38.6,IEN,.01)="SC ELIG BUT NO RD CODES"
"RTN","DG53657P",72,0)
 S FDAROOT(38.6,IEN,2)="SC ELIGIBILITY BUT NO RATED DISABILITY CODES"
"RTN","DG53657P",73,0)
 S FDAROOT(38.6,IEN,50)="FDAWP"
"RTN","DG53657P",74,0)
 S FDAWP(1,0)="Inconsistency results if the PRIMARY ELIGIBILITY CODE"
"RTN","DG53657P",75,0)
 S FDAWP(2,0)="is a 1 (SERVICE CONNECTED 50% TO 100%) or a 3 (SC LESS THAN 50%)"
"RTN","DG53657P",76,0)
 S FDAWP(3,0)="and no rated disabilities are present."
"RTN","DG53657P",77,0)
 S FDAROOT(38.6,IEN,3)="NO KEY REQUIRED"
"RTN","DG53657P",78,0)
 S FDAROOT(38.6,IEN,5)="CHECK"
"RTN","DG53657P",79,0)
 S IENROOT(1)=87
"RTN","DG53657P",80,0)
 D UPDATE^DIE("E","FDAROOT","IENROOT","MSGROOT")
"RTN","DG53657P",81,0)
 I $D(MSGROOT("DIERR")) D  Q
"RTN","DG53657P",82,0)
 . S (ERR,LN2)=0
"RTN","DG53657P",83,0)
 . D ERR
"RTN","DG53657P",84,0)
 . D BMES^XPDUTL(.X)
"RTN","DG53657P",85,0)
 . Q
"RTN","DG53657P",86,0)
 D MES^XPDUTL("    *** CC #87 Added ***")
"RTN","DG53657P",87,0)
 D BMES^XPDUTL("")
"RTN","DG53657P",88,0)
 Q
"RTN","DG53657P",89,0)
ERR F  S ERR=+$O(MSGROOT("DIERR",ERR)) Q:'ERR  D LN
"RTN","DG53657P",90,0)
 Q
"RTN","DG53657P",91,0)
LN S LN=0
"RTN","DG53657P",92,0)
 F  S LN=+$O(MSGROOT("DIERR",ERR,"TEXT",LN)) Q:'LN  D
"RTN","DG53657P",93,0)
 . S LN2=LN2+1
"RTN","DG53657P",94,0)
 . S X(LN2)=MSGROOT("DIERR",ERR,"TEXT",LN)
"RTN","DG53657P",95,0)
 . Q
"RTN","DG53657P",96,0)
 Q
"RTN","DG53657P",97,0)
COMPILE ;compile screen 7
"RTN","DG53657P",98,0)
 D BMES^XPDUTL("Re-compiling input template DG LOAD EDIT SCREEN 7 of PATIENT FILE(#2)")
"RTN","DG53657P",99,0)
 N X,Y,DMAX
"RTN","DG53657P",100,0)
 S Y=$O(^DIE("B","DG LOAD EDIT SCREEN 7",""))
"RTN","DG53657P",101,0)
 I Y'="" D
"RTN","DG53657P",102,0)
 . S X=$G(^DIE(Y,"ROU")) I $E(X)="^" S X=$E(X,2,99)
"RTN","DG53657P",103,0)
 . S DMAX=$$ROUSIZE^DILF
"RTN","DG53657P",104,0)
 . D EN^DIEZ
"RTN","DG53657P",105,0)
 . Q
"RTN","DG53657P",106,0)
 D BMES^XPDUTL("Re-compiling input template DVBHINQ UPDATE of PATIENT FILOE(#2)")
"RTN","DG53657P",107,0)
 S Y=$O(^DIE("B","DVBHINQ UPDATE",""))
"RTN","DG53657P",108,0)
 I Y'="" D
"RTN","DG53657P",109,0)
 . S X=$G(^DIE(Y,"ROU")) I $E(X)="^" S X=$E(X,2,99)
"RTN","DG53657P",110,0)
 . S DMAX=$$ROUSIZE^DILF
"RTN","DG53657P",111,0)
 . D EN^DIEZ
"RTN","DG53657P",112,0)
 . Q
"RTN","DG53657P",113,0)
 Q
"RTN","DGRP7CC")
0^1^B9449490^n/a
"RTN","DGRP7CC",1,0)
DGRP7CC ;BAJ,EG - REGISTRATION SCREEN 7/CROSS REFERENCE CLEANUP ;10/24/2006
"RTN","DGRP7CC",2,0)
 ;;5.3;Registration;**657**;Aug 13, 1993;Build 19
"RTN","DGRP7CC",3,0)
EN ; entry point
"RTN","DGRP7CC",4,0)
 ;
"RTN","DGRP7CC",5,0)
 ; Code to TRIGGER deletion of field data.
"RTN","DGRP7CC",6,0)
 N DGENDA,DATA,VAL,ERROR,CNT,FIELD,X
"RTN","DGRP7CC",7,0)
 S DGENDA=DA
"RTN","DGRP7CC",8,0)
 I $$CHNGD(DFN) D
"RTN","DGRP7CC",9,0)
 . ;need to kill this node or the deletes won't work...
"RTN","DGRP7CC",10,0)
 . ;you get a message that patient is not a veteran
"RTN","DGRP7CC",11,0)
 . K ^DPT(DFN,"VET")
"RTN","DGRP7CC",12,0)
 . F CNT=1:1 S FIELD=$P($T(DATA+CNT),";;",3) Q:FIELD="QUIT"  D
"RTN","DGRP7CC",13,0)
 .. S VAL=$S(FIELD=.301:"N",1:"@")
"RTN","DGRP7CC",14,0)
 .. S DATA(FIELD)=VAL
"RTN","DGRP7CC",15,0)
 .. Q
"RTN","DGRP7CC",16,0)
 . S X=$$UPD^DGENDBS(2,DGENDA,.DATA,.ERROR)
"RTN","DGRP7CC",17,0)
 . ; delete Service Related Conditions if NON-Vet
"RTN","DGRP7CC",18,0)
 . D DELSVC(DFN)
"RTN","DGRP7CC",19,0)
 . ;remove service connected and compensation connected eligibilities
"RTN","DGRP7CC",20,0)
 . S X=$$OELIG(DFN)
"RTN","DGRP7CC",21,0)
 . S ^DPT(DFN,"VET")="N"
"RTN","DGRP7CC",22,0)
 . Q
"RTN","DGRP7CC",23,0)
 Q
"RTN","DGRP7CC",24,0)
 ;
"RTN","DGRP7CC",25,0)
 ;
"RTN","DGRP7CC",26,0)
CHNGD(DFN)  ; logic to determine if value has changed
"RTN","DGRP7CC",27,0)
 N Y,X
"RTN","DGRP7CC",28,0)
 ; if a new entry read the array
"RTN","DGRP7CC",29,0)
 I '$D(^DPT(DFN,"VET")) D  Q X
"RTN","DGRP7CC",30,0)
 . S Y(1)=$C(59)_$P($G(^DD(2,1901,0)),U,3) S X=$P($P(Y(1),$C(59)_Y(0)_":",2),$C(59))="NO"
"RTN","DGRP7CC",31,0)
 ; 
"RTN","DGRP7CC",32,0)
 ; else read the "VET" value
"RTN","DGRP7CC",33,0)
 S Y(2)=$C(59)_$P($G(^DD(2,1901,0)),U,3),Y(1)=$S($D(^DPT(DFN,"VET")):^DPT(DFN,"VET"),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,1)_":",2),$C(59))="NO"
"RTN","DGRP7CC",34,0)
 ;
"RTN","DGRP7CC",35,0)
 ; Return 0 for VET, 1 for NON-Vet
"RTN","DGRP7CC",36,0)
 Q X
"RTN","DGRP7CC",37,0)
 ;
"RTN","DGRP7CC",38,0)
DELSVC(DFN) ; Delete Service Connected Conditions
"RTN","DGRP7CC",39,0)
 N DA,DIK
"RTN","DGRP7CC",40,0)
 S DIK="^DPT("_DFN_",.373,"
"RTN","DGRP7CC",41,0)
 S DA=0 F  S DA=$O(^DPT(DFN,.373,DA)) Q:DA=""  D ^DIK
"RTN","DGRP7CC",42,0)
 Q
"RTN","DGRP7CC",43,0)
 ;
"RTN","DGRP7CC",44,0)
OELIG(DFN) ;remove sc codes from other eligibility
"RTN","DGRP7CC",45,0)
 N DA,DIK,OLD,VAL,IEN,DE
"RTN","DGRP7CC",46,0)
 S DIK="^DPT("_DFN_","_$C(34)_"E"_$C(34)_","
"RTN","DGRP7CC",47,0)
 S DA=0 F  S DA=$O(^DPT(DFN,"E",DA)) Q:DA=""  D
"RTN","DGRP7CC",48,0)
 . S IEN=$P($G(^DPT(DFN,"E",DA,0)),"^",1) I IEN="" Q
"RTN","DGRP7CC",49,0)
 . S VAL=$P($G(^DIC(8,IEN,0)),"^",1)
"RTN","DGRP7CC",50,0)
 . I $T(NVETNSC)'[(";"_VAL_";") Q
"RTN","DGRP7CC",51,0)
 . S DA(1)=DFN
"RTN","DGRP7CC",52,0)
 . D ^DIK
"RTN","DGRP7CC",53,0)
 . Q
"RTN","DGRP7CC",54,0)
 Q 1
"RTN","DGRP7CC",55,0)
DATA ;These are the fields to be changed
"RTN","DGRP7CC",56,0)
 ;;Receiving A&A;;.36205
"RTN","DGRP7CC",57,0)
 ;;Amount of A&A;;.3621
"RTN","DGRP7CC",58,0)
 ;;Receiving Housebound;;.36215
"RTN","DGRP7CC",59,0)
 ;;Amount of Housebound;;.3622
"RTN","DGRP7CC",60,0)
 ;;Receiving VA Pension;;.36235
"RTN","DGRP7CC",61,0)
 ;;Service Connected;;.301
"RTN","DGRP7CC",62,0)
 ;;Service Connected %-age;;.302
"RTN","DGRP7CC",63,0)
 ;;SC Award Date;;.3012
"RTN","DGRP7CC",64,0)
 ;;Eff. Date Combined SC% Eval;;.3014
"RTN","DGRP7CC",65,0)
 ;;Rated Incompetent;;.293
"RTN","DGRP7CC",66,0)
 ;;Date Ruled Incompetent (VA);;.291
"RTN","DGRP7CC",67,0)
 ;;Date Ruled Incompetent (Civil);;.292
"RTN","DGRP7CC",68,0)
 ;;VA Disability;;.3025
"RTN","DGRP7CC",69,0)
 ;;Amount of VA Disability;;.303
"RTN","DGRP7CC",70,0)
 ;;Amount of VA Pension;;.3624
"RTN","DGRP7CC",71,0)
 ;;Total Check Amount;;.36295
"RTN","DGRP7CC",72,0)
 ;;POW Indicated;;.525
"RTN","DGRP7CC",73,0)
 ;;POW War;;.526
"RTN","DGRP7CC",74,0)
 ;;POW Date From;;.527
"RTN","DGRP7CC",75,0)
 ;;POW Date To;;.528
"RTN","DGRP7CC",76,0)
 ;;Mil Disab Retirement;;.3602
"RTN","DGRP7CC",77,0)
 ;;Discharge Due to Disab;;.3603
"RTN","DGRP7CC",78,0)
 ;;QUIT;;QUIT
"RTN","DGRP7CC",79,0)
 ;;
"RTN","DGRP7CC",80,0)
NVETNSC ;;SC LESS THAN 50%;SERVICE CONNECTED 50% to 100%;NSC, VA PENSION;AID & ATTENDANCE;HOUSEBOUND;ALLIED VETERAN;
"RTN","DGRPC2")
0^3^B65148755^B59651485
"RTN","DGRPC2",1,0)
DGRPC2 ;ALB/MRL/SCK/PJR,BAJ - CHECK CONSISTENCY OF PATIENT DATA (CONT) ; 11/20/2005
"RTN","DGRPC2",2,0)
 ;;5.3;Registration;**45,69,108,121,205,218,342,387,470,467,489,505,507,528,451,564,570,657**;Aug 13, 1993;Build 19
"RTN","DGRPC2",3,0)
 ;
"RTN","DGRPC2",4,0)
43 ;off
"RTN","DGRPC2",5,0)
44 ;off
"RTN","DGRPC2",6,0)
45 ;off
"RTN","DGRPC2",7,0)
46 ;off
"RTN","DGRPC2",8,0)
47 ;off
"RTN","DGRPC2",9,0)
 S DGLST=$S(DGCHK[",47,":47,DGCHK[",46,":46,DGCHK[",45,":45,DGCHK[",44,":44,1:DGLST)
"RTN","DGRPC2",10,0)
 D NEXT G @DGLST
"RTN","DGRPC2",11,0)
48 I DGVT S DGD=DGP(.362) I DGCHK[(",48,"),($P(DGD,"^",17)="Y"),($P(DGD,"^",6)="") S X=48 D COMB
"RTN","DGRPC2",12,0)
 D NEXT G @DGLST
"RTN","DGRPC2",13,0)
49 ;
"RTN","DGRPC2",14,0)
50 ; insurance checks
"RTN","DGRPC2",15,0)
 I DGCHK[",49,"!(DGCHK[",50,") D  S DGLST=$S(DGCHK["50":50,1:49)
"RTN","DGRPC2",16,0)
 . N COV,INS,X
"RTN","DGRPC2",17,0)
 . S X=0,COV=$S($P(DGP(.31),"^",11)="Y":1,1:0)
"RTN","DGRPC2",18,0)
 . S INS=$$INSUR^IBBAPI(DFN,DT,"R")
"RTN","DGRPC2",19,0)
 . I COV,'INS S X=49 ; yes, but none
"RTN","DGRPC2",20,0)
 . I 'COV,INS S X=50 ; not yes, but some
"RTN","DGRPC2",21,0)
 . I DGCHK[(","_X_",") D COMB
"RTN","DGRPC2",22,0)
 D NEXT G @DGLST
"RTN","DGRPC2",23,0)
51 D NEXT G @DGLST ; 51 disabled
"RTN","DGRPC2",24,0)
 S X=$S($D(^DIC(21,+$P(DGP(.32),"^",3),0)):$P(^(0),"^",3),1:"")
"RTN","DGRPC2",25,0)
 I X="Z"&($P(DGP(.32),"^",5)'=7)&($P(DGP(.32),"^",10)'=7)&($P(DGP(.32),"^",15)'=7)!($P(DGP(.32),"^",5)=7&(X'="Z")) S X=51 D COMB
"RTN","DGRPC2",26,0)
 ;
"RTN","DGRPC2",27,0)
52 I $P(DGP(.31),"^",11)']"" S X=52 D COMB ;automatically on
"RTN","DGRPC2",28,0)
 D NEXT G @DGLST
"RTN","DGRPC2",29,0)
53 I $P(DGP(.311),"^",15)']"" S X=53 D COMB ;automatically on
"RTN","DGRPC2",30,0)
 D NEXT G @DGLST
"RTN","DGRPC2",31,0)
54 ;
"RTN","DGRPC2",32,0)
55 ;BELOW IS USED BY BOTH 54 & 55
"RTN","DGRPC2",33,0)
 S DGLST=$S(DGCHK["55":55,1:54)
"RTN","DGRPC2",34,0)
 I $G(^DPT(DFN,.35)),(^(.35)<+($E(DT,1,3)_"0000")) D NEXT G @DGLST ; patient died before current year
"RTN","DGRPC2",35,0)
 N DGE S DGE=+$O(^DIC(8.1,"B","SERVICE CONNECTED 50% to 100%",0))
"RTN","DGRPC2",36,0)
 I $P($G(^DPT(DFN,.3)),U,2)'<50!($P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),U,9)=DGE) D NEXT G @DGLST ;50-100% SC
"RTN","DGRPC2",37,0)
 S DGPTYP=$G(^DG(391,+DGP("TYPE"),"S")),DGISYR=$E(DT,1,3)-1_"0000" I '$P(DGPTYP,"^",8)&('$P(DGPTYP,"^",9)) K DGPTYP,DGISYR D NEXT G @DGLST ; screens 8 and 9 off
"RTN","DGRPC2",38,0)
 D ALL^DGMTU21(DFN,"VSD",DT,"IP")
"RTN","DGRPC2",39,0)
 I '$P(DGPTYP,"^",8)!(DGCHK'["54") G JUST55 ; screen 8 off OR JUST 55 IN CHK
"RTN","DGRPC2",40,0)
 S DGFL=0 I $D(DGREL("S")),($$SSN^DGMTU1(+DGREL("S"))']"") S DGFL=1
"RTN","DGRPC2",41,0)
 I 'DGFL F I=0:0 S I=$O(DGREL("D",I)) Q:'I  I $$SSN^DGMTU1(+DGREL("D",I))']"" S DGFL=1 Q
"RTN","DGRPC2",42,0)
 I DGFL S X=54 D COMB
"RTN","DGRPC2",43,0)
JUST55 I DGCHK'["55" D NEXT G @DGLST
"RTN","DGRPC2",44,0)
 S DGLST=55
"RTN","DGRPC2",45,0)
 I '$P(DGPTYP,"^",9) D NEXT G @DGLST ; screen 9 off
"RTN","DGRPC2",46,0)
 D TOT^DGRP9(.DGINC) S DGFL=0
"RTN","DGRPC2",47,0)
 F DGD="V","S","D" I $D(DGTOT(DGD)) F I=8:1:17 I $P(DGTOT(DGD),"^",I)]"" S DGFL=1 Q
"RTN","DGRPC2",48,0)
 I 'DGFL N DGAPD,DG55 D  I 'DGAPD&('DG55)  S X=55 D COMB
"RTN","DGRPC2",49,0)
 . S DGAPD=+$$LST^DGMTU(DFN),DGAPD=+$P($G(^DGMT(408.31,+DGAPD,0)),U,11)
"RTN","DGRPC2",50,0)
 . S DG55=$$CHECK55(DFN) ; **507, Additional Income Checks
"RTN","DGRPC2",51,0)
 D NEXT G @DGLST
"RTN","DGRPC2",52,0)
56 I DGVT S DGD=DGP(.3) I DGCHK[(",56,"),($P(DGD,"^",11)="Y"),($P(DGP(.362),"^",20)="") S X=56 D COMB
"RTN","DGRPC2",53,0)
 D NEXT G END^DGRPC3:$S('+DGLST:1,+DGLST=99:1,1:0) G @DGLST
"RTN","DGRPC2",54,0)
57 I $P(DGP(.38),U,1) D
"RTN","DGRPC2",55,0)
 .N X1,X2
"RTN","DGRPC2",56,0)
 .S X1=$P(DGP(.38),U,2)
"RTN","DGRPC2",57,0)
 .S X=$P($G(^DG(43,1,0)),U,46) S X2=$S(X:X,1:365) D C^%DTC
"RTN","DGRPC2",58,0)
 .I X<DT S X=57 D COMB
"RTN","DGRPC2",59,0)
 D NEXT G @DGLST
"RTN","DGRPC2",60,0)
58 ;58 - EC Claim - No Gulf/Som Svc
"RTN","DGRPC2",61,0)
 ;off
"RTN","DGRPC2",62,0)
 D NEXT G @DGLST
"RTN","DGRPC2",63,0)
59 ;59 - incomplete Catastrophic Disability info
"RTN","DGRPC2",64,0)
 I $$HASCAT^DGENCDA(DFN) D
"RTN","DGRPC2",65,0)
 .I '$P(DGP(.39),"^",2) S X=59 D COMB
"RTN","DGRPC2",66,0)
 D NEXT G @DGLST
"RTN","DGRPC2",67,0)
60 ;60 - Location of agent orange exposure unanswered
"RTN","DGRPC2",68,0)
 I DGVT,$P(DGP(.321),"^",2)="Y",$P(DGP(.321),"^",13)="" S X=60 D COMB
"RTN","DGRPC2",69,0)
 D NEXT G @DGLST
"RTN","DGRPC2",70,0)
61 ;61 - Incomplete Phone Number
"RTN","DGRPC2",71,0)
 ; DG*5.3*657 BAJ Phone number check modified
"RTN","DGRPC2",72,0)
 ; Home phone check is disabled
"RTN","DGRPC2",73,0)
 ; Work phone is required only if pt is employed
"RTN","DGRPC2",74,0)
 N EMPST
"RTN","DGRPC2",75,0)
 S EMPST=","_$P($G(^DPT(DFN,.311)),U,15)_","
"RTN","DGRPC2",76,0)
 I ",1,2,4,"[EMPST,($P(DGP(.13),"^",2)="") S X=61 D COMB
"RTN","DGRPC2",77,0)
 D NEXT G @DGLST
"RTN","DGRPC2",78,0)
62 ;62 - Missing Emergency Contact Name
"RTN","DGRPC2",79,0)
 I $P(DGP(.33),"^")="" S X=62 D COMB
"RTN","DGRPC2",80,0)
 D NEXT G @DGLST
"RTN","DGRPC2",81,0)
63 ;Confidential Address check
"RTN","DGRPC2",82,0)
 I $P($$CAACT^DGRPCADD(DFN),U) D
"RTN","DGRPC2",83,0)
 .N DGI,DGERR
"RTN","DGRPC2",84,0)
 .S DGERR=0
"RTN","DGRPC2",85,0)
 .F DGI=1,4,5,6 Q:DGERR  I $P(DGP(.141),U,DGI)="" S DGERR=1
"RTN","DGRPC2",86,0)
 .I DGERR S X=63 D COMB
"RTN","DGRPC2",87,0)
 D NEXT G @DGLST
"RTN","DGRPC2",88,0)
64 ;64 - Place of Birth City/State Missing ;**505
"RTN","DGRPC2",89,0)
 I $P(DGP(0),"^",11)=""!($P(DGP(0),"^",12)="") S X=64 D COMB
"RTN","DGRPC2",90,0)
 D NEXT G @DGLST
"RTN","DGRPC2",91,0)
65 ;65 - Mother's Maiden Name Missing ;**505
"RTN","DGRPC2",92,0)
 I $P(DGP(.24),"^",3)="" S X=65 D COMB
"RTN","DGRPC2",93,0)
 D NEXT G @DGLST
"RTN","DGRPC2",94,0)
66 ;66 - Pseudo SSN in use ;**505
"RTN","DGRPC2",95,0)
 ; DG*5.3*657 BAJ 11/20/2005 Removed from CC.  Pseudo notice appears in Patient List
"RTN","DGRPC2",96,0)
 ;I $P(DGP(0),"^",9)["P" S X=66 D COMB
"RTN","DGRPC2",97,0)
 ; off
"RTN","DGRPC2",98,0)
 D NEXT G @DGLST
"RTN","DGRPC2",99,0)
67 ;67 - Serv Sep Date [Last] missing or imprecise, patch 528
"RTN","DGRPC2",100,0)
 N DGG
"RTN","DGRPC2",101,0)
 S DGG=$$CVELIG^DGCV(DFN)
"RTN","DGRPC2",102,0)
 I $G(DGG)["A"!($G(DGG)["F") S X=67 D COMB
"RTN","DGRPC2",103,0)
 D NEXT G @DGLST
"RTN","DGRPC2",104,0)
68 ;used for 68-71, for Combat Vet, DG*5.3*528
"RTN","DGRPC2",105,0)
69 ;
"RTN","DGRPC2",106,0)
70 ;
"RTN","DGRPC2",107,0)
71 ;
"RTN","DGRPC2",108,0)
 ;68 - Combat To Date missing or imprecise, patch 528
"RTN","DGRPC2",109,0)
 ;69 - Yugoslavia To Date missing or imprecise, patch 528
"RTN","DGRPC2",110,0)
 ;70 - Somalia To Date missing or imprecise, patch 528
"RTN","DGRPC2",111,0)
 ;71 - Persian Gulf To Date missing or imprecise, patch 528
"RTN","DGRPC2",112,0)
 N DGG
"RTN","DGRPC2",113,0)
 S DGG=$$CVELIG^DGCV(DFN)
"RTN","DGRPC2",114,0)
 I DGG["B"!(DGG["G") S X=68 D COMB
"RTN","DGRPC2",115,0)
 I DGG["C"!(DGG["H") S X=69 D COMB
"RTN","DGRPC2",116,0)
 I DGG["D"!(DGG["I") S X=70 D COMB
"RTN","DGRPC2",117,0)
 I DGG["E"!(DGG["J") S X=71 D COMB
"RTN","DGRPC2",118,0)
 S DGLST=71
"RTN","DGRPC2",119,0)
 D NEXT G @DGLST
"RTN","DGRPC2",120,0)
72 ;; MSE - Required Fields
"RTN","DGRPC2",121,0)
 S:'$G(MSECHK) MSECHK=$$MSCK^DGMSCK I MSERR S X=72 D COMB
"RTN","DGRPC2",122,0)
 D NEXT G @DGLST
"RTN","DGRPC2",123,0)
73 ;; An MSE FROM date precedes an MSE TO date
"RTN","DGRPC2",124,0)
 S:'$G(MSECHK) MSECHK=$$MSCK^DGMSCK I MSDATERR D NEXT G @DGLST
"RTN","DGRPC2",125,0)
 F I1=6,11,16 I '$$B4^DGRPDT($P(DGP(.32),"^",I1),$P(DGP(.32),"^",I1+1),1) S X=73 D COMB S (MSERR,MSDATERR)=1 Q
"RTN","DGRPC2",126,0)
 D NEXT G @DGLST
"RTN","DGRPC2",127,0)
74 ;; Conflict Date Missing or Incomplete
"RTN","DGRPC2",128,0)
 S:'$G(CONCHK) CONCHK=$$CNCK^DGMSCK I CONERR S X=74 D COMB
"RTN","DGRPC2",129,0)
 D NEXT G @DGLST
"RTN","DGRPC2",130,0)
75 ;; Conflict TO date precedes FROM date
"RTN","DGRPC2",131,0)
76 ;; Conflict Date out of range for conflict
"RTN","DGRPC2",132,0)
 S:'$G(CONCHK) CONCHK=$$CNCK^DGMSCK
"RTN","DGRPC2",133,0)
 S LOC="",(I5,I6)=0 F I1=1:1 S LOC=$O(CONSPEC(LOC)) Q:LOC=""  I CONARR(LOC)=1 D
"RTN","DGRPC2",134,0)
 .N FROMDAT,FROMPC,TODAT,TOPC,NODE,DATA
"RTN","DGRPC2",135,0)
 .S DATA=CONSPEC(LOC)
"RTN","DGRPC2",136,0)
 .S NODE=$P(DATA,",",1),FROMPC=$P(DATA,",",3),TOPC=$P(DATA,",",4)
"RTN","DGRPC2",137,0)
 .S FROMDAT=$P(DGP(NODE),"^",FROMPC),TODAT=$P(DGP(NODE),"^",TOPC)
"RTN","DGRPC2",138,0)
 .I '$$B4^DGRPDT(FROMDAT,TODAT,1) S X=75 D COMB:'I5&(DGCHK[(",75,")) S CONARR(LOC)=2,I5=1 Q
"RTN","DGRPC2",139,0)
 .I DGCHK'[(",76,") Q
"RTN","DGRPC2",140,0)
 .S:'$G(RANSET) RANSET=$$RANGE^DGMSCK
"RTN","DGRPC2",141,0)
 .I '$$RWITHIN^DGRPDT($P(RANGE(LOC),"^",1),$P(RANGE(LOC),"^",2),FROMDAT,TODAT) S X=76 D COMB:'I6 S CONARR(LOC)=2,I6=1
"RTN","DGRPC2",142,0)
 .Q
"RTN","DGRPC2",143,0)
 S DGLST=76 D NEXT G @DGLST
"RTN","DGRPC2",144,0)
77 ;; Date out of range for POW Location
"RTN","DGRPC2",145,0)
 S:'$G(RANSET) RANSET=$$RANGE^DGMSCK
"RTN","DGRPC2",146,0)
 ;; Don't check if POW Data Incomplete or if POW TO precedes FROM
"RTN","DGRPC2",147,0)
 I ((","_DGER_",")[(",37,"))!((","_DGER_",")[(",38,")) D NEXT G @DGLST
"RTN","DGRPC2",148,0)
 I $P(DGP(.52),"^",5)'="Y" D NEXT G @DGLST ;; Don't check if no POW
"RTN","DGRPC2",149,0)
 S LOC=$$COMPOW^DGRPMS($P(DGP(.52),"^",6)) I LOC="" D NEXT G @DGLST
"RTN","DGRPC2",150,0)
 I '$$RWITHIN^DGRPDT($P(RANGE(LOC),"^",1),$P(RANGE(LOC),"^",2),$P(DGP(.52),"^",7),$P(DGP(.52),"^",8)) S X=77 D COMB
"RTN","DGRPC2",151,0)
 D NEXT G @DGLST
"RTN","DGRPC2",152,0)
78 ;; Date out of range for Combat Location
"RTN","DGRPC2",153,0)
 S:'$G(RANSET) RANSET=$$RANGE^DGMSCK
"RTN","DGRPC2",154,0)
 ;; Don't check if Combat Data Incomplete or if Combat TO precedes FROM
"RTN","DGRPC2",155,0)
 I ((","_DGER_",")[(",39,"))!((","_DGER_",")[(",40,")) D NEXT G @DGLST
"RTN","DGRPC2",156,0)
 I $P(DGP(.52),"^",11)'="Y" D NEXT G @DGLST ;; Don't check if no COMBAT
"RTN","DGRPC2",157,0)
 S LOC=$$COMPOW^DGRPMS($P(DGP(.52),"^",12)) I LOC="" D NEXT G @DGLST
"RTN","DGRPC2",158,0)
 I '$$RWITHIN^DGRPDT($P(RANGE(LOC),"^",1),$P(RANGE(LOC),"^",2),$P(DGP(.52),"^",13),$P(DGP(.52),"^",14)) S X=78 D COMB
"RTN","DGRPC2",159,0)
 D NEXT G @DGLST
"RTN","DGRPC2",160,0)
COMB S DGCT=DGCT+1,DGER=DGER_X_",",DGLST=X Q
"RTN","DGRPC2",161,0)
 ;
"RTN","DGRPC2",162,0)
NEXT S I=$F(DGCHK,(","_+DGLST_",")),DGLST=+$E(DGCHK,I,999) I +DGLST,+DGLST<79 Q
"RTN","DGRPC2",163,0)
 S:'DGLST DGLST="END^DGRPC3" I +DGLST S DGLST=DGLST_"^DGRPC3"
"RTN","DGRPC2",164,0)
 Q
"RTN","DGRPC2",165,0)
FIND F I=DGLST:1:99 I DGCHK[(","_I_",") Q
"RTN","DGRPC2",166,0)
 I DGNCK,(I>17),(I<36) S DGLST=36 G FIND
"RTN","DGRPC2",167,0)
 I I,I<99 S DGLST=I G @(DGLST_$S(DGLST>78:"^DGRPC3",DGLST>42:"",DGLST>17:"^DGRPC1",1:"^DGRPC"))
"RTN","DGRPC2",168,0)
 G END^DGRPC3
"RTN","DGRPC2",169,0)
 ;
"RTN","DGRPC2",170,0)
CHECK55(DFN) ;Buisness rules for additional 55-INCOME DATA MISSING checks
"RTN","DGRPC2",171,0)
 ;  Modeled from DGMTR checks.
"RTN","DGRPC2",172,0)
 ;  Input  DFN - IEN from PATIENT File #2
"RTN","DGRPC2",173,0)
 ;
"RTN","DGRPC2",174,0)
 ;  Output 1 - If Income check passes additional buisness rules
"RTN","DGRPC2",175,0)
 ;         0 - If Income check fails additional buisness rules
"RTN","DGRPC2",176,0)
 ;
"RTN","DGRPC2",177,0)
 N VAMB,VASV,VA,VADMVT,VAEL,VAINDT,DGRTN,DGMED,DG,DG1,DGWARD,DGSRVC
"RTN","DGRPC2",178,0)
 N PCNT
"RTN","DGRPC2",179,0)
 ;
"RTN","DGRPC2",180,0)
 S DGRTN=0
"RTN","DGRPC2",181,0)
 D MB^VADPT I +VAMB(7) S DGRTN=1 G Q55  ; Check if receiving VA Disability
"RTN","DGRPC2",182,0)
 D SVC^VADPT I +VASV(4) S DGRTN=1 G Q55  ; check if POW status indicated
"RTN","DGRPC2",183,0)
 I +VASV(9),(+VASV(9,1)=3) S DGRTN=1 G Q55  ; Check if Purple Heart Status is Confirmed
"RTN","DGRPC2",184,0)
 D GETS^DIQ(2,DFN_",",".381:.383","I","DGMED")
"RTN","DGRPC2",185,0)
 I $G(DGMED(2,DFN_",",.381,"I")) S DGRTN=1 G Q55  ; Check if eligible for Medicaid
"RTN","DGRPC2",186,0)
 D ADM^VADPT2 ; Check for current admission to DOM ward 
"RTN","DGRPC2",187,0)
 I +$G(VADMVT) D  G:DGRTN Q55
"RTN","DGRPC2",188,0)
 . Q:'$$GET1^DIQ(43,1,16,"I")  ; Has Dom wards?
"RTN","DGRPC2",189,0)
 . S DGWARD=$$GET1^DIQ(405,VADMVT,.06,"I") ; Get ward location
"RTN","DGRPC2",190,0)
 . S DGSRVC=$$GET1^DIQ(42,DGWARD,.03,"I") ; Get ward service
"RTN","DGRPC2",191,0)
 . S:DGSRVC="D" DGRTN=1 ; If ward service is 'D', then return 1
"RTN","DGRPC2",192,0)
 ;
"RTN","DGRPC2",193,0)
 ; Additional checks for 0% SC
"RTN","DGRPC2",194,0)
 D ELIG^VADPT
"RTN","DGRPC2",195,0)
 I +VAEL(3),'$P(VAEL(3),U,2) D  ; Check if service connected with % of zero
"RTN","DGRPC2",196,0)
 . I +VAMB(4) S DGRTN=1 Q  ; Check if receiving a VA pension
"RTN","DGRPC2",197,0)
 . S DG=0 ; Check for secondary eligibilities
"RTN","DGRPC2",198,0)
 . F  S DG=$O(VAEL(1,DG)) Q:'DG  D  Q:DGRTN
"RTN","DGRPC2",199,0)
 . . F DG1=2,4,15,16,17,18 I DG=DG1 S DGRTN=1 Q
"RTN","DGRPC2",200,0)
 ; DG*5.3*657 BAJ
"RTN","DGRPC2",201,0)
 ; Additional business rules
"RTN","DGRPC2",202,0)
 ; Do NOT file inconsistency for the following:
"RTN","DGRPC2",203,0)
 ; 1. Service Connected = YES, Eligibility Code is "SC LESS THAN 50%", SC % is 10-49, A&A = "YES"
"RTN","DGRPC2",204,0)
 ; 2. Service Connected = YES, Eligibility Code is "SC LESS THAN 50%", SC % is 10-49, VA Pension = "YES"
"RTN","DGRPC2",205,0)
 ; 3. Patient Type is "NSC Veteran" and A&A = "YES"
"RTN","DGRPC2",206,0)
 ; 4. Patient Type is "NSC Veteran" and VA Pension = "YES"
"RTN","DGRPC2",207,0)
 ; Arrays elements used:
"RTN","DGRPC2",208,0)
 ; .. VAEL(3) $P 1 = SERVICE CONNECTED? $P 2 = SC %
"RTN","DGRPC2",209,0)
 ; .. VAEL(6) $P 2 = PATIENT TYPE, "B" INDEX VALUE
"RTN","DGRPC2",210,0)
 ; .. VAMB(1) $P 1 = RECEIVING A&A
"RTN","DGRPC2",211,0)
 ; .. VAMB(4) $P 1 = RECEIVING VA PENSION
"RTN","DGRPC2",212,0)
 I $P(VAEL(1),"^",2)="SC LESS THAN 50%",+VAEL(3) S PCNT=$P(VAEL(3),"^",2) I PCNT'<10,PCNT'>50 S DGRTN=$S(+VAMB(1):1,VAMB(4):1,1:DGRTN)
"RTN","DGRPC2",213,0)
 I $P($G(VAEL(6)),"^",2)="NSC VETERAN" S DGRTN=$S(+VAMB(1):1,VAMB(4):1,1:DGRTN)
"RTN","DGRPC2",214,0)
Q55 D KVAR^VADPT
"RTN","DGRPC2",215,0)
 Q $G(DGRTN)
"RTN","DGRPC3")
0^2^B20051384^B18322459
"RTN","DGRPC3",1,0)
DGRPC3 ;ALB/PJR,LBD - CHECK CONSISTENCY OF PATIENT DATA (CONT) ; 08/15/2006 1:00 PM
"RTN","DGRPC3",2,0)
 ;;5.3;Registration;**451,632,673,657**;Aug 13, 1993;Build 19
"RTN","DGRPC3",3,0)
 ;
"RTN","DGRPC3",4,0)
79 ;; MSE Dates overlap
"RTN","DGRPC3",5,0)
 ;; Don't check if MSE Dates Incomplete or if MSE TO precedes FROM
"RTN","DGRPC3",6,0)
 ;; or unless at least 2 ranges
"RTN","DGRPC3",7,0)
 S:'$G(MSECHK) MSECHK=$$MSCK^DGMSCK I MSDATERR!($L(ANYMSE)<2) D NEXT G @DGLST
"RTN","DGRPC3",8,0)
 I ANYMSE[1,'$$OVRLPCHK^DGRPDT(DFN,$P(DGP(.32),"^",6),$P(DGP(.32),"^",7),1,".326^.327") S X=79 D COMB S MSERR=1 D NEXT G @DGLST
"RTN","DGRPC3",9,0)
 I ANYMSE'[1,'$$OVRLPCHK^DGRPDT(DFN,$P(DGP(.32),"^",11),$P(DGP(.32),"^",12),1,".3292^.3293") S X=79 D COMB S MSERR=1 D NEXT G @DGLST
"RTN","DGRPC3",10,0)
 D NEXT G @DGLST
"RTN","DGRPC3",11,0)
80 ;; POW Dates not within MSE
"RTN","DGRPC3",12,0)
 I '$P(DGP(.52),"^",6) D NEXT G @DGLST ;; Don't check if no POW Data
"RTN","DGRPC3",13,0)
 ;; Don't check if POW Data Incomplete or if POW TO precedes FROM
"RTN","DGRPC3",14,0)
 I ((","_DGER_",")[(",37,"))!((","_DGER_",")[(",38,")) D NEXT G @DGLST
"RTN","DGRPC3",15,0)
 S:'$G(MSECHK) MSECHK=$$MSCK^DGMSCK S:'$G(MSESET) MSESET=$$MSFROMTO^DGMSCK
"RTN","DGRPC3",16,0)
 ;; If POW, but no MSE, then Range is NOT within MSE
"RTN","DGRPC3",17,0)
 I 'ANYMSE S X=80 D COMB D NEXT G @DGLST
"RTN","DGRPC3",18,0)
 I '$$RWITHIN^DGRPDT($P(MSESET,"^",1),$P(MSESET,"^",2),$P(DGP(.52),"^",7),$P(DGP(.52),"^",8)) S X=80 D COMB
"RTN","DGRPC3",19,0)
 D NEXT G @DGLST
"RTN","DGRPC3",20,0)
81 ;; Combat Dates not within MSE
"RTN","DGRPC3",21,0)
 I '$P(DGP(.52),"^",12) D NEXT G @DGLST ;; Don't check if no COMBAT Data
"RTN","DGRPC3",22,0)
 ;; Don't check if COMBAT Data Incomplete or if COMBAT TO precedes FROM
"RTN","DGRPC3",23,0)
 I ((","_DGER_",")[(",39,"))!((","_DGER_",")[(",40,")) D NEXT G @DGLST
"RTN","DGRPC3",24,0)
 S:'$G(MSECHK) MSECHK=$$MSCK^DGMSCK S:'$G(MSESET) MSESET=$$MSFROMTO^DGMSCK
"RTN","DGRPC3",25,0)
 ;; If COMBAT, but no MSE, then Range is NOT within MSE
"RTN","DGRPC3",26,0)
 I 'ANYMSE S X=81 D COMB D NEXT G @DGLST
"RTN","DGRPC3",27,0)
 I '$$RWITHIN^DGRPDT($P(MSESET,"^",1),$P(MSESET,"^",2),$P(DGP(.52),"^",13),$P(DGP(.52),"^",14)) S X=81 D COMB
"RTN","DGRPC3",28,0)
 D NEXT G @DGLST
"RTN","DGRPC3",29,0)
82 ;; Conflict Dates not within MSE
"RTN","DGRPC3",30,0)
 S:'$G(CONCHK) CONCHK=$$CNCK^DGMSCK
"RTN","DGRPC3",31,0)
 S:'$G(MSECHK) MSECHK=$$MSCK^DGMSCK S:'$G(MSESET) MSESET=$$MSFROMTO^DGMSCK
"RTN","DGRPC3",32,0)
 S LOC="",I2=0 F I1=1:1 S LOC=$O(CONSPEC(LOC)) Q:LOC=""  I CONARR(LOC)=1 D
"RTN","DGRPC3",33,0)
 .N FROMDAT,FROMPC,TODAT,TOPC,NODE,DATA
"RTN","DGRPC3",34,0)
 .S DATA=CONSPEC(LOC)
"RTN","DGRPC3",35,0)
 .S NODE=$P(DATA,",",1),FROMPC=$P(DATA,",",3),TOPC=$P(DATA,",",4)
"RTN","DGRPC3",36,0)
 .S FROMDAT=$P(DGP(NODE),"^",FROMPC),TODAT=$P(DGP(NODE),"^",TOPC)
"RTN","DGRPC3",37,0)
 .I '$$RWITHIN^DGRPDT($P(MSESET,"^",1),$P(MSESET,"^",2),FROMDAT,TODAT) S X=82 D COMB:'I2 S CONARR(LOC)=2,I2=1
"RTN","DGRPC3",38,0)
 .Q
"RTN","DGRPC3",39,0)
 ; Check OIF/OEF conflict dates
"RTN","DGRPC3",40,0)
 N DGOEIF D GET^DGENOEIF(DFN,.DGOEIF,0,"",0)
"RTN","DGRPC3",41,0)
 I $G(DGOEIF("COUNT")),DGER'[",82," D
"RTN","DGRPC3",42,0)
 . N Z
"RTN","DGRPC3",43,0)
 . S Z=0 F  S Z=$O(DGOEIF("IEN",Z)) Q:'Z  D  Q:DGER[",82,"
"RTN","DGRPC3",44,0)
 .. S FROMDAT=$G(DGOEIF("FR",Z)),TODAT=$G(DGOEIF("TO",Z)),LOC=$G(DGOEIF("LOC",Z))
"RTN","DGRPC3",45,0)
 .. I '$$RWITHIN^DGRPDT($P(MSESET,"^",1),$P(MSESET,"^",2),FROMDAT,TODAT) S X=82 D COMB S I2=1
"RTN","DGRPC3",46,0)
 D NEXT G @DGLST
"RTN","DGRPC3",47,0)
83 ;Merchant Seaman or Filipino Vet BOS requires service dates during WWII
"RTN","DGRPC3",48,0)
 N BOS,BOSN,MS,MSE,OUT
"RTN","DGRPC3",49,0)
 F MS=1:1:3 D  Q:$G(OUT)
"RTN","DGRPC3",50,0)
 .I MS=2,$P(DGP(.32),U,19)'="Y" S OUT=1 Q
"RTN","DGRPC3",51,0)
 .I MS=3,$P(DGP(.32),U,20)'="Y" S OUT=1 Q
"RTN","DGRPC3",52,0)
 .S BOS=$P(DGP(.32),U,(5*MS)) Q:'BOS  S BOSN=$P($G(^DIC(23,BOS,0)),U)
"RTN","DGRPC3",53,0)
 .S MSE=$S(MS=1:"MSL",MS=2:"MSNTL",1:"MSNNTL")
"RTN","DGRPC3",54,0)
 .I $$BRANCH^DGRPMS(BOS_U_BOSN),'$$WWII^DGRPMS(DFN,"",MSE) S X=83 D COMB S OUT=1 Q
"RTN","DGRPC3",55,0)
 D NEXT G @DGLST
"RTN","DGRPC3",56,0)
84 ;Filipino Vet BOS requires Filipino Vet Proof
"RTN","DGRPC3",57,0)
 N MS,BOS,OUT
"RTN","DGRPC3",58,0)
 F MS=1:1:3 D  Q:$G(OUT)
"RTN","DGRPC3",59,0)
 .I MS=2,$P(DGP(.32),U,19)'="Y" S OUT=1 Q
"RTN","DGRPC3",60,0)
 .I MS=3,$P(DGP(.32),U,20)'="Y" S OUT=1 Q
"RTN","DGRPC3",61,0)
 .S BOS=$P(DGP(.32),U,(5*MS))
"RTN","DGRPC3",62,0)
 .I $$FV^DGRPMS(BOS)=1,$P(DGP(.321),U,14)="" S X=84 D COMB S OUT=1 Q
"RTN","DGRPC3",63,0)
 D NEXT G @DGLST
"RTN","DGRPC3",64,0)
85 ;Eligible Filipino Vet should have Veteran status = 'YES'
"RTN","DGRPC3",65,0)
86 ;Ineligible Filipino Vet should have Veteran status = 'NO'
"RTN","DGRPC3",66,0)
 N MS,BOS,FV,FILV,NOTFV,MSE,OUT
"RTN","DGRPC3",67,0)
 F MS=1:1:3 D  Q:$G(OUT)
"RTN","DGRPC3",68,0)
 .I MS=2,$P(DGP(.32),U,19)'="Y" S OUT=1 Q
"RTN","DGRPC3",69,0)
 .I MS=3,$P(DGP(.32),U,20)'="Y" S OUT=1 Q
"RTN","DGRPC3",70,0)
 .S BOS=$P(DGP(.32),U,(5*MS)),FV=$$FV^DGRPMS(BOS) I 'FV S NOTFV="" Q
"RTN","DGRPC3",71,0)
 .S MSE=$S(MS=1:"MSL",MS=2:"MSNTL",1:"MSNNTL")
"RTN","DGRPC3",72,0)
 .I '$$WWII^DGRPMS(DFN,"",MSE) S FILV("I")="" Q
"RTN","DGRPC3",73,0)
 .I FV=2 S FILV("E")="" Q
"RTN","DGRPC3",74,0)
 .I $P(DGP(.321),U,14)=""!($P(DGP(.321),U,14)="NO") S FILV("I")="" Q
"RTN","DGRPC3",75,0)
 .S FILV("E")=""
"RTN","DGRPC3",76,0)
 I $D(FILV) D
"RTN","DGRPC3",77,0)
 .I DGVT'=1,$D(FILV("E")) S X=85 D COMB Q
"RTN","DGRPC3",78,0)
 .I DGCHK'[(",86,") Q
"RTN","DGRPC3",79,0)
 .I DGVT=1,'$D(NOTFV),'$D(FILV("E")),$D(FILV("I")) S X=86 D COMB
"RTN","DGRPC3",80,0)
 S DGLST=86
"RTN","DGRPC3",81,0)
 D NEXT G @DGLST
"RTN","DGRPC3",82,0)
87 ; DG*5.3*657 BAJ 11/24/2005 CC #87 added
"RTN","DGRPC3",83,0)
 ; SC Eligibility but no rated Disability Codes
"RTN","DGRPC3",84,0)
 ; 1. Svc Connected is answered "YES"
"RTN","DGRPC3",85,0)
 ; 2. Eligibility code is either SC < 50% or SC 50-100%
"RTN","DGRPC3",86,0)
 ; 3. Svc connected %-age is 0 or greater
"RTN","DGRPC3",87,0)
 ; 4. Patient has no rated disabilities
"RTN","DGRPC3",88,0)
 ; .. VAEL(1) $P 1 = Primary Eligibility Code  $p 2 = Primary Elig External Value
"RTN","DGRPC3",89,0)
 ; .. VAEL(3) $P 1 = SERVICE CONNECTED? $P 2 = SC %
"RTN","DGRPC3",90,0)
 ; .. Rated Disabilities : ^DPT(DFN,.372,0) $P 4 is number of records  '($P($G(^DPT(DFN,.372,0)),"^",4)) is TRUE
"RTN","DGRPC3",91,0)
 ;
"RTN","DGRPC3",92,0)
 ; Get Eligibility info
"RTN","DGRPC3",93,0)
 D ELIG^VADPT
"RTN","DGRPC3",94,0)
 ;
"RTN","DGRPC3",95,0)
 ; If not svc connected, don't check
"RTN","DGRPC3",96,0)
 I '$G(VAEL(3)) D NEXT G @DGLST
"RTN","DGRPC3",97,0)
 ;
"RTN","DGRPC3",98,0)
 I +VAEL(3)=1!(+VAEL(3)=3) D
"RTN","DGRPC3",99,0)
 . Q:$P(VAEL(3),"^",2)<0
"RTN","DGRPC3",100,0)
 . Q:$P(VAEL(3),"^",2)=""
"RTN","DGRPC3",101,0)
 . I '($P($G(^DPT(DFN,.372,0)),"^",4)) S X=87 D COMB
"RTN","DGRPC3",102,0)
 D NEXT G @DGLST
"RTN","DGRPC3",103,0)
 ;
"RTN","DGRPC3",104,0)
99 ; synonymous with END
"RTN","DGRPC3",105,0)
END I DGNCK S X=99 D COMB
"RTN","DGRPC3",106,0)
 I DGEDCN S DGCON=0 D TIME^DGRPC
"RTN","DGRPC3",107,0)
 K C,C1,C2,DGCD,DGD,DGD1,DGD2,DGDATE,DGDEP,DGCHK,DGFL,DGINC,DGISYR,DGLST,DGMS,DGNCK,DGP,DGPTYP,DGREL,DGSCT,DGT,DGTIME,DGTOT,DGVT,I,I2,I2,J,VAIN,X,X1
"RTN","DGRPC3",108,0)
 G ^DGRPCF
"RTN","DGRPC3",109,0)
 ;
"RTN","DGRPC3",110,0)
COMB S DGCT=DGCT+1,DGER=DGER_X_",",DGLST=X Q
"RTN","DGRPC3",111,0)
 ;;
"RTN","DGRPC3",112,0)
NEXT S I=$F(DGCHK,(","_+DGLST_",")),DGLST=+$E(DGCHK,I,999) S:'DGLST DGLST="END"
"RTN","DGRPC3",113,0)
 Q
"RTN","DGRPCE1")
0^5^B60025284^B58806369
"RTN","DGRPCE1",1,0)
DGRPCE1 ;ALB/MIR/BRM/LBD,EG - CONSISTENCY CHECKER EDIT ; 09/19/2006 8:51 AM  
"RTN","DGRPCE1",2,0)
 ;;5.3;Registration;**108,226,470,454,489,505,522,451,632,689,657**;Aug 13, 1993;Build 19
"RTN","DGRPCE1",3,0)
 N I,J F I=1:1:8,16,53,57,58,61:1:87 D SASK
"RTN","DGRPCE1",4,0)
 ;F I=49,50,52 D SASK ;BELOW REPLACED WITH ^IBCNSP2 CALL
"RTN","DGRPCE1",5,0)
 ;OLDS DR(2,2.312)="S DGRPADI="""";.01;1;2;15;8;7;3;6;S DGRPADI=X;I DGRPADI'=""v"" S Y=""@2312"";17///^S X=""`""_DFN;16///^S X=""01"";S Y=""@23121"";@2312;17;16//^S X=$S(DGRPADI=""s"":""02"",1:"""");@23121;9:14;"
"RTN","DGRPCE1",6,0)
 Q
"RTN","DGRPCE1",7,0)
SASK I DGER[(","_I_","),DGASK'[(","_I_",") F J=I,I*1000:1 Q:'$T(@J)  S DGD=DGD_$P($T(@J),";;",2,999) D SAVE
"RTN","DGRPCE1",8,0)
 S DGASK=DGASK_I_","
"RTN","DGRPCE1",9,0)
 Q
"RTN","DGRPCE1",10,0)
SAVE I $L(@DGDR)+$L(DGD)<241 S @DGDR=@DGDR_DGD,DGD="" Q
"RTN","DGRPCE1",11,0)
 S DGDRC=DGDRC+1,DGDR="DR(1,2,"_DGDRC_")",@DGDR=DGD,DGD="" Q
"RTN","DGRPCE1",12,0)
 ;
"RTN","DGRPCE1",13,0)
 ;
"RTN","DGRPCE1",14,0)
ELIG ;eligibility code...if M11+, use compiled template, otherwise DR string
"RTN","DGRPCE1",15,0)
 I ^%ZOSF("OS")'["M/11+" S DGD=$P($T(14),";;",2,999) D SAVE Q
"RTN","DGRPCE1",16,0)
 N DA,DIE,DR S DIE="^DPT(",DA=DFN,DR="[DG CONSISTENCY CHECKER]" D ^DIE
"RTN","DGRPCE1",17,0)
 Q
"RTN","DGRPCE1",18,0)
 ;
"RTN","DGRPCE1",19,0)
 ;
"RTN","DGRPCE1",20,0)
1 ;;.01;
"RTN","DGRPCE1",21,0)
2 ;;1;
"RTN","DGRPCE1",22,0)
3 ;;.02;
"RTN","DGRPCE1",23,0)
4 ;;.03;
"RTN","DGRPCE1",24,0)
5 ;;.05;
"RTN","DGRPCE1",25,0)
6 ;;.08;
"RTN","DGRPCE1",26,0)
7 ;;.09;
"RTN","DGRPCE1",27,0)
8 ;;N FLG S FLG(2)=1 S:$G(DGER)[",61," FLG(1)=1 D EN^DGREGAED(DFN,.FLG);
"RTN","DGRPCE1",28,0)
14 ;;.361;S DGECODE=$S($D(^DIC(8,+X,0)):$P(^(0),"^",1),1:"");S:$S(DGECODE["ALLIED":0,DGECODE["FEDERAL":0,1:1) Y=.323;.309;.323;D ^DGYZODS;S:'DGODS Y="@14";11500.02;11500.03;@14;
"RTN","DGRPCE1",29,0)
16 ;;.351;
"RTN","DGRPCE1",30,0)
53 ;;.07;.31115;I $S(X']"":1,X=3:1,X=9:1,1:0) S Y="@53";.3111;S:X']"" Y="@53";.3113;S:X']"" Y=.3116;.3114;S:X']"" Y=.3116;.3115:.3117;.2205;.3119;@53;
"RTN","DGRPCE1",31,0)
57 ;;.381;.382///NOW;
"RTN","DGRPCE1",32,0)
58 ;;.322013;S:X'="Y" Y="@589";.322014;.322015;.32201;S:X'="Y" Y="@581";.322011;.322012;@581;.322016;S:X'="Y" Y="@589";.322017;.322018;@589;
"RTN","DGRPCE1",33,0)
61 ;;S:$G(DGER)[",8," Y="@619";.132;@619;
"RTN","DGRPCE1",34,0)
62 ;;.331;
"RTN","DGRPCE1",35,0)
63 ;;.1411;S DIE("NO^")="OUTOK";S:X']"" Y=.1414;.1412;S:X']"" Y=.1414;.1413;.1414;.1415;.1416;Q;.14111;K DIE("NO^");
"RTN","DGRPCE1",36,0)
64 ;;.092;.093;
"RTN","DGRPCE1",37,0)
65 ;;.2403;
"RTN","DGRPCE1",38,0)
66 ;;.09;
"RTN","DGRPCE1",39,0)
67 ;;S:$$DGERCK^DGRPCE1("73^79^80^81^82",.DGER) Y="@67";W !!,$C(7),"SERVICE SEPARATION DATE [LAST] must be a precise date to determine CV Elig",!;.325;.32911;.326;.327;@67;
"RTN","DGRPCE1",40,0)
68 ;;S:$$DGERCK^DGRPCE1("39^40",.DGER) Y="@68";W !!,$C(7),"COMBAT TO DATE must be a precise date to determine CV Eligibility",!;.5291;S:X'="Y" Y="@68";.5292;.5293;.5294;@68;
"RTN","DGRPCE1",41,0)
69 ;;S:$$DGERCK^DGRPCE1("74^75^76",.DGER) Y="@69";W !!,$C(7),"YUGOSLAVIA TO DATE must be a precise date to determine CV Eligibility",!;.322019;S:X'="Y" Y="@69";.32202;.322021;@69;
"RTN","DGRPCE1",42,0)
70 ;;S:$$DGERCK^DGRPCE1("74^75^76",.DGER) Y="@70";W !!,$C(7),"SOMALIA TO DATE must be a precise date to determine CV Eligibility",!;.322016;S:X'="Y" Y="@70";.322017;.322018,@70;
"RTN","DGRPCE1",43,0)
71 ;;S:$$DGERCK^DGRPCE1("74^75^76",.DGER) Y="@71";W !!,$C(7),"PERSIAN GULF TO DATE must be a precise date to determine CV Eligibility",!;.32201;S:X'="Y" Y="@71";.322011;.322012;@71;
"RTN","DGRPCE1",44,0)
72 ;;.325;.32911;.326;.327;.324;S:'$$YN^DGRPCE1(.3285) Y="@7201";.3291;.32912;.3292;.3293;.329;@7201;S:'$$YN^DGRPCE1(.32945) Y="@7202";.3296;.32913;.3297;.3298;.3295;@7202;
"RTN","DGRPCE1",45,0)
 ;
"RTN","DGRPCE1",46,0)
73 ;;S:$$DGERCK^DGRPCE1(72,.DGER) Y="@7302";.325;.32911;.326;.327;.324;S:'$$YN^DGRPCE1(.3285) Y="@7301";.3291;.32912;.3292;.3293;.329;@7301;S:'$$YN^DGRPCE1(.32945) Y="@7302";.3296;.32913;.3297;.3298;.3295;@7302;
"RTN","DGRPCE1",47,0)
74 ;;S:'$$YN^DGRPCE1(.32101) Y="@7401";.32101;S:X'="Y" Y="@7401";.32104;.32105;@7401;S:'$$YN^DGRPCE1(.322016) Y="@7402";.322016;S:X'="Y" Y="@7402";.322017;.322018;@7402;
"RTN","DGRPCE1",48,0)
74000 ;;S:'$$YN^DGRPCE1(.322019) Y="@7403";.322019;S:X'="Y" Y="@7403";.32202;.322021;@7403;S:'$$YN^DGRPCE1(.3221) Y="@7404";.3221;S:X'="Y" Y="@7404";.3222;.3223;@7404;
"RTN","DGRPCE1",49,0)
74001 ;;S:'$$YN^DGRPCE1(.3224) Y="@7405";.3224;S:X'="Y" Y="@7405";.3225;.3226;@7405;S:'$$YN^DGRPCE1(.3227) Y="@7406";.3227;S:X'="Y" Y="@7406";.3228;.3229;@7406;
"RTN","DGRPCE1",50,0)
74002 ;;S:'$$YN^DGRPCE1(.32201) Y="@7407";.32201;S:X'="Y" Y="@7407";.322011;.322012;@7407;
"RTN","DGRPCE1",51,0)
75 ;;S:$$DGERCK^DGRPCE1(74,.DGER) Y="@7507";S:'$$YN^DGRPCE1(.32101) Y="@7501";.32101;S:X'="Y" Y="@7501";.32104;.32105;@7501;S:'$$YN^DGRPCE1(.322016) Y="@7502";.322016;S:X'="Y" Y="@7502";.322017;.322018;@7502;
"RTN","DGRPCE1",52,0)
75000 ;;S:'$$YN^DGRPCE1(.322019) Y="@7503";.322019;S:X'="Y" Y="@7503";.32202;.322021;@7503;S:'$$YN^DGRPCE1(.3221) Y="@7504";.3221;S:X'="Y" Y="@7504";.3222;.3223;@7504;
"RTN","DGRPCE1",53,0)
75001 ;;S:'$$YN^DGRPCE1(.3224) Y="@7505";.3224;S:X'="Y" Y="@7505";.3225;.3226;@7505;S:'$$YN^DGRPCE1(.3227) Y="@7506";.3227;S:X'="Y" Y="@7506";.3228;.3229;@7506;
"RTN","DGRPCE1",54,0)
75002 ;;S:'$$YN^DGRPCE1(.32201) Y="@7507";.32201;S:X'="Y" Y="@7507";.322011;.322012;@7507;
"RTN","DGRPCE1",55,0)
76 ;;S:$$DGERCK^DGRPCE1("74^75",.DGER) Y="@7607";S:'$$YN^DGRPCE1(.32101) Y="@7601";.32101;S:X'="Y" Y="@7601";.32104;.32105;@7601;S:'$$YN^DGRPCE1(.322016) Y="@7602";.322016;S:X'="Y" Y="@7602";.322017;.322018;@7602;
"RTN","DGRPCE1",56,0)
76000 ;;S:'$$YN^DGRPCE1(.322019) Y="@7603";.322019;S:X'="Y" Y="@7603";.32202;.322021;@7603;S:'$$YN^DGRPCE1(.3221) Y="@7604";.3221;S:X'="Y" Y="@7604";.3222;.3223;@7604;
"RTN","DGRPCE1",57,0)
76001 ;;S:'$$YN^DGRPCE1(.3224) Y="@7605";.3224;S:X'="Y" Y="@7605";.3225;.3226;@7605;S:'$$YN^DGRPCE1(.3227) Y="@7606";.3227;S:X'="Y" Y="@7606";.3228;.3229;@7606;
"RTN","DGRPCE1",58,0)
76002 ;;S:'$$YN^DGRPCE1(.32201) Y="@7607";.32201;S:X'="Y" Y="@7607";.322011;.322012;@7607;
"RTN","DGRPCE1",59,0)
77 ;;S:(($$DGERCK^DGRPCE1("37^38",.DGER))!('$$YN^DGRPCE1(.525))) Y="@77";.525;S:X'="Y" Y="@77";.526;.527;.528;@77;
"RTN","DGRPCE1",60,0)
78 ;;S:(($$DGERCK^DGRPCE1("39^40^68",.DGER))!('$$YN^DGRPCE1(.5291))) Y="@78";.5291;S:X'="Y" Y="@78";.5292;.5293;.5294;@78;
"RTN","DGRPCE1",61,0)
79 ;;S:$$DGERCK^DGRPCE1("72^73",.DGER) Y="@7902";.325;.32911;.326;.327;.324;S:'$$YN^DGRPCE1(.3285) Y="@7901";.3291;.32912;.3292;.3293;.329;@7901;S:'$$YN^DGRPCE1(.32945) Y="@7902";.3296;.32913;.3297;.3298;.3295;@7902;
"RTN","DGRPCE1",62,0)
80 ;;S:(($$DGERCK^DGRPCE1("37^38^77",.DGER))!('$$YN^DGRPCE1(.525))) Y="@8001";.525;S:X'="Y" Y="@8001";.526;.527;.528;@8001;S:$$DGERCK^DGRPCE1("72^73^79",.DGER) Y="@8003";
"RTN","DGRPCE1",63,0)
80000 ;;.325;.32911;.326;.327;.324;S:'$$YN^DGRPCE1(.3285) Y="@8002";.3291;.32912;.3292;.3293;.329;@8002;S:'$$YN^DGRPCE1(.32945) Y="@8003";.3296;.32913;.3297;.3298;.3295;@8003;
"RTN","DGRPCE1",64,0)
81 ;;S:(($$DGERCK^DGRPCE1("39^40^78",.DGER))!('$$YN^DGRPCE1(.5291))) Y="@8101";.5291;S:X'="Y" Y="@8101";.5292;.5293;.5294;@8101;S:$$DGERCK^DGRPCE1("72^73^79^80",.DGER) Y="@8103";
"RTN","DGRPCE1",65,0)
81000 ;;.325;.32911;.326;.327;.324;S:'$$YN^DGRPCE1(.3285) Y="@8102";.3291;.32912;.3292;.3293;.329;@8102;S:'$$YN^DGRPCE1(.32945) Y="@8103";.3296;.32913;.3297;.3298;.3295;@8103;
"RTN","DGRPCE1",66,0)
82 ;;S:($$DGERCK^DGRPCE1("74^75^76",.DGER)) Y="@8207";S:'$$YN^DGRPCE1(.32101) Y="@8201";.32101;S:X'="Y" Y="@8201";.32104;.32105;@8201;S:'$$YN^DGRPCE1(.322016) Y="@8202";.322016;
"RTN","DGRPCE1",67,0)
82000 ;;S:X'="Y" Y="@8202";.322017;.322018;@8202;S:'$$YN^DGRPCE1(.322019) Y="@8203";.322019;S:X'="Y" Y="@8203";.32202;.322021;@8203;S:'$$YN^DGRPCE1(.3221) Y="@8204";.3221;
"RTN","DGRPCE1",68,0)
82001 ;;S:X'="Y" Y="@8204";.3222;.3223;@8204;S:'$$YN^DGRPCE1(.3224) Y="@8205";.3224;S:X'="Y" Y="@8205";.3225;.3226;@8205;S:'$$YN^DGRPCE1(.3227) Y="@8206";.3227;S:X'="Y" Y="@8206";
"RTN","DGRPCE1",69,0)
82002 ;;.3228;.3229;@8206;S:'$$YN^DGRPCE1(.32201) Y="@8207";.32201;S:X'="Y" Y="@8207";.322011;.322012;@8207;S:($$DGERCK^DGRPCE1("72^73^79^80^81",.DGER)) Y="@8209";
"RTN","DGRPCE1",70,0)
82003 ;;.325;.32911;.326;.327;.324;S:'$$YN^DGRPCE1(.3285) Y="@8208";.3291;.32912;.3292;.3293;.329;@8208;S:'$$YN^DGRPCE1(.32945) Y="@8209";,3296;.32913;.3297;.3298;.3295;@8209;
"RTN","DGRPCE1",71,0)
83 ;;S:$$DGERCK^DGRPCE1(73,.DGER) Y="@83";@8295;D SET32^DGRPE(DA,.DIPA,1);.325;S DIPA("X1")=X S:X']"" Y="@83";S:$$FV^DGRPMS(X)'=1 Y="@8296";.3214;I X']"" W !?4,$C(7),"Proof is required for Filipino Vet." S Y="@8295";
"RTN","DGRPCE1",72,0)
83000 ;;@8296;D:DIPA("X1")'="" WARN32^DGRPE(DIPA("X1"),.DIPA,1,.Y) S:$E(Y,1,4)="@601" Y=.326;.32911;.326;.327;
"RTN","DGRPCE1",73,0)
83001 ;;.3285//NO;S:X'="Y" Y="@83";D SET32^DGRPE(DA,.DIPA,2);.3291;S DIPA("X2")=X S:X']"" Y="@83";S:$$FV^DGRPMS(X)'=1 Y="@832";.3214;I X']"" W !?4,$C(7),"Proof is required for Filipino Vet." S Y=".3291";S Y=.3292;
"RTN","DGRPCE1",74,0)
83002 ;;@832;D:DIPA("X2")'="" WARN32^DGRPE(DIPA("X2"),.DIPA,2,.Y) S:$E(Y,1,4)="@601" Y=.3292;.32912;.3292;.3293;
"RTN","DGRPCE1",75,0)
83003 ;;.32945//NO;S:X'="Y" Y="@83";D SET32^DGRPE(DA,.DIPA,3);.3296;S DIPA("X3")=X S:X']"" Y="@83";S:$$FV^DGRPMS(X)'=1 Y="@833";.3214;I X']"" W !?4,$C(7),"Proof is required for Filipino Vet." S Y=".3296";S Y=.3297;@833;
"RTN","DGRPCE1",76,0)
83004 ;;D:DIPA("X3")'="" WARN32^DGRPE(DIPA("X3"),.DIPA,3,.Y) S:$E(Y,1,4)="@601" Y=.3297;.32913;.3297;.3298;@83;
"RTN","DGRPCE1",77,0)
84 ;;.3214;
"RTN","DGRPCE1",78,0)
85 ;;1901;
"RTN","DGRPCE1",79,0)
86 ;;1901;
"RTN","DGRPCE1",80,0)
 ;
"RTN","DGRPCE1",81,0)
87 ;;D VETTYPE^DGRPE1;D MSG^DGRPE1 S Y=0;@114;K DGRDCHG;D DR^DGRPE1;.302;.3721;D EFF^DGRPE1;D:$G(DGRDCHG) BULL^DGRPE1;K DGRDCHG
"RTN","DGRPCE1",82,0)
 ;
"RTN","DGRPCE1",83,0)
YN(FLD,DFN,FILE) ; return binary for YES/NO flds in the Patient (#2) file
"RTN","DGRPCE1",84,0)
 N RTN
"RTN","DGRPCE1",85,0)
 Q:$G(FLD)']"" ""
"RTN","DGRPCE1",86,0)
 S:$G(FILE)="" FILE=2 S:$G(DFN)="" DFN=$G(DA) Q:$G(DFN)']"" ""
"RTN","DGRPCE1",87,0)
 S RTN=$$GET1^DIQ(FILE,DFN_",",FLD,"I")
"RTN","DGRPCE1",88,0)
 Q $S(RTN=1:1,RTN=0:0,RTN="Y":1,RTN="N":0,1:"")
"RTN","DGRPCE1",89,0)
 ;
"RTN","DGRPCE1",90,0)
DGERCK(STR,DGER) ;do any of the STR errors exist in DGER?
"RTN","DGRPCE1",91,0)
 N RTN,X
"RTN","DGRPCE1",92,0)
 Q:$G(STR)']"" 0  Q:$G(DGER)']"" 0
"RTN","DGRPCE1",93,0)
 S RTN=0 F X=1:1 Q:RTN!($P(STR,"^",X)="")  I DGER[(","_$P(STR,"^",X)_",") S RTN=1
"RTN","DGRPCE1",94,0)
 Q RTN
"RTN","DPTLK1")
0^4^B42806553^B41327686
"RTN","DPTLK1",1,0)
DPTLK1 ;ALB/RMO,EG - MAS Patient Look-up Check Cross-References ; 08/15/2006
"RTN","DPTLK1",2,0)
 ;;5.3;Registration;**32,50,197,249,317,391,244,532,574,620,641,680,538,657**;Aug 13, 1993;Build 19
"RTN","DPTLK1",3,0)
FIND ;Cross reference patient lookup
"RTN","DPTLK1",4,0)
 ;Optional input: DPTNOFZY='1' to suppress fuzzy lookups implemented
"RTN","DPTLK1",5,0)
 ;                by patch DG*5.3*244
"RTN","DPTLK1",6,0)
 ;
"RTN","DPTLK1",7,0)
 N DDCOMA,DPTXOLD,DPTOUT,DPTOVAL,DGLASTLK
"RTN","DPTLK1",8,0)
 S DGLASTLK=1
"RTN","DPTLK1",9,0)
 S (DPTXOLD,DPTX)=$$UCASE(DPTX)
"RTN","DPTLK1",10,0)
 I DPTX?1A.E1","1.A.E S DPTXOLD=DPTX,DDCOMA="I $E($P($G(DPTVAL),"","",2),1,"_$L($P(DPTX,",",2))_")="""_$TR($P(DPTX,",",2),"""")_"""",DPTX=$P(DPTX,",")
"RTN","DPTLK1",11,0)
 K DPTREFS S DPTREFS=$S(DIC(0)'["M":"B,NOP",DPTX?1A1N.N:$S($L(DPTX)<6:"BS5,CN,RM",1:"CN,RM"),DPTX?4N!(DPTX?4N1A):"BS,SSN,CN,RM",DPTX?9N.E:"SSN,CN,RM",1:"")
"RTN","DPTLK1",12,0)
 S:DPTREFS="" DPTREFS=$S(DPTX?1N.N:$S($L(DPTX)<5:"CN,RM,BS,SSN",1:"CN,RM,SSN"),DPTX?1N.E:"CN,RM",1:"B,NOP,CN,RM") S:$D(DPTIX) DPTREFS=DPTIX_","_DPTREFS
"RTN","DPTLK1",13,0)
 ;Use cross reference passed to LIST^DPTLK1 by Person Service Lookup (DPTPSREF) if defined.
"RTN","DPTLK1",14,0)
 I $G(DPTPSREF)'="" S DPTREFS=DPTPSREF
"RTN","DPTLK1",15,0)
 S DPTBEG=1,(DPTDFN,DPTNUM,DPTOUT)=0
"RTN","DPTLK1",16,0)
 F DPTLP=1:1 S DPTREF=$P(DPTREFS,",",DPTLP) Q:DPTREF=""!(DPTDFN)  D  Q:DPTDFN!DPTOUT
"RTN","DPTLK1",17,0)
 .S DPTVAL=DPTX
"RTN","DPTLK1",18,0)
 .I DPTREF="NOP",'$G(DPTNOFZY) S DPTVAL=$$FORMAT^XLFNAME7(DPTVAL,2,30,1,0,,1) Q:'$L(DPTVAL)
"RTN","DPTLK1",19,0)
 .D LOOK(DPTVAL)
"RTN","DPTLK1",20,0)
 .I DPTREF="B",'$G(DPTNOFZY) S DPTVAL=$$FORMAT^XLFNAME7(DPTX,2,30,1,0,,1) D:DPTVAL'=DPTX LOOK(DPTVAL)
"RTN","DPTLK1",21,0)
 .Q
"RTN","DPTLK1",22,0)
SET I 'DPTDFN S:DPTCNT=1&($D(DPTIFNS(DPTCNT))) DPTDFN=+DPTIFNS(DPTCNT) S DPT("NOPRT^")="" D PRTDPT:'DPTDFN&(DPTCNT>DPTNUM)&(DIC(0)["E") K DPT("NOPRT^") I 'DPTDFN,$D(DPTSEL),DPTSEL="" S DPTX="",DPTDFN=-1
"RTN","DPTLK1",23,0)
 I DPTDFN'>0,$L($G(DPTXOLD)) I DPTX=$P(DPTXOLD,",") S DPTX=DPTXOLD
"RTN","DPTLK1",24,0)
 I DPTDFN>0,$D(DPTXOLD) S DPTX=DPTXOLD
"RTN","DPTLK1",25,0)
 ; one last stab at lookup - DG*641
"RTN","DPTLK1",26,0)
 I '$G(DPTCNT),DPTX[",",DGLASTLK=1,'$G(DPTNOFZY) D
"RTN","DPTLK1",27,0)
 .S DPTX=$$FORMAT^XLFNAME7(DPTX,2,30,1)
"RTN","DPTLK1",28,0)
 .S DDCOMA="I $E($P($G(DPTVAL),"","",2),1,"_$L($P(DPTX,",",2))_")="""_$TR($P(DPTX,",",2),"""")_""""
"RTN","DPTLK1",29,0)
 .S DPTX=$P(DPTX,",")
"RTN","DPTLK1",30,0)
 .S DGLASTLK=0
"RTN","DPTLK1",31,0)
 .S DPTREFS="B,NOP,CN,RM"
"RTN","DPTLK1",32,0)
 .;Person Service Lookup does not allow lookup by RM cross reference
"RTN","DPTLK1",33,0)
 .;PSL release 4 does not allow lookup by ward (CN) cross reference
"RTN","DPTLK1",34,0)
 .I $G(DPTPSREF)'="" S DPTREFS="B,NOP"
"RTN","DPTLK1",35,0)
 .F DPTLP=1:1 S DPTREF=$P(DPTREFS,",",DPTLP) Q:DPTREF=""!(DPTDFN)  D  Q:DPTDFN!DPTOUT
"RTN","DPTLK1",36,0)
 ..S DPTVAL=DPTX
"RTN","DPTLK1",37,0)
 ..D LOOK(DPTVAL)
"RTN","DPTLK1",38,0)
 I DGLASTLK=0,$G(DPTCNT) S DGLASTLK=1 G SET
"RTN","DPTLK1",39,0)
 I DGLASTLK=0,'$G(DPTCNT),$L($G(DPTXOLD)) S DPTX=DPTXOLD
"RTN","DPTLK1",40,0)
 ; end of DG*641 change
"RTN","DPTLK1",41,0)
 ;
"RTN","DPTLK1",42,0)
Q K DPTBEG,DPTIFN,DPTIFNS,DPTLP,DPTLP1,DPTNUM,DPTREF,DPTREFS,DPTVAL
"RTN","DPTLK1",43,0)
 K DPTOVAL,DPTOUT,DPTXOLD,^TMP("DPTLK",$J)
"RTN","DPTLK1",44,0)
 Q
"RTN","DPTLK1",45,0)
 ;
"RTN","DPTLK1",46,0)
LOOK(DPTVAL) ;Look for x-ref matches
"RTN","DPTLK1",47,0)
 ;Input: DPTVAL=lookup seed value
"RTN","DPTLK1",48,0)
 I $L(DPTVAL),$D(^DPT(DPTREF,DPTVAL)) D CHKIFN Q:DPTDFN!DPTOUT
"RTN","DPTLK1",49,0)
 I $L(DPTVAL),'($D(^DPT(DPTREF,DPTVAL))&(DIC(0)["O"))&(DIC(0)'["X") D CHKVAL
"RTN","DPTLK1",50,0)
 Q
"RTN","DPTLK1",51,0)
 ;
"RTN","DPTLK1",52,0)
CHKVAL S DPTOVAL=DPTVAL
"RTN","DPTLK1",53,0)
 N DPTSEED S DPTSEED=DPTVAL
"RTN","DPTLK1",54,0)
 I DPTREF="SSN",(DPTVAL?9N1"p") D  Q
"RTN","DPTLK1",55,0)
 .S DPTVAL=$E(DPTVAL,1,9)_"P" D CHKIFN
"RTN","DPTLK1",56,0)
 .Q
"RTN","DPTLK1",57,0)
 I DPTREF="SSN",(DPTVAL?2.9N) D  Q
"RTN","DPTLK1",58,0)
 .S DPTVAL=$E(DPTVAL_"0000000",1,9)
"RTN","DPTLK1",59,0)
 .D CV1(DPTVAL),CHKIFN
"RTN","DPTLK1",60,0)
 .S DPTVAL=DPTVAL_"P" D CV1(DPTVAL),CHKIFN
"RTN","DPTLK1",61,0)
 .Q
"RTN","DPTLK1",62,0)
 D CV1(DPTVAL)
"RTN","DPTLK1",63,0)
 I DPTREF="CN"!(DPTREF="RM"),DPTVAL'["E",DPTVAL=+DPTVAL,'$D(^DPT(DPTREF,DPTVAL)) D  Q
"RTN","DPTLK1",64,0)
 .S DPTVAL=$O(^DPT(DPTREF,DPTVAL_" "),-1)
"RTN","DPTLK1",65,0)
 .D CV1(DPTVAL)
"RTN","DPTLK1",66,0)
 .Q
"RTN","DPTLK1",67,0)
 Q
"RTN","DPTLK1",68,0)
 ;
"RTN","DPTLK1",69,0)
CV1(DPTVAL) ;Look for input value matches
"RTN","DPTLK1",70,0)
 I $L(DPTVAL) F DPTLP1=0:0 S DPTVAL=$O(^DPT(DPTREF,DPTVAL)) Q:DPTVAL=""!(DPTDFN)!($P(DPTVAL,DPTSEED)'="")  D CHKIFN
"RTN","DPTLK1",71,0)
 Q
"RTN","DPTLK1",72,0)
 ;
"RTN","DPTLK1",73,0)
CHKIFN F DPTIFN=0:0 S DPTIFN=$O(^DPT(DPTREF,DPTVAL,DPTIFN)) Q:'DPTIFN!(DPTDFN)!DPTOUT  S Y=DPTIFN D SETDPT I $S<DPTSZ F I=1:1:DPTNUM-7 S J=$S($D(DPTIFNS(I)):+DPTIFNS(I),1:0) K DPTIFNS(I),DPTS(J) S DPTBEG=I
"RTN","DPTLK1",74,0)
 Q
"RTN","DPTLK1",75,0)
 ;
"RTN","DPTLK1",76,0)
SETDPT Q:($D(DPTS(Y))&($G(DPTREF)'="B"))!'$D(^DPT(Y,0))
"RTN","DPTLK1",77,0)
 ; screen out MERGED FROM records - DG/574
"RTN","DPTLK1",78,0)
 Q:$D(^DPT(Y,-9))
"RTN","DPTLK1",79,0)
 N DPTNVAL I '$D(DPTOVAL) N DPTOVAL S DPTOVAL=DPTX
"RTN","DPTLK1",80,0)
 I 1 S X=DPTOVAL X:$D(DIC("S")) DIC("S") Q:'$T  X:($D(DO("SCR"))) DO("SCR") Q:'$T  X:$D(DDCOMA) DDCOMA Q:'$T
"RTN","DPTLK1",81,0)
 K:$G(DPTCNT)<1 ^TMP("DPTLK",$J)
"RTN","DPTLK1",82,0)
 S DPTS(Y)=$S('$D(DPTREF):$P(^DPT(Y,0),U),1:$P(^DPT(Y,0),U))_U_$S($D(DPTVAL):$E(DPTVAL,($L(DPTOVAL)+1),$L(DPTVAL)),1:"")
"RTN","DPTLK1",83,0)
 S DPTNVAL=$P(^DPT(Y,0),U)_U_$S($G(DPTREF)="NOP":$P(^DPT(Y,0),U),$D(DPTVAL):DPTVAL,1:"")
"RTN","DPTLK1",84,0)
 Q:$D(^TMP("DPTLK",$J,Y,DPTNVAL))
"RTN","DPTLK1",85,0)
 S DPTCNT=DPTCNT+1,^TMP("DPTLK",$J,Y,DPTNVAL)="",DPTIFNS(DPTCNT)=Y_U_DPTNVAL
"RTN","DPTLK1",86,0)
 I $D(DPTLARR) D  Q
"RTN","DPTLK1",87,0)
 .I DPTLMAX,DPTCNT>DPTLMAX D  Q
"RTN","DPTLK1",88,0)
 ..S @DPTLARR@(DPTCNT)="ADDITIONAL MATCHES FOUND BUT NOT RETURNED"
"RTN","DPTLK1",89,0)
 ..S DPTOUT=1
"RTN","DPTLK1",90,0)
 ..Q
"RTN","DPTLK1",91,0)
 .S @DPTLARR@(DPTCNT)=DPTIFNS(DPTCNT)_U_$$SSN(Y)_U_$$DOB(Y)
"RTN","DPTLK1",92,0)
 .Q
"RTN","DPTLK1",93,0)
 I '(DPTCNT#5),DIC(0)["E" D PRTDPT
"RTN","DPTLK1",94,0)
 Q
"RTN","DPTLK1",95,0)
 ;
"RTN","DPTLK1",96,0)
PRTDPT I $D(DDS) D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X DDXY S X=0 X ^%ZOSF("RM")
"RTN","DPTLK1",97,0)
 N DPTP1,DPTP2
"RTN","DPTLK1",98,0)
 F DPTNUM=DPTNUM+1:1:DPTCNT Q:DPTOUT  S DPTIFN=+DPTIFNS(DPTNUM) D
"RTN","DPTLK1",99,0)
 .W:'$D(DDS) !
"RTN","DPTLK1",100,0)
 .S DPTP2=$P(DPTIFNS(DPTNUM),U,3)
"RTN","DPTLK1",101,0)
 .S DPTP1=$P(DPTIFNS(DPTNUM),U,2)
"RTN","DPTLK1",102,0)
 .W ?3,DPTNUM,?$X+(4-$L(DPTNUM))
"RTN","DPTLK1",103,0)
 .; write the xref value
"RTN","DPTLK1",104,0)
 .W DPTP2_"  "
"RTN","DPTLK1",105,0)
 .; write patient name if diff than xref value
"RTN","DPTLK1",106,0)
 .I DPTP1'=DPTP2 W DPTP1
"RTN","DPTLK1",107,0)
 .S Y=DPTIFN X:$D(^DPT(DPTIFN,0)) "N DDS X DIC(""W"")" I $D(DDS) S DY=DY+1,DX=0 X DDXY S $X=0
"RTN","DPTLK1",108,0)
 I '$D(DPT("NOPRT^")) W:'$D(DDS) ! W "ENTER '^' TO STOP, OR "
"RTN","DPTLK1",109,0)
 W:'$D(DDS) ! W "CHOOSE ",DPTBEG,"-",DPTNUM,": " R X:DTIME S DPTSEL=X D  Q:DPTSEL=""!$D(DTOUT)!$D(DUOUT)
"RTN","DPTLK1",110,0)
 .S:'$T DPTSEL=$S($D(DPTOVAL):DPTOVAL,$D(DPTVAL):DPTVAL,$D(DPTX):DPTX,$D(DPTXOLD):DPTXOLD,1:""),(DPTOUT,DTOUT)=1
"RTN","DPTLK1",111,0)
 .S:X="^" (DPTOUT,DUOUT)=1
"RTN","DPTLK1",112,0)
 S DPTDFN=$S(DPTSEL'?.ANP!($L(DPTSEL)>30):-1,'$D(DPTIFNS(DPTSEL)):-1,$D(DPTS(+DPTIFNS(DPTSEL))):+DPTIFNS(DPTSEL),1:-1),DPTX=$S(DPTDFN<0:DPTSEL,1:DPTX)
"RTN","DPTLK1",113,0)
 S:DPTDFN=-1 DPTXOLD=DPTSEL
"RTN","DPTLK1",114,0)
 Q
"RTN","DPTLK1",115,0)
 ;
"RTN","DPTLK1",116,0)
LIST(DPTX,DPTLMAX,DPTLARR) ;Silent lookup list
"RTN","DPTLK1",117,0)
 ;Input: DPTX=lookup value (name, SSN, room, ward, DFN or 
"RTN","DPTLK1",118,0)
 ;             "space_return").
"RTN","DPTLK1",119,0)
 ;       DPTLMAX=maximum number of matches to return (optional), this
"RTN","DPTLK1",120,0)
 ;               parameter has no effect if DFN or "space_return"
"RTN","DPTLK1",121,0)
 ;               lookup methods are used.
"RTN","DPTLK1",122,0)
 ;       DPTLARR=name of array to return list of matches, this should
"RTN","DPTLK1",123,0)
 ;               be a global if DPTLMAX is a large value or unspecified
"RTN","DPTLK1",124,0)
 ;               This array is returned in the format:
"RTN","DPTLK1",125,0)
 ;               @DPTLARR@(n)=DFN^patient_name^xref_lookup_match_value^
"RTN","DPTLK1",126,0)
 ;                            SSN^Date_of_Birth
"RTN","DPTLK1",127,0)
 ;               If more matches exist than the maximum to be returned
"RTN","DPTLK1",128,0)
 ;               as specified by DPTLMAX, the @DPTLARR@(DPTLMAX+1) node
"RTN","DPTLK1",129,0)
 ;               will be defined = "ADDITIONAL MATCHES FOUND BUT NOT 
"RTN","DPTLK1",130,0)
 ;               RETURNED".
"RTN","DPTLK1",131,0)
 ;               The calling program has the responsibility to kill
"RTN","DPTLK1",132,0)
 ;               @DPTLARR prior to calling this entry point.
"RTN","DPTLK1",133,0)
 ;Output: number of matches and array named by DPTLARR.
"RTN","DPTLK1",134,0)
 ;
"RTN","DPTLK1",135,0)
 N X,Y,DPTCNT,DIC,DPTSZ,DPTDFN,DPTIFNS,DPTS
"RTN","DPTLK1",136,0)
 S DPTCNT=0,DIC(0)="M",DPTSZ=1000 S:$G(DPTLMAX)<1 DPTLMAX=0
"RTN","DPTLK1",137,0)
 ;Check for "space_return" or DFN lookup
"RTN","DPTLK1",138,0)
 I DPTX=" "!($E(DPTX)="`") D  Q DPTCNT
"RTN","DPTLK1",139,0)
 .I DPTX=" " S Y=$S('($D(DUZ)#2):-1,$D(^DISV(DUZ,"^DPT(")):^("^DPT("),1:-1)
"RTN","DPTLK1",140,0)
 .I $E(DPTX)="`" S Y=$S($D(^DPT(+$P(DPTX,"`",2),0)):+$P(DPTX,"`",2),1:-1)
"RTN","DPTLK1",141,0)
 .Q:Y<1  Q:'$D(^DPT(Y,0))  D SETDPT S DPTCNT=1
"RTN","DPTLK1",142,0)
 .Q
"RTN","DPTLK1",143,0)
 D FIND
"RTN","DPTLK1",144,0)
 Q $S(DPTLMAX&(DPTCNT>DPTLMAX):DPTLMAX,1:DPTCNT)
"RTN","DPTLK1",145,0)
 ;
"RTN","DPTLK1",146,0)
UCASE(DGX) ;Uppercase lookup value
"RTN","DPTLK1",147,0)
 ;Input: DGX=lookup value
"RTN","DPTLK1",148,0)
 ;Output: transformed DGX
"RTN","DPTLK1",149,0)
 N DGI,DGY,DGZ S DGZ=DGX,DGX=""
"RTN","DPTLK1",150,0)
 F DGI=1:1:$L(DGZ) S DGY=$E(DGZ,DGI) D
"RTN","DPTLK1",151,0)
 .S:DGY?1L DGY=$C($A(DGY)-32)
"RTN","DPTLK1",152,0)
 .S DGX=DGX_DGY
"RTN","DPTLK1",153,0)
 Q DGX
"RTN","DPTLK1",154,0)
 ;        
"RTN","DPTLK1",155,0)
SSN(DFN) ;do not show ssn identifier for patient
"RTN","DPTLK1",156,0)
 ; input DFN = ien in file #2 [required]
"RTN","DPTLK1",157,0)
 ; output SSN = nnnnnnnnn
"RTN","DPTLK1",158,0)
 ;
"RTN","DPTLK1",159,0)
 N SSN
"RTN","DPTLK1",160,0)
 S SSN="",DFN=+DFN
"RTN","DPTLK1",161,0)
 I DFN>0 D
"RTN","DPTLK1",162,0)
 .I $$SCREEN(DFN) S SSN="*SENSITIVE*" Q
"RTN","DPTLK1",163,0)
 .S SSN=$P($G(^DPT(DFN,0)),U,9)
"RTN","DPTLK1",164,0)
 .; DG*5.3*657 BAJ 11/20 2005
"RTN","DPTLK1",165,0)
 .; display Pseudo SSN alert on list
"RTN","DPTLK1",166,0)
 .I SSN?9N1"P" S SSN=SSN_" **Pseudo SSN**"
"RTN","DPTLK1",167,0)
 .Q 
"RTN","DPTLK1",168,0)
 Q SSN
"RTN","DPTLK1",169,0)
 ;
"RTN","DPTLK1",170,0)
DOB(DFN,DGYR) ;do not show dob identifier for patient
"RTN","DPTLK1",171,0)
 ; input DFN = ien in file #2  [required]
"RTN","DPTLK1",172,0)
 ;       DGYR = 0/1  [optional]
"RTN","DPTLK1",173,0)
 ;              where 0 returns 4-digit year (default)
"RTN","DPTLK1",174,0)
 ;                    1 returns 2-digit year
"RTN","DPTLK1",175,0)
 ;                    2 returns File manager date
"RTN","DPTLK1",176,0)
 ; output DOB = mm/dd/yyyy (default)
"RTN","DPTLK1",177,0)
 ;            = mm/dd/yy, if DGYR=1
"RTN","DPTLK1",178,0)
 ;            = yyymmdd, if DGYR=2
"RTN","DPTLK1",179,0)
 N B,DOB,YEAR
"RTN","DPTLK1",180,0)
 S DOB="",DFN=+DFN,DGYR=+$G(DGYR)
"RTN","DPTLK1",181,0)
 I DFN>0 D
"RTN","DPTLK1",182,0)
 .I $$SCREEN(DFN) S DOB="*SENSITIVE*" Q
"RTN","DPTLK1",183,0)
 .S B=$P($G(^DPT(DFN,0)),U,3)
"RTN","DPTLK1",184,0)
 .I DGYR'=2 D  Q
"RTN","DPTLK1",185,0)
 ..S YEAR=$S(DGYR=1:"2D",1:"5D")
"RTN","DPTLK1",186,0)
 ..S DOB=$$FMTE^XLFDT(B,YEAR)
"RTN","DPTLK1",187,0)
 .S DOB=B
"RTN","DPTLK1",188,0)
 Q DOB
"RTN","DPTLK1",189,0)
 ;
"RTN","DPTLK1",190,0)
SCREEN(DFN) ;Screening logic for SSN & DOB
"RTN","DPTLK1",191,0)
 ;Input  : DFN - Pointer to PATIENT file (#2)
"RTN","DPTLK1",192,0)
 ;Output : 1 - Apply screen
"RTN","DPTLK1",193,0)
 ;         0 - Don't apply screen
"RTN","DPTLK1",194,0)
 ;Notes  : Screen applied if patient is sensitive or an employee
"RTN","DPTLK1",195,0)
 ;
"RTN","DPTLK1",196,0)
 N DGTIME,DGT,DGA1,DG1,DGXFR0
"RTN","DPTLK1",197,0)
 ;Inpatient check - no longer used (kept for future reference)
"RTN","DPTLK1",198,0)
 ;D H^DGUTL S DGT=DGTIME D ^DGPMSTAT I DG1 Q 0
"RTN","DPTLK1",199,0)
 ;Sensitive - screen
"RTN","DPTLK1",200,0)
 I $P($G(^DGSL(38.1,DFN,0)),"^",2) Q 1
"RTN","DPTLK1",201,0)
 ;Employee - screen
"RTN","DPTLK1",202,0)
 I $$EMPL^DGSEC4(DFN) Q 1
"RTN","DPTLK1",203,0)
 ;Don't screen
"RTN","DPTLK1",204,0)
 Q 0
"VER")
8.0^22.0
"^DD",2,2,1901,0)
VETERAN (Y/N)?^RSXa^Y:YES;N:NO;^VET;1^I $D(X) S:'$D(DPTX) DFN=DA D:'$D(^XUSEC("DG ELIGIBILITY",DUZ)) VAGE^DGLOCK:X="Y" I $D(X) D:$D(DFN) EV^DGLOCK
"^DD",2,2,1901,.1)

"^DD",2,2,1901,1,0)
^.1
"^DD",2,2,1901,1,1,0)
2^AN^MUMPS
"^DD",2,2,1901,1,1,1)
S DFN=DA D EN^DGMTCOR K DGMTCOR
"^DD",2,2,1901,1,1,2)
S DFN=DA D EN^DGMTCOR K DGMTCOR
"^DD",2,2,1901,1,1,"%D",0)
^^3^3^2930121^^^^
"^DD",2,2,1901,1,1,"%D",1,0)
This cross reference acts like a trigger.  It 'triggers' the status field
"^DD",2,2,1901,1,1,"%D",2,0)
in file 408.31 (ANNUAL MEANS TEST) for the co-pay exemption test.  It
"^DD",2,2,1901,1,1,"%D",3,0)
will update the field to 'NO LONGER APPLICABLE' if appropriate.
"^DD",2,2,1901,1,1,"DT")
2930121
"^DD",2,2,1901,1,2,0)
2^AN1^MUMPS
"^DD",2,2,1901,1,2,1)
S DFN=DA D EN^DGRP7CC
"^DD",2,2,1901,1,2,2)
S DFN=DA D EN^DGRP7CC
"^DD",2,2,1901,1,2,"%D",0)
^^2^2^3060316^
"^DD",2,2,1901,1,2,"%D",1,0)
THIS CROSS REFERENCE CONTAINS TRIGGERS TO DELETE DATA FROM SPECIFIED
"^DD",2,2,1901,1,2,"%D",2,0)
FIELDS WHEN THE 'VETERAN (Y/N)' FIELD IS CHANGED TO "NO".
"^DD",2,2,1901,1,2,"DT")
3060316
"^DD",2,2,1901,1,3,0)
^^TRIGGER^2^.301
"^DD",2,2,1901,1,3,1)
X ^DD(2,1901,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DPT(D0,.3)):^(.3),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X=DIV S X="N" X ^DD(2,1901,1,3,1.4)
"^DD",2,2,1901,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$S($D(^DD(2,1901,0)):$P(^(0),U,3),1:"") S X=$P($P(Y(1),$C(59)_Y(0)_":",2),$C(59),1)'["Y"
"^DD",2,2,1901,1,3,1.4)
S DIH=$S($D(^DPT(DIV(0),.3)):^(.3),1:""),DIV=X S %=$P(DIH,U,2,999),DIU=$P(DIH,U,1),^(.3)=DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.301 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",2,2,1901,1,3,2)
Q
"^DD",2,2,1901,1,3,"CREATE CONDITION")
#1901'["Y"
"^DD",2,2,1901,1,3,"CREATE VALUE")
"N"
"^DD",2,2,1901,1,3,"DELETE VALUE")
NO EFFECT
"^DD",2,2,1901,1,3,"FIELD")
#.301
"^DD",2,2,1901,1,4,0)
2^AENR1901^MUMPS
"^DD",2,2,1901,1,4,1)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,1901,1,4,2)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,1901,1,4,3)
DO NOT DELETE
"^DD",2,2,1901,1,4,"%D",0)
^^1^1^2980225^
"^DD",2,2,1901,1,4,"%D",1,0)
This cross-reference will be used to update the patient's enrollment.
"^DD",2,2,1901,1,4,"DT")
2980225
"^DD",2,2,1901,1,991,0)
2^AVAFC1901^MUMPS
"^DD",2,2,1901,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF="1901;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,1901,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF="1901;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,1901,1,991,"%D",0)
^^15^15^2990204^^
"^DD",2,2,1901,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,1901,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,1901,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,1901,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,1901,1,991,"%D",5,0)
 
"^DD",2,2,1901,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,1901,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,1901,1,991,"%D",8,0)
process.
"^DD",2,2,1901,1,991,"%D",9,0)
 
"^DD",2,2,1901,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,1901,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,1901,1,991,"%D",12,0)
  
"^DD",2,2,1901,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,1901,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,1901,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,1901,1,991,"DT")
2990204
"^DD",2,2,1901,1,992,0)
2^ADGRU1901^MUMPS
"^DD",2,2,1901,1,992,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,1901,1,992,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,1901,1,992,"%D",0)
^^9^9^2990921^
"^DD",2,2,1901,1,992,"%D",1,0)
This cross reference is used to remember that changes were made to a 
"^DD",2,2,1901,1,992,"%D",2,0)
monitored data field in the PATIENT File (#2) required for a vendor
"^DD",2,2,1901,1,992,"%D",3,0)
RAI/MDS COTS system.  Execution of this cross reference will create
"^DD",2,2,1901,1,992,"%D",4,0)
an entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",2,2,1901,1,992,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",2,2,1901,1,992,"%D",6,0)
interface.
"^DD",2,2,1901,1,992,"%D",7,0)
 
"^DD",2,2,1901,1,992,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the cross reference is
"^DD",2,2,1901,1,992,"%D",9,0)
not to be executed as part of a re-indexing.
"^DD",2,2,1901,1,992,"DT")
2990921
"^DD",2,2,1901,3)
Is this patient requesting care as a veteran of the U.S. Armed Forces?
"^DD",2,2,1901,20,0)
^.3LA^2^2
"^DD",2,2,1901,20,1,0)
ECD
"^DD",2,2,1901,20,2,0)
SVC
"^DD",2,2,1901,21,0)
^.001^5^5^3010125^^^^
"^DD",2,2,1901,21,1,0)
Enter 'Y' if this applicant is over 17 years of age and is a veteran,
"^DD",2,2,1901,21,2,0)
'N' if not.  If applicant is under 17 years of age and is a veteran
"^DD",2,2,1901,21,3,0)
only those users holding the designated security may identify him/her
"^DD",2,2,1901,21,4,0)
as a veteran.  Once eligibility is verified only those users who
"^DD",2,2,1901,21,5,0)
hold the designated security key may enter/edit this field.
"^DD",2,2,1901,"AUDIT")
y
"^DD",2,2,1901,"DEL",1,0)
S DFN=DA D EV^DGLOCK I '$D(X)
"^DD",2,2,1901,"DT")
3060802
"^DD",38.6,38.6,0)
FIELD^^50^7
"^DD",38.6,38.6,0,"DDA")
N
"^DD",38.6,38.6,0,"IX","B",38.6,.01)

"^DD",38.6,38.6,0,"NM","INCONSISTENT DATA ELEMENTS")

"^DD",38.6,38.6,0,"PT",38.51,.01)

"^DD",38.6,38.6,0,"VRPK")
DG
"^DD",38.6,38.6,.001,0)
NUMBER^NJ3,0^^ ^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",38.6,38.6,.001,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 999
"^DD",38.6,38.6,.001,21,0)
^^5^5^2911211^
"^DD",38.6,38.6,.001,21,1,0)
This field contains the internal entry number of the inconsistency.  This
"^DD",38.6,38.6,.001,21,2,0)
number is used by the consistency checker routines to determine what action
"^DD",38.6,38.6,.001,21,3,0)
needs to be taken.  Entries in this file must not be added nor altered in
"^DD",38.6,38.6,.001,21,4,0)
any way as this would cause the consistency checker functionality to act
"^DD",38.6,38.6,.001,21,5,0)
incorrectly.
"^DD",38.6,38.6,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X?1A.E) X
"^DD",38.6,38.6,.01,1,0)
^.1
"^DD",38.6,38.6,.01,1,1,0)
38.6^B
"^DD",38.6,38.6,.01,1,1,1)
S ^DGIN(38.6,"B",$E(X,1,30),DA)=""
"^DD",38.6,38.6,.01,1,1,2)
K ^DGIN(38.6,"B",$E(X,1,30),DA)
"^DD",38.6,38.6,.01,3)
ANSWER MUST BE 3-30 CHARACTERS IN LENGTH
"^DD",38.6,38.6,.01,21,0)
^^4^4^2911211^
"^DD",38.6,38.6,.01,21,1,0)
This field contains the name of the inconsistency that will be reported
"^DD",38.6,38.6,.01,21,2,0)
when utilizing various registration and consistency checker options.  This
"^DD",38.6,38.6,.01,21,3,0)
name will appear on the screen and in a mailmessage should the inconsistency
"^DD",38.6,38.6,.01,21,4,0)
not be reported.
"^DD",38.6,38.6,.01,"DT")
2870513
"^DD",38.6,38.6,2,0)
TEXT^RF^^0;2^K:$L(X)>70!($L(X)<2) X
"^DD",38.6,38.6,2,3)
ANSWER MUST BE 2-70 CHARACTERS IN LENGTH
"^DD",38.6,38.6,2,21,0)
^^2^2^2911211^
"^DD",38.6,38.6,2,21,1,0)
Enter the text for this inconsistency.  This text will display on the
"^DD",38.6,38.6,2,21,2,0)
inconsistent data reports.  It describes how the inconsistency occurs.
"^DD",38.6,38.6,2,"DT")
2870306
"^DD",38.6,38.6,3,0)
KEY REQUIRED^RS^0:NO KEY REQUIRED;1:ELIGIBILITY VERIFIED;2:MONEY VERFIED;3:SERVICE VERIFIED;4:KEY ALWAYS REQUIRED;^0;3^Q
"^DD",38.6,38.6,3,21,0)
^^8^8^2911211^
"^DD",38.6,38.6,3,21,1,0)
Various entries in the PATIENT file become uneditable by certain hospital
"^DD",38.6,38.6,3,21,2,0)
personnel once the data has been verified.  If the data has been verified,
"^DD",38.6,38.6,3,21,3,0)
the user must hold a key in order to make a change to it.  If the
"^DD",38.6,38.6,3,21,4,0)
inconsistency in this file requires a user to hold a key to edit the data
"^DD",38.6,38.6,3,21,5,0)
once it has been verified, that key must be listed here.
"^DD",38.6,38.6,3,21,6,0)
 
"^DD",38.6,38.6,3,21,7,0)
Altering of data in this field could cause data to be edited
"^DD",38.6,38.6,3,21,8,0)
inappropriately.  This field should not be changed!
"^DD",38.6,38.6,3,"DT")
2870312
"^DD",38.6,38.6,4,0)
SET ELIG DR STRING^S^1:YES;0:NO;^0;4^Q
"^DD",38.6,38.6,4,21,0)
^^10^10^2911211^
"^DD",38.6,38.6,4,21,1,0)
If the data required to clean-up this inconsistency requires editing of
"^DD",38.6,38.6,4,21,2,0)
data that is related to eligibility, this field should be answered yes.
"^DD",38.6,38.6,4,21,3,0)
For example, if the inconsistency is 'SC PROMPT UNANSWERED', this field
"^DD",38.6,38.6,4,21,4,0)
would be yes because this prompt is required in order to select a
"^DD",38.6,38.6,4,21,5,0)
patient's eligibility.  If this field is answered yes, all eligibility
"^DD",38.6,38.6,4,21,6,0)
related questions will also be asked.
"^DD",38.6,38.6,4,21,7,0)
 
"^DD",38.6,38.6,4,21,8,0)
Data in this field must not be altered in any way or it could cause
"^DD",38.6,38.6,4,21,9,0)
inaccrarate patient data to be entered on your system.  This data is
"^DD",38.6,38.6,4,21,10,0)
distributed and maintained by the MAS package.
"^DD",38.6,38.6,4,"DT")
2870320
"^DD",38.6,38.6,5,0)
CHECK/DON'T CHECK^S^0:CHECK;1:DON'T CHECK;^0;5^Q
"^DD",38.6,38.6,5,21,0)
^^13^13^2920324^^^
"^DD",38.6,38.6,5,21,1,0)
Answer '0' if you want to check this inconsistency locally or '1'
"^DD",38.6,38.6,5,21,2,0)
if you wish to ignore it whenever found.
"^DD",38.6,38.6,5,21,3,0)
 
"^DD",38.6,38.6,5,21,4,0)
Most checks provide the ability for them to be turned off locally, however,
"^DD",38.6,38.6,5,21,5,0)
there are some consistency checks ('SC PROMPT UNANSWERED', for example)
"^DD",38.6,38.6,5,21,6,0)
which will always be turned on regardless of how this promt is answered.
"^DD",38.6,38.6,5,21,7,0)
 
"^DD",38.6,38.6,5,21,8,0)
This field can be edited at the site level.
"^DD",38.6,38.6,5,21,9,0)
 
"^DD",38.6,38.6,5,21,10,0)
The consistency checks that will always be on are 'VETERAN STATUS
"^DD",38.6,38.6,5,21,11,0)
UNSPECIFIED', 'SC PROMPT UNANSWERED', 'POS UNSPECIFIED', 'ELIG CODE
"^DD",38.6,38.6,5,21,12,0)
UNANSWERED', 'ELIG CODE INCONSISTENT', 'INSURANCE PROMPT UNANSWERED',
"^DD",38.6,38.6,5,21,13,0)
and 'EMPLOYMENT STATUS UNANSWERED'.
"^DD",38.6,38.6,5,"DT")
2870513
"^DD",38.6,38.6,50,0)
DESCRIPTION^38.61^^D;0
"^DD",38.6,38.6,50,21,0)
^^3^3^3060216^
"^DD",38.6,38.6,50,21,1,0)
This field contains a full description of how the inconsistency is
"^DD",38.6,38.6,50,21,2,0)
created.  This data is provided and maintained by the MAS package and
"^DD",38.6,38.6,50,21,3,0)
should not be altered at the site level.
"^DD",38.6,38.61,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",38.6,38.61,0,"NM","DESCRIPTION")

"^DD",38.6,38.61,0,"UP")
38.6
"^DD",38.6,38.61,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",38.6,38.61,.01,"DT")
2870513
"^DIC",38.6,38.6,0)
INCONSISTENT DATA ELEMENTS
"^DIC",38.6,38.6,0,"GL")
^DGIN(38.6,
"^DIC",38.6,38.6,"%D",0)
^^5^5^2911211^^
"^DIC",38.6,38.6,"%D",1,0)
The INCONSISTENT DATA ELEMENTS file contains those entries which are
"^DIC",38.6,38.6,"%D",2,0)
checked by the MAS module consistency checker.  Other than turning
"^DIC",38.6,38.6,"%D",3,0)
individual checks on or off the user should not alter or add to this
"^DIC",38.6,38.6,"%D",4,0)
file in any way.  Making any modification to this file will definitely
"^DIC",38.6,38.6,"%D",5,0)
cause the consistency checker to function improperly.
"^DIC",38.6,"B","INCONSISTENT DATA ELEMENTS",38.6)

"BLD",6020,6)
^653
**END**
**END**
