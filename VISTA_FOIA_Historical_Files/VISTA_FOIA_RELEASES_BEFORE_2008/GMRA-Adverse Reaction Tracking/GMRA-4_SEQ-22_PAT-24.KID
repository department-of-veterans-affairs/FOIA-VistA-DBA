Released GMRA*4*24 SEQ #22
Extracted from mail message
**KIDS**:GMRA*4.0*24^

**INSTALL NAME**
GMRA*4.0*24
"BLD",5666,0)
GMRA*4.0*24^ADVERSE REACTION TRACKING^0^3050614^y
"BLD",5666,1,0)
^^2^2^3050606^
"BLD",5666,1,1,0)
See FORUM patch module for a full description.  Updates HDR related
"BLD",5666,1,2,0)
trigger code.
"BLD",5666,4,0)
^9.64PA^^
"BLD",5666,"ABPKG")
n
"BLD",5666,"KRN",0)
^9.67PA^8989.52^19
"BLD",5666,"KRN",.4,0)
.4
"BLD",5666,"KRN",.401,0)
.401
"BLD",5666,"KRN",.402,0)
.402
"BLD",5666,"KRN",.403,0)
.403
"BLD",5666,"KRN",.5,0)
.5
"BLD",5666,"KRN",.84,0)
.84
"BLD",5666,"KRN",3.6,0)
3.6
"BLD",5666,"KRN",3.8,0)
3.8
"BLD",5666,"KRN",9.2,0)
9.2
"BLD",5666,"KRN",9.8,0)
9.8
"BLD",5666,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5666,"KRN",9.8,"NM",1,0)
GMRAHDR^^0^B18743099
"BLD",5666,"KRN",9.8,"NM","B","GMRAHDR",1)

"BLD",5666,"KRN",19,0)
19
"BLD",5666,"KRN",19.1,0)
19.1
"BLD",5666,"KRN",101,0)
101
"BLD",5666,"KRN",409.61,0)
409.61
"BLD",5666,"KRN",771,0)
771
"BLD",5666,"KRN",870,0)
870
"BLD",5666,"KRN",8989.51,0)
8989.51
"BLD",5666,"KRN",8989.52,0)
8989.52
"BLD",5666,"KRN",8994,0)
8994
"BLD",5666,"KRN","B",.4,.4)

"BLD",5666,"KRN","B",.401,.401)

"BLD",5666,"KRN","B",.402,.402)

"BLD",5666,"KRN","B",.403,.403)

"BLD",5666,"KRN","B",.5,.5)

"BLD",5666,"KRN","B",.84,.84)

"BLD",5666,"KRN","B",3.6,3.6)

"BLD",5666,"KRN","B",3.8,3.8)

"BLD",5666,"KRN","B",9.2,9.2)

"BLD",5666,"KRN","B",9.8,9.8)

"BLD",5666,"KRN","B",19,19)

"BLD",5666,"KRN","B",19.1,19.1)

"BLD",5666,"KRN","B",101,101)

"BLD",5666,"KRN","B",409.61,409.61)

"BLD",5666,"KRN","B",771,771)

"BLD",5666,"KRN","B",870,870)

"BLD",5666,"KRN","B",8989.51,8989.51)

"BLD",5666,"KRN","B",8989.52,8989.52)

"BLD",5666,"KRN","B",8994,8994)

"BLD",5666,"QUES",0)
^9.62^^
"BLD",5666,"REQB",0)
^9.611^1^1
"BLD",5666,"REQB",1,0)
GMRA*4.0*18^1
"BLD",5666,"REQB","B","GMRA*4.0*18",1)

"MBREQ")
0
"PKG",140,-1)
1^1
"PKG",140,0)
ADVERSE REACTION TRACKING^GMRA^Allergy Tracking System
"PKG",140,20,0)
^9.402P^^
"PKG",140,22,0)
^9.49I^1^1
"PKG",140,22,1,0)
4.0^2960328^2960506^10
"PKG",140,22,1,"PAH",1,0)
24^3050614^1326
"PKG",140,22,1,"PAH",1,1,0)
^^2^2^3050614
"PKG",140,22,1,"PAH",1,1,1,0)
See FORUM patch module for a full description.  Updates HDR related
"PKG",140,22,1,"PAH",1,1,2,0)
trigger code.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","GMRAHDR")
0^1^B18743099
"RTN","GMRAHDR",1,0)
GMRAHDR ;SLC/DAN - HDR calls for ART ;6/14/05  13:55
"RTN","GMRAHDR",2,0)
 ;;4.0;Adverse Reaction Tracking;**18,24**;Mar 29, 1996
"RTN","GMRAHDR",3,0)
 ;
"RTN","GMRAHDR",4,0)
 ;The variable GMRADONT can be set before making a call to this
"RTN","GMRAHDR",5,0)
 ;routine if you'd like to be able to change data but not have it
"RTN","GMRAHDR",6,0)
 ;sent to the HDR.  If GMRADONT has a positive value then nothing
"RTN","GMRAHDR",7,0)
 ;will be queued to be sent to the HDR.
"RTN","GMRAHDR",8,0)
 ;A check will also be made for the existence of VAFCA08 to indicate
"RTN","GMRAHDR",9,0)
 ;whether a patient merge is taking place.  If so, then data isn't
"RTN","GMRAHDR",10,0)
 ;sent to the HDR.
"RTN","GMRAHDR",11,0)
 ;
"RTN","GMRAHDR",12,0)
SETADR ;Call here when updating data
"RTN","GMRAHDR",13,0)
 N IEN,OIEN
"RTN","GMRAHDR",14,0)
 I $G(GMRADONT)!($G(XDRDVALF)=1) Q  ;Don't send HDR information if variable is set
"RTN","GMRAHDR",15,0)
 S IEN=$S($D(DA)=1:DA,1:DA($O(DA("?"),-1)))
"RTN","GMRAHDR",16,0)
 I +$P($G(^GMR(120.8,IEN,0)),U,12)=0 Q  ;Stop if it isn't signed off yet
"RTN","GMRAHDR",17,0)
 I $$TESTPAT^VADPT($P(^GMR(120.8,IEN,0),U)) Q  ;24 Don't send data for test patients
"RTN","GMRAHDR",18,0)
 D TASK("ADR",IEN) ;Schedule entry to be sent to HDR
"RTN","GMRAHDR",19,0)
 I $P($G(^GMR(120.8,IEN,0)),U,6)="o" S OIEN=+$O(^GMR(120.85,"C",IEN,0)) I $D(^GMR(120.85,OIEN,0)),'+$G(^GMR(120.8,IEN,"ER")) D TASK("OBS",OIEN) ;If observed reaction, send observed data on sign off
"RTN","GMRAHDR",20,0)
 Q
"RTN","GMRAHDR",21,0)
 ;
"RTN","GMRAHDR",22,0)
KILLADR ;Call here when data is deleted
"RTN","GMRAHDR",23,0)
 N IEN
"RTN","GMRAHDR",24,0)
 I $G(GMRADONT)!($G(XDRDVALF)=1) Q  ;Don't send data to HDR if variable is set
"RTN","GMRAHDR",25,0)
 S IEN=$S($D(DA)=1:DA,1:DA($O(DA("?"),-1)))
"RTN","GMRAHDR",26,0)
 I $P($G(^GMR(120.8,IEN,0)),U,12)=0 Q  ;Stop if it isn't signed off yet
"RTN","GMRAHDR",27,0)
 I $$TESTPAT^VADPT($P(^GMR(120.8,IEN,0),U)) Q  ;24 Don't send data for test patients
"RTN","GMRAHDR",28,0)
 D TASK("ADR",IEN) ;Schedule entry to be sent to the HDR
"RTN","GMRAHDR",29,0)
 Q
"RTN","GMRAHDR",30,0)
 ;
"RTN","GMRAHDR",31,0)
SETAA ;Action taken when assessment is changed
"RTN","GMRAHDR",32,0)
 I $G(GMRADONT)!($G(XDRDVALF)=1) Q  ;Don't send data if variable is set
"RTN","GMRAHDR",33,0)
 I $$TESTPAT^VADPT(DA) Q  ;24 Don't send data for test patients
"RTN","GMRAHDR",34,0)
 D TASK("ASMT",DA)
"RTN","GMRAHDR",35,0)
 Q
"RTN","GMRAHDR",36,0)
 ;
"RTN","GMRAHDR",37,0)
KILLAA ;Action taken when value is deleted
"RTN","GMRAHDR",38,0)
 I $G(GMRADONT)!($G(XDRDVALF)=1) Q  ;Don't send data to HDR if variable is set
"RTN","GMRAHDR",39,0)
 I $$TESTPAT^VADPT(DA) Q  ;24 Don't send data for test patients
"RTN","GMRAHDR",40,0)
 D TASK("ASMT",DA)
"RTN","GMRAHDR",41,0)
 Q
"RTN","GMRAHDR",42,0)
 ;
"RTN","GMRAHDR",43,0)
SETOB ;Make call to HDR when observation data is added or edited
"RTN","GMRAHDR",44,0)
 N IEN,AIEN
"RTN","GMRAHDR",45,0)
 I $G(GMRADONT)!($G(XDRDVALF)=1) Q  ;Don't send data to HDR if variable is set
"RTN","GMRAHDR",46,0)
 S IEN=$S($D(DA)=1:DA,1:DA($O(DA("?"),-1)))
"RTN","GMRAHDR",47,0)
 S AIEN=+$P($G(^GMR(120.85,IEN,0)),U,15) Q:'+AIEN  ;Stop if there's no related reaction
"RTN","GMRAHDR",48,0)
 I $P($G(^GMR(120.8,AIEN,0)),U,12)=0 Q  ;Stop if related reaction not signed off
"RTN","GMRAHDR",49,0)
 I $$TESTPAT^VADPT($P(^GMR(120.8,AIEN,0),U)) Q  ;24 Don't send data for test patients
"RTN","GMRAHDR",50,0)
 D TASK("OBS",IEN)
"RTN","GMRAHDR",51,0)
 Q
"RTN","GMRAHDR",52,0)
 ;
"RTN","GMRAHDR",53,0)
KILLOB ;Action upon deletion of observation data
"RTN","GMRAHDR",54,0)
 N IEN,AIEN
"RTN","GMRAHDR",55,0)
 I $G(GMRADONT)!($G(XDRDVALF)=1) Q  ;Don't send data to HDR if variable is set
"RTN","GMRAHDR",56,0)
 S IEN=$S($D(DA)=1:DA,1:DA($O(DA("?"),-1)))
"RTN","GMRAHDR",57,0)
 S AIEN=+$P($G(^GMR(120.85,IEN,0)),U,15) Q:'AIEN  ;Quit if there's no related reaction
"RTN","GMRAHDR",58,0)
 I +$P($G(^GMR(120.8,AIEN,0)),U,12)=0 Q  ;Quit if related reaction not signed off
"RTN","GMRAHDR",59,0)
 I $$TESTPAT^VADPT($P(^GMR(120.8,AIEN,0),U)) Q  ;24 Don't send data for test patients
"RTN","GMRAHDR",60,0)
 D TASK("OBS",IEN)
"RTN","GMRAHDR",61,0)
 Q
"RTN","GMRAHDR",62,0)
 ;
"RTN","GMRAHDR",63,0)
TASK(TYPE,IEN) ;Create task, if needed, and add entry to list of items to be sent to HDR
"RTN","GMRAHDR",64,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTSK,ZTIO
"RTN","GMRAHDR",65,0)
 L +^XTMP("GMRAHDR") ;Control global so no new entries are added
"RTN","GMRAHDR",66,0)
 I '$D(^XTMP("GMRAHDR")) S ^XTMP("GMRAHDR",0)=$$FMADD^XLFDT(DT,30)_U_$$NOW^XLFDT_U_"Send allergy data to HDR"
"RTN","GMRAHDR",67,0)
 I '$D(^XTMP("GMRAHDR","TASK")) D
"RTN","GMRAHDR",68,0)
 .S ZTRTN="DQ^GMRAHDR",ZTDESC="Transmit allergy data to HDR",ZTDTH=$$HADD^XLFDT($H,,,2),ZTIO="" D ^%ZTLOAD S ^XTMP("GMRAHDR","TASK")=ZTSK
"RTN","GMRAHDR",69,0)
 S ^XTMP("GMRAHDR",TYPE,IEN)="" ;Store off entry to be sent later
"RTN","GMRAHDR",70,0)
 L -^XTMP("GMRAHDR") ;Release lock
"RTN","GMRAHDR",71,0)
 Q
"RTN","GMRAHDR",72,0)
 ;
"RTN","GMRAHDR",73,0)
DQ ;Send data to HDR
"RTN","GMRAHDR",74,0)
 N TYPE,IEN,A
"RTN","GMRAHDR",75,0)
 L +^XTMP("GMRAHDR") ;Get control of global
"RTN","GMRAHDR",76,0)
 F TYPE="ADR","ASMT","OBS" I $D(^XTMP("GMRAHDR",TYPE)) D
"RTN","GMRAHDR",77,0)
 .S IEN=0 F  S IEN=$O(^XTMP("GMRAHDR",TYPE,IEN)) Q:'+IEN  I $L($T(QUEUE^VDEFQM)) S A=$$QUEUE^VDEFQM("ORU^R01","SUBTYPE="_$S(TYPE="ADR":"ALGY",TYPE="ASMT":"ADAS",1:"ADRA")_"^IEN="_IEN,.GMRAERR)
"RTN","GMRAHDR",78,0)
 K ^XTMP("GMRAHDR")
"RTN","GMRAHDR",79,0)
 L -^XTMP("GMRAHDR")
"RTN","GMRAHDR",80,0)
 Q
"VER")
8.0^22.0
"BLD",5666,6)
^SEQ #22
**END**
**END**
