KIDS Distribution saved on Jan 11, 2005@12:14:39
RMPR*3.0*96 and IB*2.0*297
**KIDS**:RMPR*3.0*96^IB*2.0*297^

**INSTALL NAME**
RMPR*3.0*96
"BLD",16607,0)
RMPR*3.0*96^PROSTHETICS^0^3050111^y
"BLD",16607,4,0)
^9.64PA^660^1
"BLD",16607,4,660,0)
660
"BLD",16607,4,660,2,0)
^9.641^660^1
"BLD",16607,4,660,2,660,0)
RECORD OF PROS APPLIANCE/REPAIR  (File-top level)
"BLD",16607,4,660,2,660,1,0)
^9.6411^4.91^2
"BLD",16607,4,660,2,660,1,4.9,0)
HCPCS-ICD9 CODING FLAG
"BLD",16607,4,660,2,660,1,4.91,0)
CODING FLAG DATE
"BLD",16607,4,660,222)
y^n^p^^^^n^^n
"BLD",16607,4,660,224)

"BLD",16607,4,"APDD",660,660)

"BLD",16607,4,"APDD",660,660,4.9)

"BLD",16607,4,"APDD",660,660,4.91)

"BLD",16607,4,"B",660,660)

"BLD",16607,"ABPKG")
n
"BLD",16607,"KRN",0)
^9.67PA^8989.52^19
"BLD",16607,"KRN",.4,0)
.4
"BLD",16607,"KRN",.401,0)
.401
"BLD",16607,"KRN",.402,0)
.402
"BLD",16607,"KRN",.403,0)
.403
"BLD",16607,"KRN",.5,0)
.5
"BLD",16607,"KRN",.84,0)
.84
"BLD",16607,"KRN",3.6,0)
3.6
"BLD",16607,"KRN",3.8,0)
3.8
"BLD",16607,"KRN",9.2,0)
9.2
"BLD",16607,"KRN",9.8,0)
9.8
"BLD",16607,"KRN",9.8,"NM",0)
^9.68A^4^3
"BLD",16607,"KRN",9.8,"NM",1,0)
RMPRPFFS^^0^B27596757
"BLD",16607,"KRN",9.8,"NM",3,0)
RMPR9DM2^^0^B1001209
"BLD",16607,"KRN",9.8,"NM",4,0)
RMPR9DM3^^0^B2996927
"BLD",16607,"KRN",9.8,"NM","B","RMPR9DM2",3)

"BLD",16607,"KRN",9.8,"NM","B","RMPR9DM3",4)

"BLD",16607,"KRN",9.8,"NM","B","RMPRPFFS",1)

"BLD",16607,"KRN",19,0)
19
"BLD",16607,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",16607,"KRN",19,"NM",1,0)
RMPR NPPD TOOLS^^2
"BLD",16607,"KRN",19,"NM",2,0)
RMPR PFFS GUI^^0
"BLD",16607,"KRN",19,"NM","B","RMPR NPPD TOOLS",1)

"BLD",16607,"KRN",19,"NM","B","RMPR PFFS GUI",2)

"BLD",16607,"KRN",19.1,0)
19.1
"BLD",16607,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",16607,"KRN",101,0)
101
"BLD",16607,"KRN",409.61,0)
409.61
"BLD",16607,"KRN",771,0)
771
"BLD",16607,"KRN",870,0)
870
"BLD",16607,"KRN",8989.51,0)
8989.51
"BLD",16607,"KRN",8989.52,0)
8989.52
"BLD",16607,"KRN",8994,0)
8994
"BLD",16607,"KRN",8994,"NM",0)
^9.68A^3^3
"BLD",16607,"KRN",8994,"NM",1,0)
RMPR PFFS LIST^^0
"BLD",16607,"KRN",8994,"NM",2,0)
RMPR PFFS INS^^0
"BLD",16607,"KRN",8994,"NM",3,0)
RMPR DIS LIST 660^^0
"BLD",16607,"KRN",8994,"NM","B","RMPR DIS LIST 660",3)

"BLD",16607,"KRN",8994,"NM","B","RMPR PFFS INS",2)

"BLD",16607,"KRN",8994,"NM","B","RMPR PFFS LIST",1)

"BLD",16607,"KRN","B",.4,.4)

"BLD",16607,"KRN","B",.401,.401)

"BLD",16607,"KRN","B",.402,.402)

"BLD",16607,"KRN","B",.403,.403)

"BLD",16607,"KRN","B",.5,.5)

"BLD",16607,"KRN","B",.84,.84)

"BLD",16607,"KRN","B",3.6,3.6)

"BLD",16607,"KRN","B",3.8,3.8)

"BLD",16607,"KRN","B",9.2,9.2)

"BLD",16607,"KRN","B",9.8,9.8)

"BLD",16607,"KRN","B",19,19)

"BLD",16607,"KRN","B",19.1,19.1)

"BLD",16607,"KRN","B",101,101)

"BLD",16607,"KRN","B",409.61,409.61)

"BLD",16607,"KRN","B",771,771)

"BLD",16607,"KRN","B",870,870)

"BLD",16607,"KRN","B",8989.51,8989.51)

"BLD",16607,"KRN","B",8989.52,8989.52)

"BLD",16607,"KRN","B",8994,8994)

"BLD",16607,"QUES",0)
^9.62^^
"BLD",16607,"REQB",0)
^9.611^^
"FIA",660)
RECORD OF PROS APPLIANCE/REPAIR
"FIA",660,0)
^RMPR(660,
"FIA",660,0,0)
660IOD
"FIA",660,0,1)
y^n^p^^^^n^^n
"FIA",660,0,10)

"FIA",660,0,11)

"FIA",660,0,"RLRO")

"FIA",660,0,"VR")
3.0^RMPR
"FIA",660,660)
1
"FIA",660,660,4.9)

"FIA",660,660,4.91)

"KRN",19,10623,-1)
2^1
"KRN",19,10623,0)
RMPR NPPD TOOLS^NPPD Tools^^M^28^^^^^^^101
"KRN",19,10623,10,0)
^19.01IP^11^11
"KRN",19,10623,10,11,0)
11937
"KRN",19,10623,10,11,"^")
RMPR PFFS GUI
"KRN",19,10623,"U")
NPPD TOOLS
"KRN",19,11937,-1)
0^2
"KRN",19,11937,0)
RMPR PFFS GUI^RMPR PFFS GUI^^B^^^^^^^^PROSTHETICS
"KRN",19,11937,1,0)
^19.06^7^7^3040727^^^^
"KRN",19,11937,1,1,0)
'B' type option.  For users to be able to use the PFFS Detail Display GUI
"KRN",19,11937,1,2,0)
front-end, this option must be on either their primary
"KRN",19,11937,1,3,0)
or secondary menu options.  This option has also been
"KRN",19,11937,1,4,0)
placed on RMPR NPPD TOOLS to give users who have access
"KRN",19,11937,1,5,0)
to the current NPPD options, access to PFFS GUI Detail
"KRN",19,11937,1,6,0)
Display.  Note: 'B' type options are not visible to roll
"KRN",19,11937,1,7,0)
& scroll users.
"KRN",19,11937,21,0)
^^1^1^3040727^
"KRN",19,11937,21,1,0)
 
"KRN",19,11937,99.1)
59150,34398
"KRN",19,11937,"RPC",0)
^19.05P^3^3
"KRN",19,11937,"RPC",1,0)
RMPR PFFS LIST
"KRN",19,11937,"RPC",2,0)
RMPR DIS LIST 660
"KRN",19,11937,"RPC",3,0)
RMPR PFFS INS
"KRN",19,11937,"U")
RMPR PFFS GUI
"KRN",8994,1871,-1)
0^1
"KRN",8994,1871,0)
RMPR PFFS LIST^EN^RMPRPFFS^4^R^^^1
"KRN",8994,1871,1,0)
^8994.01^22^22^3030502^^
"KRN",8994,1871,1,1,0)
GUI REMOTE PROCEDURE, LIST NPPD DATA
"KRN",8994,1871,1,2,0)
 
"KRN",8994,1871,1,3,0)
        ;RESULTS passed to broker in ^TMP($J,
"KRN",8994,1871,1,4,0)
        ;delimited by "^"
"KRN",8994,1871,1,5,0)
        ;piece 1 = ENTRY DATE
"KRN",8994,1871,1,6,0)
        ;piece 2 = PATIENT NAME
"KRN",8994,1871,1,7,0)
        ;piece 3 = PSAS HCPCS with * if hcpcs has Calculation Flag
"KRN",8994,1871,1,8,0)
        ;piece 4 = QTY
"KRN",8994,1871,1,9,0)
        ;piece 5 = VENDOR
"KRN",8994,1871,1,10,0)
        ;piece 6 = INITIAL ACTION DATE
"KRN",8994,1871,1,11,0)
        ;piece 7 = TOTAL COST
"KRN",8994,1871,1,12,0)
        ;piece 8 = DESCRIPTION
"KRN",8994,1871,1,13,0)
        ;piece 9 = INITIATOR
"KRN",8994,1871,1,14,0)
        ;piece 10 = NPPD LINE BEFORE GROUPER
"KRN",8994,1871,1,15,0)
        ;piece 11 = STATION
"KRN",8994,1871,1,16,0)
        ;piece 12 = GROUPER NUMBER
"KRN",8994,1871,1,17,0)
        ;piece 13 = FORM REQUESTED ON
"KRN",8994,1871,1,18,0)
        ;piece 14 = TYPE OF TRANSACTION
"KRN",8994,1871,1,19,0)
        ;piece 15 = SSN
"KRN",8994,1871,1,20,0)
        ;piece 16 = IEN TO FILE 660
"KRN",8994,1871,1,21,0)
        ;piece 17 = HCPCS SHORT DESCRIPTION
"KRN",8994,1871,1,22,0)
        ;piece 18 = SOURCE
"KRN",8994,1871,2,0)
^8994.02A^2^2
"KRN",8994,1871,2,1,0)
DATE1^1^50^1^1
"KRN",8994,1871,2,1,1,0)
^8994.021^1^1^3020813^^
"KRN",8994,1871,2,1,1,1,0)
The Fileman date to start the query.  The begining date.
"KRN",8994,1871,2,2,0)
DATE2^1^50^1^2
"KRN",8994,1871,2,2,1,0)
^^1^1^3020813^
"KRN",8994,1871,2,2,1,1,0)
The Fileman date to end the query.  The ending date.
"KRN",8994,1871,2,"B","DATE1",1)

"KRN",8994,1871,2,"B","DATE2",2)

"KRN",8994,1871,2,"PARAMSEQ",1,1)

"KRN",8994,1871,2,"PARAMSEQ",2,2)

"KRN",8994,1872,-1)
0^3
"KRN",8994,1872,0)
RMPR DIS LIST 660^EN^RMPR9DM2^2^R^0^^0
"KRN",8994,1872,1,0)
^8994.01^8^8^3040728^^
"KRN",8994,1872,1,1,0)
GUI 2319 MAS DISABILITY AND PERCENT.
"KRN",8994,1872,1,2,0)
 
"KRN",8994,1872,1,3,0)
PASS IEN OF FILE 660.
"KRN",8994,1872,1,4,0)
 
"KRN",8994,1872,1,5,0)
RETURN RESULTS FROM FILE #2.
"KRN",8994,1872,1,6,0)
 
"KRN",8994,1872,1,7,0)
RESULTS()=DISABILITY DESCRIPTION^%^SC YESorNO.
"KRN",8994,1872,1,8,0)
One line or multiple lines.
"KRN",8994,1872,2,0)
^8994.02A^1^1
"KRN",8994,1872,2,1,0)
IEN^1^50^1^1
"KRN",8994,1872,2,"B","IEN",1)

"KRN",8994,1872,2,"PARAMSEQ",1,1)

"KRN",8994,1872,3,0)
^^2^2^3040728^
"KRN",8994,1872,3,1,0)
 
"KRN",8994,1872,3,2,0)
 
"KRN",8994,1873,-1)
0^2
"KRN",8994,1873,0)
RMPR PFFS INS^EN^RMPR9DM3^2^R^0^^0
"KRN",8994,1873,1,0)
^8994.01^9^9^3041214^^^
"KRN",8994,1873,1,1,0)
         ;RESULTS passed to broker
"KRN",8994,1873,1,2,0)
         ;delimited by "^"
"KRN",8994,1873,1,3,0)
         ;piece 1 = INSURANCE COMPANY
"KRN",8994,1873,1,4,0)
         ;piece 2 = SUB ID
"KRN",8994,1873,1,5,0)
         ;piece 3 = GROUP
"KRN",8994,1873,1,6,0)
         ;piece 4 = HOLDER
"KRN",8994,1873,1,7,0)
         ;piece 5 = EXPIRATION DATE
"KRN",8994,1873,1,8,0)
         ;piece 6 = EFFECTIVE DATE
"KRN",8994,1873,1,9,0)
         ;piece 7 = COB
"KRN",8994,1873,2,0)
^8994.02A^1^1
"KRN",8994,1873,2,1,0)
IEN^1^50^1^1
"KRN",8994,1873,2,"B","IEN",1)

"KRN",8994,1873,2,"PARAMSEQ",1,1)

"KRN",8994,1873,3,0)
^^2^2^3040728^
"KRN",8994,1873,3,1,0)
 
"KRN",8994,1873,3,2,0)
 
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",101,-1)
1^1
"PKG",101,0)
PROSTHETICS^RMPR^PROSTHETICS VERSION 3.0 ALPHA
"PKG",101,20,0)
^9.402P^^
"PKG",101,22,0)
^9.49I^1^1
"PKG",101,22,1,0)
3.0^2960209^2960214
"PKG",101,22,1,"PAH",1,0)
96^3050111^222222233
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","RMPR9DM2")
0^3^B1001209
"RTN","RMPR9DM2",1,0)
RMPR9DM2 ;HOIFO/HNC - GUI PFFS DISABILITY AND PERCENT ;9/18/02  17:01
"RTN","RMPR9DM2",2,0)
 ;;3.0;PROSTHETICS;**96**;Feb 09, 1996
"RTN","RMPR9DM2",3,0)
A1(IEN) G A2
"RTN","RMPR9DM2",4,0)
ENR(DFN) ;entry point for roll and scroll
"RTN","RMPR9DM2",5,0)
 G ENC
"RTN","RMPR9DM2",6,0)
EN(RESULTS,IEN) ;broker entry point
"RTN","RMPR9DM2",7,0)
A2 ;
"RTN","RMPR9DM2",8,0)
 S DFN=$P($G(^RMPR(660,IEN,0)),U,2)
"RTN","RMPR9DM2",9,0)
 I DFN="" S RESULTS(0)="NOTHING FOUND" G EXIT
"RTN","RMPR9DM2",10,0)
 ;new code
"RTN","RMPR9DM2",11,0)
ENC ;roll and scroll starts here
"RTN","RMPR9DM2",12,0)
 K RA
"RTN","RMPR9DM2",13,0)
 D GETS^DIQ(2,DFN,".3721*","E","RA")
"RTN","RMPR9DM2",14,0)
 I '$D(RA) G EXIT
"RTN","RMPR9DM2",15,0)
 ;RA(2.04,"1,110,",.01,"E")=GOUT
"RTN","RMPR9DM2",16,0)
 ;RA(2.04,"1,110,",2,"E")=10
"RTN","RMPR9DM2",17,0)
 ;RA(2.04,"1,110,",3,"E")=YES
"RTN","RMPR9DM2",18,0)
 S CNT=1,REC=0
"RTN","RMPR9DM2",19,0)
 F  S REC=$O(RA(2.04,REC)) Q:REC=""  D
"RTN","RMPR9DM2",20,0)
 .S RESULTS(CNT)=RA(2.04,REC,.01,"E")_U
"RTN","RMPR9DM2",21,0)
 .S RESULTS(CNT)=RESULTS(CNT)_$G(RA(2.04,REC,2,"E"))_U
"RTN","RMPR9DM2",22,0)
 .S RESULTS(CNT)=RESULTS(CNT)_$G(RA(2.04,REC,3,"E"))
"RTN","RMPR9DM2",23,0)
 .S CNT=CNT+1
"RTN","RMPR9DM2",24,0)
 ;
"RTN","RMPR9DM2",25,0)
EXIT ;common exit point
"RTN","RMPR9DM2",26,0)
 I '$D(RESULTS) S RESULTS(0)="NOTHING FOUND"
"RTN","RMPR9DM2",27,0)
 K RA,IEN,REC,DFN,CNT
"RTN","RMPR9DM2",28,0)
 ;END
"RTN","RMPR9DM3")
0^4^B2996927
"RTN","RMPR9DM3",1,0)
RMPR9DM3 ;HOIFO/HNC - GUI PFFS INSURANCE MINI GRID ;9/18/02  17:01
"RTN","RMPR9DM3",2,0)
 ;;3.0;PROSTHETICS;**96**;Feb 09, 1996
"RTN","RMPR9DM3",3,0)
A1(IEN) G A2
"RTN","RMPR9DM3",4,0)
ENR(DFN) ;entry point for roll and scroll
"RTN","RMPR9DM3",5,0)
 G ENC
"RTN","RMPR9DM3",6,0)
EN(RESULTS,IEN) ;broker entry point
"RTN","RMPR9DM3",7,0)
A2 ;
"RTN","RMPR9DM3",8,0)
 S DFN=$P($G(^RMPR(660,IEN,0)),U,2)
"RTN","RMPR9DM3",9,0)
 I DFN="" S RESULTS(0)="NOTHING FOUND" Q
"RTN","RMPR9DM3",10,0)
 ;new code
"RTN","RMPR9DM3",11,0)
ENC ;roll and scroll starts here
"RTN","RMPR9DM3",12,0)
 ;call insurance API
"RTN","RMPR9DM3",13,0)
 S X=$$INSUR^IBBAPI(DFN,,"RBA",.RMI,"*") I $D(RMI) D
"RTN","RMPR9DM3",14,0)
 .S CNT=0
"RTN","RMPR9DM3",15,0)
 .S X="" F  S X=$O(RMI("IBBAPI","INSUR",X)) Q:'X  D
"RTN","RMPR9DM3",16,0)
 ..S INSUR=$P(RMI("IBBAPI","INSUR",X,1),U,2)
"RTN","RMPR9DM3",17,0)
 ..S SUBID=$P(RMI("IBBAPI","INSUR",X,14),U,1)
"RTN","RMPR9DM3",18,0)
 ..S HOLDER=$P(RMI("IBBAPI","INSUR",X,12),U,2)
"RTN","RMPR9DM3",19,0)
 ..S COB=$E($P(RMI("IBBAPI","INSUR",X,7),U,2),0,1)
"RTN","RMPR9DM3",20,0)
 ..S RMPRIND=$P(RMI("IBBAPI","INSUR",X,11),U,1)
"RTN","RMPR9DM3",21,0)
 ..I RMPRIND'="" S RMPRIND=$E(RMPRIND,4,5)_"/"_$E(RMPRIND,6,7)_"/"_(($E(RMPRIND,1,3))+1700)
"RTN","RMPR9DM3",22,0)
 ..S INSURE=$P(RMI("IBBAPI","INSUR",X,10),U,1)
"RTN","RMPR9DM3",23,0)
 ..I INSURE'="" S INSURE=$E(INSURE,4,5)_"/"_$E(INSURE,6,7)_"/"_(($E(INSURE,1,3))+1700)
"RTN","RMPR9DM3",24,0)
 ..S INSURG=$P(RMI("IBBAPI","INSUR",X,8),U,1)
"RTN","RMPR9DM3",25,0)
 ..S INSURGG=$$GET1^DIQ(355.3,INSURG_",",.04)
"RTN","RMPR9DM3",26,0)
 ..S CNT=CNT+1
"RTN","RMPR9DM3",27,0)
 ..S RESULTS(CNT)=INSUR_U_SUBID_U_INSURG_U_HOLDER_U_RMPRIND_U_INSURE_U_COB
"RTN","RMPR9DM3",28,0)
 ..K INSUR,SUBID,INSURG,HOLDER,RMPRIND,INSURE,COB
"RTN","RMPR9DM3",29,0)
 ;
"RTN","RMPR9DM3",30,0)
 I '$D(RESULTS) S RESULTS(1)="No Insurance Information"
"RTN","RMPR9DM3",31,0)
 ;
"RTN","RMPR9DM3",32,0)
 K RMI,IEN,DFN,CNT,INSURGG,X
"RTN","RMPR9DM3",33,0)
 ;END
"RTN","RMPRPFFS")
0^1^B27596757
"RTN","RMPRPFFS",1,0)
RMPRPFFS ;Hines OIFO/HNC - REMOTE PROCEDURE, LIST NPPD DATA ;9/8/03  07:23
"RTN","RMPRPFFS",2,0)
 ;;3.0;PROSTHETICS;**96**;Feb 09, 1996
"RTN","RMPRPFFS",3,0)
 ;
"RTN","RMPRPFFS",4,0)
 ;  patch 96 - HNC
"RTN","RMPRPFFS",5,0)
 ;        -DBIA #4419 for INSUR^IBBAPI
"RTN","RMPRPFFS",6,0)
 ;        -DBIA #3990 for ICDDX^ICDCODE
"RTN","RMPRPFFS",7,0)
 ;        -DBIA #1997 for STATCHK^ICPTAPIU
"RTN","RMPRPFFS",8,0)
 ;        -DBIA #3823 for read file 355.3, field .04
"RTN","RMPRPFFS",9,0)
 ;RESULTS passed to broker in ^TMP($J,
"RTN","RMPRPFFS",10,0)
 ;delimited by "^"
"RTN","RMPRPFFS",11,0)
 ;piece 1 = ENTRY DATE
"RTN","RMPRPFFS",12,0)
 ;piece 2 = PATIENT NAME
"RTN","RMPRPFFS",13,0)
 ;piece 3 = PSAS HCPCS with * if hcpcs has Calculation Flag
"RTN","RMPRPFFS",14,0)
 ;piece 4 = QTY
"RTN","RMPRPFFS",15,0)
 ;piece 5 = Insurance with * if more insurance info available
"RTN","RMPRPFFS",16,0)
 ;piece 6 = Insurance Effective Date
"RTN","RMPRPFFS",17,0)
 ;piece 7 = TOTAL COST
"RTN","RMPRPFFS",18,0)
 ;piece 8 = DESCRIPTION (ITEM, BRIEF DESCRIPTION WITH ~R~ FOR REPAIR)
"RTN","RMPRPFFS",19,0)
 ;piece 9 = Coding Errors
"RTN","RMPRPFFS",20,0)
 ;piece 10 = Insurance Holder
"RTN","RMPRPFFS",21,0)
 ;piece 11 = STATION
"RTN","RMPRPFFS",22,0)
 ;piece 12 = ICD9 Description
"RTN","RMPRPFFS",23,0)
 ;piece 13 = Billing Group Number
"RTN","RMPRPFFS",24,0)
 ;piece 14 = Subscriber ID
"RTN","RMPRPFFS",25,0)
 ;piece 15 = SSN
"RTN","RMPRPFFS",26,0)
 ;piece 16 = IEN TO FILE 660
"RTN","RMPRPFFS",27,0)
 ;piece 17 = HCPCS SHORT DESCRIPTION
"RTN","RMPRPFFS",28,0)
 ;piece 18 = ICD9 code
"RTN","RMPRPFFS",29,0)
 ;piece 19 = Delivery Date
"RTN","RMPRPFFS",30,0)
 ;piece 20 = Expiration Insurance Date
"RTN","RMPRPFFS",31,0)
 ;piece 21 = Hcpcs-Icd9 Flag, this routine will set field 4.9 in file 660
"RTN","RMPRPFFS",32,0)
 ;all records will have a 1
"RTN","RMPRPFFS",33,0)
 ;ICD9, 2
"RTN","RMPRPFFS",34,0)
 ;HCPCS, 3
"RTN","RMPRPFFS",35,0)
 ;Not Billable 4
"RTN","RMPRPFFS",36,0)
 ;
"RTN","RMPRPFFS",37,0)
 ;No errors, number 1.
"RTN","RMPRPFFS",38,0)
 ;PSAS HCPCS, Not Billable Item, number 14.
"RTN","RMPRPFFS",39,0)
 ;ICD9 error, number 12.
"RTN","RMPRPFFS",40,0)
 ;HCPCS error, number 13.
"RTN","RMPRPFFS",41,0)
 ;Both ICD9 and HCPCS error, number 132.
"RTN","RMPRPFFS",42,0)
 ;Both ICD9 error and Not Billable Item, number 142.
"RTN","RMPRPFFS",43,0)
 Q
"RTN","RMPRPFFS",44,0)
 ;
"RTN","RMPRPFFS",45,0)
EN(RESULT,DATE1,DATE2) ;broker entry point
"RTN","RMPRPFFS",46,0)
 ;
"RTN","RMPRPFFS",47,0)
 K ^TMP($J)
"RTN","RMPRPFFS",48,0)
 I '$D(DATE1)!('$D(DATE2)) G EXIT
"RTN","RMPRPFFS",49,0)
 S DATE=DATE1-1
"RTN","RMPRPFFS",50,0)
 F  S DATE=$O(^RMPR(660,"B",DATE)) Q:(DATE="")!($P(DATE,".",1)>DATE2)  D
"RTN","RMPRPFFS",51,0)
 .S RMPRB=0
"RTN","RMPRPFFS",52,0)
 .F  S RMPRB=$O(^RMPR(660,"B",DATE,RMPRB)) Q:RMPRB=""  D
"RTN","RMPRPFFS",53,0)
 ..Q:$P(^RMPR(660,RMPRB,0),U,15)["*"
"RTN","RMPRPFFS",54,0)
 ..Q:$P(^RMPR(660,RMPRB,0),U,14)'["C"
"RTN","RMPRPFFS",55,0)
 ..;Q:$P(^RMPR(660,RMPRB,0),U,12)=""
"RTN","RMPRPFFS",56,0)
 ..Q:$P($G(^RMPR(660,RMPRB,"AM")),U,3)<2
"RTN","RMPRPFFS",57,0)
 ..;end of filter
"RTN","RMPRPFFS",58,0)
 ..S PHCPCS=$P($G(^RMPR(660,RMPRB,1)),U,4)
"RTN","RMPRPFFS",59,0)
 ..Q:PHCPCS=""
"RTN","RMPRPFFS",60,0)
 ..Q:PHCPCS'>0
"RTN","RMPRPFFS",61,0)
 ..S HDES=$P(^RMPR(661.1,PHCPCS,0),U,2)
"RTN","RMPRPFFS",62,0)
 ..;code set versioning check
"RTN","RMPRPFFS",63,0)
 ..S RICP=""
"RTN","RMPRPFFS",64,0)
 ..S RICP=$P(^RMPR(661.1,PHCPCS,0),U,1)
"RTN","RMPRPFFS",65,0)
 ..S RICPP="",CODERR="Alert",CODEFLG=1
"RTN","RMPRPFFS",66,0)
 ..I RICP'="" D
"RTN","RMPRPFFS",67,0)
 ...I $A($E(RICP,2,2))>64 S CODERR=" Non Billable Item",CODEFLG=CODEFLG_4 Q
"RTN","RMPRPFFS",68,0)
 ...I $A($E(RICP,2,2))<65 S RICPP=$$STATCHK^ICPTAPIU(RICP,$P(^RMPR(660,RMPRB,0),U,1))
"RTN","RMPRPFFS",69,0)
 ..I RICPP'="" D
"RTN","RMPRPFFS",70,0)
 ...I $P(RICPP,U,1)=0 S CODERR=CODERR_" HCPCS Inactive",CODEFLG=CODEFLG_3
"RTN","RMPRPFFS",71,0)
 ..S TYPE=$P($G(^RMPR(660,RMPRB,0)),U,4)
"RTN","RMPRPFFS",72,0)
 ..I TYPE'="X" S LINE=$P(^RMPR(661.1,PHCPCS,0),U,7)
"RTN","RMPRPFFS",73,0)
 ..I TYPE="X" S LINE=$P(^RMPR(661.1,PHCPCS,0),U,6)
"RTN","RMPRPFFS",74,0)
 ..S CAL=$P(^RMPR(661.1,PHCPCS,0),U,8)
"RTN","RMPRPFFS",75,0)
 ..I CAL'="" S CAL="*"
"RTN","RMPRPFFS",76,0)
 ..S DFN=$P(^RMPR(660,RMPRB,0),U,2)
"RTN","RMPRPFFS",77,0)
 ..D DEM^VADPT
"RTN","RMPRPFFS",78,0)
 ..S (RMI,HOLDER,SUBID,INSUR,INSURE,INSURG,INSURGG,INICD9D,INICD9E,RMPRDELD,RMPRIND,RMPRDEL)=""
"RTN","RMPRPFFS",79,0)
 ..S RMPRDELD=$P(^RMPR(660,RMPRB,0),U,12)
"RTN","RMPRPFFS",80,0)
 ..I RMPRDELD'="" S RMPRDEL=$E(RMPRDELD,4,5)_"/"_$E(RMPRDELD,6,7)_"/"_(($E(RMPRDELD,1,3))+1700)
"RTN","RMPRPFFS",81,0)
 ..S X=$$INSUR^IBBAPI(DFN,,"RBA",.RMI,"*") I $D(RMI) D
"RTN","RMPRPFFS",82,0)
 ...;format the RMI array
"RTN","RMPRPFFS",83,0)
 ...;look for primary insurance
"RTN","RMPRPFFS",84,0)
 ...;RMI("IBBAPI","INSUR",n,7)=1^PRIMARY
"RTN","RMPRPFFS",85,0)
 ...S X="" F  S X=$O(RMI("IBBAPI","INSUR",X)) Q:'X  D
"RTN","RMPRPFFS",86,0)
 ....;I $P(RMI("IBBAPI","INSUR",X,7),U,2)'="PRIMARY" Q
"RTN","RMPRPFFS",87,0)
 ....S INSUR=$P(RMI("IBBAPI","INSUR",X,1),U,2)
"RTN","RMPRPFFS",88,0)
 ....I X>1 S INSUR="*"_INSUR
"RTN","RMPRPFFS",89,0)
 ....S SUBID=$P(RMI("IBBAPI","INSUR",X,14),U,1)
"RTN","RMPRPFFS",90,0)
 ....S HOLDER=$P(RMI("IBBAPI","INSUR",X,12),U,2)
"RTN","RMPRPFFS",91,0)
 ....S RMPRIND=$P(RMI("IBBAPI","INSUR",X,11),U,1)
"RTN","RMPRPFFS",92,0)
 ....I RMPRIND'="" S RMPRIND=$E(RMPRIND,4,5)_"/"_$E(RMPRIND,6,7)_"/"_(($E(RMPRIND,1,3))+1700)
"RTN","RMPRPFFS",93,0)
 ....S INSURE=$P(RMI("IBBAPI","INSUR",X,10),U,1)
"RTN","RMPRPFFS",94,0)
 ....I INSURE'="" S INSURE=$E(INSURE,4,5)_"/"_$E(INSURE,6,7)_"/"_(($E(INSURE,1,3))+1700)
"RTN","RMPRPFFS",95,0)
 ....S INSURG=$P(RMI("IBBAPI","INSUR",X,8),U,1)
"RTN","RMPRPFFS",96,0)
 ....S INSURGG=$$GET1^DIQ(355.3,INSURG_",",.04)
"RTN","RMPRPFFS",97,0)
 ..I '$D(RMI) D
"RTN","RMPRPFFS",98,0)
 ...S INSUR="No Insurance Information"
"RTN","RMPRPFFS",99,0)
 ...S SUBID=""
"RTN","RMPRPFFS",100,0)
 ...S HOLDER=""
"RTN","RMPRPFFS",101,0)
 ...S INSURE=""
"RTN","RMPRPFFS",102,0)
 ...S INSURGG=""
"RTN","RMPRPFFS",103,0)
 ...S RMPRIND=""
"RTN","RMPRPFFS",104,0)
 ..;get icd9 data
"RTN","RMPRPFFS",105,0)
 ..S INICD9I=$P($G(^RMPR(660,RMPRB,10)),U,8)
"RTN","RMPRPFFS",106,0)
 ..I INICD9I'="" D
"RTN","RMPRPFFS",107,0)
 ...S INICD9=$$ICDDX^ICDCODE(INICD9I,$P(^RMPR(660,RMPRB,0),U,1))
"RTN","RMPRPFFS",108,0)
 ...I INICD9'="" S INICD9E=$P(INICD9,U,2),INICD9D=$P(INICD9,U,4)
"RTN","RMPRPFFS",109,0)
 ...I $P(INICD9,U,10)=0 S CODERR=CODERR_" ICD9 Inactive",CODEFLG=CODEFLG_2
"RTN","RMPRPFFS",110,0)
 ..D DATA
"RTN","RMPRPFFS",111,0)
 S RESULT=$NA(^TMP($J))
"RTN","RMPRPFFS",112,0)
 Q
"RTN","RMPRPFFS",113,0)
 ;
"RTN","RMPRPFFS",114,0)
DATA ;
"RTN","RMPRPFFS",115,0)
 S B=RMPRB
"RTN","RMPRPFFS",116,0)
 D GETS^DIQ(660,B,".01;.02;2;4.5;5;7;8;8.3;11;12;14;24;27;68","","RMXM")
"RTN","RMPRPFFS",117,0)
 S $P(^TMP($J,B),U,1)=$G(RMXM(660,B_",",.01))
"RTN","RMPRPFFS",118,0)
 S $P(^TMP($J,B),U,2)=$G(RMXM(660,B_",",.02))
"RTN","RMPRPFFS",119,0)
 S $P(^TMP($J,B),U,3)=$G(RMXM(660,B_",",4.5))_CAL
"RTN","RMPRPFFS",120,0)
 S $P(^TMP($J,B),U,4)=$G(RMXM(660,B_",",5))
"RTN","RMPRPFFS",121,0)
 ;change to insurance
"RTN","RMPRPFFS",122,0)
 I INSUR="" S INSUR="Incomplete Insurance Information"
"RTN","RMPRPFFS",123,0)
 S $P(^TMP($J,B),U,5)=INSUR
"RTN","RMPRPFFS",124,0)
 ;change to effective insurance date
"RTN","RMPRPFFS",125,0)
 S $P(^TMP($J,B),U,6)=INSURE
"RTN","RMPRPFFS",126,0)
 S $P(^TMP($J,B),U,7)=$G(RMXM(660,B_",",14))
"RTN","RMPRPFFS",127,0)
 ;patch 77 remove the " for Excel CSV
"RTN","RMPRPFFS",128,0)
 ;append ~R~ for repair items
"RTN","RMPRPFFS",129,0)
 I $G(RMXM(660,B_",",2))="REPAIR" S RMXM(660,B_",",24)="~R~"_RMXM(660,B_",",24)
"RTN","RMPRPFFS",130,0)
 S $P(^TMP($J,B),U,8)=$TR($G(RMXM(660,B_",",24)),"""","'")
"RTN","RMPRPFFS",131,0)
 ;change to coding errors
"RTN","RMPRPFFS",132,0)
 I CODERR="Alert" S CODERR=""
"RTN","RMPRPFFS",133,0)
 S $P(^TMP($J,B),U,9)=CODERR
"RTN","RMPRPFFS",134,0)
 ;change to holder
"RTN","RMPRPFFS",135,0)
 S $P(^TMP($J,B),U,10)=HOLDER
"RTN","RMPRPFFS",136,0)
 S $P(^TMP($J,B),U,11)=$G(RMXM(660,B_",",8))
"RTN","RMPRPFFS",137,0)
 ;change to ICD9 description
"RTN","RMPRPFFS",138,0)
 S $P(^TMP($J,B),U,12)=INICD9D
"RTN","RMPRPFFS",139,0)
 ;change to Billing Group
"RTN","RMPRPFFS",140,0)
 S $P(^TMP($J,B),U,13)=INSURGG
"RTN","RMPRPFFS",141,0)
 ;change to subscriber ID
"RTN","RMPRPFFS",142,0)
 S $P(^TMP($J,B),U,14)=SUBID
"RTN","RMPRPFFS",143,0)
 S $P(^TMP($J,B),U,15)=$P(VADM(2),U,2)
"RTN","RMPRPFFS",144,0)
 S $P(^TMP($J,B),U,16)=B
"RTN","RMPRPFFS",145,0)
 S $P(^TMP($J,B),U,17)=HDES
"RTN","RMPRPFFS",146,0)
 ;change to ICD9 code
"RTN","RMPRPFFS",147,0)
 S $P(^TMP($J,B),U,18)=INICD9E
"RTN","RMPRPFFS",148,0)
 ;add Delivery Date
"RTN","RMPRPFFS",149,0)
 S $P(^TMP($J,B),U,20)=RMPRDEL
"RTN","RMPRPFFS",150,0)
 ;add Insurance Expiration Date
"RTN","RMPRPFFS",151,0)
 S $P(^TMP($J,B),U,19)=RMPRIND
"RTN","RMPRPFFS",152,0)
 ;hcpcs-icd9 code flag
"RTN","RMPRPFFS",153,0)
 S $P(^TMP($J,B),U,21)=CODEFLG
"RTN","RMPRPFFS",154,0)
 S $P(^RMPR(660,RMPRB,1),U,11)=CODEFLG
"RTN","RMPRPFFS",155,0)
 S $P(^RMPR(660,RMPRB,1),U,12)=DT
"RTN","RMPRPFFS",156,0)
 K RMXM,VADM,CAL
"RTN","RMPRPFFS",157,0)
 Q
"RTN","RMPRPFFS",158,0)
EXIT ;common exit point
"RTN","RMPRPFFS",159,0)
 N RESULTS D KILL^XUSCLEAN
"RTN","RMPRPFFS",160,0)
 Q
"RTN","RMPRPFFS",161,0)
 ;END
"VER")
8.0^22.0
"^DD",660,660,4.9,0)
HCPCS-ICD9 CODING FLAG^NJ6,0^^1;11^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",660,660,4.9,3)
Type a Number between 0 and 999999, 0 Decimal Digits
"^DD",660,660,4.9,21,0)
^^7^7^3040916^
"^DD",660,660,4.9,21,1,0)
This field is used to determine the current code set versioning of a transaction.
"^DD",660,660,4.9,21,2,0)
        No errors, number 1.
"^DD",660,660,4.9,21,3,0)
        PSAS HCPCS, Not Billiable Item, number 14.
"^DD",660,660,4.9,21,4,0)
        ICD9 error, number 12.
"^DD",660,660,4.9,21,5,0)
        HCPCS error, number 13.
"^DD",660,660,4.9,21,6,0)
        Both ICD9 and HCPCS error, number 132.
"^DD",660,660,4.9,21,7,0)
        Both ICD9 error and Not Billiable Item, number 142.
"^DD",660,660,4.9,"DT")
3040914
"^DD",660,660,4.91,0)
CODING FLAG DATE^D^^1;12^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",660,660,4.91,21,0)
^^2^2^3040916^
"^DD",660,660,4.91,21,1,0)
This is the date associated with field number 4.9.  The date the coding
"^DD",660,660,4.91,21,2,0)
flag was set.
"^DD",660,660,4.91,"DT")
3040916
**INSTALL NAME**
IB*2.0*297
"BLD",16837,0)
IB*2.0*297^INTEGRATED BILLING^0^3050111^y
"BLD",16837,1,0)
^^1^1^3050103^
"BLD",16837,1,1,0)
Update to insurance API and Insurance Clean Up
"BLD",16837,4,0)
^9.64PA^^
"BLD",16837,"INIT")
IB20P297
"BLD",16837,"KRN",0)
^9.67PA^8989.52^19
"BLD",16837,"KRN",.4,0)
.4
"BLD",16837,"KRN",.401,0)
.401
"BLD",16837,"KRN",.402,0)
.402
"BLD",16837,"KRN",.403,0)
.403
"BLD",16837,"KRN",.5,0)
.5
"BLD",16837,"KRN",.84,0)
.84
"BLD",16837,"KRN",3.6,0)
3.6
"BLD",16837,"KRN",3.8,0)
3.8
"BLD",16837,"KRN",9.2,0)
9.2
"BLD",16837,"KRN",9.8,0)
9.8
"BLD",16837,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",16837,"KRN",9.8,"NM",1,0)
IBBFAPI^^0^B31724014
"BLD",16837,"KRN",9.8,"NM",2,0)
IB20P297^^0^B21921184
"BLD",16837,"KRN",9.8,"NM","B","IB20P297",2)

"BLD",16837,"KRN",9.8,"NM","B","IBBFAPI",1)

"BLD",16837,"KRN",19,0)
19
"BLD",16837,"KRN",19.1,0)
19.1
"BLD",16837,"KRN",101,0)
101
"BLD",16837,"KRN",409.61,0)
409.61
"BLD",16837,"KRN",771,0)
771
"BLD",16837,"KRN",870,0)
870
"BLD",16837,"KRN",8989.51,0)
8989.51
"BLD",16837,"KRN",8989.52,0)
8989.52
"BLD",16837,"KRN",8994,0)
8994
"BLD",16837,"KRN","B",.4,.4)

"BLD",16837,"KRN","B",.401,.401)

"BLD",16837,"KRN","B",.402,.402)

"BLD",16837,"KRN","B",.403,.403)

"BLD",16837,"KRN","B",.5,.5)

"BLD",16837,"KRN","B",.84,.84)

"BLD",16837,"KRN","B",3.6,3.6)

"BLD",16837,"KRN","B",3.8,3.8)

"BLD",16837,"KRN","B",9.2,9.2)

"BLD",16837,"KRN","B",9.8,9.8)

"BLD",16837,"KRN","B",19,19)

"BLD",16837,"KRN","B",19.1,19.1)

"BLD",16837,"KRN","B",101,101)

"BLD",16837,"KRN","B",409.61,409.61)

"BLD",16837,"KRN","B",771,771)

"BLD",16837,"KRN","B",870,870)

"BLD",16837,"KRN","B",8989.51,8989.51)

"BLD",16837,"KRN","B",8989.52,8989.52)

"BLD",16837,"KRN","B",8994,8994)

"INIT")
IB20P297
"MBREQ")
0
"PKG",73,-1)
1^1
"PKG",73,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",73,20,0)
^9.402P^1^1
"PKG",73,20,1,0)
2^^IBAXDR
"PKG",73,20,1,1)

"PKG",73,20,"B",2,1)

"PKG",73,22,0)
^9.49I^1^1
"PKG",73,22,1,0)
2.0^2940321^2940428
"PKG",73,22,1,"PAH",1,0)
297^3050111^222222261
"PKG",73,22,1,"PAH",1,1,0)
^^1^1^3050111
"PKG",73,22,1,"PAH",1,1,1,0)
Update to insurance API and Insurance Clean Up
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IB20P297")
0^2^B21921184
"RTN","IB20P297",1,0)
IB20P297 ;OAK/ELZ - POST INSTALL ROUTINE FOR IB*2*297 ;03-JAN-2005
"RTN","IB20P297",2,0)
 ;;2.0;INTEGRATED BILLING;**297**;21-MAR-94
"RTN","IB20P297",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IB20P297",4,0)
 ;
"RTN","IB20P297",5,0)
 ; This is the post install routine for IB*2*297.  This routine will
"RTN","IB20P297",6,0)
 ; run through the patient's insurance companies and identify insurance
"RTN","IB20P297",7,0)
 ; companies that do not have a plan associated with them.
"RTN","IB20P297",8,0)
 ; This routine can be deleted after the install, but you may want to
"RTN","IB20P297",9,0)
 ; keep it to review the insurance data again in the future.
"RTN","IB20P297",10,0)
 ;
"RTN","IB20P297",11,0)
POST ;
"RTN","IB20P297",12,0)
 N IBMSG,ZTRTN,ZTDESC,ZTSK
"RTN","IB20P297",13,0)
 S IBMSG(1)="I need to search for patient's with bad insurance data.  You should queue"
"RTN","IB20P297",14,0)
 S IBMSG(2)="this task to run a non-peek hours."
"RTN","IB20P297",15,0)
 D MES^XPDUTL(.IBMSG)
"RTN","IB20P297",16,0)
 ;
"RTN","IB20P297",17,0)
 S ZTRTN="DQ^IB20P297",ZTDESC="BAD INSURANCE DATA LIST",ZTIO=""
"RTN","IB20P297",18,0)
 D ^%ZTLOAD
"RTN","IB20P297",19,0)
 D MES^XPDUTL($S($G(ZTSK):"Task Queued #"_ZTSK,1:"Task not scheduled, you can run this by calling POST^IB20P297"))
"RTN","IB20P297",20,0)
 ;
"RTN","IB20P297",21,0)
 Q
"RTN","IB20P297",22,0)
 ;
"RTN","IB20P297",23,0)
DQ ; tasked entry point
"RTN","IB20P297",24,0)
 N DFN,IBINS,IBINSM,IBGRP,IBLINE,IBSAVE,XMDUZ,XMSUBJ,XMBODY,XMTO,XMINSTR,XMZ,DIK,DA
"RTN","IB20P297",25,0)
 K ^TMP("IB297",$J)
"RTN","IB20P297",26,0)
 S IBLINE=8,IBSAVE=""
"RTN","IB20P297",27,0)
 ;
"RTN","IB20P297",28,0)
 ;
"RTN","IB20P297",29,0)
 ; first check out the AB xref to make sure everything is there
"RTN","IB20P297",30,0)
 S DFN=0 F  S DFN=$O(^DPT(DFN)) Q:'DFN  S IBINSM=0 F  S IBINSM=$O(^DPT(DFN,.312,IBINSM)) Q:'IBINSM  S IBINS=+$G(^DPT(DFN,.312,IBINSM,0)) D
"RTN","IB20P297",31,0)
 . I $D(^DPT("AB",IBINS,DFN,IBINSM)) Q
"RTN","IB20P297",32,0)
 . I IBINS,DFN,IBINSM S DIK="^DPT("_DFN_",.312,",DA(1)=DFN,DA=IBINSM,DIK(1)=.01 D EN^DIK
"RTN","IB20P297",33,0)
 ;
"RTN","IB20P297",34,0)
 ;
"RTN","IB20P297",35,0)
 S IBINS=0 F  S IBINS=$O(^DPT("AB",IBINS)) Q:'IBINS  S DFN=0 F  S DFN=$O(^DPT("AB",IBINS,DFN)) Q:'DFN  S IBINSM=0 F  S IBINSM=$O(^DPT("AB",IBINS,DFN,IBINSM)) Q:'IBINSM  D
"RTN","IB20P297",36,0)
 . ;
"RTN","IB20P297",37,0)
 . ; first verify good x-ref or clean up
"RTN","IB20P297",38,0)
 . S IBINS0=$G(^DPT(DFN,.312,IBINSM,0))
"RTN","IB20P297",39,0)
 . I 'IBINS0 K ^DPT("AB",IBINS,DFN,IBINSM) Q
"RTN","IB20P297",40,0)
 . ;
"RTN","IB20P297",41,0)
 . ; do i have a plan?
"RTN","IB20P297",42,0)
 . I '$P(IBINS0,"^",18) D SET(DFN,IBINS,IBINSM,"No Plan in Patient File") Q
"RTN","IB20P297",43,0)
 . ;
"RTN","IB20P297",44,0)
 . ; good pointer to 36?
"RTN","IB20P297",45,0)
 . I '$D(^DIC(36,+IBINS0,0)) D SET(DFN,IBINS,IBINSM,"Ins Co not in File 36") Q
"RTN","IB20P297",46,0)
 . ;
"RTN","IB20P297",47,0)
 . ; good pointer in 355.3?
"RTN","IB20P297",48,0)
 . I '$D(^IBA(355.3,+$P(IBINS0,"^",18),0)) D SET(DFN,IBINS,IBINSM,"Plan pointer not found") Q
"RTN","IB20P297",49,0)
 . ;
"RTN","IB20P297",50,0)
 . ; check out 355.3 to 36
"RTN","IB20P297",51,0)
 . I $P(IBINS0,"^")'=$P($G(^IBA(355.3,+$P(IBINS0,"^",18),0)),"^") D SET(DFN,IBINS,IBINSM,"Plan to Ins Co Mis-match")
"RTN","IB20P297",52,0)
 ;
"RTN","IB20P297",53,0)
 ; data all looks good
"RTN","IB20P297",54,0)
 I '$D(^TMP("IB297",$J)) S ^TMP("IB297",$J,IBLINE,0)="Data looks good, no problems to report"
"RTN","IB20P297",55,0)
 ;
"RTN","IB20P297",56,0)
 ; start message
"RTN","IB20P297",57,0)
 S IBGRP=$P($G(^IBE(350.9,1,4)),"^",4),IBGRP=$S(IBGRP:$$EXTERNAL^DILFD(350.9,4.04,"",IBGRP),1:"IB NEW INSURANCE")
"RTN","IB20P297",58,0)
 ;
"RTN","IB20P297",59,0)
 ; build header
"RTN","IB20P297",60,0)
 S ^TMP("IB297",$J,1,0)="The following insurance entries have been found with errors that need to"
"RTN","IB20P297",61,0)
 S ^TMP("IB297",$J,2,0)="be resolved.  You should use the ""Patient Insurance Info View/Edit [IBCN"
"RTN","IB20P297",62,0)
 S ^TMP("IB297",$J,3,0)="PATIENT INSURANCE]"" option to edit the patient's insurance information"
"RTN","IB20P297",63,0)
 S ^TMP("IB297",$J,4,0)="and correct as needed.  If you just see a NULL value in a field that"
"RTN","IB20P297",64,0)
 S ^TMP("IB297",$J,5,0)="indicates either the pointer value in a field is invalid or missing.  You"
"RTN","IB20P297",65,0)
 S ^TMP("IB297",$J,6,0)="may need to involve your IRM to resolve some of the issues on this report."
"RTN","IB20P297",66,0)
 S ^TMP("IB297",$J,7,0)=""
"RTN","IB20P297",67,0)
 ;
"RTN","IB20P297",68,0)
 ; send away
"RTN","IB20P297",69,0)
 S XMDUZ=$S(DUZ:DUZ,1:.5)
"RTN","IB20P297",70,0)
 S XMSUBJ="INSURANCE FILE CLEAN UP NEEDED"
"RTN","IB20P297",71,0)
 S XMBODY="^TMP(""IB297"",$J)"
"RTN","IB20P297",72,0)
 S (XMTO("G.IB NEW INSURANCE"),XMTO($S(DUZ:DUZ,1:.5)))=""
"RTN","IB20P297",73,0)
 S XMINSTR("FROM")="INTEGRATED BILLING PACKAGE"
"RTN","IB20P297",74,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,.XMINSTR,.XMZ)
"RTN","IB20P297",75,0)
 ;
"RTN","IB20P297",76,0)
 ;
"RTN","IB20P297",77,0)
 K ^TMP("IB297",$J)
"RTN","IB20P297",78,0)
 ;
"RTN","IB20P297",79,0)
 Q
"RTN","IB20P297",80,0)
 ;
"RTN","IB20P297",81,0)
SET(DFN,IBINS,IBINSM,IBERR) ;
"RTN","IB20P297",82,0)
 N IBDFN0,IBINS0
"RTN","IB20P297",83,0)
 ;
"RTN","IB20P297",84,0)
 ; new ins co?
"RTN","IB20P297",85,0)
 I IBSAVE'=IBINS S IBLINE=IBLINE+1,^TMP("IB297",$J,IBLINE,0)="",IBLINE=IBLINE+1,^TMP("IB297",$J,IBLINE,0)="     Insurance Co: "_$$EXTERNAL^DILFD(2.312,.01,"",IBINS),IBSAVE=IBINS
"RTN","IB20P297",86,0)
 ;
"RTN","IB20P297",87,0)
 ; get some data
"RTN","IB20P297",88,0)
 S IBDFN0=$G(^DPT(DFN,0)),IBINS0=$G(^DPT(DFN,.312,+IBINSM,0))
"RTN","IB20P297",89,0)
 ;
"RTN","IB20P297",90,0)
 ; set the line
"RTN","IB20P297",91,0)
 S IBLINE=IBLINE+1
"RTN","IB20P297",92,0)
 S ^TMP("IB297",$J,IBLINE,0)=$$LJ^XLFSTR($P(IBDFN0,"^"),"20T")_"  "_$$LJ^XLFSTR($P(IBDFN0,"^",9),"10T")_"  "_$$LJ^XLFSTR($$EXTERNAL^DILFD(2.312,.18,"",$P(IBINS0,"^",18)),"15T")_"  "_IBERR
"RTN","IB20P297",93,0)
 ;S ^TMP("IB297",$J,IBLINE,0)=$E($P(IBDFN0,"^"),1,20)_"  "_$P(IBDFN0,"^",9)_"  "_$E($$EXTERNAL^DILFD(2.312,.18,"",$P(IBINS0,"^",18)),1,15)_"  "_IBERR
"RTN","IB20P297",94,0)
 ;
"RTN","IB20P297",95,0)
 Q
"RTN","IBBFAPI")
0^1^B31724014
"RTN","IBBFAPI",1,0)
IBBFAPI ;OAK/ELZ - FOR OTHER PACKAGES TO QUERY INSURANCE INFO ;19-AUG-2004
"RTN","IBBFAPI",2,0)
 ;;2.0;INTEGRATED BILLING;**267,297**;21-MAR-94
"RTN","IBBFAPI",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBBFAPI",4,0)
 ;
"RTN","IBBFAPI",5,0)
 ; -- see IBBDOC for API documentation
"RTN","IBBFAPI",6,0)
 ;    no applications should call here directly
"RTN","IBBFAPI",7,0)
INSUR(DFN,IBDT,IBSTAT,IBR,IBFLDS) ; Return Patient Insurance Information
"RTN","IBBFAPI",8,0)
 ;
"RTN","IBBFAPI",9,0)
 N ERROR,ERRORT,FCNT,IBPLN,ICNT,INSP,N,N1,NOK,PASS,PASS1,X,%
"RTN","IBBFAPI",10,0)
 K ERRORT D ERRORLD
"RTN","IBBFAPI",11,0)
 S NOK=-1
"RTN","IBBFAPI",12,0)
 S DFN=$G(DFN)
"RTN","IBBFAPI",13,0)
 S IBSTAT=$G(IBSTAT)
"RTN","IBBFAPI",14,0)
 S IBDT=$P($G(IBDT),".")
"RTN","IBBFAPI",15,0)
 S IBFLDS=$G(IBFLDS)
"RTN","IBBFAPI",16,0)
 I IBDT,IBSTAT["A" S ERROR=107 D ERROR Q NOK
"RTN","IBBFAPI",17,0)
 S (ERROR,PASS)=0 K IBR
"RTN","IBBFAPI",18,0)
 I 'DFN S ERROR=102 D ERROR Q NOK
"RTN","IBBFAPI",19,0)
 I '$D(^DPT(DFN)) S ERROR=106 D ERROR Q NOK
"RTN","IBBFAPI",20,0)
 I IBDT]"",IBDT'?7N S ERROR=104 D ERROR Q NOK
"RTN","IBBFAPI",21,0)
 I +IBDT=0 D NOW^%DTC S IBDT=$P(%,".",1)
"RTN","IBBFAPI",22,0)
 I IBSTAT]"" N Y F X=1:1:$L(IBSTAT) S Y=$E(IBSTAT,X) I '$F("^A^R^P^O^I^B^",(U_Y_U)) S ERROR=105 D ERROR Q
"RTN","IBBFAPI",23,0)
 I ERROR=105 Q NOK
"RTN","IBBFAPI",24,0)
 I IBFLDS]"",IBFLDS'="*" N Y F X=1:1:$L(IBFLDS,",") D
"RTN","IBBFAPI",25,0)
 . S Y=$P(IBFLDS,",",X)
"RTN","IBBFAPI",26,0)
 . I Y'?1N.N S ERROR=103
"RTN","IBBFAPI",27,0)
 . I Y?1N.N,(Y<1)!(Y>20) S ERROR=103
"RTN","IBBFAPI",28,0)
 I ERROR=103 D ERROR Q NOK
"RTN","IBBFAPI",29,0)
 K IBR
"RTN","IBBFAPI",30,0)
 S (ICNT,N)=0 F  S N=$O(^DPT(DFN,.312,N)) Q:'N  I $D(^(N,0)) D
"RTN","IBBFAPI",31,0)
 . S X=^DPT(DFN,.312,N,0)
"RTN","IBBFAPI",32,0)
 . N X1
"RTN","IBBFAPI",33,0)
 . S X1=$G(^DIC(36,+X,0)) I X1="" Q  ; no insurance company entry
"RTN","IBBFAPI",34,0)
 . S INSP=$P(X,U,1),IBPLN=$P(X,U,18)
"RTN","IBBFAPI",35,0)
 . I IBSTAT'["R",$P(X1,U,2)="N" Q  ; does not reimburse
"RTN","IBBFAPI",36,0)
 . I IBSTAT'["B",$$INDEM^IBCNS1(X) Q  ; indemnity policy
"RTN","IBBFAPI",37,0)
 . S PASS1=0
"RTN","IBBFAPI",38,0)
 . I IBSTAT'["A" D
"RTN","IBBFAPI",39,0)
 . . I $P(X,U,8),IBDT<$P(X,U,8) S PASS1=1 Q  ;effective after care date
"RTN","IBBFAPI",40,0)
 . . I $P(X,U,4),IBDT>$P(X,U,4) S PASS1=1 Q  ;terminated before care date
"RTN","IBBFAPI",41,0)
 . . I $P($G(^IBA(355.3,+$P(X,U,18),0)),U,11) S PASS1=1 Q  ;inactive plan
"RTN","IBBFAPI",42,0)
 . Q:PASS1
"RTN","IBBFAPI",43,0)
 . S ICNT=ICNT+1
"RTN","IBBFAPI",44,0)
 . S FCNT=$S(IBFLDS="*":20,1:$L(IBFLDS,",")) ; number of fields to pull
"RTN","IBBFAPI",45,0)
 . I IBFLDS="" S IBR("IBBAPI","INSUR",ICNT)=""  Q  ;no field info to pass
"RTN","IBBFAPI",46,0)
 . F N1=1:1:FCNT D
"RTN","IBBFAPI",47,0)
 . . N RET,RETVAL
"RTN","IBBFAPI",48,0)
 . . S RET=$S(IBFLDS="*":N1,1:$P(IBFLDS,",",N1)),RETVAL="" I RET?1N.N,RET>0,RET<21 D @RET S IBR("IBBAPI","INSUR",ICNT,RET)=RETVAL
"RTN","IBBFAPI",49,0)
 . I IBSTAT["P"!(IBSTAT["O")!(IBSTAT["I") D  I PASS1=0 K IBR("IBBAPI","INSUR",ICNT) S ICNT=ICNT-1
"RTN","IBBFAPI",50,0)
 . . S PASS1=0 Q:IBPLN=""
"RTN","IBBFAPI",51,0)
 . . I IBSTAT["P",+$$PLCOV(IBPLN,IBDT,"PHARMACY")>0 S PASS1=1
"RTN","IBBFAPI",52,0)
 . . I IBSTAT["O",+$$PLCOV(IBPLN,IBDT,"OUTPATIENT")>0 S PASS1=1
"RTN","IBBFAPI",53,0)
 . . I IBSTAT["I",+$$PLCOV(IBPLN,IBDT,"INPATIENT")>0 S PASS1=1
"RTN","IBBFAPI",54,0)
 I $D(IBR("IBBAPI","INSUR")),$O(IBR("IBBAPI","INSUR",0))'="ERROR" S PASS=1 F X=1:1 Q:'$D(IBR("IBBAPI","INSUR",X))  K:'$O(IBR("IBBAPI","INSUR",X,"")) IBR("IBBAPI","INSUR",X)
"RTN","IBBFAPI",55,0)
 Q PASS
"RTN","IBBFAPI",56,0)
ERRORLD ;  load error array
"RTN","IBBFAPI",57,0)
 F X=1:1:9 S ERRORT(X+100)=$P($T(ERRORLD1+X),";;",2)
"RTN","IBBFAPI",58,0)
 Q
"RTN","IBBFAPI",59,0)
 ;
"RTN","IBBFAPI",60,0)
ERRORLD1 ; error messages
"RTN","IBBFAPI",61,0)
 ;;DATABASE IS UNAVAILABLE
"RTN","IBBFAPI",62,0)
 ;;PATIENT ID IS REQUIRED
"RTN","IBBFAPI",63,0)
 ;;INVALID FIELD LIST
"RTN","IBBFAPI",64,0)
 ;;INVALID EFFECTIVE DATE
"RTN","IBBFAPI",65,0)
 ;;INVALID INSURANCE STATUS FILTER
"RTN","IBBFAPI",66,0)
 ;;INVALID PATIENT ID
"RTN","IBBFAPI",67,0)
 ;;INVALID COMBINATION, YOU CANNOT USE ""A"" WITH A DATE
"RTN","IBBFAPI",68,0)
 ;;DATA SOURCE IS NOT DEFINED
"RTN","IBBFAPI",69,0)
 ;;NO DATA ELEMENTS TO STORE
"RTN","IBBFAPI",70,0)
 ;;
"RTN","IBBFAPI",71,0)
ERROR ;
"RTN","IBBFAPI",72,0)
 K IBR S IBR("IBBAPI","INSUR","ERROR",ERROR)=ERRORT(ERROR)
"RTN","IBBFAPI",73,0)
 Q
"RTN","IBBFAPI",74,0)
 ;
"RTN","IBBFAPI",75,0)
1 ; Ins. Comp. name
"RTN","IBBFAPI",76,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.01,"I")_U_$$GET1^DIQ(2.312,N_","_DFN_",",.01)
"RTN","IBBFAPI",77,0)
 Q
"RTN","IBBFAPI",78,0)
2 ; Ins. Comp. Street Address Line 1
"RTN","IBBFAPI",79,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.111)
"RTN","IBBFAPI",80,0)
 Q
"RTN","IBBFAPI",81,0)
3 ; Ins. Comp. City
"RTN","IBBFAPI",82,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.114)
"RTN","IBBFAPI",83,0)
 Q
"RTN","IBBFAPI",84,0)
4 ; Ins. Comp. State
"RTN","IBBFAPI",85,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.115,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(36,INSP_",",.115)
"RTN","IBBFAPI",86,0)
 Q
"RTN","IBBFAPI",87,0)
5 ; Ins. Comp. Zip
"RTN","IBBFAPI",88,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.116)
"RTN","IBBFAPI",89,0)
 Q
"RTN","IBBFAPI",90,0)
6 ; Ins. Comp. Phone
"RTN","IBBFAPI",91,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.131)
"RTN","IBBFAPI",92,0)
 Q
"RTN","IBBFAPI",93,0)
7 ; Coordination of Benefits
"RTN","IBBFAPI",94,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.2,"I")_U_$$GET1^DIQ(2.312,N_","_DFN_",",.2)
"RTN","IBBFAPI",95,0)
 I RETVAL="^" S RETVAL=""
"RTN","IBBFAPI",96,0)
 Q
"RTN","IBBFAPI",97,0)
8 ; Policy Name
"RTN","IBBFAPI",98,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(355.3,RETVAL,.03)
"RTN","IBBFAPI",99,0)
 Q
"RTN","IBBFAPI",100,0)
9 ; Policy Reimbursable?
"RTN","IBBFAPI",101,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",1,"I")
"RTN","IBBFAPI",102,0)
 S RETVAL=$S(RETVAL="Y":"1^YES",RETVAL="*":"1^YES",RETVAL="**":"1^YES",RETVAL="":"1^YES",1:"0^NO")
"RTN","IBBFAPI",103,0)
 Q
"RTN","IBBFAPI",104,0)
10 ; Policy Effective Date
"RTN","IBBFAPI",105,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",8,"I")
"RTN","IBBFAPI",106,0)
 Q
"RTN","IBBFAPI",107,0)
11 ; Policy Expiration Date
"RTN","IBBFAPI",108,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",3,"I")
"RTN","IBBFAPI",109,0)
 Q
"RTN","IBBFAPI",110,0)
12 ; Subscriber Relationship
"RTN","IBBFAPI",111,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",16,"I")
"RTN","IBBFAPI",112,0)
 S RETVAL=$S(RETVAL="01":"P^PATIENT",RETVAL="02":"S^SPOUSE",RETVAL:"O^OTHER",1:"")
"RTN","IBBFAPI",113,0)
 Q
"RTN","IBBFAPI",114,0)
13 ; Subscriber Name
"RTN","IBBFAPI",115,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",17)
"RTN","IBBFAPI",116,0)
 Q
"RTN","IBBFAPI",117,0)
14 ; Subscriber ID
"RTN","IBBFAPI",118,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",1)
"RTN","IBBFAPI",119,0)
 Q
"RTN","IBBFAPI",120,0)
15 ; Pharmacy Coverage?
"RTN","IBBFAPI",121,0)
 N IBCOV
"RTN","IBBFAPI",122,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"PHARMACY")
"RTN","IBBFAPI",123,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",124,0)
 Q
"RTN","IBBFAPI",125,0)
16 ; Outpatient Coverage?
"RTN","IBBFAPI",126,0)
 N IBCOV
"RTN","IBBFAPI",127,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"OUTPATIENT")
"RTN","IBBFAPI",128,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",129,0)
 Q
"RTN","IBBFAPI",130,0)
17 ; Inpatient Coverage?
"RTN","IBBFAPI",131,0)
 N IBCOV
"RTN","IBBFAPI",132,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"INPATIENT")
"RTN","IBBFAPI",133,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",134,0)
 Q
"RTN","IBBFAPI",135,0)
18 ; Group Number
"RTN","IBBFAPI",136,0)
 S RETVAL=$$GET1^DIQ(355.3,$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")_",",.04)
"RTN","IBBFAPI",137,0)
 Q
"RTN","IBBFAPI",138,0)
 ;
"RTN","IBBFAPI",139,0)
19 ; Patient Relationship to Subscriber
"RTN","IBBFAPI",140,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",16,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(2.312,N_","_DFN_",",16)
"RTN","IBBFAPI",141,0)
 Q
"RTN","IBBFAPI",142,0)
 ;
"RTN","IBBFAPI",143,0)
20 ; VA Advantage and Tricare plan
"RTN","IBBFAPI",144,0)
 S RETVAL=0  ; VA Advantage to be determined at a later date
"RTN","IBBFAPI",145,0)
 N PLN,TYP1,TYP2,RETVAL1
"RTN","IBBFAPI",146,0)
 S PLN=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")
"RTN","IBBFAPI",147,0)
 S TYP1=$$GET1^DIQ(355.3,PLN_",",.09,"I")
"RTN","IBBFAPI",148,0)
 S TYP2=$$GET1^DIQ(355.1,TYP1_",",.03,"I")
"RTN","IBBFAPI",149,0)
 S RETVAL1=$S(TYP2=7:1,1:0)  ; determine if Tricare plan
"RTN","IBBFAPI",150,0)
 S RETVAL=RETVAL_U_RETVAL1
"RTN","IBBFAPI",151,0)
 Q
"RTN","IBBFAPI",152,0)
 ;
"RTN","IBBFAPI",153,0)
PLCOV(IBPL,IBVDT,IBCAT) ; Determine if a specific plan covers a category of coverage as of a date
"RTN","IBBFAPI",154,0)
 ; IBPL - pointer to file 355.3 group insurance plan (req)
"RTN","IBBFAPI",155,0)
 ; IBVDT - fileman format visit date (req)
"RTN","IBBFAPI",156,0)
 ; IBCAT -  pointer to file 355.31 limitation of coverage category (req)
"RTN","IBBFAPI",157,0)
 N CATLIM,X,Y
"RTN","IBBFAPI",158,0)
 I '$G(IBPL)!('$G(IBVDT))!('$G(IBCAT)) Q 0
"RTN","IBBFAPI",159,0)
 S X=0
"RTN","IBBFAPI",160,0)
 S IBCAT=$O(^IBE(355.31,"B",IBCAT,"")) G:IBCAT="" PLCOVQ
"RTN","IBBFAPI",161,0)
 S CATLIM=$O(^IBA(355.32,"APCD",IBPL,IBCAT,+$O(^IBA(355.32,"APCD",IBPL,IBCAT,-(IBVDT+1))),""))
"RTN","IBBFAPI",162,0)
 S X=$S(CATLIM="":1,1:+$P($G(^IBA(355.32,CATLIM,0)),U,4))
"RTN","IBBFAPI",163,0)
PLCOVQ Q X
"RTN","IBBFAPI",164,0)
 ;
"VER")
8.0^22.0
**END**
**END**
