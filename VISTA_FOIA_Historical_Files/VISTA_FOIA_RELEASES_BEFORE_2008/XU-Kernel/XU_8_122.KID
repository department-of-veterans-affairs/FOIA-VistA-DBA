KIDS Distribution saved on Mar 06, 2000@13:47:04
Patches XU*8.0*122, KMPR*1.0*1
**KIDS**:XU*8.0*122^KMPR*1.0*1^

**INSTALL NAME**
XU*8.0*122
"BLD",2304,0)
XU*8.0*122^KERNEL^0^3000306^y
"BLD",2304,1,0)
^^1^1^3000306^
"BLD",2304,1,1,0)
RUM updates.
"BLD",2304,4,0)
^9.64PA^^
"BLD",2304,"ABPKG")
n
"BLD",2304,"KRN",0)
^9.67PA^19^18
"BLD",2304,"KRN",.4,0)
.4
"BLD",2304,"KRN",.401,0)
.401
"BLD",2304,"KRN",.402,0)
.402
"BLD",2304,"KRN",.403,0)
.403
"BLD",2304,"KRN",.5,0)
.5
"BLD",2304,"KRN",.84,0)
.84
"BLD",2304,"KRN",3.6,0)
3.6
"BLD",2304,"KRN",3.8,0)
3.8
"BLD",2304,"KRN",9.2,0)
9.2
"BLD",2304,"KRN",9.8,0)
9.8
"BLD",2304,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",2304,"KRN",9.8,"NM",1,0)
ZOSVKRM^^0^B356890
"BLD",2304,"KRN",9.8,"NM",2,0)
ZOSVKRO^^0^B357263
"BLD",2304,"KRN",9.8,"NM",3,0)
ZOSVKRV^^0^B23577094
"BLD",2304,"KRN",9.8,"NM","B","ZOSVKRM",1)

"BLD",2304,"KRN",9.8,"NM","B","ZOSVKRO",2)

"BLD",2304,"KRN",9.8,"NM","B","ZOSVKRV",3)

"BLD",2304,"KRN",19,0)
19
"BLD",2304,"KRN",19.1,0)
19.1
"BLD",2304,"KRN",101,0)
101
"BLD",2304,"KRN",409.61,0)
409.61
"BLD",2304,"KRN",771,0)
771
"BLD",2304,"KRN",869.2,0)
869.2
"BLD",2304,"KRN",870,0)
870
"BLD",2304,"KRN",8994,0)
8994
"BLD",2304,"KRN","B",.4,.4)

"BLD",2304,"KRN","B",.401,.401)

"BLD",2304,"KRN","B",.402,.402)

"BLD",2304,"KRN","B",.403,.403)

"BLD",2304,"KRN","B",.5,.5)

"BLD",2304,"KRN","B",.84,.84)

"BLD",2304,"KRN","B",3.6,3.6)

"BLD",2304,"KRN","B",3.8,3.8)

"BLD",2304,"KRN","B",9.2,9.2)

"BLD",2304,"KRN","B",9.8,9.8)

"BLD",2304,"KRN","B",19,19)

"BLD",2304,"KRN","B",19.1,19.1)

"BLD",2304,"KRN","B",101,101)

"BLD",2304,"KRN","B",409.61,409.61)

"BLD",2304,"KRN","B",771,771)

"BLD",2304,"KRN","B",869.2,869.2)

"BLD",2304,"KRN","B",870,870)

"BLD",2304,"KRN","B",8994,8994)

"BLD",2304,"QUES",0)
^9.62^^
"BLD",2304,"REQB",0)
^9.611^1^1
"BLD",2304,"REQB",1,0)
KMPR 1.0^1
"BLD",2304,"REQB","B","KMPR 1.0",1)

"MBREQ")
0
"PKG",133,-1)
1^1
"PKG",133,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",133,20,0)
^9.402P^^
"PKG",133,22,0)
^9.49I^1^1
"PKG",133,22,1,0)
8.0^2950703^2951029^7606
"PKG",133,22,1,"PAH",1,0)
122^3000306^10292
"PKG",133,22,1,"PAH",1,1,0)
^^1^1^3000306
"PKG",133,22,1,"PAH",1,1,1,0)
RUM updates.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ZOSVKRM")
0^1^B356890
"RTN","ZOSVKRM",1,0)
%ZOSVKR ;SF/KAK - Collect RUM Statistics for MSM ;1/20/00  07:38
"RTN","ZOSVKRM",2,0)
 ;;8.0;KERNEL;**90,94,107,122**;Jul 21, 1998
"RTN","ZOSVKRM",3,0)
 ;
"RTN","ZOSVKRM",4,0)
RO(OPT) ; Record option resource usage in ^XTMP("KMPR","JOB"
"RTN","ZOSVKRM",5,0)
 ;
"RTN","ZOSVKRM",6,0)
 N KMPRTYP S KMPRTYP=0  ; option
"RTN","ZOSVKRM",7,0)
 G EN
"RTN","ZOSVKRM",8,0)
 ;
"RTN","ZOSVKRM",9,0)
RP(PRTCL) ; Record protocol resource usage in ^XTMP("KMPR","JOB"
"RTN","ZOSVKRM",10,0)
 ;
"RTN","ZOSVKRM",11,0)
 ; Variable PRTCL = option_name^protocol_name
"RTN","ZOSVKRM",12,0)
 S OPT=$P(PRTCL,"^"),PRTCL=$P(PRTCL,"^",2) Q:PRTCL=""
"RTN","ZOSVKRM",13,0)
 N KMPRTYP S KMPRTYP=1  ; protocol
"RTN","ZOSVKRM",14,0)
 Q
"RTN","ZOSVKRM",15,0)
 ;
"RTN","ZOSVKRM",16,0)
RU(KMPROPT,KMPRTYP,KMPRSTAT) ;-- record resource usage in ^XTMP("KMPR","JOB"
"RTN","ZOSVKRM",17,0)
 Q
"RTN","ZOSVKRM",18,0)
 ;
"RTN","ZOSVKRM",19,0)
EN ;
"RTN","ZOSVKRM",20,0)
 Q
"RTN","ZOSVKRO")
0^2^B357263
"RTN","ZOSVKRO",1,0)
%ZOSVKR ;SF/KAK - Collect RUM Statistics for OpenM-NT;9/21/99  09:33 ;1/20/00  07:38
"RTN","ZOSVKRO",2,0)
 ;;8.0;KERNEL;**90,94,107,122**;Jul 21, 1998
"RTN","ZOSVKRO",3,0)
 ;
"RTN","ZOSVKRO",4,0)
RO(OPT) ; Record option resource usage in ^XTMP("KMPR","JOB"
"RTN","ZOSVKRO",5,0)
 ;
"RTN","ZOSVKRO",6,0)
 N KMPRTYP S KMPRTYP=0  ; option
"RTN","ZOSVKRO",7,0)
 G EN
"RTN","ZOSVKRO",8,0)
 ;
"RTN","ZOSVKRO",9,0)
RP(PRTCL) ; Record protocol resource usage in ^XTMP("KMPR","JOB"
"RTN","ZOSVKRO",10,0)
 ;
"RTN","ZOSVKRO",11,0)
 ; Variable PRTCL = option_name^protocol_name
"RTN","ZOSVKRO",12,0)
 S OPT=$P(PRTCL,"^"),PRTCL=$P(PRTCL,"^",2) Q:PRTCL=""
"RTN","ZOSVKRO",13,0)
 N KMPRTYP S KMPRTYP=1  ; protocol
"RTN","ZOSVKRO",14,0)
 Q
"RTN","ZOSVKRO",15,0)
 ;
"RTN","ZOSVKRO",16,0)
RU(KMPROPT,KMPRTYP,KMPRSTAT) ;-- record resource usage in ^XTMP("KMPR","JOB"
"RTN","ZOSVKRO",17,0)
 ;
"RTN","ZOSVKRO",18,0)
 Q
"RTN","ZOSVKRO",19,0)
 ;
"RTN","ZOSVKRO",20,0)
EN ;
"RTN","ZOSVKRO",21,0)
 Q
"RTN","ZOSVKRV")
0^3^B23577094
"RTN","ZOSVKRV",1,0)
%ZOSVKR ;SF/KAK/RAK - Collect RUM Statistics for VAX-DSM;8/20/99  08:44 ;1/20/00  07:39
"RTN","ZOSVKRV",2,0)
 ;;8.0;KERNEL;**90,94,107,122**;Jul 21, 1998
"RTN","ZOSVKRV",3,0)
 ;
"RTN","ZOSVKRV",4,0)
RO(OPT) ; Record option resource usage in ^XTMP("KMPR","JOB"
"RTN","ZOSVKRV",5,0)
 ;
"RTN","ZOSVKRV",6,0)
 N KMPRTYP S KMPRTYP=0  ; option
"RTN","ZOSVKRV",7,0)
 G EN
"RTN","ZOSVKRV",8,0)
 ;
"RTN","ZOSVKRV",9,0)
RP(PRTCL) ; Record protocol resource usage in ^XTMP("KMPR","JOB"
"RTN","ZOSVKRV",10,0)
 ;
"RTN","ZOSVKRV",11,0)
 ; Variable PRTCL = option_name^protocol_name
"RTN","ZOSVKRV",12,0)
 N OPT
"RTN","ZOSVKRV",13,0)
 S OPT=$P(PRTCL,"^"),PRTCL=$P(PRTCL,"^",2) Q:PRTCL=""
"RTN","ZOSVKRV",14,0)
 N KMPRTYP S KMPRTYP=1  ; protocol
"RTN","ZOSVKRV",15,0)
 G EN
"RTN","ZOSVKRV",16,0)
 ;
"RTN","ZOSVKRV",17,0)
RU(KMPROPT,KMPRTYP,KMPRSTAT) ;-- set resource usage into ^XTMP("KMPR","JOB"
"RTN","ZOSVKRV",18,0)
 ;-----------------------------------------------------------------------
"RTN","ZOSVKRV",19,0)
 ; KMPROPT... Option name (may be option, protocol, rpc, etc.).
"RTN","ZOSVKRV",20,0)
 ; KMPRTYP... Type of option:
"RTN","ZOSVKRV",21,0)
 ;              0 - Option.
"RTN","ZOSVKRV",22,0)
 ;              1 - Protocol.
"RTN","ZOSVKRV",23,0)
 ;              2 - RPC (Remote Procedure Call).
"RTN","ZOSVKRV",24,0)
 ;              3 - HL7.
"RTN","ZOSVKRV",25,0)
 ; KMPRSTAT.. Status (for future use). 1 - start
"RTN","ZOSVKRV",26,0)
 ;                                     2 - stop
"RTN","ZOSVKRV",27,0)
 ;-----------------------------------------------------------------------
"RTN","ZOSVKRV",28,0)
 ;
"RTN","ZOSVKRV",29,0)
 Q:$G(KMPROPT)=""
"RTN","ZOSVKRV",30,0)
 S KMPRTYP=+$G(KMPRTYP)
"RTN","ZOSVKRV",31,0)
 S KMPRSTAT=$G(KMPRSTAT)
"RTN","ZOSVKRV",32,0)
 ;
"RTN","ZOSVKRV",33,0)
 N OPT,PRTCL
"RTN","ZOSVKRV",34,0)
 ; 
"RTN","ZOSVKRV",35,0)
 ; OPT = option name.
"RTN","ZOSVKRV",36,0)
 ; PRTCL = protocol name (optional).
"RTN","ZOSVKRV",37,0)
 S OPT=$P(KMPROPT,"^"),PRTCL=$P(KMPROPT,"^",2)
"RTN","ZOSVKRV",38,0)
 ;
"RTN","ZOSVKRV",39,0)
EN ;
"RTN","ZOSVKRV",40,0)
 ; C........ comma (,)
"RTN","ZOSVKRV",41,0)
 ; CURRENT.. current stats
"RTN","ZOSVKRV",42,0)
 ; DATE..... date in fileman format
"RTN","ZOSVKRV",43,0)
 ; DIFF..... difference (CURRENT minus PREV)
"RTN","ZOSVKRV",44,0)
 ; DOW...... day of week
"RTN","ZOSVKRV",45,0)
 ; HDATE.... date/time in $h format
"RTN","ZOSVKRV",46,0)
 ; NODE..... current node
"RTN","ZOSVKRV",47,0)
 ; PRIMETM.. prime time or non-prime time
"RTN","ZOSVKRV",48,0)
 ; PREV..... previous stats
"RTN","ZOSVKRV",49,0)
 ;
"RTN","ZOSVKRV",50,0)
 N ARRAY,C,CURRENT,CURRHR,DATE,DIFF,DOW,HDATE,I,NODE,PREV,PREVHR
"RTN","ZOSVKRV",51,0)
 N PRIMETM,TIME,Y
"RTN","ZOSVKRV",52,0)
 ; quit if not in "PROD" uci.
"RTN","ZOSVKRV",53,0)
 S Y="" X $G(^%ZOSF("UCI")) Q:Y'[$G(^%ZOSF("PROD"))
"RTN","ZOSVKRV",54,0)
 S C=",",NODE=$P($ZC(%GETSYI),C,4),U="^"
"RTN","ZOSVKRV",55,0)
 I KMPRTYP I OPT="" S:$P($G(^XTMP("KMPR","JOB",NODE,$J)),U,10)["$LOGIN$" OPT="$LOGIN$"
"RTN","ZOSVKRV",56,0)
 I OPT="" Q:'+$G(^XUTL("XQ",$J,"T"))  S OPT=$P($G(^XUTL("XQ",$J,^XUTL("XQ",$J,"T"))),U,2) Q:OPT=""
"RTN","ZOSVKRV",57,0)
 ;
"RTN","ZOSVKRV",58,0)
 ; CURRENT = current stats for this $job.
"RTN","ZOSVKRV",59,0)
 ; cpu^dio^bio^pg_fault^cmd^glo^$H_date^$H_sec^ascii_time
"RTN","ZOSVKRV",60,0)
 S CURRENT=$$STATS Q:CURRENT=""
"RTN","ZOSVKRV",61,0)
 ; concatenate ^OPTion^option_type
"RTN","ZOSVKRV",62,0)
 S CURRENT=CURRENT_U_$S(KMPRTYP=2:"`"_OPT,KMPRTYP=3:"&"_OPT,1:OPT)_"***"_$G(PRTCL)_U_$G(XQT)
"RTN","ZOSVKRV",63,0)
 ; if option and login or taskman.
"RTN","ZOSVKRV",64,0)
 I 'KMPRTYP I OPT="$LOGIN$"!(OPT="$STRT ZTMS$") S ^XTMP("KMPR","JOB",NODE,$J)=CURRENT Q
"RTN","ZOSVKRV",65,0)
 ;
"RTN","ZOSVKRV",66,0)
 ; PREV = previous stats for this $job.
"RTN","ZOSVKRV",67,0)
 S PREV=$G(^XTMP("KMPR","JOB",NODE,$J)) S ^($J)=CURRENT
"RTN","ZOSVKRV",68,0)
 I OPT="$LOGOUT$"!(OPT="$STOP ZTMS$")!(OPT="XUPROGMODE") K ^XTMP("KMPR","JOB",NODE,$J)
"RTN","ZOSVKRV",69,0)
 Q:PREV=""
"RTN","ZOSVKRV",70,0)
 ; check for negative numbers for m commands and glo references
"RTN","ZOSVKRV",71,0)
 F I=5,6 D 
"RTN","ZOSVKRV",72,0)
 .S:$P(CURRENT,U,I)<0 $P(CURRENT,U,I)=$P(CURRENT,U,I)+(2**32)
"RTN","ZOSVKRV",73,0)
 .S:$P(PREV,U,I)<0 $P(PREV,U,I)=$P(PREV,U,I)+(2**32)
"RTN","ZOSVKRV",74,0)
 ;
"RTN","ZOSVKRV",75,0)
 S $P(CURRENT,U,7)=$P(CURRENT,U,7)-$P(PREV,U,7)*86400+$P(CURRENT,U,8)
"RTN","ZOSVKRV",76,0)
 S HDATE=$P(PREV,U,7),$P(PREV,U,7)=$P(PREV,U,8)
"RTN","ZOSVKRV",77,0)
 ; quit if not $h
"RTN","ZOSVKRV",78,0)
 Q:'HDATE
"RTN","ZOSVKRV",79,0)
 ;
"RTN","ZOSVKRV",80,0)
 ; DIFF = CURRENT - PREV (current stats minus previous stats)
"RTN","ZOSVKRV",81,0)
 ; cpu^dio^bio^pg_fault^cmd^glo^elapsed_sec^option_type
"RTN","ZOSVKRV",82,0)
 F I=1:1:7 S $P(DIFF,U,I)=$P(CURRENT,U,I)-$P(PREV,U,I)
"RTN","ZOSVKRV",83,0)
 ; option name        time
"RTN","ZOSVKRV",84,0)
 S OPT=$P(PREV,U,10),TIME=$P($P(PREV,U,8),".")
"RTN","ZOSVKRV",85,0)
 ; date in fm format.
"RTN","ZOSVKRV",86,0)
 S DATE=$$HTFM^XLFDT(HDATE),DATE=$P(DATE,".")
"RTN","ZOSVKRV",87,0)
 ; day of week.
"RTN","ZOSVKRV",88,0)
 S DOW=$$DOW^XLFDT(DATE,1)
"RTN","ZOSVKRV",89,0)
 ; PRIMETM =  0: non-prime time
"RTN","ZOSVKRV",90,0)
 ;            1: prime time
"RTN","ZOSVKRV",91,0)
 S PRIMETM=0
"RTN","ZOSVKRV",92,0)
 ; prime time if not saturday or sunday or holiday
"RTN","ZOSVKRV",93,0)
 ;            if after 8am and before 5pm.
"RTN","ZOSVKRV",94,0)
 I DOW>0&(DOW<6)&('$G(^HOLIDAY(DATE,0))) I TIME>28799&(TIME<61201) S PRIMETM=1
"RTN","ZOSVKRV",95,0)
 ; global location for data storage.
"RTN","ZOSVKRV",96,0)
 S ARRAY=$NA(^XTMP("KMPR","DLY",NODE,HDATE,OPT,$J,PRIMETM))
"RTN","ZOSVKRV",97,0)
 ; daily stats by $j.
"RTN","ZOSVKRV",98,0)
 F I=1:1:7 S $P(@ARRAY,U,I)=$P($G(@ARRAY),U,I)+$P(DIFF,U,I)
"RTN","ZOSVKRV",99,0)
 ; 8th piece is count.
"RTN","ZOSVKRV",100,0)
 S $P(@ARRAY,U,8)=$P(@ARRAY,U,8)+1
"RTN","ZOSVKRV",101,0)
 ; keep track of hours with activity - this will be used to determine
"RTN","ZOSVKRV",102,0)
 ; actual hours of activity when moving data to file 8971.1
"RTN","ZOSVKRV",103,0)
 S DATE=$$HTFM^XLFDT(HDATE_","_TIME)
"RTN","ZOSVKRV",104,0)
 ;S TIME=+$E($P(DATE,".",2),1,2),DATE=$P(DATE,".")
"RTN","ZOSVKRV",105,0)
 ; hour for 'previous' dat.
"RTN","ZOSVKRV",106,0)
 S PREVHR=+$E($P(DATE,".",2),1,2),DATE=$P(DATE,".")
"RTN","ZOSVKRV",107,0)
 ; current hour.
"RTN","ZOSVKRV",108,0)
 S CURRHR=+$E($P($$HTFM^XLFDT($H),".",2),1,2)
"RTN","ZOSVKRV",109,0)
 ; record all hours this option ran.
"RTN","ZOSVKRV",110,0)
 F TIME=PREVHR:1:CURRHR D 
"RTN","ZOSVKRV",111,0)
 .; because of zero hour add 1 to time.  this will offset each hour by 1.
"RTN","ZOSVKRV",112,0)
 .S:DATE $P(^XTMP("KMPR","HOURS",DATE,NODE),U,(TIME+1))=1
"RTN","ZOSVKRV",113,0)
 ;
"RTN","ZOSVKRV",114,0)
 Q
"RTN","ZOSVKRV",115,0)
 ;
"RTN","ZOSVKRV",116,0)
STATS() ;-- extrinsic - return current stats for this $job
"RTN","ZOSVKRV",117,0)
 N C,H,KMPRCMD,KMPRGLO,ZH
"RTN","ZOSVKRV",118,0)
 S C="," ;,ZH=$ZH,H=$P(ZH,C,3)
"RTN","ZOSVKRV",119,0)
 D JT
"RTN","ZOSVKRV",120,0)
 Q:KMPRCMD="" ""
"RTN","ZOSVKRV",121,0)
 S ZH=$ZH,H=$P(ZH,C,3),H=$E(H,13,23),H=$P($H,C)_C_($P(H,":")*3600+($P(H,":",2)*60)+$P(H,":",3))
"RTN","ZOSVKRV",122,0)
 ;
"RTN","ZOSVKRV",123,0)
 ; current stats for this $job.
"RTN","ZOSVKRV",124,0)
 ; cpu^dio^bio^pg_fault^cmd^glo^$H_date^$H_sec^ascii_time
"RTN","ZOSVKRV",125,0)
 Q $P(ZH,C)_U_$P(ZH,C,7)_U_$P(ZH,C,8)_U_$P(ZH,C,4)_U_KMPRCMD_U_KMPRGLO_U_$P(H,C)_U_$P(H,C,2)_U_$P(ZH,C,3)
"RTN","ZOSVKRV",126,0)
 ;
"RTN","ZOSVKRV",127,0)
JT ; Calculate the Job Table (%KMPRJT) for this job
"RTN","ZOSVKRV",128,0)
 ; %KMPRJT should be made a system wide variable
"RTN","ZOSVKRV",129,0)
 ;
"RTN","ZOSVKRV",130,0)
 N %GLSBASE,%JOB,%JOBSIZ,%JOBTAB,%MAXPROC,%PID,%SMSTART,%TYPE,KMPROUT,X
"RTN","ZOSVKRV",131,0)
 ;
"RTN","ZOSVKRV",132,0)
 ; Return the current number of commands and global references
"RTN","ZOSVKRV",133,0)
 ; KMPRCMD and KMPRGLO equal to null if NOT successful
"RTN","ZOSVKRV",134,0)
 S (KMPRCMD,KMPRGLO)="",KMPROUT=0,U="^"
"RTN","ZOSVKRV",135,0)
 ;
"RTN","ZOSVKRV",136,0)
 ; Check for correct Job Table (%KMPRJT) for this job
"RTN","ZOSVKRV",137,0)
 I $D(%KMPRJT) I $V(%KMPRJT+20)=$J S %TYPE="DSM" D USER G EXIT
"RTN","ZOSVKRV",138,0)
 S %SMSTART=$V($ZK(GLS$SMSTART)) G:'%SMSTART EXIT
"RTN","ZOSVKRV",139,0)
 S %GLSBASE=$V($V(0)+44)
"RTN","ZOSVKRV",140,0)
 S %JOBTAB=%SMSTART+$V(%SMSTART+$V(%GLSBASE+124)),%JOBSIZ=$V(%GLSBASE+128)
"RTN","ZOSVKRV",141,0)
 S %MAXPROC=$V($V(%GLSBASE+84)+%SMSTART)
"RTN","ZOSVKRV",142,0)
 ;
"RTN","ZOSVKRV",143,0)
 ; Go through Job Table looking for this process
"RTN","ZOSVKRV",144,0)
 F %JOB=1:1:%MAXPROC Q:KMPROUT  S %KMPRJT=%JOB*%JOBSIZ+%JOBTAB D
"RTN","ZOSVKRV",145,0)
 .I $V(%KMPRJT+20) S %PID=$V(%KMPRJT+20),%TYPE="DSM" I %PID=$J D USER S KMPROUT=1
"RTN","ZOSVKRV",146,0)
 ;
"RTN","ZOSVKRV",147,0)
EXIT ;
"RTN","ZOSVKRV",148,0)
 S X=^%ZOSF("ERRTN"),@^%ZOSF("TRAP")
"RTN","ZOSVKRV",149,0)
 Q
"RTN","ZOSVKRV",150,0)
 ;
"RTN","ZOSVKRV",151,0)
USER ;
"RTN","ZOSVKRV",152,0)
 ; Watch for NONEXPR process
"RTN","ZOSVKRV",153,0)
 S X="UERR^%ZOSVKR",@^%ZOSF("TRAP")
"RTN","ZOSVKRV",154,0)
 ;
"RTN","ZOSVKRV",155,0)
 ; Process improperly exited DSM
"RTN","ZOSVKRV",156,0)
 I %TYPE="DSM",$V(%KMPRJT+$ZK(JOB_B_FLAGS),-1,1)\$ZK(JOB_M_EXITED)#2 G IMPROP
"RTN","ZOSVKRV",157,0)
 ;
"RTN","ZOSVKRV",158,0)
 ; Get commands and global references from job table
"RTN","ZOSVKRV",159,0)
 S KMPRCMD=$V(%KMPRJT),KMPRGLO=$V(%KMPRJT+12)
"RTN","ZOSVKRV",160,0)
 Q
"RTN","ZOSVKRV",161,0)
UERR ;
"RTN","ZOSVKRV",162,0)
 ; Ignore NONEXPR (improperly exited DSM process) and SUSPENDED process
"RTN","ZOSVKRV",163,0)
 I $ZE["NONEXPR"!($ZE["SUSPENDED") Q
"RTN","ZOSVKRV",164,0)
 ZQ
"RTN","ZOSVKRV",165,0)
IMPROP ;
"RTN","ZOSVKRV",166,0)
 ; Ignore improperly exited DSM process
"RTN","ZOSVKRV",167,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
KMPR*1.0*1
"BLD",1996,0)
KMPR*1.0*1^CAPACITY MANAGEMENT - RUM^0^3000306^y
"BLD",1996,1,0)
^^2^2^3000306^
"BLD",1996,1,1,0)
See Patch XU*8*122 in the National Patch Module for a description of this
"BLD",1996,1,2,0)
Build.
"BLD",1996,4,0)
^9.64PA^^
"BLD",1996,"ABPKG")
n
"BLD",1996,"INIT")
EN^KMPRPOST
"BLD",1996,"KRN",0)
^9.67PA^19^18
"BLD",1996,"KRN",.4,0)
.4
"BLD",1996,"KRN",.401,0)
.401
"BLD",1996,"KRN",.402,0)
.402
"BLD",1996,"KRN",.403,0)
.403
"BLD",1996,"KRN",.5,0)
.5
"BLD",1996,"KRN",.84,0)
.84
"BLD",1996,"KRN",3.6,0)
3.6
"BLD",1996,"KRN",3.8,0)
3.8
"BLD",1996,"KRN",9.2,0)
9.2
"BLD",1996,"KRN",9.8,0)
9.8
"BLD",1996,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",1996,"KRN",9.8,"NM",1,0)
KMPRBD01^^0^B8444730
"BLD",1996,"KRN",9.8,"NM",2,0)
KMPRBD02^^0^B41227766
"BLD",1996,"KRN",9.8,"NM",3,0)
KMPRPOST^^0^B608380
"BLD",1996,"KRN",9.8,"NM",4,0)
KMPRSS^^0^B12833202
"BLD",1996,"KRN",9.8,"NM",5,0)
KMPRUTL^^0^B18257077
"BLD",1996,"KRN",9.8,"NM",6,0)
KMPRUTL3^^0^B17200127
"BLD",1996,"KRN",9.8,"NM",7,0)
KMPRUTL1^^0^B12506067
"BLD",1996,"KRN",9.8,"NM","B","KMPRBD01",1)

"BLD",1996,"KRN",9.8,"NM","B","KMPRBD02",2)

"BLD",1996,"KRN",9.8,"NM","B","KMPRPOST",3)

"BLD",1996,"KRN",9.8,"NM","B","KMPRSS",4)

"BLD",1996,"KRN",9.8,"NM","B","KMPRUTL",5)

"BLD",1996,"KRN",9.8,"NM","B","KMPRUTL1",7)

"BLD",1996,"KRN",9.8,"NM","B","KMPRUTL3",6)

"BLD",1996,"KRN",19,0)
19
"BLD",1996,"KRN",19.1,0)
19.1
"BLD",1996,"KRN",101,0)
101
"BLD",1996,"KRN",409.61,0)
409.61
"BLD",1996,"KRN",771,0)
771
"BLD",1996,"KRN",869.2,0)
869.2
"BLD",1996,"KRN",870,0)
870
"BLD",1996,"KRN",8994,0)
8994
"BLD",1996,"KRN","B",.4,.4)

"BLD",1996,"KRN","B",.401,.401)

"BLD",1996,"KRN","B",.402,.402)

"BLD",1996,"KRN","B",.403,.403)

"BLD",1996,"KRN","B",.5,.5)

"BLD",1996,"KRN","B",.84,.84)

"BLD",1996,"KRN","B",3.6,3.6)

"BLD",1996,"KRN","B",3.8,3.8)

"BLD",1996,"KRN","B",9.2,9.2)

"BLD",1996,"KRN","B",9.8,9.8)

"BLD",1996,"KRN","B",19,19)

"BLD",1996,"KRN","B",19.1,19.1)

"BLD",1996,"KRN","B",101,101)

"BLD",1996,"KRN","B",409.61,409.61)

"BLD",1996,"KRN","B",771,771)

"BLD",1996,"KRN","B",869.2,869.2)

"BLD",1996,"KRN","B",870,870)

"BLD",1996,"KRN","B",8994,8994)

"BLD",1996,"PRET")

"BLD",1996,"QUES",0)
^9.62^^
"BLD",1996,"REQB",0)
^9.611^1^1
"BLD",1996,"REQB",1,0)
KMPR 1.0^2
"BLD",1996,"REQB","B","KMPR 1.0",1)

"INIT")
EN^KMPRPOST
"MBREQ")
0
"PKG",513,-1)
1^1
"PKG",513,0)
CAPACITY MANAGEMENT - RUM^KMPR^Capacity Management - Resource Usage Monitor
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
1.0^2981209^2981215^10292
"PKG",513,22,1,"PAH",1,0)
1^3000306^10292
"PKG",513,22,1,"PAH",1,1,0)
^^2^2^3000306
"PKG",513,22,1,"PAH",1,1,1,0)
See Patch XU*8*122 in the National Patch Module for a description of this
"PKG",513,22,1,"PAH",1,1,2,0)
Build.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","KMPRBD01")
0^1^B8444730
"RTN","KMPRBD01",1,0)
KMPRBD01 ;SFISC/RAK - RUM Daily/Weekly Compression ;1/20/00  07:35
"RTN","KMPRBD01",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;**1**;Dec 09, 1998
"RTN","KMPRBD01",3,0)
 ;
"RTN","KMPRBD01",4,0)
EN ;-- entry point for Background Driver.
"RTN","KMPRBD01",5,0)
 ;
"RTN","KMPRBD01",6,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRBD01",7,0)
 ; Protect ^XTMP("KMPR") from the XQ82 background cleanup job
"RTN","KMPRBD01",8,0)
 S ^XTMP("KMPR",0)=DT+10000
"RTN","KMPRBD01",9,0)
 ;
"RTN","KMPRBD01",10,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRBD01",11,0)
 ;
"RTN","KMPRBD01",12,0)
 ; store daily stats in file #8971.1 (RESOURCE USAGE MONITOR).
"RTN","KMPRBD01",13,0)
 S ^XTMP("KMPR","BACKGROUND","START")=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","KMPRBD01",14,0)
 S ^XTMP("KMPR","BACKGROUND","STOP")=""
"RTN","KMPRBD01",15,0)
 D DAILY^KMPRBD02(+$H)
"RTN","KMPRBD01",16,0)
 S ^XTMP("KMPR","BACKGROUND","STOP")=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","KMPRBD01",17,0)
 ;
"RTN","KMPRBD01",18,0)
 ; clean up old "job" nodes.
"RTN","KMPRBD01",19,0)
 D CLEAN
"RTN","KMPRBD01",20,0)
 ;
"RTN","KMPRBD01",21,0)
 ; if sunday do weekly compression
"RTN","KMPRBD01",22,0)
 I '$$DOW^XLFDT(DT,1) D 
"RTN","KMPRBD01",23,0)
 .; store weekly start/stop stats.
"RTN","KMPRBD01",24,0)
 .S ^XTMP("KMPR","BACKGROUND","WEEKLY","START")=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","KMPRBD01",25,0)
 .S ^XTMP("KMPR","BACKGROUND","WEEKLY","STOP")=""
"RTN","KMPRBD01",26,0)
 .D WEEKLY^KMPRBD02(DT)
"RTN","KMPRBD01",27,0)
 .S ^XTMP("KMPR","BACKGROUND","WEEKLY","STOP")=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","KMPRBD01",28,0)
 ;
"RTN","KMPRBD01",29,0)
 ; check for errors.
"RTN","KMPRBD01",30,0)
 D ERRORS
"RTN","KMPRBD01",31,0)
 ;
"RTN","KMPRBD01",32,0)
 Q
"RTN","KMPRBD01",33,0)
 ;
"RTN","KMPRBD01",34,0)
CLEAN ;-- clean up old "JOB" nodes
"RTN","KMPRBD01",35,0)
 ;
"RTN","KMPRBD01",36,0)
 N JOB,NODE S NODE=""
"RTN","KMPRBD01",37,0)
 F  S NODE=$O(^XTMP("KMPR","JOB",NODE)) Q:NODE=""  D
"RTN","KMPRBD01",38,0)
 .S JOB=0 F  S JOB=$O(^XTMP("KMPR","JOB",NODE,JOB)) Q:'+JOB  D
"RTN","KMPRBD01",39,0)
 ..I '$D(^XUTL("XQ",JOB)) K ^XTMP("KMPR","JOB",NODE,JOB)
"RTN","KMPRBD01",40,0)
 ;
"RTN","KMPRBD01",41,0)
 ; Store the number of active user jobs into ^XTMP("KMPR","ACTIVE")
"RTN","KMPRBD01",42,0)
 ; D CLUSTER^%ZKMPRC1
"RTN","KMPRBD01",43,0)
 ;
"RTN","KMPRBD01",44,0)
 Q
"RTN","KMPRBD01",45,0)
 ;
"RTN","KMPRBD01",46,0)
ERRORS ; check and process errors.
"RTN","KMPRBD01",47,0)
 ;
"RTN","KMPRBD01",48,0)
 Q:'$D(^XTMP("KMPR","ERR"))
"RTN","KMPRBD01",49,0)
 ;
"RTN","KMPRBD01",50,0)
 N H,I,LN,N,O,SITE,TEXT,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPRBD01",51,0)
 ;
"RTN","KMPRBD01",52,0)
 S SITE=$$SITE^VASITE
"RTN","KMPRBD01",53,0)
 S XMSUB="RUM Error at site "_$P(SITE,U,3)_" on "_$$FMTE^XLFDT($$DT^XLFDT)
"RTN","KMPRBD01",54,0)
 S TEXT(1)="  The following error(s) have been logged at "_$P(SITE,U,2)_" ("_$P(SITE,U,3)_") "
"RTN","KMPRBD01",55,0)
 S TEXT(2)="  while moving data from ^XTMP(""KMPR"",""DLY"") to file 8971.1."
"RTN","KMPRBD01",56,0)
 S H="",LN=3
"RTN","KMPRBD01",57,0)
 ; H = date in $H format (+$H).
"RTN","KMPRBD01",58,0)
 ; N = node name.
"RTN","KMPRBD01",59,0)
 ; O = option.
"RTN","KMPRBD01",60,0)
 F  S H=$O(^XTMP("KMPR","ERR",H)) Q:H=""  S N="" D 
"RTN","KMPRBD01",61,0)
 .F  S N=$O(^XTMP("KMPR","ERR",H,N)) Q:N=""  S O="" D 
"RTN","KMPRBD01",62,0)
 ..F  S O=$O(^XTMP("KMPR","ERR",H,N,O)) Q:O=""  D 
"RTN","KMPRBD01",63,0)
 ...S TEXT(LN)="",LN=LN+1
"RTN","KMPRBD01",64,0)
 ...S TEXT(LN)="Date..: "_H_"    Node: "_N,LN=LN+1
"RTN","KMPRBD01",65,0)
 ...S TEXT(LN)="Option: "_O,LN=LN+1
"RTN","KMPRBD01",66,0)
 ...; prime time.
"RTN","KMPRBD01",67,0)
 ...S TEXT(LN)="Prime Time     = "_$G(^XTMP("KMPR","ERR",H,N,O,0)),LN=LN+1
"RTN","KMPRBD01",68,0)
 ...; non-prime time.
"RTN","KMPRBD01",69,0)
 ...S TEXT(LN)="Non-Prime Time = "_$G(^XTMP("KMPR","ERR",H,N,O,1)),LN=LN+1
"RTN","KMPRBD01",70,0)
 ...; message.
"RTN","KMPRBD01",71,0)
 ...F I=0:0 S I=$O(^XTMP("KMPR","ERR",H,N,O,"MSG",I)) Q:'I  D 
"RTN","KMPRBD01",72,0)
 ....S TEXT(LN)=^XTMP("KMPR","ERR",H,N,O,"MSG",I),LN=LN+1
"RTN","KMPRBD01",73,0)
 S XMTEXT="TEXT("
"RTN","KMPRBD01",74,0)
 S XMY("G.KMP2-RUM@ISC-ALBANY.VA.GOV")=""
"RTN","KMPRBD01",75,0)
 D ^XMD
"RTN","KMPRBD01",76,0)
 ;
"RTN","KMPRBD01",77,0)
 K ^XTMP("KMPR","ERR")
"RTN","KMPRBD01",78,0)
 ;
"RTN","KMPRBD01",79,0)
 Q
"RTN","KMPRBD02")
0^2^B41227766
"RTN","KMPRBD02",1,0)
KMPRBD02 ;SF/RAK - RUM Data Compression ;1/20/00  07:36
"RTN","KMPRBD02",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;**1**;Dec 09, 1998
"RTN","KMPRBD02",3,0)
 ;
"RTN","KMPRBD02",4,0)
 ; Background Driver (cont.)
"RTN","KMPRBD02",5,0)
 ;
"RTN","KMPRBD02",6,0)
DAILY(KMPRTDAY) ;-- daily data compression and storage
"RTN","KMPRBD02",7,0)
 ;----------------------------------------------------------------------
"RTN","KMPRBD02",8,0)
 ; KMPRTDAY.. Day in $H format (+$H).  This represents the
"RTN","KMPRBD02",9,0)
 ;            ending point for compression.  Only dates LESS than
"RTN","KMPRBD02",10,0)
 ;            KMPRTDAY will be compressed.
"RTN","KMPRBD02",11,0)
 ;
"RTN","KMPRBD02",12,0)
 ; At midnight compress hourly info into daily stats. Daily stats are
"RTN","KMPRBD02",13,0)
 ; stored in file #8971.1.  Hourly data is killed.
"RTN","KMPRBD02",14,0)
 ;----------------------------------------------------------------------
"RTN","KMPRBD02",15,0)
 ;
"RTN","KMPRBD02",16,0)
 Q:'$G(KMPRTDAY)
"RTN","KMPRBD02",17,0)
 ;
"RTN","KMPRBD02",18,0)
 N ARRAY,COUNT,DATA,DOW,HDATE,HTIME,I,JOB,MESSAGE,NODE,OKAY,OPTION
"RTN","KMPRBD02",19,0)
 N NP,PT,PTM,X,VAR
"RTN","KMPRBD02",20,0)
 ;
"RTN","KMPRBD02",21,0)
 ; make sure DT is defined.
"RTN","KMPRBD02",22,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRBD02",23,0)
 ; where daily data is located.
"RTN","KMPRBD02",24,0)
 S ARRAY=$NA(^XTMP("KMPR","DLY"))
"RTN","KMPRBD02",25,0)
 S NODE=""
"RTN","KMPRBD02",26,0)
 F  S NODE=$O(@ARRAY@(NODE)) Q:NODE=""  D
"RTN","KMPRBD02",27,0)
 .S HDATE=""
"RTN","KMPRBD02",28,0)
 .F  S HDATE=$O(@ARRAY@(NODE,HDATE)) Q:HDATE=""!(HDATE'<KMPRTDAY)  D 
"RTN","KMPRBD02",29,0)
 ..S OPTION=""
"RTN","KMPRBD02",30,0)
 ..F  S OPTION=$O(@ARRAY@(NODE,HDATE,OPTION)) Q:OPTION=""  D 
"RTN","KMPRBD02",31,0)
 ...S JOB=0,(COUNT,NP,PT)=""
"RTN","KMPRBD02",32,0)
 ...F  S JOB=$O(@ARRAY@(NODE,HDATE,OPTION,JOB)) Q:'JOB  D 
"RTN","KMPRBD02",33,0)
 ....S PTM=""
"RTN","KMPRBD02",34,0)
 ....F  S PTM=$O(@ARRAY@(NODE,HDATE,OPTION,JOB,PTM)) Q:PTM=""  D 
"RTN","KMPRBD02",35,0)
 .....; PTM:  non-prime time = 0   prime time = 1
"RTN","KMPRBD02",36,0)
 .....S DATA=@ARRAY@(NODE,HDATE,OPTION,JOB,PTM)
"RTN","KMPRBD02",37,0)
 .....; prime time or non-prime time.
"RTN","KMPRBD02",38,0)
 .....S VAR=$S(PTM:"PT",1:"NP") Q:VAR=""
"RTN","KMPRBD02",39,0)
 .....; accumulate totals.
"RTN","KMPRBD02",40,0)
 .....F I=1:1:8 S $P(@VAR,U,I)=$P(@VAR,U,I)+$P(DATA,U,I)
"RTN","KMPRBD02",41,0)
 .....; piece 1 non-prime time - piece 2 prime time
"RTN","KMPRBD02",42,0)
 .....S $P(COUNT,U,(PTM+1))=$P(COUNT,U,(PTM+1))+1
"RTN","KMPRBD02",43,0)
 .....; remove data from array.
"RTN","KMPRBD02",44,0)
 .....K @ARRAY@(NODE,HDATE,OPTION,JOB,PTM)
"RTN","KMPRBD02",45,0)
 ...;
"RTN","KMPRBD02",46,0)
 ...; back to OPTION level.
"RTN","KMPRBD02",47,0)
 ...; file data into file #8971.1
"RTN","KMPRBD02",48,0)
 ...D FILE^KMPRBD03(HDATE,NODE,OPTION,PT,NP,$P(COUNT,U,2),$P(COUNT,U),.OKAY,.MESSAGE)
"RTN","KMPRBD02",49,0)
 ...; if not filed successfully set into 'ERR' node.
"RTN","KMPRBD02",50,0)
 ...I 'OKAY D 
"RTN","KMPRBD02",51,0)
 ....S ^XTMP("KMPR","ERR",HDATE,NODE,OPTION,0)=NP_$P(COUNT,U)
"RTN","KMPRBD02",52,0)
 ....S ^XTMP("KMPR","ERR",HDATE,NODE,OPTION,1)=PT_$P(COUNT,U,2)
"RTN","KMPRBD02",53,0)
 ....F I=0:0 S I=$O(MESSAGE(I)) Q:'I  D 
"RTN","KMPRBD02",54,0)
 .....S ^XTMP("KMPR","ERR",HDATE,NODE,OPTION,"MSG",I)=MESSAGE(I)
"RTN","KMPRBD02",55,0)
 ;
"RTN","KMPRBD02",56,0)
 Q
"RTN","KMPRBD02",57,0)
 ;
"RTN","KMPRBD02",58,0)
WEEKLY(KMPRDT) ;-- compress daily stats to weekly
"RTN","KMPRBD02",59,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRBD02",60,0)
 ; KMPRDT... Compression date in internal fileman formt.  This date
"RTN","KMPRBD02",61,0)
 ;           must be a Sunday.  It represents the date from which the
"RTN","KMPRBD02",62,0)
 ;           previous weeks data should be compressed. 
"RTN","KMPRBD02",63,0)
 ;           Example: if KMPRDT = 2981011  then compression will begin
"RTN","KMPRBD02",64,0)
 ;                    on 2981010 (KMPRDT-1)
"RTN","KMPRBD02",65,0)
 ;
"RTN","KMPRBD02",66,0)
 ; Every Sunday compress the daily stats in file #8971.1 into weekly
"RTN","KMPRBD02",67,0)
 ; and upload the data to the CM RUM National Database
"RTN","KMPRBD02",68,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRBD02",69,0)
 ;
"RTN","KMPRBD02",70,0)
 Q:'$G(KMPRDT)
"RTN","KMPRBD02",71,0)
 ;
"RTN","KMPRBD02",72,0)
 N DATA,DATE,DELDATE,END,HOURS,I,IEN,J,SITE,START,TMPARRY,TMPARRY1
"RTN","KMPRBD02",73,0)
 ;
"RTN","KMPRBD02",74,0)
 ; quit if not sunday.
"RTN","KMPRBD02",75,0)
 Q:$$DOW^XLFDT(KMPRDT,1)
"RTN","KMPRBD02",76,0)
 ; storage array.
"RTN","KMPRBD02",77,0)
 S TMPARRY=$NA(^TMP($J))
"RTN","KMPRBD02",78,0)
 ; processed entries.
"RTN","KMPRBD02",79,0)
 S TMPARRY1=$NA(^TMP("KMPR PROC",$J))
"RTN","KMPRBD02",80,0)
 K @TMPARRY,@TMPARRY1
"RTN","KMPRBD02",81,0)
 ; site info.
"RTN","KMPRBD02",82,0)
 S SITE=$$SITE^VASITE Q:SITE=""
"RTN","KMPRBD02",83,0)
 S DATE=KMPRDT
"RTN","KMPRBD02",84,0)
 S (START,END)=""
"RTN","KMPRBD02",85,0)
 ; Date to begin deletion.
"RTN","KMPRBD02",86,0)
 S DELDATE=$$FMADD^XLFDT(KMPRDT,-14)
"RTN","KMPRBD02",87,0)
 ;
"RTN","KMPRBD02",88,0)
 W:'$D(ZTQUEUED) !,"Compressing data into weekly format..."
"RTN","KMPRBD02",89,0)
 ; Reverse $order to get previous dates.
"RTN","KMPRBD02",90,0)
 F  S DATE=$O(^KMPR(8971.1,"B",DATE),-1) Q:'DATE  D 
"RTN","KMPRBD02",91,0)
 .; If DATE is saturday set START and END dates and kill TMPARRY.
"RTN","KMPRBD02",92,0)
 .I $$DOW^XLFDT(DATE,1)=6 D 
"RTN","KMPRBD02",93,0)
 ..S END=DATE,START=$$FMADD^XLFDT(DATE,-6)
"RTN","KMPRBD02",94,0)
 ..K @TMPARRY
"RTN","KMPRBD02",95,0)
 .Q:'START
"RTN","KMPRBD02",96,0)
 .S IEN=0
"RTN","KMPRBD02",97,0)
 .F  S IEN=$O(^KMPR(8971.1,"B",DATE,IEN)) Q:'IEN  D 
"RTN","KMPRBD02",98,0)
 ..Q:'$D(^KMPR(8971.1,IEN,0))
"RTN","KMPRBD02",99,0)
 ..; data nodes into DATA() array.
"RTN","KMPRBD02",100,0)
 ..S DATA(0)=^KMPR(8971.1,IEN,0),DATA(1)=$G(^(1)),DATA(2)=$G(^(2))
"RTN","KMPRBD02",101,0)
 ..; Quit if data has already been sent to national database.
"RTN","KMPRBD02",102,0)
 ..Q:$P(DATA(0),U,2)
"RTN","KMPRBD02",103,0)
 ..; Cpu node.
"RTN","KMPRBD02",104,0)
 ..S NODE=$P(DATA(0),U,3) Q:NODE=""
"RTN","KMPRBD02",105,0)
 ..; OPTION = OptionName^ProtocolName.
"RTN","KMPRBD02",106,0)
 ..; option.
"RTN","KMPRBD02",107,0)
 ..S OPTION=$P(DATA(0),U,4)
"RTN","KMPRBD02",108,0)
 ..; rpc.
"RTN","KMPRBD02",109,0)
 ..S:OPTION="" OPTION=$P(DATA(0),U,7)
"RTN","KMPRBD02",110,0)
 ..; hl7.
"RTN","KMPRBD02",111,0)
 ..S:OPTION="" OPTION=$P(DATA(0),U,9)
"RTN","KMPRBD02",112,0)
 ..Q:OPTION=""
"RTN","KMPRBD02",113,0)
 ..S $P(OPTION,U,2)=$P(DATA(0),U,5)
"RTN","KMPRBD02",114,0)
 ..S @TMPARRY@(START,NODE,OPTION,0)=DATA(0)
"RTN","KMPRBD02",115,0)
 ..; change first piece to starting date (START)
"RTN","KMPRBD02",116,0)
 ..S $P(@TMPARRY@(START,NODE,OPTION,0),U)=START
"RTN","KMPRBD02",117,0)
 ..; second piece not applicable to national database
"RTN","KMPRBD02",118,0)
 ..S $P(@TMPARRY@(START,NODE,OPTION,0),U,2)=""
"RTN","KMPRBD02",119,0)
 ..; EndingDate^SiteName^SiteNumber.
"RTN","KMPRBD02",120,0)
 ..S @TMPARRY@(START,NODE,OPTION,99)=END_U_$P(SITE,U,2)_U_$P(SITE,U,3)
"RTN","KMPRBD02",121,0)
 ..; Nodes 1 and 2.
"RTN","KMPRBD02",122,0)
 ..F I=1,2 I DATA(I)]"" D 
"RTN","KMPRBD02",123,0)
 ...; Add data to get weekly totals.
"RTN","KMPRBD02",124,0)
 ...F J=1:1:8 S $P(@TMPARRY@(START,NODE,OPTION,I),U,J)=$P($G(@TMPARRY@(START,NODE,OPTION,I)),U,J)+$P(DATA(I),U,J)
"RTN","KMPRBD02",125,0)
 ..;
"RTN","KMPRBD02",126,0)
 ..; Back to IEN level.
"RTN","KMPRBD02",127,0)
 ..; Add to processed array.
"RTN","KMPRBD02",128,0)
 ..S @TMPARRY1@(IEN)=""
"RTN","KMPRBD02",129,0)
 .;
"RTN","KMPRBD02",130,0)
 .; Back to DATE level.
"RTN","KMPRBD02",131,0)
 .; If START then transmit data.
"RTN","KMPRBD02",132,0)
 .I DATE=START I $D(@TMPARRY) D TRANSMIT K @TMPARRY
"RTN","KMPRBD02",133,0)
 ;
"RTN","KMPRBD02",134,0)
 ; Transmit data to national database.
"RTN","KMPRBD02",135,0)
 W:'$D(ZTQUEUED) !,"Transmitting data to national database..."
"RTN","KMPRBD02",136,0)
 D:$D(@TMPARRY) TRANSMIT
"RTN","KMPRBD02",137,0)
 K @TMPARRY
"RTN","KMPRBD02",138,0)
 ;
"RTN","KMPRBD02",139,0)
 ; update field .02 (SENT TO CM NATIONAL DATABASE) to 'YES' for all
"RTN","KMPRBD02",140,0)
 ; processed entries.
"RTN","KMPRBD02",141,0)
 W:'$D(ZTQUEUED) !,"Updating records to reflect transmission..."
"RTN","KMPRBD02",142,0)
 S IEN=0
"RTN","KMPRBD02",143,0)
 F  S IEN=$O(@TMPARRY1@(IEN)) Q:'IEN  D 
"RTN","KMPRBD02",144,0)
 .K FDA,ERROR
"RTN","KMPRBD02",145,0)
 .S FDA($J,8971.1,IEN_",",.02)=1
"RTN","KMPRBD02",146,0)
 .D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPRBD02",147,0)
 K @TMPARRY1
"RTN","KMPRBD02",148,0)
 ;
"RTN","KMPRBD02",149,0)
 ; leave two complete weeks of data in file #8971.1
"RTN","KMPRBD02",150,0)
 D PURGE^KMPRUTL3(DELDATE,1)
"RTN","KMPRBD02",151,0)
 ;
"RTN","KMPRBD02",152,0)
 Q
"RTN","KMPRBD02",153,0)
 ;
"RTN","KMPRBD02",154,0)
TRANSMIT ;-- format TMPARRY data, put into e-mail and send to cm.
"RTN","KMPRBD02",155,0)
 ;
"RTN","KMPRBD02",156,0)
 Q:$G(TMPARRY)=""
"RTN","KMPRBD02",157,0)
 ;
"RTN","KMPRBD02",158,0)
 N HRSDAYS,I,IEN,LN,N,O,S,UPLDARRY,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPRBD02",159,0)
 ;
"RTN","KMPRBD02",160,0)
 S UPLDARRY=$NA(^TMP("KMPR UPLOAD",$J))
"RTN","KMPRBD02",161,0)
 K @UPLDARRY
"RTN","KMPRBD02",162,0)
 ;
"RTN","KMPRBD02",163,0)
 S LN=0
"RTN","KMPRBD02",164,0)
 ; version and patch info.
"RTN","KMPRBD02",165,0)
 S LN=LN+1,@UPLDARRY@(LN)="VERSION="_$$VERSION^KMPRUTL
"RTN","KMPRBD02",166,0)
 ;
"RTN","KMPRBD02",167,0)
 ; get hours/days data
"RTN","KMPRBD02",168,0)
 D HRSDAYS^KMPRUTL3(START,END,1,.HRSDAYS)
"RTN","KMPRBD02",169,0)
 ; if ^XTMP("KMPR","HOURS","START") exists then this is the first time
"RTN","KMPRBD02",170,0)
 ; the "HOURS" subscript is being accessed.  chances are this is only
"RTN","KMPRBD02",171,0)
 ; partial data, so it should be ignored.
"RTN","KMPRBD02",172,0)
 I $G(^XTMP("KMPR","HOURS","START"))&($D(HRSDAYS)) D 
"RTN","KMPRBD02",173,0)
 .K HRSDAYS,^XTMP("KMPR","HOURS","START")
"RTN","KMPRBD02",174,0)
 ;
"RTN","KMPRBD02",175,0)
 I $D(HRSDAYS) S S=0 D 
"RTN","KMPRBD02",176,0)
 .F  S S=$O(HRSDAYS(S)) Q:'S  S N="" D 
"RTN","KMPRBD02",177,0)
 ..F  S N=$O(HRSDAYS(S,N)) Q:N=""  D 
"RTN","KMPRBD02",178,0)
 ...S LN=LN+1
"RTN","KMPRBD02",179,0)
 ...; StartDate^Node^EndDate^PTDays^PTHours^NPTDays^NPTHours
"RTN","KMPRBD02",180,0)
 ...S @UPLDARRY@(LN)="HRSDAYS="_START_"^"_N_"^"_END_"^"_HRSDAYS(S,N)
"RTN","KMPRBD02",181,0)
 ;
"RTN","KMPRBD02",182,0)
 ; reformat so that data is in ^TMP("KMPR UPLOAD",$J,LN)= format.
"RTN","KMPRBD02",183,0)
 S IEN=0,S=""
"RTN","KMPRBD02",184,0)
 F  S S=$O(@TMPARRY@(S)) Q:S=""  S N="" D 
"RTN","KMPRBD02",185,0)
 .F  S N=$O(@TMPARRY@(S,N)) Q:N=""  S O="" D 
"RTN","KMPRBD02",186,0)
 ..F  S O=$O(@TMPARRY@(S,N,O)) Q:O=""  S I="",IEN=IEN+1 D 
"RTN","KMPRBD02",187,0)
 ...F  S I=$O(@TMPARRY@(S,N,O,I)) Q:I=""  D 
"RTN","KMPRBD02",188,0)
 ....S LN=LN+1
"RTN","KMPRBD02",189,0)
 ....S @UPLDARRY@(LN)=IEN_","_I_")="_@TMPARRY@(S,N,O,I)
"RTN","KMPRBD02",190,0)
 ;
"RTN","KMPRBD02",191,0)
 ; quit if no data to transmit.
"RTN","KMPRBD02",192,0)
 Q:'$D(@UPLDARRY)
"RTN","KMPRBD02",193,0)
 ; send packman message.
"RTN","KMPRBD02",194,0)
 S XMTEXT="^TMP(""KMPR UPLOAD"","_$J_","
"RTN","KMPRBD02",195,0)
 S XMSUB="RUM DATA - "_$P(SITE,U,2)_" ("_$P(SITE,U,3)_") - "_$$FMTE^XLFDT(START)
"RTN","KMPRBD02",196,0)
 S XMY("S.KMP2-RUM-SERVER@ISC-ALBANY.VA.GOV")=""
"RTN","KMPRBD02",197,0)
 S XMY("CAPACITY,MANAGEMENT@ISC-ALBANY.VA.GOV")=""
"RTN","KMPRBD02",198,0)
 D ^XMD
"RTN","KMPRBD02",199,0)
 W:'$D(ZTQUEUED) !,"Message #",$G(XMZ)," sent..."
"RTN","KMPRBD02",200,0)
 K @UPLDARRY
"RTN","KMPRBD02",201,0)
 ;
"RTN","KMPRBD02",202,0)
 Q
"RTN","KMPRPOST")
0^3^B608380
"RTN","KMPRPOST",1,0)
KMPRPOST ;SF/RAK - RUM Post Install Routine ;1/20/00  07:36
"RTN","KMPRPOST",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;**1**;Dec 09, 1998
"RTN","KMPRPOST",3,0)
 ;;
"RTN","KMPRPOST",4,0)
 ;
"RTN","KMPRPOST",5,0)
 ; This post install routine is for RUM patch KMPR*1.0*1
"RTN","KMPRPOST",6,0)
 ;
"RTN","KMPRPOST",7,0)
EN ;-- entry point.
"RTN","KMPRPOST",8,0)
 ;
"RTN","KMPRPOST",9,0)
 N FDA,IEN,MESSAGE
"RTN","KMPRPOST",10,0)
 ; let background job know system ready to track hours.
"RTN","KMPRPOST",11,0)
 S ^XTMP("KMPR","HOURS","START")=1
"RTN","KMPRPOST",12,0)
 ; get ien for backgroung job.
"RTN","KMPRPOST",13,0)
 S IEN=$O(^DIC(19,"B","KMPR BACKGROUND DRIVER",0)) Q:'IEN
"RTN","KMPRPOST",14,0)
 ; get ien for background driver from 'option scheduling' file.
"RTN","KMPRPOST",15,0)
 S IEN=$O(^DIC(19.2,"B",+IEN,0)) Q:'IEN
"RTN","KMPRPOST",16,0)
 ; if data in 'special queueing'.
"RTN","KMPRPOST",17,0)
 I $P($G(^DIC(19.2,+IEN,0)),U,9)]"" D 
"RTN","KMPRPOST",18,0)
 .; remove special queueing.
"RTN","KMPRPOST",19,0)
 .S FDA($J,19.2,IEN_",",9)="@"
"RTN","KMPRPOST",20,0)
 .D FILE^DIE("","FDA($J)","MESSAGE")
"RTN","KMPRPOST",21,0)
 ;
"RTN","KMPRPOST",22,0)
 Q
"RTN","KMPRSS")
0^4^B12833202
"RTN","KMPRSS",1,0)
KMPRSS ;SFISC/KAK/RAK - Resource Usage Monitor Status ;1/20/00  07:37
"RTN","KMPRSS",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;**1**;Dec 09, 1998
"RTN","KMPRSS",3,0)
 ;
"RTN","KMPRSS",4,0)
STAT ; Status of Resource Usage Monitor collection
"RTN","KMPRSS",5,0)
 N CHECK,KMPRX,X,Y
"RTN","KMPRSS",6,0)
 ; check environment
"RTN","KMPRSS",7,0)
 D ENVCHECK^KMPRUTL1(.CHECK,1)
"RTN","KMPRSS",8,0)
 ; if RUM turned on but background job not queued ask user if they want
"RTN","KMPRSS",9,0)
 ; to queue it at this time.
"RTN","KMPRSS",10,0)
 D:(+CHECK)=200 ENVCHECK^KMPRUTL1(.CHECK)
"RTN","KMPRSS",11,0)
 W @IOF,!!,?25,"Resource Usage Monitor Status"
"RTN","KMPRSS",12,0)
 S X="Version "_$P($$VERSION^KMPRUTL,U)
"RTN","KMPRSS",13,0)
 W !,?(80-$L(X)\2),X,!
"RTN","KMPRSS",14,0)
 ; patches
"RTN","KMPRSS",15,0)
 S X=$P($$VERSION^KMPRUTL,U,2)
"RTN","KMPRSS",16,0)
 W:X]"" ?(80-$L(X)\2),X,!
"RTN","KMPRSS",17,0)
 W !,?5,"The Resource Usage Monitor is currently "
"RTN","KMPRSS",18,0)
 I +$G(^%ZTSCH("LOGRSRC")) W "running."
"RTN","KMPRSS",19,0)
 E  W "stopped."
"RTN","KMPRSS",20,0)
 W !
"RTN","KMPRSS",21,0)
 I '$D(^DIC(19,"B","KMPR BACKGROUND DRIVER")) D 
"RTN","KMPRSS",22,0)
 .W !," The 'RUM Background Driver' option [KMPR BACKGROUND DRIVER] is missing !",*7,!
"RTN","KMPRSS",23,0)
 E  D
"RTN","KMPRSS",24,0)
 .S KMPRX=$O(^DIC(19,"B","KMPR BACKGROUND DRIVER",0))
"RTN","KMPRSS",25,0)
 .S KMPRX=+$O(^DIC(19.2,"B",KMPRX,0))
"RTN","KMPRSS",26,0)
 .I 'KMPRX W !?5,"The 'RUM Background Driver' [KMPR BACKGROUND DRIVER] is not scheduled",!?5,"to run!",! Q
"RTN","KMPRSS",27,0)
 .S KMPRX=$G(^DIC(19.2,KMPRX,0))
"RTN","KMPRSS",28,0)
 .S $P(KMPRX,U,2)=$$FMTE^XLFDT($P(KMPRX,U,2))
"RTN","KMPRSS",29,0)
 .W !,?5,"The 'RUM Background Driver' [KMPR BACKGROUND DRIVER] is scheduled"
"RTN","KMPRSS",30,0)
 .W !,?5,"to run on ",$S($P(KMPRX,U,2)="":"NO DATE",1:$P(KMPRX,U,2))
"RTN","KMPRSS",31,0)
 .S KMPRX=$P(KMPRX,U,6) W " every ",$S(KMPRX="":"UNKNOWN",1:+KMPRX)," ",$S(KMPRX["S":"second",KMPRX["M":"minute",KMPRX["H":"hour",KMPRX["D":"day",1:KMPRX) W:KMPRX>1 "s" W ".",!
"RTN","KMPRSS",32,0)
 W !,?5,"The temporary collection global (i.e., 'XTMP(""KMPR"")') is",$S('$D(^XTMP("KMPR")):" not",1:"")," present",!,?5,"on your system.",!
"RTN","KMPRSS",33,0)
 W !!,"Press <RETURN> to continue: " R X:DTIME
"RTN","KMPRSS",34,0)
 ;
"RTN","KMPRSS",35,0)
 Q
"RTN","KMPRSS",36,0)
 ;
"RTN","KMPRSS",37,0)
START ; Start Resource Usage Monitor collection
"RTN","KMPRSS",38,0)
 N CHECK
"RTN","KMPRSS",39,0)
 ; check environment
"RTN","KMPRSS",40,0)
 D ENVCHECK^KMPRUTL1(.CHECK,1)
"RTN","KMPRSS",41,0)
 ; if RUM does not support this operating system then quit.
"RTN","KMPRSS",42,0)
 I (+CHECK)=100 W !! D ENVOUTPT^KMPRUTL1(CHECK,1,1) H 1 Q
"RTN","KMPRSS",43,0)
 I +$G(^%ZTSCH("LOGRSRC")) W !!,?10,"The Resource Usage Monitor is already running.",! H 1 Q
"RTN","KMPRSS",44,0)
 W ! K DIR S DIR(0)="Y",DIR("B")="YES"
"RTN","KMPRSS",45,0)
 S DIR("?")="Answer YES to start collecting Resource Usage Monitor data"
"RTN","KMPRSS",46,0)
 S DIR("A")="Do you want to start Resource Usage Monitor collection"
"RTN","KMPRSS",47,0)
 D ^DIR G:$D(DTOUT)!$D(DUOUT) END
"RTN","KMPRSS",48,0)
 I Y D
"RTN","KMPRSS",49,0)
 .S DIE=8989.3,DA=1,DR="300///YES" D ^DIE
"RTN","KMPRSS",50,0)
 .W !!,?10,"Resource Usage Monitor collection is started.",!
"RTN","KMPRSS",51,0)
 E  W !!,?10,"Resource Usage Monitor collection is NOT started.",!
"RTN","KMPRSS",52,0)
 H 1 G END
"RTN","KMPRSS",53,0)
 ;
"RTN","KMPRSS",54,0)
STOP ; Stop Resource Usage Monitor collection
"RTN","KMPRSS",55,0)
 I '+$G(^%ZTSCH("LOGRSRC")) W !!,?10,"The Resource Usage Monitor is already stopped.",! H 1 Q
"RTN","KMPRSS",56,0)
 W ! K DIR S DIR(0)="Y",DIR("B")="YES"
"RTN","KMPRSS",57,0)
 S DIR("?")="Answer YES to stop collecting Resource Usage Monitor data"
"RTN","KMPRSS",58,0)
 S DIR("A")="Do you want to stop Resource Usage Monitor collection"
"RTN","KMPRSS",59,0)
 D ^DIR G:$D(DTOUT)!$D(DUOUT) END
"RTN","KMPRSS",60,0)
 I Y D
"RTN","KMPRSS",61,0)
 .S DIE=8989.3,DA=1,DR="300///NO" D ^DIE
"RTN","KMPRSS",62,0)
 .W !!,?10,"Resource Usage Monitor collection is stopped.",!
"RTN","KMPRSS",63,0)
 E  W !!,?10,"Resource Usage Monitor collection is NOT stopped.",!
"RTN","KMPRSS",64,0)
 H 1
"RTN","KMPRSS",65,0)
 ;
"RTN","KMPRSS",66,0)
END ;
"RTN","KMPRSS",67,0)
 K DA,DIE,DIR,DR,DTOUT,DUOUT,X,Y
"RTN","KMPRSS",68,0)
 Q
"RTN","KMPRUTL")
0^5^B18257077
"RTN","KMPRUTL",1,0)
KMPRUTL ;SFISC/KAK/RAK - Resource Usage Monitor Utilities ;1/20/00  07:37
"RTN","KMPRUTL",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;**1**;Dec 09, 1998
"RTN","KMPRUTL",3,0)
 ;
"RTN","KMPRUTL",4,0)
CONTINUE(KMPRMSSG,KMPRY) ;-- press return to continue
"RTN","KMPRUTL",5,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL",6,0)
 ; KMPRMSSG. (optional) Message to display to user (if not defined then
"RTN","KMPRUTL",7,0)
 ;           default message by ^DIR is used).
"RTN","KMPRUTL",8,0)
 ; KMPRY.... Return value: 0 - do not continue.
"RTN","KMPRUTL",9,0)
 ;                         1 - continue.
"RTN","KMPRUTL",10,0)
 ;           Access by reference.
"RTN","KMPRUTL",11,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL",12,0)
 ;
"RTN","KMPRUTL",13,0)
 S KMPRMSSG=$G(KMPRMSSG),KMPRY=0
"RTN","KMPRUTL",14,0)
 ;
"RTN","KMPRUTL",15,0)
 ; if not terminal continue without displaying message.
"RTN","KMPRUTL",16,0)
 I $E(IOST,1,2)'="C-" S KMPRY=1 Q
"RTN","KMPRUTL",17,0)
 ;
"RTN","KMPRUTL",18,0)
 N DIR,X,Y
"RTN","KMPRUTL",19,0)
 S DIR(0)="EO"
"RTN","KMPRUTL",20,0)
 S:KMPRMSSG]"" DIR("A")=KMPRMSSG
"RTN","KMPRUTL",21,0)
 D ^DIR
"RTN","KMPRUTL",22,0)
 S KMPRY=+$G(Y)
"RTN","KMPRUTL",23,0)
 ;
"RTN","KMPRUTL",24,0)
 Q
"RTN","KMPRUTL",25,0)
 ;
"RTN","KMPRUTL",26,0)
GRPHMSG ;-- graph message.
"RTN","KMPRUTL",27,0)
 N TXT
"RTN","KMPRUTL",28,0)
 S TXT(1)="This option displays data in a graphical format.  Please make"
"RTN","KMPRUTL",29,0)
 S TXT(2)="note that this output is intended for comparison/trends only,"
"RTN","KMPRUTL",30,0)
 S TXT(3)="and should not be used for detailed analysis."
"RTN","KMPRUTL",31,0)
 S TXT(1,"F")="!?9",TXT(2,"F")="!?9",TXT(3,"F")="!?9"
"RTN","KMPRUTL",32,0)
 D EN^DDIOL(.TXT)
"RTN","KMPRUTL",33,0)
 Q
"RTN","KMPRUTL",34,0)
 ;
"RTN","KMPRUTL",35,0)
HDR ; entry point to print header
"RTN","KMPRUTL",36,0)
 ; Input variables:
"RTN","KMPRUTL",37,0)
 ;   KMPRPG = page number
"RTN","KMPRUTL",38,0)
 ;   KMPRTL = title to print on header
"RTN","KMPRUTL",39,0)
 ;   KMPRRP = reporting period date
"RTN","KMPRUTL",40,0)
 ;          = print today's date (if NOT defined)
"RTN","KMPRUTL",41,0)
 D PRESS Q:KMPROUT
"RTN","KMPRUTL",42,0)
 W:'($E(IOST,1,2)'="C-"&'KMPRPG) @IOF I ($E(IOST,1,2)="P-"&$D(IO("S"))&'KMPRPG) S (DX,DY)=0 X ^%ZOSF("XY")
"RTN","KMPRUTL",43,0)
 I IOT="HFS"!($E(IOST,1,2)="P-") S (IORVOFF,IORVON)=""
"RTN","KMPRUTL",44,0)
 S KMPRPG=KMPRPG+1 W !,?((IOM/2)-(($L(KMPRTL)+4)/2)),IORVON,"* ",KMPRTL," *",IORVOFF
"RTN","KMPRUTL",45,0)
 I $D(KMPRRP) W !,?((IOM/2)-(($L(A1RP)+18)/2)),"Reporting Period: ",KMPRRP
"RTN","KMPRUTL",46,0)
 E  S Y=DT D DD^%DT W !,?((IOM/2)-(($L(Y)+12)/2)),"Printed on: ",Y
"RTN","KMPRUTL",47,0)
 W:$E(IOST,1,2)'="C-" ?(IOM-9),"Page ",$J(KMPRPG,3) W !!
"RTN","KMPRUTL",48,0)
 Q
"RTN","KMPRUTL",49,0)
 ;
"RTN","KMPRUTL",50,0)
ID(KMPRIEN) ;-- display - called from ^DD(8971.1,0,"ID","W")
"RTN","KMPRUTL",51,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",52,0)
 ; KMPRIEN... Ien for file #8971.1 (RESOURCE USAGE MONITOR).
"RTN","KMPRUTL",53,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",54,0)
 Q:'$G(KMPRIEN)
"RTN","KMPRUTL",55,0)
 Q:'$D(^KMPR(8971.1,+KMPRIEN,0))
"RTN","KMPRUTL",56,0)
 N DATA,TXT
"RTN","KMPRUTL",57,0)
 S DATA=$G(^KMPR(8971.1,+KMPRIEN,0))
"RTN","KMPRUTL",58,0)
 ; sent to cm national database.
"RTN","KMPRUTL",59,0)
 S TXT(1)=$S($P(DATA,U,2):"sent",1:"not sent")
"RTN","KMPRUTL",60,0)
 S TXT(1)=TXT(1)_$J(" ",10-$L(TXT(1)))
"RTN","KMPRUTL",61,0)
 ; node.
"RTN","KMPRUTL",62,0)
 S TXT(1)=TXT(1)_$P(DATA,U,3)
"RTN","KMPRUTL",63,0)
 S TXT(1)=TXT(1)_$J(" ",22-$L(TXT(1)))
"RTN","KMPRUTL",64,0)
 ; option.
"RTN","KMPRUTL",65,0)
 I $P(DATA,U,4)]"" S TXT(1)=TXT(1)_"option: "_$P(DATA,U,4)
"RTN","KMPRUTL",66,0)
 ; rpc.
"RTN","KMPRUTL",67,0)
 E  I $P(DATA,U,7)]"" S TXT(1)=TXT(1)_"   rpc: "_$P(DATA,U,7)
"RTN","KMPRUTL",68,0)
 S TXT(1,"F")="?16"
"RTN","KMPRUTL",69,0)
 ; if protocol
"RTN","KMPRUTL",70,0)
 I $P(DATA,U,5)'="" D 
"RTN","KMPRUTL",71,0)
 .S TXT(2)="protocol: "_$E($P(DATA,U,5),1,40) ;_" (protocol)"
"RTN","KMPRUTL",72,0)
 .S TXT(2,"F")="!?"_$S($G(DDSDIW):36,1:45)
"RTN","KMPRUTL",73,0)
 ; display TXT() array.
"RTN","KMPRUTL",74,0)
 D EN^DDIOL(.TXT)
"RTN","KMPRUTL",75,0)
 Q
"RTN","KMPRUTL",76,0)
 ;
"RTN","KMPRUTL",77,0)
PRESS ;
"RTN","KMPRUTL",78,0)
 I KMPRPG,$E(IOST,1,2)="C-" W !,"Press RETURN to continue or '^' to exit: " R X:DTIME S:X="^"!('$T) KMPROUT=1
"RTN","KMPRUTL",79,0)
 Q
"RTN","KMPRUTL",80,0)
 ;
"RTN","KMPRUTL",81,0)
NODEARRY(KMPRARRY) ;-- put nodes into array.
"RTN","KMPRUTL",82,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",83,0)
 ; KMPRARRY.. Array to contain nodes in format:
"RTN","KMPRUTL",84,0)
 ;            KMPRARRY(NODENAME)=""
"RTN","KMPRUTL",85,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",86,0)
 ;
"RTN","KMPRUTL",87,0)
 K @KMPRARRY
"RTN","KMPRUTL",88,0)
 ;
"RTN","KMPRUTL",89,0)
 N NODE S NODE=""
"RTN","KMPRUTL",90,0)
 F  S NODE=$O(^KMPR(8971.1,"ANODE",NODE)) Q:NODE=""  S @KMPRARRY@(NODE)=""
"RTN","KMPRUTL",91,0)
 Q
"RTN","KMPRUTL",92,0)
 ;
"RTN","KMPRUTL",93,0)
RUMDATES(KMPRDATE) ;-- get RUM date ranges from file 8971.1
"RTN","KMPRUTL",94,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL",95,0)
 ; KMPRDATE... Return value (access by reference) in format:
"RTN","KMPRUTL",96,0)
 ;             StartDate^EndDate^ExtStartDate^ExtEndDate
"RTN","KMPRUTL",97,0)
 ;             2981101^2981104^Nov 1, 1998^Nov 4, 1998
"RTN","KMPRUTL",98,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL",99,0)
 ;
"RTN","KMPRUTL",100,0)
 S KMPRDATE=""
"RTN","KMPRUTL",101,0)
 N END,START
"RTN","KMPRUTL",102,0)
 ; determine start date from file 8971.1
"RTN","KMPRUTL",103,0)
 S START=$O(^KMPR(8971.1,"B",0))
"RTN","KMPRUTL",104,0)
 ; determine end date from file 8971.1
"RTN","KMPRUTL",105,0)
 S END=$O(^KMPR(8971.1,"B","A"),-1)
"RTN","KMPRUTL",106,0)
 D DATERNG^KMPUTL1(.KMPRDATE,START,END)
"RTN","KMPRUTL",107,0)
 ;
"RTN","KMPRUTL",108,0)
 Q
"RTN","KMPRUTL",109,0)
 ;
"RTN","KMPRUTL",110,0)
VERSION() ;-- extrinsic - return current version.
"RTN","KMPRUTL",111,0)
 Q $P($T(+2^KMPRUTL),";",3)_"^"_$P($T(+2^KMPRUTL),";",5)
"RTN","KMPRUTL",112,0)
 ;
"RTN","KMPRUTL",113,0)
ZIS ; entry point to define IORVOFF and IORVON variables
"RTN","KMPRUTL",114,0)
 D HOME^%ZIS S X="IORVOFF;IORVON" D ENDR^%ZISS
"RTN","KMPRUTL",115,0)
 S:IOT="HFS" (IORVOFF,IORVON)=""
"RTN","KMPRUTL",116,0)
 Q
"RTN","KMPRUTL",117,0)
 ;
"RTN","KMPRUTL",118,0)
 ;
"RTN","KMPRUTL",119,0)
ELEARRY(KMPRARRY) ;-- set elements data into KMPRARRY.
"RTN","KMPRUTL",120,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",121,0)
 ; KMPRARRY... Array to contain elements data.
"RTN","KMPRUTL",122,0)
 ;             Format: ElementName^DataPiece
"RTN","KMPRUTL",123,0)
 ;                     KMPRARRY(1)=CPU Time^1
"RTN","KMPRUTL",124,0)
 ;                     KMPRARRY(2)=Elapsed Time^7
"RTN","KMPRUTL",125,0)
 ;                     KMPRARRY(...)=...
"RTN","KMPRUTL",126,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",127,0)
 ;
"RTN","KMPRUTL",128,0)
 Q:$G(KMPRARRY)=""
"RTN","KMPRUTL",129,0)
 ;
"RTN","KMPRUTL",130,0)
 N DATA,I
"RTN","KMPRUTL",131,0)
 F I=1:1 Q:$P($T(ELEMENTS+I),";",3)=""  D 
"RTN","KMPRUTL",132,0)
 .S DATA=$T(ELEMENTS+I)
"RTN","KMPRUTL",133,0)
 .S @KMPRARRY@(I)=$P(DATA,";",3)_"^"_$P(DATA,";",4)
"RTN","KMPRUTL",134,0)
 Q
"RTN","KMPRUTL",135,0)
 ;
"RTN","KMPRUTL",136,0)
ELEMENT(KMPUVAR) ;-- select RUM data element.
"RTN","KMPRUTL",137,0)
 ; Output Variable:
"RTN","KMPRUTL",138,0)
 ;   KMPUVAR    = Number of Data Piece
"RTN","KMPRUTL",139,0)
 ;              = '^' if DTOUT or DUOUT
"RTN","KMPRUTL",140,0)
 ;   KMPUVAR(0) = Set of Code's Verbiage
"RTN","KMPRUTL",141,0)
 ;
"RTN","KMPRUTL",142,0)
 N DIR,DTOUT,DUOUT,I,X,Y
"RTN","KMPRUTL",143,0)
 S KMPUVAR=""
"RTN","KMPRUTL",144,0)
 S DIR(0)="SXO^"
"RTN","KMPRUTL",145,0)
 F I=1:1 Q:$P($T(ELEMENTS+I),";",3)=""  D 
"RTN","KMPRUTL",146,0)
 .S DIR(0)=DIR(0)_I_":"_$P($T(ELEMENTS+I),";",3)_";"
"RTN","KMPRUTL",147,0)
 S DIR("A")="Enter Key Data Element for Searching RUM Data"
"RTN","KMPRUTL",148,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT)!(Y="") S KMPUVAR="^",KMPUVAR(0)="" Q
"RTN","KMPRUTL",149,0)
 S KMPUVAR=$TR(Y,"12345678^","17562348^"),KMPUVAR(0)=Y(0)
"RTN","KMPRUTL",150,0)
 Q
"RTN","KMPRUTL",151,0)
 ;
"RTN","KMPRUTL",152,0)
ELEMENTS ;-- ;;Element Name;data piece in file 8971.1
"RTN","KMPRUTL",153,0)
 ;;CPU Time;1
"RTN","KMPRUTL",154,0)
 ;;Elapsed Time;7
"RTN","KMPRUTL",155,0)
 ;;M Commands;5
"RTN","KMPRUTL",156,0)
 ;;GLO References;6
"RTN","KMPRUTL",157,0)
 ;;DIO References;2
"RTN","KMPRUTL",158,0)
 ;;BIO References;3
"RTN","KMPRUTL",159,0)
 ;;Page Faults;4
"RTN","KMPRUTL",160,0)
 ;;Occurrences;8
"RTN","KMPRUTL1")
0^7^B12506067
"RTN","KMPRUTL1",1,0)
KMPRUTL1 ;SFISC/KAK/RAK - Resource Usage Monitor Utility ;3/3/00  13:47
"RTN","KMPRUTL1",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;**1**;Dec 09, 1998
"RTN","KMPRUTL1",3,0)
 ;
"RTN","KMPRUTL1",4,0)
ENVCHECK(KMPRENV,KMPRQIET) ;-- environment check.
"RTN","KMPRUTL1",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",6,0)
 ; KMPRENV... Result of environment check in format:
"RTN","KMPRUTL1",7,0)
 ;            KMPRENV=Number^Text
"RTN","KMPRUTL1",8,0)
 ;            1-99: system status (not an error condition).
"RTN","KMPRUTL1",9,0)
 ;                 0 - RUM turned on and background job queued
"RTN","KMPRUTL1",10,0)
 ;                 1 - RUM is not turned on
"RTN","KMPRUTL1",11,0)
 ;                 2 - 'KMPR BACKGROUND' job has been queued to run
"RTN","KMPRUTL1",12,0)
 ;
"RTN","KMPRUTL1",13,0)
 ;            100>: error condition.
"RTN","KMPRUTL1",14,0)
 ;               100 - RUM not available for 'OS' at this time
"RTN","KMPRUTL1",15,0)
 ;               200 - RUM is on but the option 'KMPR BACKGROUND DRIVER'
"RTN","KMPRUTL1",16,0)
 ;                     is not scheduled to run."
"RTN","KMPRUTL1",17,0)
 ;               201 - The RUM background driver option [KMPR BACKGROUND
"RTN","KMPRUTL1",18,0)
 ;                     DRIVER] is missing
"RTN","KMPRUTL1",19,0)
 ;
"RTN","KMPRUTL1",20,0)
 ; KMPRQIET.. Output message: 0 - output message (not quiet).
"RTN","KMPRUTL1",21,0)
 ;                            1 - do not output message (quiet).
"RTN","KMPRUTL1",22,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",23,0)
 ;
"RTN","KMPRUTL1",24,0)
 K KMPRENV
"RTN","KMPRUTL1",25,0)
 S KMPRENV="0^RUM turned on and background job queued"
"RTN","KMPRUTL1",26,0)
 S KMPRQIET=+$G(KMPRQIET)
"RTN","KMPRUTL1",27,0)
 ;
"RTN","KMPRUTL1",28,0)
 N IEN,IEN1,TEXT
"RTN","KMPRUTL1",29,0)
 ;
"RTN","KMPRUTL1",30,0)
 ; check for operating system availability.
"RTN","KMPRUTL1",31,0)
 S TEXT=$P($G(^%ZOSF("OS")),U)
"RTN","KMPRUTL1",32,0)
 I TEXT'["DSM" D  Q
"RTN","KMPRUTL1",33,0)
 .S KMPRENV="100^RUM not available for '"_TEXT_"' at this time"
"RTN","KMPRUTL1",34,0)
 .D:'KMPRQIET ENVOUTPT(KMPRENV,1,1)
"RTN","KMPRUTL1",35,0)
 ;
"RTN","KMPRUTL1",36,0)
 ; if rum not started quit.
"RTN","KMPRUTL1",37,0)
 I '$G(^%ZTSCH("LOGRSRC")) D  Q
"RTN","KMPRUTL1",38,0)
 .S KMPRENV="1^RUM is not turned on"
"RTN","KMPRUTL1",39,0)
 .D:'KMPRQIET ENVOUTPT(KMPRENV,1,1)
"RTN","KMPRUTL1",40,0)
 ;
"RTN","KMPRUTL1",41,0)
 S TEXT="KMPR BACKGROUND DRIVER"
"RTN","KMPRUTL1",42,0)
 S IEN=$O(^DIC(19,"B",TEXT,0))
"RTN","KMPRUTL1",43,0)
 I 'IEN D  Q
"RTN","KMPRUTL1",44,0)
 .S KMPRENV="201^The RUM background driver option [KMPR BACKGROUND DRIVER] is missing"
"RTN","KMPRUTL1",45,0)
 .D:'KMPRQIET ENVOUTPT(KMPRENV,1,1)
"RTN","KMPRUTL1",46,0)
 ;
"RTN","KMPRUTL1",47,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPRUTL1",48,0)
 I 'IEN1!($P($G(^DIC(19.2,+IEN1,1)),U)']"") D 
"RTN","KMPRUTL1",49,0)
 .S KMPRENV="200^RUM is on but the option '"_TEXT_"' is not scheduled to run"
"RTN","KMPRUTL1",50,0)
 ;
"RTN","KMPRUTL1",51,0)
 Q:KMPRQIET
"RTN","KMPRUTL1",52,0)
 D ENVOUTPT(KMPRENV,1,1) I +KMPRENV<100 Q
"RTN","KMPRUTL1",53,0)
 ;
"RTN","KMPRUTL1",54,0)
 K DIR S DIR(0)="YO",DIR("B")="YES"
"RTN","KMPRUTL1",55,0)
 S DIR("A")="Do you want me to queue this option to run every night at 1 a.m."
"RTN","KMPRUTL1",56,0)
 W ! D ^DIR Q:'Y
"RTN","KMPRUTL1",57,0)
 ;
"RTN","KMPRUTL1",58,0)
 D QUEBKG
"RTN","KMPRUTL1",59,0)
 ;
"RTN","KMPRUTL1",60,0)
 W !
"RTN","KMPRUTL1",61,0)
 S KMPRENV="0^RUM turned on and background job queued"
"RTN","KMPRUTL1",62,0)
 ;
"RTN","KMPRUTL1",63,0)
 Q
"RTN","KMPRUTL1",64,0)
 ;
"RTN","KMPRUTL1",65,0)
ENVOUTPT(KMPRENV,KMPRHILT,KMPRCNTR) ;-- environment check output.
"RTN","KMPRUTL1",66,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",67,0)
 ; KMPRENV... Environment output (see ENVCHECK).
"RTN","KMPRUTL1",68,0)
 ; KMPRHILT.. Highlight text: 0 - do not highlight.
"RTN","KMPRUTL1",69,0)
 ;                            1 - highlight text.
"RTN","KMPRUTL1",70,0)
 ; KMPRCNTR.. Center text:    0 - do not center text.
"RTN","KMPRUTL1",71,0)
 ;                            1 - center text.
"RTN","KMPRUTL1",72,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",73,0)
 ;
"RTN","KMPRUTL1",74,0)
 S KMPRENV=$G(KMPRENV),KMPRHILT=+$G(KMPRHILT),KMPRCNTR=+$G(KMPRCNTR)
"RTN","KMPRUTL1",75,0)
 Q:KMPRENV=""
"RTN","KMPRUTL1",76,0)
 ;
"RTN","KMPRUTL1",77,0)
 N INDENT,IORVOFF,IORVON,TEXT
"RTN","KMPRUTL1",78,0)
 S X="IORVOFF;IORVON" D ENDR^%ZISS
"RTN","KMPRUTL1",79,0)
 S KMPRENV=$P(KMPRENV,U,2)
"RTN","KMPRUTL1",80,0)
 S:KMPRHILT KMPRENV=IORVON_" "_KMPRENV_" "_IORVOFF
"RTN","KMPRUTL1",81,0)
 S TEXT(1)=KMPRENV
"RTN","KMPRUTL1",82,0)
 I KMPRCNTR S INDENT=80-$L(TEXT(1))\2,TEXT(1,"F")="!?"_INDENT
"RTN","KMPRUTL1",83,0)
 D EN^DDIOL(.TEXT)
"RTN","KMPRUTL1",84,0)
 ;
"RTN","KMPRUTL1",85,0)
 Q
"RTN","KMPRUTL1",86,0)
 ;
"RTN","KMPRUTL1",87,0)
PKG(PACKAGE) ; Select Package(s)
"RTN","KMPRUTL1",88,0)
 ; Output Variable:
"RTN","KMPRUTL1",89,0)
 ;   PACKAGE = Contains array of package names
"RTN","KMPRUTL1",90,0)
 ;           = PACKAGE("^") if DTOUT or DUOUT
"RTN","KMPRUTL1",91,0)
 ;
"RTN","KMPRUTL1",92,0)
 N DIR,DTOUT,DUOUT,Y
"RTN","KMPRUTL1",93,0)
 S DIR(0)="FO^1:999:0"
"RTN","KMPRUTL1",94,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)!(Y="")
"RTN","KMPRUTL1",95,0)
 .S DIR("A")="Select Package Namespace" D ^DIR I Y'="" S PACKAGE(Y)=""
"RTN","KMPRUTL1",96,0)
 .I Y=" " W !,*7,"Please enter a valid package namespace.",!
"RTN","KMPRUTL1",97,0)
 S:$D(DTOUT)!$D(DUOUT)!('$D(PACKAGE)) PACKAGE("^")=""
"RTN","KMPRUTL1",98,0)
 W !
"RTN","KMPRUTL1",99,0)
 Q
"RTN","KMPRUTL1",100,0)
 ;
"RTN","KMPRUTL1",101,0)
QUEBKG ;-- queue background job KMPR BACKGROUND DRIVER
"RTN","KMPRUTL1",102,0)
 N DA,DIK,FDA,ERROR,IEN,IEN1,IENZ,TEXT,X,Y,Z
"RTN","KMPRUTL1",103,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRUTL1",104,0)
 S TEXT="KMPR BACKGROUND DRIVER"
"RTN","KMPRUTL1",105,0)
 S IEN=$O(^DIC(19,"B",TEXT,0)) Q:'IEN
"RTN","KMPRUTL1",106,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPRUTL1",107,0)
 ; if already in file 19.2 then kill.
"RTN","KMPRUTL1",108,0)
 I IEN1 S DIK="^DIC(19.2,",DA=IEN1 D ^DIK
"RTN","KMPRUTL1",109,0)
 ; schedule for tomorrow@1am.
"RTN","KMPRUTL1",110,0)
 S FDA($J,19.2,"+1,",.01)=IEN
"RTN","KMPRUTL1",111,0)
 ; queued to run at what time - set to tomorrow@1am
"RTN","KMPRUTL1",112,0)
 S FDA($J,19.2,"+1,",2)=$$FMADD^XLFDT(DT,1)_".01"
"RTN","KMPRUTL1",113,0)
 ; rescheduling frequency.
"RTN","KMPRUTL1",114,0)
 S FDA($J,19.2,"+1,",6)="1D"
"RTN","KMPRUTL1",115,0)
 D UPDATE^DIE("","FDA($J)",.IENZ,"ERROR")
"RTN","KMPRUTL1",116,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPRUTL1",117,0)
 Q
"RTN","KMPRUTL3")
0^6^B17200127
"RTN","KMPRUTL3",1,0)
KMPRUTL3 ;SF/RAK - Resource Usage Monitor Utilities ;1/20/00  07:37
"RTN","KMPRUTL3",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;**1**;Dec 09, 1998
"RTN","KMPRUTL3",3,0)
 ;
"RTN","KMPRUTL3",4,0)
HRSDAYS(KMPRSDT,KMPREDT,KMPRKILL,KMPRRES) ;-- hours/days.
"RTN","KMPRUTL3",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL3",6,0)
 ; KMPRSDT.. Stat Date in internal fileman format.
"RTN","KMPRUTL3",7,0)
 ; KMPREDT.. End Date in internal fileman format.
"RTN","KMPRUTL3",8,0)
 ; KMPRKILL. Kill node after processing: 
"RTN","KMPRUTL3",9,0)
 ;              0 - do not kill.
"RTN","KMPRUTL3",10,0)
 ;              1 - kill
"RTN","KMPRUTL3",11,0)
 ; KMPRRES.. Array (passed by reference) containing days/hours info
"RTN","KMPRUTL3",12,0)
 ;           in format: KMPRRES(KMPRSDT,Node)=Data 
"RTN","KMPRUTL3",13,0)
 ;              Where Data equals:
"RTN","KMPRUTL3",14,0)
 ;              '^' Piece 1 - Prime Time Days
"RTN","KMPRUTL3",15,0)
 ;              '^' Piece 2 - Prime Time Hours
"RTN","KMPRUTL3",16,0)
 ;              '^' Piece 3 - Non-Prime Time Days
"RTN","KMPRUTL3",17,0)
 ;              '^' Piece 4 - Non-Prime Time Hours
"RTN","KMPRUTL3",18,0)
 ;           Example:
"RTN","KMPRUTL3",19,0)
 ;              KMPRRES(2990130,"999A01")=5^9^7^15
"RTN","KMPRUTL3",20,0)
 ;              KMPRRES(2990130,"999A02")=5^4^7^10
"RTN","KMPRUTL3",21,0)
 ;              KMPRRES(2990130,"999A03")=5^9^7^15
"RTN","KMPRUTL3",22,0)
 ;              KMPRRES(...,...)=...
"RTN","KMPRUTL3",23,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL3",24,0)
 ;
"RTN","KMPRUTL3",25,0)
 K KMPRRES
"RTN","KMPRUTL3",26,0)
 ;
"RTN","KMPRUTL3",27,0)
 Q:'$G(KMPRSDT)
"RTN","KMPRUTL3",28,0)
 Q:'$G(KMPREDT)
"RTN","KMPRUTL3",29,0)
 S KMPRKILL=+$G(KMPRKILL)
"RTN","KMPRUTL3",30,0)
 ;
"RTN","KMPRUTL3",31,0)
 N DATA,DATE,DAYS,HOURS,I,NODE
"RTN","KMPRUTL3",32,0)
 ;
"RTN","KMPRUTL3",33,0)
 D HOURS(KMPRSDT,KMPREDT,KMPRKILL,.HOURS) Q:'$D(HOURS)
"RTN","KMPRUTL3",34,0)
 S NODE=""
"RTN","KMPRUTL3",35,0)
 F  S NODE=$O(HOURS(NODE)) Q:NODE=""  D 
"RTN","KMPRUTL3",36,0)
 .S (DATE,DAYS,HOURS)=0
"RTN","KMPRUTL3",37,0)
 .F  S DATE=$O(HOURS(NODE,DATE)) Q:'DATE  D 
"RTN","KMPRUTL3",38,0)
 ..S DATA=HOURS(NODE,DATE)
"RTN","KMPRUTL3",39,0)
 ..; piece 1 - prime time.
"RTN","KMPRUTL3",40,0)
 ..; piece 2 - non-prime time.
"RTN","KMPRUTL3",41,0)
 ..F I=1,2 D 
"RTN","KMPRUTL3",42,0)
 ...; total hours.
"RTN","KMPRUTL3",43,0)
 ...S $P(HOURS,U,I)=$P(HOURS,U,I)+$P(DATA,U,I)
"RTN","KMPRUTL3",44,0)
 ...; if current day has hours then increment total days.
"RTN","KMPRUTL3",45,0)
 ...S:$P(DATA,U,I) $P(DAYS,U,I)=$P(DAYS,U,I)+1
"RTN","KMPRUTL3",46,0)
 .; back to NODE level.
"RTN","KMPRUTL3",47,0)
 .S KMPRRES(KMPRSDT,NODE)=$P(DAYS,U)_"^"_$P(HOURS,U)_"^"_$P(DAYS,U,2)_"^"_$P(HOURS,U,2)
"RTN","KMPRUTL3",48,0)
 Q
"RTN","KMPRUTL3",49,0)
 ;
"RTN","KMPRUTL3",50,0)
HOURS(KMPRSDT,KMPREDT,KMPRKILL,KMPRRES) ;-- determine prime time & non-prime time hours
"RTN","KMPRUTL3",51,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL3",52,0)
 ; KMPRSDT.. Stat Date in internal fileman format.
"RTN","KMPRUTL3",53,0)
 ; KMPREDT.. End Date in internal fileman format.
"RTN","KMPRUTL3",54,0)
 ; KMPRKILL. Kill node after processing: 
"RTN","KMPRUTL3",55,0)
 ;              0 - do not kill.
"RTN","KMPRUTL3",56,0)
 ;              1 - kill
"RTN","KMPRUTL3",57,0)
 ; KMPRRES.. Array (passed by reference) containing days/hours info
"RTN","KMPRUTL3",58,0)
 ;           in format: KMPRRES(Date,Node)=Data 
"RTN","KMPRUTL3",59,0)
 ;              Where Data equals:
"RTN","KMPRUTL3",60,0)
 ;              '^' Piece 1 - Prime Time Days
"RTN","KMPRUTL3",61,0)
 ;              '^' Piece 2 - Prime Time Hours
"RTN","KMPRUTL3",62,0)
 ;              '^' Piece 3 - Non-Prime Time Days
"RTN","KMPRUTL3",63,0)
 ;              '^' Piece 4 - Non-Prime Time Hours
"RTN","KMPRUTL3",64,0)
 ;           Example:
"RTN","KMPRUTL3",65,0)
 ;              KMPRRES(2990130,"999A01")=5^9^7^15
"RTN","KMPRUTL3",66,0)
 ;              KMPRRES(2990130,"999A02")=5^4^7^10
"RTN","KMPRUTL3",67,0)
 ;              KMPRRES(2990131,"999A01")=5^9^7^15
"RTN","KMPRUTL3",68,0)
 ;              KMPRRES(...,...)=...
"RTN","KMPRUTL3",69,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL3",70,0)
 ;
"RTN","KMPRUTL3",71,0)
 K KMPRRES
"RTN","KMPRUTL3",72,0)
 ;
"RTN","KMPRUTL3",73,0)
 Q:'$G(KMPRSDT)
"RTN","KMPRUTL3",74,0)
 Q:'$G(KMPREDT)
"RTN","KMPRUTL3",75,0)
 S KMPRKILL=+$G(KMPRKILL)
"RTN","KMPRUTL3",76,0)
 ;
"RTN","KMPRUTL3",77,0)
 N DATA,DATE,DOW,END,HOURS,HRS,I,NODE,PIECE
"RTN","KMPRUTL3",78,0)
 ; end date.
"RTN","KMPRUTL3",79,0)
 S END=KMPREDT
"RTN","KMPRUTL3",80,0)
 S DATE=KMPRSDT-.1,(DAYS,HOURS)=""
"RTN","KMPRUTL3",81,0)
 F  S DATE=$O(^XTMP("KMPR","HOURS",DATE)) Q:'DATE!(DATE>END)  D 
"RTN","KMPRUTL3",82,0)
 .Q:DATE<KMPRSDT!(DATE>END)
"RTN","KMPRUTL3",83,0)
 .S NODE="",DOW=$$DOW^XLFDT(DATE,1)
"RTN","KMPRUTL3",84,0)
 .; prime time (8am to 5pm).
"RTN","KMPRUTL3",85,0)
 .; if not saturday or sunday or holiday then prime time (piece 1).
"RTN","KMPRUTL3",86,0)
 .; if saturday or sunday then non-prime time (piece 2).
"RTN","KMPRUTL3",87,0)
 .S PIECE=$S(DOW'=0&(DOW'=6)&('$G(^HOLIDAY(DATE,0))):1,1:2)
"RTN","KMPRUTL3",88,0)
 .F  S NODE=$O(^XTMP("KMPR","HOURS",DATE,NODE)) Q:NODE=""  D
"RTN","KMPRUTL3",89,0)
 ..S DATA=$G(^XTMP("KMPR","HOURS",DATE,NODE)) Q:DATA=""
"RTN","KMPRUTL3",90,0)
 ..S (HOURS,HRS)=0
"RTN","KMPRUTL3",91,0)
 ..;
"RTN","KMPRUTL3",92,0)
 ..;*** times are offset by 1  so zero hour is in piece 1
"RTN","KMPRUTL3",93,0)
 ..;***                            one hour is in piece 2
"RTN","KMPRUTL3",94,0)
 ..;***                            two hour is in piece 3
"RTN","KMPRUTL3",95,0)
 ..;***                            etc.
"RTN","KMPRUTL3",96,0)
 ..; prime time.
"RTN","KMPRUTL3",97,0)
 ..F I=9:1:17 S HRS=HRS+$P(DATA,U,I)
"RTN","KMPRUTL3",98,0)
 ..S $P(HOURS,U,PIECE)=$P(HOURS,U,PIECE)+HRS
"RTN","KMPRUTL3",99,0)
 ..; non-prime time.
"RTN","KMPRUTL3",100,0)
 ..S HRS=0
"RTN","KMPRUTL3",101,0)
 ..F I=1:1:8,18:1:24 S HRS=HRS+$P(DATA,U,I)
"RTN","KMPRUTL3",102,0)
 ..S $P(HOURS,U,2)=$P(HOURS,U,2)+HRS
"RTN","KMPRUTL3",103,0)
 ..S KMPRRES(NODE,DATE)=HOURS
"RTN","KMPRUTL3",104,0)
 ..K:KMPRKILL ^XTMP("KMPR","HOURS",DATE,NODE)
"RTN","KMPRUTL3",105,0)
 ;
"RTN","KMPRUTL3",106,0)
 Q
"RTN","KMPRUTL3",107,0)
 ;
"RTN","KMPRUTL3",108,0)
PURGE(KMPRDDT,KMPRHRS) ;-- purge data in file #8971.1
"RTN","KMPRUTL3",109,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL3",110,0)
 ; KMPRDDT.. Date to begin purge in internal fileman format. Purge will
"RTN","KMPRUTL3",111,0)
 ;           reverse $order and delete entries 'EARLIER' than KMPRDDT.
"RTN","KMPRUTL3",112,0)
 ; KMPRHRS.. Purge Hours/Days data from ^XTMP("KMPR","HOURS". Entries
"RTN","KMPRUTL3",113,0)
 ;           'EARLIER' than KMPRDDT will be deleted.
"RTN","KMPRUTL3",114,0)
 ;           0 - do not purge hours/days data.
"RTN","KMPRUTL3",115,0)
 ;           1 - purge hours/days data.
"RTN","KMPRUTL3",116,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL3",117,0)
 ;
"RTN","KMPRUTL3",118,0)
 Q:'$G(KMPRDDT)
"RTN","KMPRUTL3",119,0)
 S KMPRHRS=+$G(KMPRHRS)
"RTN","KMPRUTL3",120,0)
 ;
"RTN","KMPRUTL3",121,0)
 N DA,DATE,DIK,IEN
"RTN","KMPRUTL3",122,0)
 W:'$D(ZTQUEUED) !,"Deleting old records..."
"RTN","KMPRUTL3",123,0)
 S DATE=KMPRDDT
"RTN","KMPRUTL3",124,0)
 F  S DATE=$O(^KMPR(8971.1,"B",DATE),-1) Q:'DATE!(DATE>KMPRDDT)  D 
"RTN","KMPRUTL3",125,0)
 .F IEN=0:0 S IEN=$O(^KMPR(8971.1,"B",DATE,IEN)) Q:'IEN  D 
"RTN","KMPRUTL3",126,0)
 ..; quit if not 'sent to cm database'.
"RTN","KMPRUTL3",127,0)
 ..Q:'$P($G(^KMPR(8971.1,IEN,0)),U,2)
"RTN","KMPRUTL3",128,0)
 ..; Delete entry.
"RTN","KMPRUTL3",129,0)
 ..S DA=IEN,DIK="^KMPR(8971.1," D ^DIK
"RTN","KMPRUTL3",130,0)
 ;
"RTN","KMPRUTL3",131,0)
 Q:'KMPRHRS
"RTN","KMPRUTL3",132,0)
 W:'$D(ZTQUEUED) !,"Deleting old entries from ^XTMP(""KMPR"",""HOURS""..."
"RTN","KMPRUTL3",133,0)
 S DATE=KMPRDDT
"RTN","KMPRUTL3",134,0)
 F  S DATE=$O(^XTMP("KMPR","HOURS",DATE),-1) Q:'DATE!(DATE>KMPRDDT)  D 
"RTN","KMPRUTL3",135,0)
 .K ^XTMP("KMPR","HOURS",DATE)
"RTN","KMPRUTL3",136,0)
 ;
"RTN","KMPRUTL3",137,0)
 Q
"VER")
8.0^22.0
**END**
**END**
