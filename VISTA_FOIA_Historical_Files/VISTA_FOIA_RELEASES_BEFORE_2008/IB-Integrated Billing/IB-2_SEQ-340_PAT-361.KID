Released IB*2*361 SEQ #340
Extracted from mail message
**KIDS**:IB*2.0*361^

**INSTALL NAME**
IB*2.0*361
"BLD",7089,0)
IB*2.0*361^INTEGRATED BILLING^0^3070627^y
"BLD",7089,1,0)
^^5^5^3070130^^
"BLD",7089,1,1,0)
This patch adds a new field for INSURED'S SEX to both the PATIENT file
"BLD",7089,1,2,0)
and the INSURANCE BUFFER file.  A post-init routine will auto-populate
"BLD",7089,1,3,0)
this field for existing insurance policies to the best of its ability.
"BLD",7089,1,4,0)
All screens that allow adding/editing/displaying of policy holder
"BLD",7089,1,5,0)
information will be modified to use the new field.
"BLD",7089,4,0)
^9.64PA^2^2
"BLD",7089,4,2,0)
2
"BLD",7089,4,2,2,0)
^9.641^2.312^1
"BLD",7089,4,2,2,2.312,0)
INSURANCE TYPE  (sub-file)
"BLD",7089,4,2,2,2.312,1,0)
^9.6411^3.12^1
"BLD",7089,4,2,2,2.312,1,3.12,0)
INSURED'S SEX
"BLD",7089,4,2,222)
y^n^p^^^^n^^n
"BLD",7089,4,2,224)

"BLD",7089,4,355.33,0)
355.33
"BLD",7089,4,355.33,2,0)
^9.641^355.33^1
"BLD",7089,4,355.33,2,355.33,0)
INSURANCE BUFFER  (File-top level)
"BLD",7089,4,355.33,2,355.33,1,0)
^9.6411^60.13^1
"BLD",7089,4,355.33,2,355.33,1,60.13,0)
INSURED'S SEX
"BLD",7089,4,355.33,222)
y^n^p^^^^n^^n
"BLD",7089,4,355.33,224)

"BLD",7089,4,"APDD",2,2.312)

"BLD",7089,4,"APDD",2,2.312,3.12)

"BLD",7089,4,"APDD",355.33,355.33)

"BLD",7089,4,"APDD",355.33,355.33,60.13)

"BLD",7089,4,"B",2,2)

"BLD",7089,4,"B",355.33,355.33)

"BLD",7089,6.3)
9
"BLD",7089,"ABPKG")
n
"BLD",7089,"INID")
^y
"BLD",7089,"INIT")
EN^IB20P361
"BLD",7089,"KRN",0)
^9.67PA^8989.52^19
"BLD",7089,"KRN",.4,0)
.4
"BLD",7089,"KRN",.401,0)
.401
"BLD",7089,"KRN",.402,0)
.402
"BLD",7089,"KRN",.403,0)
.403
"BLD",7089,"KRN",.5,0)
.5
"BLD",7089,"KRN",.84,0)
.84
"BLD",7089,"KRN",3.6,0)
3.6
"BLD",7089,"KRN",3.8,0)
3.8
"BLD",7089,"KRN",9.2,0)
9.2
"BLD",7089,"KRN",9.8,0)
9.8
"BLD",7089,"KRN",9.8,"NM",0)
^9.68A^15^15
"BLD",7089,"KRN",9.8,"NM",1,0)
IB20P361^^0^B7523156
"BLD",7089,"KRN",9.8,"NM",2,0)
IBBFAPI^^0^B38433259
"BLD",7089,"KRN",9.8,"NM",3,0)
IBCBB^^0^B14809145
"BLD",7089,"KRN",9.8,"NM",4,0)
IBCEF^^0^B53271927
"BLD",7089,"KRN",9.8,"NM",5,0)
IBCNBCD^^0^B35493538
"BLD",7089,"KRN",9.8,"NM",6,0)
IBCNBEE^^0^B44602878
"BLD",7089,"KRN",9.8,"NM",7,0)
IBCNBMI^^0^B54212603
"BLD",7089,"KRN",9.8,"NM",8,0)
IBCNEBF^^0^B27574081
"BLD",7089,"KRN",9.8,"NM",9,0)
IBCNEHLQ^^0^B42736526
"BLD",7089,"KRN",9.8,"NM",10,0)
IBCNSM32^^0^B28247845
"BLD",7089,"KRN",9.8,"NM",11,0)
IBCNSP1^^0^B17268693
"BLD",7089,"KRN",9.8,"NM",12,0)
IBCVA0^^0^B13013773
"BLD",7089,"KRN",9.8,"NM",13,0)
IBECEA35^^0^B9274826
"BLD",7089,"KRN",9.8,"NM",14,0)
IBBDOC^^0^B671934
"BLD",7089,"KRN",9.8,"NM",15,0)
IBCNRDV^^0^B65860108
"BLD",7089,"KRN",9.8,"NM","B","IB20P361",1)

"BLD",7089,"KRN",9.8,"NM","B","IBBDOC",14)

"BLD",7089,"KRN",9.8,"NM","B","IBBFAPI",2)

"BLD",7089,"KRN",9.8,"NM","B","IBCBB",3)

"BLD",7089,"KRN",9.8,"NM","B","IBCEF",4)

"BLD",7089,"KRN",9.8,"NM","B","IBCNBCD",5)

"BLD",7089,"KRN",9.8,"NM","B","IBCNBEE",6)

"BLD",7089,"KRN",9.8,"NM","B","IBCNBMI",7)

"BLD",7089,"KRN",9.8,"NM","B","IBCNEBF",8)

"BLD",7089,"KRN",9.8,"NM","B","IBCNEHLQ",9)

"BLD",7089,"KRN",9.8,"NM","B","IBCNRDV",15)

"BLD",7089,"KRN",9.8,"NM","B","IBCNSM32",10)

"BLD",7089,"KRN",9.8,"NM","B","IBCNSP1",11)

"BLD",7089,"KRN",9.8,"NM","B","IBCVA0",12)

"BLD",7089,"KRN",9.8,"NM","B","IBECEA35",13)

"BLD",7089,"KRN",19,0)
19
"BLD",7089,"KRN",19.1,0)
19.1
"BLD",7089,"KRN",101,0)
101
"BLD",7089,"KRN",409.61,0)
409.61
"BLD",7089,"KRN",771,0)
771
"BLD",7089,"KRN",870,0)
870
"BLD",7089,"KRN",8989.51,0)
8989.51
"BLD",7089,"KRN",8989.52,0)
8989.52
"BLD",7089,"KRN",8994,0)
8994
"BLD",7089,"KRN","B",.4,.4)

"BLD",7089,"KRN","B",.401,.401)

"BLD",7089,"KRN","B",.402,.402)

"BLD",7089,"KRN","B",.403,.403)

"BLD",7089,"KRN","B",.5,.5)

"BLD",7089,"KRN","B",.84,.84)

"BLD",7089,"KRN","B",3.6,3.6)

"BLD",7089,"KRN","B",3.8,3.8)

"BLD",7089,"KRN","B",9.2,9.2)

"BLD",7089,"KRN","B",9.8,9.8)

"BLD",7089,"KRN","B",19,19)

"BLD",7089,"KRN","B",19.1,19.1)

"BLD",7089,"KRN","B",101,101)

"BLD",7089,"KRN","B",409.61,409.61)

"BLD",7089,"KRN","B",771,771)

"BLD",7089,"KRN","B",870,870)

"BLD",7089,"KRN","B",8989.51,8989.51)

"BLD",7089,"KRN","B",8989.52,8989.52)

"BLD",7089,"KRN","B",8994,8994)

"BLD",7089,"QUES",0)
^9.62^^
"BLD",7089,"REQB",0)
^9.611^14^14
"BLD",7089,"REQB",1,0)
IB*2.0*52^2
"BLD",7089,"REQB",2,0)
IB*2.0*103^2
"BLD",7089,"REQB",3,0)
IB*2.0*133^2
"BLD",7089,"REQB",4,0)
IB*2.0*240^2
"BLD",7089,"REQB",5,0)
IB*2.0*251^2
"BLD",7089,"REQB",6,0)
IB*2.0*271^2
"BLD",7089,"REQB",7,0)
IB*2.0*296^2
"BLD",7089,"REQB",8,0)
IB*2.0*300^2
"BLD",7089,"REQB",9,0)
IB*2.0*317^2
"BLD",7089,"REQB",10,0)
IB*2.0*327^2
"BLD",7089,"REQB",11,0)
IB*2.0*345^2
"BLD",7089,"REQB",12,0)
IB*2.0*356^2
"BLD",7089,"REQB",13,0)
IB*2.0*286^2
"BLD",7089,"REQB",14,0)
IB*2.0*231^2
"BLD",7089,"REQB","B","IB*2.0*103",2)

"BLD",7089,"REQB","B","IB*2.0*133",3)

"BLD",7089,"REQB","B","IB*2.0*231",14)

"BLD",7089,"REQB","B","IB*2.0*240",4)

"BLD",7089,"REQB","B","IB*2.0*251",5)

"BLD",7089,"REQB","B","IB*2.0*271",6)

"BLD",7089,"REQB","B","IB*2.0*286",13)

"BLD",7089,"REQB","B","IB*2.0*296",7)

"BLD",7089,"REQB","B","IB*2.0*300",8)

"BLD",7089,"REQB","B","IB*2.0*317",9)

"BLD",7089,"REQB","B","IB*2.0*327",10)

"BLD",7089,"REQB","B","IB*2.0*345",11)

"BLD",7089,"REQB","B","IB*2.0*356",12)

"BLD",7089,"REQB","B","IB*2.0*52",1)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
2.0^IB
"FIA",2,2)
1
"FIA",2,2.312)
1
"FIA",2,2.312,3.12)

"FIA",355.33)
INSURANCE BUFFER
"FIA",355.33,0)
^IBA(355.33,
"FIA",355.33,0,0)
355.33DA
"FIA",355.33,0,1)
y^n^p^^^^n^^n
"FIA",355.33,0,10)

"FIA",355.33,0,11)

"FIA",355.33,0,"RLRO")

"FIA",355.33,0,"VR")
2.0^IB
"FIA",355.33,355.33)
1
"FIA",355.33,355.33,60.13)

"INIT")
EN^IB20P361
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
361^3070627
"PKG",200,22,1,"PAH",1,1,0)
^^5^5^3070627
"PKG",200,22,1,"PAH",1,1,1,0)
This patch adds a new field for INSURED'S SEX to both the PATIENT file
"PKG",200,22,1,"PAH",1,1,2,0)
and the INSURANCE BUFFER file.  A post-init routine will auto-populate
"PKG",200,22,1,"PAH",1,1,3,0)
this field for existing insurance policies to the best of its ability.
"PKG",200,22,1,"PAH",1,1,4,0)
All screens that allow adding/editing/displaying of policy holder
"PKG",200,22,1,"PAH",1,1,5,0)
information will be modified to use the new field.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","IB20P361")
0^1^B7523156^n/a
"RTN","IB20P361",1,0)
IB20P361 ;BP/TJH - Preinit routine for IB*2.0*361 ; 12/14/2006
"RTN","IB20P361",2,0)
 ;;2.0;INTEGRATED BILLING;**361**;21-MAR-94;Build 9
"RTN","IB20P361",3,0)
 ;
"RTN","IB20P361",4,0)
 Q
"RTN","IB20P361",5,0)
EN ; entry point
"RTN","IB20P361",6,0)
 D ERRCD
"RTN","IB20P361",7,0)
 D SEXFILL
"RTN","IB20P361",8,0)
 Q
"RTN","IB20P361",9,0)
 ;
"RTN","IB20P361",10,0)
ERRCD ; add new error codes to 350.8
"RTN","IB20P361",11,0)
 N DO,DA,DIC,DIK,IBA,IBC,IBT,IBX,X,Y
"RTN","IB20P361",12,0)
 ;
"RTN","IB20P361",13,0)
 S IBC=0,(DIC,DIK)="^IBE(350.8,",DIC(0)=""
"RTN","IB20P361",14,0)
 F IBX=1:1 S IBT=$P($T(TXT+IBX),";",3) Q:'$L(IBT)  D
"RTN","IB20P361",15,0)
 . Q:$D(^IBE(350.8,"AC",$P(IBT,"^",3)))  ;  already on file
"RTN","IB20P361",16,0)
 . K DO
"RTN","IB20P361",17,0)
 . S X=$P(IBT,"^")
"RTN","IB20P361",18,0)
 . D FILE^DICN I Y>0 S ^IBE(350.8,+Y,0)=IBT,DA=+Y,IBC=IBC+1 D IX^DIK
"RTN","IB20P361",19,0)
 ;
"RTN","IB20P361",20,0)
 S IBA(2)="     "_IBC_" entries added to 350.8"
"RTN","IB20P361",21,0)
 S (IBA(1),IBA(3))=""
"RTN","IB20P361",22,0)
 ;
"RTN","IB20P361",23,0)
ERRCDX ;
"RTN","IB20P361",24,0)
 D MES^XPDUTL(.IBA)
"RTN","IB20P361",25,0)
 Q
"RTN","IB20P361",26,0)
 ;
"RTN","IB20P361",27,0)
SEXFILL ; fill INSURED'S SEX field with value where possible
"RTN","IB20P361",28,0)
 D BMES^XPDUTL(" Starting update of new INSURED'S SEX field for all existing policies.")
"RTN","IB20P361",29,0)
 D MES^XPDUTL(" . . . . . . .")
"RTN","IB20P361",30,0)
 N IBDFN,IBDA,IBVTSX,IBSPSX,IBWHOSE,START,PCTR,END,TT,MIN,SEC,MSG
"RTN","IB20P361",31,0)
T1 S START=$H,PCTR=0
"RTN","IB20P361",32,0)
 S IBDFN=0
"RTN","IB20P361",33,0)
 F  S IBDFN=$O(^DPT(IBDFN)) Q:'IBDFN  D
"RTN","IB20P361",34,0)
 . S PCTR=PCTR+1
"RTN","IB20P361",35,0)
 . Q:'$D(^DPT(IBDFN,.312))  ; no insurance to process
"RTN","IB20P361",36,0)
 . S IBVTSX=$P(^DPT(IBDFN,0),U,2) ; get veteran's sex
"RTN","IB20P361",37,0)
 . S IBSPSX=$TR(IBVTSX,"MF","FM") ; compute a spouse's sex in case it is needed
"RTN","IB20P361",38,0)
 . S IBDA=0
"RTN","IB20P361",39,0)
 . F  S IBDA=$O(^DPT(IBDFN,.312,IBDA)) Q:'IBDA  D
"RTN","IB20P361",40,0)
 .. S IBWHOSE=$P($G(^DPT(IBDFN,.312,IBDA,0)),U,6)
"RTN","IB20P361",41,0)
 .. Q:IBWHOSE=""  Q:'("sv"[IBWHOSE)  ; can't deal with anything but vet & spouse
"RTN","IB20P361",42,0)
 .. S $P(^DPT(IBDFN,.312,IBDA,3),U,12)=$S(IBWHOSE="v":IBVTSX,IBWHOSE="s":IBSPSX)
"RTN","IB20P361",43,0)
T2 S END=$H
"RTN","IB20P361",44,0)
 D BMES^XPDUTL(" INSURED'S SEX field update complete.")
"RTN","IB20P361",45,0)
 S TT=$P(END,",",2)-$P(START,",",2),MIN=TT\60,SEC=TT#60
"RTN","IB20P361",46,0)
 S MSG=" "_$FN(PCTR,",")_" patient records were processed in "_MIN_" minutes and "_SEC_" seconds."
"RTN","IB20P361",47,0)
 D BMES^XPDUTL(MSG)
"RTN","IB20P361",48,0)
 Q
"RTN","IB20P361",49,0)
TXT ; text of error messages to add
"RTN","IB20P361",50,0)
 ;;IB261^Primary insurance subscriber is missing INSURED'S SEX^IB261^1^1
"RTN","IB20P361",51,0)
 ;;IB262^Secondary insurance subscriber is missing INSURED'S SEX^IB262^1^1
"RTN","IB20P361",52,0)
 ;;IB263^Tertiary insurance subscriber is missing INSURED'S SEX^IB263^1^1
"RTN","IBBDOC")
0^14^B671934^B657364
"RTN","IBBDOC",1,0)
IBBDOC ;OAK/ELZ - APIS FOR OTHER PACKAGES FOR PFSS - DOCUMENT ;5-AUG-2004
"RTN","IBBDOC",2,0)
 ;;2.0;INTEGRATED BILLING;**267,260,286,361**;21-MAR-94;Build 9
"RTN","IBBDOC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBBDOC",4,0)
 ;
"RTN","IBBDOC",5,0)
 ; Documents the calls to the routine IBBAPI.
"RTN","IBBDOC",6,0)
 ;
"RTN","IBBDOC",7,0)
INSUR ;(DFN,IBDT,IBSTAT,IBR,IBFLDS)
"RTN","IBBDOC",8,0)
 ; Function to return patient insurance information
"RTN","IBBDOC",9,0)
 ; --Input:
"RTN","IBBDOC",10,0)
 ;   DFN    = patient
"RTN","IBBDOC",11,0)
 ;   IBDT   = date insured (optional - default is today's date)
"RTN","IBBDOC",12,0)
 ;   IBSTAT = Insurance Status filter (combinable based on groups below)
"RTN","IBBDOC",13,0)
 ;      Group 1
"RTN","IBBDOC",14,0)
 ;          A = Inactive included (Default is active only)
"RTN","IBBDOC",15,0)
 ;      Group 2
"RTN","IBBDOC",16,0)
 ;          R = Not reimbursable included (Default is reimbursable only)
"RTN","IBBDOC",17,0)
 ;          B = Indemnity included (Default is not included)
"RTN","IBBDOC",18,0)
 ;      Group 3
"RTN","IBBDOC",19,0)
 ;          P = Prescription coverage required (Default is all coverages)
"RTN","IBBDOC",20,0)
 ;          O = Outpatient coverage required (Default is all coverages)
"RTN","IBBDOC",21,0)
 ;          I = Inpatient coverage only (Default is all coverages)
"RTN","IBBDOC",22,0)
 ;
"RTN","IBBDOC",23,0)
 ;   IBR    = Array to return insurance information - passed by reference
"RTN","IBBDOC",24,0)
 ;   IBFLDS = List of fields to return (1-22) in a comma separated list or "*" for all
"RTN","IBBDOC",25,0)
 ;
"RTN","IBBDOC",26,0)
 ; --Output:
"RTN","IBBDOC",27,0)
 ;   -1     = error occurred (error message passed back in
"RTN","IBBDOC",28,0)
 ;            IBR("IBBAPI","INSUR","ERROR",x) where x is error number
"RTN","IBBDOC",29,0)
 ;            between 101 & 111
"RTN","IBBDOC",30,0)
 ;    0     = No insurance found based on parameters
"RTN","IBBDOC",31,0)
 ;    1     = Insurance found
"RTN","IBBDOC",32,0)
 ;
"RTN","IBBDOC",33,0)
 ;
"RTN","IBBDOC",34,0)
CIDC  ; (DFN)
"RTN","IBBDOC",35,0)
 ; Input:    DFN for the patient in question.
"RTN","IBBDOC",36,0)
 ; Output:   1 = Ask CIDC questions for the specified patient
"RTN","IBBDOC",37,0)
 ;           0 = Don't ask CIDC questions for the specified patient
"RTN","IBBDOC",38,0)
 ;
"RTN","IBBDOC",39,0)
 ; The API will evaluate both a CIDC switch and the patient's insurance
"RTN","IBBDOC",40,0)
 ; to determine if the CIDC questions should be asked.
"RTN","IBBDOC",41,0)
 ;
"RTN","IBBDOC",42,0)
 ; The switch will have three internal values:
"RTN","IBBDOC",43,0)
 ;    0 = Don't ask any patients
"RTN","IBBDOC",44,0)
 ;    1 = Ask for patients only with active billable insurance
"RTN","IBBDOC",45,0)
 ;    2 = Ask for all patients
"RTN","IBBDOC",46,0)
 ;
"RTN","IBBDOC",47,0)
 ;
"RTN","IBBDOC",48,0)
SWSTAT ; ()
"RTN","IBBDOC",49,0)
 ; Returns the current status of the PFSS On/Off Switch
"RTN","IBBDOC",50,0)
 ;
"RTN","IBBDOC",51,0)
 ; Output:   <switch_status>^<status_date/time>
"RTN","IBBDOC",52,0)
 ; 
"RTN","IBBDOC",53,0)
 ; <switch_status> will be one of the following:
"RTN","IBBDOC",54,0)
 ;    0 = OFF
"RTN","IBBDOC",55,0)
 ;    1 = ON
"RTN","IBBDOC",56,0)
 ;
"RTN","IBBDOC",57,0)
GETACCT ; (IBBDFN,IBBARFN,IBBEVENT,IBBAPLR,IBBPV1,IBBPV2,IBBPR1,IBBDG1,IBBZCL,IBBDIV,IBBRAIEN,IBBSURG)
"RTN","IBBDOC",58,0)
 ; Pass data to IBB for account/visit (ADT) messaging.
"RTN","IBBDOC",59,0)
 ;
"RTN","IBBDOC",60,0)
 ; Input:
"RTN","IBBDOC",61,0)
 ; IBBDFN   = Patient; IEN to file #2 [required]
"RTN","IBBDOC",62,0)
 ; IBBARFN  = Account Reference; 
"RTN","IBBDOC",63,0)
 ;            IEN to file #375 or null [required]
"RTN","IBBDOC",64,0)
 ; IBBEVENT = HL7 Event Code; e.g., "A04" [required]
"RTN","IBBDOC",65,0)
 ; IBBAPLR  = Calling Application; 
"RTN","IBBDOC",66,0)
 ;            <routine> or <tag>_;_<routine> 
"RTN","IBBDOC",67,0)
 ; IBBPV1   = array for PV1 segment data [required]
"RTN","IBBDOC",68,0)
 ;   IBBPV1(2)  - Patient Class (O=Outpatient;I=Inpatient)
"RTN","IBBDOC",69,0)
 ;   IBBPV1(3)  - IEN to file #44, or "FEE BASIS"
"RTN","IBBDOC",70,0)
 ;   IBBPV1(4)  - Appointment Type; IEN to file #409.1
"RTN","IBBDOC",71,0)
 ;   IBBPV1(7)  - Attending Physician; IEN to file #200
"RTN","IBBDOC",72,0)
 ;   IBBVP1(9)  - Consulting Physician; IEN to file #200
"RTN","IBBDOC",73,0)
 ;   IBBPV1(10) - Purpose of Visit; 
"RTN","IBBDOC",74,0)
 ;                (Scheduling: 1=C&P;2=10-10;3=SV;4=UV)
"RTN","IBBDOC",75,0)
 ;   IBBPV1(17) - Admitting Physician or Surgeon; 
"RTN","IBBDOC",76,0)
 ;                IEN to file #200
"RTN","IBBDOC",77,0)
 ;   IBBPV1(18) - Primary Stop Code; IEN to file #40.7
"RTN","IBBDOC",78,0)
 ;   IBBPV1(25) - Check-In Date/Time (Scheduling)
"RTN","IBBDOC",79,0)
 ;   IBBPV1(41) - Credit Stop Code; IEN to file #40.7
"RTN","IBBDOC",80,0)
 ;   IBBPV1(44) - Admit Date/Time
"RTN","IBBDOC",81,0)
 ;   IBBPV1(45) - Check-Out Date/Time (Scheduling)
"RTN","IBBDOC",82,0)
 ;   IBBPV1(50) - Prescription #; IEN to file #52 (Pharmacy)
"RTN","IBBDOC",83,0)
 ;   IBBPV1(52) - Other Provider; IEN to file #200
"RTN","IBBDOC",84,0)
 ; IBBPV2   = array for PV2 segment data
"RTN","IBBDOC",85,0)
 ;   IBBPV2(7)  - Eligibility of Visit; IEN to file #8.1
"RTN","IBBDOC",86,0)
 ;   IBBPV2(8)  - Expected Admit/Visit Date/Time
"RTN","IBBDOC",87,0)
 ;   IBBPV2(24) - Appointment Status; 
"RTN","IBBDOC",88,0)
 ;                (Scheduling:
"RTN","IBBDOC",89,0)
 ;                 R=Scheduled/Kept;I=Inpatient;
"RTN","IBBDOC",90,0)
 ;                 NS=No-Show;NSR=No-Show, Rescheduled;
"RTN","IBBDOC",91,0)
 ;                 CP=Cancelled by Patient;
"RTN","IBBDOC",92,0)
 ;                 CPR=Cancelled by Patient, Rescheduled;
"RTN","IBBDOC",93,0)
 ;                 CC=Cancelled by Clinic;
"RTN","IBBDOC",94,0)
 ;                 CCR=Cancelled by Clinic, Rescheduled;
"RTN","IBBDOC",95,0)
 ;                 NT=No Action Taken)
"RTN","IBBDOC",96,0)
 ;   IBBPV2(46) - Date Appointment Made (Scheduling)
"RTN","IBBDOC",97,0)
 ; IBBPR1   = array for PR1 segment data
"RTN","IBBDOC",98,0)
 ;   IBBPR1(3)  - Procedure; IEN to file #81
"RTN","IBBDOC",99,0)
 ;   IBBPR1(4)  - Procedure; free text
"RTN","IBBDOC",100,0)
 ;   IBBPR1(5)  - Procedure Date/Time
"RTN","IBBDOC",101,0)
 ;   IBBPR1(6)  - Functional Type;
"RTN","IBBDOC",102,0)
 ;                (Prosthetics: 
"RTN","IBBDOC",103,0)
 ;                 O=Home Oxygen;P=Purchasing;
"RTN","IBBDOC",104,0)
 ;                 I=Stock Issue)
"RTN","IBBDOC",105,0)
 ;                (Radiology: 
"RTN","IBBDOC",106,0)
 ;                 ANI=Angio/Neuro/Interventional;
"RTN","IBBDOC",107,0)
 ;                 CARD=Cardiology Studies;CT=CT Scan;
"RTN","IBBDOC",108,0)
 ;                 RAD=General Radiology;
"RTN","IBBDOC",109,0)
 ;                 MRI=Magnetic Resonance Imaging;
"RTN","IBBDOC",110,0)
 ;                 MAM=Mammography;NM=Nuclear Medicine;
"RTN","IBBDOC",111,0)
 ;                 US=Ultrasound;VAS=Vascular Lab)
"RTN","IBBDOC",112,0)
 ;   IBBPR1(11) - Surgeon; IEN to file #200
"RTN","IBBDOC",113,0)
 ;   IBBPR1(16) - <modifier>;<modifier>;<modifier>;... 
"RTN","IBBDOC",114,0)
 ;                where each <modifier> is an IEN to file #81.3
"RTN","IBBDOC",115,0)
 ; IBBDG1   = array for DG1 segment data
"RTN","IBBDOC",116,0)
 ;   IBBDG1(n,3) - Diagnosis; IEN to file #80
"RTN","IBBDOC",117,0)
 ;   IBBDG1(1,4) - Diagnosis; free text; only one allowed
"RTN","IBBDOC",118,0)
 ;   IBBDG1(n,6) - Diagnosis Type; (A=Admitting;
"RTN","IBBDOC",119,0)
 ;                                  W=Working;
"RTN","IBBDOC",120,0)
 ;                                  D=Discharge;
"RTN","IBBDOC",121,0)
 ;                                  F=Final)
"RTN","IBBDOC",122,0)
 ; IBBZCL   = array for ZCL segment data
"RTN","IBBDOC",123,0)
 ;   IBBZCL(n,2) - Classification Type; 
"RTN","IBBDOC",124,0)
 ;                 (1=AO;2=IR;3=SC;4=EC;5=MST;6=HNC;
"RTN","IBBDOC",125,0)
 ;                  7=CV;8=SHAD)
"RTN","IBBDOC",126,0)
 ;   IBBZCL(n,3) - Classification Value; (1=YES;0=NO)
"RTN","IBBDOC",127,0)
 ; IBBDIV   = IEN to file #40.8
"RTN","IBBDOC",128,0)
 ; IBBRAIEN = IEN to file #75.1
"RTN","IBBDOC",129,0)
 ; IBBSURG  = array for special Surgery data
"RTN","IBBDOC",130,0)
 ;   IBBSURG(1) - Surgical Case #; IEN to file #130
"RTN","IBBDOC",131,0)
 ;   IBBSURG(2) - Surgical Specialty; IEN to file #45.3
"RTN","IBBDOC",132,0)
 ;
"RTN","IBBDOC",133,0)
 ; Returns the pointer to the PFSS ACCOUNT file (#375) where 
"RTN","IBBDOC",134,0)
 ; all application input data is stored.
"RTN","IBBDOC",135,0)
 ;
"RTN","IBBDOC",136,0)
 ; Output:  IEN to file #375, or 0, if unsuccessful
"RTN","IBBDOC",137,0)
 ; 
"RTN","IBBDOC",138,0)
GETCHGID ; ()
"RTN","IBBDOC",139,0)
 ; Returns a Unique Charge ID.
"RTN","IBBDOC",140,0)
 ;
"RTN","IBBDOC",141,0)
 ; Output: 1 + current value of field #2 of file #372.
"RTN","IBBDOC",142,0)
 ;
"RTN","IBBDOC",143,0)
CHARGE ; (IBBDFN,IBBARFN,IBBCTYPE,IBBUCID,IBBFT1,IBBPR1,IBBDG1,IBBZCL,IBBRXE,IBBORIEN,IBBPROS)
"RTN","IBBDOC",144,0)
 ; Pass data to IBB for charge (DFT) messaging.
"RTN","IBBDOC",145,0)
 ;
"RTN","IBBDOC",146,0)
 ; Input:
"RTN","IBBDOC",147,0)
 ; IBBDFN   = Patient; IEN to file #2 [required]
"RTN","IBBDOC",148,0)
 ; IBBARFN  = Account Reference; IEN to file #375 [required]
"RTN","IBBDOC",149,0)
 ; IBBCTYPE = Charge Type; (CG=debit;CD=credit) [required]
"RTN","IBBDOC",150,0)
 ; IBBUCID  = Unique Charge ID [required]
"RTN","IBBDOC",151,0)
 ; IBBFT1   = array for FT1 segment data [required]
"RTN","IBBDOC",152,0)
 ;   IBBFT1(4)  - Transaction Date/Time
"RTN","IBBDOC",153,0)
 ;   IBBFT1(7)  - Pharmacy Service Code
"RTN","IBBDOC",154,0)
 ;   IBBFT1(10) - Transaction Quantity
"RTN","IBBDOC",155,0)
 ;   IBBFT1(13) - Department Code
"RTN","IBBDOC",156,0)
 ;   IBBFT1(16) - Patient Location; IEN to file #44
"RTN","IBBDOC",157,0)
 ;   IBBFT1(18) - Patient Status; (Pharmacy: 1=Rx Copay Exempt;
"RTN","IBBDOC",158,0)
 ;                                           0=Not Exempt)
"RTN","IBBDOC",159,0)
 ;   IBBFT1(20) - Rendering Provider; IEN to file #200
"RTN","IBBDOC",160,0)
 ;   IBBFT1(21) - Ordering Provider; IEN to file #200
"RTN","IBBDOC",161,0)
 ;   IBBFT1(22) - Unit Cost
"RTN","IBBDOC",162,0)
 ;   IBBFT1(29) - <NDC>;<generic_name>
"RTN","IBBDOC",163,0)
 ;   IBBFT1(31) - Transaction Type; 
"RTN","IBBDOC",164,0)
 ;                (Pharmacy: 1=PSO NSC Rx Copay;
"RTN","IBBDOC",165,0)
 ;                           2=PSO SC Rx Copay;
"RTN","IBBDOC",166,0)
 ;                           3=PSO NSC Rx Copay Cancel
"RTN","IBBDOC",167,0)
 ;                           4=PSO NSC Rx Copay Update
"RTN","IBBDOC",168,0)
 ;                           5=PSO SC Rx Copay Cancel
"RTN","IBBDOC",169,0)
 ;                           6=PSO SC Rx Copay Update)
"RTN","IBBDOC",170,0)
 ; IBBPR1   = array for PR1 segment data;
"RTN","IBBDOC",171,0)
 ;            (required except Pharmacy)
"RTN","IBBDOC",172,0)
 ;   IBBPR1(3)    - Procedure; IEN to file #81
"RTN","IBBDOC",173,0)
 ;   IBBPR1(4)    - Procedure; free text
"RTN","IBBDOC",174,0)
 ;   IBBPR1(5)    - Procedure Date/Time
"RTN","IBBDOC",175,0)
 ;   IBBPR1(6)    - Functional Type; 
"RTN","IBBDOC",176,0)
 ;                  (Prosthetics: O=Home Oxygen;
"RTN","IBBDOC",177,0)
 ;                                P=Purchasing;
"RTN","IBBDOC",178,0)
 ;                                I=Stock Issue)
"RTN","IBBDOC",179,0)
 ;   IBBPR1(11,1) - Surgeon; IEN to file #200
"RTN","IBBDOC",180,0)
 ;   IBBPR1(11,2) - Attending Surgeon; IEN to file #200
"RTN","IBBDOC",181,0)
 ;   IBBPR1(16)   - <modifier>;<modifier>;<modifier>;...;
"RTN","IBBDOC",182,0)
 ;                  each <modifier> is an IEN to file #81.3
"RTN","IBBDOC",183,0)
 ; IBBDG1   = array for DG1 segment data
"RTN","IBBDOC",184,0)
 ;   IBBDG1(n,3) - Diagnosis; IEN to file #80
"RTN","IBBDOC",185,0)
 ;   IBBDG1(n,6) - Diagnosis Type; (A=Admitting;W=Working;
"RTN","IBBDOC",186,0)
 ;                                  D=Discharge;F=Final)
"RTN","IBBDOC",187,0)
 ; IBBZCL   = array for ZCL segment data
"RTN","IBBDOC",188,0)
 ;   IBBZCL(n,2) - Classification Type; 
"RTN","IBBDOC",189,0)
 ;                 (1=AO;2=IR;3=SC;4=EC;5=MST;
"RTN","IBBDOC",190,0)
 ;                  6=HNC;7=CV;8=SHAD)
"RTN","IBBDOC",191,0)
 ;   IBBZCL(n,3) - Classification Value; (1=YES;0=NO)
"RTN","IBBDOC",192,0)
 ; IBBRXE   = data for RXE segment data (Pharmacy only)
"RTN","IBBDOC",193,0)
 ;   IBBRXE(1)  - <quantity>_;_<days_supply>
"RTN","IBBDOC",194,0)
 ;   IBBRXE(17) - Refills Dispensed
"RTN","IBBDOC",195,0)
 ;   IBBRXE(18) - Release Date/Time
"RTN","IBBDOC",196,0)
 ;   IBBRXE(31) - DEA, Special Handling codes
"RTN","IBBDOC",197,0)
 ; IBBPROS  = array for special Prosthetics data
"RTN","IBBDOC",198,0)
 ;   IBBPROS(1) - Vendor; IEN to file #440
"RTN","IBBDOC",199,0)
 ;   IBBPROS(2) - OBL#
"RTN","IBBDOC",200,0)
 ;
"RTN","IBBDOC",201,0)
 ; Returns success indicator.
"RTN","IBBDOC",202,0)
 ;
"RTN","IBBDOC",203,0)
 ; Output: 1, if successful; 0 otherwise
"RTN","IBBDOC",204,0)
 ;
"RTN","IBBDOC",205,0)
SETACCT ; (IBBDFN,HLMTIENS)
"RTN","IBBDOC",206,0)
 ; Store visit/account # from external billing system in PFSS
"RTN","IBBDOC",207,0)
 ; ACCOUNT record; the file #375 record is found based on data
"RTN","IBBDOC",208,0)
 ; contained in the HL7 message referenced by HLMTIENS.
"RTN","IBBDOC",209,0)
 ; Most of the ADT messages involved originate in VistA and 
"RTN","IBBDOC",210,0)
 ; are returned by the external billing system with visit#
"RTN","IBBDOC",211,0)
 ; attached.
"RTN","IBBDOC",212,0)
 ; Some ADT-A01 messages originate in the external billing
"RTN","IBBDOC",213,0)
 ; system; these cause a new record to be created in file #375.
"RTN","IBBDOC",214,0)
 ; 
"RTN","IBBDOC",215,0)
 ; Input:
"RTN","IBBDOC",216,0)
 ; IBBDFN   = Patient; IEN to file #2 [required]
"RTN","IBBDOC",217,0)
 ; HLMTIENS = HL7 Message (standard VistA HL7 variable); 
"RTN","IBBDOC",218,0)
 ;            IEN to file #773 [required]
"RTN","IBBDOC",219,0)
 ;
"RTN","IBBDOC",220,0)
 ; Returns PFSS Account Reference.
"RTN","IBBDOC",221,0)
 ;
"RTN","IBBDOC",222,0)
 ; Output: IEN to file #375
"RTN","IBBDOC",223,0)
 ;
"RTN","IBBDOC",224,0)
EXTNUM ; (IBBDFN,IBBARFN)
"RTN","IBBDOC",225,0)
 ; Obtain the visit/account # of the external billing system
"RTN","IBBDOC",226,0)
 ; that has been associated with the PFSS ACCOUNT file (#375)
"RTN","IBBDOC",227,0)
 ; record.
"RTN","IBBDOC",228,0)
 ; 
"RTN","IBBDOC",229,0)
 ; Input:
"RTN","IBBDOC",230,0)
 ; IBBDFN   = Patient; IEN to file #2 [required]
"RTN","IBBDOC",231,0)
 ; IBBARFN  = Account Reference; IEN to file #375 [required]
"RTN","IBBDOC",232,0)
 ;
"RTN","IBBDOC",233,0)
 ; Returns the value of field #.02 from the file #375 record.
"RTN","IBBDOC",234,0)
 ;
"RTN","IBBDOC",235,0)
 ; Output: external visit/account #, or 0, if unsuccessful
"RTN","IBBDOC",236,0)
 ;
"RTN","IBBFAPI")
0^2^B38433259^B34602377
"RTN","IBBFAPI",1,0)
IBBFAPI ;OAK/ELZ - FOR OTHER PACKAGES TO QUERY INSURANCE INFO ;19-AUG-2004
"RTN","IBBFAPI",2,0)
 ;;2.0;INTEGRATED BILLING;**267,297,249,317,361**;21-MAR-94;Build 9
"RTN","IBBFAPI",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBBFAPI",4,0)
 ;
"RTN","IBBFAPI",5,0)
 ; -- see IBBDOC for API documentation
"RTN","IBBFAPI",6,0)
 ;    no applications should call here directly
"RTN","IBBFAPI",7,0)
INSUR(DFN,IBDT,IBSTAT,IBR,IBFLDS) ; Return Patient Insurance Information
"RTN","IBBFAPI",8,0)
 ;
"RTN","IBBFAPI",9,0)
 N ERROR,ERRORT,FCNT,IBPLN,ICNT,INSP,N,N1,NOK,PASS,PASS1,X,%
"RTN","IBBFAPI",10,0)
 K ERRORT D ERRORLD
"RTN","IBBFAPI",11,0)
 S NOK=-1
"RTN","IBBFAPI",12,0)
 S DFN=$G(DFN)
"RTN","IBBFAPI",13,0)
 S IBSTAT=$G(IBSTAT)
"RTN","IBBFAPI",14,0)
 S IBDT=$P($G(IBDT),".")
"RTN","IBBFAPI",15,0)
 S IBFLDS=$G(IBFLDS)
"RTN","IBBFAPI",16,0)
 I IBDT,IBSTAT["A" S ERROR=107 D ERROR Q NOK
"RTN","IBBFAPI",17,0)
 S (ERROR,PASS)=0 K IBR
"RTN","IBBFAPI",18,0)
 I 'DFN S ERROR=102 D ERROR Q NOK
"RTN","IBBFAPI",19,0)
 I '$D(^DPT(DFN)) S ERROR=106 D ERROR Q NOK
"RTN","IBBFAPI",20,0)
 I IBDT]"",IBDT'?7N S ERROR=104 D ERROR Q NOK
"RTN","IBBFAPI",21,0)
 I +IBDT=0 D NOW^%DTC S IBDT=$P(%,".",1)
"RTN","IBBFAPI",22,0)
 I IBSTAT]"" N Y F X=1:1:$L(IBSTAT) S Y=$E(IBSTAT,X) I '$F("^A^R^P^O^I^B^",(U_Y_U)) S ERROR=105 D ERROR Q
"RTN","IBBFAPI",23,0)
 I ERROR=105 Q NOK
"RTN","IBBFAPI",24,0)
 I IBFLDS]"",IBFLDS'="*" N Y F X=1:1:$L(IBFLDS,",") D
"RTN","IBBFAPI",25,0)
 . S Y=$P(IBFLDS,",",X)
"RTN","IBBFAPI",26,0)
 . I Y'?1N.N S ERROR=103
"RTN","IBBFAPI",27,0)
 . I Y?1N.N,(Y<1)!(Y>21) S ERROR=103
"RTN","IBBFAPI",28,0)
 I ERROR=103 D ERROR Q NOK
"RTN","IBBFAPI",29,0)
 K IBR
"RTN","IBBFAPI",30,0)
 ; set buffer file flag
"RTN","IBBFAPI",31,0)
 S (X,IBR("BUFFER"))=0 F  S X=$O(^IBA(355.33,"C",DFN,X)) Q:'X  S IBR("BUFFER")=IBR("BUFFER")+1
"RTN","IBBFAPI",32,0)
 S (ICNT,N)=0 F  S N=$O(^DPT(DFN,.312,N)) Q:'N  I $D(^(N,0)) D
"RTN","IBBFAPI",33,0)
 . S X=^DPT(DFN,.312,N,0)
"RTN","IBBFAPI",34,0)
 . N X1
"RTN","IBBFAPI",35,0)
 . S X1=$G(^DIC(36,+X,0)) I X1="" Q  ; no insurance company entry
"RTN","IBBFAPI",36,0)
 . S INSP=$P(X,U,1),IBPLN=$P(X,U,18)
"RTN","IBBFAPI",37,0)
 . I IBSTAT'["R",$P(X1,U,2)="N" Q  ; does not reimburse
"RTN","IBBFAPI",38,0)
 . I IBSTAT'["B",$$INDEM^IBCNS1(X) Q  ; indemnity policy
"RTN","IBBFAPI",39,0)
 . S PASS1=0
"RTN","IBBFAPI",40,0)
 . I IBSTAT'["A" D
"RTN","IBBFAPI",41,0)
 . . I $P(X,U,8),IBDT<$P(X,U,8) S PASS1=1 Q  ;effective after care date
"RTN","IBBFAPI",42,0)
 . . I $P(X,U,4),IBDT>$P(X,U,4) S PASS1=1 Q  ;terminated before care date
"RTN","IBBFAPI",43,0)
 . . I $P($G(^IBA(355.3,+$P(X,U,18),0)),U,11) S PASS1=1 Q  ;inactive plan
"RTN","IBBFAPI",44,0)
 . . I $P(X1,U,5) S PASS1=1 Q  ; inactive insurance company
"RTN","IBBFAPI",45,0)
 . Q:PASS1
"RTN","IBBFAPI",46,0)
 . S ICNT=ICNT+1
"RTN","IBBFAPI",47,0)
 . S FCNT=$S(IBFLDS="*":22,1:$L(IBFLDS,",")) ; number of fields to pull
"RTN","IBBFAPI",48,0)
 . S IBR("IBBAPI","INSUR",ICNT)=""
"RTN","IBBFAPI",49,0)
 . I IBFLDS'="" F N1=1:1:FCNT D
"RTN","IBBFAPI",50,0)
 . . N RET,RETVAL
"RTN","IBBFAPI",51,0)
 . . S RET=$S(IBFLDS="*":N1,1:$P(IBFLDS,",",N1)),RETVAL="" I RET?1N.N,RET>0,RET<23 D @RET S IBR("IBBAPI","INSUR",ICNT,RET)=RETVAL
"RTN","IBBFAPI",52,0)
 . I IBSTAT["P"!(IBSTAT["O")!(IBSTAT["I") D  I PASS1=0 K IBR("IBBAPI","INSUR",ICNT) S ICNT=ICNT-1
"RTN","IBBFAPI",53,0)
 . . S PASS1=0 Q:IBPLN=""
"RTN","IBBFAPI",54,0)
 . . I IBSTAT["P",+$$PLCOV(IBPLN,IBDT,"PHARMACY")>0 S PASS1=1
"RTN","IBBFAPI",55,0)
 . . I IBSTAT["O",+$$PLCOV(IBPLN,IBDT,"OUTPATIENT")>0 S PASS1=1
"RTN","IBBFAPI",56,0)
 . . I IBSTAT["I",+$$PLCOV(IBPLN,IBDT,"INPATIENT")>0 S PASS1=1
"RTN","IBBFAPI",57,0)
 I $D(IBR("IBBAPI","INSUR")),$O(IBR("IBBAPI","INSUR",0))'="ERROR" S PASS=1 F X=1:1 Q:'$D(IBR("IBBAPI","INSUR",X))  K:'$O(IBR("IBBAPI","INSUR",X,"")) IBR("IBBAPI","INSUR",X)
"RTN","IBBFAPI",58,0)
 Q PASS
"RTN","IBBFAPI",59,0)
ERRORLD ;  load error array
"RTN","IBBFAPI",60,0)
 F X=1:1:9 S ERRORT(X+100)=$P($T(ERRORLD1+X),";;",2)
"RTN","IBBFAPI",61,0)
 Q
"RTN","IBBFAPI",62,0)
 ;
"RTN","IBBFAPI",63,0)
ERRORLD1 ; error messages
"RTN","IBBFAPI",64,0)
 ;;DATABASE IS UNAVAILABLE
"RTN","IBBFAPI",65,0)
 ;;PATIENT ID IS REQUIRED
"RTN","IBBFAPI",66,0)
 ;;INVALID FIELD LIST
"RTN","IBBFAPI",67,0)
 ;;INVALID EFFECTIVE DATE
"RTN","IBBFAPI",68,0)
 ;;INVALID INSURANCE STATUS FILTER
"RTN","IBBFAPI",69,0)
 ;;INVALID PATIENT ID
"RTN","IBBFAPI",70,0)
 ;;INVALID COMBINATION, YOU CANNOT USE ""A"" WITH A DATE
"RTN","IBBFAPI",71,0)
 ;;DATA SOURCE IS NOT DEFINED
"RTN","IBBFAPI",72,0)
 ;;NO DATA ELEMENTS TO STORE
"RTN","IBBFAPI",73,0)
 ;;
"RTN","IBBFAPI",74,0)
ERROR ;
"RTN","IBBFAPI",75,0)
 K IBR S IBR("IBBAPI","INSUR","ERROR",ERROR)=ERRORT(ERROR)
"RTN","IBBFAPI",76,0)
 Q
"RTN","IBBFAPI",77,0)
 ;
"RTN","IBBFAPI",78,0)
1 ; Ins. Comp. name
"RTN","IBBFAPI",79,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.01,"I")_U_$$GET1^DIQ(2.312,N_","_DFN_",",.01)
"RTN","IBBFAPI",80,0)
 Q
"RTN","IBBFAPI",81,0)
2 ; Ins. Comp. Street Address Line 1
"RTN","IBBFAPI",82,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.111)
"RTN","IBBFAPI",83,0)
 Q
"RTN","IBBFAPI",84,0)
3 ; Ins. Comp. City
"RTN","IBBFAPI",85,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.114)
"RTN","IBBFAPI",86,0)
 Q
"RTN","IBBFAPI",87,0)
4 ; Ins. Comp. State
"RTN","IBBFAPI",88,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.115,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(36,INSP_",",.115)
"RTN","IBBFAPI",89,0)
 Q
"RTN","IBBFAPI",90,0)
5 ; Ins. Comp. Zip
"RTN","IBBFAPI",91,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.116)
"RTN","IBBFAPI",92,0)
 Q
"RTN","IBBFAPI",93,0)
6 ; Ins. Comp. Phone
"RTN","IBBFAPI",94,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.131)
"RTN","IBBFAPI",95,0)
 Q
"RTN","IBBFAPI",96,0)
7 ; Coordination of Benefits
"RTN","IBBFAPI",97,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.2,"I")_U_$$GET1^DIQ(2.312,N_","_DFN_",",.2)
"RTN","IBBFAPI",98,0)
 I RETVAL="^" S RETVAL=""
"RTN","IBBFAPI",99,0)
 Q
"RTN","IBBFAPI",100,0)
8 ; Policy Name
"RTN","IBBFAPI",101,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(355.3,RETVAL,.03)
"RTN","IBBFAPI",102,0)
 Q
"RTN","IBBFAPI",103,0)
9 ; Policy Reimbursable?
"RTN","IBBFAPI",104,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",1,"I")
"RTN","IBBFAPI",105,0)
 S RETVAL=$S(RETVAL="Y":"1^YES",RETVAL="*":"1^YES",RETVAL="**":"1^YES",RETVAL="":"1^YES",1:"0^NO")
"RTN","IBBFAPI",106,0)
 Q
"RTN","IBBFAPI",107,0)
10 ; Policy Effective Date
"RTN","IBBFAPI",108,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",8,"I")
"RTN","IBBFAPI",109,0)
 Q
"RTN","IBBFAPI",110,0)
11 ; Policy Expiration Date
"RTN","IBBFAPI",111,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",3,"I")
"RTN","IBBFAPI",112,0)
 Q
"RTN","IBBFAPI",113,0)
12 ; Subscriber Relationship
"RTN","IBBFAPI",114,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",16,"I")
"RTN","IBBFAPI",115,0)
 S RETVAL=$S(RETVAL="01":"P^PATIENT",RETVAL="02":"S^SPOUSE",RETVAL:"O^OTHER",1:"")
"RTN","IBBFAPI",116,0)
 Q
"RTN","IBBFAPI",117,0)
13 ; Subscriber Name
"RTN","IBBFAPI",118,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",17)
"RTN","IBBFAPI",119,0)
 Q
"RTN","IBBFAPI",120,0)
14  ; Subscriber ID
"RTN","IBBFAPI",121,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",1)
"RTN","IBBFAPI",122,0)
 Q
"RTN","IBBFAPI",123,0)
15 ; Pharmacy Coverage?
"RTN","IBBFAPI",124,0)
 N IBCOV
"RTN","IBBFAPI",125,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"PHARMACY")
"RTN","IBBFAPI",126,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",127,0)
 Q
"RTN","IBBFAPI",128,0)
16 ; Outpatient Coverage?
"RTN","IBBFAPI",129,0)
 N IBCOV
"RTN","IBBFAPI",130,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"OUTPATIENT")
"RTN","IBBFAPI",131,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",132,0)
 Q
"RTN","IBBFAPI",133,0)
17 ; Inpatient Coverage?
"RTN","IBBFAPI",134,0)
 N IBCOV
"RTN","IBBFAPI",135,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"INPATIENT")
"RTN","IBBFAPI",136,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",137,0)
 Q
"RTN","IBBFAPI",138,0)
18 ; Group Number
"RTN","IBBFAPI",139,0)
 S RETVAL=$$GET1^DIQ(355.3,$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")_",",.04)
"RTN","IBBFAPI",140,0)
 Q
"RTN","IBBFAPI",141,0)
 ;
"RTN","IBBFAPI",142,0)
19 ; Patient Relationship to Subscriber
"RTN","IBBFAPI",143,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",16,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(2.312,N_","_DFN_",",16)
"RTN","IBBFAPI",144,0)
 Q
"RTN","IBBFAPI",145,0)
 ;
"RTN","IBBFAPI",146,0)
20 ; VA Advantage and Tricare plan
"RTN","IBBFAPI",147,0)
 S RETVAL=0  ; VA Advantage to be determined at a later date
"RTN","IBBFAPI",148,0)
 N PLN,TYP1,TYP2,RETVAL1
"RTN","IBBFAPI",149,0)
 S PLN=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")
"RTN","IBBFAPI",150,0)
 S TYP1=$$GET1^DIQ(355.3,PLN_",",.09,"I")
"RTN","IBBFAPI",151,0)
 S TYP2=$$GET1^DIQ(355.1,TYP1_",",.03,"I")
"RTN","IBBFAPI",152,0)
 S RETVAL1=$S(TYP2=7:1,1:0)  ; determine if Tricare plan
"RTN","IBBFAPI",153,0)
 S RETVAL=RETVAL_U_RETVAL1
"RTN","IBBFAPI",154,0)
 Q
"RTN","IBBFAPI",155,0)
 ;
"RTN","IBBFAPI",156,0)
21 ; Plan Type
"RTN","IBBFAPI",157,0)
 N PLN,TYP1
"RTN","IBBFAPI",158,0)
 S PLN=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")
"RTN","IBBFAPI",159,0)
 S TYP1=$$GET1^DIQ(355.3,PLN_",",.09,"I")
"RTN","IBBFAPI",160,0)
 S RETVAL=$S(TYP1:TYP1_U_$$GET1^DIQ(355.1,TYP1_",",.01,"I"),1:"")
"RTN","IBBFAPI",161,0)
 Q
"RTN","IBBFAPI",162,0)
 ;
"RTN","IBBFAPI",163,0)
22 ; Subscriber Sex
"RTN","IBBFAPI",164,0)
 D 12
"RTN","IBBFAPI",165,0)
 I $E(RETVAL)="P" S RETVAL=$$GET1^DIQ(2,DFN_",",.02,"I") S:$L(RETVAL) RETVAL=RETVAL_U_$$GET1^DIQ(2,DFN_",",.02)
"RTN","IBBFAPI",166,0)
 E  S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",3.12,"I") S:$L(RETVAL) RETVAL=RETVAL_U_$$GET1^DIQ(2.312,N_","_DFN_",",3.12)
"RTN","IBBFAPI",167,0)
 Q
"RTN","IBBFAPI",168,0)
 ;
"RTN","IBBFAPI",169,0)
PLCOV(IBPL,IBVDT,IBCAT) ; Determine if a specific plan covers a category of coverage as of a date
"RTN","IBBFAPI",170,0)
 ; IBPL - pointer to file 355.3 group insurance plan (req)
"RTN","IBBFAPI",171,0)
 ; IBVDT - fileman format visit date (req)
"RTN","IBBFAPI",172,0)
 ; IBCAT -  pointer to file 355.31 limitation of coverage category (req)
"RTN","IBBFAPI",173,0)
 N CATLIM,X,Y
"RTN","IBBFAPI",174,0)
 I '$G(IBPL)!('$G(IBVDT))!('$L($G(IBCAT))) Q 0
"RTN","IBBFAPI",175,0)
 S X=0
"RTN","IBBFAPI",176,0)
 S IBCAT=$O(^IBE(355.31,"B",IBCAT,"")) G:IBCAT="" PLCOVQ
"RTN","IBBFAPI",177,0)
 S CATLIM=$O(^IBA(355.32,"APCD",IBPL,IBCAT,+$O(^IBA(355.32,"APCD",IBPL,IBCAT,-(IBVDT+1))),""))
"RTN","IBBFAPI",178,0)
 S X=$S(CATLIM="":1,1:+$P($G(^IBA(355.32,CATLIM,0)),U,4))
"RTN","IBBFAPI",179,0)
PLCOVQ Q X
"RTN","IBBFAPI",180,0)
 ;
"RTN","IBCBB")
0^3^B14809145^B14993587
"RTN","IBCBB",1,0)
IBCBB ;ALB/AAS - EDIT CHECK ROUTINE TO BE INVOKED BEFORE ALL BILL APPROVAL ACTIONS ;2-NOV-89
"RTN","IBCBB",2,0)
 ;;2.0;INTEGRATED BILLING;**80,51,137,288,327,361**;21-MAR-94;Build 9
"RTN","IBCBB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB",4,0)
 ;
"RTN","IBCBB",5,0)
 ;MAP TO DGCRBB
"RTN","IBCBB",6,0)
 ;
"RTN","IBCBB",7,0)
 ;IBNDn = IBND(n) = ^ib(399,n)
"RTN","IBCBB",8,0)
 ;RETURNS:
"RTN","IBCBB",9,0)
 ;IBER=fields with errors separated by semi-colons
"RTN","IBCBB",10,0)
 ;PRCASV("OKAY")=1 if iber="" and $D(prcasv("array")) compete
"RTN","IBCBB",11,0)
 ;
"RTN","IBCBB",12,0)
GVAR ;set up variables for mccr
"RTN","IBCBB",13,0)
 Q:'$D(IBIFN)  F I=0,"M","U","U1","S","MP","TX","UF3","UF31","U2" S @("IBND"_I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCBB",14,0)
 S IBBNO=$P(IBND0,"^"),DFN=$P(IBND0,"^",2),IBEVDT=$P(IBND0,"^",3)
"RTN","IBCBB",15,0)
 S IBLOC=$P(IBND0,"^",4),IBCL=$P(IBND0,"^",5),IBTF=$P(IBND0,"^",6)
"RTN","IBCBB",16,0)
 S IBAT=$P(IBND0,"^",7),IBWHO=$P(IBND0,"^",11),IBST=$P(IBND0,"^",13),IBFT=$P(IBND0,"^",19)
"RTN","IBCBB",17,0)
 S IBFDT=$P(IBNDU,"^",1),IBTDT=$P(IBNDU,"^",2)
"RTN","IBCBB",18,0)
 S IBTC=$P(IBNDU1,"^",1),IBFY=$P(IBNDU1,"^",9),IBFYC=$P(IBNDU1,"^",10)
"RTN","IBCBB",19,0)
 S IBEU=$P(IBNDS,"^",2),IBRU=$P(IBNDS,"^",5),IBAU=$P(IBNDS,"^",8)
"RTN","IBCBB",20,0)
 S IBTOB=$$TOB(IBND0),IBTOB12=$E(IBTOB,1,2)
"RTN","IBCBB",21,0)
 K ^TMP($J,"BILL-WARN")
"RTN","IBCBB",22,0)
 Q
"RTN","IBCBB",23,0)
 ;
"RTN","IBCBB",24,0)
EN ;Entry to check for errors
"RTN","IBCBB",25,0)
 N IBQ,IBXERR,IBXDATA,IBXSAVE,IBZPRC92,IBQUIT,IBISEQ,IDDATA,IBERRNO
"RTN","IBCBB",26,0)
 I $D(IBFL) N IBFL
"RTN","IBCBB",27,0)
 K ^TMP($J)
"RTN","IBCBB",28,0)
 W !
"RTN","IBCBB",29,0)
 S IBER="" D GVAR I '$D(IBND0) S IBER=-1 Q
"RTN","IBCBB",30,0)
 ;
"RTN","IBCBB",31,0)
 ;I $$ISPROS^IBCEF1(IBIFN) D
"RTN","IBCBB",32,0)
 ;. D WARN^IBCBB11("Bill has prosthetics item(s) and will only print locally")
"RTN","IBCBB",33,0)
 ;. I $$NEEDMRA^IBEFUNC(IBIFN) S IBQUIT=$$IBER^IBCBB3(.IBER,"098")
"RTN","IBCBB",34,0)
 ;
"RTN","IBCBB",35,0)
 ;patient in patient file
"RTN","IBCBB",36,0)
 I DFN="" S IBER=IBER_"IB057;"
"RTN","IBCBB",37,0)
 I DFN]"",'$D(^DPT(DFN)) S IBER=IBER_"IB057;"
"RTN","IBCBB",38,0)
 ;
"RTN","IBCBB",39,0)
 ;Event date in correct format
"RTN","IBCBB",40,0)
 I IBEVDT="" S IBER=IBER_"IB049;"
"RTN","IBCBB",41,0)
 I IBEVDT]"",IBEVDT'?7N&(IBEVDT'?7N1".".N) S IBER=IBER_"IB049;"
"RTN","IBCBB",42,0)
 ;
"RTN","IBCBB",43,0)
 ;Rate Type
"RTN","IBCBB",44,0)
 I IBAT="" S IBER=IBER_"IB059;"
"RTN","IBCBB",45,0)
 I IBAT]"",'$D(^DGCR(399.3,IBAT,0)) S IBER=IBER_"IB059;"
"RTN","IBCBB",46,0)
 I IBAT]"",$D(^DGCR(399.3,IBAT,0)),'$P(^(0),"^",6) S IBER=IBER_"IB059;",IBAT=""
"RTN","IBCBB",47,0)
 ;I IBAT]"",$D(^DGCR(399.3,IBAT,0)) S IBARTP=$P(^PRCA(430.2,$P(^DGCR(399.3,IBAT,0),"^",6),0),"^",6)
"RTN","IBCBB",48,0)
 I IBAT]"",$P($G(^DGCR(399.3,IBAT,0)),"^",6) S IBARTP=$P($$CATN^PRCAFN($P(^DGCR(399.3,IBAT,0),"^",6)),"^",3)
"RTN","IBCBB",49,0)
 ;Check that AR category expects same debtor as defined in who's responsible.
"RTN","IBCBB",50,0)
 I $D(IBARTP),IBWHO="i"&(IBARTP'="T")!(IBWHO="p"&("PC"'[IBARTP))!(IBWHO="o"&(IBARTP'="N")) S IBER=IBER_"IB058;"
"RTN","IBCBB",51,0)
 ;
"RTN","IBCBB",52,0)
 ;Who's Responsible
"RTN","IBCBB",53,0)
 I IBWHO=""!($L(IBWHO)>1)!("iop"'[IBWHO) S IBER=IBER_"IB065;"
"RTN","IBCBB",54,0)
 S IBMRA=$S($$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)):$$TXMT^IBCEF4(IBIFN)>0,1:0)
"RTN","IBCBB",55,0)
 ;  MCR will not reimburse is only valid if there is subsequent insurance
"RTN","IBCBB",56,0)
 ;   that will reimburse
"RTN","IBCBB",57,0)
 I IBWHO="i" D
"RTN","IBCBB",58,0)
 . I IBMRA D  Q
"RTN","IBCBB",59,0)
 .. N Z,IBZ
"RTN","IBCBB",60,0)
 .. S IBZ=0
"RTN","IBCBB",61,0)
 .. F Z=$$COBN^IBCEF(IBIFN):1:3 I $D(^DGCR(399,IBIFN,"I"_(Z+1))),$P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"I"_(Z+1))),0)),U,2)'="N" S IBZ=1 Q
"RTN","IBCBB",62,0)
 .. I 'IBZ S IBER=IBER_"IB054;" D WARN^IBCBB11("A valid claim for MEDICARE WNR needs subsequent ins. that will reimburse")
"RTN","IBCBB",63,0)
 ..
"RTN","IBCBB",64,0)
 . I $$COB^IBCEF(IBIFN)="S",$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))=1,$D(^DGCR(399,IBIFN,"I3")) Q
"RTN","IBCBB",65,0)
 . I $S('IBNDMP:1,1:$P(IBNDMP,U,2)'=$$BPP^IBCNS2(IBIFN,1)) S IBER=IBER_"IB054;"
"RTN","IBCBB",66,0)
 I IBWHO="o",'$P(IBNDM,"^",11) S IBER=IBER_"IB053;"
"RTN","IBCBB",67,0)
 ;
"RTN","IBCBB",68,0)
 ; All insurance subscribers must have a birth date on file
"RTN","IBCBB",69,0)
 ;  - 11/10/04 - IB*2.0*288
"RTN","IBCBB",70,0)
 ;  - 12/14/06 - IB*2.0*361 - must have INSURED'S SEX too
"RTN","IBCBB",71,0)
 ; IB error codes
"RTN","IBCBB",72,0)
 ;    IB221 - Primary insurance subscriber missing date of birth
"RTN","IBCBB",73,0)
 ;    IB222 - Secondary insurance subscriber missing date of birth
"RTN","IBCBB",74,0)
 ;    IB223 - Tertiary insurance subscriber missing date of birth
"RTN","IBCBB",75,0)
 ;    IB261 - Primary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",76,0)
 ;    IB262 - Secondary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",77,0)
 ;    IB263 - Tertiary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",78,0)
 ;
"RTN","IBCBB",79,0)
 F IBISEQ=1:1:3 D
"RTN","IBCBB",80,0)
 . I '$P($G(^DGCR(399,IBIFN,"I"_IBISEQ)),U,1) Q   ; no insurance here
"RTN","IBCBB",81,0)
 . K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J)
"RTN","IBCBB",82,0)
 . S IDDATA=$$INSDEM^IBCEF(IBIFN,IBISEQ)
"RTN","IBCBB",83,0)
 . K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J)
"RTN","IBCBB",84,0)
 . I '$P(IDDATA,U,1) D  ; birth date missing
"RTN","IBCBB",85,0)
 .. S IBERRNO=220+IBISEQ
"RTN","IBCBB",86,0)
 .. S IBER=IBER_"IB"_IBERRNO_";"
"RTN","IBCBB",87,0)
 . I "^M^F^"'[(U_$P(IDDATA,U,2)_U) D  ; sex missing
"RTN","IBCBB",88,0)
 .. S IBERRNO=260+IBISEQ
"RTN","IBCBB",89,0)
 .. S IBER=IBER_"IB"_IBERRNO_";"
"RTN","IBCBB",90,0)
 . Q
"RTN","IBCBB",91,0)
 ;
"RTN","IBCBB",92,0)
 D ^IBCBB1
"RTN","IBCBB",93,0)
 Q
"RTN","IBCBB",94,0)
 ;
"RTN","IBCBB",95,0)
EDIT(IBIFN) ; Run edits from within the billing edit screens
"RTN","IBCBB",96,0)
 N IBVIEW,IBDISP,IBNOFIX,DIR,X,Y
"RTN","IBCBB",97,0)
 S (IBNOFIX,IBVIEW,IBDISP)=1
"RTN","IBCBB",98,0)
 D EDITS^IBCB2
"RTN","IBCBB",99,0)
 W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCBB",100,0)
 Q
"RTN","IBCBB",101,0)
 ;
"RTN","IBCBB",102,0)
TOB(IBND0) ;
"RTN","IBCBB",103,0)
 ; IBND0 = the 0-node of the bill (file 399)
"RTN","IBCBB",104,0)
 Q ($P(IBND0,U,24)_$P($G(^DGCR(399.1,+$P(IBND0,U,25),0)),U,2)_$P(IBND0,U,26))
"RTN","IBCBB",105,0)
 ;
"RTN","IBCEF")
0^4^B53271927^B52873320
"RTN","IBCEF",1,0)
IBCEF ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;22-JAN-96
"RTN","IBCEF",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,51,137,288,296,361**;21-MAR-94;Build 9
"RTN","IBCEF",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF",4,0)
 ;
"RTN","IBCEF",5,0)
 ;IBIFN = bill ien throughout this routine
"RTN","IBCEF",6,0)
COB(IBIFN) ; Bill seq
"RTN","IBCEF",7,0)
 N A
"RTN","IBCEF",8,0)
 S A=$P($G(^DGCR(399,IBIFN,0)),U,21) S:A="" A="P"
"RTN","IBCEF",9,0)
 Q A
"RTN","IBCEF",10,0)
 ;
"RTN","IBCEF",11,0)
COBN(IBIFN,A) ; Return seq # of selected payer
"RTN","IBCEF",12,0)
 ; A = 'PST' or null to get current bill payer seq #
"RTN","IBCEF",13,0)
 I $G(A)="" S A=$$COB(IBIFN) S:"PST"'[A A="P"
"RTN","IBCEF",14,0)
 I 'A S A=$F("PST",A)-1 S:A<1 A=1
"RTN","IBCEF",15,0)
 Q A
"RTN","IBCEF",16,0)
 ;
"RTN","IBCEF",17,0)
POLICY(IBIFN,IBPC,IBCOBN) ; Return raw data from policy info on bill
"RTN","IBCEF",18,0)
 ; IBPC  = pc # of data element in policy (optional)
"RTN","IBCEF",19,0)
 ;          if null, 0-node is returned
"RTN","IBCEF",20,0)
 ; IBCOBN = bill designation 1-3 or 'PST' (optional)
"RTN","IBCEF",21,0)
 ;          if null, default to current
"RTN","IBCEF",22,0)
 N IBI
"RTN","IBCEF",23,0)
 I "PST"[$G(IBCOBN) S IBCOBN=$$COBN(IBIFN,$G(IBCOBN))
"RTN","IBCEF",24,0)
 S IBI=$G(^DGCR(399,IBIFN,"I"_IBCOBN))
"RTN","IBCEF",25,0)
 I $G(IBPC) S IBI=$P(IBI,U,IBPC)
"RTN","IBCEF",26,0)
POLICYQ Q IBI
"RTN","IBCEF",27,0)
 ;
"RTN","IBCEF",28,0)
INSADDR(IBIFN,IBCOB) ; Return insured's address in 7 pieces:
"RTN","IBCEF",29,0)
 ; ALL STREET ADDRESSES^CITY^STATE ABBREVIATION^ZIP^STREET ADDRESS 1^
"RTN","IBCEF",30,0)
 ;  STREET ADDRESS 2^STREET ADDRESS 3
"RTN","IBCEF",31,0)
 ; IBIFN = bill ien
"RTN","IBCEF",32,0)
 ; IBCOB = bill designation (P)rimary, (S)econdary, (T)ertiary
"RTN","IBCEF",33,0)
 ;          or 1-2-3. If not defined or null, return current
"RTN","IBCEF",34,0)
 ; If insured is patient or spouse, take from patient file top level
"RTN","IBCEF",35,0)
 ;   fields, then if top-level street addresses are blank and policy
"RTN","IBCEF",36,0)
 ;   level fields are not, use policy level
"RTN","IBCEF",37,0)
 ; If insured is other than patient/spouse, use policy level fields only
"RTN","IBCEF",38,0)
 N A,B,IBADDR,IBI,DFN,VAPA,VATEST
"RTN","IBCEF",39,0)
 S:$G(IBCOB)="" IBCOB=""
"RTN","IBCEF",40,0)
 I 'IBCOB S IBCOB=$$COBN(IBIFN,$G(IBCOB))
"RTN","IBCEF",41,0)
 S IBI=+$$POLICY(IBIFN,16,IBCOB)
"RTN","IBCEF",42,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF",43,0)
 I $S('IBI:1,1:"12"'[IBI) S IBADDR="" G INSADDQ
"RTN","IBCEF",44,0)
 ; insured's address (patient/spouse) same as patient's
"RTN","IBCEF",45,0)
 S VATEST("ADD",9)=+$G(^DGCR(399,IBIFN,"U")),VATEST("ADD",10)=+$P($G(^("U")),U,2)
"RTN","IBCEF",46,0)
 D ADD^VADPT
"RTN","IBCEF",47,0)
 S IBADDR=VAPA(1)_" "_VAPA(2)_" "_VAPA(3)_U_VAPA(4)_U_$P($G(^DIC(5,+VAPA(5),0)),U,2)_U_VAPA(6)_U_VAPA(1)_U_VAPA(2)_U_VAPA(3)
"RTN","IBCEF",48,0)
INSADDQ S A=$P($G(^DGCR(399,IBIFN,"M")),U,(11+IBCOB))
"RTN","IBCEF",49,0)
 S A=$G(^DPT(DFN,.312,+A,3))
"RTN","IBCEF",50,0)
 I $TR($P(IBADDR,U)," ")="" D
"RTN","IBCEF",51,0)
 .S $P(IBADDR,U)=$P(A,U,6)_" "_$P(A,U,7),$P(IBADDR,U,5,6)=$P(A,U,6,7)
"RTN","IBCEF",52,0)
 .F B=2,4 S $P(IBADDR,U,B)=$P(A,U,B+6)
"RTN","IBCEF",53,0)
 .S $P(IBADDR,U,3)=$P($G(^DIC(5,+$P(A,U,9),0)),U,2)
"RTN","IBCEF",54,0)
 Q IBADDR
"RTN","IBCEF",55,0)
 ;
"RTN","IBCEF",56,0)
PTADDR(IBIFN,ELE) ;Return part of patient's permanent address
"RTN","IBCEF",57,0)
 ;IBIFN = bill ien
"RTN","IBCEF",58,0)
 ;ELE = subscript in ^UTILITY("VAPA", array for element needed
"RTN","IBCEF",59,0)
 ;
"RTN","IBCEF",60,0)
 I '$D(^UTILITY("VAPA",$J)) D  ; once per pt
"RTN","IBCEF",61,0)
 .N VAHOW,DFN,VAPA
"RTN","IBCEF",62,0)
 .S VAHOW=2,DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2),VAPA("P")=""
"RTN","IBCEF",63,0)
 .D ADD^VADPT
"RTN","IBCEF",64,0)
 Q $P($G(^UTILITY("VAPA",$J,ELE)),U)
"RTN","IBCEF",65,0)
 ;
"RTN","IBCEF",66,0)
PTDEM(IBIFN,ELE,PC) ;Return part of patient's demographics
"RTN","IBCEF",67,0)
 ;IBIFN = bill ien
"RTN","IBCEF",68,0)
 ;ELE = subscript in ^UTILITY("VADM" array for demographic element needed
"RTN","IBCEF",69,0)
 ;PC = pc of string at subscript ELE to be returned
"RTN","IBCEF",70,0)
 ;
"RTN","IBCEF",71,0)
 I '$G(PC) S PC=1
"RTN","IBCEF",72,0)
 I '$D(^UTILITY("VADM",$J)) D  ; once per pt
"RTN","IBCEF",73,0)
 .N VAHOW,DFN,VADM
"RTN","IBCEF",74,0)
 .S VAHOW=2,DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF",75,0)
 .D DEM^VADPT
"RTN","IBCEF",76,0)
 Q $P($G(^UTILITY("VADM",$J,ELE)),U,PC)
"RTN","IBCEF",77,0)
 ;
"RTN","IBCEF",78,0)
PTEMPL(IBIFN,ELE,WHOSE,VAOA) ;Return part of pt's or spouse's employer info
"RTN","IBCEF",79,0)
 ;ELE = subscript in VAOA array for employer element needed
"RTN","IBCEF",80,0)
 ;WHOSE = 6 if spouse's info needed  5 if pt info needed (DEFAULT)
"RTN","IBCEF",81,0)
 ;
"RTN","IBCEF",82,0)
 N DFN
"RTN","IBCEF",83,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2),VAOA("A")=$S($G(WHOSE):WHOSE,1:5)
"RTN","IBCEF",84,0)
 D OAD^VADPT
"RTN","IBCEF",85,0)
 Q $P($G(VAOA(ELE)),U)
"RTN","IBCEF",86,0)
 ;
"RTN","IBCEF",87,0)
INSDEM(IBIFN,IBCOB) ; Return insured's demographics in 6 pieces:
"RTN","IBCEF",88,0)
 ; DATE OF BIRTH^SEX^PHONE^BRANCH pointer^RANK^SSN(no dashes)
"RTN","IBCEF",89,0)
 ; IBIFN = bill ien
"RTN","IBCEF",90,0)
 ; IBCOB = bill designation (P)rimary (default), (S)econdary, (T)ertiary
"RTN","IBCEF",91,0)
 ;          or 1,2,3 ... if not defined or null, return current
"RTN","IBCEF",92,0)
 ; If insured is patient/spouse, take from patient file top level
"RTN","IBCEF",93,0)
 ;   fields, then if top-level are blank and policy level aren't,
"RTN","IBCEF",94,0)
 ;   use policy level
"RTN","IBCEF",95,0)
 ; If insured other than patient/spouse, use policy level fields only
"RTN","IBCEF",96,0)
 N A,B,IBDEM,IBI,DFN,VADM
"RTN","IBCEF",97,0)
 S:$G(IBCOB)="" IBCOB=""
"RTN","IBCEF",98,0)
 S:'IBCOB IBCOB=$$COBN(IBIFN,IBCOB)
"RTN","IBCEF",99,0)
 S IBI=$$WHOSINS(IBIFN,IBCOB)
"RTN","IBCEF",100,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF",101,0)
 I $S('IBI:1,1:"12"'[IBI) S IBDEM="" G INSDEM1
"RTN","IBCEF",102,0)
 ; If it gets here, assume insured is patient/spouse
"RTN","IBCEF",103,0)
 S A=$$PTDEM(IBIFN,0),A=$$PTADDR(IBIFN,0)
"RTN","IBCEF",104,0)
 F A=2,3,5 S VADM(A)=$P($G(^UTILITY("VADM",$J,A)),U)
"RTN","IBCEF",105,0)
 S VAPA(8)=$P($G(^UTILITY("VAPA",$J,8)),U)
"RTN","IBCEF",106,0)
 I VADM(5)="",'VADM(3),VAPA(8)="" S IBDEM="" G INSDEM1
"RTN","IBCEF",107,0)
 S $P(IBDEM,U,3)=VAPA(8),$P(IBDEM,U,6)=VADM(2)
"RTN","IBCEF",108,0)
 I IBI=1,VADM(3) S $P(IBDEM,U)=VADM(3) ;Patient's own policy only
"RTN","IBCEF",109,0)
INSDEM1 S A=$P($G(^DGCR(399,IBIFN,"M")),U,(11+IBCOB))
"RTN","IBCEF",110,0)
 S A=$G(^DPT(DFN,.312,+A,3))
"RTN","IBCEF",111,0)
 S:"MF"'[$G(VADM(5)) VADM(5)=""
"RTN","IBCEF",112,0)
 S $P(IBDEM,U,2)=$S(IBI=1:VADM(5),1:$P(A,U,12))
"RTN","IBCEF",113,0)
 S $P(IBDEM,U,4,5)=$P(A,U,2)_U_$P(A,U,3)
"RTN","IBCEF",114,0)
 S:'$P(IBDEM,U) $P(IBDEM,U)=$P(A,U)
"RTN","IBCEF",115,0)
 S:$P(IBDEM,U,3)="" $P(IBDEM,U,3)=$P(A,U,11)
"RTN","IBCEF",116,0)
 S:$P(IBDEM,U,6)="" $P(IBDEM,U,6)=$P(A,U,5)
"RTN","IBCEF",117,0)
 Q IBDEM
"RTN","IBCEF",118,0)
 ;
"RTN","IBCEF",119,0)
INSEMPL(IBIFN,IBCOB) ; Return insured's employer data in 5 pieces:
"RTN","IBCEF",120,0)
 ; EMPLOYER NAME^EMPLOYER CITY^EMPLOYER STATE ABBREVIATION^STATE IEN^STREET 1
"RTN","IBCEF",121,0)
 ; IBCOB = bill designation (P)rimary-default, (S)econdary, (T)ertiary
"RTN","IBCEF",122,0)
 ;            or 123 - if not defined or null, return current
"RTN","IBCEF",123,0)
 N A,IBEMPL,IBI,DFN,VAOA
"RTN","IBCEF",124,0)
 S IBI=$$WHOSINS(IBIFN,$G(IBCOB))
"RTN","IBCEF",125,0)
 I $S('IBI:1,1:"12"'[IBI) S IBEMPL="^^" G INSEMPQ
"RTN","IBCEF",126,0)
 ; insured = pt/spouse
"RTN","IBCEF",127,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF",128,0)
 S A=$$PTEMPL(IBIFN,0,IBI+4,.VAOA)
"RTN","IBCEF",129,0)
 S IBEMPL=VAOA(9)_U_VAOA(4)_U_$P($G(^DIC(5,+VAOA(5),0)),U,2)_U_+VAOA(5)_U_VAOA(1)
"RTN","IBCEF",130,0)
INSEMPQ Q IBEMPL
"RTN","IBCEF",131,0)
 ;
"RTN","IBCEF",132,0)
WHOSINS(IBIFN,IBCOB) ; Determine who is insured for bill IBIFN and 
"RTN","IBCEF",133,0)
 ; seq of coverage COB (123 or PST) or if not defined or null, current
"RTN","IBCEF",134,0)
 N Z,Z0,VAEL,DFN
"RTN","IBCEF",135,0)
 S Z=+$$POLICY(IBIFN,16,$G(IBCOB))
"RTN","IBCEF",136,0)
 I 'Z D
"RTN","IBCEF",137,0)
 .S Z0=$$POLICY(IBIFN,6,$G(IBCOB)),DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF",138,0)
 .I Z0="v" D ELIG^VADPT I VAEL(4) S Z=1 Q  ;vet is pt
"RTN","IBCEF",139,0)
 .I Z0="s" D ELIG^VADPT I VAEL(4) S Z=2 Q  ;vet is pt, so vets spouse is pt's spouse
"RTN","IBCEF",140,0)
 .S Z=9 ; relationship of insured to pt unknown
"RTN","IBCEF",141,0)
 Q Z
"RTN","IBCEF",142,0)
 ;
"RTN","IBCEF",143,0)
EMPSTAT(IBIFN,WHOSE) ;Return employment status
"RTN","IBCEF",144,0)
 ; IBIFN = bill ien
"RTN","IBCEF",145,0)
 ; WHOSE = v for vet, s for spouse status
"RTN","IBCEF",146,0)
 N STAT,DFN,VAPD
"RTN","IBCEF",147,0)
 S STAT="",DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF",148,0)
 I WHOSE="v" D OPD^VADPT S STAT=$P(VAPD(7),U)
"RTN","IBCEF",149,0)
 I WHOSE="s" S STAT=$P($G(^DPT(DFN,.25)),U,15)
"RTN","IBCEF",150,0)
 I STAT="" S STAT=9
"RTN","IBCEF",151,0)
 Q STAT
"RTN","IBCEF",152,0)
 ;
"RTN","IBCEF",153,0)
INPAT(IBIFN,OUT) ; Determine if bill is inpatient
"RTN","IBCEF",154,0)
 ; OUT = optional - if 1, return output value based on 
"RTN","IBCEF",155,0)
 ;  inpatient/outpatient from UB-04 type of bill field
"RTN","IBCEF",156,0)
 ; Return 1 if inpatient, 0 if not inpatient or can't be determined
"RTN","IBCEF",157,0)
 N INPT,CODE,CODE0,IB0
"RTN","IBCEF",158,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF",159,0)
 S OUT=+$G(OUT),CODE=+$P(IB0,U,5)
"RTN","IBCEF",160,0)
 I 'OUT S INPT=CODE
"RTN","IBCEF",161,0)
 I OUT D
"RTN","IBCEF",162,0)
 . S CODE0=$P($G(^DGCR(399.1,+$P(IB0,U,25),0)),U,2)
"RTN","IBCEF",163,0)
 . I CODE0=8,$P(IB0,U,24)=1 S INPT=$P(IB0,U,5) Q  ; 18X
"RTN","IBCEF",164,0)
 . I CODE0=9,$P(IB0,U,24)=8 S INPT=$P(IB0,U,5) Q  ; 89X
"RTN","IBCEF",165,0)
 . I CODE0=1,$P(IB0,U,24)=8 S INPT=0 Q  ; 81X
"RTN","IBCEF",166,0)
 . I CODE0=1,$P(IB0,U,24)=7 S INPT=0 Q  ; 71X
"RTN","IBCEF",167,0)
 . I CODE0=2,$P(IB0,U,24)=7 S INPT=0 Q  ; 72X
"RTN","IBCEF",168,0)
 . S INPT=CODE0
"RTN","IBCEF",169,0)
 Q $S(INPT:INPT'>2,1:0)
"RTN","IBCEF",170,0)
 ;
"RTN","IBCEF",171,0)
INSPRF(IBIFN) ; Function to determine if bill is prof or inst
"RTN","IBCEF",172,0)
 ; Return 1 if institutional (UB-04) claim, 0 if professional (CMS-1500) claim
"RTN","IBCEF",173,0)
 N A
"RTN","IBCEF",174,0)
 S A=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF",175,0)
 I $P(A,U,27)="" S $P(A,U,27)=$S($P(A,U,19)=3:1,1:0)
"RTN","IBCEF",176,0)
 Q $S($P(A,U,27)=1:1,1:0)
"RTN","IBCEF",177,0)
 ;
"RTN","IBCEF",178,0)
F(FLD,IBXRET,IBXERR1,IBIEN) ;Execute extract for data element FLD and bill IBIEN
"RTN","IBCEF",179,0)
 ; If IBXDATA array to be returned as data value(s) of fld
"RTN","IBCEF",180,0)
 ;   D F^IBCEF("FLD NAME","IBXDATA","IBXERR") or D F^IBCEF("FLD NAME") 
"RTN","IBCEF",181,0)
 ; Variable ref-ed by IBXERR1 will contain error message if an error
"RTN","IBCEF",182,0)
 ; @IBXRET always defined on return.  It will be null if error
"RTN","IBCEF",183,0)
 I $G(IBIEN) N IBXIEN S IBXIEN=IBIEN
"RTN","IBCEF",184,0)
 I $G(IBXERR1)="" S IBXERR1="IBXERR"
"RTN","IBCEF",185,0)
 N IBXHOLD
"RTN","IBCEF",186,0)
 S IBXHOLD=""
"RTN","IBCEF",187,0)
 I $G(IBXRET)=""!($G(IBXRET)="IBXDATA") S IBXHOLD="IBXDATA",IBXRET="IBXRET"
"RTN","IBCEF",188,0)
 S @IBXERR1=""
"RTN","IBCEF",189,0)
 ;
"RTN","IBCEF",190,0)
 N FLDN,OFLD,STOP,Z,IBXERR2,IBXRETX
"RTN","IBCEF",191,0)
 ;
"RTN","IBCEF",192,0)
 I '$G(IBXIEN) S @IBXERR1="Invalid entry #" G FQ
"RTN","IBCEF",193,0)
 I '$D(^IBA(364.5,"B",FLD)) S OFLD=FLD,STOP=0 D  I FLD="" S @IBXERR1=OFLD_" Field not found!!" G FQ
"RTN","IBCEF",194,0)
 .F  S FLD=$O(^IBA(364.5,"B",FLD))  D  Q:STOP
"RTN","IBCEF",195,0)
 ..I $E(FLD,1,$L(OFLD))'=OFLD S FLD=""
"RTN","IBCEF",196,0)
 ..S STOP=1
"RTN","IBCEF",197,0)
 ;
"RTN","IBCEF",198,0)
 S Z=0
"RTN","IBCEF",199,0)
 F  S Z=$O(^IBA(364.5,"B",FLD,Z)) Q:'Z  I $P($G(^IBA(364.5,Z,0)),U,5)=399 Q
"RTN","IBCEF",200,0)
 I 'Z S @IBXERR1=FLD_" Field not found!!" G FQ
"RTN","IBCEF",201,0)
 ;
"RTN","IBCEF",202,0)
 S FLDN(1)=Z D EXTONE^IBCEFG0(IBXIEN,.FLDN,""_IBXRET_"",.IBXERR2)
"RTN","IBCEF",203,0)
 ;
"RTN","IBCEF",204,0)
 I $G(IBXERR2)'="" S @IBXERR1=IBXERR2
"RTN","IBCEF",205,0)
FQ S IBXARRY=$S(IBXHOLD="IBXDATA":"IBXDATA",1:""_IBXRET_"")
"RTN","IBCEF",206,0)
 I @IBXERR1'="" K @IBXARRY S @IBXARRY="" Q
"RTN","IBCEF",207,0)
 ;
"RTN","IBCEF",208,0)
 I IBXHOLD="IBXDATA" S IBXRET="IBXRET"
"RTN","IBCEF",209,0)
 M IBXRETX=@IBXRET K @IBXARRY M @IBXARRY=IBXRETX(1)
"RTN","IBCEF",210,0)
 S:'($D(@IBXARRY)#2) @IBXARRY=""
"RTN","IBCEF",211,0)
 Q
"RTN","IBCEF",212,0)
 ;
"RTN","IBCEF",213,0)
SERVDT(IBIFN,LENGTH,FORMAT) ; Return default service date for 
"RTN","IBCEF",214,0)
 ; outpatient/UB-04 lines or X12-837 institutional lines
"RTN","IBCEF",215,0)
 ; LENGTH = null/8 for 8 digit date, 6 for 6 digit date
"RTN","IBCEF",216,0)
 ; FORMAT = 1 = X12 format (YYYYMMDD), 2 = FM internal (NNNNNNN),
"RTN","IBCEF",217,0)
 ;          0 = external (MMDDYY or MMDDYYYY)
"RTN","IBCEF",218,0)
 N IBZ
"RTN","IBCEF",219,0)
 G:$$INPAT^IBCEF(IBIFN,1)!($$FT^IBCEF(IBIFN)'=3) SERVDTQ ;Inpatient claim or billed on a CMS-1500
"RTN","IBCEF",220,0)
 S LENGTH=$G(LENGTH),FORMAT=$G(FORMAT)
"RTN","IBCEF",221,0)
 D F("N-STATEMENT COVERS FROM DATE","IBZ",,IBIFN)
"RTN","IBCEF",222,0)
 I '$G(IBZ)!(FORMAT=2) G SERVDTQ
"RTN","IBCEF",223,0)
 ;
"RTN","IBCEF",224,0)
 I FORMAT=1 S IBZ=$$DT^IBCEFG1(IBZ,"",$S(LENGTH'=6:"D8",1:"D6")) G SERVDTQ
"RTN","IBCEF",225,0)
 S IBZ=$$DATE^IBCF2(IBZ,$S(LENGTH=6:0,1:1),1)
"RTN","IBCEF",226,0)
 ;
"RTN","IBCEF",227,0)
SERVDTQ Q $G(IBZ)
"RTN","IBCEF",228,0)
 ;
"RTN","IBCEF",229,0)
NOPUNCT(X,SPACE,EXC) ; Strip punctuation from data in X
"RTN","IBCEF",230,0)
 ; SPACE = flag if 1 strip SPACES
"RTN","IBCEF",231,0)
 ; EXC = list of punctuation not to strip
"RTN","IBCEF",232,0)
 ;
"RTN","IBCEF",233,0)
 N PUNCT,Z
"RTN","IBCEF",234,0)
 S PUNCT=".,-+(){}[]\/><:;?|=_*&%$#@!~`^'"""
"RTN","IBCEF",235,0)
 I $G(SPACE) S PUNCT=PUNCT_" "
"RTN","IBCEF",236,0)
 I $G(EXC)'="" F Z=1:1:$L(EXC) S PUNCT=$TR(PUNCT,$E(EXC,Z))
"RTN","IBCEF",237,0)
 S X=$TR(X,PUNCT)
"RTN","IBCEF",238,0)
 Q X
"RTN","IBCEF",239,0)
 ;
"RTN","IBCEF",240,0)
FT(IBIFN) ; Internal code for bill form type
"RTN","IBCEF",241,0)
 Q +$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCEF",242,0)
 ;
"RTN","IBCEF",243,0)
COBCT(IBIFN) ; # of payers on claim
"RTN","IBCEF",244,0)
 N CT,Z
"RTN","IBCEF",245,0)
 S CT=0 F Z="I1","I2","I3" Q:'$D(^DGCR(399,IBIFN,Z))  S CT=CT+1
"RTN","IBCEF",246,0)
 Q CT
"RTN","IBCEF",247,0)
 ;
"RTN","IBCNBCD")
0^5^B35493538^B34762768
"RTN","IBCNBCD",1,0)
IBCNBCD ;ALB/ARH-Ins Buffer: display/compare buffer and existing ins ;1 Jun 97
"RTN","IBCNBCD",2,0)
 ;;2.0;INTEGRATED BILLING;**82,251,361**;21-MAR-94;Build 9
"RTN","IBCNBCD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNBCD",4,0)
 ;
"RTN","IBCNBCD",5,0)
INS(IBBUFDA,IBINSDA) ; display a buffer entry's insurance company fields and
"RTN","IBCNBCD",6,0)
 ; an existing insurance company's fields for comparison
"RTN","IBCNBCD",7,0)
 N IBEXTDA,IBFLD1,IBFLD2,X I '$G(IBBUFDA) Q
"RTN","IBCNBCD",8,0)
 ;
"RTN","IBCNBCD",9,0)
 S IBEXTDA=$G(IBINSDA)_","
"RTN","IBCNBCD",10,0)
 ;
"RTN","IBCNBCD",11,0)
 I +$P($G(^DIC(36,+IBEXTDA,0)),U,5) W !,?10,"Selected Insurance Company "_$$GET1^DIQ(36,IBEXTDA,.01)_" is Inactive!",!
"RTN","IBCNBCD",12,0)
 ;
"RTN","IBCNBCD",13,0)
 W ! D WRTFLD("  Insurance Data:  Buffer Data                     Selected Insurance Company   ",0,80,"BU")
"RTN","IBCNBCD",14,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,20.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(36,IBEXTDA,.01),1:"<none selected>") D WRTLN("Company Name:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBCD",15,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,20.05),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(36,IBEXTDA,1),1:"") D WRTLN("Reimburse?:",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBCD",16,0)
 ;
"RTN","IBCNBCD",17,0)
 D DISPLAY(20.02,36,.131,"Phone Number:")
"RTN","IBCNBCD",18,0)
 D DISPLAY(20.03,36,.132,"Billing Phone:")
"RTN","IBCNBCD",19,0)
 D DISPLAY(20.04,36,.133,"Pre-Cert Phone:")
"RTN","IBCNBCD",20,0)
 D DISPLAY(21.01,36,.111,"Street [Line 1]:")
"RTN","IBCNBCD",21,0)
 D DISPLAY(21.02,36,.112,"Street [Line 2]:")
"RTN","IBCNBCD",22,0)
 D DISPLAY(21.03,36,.113,"Street [Line 3]:")
"RTN","IBCNBCD",23,0)
 D DISPLAY(21.04,36,.114,"City:")
"RTN","IBCNBCD",24,0)
 D DISPLAY(21.05,36,.115,"State:")
"RTN","IBCNBCD",25,0)
 D DISPLAY(21.06,36,.116,"Zip Code:")
"RTN","IBCNBCD",26,0)
 ;
"RTN","IBCNBCD",27,0)
 S IBFLD1="(bold=accepted on Merge)",IBFLD2="(bold=replaced on Overwrite)" D WRTLN("",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBCD",28,0)
 Q
"RTN","IBCNBCD",29,0)
 ;
"RTN","IBCNBCD",30,0)
GRP(IBBUFDA,IBGRPDA) ; display a buffer entry's group insurance fields and an existing group/plan's fields for comparison
"RTN","IBCNBCD",31,0)
 N IBEXTDA,IBFLD1,IBFLD2,X I '$G(IBBUFDA) Q
"RTN","IBCNBCD",32,0)
 ;
"RTN","IBCNBCD",33,0)
 S IBEXTDA=$G(IBGRPDA)_","
"RTN","IBCNBCD",34,0)
 ;
"RTN","IBCNBCD",35,0)
 I +$P($G(^IBA(355.3,+IBEXTDA,0)),U,11) W !,?23,"Selected Group/Plan is Inactive!",!
"RTN","IBCNBCD",36,0)
 ;
"RTN","IBCNBCD",37,0)
 W ! D WRTFLD(" Group/Plan Data:  Buffer Data                     Selected Group/Plan          ",0,80,"BU")
"RTN","IBCNBCD",38,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,20.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(355.3,IBEXTDA,.01),1:"<none selected>") D WRTLN("Company Name:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBCD",39,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,40.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(355.3,IBEXTDA,.02),1:"") D WRTLN("Is Group Plan?:",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBCD",40,0)
 ;
"RTN","IBCNBCD",41,0)
 D DISPLAY(40.02,355.3,.03,"Group Name:")
"RTN","IBCNBCD",42,0)
 D DISPLAY(40.03,355.3,.04,"Group Number:")
"RTN","IBCNBCD",43,0)
 D DISPLAY(40.1,355.3,6.02,"BIN:") ;;Daou/EEN - adding BIN and PCN
"RTN","IBCNBCD",44,0)
 D DISPLAY(40.11,355.3,6.03,"PCN:")
"RTN","IBCNBCD",45,0)
 D DISPLAY(40.04,355.3,.05,"Require UR:")
"RTN","IBCNBCD",46,0)
 D DISPLAY(40.05,355.3,.06,"Require Pre-Cert:")
"RTN","IBCNBCD",47,0)
 D DISPLAY(40.06,355.3,.12,"Require Amb Cert:")
"RTN","IBCNBCD",48,0)
 D DISPLAY(40.07,355.3,.07,"Exclude Pre-Cond:")
"RTN","IBCNBCD",49,0)
 D DISPLAY(40.08,355.3,.08,"Benefits Assign:")
"RTN","IBCNBCD",50,0)
 D DISPLAY(40.09,355.3,.09,"Type of Plan:")
"RTN","IBCNBCD",51,0)
 ;
"RTN","IBCNBCD",52,0)
 S IBFLD1="(bold=accepted on merge)",IBFLD2="(bold=replaced on overwrite)" D WRTLN("",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBCD",53,0)
 Q
"RTN","IBCNBCD",54,0)
 ;
"RTN","IBCNBCD",55,0)
POLICY(IBBUFDA,IBPOLDA) ; display a buffer entry's patient policy fields and an existing patient policy's fields for comparison
"RTN","IBCNBCD",56,0)
 N DFN,IBEXTDA,IBFLD1,IBFLD2,X,Y,DIR,DIRUT I '$G(IBBUFDA) Q
"RTN","IBCNBCD",57,0)
 S DFN=+$G(^IBA(355.33,IBBUFDA,60))
"RTN","IBCNBCD",58,0)
 ;
"RTN","IBCNBCD",59,0)
 S IBEXTDA=$G(IBPOLDA)_","_DFN_","
"RTN","IBCNBCD",60,0)
 ;
"RTN","IBCNBCD",61,0)
 W ! D WRTFLD("     Policy Data:  Buffer Data                     Selected Policy              ",0,80,"BU")
"RTN","IBCNBCD",62,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,20.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(2.312,IBEXTDA,.01),1:"<none selected>") D WRTLN("Company Name:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBCD",63,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,40.03),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(2.312,IBEXTDA,21),1:"") D WRTLN("Group #:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBCD",64,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,60.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(2,DFN,.01),1:"") D WRTLN("Patient Name:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBCD",65,0)
 S IBFLD1=$P($$GET1^DIQ(355.33,IBBUFDA,.1),"@"),IBFLD2=$S(+IBEXTDA:$P($$GET1^DIQ(2.312,IBEXTDA,1.03),"@"),1:"") D WRTLN("Last Verified:",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBCD",66,0)
 ;
"RTN","IBCNBCD",67,0)
 D DISPLAY(60.02,2.312,8,"Effective Date:")
"RTN","IBCNBCD",68,0)
 D DISPLAY(60.03,2.312,3,"Expiration Date:")
"RTN","IBCNBCD",69,0)
 D DISPLAY(60.04,2.312,1,"Subscriber Id:")
"RTN","IBCNBCD",70,0)
 D DISPLAY(60.05,2.312,6,"Whose Insurance:")
"RTN","IBCNBCD",71,0)
 D DISPLAY(60.06,2.312,16,"Relationship:")
"RTN","IBCNBCD",72,0)
 D DISPLAY(60.07,2.312,17,"Name of Insured:")
"RTN","IBCNBCD",73,0)
 D DISPLAY(60.08,2.312,3.01,"Insured's DOB:")
"RTN","IBCNBCD",74,0)
 D DISPLAY(60.09,2.312,3.05,"Insured's SSN:")
"RTN","IBCNBCD",75,0)
 D DISPLAY(60.13,2.312,3.12,"Insured's SEX:")
"RTN","IBCNBCD",76,0)
 D DISPLAY(60.1,2.312,4.01,"Primary Provider:")
"RTN","IBCNBCD",77,0)
 D DISPLAY(60.11,2.312,4.02,"Provider Phone:")
"RTN","IBCNBCD",78,0)
 D DISPLAY(60.12,2.312,.2,"Coor of Benefits:")
"RTN","IBCNBCD",79,0)
 D DISPLAY(61.01,2.312,2.1,"Emp Sponsored?:")
"RTN","IBCNBCD",80,0)
 ;
"RTN","IBCNBCD",81,0)
 I +$G(^IBA(355.33,IBBUFDA,61))!($$GET1^DIQ(2.312,IBEXTDA,2.1)="YES") D ESGHP
"RTN","IBCNBCD",82,0)
 ;
"RTN","IBCNBCD",83,0)
 S IBFLD1="(bold=accepted on merge)",IBFLD2="(bold=replaced on overwrite)" D WRTLN("",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBCD",84,0)
 ;
"RTN","IBCNBCD",85,0)
 Q
"RTN","IBCNBCD",86,0)
 ;
"RTN","IBCNBCD",87,0)
ESGHP ; display employee sponsored group health plan
"RTN","IBCNBCD",88,0)
 W ! S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR W ! Q:$D(DIRUT)
"RTN","IBCNBCD",89,0)
 ;
"RTN","IBCNBCD",90,0)
 D DISPLAY(61.02,2.312,2.015,"Employer Name:")
"RTN","IBCNBCD",91,0)
 D DISPLAY(61.03,2.312,2.11,"Emp Status:")
"RTN","IBCNBCD",92,0)
 D DISPLAY(61.04,2.312,2.12,"Retirement Date:")
"RTN","IBCNBCD",93,0)
 D DISPLAY(61.05,2.312,2.01,"Send to Employer:")
"RTN","IBCNBCD",94,0)
 D DISPLAY(61.06,2.312,2.02,"Emp Street Ln 1:")
"RTN","IBCNBCD",95,0)
 D DISPLAY(61.07,2.312,2.03,"Emp Street Ln 2:")
"RTN","IBCNBCD",96,0)
 D DISPLAY(61.08,2.312,2.04,"Emp Street Ln 3:")
"RTN","IBCNBCD",97,0)
 D DISPLAY(61.09,2.312,2.05,"Emp City:")
"RTN","IBCNBCD",98,0)
 D DISPLAY(61.1,2.312,2.06,"Emp State:")
"RTN","IBCNBCD",99,0)
 D DISPLAY(61.11,2.312,2.07,"Emp Zip Code:")
"RTN","IBCNBCD",100,0)
 D DISPLAY(61.12,2.312,2.08,"Emp Phone:")
"RTN","IBCNBCD",101,0)
 ;
"RTN","IBCNBCD",102,0)
 Q
"RTN","IBCNBCD",103,0)
 ;
"RTN","IBCNBCD",104,0)
DISPLAY(BFLD,IFILE,IFLD,LABEL) ; extract, compare, write the two corresponding fields; one from buffer, one from ins files
"RTN","IBCNBCD",105,0)
 N BUFDATA,EXTDATA,IBOVER,IBMERG S EXTDATA=""
"RTN","IBCNBCD",106,0)
 S BUFDATA=$$GET1^DIQ(355.33,IBBUFDA,BFLD)
"RTN","IBCNBCD",107,0)
 I +IBEXTDA S EXTDATA=$$GET1^DIQ(IFILE,IBEXTDA,IFLD)
"RTN","IBCNBCD",108,0)
 ;
"RTN","IBCNBCD",109,0)
 S IBOVER=$S(BUFDATA'=""&(BUFDATA'=EXTDATA):"B",1:""),IBMERG=$S(EXTDATA="":"B",1:"")
"RTN","IBCNBCD",110,0)
 ;
"RTN","IBCNBCD",111,0)
 D WRTLN(LABEL,BUFDATA,EXTDATA,IBOVER,IBMERG)
"RTN","IBCNBCD",112,0)
 Q
"RTN","IBCNBCD",113,0)
 ;
"RTN","IBCNBCD",114,0)
WRTLN(LABEL,FLD1,FLD2,OVER,MERG,ATTR) ; write a line of formatted data with label and two fields
"RTN","IBCNBCD",115,0)
 S ATTR=$G(ATTR),OVER=ATTR_$G(OVER),MERG=ATTR_$G(MERG)
"RTN","IBCNBCD",116,0)
 S LABEL=$J(LABEL,17)_"  ",FLD1=FLD1_$J("",29-$L(FLD1)),FLD2=FLD2_$J("",29-$L(FLD2))
"RTN","IBCNBCD",117,0)
 W !
"RTN","IBCNBCD",118,0)
 D WRTFLD(LABEL,0,19,ATTR),WRTFLD(FLD1,19,29,MERG)
"RTN","IBCNBCD",119,0)
 D WRTFLD(" | ",48,3,ATTR),WRTFLD(FLD2,51,29,OVER)
"RTN","IBCNBCD",120,0)
 Q
"RTN","IBCNBCD",121,0)
 ;
"RTN","IBCNBCD",122,0)
WRTFLD(STRING,COL,WD,ATTR) ; write an individual field with display attributes
"RTN","IBCNBCD",123,0)
 N ATTRB,ATTRE,DX,DY,X,Y
"RTN","IBCNBCD",124,0)
 S ATTRB="",ATTRB=$S(ATTR["B":$G(IOINHI),1:"")_$S(ATTR["U":$G(IOUON),1:"")
"RTN","IBCNBCD",125,0)
 S ATTRE="",ATTRE=$S(ATTR["B":$G(IOINORM),1:"")_$S(ATTR["U":$G(IOUOFF),1:"")
"RTN","IBCNBCD",126,0)
 ;
"RTN","IBCNBCD",127,0)
 S DX=COL,DY=$Y X IOXY
"RTN","IBCNBCD",128,0)
 W ATTRB,$E(STRING,1,WD),ATTRE
"RTN","IBCNBCD",129,0)
 S DX=(COL+WD),DY=$Y X IOXY
"RTN","IBCNBCD",130,0)
 Q
"RTN","IBCNBEE")
0^6^B44602878^B44406839
"RTN","IBCNBEE",1,0)
IBCNBEE ;ALB/ARH-Ins Buffer: add/edit existing entries in buffer ;1 Jun 97
"RTN","IBCNBEE",2,0)
 ;;2.0;INTEGRATED BILLING;**82,184,252,251,356,361**;21-MAR-94;Build 9
"RTN","IBCNBEE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNBEE",4,0)
 ;
"RTN","IBCNBEE",5,0)
ADD(IBSOURCE) ; add a new buffer file entry (#355.33), sets only status (0) node data
"RTN","IBCNBEE",6,0)
 N IBARR,IBERR,IBIFN,IBX I '$G(IBSOURCE) S IBSOURCE=1
"RTN","IBCNBEE",7,0)
 ;
"RTN","IBCNBEE",8,0)
 S IBARR(355.33,"+1,",.01)="NOW",IBARR(355.33,"+1,",.03)=IBSOURCE
"RTN","IBCNBEE",9,0)
 D UPDATE^DIE("E","IBARR","IBIFN","IBERR")
"RTN","IBCNBEE",10,0)
 S IBX=+$G(IBIFN(1)) I $D(IBERR) S $P(IBX,U,2)=$G(IBERR("DIERR",1,"TEXT",1))
"RTN","IBCNBEE",11,0)
 Q IBX
"RTN","IBCNBEE",12,0)
 ;
"RTN","IBCNBEE",13,0)
STATUS(IBBUFDA,STATUS,NC,NG,NP) ; edit the status node
"RTN","IBCNBEE",14,0)
 ;
"RTN","IBCNBEE",15,0)
 N IBX,IBARR,IBIFN Q:'$G(IBBUFDA)  S IBIFN=IBBUFDA_","
"RTN","IBCNBEE",16,0)
 D CHK^DIE(355.33,.04,"",$G(STATUS),.IBX) Q:IBX="^"
"RTN","IBCNBEE",17,0)
 ;
"RTN","IBCNBEE",18,0)
 S IBARR(355.33,IBIFN,.04)=STATUS I STATUS="R" S (NC,NG,NP)=0
"RTN","IBCNBEE",19,0)
 S IBARR(355.33,IBIFN,.07)=+$G(NC),IBARR(355.33,IBIFN,.08)=+$G(NG),IBARR(355.33,IBIFN,.09)=+$G(NP)
"RTN","IBCNBEE",20,0)
 D FILE^DIE("E","IBARR")
"RTN","IBCNBEE",21,0)
 Q
"RTN","IBCNBEE",22,0)
 ;
"RTN","IBCNBEE",23,0)
INS(IBBUFDA,FLDS) ; edit the insurance company portion of a buffer file entry
"RTN","IBCNBEE",24,0)
 ;
"RTN","IBCNBEE",25,0)
 N DIC,DIE,DA,DR,X,Y,IBCNEXT1
"RTN","IBCNBEE",26,0)
 I $P($G(^IBA(355.33,+$G(IBBUFDA),0)),U,4)'="E" Q
"RTN","IBCNBEE",27,0)
 I $G(FLDS)="" S FLDS="MR"
"RTN","IBCNBEE",28,0)
 ;
"RTN","IBCNBEE",29,0)
 ; ESG - 6/18/02 - SDD 5.1.4 - Usage of Auto Match when editing
"RTN","IBCNBEE",30,0)
 ;     - the insurance company name in the buffer.  Also added an
"RTN","IBCNBEE",31,0)
 ;     - input transform (see below) to clean up the data coming in.
"RTN","IBCNBEE",32,0)
 ;     - fetch the current buffer ins co name
"RTN","IBCNBEE",33,0)
 ;
"RTN","IBCNBEE",34,0)
 I FLDS="MR" S IBCNEXT1=$P($G(^IBA(355.33,IBBUFDA,20)),U,1)
"RTN","IBCNBEE",35,0)
 ;
"RTN","IBCNBEE",36,0)
 S DR=$P($T(@(FLDS_"INS")+1),";;",2,9999) Q:DR=""
"RTN","IBCNBEE",37,0)
 ;
"RTN","IBCNBEE",38,0)
 I FLDS="MR" Q:$$INSNAME(IBBUFDA)<0  S DR=$P($T(@(FLDS_"INS")+1),";;",2,9999),DR=$P(DR,";",2,99999)
"RTN","IBCNBEE",39,0)
 ;
"RTN","IBCNBEE",40,0)
 S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",41,0)
 Q
"RTN","IBCNBEE",42,0)
 ;
"RTN","IBCNBEE",43,0)
GRP(IBBUFDA,FLDS) ; edit the group/plan portion of the buffer file entry
"RTN","IBCNBEE",44,0)
 ;
"RTN","IBCNBEE",45,0)
 N DIC,DIE,DA,DR,X,Y I $P($G(^IBA(355.33,+$G(IBBUFDA),0)),U,4)'="E" Q
"RTN","IBCNBEE",46,0)
 I $G(FLDS)="" S FLDS="MR"
"RTN","IBCNBEE",47,0)
 ;
"RTN","IBCNBEE",48,0)
 S DR=$P($T(@(FLDS_"GRP")+1),";;",2,9999) Q:DR=""
"RTN","IBCNBEE",49,0)
 S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",50,0)
 Q
"RTN","IBCNBEE",51,0)
 ;
"RTN","IBCNBEE",52,0)
POLICY(IBBUFDA,FLDS) ; edit the patient policy portion of the buffer file entry
"RTN","IBCNBEE",53,0)
 ;
"RTN","IBCNBEE",54,0)
 N DIC,DIE,DA,DR,X,Y,IBZZ I $P($G(^IBA(355.33,+$G(IBBUFDA),0)),U,4)'="E" Q
"RTN","IBCNBEE",55,0)
 I $G(FLDS)="" S FLDS="MR"
"RTN","IBCNBEE",56,0)
 ;
"RTN","IBCNBEE",57,0)
 S DR=$P($T(@(FLDS_"POL")+1),";;",2,9999) Q:DR=""
"RTN","IBCNBEE",58,0)
 S DIE="^IBA(355.33,",DA=IBBUFDA
"RTN","IBCNBEE",59,0)
 S DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DA,DR Q:$D(Y)
"RTN","IBCNBEE",60,0)
 ;
"RTN","IBCNBEE",61,0)
 I FLDS="MR" D ESGHP(IBBUFDA)
"RTN","IBCNBEE",62,0)
 Q
"RTN","IBCNBEE",63,0)
 ;
"RTN","IBCNBEE",64,0)
ESGHP(IBBUFDA) ; sponsoring employer information
"RTN","IBCNBEE",65,0)
 N DIR,DIRUT,DUOUT,DTOUT,VAOA,VAERR,VA,DFN,IB60,IBE,IBEMPST,IBREL
"RTN","IBCNBEE",66,0)
 ;
"RTN","IBCNBEE",67,0)
 ; if insured is patient or spouse, ask if insured's current employer is the plan's sponsoring employer, if yes auto stuff it
"RTN","IBCNBEE",68,0)
 I +$G(^IBA(355.33,IBBUFDA,61)) W ! S IB60=$G(^IBA(355.33,IBBUFDA,60)) D  Q:$D(DIRUT)
"RTN","IBCNBEE",69,0)
 . ; sponsoring employer is current employer?
"RTN","IBCNBEE",70,0)
 . S DFN=+IB60,IBREL=$P(IB60,U,6),VAOA("A")=$S(IBREL="01":5,IBREL="02":6,1:"") I 'DFN!(VAOA("A")="") Q
"RTN","IBCNBEE",71,0)
 . D OAD^VADPT I $G(VAOA(9))="" Q
"RTN","IBCNBEE",72,0)
 . S DIR("?")="Enter Yes if this plan is sponsored by the "_$S(IBREL="01":"patient's",1:"spouse's")_" current employer."
"RTN","IBCNBEE",73,0)
 . S DIR("?",1)="Entering Yes will result in the "_$S(IBREL="01":"patient's",1:"spouse's")_" current employer data being",DIR("?",2)="added to the policy as the Sponsoring Employer data.",DIR("?",3)=""
"RTN","IBCNBEE",74,0)
 . S DIR("A")="Current Employer "_VAOA(9)_" Sponsors this Plan",DIR("B")="No",DIR(0)="Y" D ^DIR W ! I Y'=1 Q
"RTN","IBCNBEE",75,0)
 . ;
"RTN","IBCNBEE",76,0)
 . D DELEMP(IBBUFDA) ; delete any data already contained in these fields
"RTN","IBCNBEE",77,0)
 . ;
"RTN","IBCNBEE",78,0)
 . ; if the insured's current employer sponsors the plan then stuff that employer's address into the buffer
"RTN","IBCNBEE",79,0)
 . S IBE=$S(IBREL="01":.311,1:.25),IBEMPST=$P($G(^DPT(DFN,IBE)),U,15)
"RTN","IBCNBEE",80,0)
 . S DR="61.02///"_VAOA(9)_";61.03///"_IBEMPST_";61.06///"_$E(VAOA(1),1,30)_";61.07///"_$E(VAOA(2),1,30)
"RTN","IBCNBEE",81,0)
 . S DR=DR_";61.08///"_$E(VAOA(3),1,30)_";61.09///"_$E(VAOA(4),1,20)_";61.1////"_$P(VAOA(5),U,1)
"RTN","IBCNBEE",82,0)
 . S DR=DR_";61.11////"_$P(VAOA(11),U,1)_";61.12///"_$E(VAOA(8),1,15)
"RTN","IBCNBEE",83,0)
 . S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",84,0)
 ;
"RTN","IBCNBEE",85,0)
 ; if employer sponsored plan, edit buffer entry's sponsoring employer info
"RTN","IBCNBEE",86,0)
 I +$G(^IBA(355.33,IBBUFDA,61)) S DR="61.02:61.12",DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",87,0)
 ;
"RTN","IBCNBEE",88,0)
 ; if not employer sponsored plan, delete any existing sponsoring employer data
"RTN","IBCNBEE",89,0)
 I $D(^IBA(355.33,IBBUFDA,61)),'$G(^IBA(355.33,IBBUFDA,61)) D DELEMP(IBBUFDA)
"RTN","IBCNBEE",90,0)
 Q
"RTN","IBCNBEE",91,0)
 ;
"RTN","IBCNBEE",92,0)
DELEMP(IBBUFDA) ; delete sponsoring employer data
"RTN","IBCNBEE",93,0)
 N DIC,DIE,DA,DR,X,Y Q:'$D(^IBA(355.33,+$G(IBBUFDA),61))
"RTN","IBCNBEE",94,0)
 S DR="61.02///@;61.03///@;61.04///@;61.05///@;61.06///@;61.07///@;61.08///@;61.09///@;61.10///@;61.11///@;61.12///@"
"RTN","IBCNBEE",95,0)
 S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",96,0)
 Q
"RTN","IBCNBEE",97,0)
 ;
"RTN","IBCNBEE",98,0)
INSHELP ;
"RTN","IBCNBEE",99,0)
 W !!,"------------------------ INSURANCE COMPANY INFORMATION -------------------------",!
"RTN","IBCNBEE",100,0)
 Q
"RTN","IBCNBEE",101,0)
GRPHELP ;
"RTN","IBCNBEE",102,0)
 W !!,"---------------------------- GROUP/PLAN INFORMATION ----------------------------"
"RTN","IBCNBEE",103,0)
 W !," The following data defines a specific Group or Plan provided by an Insurance "
"RTN","IBCNBEE",104,0)
 W !," Company.  This may be either a group plan with many potential members or an "
"RTN","IBCNBEE",105,0)
 W !," individual plan with a single member.",!
"RTN","IBCNBEE",106,0)
 Q
"RTN","IBCNBEE",107,0)
POLHELP ;
"RTN","IBCNBEE",108,0)
 W !!,"---------------------- POLICY AND SUBSCRIBER INFORMATION -----------------------"
"RTN","IBCNBEE",109,0)
 W !," The following data defines the subscriber specific policy information for a "
"RTN","IBCNBEE",110,0)
 W !," particular Insurance Plan.  The subscriber, the insured, and the policy holder "
"RTN","IBCNBEE",111,0)
 W !," all refer to the person who is a member of the plan and therefore holds the "
"RTN","IBCNBEE",112,0)
 W !," policy.  The patient must be covered under the plan but may not be the policy"
"RTN","IBCNBEE",113,0)
 W !," holder.",!
"RTN","IBCNBEE",114,0)
 Q
"RTN","IBCNBEE",115,0)
 ;
"RTN","IBCNBEE",116,0)
INSNAME(IBBUFDA) ;  Reset insurance company name
"RTN","IBCNBEE",117,0)
 N DR,DIE,DA,Y,X,IBX,IBNEW,IBNAME
"RTN","IBCNBEE",118,0)
 S IBX=-1
"RTN","IBCNBEE",119,0)
 S DR=20.01,DIE="^IBA(355.33,",DA=IBBUFDA
"RTN","IBCNBEE",120,0)
 D ^DIE
"RTN","IBCNBEE",121,0)
 I '$D(Y) S IBNEW=$$CHECK(IBBUFDA)
"RTN","IBCNBEE",122,0)
 I +$G(IBNEW)'<0,$G(IBNEW)'=0,$D(IBNEW) S DR=$P(DR,";",1)_"////"_IBNEW S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR I '$D(Y) S IBX=0
"RTN","IBCNBEE",123,0)
 ; BHS - 10/15/03 - If user entered a caret during $$CHECK still set
"RTN","IBCNBEE",124,0)
 ;                  return value to 0 so the user can edit the other
"RTN","IBCNBEE",125,0)
 ;                  INS fields
"RTN","IBCNBEE",126,0)
 I $G(IBNEW)=0!($G(IBNEW)=-1) S IBX=0
"RTN","IBCNBEE",127,0)
 Q IBX
"RTN","IBCNBEE",128,0)
 ;
"RTN","IBCNBEE",129,0)
CHECK(IBBUFDA) ; Select Insurance Company Name and Automatch
"RTN","IBCNBEE",130,0)
 ; Buffer file (#355.33), field# 20.01.
"RTN","IBCNBEE",131,0)
 ; ESG - 6/18/02 - SDD 5.1.4 - Usage of Auto Match when editing the
"RTN","IBCNBEE",132,0)
 ;       insurance company name.  Also, display the insurance company
"RTN","IBCNBEE",133,0)
 ;       name lookup/lister and the Auto Match lookup/lister.
"RTN","IBCNBEE",134,0)
 ;
"RTN","IBCNBEE",135,0)
 NEW IBNEW,IBNAME,AMLIST
"RTN","IBCNBEE",136,0)
 ;
"RTN","IBCNBEE",137,0)
 S IBNEW=0,IBNAME=$P($G(^IBA(355.33,$G(IBBUFDA),20)),U,1)
"RTN","IBCNBEE",138,0)
 I IBNAME="" G CHECKQ
"RTN","IBCNBEE",139,0)
 ;
"RTN","IBCNBEE",140,0)
 ; Perform an insurance company lookup/lister
"RTN","IBCNBEE",141,0)
 ; BHS - 10/15/03 - Removed quits when user enters a caret to quit the
"RTN","IBCNBEE",142,0)
 ;                  the ins lister or Auto Match lister
"RTN","IBCNBEE",143,0)
 S IBNEW=$$DICINS^IBCNBU1(IBNAME,1,10)
"RTN","IBCNBEE",144,0)
 I IBNEW=0!(IBNEW<0) D
"RTN","IBCNBEE",145,0)
 . I '$$AMLOOK^IBCNEUT1(IBNAME,1,.AMLIST) Q
"RTN","IBCNBEE",146,0)
 . S IBNEW=$$AMSEL^IBCNEUT1(.AMLIST)
"RTN","IBCNBEE",147,0)
 ;
"RTN","IBCNBEE",148,0)
 ; user chose a valid insurance company - possible Auto Match add
"RTN","IBCNBEE",149,0)
 I IBNEW'<0,IBNEW'=0 D AMADD^IBCNEUT6(X,IBCNEXT1)
"RTN","IBCNBEE",150,0)
 ;
"RTN","IBCNBEE",151,0)
CHECKQ Q IBNEW
"RTN","IBCNBEE",152,0)
 ;
"RTN","IBCNBEE",153,0)
MRINS ; Insurance Company fields asked of MCCR users in the Buffer Process options (all buffer ins fields 20.01-21.06)
"RTN","IBCNBEE",154,0)
 ;;20.01;20.05;20.02:20.04;21.01;I X="" S Y="@111";21.02;I X="" S Y="@111";21.03;@111;21.04:21.06
"RTN","IBCNBEE",155,0)
 ;
"RTN","IBCNBEE",156,0)
MRGRP ; Group/Plan fields asked of MCCR users in the Buffer Process options (all buffer grp fields 40.01-40.09) ;;Daou/EEN adding BIN and PCN (40.1,40.11)
"RTN","IBCNBEE",157,0)
 ;;40.01:40.03;40.1;40.11;40.09;40.04:40.08
"RTN","IBCNBEE",158,0)
 ;
"RTN","IBCNBEE",159,0)
MRPOL ; Patient Policy fields asked of MCCR users in the Buffer Process options (all buffer policy fields except ESGHP 60.02-61.01
"RTN","IBCNBEE",160,0)
 ;;60.02;60.03;60.05;60.06//^S X=$S(X="v":"01",X="s":"02",1:"");S IBZZ=X;60.04;I IBZZ'="01" S Y="@111";60.07///1;60.08///@;60.09///@;S Y="@112";@111;60.07:60.09;60.13;@112;60.1:60.12;.03;61.01
"RTN","IBCNBEE",161,0)
 ;
"RTN","IBCNBEE",162,0)
OTINS ; Insurance Company fields asked of non-MCCR users entering buffer data from options outside IB (20.01-20.04,21.01-21.06)
"RTN","IBCNBEE",163,0)
 ;;20.01:20.04;21.01;I X="" S Y="@111";21.02;I X="" S Y="@111";21.03;@111;21.04:21.06
"RTN","IBCNBEE",164,0)
 ;
"RTN","IBCNBEE",165,0)
OTGRP ; Group/Plan fields asked of non-MCCR users entering buffer data from options outside IB (40.02,40.03,40.09) ;;Daou/EEN-adding BIN & PCN (40.1,40.11)
"RTN","IBCNBEE",166,0)
 ;;40.02;40.03;40.1;40.11;40.09
"RTN","IBCNBEE",167,0)
 ;
"RTN","IBCNBEE",168,0)
OTPOL ; Patient Policy fields asked of non-MCCR users entering buffer data from options outside IB (60.02-60.09)
"RTN","IBCNBEE",169,0)
 ;;60.02;60.03;60.05;60.06//^S X=$S(X="v":"01",X="s":"02",1:"");S IBZZ=X;60.04;I IBZZ'="01" S Y="@111";60.07///1;60.08///@;60.09///@;S Y="@112";@111;60.07:60.09;60.13;@112
"RTN","IBCNBMI")
0^7^B54212603^B52789552
"RTN","IBCNBMI",1,0)
IBCNBMI ;ALB/ARH-Ins Buffer: move buffer data to insurance files ; 09 Mar 2005  11:42 AM
"RTN","IBCNBMI",2,0)
 ;;2.0;INTEGRATED BILLING;**82,184,246,251,299,345,361**;21-MAR-94;Build 9
"RTN","IBCNBMI",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNBMI",4,0)
 ;
"RTN","IBCNBMI",5,0)
INS(IBBUFDA,IBINSDA,TYPE) ;  move buffer insurance company data (file 355.33) to existing Insurance Company (file 36)
"RTN","IBCNBMI",6,0)
 ;
"RTN","IBCNBMI",7,0)
 S IBBUFDA=IBBUFDA_",",IBINSDA=$G(IBINSDA)_","
"RTN","IBCNBMI",8,0)
 D SET("INS",IBBUFDA,IBINSDA,TYPE)
"RTN","IBCNBMI",9,0)
 Q
"RTN","IBCNBMI",10,0)
 ;
"RTN","IBCNBMI",11,0)
GRP(IBBUFDA,IBGRPDA,TYPE) ;  move buffer insurance group/plan data (file 355.33) to existing Group/Plan (file 355.33)
"RTN","IBCNBMI",12,0)
 ;
"RTN","IBCNBMI",13,0)
 S IBBUFDA=IBBUFDA_",",IBGRPDA=$G(IBGRPDA)_","
"RTN","IBCNBMI",14,0)
 D SET("GRP",IBBUFDA,IBGRPDA,TYPE)
"RTN","IBCNBMI",15,0)
 D STUFF("GRP",IBGRPDA)
"RTN","IBCNBMI",16,0)
 Q
"RTN","IBCNBMI",17,0)
 ;
"RTN","IBCNBMI",18,0)
POLICY(IBBUFDA,IBPOLDA,TYPE) ;  move buffer insurance policy data (file 355.33) to existing Patient Policy (file 2.312)
"RTN","IBCNBMI",19,0)
 ;
"RTN","IBCNBMI",20,0)
 N DFN S DFN=+$G(^IBA(355.33,+$G(IBBUFDA),60)) Q:'DFN
"RTN","IBCNBMI",21,0)
 ;
"RTN","IBCNBMI",22,0)
 S IBBUFDA=IBBUFDA_",",IBPOLDA=$G(IBPOLDA)_","_DFN_","
"RTN","IBCNBMI",23,0)
 D SET("POL",IBBUFDA,IBPOLDA,TYPE)
"RTN","IBCNBMI",24,0)
 D STUFF("POL",IBPOLDA)
"RTN","IBCNBMI",25,0)
 D POLOTH(IBBUFDA,IBPOLDA)
"RTN","IBCNBMI",26,0)
 Q
"RTN","IBCNBMI",27,0)
 ;
"RTN","IBCNBMI",28,0)
SET(SET,IBBUFDA,IBEXTDA,TYPE) ; move buffer data to insurance files
"RTN","IBCNBMI",29,0)
 ; Input:  IBBUFDA - ifn of Buffer File entry to move (#355.33)
"RTN","IBCNBMI",30,0)
 ;         IBEXTDA - ifn of insurance entry to update (#36,355.3,2)
"RTN","IBCNBMI",31,0)
 ;         TYPE    - 1 = Merge     (only buffer data moved to blank fields in ins file, no replace)
"RTN","IBCNBMI",32,0)
 ;                   2 = Overwrite (all buffer data moved to ins file, replace existing data)
"RTN","IBCNBMI",33,0)
 ;                   3 = Replace (all buffer data including null move to ins file)
"RTN","IBCNBMI",34,0)
 ;                   4 = Individually Accept (Skip Blanks) (user accepts
"RTN","IBCNBMI",35,0)
 ;  individual diffs b/w buffer data and existing file data (excl blanks)
"RTN","IBCNBMI",36,0)
 ;  to overwrite flds (or addr grp) in existing file)
"RTN","IBCNBMI",37,0)
 ;
"RTN","IBCNBMI",38,0)
 ;
"RTN","IBCNBMI",39,0)
 N IBX,IBFLDS,EXTFILE,DRBUF,DREXT,BUFARR,EXTARR,IBBUFFLD,IBEXTFLD,IBBUFVAL,IBEXTVAL,IBCHNG,IBCHNGN,IBERR
"RTN","IBCNBMI",40,0)
 ;
"RTN","IBCNBMI",41,0)
 D FIELDS(SET_"FLD")
"RTN","IBCNBMI",42,0)
 S IBX=$P($T(@(SET_"DR")+1),";;",2),EXTFILE=+$P(IBX,U,1),DRBUF=$P(IBX,U,2),DREXT=$P(IBX,U,3)
"RTN","IBCNBMI",43,0)
 ;
"RTN","IBCNBMI",44,0)
 D GETS^DIQ(355.33,IBBUFDA,DRBUF,"E","BUFARR")
"RTN","IBCNBMI",45,0)
 D GETS^DIQ(EXTFILE,IBEXTDA,DREXT,"E","EXTARR")
"RTN","IBCNBMI",46,0)
 ;
"RTN","IBCNBMI",47,0)
 I +$G(TYPE) S IBBUFFLD=0 F  S IBBUFFLD=$O(BUFARR(355.33,IBBUFDA,IBBUFFLD)) Q:'IBBUFFLD  D
"RTN","IBCNBMI",48,0)
 . S IBEXTFLD=$G(IBFLDS(IBBUFFLD)) Q:'IBEXTFLD
"RTN","IBCNBMI",49,0)
 . S IBBUFVAL=BUFARR(355.33,IBBUFDA,IBBUFFLD,"E")
"RTN","IBCNBMI",50,0)
 . S IBEXTVAL=$G(EXTARR(EXTFILE,IBEXTDA,IBEXTFLD,"E"))
"RTN","IBCNBMI",51,0)
 . ;
"RTN","IBCNBMI",52,0)
 . I IBBUFVAL=IBEXTVAL Q
"RTN","IBCNBMI",53,0)
 . I TYPE=1,IBEXTVAL'="" Q
"RTN","IBCNBMI",54,0)
 . I TYPE=2,IBBUFVAL="" Q
"RTN","IBCNBMI",55,0)
 . I TYPE=4,'$D(^TMP($J,"IB BUFFER SELECTED",IBBUFFLD)) Q
"RTN","IBCNBMI",56,0)
 . ;
"RTN","IBCNBMI",57,0)
 . S IBCHNG(EXTFILE,IBEXTDA,IBEXTFLD)=IBBUFVAL
"RTN","IBCNBMI",58,0)
 . S IBCHNGN(EXTFILE,IBEXTDA,IBEXTFLD)=""
"RTN","IBCNBMI",59,0)
 ;
"RTN","IBCNBMI",60,0)
 I $D(IBCHNGN)>9 D FILE^DIE("E","IBCHNGN","IBERR")
"RTN","IBCNBMI",61,0)
 I $D(IBCHNG)>9 D FILE^DIE("E","IBCHNG","IBERR")
"RTN","IBCNBMI",62,0)
 Q
"RTN","IBCNBMI",63,0)
 ;
"RTN","IBCNBMI",64,0)
STUFF(SET,IBEXTDA) ; update fields in insurance files that should be automatically set when an entry is edited
"RTN","IBCNBMI",65,0)
 ; Input:  IBEXTDA - ifn of insurance entry to update (#36,356,2)
"RTN","IBCNBMI",66,0)
 ;
"RTN","IBCNBMI",67,0)
 N IBX,IBFLDS,EXTFILE,IBEXTFLD,IBEXTVAL,IBCHNG,IBCHNGN,IBERR
"RTN","IBCNBMI",68,0)
 ;
"RTN","IBCNBMI",69,0)
 D FIELDS(SET_"A")
"RTN","IBCNBMI",70,0)
 S IBX=$P($T(@(SET_"DR")+1),";;",2),EXTFILE=+$P(IBX,U,1)
"RTN","IBCNBMI",71,0)
 ;
"RTN","IBCNBMI",72,0)
 S IBEXTFLD=0 F  S IBEXTFLD=$O(IBFLDS(IBEXTFLD)) Q:'IBEXTFLD  D
"RTN","IBCNBMI",73,0)
 . S IBEXTVAL=IBFLDS(IBEXTFLD) I IBEXTVAL="DUZ" S IBEXTVAL="`"_DUZ
"RTN","IBCNBMI",74,0)
 . S IBCHNG(EXTFILE,IBEXTDA,IBEXTFLD)=IBEXTVAL
"RTN","IBCNBMI",75,0)
 . S IBCHNGN(EXTFILE,IBEXTDA,IBEXTFLD)=""
"RTN","IBCNBMI",76,0)
 ;
"RTN","IBCNBMI",77,0)
 D FILE^DIE("E","IBCHNGN","IBERR")
"RTN","IBCNBMI",78,0)
 D FILE^DIE("E","IBCHNG","IBERR")
"RTN","IBCNBMI",79,0)
 Q
"RTN","IBCNBMI",80,0)
 ;
"RTN","IBCNBMI",81,0)
FIELDS(SET) ; return array of corresponding fields: IBFLDS(Buffer #)=Ins #
"RTN","IBCNBMI",82,0)
 N IBI,IBLN,IBB,IBE,IBG K IBFLDS,IBADDS,IBLBLS
"RTN","IBCNBMI",83,0)
 F IBI=1:1 S IBLN=$P($T(@(SET)+IBI),";;",2) Q:IBLN=""  I $E(IBLN,1)'=" " D
"RTN","IBCNBMI",84,0)
 . S IBB=$P(IBLN,U,1),IBE=$P(IBLN,U,2),IBG=$P(IBLN,U,4)
"RTN","IBCNBMI",85,0)
 . I IBB'="",IBE'="" D
"RTN","IBCNBMI",86,0)
 .. S IBFLDS(IBB)=IBE
"RTN","IBCNBMI",87,0)
 .. I SET["FLD" S IBLBLS(IBB)=$P(IBLN,U,3) I +IBG S IBADDS(IBB)=IBE
"RTN","IBCNBMI",88,0)
 Q
"RTN","IBCNBMI",89,0)
 ;
"RTN","IBCNBMI",90,0)
INSDR ;
"RTN","IBCNBMI",91,0)
 ;;36^20.02:20.04;21.01:21.06^.131;.132;.133;.111:.116
"RTN","IBCNBMI",92,0)
INSFLD ; corresponding fields:  Buffer File (355.33) and Insurance Company file (36)
"RTN","IBCNBMI",93,0)
 ;;20.02^.131^Phone Number^           ; MM Phone Number
"RTN","IBCNBMI",94,0)
 ;;20.03^.132^Billing Phone^          ; Billing Phone Number
"RTN","IBCNBMI",95,0)
 ;;20.04^.133^Pre-Cert Phone^         ; Pre-Certification Phone Number
"RTN","IBCNBMI",96,0)
 ;;21.01^.111^Street [Line 1]^1       ; MM Street Address [Line 1]
"RTN","IBCNBMI",97,0)
 ;;21.02^.112^Street [Line 2]^1       ; MM Street Address [Line 2]
"RTN","IBCNBMI",98,0)
 ;;21.03^.113^Street [Line 3]^1       ; MM Street Address [Line 3]
"RTN","IBCNBMI",99,0)
 ;;21.04^.114^City^1                  ; MM City
"RTN","IBCNBMI",100,0)
 ;;21.05^.115^State^1                 ; MM State
"RTN","IBCNBMI",101,0)
 ;;21.06^.116^Zip^1                   ; MM Zip Code
"RTN","IBCNBMI",102,0)
 ;
"RTN","IBCNBMI",103,0)
GRPDR ;
"RTN","IBCNBMI",104,0)
 ;;355.3^40.02:40.03;40.1;40.11;40.04:40.09;^.03:.04;6.02;6.03;.05:.09;.12
"RTN","IBCNBMI",105,0)
GRPFLD ;corresponding fields:  Buffer File (355.33) and Insurance Group Plan file (355.3)
"RTN","IBCNBMI",106,0)
 ;;40.02^.03^Group Name^              ; Group Name
"RTN","IBCNBMI",107,0)
 ;;40.03^.04^Group Number^            ; Group Number
"RTN","IBCNBMI",108,0)
 ;;40.1^6.02^BIN^                     ; BIN ;;Daou/EEN
"RTN","IBCNBMI",109,0)
 ;;40.11^6.03^PCN^                    ; PCN ;;Daou/EEN
"RTN","IBCNBMI",110,0)
 ;;40.04^.05^Require UR^              ; Utilization Review Required
"RTN","IBCNBMI",111,0)
 ;;40.05^.06^Require Pre-Cert^        ; Pre-Certification Required
"RTN","IBCNBMI",112,0)
 ;;40.06^.12^Require Amb Cert^        ; Ambulatory Care Certification
"RTN","IBCNBMI",113,0)
 ;;40.07^.07^Exclude Pre-Cond^        ; Exclude Pre-Existing Conditions
"RTN","IBCNBMI",114,0)
 ;;40.08^.08^Benefits Assign^         ; Benefits Assignable
"RTN","IBCNBMI",115,0)
 ;;40.09^.09^Type of Plan^            ; Type of Plan
"RTN","IBCNBMI",116,0)
 ;
"RTN","IBCNBMI",117,0)
GRPA ; auto set fields
"RTN","IBCNBMI",118,0)
 ;;1.05^NOW^                          ; Date Last Edited
"RTN","IBCNBMI",119,0)
 ;;1.06^DUZ^                          ; Last edited By
"RTN","IBCNBMI",120,0)
 ;
"RTN","IBCNBMI",121,0)
POLDR ;
"RTN","IBCNBMI",122,0)
 ;;2.312^60.02:61.12^8;3;1;6;16;17;3.01;3.05;4.01;4.02;.2;3.12;2.1;2.015;2.11;2.12;2.01:2.08
"RTN","IBCNBMI",123,0)
POLFLD ; corresponding fields:  Buffer File (355.33) and Insurance Patient Policy file (2.312)
"RTN","IBCNBMI",124,0)
 ;;60.02^8^Effective Date^            ; Effective Date
"RTN","IBCNBMI",125,0)
 ;;60.03^3^Expiration Date^           ; Expiration Date
"RTN","IBCNBMI",126,0)
 ;;60.04^1^Subscriber Id^             ; Subscriber Id
"RTN","IBCNBMI",127,0)
 ;;60.05^6^Whose Insurance^           ; Whose Insurance
"RTN","IBCNBMI",128,0)
 ;;60.06^16^Relationship^             ; Pt. Relationship to Insured
"RTN","IBCNBMI",129,0)
 ;;60.07^17^Name of Insured^          ; Name of Insured
"RTN","IBCNBMI",130,0)
 ;;60.08^3.01^Insured's DOB^          ; Insured's DOB
"RTN","IBCNBMI",131,0)
 ;;60.09^3.05^Insured's SSN^          ; Insured's SSN
"RTN","IBCNBMI",132,0)
 ;;60.1^4.01^Primary Provider^        ; Primary Care Provider
"RTN","IBCNBMI",133,0)
 ;;60.11^4.02^Provider Phone^         ; Primary Care Provider Phone
"RTN","IBCNBMI",134,0)
 ;;60.12^.2^Coor of Benefits^         ; Coordination of Benefits
"RTN","IBCNBMI",135,0)
 ;;60.13^3.12^Insured's Sex^          ; Insured's Sex
"RTN","IBCNBMI",136,0)
 ;;  
"RTN","IBCNBMI",137,0)
 ;;61.01^2.1^Emp Sponsored^           ; ESGHP?
"RTN","IBCNBMI",138,0)
 ;;61.02^2.015^Employer Name^         ; Subscriber's Employer Name
"RTN","IBCNBMI",139,0)
 ;;61.03^2.11^Emp Status^             ; Employment Status
"RTN","IBCNBMI",140,0)
 ;;61.04^2.12^Retirement Date^        ; Retirement Date
"RTN","IBCNBMI",141,0)
 ;;61.05^2.01^Send to Employer^       ; Send Bill to Employer?
"RTN","IBCNBMI",142,0)
 ;;61.06^2.02^Emp Street Ln 1^1       ; Employer Claims Street Line 1
"RTN","IBCNBMI",143,0)
 ;;61.07^2.03^Emp Street Ln 2^1       ; Employer Claims Street Line 2
"RTN","IBCNBMI",144,0)
 ;;61.08^2.04^Emp Street Ln 3^1       ; Employer Claims Street Line 3
"RTN","IBCNBMI",145,0)
 ;;61.09^2.05^Emp City^1              ; Employer Claims City
"RTN","IBCNBMI",146,0)
 ;;61.1^2.06^Emp State^1              ; Employer Claims State
"RTN","IBCNBMI",147,0)
 ;;61.11^2.07^Emp Zip Code^1          ; Employer Claims Zip Code
"RTN","IBCNBMI",148,0)
 ;;61.12^2.08^Emp Phone^              ; Employer Claims Phone
"RTN","IBCNBMI",149,0)
 ;
"RTN","IBCNBMI",150,0)
POLA ; auto set fields
"RTN","IBCNBMI",151,0)
 ;;1.03^NOW^                          ; Date Last Verified (default is person that accepts entry)
"RTN","IBCNBMI",152,0)
 ;;1.04^DUZ^                          ; Verified By        (default is person that accepts entry)
"RTN","IBCNBMI",153,0)
 ;;1.05^NOW^                          ; Date Last Edited
"RTN","IBCNBMI",154,0)
 ;;1.06^DUZ^                          ; Last Edited By
"RTN","IBCNBMI",155,0)
 ;
"RTN","IBCNBMI",156,0)
 ;
"RTN","IBCNBMI",157,0)
POLOTH(IBBUFDA,IBPOLDA) ; other special cases that can not be transferred using the generic code above, usually because of dependencies
"RTN","IBCNBMI",158,0)
 N IB0 S IB0=$G(^IBA(355.33,+IBBUFDA,0))
"RTN","IBCNBMI",159,0)
 ;
"RTN","IBCNBMI",160,0)
 ;  --- if buffer entry was verified before the accept step, then add the correct verifier info to the policy
"RTN","IBCNBMI",161,0)
 I +$P(IB0,U,10) D
"RTN","IBCNBMI",162,0)
 . S IBCHNG(2.312,IBPOLDA,1.03)=$E($P(IB0,U,10),1,12),IBCHNGN(2.312,IBPOLDA,1.03)=""
"RTN","IBCNBMI",163,0)
 . S IBCHNG(2.312,IBPOLDA,1.04)=$P(IB0,U,11),IBCHNGN(2.312,IBPOLDA,1.04)=""
"RTN","IBCNBMI",164,0)
 ;
"RTN","IBCNBMI",165,0)
 I $D(IBCHNGN)>9 D FILE^DIE("I","IBCHNGN","IBERR")
"RTN","IBCNBMI",166,0)
 I $D(IBCHNG)>9 D FILE^DIE("I","IBCHNG","IBERR")
"RTN","IBCNBMI",167,0)
 Q
"RTN","IBCNBMI",168,0)
 ;
"RTN","IBCNBMI",169,0)
PAT(DFN,IBPOLDA) ; Force DOB, SSN & SEX from Patient file (#2) in to Insurance Patient Policy file (2.312)
"RTN","IBCNBMI",170,0)
 N DA,DR,DIE,DOB,SSN,SEX,IENS,WI
"RTN","IBCNBMI",171,0)
 S IENS=IBPOLDA_","_DFN_","
"RTN","IBCNBMI",172,0)
 S WI=$$GET1^DIQ(2.312,IENS,6,"I")
"RTN","IBCNBMI",173,0)
 I WI'="v" Q  ; Only use when Whose Insurance is 'v'
"RTN","IBCNBMI",174,0)
 S DOB=$$GET1^DIQ(2,DFN,.03,"I")
"RTN","IBCNBMI",175,0)
 S SSN=$$GET1^DIQ(2,DFN,.09,"I")
"RTN","IBCNBMI",176,0)
 S SEX=$$GET1^DIQ(2,DFN,.02,"I")
"RTN","IBCNBMI",177,0)
 S DIE="^DPT("_DFN_",.312,",DA(1)=DFN,DA=IBPOLDA
"RTN","IBCNBMI",178,0)
 S DR="3.01///^S X=DOB;3.05///^S X=SSN;3.12///^S X=SEX"
"RTN","IBCNBMI",179,0)
 D ^DIE
"RTN","IBCNBMI",180,0)
 Q
"RTN","IBCNEBF")
0^8^B27574081^B27036786
"RTN","IBCNEBF",1,0)
IBCNEBF ;DAOU/ALA - Create an Entry in the Buffer File ;20-JUN-2002
"RTN","IBCNEBF",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,361**;21-MAR-94;Build 9
"RTN","IBCNEBF",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNEBF",4,0)
 ;
"RTN","IBCNEBF",5,0)
 ;**Program Description**
"RTN","IBCNEBF",6,0)
 ;  This program will create a Buffer entry based upon input values
"RTN","IBCNEBF",7,0)
 ;
"RTN","IBCNEBF",8,0)
 Q
"RTN","IBCNEBF",9,0)
 ;
"RTN","IBCNEBF",10,0)
PT(DFN,IRIEN,SYMBOL,OVRRIDE,ADD,IBERROR) ;  Get data
"RTN","IBCNEBF",11,0)
 ;   from a specific patient and insurance record entry
"RTN","IBCNEBF",12,0)
 ;
"RTN","IBCNEBF",13,0)
 ;  Input Parameters
"RTN","IBCNEBF",14,0)
 ;    DFN = Patient IEN
"RTN","IBCNEBF",15,0)
 ;    IRIEN = Patient Insurance Record IEN
"RTN","IBCNEBF",16,0)
 ;    SYMBOL = IIV Symbol IEN
"RTN","IBCNEBF",17,0)
 ;    OVRRIDE = Override flag for ins. buffer record  (0 or 1)
"RTN","IBCNEBF",18,0)
 ;    ADD = If defined, then it will add a new Buffer entry
"RTN","IBCNEBF",19,0)
 ;    IBERROR = If defined, then it will be updated with error info.
"RTN","IBCNEBF",20,0)
 ;              OPTIONALLY PASSED BY REFERENCE
"RTN","IBCNEBF",21,0)
 ;
"RTN","IBCNEBF",22,0)
 I DFN=""!(IRIEN="") Q   ; * do not require SYMBOL or OVRRIDE
"RTN","IBCNEBF",23,0)
 ;
"RTN","IBCNEBF",24,0)
 ;
"RTN","IBCNEBF",25,0)
 NEW VBUF,IEN,INAME,PNAME,IIEN,GNUMB,GNAME,SUBID,PPHONE
"RTN","IBCNEBF",26,0)
 NEW BPHONE,EFFDT,EXPDT,WHO,REL,IDOB,ISSN,COB,TQIEN,RDATA,ISEX,NAME
"RTN","IBCNEBF",27,0)
 NEW MSG,XMSUB,MSGP,INSDATA,PCE,BFD,BFN,INSPCE,ESGHPARR
"RTN","IBCNEBF",28,0)
 ;
"RTN","IBCNEBF",29,0)
 S IIEN=$P($G(^DPT(DFN,.312,IRIEN,0)),U,1)
"RTN","IBCNEBF",30,0)
 S INAME=$$GET1^DIQ(36,IIEN,.01,"E")
"RTN","IBCNEBF",31,0)
 S PPHONE=$P($G(^DIC(36,IIEN,.13)),U,3)
"RTN","IBCNEBF",32,0)
 S BPHONE=$P($G(^DIC(36,IIEN,.13)),U,2)
"RTN","IBCNEBF",33,0)
 S NAME=$P($G(^DPT(DFN,.312,IRIEN,0)),U,17)
"RTN","IBCNEBF",34,0)
 S SUBID=$P($G(^DPT(DFN,.312,IRIEN,0)),U,2)
"RTN","IBCNEBF",35,0)
 S WHO=$P($G(^DPT(DFN,.312,IRIEN,0)),U,6)
"RTN","IBCNEBF",36,0)
 S COB=$P($G(^DPT(DFN,.312,IRIEN,0)),U,20)
"RTN","IBCNEBF",37,0)
 S IDOB=$P($G(^DPT(DFN,.312,IRIEN,3)),U,1)
"RTN","IBCNEBF",38,0)
 S ISSN=$P($G(^DPT(DFN,.312,IRIEN,3)),U,5)
"RTN","IBCNEBF",39,0)
 S ISEX=$P($G(^DPT(DFN,.312,IRIEN,3)),U,12)
"RTN","IBCNEBF",40,0)
 S EFFDT=$P(^DPT(DFN,.312,IRIEN,0),U,8)
"RTN","IBCNEBF",41,0)
 S EXPDT=$P(^DPT(DFN,.312,IRIEN,0),U,4)
"RTN","IBCNEBF",42,0)
 S REL=$P(^DPT(DFN,.312,IRIEN,0),U,16)
"RTN","IBCNEBF",43,0)
 ;
"RTN","IBCNEBF",44,0)
 S IENS=IRIEN_","_DFN_","
"RTN","IBCNEBF",45,0)
 S GNUMB=$$GET1^DIQ(2.312,IENS,21,"E")
"RTN","IBCNEBF",46,0)
 S GNAME=$$GET1^DIQ(2.312,IENS,20,"E")
"RTN","IBCNEBF",47,0)
 ;
"RTN","IBCNEBF",48,0)
 ; Capture the employer sponsored insurance fields into array
"RTN","IBCNEBF",49,0)
 ;   ESGHPARR(buffer field number) = data
"RTN","IBCNEBF",50,0)
 ;
"RTN","IBCNEBF",51,0)
 S INSDATA=$G(^DPT(DFN,.312,IRIEN,2)),PCE=0
"RTN","IBCNEBF",52,0)
 F BFD=5:1:12,2,1,3,4 S PCE=PCE+1,BFN=BFD/100+61,INSPCE=$P(INSDATA,U,PCE) I INSPCE'="" S ESGHPARR(BFN)=INSPCE
"RTN","IBCNEBF",53,0)
 ;
"RTN","IBCNEBF",54,0)
 D FIL
"RTN","IBCNEBF",55,0)
 K ADD
"RTN","IBCNEBF",56,0)
 Q
"RTN","IBCNEBF",57,0)
 ;
"RTN","IBCNEBF",58,0)
RP(IEN,ADD,BUFF) ;  Get data from a specific response record
"RTN","IBCNEBF",59,0)
 ;
"RTN","IBCNEBF",60,0)
 ;  Input Parameter
"RTN","IBCNEBF",61,0)
 ;    IEN  = Internal entry number of the Response
"RTN","IBCNEBF",62,0)
 ;    ADD  = If defined, then it will add a new Buffer entry
"RTN","IBCNEBF",63,0)
 ;    BUFF = IEN of the Buffer Entry to be updated (optional)
"RTN","IBCNEBF",64,0)
 ;
"RTN","IBCNEBF",65,0)
 S BUFF=$G(BUFF) ; Initialize optional parameter
"RTN","IBCNEBF",66,0)
 ;
"RTN","IBCNEBF",67,0)
 NEW PIEN,RSTYPE
"RTN","IBCNEBF",68,0)
 S DFN=$P(^IBCN(365,IEN,0),U,2),TQIEN=$P(^IBCN(365,IEN,0),U,5)
"RTN","IBCNEBF",69,0)
 S PIEN=$P(^IBCN(365,IEN,0),U,3),RSTYPE=$P(^(0),U,10)
"RTN","IBCNEBF",70,0)
 I PIEN'="" S PNAME=$P(^IBE(365.12,PIEN,0),U,1)
"RTN","IBCNEBF",71,0)
 I TQIEN'="" S IRIEN=$P($G(^IBCN(365.1,TQIEN,0)),U,13)
"RTN","IBCNEBF",72,0)
 I $G(IRIEN)'="" S INAME="" D
"RTN","IBCNEBF",73,0)
 . S IIEN=$P($G(^DPT(DFN,.312,IRIEN,0)),U,1)
"RTN","IBCNEBF",74,0)
 . I IIEN="" Q
"RTN","IBCNEBF",75,0)
 . S INAME=$P(^DIC(36,IIEN,0),U,1)
"RTN","IBCNEBF",76,0)
 S RDATA=$G(^IBCN(365,IEN,1))
"RTN","IBCNEBF",77,0)
 S NAME=$P(RDATA,U,1)
"RTN","IBCNEBF",78,0)
 S INAME=$S($G(INAME)'=""&(RSTYPE="O"):INAME,1:$G(PNAME))
"RTN","IBCNEBF",79,0)
 S IDOB=$P(RDATA,U,2)
"RTN","IBCNEBF",80,0)
 S ISSN=$P(RDATA,U,3)
"RTN","IBCNEBF",81,0)
 S ISEX=$P(RDATA,U,4)
"RTN","IBCNEBF",82,0)
 S COB=$P(RDATA,U,13)
"RTN","IBCNEBF",83,0)
 S SUBID=$P(RDATA,U,5)
"RTN","IBCNEBF",84,0)
 S GNAME=$P(RDATA,U,6)
"RTN","IBCNEBF",85,0)
 S GNUMB=$P(RDATA,U,7)
"RTN","IBCNEBF",86,0)
 S WHO=$P(RDATA,U,8)
"RTN","IBCNEBF",87,0)
 S REL=$P(RDATA,U,9)
"RTN","IBCNEBF",88,0)
 S EFFDT=$P(RDATA,U,11)
"RTN","IBCNEBF",89,0)
 S EXPDT=$P(RDATA,U,12)
"RTN","IBCNEBF",90,0)
 S PPHONE="",BPHONE=""
"RTN","IBCNEBF",91,0)
 ;
"RTN","IBCNEBF",92,0)
 D FIL
"RTN","IBCNEBF",93,0)
 K DFN,VBUF,IEN,IRIEN,INAME,PNAME,IIEN,GNUMB,GNAME,SUBID,PPHONE
"RTN","IBCNEBF",94,0)
 K BPHONE,EFFDT,EXPDT,WHO,REL,IDOB,ISSN,COB,TQIEN,RDATA,ISEX,NAME
"RTN","IBCNEBF",95,0)
 K ADD,%DT,D0,DG,DIC,DISYS,DIW,IENS
"RTN","IBCNEBF",96,0)
 Q
"RTN","IBCNEBF",97,0)
 ;
"RTN","IBCNEBF",98,0)
FIL ;  File Buffer Data
"RTN","IBCNEBF",99,0)
 ;
"RTN","IBCNEBF",100,0)
 S MSGP=$$MGRP^IBCNEUT5()
"RTN","IBCNEBF",101,0)
 ;
"RTN","IBCNEBF",102,0)
 ; Variable IDUZ is optionally set by the calling routine.  If it is
"RTN","IBCNEBF",103,0)
 ; not defined, it will be set to the specific, non-human user.
"RTN","IBCNEBF",104,0)
 ;
"RTN","IBCNEBF",105,0)
 I $G(IDUZ)="" S IDUZ=$$FIND1^DIC(200,"","X","INTERFACE,IB IIV")
"RTN","IBCNEBF",106,0)
 ;
"RTN","IBCNEBF",107,0)
 I $G(ADD) S VBUF(.02)=IDUZ  ; Entered By
"RTN","IBCNEBF",108,0)
 S VBUF(.12)=$G(SYMBOL)   ; Buffer Symbol
"RTN","IBCNEBF",109,0)
 S VBUF(.13)=$G(OVRRIDE) ; Override freshness flag
"RTN","IBCNEBF",110,0)
 I '$G(ERACT) D  ; Only file if not an error
"RTN","IBCNEBF",111,0)
 . S VBUF(20.01)=INAME  ; Insurance Company/Payer Name
"RTN","IBCNEBF",112,0)
 . S VBUF(60.01)=DFN  ; Patient IEN
"RTN","IBCNEBF",113,0)
 . S VBUF(40.03)=GNUMB  ; Group Number
"RTN","IBCNEBF",114,0)
 . S VBUF(40.02)=GNAME  ; Group Name
"RTN","IBCNEBF",115,0)
 . S VBUF(60.07)=NAME  ; Name of Insured
"RTN","IBCNEBF",116,0)
 . S VBUF(60.04)=SUBID  ; Subscriber ID
"RTN","IBCNEBF",117,0)
 . S VBUF(20.04)=PPHONE  ; Precertification Phone
"RTN","IBCNEBF",118,0)
 . S VBUF(20.03)=BPHONE  ; Billing Phone
"RTN","IBCNEBF",119,0)
 . S VBUF(60.02)=EFFDT  ; Effective Date
"RTN","IBCNEBF",120,0)
 . S VBUF(60.03)=EXPDT  ; Expiration Date
"RTN","IBCNEBF",121,0)
 . S VBUF(60.05)=WHO  ; Whose Insurance
"RTN","IBCNEBF",122,0)
 . S VBUF(60.06)=REL  ;  Patient Relationship
"RTN","IBCNEBF",123,0)
 . S VBUF(60.08)=IDOB  ;  Insured's DOB
"RTN","IBCNEBF",124,0)
 . S VBUF(60.09)=ISSN  ;  Insured's SSN
"RTN","IBCNEBF",125,0)
 . S VBUF(60.12)=COB  ;  Coordination of Benefits
"RTN","IBCNEBF",126,0)
 . S VBUF(60.13)=ISEX  ;  Insured's Sex
"RTN","IBCNEBF",127,0)
 . ;
"RTN","IBCNEBF",128,0)
 . ; If the employer sponsored insurance array exists, then merge it in
"RTN","IBCNEBF",129,0)
 . I $D(ESGHPARR) M VBUF=ESGHPARR
"RTN","IBCNEBF",130,0)
 ;
"RTN","IBCNEBF",131,0)
 ; Do not overwrite the existing insurance co. name if it already exists
"RTN","IBCNEBF",132,0)
 I $G(ADD)="",$G(BUFF)'="" K VBUF(20.01)
"RTN","IBCNEBF",133,0)
 ;
"RTN","IBCNEBF",134,0)
 ; ** initialize IBERROR
"RTN","IBCNEBF",135,0)
 S IBERROR=""
"RTN","IBCNEBF",136,0)
 ;
"RTN","IBCNEBF",137,0)
 ;  If need to add a new Buffer entry ...
"RTN","IBCNEBF",138,0)
 ;
"RTN","IBCNEBF",139,0)
 ;  Variable IBFDA is returned to the calling routine as the IEN of
"RTN","IBCNEBF",140,0)
 ;  the buffer entry that was just added.
"RTN","IBCNEBF",141,0)
 ;
"RTN","IBCNEBF",142,0)
 I $G(ADD) D
"RTN","IBCNEBF",143,0)
 . S IBFDA=$$ADDSTF^IBCNBES(5,DFN,.VBUF)
"RTN","IBCNEBF",144,0)
 . ; Error Message is 2nd piece of result
"RTN","IBCNEBF",145,0)
 . S IBERROR=$P(IBFDA,U,2)
"RTN","IBCNEBF",146,0)
 . S IBFDA=$P(IBFDA,U,1)
"RTN","IBCNEBF",147,0)
 ;
"RTN","IBCNEBF",148,0)
 ;  If an error, send an email message
"RTN","IBCNEBF",149,0)
 I IBERROR'="" D  Q
"RTN","IBCNEBF",150,0)
 . S MSG(1)="Error returned by $$ADDSTF^IBCNBES:"
"RTN","IBCNEBF",151,0)
 . S MSG(2)=IBERROR
"RTN","IBCNEBF",152,0)
 . S MSG(3)="Values:"
"RTN","IBCNEBF",153,0)
 . S MSG(4)=" Patient DFN = "_$G(DFN)
"RTN","IBCNEBF",154,0)
 . S MSG(5)=" Pt Ins Record IEN = "_$G(IRIEN)
"RTN","IBCNEBF",155,0)
 . S MSG(6)="Please log a NOIS for this problem."
"RTN","IBCNEBF",156,0)
 . S XMSUB="Error creating Buffer Entry."
"RTN","IBCNEBF",157,0)
 . D MSG^IBCNEUT5(MSGP,XMSUB,"MSG(")
"RTN","IBCNEBF",158,0)
 . K MSGP,MSG,XMSUB,IBERR
"RTN","IBCNEBF",159,0)
 ;
"RTN","IBCNEBF",160,0)
 ;  If need to update a new Buffer Entry ...
"RTN","IBCNEBF",161,0)
 ;
"RTN","IBCNEBF",162,0)
 ;  Variable BUFF is passed into this routine whenever the buffer
"RTN","IBCNEBF",163,0)
 ;  entry is known and the ADD flag is off.  The existing buffer entry
"RTN","IBCNEBF",164,0)
 ;  is edited in this case.
"RTN","IBCNEBF",165,0)
 ;
"RTN","IBCNEBF",166,0)
 I $G(ADD)="" D EDITSTF^IBCNBES(BUFF,.VBUF)
"RTN","IBCNEBF",167,0)
 ;
"RTN","IBCNEBF",168,0)
 ;  If an error occurred in EDITSTF, the error array is not returned
"RTN","IBCNEBF",169,0)
 ;
"RTN","IBCNEBF",170,0)
 Q
"RTN","IBCNEHLQ")
0^9^B42736526^B41231894
"RTN","IBCNEHLQ",1,0)
IBCNEHLQ ;DAOU/ALA - HL7 RQI Message ;17-JUN-2002
"RTN","IBCNEHLQ",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,300,361**;21-MAR-94;Build 9
"RTN","IBCNEHLQ",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNEHLQ",4,0)
 ;
"RTN","IBCNEHLQ",5,0)
 ;**Program Description**
"RTN","IBCNEHLQ",6,0)
 ;  This routine builds an IIV Verification (RQI^I01) or
"RTN","IBCNEHLQ",7,0)
 ;  Identification (RQI^I03) request
"RTN","IBCNEHLQ",8,0)
 ;
"RTN","IBCNEHLQ",9,0)
 ;**Modified by  Date        Reason
"RTN","IBCNEHLQ",10,0)
 ;  DAOU/BHS     10/04/2002  Implementing Transmit SSN logic
"RTN","IBCNEHLQ",11,0)
 ;  DAOU/DB      03/19/2004  Stripped dashes from SSN (PID, GT1)
"RTN","IBCNEHLQ",12,0)
 ;
"RTN","IBCNEHLQ",13,0)
EN ;  Entry Point
"RTN","IBCNEHLQ",14,0)
 ;  Variables
"RTN","IBCNEHLQ",15,0)
 ;    HLFS = Field Separator
"RTN","IBCNEHLQ",16,0)
 ;    DFN = Patient IEN
"RTN","IBCNEHLQ",17,0)
 ;    PAYR = Payer IEN
"RTN","IBCNEHLQ",18,0)
 ;    BUFF = Buffer IEN
"RTN","IBCNEHLQ",19,0)
 ;    FRDT = Freshness Date
"RTN","IBCNEHLQ",20,0)
 ;
"RTN","IBCNEHLQ",21,0)
PID ; Patient Identification Segment
"RTN","IBCNEHLQ",22,0)
 NEW VAERR,VAFSTR,VADM,VA,ICN,SNDSSN,NM,I
"RTN","IBCNEHLQ",23,0)
 S SNDSSN=$$SNDSSN^IBCNEUT5(PAYR,"IIV")
"RTN","IBCNEHLQ",24,0)
 D DEM^VADPT
"RTN","IBCNEHLQ",25,0)
 S VAFSTR=",1,7,8,11,"
"RTN","IBCNEHLQ",26,0)
 S PID=$$EN^VAFHLPID(DFN,VAFSTR,1)
"RTN","IBCNEHLQ",27,0)
 ; Encode special characters into Name and address pieces
"RTN","IBCNEHLQ",28,0)
 ; **NOTE: If $$EN^VAFHLPID should, in the future, return more than 11 pieces than the lines below may
"RTN","IBCNEHLQ",29,0)
 ;         need to be modified as they currently expect 11 pieces to be returned.
"RTN","IBCNEHLQ",30,0)
 S DFN=$G(DFN) I DFN]"" D
"RTN","IBCNEHLQ",31,0)
 . S NM("FILE")=2,NM("IENS")=DFN,NM("FIELD")=.01
"RTN","IBCNEHLQ",32,0)
 . S NM=$$HLNAME^XLFNAME(.NM,"",$E(HLECH)),NM=$S(NM]"":NM,1:HLQ)
"RTN","IBCNEHLQ",33,0)
 . S I=$L(NM,"|"),NM=$$ENCHL7(NM),$P(PID,"|",6,5+I)=NM
"RTN","IBCNEHLQ",34,0)
 S $P(PID,"|",12,99)=$$ENCHL7($P(PID,"|",12,99))
"RTN","IBCNEHLQ",35,0)
 ;
"RTN","IBCNEHLQ",36,0)
 S ICN=$P($G(^DPT(DFN,"MPI")),U,1)
"RTN","IBCNEHLQ",37,0)
 S $P(PID,HLFS,4)=ICN_HLECH_HLECH_HLECH_"USVHA"_HLECH_"NI"_HLECH
"RTN","IBCNEHLQ",38,0)
 I DFN S $P(PID,HLFS,4)=$P(PID,HLFS,4)_"~"_DFN_HLECH_HLECH_HLECH_"USVHA"_HLECH_"PI"_HLECH_$P($$SITE^VASITE,U,3)_HLECH
"RTN","IBCNEHLQ",39,0)
 I SNDSSN S $P(PID,HLFS,4)=$P(PID,HLFS,4)_"~"_$TR(VA("PID"),"-")_HLECH_HLECH_HLECH_"USSSA"_HLECH_"SS"_HLECH_"USSSA"
"RTN","IBCNEHLQ",40,0)
 S FRDT=$$HLDATE^HLFNC($G(FRDT))
"RTN","IBCNEHLQ",41,0)
 S $P(PID,HLFS,34)=FRDT
"RTN","IBCNEHLQ",42,0)
 Q
"RTN","IBCNEHLQ",43,0)
 ;
"RTN","IBCNEHLQ",44,0)
GT1 ;  Guarantor Segment
"RTN","IBCNEHLQ",45,0)
 NEW WHO,NM,IDOB,ISSN,ISEX,SEX,RLIEN,PER,PLIEN,RDATA,IBSDATA,IBADDR
"RTN","IBCNEHLQ",46,0)
 NEW SNDSSN
"RTN","IBCNEHLQ",47,0)
 ;
"RTN","IBCNEHLQ",48,0)
 S SNDSSN=$$SNDSSN^IBCNEUT5(PAYR,"IIV")
"RTN","IBCNEHLQ",49,0)
 ;
"RTN","IBCNEHLQ",50,0)
 S GT1=""
"RTN","IBCNEHLQ",51,0)
 I $G(QUERY)="I" Q
"RTN","IBCNEHLQ",52,0)
 ;
"RTN","IBCNEHLQ",53,0)
 ;  If the data was extracted from Buffer get specifics from Buffer file
"RTN","IBCNEHLQ",54,0)
 I EXT=1 D
"RTN","IBCNEHLQ",55,0)
 . S WHO=$P($G(^IBA(355.33,BUFF,60)),U,5)
"RTN","IBCNEHLQ",56,0)
 . I WHO="v"!(WHO="") Q
"RTN","IBCNEHLQ",57,0)
 . S NM=$P($G(^IBA(355.33,BUFF,60)),U,7),NM=$$NAME^IBCNEHLU(NM)
"RTN","IBCNEHLQ",58,0)
 . S NM=$$HLNAME^HLFNC(NM,HLECH)
"RTN","IBCNEHLQ",59,0)
 . S NM=$$ENCHL7(NM)
"RTN","IBCNEHLQ",60,0)
 . S $P(GT1,HLFS,3)=NM_HLECH_HLECH_HLECH
"RTN","IBCNEHLQ",61,0)
 . S IDOB=$P($G(^IBA(355.33,BUFF,60)),U,8),IDOB=$$HLDATE^HLFNC(IDOB)
"RTN","IBCNEHLQ",62,0)
 . S $P(GT1,HLFS,8)=IDOB
"RTN","IBCNEHLQ",63,0)
 . S $P(GT1,HLFS,2)=$$ENCHL7($G(SUBID))_HLECH_HLECH_HLECH_HLECH_"HC"
"RTN","IBCNEHLQ",64,0)
 . I SNDSSN S $P(GT1,HLFS,12)=$TR($P($G(^IBA(355.33,BUFF,60)),U,9),"-")
"RTN","IBCNEHLQ",65,0)
 ;
"RTN","IBCNEHLQ",66,0)
 ;  If the data was extracted from non-Buffer, check Patient file
"RTN","IBCNEHLQ",67,0)
 I EXT'=1 D
"RTN","IBCNEHLQ",68,0)
 . I IRIEN="" Q
"RTN","IBCNEHLQ",69,0)
 . S WHO=$P($G(^DPT(DFN,.312,IRIEN,0)),U,6)
"RTN","IBCNEHLQ",70,0)
 . I WHO="v"!(WHO="") Q
"RTN","IBCNEHLQ",71,0)
 . S NM=$P($G(^DPT(DFN,.312,IRIEN,0)),U,17)
"RTN","IBCNEHLQ",72,0)
 . S NM=$$HLNAME^HLFNC(NM,HLECH)
"RTN","IBCNEHLQ",73,0)
 . S NM=$$ENCHL7(NM)
"RTN","IBCNEHLQ",74,0)
 . S $P(GT1,HLFS,3)=NM_HLECH_HLECH_HLECH
"RTN","IBCNEHLQ",75,0)
 . S IDOB=$P($G(^DPT(DFN,.312,IRIEN,3)),U,1),IDOB=$$HLDATE^HLFNC(IDOB)
"RTN","IBCNEHLQ",76,0)
 . S $P(GT1,HLFS,8)=IDOB
"RTN","IBCNEHLQ",77,0)
 . S $P(GT1,HLFS,2)=$$ENCHL7($G(SUBID))_HLECH_HLECH_HLECH_HLECH_"HC"
"RTN","IBCNEHLQ",78,0)
 . ;
"RTN","IBCNEHLQ",79,0)
 . S IBSDATA=$G(^DPT(DFN,.312,IRIEN,3))
"RTN","IBCNEHLQ",80,0)
 . ;
"RTN","IBCNEHLQ",81,0)
 . S ISSN=$P(IBSDATA,U,5)
"RTN","IBCNEHLQ",82,0)
 . I SNDSSN S $P(GT1,HLFS,12)=$TR(ISSN,"-")
"RTN","IBCNEHLQ",83,0)
 . ;
"RTN","IBCNEHLQ",84,0)
 . S IBADDR=$$HLADDR^HLFNC($P(IBSDATA,U,6,7),$P(IBSDATA,U,8,12))
"RTN","IBCNEHLQ",85,0)
 . S $P(GT1,HLFS,5)=$$ENCHL7(IBADDR)
"RTN","IBCNEHLQ",86,0)
 . ;
"RTN","IBCNEHLQ",87,0)
 . D CHK
"RTN","IBCNEHLQ",88,0)
 . I $P(GT1,HLFS,8)=""&(IDOB'="") S $P(GT1,HLFS,8)=$$HLDATE^HLFNC(IDOB)
"RTN","IBCNEHLQ",89,0)
 . I $P(GT1,HLFS,9)=""&(ISEX'="") S $P(GT1,HLFS,9)=ISEX
"RTN","IBCNEHLQ",90,0)
 . I SNDSSN,$P(GT1,HLFS,12)=""&(ISSN'="") S $P(GT1,HLFS,12)=$TR(ISSN,"-")
"RTN","IBCNEHLQ",91,0)
 . I $P(GT1,HLFS,9)="",WHO="s" D
"RTN","IBCNEHLQ",92,0)
 .. S SEX=$P($G(^DPT(DFN,.312,IRIEN,3)),U,12) ; get policy holder sex
"RTN","IBCNEHLQ",93,0)
 .. I SEX="" S SEX=$P(^DPT(DFN,0),U,2),SEX=$S(SEX="M":"F",1:"M") ; if null, use alternative method
"RTN","IBCNEHLQ",94,0)
 .. S $P(GT1,HLFS,9)=SEX
"RTN","IBCNEHLQ",95,0)
 ;
"RTN","IBCNEHLQ",96,0)
 I GT1="" Q
"RTN","IBCNEHLQ",97,0)
 S $P(GT1,HLFS,1)=1
"RTN","IBCNEHLQ",98,0)
 S GT1="GT1"_HLFS_GT1
"RTN","IBCNEHLQ",99,0)
 Q
"RTN","IBCNEHLQ",100,0)
 ;
"RTN","IBCNEHLQ",101,0)
IN1 ;  Insurance Segment
"RTN","IBCNEHLQ",102,0)
 NEW EFFDT,EXPDT,WHO,ADMN,ADMDT,IENS
"RTN","IBCNEHLQ",103,0)
 S IN1="",SRVDT=$$HLDATE^HLFNC(SRVDT)
"RTN","IBCNEHLQ",104,0)
 ;
"RTN","IBCNEHLQ",105,0)
 ;  If the data was extracted from Buffer get specifics from Buffer file
"RTN","IBCNEHLQ",106,0)
 I EXT=1 D
"RTN","IBCNEHLQ",107,0)
 . S $P(IN1,HLFS,2)=$$ENCHL7($G(SUBID))
"RTN","IBCNEHLQ",108,0)
 . I PAYR'=$$FIND1^DIC(365.12,"","X","~NO PAYER") D
"RTN","IBCNEHLQ",109,0)
 .. S $P(IN1,HLFS,3)=$$ENCHL7($P(^IBE(365.12,PAYR,0),U,2))_HLECH_HLECH_HLECH_"USVHA"_HLECH_"VP"_HLECH
"RTN","IBCNEHLQ",110,0)
 .. S $P(IN1,HLFS,4)=$$ENCHL7($P(^IBE(365.12,PAYR,0),U,1))
"RTN","IBCNEHLQ",111,0)
 . S $P(IN1,HLFS,8)=$$ENCHL7($P($G(^IBA(355.33,BUFF,40)),U,3))
"RTN","IBCNEHLQ",112,0)
 . S $P(IN1,HLFS,9)=$$ENCHL7($P($G(^IBA(355.33,BUFF,40)),U,2))
"RTN","IBCNEHLQ",113,0)
 . S EFFDT=$P($G(^IBA(355.33,BUFF,60)),U,2),EFFDT=$$HLDATE^HLFNC(EFFDT)
"RTN","IBCNEHLQ",114,0)
 . S EXPDT=$P($G(^IBA(355.33,BUFF,60)),U,3),EXPDT=$$HLDATE^HLFNC(EXPDT)
"RTN","IBCNEHLQ",115,0)
 . S $P(IN1,HLFS,12)=EFFDT
"RTN","IBCNEHLQ",116,0)
 . S $P(IN1,HLFS,13)=EXPDT
"RTN","IBCNEHLQ",117,0)
 . S WHO=$P($G(^IBA(355.33,BUFF,60)),U,5)
"RTN","IBCNEHLQ",118,0)
 . S $P(IN1,HLFS,17)=$S(WHO="v":18,WHO="":18,WHO="s":"01",1:34)
"RTN","IBCNEHLQ",119,0)
 ;
"RTN","IBCNEHLQ",120,0)
 ;  If the data was extracted from non-Buffer, check Patient file
"RTN","IBCNEHLQ",121,0)
 I EXT'=1 D
"RTN","IBCNEHLQ",122,0)
 . I IRIEN="" Q
"RTN","IBCNEHLQ",123,0)
 . I $G(SUBID)'=$P($G(^DPT(DFN,.312,IRIEN,0)),U,2) Q
"RTN","IBCNEHLQ",124,0)
 . S EFFDT=$P($G(^DPT(DFN,.312,IRIEN,0)),U,8),EFFDT=$$HLDATE^HLFNC(EFFDT)
"RTN","IBCNEHLQ",125,0)
 . S EXPDT=$P($G(^DPT(DFN,.312,IRIEN,0)),U,4),EXPDT=$$HLDATE^HLFNC(EXPDT)
"RTN","IBCNEHLQ",126,0)
 . S $P(IN1,HLFS,12)=EFFDT
"RTN","IBCNEHLQ",127,0)
 . S $P(IN1,HLFS,13)=EXPDT
"RTN","IBCNEHLQ",128,0)
 . S WHO=$P($G(^DPT(DFN,.312,IRIEN,0)),U,6) I WHO="" Q
"RTN","IBCNEHLQ",129,0)
 . S $P(IN1,HLFS,17)=$S(WHO="v":18,WHO="":18,WHO="s":"01",1:34)
"RTN","IBCNEHLQ",130,0)
 . S IENS=IRIEN_","_DFN_","
"RTN","IBCNEHLQ",131,0)
 . S $P(IN1,HLFS,8)=$$ENCHL7($$GET1^DIQ(2.312,IENS,21,"E"))
"RTN","IBCNEHLQ",132,0)
 . S $P(IN1,HLFS,9)=$$ENCHL7($$GET1^DIQ(2.312,IENS,20,"E"))
"RTN","IBCNEHLQ",133,0)
 ;
"RTN","IBCNEHLQ",134,0)
 ;  If it's an inquire with 'No Payer', don't send payer info
"RTN","IBCNEHLQ",135,0)
 I PAYR'=$$FIND1^DIC(365.12,"","X","~NO PAYER") D
"RTN","IBCNEHLQ",136,0)
 . S $P(IN1,HLFS,3)=$$ENCHL7($P(^IBE(365.12,PAYR,0),U,2))_HLECH_HLECH_HLECH_"USVHA"_HLECH_"VP"_HLECH
"RTN","IBCNEHLQ",137,0)
 . S $P(IN1,HLFS,4)=$$ENCHL7($P(^IBE(365.12,PAYR,0),U,1))
"RTN","IBCNEHLQ",138,0)
 . S $P(IN1,HLFS,2)=$$ENCHL7($G(SUBID))
"RTN","IBCNEHLQ",139,0)
 ;
"RTN","IBCNEHLQ",140,0)
 I IN1="" Q
"RTN","IBCNEHLQ",141,0)
 ;
"RTN","IBCNEHLQ",142,0)
 I $G(QUERY)="I",$P(IN1,HLFS,17)'=18 S $P(IN1,HLFS,17)=18
"RTN","IBCNEHLQ",143,0)
 I $P(IN1,HLFS,17)="" S $P(IN1,HLFS,17)=18
"RTN","IBCNEHLQ",144,0)
 ;
"RTN","IBCNEHLQ",145,0)
 ;  Set the admission date if patient currently admitted
"RTN","IBCNEHLQ",146,0)
 S ADMN=$P($G(^DPT(DFN,.105)),U,1) I ADMN'="" D
"RTN","IBCNEHLQ",147,0)
 . S ADMDT=$P(^DGPM(ADMN,0),U,1),ADMDT=$$HLDATE^HLFNC(ADMDT)
"RTN","IBCNEHLQ",148,0)
 . S $P(IN1,HLFS,24)=ADMDT
"RTN","IBCNEHLQ",149,0)
 ;
"RTN","IBCNEHLQ",150,0)
 ;  Set the service date
"RTN","IBCNEHLQ",151,0)
 S $P(IN1,HLFS,26)=SRVDT
"RTN","IBCNEHLQ",152,0)
 S $P(IN1,HLFS,1)=1
"RTN","IBCNEHLQ",153,0)
 S IN1="IN1"_HLFS_IN1
"RTN","IBCNEHLQ",154,0)
 Q
"RTN","IBCNEHLQ",155,0)
 ;
"RTN","IBCNEHLQ",156,0)
CHK ;  Check for spouse or other information in the Patient Relation File
"RTN","IBCNEHLQ",157,0)
 ;  DGREL = Relationship (1=Self, 2=Spouse, 3-34,99=Other)
"RTN","IBCNEHLQ",158,0)
 NEW IEN,QFL
"RTN","IBCNEHLQ",159,0)
 S IEN="",RLIEN="",ISEX="",QFL=0
"RTN","IBCNEHLQ",160,0)
 F  S IEN=$O(^DGPR(408.12,"B",DFN,IEN)) Q:IEN=""  D  Q:QFL
"RTN","IBCNEHLQ",161,0)
 . S DGREL=$P($G(^DGPR(408.12,IEN,0)),U,2)
"RTN","IBCNEHLQ",162,0)
 . ;
"RTN","IBCNEHLQ",163,0)
 . ;  If person is veteran, quit
"RTN","IBCNEHLQ",164,0)
 . I DGREL=1 Q
"RTN","IBCNEHLQ",165,0)
 . ;
"RTN","IBCNEHLQ",166,0)
 . ;  If person is spouse, pick that record and quit
"RTN","IBCNEHLQ",167,0)
 . I WHO="s",DGREL=2 S RLIEN=IEN,QFL=1 Q
"RTN","IBCNEHLQ",168,0)
 . ;
"RTN","IBCNEHLQ",169,0)
 . ;  Otherwise it should be an 'other' dependent
"RTN","IBCNEHLQ",170,0)
 . S RLIEN=IEN
"RTN","IBCNEHLQ",171,0)
 ;
"RTN","IBCNEHLQ",172,0)
 I RLIEN="" Q
"RTN","IBCNEHLQ",173,0)
 ;
"RTN","IBCNEHLQ",174,0)
 ;  Check for Sex, SSN, DOB in INCOME PERSON File
"RTN","IBCNEHLQ",175,0)
 S PER=$P(^DGPR(408.12,RLIEN,0),U,3)
"RTN","IBCNEHLQ",176,0)
 I PER'["DGPR(408.13" Q
"RTN","IBCNEHLQ",177,0)
 S PLIEN=$P(PER,";",1)
"RTN","IBCNEHLQ",178,0)
 I PLIEN="" Q
"RTN","IBCNEHLQ",179,0)
 S RDATA=$G(^DGPR(408.13,PLIEN,0))
"RTN","IBCNEHLQ",180,0)
 S ISEX=$P(RDATA,U,2),IDOB=$P(RDATA,U,3),ISSN=$P(RDATA,U,9)
"RTN","IBCNEHLQ",181,0)
 I $P(RDATA,U,4)'="" D
"RTN","IBCNEHLQ",182,0)
 . NEW DFN
"RTN","IBCNEHLQ",183,0)
 . S DFN=$P(RDATA,U,4),ISEX=$P(^DPT(DFN,0),U,2),IDOB=$P(^DPT(DFN,0),U,3)
"RTN","IBCNEHLQ",184,0)
 . S ISSN=$P(^DPT(DFN,0),U,9)
"RTN","IBCNEHLQ",185,0)
 Q
"RTN","IBCNEHLQ",186,0)
 ;
"RTN","IBCNEHLQ",187,0)
ENCHL7(STR) ; Encode HL7 escape seqs in data fields
"RTN","IBCNEHLQ",188,0)
 ;
"RTN","IBCNEHLQ",189,0)
 ; Input:
"RTN","IBCNEHLQ",190,0)
 ; STR = Field data possible containing HL7 encoding chars
"RTN","IBCNEHLQ",191,0)
 ;
"RTN","IBCNEHLQ",192,0)
 ; Output Values
"RTN","IBCNEHLQ",193,0)
 ; Fn returns string w/converted escape seqs
"RTN","IBCNEHLQ",194,0)
 ;
"RTN","IBCNEHLQ",195,0)
 N CHR,NEW,RPLC,CNT,LOOP
"RTN","IBCNEHLQ",196,0)
 ;
"RTN","IBCNEHLQ",197,0)
 ; Replace "\" "&" "~" "|" with \F\ \R\ \E\ \T\ respectively
"RTN","IBCNEHLQ",198,0)
 F CHR="\","&","~","|" S CNT=$L(STR,CHR) I CNT>1 D
"RTN","IBCNEHLQ",199,0)
 . S NEW=$P(STR,CHR)
"RTN","IBCNEHLQ",200,0)
 . S RPLC="\"_$TR(CHR,"|~\&","FRET")_"\"
"RTN","IBCNEHLQ",201,0)
 . F LOOP=2:1:CNT S NEW=NEW_RPLC_$P(STR,CHR,LOOP)
"RTN","IBCNEHLQ",202,0)
 . S STR=NEW
"RTN","IBCNEHLQ",203,0)
 ;
"RTN","IBCNEHLQ",204,0)
 Q STR
"RTN","IBCNRDV")
0^15^B65860108^B65324795
"RTN","IBCNRDV",1,0)
IBCNRDV ;OAKFO/ELZ - INSURANCE INFORMATION EXCHANGE VIA RDV;27-MAR-03
"RTN","IBCNRDV",2,0)
 ;;2.0;INTEGRATED BILLING;**214,231,361**;21-MAR-94;Build 9
"RTN","IBCNRDV",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNRDV",4,0)
 ;
"RTN","IBCNRDV",5,0)
 ; This routine is used to exchange insurance information between
"RTN","IBCNRDV",6,0)
 ; facilities.
"RTN","IBCNRDV",7,0)
OPT ; Menu option entry point.  This is used to select a patient to request
"RTN","IBCNRDV",8,0)
 ; information about from the remote treating facilities.
"RTN","IBCNRDV",9,0)
 N DFN,DIC,X,Y,DTOUT,DUOUT,IBT,%,%Y,IBX,VADM,IBB,IBD,IBH,IBI,IBICN,IBR,IBRZ,IBX,IBY,IBZ,IBWAIT,IBL,DO,IBTYPE,IB1
"RTN","IBCNRDV",10,0)
 ;
"RTN","IBCNRDV",11,0)
 ; prompt for patient
"RTN","IBCNRDV",12,0)
AGAIN S DIC="^DPT(",DIC(0)="AEMNQ" D ^DIC Q:Y<1  S DFN=+Y
"RTN","IBCNRDV",13,0)
 ;
"RTN","IBCNRDV",14,0)
BACKGND ; background/tasked entry point
"RTN","IBCNRDV",15,0)
 ; IBTYPE is being used as a flag to indicate this is running in background
"RTN","IBCNRDV",16,0)
 ;
"RTN","IBCNRDV",17,0)
 ; look up treating facilities
"RTN","IBCNRDV",18,0)
 K IBT S IBT=$$TFL^IBARXMU(DFN,.IBT)
"RTN","IBCNRDV",19,0)
 I IBT<1,'$D(IBTYPE) W !!,"This patient has no remote treating facilities to query." G AGAIN
"RTN","IBCNRDV",20,0)
 I IBT<1 Q
"RTN","IBCNRDV",21,0)
 ;
"RTN","IBCNRDV",22,0)
 ; display and verify we want to do this
"RTN","IBCNRDV",23,0)
 I '$D(IBTYPE) D DEM^VADPT W !!,"The patient ",VADM(1)," has the following ",IBT," remote facilitie(s)",! S IBX=0 F  S IBX=$O(IBT(IBX)) Q:IBX<1  W !?10,$P(IBT(IBX),"^",2)
"RTN","IBCNRDV",24,0)
 I '$D(IBTYPE) W !!,"Do you want to perform this Remote Query" S %=1 D YN^DICN G:%'=1 AGAIN
"RTN","IBCNRDV",25,0)
 ;
"RTN","IBCNRDV",26,0)
 ; get ICN
"RTN","IBCNRDV",27,0)
 S IBICN=$$ICN^IBARXMU(DFN) I 'IBICN,'$D(IBTYPE) W !!,"No ICN for this patient" G AGAIN
"RTN","IBCNRDV",28,0)
 I 'IBICN Q
"RTN","IBCNRDV",29,0)
 ;
"RTN","IBCNRDV",30,0)
 ; sent off the remote queries and get back handles
"RTN","IBCNRDV",31,0)
 S IBX=0 F  S IBX=$O(IBT(IBX)) Q:IBX<1  D
"RTN","IBCNRDV",32,0)
 . D SEND(.IBH,IBX,IBICN,$S($D(IBTYPE):"IBCN INSURANCE QUERY TASK",1:"IBCN INSURANCE QUERY"))
"RTN","IBCNRDV",33,0)
 . X $S(IBH(0)'="":"S $P(IBT(IBX),U,5)=IBH(0)",1:"W:'$D(IBTYPE) !,""No handle returned for "",$P(IBT(IBX),U,2) K IBT(IBX)")
"RTN","IBCNRDV",34,0)
 ;
"RTN","IBCNRDV",35,0)
 ; no handles returned
"RTN","IBCNRDV",36,0)
 I $D(IBT)<9,'$D(IBTYPE) W !!,"Unable to perform any remote queries.",! G AGAIN
"RTN","IBCNRDV",37,0)
 I $D(IBT)<9 Q
"RTN","IBCNRDV",38,0)
 ;
"RTN","IBCNRDV",39,0)
 ; go through every IBT()
"RTN","IBCNRDV",40,0)
 S IBP="|",IBX=0 F  S IBX=$O(IBT(IBX)) Q:IBX<1!($D(IBT)<9)  D
"RTN","IBCNRDV",41,0)
 . ;
"RTN","IBCNRDV",42,0)
 . ; do I have a return data.
"RTN","IBCNRDV",43,0)
 . F IBWAIT=1:1:60 W:'$D(IBTYPE) "." H 1 D CHECK(.IBR,$P(IBT(IBX),"^",5)) I $G(IBR(0))["Done" Q
"RTN","IBCNRDV",44,0)
 . I $G(IBR(0))'["Done" W:'$D(IBTYPE) !!,"Unable to communicate with ",$P(IBT(IBX),U,2) Q
"RTN","IBCNRDV",45,0)
 . K IBR
"RTN","IBCNRDV",46,0)
 . D RETURN(.IBR,$P(IBT(IBX),"^",5))
"RTN","IBCNRDV",47,0)
 . ;
"RTN","IBCNRDV",48,0)
 . ; no data returned or error message
"RTN","IBCNRDV",49,0)
 . S IBRZ=$S(-1=+$G(IBR):IBR,$G(IBR(0))="":$G(IBR(1)),1:$G(IBR(0)))
"RTN","IBCNRDV",50,0)
 . ;
"RTN","IBCNRDV",51,0)
 . ; no info to proceed
"RTN","IBCNRDV",52,0)
 . I IBRZ<1 W:'$D(IBTYPE) !,"Response from ",$P(IBT(IBX),U,2),!,$P(IBRZ,"^",2) K IBT(IBX) D:IBRZ="-1^No insurance on file" FILE(0) Q
"RTN","IBCNRDV",53,0)
 . ;
"RTN","IBCNRDV",54,0)
 . ; received insurance info, need to file and display message
"RTN","IBCNRDV",55,0)
 . W:'$D(IBTYPE) !,"Received ",$G(IBR(0))," insurance companies from ",$P(IBT(IBX),U,2) D FILE(+IBR(0))
"RTN","IBCNRDV",56,0)
 . ;
"RTN","IBCNRDV",57,0)
 . S IBY=0 F  S IBY=$O(IBR(IBY))  Q:IBY<1  D
"RTN","IBCNRDV",58,0)
 .. F IBL=5:1  S IBT=$P($T(MAP+IBL),";",3) Q:IBT=""  D
"RTN","IBCNRDV",59,0)
 ... ;
"RTN","IBCNRDV",60,0)
 ... ; am I on the right MAP line
"RTN","IBCNRDV",61,0)
 ... I $P(IBT,IBP,3)=$S(IBY#6:IBY#6,1:6) S IBZ=$P(IBR(IBY),"^",$P(IBT,IBP,4)) I $L(IBZ) D
"RTN","IBCNRDV",62,0)
 .... ;
"RTN","IBCNRDV",63,0)
 .... ; xecute code to change external to internal
"RTN","IBCNRDV",64,0)
 .... X:$L($P(IBT,IBP,7)) $P(IBT,IBP,7)
"RTN","IBCNRDV",65,0)
 .... ;
"RTN","IBCNRDV",66,0)
 .... ; put the info in the array for the buffer file
"RTN","IBCNRDV",67,0)
 .... S:$D(IBZ) IBB($P(IBT,IBP,5))=IBZ
"RTN","IBCNRDV",68,0)
 .. ;
"RTN","IBCNRDV",69,0)
 .. ; need to avoid duplicates if possible.
"RTN","IBCNRDV",70,0)
 .. I $G(IBB(20.01))["MEDICARE (WNR)" S X=0 F  S X=$O(^DPT(DFN,.312,X)) Q:X<1  I $P($G(^DIC(36,+$P($G(^DPT(DFN,.312,X,0)),"^"),0)),"^")["MEDICARE (WNR)" K IBB Q
"RTN","IBCNRDV",71,0)
 .. Q:'$D(IBB)
"RTN","IBCNRDV",72,0)
 .. ;
"RTN","IBCNRDV",73,0)
 .. ; file in the buffer file & where else needed
"RTN","IBCNRDV",74,0)
 .. I IBY#6=0 D
"RTN","IBCNRDV",75,0)
 ... I $L($G(IBB(20.01))) D
"RTN","IBCNRDV",76,0)
 .... S IBB(.14)=$$IEN^XUAF4(+IBT(IBX))
"RTN","IBCNRDV",77,0)
 .... S IBB=$$ADDSTF^IBCNBES($G(IBB(.03),1),DFN,.IBB)
"RTN","IBCNRDV",78,0)
 ... I '$D(IB1),$D(IBTYPE),$L($G(IBB(20.01))) D SCH^IBTUTL2(DFN,$G(IBSAVEI),$G(IBSAVEJ)):IBTYPE="TRKR",ADM^IBTUTL($G(IBSAVE1),$G(IBSAVE2),$G(IBSAVE3),$G(IBSAVE4)):IBTYPE="ADM" S IB1=1
"RTN","IBCNRDV",79,0)
 ... W:'$D(IBTYPE)&($L($G(IBB(20.01)))) !,$P($G(IBB),"^")," Buffer File entry for ",$G(IBB(20.01))
"RTN","IBCNRDV",80,0)
 ... K IBB
"RTN","IBCNRDV",81,0)
 ;
"RTN","IBCNRDV",82,0)
 ; flag so I don't do this patient again within 90 days
"RTN","IBCNRDV",83,0)
 S ^IBT(356,"ARDV",DFN,$$FMADD^XLFDT(DT,90))=""
"RTN","IBCNRDV",84,0)
 ;
"RTN","IBCNRDV",85,0)
 Q
"RTN","IBCNRDV",86,0)
 ;
"RTN","IBCNRDV",87,0)
RPC(IBD,IBICN) ; RPC entry for looking up insurance info
"RTN","IBCNRDV",88,0)
 N DFN,IBZ,IBX,IBY,IBP,IBI,IBT,IBZ
"RTN","IBCNRDV",89,0)
 S DFN=$$DFN^IBARXMU(IBICN) I 'DFN S IBD(0)="-1^ICN Not found" Q
"RTN","IBCNRDV",90,0)
 D ALL^IBCNS1(DFN,"IBY",3)
"RTN","IBCNRDV",91,0)
 I '$D(IBY) S IBD(0)="-1^No insurance on file" Q
"RTN","IBCNRDV",92,0)
 ; set up return format
"RTN","IBCNRDV",93,0)
 ; IBD(0)   = # of insurance companies
"RTN","IBCNRDV",94,0)
 S IBD(0)=$G(IBY(0))
"RTN","IBCNRDV",95,0)
 ;
"RTN","IBCNRDV",96,0)
 ; where n starts at 1 and increments 6 for each insurance company
"RTN","IBCNRDV",97,0)
 ; IBD(n) = 355.33, zero node format
"RTN","IBCNRDV",98,0)
 ; IBD(n+1) = 355.33, 20 node format
"RTN","IBCNRDV",99,0)
 ; IBD(n+2) = 355.33, 21 node format
"RTN","IBCNRDV",100,0)
 ; IBD(n+3) = 355.33, 40 node format
"RTN","IBCNRDV",101,0)
 ; IBD(n+4) = 355.33, 60 node format
"RTN","IBCNRDV",102,0)
 ; IBD(n+5) = 355.33, 61 node format
"RTN","IBCNRDV",103,0)
 ;
"RTN","IBCNRDV",104,0)
 S IBP="|"
"RTN","IBCNRDV",105,0)
 S IBI=0 F  S IBI=$O(IBY(IBI))  Q:IBI<1  F IBL=5:1 S IBT=$P($T(MAP+IBL),";",3) Q:IBT=""  D
"RTN","IBCNRDV",106,0)
 . S IBZ=$P($G(IBY(IBI,+IBT)),"^",$P(IBT,IBP,2)) ; set the existing data
"RTN","IBCNRDV",107,0)
 . I $L($P(IBT,IBP,6)) X $P(IBT,IBP,6) ; output transform
"RTN","IBCNRDV",108,0)
 . S $P(IBD(IBI-1*6+$P(IBT,IBP,3)),"^",$P(IBT,IBP,4))=IBZ ; set data IBD
"RTN","IBCNRDV",109,0)
 Q
"RTN","IBCNRDV",110,0)
 ;
"RTN","IBCNRDV",111,0)
MAP ; this is a mapping of data returned from ALL^IBCNS1 to the buffer file
"RTN","IBCNRDV",112,0)
 ; format is:  node number | piece | extract node | extract piece
"RTN","IBCNRDV",113,0)
 ;             | 355.33 field number | format out code (if any)
"RTN","IBCNRDV",114,0)
 ;             | format in code (if any)
"RTN","IBCNRDV",115,0)
 ; the extract nodes will be sequential to match buffer file DD
"RTN","IBCNRDV",116,0)
 ;;0|1|2|1|20.01|N Z X "F Z=0,.11,.13 S IBY(IBI,36+Z)=$G(^DIC(36,IBZ,Z))" S IBZ=$P(IBY(IBI,36),"^");ins co name
"RTN","IBCNRDV",117,0)
 ;;0|2|5|4|60.04;subscriber id
"RTN","IBCNRDV",118,0)
 ;;0|4|5|3|60.03;experation date
"RTN","IBCNRDV",119,0)
 ;;0|6|5|5|60.05;who's insurance
"RTN","IBCNRDV",120,0)
 ;;0|8|5|2|60.02;effective date
"RTN","IBCNRDV",121,0)
 ;;0|16|5|6|60.06;pt relationship to insured
"RTN","IBCNRDV",122,0)
 ;;0|17|5|7|60.07;name of insured
"RTN","IBCNRDV",123,0)
 ;;0|20|5|12|60.12;coordination of benefits
"RTN","IBCNRDV",124,0)
 ;;1|3|1|10|.1||I IBZ<$$FMADD^XLFDT(DT,-180) K IBZ;date (last) verified
"RTN","IBCNRDV",125,0)
 ;;1|9|1|3|.03;source of information
"RTN","IBCNRDV",126,0)
 ;;2|1|6|5|61.05;send bill to employer
"RTN","IBCNRDV",127,0)
 ;;2|2|6|6|61.06;employer claims street address (line 1)
"RTN","IBCNRDV",128,0)
 ;;2|3|6|7|61.07;employer claims street address line 2
"RTN","IBCNRDV",129,0)
 ;;2|4|6|8|61.08;employer claims street address line 3
"RTN","IBCNRDV",130,0)
 ;;2|5|6|9|61.09;employer claims city
"RTN","IBCNRDV",131,0)
 ;;2|6|6|10|61.1|S IBZ=$$EXTERNAL^DILFD(2.312,2.06,"",IBZ)|N DIC,X,Y S DIC="^DIC(5,",X=IBZ,DIC(0)="OX" D ^DIC K:+Y<1 IBZ S:+Y>0 IBZ=+Y;employer claims state
"RTN","IBCNRDV",132,0)
 ;;2|7|6|11|61.11;employer claims zip code
"RTN","IBCNRDV",133,0)
 ;;2|8|6|12|61.12;employer claims phone
"RTN","IBCNRDV",134,0)
 ;;2|10|6|1|61.01;esghp
"RTN","IBCNRDV",135,0)
 ;;2|11|6|3|61.03;employment status
"RTN","IBCNRDV",136,0)
 ;;2|12|6|4|61.04;retirement date
"RTN","IBCNRDV",137,0)
 ;;3|1|5|8|60.08;insured's dob
"RTN","IBCNRDV",138,0)
 ;;3|5|5|9|60.09;insured's ssn
"RTN","IBCNRDV",139,0)
 ;;3|12|5|13|60.13;insured's sex
"RTN","IBCNRDV",140,0)
 ;;4|1|5|10|60.1;primary care provider
"RTN","IBCNRDV",141,0)
 ;;4|2|5|11|60.11;primary provider phone
"RTN","IBCNRDV",142,0)
 ;;355.3|2|4|1|40.01;is this a group policy
"RTN","IBCNRDV",143,0)
 ;;355.3|3|4|2|40.02;group name
"RTN","IBCNRDV",144,0)
 ;;355.3|4|4|3|40.03;group number
"RTN","IBCNRDV",145,0)
 ;;355.3|5|4|4|40.04;(is) utilization required
"RTN","IBCNRDV",146,0)
 ;;355.3|6|4|5|40.05;(is) pre-certification required
"RTN","IBCNRDV",147,0)
 ;;355.3|7|4|7|40.07;exclude pre-existing condition
"RTN","IBCNRDV",148,0)
 ;;355.3|8|4|8|40.08;benefits assignable
"RTN","IBCNRDV",149,0)
 ;;355.3|9|4|9|40.09;type of plan
"RTN","IBCNRDV",150,0)
 ;;355.3|12|4|6|40.06;ambulatory care certification
"RTN","IBCNRDV",151,0)
 ;;36|2|2|5|20.05;reimburse
"RTN","IBCNRDV",152,0)
 ;;36.11|1|3|1|21.01;street address line 1
"RTN","IBCNRDV",153,0)
 ;;36.11|2|3|2|21.02;street address line 2
"RTN","IBCNRDV",154,0)
 ;;36.11|3|3|3|21.03;street address line 3
"RTN","IBCNRDV",155,0)
 ;;36.11|4|3|4|21.04;city
"RTN","IBCNRDV",156,0)
 ;;36.11|5|3|5|21.05|S IBZ=$$EXTERNAL^DILFD(36,.115,"",IBZ)|N DIC,X,Y S DIC="^DIC(5,",X=IBZ,DIC(0)="OX" D ^DIC K:+Y<1 IBZ S:+Y>0 IBZ=+Y;state
"RTN","IBCNRDV",157,0)
 ;;36.11|6|3|6|21.06;zip code
"RTN","IBCNRDV",158,0)
 ;;36.13|1|2|2|20.02;phone number
"RTN","IBCNRDV",159,0)
 ;;36.13|2|2|3|20.03;billing phone number
"RTN","IBCNRDV",160,0)
 ;;36.13|3|2|4|20.04;precertification phone number
"RTN","IBCNRDV",161,0)
 ;;
"RTN","IBCNRDV",162,0)
 ;
"RTN","IBCNRDV",163,0)
SEND(IBH,IBX,IBICN,IBRPC) ; called to send off queries
"RTN","IBCNRDV",164,0)
 D EN1^XWB2HL7(.IBH,IBX,IBRPC,"",IBICN)
"RTN","IBCNRDV",165,0)
 Q
"RTN","IBCNRDV",166,0)
 ;
"RTN","IBCNRDV",167,0)
CHECK(IBR,IBH) ; called to check the return status of an RPC
"RTN","IBCNRDV",168,0)
 D RPCCHK^XWB2HL7(.IBR,IBH)
"RTN","IBCNRDV",169,0)
 Q
"RTN","IBCNRDV",170,0)
 ;
"RTN","IBCNRDV",171,0)
RETURN(IBR,IBH) ; called to get the return data and clear the broker
"RTN","IBCNRDV",172,0)
 N IBZ
"RTN","IBCNRDV",173,0)
 D RTNDATA^XWBDRPC(.IBR,IBH),CLEAR^XWBDRPC(.IBZ,IBH)
"RTN","IBCNRDV",174,0)
 Q
"RTN","IBCNRDV",175,0)
 ;
"RTN","IBCNRDV",176,0)
TASK ; queue off task job
"RTN","IBCNRDV",177,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSK,ZTSAVE
"RTN","IBCNRDV",178,0)
 S ZTRTN="BACKGND^IBCNRDV",ZTDESC="Query Remote Facilities for Insurance",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT),(ZTIO,ZTSAVE("DFN"),ZTSAVE("IBSAVE*"),ZTSAVE("IBTYPE"))="" D ^%ZTLOAD
"RTN","IBCNRDV",179,0)
 Q
"RTN","IBCNRDV",180,0)
 ;
"RTN","IBCNRDV",181,0)
TRKR(DFN,IBSAVEI,IBSAVEJ,IBDUZ) ; claims tracking entry
"RTN","IBCNRDV",182,0)
 N IBTYPE,IBT
"RTN","IBCNRDV",183,0)
 Q:$D(^IBT(356,"ARDV",DFN))  ; have already done recently
"RTN","IBCNRDV",184,0)
 Q:'$$TFL^IBARXMU(DFN,.IBT)  ; no remote facilities
"RTN","IBCNRDV",185,0)
 S IBTYPE="TRKR" D
"RTN","IBCNRDV",186,0)
 . I DUZ=.5 N DUZ S DUZ=+$G(IBDUZ),DUZ(2)=+$$SITE^VASITE
"RTN","IBCNRDV",187,0)
 . D TASK
"RTN","IBCNRDV",188,0)
 Q
"RTN","IBCNRDV",189,0)
 ;
"RTN","IBCNRDV",190,0)
ADM(DFN,IBSAVE1,IBSAVE2,IBSAVE3,IBSAVE4) ; admit event entry
"RTN","IBCNRDV",191,0)
 N IBTYPE S IBTYPE="ADM" D TASK
"RTN","IBCNRDV",192,0)
 Q
"RTN","IBCNRDV",193,0)
 ;
"RTN","IBCNRDV",194,0)
FILE(IBX) ; updates data into the log file
"RTN","IBCNRDV",195,0)
 ;IBX = number of insurance co's found
"RTN","IBCNRDV",196,0)
 N DIC,DA,DIE,IBM,DO,X,Y,IBZ,DR
"RTN","IBCNRDV",197,0)
 S IBM=$E($$DT^XLFDT,1,5)_"00",DA=+$O(^IBA(355.34,"B",IBM,0))
"RTN","IBCNRDV",198,0)
 I 'DA K DA L +^IBA(355.34,"B",IBM):10 S X=IBM,DIC="^IBA(355.34,",DIC(0)="F" D FILE^DICN S DA=+Y L -^IBA(355.34,"B",IBM)
"RTN","IBCNRDV",199,0)
 L +^IBA(355.34,DA):10
"RTN","IBCNRDV",200,0)
 S IBZ=^IBA(355.34,DA,0),DIE="^IBA(355.34,"
"RTN","IBCNRDV",201,0)
 S DR=".02///"_($P(IBZ,"^",2)+1)_";.03///"_($P(IBZ,"^",3)+IBX) D ^DIE
"RTN","IBCNRDV",202,0)
 L -^IBA(355.34,DA)
"RTN","IBCNRDV",203,0)
 Q
"RTN","IBCNSM32")
0^10^B28247845^B28214658
"RTN","IBCNSM32",1,0)
IBCNSM32 ;ALB/AAS - INSURANCE MANAGEMENT - POLICY EDIT ; 23-JAN-95
"RTN","IBCNSM32",2,0)
 ;;2.0;INTEGRATED BILLING;**28,40,52,85,103,133,361**;21-MAR-94;Build 9
"RTN","IBCNSM32",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSM32",4,0)
 ;
"RTN","IBCNSM32",5,0)
PATPOL(IBCDFN) ; -- edit patient specific policy info
"RTN","IBCNSM32",6,0)
 I '$G(IBCDFN) G PATPOLQ
"RTN","IBCNSM32",7,0)
 D SAVEPT^IBCNSP3(DFN,IBCDFN)
"RTN","IBCNSM32",8,0)
 D POL^IBCNSU41(DFN)
"RTN","IBCNSM32",9,0)
 ;
"RTN","IBCNSM32",10,0)
 ; -- give warning if expired or inactive co.
"RTN","IBCNSM32",11,0)
 I $P(^DPT(DFN,.312,IBCDFN,0),"^",4),$P(^(0),"^",4)'>DT W !,"WARNING:  This appears to be an expired policy!",!
"RTN","IBCNSM32",12,0)
 I $P(^DIC(36,+$P(^DPT(DFN,.312,IBCDFN,0),"^"),0),"^",5) W !,*7,"WARNING:  This insurance company is INACTIVE!",!
"RTN","IBCNSM32",13,0)
 ;
"RTN","IBCNSM32",14,0)
 N IBAD,IBDIF,DA,DR,DIC,DIE,DGSENFLG S DGSENFLG=1
"RTN","IBCNSM32",15,0)
 S DIE="^DPT("_DFN_",.312,",DA(1)=DFN,DA=IBCDFN
"RTN","IBCNSM32",16,0)
 S DR="S IBAD="""";8;@333;3;D FUTURE^IBCNSM31;6;S IBAD=X;K X I '$$VET^IBCNSU1() S Y=""@10"";17///^S X=$P(^DPT(DFN,0),U);16///^S X=""01"""
"RTN","IBCNSM32",17,0)
 ;S DR="S IBAD="""";8;@333;3;D FUTURE^IBCNSM31;6;S IBAD=X;I IBAD'=""v"" S Y=""@10"";17"_$S($$VET^IBCNSU1():"///^S X="""_$P(^DPT(DFN,0),U,1)_"""",1:"//"_);16///^S X=""01"""
"RTN","IBCNSM32",18,0)
 S DR=DR_";S Y=""@20"";@10;17;16//^S X=$S(IBAD=""s"":""02"",1:"""");@20;1;3.01;3.12;1.09//;I $G(IBREG) S Y=""@99"";.2;4.01;4.02;@99"
"RTN","IBCNSM32",19,0)
 I $G(IBREG),$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) S DR=".01//;"_DR
"RTN","IBCNSM32",20,0)
 L +^DPT(DFN,.312,+IBCDFN):5 I '$T D LOCKED^IBTRCD1 G PATPOLQ
"RTN","IBCNSM32",21,0)
 D ^DIE I $D(Y)!($D(DTOUT)) S IBQUIT=1
"RTN","IBCNSM32",22,0)
 I '$D(DA) S IBQUIT=1 G PATPOLQ
"RTN","IBCNSM32",23,0)
 ;
"RTN","IBCNSM32",24,0)
 ; -- if the company was changed, change the policy plan
"RTN","IBCNSM32",25,0)
 I $G(IBREG),$G(IBCNS),+$G(^DPT(DFN,.312,IBCDFN,0))'=IBCNS D CHPL
"RTN","IBCNSM32",26,0)
 ;
"RTN","IBCNSM32",27,0)
 K IBFUTUR
"RTN","IBCNSM32",28,0)
 D COMPPT^IBCNSP3(DFN,IBCDFN)
"RTN","IBCNSM32",29,0)
 I IBDIF D UPDATPT^IBCNSP3(DFN,IBCDFN)
"RTN","IBCNSM32",30,0)
 L -^DPT(DFN,.312,+IBCDFN)
"RTN","IBCNSM32",31,0)
 ;
"RTN","IBCNSM32",32,0)
 D FUTURE^IBCNSM31 K Y,IBFUTUR
"RTN","IBCNSM32",33,0)
PATPOLQ Q
"RTN","IBCNSM32",34,0)
 ;
"RTN","IBCNSM32",35,0)
CHPL ; Change policy plan if the policy company differs from plan company.
"RTN","IBCNSM32",36,0)
 ;  Required variable input:
"RTN","IBCNSM32",37,0)
 ;        DFN  --  pointer to the patient in file #2
"RTN","IBCNSM32",38,0)
 ;     IBCDFN  --  pointer to the policy in file #2.312
"RTN","IBCNSM32",39,0)
 ;      IBCNS  --  pointer to the plan company in file #36
"RTN","IBCNSM32",40,0)
 ;
"RTN","IBCNSM32",41,0)
 N IBBU,IBCNS1,IBCPOL1,IBNEWP1,IBPLAN,IBIP,IBT,X
"RTN","IBCNSM32",42,0)
 S X=$G(^DPT(DFN,.312,IBCDFN,0)),IBCNS1=+X
"RTN","IBCNSM32",43,0)
 S IBPLAN=$P(X,"^",18),IBIP='$P($G(^IBA(355.3,IBPLAN,0)),"^",2)
"RTN","IBCNSM32",44,0)
 W !!,"Since you have changed the Insurance Company to ",$E($P($G(^DIC(36,IBCNS1,0)),"^"),1,25),","
"RTN","IBCNSM32",45,0)
 W !,"you must now change the Insurance Plan to which this veteran"
"RTN","IBCNSM32",46,0)
 W !,"is subscribing to one which is offered by this company!",!
"RTN","IBCNSM32",47,0)
 ;
"RTN","IBCNSM32",48,0)
 ; - warn about benefits used
"RTN","IBCNSM32",49,0)
 D BU^IBCNSJ21 I $O(IBBU(0)) D
"RTN","IBCNSM32",50,0)
 .W !,"The current policy plan has Benefits Used associated with it!"
"RTN","IBCNSM32",51,0)
 .W !,"If you add or select another plan to associate with this policy,"
"RTN","IBCNSM32",52,0)
 .W !,"these Benefits Used will be deleted!",!
"RTN","IBCNSM32",53,0)
 ;
"RTN","IBCNSM32",54,0)
 ; - warn about Individual Plans
"RTN","IBCNSM32",55,0)
 I IBIP D
"RTN","IBCNSM32",56,0)
 .W !,"  ***  Please note:  Since the veteran's current plan is an Individual Plan,"
"RTN","IBCNSM32",57,0)
 .W !?21,"this plan will be deleted if you add or select a new"
"RTN","IBCNSM32",58,0)
 .W !?21,"plan to associate with this policy.",!
"RTN","IBCNSM32",59,0)
 ;
"RTN","IBCNSM32",60,0)
 ; - select or add a new plan
"RTN","IBCNSM32",61,0)
 S IBCPOL1=$$LK^IBCNSM31(IBCNS1)
"RTN","IBCNSM32",62,0)
 I 'IBCPOL1 D NEW^IBCNSJ3(IBCNS1,.IBCPOL1) S:IBCPOL1 IBNEWP1=1
"RTN","IBCNSM32",63,0)
 I 'IBCPOL1 D  G CHPLQ
"RTN","IBCNSM32",64,0)
 .W !!,"A new plan was not added or selected!"
"RTN","IBCNSM32",65,0)
 .W !,"Changing the policy company back to ",$E($P($G(^DIC(36,IBCNS,0)),"^"),1,25),"..."
"RTN","IBCNSM32",66,0)
 .S DIE="^DPT(DFN,.312,",DA(1)=DFN,DA=IBCDFN,DR=".01////"_IBCNS_";1.05///NOW;1.06////"_DUZ D ^DIE K DA,DIE,DR
"RTN","IBCNSM32",67,0)
 ;
"RTN","IBCNSM32",68,0)
 W !!,"Changing the policy plan..."
"RTN","IBCNSM32",69,0)
 S DIE="^DPT(DFN,.312,",DA(1)=DFN,DA=IBCDFN,DR=".18////"_IBCPOL1_";1.05///NOW;1.06////"_DUZ D ^DIE K DA,DIE,DR
"RTN","IBCNSM32",70,0)
 I IBIP!$G(IBNEWP) W !!,"Deleting the ",$S(IBIP:"current Individual",1:"previously-added")," plan for ",$E($P($G(^DIC(36,IBCNS,0)),"^"),1,25),"..." D DEL^IBCNSJ(IBPLAN)
"RTN","IBCNSM32",71,0)
 ;
"RTN","IBCNSM32",72,0)
 ; - delete any dangling benefits used
"RTN","IBCNSM32",73,0)
 I $O(IBBU(0)) D
"RTN","IBCNSM32",74,0)
 .N IBDAT
"RTN","IBCNSM32",75,0)
 .W !!,"Deleting current Benefits Used... "
"RTN","IBCNSM32",76,0)
 .S IBDAT="" F  S IBDA=$O(IBBU(IBDAT)) Q:IBDAT=""  D DBU^IBCNSJ(IBBU(IBDAT))
"RTN","IBCNSM32",77,0)
 ;
"RTN","IBCNSM32",78,0)
 ; - repoint all Insurance Reviews to new company
"RTN","IBCNSM32",79,0)
 I $$IR^IBCNSJ21(DFN,IBCDFN) D
"RTN","IBCNSM32",80,0)
 .W !!,"Repointing all Insurance Reviews to ",$E($P($G(^DIC(36,IBCNS1,0)),"^"),1,25),"... "
"RTN","IBCNSM32",81,0)
 .S IBT=0 F  S IBT=$O(^IBT(356.2,"D",DFN,IBT)) Q:'IBT  I $P($G(^IBT(356.2,IBT,1)),"^",5)=IBCDFN,$P($G(^(0)),"^",8)'=IBCNS1 S DA=IBT,DR=".08////"_IBCNS1,DIE="^IBT(356.2," D ^DIE K DA,DR,DIE W "."
"RTN","IBCNSM32",82,0)
 ;
"RTN","IBCNSM32",83,0)
 S IBCNS=IBCNS1,IBNEWP=$G(IBNEWP1)
"RTN","IBCNSM32",84,0)
CHPLQ Q
"RTN","IBCNSM32",85,0)
 ;
"RTN","IBCNSM32",86,0)
PLAN(DFN,IBCDFN,IBCNS) ; Fix policies when identified.
"RTN","IBCNSM32",87,0)
 ;
"RTN","IBCNSM32",88,0)
 ;  This function is invoked from Inactivate Plan or Change Policy Plan,
"RTN","IBCNSM32",89,0)
 ;  when it is recognized that the policy and plan companies are out
"RTN","IBCNSM32",90,0)
 ;  of synch.  If the user doesn't select a new plan to associate with
"RTN","IBCNSM32",91,0)
 ;  the policy, the policy company will be changed to the plan company.
"RTN","IBCNSM32",92,0)
 ;
"RTN","IBCNSM32",93,0)
 ;  The input parameters are defined above.
"RTN","IBCNSM32",94,0)
 ;
"RTN","IBCNSM32",95,0)
 N IBNEWP
"RTN","IBCNSM32",96,0)
 I '$G(DFN)!'$G(IBCDFN)!'$G(IBCNS) G PLANQ
"RTN","IBCNSM32",97,0)
 W !!,*7,"The policy company and plan company are not the same!!"
"RTN","IBCNSM32",98,0)
 W !,"This inconsistency probably occurred in the past when changing"
"RTN","IBCNSM32",99,0)
 W !,"the policy company through Screen 5 of Registration."
"RTN","IBCNSM32",100,0)
 W !!,"You must resolve this inconsistency.  If you do not choose a new plan"
"RTN","IBCNSM32",101,0)
 W !,"offered by the policy company, the policy company will be changed to"
"RTN","IBCNSM32",102,0)
 W !,"the plan company (",$P($G(^DIC(36,IBCNS,0)),"^"),") ...."
"RTN","IBCNSM32",103,0)
 D CHPL
"RTN","IBCNSM32",104,0)
PLANQ Q
"RTN","IBCNSM32",105,0)
HLP ; -- help text for subscriber id
"RTN","IBCNSM32",106,0)
 W !,?5,"Enter Medicare Claim Number (Subscriber ID) exactly as it"
"RTN","IBCNSM32",107,0)
 W !,?5,"appears on the Medicare Insurance Card including All Characters."
"RTN","IBCNSM32",108,0)
 W !,?5,"Valid HICN formats are:  1-3 alpha characters followed by 6 or 9 digits, "
"RTN","IBCNSM32",109,0)
 W !,?5,"or 9 digits followed by 1 alpha character optionally followed by another "
"RTN","IBCNSM32",110,0)
 W !,?5,"alpha character or 1 digit."
"RTN","IBCNSM32",111,0)
 Q
"RTN","IBCNSP1")
0^11^B17268693^B17219076
"RTN","IBCNSP1",1,0)
IBCNSP1 ;ALB/AAS - INSURANCE MANAGEMENT - policy actions ; 22-OCT-92
"RTN","IBCNSP1",2,0)
 ;;2.0;INTEGRATED BILLING;**6,28,40,43,52,85,103,361**;21-MAR-94;Build 9
"RTN","IBCNSP1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSP1",4,0)
 ;
"RTN","IBCNSP1",5,0)
% G EN^IBCNSP
"RTN","IBCNSP1",6,0)
 ;
"RTN","IBCNSP1",7,0)
EA ; -- Edit all
"RTN","IBCNSP1",8,0)
 N IBCDFN,IBTRC,IBTRN
"RTN","IBCNSP1",9,0)
 D FULL^VALM1 W !!
"RTN","IBCNSP1",10,0)
 S IBCDFN=$P($G(IBPPOL),"^",4) I 'IBCDFN W !!,"Can't identify the policy!" G EAQ
"RTN","IBCNSP1",11,0)
 S IBCNSEH=1 D PAT^IBCNSEH
"RTN","IBCNSP1",12,0)
 ;
"RTN","IBCNSP1",13,0)
 D BEFORE^IBCNSEVT
"RTN","IBCNSP1",14,0)
 D PATPOL^IBCNSM32(IBCDFN)
"RTN","IBCNSP1",15,0)
 D AFTER^IBCNSEVT,^IBCNSEVT
"RTN","IBCNSP1",16,0)
 ;
"RTN","IBCNSP1",17,0)
 ; -- edit policy data
"RTN","IBCNSP1",18,0)
 D POL^IBCNSEH
"RTN","IBCNSP1",19,0)
 D EDPOL^IBCNSM3(IBCDFN)
"RTN","IBCNSP1",20,0)
 ;
"RTN","IBCNSP1",21,0)
 W !! D AI
"RTN","IBCNSP1",22,0)
 ;
"RTN","IBCNSP1",23,0)
EAQ D:$G(IBTRC) AIP^IBCNSP02(IBTRC)
"RTN","IBCNSP1",24,0)
 D BLD^IBCNSP
"RTN","IBCNSP1",25,0)
 S VALMBCK="R"
"RTN","IBCNSP1",26,0)
 Q
"RTN","IBCNSP1",27,0)
 ;
"RTN","IBCNSP1",28,0)
AB ; -- Annual Benefits
"RTN","IBCNSP1",29,0)
 S X=+$P($G(IBPPOL),"^",4),IBCNS=+$G(^DPT(DFN,.312,X,0)),IBCPOL=+$P($G(^(0)),"^",18)
"RTN","IBCNSP1",30,0)
 I 'IBCPOL W !!,"Can't identify the plan!" S VALMBCK="" G ABQ
"RTN","IBCNSP1",31,0)
 D FULL^VALM1 W !!
"RTN","IBCNSP1",32,0)
 D EN^VALM("IBCNS ANNUAL BENEFITS")
"RTN","IBCNSP1",33,0)
 S VALMBCK="R"
"RTN","IBCNSP1",34,0)
ABQ Q
"RTN","IBCNSP1",35,0)
 ;
"RTN","IBCNSP1",36,0)
BU ; -- Benefits Used
"RTN","IBCNSP1",37,0)
 S IBCDFN=+$P($G(IBPPOL),"^",4),IBCNS=+$G(^DPT(DFN,.312,IBCDFN,0)),IBCPOL=+$P($G(^(0)),"^",18)
"RTN","IBCNSP1",38,0)
 I 'IBCPOL W !!,"Can't identify the plan!" S VALMBCK="" G BUQ
"RTN","IBCNSP1",39,0)
 D FULL^VALM1 W !!
"RTN","IBCNSP1",40,0)
 D EN^VALM("IBCNS BENEFITS USED BY DATE")
"RTN","IBCNSP1",41,0)
 S VALMBCK="R"
"RTN","IBCNSP1",42,0)
BUQ Q
"RTN","IBCNSP1",43,0)
 ;
"RTN","IBCNSP1",44,0)
IT ; -- edit insurance type info from patient policy and plan edit
"RTN","IBCNSP1",45,0)
 D FULL^VALM1 W !!
"RTN","IBCNSP1",46,0)
 N IBCDFN
"RTN","IBCNSP1",47,0)
 S IBCDFN=+$P($G(IBPPOL),"^",4),IBCPOL=+$P($G(^DPT(DFN,.312,IBCDFN,0)),"^",18)
"RTN","IBCNSP1",48,0)
 I 'IBCPOL W !!,"Can't identify the plan!" S VALMBCK="" G ITQ
"RTN","IBCNSP1",49,0)
 D ITEDIT(IBCPOL,IBCDFN)
"RTN","IBCNSP1",50,0)
ITQ S VALMBCK="R" Q
"RTN","IBCNSP1",51,0)
 ;
"RTN","IBCNSP1",52,0)
IT1 ; -- edit insurance type info from patient policy
"RTN","IBCNSP1",53,0)
 D ITEDIT(IBCPOL)
"RTN","IBCNSP1",54,0)
 S VALMBCK="R"
"RTN","IBCNSP1",55,0)
 Q
"RTN","IBCNSP1",56,0)
 ;
"RTN","IBCNSP1",57,0)
ITEDIT(IBCPOL,IBCDFN) ;Edit insurance type info once you have plan (IBCPOL)
"RTN","IBCNSP1",58,0)
 ; IBCDFN = the ifn of the policy multiple for pt in ^DPT, node .312
"RTN","IBCNSP1",59,0)
 ;          only defined for editing via patient policy
"RTN","IBCNSP1",60,0)
 G:'$G(IBCPOL) ITEDITQ
"RTN","IBCNSP1",61,0)
 D SAVE^IBCNSP3(IBCPOL)
"RTN","IBCNSP1",62,0)
 L +^IBA(355.3,+IBCPOL):5 I '$T D LOCKED^IBTRCD1 G ITEDITQ
"RTN","IBCNSP1",63,0)
 I $G(IBCDFN) S IBCNSEH=+$G(^IBE(350.9,1,4)) D POL^IBCNSEH
"RTN","IBCNSP1",64,0)
 I $P($G(^IBA(355.3,IBCPOL,0)),"^",11) W !?2,*7,"Please note that this plan is inactive!",!
"RTN","IBCNSP1",65,0)
 S DA=IBCPOL,DIE="^IBA(355.3,",DR=".05;.12;.06;.07;.08"
"RTN","IBCNSP1",66,0)
 D ^DIE K DIC,DIE,DA,DR
"RTN","IBCNSP1",67,0)
 D COMP^IBCNSP3(IBCPOL)
"RTN","IBCNSP1",68,0)
 I IBDIF D UPDATE^IBCNSP3(IBCPOL) D:$G(IBCDFN) UPDATPT^IBCNSP3(DFN,IBCDFN),BLD^IBCNSP D:'$G(IBCDFN) INIT^IBCNSC4
"RTN","IBCNSP1",69,0)
 L -^IBA(355.3,+IBCPOL)
"RTN","IBCNSP1",70,0)
ITEDITQ Q
"RTN","IBCNSP1",71,0)
 ;
"RTN","IBCNSP1",72,0)
ED ; -- Edit effective dates
"RTN","IBCNSP1",73,0)
 D FULL^VALM1 W !!
"RTN","IBCNSP1",74,0)
 N IBDIF,DA,DR,DIE,DIC
"RTN","IBCNSP1",75,0)
 D BEFORE^IBCNSEVT
"RTN","IBCNSP1",76,0)
 D SAVEPT^IBCNSP3(DFN,IBCDFN)
"RTN","IBCNSP1",77,0)
 L +^DPT(DFN,.312,+$P($G(IBPPOL),"^",4)):5 I '$T D LOCKED^IBTRCD1 G EDQ
"RTN","IBCNSP1",78,0)
 D VARS^IBCNSP3
"RTN","IBCNSP1",79,0)
 S DR="8;3;1.09//;3.04"
"RTN","IBCNSP1",80,0)
 D ^DIE K DIC,DIE,DA,DR
"RTN","IBCNSP1",81,0)
 D COMPPT^IBCNSP3(DFN,IBCDFN) I IBDIF D UPDATPT^IBCNSP3(DFN,IBCDFN),AFTER^IBCNSEVT,^IBCNSEVT,BLD^IBCNSP
"RTN","IBCNSP1",82,0)
 L -^DPT(DFN,.312,+$P($G(IBPPOL),"^",4))
"RTN","IBCNSP1",83,0)
EDQ S VALMBCK="R" Q
"RTN","IBCNSP1",84,0)
 ;
"RTN","IBCNSP1",85,0)
VC ; -- Verify Coverage
"RTN","IBCNSP1",86,0)
 D FULL^VALM1 W !!
"RTN","IBCNSP1",87,0)
 D VFY^IBCNSM2
"RTN","IBCNSP1",88,0)
 D BLD^IBCNSP
"RTN","IBCNSP1",89,0)
 S VALMBCK="R" Q
"RTN","IBCNSP1",90,0)
 ;
"RTN","IBCNSP1",91,0)
SU ; -- Subscriber Update
"RTN","IBCNSP1",92,0)
 D FULL^VALM1 W !!
"RTN","IBCNSP1",93,0)
 ;Patch 40
"RTN","IBCNSP1",94,0)
 N IBDIF,DA,DR,DIC,DIE,DGSENFLG
"RTN","IBCNSP1",95,0)
 S DGSENFLG=1
"RTN","IBCNSP1",96,0)
 D SAVEPT^IBCNSP3(DFN,IBCDFN)
"RTN","IBCNSP1",97,0)
 D VARS^IBCNSP3
"RTN","IBCNSP1",98,0)
 L +^DPT(DFN,.312,+$P($G(IBPPOL),"^",4)):5 I '$T D LOCKED^IBTRCD1 G SUQ
"RTN","IBCNSP1",99,0)
 S DR="6;S IBAD=X;K X I '$$VET^IBCNSU1() S Y=""@10"";17///^S X=$P(^DPT(DFN,0),U);16///^S X=""01"""
"RTN","IBCNSP1",100,0)
 S DR=DR_";S Y=""@20"";@10;17;16//^S X=$S(IBAD=""s"":""02"",1:"""");@20;1;.2;4.01;4.02;3.01;3.12;3.02;3.03;3.05:3.11"
"RTN","IBCNSP1",101,0)
 D ^DIE K DIC,DIE,DA,DR
"RTN","IBCNSP1",102,0)
 D COMPPT^IBCNSP3(DFN,IBCDFN)
"RTN","IBCNSP1",103,0)
 I IBDIF D UPDATPT^IBCNSP3(DFN,IBCDFN),BLD^IBCNSP
"RTN","IBCNSP1",104,0)
 L -^DPT(DFN,.312,+$P($G(IBPPOL),"^",4))
"RTN","IBCNSP1",105,0)
SUQ S VALMBCK="R" Q
"RTN","IBCNSP1",106,0)
 ;
"RTN","IBCNSP1",107,0)
IC ; -- Insurance Contact Information
"RTN","IBCNSP1",108,0)
 D FULL^VALM1 W !!
"RTN","IBCNSP1",109,0)
 N IBDIF,DA,DR,DIC,DIE,IBTRC,DIR,DUOUT,DTOUT,DIRUT,IBTRN
"RTN","IBCNSP1",110,0)
 D AI
"RTN","IBCNSP1",111,0)
 D:$G(IBTRC) AIP^IBCNSP02(IBTRC),BLD^IBCNSP
"RTN","IBCNSP1",112,0)
 S VALMBCK="R" Q
"RTN","IBCNSP1",113,0)
 Q
"RTN","IBCNSP1",114,0)
AI ; -- Add ins. verification entry
"RTN","IBCNSP1",115,0)
 N X,Y,I,J,DA,DR,DIC,DIE,DR,DD,DO,VA,VAIN,VAERR,IBQUIT,IBXIFN,IBTRN,DUOUT,IBX,IBQUIT,DTOUT
"RTN","IBCNSP1",116,0)
 Q:'$G(DFN)
"RTN","IBCNSP1",117,0)
 Q:'$G(IBCDFN)  S IBQUIT=0
"RTN","IBCNSP1",118,0)
 D AI^IBCNSP02
"RTN","IBCNSP1",119,0)
 Q
"RTN","IBCVA0")
0^12^B13013773^B14294206
"RTN","IBCVA0",1,0)
IBCVA0 ;ALB/MJB - SET MCCR VARIABLES CONT.  ;04 AUG 88 03:02
"RTN","IBCVA0",2,0)
 ;;2.0;INTEGRATED BILLING;**52,361**;21-MAR-94;Build 9
"RTN","IBCVA0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCVA0",4,0)
 ;
"RTN","IBCVA0",5,0)
 ;MAP TO DGCRVA0
"RTN","IBCVA0",6,0)
 ;
"RTN","IBCVA0",7,0)
 Q
"RTN","IBCVA0",8,0)
ALL I $D(DFN) S IBDPT=^DPT(DFN,0) D ADDR ;I IBADD1]"",$L(IBADD1)'>47 S DIE="^DGCR(399,",(DA,Y)=+IBIFN,DR="110///"_IBADD1 D ^DIE K DIE,DR,DA
"RTN","IBCVA0",9,0)
 ;I $D(^DPT(DFN,.11)) S IBST=$P(^(.11),U,5),IBST=$S(IBST'="":$P(^DIC(5,IBST,0),U,2),1:"")
"RTN","IBCVA0",10,0)
 S IBBNO=$P(IB(0),"^"),IBDT=$P(IB(0),"^",3)
"RTN","IBCVA0",11,0)
 D 2^VADPT
"RTN","IBCVA0",12,0)
 ;I $P(IB(0),U,5)<3 S Y=0 F I=1:1 S Y=$O(^DGPM("APTT1",DFN,Y)) Q:'Y  S:$E(Y,1,7)=IBDT IBDA=Y
"RTN","IBCVA0",13,0)
 Q
"RTN","IBCVA0",14,0)
1 ;Demographic variables set
"RTN","IBCVA0",15,0)
 D Q1^IBCVA
"RTN","IBCVA0",16,0)
EN1 Q:'$D(DFN)  S IBMAR=$S($P(IBDPT,U,5)'="":$P(IBDPT,U,5),1:"U") I IBMAR'="U" S IBMAR=$S(IBMAR=6:"S",IBMAR=2:"M",IBMAR=1:"D",IBMAR=4:"W",IBMAR=5:"X",1:"U")
"RTN","IBCVA0",17,0)
 I $D(^DPT(DFN,.121)) S IBTADD=^DPT(DFN,.121),IBTST=$P(IBTADD,U,5),IBTST=$S(IBTST'="":$P(^DIC(5,IBTST,0),U,2),1:"") I $P(IBTADD,U)="" S IBT1="NO TEMPORARY ADDRESS"
"RTN","IBCVA0",18,0)
 Q
"RTN","IBCVA0",19,0)
2 ;Employment variables set
"RTN","IBCVA0",20,0)
 D Q1^IBCVA,Q2^IBCVA
"RTN","IBCVA0",21,0)
EN2 S:'$D(^DPT(DFN,.311)) IBEMPD="" I $D(^DPT(DFN,.311)) I ^DPT(DFN,.311)'="" S IBEMPD=$P(^(.311),U)_"^"_$P(^(.311),U,6)_"^"_$S($P(^(.311),U,7)'="":$P(^(.311),U,7),1:"")_"^"_$P($G(^DPT(DFN,.22)),U,5)_"^"_$P(IB(0),U,9)_"^"_$P(IB(0),U,8)
"RTN","IBCVA0",22,0)
 I $D(IBEMPD) S:IBEMPD'="" IBEC=$P(^DPT(DFN,.311),"^",15)
"RTN","IBCVA0",23,0)
 I $D(^DPT(DFN,.25)) S:$P(^DPT(DFN,.25),U,6)'="" IBSEST=$P(^(.25),U,6),IBSEST=$P(^DIC(5,IBSEST,0),U,2)
"RTN","IBCVA0",24,0)
 Q
"RTN","IBCVA0",25,0)
3 ;Insurance variables set
"RTN","IBCVA0",26,0)
EN3 D 123^IBCVA
"RTN","IBCVA0",27,0)
EN31 ; -IBdd(i) = value of ins node in dpt
"RTN","IBCVA0",28,0)
 I '$D(^DGCR(399,IBIFN,"AIC")) S IBINDT=$S(+$G(IB("U")):+IB("U"),+$G(^DGCR(399,IBIFN,"U")):+$G(^("U")),1:DT) D ALL^IBCNS1(DFN,"IBDD",1,IBINDT) S I="" F  S I=$O(IBDD(I)) Q:'I  D INS
"RTN","IBCVA0",29,0)
 I $D(^DGCR(399,IBIFN,"AIC")) S IBIN="I" F I=1:1:3 S IBIN=$O(^DGCR(399,IBIFN,IBIN)) Q:IBIN'?1"I".N  S IBDD(I,0)=^DGCR(399,IBIFN,IBIN) D INS
"RTN","IBCVA0",30,0)
 Q
"RTN","IBCVA0",31,0)
INS I $P(IBDD(I,0),U,6)="v" S IBISEX(I)=$P(^DPT(DFN,0),U,2)
"RTN","IBCVA0",32,0)
 E  S IBISEX(I)=$P($G(^DPT(DFN,.312,+$P($G(^DGCR(399,IBIFN,"M")),U,I+11),3)),U,12) ; *361 replaces old calculation of insured's sex
"RTN","IBCVA0",33,0)
 S IBISEX(I)=$S(IBISEX(I)="M":"MALE",IBISEX(I)="F":"FEMALE",1:"UNSPECIFIED")
"RTN","IBCVA0",34,0)
 S IBIRN(I)=$P(IBDD(I,0),U,16),IBIR(I)=$S(IBIRN(I)="01":"PATIENT",IBIRN(I)="02":"SPOUSE",IBIRN(I)="03":"CHILD",IBIRN(I)="08":"EMPLOYEE",IBIRN(I)="11":"ORGAN DONOR",IBIRN(I)="18":"PARENT",IBIRN(I)=15:"PLANTIFF",1:"UNKNOWN")
"RTN","IBCVA0",35,0)
 I IBIR(I)="UNKNOWN" S IBIR(I)=$S('$D(IBDD(I,0)):"UNKNOWN",$P(IBDD(I,0),U,6)="v":"PATIENT",$P(IBDD(I,0),U,6)="s":"SPOUSE",1:"UNKNOWN")
"RTN","IBCVA0",36,0)
 ;S IBIUTL(I)=IBDD(I,0)_"^"_IBISEX(I)_"^"_IBIRN(I)
"RTN","IBCVA0",37,0)
 Q
"RTN","IBCVA0",38,0)
ADDR ;SET ADDRESS
"RTN","IBCVA0",39,0)
 S IBADD1="" I $D(^DGCR(399,IBIFN,"M")),$P(^("M"),"^",10)]"" Q
"RTN","IBCVA0",40,0)
 S X=$S($D(^DPT(DFN,.11)):^(.11),1:"") F I=1:1:4 I $P(X,"^",I)]"" S IBADD1=IBADD1_$P(X,"^",I)_","
"RTN","IBCVA0",41,0)
 I $D(^DIC(5,+$P(X,"^",5),0)) S IBADD1=IBADD1_$P(^(0),"^",2),IBST=$P(^(0),"^",2)
"RTN","IBCVA0",42,0)
 S:$P(X,"^",12)]"" IBADD1=IBADD1_" "_$P(X,"^",12) Q
"RTN","IBCVA0",43,0)
 ;IBCVA0
"RTN","IBECEA35")
0^13^B9274826^B9285866
"RTN","IBECEA35",1,0)
IBECEA35 ;ALB/CPM - Cancel/Edit/Add... TRICARE Support ; 09-AUG-96
"RTN","IBECEA35",2,0)
 ;;2.0;INTEGRATED BILLING;**52,240,361**;21-MAR-94;Build 9
"RTN","IBECEA35",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBECEA35",4,0)
 ;
"RTN","IBECEA35",5,0)
CUS ; Process all TRICARE copayment charges.
"RTN","IBECEA35",6,0)
 ;
"RTN","IBECEA35",7,0)
 N X,IBCS,IBINS,IBPLAN
"RTN","IBECEA35",8,0)
 ;
"RTN","IBECEA35",9,0)
 ; - display TRICARE coverage
"RTN","IBECEA35",10,0)
 S IBCS=$$CUS^IBACUS(DFN,DT)
"RTN","IBECEA35",11,0)
 D DISP(DFN,IBCS)
"RTN","IBECEA35",12,0)
 ;
"RTN","IBECEA35",13,0)
 ; - collect parameters needed to create the charge
"RTN","IBECEA35",14,0)
 S IBATYPN=$G(^IBE(350.1,IBATYP,0)),IBUNIT=1
"RTN","IBECEA35",15,0)
 I IBATYPN["RX" D AMT^IBECEAU2 S IBDESC="TRICARE RX COPAY",IBFR=DT G GO
"RTN","IBECEA35",16,0)
 I IBATYPN["OPT" D  G GO
"RTN","IBECEA35",17,0)
 .S IBLIM=DT D FR^IBECEAU2(0),AMT^IBECEAU2:IBY>0
"RTN","IBECEA35",18,0)
 .S IBDESC="TRICARE OPT COPAY",(IBEVDT,IBTO)=IBFR,IBEVDA="*"
"RTN","IBECEA35",19,0)
 I IBATYPN["INPT" D  G GO
"RTN","IBECEA35",20,0)
 .S IBDG=$$ADSEL^IBECEA31(DFN),IBDESC="TRICARE INPT COPAY"
"RTN","IBECEA35",21,0)
 .I IBDG>0 D  Q
"RTN","IBECEA35",22,0)
 ..D AMT^IBECEAU2 Q:IBY'>0
"RTN","IBECEA35",23,0)
 ..S IBSL="405:"_+IBDG,(IBEVDT,IBFR)=$P(IBDG,"^",2),IBEVDA="*"
"RTN","IBECEA35",24,0)
 ..S IBTO=$$DIS^IBECEA31(IBSL),IBTO=$S(IBTO>DT:DT,1:IBTO)
"RTN","IBECEA35",25,0)
 .W !!,"An admission was not available or not selected."
"RTN","IBECEA35",26,0)
 .W !,"This transaction has been cancelled." S IBY=-1 Q
"RTN","IBECEA35",27,0)
 .;
"RTN","IBECEA35",28,0)
 .; - if I pursue this further...
"RTN","IBECEA35",29,0)
 .S DIR(0)="Y",DIR("A")="Do you still wish to create an inpatient copayment charge"
"RTN","IBECEA35",30,0)
 .S DIR("?")="Enter 'Y' or 'YES' to create a charge, or 'N', 'NO', or '^' to quit."
"RTN","IBECEA35",31,0)
 .D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) W !,"This transaction has been cancelled." S IBY=-1 Q
"RTN","IBECEA35",32,0)
 ;
"RTN","IBECEA35",33,0)
 ;
"RTN","IBECEA35",34,0)
GO ; - bill the charge
"RTN","IBECEA35",35,0)
 I IBY<0 G CUSQ
"RTN","IBECEA35",36,0)
 ;
"RTN","IBECEA35",37,0)
 ; - okay to proceed?
"RTN","IBECEA35",38,0)
 D PROC^IBECEAU4("add") I IBY<0 G CUSQ
"RTN","IBECEA35",39,0)
 ;
"RTN","IBECEA35",40,0)
 ; - create charge and pass to AR
"RTN","IBECEA35",41,0)
 W !,"Billing the TRICARE patient copayment charge..."
"RTN","IBECEA35",42,0)
 D ADD^IBECEAU3,AR^IBR:IBY>0 I IBY<0 G CUSQ
"RTN","IBECEA35",43,0)
 ;
"RTN","IBECEA35",44,0)
 S IBCOMMIT=1 W "completed."
"RTN","IBECEA35",45,0)
 ;
"RTN","IBECEA35",46,0)
CUSQ K IBCS
"RTN","IBECEA35",47,0)
 Q
"RTN","IBECEA35",48,0)
 ;
"RTN","IBECEA35",49,0)
 ;
"RTN","IBECEA35",50,0)
DISP(DFN,INS) ; Display TRICARE beneficiary insurance information.
"RTN","IBECEA35",51,0)
 ;  Input:    DFN  --  Pointer to the patient in file #2
"RTN","IBECEA35",52,0)
 ;            INS  --  Pointer to the patient policy in file #2.312
"RTN","IBECEA35",53,0)
 ;
"RTN","IBECEA35",54,0)
 I '$G(INS) W *7,!!,"Please note that this patient does not have active TRICARE coverage!",! G DISPQ
"RTN","IBECEA35",55,0)
 ;
"RTN","IBECEA35",56,0)
 N IBINS,IBINS3,IBPLAN,IBS S IBS=0
"RTN","IBECEA35",57,0)
 S IBINS=$G(^DPT(DFN,.312,INS,0)),IBINS3=$G(^(3))
"RTN","IBECEA35",58,0)
 S IBPLAN=$G(^IBA(355.3,+$P(IBINS,"^",18),0))
"RTN","IBECEA35",59,0)
 W !!," TRICARE coverage for ",$P($G(^DPT(DFN,0)),"^"),":"
"RTN","IBECEA35",60,0)
 W !!," Insured Person: ",$E($P(IBINS,"^",17),1,20)
"RTN","IBECEA35",61,0)
 W ?42,"Company: ",$P($G(^DIC(36,+IBINS,0)),"^")
"RTN","IBECEA35",62,0)
 W !," Effective Date: ",$$DAT1^IBOUTL($P(IBINS,"^",8))
"RTN","IBECEA35",63,0)
 W ?40,"Plan Name: ",$P(IBPLAN,"^",3)
"RTN","IBECEA35",64,0)
 W !,"Expiration Date: ",$$DAT1^IBOUTL($P(IBINS,"^",4))
"RTN","IBECEA35",65,0)
 W ?38,"Plan Number: ",$P(IBPLAN,"^",4),!
"RTN","IBECEA35",66,0)
 I $P(IBINS3,"^",2)]"" S IBS=1 W " Service Branch: ",$P($G(^DIC(23,+$P(IBINS3,"^",2),0)),"^")
"RTN","IBECEA35",67,0)
 I $P(IBINS3,"^",3)]"" S IBS=1 W ?37,"Service Rank: ",$P(IBINS3,"^",3)
"RTN","IBECEA35",68,0)
 W:IBS !
"RTN","IBECEA35",69,0)
DISPQ Q
"UP",2,2.312,-1)
2^.312
"UP",2,2.312,0)
2.312
"VER")
8.0^22.0
"^DD",2,2.312,3.12,0)
INSURED'S SEX^S^F:FEMALE;M:MALE;^3;12^Q
"^DD",2,2.312,3.12,3)
Enter the sex (M or F) of the policy holder.
"^DD",2,2.312,3.12,21,0)
^.001^6^6^3061002^^
"^DD",2,2.312,3.12,21,1,0)
This field is used in insurance billing to help verify the
"^DD",2,2.312,3.12,21,2,0)
policy coverage when the bill is submitted to the carrier.
"^DD",2,2.312,3.12,21,3,0)
If the patient is the policy holder, this value should match
"^DD",2,2.312,3.12,21,4,0)
the patient's sex.  If the patient's spouse or other relative
"^DD",2,2.312,3.12,21,5,0)
is the policy holder, the appropriate value should be
"^DD",2,2.312,3.12,21,6,0)
determined and entered.
"^DD",2,2.312,3.12,"DT")
3061002
"^DD",355.33,355.33,60.13,0)
INSURED'S SEX^S^F:FEMALE;M:MALE;^60;13^Q
"^DD",355.33,355.33,60.13,3)
Enter the sex (M or F) of the policy holder.
"^DD",355.33,355.33,60.13,21,0)
^^6^6^3061002^
"^DD",355.33,355.33,60.13,21,1,0)
This field is used in insurance billing to help verify the
"^DD",355.33,355.33,60.13,21,2,0)
policy coverage when the bill is submitted to the carrier.
"^DD",355.33,355.33,60.13,21,3,0)
If the patient is the policy holder, this value should match
"^DD",355.33,355.33,60.13,21,4,0)
the patient's sex.  If the patient's spouse or other relative
"^DD",355.33,355.33,60.13,21,5,0)
is the policy holder, the appropriate value should be
"^DD",355.33,355.33,60.13,21,6,0)
determined and entered.
"^DD",355.33,355.33,60.13,"DT")
3061002
"BLD",7089,6)
^340
**END**
**END**
