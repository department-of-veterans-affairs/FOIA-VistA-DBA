Released XU*8*59 SEQ #51
Extracted from mail message
**KIDS**:XU*8.0*59^

**INSTALL NAME**
XU*8.0*59
"BLD",151,0)
XU*8.0*59^KERNEL^0^2970918^n
"BLD",151,1,0)
^^90^90^2971009^
"BLD",151,1,1,0)
This is the Auto Sign-on patch (aka Single Sign-on)
"BLD",151,1,2,0)
This patch has several Kernel routines as well as new fields in the Kernel
"BLD",151,1,3,0)
System parameteres file and the New Person file and the forms to edit
"BLD",151,1,4,0)
these files.  PLEASE be sure to edit the AUTO SIGN-ON field in the Kernel
"BLD",151,1,5,0)
System parameters file.  
"BLD",151,1,6,0)

"BLD",151,1,7,0)
*** This patch will increase the use of the LOCK table  ***
"BLD",151,1,8,0)
*** NOTE THAT AUTO SIGN-ON DOES NOT WORK ON MSM SYSTEMS ***
"BLD",151,1,9,0)

"BLD",151,1,10,0)
All of this work is in support of RPC Broker, CPRS and GUI clients.
"BLD",151,1,11,0)

"BLD",151,1,12,0)
There were some other fixes that had been applied to the routines and 
"BLD",151,1,13,0)
files needed by this patch so they are also fixed.
"BLD",151,1,14,0)
                     To the "Enter/Edit Kernel Site Parameters" form;
"BLD",151,1,15,0)
                     Added the AUTO SIGN-ON field to page 1,
"BLD",151,1,16,0)
                     Added the DEFAULT DIRECTORY FOR HFS field to page 3.
"BLD",151,1,17,0)

"BLD",151,1,18,0)
                     File 3.081 Field 1 changed from 15 to 30 characters.
"BLD",151,1,19,0)
                     
"BLD",151,1,20,0)
WBP-0396-20726  XQ1  The setting of DIPCRIA, DIASKHD, and DISUPNO was not
"BLD",151,1,21,0)
                     correct and has been fixed.
"BLD",151,1,22,0)
                     
"BLD",151,1,23,0)
DAY-0697-41746  XQ1  Startup Options Getting Deleted in file 19.2
"BLD",151,1,24,0)

"BLD",151,1,25,0)
E3R #10159,          File 200 Field 20.2 changed from 30 to 40 characters. 
"BLD",151,1,26,0)

"BLD",151,1,27,0)
                 Checksum
"BLD",151,1,28,0)
Routine         Old       New      2nd Line
"BLD",151,1,29,0)
XQ1                    11726256    **1,15,59**
"BLD",151,1,30,0)
XQ82                    3479466    **59**
"BLD",151,1,31,0)
XQT1                   10251041    **59**
"BLD",151,1,32,0)
XUINENV                  713144    **59**
"BLD",151,1,33,0)
XUS                     8138431    **16,26,49,59**
"BLD",151,1,34,0)
XUS1          8848266  10420726    **9,59**
"BLD",151,1,35,0)
XUS1B                   1917370    **59**
"BLD",151,1,36,0)
XUS2                   14055468    **59**
"BLD",151,1,37,0)
XUSCLEAN      6326709   6583467    **13,59**
"BLD",151,1,38,0)
XUSRB         2961367   4666750    **11,16,28,32,59**
"BLD",151,1,39,0)
XUVERIFY      3907067   3888236    **2,26,59**
"BLD",151,1,40,0)
ZIS4MSM       6649854   7202298    **23,36,49,59**
"BLD",151,1,41,0)
ZIS4ONT                 8238234    **34,59**
"BLD",151,1,42,0)
ZIS4VXD       8342152   8151150    **23,36,49,59**
"BLD",151,1,43,0)
ZISTCP        2230177   2687385    **36,34,59**
"BLD",151,1,44,0)

"BLD",151,1,45,0)
========================================================================= 
"BLD",151,1,46,0)
Installation:
"BLD",151,1,47,0)

"BLD",151,1,48,0)
  1.  DSM sites - Some of these routines are usually mapped,
"BLD",151,1,49,0)
      so you will need to disable mapping for the effected routines.
"BLD",151,1,50,0)
      
"BLD",151,1,51,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",151,1,52,0)
      option will load the KIDS package onto your system.
"BLD",151,1,53,0)
      
"BLD",151,1,54,0)
  3.  The patch has now been loaded into a Transport global on your
"BLD",151,1,55,0)
      system. You now need to use KIDS to install the Transport global.
"BLD",151,1,56,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"BLD",151,1,57,0)
      options:
"BLD",151,1,58,0)
      
"BLD",151,1,59,0)
         Verify Checksum's in Transport Global
"BLD",151,1,60,0)
         Print Transport Global
"BLD",151,1,61,0)
         Compare Transport Global to Current System
"BLD",151,1,62,0)
         Backup a Transport Global
"BLD",151,1,63,0)
         
"BLD",151,1,64,0)
  4.  Inhibit users from login into system. 
"BLD",151,1,65,0)
      Also place TASKMAN in a wait state.
"BLD",151,1,66,0)
            
"BLD",151,1,67,0)
  5.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",151,1,68,0)
      option:
"BLD",151,1,69,0)
         Install Package(s)  'XU*8.0*59'
"BLD",151,1,70,0)
                              =========
"BLD",151,1,71,0)
               
"BLD",151,1,72,0)
 6.  DSM/MSM Sites - Move the following two routines to the MGR account.
"BLD",151,1,73,0)
      ZIS4MSM
"BLD",151,1,74,0)
      ZIS4ONT
"BLD",151,1,75,0)
      ZIS4VXD
"BLD",151,1,76,0)
      ZISTCP
"BLD",151,1,77,0)
      And in the manager account, (OpenM sites remain in VAH)
"BLD",151,1,78,0)
       
"BLD",151,1,79,0)
      All sites:
"BLD",151,1,80,0)
      DO RELOAD^ZTMGRSET
"BLD",151,1,81,0)
      Select the System
"BLD",151,1,82,0)
      Patch number to load: 59
"BLD",151,1,83,0)
                            ==
"BLD",151,1,84,0)
       
"BLD",151,1,85,0)
  8.  DSM Sites, after patch has installed, rebuild your map set.
"BLD",151,1,86,0)
  9.  Enable user's login.
"BLD",151,1,87,0)
      Remove TASKMAN from the wait state.
"BLD",151,1,88,0)

"BLD",151,1,89,0)
=========================================================================
"BLD",151,1,90,0)

"BLD",151,4,0)
^9.64PA^19^4
"BLD",151,4,3.081,0)
3.081
"BLD",151,4,3.081,222)
y^n^f^^^^n
"BLD",151,4,19,0)
19
"BLD",151,4,19,2,0)
^9.641^19.05^2
"BLD",151,4,19,2,19,0)
OPTION  (File-top level)
"BLD",151,4,19,2,19,1,0)
^9.6411^4^1
"BLD",151,4,19,2,19,1,4,0)
TYPE
"BLD",151,4,19,2,19.05,0)
RPC  (sub-file)
"BLD",151,4,19,2,19.05,1,0)
^9.6411^^
"BLD",151,4,19,222)
y^n^p^^^^n
"BLD",151,4,200,0)
200
"BLD",151,4,200,2,0)
^9.641^200^1
"BLD",151,4,200,2,200,0)
NEW PERSON  (File-top level)
"BLD",151,4,200,2,200,1,0)
^9.6411^20.2^2
"BLD",151,4,200,2,200,1,20.2,0)
SIGNATURE BLOCK PRINTED NAME
"BLD",151,4,200,2,200,1,200.18,0)
AUTO SIGN-ON
"BLD",151,4,200,222)
y^n^p^^^^n
"BLD",151,4,8989.3,0)
8989.3
"BLD",151,4,8989.3,2,0)
^9.641^8989.3^1
"BLD",151,4,8989.3,2,8989.3,0)
KERNEL SYSTEM PARAMETERS  (File-top level)
"BLD",151,4,8989.3,2,8989.3,1,0)
^9.6411^218^1
"BLD",151,4,8989.3,2,8989.3,1,218,0)
AUTO SIGN-ON
"BLD",151,4,8989.3,222)
y^n^p^^^^n
"BLD",151,4,"APDD",19,19)

"BLD",151,4,"APDD",19,19,4)

"BLD",151,4,"APDD",19,19.05)

"BLD",151,4,"APDD",200,200)

"BLD",151,4,"APDD",200,200,20.2)

"BLD",151,4,"APDD",200,200,200.18)

"BLD",151,4,"APDD",8989.3,8989.3)

"BLD",151,4,"APDD",8989.3,8989.3,218)

"BLD",151,4,"B",3.081,3.081)

"BLD",151,4,"B",19,19)

"BLD",151,4,"B",200,200)

"BLD",151,4,"B",8989.3,8989.3)

"BLD",151,"INIT")
POST59^XUINENV
"BLD",151,"KRN",0)
^9.67PA^19^18
"BLD",151,"KRN",.4,0)
.4
"BLD",151,"KRN",.401,0)
.401
"BLD",151,"KRN",.402,0)
.402
"BLD",151,"KRN",.402,"NM",0)
^9.68A^4^4
"BLD",151,"KRN",.402,"NM",1,0)
XUEXISTING USER    FILE #200^200^0
"BLD",151,"KRN",.402,"NM",2,0)
XUNEW USER    FILE #200^200^0
"BLD",151,"KRN",.402,"NM",3,0)
XUREACT USER    FILE #200^200^0
"BLD",151,"KRN",.402,"NM",4,0)
XUSITEPARM    FILE #8989.3^8989.3^0
"BLD",151,"KRN",.402,"NM","B","XUEXISTING USER    FILE #200",1)

"BLD",151,"KRN",.402,"NM","B","XUNEW USER    FILE #200",2)

"BLD",151,"KRN",.402,"NM","B","XUREACT USER    FILE #200",3)

"BLD",151,"KRN",.402,"NM","B","XUSITEPARM    FILE #8989.3",4)

"BLD",151,"KRN",.403,0)
.403
"BLD",151,"KRN",.403,"NM",0)
^9.68A^4^4
"BLD",151,"KRN",.403,"NM",1,0)
XUEXISTING USER    FILE #200^200^0
"BLD",151,"KRN",.403,"NM",2,0)
XUNEW USER    FILE #200^200^0
"BLD",151,"KRN",.403,"NM",3,0)
XUREACT USER    FILE #200^200^0
"BLD",151,"KRN",.403,"NM",4,0)
XUSITEPARM    FILE #8989.3^8989.3^0
"BLD",151,"KRN",.403,"NM","B","XUEXISTING USER    FILE #200",1)

"BLD",151,"KRN",.403,"NM","B","XUNEW USER    FILE #200",2)

"BLD",151,"KRN",.403,"NM","B","XUREACT USER    FILE #200",3)

"BLD",151,"KRN",.403,"NM","B","XUSITEPARM    FILE #8989.3",4)

"BLD",151,"KRN",.5,0)
.5
"BLD",151,"KRN",.84,0)
.84
"BLD",151,"KRN",3.6,0)
3.6
"BLD",151,"KRN",3.8,0)
3.8
"BLD",151,"KRN",9.2,0)
9.2
"BLD",151,"KRN",9.8,0)
9.8
"BLD",151,"KRN",9.8,"NM",0)
^9.68A^14^14
"BLD",151,"KRN",9.8,"NM",1,0)
XUSRB^^0^B12902600
"BLD",151,"KRN",9.8,"NM",2,0)
XUS1^^0^B18301077
"BLD",151,"KRN",9.8,"NM",3,0)
XUSCLEAN^^0^B10489199
"BLD",151,"KRN",9.8,"NM",4,0)
XUS^^0^B19006135
"BLD",151,"KRN",9.8,"NM",5,0)
XUS1B^^0^B3961078
"BLD",151,"KRN",9.8,"NM",6,0)
ZIS4VXD^^0^B17418495
"BLD",151,"KRN",9.8,"NM",7,0)
ZIS4MSM^^0^B15650959
"BLD",151,"KRN",9.8,"NM",8,0)
XQ82^^0^B4749918
"BLD",151,"KRN",9.8,"NM",9,0)
XQ1^^0^B29287427
"BLD",151,"KRN",9.8,"NM",10,0)
ZISTCP^^0^B9048541
"BLD",151,"KRN",9.8,"NM",11,0)
XUS2^^0^B29492901
"BLD",151,"KRN",9.8,"NM",12,0)
XUVERIFY^^0^B7642643
"BLD",151,"KRN",9.8,"NM",13,0)
ZIS4ONT^^0^B14833136
"BLD",151,"KRN",9.8,"NM",14,0)
XQT1^^0^B18507568
"BLD",151,"KRN",9.8,"NM","B","XQ1",9)

"BLD",151,"KRN",9.8,"NM","B","XQ82",8)

"BLD",151,"KRN",9.8,"NM","B","XQT1",14)

"BLD",151,"KRN",9.8,"NM","B","XUS",4)

"BLD",151,"KRN",9.8,"NM","B","XUS1",2)

"BLD",151,"KRN",9.8,"NM","B","XUS1B",5)

"BLD",151,"KRN",9.8,"NM","B","XUS2",11)

"BLD",151,"KRN",9.8,"NM","B","XUSCLEAN",3)

"BLD",151,"KRN",9.8,"NM","B","XUSRB",1)

"BLD",151,"KRN",9.8,"NM","B","XUVERIFY",12)

"BLD",151,"KRN",9.8,"NM","B","ZIS4MSM",7)

"BLD",151,"KRN",9.8,"NM","B","ZIS4ONT",13)

"BLD",151,"KRN",9.8,"NM","B","ZIS4VXD",6)

"BLD",151,"KRN",9.8,"NM","B","ZISTCP",10)

"BLD",151,"KRN",19,0)
19
"BLD",151,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",151,"KRN",19,"NM",1,0)
XUS SIGNON^^0
"BLD",151,"KRN",19,"NM","B","XUS SIGNON",1)

"BLD",151,"KRN",19.1,0)
19.1
"BLD",151,"KRN",101,0)
101
"BLD",151,"KRN",409.61,0)
409.61
"BLD",151,"KRN",771,0)
771
"BLD",151,"KRN",869.2,0)
869.2
"BLD",151,"KRN",870,0)
870
"BLD",151,"KRN",8994,0)
8994
"BLD",151,"KRN",8994,"NM",0)
^9.68A^6^6
"BLD",151,"KRN",8994,"NM",1,0)
XUS AV CODE^^0
"BLD",151,"KRN",8994,"NM",2,0)
XUS AV HELP^^0
"BLD",151,"KRN",8994,"NM",3,0)
XUS CVC^^0
"BLD",151,"KRN",8994,"NM",4,0)
XUS INTRO MSG^^0
"BLD",151,"KRN",8994,"NM",5,0)
XUS KEY CHECK^^0
"BLD",151,"KRN",8994,"NM",6,0)
XUS SIGNON SETUP^^0
"BLD",151,"KRN",8994,"NM","B","XUS AV CODE",1)

"BLD",151,"KRN",8994,"NM","B","XUS AV HELP",2)

"BLD",151,"KRN",8994,"NM","B","XUS CVC",3)

"BLD",151,"KRN",8994,"NM","B","XUS INTRO MSG",4)

"BLD",151,"KRN",8994,"NM","B","XUS KEY CHECK",5)

"BLD",151,"KRN",8994,"NM","B","XUS SIGNON SETUP",6)

"BLD",151,"KRN","B",.4,.4)

"BLD",151,"KRN","B",.401,.401)

"BLD",151,"KRN","B",.402,.402)

"BLD",151,"KRN","B",.403,.403)

"BLD",151,"KRN","B",.5,.5)

"BLD",151,"KRN","B",.84,.84)

"BLD",151,"KRN","B",3.6,3.6)

"BLD",151,"KRN","B",3.8,3.8)

"BLD",151,"KRN","B",9.2,9.2)

"BLD",151,"KRN","B",9.8,9.8)

"BLD",151,"KRN","B",19,19)

"BLD",151,"KRN","B",19.1,19.1)

"BLD",151,"KRN","B",101,101)

"BLD",151,"KRN","B",409.61,409.61)

"BLD",151,"KRN","B",771,771)

"BLD",151,"KRN","B",869.2,869.2)

"BLD",151,"KRN","B",870,870)

"BLD",151,"KRN","B",8994,8994)

"BLD",151,"PRE")
XUINENV
"BLD",151,"QUES",0)
^9.62^^
"BLD",151,"REQB",0)
^9.611^1^1
"BLD",151,"REQB",1,0)
XU*8.0*49^2
"BLD",151,"REQB","B","XU*8.0*49",1)

"FIA",3.081)
SIGN-ON LOG
"FIA",3.081,0)
^XUSEC(0,
"FIA",3.081,0,0)
3.081P
"FIA",3.081,0,1)
y^n^f^^^^n
"FIA",3.081,0,10)

"FIA",3.081,0,11)

"FIA",3.081,0,"RLRO")

"FIA",3.081,0,"VR")
8.0^XU
"FIA",3.081,3.081)
0
"FIA",19)
OPTION
"FIA",19,0)
^DIC(19,
"FIA",19,0,0)
19I
"FIA",19,0,1)
y^n^p^^^^n
"FIA",19,0,10)

"FIA",19,0,11)

"FIA",19,0,"RLRO")

"FIA",19,0,"VR")
8.0^XU
"FIA",19,19)
1
"FIA",19,19,4)

"FIA",19,19,320)

"FIA",19,19.05)
0
"FIA",200)
NEW PERSON
"FIA",200,0)
^VA(200,
"FIA",200,0,0)
200I
"FIA",200,0,1)
y^n^p^^^^n
"FIA",200,0,10)

"FIA",200,0,11)

"FIA",200,0,"RLRO")

"FIA",200,0,"VR")
8.0^XU
"FIA",200,200)
1
"FIA",200,200,20.2)

"FIA",200,200,200.18)

"FIA",8989.3)
KERNEL SYSTEM PARAMETERS
"FIA",8989.3,0)
^XTV(8989.3,
"FIA",8989.3,0,0)
8989.3P
"FIA",8989.3,0,1)
y^n^p^^^^n
"FIA",8989.3,0,10)

"FIA",8989.3,0,11)

"FIA",8989.3,0,"RLRO")

"FIA",8989.3,0,"VR")
8.0^XU
"FIA",8989.3,8989.3)
1
"FIA",8989.3,8989.3,218)

"INIT")
POST59^XUINENV
"KRN",.402,271,-1)
0^4
"KRN",.402,271,0)
XUSITEPARM^2940804.1231^^8989.3^^@^2941116
"KRN",.402,271,"DIAB",1,1,8989.33,0)
ALL
"KRN",.402,271,"DIAB",1,1,8989.332,0)
ALL
"KRN",.402,271,"DIAB",1,1,8989.333,0)
ALL
"KRN",.402,271,"DIAB",1,1,8989.34,0)
ALL
"KRN",.402,271,"DIAB",1,1,8989.35,0)
ALL
"KRN",.402,271,"DIAB",1,1,8989.36,0)
ALL
"KRN",.402,271,"DR",1,8989.3)
202;203;204;205;206;209;210;211;214;216;218;240;245;11;19;19.4;19.5;19.1;19.2;19.3;212.1;212.5;31.1;31.2;31.3;32;33;41;217;
"KRN",.402,271,"DR",2,8989.304)
.01;2;6;
"KRN",.402,271,"DR",2,8989.33)
.01
"KRN",.402,271,"DR",2,8989.332)
.01:1
"KRN",.402,271,"DR",2,8989.333)
.01:.02
"KRN",.402,271,"DR",2,8989.34)
.01
"KRN",.402,271,"DR",2,8989.35)
.01
"KRN",.402,271,"DR",2,8989.36)
.01
"KRN",.402,271,"DR",3,8989.3321)
.01:1
"KRN",.402,271,"DR",4,8989.33211)
.01
"KRN",.402,305,-1)
0^2
"KRN",.402,305,0)
XUNEW USER^2911003.1131^^200^^#^2960729
"KRN",.402,305,"DIAB",1,1,200.02,0)
ALL
"KRN",.402,305,"DR",1,200)
13;7;9.2;8;9;16;29;28;2.1;11.1;3;201;203;31.3;14;31.1;200.04;200.05;200.06;200.09;200.1;200.11;15;41;41.2;.131;.132;.135;.136;.137;.138;200.07;8932.1;
"KRN",.402,305,"DR",2,200.02)
.01
"KRN",.402,305,"DR",2,200.03)
.01:2;
"KRN",.402,305,"DR",2,200.05)
.01:3
"KRN",.402,306,-1)
0^1
"KRN",.402,306,0)
XUEXISTING USER^2960730.0909^^200^^#^2960730
"KRN",.402,306,"DIAB",1,1,200.02,0)
ALL
"KRN",.402,306,"DIAB",1,1,200.05,0)
ALL
"KRN",.402,306,"DR",1,200)
.01;1;13;7;9.2;8;9;16;29;28;2.1;11.1;3;201;203;31.3;14;31.1;200.04;200.05;200.06;200.09;200.1;200.11;200.18;15;41;41.2;.131;.132;.135;.136;.137;.138;200.07;8932.1;
"KRN",.402,306,"DR",2,200.02)
.01
"KRN",.402,306,"DR",2,200.03)
.01:2;
"KRN",.402,306,"DR",2,200.05)
.01:3
"KRN",.402,308,-1)
0^3
"KRN",.402,308,0)
XUREACT USER^2911003.1259^^200^^^^
"KRN",.402,308,"DIAB",1,1,200.02,0)
ALL
"KRN",.402,308,"DR",1,200)
9.2///@;.01;1;13;7;9.2;8;9;16;29;28;2.1;11.1;3;201;203;31.3;14;31.1;200.04;200.05;200.06;200.09;200.1;200.11;15;41;41.2;.131;.132;.135;.136;.137;.138;200.07;8932.1;
"KRN",.402,308,"DR",2,200.02)
.01
"KRN",.402,308,"DR",2,200.03)
.01:2;
"KRN",.402,308,"DR",2,200.05)
.01:3
"KRN",.403,2,-1)
0^1
"KRN",.403,2,0)
XUEXISTING USER^^^^2920804^^^200^0^0^1
"KRN",.403,2,2)
1;33
"KRN",.403,2,40,0)
^.4031I^7^7
"KRN",.403,2,40,1,0)
1^^1,1^2
"KRN",.403,2,40,1,1)
Page 1 of 3
"KRN",.403,2,40,1,40,0)
^.4032PI^178^2
"KRN",.403,2,40,1,40,4,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,2,40,1,40,178,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,2,0)
2^^1,1^3^1
"KRN",.403,2,40,2,1)
Page 2 of 3
"KRN",.403,2,40,2,15,0)
^^1^1^2941114^
"KRN",.403,2,40,2,15,1,0)
This is Page 2 of the edit existing user.
"KRN",.403,2,40,2,40,0)
^.4032PI^178^2
"KRN",.403,2,40,2,40,5,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,2,40,2,40,178,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,3,0)
1.1^^11,9^^^1^17,66^^
"KRN",.403,2,40,3,1)
SECONDARY MENU OPTIONS Subpage
"KRN",.403,2,40,3,40,0)
^.4032PI^6^1
"KRN",.403,2,40,3,40,6,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,2,40,4,0)
1.2^^8,16^^^1^13,59^^
"KRN",.403,2,40,4,1)
DIVISION Subpage
"KRN",.403,2,40,4,40,0)
^.4032PI^7^1
"KRN",.403,2,40,4,40,7,0)
XUEXISTING USER 4^1^2,3^e
"KRN",.403,2,40,5,0)
3^^1,1^1^2
"KRN",.403,2,40,5,1)
Page 3
"KRN",.403,2,40,5,40,0)
^.4032PI^257^3
"KRN",.403,2,40,5,40,178,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,5,40,181,0)
XUEXISTING USER 5^2^2,1^e
"KRN",.403,2,40,5,40,257,0)
XU-PERSON CLASS 2^3^13,1^e
"KRN",.403,2,40,5,40,257,2)
4^!IEN^n
"KRN",.403,2,40,6,0)
6^^1,1
"KRN",.403,2,40,6,1)
Page 6
"KRN",.403,2,40,7,0)
8^^1,1^^
"KRN",.403,2,40,7,1)
Page 8
"KRN",.403,2,40,7,40,0)
^.4032IP^0^0
"KRN",.403,56,-1)
0^4
"KRN",.403,56,0)
XUSITEPARM^^^^2941116^^^8989.3^0^0^1
"KRN",.403,56,40,0)
^.4031I^4^4
"KRN",.403,56,40,1,0)
1^^1,1^2
"KRN",.403,56,40,1,1)
Page 1
"KRN",.403,56,40,1,40,0)
^.4032IP^186^2
"KRN",.403,56,40,1,40,184,0)
XUSITEPARM 0^1^1,1^d
"KRN",.403,56,40,1,40,186,0)
XUSITEPARM 1^2^2,1^e
"KRN",.403,56,40,2,0)
3^^1,1^4^2
"KRN",.403,56,40,2,1)
Page 3
"KRN",.403,56,40,2,40,0)
^.4032IP^187^2
"KRN",.403,56,40,2,40,184,0)
XUSITEPARM 0^1^1,1^d
"KRN",.403,56,40,2,40,187,0)
XUSITEPARM 3^2^4,1^e
"KRN",.403,56,40,3,0)
2^^1,1^3^1
"KRN",.403,56,40,3,1)
Page 2
"KRN",.403,56,40,3,40,0)
^.4032IP^190^4
"KRN",.403,56,40,3,40,184,0)
XUSITEPARM 0^1^1,1^d
"KRN",.403,56,40,3,40,188,0)
XUSITEPARM 2^2^4,1^e
"KRN",.403,56,40,3,40,189,0)
XUSITEPARM 2.1^3^5,12^e
"KRN",.403,56,40,3,40,189,2)
4^^^^
"KRN",.403,56,40,3,40,190,0)
XUSITEPARM 2.2^4^12,12^e
"KRN",.403,56,40,3,40,190,2)
4
"KRN",.403,56,40,4,0)
4^^1,1^1^3
"KRN",.403,56,40,4,1)
Page 4
"KRN",.403,56,40,4,40,0)
^.4032IP^195^6
"KRN",.403,56,40,4,40,184,0)
XUSITEPARM 0^1^1,1^d
"KRN",.403,56,40,4,40,191,0)
XUSITEPARM 4^2^4,1^e
"KRN",.403,56,40,4,40,192,0)
XUSITEPARM 4.1^3^8,4^e
"KRN",.403,56,40,4,40,192,2)
4
"KRN",.403,56,40,4,40,193,0)
XUSITEPARM 4.2^4^8,43^e
"KRN",.403,56,40,4,40,193,2)
4
"KRN",.403,56,40,4,40,194,0)
XUSITEPARM 4.4^6^13,43^e
"KRN",.403,56,40,4,40,194,2)
4
"KRN",.403,56,40,4,40,195,0)
XUSITEPARM 4.3^5^13,4^e
"KRN",.403,56,40,4,40,195,2)
4
"KRN",.403,68,-1)
0^3
"KRN",.403,68,0)
XUREACT USER^^@^^2950327.1641^^^200^0^0^1
"KRN",.403,68,40,0)
^.4031I^5^5
"KRN",.403,68,40,1,0)
1^^1,1^2
"KRN",.403,68,40,1,1)
Page 1
"KRN",.403,68,40,1,11)
N % S %=$$GET^DDSVAL(200,XUN,2) D:$P(%,U,3)="" HLP^DDSUTL("USER has no ACCESS CODE")
"KRN",.403,68,40,1,40,0)
^.4032IP^178^2
"KRN",.403,68,40,1,40,4,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,68,40,1,40,4,11)
D PUT^DDSVAL(DIE,.DA,9.2,"@"),PUT^DDSVAL(DIE,.DA,7,"@")
"KRN",.403,68,40,1,40,178,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,68,40,2,0)
2^^1,1^3^1
"KRN",.403,68,40,2,1)
Page 2
"KRN",.403,68,40,2,40,0)
^.4032IP^178^2
"KRN",.403,68,40,2,40,5,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,68,40,2,40,178,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,68,40,3,0)
3^^1,1^1^2
"KRN",.403,68,40,3,1)
Page 3
"KRN",.403,68,40,3,40,0)
^.4032IP^257^3
"KRN",.403,68,40,3,40,178,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,68,40,3,40,181,0)
XUEXISTING USER 5^2^2,1^e
"KRN",.403,68,40,3,40,257,0)
XU-PERSON CLASS 2^3^13,1^e
"KRN",.403,68,40,3,40,257,2)
4^!IEN^n
"KRN",.403,68,40,4,0)
1.1^^11,9^^^1^17,66
"KRN",.403,68,40,4,1)
Page 1.1
"KRN",.403,68,40,4,40,0)
^.4032IP^6^1
"KRN",.403,68,40,4,40,6,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,68,40,5,0)
1.2^^8,16^^^1^13,59
"KRN",.403,68,40,5,1)
Page 1.2
"KRN",.403,68,40,5,40,0)
^.4032IP^7^1
"KRN",.403,68,40,5,40,7,0)
XUEXISTING USER 4^1^2,2^e
"KRN",.403,69,-1)
0^2
"KRN",.403,69,0)
XUNEW USER^ ^@^^2960729.0925^^^200^0^0^1
"KRN",.403,69,40,0)
^.4031I^5^5
"KRN",.403,69,40,1,0)
1^^1,1^2^
"KRN",.403,69,40,1,1)
Page 1
"KRN",.403,69,40,1,40,0)
^.4032IP^178^2
"KRN",.403,69,40,1,40,4,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,69,40,1,40,178,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,69,40,2,0)
2^^1,1^3^1
"KRN",.403,69,40,2,1)
Page 2
"KRN",.403,69,40,2,40,0)
^.4032IP^178^2
"KRN",.403,69,40,2,40,5,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,69,40,2,40,178,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,69,40,3,0)
3^^1,1^1^2
"KRN",.403,69,40,3,1)
Page 3
"KRN",.403,69,40,3,40,0)
^.4032IP^272^4
"KRN",.403,69,40,3,40,178,0)
XUEXISTING USER 0^2^1,1^e
"KRN",.403,69,40,3,40,181,0)
XUEXISTING USER 5^3^2,1^e
"KRN",.403,69,40,3,40,257,0)
XU-PERSON CLASS 2^4^13,1^e
"KRN",.403,69,40,3,40,257,2)
4^!IEN^n
"KRN",.403,69,40,3,40,272,0)
XUNEW USER^1^1,1^e
"KRN",.403,69,40,4,0)
1.1^^11,9^^^1^17,66
"KRN",.403,69,40,4,1)
Page 1.1
"KRN",.403,69,40,4,40,0)
^.4032IP^6^1
"KRN",.403,69,40,4,40,6,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,69,40,5,0)
1.2^^8,16^^^1^13,59
"KRN",.403,69,40,5,1)
Page 1.2
"KRN",.403,69,40,5,40,0)
^.4032IP^7^1
"KRN",.403,69,40,5,40,7,0)
XUEXISTING USER 4^1^2,3^e
"KRN",.404,4,0)
XUEXISTING USER 1^200^^^
"KRN",.404,4,40,0)
^.4044I^17^16
"KRN",.404,4,40,1,0)
1^NAME^3
"KRN",.404,4,40,1,1)
.01
"KRN",.404,4,40,1,2)
3,12^30^3,6
"KRN",.404,4,40,2,0)
2^TITLE^3
"KRN",.404,4,40,2,1)
8
"KRN",.404,4,40,2,2)
4,12^30^4,5
"KRN",.404,4,40,3,0)
3^INITIAL^3
"KRN",.404,4,40,3,1)
1
"KRN",.404,4,40,3,2)
3,65^5^3,56
"KRN",.404,4,40,4,0)
4^NICK NAME^3
"KRN",.404,4,40,4,1)
13
"KRN",.404,4,40,4,2)
4,65^10^4,54
"KRN",.404,4,40,5,0)
5^PRIMARY MENU OPTION^3^
"KRN",.404,4,40,5,1)
201
"KRN",.404,4,40,5,2)
8,33^30^8,12
"KRN",.404,4,40,6,0)
6^Select SECONDARY MENU OPTIONS^3
"KRN",.404,4,40,6,1)
203
"KRN",.404,4,40,6,2)
9,33^30^9,2
"KRN",.404,4,40,6,7)
^1.1
"KRN",.404,4,40,7,0)
7^Want to edit ACCESS CODE (Y/N)^3
"KRN",.404,4,40,7,1)
2.1
"KRN",.404,4,40,7,2)
11,33^3^11,1
"KRN",.404,4,40,8,0)
8^Want to edit VERIFY CODE (Y/N)^3
"KRN",.404,4,40,8,1)
11.1
"KRN",.404,4,40,8,2)
12,33^3^12,1
"KRN",.404,4,40,9,0)
9^FILE MANAGER ACCESS CODE^3
"KRN",.404,4,40,9,1)
3
"KRN",.404,4,40,9,2)
11,65^15^11,39
"KRN",.404,4,40,11,0)
11^PREFERRED EDITOR^3
"KRN",.404,4,40,11,1)
31.3
"KRN",.404,4,40,11,2)
14,33^30^14,15
"KRN",.404,4,40,12,0)
12^Select DIVISION^3
"KRN",.404,4,40,12,1)
16
"KRN",.404,4,40,12,2)
15,33^30^15,16
"KRN",.404,4,40,12,7)
^1.2
"KRN",.404,4,40,13,0)
13^SERVICE/SECTION^3
"KRN",.404,4,40,13,1)
29
"KRN",.404,4,40,13,2)
16,33^30^16,16
"KRN",.404,4,40,14,0)
4.5^MAIL CODE^3
"KRN",.404,4,40,14,1)
28
"KRN",.404,4,40,14,2)
5,65^10^5,54
"KRN",.404,4,40,15,0)
15^1^1^
"KRN",.404,4,40,15,2)
^^1,74^1
"KRN",.404,4,40,16,0)
2.5^SSN^3
"KRN",.404,4,40,16,1)
9
"KRN",.404,4,40,16,2)
5,12^9^5,7
"KRN",.404,4,40,17,0)
2.6^DEGREE^3
"KRN",.404,4,40,17,1)
10.6
"KRN",.404,4,40,17,2)
6,12^10^6,4
"KRN",.404,5,0)
XUEXISTING USER 2^200^^^
"KRN",.404,5,40,0)
^.4044I^16^15
"KRN",.404,5,40,1,0)
1^TIMED READ (# OF SECONDS)^3
"KRN",.404,5,40,1,1)
200.1
"KRN",.404,5,40,1,2)
4,31^5^4,4
"KRN",.404,5,40,2,0)
2^MULTIPLE SIGN-ON^3
"KRN",.404,5,40,2,1)
200.04
"KRN",.404,5,40,2,2)
6,31^11^6,13
"KRN",.404,5,40,3,0)
3^AUTO MENU^3
"KRN",.404,5,40,3,1)
200.06
"KRN",.404,5,40,3,2)
6,60^20^6,49
"KRN",.404,5,40,4,0)
4^ASK DEVICE TYPE AT SIGN-ON^3
"KRN",.404,5,40,4,1)
200.05
"KRN",.404,5,40,4,2)
7,31^9^7,3
"KRN",.404,5,40,5,0)
5^TYPE-AHEAD^3
"KRN",.404,5,40,5,1)
200.09
"KRN",.404,5,40,5,2)
7,60^11^7,48
"KRN",.404,5,40,6,0)
6^PROHIBITED TIMES FOR SIGN-ON^3
"KRN",.404,5,40,6,1)
15
"KRN",.404,5,40,6,2)
8,31^9^8,1
"KRN",.404,5,40,7,0)
7^ALLOWED TO USE SPOOLER^3
"KRN",.404,5,40,7,1)
41
"KRN",.404,5,40,7,2)
10,31^3^10,7
"KRN",.404,5,40,8,0)
8^CAN MAKE INTO A MAIL MESSAGE^3
"KRN",.404,5,40,8,1)
41.2
"KRN",.404,5,40,8,2)
11,31^3^11,1
"KRN",.404,5,40,10,0)
10^FILE RANGE^3
"KRN",.404,5,40,10,1)
31.1
"KRN",.404,5,40,10,2)
13,31^30^13,19
"KRN",.404,5,40,11,0)
11^TERMINATION DATE^3
"KRN",.404,5,40,11,1)
9.2
"KRN",.404,5,40,11,2)
14,31^11^14,13
"KRN",.404,5,40,12,0)
12^ALWAYS SHOW SECONDARIES^3
"KRN",.404,5,40,12,1)
200.11
"KRN",.404,5,40,12,2)
15,31^3^15,6
"KRN",.404,5,40,13,0)
13^2^1^
"KRN",.404,5,40,13,2)
^^1,74^1
"KRN",.404,5,40,14,0)
14^PAC^3
"KRN",.404,5,40,14,1)
14
"KRN",.404,5,40,14,2)
10,63^8^10,58
"KRN",.404,5,40,15,0)
15^DISUSER^3
"KRN",.404,5,40,15,1)
7
"KRN",.404,5,40,15,2)
11,63^3^11,54
"KRN",.404,5,40,16,0)
6.1^AUTO SIGN-ON^3
"KRN",.404,5,40,16,1)
200.18
"KRN",.404,5,40,16,2)
8,60^3^8,46
"KRN",.404,6,0)
XUEXISTING USER 3^200.03
"KRN",.404,6,40,0)
^.4044I^3^3
"KRN",.404,6,40,1,0)
1^SECONDARY MENU OPTIONS^1^
"KRN",.404,6,40,1,2)
^^1,33^
"KRN",.404,6,40,2,0)
2^SECONDARY MENU OPTIONS^3
"KRN",.404,6,40,2,1)
.01
"KRN",.404,6,40,2,2)
3,25^30^3,1
"KRN",.404,6,40,3,0)
3^SYNONYM^3
"KRN",.404,6,40,3,1)
2
"KRN",.404,6,40,3,2)
4,25^4^4,16
"KRN",.404,7,0)
XUEXISTING USER 4^200.02
"KRN",.404,7,40,0)
^.4044I^2^2
"KRN",.404,7,40,1,0)
1^DIVISION^1^
"KRN",.404,7,40,1,2)
^^1,33^
"KRN",.404,7,40,2,0)
2^DIVISION^3
"KRN",.404,7,40,2,1)
.01
"KRN",.404,7,40,2,2)
3,11^30^3,1
"KRN",.404,178,0)
XUEXISTING USER 0^200^
"KRN",.404,178,40,0)
^.4044I^5^5
"KRN",.404,178,40,1,0)
1^NAME^3
"KRN",.404,178,40,1,1)
.01
"KRN",.404,178,40,1,2)
2,7^30^2,1
"KRN",.404,178,40,1,4)
^^^1
"KRN",.404,178,40,2,0)
3^Edit an Existing User^1^
"KRN",.404,178,40,2,2)
^^1,30^1
"KRN",.404,178,40,3,0)
2^Page^1^
"KRN",.404,178,40,3,2)
^^2,69^1
"KRN",.404,178,40,4,0)
4^_______________________________________________________________________________^1^
"KRN",.404,178,40,4,2)
^^3,1^1
"KRN",.404,178,40,5,0)
5^of 3^1^
"KRN",.404,178,40,5,2)
^^2,76^1
"KRN",.404,181,0)
XUEXISTING USER 5^200
"KRN",.404,181,40,0)
^.4044I^10^10
"KRN",.404,181,40,1,0)
1^3^1^
"KRN",.404,181,40,1,2)
^^1,74^
"KRN",.404,181,40,2,0)
2^PROHIBITED TIMES FOR SIGN-ON^3
"KRN",.404,181,40,2,1)
15
"KRN",.404,181,40,2,2)
3,31^21^3,1
"KRN",.404,181,40,3,0)
3^PHONE^3
"KRN",.404,181,40,3,1)
.131
"KRN",.404,181,40,3,2)
5,19^20^5,12
"KRN",.404,181,40,4,0)
4^OFFICE PHONE^3
"KRN",.404,181,40,4,1)
.132
"KRN",.404,181,40,4,2)
5,56^20^5,42
"KRN",.404,181,40,5,0)
5^VOICE PAGER^3
"KRN",.404,181,40,5,1)
.137
"KRN",.404,181,40,5,2)
7,19^20^7,6
"KRN",.404,181,40,6,0)
6^FAX NUMBER^3
"KRN",.404,181,40,6,1)
.136
"KRN",.404,181,40,6,2)
6,56^20^6,44
"KRN",.404,181,40,7,0)
7^COMMERCIAL PHONE^3
"KRN",.404,181,40,7,1)
.135
"KRN",.404,181,40,7,2)
6,19^20^6,1
"KRN",.404,181,40,8,0)
8^DIGITAL PAGER^3
"KRN",.404,181,40,8,1)
.138
"KRN",.404,181,40,8,2)
7,56^20^7,41
"KRN",.404,181,40,9,0)
9^LANGUAGE^3
"KRN",.404,181,40,9,1)
200.07
"KRN",.404,181,40,9,2)
9,19^10^9,9
"KRN",.404,181,40,10,0)
10^Person Class                                         Effective     Expired^1
"KRN",.404,181,40,10,2)
^^11,2
"KRN",.404,184,0)
XUSITEPARM 0^8989.3^
"KRN",.404,184,40,0)
^.4044I^2^2
"KRN",.404,184,40,1,0)
1^DOMAIN^3
"KRN",.404,184,40,1,1)
.01
"KRN",.404,184,40,1,2)
2,11^40^2,3
"KRN",.404,184,40,2,0)
2^Kernel Site Parameter edit^1
"KRN",.404,184,40,2,2)
^^1,24^1
"KRN",.404,186,0)
XUSITEPARM 1^8989.3
"KRN",.404,186,40,0)
^.4044I^16^16
"KRN",.404,186,40,1,0)
1^DEFAULT # OF ATTEMPTS^3
"KRN",.404,186,40,1,1)
202
"KRN",.404,186,40,1,2)
3,31^3^3,8
"KRN",.404,186,40,1,3)
5
"KRN",.404,186,40,2,0)
2^DEFAULT LOCK-OUT TIME^3
"KRN",.404,186,40,2,1)
203
"KRN",.404,186,40,2,2)
4,31^4^4,8
"KRN",.404,186,40,2,3)
30
"KRN",.404,186,40,3,0)
3^DEFAULT MULTIPLE SIGN-ON^3
"KRN",.404,186,40,3,1)
204
"KRN",.404,186,40,3,2)
5,31^3^5,5
"KRN",.404,186,40,3,3)
YES
"KRN",.404,186,40,4,0)
4^ASK DEVICE TYPE AT SIGN-ON^3
"KRN",.404,186,40,4,1)
205
"KRN",.404,186,40,4,2)
11,69^3^11,41
"KRN",.404,186,40,4,3)
ASK
"KRN",.404,186,40,5,0)
5^DEFAULT AUTO-MENU^3
"KRN",.404,186,40,5,1)
206
"KRN",.404,186,40,5,2)
6,31^3^6,12
"KRN",.404,186,40,5,3)
NO
"KRN",.404,186,40,6,0)
6^DEFAULT TYPE-AHEAD^3
"KRN",.404,186,40,6,1)
209
"KRN",.404,186,40,6,2)
8,31^3^8,11
"KRN",.404,186,40,6,3)
YES
"KRN",.404,186,40,7,0)
7^DEFAULT TIMED-READ (SECONDS)^3
"KRN",.404,186,40,7,1)
210
"KRN",.404,186,40,7,2)
9,31^5^9,1
"KRN",.404,186,40,7,3)
300
"KRN",.404,186,40,8,0)
8^BYPASS DEVICE LOCK-OUT^3
"KRN",.404,186,40,8,1)
211
"KRN",.404,186,40,8,2)
11,30^3^11,6
"KRN",.404,186,40,9,0)
9^LIFETIME OF VERIFY CODE^3
"KRN",.404,186,40,9,1)
214
"KRN",.404,186,40,9,2)
12,30^3^12,5
"KRN",.404,186,40,9,3)
90
"KRN",.404,186,40,10,0)
10^INTERACTIVE USER'S PRIORITY^3
"KRN",.404,186,40,10,1)
216
"KRN",.404,186,40,10,2)
13,30^2^13,1
"KRN",.404,186,40,11,0)
5.5^DEFAULT LANGUAGE^3
"KRN",.404,186,40,11,1)
207
"KRN",.404,186,40,11,2)
7,31^10^7,13
"KRN",.404,186,40,12,0)
11^DEFAULT INSTITUTION^3
"KRN",.404,186,40,12,1)
217
"KRN",.404,186,40,12,2)
14,30^30^14,9
"KRN",.404,186,40,13,0)
12^AUTO-GENERATE ACCESS CODES^3
"KRN",.404,186,40,13,1)
11
"KRN",.404,186,40,13,2)
15,30^3^15,2
"KRN",.404,186,40,14,0)
13^AGENCY CODE^3
"KRN",.404,186,40,14,1)
9
"KRN",.404,186,40,14,2)
3,65^9^3,52
"KRN",.404,186,40,14,3)
VA
"KRN",.404,186,40,15,0)
14^LOG RESOURCE USAGE?^3
"KRN",.404,186,40,15,1)
300
"KRN",.404,186,40,15,2)
16,30^3^16,9
"KRN",.404,186,40,16,0)
3.2^DEFAULT AUTO SIGN-ON^3
"KRN",.404,186,40,16,1)
218
"KRN",.404,186,40,16,2)
5,65^8^5,43
"KRN",.404,187,0)
XUSITEPARM 3^8989.3
"KRN",.404,187,40,0)
^.4044I^6^6
"KRN",.404,187,40,1,0)
1^MAX SPOOL LINES PER USER^3
"KRN",.404,187,40,1,1)
31.1
"KRN",.404,187,40,1,2)
1,31^7^1,5
"KRN",.404,187,40,2,0)
2^MAX SPOOL DOCUMENTS PER USER^3
"KRN",.404,187,40,2,1)
31.2
"KRN",.404,187,40,2,2)
2,31^3^2,1
"KRN",.404,187,40,3,0)
3^MAX SPOOL DOCUMENT LIFE-SPAN^3
"KRN",.404,187,40,3,1)
31.3
"KRN",.404,187,40,3,2)
3,31^3^3,1
"KRN",.404,187,40,4,0)
4^LOG RESOURCE USAGE?^3
"KRN",.404,187,40,4,1)
300
"KRN",.404,187,40,4,2)
6,22^3^6,1
"KRN",.404,187,40,5,0)
5^NEW PERSON IDENTIFIERS^3
"KRN",.404,187,40,5,1)
21
"KRN",.404,187,40,5,2)
12,4^65^11,1
"KRN",.404,187,40,6,0)
6^DEFAULT DIRECTORY FOR HFS^3
"KRN",.404,187,40,6,1)
320
"KRN",.404,187,40,6,2)
9,4^50^8,1
"KRN",.404,188,0)
XUSITEPARM 2^8989.3
"KRN",.404,188,40,0)
^.4044I^3^3
"KRN",.404,188,40,1,0)
1^Vol Set      Max Sign-ons       Log RT?^1
"KRN",.404,188,40,1,2)
^^1,12^1
"KRN",.404,188,40,2,0)
2^ROUTINE MONITORING^3
"KRN",.404,188,40,2,1)
9.8
"KRN",.404,188,40,2,2)
8,22^8^8,2
"KRN",.404,188,40,3,0)
3^Routine Namespace's^1
"KRN",.404,188,40,3,2)
^^9,12^1
"KRN",.404,189,0)
XUSITEPARM 2.1^8989.304
"KRN",.404,189,40,0)
^.4044I^3^3
"KRN",.404,189,40,1,0)
1^^3
"KRN",.404,189,40,1,1)
.01
"KRN",.404,189,40,1,2)
1,1^9
"KRN",.404,189,40,2,0)
2^^3
"KRN",.404,189,40,2,1)
2
"KRN",.404,189,40,2,2)
1,14^4
"KRN",.404,189,40,3,0)
3^^3
"KRN",.404,189,40,3,1)
6
"KRN",.404,189,40,3,2)
1,33^3
"KRN",.404,190,0)
XUSITEPARM 2.2^8989.309
"KRN",.404,190,40,0)
^.4044I^1^1
"KRN",.404,190,40,1,0)
1^^3
"KRN",.404,190,40,1,1)
.01
"KRN",.404,190,40,1,2)
2,5^8
"KRN",.404,191,0)
XUSITEPARM 4^8989.3
"KRN",.404,191,40,0)
^.4044I^8^8
"KRN",.404,191,40,1,0)
1^OPTION AUDIT^3
"KRN",.404,191,40,1,1)
19
"KRN",.404,191,40,1,2)
1,15^24^1,1
"KRN",.404,191,40,2,0)
2^INITIATE AUDIT^3
"KRN",.404,191,40,2,1)
19.4
"KRN",.404,191,40,2,2)
2,20^17^2,4
"KRN",.404,191,40,3,0)
3^TERMINATE AUDIT^3
"KRN",.404,191,40,3,1)
19.5
"KRN",.404,191,40,3,2)
2,60^17^2,43
"KRN",.404,191,40,4,0)
4^Option to audit^1
"KRN",.404,191,40,4,2)
^^4,4^1
"KRN",.404,191,40,5,0)
5^Namespace to audit^1
"KRN",.404,191,40,5,2)
^^4,43^1
"KRN",.404,191,40,6,0)
6^User to audit^1
"KRN",.404,191,40,6,2)
^^9,4^1
"KRN",.404,191,40,7,0)
7^Device to audit^1
"KRN",.404,191,40,7,2)
^^9,43
"KRN",.404,191,40,8,0)
8^FAILED ACCESS ATTEMPTS^3
"KRN",.404,191,40,8,1)
212.5
"KRN",.404,191,40,8,2)
1,67^8^1,43
"KRN",.404,192,0)
XUSITEPARM 4.1^8989.36
"KRN",.404,192,40,0)
^.4044I^1^1
"KRN",.404,192,40,1,0)
1^^3
"KRN",.404,192,40,1,1)
.01
"KRN",.404,192,40,1,2)
1,1^30
"KRN",.404,193,0)
XUSITEPARM 4.2^8989.35
"KRN",.404,193,40,0)
^.4044I^1^1
"KRN",.404,193,40,1,0)
1^^3
"KRN",.404,193,40,1,1)
.01
"KRN",.404,193,40,1,2)
1,1^5
"KRN",.404,194,0)
XUSITEPARM 4.4^8989.33
"KRN",.404,194,40,0)
^.4044I^1^1
"KRN",.404,194,40,1,0)
1^^3
"KRN",.404,194,40,1,1)
.01
"KRN",.404,194,40,1,2)
1,1^20
"KRN",.404,195,0)
XUSITEPARM 4.3^8989.34
"KRN",.404,195,40,0)
^.4044I^1^1
"KRN",.404,195,40,1,0)
1^^3
"KRN",.404,195,40,1,1)
.01
"KRN",.404,195,40,1,2)
1,1^30
"KRN",.404,257,0)
XU-PERSON CLASS 2^200.05
"KRN",.404,257,40,0)
^.4044I^3^3
"KRN",.404,257,40,1,0)
1^^3
"KRN",.404,257,40,1,1)
.01
"KRN",.404,257,40,1,2)
1,2^40
"KRN",.404,257,40,1,11)
N XU,% I X]"" S %=^USC(8932.1,X,0),XU(1)=$P(%,U,1),XU(2)="  "_$P(%,U,2),XU(3)="    "_$P(%,U,3) D HLP^DDSUTL(.XU)
"KRN",.404,257,40,1,14)
S:$L(DDSOLD)&(X'=DDSOLD) DDSERROR=1
"KRN",.404,257,40,2,0)
2^^3
"KRN",.404,257,40,2,1)
2
"KRN",.404,257,40,2,2)
1,52^12
"KRN",.404,257,40,2,4)
^^^0
"KRN",.404,257,40,2,12)
D DDS2^XUA4A72
"KRN",.404,257,40,3,0)
3^^3
"KRN",.404,257,40,3,1)
3
"KRN",.404,257,40,3,2)
1,67^12
"KRN",.404,272,0)
XUNEW USER^200
"KRN",19,1360,-1)
0^1
"KRN",19,1360,0)
XUS SIGNON^Kernel sign-on context^^B^^^^^^^^
"KRN",19,1360,"RPC",0)
^19.05P^5^5
"KRN",19,1360,"RPC",1,0)
XUS SIGNON SETUP
"KRN",19,1360,"RPC",2,0)
XUS AV CODE
"KRN",19,1360,"RPC",3,0)
XUS INTRO MSG
"KRN",19,1360,"RPC",4,0)
XUS CVC
"KRN",19,1360,"RPC",5,0)
XUS AV HELP
"KRN",19,1360,"U")
KERNEL SIGN-ON CONTEXT
"KRN",8994,80,-1)
0^6
"KRN",8994,80,0)
XUS SIGNON SETUP^SETUP^XUSRB^2^R
"KRN",8994,80,1,0)
^^1^1^2970822^^^^
"KRN",8994,80,1,1,0)
Establishes environment necessary for DHCP sign-on
"KRN",8994,90,-1)
0^1
"KRN",8994,90,0)
XUS AV CODE^VALIDAV^XUSRB^2^R
"KRN",8994,90,1,0)
^^10^10^2970904^
"KRN",8994,90,1,1,0)
This API checks if a ACCESS/VERIFY code pair is valid.
"KRN",8994,90,1,2,0)
It returns an array of values
"KRN",8994,90,1,3,0)
 
"KRN",8994,90,1,4,0)
R(0)=DUZ if sign-on was OK, zero if not OK.
"KRN",8994,90,1,5,0)
R(1)=(0=OK, 1,2...=Can't sign-on for some reason).
"KRN",8994,90,1,6,0)
R(2)=verify needs changing.
"KRN",8994,90,1,7,0)
R(3)=Message.
"KRN",8994,90,1,8,0)
R(4)=0
"KRN",8994,90,1,9,0)
R(5)=count of the number of lines of text, zero if none.
"KRN",8994,90,1,10,0)
R(5+n)=message text.
"KRN",8994,90,2,0)
^8994.02A^1^1
"KRN",8994,90,2,1,0)
AVCODE^1^60^1
"KRN",8994,90,2,1,1,0)
^^1^1^2950816^^
"KRN",8994,90,2,1,1,1,0)
accessCode_";"_verifyCode in unencrypted form.
"KRN",8994,90,2,"B","AVCODE",1)

"KRN",8994,91,-1)
0^4
"KRN",8994,91,0)
XUS INTRO MSG^INTRO^XUSRB^3^R^^^1
"KRN",8994,91,1,0)
^^1^1^2970822^
"KRN",8994,91,1,1,0)
This RPC returns the INTRO message from the KERNEL SYSTEM PARAMETERS file.
"KRN",8994,92,-1)
0^5
"KRN",8994,92,0)
XUS KEY CHECK^OWNSKEY^XUSRB^2^P
"KRN",8994,92,1,0)
^^5^5^2970822^
"KRN",8994,92,1,1,0)
This API will check if the user (DUZ) holds a security key or an array of
"KRN",8994,92,1,2,0)
keys.
"KRN",8994,92,1,3,0)
If a single security KEY is sent the result is returned in R(0).
"KRN",8994,92,1,4,0)
If an array is sent down then the return array has the same order as the
"KRN",8994,92,1,5,0)
calling array.
"KRN",8994,92,2,0)
^8994.02A^1^1
"KRN",8994,92,2,1,0)
KEY^2^30^1
"KRN",8994,92,2,1,1,0)
^^4^4^2960412^^
"KRN",8994,92,2,1,1,1,0)
If key is a single value it holds the one key to check.
"KRN",8994,92,2,1,1,2,0)
If key is an array then the result is an array that matches the key
"KRN",8994,92,2,1,1,3,0)
list with values that match the status of the key check for each key.
"KRN",8994,92,2,1,1,4,0)
The return is a 1 if the user has the key and 0 if not.
"KRN",8994,92,2,"B","KEY",1)

"KRN",8994,102,-1)
0^3
"KRN",8994,102,0)
XUS CVC^CVC^XUSRB^2^R
"KRN",8994,102,1,0)
^^2^2^2970822^
"KRN",8994,102,1,1,0)
This RPC is used as part of Kernel to allow the user to change there
"KRN",8994,102,1,2,0)
verify code.
"KRN",8994,103,-1)
0^2
"KRN",8994,103,0)
XUS AV HELP^AVHELP^XUSRB^2^R
"KRN",8994,103,1,0)
^^1^1^2970904^^^
"KRN",8994,103,1,1,0)
Returns instructions on entering new access/verify codes.
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",283,-1)
1^1
"PKG",283,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",283,22,0)
^9.49I^1^1
"PKG",283,22,1,0)
8.0^2950729^2950729^6
"PKG",283,22,1,"PAH",1,0)
59^2970918
"PKG",283,22,1,"PAH",1,1,0)
^^90^90^2971014
"PKG",283,22,1,"PAH",1,1,1,0)
This is the Auto Sign-on patch (aka Single Sign-on)
"PKG",283,22,1,"PAH",1,1,2,0)
This patch has several Kernel routines as well as new fields in the Kernel
"PKG",283,22,1,"PAH",1,1,3,0)
System parameteres file and the New Person file and the forms to edit
"PKG",283,22,1,"PAH",1,1,4,0)
these files.  PLEASE be sure to edit the AUTO SIGN-ON field in the Kernel
"PKG",283,22,1,"PAH",1,1,5,0)
System parameters file.  
"PKG",283,22,1,"PAH",1,1,6,0)

"PKG",283,22,1,"PAH",1,1,7,0)
*** This patch will increase the use of the LOCK table  ***
"PKG",283,22,1,"PAH",1,1,8,0)
*** NOTE THAT AUTO SIGN-ON DOES NOT WORK ON MSM SYSTEMS ***
"PKG",283,22,1,"PAH",1,1,9,0)

"PKG",283,22,1,"PAH",1,1,10,0)
All of this work is in support of RPC Broker, CPRS and GUI clients.
"PKG",283,22,1,"PAH",1,1,11,0)

"PKG",283,22,1,"PAH",1,1,12,0)
There were some other fixes that had been applied to the routines and 
"PKG",283,22,1,"PAH",1,1,13,0)
files needed by this patch so they are also fixed.
"PKG",283,22,1,"PAH",1,1,14,0)
                     To the "Enter/Edit Kernel Site Parameters" form;
"PKG",283,22,1,"PAH",1,1,15,0)
                     Added the AUTO SIGN-ON field to page 1,
"PKG",283,22,1,"PAH",1,1,16,0)
                     Added the DEFAULT DIRECTORY FOR HFS field to page 3.
"PKG",283,22,1,"PAH",1,1,17,0)

"PKG",283,22,1,"PAH",1,1,18,0)
                     File 3.081 Field 1 changed from 15 to 30 characters.
"PKG",283,22,1,"PAH",1,1,19,0)
                     
"PKG",283,22,1,"PAH",1,1,20,0)
WBP-0396-20726  XQ1  The setting of DIPCRIA, DIASKHD, and DISUPNO was not
"PKG",283,22,1,"PAH",1,1,21,0)
                     correct and has been fixed.
"PKG",283,22,1,"PAH",1,1,22,0)
                     
"PKG",283,22,1,"PAH",1,1,23,0)
DAY-0697-41746  XQ1  Startup Options Getting Deleted in file 19.2
"PKG",283,22,1,"PAH",1,1,24,0)

"PKG",283,22,1,"PAH",1,1,25,0)
E3R #10159,          File 200 Field 20.2 changed from 30 to 40 characters. 
"PKG",283,22,1,"PAH",1,1,26,0)

"PKG",283,22,1,"PAH",1,1,27,0)
                 Checksum
"PKG",283,22,1,"PAH",1,1,28,0)
Routine         Old       New      2nd Line
"PKG",283,22,1,"PAH",1,1,29,0)
XQ1                    11726256    **1,15,59**
"PKG",283,22,1,"PAH",1,1,30,0)
XQ82                    3479466    **59**
"PKG",283,22,1,"PAH",1,1,31,0)
XQT1                   10251041    **59**
"PKG",283,22,1,"PAH",1,1,32,0)
XUINENV                  713144    **59**
"PKG",283,22,1,"PAH",1,1,33,0)
XUS                     8138431    **16,26,49,59**
"PKG",283,22,1,"PAH",1,1,34,0)
XUS1          8848266  10420726    **9,59**
"PKG",283,22,1,"PAH",1,1,35,0)
XUS1B                   1917370    **59**
"PKG",283,22,1,"PAH",1,1,36,0)
XUS2                   14055468    **59**
"PKG",283,22,1,"PAH",1,1,37,0)
XUSCLEAN      6326709   6583467    **13,59**
"PKG",283,22,1,"PAH",1,1,38,0)
XUSRB         2961367   4666750    **11,16,28,32,59**
"PKG",283,22,1,"PAH",1,1,39,0)
XUVERIFY      3907067   3888236    **2,26,59**
"PKG",283,22,1,"PAH",1,1,40,0)
ZIS4MSM       6649854   7202298    **23,36,49,59**
"PKG",283,22,1,"PAH",1,1,41,0)
ZIS4ONT                 8238234    **34,59**
"PKG",283,22,1,"PAH",1,1,42,0)
ZIS4VXD       8342152   8151150    **23,36,49,59**
"PKG",283,22,1,"PAH",1,1,43,0)
ZISTCP        2230177   2687385    **36,34,59**
"PKG",283,22,1,"PAH",1,1,44,0)

"PKG",283,22,1,"PAH",1,1,45,0)
========================================================================= 
"PKG",283,22,1,"PAH",1,1,46,0)
Installation:
"PKG",283,22,1,"PAH",1,1,47,0)

"PKG",283,22,1,"PAH",1,1,48,0)
  1.  DSM sites - Some of these routines are usually mapped,
"PKG",283,22,1,"PAH",1,1,49,0)
      so you will need to disable mapping for the effected routines.
"PKG",283,22,1,"PAH",1,1,50,0)
      
"PKG",283,22,1,"PAH",1,1,51,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",283,22,1,"PAH",1,1,52,0)
      option will load the KIDS package onto your system.
"PKG",283,22,1,"PAH",1,1,53,0)
      
"PKG",283,22,1,"PAH",1,1,54,0)
  3.  The patch has now been loaded into a Transport global on your
"PKG",283,22,1,"PAH",1,1,55,0)
      system. You now need to use KIDS to install the Transport global.
"PKG",283,22,1,"PAH",1,1,56,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"PKG",283,22,1,"PAH",1,1,57,0)
      options:
"PKG",283,22,1,"PAH",1,1,58,0)
      
"PKG",283,22,1,"PAH",1,1,59,0)
         Verify Checksum's in Transport Global
"PKG",283,22,1,"PAH",1,1,60,0)
         Print Transport Global
"PKG",283,22,1,"PAH",1,1,61,0)
         Compare Transport Global to Current System
"PKG",283,22,1,"PAH",1,1,62,0)
         Backup a Transport Global
"PKG",283,22,1,"PAH",1,1,63,0)
         
"PKG",283,22,1,"PAH",1,1,64,0)
  4.  Inhibit users from login into system. 
"PKG",283,22,1,"PAH",1,1,65,0)
      Also place TASKMAN in a wait state.
"PKG",283,22,1,"PAH",1,1,66,0)
            
"PKG",283,22,1,"PAH",1,1,67,0)
  5.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",283,22,1,"PAH",1,1,68,0)
      option:
"PKG",283,22,1,"PAH",1,1,69,0)
         Install Package(s)  'XU*8.0*59'
"PKG",283,22,1,"PAH",1,1,70,0)
                              =========
"PKG",283,22,1,"PAH",1,1,71,0)
               
"PKG",283,22,1,"PAH",1,1,72,0)
 6.  DSM/MSM Sites - Move the following two routines to the MGR account.
"PKG",283,22,1,"PAH",1,1,73,0)
      ZIS4MSM
"PKG",283,22,1,"PAH",1,1,74,0)
      ZIS4ONT
"PKG",283,22,1,"PAH",1,1,75,0)
      ZIS4VXD
"PKG",283,22,1,"PAH",1,1,76,0)
      ZISTCP
"PKG",283,22,1,"PAH",1,1,77,0)
      And in the manager account, (OpenM sites remain in VAH)
"PKG",283,22,1,"PAH",1,1,78,0)
       
"PKG",283,22,1,"PAH",1,1,79,0)
      All sites:
"PKG",283,22,1,"PAH",1,1,80,0)
      DO RELOAD^ZTMGRSET
"PKG",283,22,1,"PAH",1,1,81,0)
      Select the System
"PKG",283,22,1,"PAH",1,1,82,0)
      Patch number to load: 59
"PKG",283,22,1,"PAH",1,1,83,0)
                            ==
"PKG",283,22,1,"PAH",1,1,84,0)
       
"PKG",283,22,1,"PAH",1,1,85,0)
  8.  DSM Sites, after patch has installed, rebuild your map set.
"PKG",283,22,1,"PAH",1,1,86,0)
  9.  Enable user's login.
"PKG",283,22,1,"PAH",1,1,87,0)
      Remove TASKMAN from the wait state.
"PKG",283,22,1,"PAH",1,1,88,0)

"PKG",283,22,1,"PAH",1,1,89,0)
=========================================================================
"PKG",283,22,1,"PAH",1,1,90,0)

"PRE")
XUINENV
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","XQ1")
0^9^B29287427
"RTN","XQ1",1,0)
XQ1 ; SEA/MJM - DRIVER FOR MENUMAN (PART 2) ;08/01/97  07:35
"RTN","XQ1",2,0)
 ;;8.0;KERNEL;**1,15,59**;Jul 10, 1995
"RTN","XQ1",3,0)
 S DIC=19,DIC(0)="AEQM" D ^DIC Q:Y<0  S (XQDIC,XQY)=+Y K DIC,XQUR,Y,^VA(200,DUZ,202.1) ;G ^XQ
"RTN","XQ1",4,0)
 D INIT^XQ12
"RTN","XQ1",5,0)
 G M^XQ
"RTN","XQ1",6,0)
 ;
"RTN","XQ1",7,0)
KILL K D,D0,D1,DA,DIC,DIE,DIR,DIS,DR,XQI,XQV,XQW,XQZ
"RTN","XQ1",8,0)
 D CLEAN^DILF
"RTN","XQ1",9,0)
 ;
"RTN","XQ1",10,0)
OUT ;Exit point for all option types
"RTN","XQ1",11,0)
 I $D(XQXFLG("ZEBRA")) L ^XWB("SESSION",XQXFLG("ZEBRA")) ;Clear by setting new lock
"RTN","XQ1",12,0)
 E  L  ;Clear the lock table
"RTN","XQ1",13,0)
 S U="^" I $D(ZTQUEUED) S XQF=$S('$D(^DIC(19,XQY,15)):0,'$L(^(15)):0,1:1) X:XQF ^(15) Q  ;Quit here if it's a Taskman job
"RTN","XQ1",14,0)
 I '$D(DT)!('$D(DTIME))!('$D(DUZ))!('$D(DUZ(0)))!('$D(DUZ("AG")))!('$D(DUZ("AUTO"))) D DVARS^XQ12
"RTN","XQ1",15,0)
 I $D(DUZ("AUTO")),DUZ("AUTO"),$D(XQY),$D(^DIC(19,+XQY,0))#2,$P(^(0),"^",11)["y" W !!,*7,"Press RETURN to continue..." R %:DTIME
"RTN","XQ1",16,0)
 I $D(^XUTL("XQ",$J,"RBX")) G RBX^XQ73
"RTN","XQ1",17,0)
 I $D(^XUTL("XQ",$J,"T")) S XQY=+^(^("T")),XQT="" S:$D(^DIC(19,+XQY,0)) XQT=$P(^(0),U,4) I '$D(XQUIT),("LOQX"'[XQT),$D(^DIC(19,XQY,15)),$L(^(15)) X ^(15) ;W "  ==> OUT^XQ1"
"RTN","XQ1",18,0)
 Q:'$D(^XUTL("XQ",$J,"T"))
"RTN","XQ1",19,0)
 I $D(^XUTL("XQ",$J,"T")) S XQTT=$S($D(XQUIT):^XUTL("XQ",$J,"T"),1:^XUTL("XQ",$J,"T")-1) K XQUIT
"RTN","XQ1",20,0)
 I XQTT'<1 S ^XUTL("XQ",$J,"T")=XQTT,XQY=^(XQTT),XQY0=$P(XQY,U,2,999),XQPSM=$P(XQY,U,1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,99),XQABOLD=1
"RTN","XQ1",21,0)
 I XQTT=0 S XQY=-1
"RTN","XQ1",22,0)
 I $P(XQY0,U,4)="M" S XQAA=$P(XQY0,U,2) I $P(XQY0,U,17),$D(^DIC(19,+XQY,26)),$L(^(26)) X ^(26) ;W "  ==> OUT^XQ1"
"RTN","XQ1",23,0)
 K X,XQF,XQJS,XQOK,XQTT,XQZ,Y,Z
"RTN","XQ1",24,0)
 G M1^XQ
"RTN","XQ1",25,0)
 ;
"RTN","XQ1",26,0)
A ;ACTION type option entry point
"RTN","XQ1",27,0)
 X:$D(^DIC(19,+XQY,20)) ^(20) ;W "  ==> A^XQ1"
"RTN","XQ1",28,0)
 I $D(XQUIT) K XQUIT G OUT
"RTN","XQ1",29,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26) ;W "  ==> A^XQ1"
"RTN","XQ1",30,0)
 G OUT
"RTN","XQ1",31,0)
 ;
"RTN","XQ1",32,0)
C ;ScreenMan type options
"RTN","XQ1",33,0)
 D DIC G:DA=-1 KILL S XQZ="DR,DDSFILE,DDSFILE(1)",XQW=39 D SET
"RTN","XQ1",34,0)
 S DDSPAGE=$P($G(^DIC(19,+XQY,43)),U) K:DDSPAGE="" DDSPAGE
"RTN","XQ1",35,0)
 S DDSPARM=$P($G(^DIC(19,+XQY,43)),U,2) K:DDSPARM="" DDSPARM
"RTN","XQ1",36,0)
 I DDSFILE["(",DDSFILE'[U S DDSFILE=U_DDSFILE
"RTN","XQ1",37,0)
 I $D(DDSFILE(1)),DDSFILE(1)["(",DDSFILE(1)'[U S DDSFILE(1)=U_DDSFILE(1)
"RTN","XQ1",38,0)
 D ^DDS K DDSFILE G C
"RTN","XQ1",39,0)
 ;
"RTN","XQ1",40,0)
P ;PRINT type option
"RTN","XQ1",41,0)
 S XQZ="DIC,PG,L,FLDS,BY,FR,TO,DHD,DCOPIES,DIS(0),IOP,DHIT,DIOBEG,DIOEND",XQW=59 D SET
"RTN","XQ1",42,0)
 I $D(DIS(0))#2 F XQI=1:1:3 Q:'$D(^DIC(19,+XQY,69+(XQI/10)))  Q:^(69+(XQI/10))=""  S DIS(XQI)=^(69+(XQI/10))
"RTN","XQ1",43,0)
 S:$D(XQIOP) IOP=XQIOP
"RTN","XQ1",44,0)
 S XQI=$G(^DIC(19,XQY,79)) S:XQI>0 DIASKHD="" S:$P(XQI,U,2) DISUPNO=1 S:$P(XQI,U,3) DIPCRIT=1
"RTN","XQ1",45,0)
 D D1,EN1^DIP K IOP,DIOBEG,DIS,DP G OUT
"RTN","XQ1",46,0)
 ;
"RTN","XQ1",47,0)
I ;INQUIRE type option
"RTN","XQ1",48,0)
I1 D DIC G KILL:DA=-1 S DI=DIC,XQZ="DIC,DR,DIQ(0)",XQW=79 D SET,D1 S:$D(DIC)[0 DIC=DI
"RTN","XQ1",49,0)
 I $D(^DIC(19,+XQY,63)),$L(^(63)) S FLDS=^(63)
"RTN","XQ1",50,0)
 E  S FLDS="[CAPTIONED]"
"RTN","XQ1",51,0)
 I $G(^DIC(19,+XQY,83))["Y" S IOP="HOME"
"RTN","XQ1",52,0)
I2 ;
"RTN","XQ1",53,0)
 W ! S XQZ="DHD",XQW=66 D SET K ^UTILITY($J),^(U,$J) S ^($J,1,DA)="",@("L=+$P("_DI_"0),U,2)"),DPP(1)=L_"^^^@",L=0,C=",",Q="""",DPP=1,DPP(1,"IX")="^UTILITY(U,$J,"_DI_"^2" D N^DIP1 S Y=XQY G I1
"RTN","XQ1",54,0)
 ;
"RTN","XQ1",55,0)
E ;EDIT type option entry point
"RTN","XQ1",56,0)
E1 D DIC G KILL:DA=-1 K DIE,DIC S XQZ="DIE,DR",XQW=49 D SET S XQZ="DIE(""W"")",XQW=53 D SET
"RTN","XQ1",57,0)
 I $D(^DIC(19,XQY,53)),$L(^(53)) S %=^(53),DIE("NO^")=$S(%="N":"",1:%)
"RTN","XQ1",58,0)
 S:DIE["(" DIE=U_DIE D ^DIE S Y=XQY G E1
"RTN","XQ1",59,0)
 ;
"RTN","XQ1",60,0)
DIC ;Get FileMan parameters from Option File and do look up
"RTN","XQ1",61,0)
 ;S XQSV=XQY
"RTN","XQ1",62,0)
 W ! K DIC S XQZ="DIC,DIC(0),DIC(""A""),DIC(""B""),DIC(""S""),DIC(""W""),D",XQW=29 D SET,D1
"RTN","XQ1",63,0)
 ;D:'$D(D) ^DIC
"RTN","XQ1",64,0)
 I '$D(D) D ^DIC
"RTN","XQ1",65,0)
 I $D(D) S:D="" D="B" D IX^DIC
"RTN","XQ1",66,0)
 S DA=+Y,Y=XQY
"RTN","XQ1",67,0)
 Q
"RTN","XQ1",68,0)
 ;
"RTN","XQ1",69,0)
D1 S:DIC["(" DIC=U_DIC Q
"RTN","XQ1",70,0)
 ;
"RTN","XQ1",71,0)
SET F XQI=1:1 S XQV=$P(XQZ,",",XQI) Q:XQV=""  K @XQV I $D(^DIC(19,+XQY,XQW+XQI)),^(XQW+XQI)]"" S @XQV=^(XQW+XQI)
"RTN","XQ1",72,0)
 I $D(DIC("A")),DIC("A")]"" S DIC("A")=DIC("A")_" "
"RTN","XQ1",73,0)
 K XQI,J
"RTN","XQ1",74,0)
 Q
"RTN","XQ1",75,0)
 ;
"RTN","XQ1",76,0)
R ;RUN ROUTINE type option entry point
"RTN","XQ1",77,0)
 G:'$D(^DIC(19,XQY,25)) OUT:$D(ZTQUEUED),M1^XQ S XQZ=^(25) G:'$L(XQZ) M1^XQ S:XQZ'[U XQZ=U_XQZ I XQZ["[" D DO^%XUCI G OUT
"RTN","XQ1",78,0)
 D @XQZ G OUT
"RTN","XQ1",79,0)
 ;
"RTN","XQ1",80,0)
W ;Window type option entry point
"RTN","XQ1",81,0)
 S XQOK=1
"RTN","XQ1",82,0)
 I $D(^DIC(19,XQY,25)),$L(^(25)) D  G OUT ;Routine type
"RTN","XQ1",83,0)
 .S XQZ=^DIC(19,XQY,25)
"RTN","XQ1",84,0)
 .S:XQZ'[U XQZ=U_XQZ
"RTN","XQ1",85,0)
 .I XQZ["[" D DO^%XUCI Q
"RTN","XQ1",86,0)
 .D @XQZ
"RTN","XQ1",87,0)
 .Q
"RTN","XQ1",88,0)
 ;
"RTN","XQ1",89,0)
 I $D(^DIC(19,XQY,24)),$L(^(24)) D  G:XQOK OUT ;Pointer type
"RTN","XQ1",90,0)
 .S XQZ=^DIC(19,XQY,24)
"RTN","XQ1",91,0)
 .S XQZ=$P($G(^XTV(8995,XQZ,0)),U) I XQZ="" S XQOK=0 Q
"RTN","XQ1",92,0)
 .D PREP^XG
"RTN","XQ1",93,0)
 .S XQWIN=$$NEXTNM^XGCLOAD("XQWIN")
"RTN","XQ1",94,0)
 .;D GET^XGCLOAD(XQZ,XQWIN,"^TMP($J)")
"RTN","XQ1",95,0)
 .D GET^XGCLOAD(XQZ,$NA(^TMP($J,XQWIN)))
"RTN","XQ1",96,0)
 .D M^XG(XQWIN,$NA(^TMP($J,XQWIN)))
"RTN","XQ1",97,0)
 .D ESTA^XG() ;Send it off to window land
"RTN","XQ1",98,0)
 .; 
"RTN","XQ1",99,0)
 .D K^XG(XQWIN) ;Return here after the ESTOP
"RTN","XQ1",100,0)
 .;I $D(^%ZOSF("OS")),^%ZOSF("OS")["MSM" ZSTOP
"RTN","XQ1",101,0)
 .Q
"RTN","XQ1",102,0)
 ;
"RTN","XQ1",103,0)
 G M1^XQ ;Window failed
"RTN","XQ1",104,0)
 ;
"RTN","XQ1",105,0)
Z ;Window suite option       
"RTN","XQ1",106,0)
 G EN^XQSUITE
"RTN","XQ1",107,0)
 ;
"RTN","XQ1",108,0)
S ;Server-type option pseudo entry-point can't be invoked from Meun System
"RTN","XQ1",109,0)
 G OUT
"RTN","XQ1",110,0)
 ;
"RTN","XQ1",111,0)
B ;Client/Server option can't be run from menu system
"RTN","XQ1",112,0)
 G OUT
"RTN","XQ1",113,0)
 ;
"RTN","XQ1",114,0)
L ;OE/RR Limited option
"RTN","XQ1",115,0)
O ;OE/RR Protocol (orderables) type option entry point
"RTN","XQ1",116,0)
X ;OE/RR Extended Action type option (Subset of Protocol type)
"RTN","XQ1",117,0)
Q ;OE/RR Protocol Menu type option entry point
"RTN","XQ1",118,0)
 S XQOR=+XQY,XQOR(1)=XQT D XQ^XQOR K XQOR G OUT
"RTN","XQ1",119,0)
 ;
"RTN","XQ1",120,0)
ZTSK ;Task Manager entry point
"RTN","XQ1",121,0)
 G:$G(XQSCH)'>0 ZTSK2 S U="^",XQ=$G(^DIC(19.2,XQSCH,0)),XQY=+XQ Q:XQY'>0
"RTN","XQ1",122,0)
 S X1=$P(XQ,U,2),X2=$P(XQ,U,6)
"RTN","XQ1",123,0)
REQ S DA=XQSCH,DIE="^DIC(19.2,",DR=$S((X2="")&($P(XQ,U,9)=""):".01///@",X2="":"2///@",1:"2////"_$$SCH^XLFDT(X2,+X1,1))
"RTN","XQ1",124,0)
 L +^%ZTSK(ZTSK,0) D ^DIE L -^%ZTSK(ZTSK,0)
"RTN","XQ1",125,0)
 K DA,DIE,DR,X1,X2,XQ,ZTQPARAM
"RTN","XQ1",126,0)
 I $D(^DIC(19.2,XQSCH,3)),$L(^(3)) S ZTQPARAM=^(3)
"RTN","XQ1",127,0)
 I $D(^DIC(19.2,XQSCH,2)) D  ;Build other symbols
"RTN","XQ1",128,0)
 . S X2=XQSCH N XQSCH,XQY
"RTN","XQ1",129,0)
 . F X1=0:0 S X1=$O(^DIC(19.2,X2,2,X1)) Q:X1'>0  S X=^(X1,0),@($P(X,U)_"="_$P(X,U,2))
"RTN","XQ1",130,0)
 . Q
"RTN","XQ1",131,0)
ZTSK2 S ZTREQ="@" Q:'$D(XQY)  D UI^XQ12
"RTN","XQ1",132,0)
 Q:'$D(^DIC(19,XQY,0))  S XQY0=^(0),XQT=$P(XQY0,U,4) Q:XQT'="A"&(XQT'="P")&(XQT'="R")
"RTN","XQ1",133,0)
 S X=$P(XQY0,U,8) I X>0,X<11 X ^%ZOSF("PRIORITY")
"RTN","XQ1",134,0)
 I $P(XQY0,U,3)]""!($D(XQUIT)) S XQT="KILL"
"RTN","XQ1",135,0)
 ;
"RTN","XQ1",136,0)
RUN S:XQT="P"&$L(IO) XQIOP=ION_";"_IOST_";"_IOM_";"_IOSL G @XQT
"RTN","XQ1",137,0)
 Q
"RTN","XQ82")
0^8^B4749918
"RTN","XQ82",1,0)
XQ82 ;SF-ISC.SEA/JLI - CLEAN OLD $JOB DATA OUT OF XUTL("XQ", & OTHERS ;9/18/97  08:34
"RTN","XQ82",2,0)
 ;;8.0;KERNEL;**59**;Jul 10, 1995
"RTN","XQ82",3,0)
 S DDATE=$$HTFM^XLFDT($H-7) ;Get seven days ago in FM format
"RTN","XQ82",4,0)
 ;For any entry in user stack w/ date older than 7 days or w/o zero node
"RTN","XQ82",5,0)
 ;kill XUTL("XQ",n) and corresponding UTILITY(n) and TMP(n) nodes.
"RTN","XQ82",6,0)
 F J=0:0 S J=$O(^XUTL("XQ",J)) Q:J'>0  I $S('$D(^(J,0)):1,1:^(0)<DDATE) D
"RTN","XQ82",7,0)
 . I $D(^XUTL("XQ",J,"ZTSKNUM")) L +^%ZTSCH("TASK",^XUTL("XQ",J,"ZTSKNUM")):0 Q:'$T  L -^%ZTSCH("TASK",^XUTL("XQ",J,"ZTSKNUM"))
"RTN","XQ82",8,0)
 . K ^XUTL("XQ",J),^UTILITY(J),^TMP(J)
"RTN","XQ82",9,0)
 . Q
"RTN","XQ82",10,0)
 ;Loop thru UTILITY and look for nodes w/o corresponding XUTL("XQ",n)
"RTN","XQ82",11,0)
L1 S A="" F  S A=$O(^UTILITY(A)) Q:A=""  D
"RTN","XQ82",12,0)
 . I A>0,'$D(^XUTL("XQ",A)) K ^UTILITY(A) Q  ;UTILITY($J) w/o XUTL("XQ",$J) node.
"RTN","XQ82",13,0)
 . Q:A>0  Q:"^ROU^GLO^LRLTR^"[("^"_A_"^")
"RTN","XQ82",14,0)
 . F J=0:0 S J=$O(^UTILITY(A,J)) Q:J'>0  I '$D(^XUTL("XQ",J)) K ^UTILITY(A,J) ;Remove UTILITY(namespace,$J) w/o XUTL("XQ",$J)
"RTN","XQ82",15,0)
 . Q
"RTN","XQ82",16,0)
 ;Loop thru TMP and look for nodes w/o corresponding XUTL("XQ",n)
"RTN","XQ82",17,0)
L2 S A="" F  S A=$O(^TMP(A)) Q:A=""  D
"RTN","XQ82",18,0)
 . I A>0,'$D(^XUTL("XQ",A)) K ^TMP(A) Q  ;TMP($J) w/o XUTL("XQ",$J) node.
"RTN","XQ82",19,0)
 . Q:A>0  ;Q:"^ROU^GLO^LRLTR^"[("^"_A_"^")
"RTN","XQ82",20,0)
 . F J=0:0 S J=$O(^TMP(A,J)) Q:J'>0  I '$D(^XUTL("XQ",J)) K ^TMP(A,J) ;Remove TMP(namespace,$J) w/o XUTL("XQ",$J)
"RTN","XQ82",21,0)
 . Q
"RTN","XQ82",22,0)
L3 ;Now to cleanup the XTMP global w/ XTMP(namespace,0)<DT
"RTN","XQ82",23,0)
 S A="" F  S A=$O(^XTMP(A)) Q:A=""  S J=$G(^XTMP(A,0)) I J<DT K ^XTMP(A)
"RTN","XQ82",24,0)
L4 ;Now go thru and clean old ^XUSEC(0,"CUR",duz,sign-on) nodes.
"RTN","XQ82",25,0)
 F I=0:0 S I=$O(^XUSEC(0,"CUR",I)) Q:I'>0  F J=0:0 S J=$O(^XUSEC(0,"CUR",I,J)) Q:(J'>0)!(J'<DDATE)  K ^XUSEC(0,"CUR",I,J)
"RTN","XQ82",26,0)
L5 ;Now go through and clean old ^XUSEC(0,"AS*" nodes.
"RTN","XQ82",27,0)
 D L51("AS1"),L51("AS2")
"RTN","XQ82",28,0)
EXIT ;
"RTN","XQ82",29,0)
 K X,%DT,Y,J,K,DDATE
"RTN","XQ82",30,0)
 Q
"RTN","XQ82",31,0)
L51(NDX) ;
"RTN","XQ82",32,0)
 S I="" F  S I=$O(^XUSEC(0,NDX,I)) Q:I=""  F J=0:0 S J=$O(^XUSEC(0,NDX,I,J)) Q:(J'>0)!(J'<DDATE)  K ^XUSEC(0,NDX,I,J)
"RTN","XQ82",33,0)
 Q
"RTN","XQT1")
0^14^B18507568
"RTN","XQT1",1,0)
XQT1 ;SEA/MJM - Menu Template Processor ;9/4/97  13:40
"RTN","XQT1",2,0)
 ;;8.0;KERNEL;**59**;Jul 10, 1995
"RTN","XQT1",3,0)
 ;
"RTN","XQT1",4,0)
 S (XQPT,^XUTL("XQT",$J,0))=XQUR,^(XQPT,"T")=0
"RTN","XQT1",5,0)
 ;
"RTN","XQT1",6,0)
KILL K D,D0,D1,DA,DIC,DIE,DIR,DIS,DR,XQI,XQV,XQW,XQZ
"RTN","XQT1",7,0)
 ;
"RTN","XQT1",8,0)
NXT ;Process the next option, entry/exit actions,start list over, or quit
"RTN","XQT1",9,0)
 I $D(^(^XUTL("XQT",$J,XQPT,"T"),"X")) X ^("X")
"RTN","XQT1",10,0)
 I '$D(DT)!('$D(DTIME))!('$D(DUZ))!('$D(DUZ(0))) D DVARS^XQ12
"RTN","XQT1",11,0)
 S:'$D(XQPT)#2 XQPT=^XUTL("XQT",$J,0) S ^("T")=^XUTL("XQT",$J,XQPT,"T")+1
"RTN","XQT1",12,0)
ASK I '$D(^(^XUTL("XQT",$J,XQPT,"T"))) G:'^("RPT") OUT S ^("T")=1 W !!,"Again? Y// " R %:DTIME S:'$T %=U S:%="" %="Y" G:%=U!("Nn"[%) OUT D:%["??" HELP I "Yy"'[% W !!,"Please type 'Y' or 'N', '^' to quit, or '??' for help." G ASK
"RTN","XQT1",13,0)
 S:'$D(XQPT)#2 XQPT=^XUTL("XQT",$J,0) S %=^(^XUTL("XQT",$J,XQPT,"T")),XQY=+%,XQDIC=$P(%,U,2),XQY0=$P(%,U,3,99)
"RTN","XQT1",14,0)
 I $D(^(^XUTL("XQT",$J,XQPT,"T"),"H")) X ^("H")
"RTN","XQT1",15,0)
 I $D(^(^XUTL("XQT",$J,XQPT,"T"),"E")),$P(XQY0,U,4)'="A" X ^("E") I $D(XQUIT) K XQUIT W !!,"XQUIT encountered at option ",$P(XQY0,U,2),!,?5,"template ",XQPT," halted by this encounter.  Sorry." G OUT
"RTN","XQT1",16,0)
 S XQT=$P(XQY0,U,4) I "M"'[XQT W !!,$P(XQY0,U,2),! G @XQT
"RTN","XQT1",17,0)
 G NXT
"RTN","XQT1",18,0)
 ;
"RTN","XQT1",19,0)
OUT ;End of the line for this puppy: return to regular menu system
"RTN","XQT1",20,0)
 I $D(XQXFLG("ZEBRA")) L ^XWB("SESSION",XQXFLG("ZEBRA")) ;Clear by setting new lock
"RTN","XQT1",21,0)
 E  L  ;Clear the lock table
"RTN","XQT1",22,0)
 ;
"RTN","XQT1",23,0)
 K ^XUTL("XQT",$J,0),^(XQPT,"T"),XQPT
"RTN","XQT1",24,0)
 S %=^XUTL("XQ",$J,"S"),XQY=+%,XQDIC=$P(%,U,2),XQY0=$P(%,U,3,99),XQT=$P(XQY0,U,4)
"RTN","XQT1",25,0)
 K D0,D1,DA,DIC,DIE,DR,XQUIT,XQI,XQV,XQW,XQZ
"RTN","XQT1",26,0)
 G NOFIND^XQ
"RTN","XQT1",27,0)
 ;
"RTN","XQT1",28,0)
HELP ;Call the help screen
"RTN","XQT1",29,0)
 S XQH="XQTREPEAT" D EN^XQH
"RTN","XQT1",30,0)
 Q
"RTN","XQT1",31,0)
 ;
"RTN","XQT1",32,0)
A ;ACTION type option entry point
"RTN","XQT1",33,0)
 X:$D(^DIC(19,+XQY,20)) ^(20)
"RTN","XQT1",34,0)
 I $D(XQUIT) K XQUIT W !!,"XQUIT encountered at option ",$P(XQY0,U,2),!,?5,"template ",XQPT," halted by this encounter.  Sorry." G OUT
"RTN","XQT1",35,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26)
"RTN","XQT1",36,0)
 G NXT
"RTN","XQT1",37,0)
 ;
"RTN","XQT1",38,0)
C ;SCREEN type option entry point
"RTN","XQT1",39,0)
 D DIC G:DA=-1 KILL S XQZ="DR,DDSFILE,DDSFILE(1)",XQW=39 D SET
"RTN","XQT1",40,0)
 S DDSPAGE=$P($G(^DIC(19,+XQY,43)),U) K:DDSPAGE="" DDSPAGE
"RTN","XQT1",41,0)
 S DDSPARM=$P($G(^DIC(19,+XQY,43)),U,2) K:DDSPARM="" DDSPARM
"RTN","XQT1",42,0)
 I DDSFILE["(",DDSFILE'[U S DDSFILE=U_DDSFILE
"RTN","XQT1",43,0)
 I $D(DDSFILE(1)),DDSFILE(1)["(",DDSFILE(1)'[U S DDSFILE(1)=U_DDSFILE(1)
"RTN","XQT1",44,0)
 D ^DDS K DDSFILE G C
"RTN","XQT1",45,0)
 ;
"RTN","XQT1",46,0)
P ;PRINT type option entry point
"RTN","XQT1",47,0)
 S XQZ="DIC,PG,L,FLDS,BY,FR,TO,DHD,DCOPIES,DIS(0),IOP,DHIT,DIOBEG,DIOEND",XQW=59 D SET
"RTN","XQT1",48,0)
 I $D(DIS(0))#2 F XQI=1:1:3 Q:'$D(^DIC(19,+XQY,69+(XQI/10)))  Q:^(69+(XQI/10))=""  S DIS(XQI)=^(69+(XQI/10))
"RTN","XQT1",49,0)
 S:$D(XQIOP) IOP=XQIOP
"RTN","XQT1",50,0)
 S XQI=$G(^DIC(19,XQY,79)) S:XQI>0 DIASKHD="" S:$P(XQI,U,2) DISUPNO=1 S:$P(XQI,U,3) DIPCRIT=1
"RTN","XQT1",51,0)
 D D1,EN1^DIP K IOP,DIOBERG,DIS,DP
"RTN","XQT1",52,0)
 G NXT
"RTN","XQT1",53,0)
 ;
"RTN","XQT1",54,0)
I ;INQUIRE type option entry point
"RTN","XQT1",55,0)
I1 D DIC G KILL:DA=-1 S DI=DIC,XQZ="DIC,DR,DIQ(0)",XQW=79 D SET,D1 S:$D(DIC)[0 DIC=DI
"RTN","XQT1",56,0)
 I $D(^DIC(19,+XQY,63)),$L(^(63)) S FLDS=^(63)
"RTN","XQT1",57,0)
 E  S FLDS="[CAPTIONED]"
"RTN","XQT1",58,0)
 I $G(^DIC(19,+XQY,83))["Y" S IOP="HOME"
"RTN","XQT1",59,0)
 ;S:DUZ(0)'="@" DICS="I 1 Q:'$D(^(8))  F DW=1:1:$L(^(8)) I DUZ(0)[$E(^(8),DW) Q"
"RTN","XQT1",60,0)
 ;W:$D(IOF) @IOF D EN^DIQ S Y=XQY G I1
"RTN","XQT1",61,0)
I2 ;
"RTN","XQT1",62,0)
 W ! S XQZ="DHD",XQW=66 D SET K ^UTILITY($J),^(U,$J) S ^($J,1,DA)="",@("L=+$P("_DI_"0),U,2)"),DPP(1)=L_"^^^@",L=0,C=",",Q="""",DPP=1,DPP(1,"IX")="^UTILITY(U,$J,"_DI_"^2" D N^DIP1 S Y=XQY G I1
"RTN","XQT1",63,0)
 ;
"RTN","XQT1",64,0)
E ;EDIT type option entry point
"RTN","XQT1",65,0)
E1 D DIC G KILL:DA=-1 K DIE,DIC S XQZ="DIE,DR",XQW=49 D SET S XQZ="DIE(""W"")",XQW=53 D SET
"RTN","XQT1",66,0)
 I $D(^DIC(19,XQY,53)),$L(^(53)) S %=^(53),DIE("NO^")=$S(%="N":"",1:%)
"RTN","XQT1",67,0)
 S:DIE["(" DIE=U_DIE D ^DIE S Y=XQY G E1
"RTN","XQT1",68,0)
 ;
"RTN","XQT1",69,0)
DIC ;Get FileMan parameters from Option File and do look up
"RTN","XQT1",70,0)
 W ! K DIC S XQZ="DIC,DIC(0),DIC(""A""),DIC(""B""),DIC(""S""),DIC(""W""),D",XQW=29 D SET,D1
"RTN","XQT1",71,0)
 I '$D(D) D ^DIC
"RTN","XQT1",72,0)
 I $D(D) S:D="" D="B" D IX^DIC
"RTN","XQT1",73,0)
 S DA=+Y,Y=XQY
"RTN","XQT1",74,0)
 Q
"RTN","XQT1",75,0)
 ;
"RTN","XQT1",76,0)
D1 S:DIC["(" DIC=U_DIC Q
"RTN","XQT1",77,0)
 ;
"RTN","XQT1",78,0)
SET F XQI=1:1 S XQV=$P(XQZ,",",XQI) Q:XQV=""  K @XQV I $D(^DIC(19,+XQY,XQW+XQI)),^(XQW+XQI)]"" S @XQV=^(XQW+XQI)
"RTN","XQT1",79,0)
 I $D(DIC("A")),DIC("A")]"" S DIC("A")=DIC("A")_" "
"RTN","XQT1",80,0)
 K XQI,J
"RTN","XQT1",81,0)
 Q
"RTN","XQT1",82,0)
 ;
"RTN","XQT1",83,0)
R ;RUN ROUTINE type option entry point
"RTN","XQT1",84,0)
 G:'$D(^DIC(19,XQY,25)) NXT S XQZ=^(25) G:'$L(XQZ) NXT S:XQZ'[U XQZ=U_XQZ I XQZ["[" D DO^%XUCI G NXT
"RTN","XQT1",85,0)
 D @XQZ
"RTN","XQT1",86,0)
 G NXT
"RTN","XQT1",87,0)
 ;
"RTN","XQT1",88,0)
L ;OE/RR Limited Option type
"RTN","XQT1",89,0)
O ;OE/RR Protocol (orderables) type option entry point
"RTN","XQT1",90,0)
X ;OE/RR Extended Action type option (Subset of Protocol type)
"RTN","XQT1",91,0)
Q ;OE/RR Protocol Menu type option entry point
"RTN","XQT1",92,0)
 S XQOR=+XQY,XQOR(1)=XQT D XQ^XQOR K XQOR
"RTN","XQT1",93,0)
 G NXT
"RTN","XQT1",94,0)
 Q
"RTN","XUINENV")
0^^B915168
"RTN","XUINENV",1,0)
XUINENV ;ISCSF/RWF - KERNEL ENVIRONMENT CHECK ROUTINE  ;09/15/97  15:59
"RTN","XUINENV",2,0)
 ;;8.0;KERNEL;**59**;Jul 10, 1995
"RTN","XUINENV",3,0)
 Q:'$D(XPDNM)  ;Check that in a KIDS install.
"RTN","XUINENV",4,0)
 I XPDNM["XU*8.0*59" G ENV59
"RTN","XUINENV",5,0)
 Q
"RTN","XUINENV",6,0)
 ;
"RTN","XUINENV",7,0)
ENV59 ;Patch XU*8.0*59
"RTN","XUINENV",8,0)
 I $D(^DIC(8994,0))[0 D  Q
"RTN","XUINENV",9,0)
 . S XPDQUIT=2 D BMES^XPDUTL("BROKER 1.1 must be installed first to load the REMOTE PROCEDURE file.")
"RTN","XUINENV",10,0)
 D BMES^XPDUTL("Environment OK")
"RTN","XUINENV",11,0)
 Q
"RTN","XUINENV",12,0)
POST59 ;Do the post install work for patch 59
"RTN","XUINENV",13,0)
 Q:$G(^XTV(8989.3,1,0))=""
"RTN","XUINENV",14,0)
 I $P($G(^XTV(8989.3,1,"XUS")),U,18)="" S $P(^("XUS"),U,18)="d"
"RTN","XUINENV",15,0)
 Q
"RTN","XUS")
0^4^B19006135
"RTN","XUS",1,0)
XUS ;SFISC/STAFF - SIGNON ;07/25/97  15:26
"RTN","XUS",2,0)
 ;;8.0;KERNEL;**16,26,49,59**;Jul 10, 1995
"RTN","XUS",3,0)
 D INTRO^XUS1A()
"RTN","XUS",4,0)
 K (ZUGUI1,ZUGUI2) K ^XUTL("ZISPARAM",$I)
"RTN","XUS",5,0)
 S XQXFLG("GUI")=$G(ZUGUI1)_"^"_$G(ZUGUI2)
"RTN","XUS",6,0)
 W ! S $Y=0 D SET1(1) I POP S XUM=3 G NO
"RTN","XUS",7,0)
 W !!,"Volume set: ",$P(XUENV,U,4),"  UCI: ",XUCI,"  Device: ",$I W:$S('$D(IO("ZIO")):0,1:$I'=IO("ZIO")) " (",IO("ZIO"),")" W !
"RTN","XUS",8,0)
RS S XUM=$$SET2 G:XUM NO
"RTN","XUS",9,0)
 I $P(XU1,U,2)]"" S XUM=$$DEVPAS() I XUM G H:XUM<0,NO
"RTN","XUS",10,0)
 S PGM=$P(XOPT,U,8),XUA=$P(PGM,"[",1) I XUA]"" X XUEON G P
"RTN","XUS",11,0)
A S (XUSER(0),XUSER(1),XQUR)=""
"RTN","XUS",12,0)
 S X=$$AUTOXUS^XUS1B() I X>0 S DUZ=X D USER(DUZ) W !!,">> Auto Sign-on: ",$P(XUSER(0),U)," <<<",! G B
"RTN","XUS",13,0)
 X XUEOFF S AV=$$ASKAV() X XUEON I AV="^;^" G H ;Get out
"RTN","XUS",14,0)
 I AV["MAIL-BOX",AV[";XMR" S (XUA,PGM)="XMR",XMCHAN=$P($P(AV,";")," ",2),DUZ=.5 G XMR^XUSCLEAN
"RTN","XUS",15,0)
 S XQUR=$P(AV,";",3)
"RTN","XUS",16,0)
 S DUZ=$$CHECKAV(AV) K AV
"RTN","XUS",17,0)
 S XUM=$$UVALID() G:XUM NO
"RTN","XUS",18,0)
B K XUF,%1 S XUF=0 X XUEON
"RTN","XUS",19,0)
 I DUZ D USER^XUS1,SEC^XUS3:($D(^%ZIS(1,XUDEV,"TIME"))!$D(^(95))) G:XUM NO
"RTN","XUS",20,0)
 G NO:'DUZ S DTIME=$P(XOPT,U,10),X=$S(DUZ("BUF"):"",1:"NO-")_"TYPE-AHEAD" X:$D(^%ZOSF(X)) ^(X)
"RTN","XUS",21,0)
 D TT^XUS3:$G(XUTT) ;G ^XUS3:$O(^VA(200,DUZ,.2,0))>0
"RTN","XUS",22,0)
PGM ;
"RTN","XUS",23,0)
 S Y=+$G(^%ZIS(1,XUDEV,201)) I Y>0 D CHK S XQY=Y G:Y O
"RTN","XUS",24,0)
 S Y=+$G(^VA(200,DUZ,201)) I Y>0 D CHK S XQY=Y G:Y O
"RTN","XUS",25,0)
 S XUM=5 G NO
"RTN","XUS",26,0)
O D CHEK^XQ83
"RTN","XUS",27,0)
 S (XUA,PGM)="XQ" S:$G(XQXFLG("GUI"))="1^" KWAPI=1
"RTN","XUS",28,0)
P G NEXT^XUS1
"RTN","XUS",29,0)
 ;
"RTN","XUS",30,0)
CHK I $D(^DIC(19,Y,0)),$S($P(^(0),U,6)="":1,1:$D(^XUSEC($P(^(0),U,6),DUZ))) Q
"RTN","XUS",31,0)
 S Y=0 Q
"RTN","XUS",32,0)
LC S X=$$UP(X) Q
"RTN","XUS",33,0)
UP(%) Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","XUS",34,0)
 ;
"RTN","XUS",35,0)
E S:'DUZ XUF(.1)=$E(%1)
"RTN","XUS",36,0)
 S:XUF=2 XUF(.2)=XUF(.2)+1,XUF(XUF(.2))=%1 S %1="" Q
"RTN","XUS",37,0)
 Q
"RTN","XUS",38,0)
NO ;
"RTN","XUS",39,0)
 S X=$$NO^XUS3() G RS:'X,^XUSCLEAN
"RTN","XUS",40,0)
ON X ^%ZOSF("EON") Q
"RTN","XUS",41,0)
H ;;Exit point for all applications
"RTN","XUS",42,0)
C ;CLOSE
"RTN","XUS",43,0)
 G ^XUSCLEAN
"RTN","XUS",44,0)
ASKAV(PRE) ;Ask and return Access;Verify code, Turn off echo before calling
"RTN","XUS",45,0)
 ;Have the first Read write to flush the buffer on some systems
"RTN","XUS",46,0)
 N X,Y S PRE=$G(PRE)
"RTN","XUS",47,0)
 F  W !,PRE R "ACCESS CODE: ",X#100:60 S:('$T)!(X="^") X="^;^" Q:$L(X)
"RTN","XUS",48,0)
 S X=$TR(X,$C(9),";") ;Convert TAB to ; to match GUI.
"RTN","XUS",49,0)
 I $P(X," ")="MAIL-BOX" S X=X_";XMR"
"RTN","XUS",50,0)
 I '$L($P(X,";",2)) W !,PRE,"VERIFY CODE: " R Y#60:60 S:'$T X="^;" S $P(X,";",2)=Y
"RTN","XUS",51,0)
 Q X
"RTN","XUS",52,0)
CHECKAV(X1) ;Check A/V code return DUZ
"RTN","XUS",53,0)
 N %,X,Y,IEN
"RTN","XUS",54,0)
 S:X1[":" XUTT=1,X1=$P(X1,":",1)_$P(X1,":",2)
"RTN","XUS",55,0)
 S IEN=0,X=$P(X1,";") Q:X="^" -1
"RTN","XUS",56,0)
 S:XUF %1="Access: "_X G CHX:X'?1.20ANP S X=$$EN^XUSHSH($$UP(X)) I '$D(^VA(200,"A",X)) D:XUF E G CHX
"RTN","XUS",57,0)
 S %1="",IEN=$O(^VA(200,"A",X,0)),XUF(.3)=IEN D USER(IEN)
"RTN","XUS",58,0)
 S X=$P(X1,";",2) S:XUF %1="Verify: "_X S X=$$EN^XUSHSH($$UP(X)) I $P(XUSER(1),"^",2)'=X D:XUF E G CHX
"RTN","XUS",59,0)
 Q IEN
"RTN","XUS",60,0)
CHX I IEN S X=$P($G(^VA(200,IEN,1.1)),U,2)+1,$P(^(1.1),"^",2)=X
"RTN","XUS",61,0)
 Q 0
"RTN","XUS",62,0)
USER(IX) ;Build USER
"RTN","XUS",63,0)
 S XUSER(0)=$G(^VA(200,+IX,0)),XUSER(1)=$G(^(.1))
"RTN","XUS",64,0)
 Q
"RTN","XUS",65,0)
SET1(FLAG) ;Setup parameters
"RTN","XUS",66,0)
 D GETENV^%ZOSV S U="^",XUENV=Y,XUCI=$P(Y,U,1),XQVOL=$P(Y,U,2),XUEON=^%ZOSF("EON"),XUEOFF=^("EOFF")
"RTN","XUS",67,0)
 S X=$O(^XTV(8989.3,1,4,"B",XQVOL,0)),XUVOL=$S(X>0:^XTV(8989.3,1,4,X,0),1:XQVOL_"^y^1") S:$P(XUVOL,U,6)="y" XRTL=XUCI_","_XQVOL
"RTN","XUS",68,0)
 S XOPT=$S($D(^XTV(8989.3,1,"XUS")):^("XUS"),1:"") F I=2:1:15 I $P(XOPT,U,I)="" S $P(XOPT,U,I)=$P("^5^900^1^1^^^^1^300^^^^N^90",U,I)
"RTN","XUS",69,0)
 K ^XUTL("XQ",$J) S XUT=0,XUF=0,XUDEV=0,DUZ=0,DUZ(0)="@",IOS=0,ION=""
"RTN","XUS",70,0)
 I FLAG S %ZIS="L",IOP="HOME" D ^%ZIS Q:POP
"RTN","XUS",71,0)
 S XUDEV=IOS,XUIOP=ION D:$D(XRTL) T0^%ZOSV
"RTN","XUS",72,0)
 Q
"RTN","XUS",73,0)
SET2() ;EF. Return error code
"RTN","XUS",74,0)
 S XUNOW=$$HTFM^XLFDT($H),DT=$E(XUNOW,1,7)
"RTN","XUS",75,0)
 S X=$P(XOPT,U,14) I "N"'[X S XUF=(X["R")+1,XUF(.1)="",XUF(.2)=0,XUF(.3)=0 I X["D" S:$D(^XTV(8989.3,1,4.33,"B",XUDEV))[0 XUF=0
"RTN","XUS",76,0)
 K DUZ,XUSER S (DUZ,DUZ(2))=0,(DUZ(0),DUZ("AG"),XUSER(0),XUSER(1),XUTT,%UCI)=""
"RTN","XUS",77,0)
 I $G(^%ZIS(14.5,"LOGON",XQVOL)) Q 1
"RTN","XUS",78,0)
 I $D(^%ZOSF("ACTJ")) X ^("ACTJ") I $P(XUVOL,U,3),($P(XUVOL,U,3)'>Y) Q 2
"RTN","XUS",79,0)
 S X=$G(^%ZIS(1,XUDEV,"XUS")),XU1=$G(^(1)) F I=1:1:15 I $P(X,U,I)]"" S $P(XOPT,U,I)=$P(X,U,I)
"RTN","XUS",80,0)
 S DTIME=600
"RTN","XUS",81,0)
 I '$P(XOPT,U,11),$D(^%ZIS(1,XUDEV,90)),^(90)>2800000,^(90)'>DT Q 8
"RTN","XUS",82,0)
 I $D(XRT0) S XRTN="XUS" D T1^%ZOSV
"RTN","XUS",83,0)
 Q 0
"RTN","XUS",84,0)
UVALID() ;EF. Is it valid for this user to sign on?
"RTN","XUS",85,0)
 I DUZ'>0 Q 4
"RTN","XUS",86,0)
 I $P(XUSER(0),U,11),$P(XUSER(0),U,11)'>DT Q 11 ;Access Terminated
"RTN","XUS",87,0)
 I $P(XUSER(0),U,7) Q 5 ;Disuser flag set
"RTN","XUS",88,0)
 Q 0
"RTN","XUS",89,0)
DEVPAS() ;EF. Ask device password
"RTN","XUS",90,0)
 X XUEOFF W !,"DEVICE PASSWORD: " R X:60 X XUEON
"RTN","XUS",91,0)
 S X=$E(X,1,30) S:'$T X="^" D LC Q:X["^" -1 I $P(XU1,U,2)'=X S:XUF %1="Device: "_X D:XUF E Q 6
"RTN","XUS",92,0)
 Q 0
"RTN","XUS1")
0^2^B18301077
"RTN","XUS1",1,0)
XUS1 ;SF-ISC/STAFF - SIGNON ;09/15/97  15:14
"RTN","XUS1",2,0)
 ;;8.0;KERNEL;**9,59**;Jul 10, 1995
"RTN","XUS1",3,0)
USER ;
"RTN","XUS1",4,0)
 K XUTEXT S XUM=$$USER^XUS1A(),$Y=0
"RTN","XUS1",5,0)
 F I=0:0 S I=$O(XUTEXT(I)) Q:I'>0  D:$Y>20  W:$E(XUTEXT(I),1)="!" ! W $E(XUTEXT(I),2,999)
"RTN","XUS1",6,0)
 . N DIR S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR W @IOF Q
"RTN","XUS1",7,0)
 G SET:'XUM,NO^XUS:(XUM)&(XUM'=9)
"RTN","XUS1",8,0)
 W !!,?8,"You are ALREADY signed on. And may not sign-on again." S X=""
"RTN","XUS1",9,0)
 Q
"RTN","XUS1",10,0)
SET ;
"RTN","XUS1",11,0)
 S Y=$O(^VA(200,DUZ,2,0)),X=$O(^(Y)) I X>0,$D(^DIC(4,0)) S DIC="^VA(200,DUZ,2,",DIC(0)="AEMQ",DIC("P")="200.02P" D ^DIC I Y'>0 W !,*7,"You must select one." G SET
"RTN","XUS1",12,0)
 S DUZ(2)=+Y D DUZ^XUS1A
"RTN","XUS1",13,0)
 S:$P(XOPT,"^",5) XUTT=1
"RTN","XUS1",14,0)
 I '$L($P(XUSER(1),U,2)) D CVC^XUS2 G:$D(DUOUT) H^XUS S XUSER(1)=^VA(200,DUZ,.1)
"RTN","XUS1",15,0)
 I +$P(XOPT,U,15),(XUSER(1)+$P(XOPT,U,15)'>+$H) D CVC^XUS2 G:$D(DUOUT) H^XUS
"RTN","XUS1",16,0)
 D ENQ
"RTN","XUS1",17,0)
 Q
"RTN","XUS1",18,0)
ENQ ;
"RTN","XUS1",19,0)
 S XUT1="" I XUTT X XUEOFF R X:0 X ^%ZOSF("TYPE-AHEAD") W $C(27,91,99) R *X:2 I X=27 F  R X#1:2 S XUT1=XUT1_X Q:'$T!(X="c")
"RTN","XUS1",20,0)
 I XUTT,(XUT1'["[") R X:0 S XUT1="" W *5 R *X:2 R:$T XUT1:2 S X=$S(X=6:"C-WYSE 75",1:$C(X)_XUT1),XUT1=""
"RTN","XUS1",21,0)
 X XUEON I XUTT,XUT1["[" S Y=$O(^%ZIS(3.22,"B",XUT1,0)) I Y>0 S X=$P($G(^%ZIS(3.22,Y,0)),"^",2)
"RTN","XUS1",22,0)
 I X?1.ANP S DIC="^%ZIS(2,",DIC(0)="MO" D ^DIC I Y>0 S XUIOP(1)=$P(Y,U,2),$P(XUIOP,";",2)=XUIOP(1),^VA(200,DUZ,1.2)=+Y
"RTN","XUS1",23,0)
 I '$D(XUIOP(1)),$D(^VA(200,DUZ,1.2)) S X=+^(1.2) I X>0,$D(^%ZIS(2,X,0)) S $P(XUIOP,";",2)=$P(^(0),U)
"RTN","XUS1",24,0)
 Q
"RTN","XUS1",25,0)
NEXT ;
"RTN","XUS1",26,0)
 S IOP=XUIOP D ^%ZIS
"RTN","XUS1",27,0)
 S X=$G(^DISV(DUZ)) ;Add kill by session or day here
"RTN","XUS1",28,0)
 S ^DISV(DUZ)=$H
"RTN","XUS1",29,0)
 S X=%UCI,N1=XUCI I PGM["[" S X=$P(PGM,"[",2,4),PGM=$P(PGM,"[",1)
"RTN","XUS1",30,0)
 S:X["""" X=$P(X,"""",2) S:X?.E1"]"&(X'["[") X=$E(X,1,$L(X)-1) S XUM=14,XUM(0)=X
"RTN","XUS1",31,0)
 S %UCI=X I "PRODMGR"'[X,$D(^%ZOSF("UCICHECK")) X ^("UCICHECK") G NO:Y="" S:N1=Y %UCI=""
"RTN","XUS1",32,0)
 S XUM=15,XUM(0)=PGM G NO:PGM'?1AP.AN
"RTN","XUS1",33,0)
 G NO:":"_XUA_":"'[(":"_PGM_":") K ^DISV("XU",XUDEV)
"RTN","XUS1",34,0)
 S I=$S($D(^XTV(8989.3,1,19)):^(19),1:""),I1=$P(I,U),I2=$P(I,U,2) I I1]"","asu"[I1,I2,I2'>XUNOW,$P(I,U,3)'<XUNOW D AUDIT
"RTN","XUS1",35,0)
 S X=$S($D(^VA(200,DUZ,0)):$P($P(^(0),U),","),1:"Unk"),X=$E(X,1,10)_"_"_($J#10000) D SETENV^%ZOSV
"RTN","XUS1",36,0)
 S X=$P(XOPT,U,16) X:X ^%ZOSF("PRIORITY") D LOG:DUZ,KILL I %UCI]"" K ^XUTL("XQ",$J) S $P(^VA(200,DUZ,1,1),U,3)=0 G GO^%XUCI
"RTN","XUS1",37,0)
 D SAVE K ^XUTL("OR",$J),^UTILITY($J),%UCI G @(U_PGM)
"RTN","XUS1",38,0)
 ;
"RTN","XUS1",39,0)
SAVE ;
"RTN","XUS1",40,0)
 S X="DUZ" F  S X=$Q(@X) Q:X=""  I $D(@X) S ^XUTL("XQ",$J,$TR(X,""""))=@X
"RTN","XUS1",41,0)
 F X="DUZ","IO","IO(""IP"")","IO(""CLNM"")","IOBS","IOF","IOM","ION","IOS","IOSL","IOST","IOST(0)","IOT","IOXY","XQVOL" I $D(@X) S ^XUTL("XQ",$J,X)=@X
"RTN","XUS1",42,0)
 Q
"RTN","XUS1",43,0)
LOG ;
"RTN","XUS1",44,0)
 N %,I,DA,DIK S I=XUNOW
"RTN","XUS1",45,0)
 F I=I:.000001 L +^XUSEC(0,I):1 Q:'$D(^XUSEC(0,I))  L -^XUSEC(0,I)
"RTN","XUS1",46,0)
 S ^XUSEC(0,I,0)=DUZ_"^"_$I_"^"_$J_"^^"_$P(XUVOL,U,1)_"^^"_XUDEV_"^"_XUCI_"^"_$G(IO("ZIO"))_"^"_$P(XUENV,"^",3)_"^"_$G(IO("IP"))_"^"_$G(IO("CLNM"))
"RTN","XUS1",47,0)
 L -^XUSEC(0,I)
"RTN","XUS1",48,0)
 S $P(^XUSEC(0,0),"^",3,4)=I_"^"_(1+$P(^XUSEC(0,0),"^",4))
"RTN","XUS1",49,0)
 S XQXFLG("LLOG")=$G(^VA(200,DUZ,1.1)) ;Added for LOGIN templates - Luke
"RTN","XUS1",50,0)
 S %=$$COOKIE($P(^VA(200,DUZ,0),U),I) I $L(%) S XQXFLG("ZEBRA")=I_"~"_%,$P(^XUSEC(0,I,0),U,13)=% L +^XWB("SESSION",XQXFLG("ZEBRA"))
"RTN","XUS1",51,0)
 S ^XUTL("XQ",$J,0)=I,$P(^VA(200,DUZ,1.1),"^",1,3)=I_"^0^1"
"RTN","XUS1",52,0)
 S DA=I,DIK="^XUSEC(0," D IX^DIK
"RTN","XUS1",53,0)
 Q
"RTN","XUS1",54,0)
COOKIE(J1,J2) ;Call VAdeamon for a cookie
"RTN","XUS1",55,0)
 N ZZ,%
"RTN","XUS1",56,0)
 I $G(XQXFLG("ZEBRA"))=-1 K XQXFLG("ZEBRA") Q "" ;Disabled
"RTN","XUS1",57,0)
 Q:$G(IO("IP"))="" "" ;Not using Telnet
"RTN","XUS1",58,0)
 S %=$$CMD^XWBCAGNT(.ZZ,"XWB CREATE HANDLE",J1_"^"_J2) Q:'% ""
"RTN","XUS1",59,0)
 Q $G(ZZ(1))
"RTN","XUS1",60,0)
AUDIT ;
"RTN","XUS1",61,0)
 I "au"[I1 S:(I1="a")!($D(^XTV(8989.3,1,19.3,"B",DUZ))>1) XQAUDIT=1 Q
"RTN","XUS1",62,0)
 S XQAUDIT="" F I=0:0 S I=$O(^XTV(8989.3,1,19.1,"B",I)) Q:I'>0!($L(XQAUDIT)>245)  S XQAUDIT=XQAUDIT_"2^"_I_U
"RTN","XUS1",63,0)
 S I1="" F I=0:0 S I1=$O(^XTV(8989.3,1,19.2,"B",I1)) Q:I1']""!($L(XQAUDIT)>245)  S XQAUDIT=XQAUDIT_"3^"_I1_U
"RTN","XUS1",64,0)
 Q
"RTN","XUS1",65,0)
 ;
"RTN","XUS1",66,0)
DD(Y) Q $S($E(Y,4,5):$P("Jan^Feb^Mar^Apr^May^Jun^Jul^Aug^Sep^Oct^Nov^Dec","^",+$E(Y,4,5))_" ",1:"")_$S($E(Y,6,7):+$E(Y,6,7)_",",1:"")_($E(Y,1,3)+1700)
"RTN","XUS1",67,0)
 Q
"RTN","XUS1",68,0)
KILL N %UCI,PGM,U,XQUR,XMCHAN G KILL1^XUSCLEAN
"RTN","XUS1",69,0)
 Q
"RTN","XUS1",70,0)
NO S X=$$NO^XUS3 G RS^XUS:'X,^XUSCLEAN
"RTN","XUS1B")
0^5^B3961078
"RTN","XUS1B",1,0)
XUS1B ;ISCSF/RWF - Auto sign-on ;09/16/97  09:48
"RTN","XUS1B",2,0)
 ;;8.0;;**59**;Feb 14, 1997
"RTN","XUS1B",3,0)
 Q
"RTN","XUS1B",4,0)
 ;
"RTN","XUS1B",5,0)
AUTOXUS() ;Do the check for XUS and Auto Sign-on
"RTN","XUS1B",6,0)
 N %,Y
"RTN","XUS1B",7,0)
 I $G(XQXFLG("ASO")) Q 0 ;Already tried once.
"RTN","XUS1B",8,0)
 G AUTO
"RTN","XUS1B",9,0)
 ;
"RTN","XUS1B",10,0)
AUTOXWB() ;Do the check for XWB and Auto Sign-on
"RTN","XUS1B",11,0)
 N %,Y
"RTN","XUS1B",12,0)
AUTO ;Common code
"RTN","XUS1B",13,0)
 I ($T(^XWBCAGNT)="")!($P(XOPT,U,18)="d") S XQXFLG("ZEBRA")=-1 Q 0 ;Disabled
"RTN","XUS1B",14,0)
 S Y=$$CHKVIP^XUS1B(),%=0 I Y>0 S XQXFLG("ASO")=1,%=$$PREF($P(XOPT,U,18),$P($G(^VA(200,Y,200)),U,18))
"RTN","XUS1B",15,0)
 I Y>0,'% S Y=0 ;No Auto signon
"RTN","XUS1B",16,0)
 Q Y
"RTN","XUS1B",17,0)
 ;
"RTN","XUS1B",18,0)
CHKVIP() ;Check for a Valid current IP
"RTN","XUS1B",19,0)
 N REF,XREF,IEN,R0,ENV,JOB,HNDL
"RTN","XUS1B",20,0)
 S IEN=0,ENV=$$ENV I $G(IO("IP"))]"" D GETHNDL(.HNDL)
"RTN","XUS1B",21,0)
 S REF=$G(IO("IP")) I REF]"" D LKUP("AS1",$P(REF,":")) Q:IEN IEN
"RTN","XUS1B",22,0)
 ;Only use IP address for lookup
"RTN","XUS1B",23,0)
 ;S REF=$G(IO("CLNM")) Q:REF["@" 0
"RTN","XUS1B",24,0)
 ;S REF=$P(REF,":") I REF]"" D LKUP2 Q:IEN IEN I REF["." D LKUP("AS2",$P(REF,".")) Q:IEN IEN
"RTN","XUS1B",25,0)
 ;S REF=$$LOW^XLFSTR(REF) I REF]"" D LKUP2 Q:IEN IEN I REF["." D LKUP("AS2",$P(REF,".")) Q:IEN IEN
"RTN","XUS1B",26,0)
 Q 0
"RTN","XUS1B",27,0)
 ;
"RTN","XUS1B",28,0)
LKUP2 ;See if we can find a workstation name
"RTN","XUS1B",29,0)
 I $D(^XUSEC(0,"AS2",REF))>0 D LKUP("AS2",REF) Q:IEN
"RTN","XUS1B",30,0)
 S XREF=$O(^XUSEC(0,"AS2",REF)) I XREF]"",$E(XREF,1,$L(REF))=REF D LKUP("AS2",XREF) Q:IEN
"RTN","XUS1B",31,0)
 Q
"RTN","XUS1B",32,0)
LKUP(XREF,LK) ;Check one X-ref
"RTN","XUS1B",33,0)
 S IX=0
"RTN","XUS1B",34,0)
 F  S IX=$O(^XUSEC(0,XREF,LK,IX)) Q:IX'>0  D CHK Q:IEN
"RTN","XUS1B",35,0)
 Q
"RTN","XUS1B",36,0)
CHK ;Could this be a good one.
"RTN","XUS1B",37,0)
 N R0,R1,JOB
"RTN","XUS1B",38,0)
 S R0=$G(^XUSEC(0,IX,0))
"RTN","XUS1B",39,0)
 ;Check handle.
"RTN","XUS1B",40,0)
 S R1=$P(R0,U,13) I R1]"",$D(HNDL(R1)) D  Q:IEN
"RTN","XUS1B",41,0)
 . L +^XWB("SESSION",IX_"~"_R1):0 I $T L -^XWB("SESSION",IX_"~"_R1) Q
"RTN","XUS1B",42,0)
 . S IEN=+R0 Q  ;Found a match
"RTN","XUS1B",43,0)
 ;I $P(R0,U,5)'=$P(ENV,U,2) Q  ;Make sure on the same VOL.
"RTN","XUS1B",44,0)
 ;I $P(R0,U,10)'=$P(ENV,U,3) Q  ;Check that on same NODE.
"RTN","XUS1B",45,0)
 ;S JOB=$P(R0,U,3) I $D(^$JOB(JOB)),IX=+$G(^XUTL("XQ",JOB,0)) S IEN=+R0 Q  ;Found a match
"RTN","XUS1B",46,0)
 Q
"RTN","XUS1B",47,0)
 ;
"RTN","XUS1B",48,0)
ENV() N Y D GETENV^%ZOSV Q Y
"RTN","XUS1B",49,0)
PREF(%1,%2) ;
"RTN","XUS1B",50,0)
 Q $S(%2]"":%2,1:%1)
"RTN","XUS1B",51,0)
GETHNDL(RET) ;Get the Handles from the Client
"RTN","XUS1B",52,0)
 N %,%1,X,XXX
"RTN","XUS1B",53,0)
 S %=$$CMD^XWBCAGNT(.XXX,"XWB GET HANDLES") Q:'%
"RTN","XUS1B",54,0)
 Q:'$O(XXX(0))
"RTN","XUS1B",55,0)
 ;build array
"RTN","XUS1B",56,0)
 S RET=0,%1=1 F %=1:1:$L(XXX(%1),"^") S X=$P(XXX(%1),"^",%) S:X]"" RET(X)="",RET=RET+1
"RTN","XUS1B",57,0)
 Q
"RTN","XUS2")
0^11^B29492901
"RTN","XUS2",1,0)
XUS2 ;SF/RWF - TO CHECK OR RETURN USER ATTRIBUTES ;6/3/97  14:20
"RTN","XUS2",2,0)
 ;;8.0;KERNEL;**59**;Jul 10, 1995
"RTN","XUS2",3,0)
 G XUS2^XUVERIFY ;All check or return user attributes moved to XUVERIFY
"RTN","XUS2",4,0)
USER G USER^XUVERIFY
"RTN","XUS2",5,0)
EDIT G EDIT^XUVERIFY
"RTN","XUS2",6,0)
 Q
"RTN","XUS2",7,0)
 ;
"RTN","XUS2",8,0)
ACCED ; ACCESS CODE EDIT from DD
"RTN","XUS2",9,0)
 N DIR,DIR0,XUAUTO I "Nn"[$E(X,1) S X="" Q
"RTN","XUS2",10,0)
 I "Yy"'[$E(X,1) K X Q
"RTN","XUS2",11,0)
 S XUAUTO=($P($G(^XTV(8989.3,1,3)),U,1)="y"),XUH=""
"RTN","XUS2",12,0)
AC1 D CLR,AUTO:XUAUTO,AASK:'XUAUTO G OUT:$D(DIRUT) D REASK G OUT:$D(DIRUT),AC1:'XUK D CLR,AST(XUH)
"RTN","XUS2",13,0)
 G OUT
"RTN","XUS2",14,0)
AASK N X,XUU X ^%ZOSF("EOFF")
"RTN","XUS2",15,0)
AASK1 W "Enter a new ACCESS CODE <Hidden>: " D GET Q:$D(DIRUT)
"RTN","XUS2",16,0)
 I X="@" D DEL G:Y'=1 DIRUT S XUH="" Q
"RTN","XUS2",17,0)
 I X[$C(34)!(X[";")!(X["^")!(X[":")!(X'?.UNP)!($L(X)>20)!($L(X)<6)!(X="MAIL-BOX") D CLR W *7,$$AVHLPTXT D HELP G AASK1
"RTN","XUS2",18,0)
 I 'XUAUTO,((X?6.20A)!(X?6.20N)) D CLR W *7,"ACCESS CODE must be a mix of alpha and numerics.",! G AASK1
"RTN","XUS2",19,0)
 S XUU=X,X=$$EN^XUSHSH(X),XUH=X,XMB(1)=$O(^VA(200,"A",XUH,0)) I XMB(1),XMB(1)'=DA S XMB="XUS ACCESS CODE VIOLATION",XMB(1)=$P(^VA(200,XMB(1),0),"^"),XMDUN="Security" D ^XMB
"RTN","XUS2",20,0)
 I $D(^VA(200,"AOLD",XUH))!$D(^VA(200,"A",XUH)) D CLR W *7,"This has been used previously as an ACCESS CODE.",! G AASK1
"RTN","XUS2",21,0)
 Q
"RTN","XUS2",22,0)
REASK S XUK=1 Q:XUH=""  D CLR X ^%ZOSF("EOFF")
"RTN","XUS2",23,0)
 F XUK=3:-1:1 W "Please re-type the new code to show that I have it right: " D GET G:$D(DIRUT) DIRUT D ^XUSHSH Q:(XUH=X)  D CLR W "This doesn't match.  Try again!",!,*7
"RTN","XUS2",24,0)
 S:XUH'=X XUK=0 Q
"RTN","XUS2",25,0)
AST(XUH) ;Change ACCESS CODE and index.
"RTN","XUS2",26,0)
 W "OK, Access code has been changed!"
"RTN","XUS2",27,0)
 S XUU=$P(^VA(200,DA,0),"^",3),$P(^VA(200,DA,0),"^",3)=XUH
"RTN","XUS2",28,0)
 I XUU]"" F XUI=0:0 S X=XUU S XUI=$O(^DD(200,2,1,XUI)) Q:XUI'>0  X ^(XUI,2)
"RTN","XUS2",29,0)
 I XUH]"" F XUI=0:0 S X=XUH S XUI=$O(^DD(200,2,1,XUI)) Q:XUI'>0  X ^(XUI,1)
"RTN","XUS2",30,0)
 W !,"The VERIFY CODE has been deleted as a security measure.",!,"The user will have to enter a new one the next time they sign-on.",*7 D VST("",1)
"RTN","XUS2",31,0)
 I $D(^XMB(3.7,DA,0))[0 S Y=DA D NEW^XM ;Make sure has a Mailbox
"RTN","XUS2",32,0)
 Q
"RTN","XUS2",33,0)
GET R X:DTIME Q:X="@"  G:'$T!(X["^")!('$L(X)) DIRUT X ^%ZOSF("UPPERCASE") S X=Y Q
"RTN","XUS2",34,0)
DIRUT S DIRUT=1 Q
"RTN","XUS2",35,0)
CLR I '$D(DDS) W ! Q
"RTN","XUS2",36,0)
 D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X IOXY Q
"RTN","XUS2",37,0)
 ;
"RTN","XUS2",38,0)
NEWCODE D REASK I XUK W !,"OK, remember this code for next time!" G OUT
"RTN","XUS2",39,0)
CVC ;From XUS1
"RTN","XUS2",40,0)
 W !,"You must change your VERIFY CODE at this time." S DA=DUZ,X="Y"
"RTN","XUS2",41,0)
VERED ; VERIFY CODE EDIT From DD
"RTN","XUS2",42,0)
 N DIR,DIR0 I "Nn"[$E(X,1) S X="" Q
"RTN","XUS2",43,0)
 I "Yy"'[$E(X,1) K X Q
"RTN","XUS2",44,0)
 S XUH=""
"RTN","XUS2",45,0)
VC1 D CLR,VASK G OUT:$D(DIRUT) D REASK G OUT:$D(DIRUT),VC1:'XUK D CLR,VST(XUH,1)
"RTN","XUS2",46,0)
 G OUT
"RTN","XUS2",47,0)
VASK N X,XUU X ^%ZOSF("EOFF") G:'$$CHKCUR() DIRUT D CLR
"RTN","XUS2",48,0)
VASK1 W "Enter a new VERIFY CODE: " D GET Q:$D(DIRUT)
"RTN","XUS2",49,0)
 I '$D(XUNC),(X="@") D DEL G:Y'=1 DIRUT S XUH="" Q
"RTN","XUS2",50,0)
 D CLR S XUU=X,X=$$EN^XUSHSH(X),XUH=X,Y=$$VCHK(XUU,XUH) I +Y W *7,$P(Y,U,2,9),! D:+Y=1 HELP G VASK1
"RTN","XUS2",51,0)
 Q
"RTN","XUS2",52,0)
VCHK(S,EC) ;Call with String and Encripted versions
"RTN","XUS2",53,0)
 I ($L(S)<6)!($L(S)>20)!(S'?.UNP)!(S[";")!(S["^") Q "1^"_$$AVHLPTXT
"RTN","XUS2",54,0)
 I ((S?6.20A)!(S?6.20N)) Q "2^VERIFY CODE must be a mix of alpha and numerics."
"RTN","XUS2",55,0)
 I $D(^VA(200,DA,.1)),EC=$P(^(.1),U,2) Q "3^This code is the same as the current one."
"RTN","XUS2",56,0)
 I $D(^VA(200,DA,"VOLD",EC)) Q "4^This has been used previously as the VERIFY CODE."
"RTN","XUS2",57,0)
 I EC=$P(^VA(200,DA,0),U,3) Q "5^VERIFY CODE must be different than the ACCESS CODE."
"RTN","XUS2",58,0)
 Q 0
"RTN","XUS2",59,0)
 ;
"RTN","XUS2",60,0)
VST(XUH,%) W:$L(XUH)&% !,"OK, Verify code has been changed!"
"RTN","XUS2",61,0)
 S XUU=$P($G(^VA(200,DA,.1)),U,2) S $P(^VA(200,DA,.1),"^",1,2)=$H_"^"_XUH
"RTN","XUS2",62,0)
 I XUU]"" F XUI=0:0 S X=XUU S XUI=$O(^DD(200,11,1,XUI)) Q:XUI'>0  X ^(XUI,2)
"RTN","XUS2",63,0)
 I XUH]"" F XUI=0:0 S X=XUH S XUI=$O(^DD(200,11,1,XUI)) Q:XUI'>0  X ^(XUI,1)
"RTN","XUS2",64,0)
 S:DA=DUZ DUZ("NEWCODE")=XUH Q
"RTN","XUS2",65,0)
 ;
"RTN","XUS2",66,0)
DEL ;
"RTN","XUS2",67,0)
 X ^%ZOSF("EON") W "@",*7 S DIR(0)="Y",DIR("A")="Sure you want to delete" D ^DIR I Y'=1 W:$X>55 !?9 W *7,"  <Nothing Deleted>"
"RTN","XUS2",68,0)
 Q
"RTN","XUS2",69,0)
AUTO ;
"RTN","XUS2",70,0)
 X ^%ZOSF("EON") F XUK=1:1:3 D GEN Q:(Y=1)!($D(DIRUT))
"RTN","XUS2",71,0)
 K DIR Q
"RTN","XUS2",72,0)
GEN ;Generate a ACCESS code
"RTN","XUS2",73,0)
 D ^XUS4 S X=XUU,X=$$EN^XUSHSH(X),XUH=X I $D(^VA(200,"A",X))!$D(^VA(200,"AOLD",X)) G GEN
"RTN","XUS2",74,0)
 D CLR W "The new ACCESS CODE is: ",XUU,"   This is ",XUK," of 3 tries."
"RTN","XUS2",75,0)
YN S Y=1 Q:XUK=3  S DIR(0)="YA",DIR("A")=" Do you want to keep this one? ",DIR("B")="YES",DIR("?",1)="If you don't like this code, we can auto-generate another.",DIR("?")="Remember you only get 3 tries!"
"RTN","XUS2",76,0)
 D ^DIR Q:(Y=1)!$D(DIRUT)  D CLR W:XUK=2 "O.K. You'll have to keep the next one!",!
"RTN","XUS2",77,0)
 Q
"RTN","XUS2",78,0)
HELP D ^XUS4 S X=XUU,X=$$EN^XUSHSH(X) I $D(^VA(200,"A",X))!$D(^VA(200,"AOLD",X))!$D(^VA(200,DA,"VOLD",X)) G HELP
"RTN","XUS2",79,0)
 W !,"Here is a code that you can use: ",XUU,! Q
"RTN","XUS2",80,0)
OUT ;
"RTN","XUS2",81,0)
 K DUOUT S:$D(DIRUT) DUOUT=1
"RTN","XUS2",82,0)
 X ^%ZOSF("EON") W !
"RTN","XUS2",83,0)
 K DIR,DIRUT,XUKO,XUAUTO,XUU,XUH,XUK,XUI S X=""
"RTN","XUS2",84,0)
 Q
"RTN","XUS2",85,0)
CHKCUR() ;Check user knows current code, Return 1 if OK to continue
"RTN","XUS2",86,0)
 Q:DA'=DUZ 1 ;Only ask user
"RTN","XUS2",87,0)
 Q:$P($G(^VA(200,DA,.1)),U,2)="" 1 ;Must have an old one
"RTN","XUS2",88,0)
 S XUK=0 D CLR
"RTN","XUS2",89,0)
CHK1 W "Please enter your current verify code: " D GET Q:$D(DIRUT) 0
"RTN","XUS2",90,0)
 I $P(^VA(200,DA,.1),U,2)=$$EN^XUSHSH(X) Q 1
"RTN","XUS2",91,0)
 D CLR W "Sorry that is not correct!",!
"RTN","XUS2",92,0)
 S XUK=XUK+1 G:XUK<3 CHK1 Q 0
"RTN","XUS2",93,0)
 ;
"RTN","XUS2",94,0)
BRCVC(XV1,XV2) ;Broker change VC, return 1 if done
"RTN","XUS2",95,0)
 N XUU,XUH
"RTN","XUS2",96,0)
 Q:$G(DUZ)'>0 0 S DA=DUZ,XUH=$$EN^XUSHSH(XV2)
"RTN","XUS2",97,0)
 I $P($G(^VA(200,DUZ,.1)),"^",2)'=$$EN^XUSHSH(XV1) Q "1^Sorry that isn't the correct current code"
"RTN","XUS2",98,0)
 S Y=$$VCHK(XV2,XUH) Q:Y Y
"RTN","XUS2",99,0)
 D VST(XUH,0)
"RTN","XUS2",100,0)
 Q 0
"RTN","XUS2",101,0)
 ;
"RTN","XUS2",102,0)
AVHLPTXT() ;
"RTN","XUS2",103,0)
 Q "Enter 6-20 characters mixed alphanumeric ('^', ';', ':' not allowed)."
"RTN","XUSCLEAN")
0^3^B10489199
"RTN","XUSCLEAN",1,0)
XUSCLEAN ;SF/STAFF - CLEANUP BEFORE EXIT ;6/17/97  16:11
"RTN","XUSCLEAN",2,0)
 ;;8.0;KERNEL;**13,59**;Jul 10, 1995
"RTN","XUSCLEAN",3,0)
H ;;Exit point for all applications
"RTN","XUSCLEAN",4,0)
 LOCK  ;Unlock any locks
"RTN","XUSCLEAN",5,0)
 S U="^"
"RTN","XUSCLEAN",6,0)
 I $D(^XUTL("XQ",$J,"T")) S %XQEA=^("T") F %XQEA1=%XQEA:-1:1 I $D(^XUTL("XQ",$J,%XQEA1)),$P(^(%XQEA1),U,16) S %XQEA2=+^(%XQEA1) I $D(^DIC(19,%XQEA2,15)),$L(^(15)) X ^(15) ;Unwind Exit Actions
"RTN","XUSCLEAN",7,0)
 K %XQEA,%XQEA1,%XQEA2
"RTN","XUSCLEAN",8,0)
 G:$D(IO("C")) H2
"RTN","XUSCLEAN",9,0)
 I $S($D(IOST)[0:1,IOST="":1,IOST["C-":1,1:0),'$D(XUERF) W !!!!!!!!!!!!!!!!!!!!!!!
"RTN","XUSCLEAN",10,0)
 I $D(XQNOLOG) W !!,"==>  Sorry, all activity on this volume set is being halted!  Try again later.",*7,*7,*7,!!!!
"RTN","XUSCLEAN",11,0)
 W !!,"Halting at " S X=$P($H,",",2),Y=$E(X#3600\60+100,2,3),X=X\3600,Z=0 S:X>11 Z=1 S:'X X=12 S:X>12 X=X-12 W X,":",Y," ",$S(Z:"pm",1:"am")
"RTN","XUSCLEAN",12,0)
 D:$D(DUZ("NEWCODE")) NEWCODE
"RTN","XUSCLEAN",13,0)
H2 ;No talking after this point
"RTN","XUSCLEAN",14,0)
 D C,XUTL
"RTN","XUSCLEAN",15,0)
 ;K ^DISV($S($D(DUZ)#2:+DUZ,1:0))
"RTN","XUSCLEAN",16,0)
 S:'($D(XQXFLG)#2) XQXFLG="" I $D(XQCH),XQCH="HALT" S $P(XQXFLG,U,3)=""
"RTN","XUSCLEAN",17,0)
 I ($D(XQNOHALT)#2)!($D(ZTQUEUED)#2)!($P(XQXFLG,U,3)="XUP") K XQNOHALT,XQXFLG Q  ;Return to REST^XQ12, ^XUP or Taskman.
"RTN","XUSCLEAN",18,0)
 I $D(^%ZIS("H"))#2 X ^("H")
"RTN","XUSCLEAN",19,0)
 G HALT^ZU ;Go to ZU to do final halt.
"RTN","XUSCLEAN",20,0)
C ;
"RTN","XUSCLEAN",21,0)
 N XUDEV
"RTN","XUSCLEAN",22,0)
 S XUDEV=$S($D(^XUTL("XQ",$J,"IOS")):^("IOS"),1:"")
"RTN","XUSCLEAN",23,0)
 D ^%ZISC,BYE
"RTN","XUSCLEAN",24,0)
 Q
"RTN","XUSCLEAN",25,0)
BYE ;Set flags to show user has left. Called from anyplace the user exits
"RTN","XUSCLEAN",26,0)
 N DA,DIK,R0,%
"RTN","XUSCLEAN",27,0)
 I $G(^VA(200,+$G(DUZ),1.1)) S $P(^VA(200,DUZ,1.1),"^",3)=0
"RTN","XUSCLEAN",28,0)
 S DA=+$G(^XUTL("XQ",$J,0))
"RTN","XUSCLEAN",29,0)
 I $D(^XUSEC(0,DA,0)) D
"RTN","XUSCLEAN",30,0)
 . S R0=^(0),$P(^(0),"^",4)=$$NOW^XLFDT,DIK="^XUSEC(0,",DIK(1)="3" D EN1^DIK
"RTN","XUSCLEAN",31,0)
 . I $G(IO("IP"))]"",$P(R0,"^",13)]"" S %=$$CMD^XWBCAGNT(.R0,"XWB DELETE HANDLE",$P(R0,"^",13))
"RTN","XUSCLEAN",32,0)
 K ^XUTL("XQ",$J)
"RTN","XUSCLEAN",33,0)
 Q
"RTN","XUSCLEAN",34,0)
XUTL ;Cleanup Globals
"RTN","XUSCLEAN",35,0)
 N XQN D CLEAN^DILF ;Cleanup FM too.
"RTN","XUSCLEAN",36,0)
 K ^XUTL($J),^UTILITY($J),^TMP($J)
"RTN","XUSCLEAN",37,0)
 S XQN=" " F  S XQN=$O(^XUTL(XQN)) Q:XQN=""  K:"^XQO^XGATR^XGKB^"'[XQN ^XUTL(XQN,$J)
"RTN","XUSCLEAN",38,0)
 S XQN=" " F  S XQN=$O(^TMP(XQN)) Q:XQN=""  K ^TMP(XQN,$J)
"RTN","XUSCLEAN",39,0)
 S XQN=" " F  S XQN=$O(^UTILITY(XQN)) Q:XQN=""  K:"^ROU^GLO^LRLTR"'[XQN ^UTILITY(XQN,$J)
"RTN","XUSCLEAN",40,0)
 K ^XUTL("ZISPARAM",$I)
"RTN","XUSCLEAN",41,0)
 Q
"RTN","XUSCLEAN",42,0)
NEWCODE ;Ask user to verify new code
"RTN","XUSCLEAN",43,0)
 W !!,*7,"But, as I recall...",!,"You've changed your VERIFY CODE during this session.",!,"Please remember it for next time." H 4
"RTN","XUSCLEAN",44,0)
 ;W !!,*7,"But, as I recall...",!,"You've changed your VERIFY CODE during this session." S XUK=3,XUH=DUZ("NEWCODE"),XUNC=1,DA=DUZ X ^%ZOSF("EOFF") D NEWCODE^XUS2
"RTN","XUSCLEAN",45,0)
 Q
"RTN","XUSCLEAN",46,0)
KILL ;This is what others want. RWF
"RTN","XUSCLEAN",47,0)
 K %1,%2,%3 S %3=+$G(^XUTL("XQ",$J,"T"))
"RTN","XUSCLEAN",48,0)
 F %1=%3:-1:1 S %2=+$G(^XUTL("XQ",$J,%1)),%2=$G(^DIC(19,%2,"NOKILL")) I %2]"" N @%2
"RTN","XUSCLEAN",49,0)
KILL1 ;To clean up ALL but kernel variables.
"RTN","XUSCLEAN",50,0)
 N KWAPI,XGWIN,XGDI,XGEVENT
"RTN","XUSCLEAN",51,0)
 N XQAEXIT,XQAUSER,XQX1,XQAKILL,XQAID
"RTN","XUSCLEAN",52,0)
 K (DUZ,DTIME,DT,DISYS,IO,IOBS,IOF,IOM,ION,IOSL,IOST,IOT,IOS,IOXY,U,XRTL,%ZH0,XQVOL,XQY,XQY0,XQDIC,XQPSM,XQPT,XQAUDIT,XQXFLG,ZTSTOP,ZTQUEUED,ZTREQ)
"RTN","XUSCLEAN",53,0)
 K IO("C"),IO("Q")
"RTN","XUSCLEAN",54,0)
 Q
"RTN","XUSCLEAN",55,0)
XMR ;Entry point from XUS to DO xmr and cleanup after.
"RTN","XUSCLEAN",56,0)
 D NEXT^XUS1 S XQXFLG="",XQXFLG("HALT")=1 G H2
"RTN","XUSRB")
0^1^B12902600
"RTN","XUSRB",1,0)
XUSRB ;ISCSF/RWF - Request Broker ;08/22/97  08:38
"RTN","XUSRB",2,0)
 ;;8.0;KERNEL;**11,16,28,32,59**;Jul 05, 1995
"RTN","XUSRB",3,0)
 Q  ;No entry from top
"RTN","XUSRB",4,0)
 ;
"RTN","XUSRB",5,0)
 ;DATA BROKER calls, First parameter is always call-by-reference
"RTN","XUSRB",6,0)
VALIDAV(RET,AVCODE) ;Check a users access
"RTN","XUSRB",7,0)
 ;Return R(0)=DUZ, R(1)=(0=OK, 1,2...=Can't sign-on for some reason)
"RTN","XUSRB",8,0)
 ; R(2)=verify needs changing, R(3)=Message, R(4)=0, R(5)=msg cnt, R(5+n)
"RTN","XUSRB",9,0)
 I $$NEWERR^%ZTER N $ETRAP S $ETRAP=""
"RTN","XUSRB",10,0)
 N X,XUSER,XUF,XUNOW,XUDEV,XUM,XUMSG,%1,VCOK K DUZ
"RTN","XUSRB",11,0)
 S RET(0)=0,RET(5)=0
"RTN","XUSRB",12,0)
 S DUZ=0,DUZ(0)="",VCOK=0 D NOW
"RTN","XUSRB",13,0)
 S XOPT=$$STATE^XWBSEC("XUS XOPT"),XUT=$$STATE^XWBSEC("XUS CNT")
"RTN","XUSRB",14,0)
 S XUF=0,XUM=0,XUMSG=0,DUZ=$$CHECKAV^XUS($$DECRYP^XUSRB1(AVCODE))
"RTN","XUSRB",15,0)
 S XUT=$G(XUT)+1 D SET^XWBSEC("XUS CNT",XUT)
"RTN","XUSRB",16,0)
 I XUT>$P(XOPT,U,2) S XUM=1,XUMSG=7 H 5 G VAX
"RTN","XUSRB",17,0)
 S XUMSG=$$UVALID^XUS() G:XUMSG VAX
"RTN","XUSRB",18,0)
 S VCOK=$$VCVALID()
"RTN","XUSRB",19,0)
 I DUZ>0 S XUMSG=$$POST(1)
"RTN","XUSRB",20,0)
 I 'XUMSG,VCOK S XUMSG=12 D SET^XWBSEC("XUS DUZ",DUZ) ;Need to change VC
"RTN","XUSRB",21,0)
VAX S:XUMSG>0 DUZ=0 D:DUZ>0 POST2
"RTN","XUSRB",22,0)
 S RET(0)=DUZ,RET(1)=XUM,RET(2)=VCOK,RET(3)=$S(XUMSG:$P($T(@XUMSG^XUS3),";",4),1:""),RET(4)=0
"RTN","XUSRB",23,0)
 Q
"RTN","XUSRB",24,0)
 ;
"RTN","XUSRB",25,0)
NOW S U="^",XUNOW=$$NOW^XLFDT(),DT=$P(XUNOW,"."),XUDEV=0
"RTN","XUSRB",26,0)
 Q
"RTN","XUSRB",27,0)
 ;
"RTN","XUSRB",28,0)
INTRO(RET) ;Return INTRO TEXT.
"RTN","XUSRB",29,0)
 D INTRO^XUS1A("RET")
"RTN","XUSRB",30,0)
 Q
"RTN","XUSRB",31,0)
 ;
"RTN","XUSRB",32,0)
VCVALID() ;Return 1 if the Verify code needs changing.
"RTN","XUSRB",33,0)
 Q:'$G(DUZ) 1
"RTN","XUSRB",34,0)
 Q:$P($G(^VA(200,DUZ,.1)),U,2)="" 1
"RTN","XUSRB",35,0)
 Q $G(^VA(200,DUZ,.1))+$P(^XTV(8989.3,1,"XUS"),"^",15)'>(+$H)
"RTN","XUSRB",36,0)
 ;
"RTN","XUSRB",37,0)
CVC(RET,XU1) ;change VC, Return 0 = success
"RTN","XUSRB",38,0)
 N XU2,XU3,XU4 S RET(0)=99,XU4=$$STATE^XWBSEC("XUS DUZ") S:(DUZ=0)&(XU4>0) DUZ=XU4 Q:$G(DUZ)'>0
"RTN","XUSRB",39,0)
 S U="^",XU2=$P(XU1,U,2),XU3=$P(XU1,U,3),XU1=$P(XU1,U)
"RTN","XUSRB",40,0)
 S XU1=$$DECRYP^XUSRB1(XU1),XU2=$$DECRYP^XUSRB1(XU2),XU3=$$DECRYP^XUSRB1(XU3)
"RTN","XUSRB",41,0)
 S XU3=$$BRCVC^XUS2(XU1,XU2),RET(0)=+XU3,RET(1)=$P(XU3,U,2,9)
"RTN","XUSRB",42,0)
 I 'XU3,XU4 D KILL^XWBSEC("XUS DUZ"),POST2
"RTN","XUSRB",43,0)
 Q
"RTN","XUSRB",44,0)
 ;
"RTN","XUSRB",45,0)
POST(CVC) ;Finish setup partition, I CVC don't log get
"RTN","XUSRB",46,0)
 N X,XUM S IO(0)=IO
"RTN","XUSRB",47,0)
 K ^UTILITY($J),^TMP($J),^XUTL("XQ",$J)
"RTN","XUSRB",48,0)
 I '$D(USER(0)),DUZ D USER^XUS(DUZ)
"RTN","XUSRB",49,0)
 S XUM=$$USER^XUS1A Q:XUM>0 XUM ;User can't sign on for some reason.
"RTN","XUSRB",50,0)
 S RET(5)=0 ;The next line sends the post sign-on msg
"RTN","XUSRB",51,0)
 F %=1:1 Q:'$D(XUTEXT(%))  S RET(5+%)=$E(XUTEXT(%),2,256),RET(5)=%
"RTN","XUSRB",52,0)
 S RET(5)=0 ;This line stops the display of the msg. Remove this line to allow.
"RTN","XUSRB",53,0)
 D:'$G(CVC) POST2
"RTN","XUSRB",54,0)
 Q 0
"RTN","XUSRB",55,0)
POST2 D:'$D(XUNOW) NOW
"RTN","XUSRB",56,0)
 D DUZ^XUS1A,LOG^XUS1,SAVE^XUS1,ABT^XQ12
"RTN","XUSRB",57,0)
 D KILL^XWBSEC("XUS CNT"),KILL^XWBSEC("XUS XOPT")
"RTN","XUSRB",58,0)
 K XUTEXT,XOPT,XUEON,XUEOFF,XUTT,XUDEV,XUSER
"RTN","XUSRB",59,0)
 Q
"RTN","XUSRB",60,0)
 ;
"RTN","XUSRB",61,0)
LOGOUT ;Finish logout of user.
"RTN","XUSRB",62,0)
 D BYE^XUSCLEAN
"RTN","XUSRB",63,0)
 Q
"RTN","XUSRB",64,0)
 ;
"RTN","XUSRB",65,0)
SETUP(RET) ;sets up environment for GUI signon
"RTN","XUSRB",66,0)
 K DUZ U XWBTDEV
"RTN","XUSRB",67,0)
 S IO("IP")=XWBTIP,IO("CLNM")=$$LOW^XLFSTR($G(XWBCLMAN)) D ZIO^%ZIS4
"RTN","XUSRB",68,0)
 D SET1^XUS(0),SET^XWBSEC("XUS XOPT",XOPT),SET^XWBSEC("XUS CNT",0)
"RTN","XUSRB",69,0)
 ;0=server name, 1=volume, 2=uci, 3=device, 4=# attempts, 5=skip signon-screen
"RTN","XUSRB",70,0)
 S RET(0)=$P(XUENV,U,3),RET(1)=$P(XUVOL,U),RET(2)=XUCI
"RTN","XUSRB",71,0)
 S RET(3)=$I,RET(4)=$P(XOPT,U,2),RET(5)=0
"RTN","XUSRB",72,0)
 ;Signal sign-on check only for >v1
"RTN","XUSRB",73,0)
 I IO("CLNM")]"" S DUZ=$$AUTOXWB^XUS1B() ;Only check for 1.1 CL.
"RTN","XUSRB",74,0)
 I DUZ>0 D NOW S XUMSG=$$POST(0) I XUMSG>0 S DUZ=0
"RTN","XUSRB",75,0)
 S:DUZ>0 RET(5)=1
"RTN","XUSRB",76,0)
 Q
"RTN","XUSRB",77,0)
 ;
"RTN","XUSRB",78,0)
OWNSKEY(RET,LIST) ;Does user have Key
"RTN","XUSRB",79,0)
 N I,K S I=""
"RTN","XUSRB",80,0)
 I $G(DUZ)'>0 S RET(0)=0 Q
"RTN","XUSRB",81,0)
 I $O(LIST(""))="" S RET(0)=$$KCHK(LIST) Q
"RTN","XUSRB",82,0)
 F  S I=$O(LIST(I)) Q:I=""  S RET(I)=$$KCHK(LIST(I))
"RTN","XUSRB",83,0)
 Q
"RTN","XUSRB",84,0)
KCHK(%) Q $S($G(DUZ)>0:$D(^XUSEC(%,DUZ)),1:0) ;Key Check
"RTN","XUSRB",85,0)
 ;
"RTN","XUSRB",86,0)
AVHELP(RET) ; send access/verify code instructions.
"RTN","XUSRB",87,0)
 S RET(0)=$$AVHLPTXT^XUS2()
"RTN","XUSRB",88,0)
 Q
"RTN","XUSRB",89,0)
 ;
"RTN","XUSRB",90,0)
OPTACCES(RET,USER,OPTIONS,MODE) ;Checks or sets user's access for passed in options
"RTN","XUSRB",91,0)
 S MODE="CHECK" ;only CHECK mode supported for now
"RTN","XUSRB",92,0)
 N I S I=""
"RTN","XUSRB",93,0)
 I $G(USER)'>0 S RET(0)=0 Q
"RTN","XUSRB",94,0)
 F  S I=$O(OPTIONS(I)) Q:I=""  S RET(I)=$$CHK^XQCS(USER,OPTIONS(I))=1
"RTN","XUSRB",95,0)
 Q
"RTN","XUVERIFY")
0^12^B7642643
"RTN","XUVERIFY",1,0)
XUVERIFY ;SF/MUS - CHECKS YOUR ACCESS AND VERIFY CODES ;7/24/97  14:15
"RTN","XUVERIFY",2,0)
 ;;8.0;KERNEL;**2,26,59**;Jul 10, 1995
"RTN","XUVERIFY",3,0)
 ; The variables % and %DUZ must be set before running this
"RTN","XUVERIFY",4,0)
 ; program   % - may equal "A","V" OR both "AV"
"RTN","XUVERIFY",5,0)
 ;        %DUZ - must equal the users DUZ
"RTN","XUVERIFY",6,0)
 ;
"RTN","XUVERIFY",7,0)
 ; After the program is run % will return -1,0,1,2
"RTN","XUVERIFY",8,0)
 ; if %=-1 an "^" was entered  if %=0 an "?" was entered
"RTN","XUVERIFY",9,0)
 ; if %=1 the Code typed was correct
"RTN","XUVERIFY",10,0)
 ; if %=2 the Code was typed incorrectly
"RTN","XUVERIFY",11,0)
 ;
"RTN","XUVERIFY",12,0)
 I '$D(%)!'$D(%DUZ) S %=2 G KIL
"RTN","XUVERIFY",13,0)
 I '$D(^VA(200,%DUZ,0)) S %=2 G KIL
"RTN","XUVERIFY",14,0)
 G:%["A"!(%["V") CHECK S %=2 G KIL
"RTN","XUVERIFY",15,0)
CHECK S %R=$S(%="V":"VER",1:"ACC") D @%R
"RTN","XUVERIFY",16,0)
 I X["^" S %=-1
"RTN","XUVERIFY",17,0)
 I X?1.4"?" S %=0
"RTN","XUVERIFY",18,0)
KIL X ^%ZOSF("EON") K X,Y,Z,%AC,%VC,%R,I
"RTN","XUVERIFY",19,0)
 Q
"RTN","XUVERIFY",20,0)
ACC X ^%ZOSF("EOFF") R !,"ACCESS CODE: ",X:60 Q:X["^"!(X?1.4"?")  D LC^XUS:X?.E1L.E,^XUSHSH S %AC=X I %AC'=$P(^VA(200,%DUZ,0),"^",3) S %AC=2 D:%["V" VER S %=%AC Q
"RTN","XUVERIFY",21,0)
 S %AC=1 D:%["V" VER S:%'=2 %=%AC Q
"RTN","XUVERIFY",22,0)
VER X ^%ZOSF("EOFF") R !,"VERIFY CODE: ",X:60 Q:X["^"!(X?1.4"?")  D LC^XUS:X?.E1L.E,^XUSHSH S %VC=X I %VC'=$P(^VA(200,%DUZ,.1),"^",2) S %=2 Q
"RTN","XUVERIFY",23,0)
 S %=1
"RTN","XUVERIFY",24,0)
 Q
"RTN","XUVERIFY",25,0)
XUS2 ;MOVED FROM XUS2, TO CHECK OR RETURN USER ATTRIBUTES
"RTN","XUVERIFY",26,0)
 S:$D(XUS)[0 XUS="" D USER:XUS["A",USER:$D(DUZ)[0,EDIT:XUS["E"
"RTN","XUVERIFY",27,0)
 K XUS Q
"RTN","XUVERIFY",28,0)
USER ;ASK FOR USER ID
"RTN","XUVERIFY",29,0)
 S DUZ=0,DUZ(0)="",DUZ(1)="",XUC="",XUV="" X ^%ZOSF("EOFF") R !,"ACCESS CODE: ",X:60 I X?.ANP&(X<11) D LC^XUS S XUC=X
"RTN","XUVERIFY",30,0)
 R !,"VERIFY CODE: ",X:60 I X?.ANP D LC^XUS S XUV=X
"RTN","XUVERIFY",31,0)
 X ^%ZOSF("EON") G USX:XUC="" S U="^"
"RTN","XUVERIFY",32,0)
 S Z=$O(^VA(200,"A",XUC,0)) G USX:Z<1 S Z0=$G(^VA(200,Z,0))
"RTN","XUVERIFY",33,0)
 G USX:'$D(^(.1)) IF $D(XUV) G USX:XUV'=$P(^(.1),U,2) ;Naked set previous line
"RTN","XUVERIFY",34,0)
 S DUZ=Z,DUZ(0)=$P(Z0,U,4)
"RTN","XUVERIFY",35,0)
USX K Z,Z0,X,XUC,XUV
"RTN","XUVERIFY",36,0)
 D CHK^XM:DUZ
"RTN","XUVERIFY",37,0)
 Q
"RTN","XUVERIFY",38,0)
 ;
"RTN","XUVERIFY",39,0)
EDIT ;
"RTN","XUVERIFY",40,0)
 S XUC="",DIE="^VA(200,",DA=$S($D(DUZX):DUZX,1:DUZ) D AUTO^XUS2:XUS["G"
"RTN","XUVERIFY",41,0)
 S DR=".01;2"_$S(XUS["M"&$L(XUC):"///"_XUC,1:"")_";11"_$S(XUS["M":";1;3:9;12:20;200:201",1:";1;13")
"RTN","XUVERIFY",42,0)
 D ^DIE K DUZX,DR,DIE Q
"RTN","XUVERIFY",43,0)
 ;
"RTN","XUVERIFY",44,0)
CHKAV(AVCODE) ;EF. Return IEN of the AVcode if good.
"RTN","XUVERIFY",45,0)
 N XUTT,XUF,XUSER,IEN
"RTN","XUVERIFY",46,0)
 S XUF=0,IEN=$$CHECKAV^XUS(AVCODE)
"RTN","XUVERIFY",47,0)
 I IEN>0,$$UVALID^XUS()>0 S IEN=0
"RTN","XUVERIFY",48,0)
 Q IEN
"RTN","XUVERIFY",49,0)
 ;
"RTN","XUVERIFY",50,0)
WITNESS(PREFIX,KEYS) ;EF. Return IEN of a person if they have A/V & KEYs.
"RTN","XUVERIFY",51,0)
 ; '^' out = -1, Fail = 0, OK IEN
"RTN","XUVERIFY",52,0)
 N X2,IEN,CNT,EXIT
"RTN","XUVERIFY",53,0)
 S EXIT=0,IEN=0,CNT=$P(^XTV(8989.3,1,"XUS"),U,2) ;# attemps
"RTN","XUVERIFY",54,0)
 X ^%ZOSF("EOFF")
"RTN","XUVERIFY",55,0)
 I $D(PREFIX) S:" "'[$E(PREFIX,$L(PREFIX)) PREFIX=PREFIX_" "
"RTN","XUVERIFY",56,0)
 F CNT=1:1:CNT D  Q:EXIT
"RTN","XUVERIFY",57,0)
 . S X2=$$ASKAV^XUS($G(PREFIX))
"RTN","XUVERIFY",58,0)
 . S IEN=$$CHKAV(X2),EXIT=(IEN>0) S:IEN<0 EXIT=1
"RTN","XUVERIFY",59,0)
 . I IEN>0,$L($G(KEYS)) S EXIT=0 F %=1:1 S X=$P(KEYS,"^",%) Q:X=""  S:$D(^XUSEC(X,IEN)) EXIT=1
"RTN","XUVERIFY",60,0)
 . Q
"RTN","XUVERIFY",61,0)
 X ^%ZOSF("EON")
"RTN","XUVERIFY",62,0)
 Q:'EXIT 0 Q IEN
"RTN","ZIS4MSM")
0^7^B15650959
"RTN","ZIS4MSM",1,0)
%ZIS4 ;SF/GFT,RWF,MVB - DEVICE HANDLER SPOOL SPECIFIC CODE(MSM) ;02/11/97  11:02
"RTN","ZIS4MSM",2,0)
 ;;8.0;KERNEL;**23,36,49,59**;JUL 03, 1995
"RTN","ZIS4MSM",3,0)
 ;
"RTN","ZIS4MSM",4,0)
OPEN G OPN2:$D(IO(1,IO))
"RTN","ZIS4MSM",5,0)
 S POP=0 D OP1 S:'POP IO(1,IO)="" G NOPEN:'$D(IO(1,IO))
"RTN","ZIS4MSM",6,0)
OPN2 I $D(%ZISHP),'$D(IOP) W !,*7," Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4MSM",7,0)
 Q
"RTN","ZIS4MSM",8,0)
NOPEN I %IS'["D",$D(%ZISHP)!(%ZISHG]"") S POP=1 Q
"RTN","ZIS4MSM",9,0)
 I '$D(IOP) W *7,"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4MSM",10,0)
 S POP=1 Q
"RTN","ZIS4MSM",11,0)
 Q
"RTN","ZIS4MSM",12,0)
OP1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",13,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4MSM",14,0)
 O IO::%ZISTO S:'$T POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4MSM",15,0)
OPNERR S POP=1,IO("ERROR")=$ZE,IO("LASTERR")=$ZE Q
"RTN","ZIS4MSM",16,0)
 ;
"RTN","ZIS4MSM",17,0)
O I $P($ZV,"Version ",2)'<3 D:%IS["L" ZIO
"RTN","ZIS4MSM",18,0)
 ;D:$D(%ZISIOS) ZISLPC^%ZIS Q:'%ZISB  ;No longer called in Kernel v8.
"RTN","ZIS4MSM",19,0)
OPRTPORT I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX
"RTN","ZIS4MSM",20,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%IS("HFSIO")),$D(%IS("IOPAR")),%IS("HFSIO")]"" S IO=%IS("HFSIO"),%ZISOPAR=%IS("IOPAR")
"RTN","ZIS4MSM",21,0)
 S %A=$S(%ZISOPAR]"":%ZISOPAR,%ZTYPE["TRM":+%Z91,1:"")
"RTN","ZIS4MSM",22,0)
 S %A=%A_$S(%A["):":"",%ZTYPE["OTH"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO),%A=""""_IO_""""_$E(":",%A]"")_%A
"RTN","ZIS4MSM",23,0)
 D O1 I POP W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4MSM",24,0)
 S IO(1,IO)=""
"RTN","ZIS4MSM",25,0)
 I %ZTYPE="HFS" D  Q:POP
"RTN","ZIS4MSM",26,0)
 .N % S %=$I
"RTN","ZIS4MSM",27,0)
 .U IO S:$ZA<0 POP=1
"RTN","ZIS4MSM",28,0)
 .U:'$D(ZTQUEUED) % I POP C:IO]"" IO K:IO]"" IO(1,IO)
"RTN","ZIS4MSM",29,0)
 .I POP,'$D(IOP),'$D(ZTQUEUED) W !,?5,*7,"[FILE NOT FOUND]" Q
"RTN","ZIS4MSM",30,0)
 N DX,DY S (DX,DY)=0
"RTN","ZIS4MSM",31,0)
 U IO X:$D(^%ZOSF("XY"))&'(IO=IO(0)&'$D(ZTQUEUED)&'$D(IO("S"))) ^("XY")
"RTN","ZIS4MSM",32,0)
 I %ZISUPAR]"" S %A1=""""_IO_""":"_%ZISUPAR U @%A1
"RTN","ZIS4MSM",33,0)
 U:%IS'[0 IO(0)
"RTN","ZIS4MSM",34,0)
 G OXECUTE^%ZIS6
"RTN","ZIS4MSM",35,0)
 ;
"RTN","ZIS4MSM",36,0)
O1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",37,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4MSM",38,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZIS4MSM",39,0)
 S IO("ERROR")="" Q
"RTN","ZIS4MSM",40,0)
 ;
"RTN","ZIS4MSM",41,0)
ZIO N % S (IO("ZIO"),%)=$ZDEV($I),%=$S(%?1.3N1P.E:$TR(%,"~",":"),1:%)
"RTN","ZIS4MSM",42,0)
 S:(%?1.3N1P1.3N1P.E)&'$D(IO("IP")) IO("IP")=$TR(%,"~",":") S:(%?1A.ANP1"~"1.4N)&'$D(IO("CLNM")) IO("CLNM")=$TR($$LOW^%ZIS1(%),"~",":")
"RTN","ZIS4MSM",43,0)
 Q
"RTN","ZIS4MSM",44,0)
 ;
"RTN","ZIS4MSM",45,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file name.
"RTN","ZIS4MSM",46,0)
 I $D(ZISDA) W:'$D(IOP) !?5,*7,"You may not Spool the printing of a Spool document" G N
"RTN","ZIS4MSM",47,0)
 I $D(DUZ)[0 W:'$D(IOP) !,"Must be a valid user." G N
"RTN","ZIS4MSM",48,0)
 S ZOSFV=($P($ZV,"Version ",2)'<2)
"RTN","ZIS4MSM",49,0)
R S %ZY=-1 D NEWDOC^ZISPL1 G N:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1) I '%ZISB!$D(IO("Q")) S:'ZOSFV IO=51 G OK
"RTN","ZIS4MSM",50,0)
 I '$P(%ZY,"^",3),%ZFN D SPL3 G N:'%ZFN,DOC
"RTN","ZIS4MSM",51,0)
 S %ZFN=-1 D SPL2 G:%ZFN<0 N S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4MSM",52,0)
DOC S IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA,IOF="#"
"RTN","ZIS4MSM",53,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4MSM",54,0)
OK K %ZDA,%ZFN Q
"RTN","ZIS4MSM",55,0)
N K %ZDA,%ZFN,IO("DOC") S POP=1 Q
"RTN","ZIS4MSM",56,0)
 ;
"RTN","ZIS4MSM",57,0)
SPL2 O 2:1 G SPL5:$ZA<0,SPL5:$ZC S %ZFN=$ZA#256 S IO(1,2)="",IO(1,2,"%ZFN")=%ZFN Q
"RTN","ZIS4MSM",58,0)
 ;
"RTN","ZIS4MSM",59,0)
SPL3 Q:$D(IO(1,2))#2  O 2:%ZFN+256 G:$ZA<0 SPL5:$ZA<0,SPL5:$ZC S IO(1,2)="",IO(1,2,"%ZFN")=%ZFN Q
"RTN","ZIS4MSM",60,0)
SPL4 E  G SPL5
"RTN","ZIS4MSM",61,0)
 ;U IO S %ZA=$ZA U:%IS'[0 IO(0) I %ZA<0 G SPL5
"RTN","ZIS4MSM",62,0)
 Q
"RTN","ZIS4MSM",63,0)
SPL5 W:'$D(IOP)&'$D(ZTQUEUED) !?5,*7,"Couldn't open the spool file." S %ZFN=-1 Q
"RTN","ZIS4MSM",64,0)
 ;
"RTN","ZIS4MSM",65,0)
CLOSE N %Z1 S ZOSFV=($P($ZV,"Version ",2)'<2)
"RTN","ZIS4MSM",66,0)
 C 2 K IO(1,2)
"RTN","ZIS4MSM",67,0)
 D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4MSM",68,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4MSM",69,0)
 S IO=2,%ZFN=$P(%ZS,"^",2) D SPL3 Q:%ZFN'>0  U IO S %ZCR=$C(13),%Y=""
"RTN","ZIS4MSM",70,0)
 G V2CL1^%ZOSV
"RTN","ZIS4MSM",71,0)
 Q  ;Send error up
"RTN","ZIS4MSM",72,0)
CL2 I %Z1<(%+1) S %=%+1,^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZIS4MSM",73,0)
 I %2[$C(12) S %=%+1,^XMBS(3.519,XMZ,2,%,0)="|TOP|"
"RTN","ZIS4MSM",74,0)
 S %=%+1,^XMBS(3.519,XMZ,2,%,0)=%2 Q
"RTN","ZIS4MSM",75,0)
 ;
"RTN","ZIS4MSM",76,0)
HFS G HFS^%ZISF
"RTN","ZIS4MSM",77,0)
REWMT(IO,IOPAR) ;Rewind Magtape
"RTN","ZIS4MSM",78,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",79,0)
 U IO W *5
"RTN","ZIS4MSM",80,0)
 Q 1
"RTN","ZIS4MSM",81,0)
REWSDP(IO,IOPAR) ;Rewind Sequential Block Processor
"RTN","ZIS4MSM",82,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",83,0)
 U IO:IOPAR
"RTN","ZIS4MSM",84,0)
 Q 1
"RTN","ZIS4MSM",85,0)
REWHFS(IO,IOPAR) ;Rewind Host File.
"RTN","ZIS4MSM",86,0)
REW1 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",87,0)
 U IO:(::0)
"RTN","ZIS4MSM",88,0)
 Q 1
"RTN","ZIS4MSM",89,0)
REWERR ;Error encountered.
"RTN","ZIS4MSM",90,0)
 Q 0
"RTN","ZIS4ONT")
0^13^B14833136
"RTN","ZIS4ONT",1,0)
%ZIS4 ;SFISC/GFT,RWF,AC - DEVICE HANDLER SPOOL SPECIFIC CODE (OpenM/WNT) ;9/4/97  16:20
"RTN","ZIS4ONT",2,0)
 ;;8.0;KERNEL;**34,59**;Jul 10, 1995
"RTN","ZIS4ONT",3,0)
 ;
"RTN","ZIS4ONT",4,0)
OPEN G OPN2:$D(IO(1,IO))
"RTN","ZIS4ONT",5,0)
 S POP=0 D OP1 S:'POP IO(1,IO)="" G NOPEN:'$D(IO(1,IO))
"RTN","ZIS4ONT",6,0)
OPN2 I $D(%ZISHP),'$D(IOP) W !,*7," Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4ONT",7,0)
 Q
"RTN","ZIS4ONT",8,0)
NOPEN I %IS'["D",$D(%ZISHP)!(%ZISHG]"") S POP=1 Q
"RTN","ZIS4ONT",9,0)
 I '$D(IOP) W *7,"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4ONT",10,0)
 K:%E'=%H ^XUTL("ZISPARAM",IO)
"RTN","ZIS4ONT",11,0)
 S POP=1 Q
"RTN","ZIS4ONT",12,0)
 Q
"RTN","ZIS4ONT",13,0)
OP1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4ONT",14,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4ONT",15,0)
 O IO::%ZISTO S:'$T POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4ONT",16,0)
OPNERR S POP=1,IO("LASTERR")=$G(IO("ERROR")),IO("ERROR")=$ZE,$EC="" Q
"RTN","ZIS4ONT",17,0)
 ;
"RTN","ZIS4ONT",18,0)
O D:%IS["L" ZIO
"RTN","ZIS4ONT",19,0)
OPRTPORT I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX
"RTN","ZIS4ONT",20,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%IS("HFSIO")),$D(%IS("IOPAR")),%IS("HFSIO")]"" S IO=%IS("HFSIO"),%ZISOPAR=%IS("IOPAR")
"RTN","ZIS4ONT",21,0)
 S %A=$S(%ZISOPAR]"":%ZISOPAR,%ZTYPE'["TRM":"",%ZISIOST?1"C".E:"("_+%Z91_":""C"")",%ZISIOST?1"PK".E:"("_+%Z91_":""P"")",1:+%Z91)
"RTN","ZIS4ONT",22,0)
 S %A=%A_$S(%A["):":"",%ZTYPE["OTH"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO),%A=""""_IO_""""_$E(":",%A]"")_%A
"RTN","ZIS4ONT",23,0)
 D O1 I POP W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4ONT",24,0)
 S IO(1,IO)="" U IO S:'(IO=IO(0)&'$D(ZTQUEUED)) $X=0,$Y=0 U:%IS'[0 IO(0) I %ZISUPAR]"" S %A1=""""_IO_""":"_%ZISUPAR U @%A1 U:%IS'[0 IO(0)
"RTN","ZIS4ONT",25,0)
 G OXECUTE^%ZIS6
"RTN","ZIS4ONT",26,0)
 ;
"RTN","ZIS4ONT",27,0)
O1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4ONT",28,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4ONT",29,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZIS4ONT",30,0)
 S IO("ERROR")="" Q
"RTN","ZIS4ONT",31,0)
ZIO N % S %=$ZIO,IO("ZIO")=$I
"RTN","ZIS4ONT",32,0)
 S:'$D(IO("IP"))&($E($I,2,4)="TNT")&($P(%,"/")?1.3N1"."1.3N1"."1.3N1"."1.3N) IO("IP")=$P(%,"/")
"RTN","ZIS4ONT",33,0)
 Q
"RTN","ZIS4ONT",34,0)
 ;
"RTN","ZIS4ONT",35,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file num.
"RTN","ZIS4ONT",36,0)
 I '$D(^XMB(3.51,0)) W:'$D(IOP) !?5,"The spooler files are not setup in this account." G N
"RTN","ZIS4ONT",37,0)
 I $D(ZISDA) W:'$D(IOP) !?5,*7,"You may not Spool the printing of a Spool document" G N
"RTN","ZIS4ONT",38,0)
R S %ZY=-1 D NEWDOC^ZISPL1:$D(DUZ)=11 G N:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1) G OK:$D(IO("Q"))
"RTN","ZIS4ONT",39,0)
 G:'%ZISB OK I '$P(%ZY,"^",3),%ZFN D SPL3 G N:%ZFN<0,DOC
"RTN","ZIS4ONT",40,0)
 F %ZFN=1:1 I '$D(^XMB(3.51,"C",%ZFN))!$D(^(%ZFN,%ZDA)) Q:%ZFN<256  W:'$D(IOP) *7,"  DELETE SOME OTHER DOCUMENT!" G N
"RTN","ZIS4ONT",41,0)
 D SPL2 S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4ONT",42,0)
DOC S IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA
"RTN","ZIS4ONT",43,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4ONT",44,0)
OK K %ZDA,%ZFN Q
"RTN","ZIS4ONT",45,0)
N K %ZDA,%ZFN,IO("DOC") S POP=1 Q
"RTN","ZIS4ONT",46,0)
SPL2 O IO:(%ZFN:0) S IO(1,IO)="",^SPOOL(0,IO("DOC"),%ZFN)="",^SPOOL(%ZFN,0)=IO("DOC")_"{"_$H Q
"RTN","ZIS4ONT",47,0)
SPL3 G SPL4:'$D(^SPOOL(%ZFN,2147483647)) O IO:(%ZFN:$P(^(2147483647),"{",3)) K ^(2147483647) S IO(1,IO)="" Q
"RTN","ZIS4ONT",48,0)
SPL4 W:'$D(IOP) !,"Spool file already open" S %ZFN=-1 Q
"RTN","ZIS4ONT",49,0)
CLOSE N %Z1 C:(IO=2) IO K:(IO=2) IO(1,IO) D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4ONT",50,0)
 S %ZFN=$P(%ZS,"^",2),%ZCR=$C(13),%Y="",%=0,%3=$P(^SPOOL(%ZFN,2147483647),"{",3)-1
"RTN","ZIS4ONT",51,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4ONT",52,0)
 F %2=1:1:%3 S %X=^SPOOL(%ZFN,%2),%=%+1 D LIMIT:%Z1<% Q:%Z1<%  S ^XMBS(3.519,XS,2,%,0)=$S($C(13,10)[%X:"",%X[$C(12):"|TOP|",1:$P(%X,$C(13),1))
"RTN","ZIS4ONT",53,0)
 K ^SPOOL(%ZFN),^SPOOL(0,$P(%ZS,U,1)),%Y,%X,%1,%2,%3 D CLOSE^ZISPL1
"RTN","ZIS4ONT",54,0)
 Q
"RTN","ZIS4ONT",55,0)
LIMIT S ^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZIS4ONT",56,0)
HFS G HFS^%ZISF
"RTN","ZIS4ONT",57,0)
REWMT(IO,IOPAR) ;Rewind Magtape
"RTN","ZIS4ONT",58,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4ONT",59,0)
 U IO W *5
"RTN","ZIS4ONT",60,0)
 Q 1
"RTN","ZIS4ONT",61,0)
REWSDP(IO,IOPAR) ;Rewind SDP
"RTN","ZIS4ONT",62,0)
 G REW1
"RTN","ZIS4ONT",63,0)
REWHFS(IO,IOPAR) ;Rewind Host File.
"RTN","ZIS4ONT",64,0)
REW1 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4ONT",65,0)
 C IO O IO:("RS"):1
"RTN","ZIS4ONT",66,0)
 Q 1
"RTN","ZIS4ONT",67,0)
REWERR ;Error encountered
"RTN","ZIS4ONT",68,0)
 Q 0
"RTN","ZIS4VXD")
0^6^B17418495
"RTN","ZIS4VXD",1,0)
%ZIS4 ;SFISC/GFT,RWF,MVB - DEVICE HANDLER SPOOL SPECIFIC CODE(VAX DSM) ;5/13/97  16:01
"RTN","ZIS4VXD",2,0)
 ;;8.0;KERNEL;**23,36,49,59**;JUL 03, 1995
"RTN","ZIS4VXD",3,0)
 ;
"RTN","ZIS4VXD",4,0)
OPEN G OPN2:$D(IO(1,IO))
"RTN","ZIS4VXD",5,0)
 S POP=0 D OP1 S:'POP IO(1,IO)="" G NOPEN:'$D(IO(1,IO))
"RTN","ZIS4VXD",6,0)
OPN2 I $D(%ZISHP),'$D(IOP) W !,*7," Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4VXD",7,0)
 Q
"RTN","ZIS4VXD",8,0)
NOPEN I %IS'["D",$D(%ZISHP)!(%ZISHG]"") S POP=1 Q
"RTN","ZIS4VXD",9,0)
 I '$D(IOP) W *7,"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4VXD",10,0)
 S POP=1 Q
"RTN","ZIS4VXD",11,0)
 Q
"RTN","ZIS4VXD",12,0)
OP1 S $ZT="OPNERR^%ZIS4",$ZE=""
"RTN","ZIS4VXD",13,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4VXD",14,0)
 O IO::%ZISTO S:'$T POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4VXD",15,0)
OPNERR S POP=1,IO("LASTERR")=$G(IO("ERROR")),IO("ERROR")=$ZE,$EC="" Q
"RTN","ZIS4VXD",16,0)
 ;
"RTN","ZIS4VXD",17,0)
O D:%IS["L" ZIO
"RTN","ZIS4VXD",18,0)
 ;D:$D(%ZISIOS) ZISLPC^%ZIS Q:'%ZISB  ;No longer called in Kernel v8.
"RTN","ZIS4VXD",19,0)
LCKGBL ;Lock Global
"RTN","ZIS4VXD",20,0)
 I %ZTYPE="CHAN" N % S %=$G(^%ZIS(1,+%E,"GBL")) I %]"" L @("+^"_%_":0") S:'$T POP=1 I POP W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4VXD",21,0)
OPRTPORT I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX
"RTN","ZIS4VXD",22,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%IS("HFSIO")),$D(%IS("IOPAR")),%IS("HFSIO")]"" S IO=%IS("HFSIO"),%ZISOPAR=%IS("IOPAR")
"RTN","ZIS4VXD",23,0)
 I %ZTYPE="CHAN",IO["::""TASK="!(IO["SYS$NET") D ODECNET Q:POP  G OXECUTE^%ZIS6
"RTN","ZIS4VXD",24,0)
 S %A=%ZISOPAR_$S(%ZISOPAR["):":"",%ZTYPE["CHAN"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO)
"RTN","ZIS4VXD",25,0)
 N % S %(IO)="",%=$P($P($NA(%(IO)),"(",2),")")
"RTN","ZIS4VXD",26,0)
 S %A=%_$E(":",%A]"")_%A
"RTN","ZIS4VXD",27,0)
 D O1 I POP D  Q
"RTN","ZIS4VXD",28,0)
 .I %ZTYPE="HFS",'$D(IOP),$G(IO("ERROR"))["file not found" W !,?5,*7,"[FILE NOT FOUND]" Q
"RTN","ZIS4VXD",29,0)
 .W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4VXD",30,0)
 S IO(1,IO)="" U IO S:'(IO=IO(0)&'$D(ZTQUEUED)&'$D(IO("S"))) $X=0,$Y=0 I %ZTYPE["TRM" U IO:(WIDTH=+%Z91)
"RTN","ZIS4VXD",31,0)
 I %ZISUPAR]"" S %A1=""""_IO_""":"_%ZISUPAR U @%A1
"RTN","ZIS4VXD",32,0)
 U:%IS'[0 IO(0) G OXECUTE^%ZIS6
"RTN","ZIS4VXD",33,0)
 ;
"RTN","ZIS4VXD",34,0)
O1 S $ZT="OPNERR^%ZIS4"
"RTN","ZIS4VXD",35,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4VXD",36,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZIS4VXD",37,0)
 S IO("ERROR")="" Q
"RTN","ZIS4VXD",38,0)
 ;
"RTN","ZIS4VXD",39,0)
ODECNET ;OPEN DECNET CHANNEL
"RTN","ZIS4VXD",40,0)
 S $ZT="OPNERR^%ZIS4"
"RTN","ZIS4VXD",41,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60 O IO L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZIS4VXD",42,0)
 S IO("ERROR")=""
"RTN","ZIS4VXD",43,0)
 I IO="SYS$NET",$I="SYS$INPUT:;" S IO(0)=IO U IO Q
"RTN","ZIS4VXD",44,0)
 Q
"RTN","ZIS4VXD",45,0)
ZIO N % S %=$ZIO,%=$S(%["Host:":$P($P(%,"Host: ",2)," ")_":"_$P(%,"Port: ",2),1:%) S:%[" " %=$TR(%," ")
"RTN","ZIS4VXD",46,0)
 S IO("ZIO")=% S:($ZIO["Host:")&'$D(IO("IP")) IO("IP")=$P(%,":")
"RTN","ZIS4VXD",47,0)
 Q
"RTN","ZIS4VXD",48,0)
 ;
"RTN","ZIS4VXD",49,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file name.
"RTN","ZIS4VXD",50,0)
 I $D(ZISDA) W:'$D(IOP) !?5,*7,"You may not Spool the printing of a Spool document" G N
"RTN","ZIS4VXD",51,0)
 I $D(DUZ)[0 W:'$D(IOP) !,"Must be a valid user." G N
"RTN","ZIS4VXD",52,0)
R S %ZY=-1 D NEWDOC^ZISPL1 G N:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1) G OK:$D(IO("Q"))
"RTN","ZIS4VXD",53,0)
 G:'%ZISB OK I '$P(%ZY,"^",3),%ZFN]"" D SPL3 G N:%ZFN']"",DOC
"RTN","ZIS4VXD",54,0)
 S %ZFN=IO_"SPOOL_no_"_%ZDA_".TMP" D SPL2 G:%ZFN']"" N S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4VXD",55,0)
DOC S IO=%ZFN,IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA,IOF="#"
"RTN","ZIS4VXD",56,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4VXD",57,0)
OK K %ZDA,%ZFN Q
"RTN","ZIS4VXD",58,0)
N K %ZDA,%ZFN,IO("DOC") S POP=1 Q
"RTN","ZIS4VXD",59,0)
SPL2 O %ZFN:(NEWVERSION:PROT=W:RWD) G:$ZA<0 SPL4 S IO(1,%ZFN)="" Q
"RTN","ZIS4VXD",60,0)
SPL3 N X S X="SPL4^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",61,0)
 O %ZFN:READONLY:1 S:'$T ZISPLQ=1 G:$ZA<0!('$T) SPL4 S IO(1,%ZFN)="" Q
"RTN","ZIS4VXD",62,0)
SPL4 W:'$D(IOP)&'$D(ZTQUEUED) !?5,*7,"Couldn't open the spool file." S %ZFN="" Q
"RTN","ZIS4VXD",63,0)
CLOSE N %Z1 C:IO]"" IO K:IO]"" IO(1,IO) D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4VXD",64,0)
 S %ZFN=$P(%ZS,"^",2) D SPL3 Q:%ZFN']""  U %ZFN S %ZCR=$C(13),%Y="",$ZT="SPLEOF^%ZIS4"
"RTN","ZIS4VXD",65,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4VXD",66,0)
 F %=0:0 R %X#255:5 Q:$ZA<0  S %2=%X D CL2 G:%Z1<% SPLEX
"RTN","ZIS4VXD",67,0)
SPLEOF I $ZE'["ENDO" ZQ  ;Send error up
"RTN","ZIS4VXD",68,0)
SPLEX C %ZFN:DELETE K:%ZFN]"" IO(1,%ZFN) D CLOSE^ZISPL1 K %Y,%X,%1,%ZFN Q
"RTN","ZIS4VXD",69,0)
 ;
"RTN","ZIS4VXD",70,0)
CL2 S %=%+1 I %Z1<% S ^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZIS4VXD",71,0)
 I %2[$C(12) S ^XMBS(3.519,XS,2,%,0)="|TOP|" Q
"RTN","ZIS4VXD",72,0)
 S ^XMBS(3.519,XS,2,%,0)=%2 Q
"RTN","ZIS4VXD",73,0)
 ;
"RTN","ZIS4VXD",74,0)
HFS G HFS^%ZISF
"RTN","ZIS4VXD",75,0)
REWMT(IO,IOPAR) ;Rewind Magtape
"RTN","ZIS4VXD",76,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",77,0)
 U IO W *5
"RTN","ZIS4VXD",78,0)
 Q 1
"RTN","ZIS4VXD",79,0)
REWSDP(IO,IOPAR) ;Rewind SDP
"RTN","ZIS4VXD",80,0)
 G REW1
"RTN","ZIS4VXD",81,0)
REWHFS(IO,IOPAR) ;Rewind Host File.
"RTN","ZIS4VXD",82,0)
REW1 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",83,0)
 U IO:DISCONNECT
"RTN","ZIS4VXD",84,0)
 Q 1
"RTN","ZIS4VXD",85,0)
REWERR ;Error encountered
"RTN","ZIS4VXD",86,0)
 Q 0
"RTN","ZISTCP")
0^10^B9048541
"RTN","ZISTCP",1,0)
%ZISTCP ;ISC-SF/RWF - DEVICE HANDLER TCP/IP CALLS ;08/07/97  16:30
"RTN","ZISTCP",2,0)
 ;;8.0;KERNEL;**36,34,59**;Jun 02, 1994
"RTN","ZISTCP",3,0)
 Q
"RTN","ZISTCP",4,0)
 ;
"RTN","ZISTCP",5,0)
CALL(IP,SOCK,TO) ;Open a socket to the IP address <procedure>
"RTN","ZISTCP",6,0)
 N %A,ZISOS,X,NIO
"RTN","ZISTCP",7,0)
 S ZISOS=^%ZOSF("OS"),TO=$G(TO,30)
"RTN","ZISTCP",8,0)
 I $$NEWERR^%ZTER N $ETRAP S $ETRAP=""
"RTN","ZISTCP",9,0)
 S X="OPNERR^%ZISTCP",@^%ZOSF("TRAP"),POP=1
"RTN","ZISTCP",10,0)
 ;I IP'?1.3N1P1.3N1P1.3N1P1.3N S IP=$$NSLOOKUP(IP)  ;Lookup the name
"RTN","ZISTCP",11,0)
 I IP'?1.3N1P1.3N1P1.3N1P1.3N Q  ;Not in the IP format
"RTN","ZISTCP",12,0)
 I (SOCK<1)!(SOCK>65535) Q
"RTN","ZISTCP",13,0)
 G CVXD:ZISOS["VAX",CMSM:ZISOS["MSM",CONT:ZISOS["OpenM"
"RTN","ZISTCP",14,0)
 S POP=1
"RTN","ZISTCP",15,0)
 Q
"RTN","ZISTCP",16,0)
CVXD ;Open VAX DSM Socket
"RTN","ZISTCP",17,0)
 S NIO=SOCK
"RTN","ZISTCP",18,0)
 O NIO:(TCPCHAN,ADDRESS=IP):TO G:'$T NOOPN
"RTN","ZISTCP",19,0)
 U NIO:NOECHO D VAR
"RTN","ZISTCP",20,0)
 Q
"RTN","ZISTCP",21,0)
CMSM ;Open MSM Socket
"RTN","ZISTCP",22,0)
 S NIO=56 O NIO::TO G:'$T NOOPN
"RTN","ZISTCP",23,0)
 U NIO::"TCP" W /SOCKET(IP,SOCK) I $KEY="" C NIO G NOOPN
"RTN","ZISTCP",24,0)
 D VAR
"RTN","ZISTCP",25,0)
 Q
"RTN","ZISTCP",26,0)
CONT ;Open OpenM socket
"RTN","ZISTCP",27,0)
 S NIO="|TCP|"_(SOCK+2000)
"RTN","ZISTCP",28,0)
 O NIO:(IP:SOCK:"S"::512:512):TO G:'$T NOOPN
"RTN","ZISTCP",29,0)
 U NIO D VAR
"RTN","ZISTCP",30,0)
 Q
"RTN","ZISTCP",31,0)
VAR ;Setup IO variables
"RTN","ZISTCP",32,0)
 S:'$D(IO(0)) IO(0)=$I
"RTN","ZISTCP",33,0)
 S IO=NIO,IO(1,IO)=IP,POP=0
"RTN","ZISTCP",34,0)
 S IOT="TCP",IOF="#",IOST="P-TCP",IOST(0)=0
"RTN","ZISTCP",35,0)
 Q
"RTN","ZISTCP",36,0)
NOOPN ;Didn't make the conection
"RTN","ZISTCP",37,0)
 S POP=1
"RTN","ZISTCP",38,0)
 Q
"RTN","ZISTCP",39,0)
OPNERR ;
"RTN","ZISTCP",40,0)
 I $$NEWERR^%ZTER S $ECODE=""
"RTN","ZISTCP",41,0)
 S POP=1
"RTN","ZISTCP",42,0)
 Q
"RTN","ZISTCP",43,0)
CLOSE ;Close and reset
"RTN","ZISTCP",44,0)
 I $$NEWERR^%ZTER N $ETRAP S $ETRAP=""
"RTN","ZISTCP",45,0)
 N X S X="CLOSEX^%ZISTCP",@^%ZOSF("TRAP")
"RTN","ZISTCP",46,0)
 I IO]"" C IO K IO(1,IO)
"RTN","ZISTCP",47,0)
CLOSEX S IO=$S($G(IO(0))]"":IO(0),1:$P) D HOME^%ZIS
"RTN","ZISTCP",48,0)
 Q
"RTN","ZISTCP",49,0)
 ;
"RTN","ZISTCP",50,0)
LISTEN(SOCK,RTN,X) ;Listen on socket, start routine
"RTN","ZISTCP",51,0)
 N %A,ZISOS,X,NIO
"RTN","ZISTCP",52,0)
 S ZISOS=^%ZOSF("OS")
"RTN","ZISTCP",53,0)
 I $$NEWERR^%ZTER N $ETRAP S $ETRAP=""
"RTN","ZISTCP",54,0)
 S X="OPNERR^%ZISTCP",@^%ZOSF("TRAP"),POP=1
"RTN","ZISTCP",55,0)
LOOP S POP=1 D LVXD:ZISOS["DSM",LMSM:ZISOS["MSM",LONT:ZISOS["OpenM"
"RTN","ZISTCP",56,0)
 I POP Q
"RTN","ZISTCP",57,0)
 D  
"RTN","ZISTCP",58,0)
 . S (IO,IO(0))=NIO,IOST="TCP",IOST(0)=0,X=RTN N NIO,SOCK,RTN,ZISOS
"RTN","ZISTCP",59,0)
 . D @X
"RTN","ZISTCP",60,0)
 I ZISOS["DSM" U NIO:DISCONNECT
"RTN","ZISTCP",61,0)
 E  C NIO ;
"RTN","ZISTCP",62,0)
 Q:$D(IO("C"))  G LOOP ;Use IO("C") to quit server
"RTN","ZISTCP",63,0)
 ;
"RTN","ZISTCP",64,0)
LMSM ;MSM
"RTN","ZISTCP",65,0)
 ;For multi thread use MSM's MSERVER process.
"RTN","ZISTCP",66,0)
 ;This is the listener for  TCP connects.
"RTN","ZISTCP",67,0)
 ;It takes the place of the INETD Unix process
"RTN","ZISTCP",68,0)
 S NIO=56,%="" O NIO::30 Q:'$T  S POP=0
"RTN","ZISTCP",69,0)
 U NIO::"TCP" W /SOCKET("",SOCK)
"RTN","ZISTCP",70,0)
 Q
"RTN","ZISTCP",71,0)
 ;
"RTN","ZISTCP",72,0)
LONT ;Open port in Accept mode with standard terminators, big buffers.
"RTN","ZISTCP",73,0)
 S NIO="|TCP|"_SOCK,%=""
"RTN","ZISTCP",74,0)
 O NIO:(:SOCK:"AT"::32767:32767):30 Q:'$T  S POP=0 U NIO
"RTN","ZISTCP",75,0)
 ;Wait on read for a connect
"RTN","ZISTCP",76,0)
LONT2 F  U NIO R *NEWCHAR:60 S %ZA=$ZA,%ZB=$ZB Q:$T
"RTN","ZISTCP",77,0)
 ;JOB params (:switch:principal input:principal output)
"RTN","ZISTCP",78,0)
 J CHILDONT^%ZISTCP(NIO,RTN):(:4:NIO:NIO):10 S %ZA=$ZA
"RTN","ZISTCP",79,0)
 I %ZA\8196#2=1 W *-2 ;Job failed to clear bit
"RTN","ZISTCP",80,0)
 G LONT2
"RTN","ZISTCP",81,0)
 ;
"RTN","ZISTCP",82,0)
LVXD ;Open port and listen
"RTN","ZISTCP",83,0)
 ;Use UCX for multiple listeners
"RTN","ZISTCP",84,0)
 S NIO=SOCK O NIO:(TCPCHAN):30 Q:'$T  S POP=0
"RTN","ZISTCP",85,0)
 U NIO Q  ;Let application wait at the read for a connect.
"RTN","ZISTCP",86,0)
 Q
"RTN","ZISTCP",87,0)
CHILDONT(IO,RTN) ;Child process for OpenM
"RTN","ZISTCP",88,0)
 S $ETRAP="D ^%ZTER L  HALT"
"RTN","ZISTCP",89,0)
 U IO:(::"M") ;M type strings
"RTN","ZISTCP",90,0)
 S NEWJOB=1 I $G(^%ZIS(14.5,"LOGON",^%ZOSF("VOL")))=1 S NEWJOB=0
"RTN","ZISTCP",91,0)
 I 'NEWJOB W "421 SMTP Service temporarily down.",$C(13,10),!
"RTN","ZISTCP",92,0)
 I NEWJOB K NEWJOB D @RTN
"RTN","ZISTCP",93,0)
 HALT
"UP",19,19.05,-1)
19^RPC
"UP",19,19.05,0)
19.05
"VER")
8^21.0
"^DD",3.081,3.081,0)
FIELD^^99^17
"^DD",3.081,3.081,0,"DDA")
N
"^DD",3.081,3.081,0,"DIK")
XUCT03
"^DD",3.081,3.081,0,"DIKOLD")
XUCT03
"^DD",3.081,3.081,0,"DT")
2970826
"^DD",3.081,3.081,0,"IX","AC",3.081,3)

"^DD",3.081,3.081,0,"IX","AC2",3.081,3)

"^DD",3.081,3.081,0,"IX","ALDEV",3.081,5)

"^DD",3.081,3.081,0,"IX","AS1",3.081,11)

"^DD",3.081,3.081,0,"IX","AS2",3.081,12)

"^DD",3.081,3.081,0,"IX","CUR",3.081,.01)

"^DD",3.081,3.081,0,"NM","SIGN-ON LOG")

"^DD",3.081,3.081,0,"VRPK")
XU
"^DD",3.081,3.081,.001,0)
DATE/TIME^D^^ ^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",3.081,3.081,.001,21,0)
^^1^1^2920528^^
"^DD",3.081,3.081,.001,21,1,0)
This is the date/time that the user signed on.
"^DD",3.081,3.081,.001,"DT")
2920130
"^DD",3.081,3.081,.01,0)
USER^RP200'^VA(200,^0;1^Q
"^DD",3.081,3.081,.01,1,0)
^.1
"^DD",3.081,3.081,.01,1,1,0)
3.081^CUR
"^DD",3.081,3.081,.01,1,1,1)
S ^XUSEC(0,"CUR",$E(X,1,30),DA)=""
"^DD",3.081,3.081,.01,1,1,2)
K ^XUSEC(0,"CUR",$E(X,1,30),DA)
"^DD",3.081,3.081,.01,3)

"^DD",3.081,3.081,.01,10)
SIGN-ON SYSTEM
"^DD",3.081,3.081,.01,21,0)
^^1^1^2920528^^^
"^DD",3.081,3.081,.01,21,1,0)
This is the user that signed on.
"^DD",3.081,3.081,.01,"DT")
2910618
"^DD",3.081,3.081,1,0)
DEVICE $I^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",3.081,3.081,1,3)
Answer must be 1-30 characters in length.
"^DD",3.081,3.081,1,21,0)
^^1^1^2920528^^
"^DD",3.081,3.081,1,21,1,0)
This is the device that the user signed on to.
"^DD",3.081,3.081,1,"DT")
2970826
"^DD",3.081,3.081,2,0)
JOB^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",3.081,3.081,2,3)
$J (PARTITION NUMBER) OF SIGN-ON
"^DD",3.081,3.081,2,21,0)
1^^1^1^2920528^^^
"^DD",3.081,3.081,2,21,1,0)
This is the job number of the user's job.
"^DD",3.081,3.081,3,0)
SIGNOFF TIME^D^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",3.081,3.081,3,1,0)
^.1
"^DD",3.081,3.081,3,1,1,0)
3.081^AC^MUMPS
"^DD",3.081,3.081,3,1,1,1)
K ^XUSEC(0,"CUR",+^XUSEC(0,DA,0),DA)
"^DD",3.081,3.081,3,1,1,2)
Q
"^DD",3.081,3.081,3,1,1,3)
The CUR x-ref.
"^DD",3.081,3.081,3,1,1,"%D",0)
^^2^2^2920528^
"^DD",3.081,3.081,3,1,1,"%D",1,0)
This X-ref clears ^XUSEC(0,'CUR' that keeps a list of user sign-ons
"^DD",3.081,3.081,3,1,1,"%D",2,0)
that is used by the FIND USER option.
"^DD",3.081,3.081,3,1,2,0)
3.081^AC2^MUMPS
"^DD",3.081,3.081,3,1,2,1)
N % S %=^XUSEC(0,DA,0) K:$L($P(%,U,11)) ^XUSEC(0,"AS1",$P($P(%,U,11),":"),DA) K:$L($P(%,U,12)) ^XUSEC(0,"AS2",$P($P(%,U,12),":"),DA)
"^DD",3.081,3.081,3,1,2,2)
Q
"^DD",3.081,3.081,3,1,2,3)
Remove the 'AS1' and 'AS2' x-ref
"^DD",3.081,3.081,3,1,2,"%D",0)
^^2^2^2970128^
"^DD",3.081,3.081,3,1,2,"%D",1,0)
This cross-reference removes the 'AS1' and 'AS2' indexs when the signoff
"^DD",3.081,3.081,3,1,2,"%D",2,0)
time is entered.
"^DD",3.081,3.081,3,1,2,"DT")
2970128
"^DD",3.081,3.081,3,21,0)
^^1^1^2920528^^
"^DD",3.081,3.081,3,21,1,0)
This is the time that the user signed-off through H^XUS.
"^DD",3.081,3.081,3,"DT")
2970128
"^DD",3.081,3.081,4,0)
CPU^F^^0;5^K:$L(X)>16!($L(X)<1) X
"^DD",3.081,3.081,4,3)
ANSWER MUST BE 1-16 CHARACTERS IN LENGTH
"^DD",3.081,3.081,4,21,0)
^^1^1^2920528^^^
"^DD",3.081,3.081,4,21,1,0)
This is the name of the CPU the user signed on to.
"^DD",3.081,3.081,4,"DT")
2841005
"^DD",3.081,3.081,5,0)
DEVICE^P3.5'^%ZIS(1,^0;7^Q
"^DD",3.081,3.081,5,1,0)
^.1
"^DD",3.081,3.081,5,1,1,0)
3.081^ALDEV^MUMPS
"^DD",3.081,3.081,5,1,1,1)
S ^XUSEC(0,"ALDEV",X)=+^XUSEC(0,DA,0)
"^DD",3.081,3.081,5,1,1,2)
Q
"^DD",3.081,3.081,5,1,1,3)
ALDEV
"^DD",3.081,3.081,5,1,1,"%D",0)
^^3^3^2920528^
"^DD",3.081,3.081,5,1,1,"%D",1,0)
The 'ALDEV' X-ref is used to tell which user last sign-on to this
"^DD",3.081,3.081,5,1,1,"%D",2,0)
device and the X-ref is not killed.  At the most there would be one entry
"^DD",3.081,3.081,5,1,1,"%D",3,0)
for each entry in the device file.
"^DD",3.081,3.081,5,21,0)
^^6^6^2920528^^^^
"^DD",3.081,3.081,5,21,1,0)
This is a pointer to the Device file showing which device the user
"^DD",3.081,3.081,5,21,2,0)
signed-on to.
"^DD",3.081,3.081,5,21,3,0)
 
"^DD",3.081,3.081,5,21,4,0)
The 'ALDEV' X-ref is used to tell which user last sign-on to this
"^DD",3.081,3.081,5,21,5,0)
device and the X-ref is not killed.  At the most there would be one entry 
"^DD",3.081,3.081,5,21,6,0)
for each entry in the device file.
"^DD",3.081,3.081,5,"DT")
2880701
"^DD",3.081,3.081,6,0)
UCI^F^^0;8^K:$L(X)>8!($L(X)<1) X
"^DD",3.081,3.081,6,3)
Answer with the UCI the user signed into.
"^DD",3.081,3.081,6,21,0)
^^1^1^2920528^^
"^DD",3.081,3.081,6,21,1,0)
This field records the UCI account area where the user had signed on.
"^DD",3.081,3.081,6,"DT")
2880701
"^DD",3.081,3.081,7,0)
TASK?^S^1:TASK;^0;6^Q
"^DD",3.081,3.081,7,.1)
Was this entry made by TaskMan?
"^DD",3.081,3.081,7,3)
This field should never be filled in by a user.
"^DD",3.081,3.081,7,21,0)
^^5^5^2920528^^^
"^DD",3.081,3.081,7,21,1,0)
This field is set to 1 for entries that are created by TaskMan.  A field
"^DD",3.081,3.081,7,21,2,0)
in the Kernel Site Parameters file can be used to make TaskMan "log
"^DD",3.081,3.081,7,21,3,0)
sign-ons" for tasks.  When that feature is active, TaskMan makes an entry
"^DD",3.081,3.081,7,21,4,0)
in this file every time it runs a task.  Entries made for tasks do not
"^DD",3.081,3.081,7,21,5,0)
affect this file's cross-references.
"^DD",3.081,3.081,7,"DT")
2901205
"^DD",3.081,3.081,9,0)
$ZIO (optional)^F^^0;9^K:$L(X)>30!($L(X)<1) X
"^DD",3.081,3.081,9,3)
ANSWER MUST BE 1-30 CHARACTERS IN LENGTH
"^DD",3.081,3.081,9,21,0)
^^3^3^2920528^^^
"^DD",3.081,3.081,9,21,1,0)
On a system with terminal servers this may be the port and server
"^DD",3.081,3.081,9,21,2,0)
that the user is signed-on to.  It can provide information not contained
"^DD",3.081,3.081,9,21,3,0)
in $I.
"^DD",3.081,3.081,9,"DT")
2880801
"^DD",3.081,3.081,10,0)
NODE NAME^F^^0;10^K:$L(X)>15!($L(X)<2) X
"^DD",3.081,3.081,10,3)
Answer must be 2-15 characters in length.
"^DD",3.081,3.081,10,21,0)
^^2^2^2920528^^^^
"^DD",3.081,3.081,10,21,1,0)
The VAX/VMS cluster node name.
"^DD",3.081,3.081,10,21,2,0)
This is only valid on the VAX systems.
"^DD",3.081,3.081,10,23,0)
^^1^1^2891013^^
"^DD",3.081,3.081,10,23,1,0)
This is the 4th piece of $ZC(%GETSYI).
"^DD",3.081,3.081,10,"DT")
2901204
"^DD",3.081,3.081,11,0)
IP ADDRESS^F^^0;11^K:$L(X)>20!($L(X)<7)!'(X?1.3N1P1.3N1P1.3N1P1.3N.E) X
"^DD",3.081,3.081,11,1,0)
^.1
"^DD",3.081,3.081,11,1,1,0)
3.081^AS1^MUMPS
"^DD",3.081,3.081,11,1,1,1)
S:'$P(^XUSEC(0,DA,0),U,4) ^XUSEC(0,"AS1",$P(X,":"),DA)=""
"^DD",3.081,3.081,11,1,1,2)
K ^XUSEC(0,"AS1",$P(X,":"),DA)
"^DD",3.081,3.081,11,1,1,3)
For Single sign-on
"^DD",3.081,3.081,11,1,1,"%D",0)
^^1^1^2970210^^
"^DD",3.081,3.081,11,1,1,"%D",1,0)
This index builds a list of IP addresses that the user may be at.
"^DD",3.081,3.081,11,1,1,"DT")
2970210
"^DD",3.081,3.081,11,3)
IP address, Answer must be 7-20 characters in length.
"^DD",3.081,3.081,11,21,0)
^^3^3^2970117^
"^DD",3.081,3.081,11,21,1,0)
This field holds the IP address of the calling system.
"^DD",3.081,3.081,11,21,2,0)
Note that under DHCP IP address are dynamically allocated so more that one
"^DD",3.081,3.081,11,21,3,0)
client could have used the same IP address over some time period.
"^DD",3.081,3.081,11,"DT")
2970210
"^DD",3.081,3.081,12,0)
WORKSTATION NAME^F^^0;12^K:$L(X)>20!($L(X)<3) X
"^DD",3.081,3.081,12,1,0)
^.1
"^DD",3.081,3.081,12,1,1,0)
3.081^AS2^MUMPS
"^DD",3.081,3.081,12,1,1,1)
S:'$P(^XUSEC(0,DA,0),U,4) ^XUSEC(0,"AS2",$P(X,":"),DA)=""
"^DD",3.081,3.081,12,1,1,2)
K ^XUSEC(0,"AS2",$P(X,":"),DA)
"^DD",3.081,3.081,12,1,1,3)
For single sign-on
"^DD",3.081,3.081,12,1,1,"%D",0)
^^1^1^2970210^^^
"^DD",3.081,3.081,12,1,1,"%D",1,0)
This index builds a list of WORKSTATION names that the user may be at.
"^DD",3.081,3.081,12,1,1,"DT")
2970210
"^DD",3.081,3.081,12,3)
Answer must be 3-20 characters in length.
"^DD",3.081,3.081,12,21,0)
^^2^2^2970117^
"^DD",3.081,3.081,12,21,1,0)
This field holds the workstation name if it has been provide by the
"^DD",3.081,3.081,12,21,2,0)
underlaying OS or as part of a RPCBroker signon.
"^DD",3.081,3.081,12,"DT")
2970210
"^DD",3.081,3.081,60,0)
CPU^F^^0;5^K:$L(X)>16!($L(X)<1) X
"^DD",3.081,3.081,60,3)
ANSWER MUST BE 1-16 CHARACTERS IN LENGTH
"^DD",3.081,3.081,60,21,0)
^^1^1^2920528^^^
"^DD",3.081,3.081,60,21,1,0)
This is the name of the CPU the user signed on to.
"^DD",3.081,3.081,60,"DT")
2841005
"^DD",3.081,3.081,97,0)
ELAPSED TIME (SECONDS)^CJ10^^ ; ^X ^DD(3.081,97,9.2) S X1=Y(3.081,97,1) S X=$S(X&X1:X,1:"") Q:'X  D H^%DTC S XUS1=%H*86400+%T,X=X1 D H^%DTC S XUS2=%H*86400+%T,X=$S(XUS1>XUS2:XUS1-XUS2,1:XUS2-XUS1)
"^DD",3.081,3.081,97,9)
^
"^DD",3.081,3.081,97,9.01)
3.081^3;3.081^.001
"^DD",3.081,3.081,97,9.1)
XUDELTATIME(#.001,#3)
"^DD",3.081,3.081,97,9.2)
S Y(3.081,97,2)=$S($D(^XUSEC(0,D0,0)):^(0),1:"") S X=$S('$D(D0):"",D0<0:"",1:D0),Y(3.081,97,1)=X S X=$P(Y(3.081,97,2),U,4)
"^DD",3.081,3.081,97,21,0)
^^2^2^2920528^^
"^DD",3.081,3.081,97,21,1,0)
This field calculates the number of seconds between sign-on time
"^DD",3.081,3.081,97,21,2,0)
and sign-off time.
"^DD",3.081,3.081,98,0)
LOCATION^CJ15^^ ; ^X ^DD(3.081,98,9.2) S Y(3.081,98,101)=$S($D(^%ZIS(1,D0,1)):^(1),1:"") S X=$P(Y(3.081,98,101),U,1) S D0=Y(3.081,98,80)
"^DD",3.081,3.081,98,9)
^
"^DD",3.081,3.081,98,9.01)
3.5^.02;3.081^5
"^DD",3.081,3.081,98,9.1)
DEVICE:LOCATION
"^DD",3.081,3.081,98,9.2)
S Y(3.081,98,80)=$S($D(D0):D0,1:""),Y(3.081,98,1)=$S($D(^XUSEC(0,D0,0)):^(0),1:""),D0=$P(Y(3.081,98,1),U,7) S:'$D(^%ZIS(1,+D0,0)) D0=-1
"^DD",3.081,3.081,98,21,0)
^^1^1^2920528^^
"^DD",3.081,3.081,98,21,1,0)
This is the location of the device which was used to sign on.
"^DD",3.081,3.081,98,"DT")
2931216
"^DD",3.081,3.081,99,0)
ELAPSED TIME (MINUTES)^CJ8X^^ ; ^S X1=$P(^XUSEC(0,D0,0),U,4),X="" Q:X1<2000000  S X=D0,Y=$E(X1_"000",9,10)-$E(X_"000",9,10)*60+$E(X1_"00000",11,12)-$E(X_"00000",11,12),X2=X,X=$P(X,".",1)'=$P(X1,".",1) D ^%DTC:X S X=X*1440+Y
"^DD",3.081,3.081,99,9)
^
"^DD",3.081,3.081,99,9.01)
3.081^.001;3.081^3
"^DD",3.081,3.081,99,9.1)
MINUTES(#3,#.001)
"^DD",3.081,3.081,99,21,0)
^^1^1^2920528^^
"^DD",3.081,3.081,99,21,1,0)
This is the amount of time the user has been signed on.
"^DD",19,19,4,0)
TYPE^RS^A:action;E:edit;I:inquire;M:menu;P:print;R:run routine;O:protocol;Q:protocol menu;X:extended action;S:server;L:limited;C:ScreenMan;W:Window;Z:Window Suite;B:Broker (Client/Server);^0;4^Q
"^DD",19,19,4,.1)
THE TYPE OF OPTION
"^DD",19,19,4,1,0)
^.1
"^DD",19,19,4,1,1,0)
19^AOR^MUMPS
"^DD",19,19,4,1,1,1)
I X="O"!(X="Q") S ^DIC(19,"AOR",$P(^DIC(19,DA,0),U,2),DA)=""
"^DD",19,19,4,1,1,2)
K ^DIC(19,"AOR",$P(^DIC(19,DA,0),U,2),DA)
"^DD",19,19,4,1,1,"%D",0)
^^2^2^2920519
"^DD",19,19,4,1,1,"%D",1,0)
This sets the "AOR" cross-reference on the file if the option type is either 
"^DD",19,19,4,1,1,"%D",2,0)
a protocol or a protocol menu.
"^DD",19,19,4,1,2,0)
19^AOH^MUMPS
"^DD",19,19,4,1,2,1)
D REDO^XQ7
"^DD",19,19,4,1,2,2)
D REDO^XQ7
"^DD",19,19,4,1,2,"%D",0)
^^3^3^2920519
"^DD",19,19,4,1,2,"%D",1,0)
This cross-reference causes the option to be flagged for updating in the menu 
"^DD",19,19,4,1,2,"%D",2,0)
trees so that the changes effecting display and/or access to the option are 
"^DD",19,19,4,1,2,"%D",3,0)
correctly updated.
"^DD",19,19,4,21,0)
^^7^7^2951212^
"^DD",19,19,4,21,1,0)
    This field indicates the 'category' or type of option. A print-type
"^DD",19,19,4,21,2,0)
option, for instance, will call FileMan to print something. Menu-type
"^DD",19,19,4,21,3,0)
options point to other options in the tree-structured menu system. The
"^DD",19,19,4,21,4,0)
other fields in the options file are filled in depending on the type.
"^DD",19,19,4,21,5,0)
There are several fields that will tell a print-type option what to print
"^DD",19,19,4,21,6,0)
and how to print it, for example.  These same fields may be meaningless to
"^DD",19,19,4,21,7,0)
another options type.
"^DD",19,19,4,22)
TYPE
"^DD",19,19,4,"DT")
2951212
"^DD",19,19,320,0)
RPC^19.05P^^RPC;0
"^DD",19,19,320,23,0)
^^2^2^2960108^^^
"^DD",19,19,320,23,1,0)
This field contains a pointer to the Remote Procedure file for an RPC
"^DD",19,19,320,23,2,0)
registered to this option.
"^DD",19,19.05,0)
RPC SUB-FIELD^^2^3
"^DD",19,19.05,0,"DT")
2960108
"^DD",19,19.05,0,"IX","B",19.05,.01)

"^DD",19,19.05,0,"NM","RPC")

"^DD",19,19.05,0,"UP")
19
"^DD",19,19.05,.01,0)
RPC^MP8994^XWB(8994,^0;1^Q
"^DD",19,19.05,.01,1,0)
^.1
"^DD",19,19.05,.01,1,1,0)
19.05^B
"^DD",19,19.05,.01,1,1,1)
S ^DIC(19,DA(1),"RPC","B",$E(X,1,30),DA)=""
"^DD",19,19.05,.01,1,1,2)
K ^DIC(19,DA(1),"RPC","B",$E(X,1,30),DA)
"^DD",19,19.05,.01,3)
Enter a Remote Procedure registered to this option.
"^DD",19,19.05,.01,21,0)
^^3^3^2951212^
"^DD",19,19.05,.01,21,1,0)
This subfile is used to register the Remote Procedures registered
"^DD",19,19.05,.01,21,2,0)
to a particular Broker-type option.  It is a pointer to the
"^DD",19,19.05,.01,21,3,0)
Remote Procedure File.
"^DD",19,19.05,.01,"DT")
2951212
"^DD",19,19.05,1,0)
RPCKEY^FX^^0;2^K:$L(X)>30!($L(X)<1) X I $D(X) Q:$D(^DIC(19.1,"B",X))  W !,*7,"Key name must match exactly with a key in the Security Key File." K X
"^DD",19,19.05,1,3)
Answer must be the name of an existing key 1-30 characters in length.
"^DD",19,19.05,1,21,0)
^^3^3^2960108^^^
"^DD",19,19.05,1,21,1,0)
This field is the free-text name from the Security Key File that will be
"^DD",19,19.05,1,21,2,0)
checked when this remote procedure call is requested to the broker.
"^DD",19,19.05,1,21,3,0)
If the user does not hold this key then the request will be denied.
"^DD",19,19.05,1,"DT")
2960108
"^DD",19,19.05,2,0)
RULES^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19,19.05,2,3)
This is Standard MUMPS code.
"^DD",19,19.05,2,9)
@
"^DD",19,19.05,2,21,0)
^^4^4^2951212^
"^DD",19,19.05,2,21,1,0)
This field contains standard M code that will be executed when this
"^DD",19,19.05,2,21,2,0)
remote procedure call is requested from the broker.  The variable
"^DD",19,19.05,2,21,3,0)
XQRPCOK is set to 1 and the code is executed. If the value of that
"^DD",19,19.05,2,21,4,0)
variable is reset to 0 by the RULES code, then the request is denied.
"^DD",19,19.05,2,"DT")
2951212
"^DD",200,200,20.2,0)
SIGNATURE BLOCK PRINTED NAME^FX^^20;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>40!($L(X)<2)!($$UP^XLFSTR(X)'[$P(^VA(200,DA,0),",")) X
"^DD",200,200,20.2,1,0)
^.1
"^DD",200,200,20.2,1,1,0)
200^ACX20^MUMPS
"^DD",200,200,20.2,1,1,1)
S X1=$S($D(^DIC(3,DA,0))#2:$P(^(0),"^",16),1:"") I X1>0 S $P(^DIC(16,X1,20),"^",2)=X
"^DD",200,200,20.2,1,1,2)
S X1=$S($D(^DIC(3,DA,0))#2:$P(^(0),"^",16),1:"") I X1>0 S $P(^DIC(16,X1,20),"^",2)=""
"^DD",200,200,20.2,1,1,3)
Used to keep 3-16-200 in sync.
"^DD",200,200,20.2,3)
Enter your name as you want it to appear on official documents
"^DD",200,200,20.2,9)
^
"^DD",200,200,20.2,21,0)
^^5^5^2951002^
"^DD",200,200,20.2,21,1,0)
The name entered must contain the surname of the user.
"^DD",200,200,20.2,21,2,0)
 
"^DD",200,200,20.2,21,3,0)
This field can then contain the name of the user as they wish it to
"^DD",200,200,20.2,21,4,0)
be displayed with the notation that they signed the document electronically.
"^DD",200,200,20.2,21,5,0)
For example:  John R. Doe, M.D.   or    Fred A. Sample, RN.
"^DD",200,200,20.2,"DT")
2920701
"^DD",200,200,200.18,0)
AUTO SIGN-ON^S^0:No;1:Yes;^200;18^Q
"^DD",200,200,200.18,21,0)
^^2^2^2970303^
"^DD",200,200,200.18,21,1,0)
This field will control if the Auto Sign-on (Single Sign-on) is enabled
"^DD",200,200,200.18,21,2,0)
for use with terminal sessions.
"^DD",200,200,200.18,"DT")
2970303
"^DD",8989.3,8989.3,218,0)
DEFAULT AUTO SIGN-ON^S^0:No;1:Yes;d:Disabled;^XUS;18^Q
"^DD",8989.3,8989.3,218,21,0)
^^9^9^2970910^
"^DD",8989.3,8989.3,218,21,1,0)
This field will control the Auto Sign-on (Single Sign-on) feature.
"^DD",8989.3,8989.3,218,21,2,0)
 
"^DD",8989.3,8989.3,218,21,3,0)
To completely turn off this feature for all users: set to DISABLED.
"^DD",8989.3,8989.3,218,21,4,0)
To allow only selected users: set to No.
"^DD",8989.3,8989.3,218,21,5,0)
To allow ALL but selected users: set to Yes.
"^DD",8989.3,8989.3,218,21,6,0)
 
"^DD",8989.3,8989.3,218,21,7,0)
The Yes and No values can be over ridden by the AUTO SIGN-ON field in the
"^DD",8989.3,8989.3,218,21,8,0)
New Person file.
"^DD",8989.3,8989.3,218,21,9,0)
Use of this feature impacts user connecting via Telnet and the Broker.
"^DD",8989.3,8989.3,218,"DT")
2970917
"^DIC",3.081,3.081,0)
SIGN-ON LOG^3.081P
"^DIC",3.081,3.081,0,"GL")
^XUSEC(0,
"^DIC",3.081,3.081,"%",0)
^1.005^1^1
"^DIC",3.081,3.081,"%",1,0)
XU
"^DIC",3.081,3.081,"%","B","XU",1)

"^DIC",3.081,3.081,"%D",0)
^^2^2^2940913^^^^
"^DIC",3.081,3.081,"%D",1,0)
This file records sign-on/sign-off times by user, device, job, UCI,
"^DIC",3.081,3.081,"%D",2,0)
and CPU.  It is cross-referenced by user, device, and sign-off time.
"^DIC",3.081,"B","SIGN-ON LOG",3.081)

**END**
**END**
