KIDS Distribution saved on Sep 09, 2005@13:44:14
MT INCONSISTENCY
**KIDS**:DG*5.3*655^IVM*2.0*107^

**INSTALL NAME**
DG*5.3*655
"BLD",5500,0)
DG*5.3*655^REGISTRATION^0^3050909^y
"BLD",5500,4,0)
^9.64PA^^
"BLD",5500,"KRN",0)
^9.67PA^8989.52^19
"BLD",5500,"KRN",.4,0)
.4
"BLD",5500,"KRN",.401,0)
.401
"BLD",5500,"KRN",.402,0)
.402
"BLD",5500,"KRN",.403,0)
.403
"BLD",5500,"KRN",.5,0)
.5
"BLD",5500,"KRN",.84,0)
.84
"BLD",5500,"KRN",3.6,0)
3.6
"BLD",5500,"KRN",3.8,0)
3.8
"BLD",5500,"KRN",9.2,0)
9.2
"BLD",5500,"KRN",9.8,0)
9.8
"BLD",5500,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",5500,"KRN",9.8,"NM",1,0)
DGMTUTL1^^0^B7167360
"BLD",5500,"KRN",9.8,"NM",2,0)
DGMTUTL2^^0^B24543811
"BLD",5500,"KRN",9.8,"NM","B","DGMTUTL1",1)

"BLD",5500,"KRN",9.8,"NM","B","DGMTUTL2",2)

"BLD",5500,"KRN",19,0)
19
"BLD",5500,"KRN",19.1,0)
19.1
"BLD",5500,"KRN",101,0)
101
"BLD",5500,"KRN",409.61,0)
409.61
"BLD",5500,"KRN",771,0)
771
"BLD",5500,"KRN",870,0)
870
"BLD",5500,"KRN",8989.51,0)
8989.51
"BLD",5500,"KRN",8989.52,0)
8989.52
"BLD",5500,"KRN",8994,0)
8994
"BLD",5500,"KRN","B",.4,.4)

"BLD",5500,"KRN","B",.401,.401)

"BLD",5500,"KRN","B",.402,.402)

"BLD",5500,"KRN","B",.403,.403)

"BLD",5500,"KRN","B",.5,.5)

"BLD",5500,"KRN","B",.84,.84)

"BLD",5500,"KRN","B",3.6,3.6)

"BLD",5500,"KRN","B",3.8,3.8)

"BLD",5500,"KRN","B",9.2,9.2)

"BLD",5500,"KRN","B",9.8,9.8)

"BLD",5500,"KRN","B",19,19)

"BLD",5500,"KRN","B",19.1,19.1)

"BLD",5500,"KRN","B",101,101)

"BLD",5500,"KRN","B",409.61,409.61)

"BLD",5500,"KRN","B",771,771)

"BLD",5500,"KRN","B",870,870)

"BLD",5500,"KRN","B",8989.51,8989.51)

"BLD",5500,"KRN","B",8989.52,8989.52)

"BLD",5500,"KRN","B",8994,8994)

"BLD",5500,"QUES",0)
^9.62^^
"BLD",5500,"REQB",0)
^9.611^1^1
"BLD",5500,"REQB",1,0)
DG*5.3*610^2
"BLD",5500,"REQB","B","DG*5.3*610",1)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
655^3050909
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DGMTUTL1")
0^1^B7167360
"RTN","DGMTUTL1",1,0)
DGMTUTL1 ;ALB/RMM - Means Test Consistency Checker ; 04/28/2005
"RTN","DGMTUTL1",2,0)
 ;;5.3;Registration;**463,542,610,655**;Aug 13, 1993
"RTN","DGMTUTL1",3,0)
 ;
"RTN","DGMTUTL1",4,0)
 ;
"RTN","DGMTUTL1",5,0)
 Q
"RTN","DGMTUTL1",6,0)
 ; Apply Consistency Checks to the Income Test Processes: ADD,
"RTN","DGMTUTL1",7,0)
 ; EDIT, and COMPLETE.
"RTN","DGMTUTL1",8,0)
 ;
"RTN","DGMTUTL1",9,0)
INCON(DFN,DGMTDT,DGMTI,IVMTYPE,IVMERR) ;
"RTN","DGMTUTL1",10,0)
 ;
"RTN","DGMTUTL1",11,0)
 ; Check Income Test before applying consistency checks
"RTN","DGMTUTL1",12,0)
 ; - If AGREED TO PAY DEDUCTIBLE is NO
"RTN","DGMTUTL1",13,0)
 ; - or DECLINES TO GIVE INCOME INFO and AGREED TO PAY DEDUCTIBLE are YES
"RTN","DGMTUTL1",14,0)
 ; Quit, the consistency checks are unnecessary.
"RTN","DGMTUTL1",15,0)
 N NODE0,APD,DTGII
"RTN","DGMTUTL1",16,0)
 S NODE0=$G(^DGMT(408.31,DGMTI,0)),APD=$P(NODE0,U,11),DTGII=$P(NODE0,U,14)
"RTN","DGMTUTL1",17,0)
 I APD=0!(APD=1&(DTGII=1)) Q
"RTN","DGMTUTL1",18,0)
 ;
"RTN","DGMTUTL1",19,0)
 ; Build the data strings for the veteran, and apply consistency checks
"RTN","DGMTUTL1",20,0)
 ; Get information and initialize variables
"RTN","DGMTUTL1",21,0)
 N CNT,HLFS,IEN,ARRAY,SPOUSE,DEP,DGDEP,DGINC,DGREL,DGINR,ZIR,ZIC,ZMT,ARRAY,DIEN
"RTN","DGMTUTL1",22,0)
 S CNT=1,HLFS=U,SPOUSE=0,ZIC=""
"RTN","DGMTUTL1",23,0)
 ;
"RTN","DGMTUTL1",24,0)
 ; Build Individual Annual Income and Income Relation Arrays
"RTN","DGMTUTL1",25,0)
 D ALL^DGMTU21(DFN,"VSC",DGMTDT)
"RTN","DGMTUTL1",26,0)
 ;
"RTN","DGMTUTL1",27,0)
 ; Build ZMT array for CC's
"RTN","DGMTUTL1",28,0)
 S $P(ARRAY("ZMT"),U,2)=$P($G(^DGMT(408.31,DGMTI,0)),U,1)
"RTN","DGMTUTL1",29,0)
 S $P(ARRAY("ZMT"),U,2)=$E($P(ARRAY("ZMT"),U,2),1,3)+1700_$E($P(ARRAY("ZMT"),U,2),4,7)
"RTN","DGMTUTL1",30,0)
 S $P(ARRAY("ZMT"),U,3)=$P($G(^DGMT(408.31,DGMTI,0)),U,3)
"RTN","DGMTUTL1",31,0)
 S $P(ARRAY("ZMT"),U,3)=$P(^DG(408.32,$P(ARRAY("ZMT"),U,3),0),U,2)
"RTN","DGMTUTL1",32,0)
 ;
"RTN","DGMTUTL1",33,0)
 ; Build Spouse ZIC Arrays
"RTN","DGMTUTL1",34,0)
 I $D(DGREL("S")) S SPOUSE=1,ARRAY(SPOUSE,"ZIC")=$$ZIC^DGMTUTL2(DGINC("S"),SPOUSE),ARRAY(SPOUSE,"ZIR")=$$ZIR^DGMTUTL2(DGINR("S")),ARRAY(SPOUSE,"ZDP")=$$ZDP^DGMTUTL2(DGREL("S"),SPOUSE)
"RTN","DGMTUTL1",35,0)
 I SPOUSE D ZDP^IVMCMF2(ARRAY(SPOUSE,"ZDP"))
"RTN","DGMTUTL1",36,0)
 ;
"RTN","DGMTUTL1",37,0)
 ; Build Dependent ZDP, ZIC & ZIR Arrays
"RTN","DGMTUTL1",38,0)
 F IEN=1:1:DGDEP S DIEN=IEN+SPOUSE,ARRAY(DIEN,"ZDP")=$$ZDP^DGMTUTL2(DGREL("C",IEN),DIEN),ARRAY(DIEN,"ZIC")=$$ZIC^DGMTUTL2(DGINC("C",IEN),DIEN),ARRAY(DIEN,"ZIR")=$$ZIR^DGMTUTL2(DGINR("C",IEN),DIEN)
"RTN","DGMTUTL1",39,0)
 S DEP=DGDEP+SPOUSE
"RTN","DGMTUTL1",40,0)
 ;
"RTN","DGMTUTL1",41,0)
 ; Perform the inconsistency Checks for the Veteran
"RTN","DGMTUTL1",42,0)
 I $D(DGINR("V")) D
"RTN","DGMTUTL1",43,0)
 .S ZIC=$$ZIC^DGMTUTL2(DGINC("V"))
"RTN","DGMTUTL1",44,0)
 .S ZIR=$$ZIR^DGMTUTL2(DGINR("V"),DGMTDT)
"RTN","DGMTUTL1",45,0)
 .D ZIR^IVMCMF1(ZIR,"")
"RTN","DGMTUTL1",46,0)
 ;
"RTN","DGMTUTL1",47,0)
 I "^1^2^4^"[("^"_IVMTYPE_"^"),(ZIC'="") D 
"RTN","DGMTUTL1",48,0)
 .S ZMT=$$ZMT^DGMTUTL2(DGMTI)
"RTN","DGMTUTL1",49,0)
 .M ARRAY("ZIC")=ZIC
"RTN","DGMTUTL1",50,0)
 .D ZMT^IVMCMF2(ZMT)
"RTN","DGMTUTL1",51,0)
 ;
"RTN","DGMTUTL1",52,0)
 ; Perform the Consistency Checks for the dependent(s)
"RTN","DGMTUTL1",53,0)
 F IEN=(SPOUSE+1):1:DEP D ZDP^IVMCMF2(ARRAY(IEN,"ZDP")),ZIR^IVMCMF1(ARRAY(IEN,"ZIR"),IEN),ZIC^IVMCMF1(ARRAY(IEN,"ZIC"),IEN)
"RTN","DGMTUTL1",54,0)
 ;
"RTN","DGMTUTL1",55,0)
 Q
"RTN","DGMTUTL2")
0^2^B24543811
"RTN","DGMTUTL2",1,0)
DGMTUTL2 ;ALB/RMM - Means Test Consistency Checker ; 04/28/2005
"RTN","DGMTUTL2",2,0)
 ;;5.3;Registration;**463,655**;Aug 13, 1993
"RTN","DGMTUTL2",3,0)
 ;
"RTN","DGMTUTL2",4,0)
 ; This routine sets the data strings used in the Income Test
"RTN","DGMTUTL2",5,0)
 ; Inconsistency Checks.
"RTN","DGMTUTL2",6,0)
 Q
"RTN","DGMTUTL2",7,0)
 ;
"RTN","DGMTUTL2",8,0)
ZIC(VAFIEN,DEPIEN) ; Build ZIC the data string for the veteran
"RTN","DGMTUTL2",9,0)
 ;
"RTN","DGMTUTL2",10,0)
 N NODE0,NODE1,NODE2,ZIC
"RTN","DGMTUTL2",11,0)
 S NODE0=$G(^DGMT(408.21,VAFIEN,0))
"RTN","DGMTUTL2",12,0)
 S NODE1=$G(^DGMT(408.21,VAFIEN,1))
"RTN","DGMTUTL2",13,0)
 S NODE2=$G(^DGMT(408.21,VAFIEN,2))
"RTN","DGMTUTL2",14,0)
 S ZIC="ZIC"
"RTN","DGMTUTL2",15,0)
 S $P(ZIC,U,2)=$P(NODE0,U,1)         ;Income Year
"RTN","DGMTUTL2",16,0)
 S $P(ZIC,U,3)=$P(NODE0,U,8)         ;Social Security
"RTN","DGMTUTL2",17,0)
 S $P(ZIC,U,4)=$P(NODE0,U,9)         ;U.S. Civil Service
"RTN","DGMTUTL2",18,0)
 S $P(ZIC,U,5)=$P(NODE0,U,10)        ;U.S. Railroad Retirement
"RTN","DGMTUTL2",19,0)
 S $P(ZIC,U,6)=$P(NODE0,U,11)        ;Military Retirement
"RTN","DGMTUTL2",20,0)
 S $P(ZIC,U,7)=$P(NODE0,U,12)        ;Unemployment Compensation
"RTN","DGMTUTL2",21,0)
 S $P(ZIC,U,9)=$P(NODE0,U,14)        ;Total Income from Employment
"RTN","DGMTUTL2",22,0)
 S $P(ZIC,U,10)=$P(NODE0,U,15)       ;Interest,Dividend,Annuity
"RTN","DGMTUTL2",23,0)
 S $P(ZIC,U,11)=$P(NODE0,U,16)       ;Workers Comp. or Black Lung
"RTN","DGMTUTL2",24,0)
 S $P(ZIC,U,12)=$P(NODE0,U,17)       ;All Other Income
"RTN","DGMTUTL2",25,0)
 S $P(ZIC,U,13)=$P(NODE1,U,1)        ;Medical Expenses
"RTN","DGMTUTL2",26,0)
 S $P(ZIC,U,14)=$P(NODE1,U,2)        ;Funeral And Burial Expenses
"RTN","DGMTUTL2",27,0)
 S $P(ZIC,U,15)=$P(NODE1,U,3)        ;Educational Expenses
"RTN","DGMTUTL2",28,0)
 S $P(ZIC,U,16)=$P(NODE2,U,1)        ;Cash, Amount In Bank Accounts
"RTN","DGMTUTL2",29,0)
 S $P(ZIC,U,17)=$P(NODE2,U,2)        ;Stocks And Bonds
"RTN","DGMTUTL2",30,0)
 S $P(ZIC,U,18)=$P(NODE2,U,3)        ;Real Property
"RTN","DGMTUTL2",31,0)
 S $P(ZIC,U,19)=$P(NODE2,U,4)        ;Other Property or Assets
"RTN","DGMTUTL2",32,0)
 S $P(ZIC,U,20)=$P(NODE2,U,5)        ;Debts
"RTN","DGMTUTL2",33,0)
 ;
"RTN","DGMTUTL2",34,0)
 ; Adjust date field to correct format
"RTN","DGMTUTL2",35,0)
 S $P(ZIC,U,2)=$E($P(ZIC,U,2),1,3)+1700_$E($P(ZIC,U,2),4,7)
"RTN","DGMTUTL2",36,0)
 ;
"RTN","DGMTUTL2",37,0)
 Q ZIC
"RTN","DGMTUTL2",38,0)
 ;
"RTN","DGMTUTL2",39,0)
ZIR(VAFIEN,DEPIEN) ; Build ZIR the data string for the veteran
"RTN","DGMTUTL2",40,0)
 N NODE0,ZIR
"RTN","DGMTUTL2",41,0)
 S NODE0=$G(^DGMT(408.22,VAFIEN,0)),ZIR="ZIR"
"RTN","DGMTUTL2",42,0)
 S $P(ZIR,U,3)=$P(NODE0,U,6)         ;Lived With Patient
"RTN","DGMTUTL2",43,0)
 S $P(ZIR,U,4)=$P(NODE0,U,7)         ;Amount Contributed to Spouse
"RTN","DGMTUTL2",44,0)
 S $P(ZIR,U,8)=$P(NODE0,U,11)        ;Child Had Income
"RTN","DGMTUTL2",45,0)
 S $P(ZIR,U,9)=$P(NODE0,U,12)        ;Income Available to You
"RTN","DGMTUTL2",46,0)
 Q ZIR
"RTN","DGMTUTL2",47,0)
 ;
"RTN","DGMTUTL2",48,0)
ZMT(DGMTI) ; Build ZMT the data string for the veteran
"RTN","DGMTUTL2",49,0)
 ;
"RTN","DGMTUTL2",50,0)
 N NODE0,NODE2,ZMT
"RTN","DGMTUTL2",51,0)
 S NODE0=$G(^DGMT(408.31,DGMTI,0))
"RTN","DGMTUTL2",52,0)
 S NODE2=$G(^DGMT(408.31,DGMTI,2)),ZMT="ZMT"
"RTN","DGMTUTL2",53,0)
 S $P(ZMT,U,2)=$P(NODE0,U,1)         ;Means Test Date
"RTN","DGMTUTL2",54,0)
 S $P(ZMT,U,3)=$P(NODE0,U,3)         ;Means Test Status
"RTN","DGMTUTL2",55,0)
 S $P(ZMT,U,4)=$P(NODE0,U,4)         ;Income
"RTN","DGMTUTL2",56,0)
 S $P(ZMT,U,5)=$P(NODE0,U,5)         ;Net Worth
"RTN","DGMTUTL2",57,0)
 S $P(ZMT,U,6)=$P(NODE0,U,10)        ;Date/Time of Adjudication
"RTN","DGMTUTL2",58,0)
 S $P(ZMT,U,7)=$P(NODE0,U,11)        ;Agreed to Pay Deductible
"RTN","DGMTUTL2",59,0)
 S $P(ZMT,U,8)=$P(NODE0,U,12)        ;Threshold A
"RTN","DGMTUTL2",60,0)
 S $P(ZMT,U,9)=$P(NODE0,U,15)        ;Deductible Expenses
"RTN","DGMTUTL2",61,0)
 S $P(ZMT,U,10)=$P(NODE0,U,7)        ;Date/Time MT Completed
"RTN","DGMTUTL2",62,0)
 S $P(ZMT,U,11)=$P(NODE0,U,16)       ;Previous Yr MT Threshold Flag
"RTN","DGMTUTL2",63,0)
 S $P(ZMT,U,12)=$P(NODE0,U,18)       ;Total Dependents
"RTN","DGMTUTL2",64,0)
 S $P(ZMT,U,13)=$P(NODE0,U,20)       ;Hardship
"RTN","DGMTUTL2",65,0)
 S $P(ZMT,U,14)=$P(NODE0,U,21)       ;Hardship Review Date
"RTN","DGMTUTL2",66,0)
 S $P(ZMT,U,15)=$P(NODE0,U,24)       ;Date Veteran Signed Test
"RTN","DGMTUTL2",67,0)
 S $P(ZMT,U,16)=$P(NODE0,U,14)       ;Declines to Give Income Info
"RTN","DGMTUTL2",68,0)
 S $P(ZMT,U,17)=$P(NODE0,U,19)       ;Type of Test
"RTN","DGMTUTL2",69,0)
 S $P(ZMT,U,18)=$P(NODE0,U,23)       ;Source of Income Test
"RTN","DGMTUTL2",70,0)
 S $P(ZMT,U,19)=$P($G(^DGMT(408.31,DGMTI,"PRIM")),U,1)  ;Primary Test?
"RTN","DGMTUTL2",71,0)
 S $P(ZMT,U,20)=$P(NODE0,U,25)       ;Date IVM Verif. MT Completed
"RTN","DGMTUTL2",72,0)
 S $P(ZMT,U,21)=$P(NODE0,U,26)       ;Refused To Sign
"RTN","DGMTUTL2",73,0)
 S $P(ZMT,U,22)=$P(NODE2,U,5)        ;Site Conducting Test
"RTN","DGMTUTL2",74,0)
 S $P(ZMT,U,23)=$P(NODE2,U,4)        ;Hardship Review Site
"RTN","DGMTUTL2",75,0)
 S $P(ZMT,U,24)=$P(NODE2,U,1)        ;Hardship Effective Date
"RTN","DGMTUTL2",76,0)
 S $P(ZMT,U,25)=$P(NODE2,U,2)        ;Date/Time Test Last Edited
"RTN","DGMTUTL2",77,0)
 S $P(ZMT,U,26)=$P(NODE2,U,3)        ;Test Determined Status
"RTN","DGMTUTL2",78,0)
 S $P(ZMT,U,28)=$P(NODE0,U,27)       ;GMT Threshold
"RTN","DGMTUTL2",79,0)
 ;
"RTN","DGMTUTL2",80,0)
 ; Adjust date fields to correct format
"RTN","DGMTUTL2",81,0)
 S $P(ZMT,U,2)=$E($P(ZMT,U,2),1,3)+1700_$E($P(ZMT,U,2),4,7)
"RTN","DGMTUTL2",82,0)
 S $P(ZMT,U,10)=$E($P(ZMT,U,10),1,3)+1700_$E($P(ZMT,U,10),4,7)
"RTN","DGMTUTL2",83,0)
 S $P(ZMT,U,25)=$E($P(ZMT,U,25),1,3)+1700_$E($P(ZMT,U,25),4,7)_$P($P(ZMT,U,25),".",2)_"-400"
"RTN","DGMTUTL2",84,0)
 ;
"RTN","DGMTUTL2",85,0)
 ; Change Status IENs to Codes
"RTN","DGMTUTL2",86,0)
 S:$P(ZMT,U,26)="" $P(ZMT,U,26)=$P(ZMT,U,3)
"RTN","DGMTUTL2",87,0)
 S $P(ZMT,U,3)=$P(^DG(408.32,$P(ZMT,U,3),0),U,2)
"RTN","DGMTUTL2",88,0)
 S $P(ZMT,U,26)=$P(^DG(408.32,$P(ZMT,U,26),0),U,2)
"RTN","DGMTUTL2",89,0)
 ;
"RTN","DGMTUTL2",90,0)
 Q ZMT
"RTN","DGMTUTL2",91,0)
 ;
"RTN","DGMTUTL2",92,0)
ZDP(VAFIEN,DEPIEN) ; Build ZDP the data string for the veteran
"RTN","DGMTUTL2",93,0)
 ;
"RTN","DGMTUTL2",94,0)
 N NODE0,NODER,DGPR,ZDP,LIEN
"RTN","DGMTUTL2",95,0)
 S NODE0=$G(^DGPR(408.12,+VAFIEN,0)),ZDP="ZDP"
"RTN","DGMTUTL2",96,0)
 S DGPR=+$P(NODE0,U,3),NODER=^DGPR(408.13,DGPR,0)
"RTN","DGMTUTL2",97,0)
 S $P(ZDP,U,2)=$P(NODER,U,1)         ;Name
"RTN","DGMTUTL2",98,0)
 S $P(ZDP,U,3)=$P(NODER,U,2)         ;Sex
"RTN","DGMTUTL2",99,0)
 S $P(ZDP,U,4)=$P(NODER,U,3)         ;Date of Birth
"RTN","DGMTUTL2",100,0)
 S $P(ZDP,U,5)=$P(NODER,U,9)         ;Social Security Number
"RTN","DGMTUTL2",101,0)
 S $P(ZDP,U,6)=$P(NODE0,U,2)         ;Relationship To Patient
"RTN","DGMTUTL2",102,0)
 S $P(ZDP,U,7)=+VAFIEN               ;Internal Entry Number
"RTN","DGMTUTL2",103,0)
 S LIEN=$O(^DGPR(408.12,+VAFIEN,"E","AID"),-1)
"RTN","DGMTUTL2",104,0)
 S $P(ZDP,U,9)=+^DGPR(408.12,+VAFIEN,"E",LIEN,0)
"RTN","DGMTUTL2",105,0)
 ;
"RTN","DGMTUTL2",106,0)
 ; Change format to match CC format
"RTN","DGMTUTL2",107,0)
 S $P(ZDP,U,2)=$TR($P(ZDP,U,2),",","~")
"RTN","DGMTUTL2",108,0)
 S $P(ZDP,U,4)=$E($P(ZDP,U,4),1,3)+1700_$E($P(ZDP,U,4),4,7)
"RTN","DGMTUTL2",109,0)
 S $P(ZDP,U,9)=$E($P(ZDP,U,9),1,3)+1700_$E($P(ZDP,U,9),4,7)
"RTN","DGMTUTL2",110,0)
 ;
"RTN","DGMTUTL2",111,0)
 Q ZDP
"RTN","DGMTUTL2",112,0)
                                                                                
"VER")
8.0^22.0
**INSTALL NAME**
IVM*2.0*107
"BLD",5501,0)
IVM*2.0*107^INCOME VERIFICATION MATCH^0^3050909^y
"BLD",5501,4,0)
^9.64PA^^
"BLD",5501,"KRN",0)
^9.67PA^8989.52^19
"BLD",5501,"KRN",.4,0)
.4
"BLD",5501,"KRN",.401,0)
.401
"BLD",5501,"KRN",.402,0)
.402
"BLD",5501,"KRN",.403,0)
.403
"BLD",5501,"KRN",.5,0)
.5
"BLD",5501,"KRN",.84,0)
.84
"BLD",5501,"KRN",3.6,0)
3.6
"BLD",5501,"KRN",3.8,0)
3.8
"BLD",5501,"KRN",9.2,0)
9.2
"BLD",5501,"KRN",9.8,0)
9.8
"BLD",5501,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",5501,"KRN",9.8,"NM",1,0)
IVMCMF^^0^B8190822
"BLD",5501,"KRN",9.8,"NM",2,0)
IVMCMF1^^0^B5711524
"BLD",5501,"KRN",9.8,"NM",3,0)
IVMCMF2^^0^B8461822
"BLD",5501,"KRN",9.8,"NM",4,0)
IVMCMF3^^0^B14559639
"BLD",5501,"KRN",9.8,"NM","B","IVMCMF",1)

"BLD",5501,"KRN",9.8,"NM","B","IVMCMF1",2)

"BLD",5501,"KRN",9.8,"NM","B","IVMCMF2",3)

"BLD",5501,"KRN",9.8,"NM","B","IVMCMF3",4)

"BLD",5501,"KRN",19,0)
19
"BLD",5501,"KRN",19.1,0)
19.1
"BLD",5501,"KRN",101,0)
101
"BLD",5501,"KRN",409.61,0)
409.61
"BLD",5501,"KRN",771,0)
771
"BLD",5501,"KRN",870,0)
870
"BLD",5501,"KRN",8989.51,0)
8989.51
"BLD",5501,"KRN",8989.52,0)
8989.52
"BLD",5501,"KRN",8994,0)
8994
"BLD",5501,"KRN","B",.4,.4)

"BLD",5501,"KRN","B",.401,.401)

"BLD",5501,"KRN","B",.402,.402)

"BLD",5501,"KRN","B",.403,.403)

"BLD",5501,"KRN","B",.5,.5)

"BLD",5501,"KRN","B",.84,.84)

"BLD",5501,"KRN","B",3.6,3.6)

"BLD",5501,"KRN","B",3.8,3.8)

"BLD",5501,"KRN","B",9.2,9.2)

"BLD",5501,"KRN","B",9.8,9.8)

"BLD",5501,"KRN","B",19,19)

"BLD",5501,"KRN","B",19.1,19.1)

"BLD",5501,"KRN","B",101,101)

"BLD",5501,"KRN","B",409.61,409.61)

"BLD",5501,"KRN","B",771,771)

"BLD",5501,"KRN","B",870,870)

"BLD",5501,"KRN","B",8989.51,8989.51)

"BLD",5501,"KRN","B",8989.52,8989.52)

"BLD",5501,"KRN","B",8994,8994)

"BLD",5501,"QUES",0)
^9.62^^
"BLD",5501,"REQB",0)
^9.611^2^2
"BLD",5501,"REQB",1,0)
IVM*2.0*71^2
"BLD",5501,"REQB",2,0)
IVM*2.0*82^2
"BLD",5501,"REQB","B","IVM*2.0*71",1)

"BLD",5501,"REQB","B","IVM*2.0*82",2)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
107^3050909
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","IVMCMF")
0^1^B8190822
"RTN","IVMCMF",1,0)
IVMCMF ;ALB/RMM - INCOME TEST EDIT CHECK DRIVER ; 04/28/2005
"RTN","IVMCMF",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**71,82,107**;21-OCT-94
"RTN","IVMCMF",3,0)
 ;
"RTN","IVMCMF",4,0)
 ; This routine will perform edit checks to validate income tests which
"RTN","IVMCMF",5,0)
 ; are transmitted to VistA from the IVM Center. Any errors will be 
"RTN","IVMCMF",6,0)
 ; recorded and will be added to the record in the ANNUAL MEANS TEST 
"RTN","IVMCMF",7,0)
 ; File #408.31.
"RTN","IVMCMF",8,0)
 ;
"RTN","IVMCMF",9,0)
 ; This routine is called from IVMCM1.
"RTN","IVMCMF",10,0)
 ;
"RTN","IVMCMF",11,0)
 ; Required Input:
"RTN","IVMCMF",12,0)
 ;   The global array ^TMP($J,"IVMCM" which contains the income test
"RTN","IVMCMF",13,0)
 ;   The local variable IVMTYPE, which may be:
"RTN","IVMCMF",14,0)
 ;       1 - Means Test
"RTN","IVMCMF",15,0)
 ;       2 - Copay Test
"RTN","IVMCMF",16,0)
 ;       4 - Long Term Care Test
"RTN","IVMCMF",17,0)
 ;
"RTN","IVMCMF",18,0)
 ; Output:
"RTN","IVMCMF",19,0)
 ;   Array IVMERR as a list of error condition(s) found (free text)
"RTN","IVMCMF",20,0)
 ;
"RTN","IVMCMF",21,0)
EN(IVMERR) ; Entry point to begin edit checks.
"RTN","IVMCMF",22,0)
 ;
"RTN","IVMCMF",23,0)
 N ARRAY,DEP,I,IEN,SPOUSE,CNT,HLERR
"RTN","IVMCMF",24,0)
 S (DEP,CNT)=1,SPOUSE=0
"RTN","IVMCMF",25,0)
 I +$G(IVMTYPE)'>0 S CNT=CNT+1,IVMERR(CNT)="Income Test Type not Specified"
"RTN","IVMCMF",26,0)
 ;
"RTN","IVMCMF",27,0)
 ; Build strings for the veteran
"RTN","IVMCMF",28,0)
 S ARRAY("PID")=$$CLEAR($G(^TMP($J,"IVMCM","PIDV")))
"RTN","IVMCMF",29,0)
 S ARRAY("ZIC")=$$CLEAR($G(^TMP($J,"IVMCM","ZICV"))),$P(ARRAY("ZIC"),HLFS,21)=$$TOTAL^IVMCME(ARRAY("ZIC"))
"RTN","IVMCMF",30,0)
 S ARRAY("ZIR")=$$CLEAR($G(^TMP($J,"IVMCM","ZIRV")))
"RTN","IVMCMF",31,0)
 ;
"RTN","IVMCMF",32,0)
 ; Build string for spouse as dependent
"RTN","IVMCMF",33,0)
 S ARRAY(DEP,"ZDP")=$$CLEAR($G(^TMP($J,"IVMCM","ZDPS")))
"RTN","IVMCMF",34,0)
 S ARRAY(DEP,"ZIC")=$$CLEAR($G(^TMP($J,"IVMCM","ZICS")))
"RTN","IVMCMF",35,0)
 S ARRAY(DEP,"ZIR")=$$CLEAR($G(^TMP($J,"IVMCM","ZIRS")))
"RTN","IVMCMF",36,0)
 D ADJ^IVMCME
"RTN","IVMCMF",37,0)
 ;
"RTN","IVMCMF",38,0)
 ; Build strings for children as dependents
"RTN","IVMCMF",39,0)
 S IEN=0 F  S IEN=$O(^TMP($J,"IVMCM","ZDPC",IEN)) Q:'IEN  D
"RTN","IVMCMF",40,0)
 . S DEP=DEP+1
"RTN","IVMCMF",41,0)
 . S ARRAY(DEP,"ZDP")=$$CLEAR($G(^TMP($J,"IVMCM","ZDPC",IEN)))
"RTN","IVMCMF",42,0)
 . S ARRAY(DEP,"ZIC")=$$CLEAR($G(^TMP($J,"IVMCM","ZICC",IEN)))
"RTN","IVMCMF",43,0)
 . S ARRAY(DEP,"ZIR")=$$CLEAR($G(^TMP($J,"IVMCM","ZIRC",IEN)))
"RTN","IVMCMF",44,0)
 . D ADJ^IVMCME
"RTN","IVMCMF",45,0)
 ;
"RTN","IVMCMF",46,0)
 ; - build income test string and check for errors
"RTN","IVMCMF",47,0)
 S ARRAY("ZMT")=$$CLEAR($G(^TMP($J,"IVMCM","ZMT"_IVMTYPE)))
"RTN","IVMCMF",48,0)
 ;
"RTN","IVMCMF",49,0)
 I '$$UPLDOK() S HLERR="Income Test not Uploaded",OK2UPLD=0 D ACK^IVMPREC Q
"RTN","IVMCMF",50,0)
 ;
"RTN","IVMCMF",51,0)
 ; Check Income Test before applying consistency checks
"RTN","IVMCMF",52,0)
 ; - If AGREED TO PAY DEDUCTIBLE is NO
"RTN","IVMCMF",53,0)
 ; - or DECLINES TO GIVE INCOME INFO and AGREED TO PAY DEDUCTIBLE are YES
"RTN","IVMCMF",54,0)
 ; Quit, the consistency checks are unnecessary.
"RTN","IVMCMF",55,0)
 N APD,DTGII S APD=$P(ARRAY("ZMT"),U,11),DTGII=$P(ARRAY("ZMT"),U,14)
"RTN","IVMCMF",56,0)
 I APD=0!(APD=1&(DTGII=1)) Q
"RTN","IVMCMF",57,0)
 ;
"RTN","IVMCMF",58,0)
 D CHECK
"RTN","IVMCMF",59,0)
ENQ Q
"RTN","IVMCMF",60,0)
 ;
"RTN","IVMCMF",61,0)
CLEAR(NODE) ; Convert HLQ to NULL
"RTN","IVMCMF",62,0)
 N I
"RTN","IVMCMF",63,0)
 F I=1:1:$L(NODE,HLFS) I $P(NODE,HLFS,I)=HLQ S $P(NODE,HLFS,I)=""
"RTN","IVMCMF",64,0)
 Q NODE
"RTN","IVMCMF",65,0)
 ;
"RTN","IVMCMF",66,0)
CHECK ; Check validity of transmission data
"RTN","IVMCMF",67,0)
 N IEN
"RTN","IVMCMF",68,0)
 I "^1^2^4^"[("^"_IVMTYPE_"^") D ZMT^IVMCMF2(ARRAY("ZMT"))
"RTN","IVMCMF",69,0)
 D ZIR^IVMCMF1(ARRAY("ZIR"))
"RTN","IVMCMF",70,0)
 ;
"RTN","IVMCMF",71,0)
 S IEN="" F  S IEN=$O(ARRAY(IEN)) Q:'IEN  D
"RTN","IVMCMF",72,0)
 . D ZDP^IVMCMF2(ARRAY(IEN,"ZDP"))
"RTN","IVMCMF",73,0)
 . D ZIC^IVMCMF1(ARRAY(IEN,"ZIC"),IEN)
"RTN","IVMCMF",74,0)
 . D ZIR^IVMCMF1(ARRAY(IEN,"ZIR"),IEN)
"RTN","IVMCMF",75,0)
CHECKQ Q
"RTN","IVMCMF",76,0)
 ;
"RTN","IVMCMF",77,0)
UPLDOK() ; Check if the test is complete and OK to upload
"RTN","IVMCMF",78,0)
 ; Quit if not a valid test type
"RTN","IVMCMF",79,0)
 I "^1^2^3^4^"'[(U_IVMTYPE_U) Q 0
"RTN","IVMCMF",80,0)
 ;
"RTN","IVMCMF",81,0)
 ; Check the Income Test Status
"RTN","IVMCMF",82,0)
 N DGSTAT S DGSTAT=$P(ARRAY("ZMT"),U,3)
"RTN","IVMCMF",83,0)
 I IVMTYPE=1,"^C^A^G^N^P^"'[(U_DGSTAT_U) Q 0
"RTN","IVMCMF",84,0)
 I IVMTYPE=2,"^M^E^L^"'[(U_DGSTAT_U) Q 0
"RTN","IVMCMF",85,0)
 I IVMTYPE=4,"^0^1^"'[(U_DGSTAT_U) Q 0
"RTN","IVMCMF",86,0)
 ;
"RTN","IVMCMF",87,0)
 ; Check if the test has been completed
"RTN","IVMCMF",88,0)
 I IVMTYPE'=3,+$P(ARRAY("ZMT"),U,10)'>0 Q 0
"RTN","IVMCMF",89,0)
 Q 1
"RTN","IVMCMF1")
0^2^B5711524
"RTN","IVMCMF1",1,0)
IVMCMF1 ;ALB/RMM - CHECK ANNUAL INCOME DATA ; 04/28/2005
"RTN","IVMCMF1",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**71,82,107**;21-OCT-94
"RTN","IVMCMF1",3,0)
 ;
"RTN","IVMCMF1",4,0)
 ; This routine is called from IVMCMF.
"RTN","IVMCMF1",5,0)
 ;
"RTN","IVMCMF1",6,0)
 ;
"RTN","IVMCMF1",7,0)
ZIC(STRING,DEPIEN) ; Check validity of ZIC segment
"RTN","IVMCMF1",8,0)
 ;
"RTN","IVMCMF1",9,0)
 ; Input:  STRING as ZIC segment
"RTN","IVMCMF1",10,0)
 ;         DEPIEN as the IEN of the dependent in the array, if applicable
"RTN","IVMCMF1",11,0)
 ;
"RTN","IVMCMF1",12,0)
 N X S X=$P(STRING,HLFS,2)
"RTN","IVMCMF1",13,0)
 I $G(DEPIEN) I DEPIEN'=SPOUSE D
"RTN","IVMCMF1",14,0)
 .I $P(STRING,HLFS,15)>0 S X=$P(^DG(43,1,"MT",(X-17000000),0),U,17) I X'<$P(STRING,HLFS,9) S CNT=CNT+1,IVMERR(CNT)="Income does not exceed child exclusion amount-educational expense not allowed"
"RTN","IVMCMF1",15,0)
ZICQ Q
"RTN","IVMCMF1",16,0)
 ;
"RTN","IVMCMF1",17,0)
ZIR(STRING,DEPIEN) ; Check validity of ZIR segment
"RTN","IVMCMF1",18,0)
 ;
"RTN","IVMCMF1",19,0)
 ; Input:  STRING as ZIR segment
"RTN","IVMCMF1",20,0)
 ;         DEPIEN as the IEN of the dependent in the array, if applicable
"RTN","IVMCMF1",21,0)
 ;
"RTN","IVMCMF1",22,0)
 N I,FND1
"RTN","IVMCMF1",23,0)
 I '$G(DEPIEN) D
"RTN","IVMCMF1",24,0)
 .I '$P(STRING,HLFS,3),SPOUSE,($P(STRING,HLFS,4)<600) S FND1=0 F I=3:1:20 Q:FND1  I $P(ARRAY(SPOUSE,"ZIC"),HLFS,I) S FND1=1,CNT=CNT+1,IVMERR(CNT)="No income data allowed if spouse didn't live w/vet & amt contributed <$600"
"RTN","IVMCMF1",25,0)
 I $G(DEPIEN),(DEPIEN'=SPOUSE) D
"RTN","IVMCMF1",26,0)
 .I '$P(STRING,HLFS,8) S FND1=0 F I=3:1:20 Q:FND1  I $P(ARRAY(DEPIEN,"ZIC"),HLFS,I) S CNT=CNT+1,IVMERR(CNT)="Shouldn't have income data if Child Had Income is NO",FND1=1
"RTN","IVMCMF1",27,0)
ZIRQ Q
"RTN","IVMCMF2")
0^3^B8461822
"RTN","IVMCMF2",1,0)
IVMCMF2 ;ALB/SEK - CHECK INCOME DEPENDENT DATA ; 01/02/03
"RTN","IVMCMF2",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**71,107**;21-OCT-94
"RTN","IVMCMF2",3,0)
 ;
"RTN","IVMCMF2",4,0)
 ; This routine is a called from IVMCMF.
"RTN","IVMCMF2",5,0)
 ;
"RTN","IVMCMF2",6,0)
ZMT(STRING) ; check ZMT segment
"RTN","IVMCMF2",7,0)
 ;
"RTN","IVMCMF2",8,0)
 ; Input:  STRING as ZMT segment
"RTN","IVMCMF2",9,0)
 ;
"RTN","IVMCMF2",10,0)
 N X,Y
"RTN","IVMCMF2",11,0)
 ;
"RTN","IVMCMF2",12,0)
 ; Means Test Status Checks
"RTN","IVMCMF2",13,0)
 I IVMTYPE=1,$P(STRING,HLFS,3)'="G" D MT^IVMCMF3(STRING,ARRAY("ZIC"))
"RTN","IVMCMF2",14,0)
 ;
"RTN","IVMCMF2",15,0)
 ; Copay Test Status Checks
"RTN","IVMCMF2",16,0)
 I IVMTYPE=2 D CO^IVMCMF3(STRING)
"RTN","IVMCMF2",17,0)
 ;
"RTN","IVMCMF2",18,0)
 ; Hardship consistency checks
"RTN","IVMCMF2",19,0)
 N HARDSHIP K HARDSHIP
"RTN","IVMCMF2",20,0)
 S HARDSHIP("Y/N")=$P(STRING,HLFS,13)
"RTN","IVMCMF2",21,0)
 S HARDSHIP("SITE")=$P(STRING,HLFS,23)
"RTN","IVMCMF2",22,0)
 S HARDSHIP("EFFDATE")=$P(STRING,HLFS,24)
"RTN","IVMCMF2",23,0)
 ;
"RTN","IVMCMF2",24,0)
 I (IVMTYPE'=4),(HARDSHIP("Y/N"))!(+HARDSHIP("SITE"))!(HARDSHIP("EFFDATE")) D
"RTN","IVMCMF2",25,0)
 .I HARDSHIP("Y/N")="" S CNT=CNT+1,IVMERR(CNT)="Missing Hardship Indicator"
"RTN","IVMCMF2",26,0)
 .I HARDSHIP("SITE")="" S CNT=CNT+1,IVMERR(CNT)="Missing Site Granting Hardship"
"RTN","IVMCMF2",27,0)
 .;starting in year 2000, all hardships should have an effective date
"RTN","IVMCMF2",28,0)
 .I $E($P(STRING,HLFS,2),1,4)'<2000,(HARDSHIP("EFFDATE")="") S CNT=CNT+1,IVMERR(CNT)="Missing Hardship Effective Date"
"RTN","IVMCMF2",29,0)
 .I $L(HARDSHIP("EFFDATE")) S X=$$FMDATE^HLFNC(HARDSHIP("EFFDATE")),%DT=X D ^%DT I Y<0 S CNT=CNT+1,IVMERR(CNT)="Invalid Hardship Effective Date"
"RTN","IVMCMF2",30,0)
 .I HARDSHIP("EFFDATE"),(HARDSHIP("EFFDATE")<($P(STRING,HLFS,2))-1) S CNT=CNT+1,IVMERR(CNT)="Hardship Effective Date earlier than Means Test Date"
"RTN","IVMCMF2",31,0)
 ;
"RTN","IVMCMF2",32,0)
 ; Source of Test
"RTN","IVMCMF2",33,0)
 S X=$P(STRING,HLFS,18)
"RTN","IVMCMF2",34,0)
 I "^1^2^3^4^"'[(U_X_U) S CNT=CNT+1,IVMERR(CNT)="Source of Test must be identified"
"RTN","IVMCMF2",35,0)
 I X=4,$P(STRING,HLFS,22)="" S CNT=CNT+1,IVMERR(CNT)="Site Conducting Test must be identified"
"RTN","IVMCMF2",36,0)
 ;
"RTN","IVMCMF2",37,0)
ZMTQ Q
"RTN","IVMCMF2",38,0)
 ;
"RTN","IVMCMF2",39,0)
ZDP(STRING) ; Check validity of ZDP segment
"RTN","IVMCMF2",40,0)
 ;
"RTN","IVMCMF2",41,0)
 ; Input:  STRING as ZDP segment
"RTN","IVMCMF2",42,0)
 ;
"RTN","IVMCMF2",43,0)
 N RELAT,IVMZDP5
"RTN","IVMCMF2",44,0)
 S IVMZDP5=$P(STRING,HLFS,5)
"RTN","IVMCMF2",45,0)
 I +IVMZDP5'>0 D  G ZDPQ
"RTN","IVMCMF2",46,0)
 .S RELAT=$P(STRING,HLFS,6),RELAT=$S($D(^DG(408.11,RELAT,0)):$P(^DG(408.11,RELAT,0),HLFS),1:"OTHER")
"RTN","IVMCMF2",47,0)
 .S CNT=CNT+1,IVMERR(CNT)="Dependent ("_RELAT_") transmitted without SSN"
"RTN","IVMCMF2",48,0)
 I $D(IVMAR2(IVMZDP5)) S CNT=CNT+1,IVMERR(CNT)="Two dependents transmitted with same SSN"
"RTN","IVMCMF2",49,0)
 S IVMAR2(IVMZDP5)=""
"RTN","IVMCMF2",50,0)
ZDPQ Q
"RTN","IVMCMF3")
0^4^B14559639
"RTN","IVMCMF3",1,0)
IVMCMF3 ;ALB/RMM - CHECK INCOME TEST DATA (CON'T.) ; 01/02/03
"RTN","IVMCMF3",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**71,107**;21-OCT-94
"RTN","IVMCMF3",3,0)
 ;
"RTN","IVMCMF3",4,0)
 ;
"RTN","IVMCMF3",5,0)
 ; This routine is called from IVMCMF2.
"RTN","IVMCMF3",6,0)
 ;
"RTN","IVMCMF3",7,0)
MT(STRING,INCOME) ; Calculate means test status
"RTN","IVMCMF3",8,0)
 ; DGMTBS - BASE THRESHOLD VALUE FOR SITE
"RTN","IVMCMF3",9,0)
 ; DGMTBH - BASE THRESHOLD VALUE SENT FROM HEC
"RTN","IVMCMF3",10,0)
 ; DGTDEP - TOTAL # OF DEPENDENTS SENT BY HEC.
"RTN","IVMCMF3",11,0)
 ;
"RTN","IVMCMF3",12,0)
 N X,Y,ADJ,HAR,INC,NET,THRESH,THRESHA,THRESHT,IVMTEXT,XMSUB,CAT,CAT1
"RTN","IVMCMF3",13,0)
 N VADM,DGMTBS,DGMTBH,DGTDEP,DGMTICY,DGMTCMP,DECLINE,DGMTICYR
"RTN","IVMCMF3",14,0)
 S CAT1=$P(STRING,HLFS,3),CAT=$P(STRING,HLFS,26) I CAT="" S CAT=CAT1
"RTN","IVMCMF3",15,0)
 ;
"RTN","IVMCMF3",16,0)
 ; If previous yr mt threshold flag is set use date of prev year
"RTN","IVMCMF3",17,0)
 S X=$S($P(STRING,HLFS,11):($E($P(STRING,HLFS,2),1,4)-1),1:$E($P(STRING,HLFS,2),1,4)),DGMTICY=$P($G(STRING),HLFS,2)
"RTN","IVMCMF3",18,0)
 N Y S Y=$$HL7TFM^XLFDT(DGMTICY,"1D") X ^DD("DD") S DGMTICY=Y
"RTN","IVMCMF3",19,0)
 S %DT="" D ^%DT S X=Y K %DT
"RTN","IVMCMF3",20,0)
 S THRESH=$G(^DG(43,1,"MT",X,0)),THRESHT=$P(THRESH,U,2),DGMTBS=THRESHT
"RTN","IVMCMF3",21,0)
 I $P(STRING,HLFS,12) S THRESHT=THRESHT+$P(THRESH,U,3)+(($P(STRING,HLFS,12)-1)*$P(THRESH,U,4)),DGTDEP=$P($G(STRING),HLFS,12)
"RTN","IVMCMF3",22,0)
 ;
"RTN","IVMCMF3",23,0)
 S INC=$P(STRING,HLFS,4)-$P(STRING,HLFS,9),NET=$P(STRING,HLFS,5)
"RTN","IVMCMF3",24,0)
 S ADJ=$P(STRING,HLFS,6),THRESHA=$P(STRING,HLFS,8),DGMTBH=THRESHA
"RTN","IVMCMF3",25,0)
 I $P(STRING,HLFS,12),(THRESHA'=THRESHT) S THRESHA=THRESHA+$P(THRESH,U,3)+(($P(STRING,HLFS,12)-1)*$P(THRESH,U,4))
"RTN","IVMCMF3",26,0)
 S DECLINE=$P(STRING,HLFS,16),HAR=$P(STRING,HLFS,13),DGMTCMP=+$P(STRING,HLFS,10)
"RTN","IVMCMF3",27,0)
 S DGMTICYR=$$LYR^DGMTSCU1($$HL7TFM^XLFDT($P(STRING,HLFS,2)))
"RTN","IVMCMF3",28,0)
 ;
"RTN","IVMCMF3",29,0)
 ; If Decline to Give Incone Info & MT CP Req, Quit
"RTN","IVMCMF3",30,0)
 I DECLINE,CAT="C" G MTQ
"RTN","IVMCMF3",31,0)
 ;
"RTN","IVMCMF3",32,0)
 ; If threshold A is incorrect, send message to sites's IVM MESSAGE
"RTN","IVMCMF3",33,0)
 ; mail group and continue to process
"RTN","IVMCMF3",34,0)
 I +DGMTBH>0,DGMTCMP>0,(CAT'="G"&(THRESHT'=THRESHA)) D
"RTN","IVMCMF3",35,0)
 .D:$G(DFN)'=""
"RTN","IVMCMF3",36,0)
 ..N VAHOW,VAROOT,VAPTYP
"RTN","IVMCMF3",37,0)
 ..D DEM^VADPT
"RTN","IVMCMF3",38,0)
 .S XMSUB="MT threshold discrepancy - "_"PID - "_$P($G(VADM(2)),U,2)
"RTN","IVMCMF3",39,0)
 .S IVMTEXT(1)="While uploading the following income test from HEC a"
"RTN","IVMCMF3",40,0)
 .S IVMTEXT(2)="discrepancy was found with the threshold A values."
"RTN","IVMCMF3",41,0)
 .S IVMTEXT(3)="  ",IVMTEXT(4)="   NAME: "_$G(VADM(1))
"RTN","IVMCMF3",42,0)
 .S IVMTEXT(5)="  ",IVMTEXT(6)="   PID : "_$P($G(VADM(2)),"^",2)
"RTN","IVMCMF3",43,0)
 .S IVMTEXT(8)="  ",IVMTEXT(9)="Date of Test sent from HEC: "_DGMTICY
"RTN","IVMCMF3",44,0)
 .S IVMTEXT(10)="  "
"RTN","IVMCMF3",45,0)
 .S IVMTEXT(11)="Site MT Threshold value: "_$J($FN($G(THRESHT),",",0),6)
"RTN","IVMCMF3",46,0)
 .S IVMTEXT(12)="  "
"RTN","IVMCMF3",47,0)
 .S IVMTEXT(13)="HEC Transmitted MT Threshold value: "_$J($FN($G(DGMTBH),",",0),6)
"RTN","IVMCMF3",48,0)
 .S IVMTEXT(14)="  ",IVMTEXT(16)="Total number of dependents: "_$G(DGTDEP)
"RTN","IVMCMF3",49,0)
 .S IVMTEXT(17)="  "
"RTN","IVMCMF3",50,0)
 .D MAIL^IVMUFNC("DGMT MT/CT UPLOAD ALERTS")
"RTN","IVMCMF3",51,0)
 .Q
"RTN","IVMCMF3",52,0)
 ;
"RTN","IVMCMF3",53,0)
 I INC'>THRESHA I ((INC+NET)'>$P(THRESH,U,8))&(CAT="C") S CNT=CNT+1,IVMERR(CNT)="Income plus net worth not greater than threshold value-incorrect status"
"RTN","IVMCMF3",54,0)
 I INC>THRESHA,CAT'="C",'HAR,'ADJ,CAT'="P" S CNT=CNT+1,IVMERR(CNT)="Incorrect means test status for Test-Determined Status"
"RTN","IVMCMF3",55,0)
MTQ Q
"RTN","IVMCMF3",56,0)
 ;
"RTN","IVMCMF3",57,0)
 ;
"RTN","IVMCMF3",58,0)
CO(STRING) ; Calculate copay test status
"RTN","IVMCMF3",59,0)
 ;
"RTN","IVMCMF3",60,0)
 ; Variables containing ZMT fields
"RTN","IVMCMF3",61,0)
 N CAT,CAT1,DGCAT,DGCOPS,DGCOST
"RTN","IVMCMF3",62,0)
 S CAT1=$P(STRING,HLFS,3),CAT=$P(STRING,HLFS,26) I CAT="" S CAT=CAT1
"RTN","IVMCMF3",63,0)
 S DGCOST=$$FMDATE^HLFNC($P(STRING,HLFS,2))_U_DFN_U_U_$P(STRING,HLFS,4)_U_U_U_U_U_U_U_U_U_U_$P(STRING,HLFS,16)_U_$P(STRING,HLFS,9)_U_U_U_$P(STRING,HLFS,12)_U_2
"RTN","IVMCMF3",64,0)
 S DGCOPS=$$INCDT^IBARXEU1(DGCOST),DGCAT=$S(+DGCOPS=1:"E",+DGCOPS=2:"M",+DGCOPS=3:"P",1:"I")
"RTN","IVMCMF3",65,0)
 I CAT'=DGCAT S CNT=CNT+1,IVMERR(CNT)="Copay Test Status should be "_DGCAT
"RTN","IVMCMF3",66,0)
COQ Q
"VER")
8.0^22.0
**END**
**END**
