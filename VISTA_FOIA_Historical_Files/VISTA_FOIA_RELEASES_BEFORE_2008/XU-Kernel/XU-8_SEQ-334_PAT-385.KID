Released XU*8*385 SEQ #334
Extracted from mail message
**KIDS**:XU*8.0*385^

**INSTALL NAME**
XU*8.0*385
"BLD",872,0)
XU*8.0*385^KERNEL^0^3060111^y
"BLD",872,1,0)
^^2^2^3060111^^
"BLD",872,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",872,1,2,0)
Patch XU*8*385 Cache HFS parameter update.
"BLD",872,4,0)
^9.64PA^^
"BLD",872,6.3)
3
"BLD",872,"KRN",0)
^9.67PA^8989.52^19
"BLD",872,"KRN",.4,0)
.4
"BLD",872,"KRN",.401,0)
.401
"BLD",872,"KRN",.402,0)
.402
"BLD",872,"KRN",.403,0)
.403
"BLD",872,"KRN",.5,0)
.5
"BLD",872,"KRN",.84,0)
.84
"BLD",872,"KRN",3.6,0)
3.6
"BLD",872,"KRN",3.8,0)
3.8
"BLD",872,"KRN",9.2,0)
9.2
"BLD",872,"KRN",9.8,0)
9.8
"BLD",872,"KRN",9.8,"NM",0)
^9.68A^6^5
"BLD",872,"KRN",9.8,"NM",1,0)
ZISFONT^^0^9426543
"BLD",872,"KRN",9.8,"NM",2,0)
ZISFVXD^^0^13039347
"BLD",872,"KRN",9.8,"NM",4,0)
ZISHONT^^0^45855984
"BLD",872,"KRN",9.8,"NM",5,0)
ZOSVONT^^0^22821420
"BLD",872,"KRN",9.8,"NM",6,0)
ZISHGTM^^0^32407982
"BLD",872,"KRN",9.8,"NM","B","ZISFONT",1)

"BLD",872,"KRN",9.8,"NM","B","ZISFVXD",2)

"BLD",872,"KRN",9.8,"NM","B","ZISHGTM",6)

"BLD",872,"KRN",9.8,"NM","B","ZISHONT",4)

"BLD",872,"KRN",9.8,"NM","B","ZOSVONT",5)

"BLD",872,"KRN",19,0)
19
"BLD",872,"KRN",19.1,0)
19.1
"BLD",872,"KRN",101,0)
101
"BLD",872,"KRN",409.61,0)
409.61
"BLD",872,"KRN",771,0)
771
"BLD",872,"KRN",870,0)
870
"BLD",872,"KRN",8989.51,0)
8989.51
"BLD",872,"KRN",8989.52,0)
8989.52
"BLD",872,"KRN",8994,0)
8994
"BLD",872,"KRN","B",.4,.4)

"BLD",872,"KRN","B",.401,.401)

"BLD",872,"KRN","B",.402,.402)

"BLD",872,"KRN","B",.403,.403)

"BLD",872,"KRN","B",.5,.5)

"BLD",872,"KRN","B",.84,.84)

"BLD",872,"KRN","B",3.6,3.6)

"BLD",872,"KRN","B",3.8,3.8)

"BLD",872,"KRN","B",9.2,9.2)

"BLD",872,"KRN","B",9.8,9.8)

"BLD",872,"KRN","B",19,19)

"BLD",872,"KRN","B",19.1,19.1)

"BLD",872,"KRN","B",101,101)

"BLD",872,"KRN","B",409.61,409.61)

"BLD",872,"KRN","B",771,771)

"BLD",872,"KRN","B",870,870)

"BLD",872,"KRN","B",8989.51,8989.51)

"BLD",872,"KRN","B",8989.52,8989.52)

"BLD",872,"KRN","B",8994,8994)

"BLD",872,"QUES",0)
^9.62^^
"BLD",872,"REQB",0)
^9.611^3^3
"BLD",872,"REQB",1,0)
XU*8.0*271^2
"BLD",872,"REQB",2,0)
XU*8.0*284^2
"BLD",872,"REQB",3,0)
XU*8.0*306^2
"BLD",872,"REQB","B","XU*8.0*271",1)

"BLD",872,"REQB","B","XU*8.0*284",2)

"BLD",872,"REQB","B","XU*8.0*306",3)

"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
385^3060111
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3060111
"PKG",3,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,2,0)
Patch XU*8*385 Cache HFS parameter update.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","ZISFONT")
0^1^B9426543^B8998822
"RTN","ZISFONT",1,0)
%ZISF ;SFISC/AC - HOST FILES FOR Cache on NT & VMS ;06/14/2005  15:44
"RTN","ZISFONT",2,0)
 ;;8.0;KERNEL;**34,191,271,385**;Jul 10, 1995;Build 3
"RTN","ZISFONT",3,0)
HFS ;Host File Server
"RTN","ZISFONT",4,0)
 ;Calling parameters in %ZIS override Device file.
"RTN","ZISFONT",5,0)
 Q:$D(IOP)&$D(%ZIS("HFSIO"))&$D(%ZIS("IOPAR"))
"RTN","ZISFONT",6,0)
 N %
"RTN","ZISFONT",7,0)
 ;Get file name
"RTN","ZISFONT",8,0)
 I $D(%ZIS("HFSNAME")) S IO=%ZIS("HFSNAME"),%X=IO ;
"RTN","ZISFONT",9,0)
 E  D ASKHFS ;Return name in %X
"RTN","ZISFONT",10,0)
 ;Mode or actual parameters
"RTN","ZISFONT",11,0)
H S:$D(%ZIS("HFSMODE")) %ZISOPAR=$$MODE(%ZIS("HFSMODE"))
"RTN","ZISFONT",12,0)
H1 I $D(IO("Q"))!(%ZIS["Z") S IO("HFSIO")=""
"RTN","ZISFONT",13,0)
 S IO=$S($L(%X):%X,1:IO),IO=$$CHKNM(IO) ;See that we have a directory
"RTN","ZISFONT",14,0)
 S:$D(IO("HFSIO")) IO("HFSIO")=IO
"RTN","ZISFONT",15,0)
 I '$D(IOP)&$D(%ZIS("HFSNAME")) S %="    HOST FILE USED:  "_%ZIS("HFSNAME") W:$X+$L(%)>75 ! W %,!
"RTN","ZISFONT",16,0)
 ;Check Ask Parameters
"RTN","ZISFONT",17,0)
 D ASKPAR^%ZIS6,SETPAR^%ZIS3
"RTN","ZISFONT",18,0)
 ;Check Ask IO Mode
"RTN","ZISFONT",19,0)
HFSIOO I '$D(IOP),%ZTYPE="HFS",'$D(%ZIS("HFSMODE")),'$P(^%ZIS(1,%E,0),"^",4),%ZISOPAR="",$P($G(^%ZIS(1,%E,1)),"^",6) D
"RTN","ZISFONT",20,0)
 . W:$X>19 ! W ?20,"INPUT/OUTPUT OPERATION: R//"
"RTN","ZISFONT",21,0)
 Q:'$T  D SBR^%ZIS1 I $D(DTOUT)!$D(DFOUT)!$D(DUOUT) S POP=1 Q
"RTN","ZISFONT",22,0)
 S:%X="" %X="R" S %X=$$UP^%ZIS1(%X)
"RTN","ZISFONT",23,0)
 D HOPT:%X="?"!'$$CHECK(%X),HOPT1:%X="??" G HFSIOO:%X="?"!'$$CHECK(%X)
"RTN","ZISFONT",24,0)
 S:%X]"" %ZISOPAR="("_$$MODE(%X)_")"
"RTN","ZISFONT",25,0)
 Q
"RTN","ZISFONT",26,0)
 ;
"RTN","ZISFONT",27,0)
CHECK(X) ;Check that we have valid option
"RTN","ZISFONT",28,0)
 N Y,%
"RTN","ZISFONT",29,0)
 Q:(X["R")&(X["W") 0 ;Can't have both
"RTN","ZISFONT",30,0)
 S Y=1 I $L($TR(X,"ANRW")) S Y=0
"RTN","ZISFONT",31,0)
 Q Y
"RTN","ZISFONT",32,0)
 ;
"RTN","ZISFONT",33,0)
ASKHFS ;---Ask host file name here---
"RTN","ZISFONT",34,0)
 I $D(%IS("B","HFS"))#2,%IS("B","HFS")]"" D
"RTN","ZISFONT",35,0)
 .S IO=%IS("B","HFS") ;Set default host file name
"RTN","ZISFONT",36,0)
 S %X='$P($G(^%ZIS(1,%E,1)),"^",5)
"RTN","ZISFONT",37,0)
 S:'%X %X=""
"RTN","ZISFONT",38,0)
 I $D(IOP)!%X!$D(%ZIS("HFSNAME")) S %X="" Q
"RTN","ZISFONT",39,0)
ASKAGN W !,"HOST FILE NAME: "_IO_"//" D SBR^%ZIS1
"RTN","ZISFONT",40,0)
 I %X?1."?".E W !,"ENTER HOST FILE NAME" G ASKAGN
"RTN","ZISFONT",41,0)
 S:$D(DTOUT)!$D(DUOUT) POP=1
"RTN","ZISFONT",42,0)
 Q
"RTN","ZISFONT",43,0)
CHKNM(H)        ;Check the HFS name
"RTN","ZISFONT",44,0)
 N N,%OS S N=H,%OS=$ZV
"RTN","ZISFONT",45,0)
 I %OS["VMS",(H'[":")&(H'["[") S N=$$DEFDIR^%ZISH("")_H ;VMS - disk:[directory]file
"RTN","ZISFONT",46,0)
 I %OS["NT",(H'["\")&(H'[":") S N=$$DEFDIR^%ZISH("")_H ;NT - C:\DIR\FILE
"RTN","ZISFONT",47,0)
 I %OS["UNIX",(H'["/") S N=$$DEFDIR^%ZISH("")_H ;UNIX/Linux - ./file or /mnt/dir/file
"RTN","ZISFONT",48,0)
 Q N
"RTN","ZISFONT",49,0)
 ;
"RTN","ZISFONT",50,0)
MODE(X) ;Return value for %ZISOPAR.
"RTN","ZISFONT",51,0)
 ;For VMS only, The H is for read SHARE. Going back to READ Stream mode.
"RTN","ZISFONT",52,0)
 N Y,Q S Q=$C(34)
"RTN","ZISFONT",53,0)
 I $ZV["VMS" S Y=$S(X="N":"NWS",X="W":"NWS",X="A":"AWS",1:"RHS")
"RTN","ZISFONT",54,0)
 E  S Y=$S(X="N":"NWS",X="W":"NWS",X="A":"AWS",1:"RS")
"RTN","ZISFONT",55,0)
 Q $S($L(Y):Q_Y_Q,1:Y)
"RTN","ZISFONT",56,0)
 ;
"RTN","ZISFONT",57,0)
HOPT W !,"You may enter a code that represents one of",!,"the following host file input/ouput operation:"
"RTN","ZISFONT",58,0)
 W !?16,"R = READ ACCESS",!?16,"W = WRITE ACCESS",!?16,"N = NEWVERSION",!?16,"A = APPEND"
"RTN","ZISFONT",59,0)
 Q
"RTN","ZISFONT",60,0)
 ;
"RTN","ZISFONT",61,0)
HOPT1 S %ZISI=$O(^DIC(9.2,"B","XUHFSPARAM-MVX",0)) Q:'%ZISI  Q:'$D(^DIC(9.2,+%ZISI,0))  Q:$P(^(0),"^",1)'="XUHFSPARAM-MVX"
"RTN","ZISFONT",62,0)
 Q:$D(^DIC(9.2,+%ZISI,1))'>9  F %X=0:0 S %X=$O(^DIC(9.2,+%ZISI,1,%X)) Q:%X'>0  I $D(^(%X,0)) W !,^(0)
"RTN","ZISFONT",63,0)
 W ! S %X="??"
"RTN","ZISFONT",64,0)
 Q
"RTN","ZISFVXD")
0^2^B13039347^B11619921
"RTN","ZISFVXD",1,0)
%ZISF ;SFISC/AC - HOST FILES (VAX DSM) ;06/02/2005  12:10
"RTN","ZISFVXD",2,0)
 ;;8.0;KERNEL;**104,385**;JUL 10, 1995;Build 3
"RTN","ZISFVXD",3,0)
HFS Q:$D(IOP)&$D(%IS("HFSIO"))&$D(%IS("IOPAR"))
"RTN","ZISFVXD",4,0)
 ;Calling parameters in %ZIS override Device file.
"RTN","ZISFVXD",5,0)
 N %
"RTN","ZISFVXD",6,0)
 ;Get file name
"RTN","ZISFVXD",7,0)
 I $D(%ZIS("HFSNAME")) S IO=%ZIS("HFSNAME"),%X=IO
"RTN","ZISFVXD",8,0)
 E  D ASKHFS
"RTN","ZISFVXD",9,0)
 ;Mode or actual parameters
"RTN","ZISFVXD",10,0)
H S:$D(%ZIS("HFSMODE")) %ZISOPAR=$$MODE(%ZIS("HFSMODE"))
"RTN","ZISFVXD",11,0)
H1 I $D(IO("Q"))!(%IS["Z") S IO("HFSIO")=""
"RTN","ZISFVXD",12,0)
 S %ZHFN=$S(%X]"":%X,1:IO),%ZHFN=$$CHKNM(%ZHFN),%XX=$&ZLIB.%PARSE(%ZHFN)
"RTN","ZISFVXD",13,0)
 G H2:%XX["::"
"RTN","ZISFVXD",14,0)
 I %XX]"",$&ZLIB.%GETDVI(%XX,"DEVCLASS")="DISK"
"RTN","ZISFVXD",15,0)
 E  S DUOUT=1,POP=1 W:'$D(IOP) !,"HOST FILE NAME NOT VALID" Q
"RTN","ZISFVXD",16,0)
H2 S IO=$&ZLIB.%PARSE(%ZHFN,".DAT") I $D(IO("HFSIO")) S IO("HFSIO")=IO
"RTN","ZISFVXD",17,0)
 W:'$D(IOP)&$D(%ZIS("HFSNAME")) "    HOST FILE USED:  "_IO,!
"RTN","ZISFVXD",18,0)
 ;Check Ask Parameters
"RTN","ZISFVXD",19,0)
 D ASKPAR^%ZIS6,SETPAR^%ZIS3
"RTN","ZISFVXD",20,0)
 ;Mode or actual parameters
"RTN","ZISFVXD",21,0)
HFSIOO Q:$D(%ZIS("HFSMODE"))
"RTN","ZISFVXD",22,0)
 I '$D(IOP),%ZTYPE="HFS",'$P(^%ZIS(1,%E,0),"^",4),%ZISOPAR="",$P($G(^%ZIS(1,%E,1)),"^",6) W !,?20,"INPUT/OUTPUT OPERATION: R//"
"RTN","ZISFVXD",23,0)
 Q:'$T  D SBR^%ZIS1 I $D(DTOUT)!$D(DFOUT)!$D(DUOUT) S POP=1 Q
"RTN","ZISFVXD",24,0)
 S:%X="" %X="R"
"RTN","ZISFVXD",25,0)
 D HOPT:%X="?"!($F("?^R^N^RW",%X)'>1),HOPT1:%X="??"
"RTN","ZISFVXD",26,0)
 G HFSIOO:%X="?"!($F("?^R^N^RW",%X)'>1)
"RTN","ZISFVXD",27,0)
 S %ZISOPAR=$S(%X="R":"(READONLY)",%X="N":"(NEWVERSION)",1:"") Q
"RTN","ZISFVXD",28,0)
 ;
"RTN","ZISFVXD",29,0)
ASKHFS ;---Ask host file name here---
"RTN","ZISFVXD",30,0)
 I $D(%IS("B","HFS"))#2,%IS("B","HFS")]"" D
"RTN","ZISFVXD",31,0)
 .S IO=%IS("B","HFS") ;Set default host file name
"RTN","ZISFVXD",32,0)
 S %X='$P($G(^%ZIS(1,%E,1)),"^",5)
"RTN","ZISFVXD",33,0)
 S:'%X %X=""
"RTN","ZISFVXD",34,0)
 I $D(IOP)!%X!$D(%ZIS("HFSNAME")) S %X="",%ZHFN=IO Q
"RTN","ZISFVXD",35,0)
ASKAGN W !,"HOST FILE NAME: "_IO_"//" D SBR^%ZIS1
"RTN","ZISFVXD",36,0)
 I %X?1."?".E W !,"ENTER HOST FILE NAME" G ASKAGN
"RTN","ZISFVXD",37,0)
 S:$D(DTOUT)!$D(DUOUT) POP=1
"RTN","ZISFVXD",38,0)
 Q
"RTN","ZISFVXD",39,0)
ASKHFSIO(DA) ;Ask HFS Input/Output operation.
"RTN","ZISFVXD",40,0)
 I %ZTYPE="HFS",'$P(^%ZIS(1,DA,0),"^",4),%ZISOPAR="",$P($G(^%ZIS(1,DA,1)),"^",6) Q 1
"RTN","ZISFVXD",41,0)
 Q 0
"RTN","ZISFVXD",42,0)
 ;
"RTN","ZISFVXD",43,0)
CHKNM(H) ;Check HFS for dir
"RTN","ZISFVXD",44,0)
 I (H'[":")&(H'["[") Q $$DEFDIR^%ZISH("")_H ;disk:[directory]file
"RTN","ZISFVXD",45,0)
 Q H
"RTN","ZISFVXD",46,0)
 ;
"RTN","ZISFVXD",47,0)
MODE(X) ;Returns OPEN parameters in Y
"RTN","ZISFVXD",48,0)
 N Y
"RTN","ZISFVXD",49,0)
 S Y=$S(X["R"&(X["W"):"",X["A":"",X="R":"(READONLY)",X="W":"(NEWVERSION)",1:"(NEWVERSION)")
"RTN","ZISFVXD",50,0)
 Q Y
"RTN","ZISFVXD",51,0)
HOPT W !,"Enter one of the following host file input/ouput operation:"
"RTN","ZISFVXD",52,0)
 W !,?16,"R = READONLY",!,?16,"N = NEWVERSION",!,?15,"RW = READ/WRITE",!
"RTN","ZISFVXD",53,0)
 Q
"RTN","ZISFVXD",54,0)
HOPT1 S %ZISI=$O(^DIC(9.2,"B","XUHFSPARAM-VXD",0)) Q:'%ZISI  Q:'$D(^DIC(9.2,+%ZISI,0))  Q:$P(^(0),"^",1)'="XUHFSPARAM-VXD"
"RTN","ZISFVXD",55,0)
 Q:$D(^DIC(9.2,+%ZISI,1))'>9  F %X=0:0 S %X=$O(^DIC(9.2,+%ZISI,1,%X)) Q:%X'>0  I $D(^(%X,0)) W !,^(0)
"RTN","ZISFVXD",56,0)
 W ! S %X="??"
"RTN","ZISFVXD",57,0)
 Q
"RTN","ZISFVXD",58,0)
 ;
"RTN","ZISFVXD",59,0)
 ;--- OPEN/CLOSE EXECUTES, PRE-OPEN and POST-CLOSE EXECUTES FOR P-MESSAGE ---
"RTN","ZISFVXD",60,0)
OEXPMSG Q  ;Open Execute for p-message device
"RTN","ZISFVXD",61,0)
CEXPMSG S XMREC="R X#255:1" U IO:DISCONNECT D ^XMAPHOST,READ^XMAPHOST K XMIO Q  ;Close Execute for p-message device
"RTN","ZISFVXD",62,0)
 Q
"RTN","ZISFVXD",63,0)
POXPMSG Q  ;Pre-open Execute for p-message device
"RTN","ZISFVXD",64,0)
PCXPMSG Q  ;Post-close Execute for p-message device
"RTN","ZISFVXD",65,0)
 ;
"RTN","ZISFVXD",66,0)
 ;--- OPEN/CLOSE EXECUTES, PRE-OPEN and POST-CLOSE EXECUTES FOR BROWSER DEVICE ---
"RTN","ZISFVXD",67,0)
OEXDDBR D OPEN^DDBRZIS Q  ;Open Execute for Browser device
"RTN","ZISFVXD",68,0)
CEXDDBR D CLOSE^DDBRZIS Q  ;Close Execute for Browser device
"RTN","ZISFVXD",69,0)
POXDDBR I '$$TEST^DDBRT S %ZISQUIT=1 W $C(7),!,"Browser not selectable from current terminal.",! Q  ;Pre-close Execute for Browser device
"RTN","ZISFVXD",70,0)
PCXDDBR D POST^DDBRZIS Q  ;Post-close Execute for Browser device
"RTN","ZISFVXD",71,0)
 Q
"RTN","ZISHGTM")
0^6^B32407982^B38930638
"RTN","ZISHGTM",1,0)
%ZISH ;ISF/AC,RWF - GT.M for VMS/Unix Host file Control ;01/04/2005  10:44
"RTN","ZISHGTM",2,0)
 ;;8.0;KERNEL;**275,306,385**;Jul 10, 1995;Build 3
"RTN","ZISHGTM",3,0)
 ; for GT.M for Unix/VMS, version 4.3
"RTN","ZISHGTM",4,0)
 ;
"RTN","ZISHGTM",5,0)
OPENERR ;
"RTN","ZISHGTM",6,0)
 Q 0
"RTN","ZISHGTM",7,0)
 ;
"RTN","ZISHGTM",8,0)
OPEN(X1,X2,X3,X4,X5,X6) ;SR. Open file
"RTN","ZISHGTM",9,0)
 ;D OPEN^%ZISH([handlename],[directory],filename,[accessmode],[recsize])
"RTN","ZISHGTM",10,0)
 ;X1=handle name
"RTN","ZISHGTM",11,0)
 ;X2=directory, X3=filename, X4=access mode
"RTN","ZISHGTM",12,0)
 ;X5=new file max record size, X6=Subtype
"RTN","ZISHGTM",13,0)
 ;
"RTN","ZISHGTM",14,0)
 N %,%1,%2,%IO,%I2,%P,%T,X,Y,$ETRAP
"RTN","ZISHGTM",15,0)
 S $ETRAP="D OPNERR^%ZISH"
"RTN","ZISHGTM",16,0)
 S U="^",X2=$$DEFDIR($G(X2)),X4=$$UP^XLFSTR(X4)
"RTN","ZISHGTM",17,0)
 S Y=$S(X4["A":"append",X4["R":"readonly",X4["W":"newversion",1:"readonly")
"RTN","ZISHGTM",18,0)
 S Y=Y_$S(X4["B":":fixed:nowrap:recordsize=512",$G(X5)&(X4["W"):":WIDTH="_+X5,1:"")
"RTN","ZISHGTM",19,0)
 S:$E(Y)=":" Y=$E(Y,2,999) S %IO=X2_X3,%I2="%IO:"_$S($L(Y):"("_Y_")",1:"")_":3"
"RTN","ZISHGTM",20,0)
 O @%I2 S %T=$T
"RTN","ZISHGTM",21,0)
 I '%T S POP=1 Q
"RTN","ZISHGTM",22,0)
 S IO=%IO,IO(1,IO)="",IOT="HFS",IOM=80,IOSL=60,POP=0 D SUBTYPE^%ZIS3($G(X6))
"RTN","ZISHGTM",23,0)
 I $G(X1)]"" D SAVDEV^%ZISUTL(X1)
"RTN","ZISHGTM",24,0)
 U IO U $P ;Enable use of $ZA to test EOF condition.
"RTN","ZISHGTM",25,0)
 Q
"RTN","ZISHGTM",26,0)
OPNERR ;error on open
"RTN","ZISHGTM",27,0)
 S POP=1,$ECODE=""
"RTN","ZISHGTM",28,0)
 U:$G(%P)]"" %P
"RTN","ZISHGTM",29,0)
 Q
"RTN","ZISHGTM",30,0)
 ;
"RTN","ZISHGTM",31,0)
CLOSE(X) ;SR. Close HFS device not opened by %ZIS.
"RTN","ZISHGTM",32,0)
 ;X1=Handle name, IO=device
"RTN","ZISHGTM",33,0)
 I IO]"" C IO K IO(1,IO)
"RTN","ZISHGTM",34,0)
 I $G(X)]"" D RMDEV^%ZISUTL(X)
"RTN","ZISHGTM",35,0)
 I $D(IO("HOME"))!$D(^XUTL("XQ",$J,"IOS")) D HOME^%ZIS
"RTN","ZISHGTM",36,0)
 Q
"RTN","ZISHGTM",37,0)
DEL(%ZX1,%ZX2) ;ef,SR. Del fl(s)
"RTN","ZISHGTM",38,0)
 ;S Y=$$DEL^%ZISH("dir path",$NA(array))
"RTN","ZISHGTM",39,0)
 N %ZISH,%ZISHLGR,%ZX,X,%ZXDEL
"RTN","ZISHGTM",40,0)
 S %ZX1=$$DEFDIR($G(%ZX1)),%ZXDEL=1,%ZISH=""
"RTN","ZISHGTM",41,0)
 F  S %ZISH=$O(@%ZX2@(%ZISH)) Q:%ZISH=""  D
"RTN","ZISHGTM",42,0)
 . N $ETRAP,$ESTACK S $ETRAP="D DELERR^%ZISH"
"RTN","ZISHGTM",43,0)
 . I %ZISH["*" S %ZXDEL=0 Q  ; Wild card not allowed.
"RTN","ZISHGTM",44,0)
 . S %ZX=$ZSEARCH(%ZX1_%ZISH)
"RTN","ZISHGTM",45,0)
 . Q:%ZX']""           ; File doesn't exist - not an error, just quit.
"RTN","ZISHGTM",46,0)
 . O %ZX:READONLY:0
"RTN","ZISHGTM",47,0)
 . I '$T S %ZXDEL=0 Q  ; Can't open it.
"RTN","ZISHGTM",48,0)
 . C %ZX:DELETE
"RTN","ZISHGTM",49,0)
 . I $ZSEARCH(%ZX)]"" S %ZXDEL=0 ; Delete was not successful.
"RTN","ZISHGTM",50,0)
 Q %ZXDEL
"RTN","ZISHGTM",51,0)
DELERR ;Trap any $ETRAP error, unwind and return.
"RTN","ZISHGTM",52,0)
 S $ETRAP="D UNWIND^%ZTER"
"RTN","ZISHGTM",53,0)
 S %ZXDEL=0
"RTN","ZISHGTM",54,0)
 D UNWIND^%ZTER
"RTN","ZISHGTM",55,0)
 Q
"RTN","ZISHGTM",56,0)
 ;
"RTN","ZISHGTM",57,0)
LIST(%ZX1,%ZX2,%ZX3) ;ef,SR. Set local array holding fl names
"RTN","ZISHGTM",58,0)
 ;S Y=$$LIST^ZISH("/dir/","list_root","return_root")
"RTN","ZISHGTM",59,0)
 ;list_root can have XX("A*"), XX("test.com")...
"RTN","ZISHGTM",60,0)
 ;Both arrays passed as $NA values (closed roots).
"RTN","ZISHGTM",61,0)
 N %ZISH,%ZIX,%ZIY,POP,X
"RTN","ZISHGTM",62,0)
 N $ETRAP,$ESTACK S $ETRAP="G LSTX^%ZISH",%ZX1=$$DEFDIR($G(%ZX1))
"RTN","ZISHGTM",63,0)
 ;Get fls, Build listing in %ZISHDL1 with ls
"RTN","ZISHGTM",64,0)
 S %ZISH=""
"RTN","ZISHGTM",65,0)
 F  S %ZISH=$O(@%ZX2@(%ZISH)) Q:%ZISH=""  D
"RTN","ZISHGTM",66,0)
 . S %ZIX=$ZPARSE(%ZX1_%ZISH) Q:%ZIX=""
"RTN","ZISHGTM",67,0)
 . F  S %ZIY=$ZSEARCH(%ZIX) Q:%ZIY=""  S %ZIY=$ZPARSE(%ZIY,"NAME")_$ZPARSE(%ZIY,"TYPE"),@%ZX3@(%ZIY)=""
"RTN","ZISHGTM",68,0)
LSTX ;
"RTN","ZISHGTM",69,0)
 S $ECODE=""
"RTN","ZISHGTM",70,0)
 Q ($Q(@%ZX3)]"")
"RTN","ZISHGTM",71,0)
 ;
"RTN","ZISHGTM",72,0)
SPAWNERR ;TRAP ERROR OF SPAWN
"RTN","ZISHGTM",73,0)
 O %ZISHDL1:READONLY:1 I $T C %ZISHDL1:DELETE
"RTN","ZISHGTM",74,0)
 S $ECODE=""
"RTN","ZISHGTM",75,0)
 Q 0
"RTN","ZISHGTM",76,0)
 ;
"RTN","ZISHGTM",77,0)
MV(X1,X2,Y1,Y2) ;ef,SR. Rename a fl
"RTN","ZISHGTM",78,0)
 ;S Y=$$MV^ZISH("/dir/","fl","/dir/","fl")
"RTN","ZISHGTM",79,0)
 N %Z,%C
"RTN","ZISHGTM",80,0)
 S X1=$$DEFDIR($G(X1)),Y1=$$DEFDIR($G(Y1))
"RTN","ZISHGTM",81,0)
 S %C=$S($ZV["VMS":"RENAME ",1:"mv ")
"RTN","ZISHGTM",82,0)
 ;Pbv or qit
"RTN","ZISHGTM",83,0)
 I (X2="")!(Y2="") Q 0
"RTN","ZISHGTM",84,0)
 ZSYSTEM %C_X1_X2_" "_Y1_Y2 ;Use system rename
"RTN","ZISHGTM",85,0)
 S %Z=$ZSEARCH(Y1_Y2)
"RTN","ZISHGTM",86,0)
 Q $L(%Z)>0
"RTN","ZISHGTM",87,0)
 ;
"RTN","ZISHGTM",88,0)
PWD() ;ef,SR. Print working directory
"RTN","ZISHGTM",89,0)
 N Y
"RTN","ZISHGTM",90,0)
 S Y=$$DEFDIR("")
"RTN","ZISHGTM",91,0)
 S:Y="" Y=$ZDIR
"RTN","ZISHGTM",92,0)
 Q Y
"RTN","ZISHGTM",93,0)
 ;
"RTN","ZISHGTM",94,0)
DEFDIR(DF) ;ef. Default Dir and frmt
"RTN","ZISHGTM",95,0)
 S DF=$G(DF) Q:DF="." "" ;Special way to get current dir.
"RTN","ZISHGTM",96,0)
 S:DF="" DF=$G(^XTV(8989.3,1,"DEV"))
"RTN","ZISHGTM",97,0)
 ;Old code
"RTN","ZISHGTM",98,0)
 ;Check syntax, VMS needs : or [ ]
"RTN","ZISHGTM",99,0)
 I ^%ZOSF("OS")["VMS" D  Q DF ;***EXIT FOR VMS/GTM
"RTN","ZISHGTM",100,0)
 . N P1,P2
"RTN","ZISHGTM",101,0)
 . S DF=$ZPARSE(DF)
"RTN","ZISHGTM",102,0)
 . I DF[":" S P1=$P(DF,":")_":",P2=$P(DF,":",2)
"RTN","ZISHGTM",103,0)
 . E  S P1="",P2=DF
"RTN","ZISHGTM",104,0)
 . I P1="",P2["$" S DF=P2 Q  ;Assume a logical
"RTN","ZISHGTM",105,0)
 . I $L(P2) S:P2'["[" P2="["_P2 S:P2'["]" P2=P2_"]"
"RTN","ZISHGTM",106,0)
 . S DF=P1_P2
"RTN","ZISHGTM",107,0)
 . Q
"RTN","ZISHGTM",108,0)
 ;
"RTN","ZISHGTM",109,0)
 ;Check syntax, Unix check leading & trailing "/"
"RTN","ZISHGTM",110,0)
 S DF=$ZPARSE(DF)
"RTN","ZISHGTM",111,0)
 I "./"'[$E(DF) S DF="/"_DF
"RTN","ZISHGTM",112,0)
 I $E(DF,$L(DF))'="/" S DF=DF_"/"
"RTN","ZISHGTM",113,0)
 Q DF
"RTN","ZISHGTM",114,0)
STATUS() ;ef,SR. Return EOF status
"RTN","ZISHGTM",115,0)
 U $I
"RTN","ZISHGTM",116,0)
 Q $ZEOF
"RTN","ZISHGTM",117,0)
 ;
"RTN","ZISHGTM",118,0)
EOF(X) ;Eof flag, Pass in $ZA
"RTN","ZISHGTM",119,0)
 Q X
"RTN","ZISHGTM",120,0)
QL(X) ;Qlfrs
"RTN","ZISHGTM",121,0)
 Q:X=""
"RTN","ZISHGTM",122,0)
 S:$E(X)'="-" X="-"_X
"RTN","ZISHGTM",123,0)
 Q
"RTN","ZISHGTM",124,0)
FL(X) ;Fl len
"RTN","ZISHGTM",125,0)
 N ZOSHP1,ZOSHP2
"RTN","ZISHGTM",126,0)
 S ZOSHP1=$P(X,"."),ZOSHP2=$P(X,".",2)
"RTN","ZISHGTM",127,0)
 I $L(ZOSHP1)>14 S X=4 Q
"RTN","ZISHGTM",128,0)
 I $L(ZOSHP2)>8 S X=4 Q
"RTN","ZISHGTM",129,0)
 Q
"RTN","ZISHGTM",130,0)
 ;
"RTN","ZISHGTM",131,0)
MAKEREF(HF,IX,OVF) ;Internal call to rebuild global ref.
"RTN","ZISHGTM",132,0)
 ;Return %ZISHF,%ZISHO,%ZISHI,%ZISUB
"RTN","ZISHGTM",133,0)
 N I,F,MX
"RTN","ZISHGTM",134,0)
 S OVF=$G(OVF,"%ZISHOF")
"RTN","ZISHGTM",135,0)
 S %ZISHI=$$QS^DDBRAP(HF,IX),MX=$$QL^DDBRAP(HF) ;
"RTN","ZISHGTM",136,0)
 S F=$NA(@HF,IX-1) ;Get first part
"RTN","ZISHGTM",137,0)
 I IX=1 S %ZISHF=F_"(%ZISHI" ;Build root, IX=1
"RTN","ZISHGTM",138,0)
 I IX>1 S %ZISHF=$E(F,1,$L(F)-1)_",%ZISHI" ;Build root
"RTN","ZISHGTM",139,0)
 S %ZISHO=%ZISHF_","_OVF_",%OVFCNT)" ;Make overflow
"RTN","ZISHGTM",140,0)
 F I=IX+1:1:MX S %ZISHF=%ZISHF_",%ZISUB("_I_")",%ZISUB(I)=$$QS^DDBRAP(HF,I)
"RTN","ZISHGTM",141,0)
 S %ZISHF=%ZISHF_")"
"RTN","ZISHGTM",142,0)
 Q
"RTN","ZISHGTM",143,0)
FTG(%ZX1,%ZX2,%ZX3,%ZX4,%ZX5) ;ef,SR. Unload contents of host file into global
"RTN","ZISHGTM",144,0)
 ;p1=host file directory
"RTN","ZISHGTM",145,0)
 ;p2=host file name
"RTN","ZISHGTM",146,0)
 ;p3= $NAME REFERENCE INCLUDING STARTING SUBSCRIPT
"RTN","ZISHGTM",147,0)
 ;p4=INCREMENT SUBSCRIPT
"RTN","ZISHGTM",148,0)
 ;p5=Overflow subscript, defaults to "OVF"
"RTN","ZISHGTM",149,0)
 N %ZA,%ZB,%ZC,%ZL,X,%OVFCNT,%CONT,%EXIT
"RTN","ZISHGTM",150,0)
 N I,%ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHLGR,%ZISHOF,%ZISHOX,%ZISHS,%ZX,%ZISHY,POP,%ZISUB
"RTN","ZISHGTM",151,0)
 S %ZX1=$$DEFDIR($G(%ZX1)),%ZISHOF=$G(%ZX5,"OVF")
"RTN","ZISHGTM",152,0)
 D MAKEREF(%ZX3,%ZX4,"%ZISHOF")
"RTN","ZISHGTM",153,0)
 D OPEN^%ZISH(,%ZX1,%ZX2,"R")
"RTN","ZISHGTM",154,0)
 I POP Q 0
"RTN","ZISHGTM",155,0)
 N $ETRAP S %EXIT=0,$ETRAP="S %ZA=1,%EXIT=1,$ECODE="""" Q"
"RTN","ZISHGTM",156,0)
 U IO F  K %XX D READNXT(.%XX) Q:$$EOF(%ZA)  D
"RTN","ZISHGTM",157,0)
 . S @%ZISHF=%XX
"RTN","ZISHGTM",158,0)
 . I $D(%XX)>2 F %OVFCNT=1:1 Q:'$D(%XX(%OVFCNT))  S @%ZISHO=%XX(%OVFCNT)
"RTN","ZISHGTM",159,0)
 . S %ZISHI=%ZISHI+1
"RTN","ZISHGTM",160,0)
 . Q
"RTN","ZISHGTM",161,0)
 D CLOSE() ;Normal exit
"RTN","ZISHGTM",162,0)
 Q 1
"RTN","ZISHGTM",163,0)
 ;
"RTN","ZISHGTM",164,0)
ERREOF D CLOSE() ;Got error Reading file
"RTN","ZISHGTM",165,0)
 Q 0
"RTN","ZISHGTM",166,0)
 ;
"RTN","ZISHGTM",167,0)
READNXT(REC) ;
"RTN","ZISHGTM",168,0)
 N T,I,X,%
"RTN","ZISHGTM",169,0)
 U IO R X:2 S %ZA=$ZEOF,REC=$E(X,1,255)
"RTN","ZISHGTM",170,0)
 Q:$L(X)<256
"RTN","ZISHGTM",171,0)
 S %=256 F I=1:1 Q:$L(X)<%  S REC(I)=$E(X,%,%+254),%=%+255
"RTN","ZISHGTM",172,0)
 Q
"RTN","ZISHGTM",173,0)
 ;
"RTN","ZISHGTM",174,0)
GTF(%ZX1,%ZX2,%ZX3,%ZX4) ;ef,SR. Load contents of global to host file.
"RTN","ZISHGTM",175,0)
 ;Previously name LOAD
"RTN","ZISHGTM",176,0)
 ;p1=$NAME of global reference
"RTN","ZISHGTM",177,0)
 ;p2=incrementing subscript
"RTN","ZISHGTM",178,0)
 ;p3=host file directory
"RTN","ZISHGTM",179,0)
 ;p4=host file name
"RTN","ZISHGTM",180,0)
 N %ZISHY,%ZISHLGR,%ZISHOX
"RTN","ZISHGTM",181,0)
 S %ZISHY=$$MGTF(%ZX1,%ZX2,$G(%ZX3),%ZX4,"W")
"RTN","ZISHGTM",182,0)
 Q %ZISHY
"RTN","ZISHGTM",183,0)
 ;
"RTN","ZISHGTM",184,0)
GATF(%ZX1,%ZX2,%ZX3,%ZX4) ;ef,SR. Append to host file.
"RTN","ZISHGTM",185,0)
 ;
"RTN","ZISHGTM",186,0)
 ;p1=$NAME of global reference
"RTN","ZISHGTM",187,0)
 ;p2=incrementing subscript
"RTN","ZISHGTM",188,0)
 ;p3=host file directory
"RTN","ZISHGTM",189,0)
 ;p4=host file name
"RTN","ZISHGTM",190,0)
 N %ZISHY
"RTN","ZISHGTM",191,0)
 S %ZISHY=$$MGTF(%ZX1,%ZX2,$G(%ZX3),%ZX4,"A")
"RTN","ZISHGTM",192,0)
 Q %ZISHY
"RTN","ZISHGTM",193,0)
 ;
"RTN","ZISHGTM",194,0)
MGTF(%ZX1,%ZX2,%ZX3,%ZX4,%ZX5) ;
"RTN","ZISHGTM",195,0)
 ;p1=$NAME of global reference
"RTN","ZISHGTM",196,0)
 ;p2=incrementing subscript
"RTN","ZISHGTM",197,0)
 ;p3=host file directory
"RTN","ZISHGTM",198,0)
 ;p4=host file name
"RTN","ZISHGTM",199,0)
 N %ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHLGR,%ZISHS,%ZISHOX,IO,%ZX,Y
"RTN","ZISHGTM",200,0)
 D MAKEREF(%ZX1,%ZX2)
"RTN","ZISHGTM",201,0)
 D OPEN^%ZISH(,%ZX3,%ZX4,%ZX5) ;Default dir set in open
"RTN","ZISHGTM",202,0)
 I POP Q 0
"RTN","ZISHGTM",203,0)
 N X
"RTN","ZISHGTM",204,0)
 N $ETRAP S $ETRAP="S $EC="""" D CLOSE^%ZISH() Q 0"
"RTN","ZISHGTM",205,0)
 F  Q:'($D(@%ZISHF)#2)  S %ZX=@%ZISHF,%ZISHI=%ZISHI+1 U IO W %ZX,!
"RTN","ZISHGTM",206,0)
 D CLOSE() ;Normal Exit
"RTN","ZISHGTM",207,0)
 Q 1
"RTN","ZISHGTM",208,0)
 ;
"RTN","ZISHONT")
0^4^B45855984^B34648978
"RTN","ZISHONT",1,0)
%ZISH ;IHS\PR,SFISC/AC - Host File Control for OpenM/Cache for NT/VMS ;12/13/2005
"RTN","ZISHONT",2,0)
 ;;8.0;KERNEL;**34,65,84,104,191,306,385**;JUL 10, 1995;Build 3
"RTN","ZISHONT",3,0)
 ;
"RTN","ZISHONT",4,0)
 ; **MODIFIED VERSION FOR CACHE/VMS -- 9/7/01**
"RTN","ZISHONT",5,0)
 ;
"RTN","ZISHONT",6,0)
OPEN(X1,X2,X3,X4,X5,X6)    ;SR. Open Host File
"RTN","ZISHONT",7,0)
 ;X1=handle name
"RTN","ZISHONT",8,0)
 ;X2=directory name \dir\
"RTN","ZISHONT",9,0)
 ;X3=file name
"RTN","ZISHONT",10,0)
 ;X4=file access mode e.g.: W for write, R for read, A for append.
"RTN","ZISHONT",11,0)
 ;X5=Max record size for a new file, X6=Subtype
"RTN","ZISHONT",12,0)
 N %,%1,%2,%I,%ZOS,%T,%ZA,%ZISHIO,$ET
"RTN","ZISHONT",13,0)
 S $ET="D OPNERR^%ZISH"
"RTN","ZISHONT",14,0)
 S U="^",%I=$I,%T=0,POP=0,X2=$$DEFDIR($G(X2)),%ZOS=$$OS^%ZOSV M %ZISHIO=IO
"RTN","ZISHONT",15,0)
 I %ZOS'="VMS" S %1=$S(X4["A":"AW",X4["W":"WN",1:"R")_$S(X4["B":"U",1:"S") ;NT & Unix
"RTN","ZISHONT",16,0)
 I %ZOS="VMS" S %1=$S(X4["A":"AW",X4["W":"WN",1:"RH")_$S(X4["B":"U",1:"S")
"RTN","ZISHONT",17,0)
 ;The next line eliminates the <ENDOFFILE> error for sequential files for the current process.
"RTN","ZISHONT",18,0)
 S %ZA=$ZUTIL(68,40,1) ;Work like DSM
"RTN","ZISHONT",19,0)
 S %=X2_X3 O %:(%1):2 I '$T S POP=1 Q
"RTN","ZISHONT",20,0)
 ;U % S %ZA=$ZA ;Comment out, $ZA is for READ status
"RTN","ZISHONT",21,0)
 ;I %ZA=-1 U:%I]"" %I C % S POP=1 Q
"RTN","ZISHONT",22,0)
 S IO=%,IO(1,IO)="",IOT="HFS",IOM=80,IOSL=60,POP=0 D SUBTYPE^%ZIS3($G(X6,"P-OTHER"))
"RTN","ZISHONT",23,0)
 I $G(X1)]"" D SAVDEV^%ZISUTL(X1)
"RTN","ZISHONT",24,0)
 U $S(%I]"":%I,1:$P)
"RTN","ZISHONT",25,0)
 Q
"RTN","ZISHONT",26,0)
 ;
"RTN","ZISHONT",27,0)
OPNERR ;Handle open error
"RTN","ZISHONT",28,0)
 S POP=1,$ECODE=""
"RTN","ZISHONT",29,0)
 U:$P]"" $P
"RTN","ZISHONT",30,0)
 Q
"RTN","ZISHONT",31,0)
 ;
"RTN","ZISHONT",32,0)
CLOSE(X) ;SR. Close HFS device not opened by %ZIS.
"RTN","ZISHONT",33,0)
 ;X=HANDLE NAME
"RTN","ZISHONT",34,0)
 ;IO=Device
"RTN","ZISHONT",35,0)
 N %
"RTN","ZISHONT",36,0)
 I $G(IO)]"" C IO K IO(1,IO)
"RTN","ZISHONT",37,0)
 I $G(X)]"" D RMDEV^%ZISUTL(X)
"RTN","ZISHONT",38,0)
 ;Only reset home if one setup.
"RTN","ZISHONT",39,0)
 I $D(IO("HOME"))!$D(^XUTL("XQ",$J,"IOS")) D HOME^%ZIS
"RTN","ZISHONT",40,0)
 Q
"RTN","ZISHONT",41,0)
 ;
"RTN","ZISHONT",42,0)
OPENERR ;
"RTN","ZISHONT",43,0)
 Q 0
"RTN","ZISHONT",44,0)
 ;
"RTN","ZISHONT",45,0)
DEL(%ZX1,%ZX2) ;ef,SR. Del fl(s)
"RTN","ZISHONT",46,0)
 ;S Y=$$DEL^%ZISH("dir path",$NA(array))
"RTN","ZISHONT",47,0)
 N %,%ZX,%ZXDEL,%ZISH,%ZOS
"RTN","ZISHONT",48,0)
 S %ZX1=$$DEFDIR($G(%ZX1)),%ZOS=$$OS^%ZOSV,%ZXDEL=1,%ZISH=""
"RTN","ZISHONT",49,0)
 F  S %ZISH=$O(@%ZX2@(%ZISH)) Q:%ZISH=""  D
"RTN","ZISHONT",50,0)
 . N $ETRAP,$ESTACK S $ETRAP="D DELERR^%ZISH"
"RTN","ZISHONT",51,0)
 . I %ZISH["*" S %ZXDEL=0 Q  ; Wild card not allowed.
"RTN","ZISHONT",52,0)
 . S %ZX=$S(%ZISH[%ZX1:%ZISH,1:%ZX1_%ZISH)
"RTN","ZISHONT",53,0)
 . I %ZOS="VMS",%ZX'[";" S %ZX=%ZX_";*"
"RTN","ZISHONT",54,0)
 . Q:$ZSEARCH(%ZX)']""  ; File doesn't exist
"RTN","ZISHONT",55,0)
 . S %=$ZF(-1,$S(%ZOS="UNIX":"rm ",1:"del ")_%ZX)
"RTN","ZISHONT",56,0)
 . I $ZSEARCH(%ZX)]"" S %ZXDEL=0 ; Delete was not successful.
"RTN","ZISHONT",57,0)
 Q %ZXDEL
"RTN","ZISHONT",58,0)
 ;
"RTN","ZISHONT",59,0)
DELERR ;Trap any $ETRAP error, unwind and return.
"RTN","ZISHONT",60,0)
 S $ETRAP="D UNWIND^%ZTER"
"RTN","ZISHONT",61,0)
 S %ZXDEL=0
"RTN","ZISHONT",62,0)
 D UNWIND^%ZTER
"RTN","ZISHONT",63,0)
 Q
"RTN","ZISHONT",64,0)
 ;
"RTN","ZISHONT",65,0)
LIST(%ZX1,%ZX2,%ZX3) ;ef,SR. Create a local array holding file names
"RTN","ZISHONT",66,0)
 ;S Y=$$LIST^ZOSHDOS("\dir\",$NA(array),$NA(return array)) Return 1 if found anything
"RTN","ZISHONT",67,0)
 ;
"RTN","ZISHONT",68,0)
 N %ZISH,%ZISHN,%ZX,%ZISHY,%ZY,%ZOS
"RTN","ZISHONT",69,0)
 S %ZX1=$$DEFDIR($G(%ZX1)),%ZOS=$$OS^%ZOSV
"RTN","ZISHONT",70,0)
 ;S %ZX1=$$TRNLNM(%ZX1)
"RTN","ZISHONT",71,0)
 ;Get fls to act on
"RTN","ZISHONT",72,0)
 S %ZISH="" F  S %ZISH=$O(@%ZX2@(%ZISH)) Q:%ZISH=""  D
"RTN","ZISHONT",73,0)
 . S %ZISHY=$P(%ZISH,"*")
"RTN","ZISHONT",74,0)
 . I %ZOS="VMS",%ZISH'["." S %ZISH=%ZISH_".*" ;Allways upper
"RTN","ZISHONT",75,0)
 . ;NT, display case, ignore for lookup
"RTN","ZISHONT",76,0)
 . S %ZX=%ZX1_%ZISH
"RTN","ZISHONT",77,0)
 . F %ZISHN=0:1 D  Q:(%ZX="") 
"RTN","ZISHONT",78,0)
 . . S %ZX=$ZSEARCH($S(%ZISHN:"",1:%ZX))
"RTN","ZISHONT",79,0)
 . . ;Q:(%ZX="")!($$UP^XLFSTR(%ZX)'[%ZISHY)!(%ZX?.E1.2".")
"RTN","ZISHONT",80,0)
 . . Q:(%ZX="")!(%ZX?.E1.2".")
"RTN","ZISHONT",81,0)
 . . I %ZOS="VMS" S %ZX=$P(%ZX,"]",2),@%ZX3@(%ZX)=""
"RTN","ZISHONT",82,0)
 . . I %ZOS="NT" S %ZY=$P(%ZX,"\",$L(%ZX,"\")),@%ZX3@(%ZY)=""
"RTN","ZISHONT",83,0)
 . . I %ZOS="UNIX" S %ZY=$P(%ZX,"/",$L(%ZX,"/")) Q:%ZX'[%ZISHY  S @%ZX3@(%ZY)=""
"RTN","ZISHONT",84,0)
 . . Q
"RTN","ZISHONT",85,0)
 Q $O(@%ZX3@(""))]""
"RTN","ZISHONT",86,0)
 ;
"RTN","ZISHONT",87,0)
MV(X1,X2,Y1,Y2) ;ef,SR. Rename a fl
"RTN","ZISHONT",88,0)
 ;S Y=$$MV^ZOSHDOS("\dir\","fl","\dir\","fl")
"RTN","ZISHONT",89,0)
 ;Unix use mv, NT/VMS use COPY and DEL
"RTN","ZISHONT",90,0)
 N %,X,Y,%ZOS,%ZISHX S %ZOS=$$OS^%ZOSV
"RTN","ZISHONT",91,0)
 S X1=$$DEFDIR($G(X1)),Y1=$$DEFDIR($G(Y1))
"RTN","ZISHONT",92,0)
 S X=$ZSEARCH(X1_X2),Y=Y1_Y2 ;move X to Y
"RTN","ZISHONT",93,0)
 I X="" Q 0
"RTN","ZISHONT",94,0)
 S %=$ZF(-1,$S(%ZOS="UNIX":"mv ",1:"copy ")_X_" "_Y) ;Use NT/VMS copy
"RTN","ZISHONT",95,0)
 I %ZOS'="UNIX" D
"RTN","ZISHONT",96,0)
 . S X2=$P(X,X1,2),%ZISHX(X2)=""
"RTN","ZISHONT",97,0)
 . S Y=$$DEL^%ZISH(X1,$NA(%ZISHX))
"RTN","ZISHONT",98,0)
 Q 1
"RTN","ZISHONT",99,0)
 ;
"RTN","ZISHONT",100,0)
PWD() ;ef,SR. Print working directory
"RTN","ZISHONT",101,0)
 N Y,%ZOS
"RTN","ZISHONT",102,0)
 S Y=$$DEFDIR(""),%ZOS=$$OS^%ZOSV
"RTN","ZISHONT",103,0)
 I Y="" S Y=$ZSEARCH("*")
"RTN","ZISHONT",104,0)
 Q $S(%ZOS["VMS":Y,1:$P(Y,".",1))
"RTN","ZISHONT",105,0)
 ;
"RTN","ZISHONT",106,0)
TRNLNM(PATH) ;ef. Expand logical path
"RTN","ZISHONT",107,0)
 N %ZOS,P1,P2
"RTN","ZISHONT",108,0)
 S %ZOS=$$OS^%ZOSV,PATH=$G(PATH)
"RTN","ZISHONT",109,0)
 I %ZOS="VMS" D  Q PATH
"RTN","ZISHONT",110,0)
 . S P1=PATH_$S(PATH[":":"*.*",1:":*.*")
"RTN","ZISHONT",111,0)
 . S P2=$ZSEARCH(P1)
"RTN","ZISHONT",112,0)
 . S:$L(P2) PATH=$S(P2["]":$P(P2,"]",1)_"]",1:$P(P2,":",1)_":")
"RTN","ZISHONT",113,0)
 . Q
"RTN","ZISHONT",114,0)
 I %ZOS="NT" D  Q PATH
"RTN","ZISHONT",115,0)
 . S P1=PATH_$S($E(PATH,$L(PATH))'="\":"\*",1:"*"),P2=$ZSEARCH(P1)
"RTN","ZISHONT",116,0)
 . S:$L(P2) PATH=$P(P2,"\",1,$L(P2,"\")-1)_"\"
"RTN","ZISHONT",117,0)
 . Q
"RTN","ZISHONT",118,0)
 I %ZOS="UNIX" D  Q PATH
"RTN","ZISHONT",119,0)
 . S P1=PATH_$S($E(PATH,$L(PATH))'="/":"/*",1:"*"),P2=$ZSEARCH(P1)
"RTN","ZISHONT",120,0)
 . S:$L(P2) PATH=$P(P2,"/",1,$L(P2,"/")-1)_"/"
"RTN","ZISHONT",121,0)
 . Q
"RTN","ZISHONT",122,0)
 Q PATH
"RTN","ZISHONT",123,0)
 ;
"RTN","ZISHONT",124,0)
DEFDIR(DF) ;ef. Default Dir and frmt
"RTN","ZISHONT",125,0)
 ;Need to handle NT, VMS and Linux
"RTN","ZISHONT",126,0)
 N %ZOS,P1,P2 S %ZOS=$$OS^%ZOSV,DF=$G(DF)
"RTN","ZISHONT",127,0)
 Q:DF="." "" ;Special way to get current dir.
"RTN","ZISHONT",128,0)
 S:DF="" DF=$G(^XTV(8989.3,1,"DEV"))
"RTN","ZISHONT",129,0)
 Q:DF="" ""
"RTN","ZISHONT",130,0)
 ;Check syntax, VMS needs disk:[dir] or logical:
"RTN","ZISHONT",131,0)
 I %ZOS="VMS" D
"RTN","ZISHONT",132,0)
 . I DF[":" S P1=$P(DF,":")_":",P2=$P(DF,":",2)
"RTN","ZISHONT",133,0)
 . E  S P1="",P2=DF
"RTN","ZISHONT",134,0)
 . I P1="",P2["$" S P1=P2,P2=""  ;Could be a logical
"RTN","ZISHONT",135,0)
 . I $L(P2) S:P2'["[" P2="["_P2 S:P2'["]" P2=P2_"]"
"RTN","ZISHONT",136,0)
 . S DF=P1_P2 S:DF'[":" DF=DF_":"
"RTN","ZISHONT",137,0)
 . Q
"RTN","ZISHONT",138,0)
 ;Check syntax, Unix needs /mnt/fl, ./fl
"RTN","ZISHONT",139,0)
 I %ZOS="UNIX" D
"RTN","ZISHONT",140,0)
 . S DF=$TR(DF,"\","/")
"RTN","ZISHONT",141,0)
 . S:$E(DF,$L(DF))'="/" DF=DF_"/"
"RTN","ZISHONT",142,0)
 . Q
"RTN","ZISHONT",143,0)
 ;Check syntax, NT needs c:\dir\ 
"RTN","ZISHONT",144,0)
 I %ZOS="NT" D
"RTN","ZISHONT",145,0)
 . N P1,P2
"RTN","ZISHONT",146,0)
 . I DF[":" S P1=$P(DF,":")_":",P2=$P(DF,":",2)
"RTN","ZISHONT",147,0)
 . E  S P1="",P2=DF
"RTN","ZISHONT",148,0)
 . S P2=$TR(P2,"/","\")
"RTN","ZISHONT",149,0)
 . I $L(P2) S:".\"'[$E(P2,1) P2="\"_P2 S:$E(P2,$L(P2))'="\" P2=P2_"\"
"RTN","ZISHONT",150,0)
 . S DF=P1_P2
"RTN","ZISHONT",151,0)
 . Q
"RTN","ZISHONT",152,0)
 S DF=$$TRNLNM(DF) ;Resolve logicals
"RTN","ZISHONT",153,0)
 Q DF
"RTN","ZISHONT",154,0)
 ;
"RTN","ZISHONT",155,0)
FL(X) ;Fl len
"RTN","ZISHONT",156,0)
 N ZOSHP1,ZOSHP2
"RTN","ZISHONT",157,0)
 S ZOSHP1=$P(X,"."),ZOSHP2=$P(X,".",2)
"RTN","ZISHONT",158,0)
 I $L(ZOSHP1)>8 S X=4 Q
"RTN","ZISHONT",159,0)
 I $L(ZOSHP2)>3 S X=4 Q
"RTN","ZISHONT",160,0)
 Q
"RTN","ZISHONT",161,0)
 ;
"RTN","ZISHONT",162,0)
STATUS() ;ef,SR. Return EOF status
"RTN","ZISHONT",163,0)
 U $I
"RTN","ZISHONT",164,0)
 Q $$EOF($ZEOF)
"RTN","ZISHONT",165,0)
 ;
"RTN","ZISHONT",166,0)
EOF(X) ;Eof flag, pass in $ZEOF
"RTN","ZISHONT",167,0)
 Q (X=-1)
"RTN","ZISHONT",168,0)
 ;
"RTN","ZISHONT",169,0)
MAKEREF(HF,IX,OVF) ;Internal call to rebuild global ref.
"RTN","ZISHONT",170,0)
 ;Return %ZISHF,%ZISHO,%ZISHI,%ZISUB
"RTN","ZISHONT",171,0)
 N I,F,MX
"RTN","ZISHONT",172,0)
 S OVF=$G(OVF,"%ZISHOF")
"RTN","ZISHONT",173,0)
 S %ZISHI=$QS(HF,IX),MX=$QL(HF) ;
"RTN","ZISHONT",174,0)
 S F=$NA(@HF,IX-1) ;Get first part
"RTN","ZISHONT",175,0)
 I IX=1 S %ZISHF=F_"(%ZISHI" ;Build root, IX=1
"RTN","ZISHONT",176,0)
 I IX>1 S %ZISHF=$E(F,1,$L(F)-1)_",%ZISHI" ;Build root
"RTN","ZISHONT",177,0)
 S %ZISHO=%ZISHF_","_OVF_",%OVFCNT)" ;Make overflow
"RTN","ZISHONT",178,0)
 F I=IX+1:1:MX S %ZISHF=%ZISHF_",%ZISUB("_I_")",%ZISUB(I)=$QS(HF,I)
"RTN","ZISHONT",179,0)
 S %ZISHF=%ZISHF_")"
"RTN","ZISHONT",180,0)
 Q
"RTN","ZISHONT",181,0)
 ;
"RTN","ZISHONT",182,0)
READNXT(REC) ;Read any sized record into array. %ZB has terminator
"RTN","ZISHONT",183,0)
 N %,I,X,$ES,$ET S REC="",$ET="D READNX^%ZISH Q"
"RTN","ZISHONT",184,0)
 U IO R X:5 S %ZB=$A($ZB),REC=$E(X,1,255)
"RTN","ZISHONT",185,0)
 Q:$L(X)<256
"RTN","ZISHONT",186,0)
 S %=256 F I=1:1 Q:$L(X)<%  S REC(I)=$E(X,%,%+254),%=%+255
"RTN","ZISHONT",187,0)
 Q
"RTN","ZISHONT",188,0)
READNX ;Check for EOF
"RTN","ZISHONT",189,0)
 I $ZE["ENDOFFILE" S %ZA=-1
"RTN","ZISHONT",190,0)
 S $EC=""
"RTN","ZISHONT",191,0)
 Q
"RTN","ZISHONT",192,0)
 ;
"RTN","ZISHONT",193,0)
FTG(%ZX1,%ZX2,%ZX3,%ZX4,%ZX5) ;ef,SR. Unload contents of host file into global
"RTN","ZISHONT",194,0)
 ;p1=hostf file directory 
"RTN","ZISHONT",195,0)
 ;p2=host file name
"RTN","ZISHONT",196,0)
 ;p3= $NAME REFERENCE INCLUDING STARTING SUBSCRIPT
"RTN","ZISHONT",197,0)
 ;p4=INCREMENT SUBSCRIPT
"RTN","ZISHONT",198,0)
 ;p5=Overflow subscript, defaults to "OVF"
"RTN","ZISHONT",199,0)
 N %ZA,%ZB,%ZC,X,%OVFCNT,%ZISHF,%ZISHO,POP,%ZISUB,$ES,$ET
"RTN","ZISHONT",200,0)
 N I,%ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHOF,%ZISHOX,%ZISHS,%ZX,%ZISHY
"RTN","ZISHONT",201,0)
 S %ZX1=$$DEFDIR($G(%ZX1)),%ZISHOF=$G(%ZX5,"OVF")
"RTN","ZISHONT",202,0)
 D MAKEREF(%ZX3,%ZX4,"%ZISHOF")
"RTN","ZISHONT",203,0)
 D OPEN^%ZISH(,%ZX1,%ZX2,"R")
"RTN","ZISHONT",204,0)
 I POP Q 0
"RTN","ZISHONT",205,0)
 S %ZC=1,%ZA=0,$ET="S %ZC=0,%ZA=-1,$EC="""" Q"
"RTN","ZISHONT",206,0)
 U IO F  K %XX D READNXT(.%XX) Q:$$EOF($ZEOF)!%ZA  D
"RTN","ZISHONT",207,0)
 . S @%ZISHF=%XX
"RTN","ZISHONT",208,0)
 . I $D(%XX)>2 F %OVFCNT=1:1 Q:'$D(%XX(%OVFCNT))  S @%ZISHO=%XX(%OVFCNT)
"RTN","ZISHONT",209,0)
 . S %ZISHI=%ZISHI+1
"RTN","ZISHONT",210,0)
 . Q
"RTN","ZISHONT",211,0)
 D CLOSE() ;Normal exit
"RTN","ZISHONT",212,0)
 Q %ZC
"RTN","ZISHONT",213,0)
 ;
"RTN","ZISHONT",214,0)
GTF(%ZX1,%ZX2,%ZX3,%ZX4) ;ef,SR. Load contents of global to host file.
"RTN","ZISHONT",215,0)
 ;p1=$NAME of global reference
"RTN","ZISHONT",216,0)
 ;p2=incrementing subscript
"RTN","ZISHONT",217,0)
 ;p3=host file directory
"RTN","ZISHONT",218,0)
 ;p4=host file name
"RTN","ZISHONT",219,0)
 N %ZISHY,%ZISHOX
"RTN","ZISHONT",220,0)
 S %ZISHY=$$MGTF(%ZX1,%ZX2,%ZX3,%ZX4,"W")
"RTN","ZISHONT",221,0)
 Q %ZISHY
"RTN","ZISHONT",222,0)
 ;
"RTN","ZISHONT",223,0)
GATF(%ZX1,%ZX2,%ZX3,%ZX4) ;ef,SR. Append to host file.
"RTN","ZISHONT",224,0)
 ;
"RTN","ZISHONT",225,0)
 ;p1=$NAME of global reference
"RTN","ZISHONT",226,0)
 ;p2=incrementing subscript
"RTN","ZISHONT",227,0)
 ;p3=host file directory
"RTN","ZISHONT",228,0)
 ;p4=host file name
"RTN","ZISHONT",229,0)
 N %ZISHY
"RTN","ZISHONT",230,0)
 S %ZISHY=$$MGTF(%ZX1,%ZX2,%ZX3,%ZX4,"A")
"RTN","ZISHONT",231,0)
 Q %ZISHY
"RTN","ZISHONT",232,0)
 ;
"RTN","ZISHONT",233,0)
MGTF(%ZX1,%ZX2,%ZX3,%ZX4,%ZX5) ;
"RTN","ZISHONT",234,0)
 ;p1=$NAME of global reference
"RTN","ZISHONT",235,0)
 ;p2=incrementing subscript
"RTN","ZISHONT",236,0)
 ;p3=host file directory
"RTN","ZISHONT",237,0)
 ;p4=host file name
"RTN","ZISHONT",238,0)
 N %ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHS,%ZISHOX,IO,%ZX,Y,%ZC
"RTN","ZISHONT",239,0)
 D MAKEREF(%ZX1,%ZX2)
"RTN","ZISHONT",240,0)
 D OPEN^%ZISH(,$G(%ZX3),%ZX4,%ZX5) ;Default dir set in open
"RTN","ZISHONT",241,0)
 I POP Q 0
"RTN","ZISHONT",242,0)
 N $ETRAP S $ETRAP="S $EC="""" D CLOSE^%ZISH() Q 0"
"RTN","ZISHONT",243,0)
 F  Q:'($D(@%ZISHF)#2)  S %ZX=@%ZISHF,%ZISHI=%ZISHI+1 U IO W %ZX,!
"RTN","ZISHONT",244,0)
 D CLOSE()
"RTN","ZISHONT",245,0)
 Q 1
"RTN","ZISHONT",246,0)
 ;
"RTN","ZOSVONT")
0^5^B22821420^B22834986
"RTN","ZOSVONT",1,0)
%ZOSV ;SFISC/AC - $View commands for Open M for NT.  ;09/22/2004  11:56
"RTN","ZOSVONT",2,0)
 ;;8.0;KERNEL;**34,94,107,118,136,215,293,284,385**;Jul 10, 1995;Build 3
"RTN","ZOSVONT",3,0)
ACTJ() ;# Active jobs
"RTN","ZOSVONT",4,0)
 N %,V,Y S V=$$VERSION()
"RTN","ZOSVONT",5,0)
 I V<5 D  Q Y
"RTN","ZOSVONT",6,0)
 . S %=0 F Y=0:1 S %=$ZJ(%) Q:%=""
"RTN","ZOSVONT",7,0)
 S Y=$system.License.LUConsumed()
"RTN","ZOSVONT",8,0)
 Q Y
"RTN","ZOSVONT",9,0)
AVJ() ;# available jobs
"RTN","ZOSVONT",10,0)
 N %,AVJ,ZOSV,port,t,x,v,maxpid,lmflim,$ET
"RTN","ZOSVONT",11,0)
 S v=+$$VERSION()
"RTN","ZOSVONT",12,0)
 ;Cache 3 and 4
"RTN","ZOSVONT",13,0)
 ;maxpid: from %SS
"RTN","ZOSVONT",14,0)
 I v<5 D  Q AVJ
"RTN","ZOSVONT",15,0)
 . S $ET="",maxpid=$v($zu(40,2,118),-2,4)
"RTN","ZOSVONT",16,0)
 . X "S ZOSV=$ZU(5),%=$ZU(5,""%SYS"") S lmflim=$$inquire^LMFCLI,%=$ZU(5,ZOSV)" ;Get the license info
"RTN","ZOSVONT",17,0)
 . ;Add together the enterprise and division licenses avaliable
"RTN","ZOSVONT",18,0)
 . S x=$P(lmflim,";",2)+$P($P(lmflim,"|",2),";",2)
"RTN","ZOSVONT",19,0)
 . S t=+lmflim+$P(lmflim,"|",2) ;Check the license total
"RTN","ZOSVONT",20,0)
 . S AVJ=$S(t<maxpid:x,1:maxpid-$$ACTJ) ;Return the smaller of license or pid
"RTN","ZOSVONT",21,0)
 ;To get available jobs from Cache 5.0
"RTN","ZOSVONT",22,0)
 I v'<5 D  Q AVJ
"RTN","ZOSVONT",23,0)
 . X "S ZOSV=$ZU(5),%=$ZU(5,""%SYS"") S AVJ=$system.License.LUAvailable(),%=$ZU(5,ZOSV)"
"RTN","ZOSVONT",24,0)
 ;Return fixed value not known version
"RTN","ZOSVONT",25,0)
 Q 15
"RTN","ZOSVONT",26,0)
 ; 
"RTN","ZOSVONT",27,0)
PRIINQ() ; 
"RTN","ZOSVONT",28,0)
 Q 8
"RTN","ZOSVONT",29,0)
 ; 
"RTN","ZOSVONT",30,0)
UCI ;Current UCI
"RTN","ZOSVONT",31,0)
 S Y=$ZU(5)_","_^%ZOSF("VOL") Q
"RTN","ZOSVONT",32,0)
 ; 
"RTN","ZOSVONT",33,0)
UCICHECK(X) ;Check if valid UCI
"RTN","ZOSVONT",34,0)
 N Y,%
"RTN","ZOSVONT",35,0)
 S %=$P(X,",",1),Y=0 I $ZU(90,10,%) S Y=%
"RTN","ZOSVONT",36,0)
 Q Y
"RTN","ZOSVONT",37,0)
 ; 
"RTN","ZOSVONT",38,0)
GETPEER() ;Get the PEER tcp/ip address
"RTN","ZOSVONT",39,0)
 N PEER,NL,$ET S NL="",$ET="S $EC=NL Q NL",PEER=""
"RTN","ZOSVONT",40,0)
 I $$OS="VMS" S PEER=$ZF("TRNLNM","VISTA$IP")
"RTN","ZOSVONT",41,0)
 I '$L(PEER) S PEER=$ZU(111,0) S:$L(PEER) PEER=$A(PEER,1)_"."_$A(PEER,2)_"."_$A(PEER,3)_"."_$A(PEER,4)
"RTN","ZOSVONT",42,0)
 Q PEER
"RTN","ZOSVONT",43,0)
 ; 
"RTN","ZOSVONT",44,0)
SHARELIC(TYPE) ;See if can share a C/S license
"RTN","ZOSVONT",45,0)
 ;Type is 1 for C/S and 0 for Telnet
"RTN","ZOSVONT",46,0)
 N %,%N,%2,UID,%V,$ET S $ET="S $EC="""" Q",%V=$$VERSION()
"RTN","ZOSVONT",47,0)
 I %V<3.1 X:TYPE "S %N=$ZU(5),%2=$ZU(5,""%SYS""),%2=$$GetLic^LMFCLI,%N=$ZU(5,%N)" Q
"RTN","ZOSVONT",48,0)
 I %V<5 S:TYPE %=$$GetCSLic^%LICENSE S:'TYPE %=$$ShareLic^%LICENSE
"RTN","ZOSVONT",49,0)
 ;Per Sandy Waal 10/18/2003: With Cache' 5.0, your telnet and IP connections are now handled properly.
"RTN","ZOSVONT",50,0)
 I %V'<5 S %V=%V
"RTN","ZOSVONT",51,0)
 S $EC=""
"RTN","ZOSVONT",52,0)
 Q 
"RTN","ZOSVONT",53,0)
JOBPAR ;See if X points to a valid Job. Return its UCI.
"RTN","ZOSVONT",54,0)
 N ZJ S Y="",$ZT="JOBX"
"RTN","ZOSVONT",55,0)
 Q:'$D(^$JOB(X))  S Y=$V(-1,X),Y=$P(Y,"^",14)_","_^%ZOSF("VOL")
"RTN","ZOSVONT",56,0)
JOBX Q 
"RTN","ZOSVONT",57,0)
 ; 
"RTN","ZOSVONT",58,0)
NOLOG ; 
"RTN","ZOSVONT",59,0)
 S Y="$V(0,-2,4)\4096#2" Q
"RTN","ZOSVONT",60,0)
 ; 
"RTN","ZOSVONT",61,0)
PROGMODE() ;Check if in PROG mode
"RTN","ZOSVONT",62,0)
 Q $ZJ#2 
"RTN","ZOSVONT",63,0)
 ; 
"RTN","ZOSVONT",64,0)
PRGMODE ; 
"RTN","ZOSVONT",65,0)
 W ! S ZTPAC=$S('$D(^VA(200,+DUZ,.1)):"",1:$P(^(.1),U,5)),XUVOL=^%ZOSF("VOL")
"RTN","ZOSVONT",66,0)
 S X="" X ^%ZOSF("EOFF") R:ZTPAC]"" !,"PAC: ",X:60 D LC^XUS X ^%ZOSF("EON") I X'=ZTPAC W "??"_$C(7) Q
"RTN","ZOSVONT",67,0)
 S XMB="XUPROGMODE",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB
"RTN","ZOSVONT",68,0)
 D UCI S XUCI=Y,XQZ="PRGM^ZUA[MGR]",XUSLNT=1 D DO^%XUCI D ^%PMODE U $I:(:"+B+C+R") S $ZT="" Q
"RTN","ZOSVONT",69,0)
 Q 
"RTN","ZOSVONT",70,0)
LGR() S $ZT="LGRX^%ZOSV"
"RTN","ZOSVONT",71,0)
 Q $ZR ;Last Global ref.
"RTN","ZOSVONT",72,0)
LGRX Q ""
"RTN","ZOSVONT",73,0)
 ; 
"RTN","ZOSVONT",74,0)
EC() Q $ZE ;Error code
"RTN","ZOSVONT",75,0)
 ; 
"RTN","ZOSVONT",76,0)
DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVONT",77,0)
 S Y="%" F %=0:0 S Y=$O(@Y) Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVONT",78,0)
 Q 
"RTN","ZOSVONT",79,0)
 ; 
"RTN","ZOSVONT",80,0)
ORDER ;SAVE PART OF SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVONT",81,0)
 S (Y,Y1)=$P(Y,"*",1) I $D(@Y)=0 F %=0:0 S Y=$O(@Y) Q:Y=""!(Y[Y1)
"RTN","ZOSVONT",82,0)
 Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVONT",83,0)
 F %=0:0 S Y=$O(@Y) Q:Y=""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVONT",84,0)
 K %,X,Y,Y1
"RTN","ZOSVONT",85,0)
 Q 
"RTN","ZOSVONT",86,0)
 ; 
"RTN","ZOSVONT",87,0)
PARSIZ ; 
"RTN","ZOSVONT",88,0)
 S X=3
"RTN","ZOSVONT",89,0)
 Q 
"RTN","ZOSVONT",90,0)
 ; 
"RTN","ZOSVONT",91,0)
DEVOPN ;List of Devices opened
"RTN","ZOSVONT",92,0)
 ;Returns variable Y. Y=Devices owned separated by a comma
"RTN","ZOSVONT",93,0)
 Q 
"RTN","ZOSVONT",94,0)
DEVOK ; 
"RTN","ZOSVONT",95,0)
 S Y=0,X1=$G(X1) Q:X=2  Q:(X1="HFS")!(X1="SPL")!(X1="MT")!(X1="CHAN")  ;Quit w/ OK for HFS, Spool, MT, TCP/IP
"RTN","ZOSVONT",96,0)
 G:X1="RES" RESOK^%ZIS6
"RTN","ZOSVONT",97,0)
 N $ET S $ET="D OPNERR Q"
"RTN","ZOSVONT",98,0)
 O X::$S($D(%ZISTO):%ZISTO,1:0) E  S Y=999 Q  ;G NOPN
"RTN","ZOSVONT",99,0)
 S Y=0 I '$D(%ZISCHK)!($G(%ZIS)["T") C X Q
"RTN","ZOSVONT",100,0)
 S:X]"" IO(1,X)="" Q
"RTN","ZOSVONT",101,0)
 Q 
"RTN","ZOSVONT",102,0)
NOPN ; 
"RTN","ZOSVONT",103,0)
 N ZJ S $ZT="NJ"
"RTN","ZOSVONT",104,0)
 S ZJ="" F %=0:0 S ZJ=$ZJ(ZJ) Q:'ZJ  D NOPN1 Q:'ZJ
"RTN","ZOSVONT",105,0)
 Q 
"RTN","ZOSVONT",106,0)
NOPN1 S Y=$V(-1,ZJ) I $P(Y,"^",3)[X_","!($P(Y,"^",3)[X_"*,") S Y=ZJ,ZJ="" Q
"RTN","ZOSVONT",107,0)
 Q 
"RTN","ZOSVONT",108,0)
NJ Q  ;NOJOB ERROR
"RTN","ZOSVONT",109,0)
OPNERR S $EC="",Y=-1 Q
"RTN","ZOSVONT",110,0)
 ; 
"RTN","ZOSVONT",111,0)
GETENV ;Get environment  (UCI^VOL^NODE^BOX:VOLUME)
"RTN","ZOSVONT",112,0)
 N %,%1 S %=$$VERSION,%1=$ZU(86),%1=$S(%<3.1:$P(%1,"*",3),1:$P(%1,"*",2))
"RTN","ZOSVONT",113,0)
 D UCI S Y=$P(Y,",")_"^"_^%ZOSF("VOL")_"^"_$ZU(110)_"^"_^%ZOSF("VOL")_":"_%1
"RTN","ZOSVONT",114,0)
 Q 
"RTN","ZOSVONT",115,0)
VERSION(X) ;return Cache version, X=1 - return full name
"RTN","ZOSVONT",116,0)
 Q $S($G(X):$P($ZV,")")_")",1:$P($P($ZV,") ",2),"("))
"RTN","ZOSVONT",117,0)
 ; 
"RTN","ZOSVONT",118,0)
OS() ;Return the OS NT, VMS, Unix
"RTN","ZOSVONT",119,0)
 Q $S($ZV["VMS":"VMS",$ZV["NT":"NT",$ZV["UNIX":"UNIX",1:"UNK")
"RTN","ZOSVONT",120,0)
 ; 
"RTN","ZOSVONT",121,0)
SETNM(X) ;Set name, Fall into SETENV
"RTN","ZOSVONT",122,0)
SETENV ;Set environment
"RTN","ZOSVONT",123,0)
 N Q,$ET,$ES S $ET="S $EC="""" Q"
"RTN","ZOSVONT",124,0)
 I $$OS="VMS" S Q=$ZF("SETPRN",$E(X,1,15))
"RTN","ZOSVONT",125,0)
 Q 
"RTN","ZOSVONT",126,0)
 ;
"RTN","ZOSVONT",127,0)
SID() ;System ID Ver 1
"RTN","ZOSVONT",128,0)
 N J1,T S T="~"
"RTN","ZOSVONT",129,0)
 S J1(1)=$ZU(86) ;Node specific
"RTN","ZOSVONT",130,0)
 S J1(2)=$ZU(5)_T_$ZU(12,"") ;namespace~directory
"RTN","ZOSVONT",131,0)
 ; Q "1~"_J1(1)_T_J1(2)
"RTN","ZOSVONT",132,0)
 Q "1~"_J1(2)
"RTN","ZOSVONT",133,0)
 ;
"RTN","ZOSVONT",134,0)
HFSREW(IO,IOPAR) ;Rewind Host File.
"RTN","ZOSVONT",135,0)
 S $ZT="HFSRWERR"
"RTN","ZOSVONT",136,0)
 C IO O @(""""_IO_""""_$S(IOPAR]"":":"_IOPAR_":1",1:":1")) I '$T Q 0
"RTN","ZOSVONT",137,0)
 Q 1
"RTN","ZOSVONT",138,0)
HFSRWERR ;Error encountered
"RTN","ZOSVONT",139,0)
 Q 0
"RTN","ZOSVONT",140,0)
LOGRSRC(OPT,TYPE,STATUS) ;record resource usage in ^XTMP("KMPR"
"RTN","ZOSVONT",141,0)
 Q:'$G(^%ZTSCH("LOGRSRC"))  ; quit if RUM not turned on.
"RTN","ZOSVONT",142,0)
 ; call to RUM routine.
"RTN","ZOSVONT",143,0)
 D RU^%ZOSVKR($G(OPT),$G(TYPE),$G(STATUS))
"RTN","ZOSVONT",144,0)
 Q 
"RTN","ZOSVONT",145,0)
SETTRM(X) ;Turn on specified terminators.
"RTN","ZOSVONT",146,0)
 U $I:(:"+T":X)
"RTN","ZOSVONT",147,0)
 Q 1
"RTN","ZOSVONT",148,0)
 ; 
"RTN","ZOSVONT",149,0)
T0 ; start RT clock
"RTN","ZOSVONT",150,0)
 S XRT0=$H Q
"RTN","ZOSVONT",151,0)
T1 ; store RT datum
"RTN","ZOSVONT",152,0)
 S ^%ZRTL(3,XRTL,+$H,XRTN,$P($H,",",2))=XRT0 K XRT0 Q
"VER")
8.0^22.0
"BLD",872,6)
^334
**END**
**END**
