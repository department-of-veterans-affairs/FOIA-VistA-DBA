Released PSO*7*201 SEQ #221
Extracted from mail message
**KIDS**:PSO*7.0*201^

**INSTALL NAME**
PSO*7.0*201
"BLD",5907,0)
PSO*7.0*201^OUTPATIENT PHARMACY^0^3060825^y
"BLD",5907,1,0)
^^207^207^3060130^
"BLD",5907,1,1,0)
This Outpatient Pharmacy patch is part of the Patient Financial Services
"BLD",5907,1,2,0)
System (PFSS) project.  PFSS patches are being released on various
"BLD",5907,1,3,0)
schedules.  Some patch functionality will not be active until a new PFSS
"BLD",5907,1,4,0)
switch is activated during final implementation. PFSS will initially be
"BLD",5907,1,5,0)
implemented at select pilot sites ONLY.
"BLD",5907,1,6,0)
 
"BLD",5907,1,7,0)
The purpose of the PFSS project is to prepare the Veterans Health 
"BLD",5907,1,8,0)
Information Systems and Technology Architecture (VistA) environment for
"BLD",5907,1,9,0)
the implementation of a Commercial Off-The-Shelf (COTS) billing 
"BLD",5907,1,10,0)
replacement system.  The project consists of the implementation of the 
"BLD",5907,1,11,0)
billing replacement system, business process improvements, and 
"BLD",5907,1,12,0)
enhancements to VistA to support integration with the COTS billing
"BLD",5907,1,13,0)
replacement system.  Significant changes to VistA legacy systems and 
"BLD",5907,1,14,0)
ancillary packages are necessary.
"BLD",5907,1,15,0)
 
"BLD",5907,1,16,0)
Some of the PFSS software components are not operational until the PFSS 
"BLD",5907,1,17,0)
On/Off Switch, distributed with patch IB*2*260, is set to "ON".  The 
"BLD",5907,1,18,0)
ability for the local site to set the switch to "ON" will be provided at 
"BLD",5907,1,19,0)
the appropriate time with the release of a subsequent Integrated Billing 
"BLD",5907,1,20,0)
patch.
"BLD",5907,1,21,0)
 
"BLD",5907,1,22,0)
For more information about the PFSS project, review the documentation 
"BLD",5907,1,23,0)
accompanying this patch and refer to the following website: 
"BLD",5907,1,24,0)
http://vista.med.va.gov/billreplace/.
"BLD",5907,1,25,0)
 
"BLD",5907,1,26,0)
This Outpatient Pharmacy patch, PSO*7*201 provides the functionality
"BLD",5907,1,27,0)
needed to support the PFSS project.  Note that this patch depends on
"BLD",5907,1,28,0)
patches PSN*4*103 and PSS*1*92 to provide the new Charge Description
"BLD",5907,1,29,0)
Master (CDM) functionality.  The CDM provides Service Codes for each drug,
"BLD",5907,1,30,0)
supply item, etc. to uniquely identify them to the new COTS billing
"BLD",5907,1,31,0)
system.  This information is passed via IB Application Program Interface
"BLD",5907,1,32,0)
(API) calls, which is explained in the Technical Description.
"BLD",5907,1,33,0)
 
"BLD",5907,1,34,0)
Functional Description:
"BLD",5907,1,35,0)
=======================
"BLD",5907,1,36,0)
 
"BLD",5907,1,37,0)
Outpatient Pharmacy was modified to check the status of the PFSS 
"BLD",5907,1,38,0)
switch.  If the PFSS switch is not activated, the current Integrated 
"BLD",5907,1,39,0)
Billing (IB) billing process will continue.  If the PFSS switch is
"BLD",5907,1,40,0)
activated, prescription and copay information will be passed to the new
"BLD",5907,1,41,0)
COTS billing system for final copay assessments and billing via IB.
"BLD",5907,1,42,0)
As is currently the case with IB, the exchange of information will take
"BLD",5907,1,43,0)
place in the background with no user impact.
"BLD",5907,1,44,0)
 
"BLD",5907,1,45,0)
Upon entering a new prescription order, copying, renewing, or editing 
"BLD",5907,1,46,0)
an order that causes a new order to be created, a PFSS Account Reference
"BLD",5907,1,47,0)
will be requested at finish from IB. This reference is used to uniquely
"BLD",5907,1,48,0)
identify the prescription in the COTS billing system.
"BLD",5907,1,49,0)
 
"BLD",5907,1,50,0)
At prescription release, a unique charge identifier will be requested 
"BLD",5907,1,51,0)
from IB, and it will serve to uniquely identify the fill in IB.  Next, a
"BLD",5907,1,52,0)
charge message will be sent to the COTS billing system via IB.  This
"BLD",5907,1,53,0)
includes the release of Consolidated Mail Outpatient Pharmacy (CMOP)
"BLD",5907,1,54,0)
prescriptions and prescriptions released by the Outpatient Pharmacy
"BLD",5907,1,55,0)
Automation Interface (OPAI) functionality.
"BLD",5907,1,56,0)
 
"BLD",5907,1,57,0)
For return to stocks, and deletes that perform a return to stock, a charge
"BLD",5907,1,58,0)
credit message will be sent.  
"BLD",5907,1,59,0)
 
"BLD",5907,1,60,0)
When Service Connection and/or Environmental Indicators are modified
"BLD",5907,1,61,0)
without a change in copay using the Reset Copay Status/Cancel Charges
"BLD",5907,1,62,0)
[PSOCP RESET COPAY STATUS] option, a charge update message will be sent.  
"BLD",5907,1,63,0)
A charge credit message will be sent when copay charges are cancelled.  
"BLD",5907,1,64,0)
When the fill is changed to copay, no message will be sent because this
"BLD",5907,1,65,0)
change is considered to be for the future fills.
"BLD",5907,1,66,0)
 
"BLD",5907,1,67,0)
No messaging will take place for discontinued orders.  When a 
"BLD",5907,1,68,0)
discontinued order is reinstated, the previously obtained PFSS Account 
"BLD",5907,1,69,0)
Reference will be used.
"BLD",5907,1,70,0)
 
"BLD",5907,1,71,0)
In order to maintain the display of the "$" sign on the Medication 
"BLD",5907,1,72,0)
Profile screen that indicates the prescription is eligible for copay, IB
"BLD",5907,1,73,0)
will continue to be utilized for the copay eligibility assessment that is
"BLD",5907,1,74,0)
performed at finish.  Also, the Outpatient Pharmacy and IB copay
"BLD",5907,1,75,0)
evaluations performed at release for Service Connection, Environmental 
"BLD",5907,1,76,0)
Indicators, Drug Enforcement Agency (DEA) special handling (supply items
"BLD",5907,1,77,0)
and investigational drugs), income exempt, and RX Patient Status checks
"BLD",5907,1,78,0)
have not changed and will continue to be used.  However, the final copay
"BLD",5907,1,79,0)
billing determination will be performed by the COTS billing system, and
"BLD",5907,1,80,0)
the final decision is based on the above information, interfacility copay
"BLD",5907,1,81,0)
information, and current IB billing rules.  There will be no return
"BLD",5907,1,82,0)
messaging from the COTS billing system to Outpatient Pharmacy.
"BLD",5907,1,83,0)
 
"BLD",5907,1,84,0)
When Days Supply is edited on a released prescription, a charge update
"BLD",5907,1,85,0)
message will be sent to the COTS billing system, and it is understood that
"BLD",5907,1,86,0)
the COTS billing system will pick up the latest charge update.
"BLD",5907,1,87,0)
 
"BLD",5907,1,88,0)
Last, a new CHARGE LOCATION field (#1007) was added to the OUTPATIENT 
"BLD",5907,1,89,0)
SITE file (#59).  This field will be used by the COTS billing system 
"BLD",5907,1,90,0)
to group charges by division.  Upon installation and before the PFSS 
"BLD",5907,1,91,0)
switch is turned on, the user will need to enter an Outpatient Pharmacy
"BLD",5907,1,92,0)
charge location in the HOSPITAL LOCATION file (#44), and afterward define
"BLD",5907,1,93,0)
this location in the new CHARGE LOCATION field (#1007) in the OUTPATIENT
"BLD",5907,1,94,0)
SITE file (#59).  The Site Parameter Enter/Edit [PSO SITE PARAMETERS]
"BLD",5907,1,95,0)
option may be used to define the CHARGE LOCATION in the OUTPATIENT 
"BLD",5907,1,96,0)
SITE file (#59).  A charge location should be defined for each division in
"BLD",5907,1,97,0)
the OUTPATIENT SITE file (#59). It is suggested that this field be
"BLD",5907,1,98,0)
coordinated with the Medical Center's billing office and the activation of
"BLD",5907,1,99,0)
the PFSS functionality.  If at least one division has a CHARGE LOCATION
"BLD",5907,1,100,0)
defined, that value will be passed to the COTS billing system for all 
"BLD",5907,1,101,0)
division having prescriptions filled. If the CHARGE LOCATION is not
"BLD",5907,1,102,0)
defined for any division and the PFSS switch is turned on, the
"BLD",5907,1,103,0)
prescription information will not pass to IB or the COTS billing system.
"BLD",5907,1,104,0)
 
"BLD",5907,1,105,0)
 
"BLD",5907,1,106,0)
Technical Description:
"BLD",5907,1,107,0)
======================
"BLD",5907,1,108,0)
 
"BLD",5907,1,109,0)
At FINISH of the prescription fill:
"BLD",5907,1,110,0)
 
"BLD",5907,1,111,0)
1. The new IB API #4664 GETACCT^IBBAPI will be called to request a PFSS
"BLD",5907,1,112,0)
ACCOUNT REFERENCE and it will be stored in the PRESCRIPTION file (#52) on
"BLD",5907,1,113,0)
the fill level. For original fills, it will be stored in the PFSS ACCOUNT
"BLD",5907,1,114,0)
REFERENCE field (#125), and for refills it will be stored in the PFSS
"BLD",5907,1,115,0)
ACCOUNT REFERENCE field (#21). These references uniquely identify the
"BLD",5907,1,116,0)
prescription to the COTS billing system.
"BLD",5907,1,117,0)
 
"BLD",5907,1,118,0)
2. The array of data passed using the GETACCT^IBBAPI call encompasses all 
"BLD",5907,1,119,0)
of the minimum required data elements as stated in the PFSS SRS-SDD IBB 
"BLD",5907,1,120,0)
Generic API document.  The following outlines data passed from 
"BLD",5907,1,121,0)
Outpatient Pharmacy:
"BLD",5907,1,122,0)
 
"BLD",5907,1,123,0)
  $$GETACCT^IBBAPI(VAR1,VAR2,VAR3,VAR4,.ARR1,,,.ARR4,.ARR5,VAR5,,)
"BLD",5907,1,124,0)
    Where:  
"BLD",5907,1,125,0)
      VAR1 = Patient Identifier (Patient IEN)  
"BLD",5907,1,126,0)
      VAR2 = PFSS Account Reference  
"BLD",5907,1,127,0)
      VAR3 = HL7 Event Code          
"BLD",5907,1,128,0)
      VAR4 = Application Location Reference
"BLD",5907,1,129,0)
      ARR1 = ARR1(2) Patient Class, ARR1(3) Patient Location,
"BLD",5907,1,130,0)
                  ARR1(7) Attending Physician, ARR1(44) Admit 
"BLD",5907,1,131,0)
                  Date/Time (Fill Date), ARR1(50) Alternant Visit
"BLD",5907,1,132,0)
                  ID (Prescription IEN)
"BLD",5907,1,133,0)
      ARR4 = ARR4(n,3) Diagnoses Code, ARR4(n,6) Diagnosis Type 
"BLD",5907,1,134,0)
      ARR5 = ARR5(n,2) Type
"BLD",5907,1,135,0)
      VAR5 = Medical Center Division
"BLD",5907,1,136,0)
 
"BLD",5907,1,137,0)
3. After IB returns the PFSS ACCOUNT REFERENCE to Outpatient Pharmacy,
"BLD",5907,1,138,0)
IB will pass the GETACCT information to the COTS billing system via the
"BLD",5907,1,139,0)
VistA Data Extraction Framework (VDEF) and will store the returned PFSS
"BLD",5907,1,140,0)
Account Number external value in the PFSS ACCOUNT file (#375).
"BLD",5907,1,141,0)
 
"BLD",5907,1,142,0)
 
"BLD",5907,1,143,0)
At RELEASE of the prescription fill:
"BLD",5907,1,144,0)
 
"BLD",5907,1,145,0)
1. The new IB API # 4665 GETCHGID^IBBAPI will be called to request a PFSS
"BLD",5907,1,146,0)
CHARGE ID.  This information is used to uniquely identify the fill in the
"BLD",5907,1,147,0)
IB and will be stored in Prescription file (#52) on the fill level. For
"BLD",5907,1,148,0)
original fills, it will be stored in the PFSS CHARGE ID field (#126), and
"BLD",5907,1,149,0)
for refills it will be stored in the PFSS CHARGE ID field (#22).  No data
"BLD",5907,1,150,0)
is passed using this API.
"BLD",5907,1,151,0)
 
"BLD",5907,1,152,0)
2. Next, the new IB API #4665 CHARGE^IBBAPI will be called to pass
"BLD",5907,1,153,0)
prescription and copay information.  This information will be stored in
"BLD",5907,1,154,0)
the PFSS CHARGE CACHE file (#373).  IB will batch the charge information
"BLD",5907,1,155,0)
and pass it on to the COTS billing system via VDEF.
"BLD",5907,1,156,0)
 
"BLD",5907,1,157,0)
3. The array of data passed using the CHARGE^IBBAPI call encompasses all 
"BLD",5907,1,158,0)
of the minimum required data elements as stated in the PFSS SRS-SDD IBB 
"BLD",5907,1,159,0)
Generic API document.  The following outlines data passed from Outpatient
"BLD",5907,1,160,0)
Pharmacy:
"BLD",5907,1,161,0)
 
"BLD",5907,1,162,0)
     $$CHARGE^IBBAPI(VAR1,VAR2,VAR3,VAR4,.ARR1,,.ARR3,.ARR4,.ARR5,,,)
"BLD",5907,1,163,0)
       Where:
"BLD",5907,1,164,0)
         VAR1 = Patient Identifier (Patient IEN)              
"BLD",5907,1,165,0)
         VAR2 = PFSS Account Reference  
"BLD",5907,1,166,0)
         VAR3 = Charge Type               
"BLD",5907,1,167,0)
         VAR4 = Unique Charge ID (PFSS Charge ID)
"BLD",5907,1,168,0)
         ARR1 = ARR1(4) Transaction Date (Fill Date), ARR1(7) Transaction
"BLD",5907,1,169,0)
                  Code, ARR1(10) Transaction Quantity, ARR1(13) Department
"BLD",5907,1,170,0)
                  Code, ARR1(18) Patient Copay Status, ARR1(21) Ordered by
"BLD",5907,1,171,0)
                  Code, ARR1(22) Unit Cost, ARR1(29) NDC_";"_Generic
"BLD",5907,1,172,0)
                  Name, ARR1(31) Copay Transaction Type
"BLD",5907,1,173,0)
         ARR3 = ARR3(n,3) Diagnoses Code, ARR3(n,6) Diagnosis Type
"BLD",5907,1,174,0)
         ARR4 = ARR4(n,2) Type
"BLD",5907,1,175,0)
         ARR5 = ARR5(1) Quantity_";;"_Days Supply, ARR5(17) Refills 
"BLD",5907,1,176,0)
                  Dispensed (Fill Number), ARR5(18) Date of Most Recent
"BLD",5907,1,177,0)
                  Fill (Release Date), ARR5(31) DEA, Special Handling
"BLD",5907,1,178,0)
 
"BLD",5907,1,179,0)
4. There will be no return messaging from the COTS billing system to 
"BLD",5907,1,180,0)
Outpatient Pharmacy.  Note that IB will combine the data passed in the
"BLD",5907,1,181,0)
GETACCT and CHARGE APIs to form the charge message that will ultimately
"BLD",5907,1,182,0)
be passed to the COTS billing system via VDEF.
"BLD",5907,1,183,0)
 
"BLD",5907,1,184,0)
 
"BLD",5907,1,185,0)
CHARGE LOCATION additions:
"BLD",5907,1,186,0)
 
"BLD",5907,1,187,0)
1. In the OUTPATIENT SITE file (#59), a new CHARGE LOCATION field 
"BLD",5907,1,188,0)
(#1007) was added, and this field is a pointer to HOSPITAL LOCATION file 
"BLD",5907,1,189,0)
(#44).
"BLD",5907,1,190,0)
 
"BLD",5907,1,191,0)
2. The Site Parameter Enter/Edit [PSO SITE PARAMETERS] option input
"BLD",5907,1,192,0)
template PSO SITE was modified to accommodate entry of the new CHARGE
"BLD",5907,1,193,0)
LOCATION field (#1007).
"BLD",5907,1,194,0)
 
"BLD",5907,1,195,0)
3. If a CHARGE LOCATION is not defined for a particular division, the 
"BLD",5907,1,196,0)
system will loop through all divisions in the OUTPATIENT SITE file (#59) 
"BLD",5907,1,197,0)
and will use the first CHARGE LOCATION it finds.  When none of the
"BLD",5907,1,198,0)
divisions have a CHARGE LOCATION defined, the prescription will not be 
"BLD",5907,1,199,0)
passed to IB or the COTS billing system.  This issue will be addressed in
"BLD",5907,1,200,0)
a subsequent phase of the PFSS project.  Until that time, it is imperative
"BLD",5907,1,201,0)
that CHARGE LOCATION are defined for each division.
"BLD",5907,1,202,0)
 
"BLD",5907,1,203,0)
The Integration Agreement (IA) #4732 was created to facilitate 
"BLD",5907,1,204,0)
modifications being made by IB for interfacility copay.  It will be used 
"BLD",5907,1,205,0)
in the background to return the pharmacist, person who last edited the 
"BLD",5907,1,206,0)
prescription fill, and the value of the IB SERVICE/SECTION field (#1003) 
"BLD",5907,1,207,0)
from the OUTPATIENT SITE file (#59).
"BLD",5907,4,0)
^9.64PA^52^2
"BLD",5907,4,52,0)
52
"BLD",5907,4,52,2,0)
^9.641^52.1^2
"BLD",5907,4,52,2,52,0)
PRESCRIPTION  (File-top level)
"BLD",5907,4,52,2,52,1,0)
^9.6411^126^2
"BLD",5907,4,52,2,52,1,125,0)
PFSS ACCOUNT REFERENCE
"BLD",5907,4,52,2,52,1,126,0)
PFSS CHARGE ID
"BLD",5907,4,52,2,52.1,0)
REFILL  (sub-file)
"BLD",5907,4,52,2,52.1,1,0)
^9.6411^22^2
"BLD",5907,4,52,2,52.1,1,21,0)
PFSS ACCOUNT REFERENCE
"BLD",5907,4,52,2,52.1,1,22,0)
PFSS CHARGE ID
"BLD",5907,4,52,222)
y^y^p^^^^n^^n
"BLD",5907,4,52,224)

"BLD",5907,4,59,0)
59
"BLD",5907,4,59,2,0)
^9.641^59^1
"BLD",5907,4,59,2,59,0)
OUTPATIENT SITE  (File-top level)
"BLD",5907,4,59,2,59,1,0)
^9.6411^1007^1
"BLD",5907,4,59,2,59,1,1007,0)
CHARGE LOCATION
"BLD",5907,4,59,222)
y^n^p^^^^n^^n
"BLD",5907,4,59,224)

"BLD",5907,4,"APDD",52,52)

"BLD",5907,4,"APDD",52,52,125)

"BLD",5907,4,"APDD",52,52,126)

"BLD",5907,4,"APDD",52,52.1)

"BLD",5907,4,"APDD",52,52.1,21)

"BLD",5907,4,"APDD",52,52.1,22)

"BLD",5907,4,"APDD",59,59)

"BLD",5907,4,"APDD",59,59,1007)

"BLD",5907,4,"B",52,52)

"BLD",5907,4,"B",59,59)

"BLD",5907,6)
4^
"BLD",5907,6.3)
3
"BLD",5907,"ABPKG")
n
"BLD",5907,"KRN",0)
^9.67PA^8989.52^19
"BLD",5907,"KRN",.4,0)
.4
"BLD",5907,"KRN",.4,"NM",0)
^9.68A^^
"BLD",5907,"KRN",.401,0)
.401
"BLD",5907,"KRN",.401,"NM",0)
^9.68A^^
"BLD",5907,"KRN",.402,0)
.402
"BLD",5907,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",5907,"KRN",.402,"NM",1,0)
PSO SITE    FILE #59^59^0
"BLD",5907,"KRN",.402,"NM","B","PSO SITE    FILE #59",1)

"BLD",5907,"KRN",.403,0)
.403
"BLD",5907,"KRN",.403,"NM",0)
^9.68A^^
"BLD",5907,"KRN",.5,0)
.5
"BLD",5907,"KRN",.5,"NM",0)
^9.68A^^
"BLD",5907,"KRN",.84,0)
.84
"BLD",5907,"KRN",.84,"NM",0)
^9.68A^^
"BLD",5907,"KRN",3.6,0)
3.6
"BLD",5907,"KRN",3.6,"NM",0)
^9.68A^^
"BLD",5907,"KRN",3.8,0)
3.8
"BLD",5907,"KRN",3.8,"NM",0)
^9.68A^^
"BLD",5907,"KRN",9.2,0)
9.2
"BLD",5907,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",5907,"KRN",9.8,0)
9.8
"BLD",5907,"KRN",9.8,"NM",0)
^9.68A^17^16
"BLD",5907,"KRN",9.8,"NM",1,0)
PSON52^^0^B59816394
"BLD",5907,"KRN",9.8,"NM",2,0)
PSOR52^^0^B31117928
"BLD",5907,"KRN",9.8,"NM",3,0)
PSORN52^^0^B43085141
"BLD",5907,"KRN",9.8,"NM",4,0)
PSOCP^^0^B65342782
"BLD",5907,"KRN",9.8,"NM",5,0)
PSOCPA^^0^B43580682
"BLD",5907,"KRN",9.8,"NM",6,0)
PSOCPB^^0^B83592265
"BLD",5907,"KRN",9.8,"NM",7,0)
PSOCPC^^0^B68516946
"BLD",5907,"KRN",9.8,"NM",9,0)
PSORXDL^^0^B61943911
"BLD",5907,"KRN",9.8,"NM",10,0)
PSORESK^^0^B61223518
"BLD",5907,"KRN",9.8,"NM",11,0)
PSOCPD^^0^B68892823
"BLD",5907,"KRN",9.8,"NM",12,0)
PSORESK1^^0^B7754829
"BLD",5907,"KRN",9.8,"NM",13,0)
PSOPFSU0^^0^B16719657
"BLD",5907,"KRN",9.8,"NM",14,0)
PSOPFSU1^^0^B33416408
"BLD",5907,"KRN",9.8,"NM",15,0)
PSORXED^^0^B53144628
"BLD",5907,"KRN",9.8,"NM",16,0)
PSOHLNE3^^0^B56031313
"BLD",5907,"KRN",9.8,"NM",17,0)
PSOHLNE4^^0^B10329069
"BLD",5907,"KRN",9.8,"NM","B","PSOCP",4)

"BLD",5907,"KRN",9.8,"NM","B","PSOCPA",5)

"BLD",5907,"KRN",9.8,"NM","B","PSOCPB",6)

"BLD",5907,"KRN",9.8,"NM","B","PSOCPC",7)

"BLD",5907,"KRN",9.8,"NM","B","PSOCPD",11)

"BLD",5907,"KRN",9.8,"NM","B","PSOHLNE3",16)

"BLD",5907,"KRN",9.8,"NM","B","PSOHLNE4",17)

"BLD",5907,"KRN",9.8,"NM","B","PSON52",1)

"BLD",5907,"KRN",9.8,"NM","B","PSOPFSU0",13)

"BLD",5907,"KRN",9.8,"NM","B","PSOPFSU1",14)

"BLD",5907,"KRN",9.8,"NM","B","PSOR52",2)

"BLD",5907,"KRN",9.8,"NM","B","PSORESK",10)

"BLD",5907,"KRN",9.8,"NM","B","PSORESK1",12)

"BLD",5907,"KRN",9.8,"NM","B","PSORN52",3)

"BLD",5907,"KRN",9.8,"NM","B","PSORXDL",9)

"BLD",5907,"KRN",9.8,"NM","B","PSORXED",15)

"BLD",5907,"KRN",19,0)
19
"BLD",5907,"KRN",19,"NM",0)
^9.68A^^
"BLD",5907,"KRN",19.1,0)
19.1
"BLD",5907,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",5907,"KRN",101,0)
101
"BLD",5907,"KRN",101,"NM",0)
^9.68A^^
"BLD",5907,"KRN",409.61,0)
409.61
"BLD",5907,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",5907,"KRN",771,0)
771
"BLD",5907,"KRN",771,"NM",0)
^9.68A^^
"BLD",5907,"KRN",870,0)
870
"BLD",5907,"KRN",870,"NM",0)
^9.68A^^
"BLD",5907,"KRN",8989.51,0)
8989.51
"BLD",5907,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",5907,"KRN",8989.52,0)
8989.52
"BLD",5907,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",5907,"KRN",8994,0)
8994
"BLD",5907,"KRN",8994,"NM",0)
^9.68A^^
"BLD",5907,"KRN","B",.4,.4)

"BLD",5907,"KRN","B",.401,.401)

"BLD",5907,"KRN","B",.402,.402)

"BLD",5907,"KRN","B",.403,.403)

"BLD",5907,"KRN","B",.5,.5)

"BLD",5907,"KRN","B",.84,.84)

"BLD",5907,"KRN","B",3.6,3.6)

"BLD",5907,"KRN","B",3.8,3.8)

"BLD",5907,"KRN","B",9.2,9.2)

"BLD",5907,"KRN","B",9.8,9.8)

"BLD",5907,"KRN","B",19,19)

"BLD",5907,"KRN","B",19.1,19.1)

"BLD",5907,"KRN","B",101,101)

"BLD",5907,"KRN","B",409.61,409.61)

"BLD",5907,"KRN","B",771,771)

"BLD",5907,"KRN","B",870,870)

"BLD",5907,"KRN","B",8989.51,8989.51)

"BLD",5907,"KRN","B",8989.52,8989.52)

"BLD",5907,"KRN","B",8994,8994)

"BLD",5907,"QUES",0)
^9.62^^
"BLD",5907,"REQB",0)
^9.611^11^5
"BLD",5907,"REQB",1,0)
IB*2.0*260^2
"BLD",5907,"REQB",8,0)
PSO*7.0*239^2
"BLD",5907,"REQB",9,0)
PSO*7.0*148^2
"BLD",5907,"REQB",10,0)
PSO*7.0*125^2
"BLD",5907,"REQB",11,0)
IB*2.0*286^2
"BLD",5907,"REQB","B","IB*2.0*260",1)

"BLD",5907,"REQB","B","IB*2.0*286",11)

"BLD",5907,"REQB","B","PSO*7.0*125",10)

"BLD",5907,"REQB","B","PSO*7.0*148",9)

"BLD",5907,"REQB","B","PSO*7.0*239",8)

"FIA",52)
PRESCRIPTION
"FIA",52,0)
^PSRX(
"FIA",52,0,0)
52I
"FIA",52,0,1)
y^y^p^^^^n^^n
"FIA",52,0,10)

"FIA",52,0,11)

"FIA",52,0,"RLRO")

"FIA",52,0,"VR")
7.0^PSO
"FIA",52,52)
1
"FIA",52,52,125)

"FIA",52,52,126)

"FIA",52,52.1)
1
"FIA",52,52.1,21)

"FIA",52,52.1,22)

"FIA",59)
OUTPATIENT SITE
"FIA",59,0)
^PS(59,
"FIA",59,0,0)
59I
"FIA",59,0,1)
y^n^p^^^^n^^n
"FIA",59,0,10)

"FIA",59,0,11)

"FIA",59,0,"RLRO")

"FIA",59,0,"VR")
7.0^PSO
"FIA",59,59)
1
"FIA",59,59,1007)

"KRN",.402,2037,-1)
0^1
"KRN",.402,2037,0)
PSO SITE^3051024.1231^^59^^^3060215
"KRN",.402,2037,"DIAB",1,1,59.02008,0)
ALL
"KRN",.402,2037,"DR",1,59)
.01:.06;1008;.07:.081;2004;.09:.091;.1:.18;.2:.52;3:5;2008;6:7;105;105.1;105.2;2006;2007;8;100;109;1000;1001;1002;2001;2002;1003;1007;1004;1005;1006;2005;
"KRN",.402,2037,"DR",2,59.02008)
.01
"KRN",.402,2037,"DR",2,59.08)
.01;1;
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"PKG",206,-1)
1^1
"PKG",206,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",206,20,0)
^9.402P^^
"PKG",206,22,0)
^9.49I^1^1
"PKG",206,22,1,0)
7.0^3021122^3021202^66481
"PKG",206,22,1,"PAH",1,0)
201^3060825^123456821
"PKG",206,22,1,"PAH",1,1,0)
^^207^207^3060825
"PKG",206,22,1,"PAH",1,1,1,0)
This Outpatient Pharmacy patch is part of the Patient Financial Services
"PKG",206,22,1,"PAH",1,1,2,0)
System (PFSS) project.  PFSS patches are being released on various
"PKG",206,22,1,"PAH",1,1,3,0)
schedules.  Some patch functionality will not be active until a new PFSS
"PKG",206,22,1,"PAH",1,1,4,0)
switch is activated during final implementation. PFSS will initially be
"PKG",206,22,1,"PAH",1,1,5,0)
implemented at select pilot sites ONLY.
"PKG",206,22,1,"PAH",1,1,6,0)
 
"PKG",206,22,1,"PAH",1,1,7,0)
The purpose of the PFSS project is to prepare the Veterans Health 
"PKG",206,22,1,"PAH",1,1,8,0)
Information Systems and Technology Architecture (VistA) environment for
"PKG",206,22,1,"PAH",1,1,9,0)
the implementation of a Commercial Off-The-Shelf (COTS) billing 
"PKG",206,22,1,"PAH",1,1,10,0)
replacement system.  The project consists of the implementation of the 
"PKG",206,22,1,"PAH",1,1,11,0)
billing replacement system, business process improvements, and 
"PKG",206,22,1,"PAH",1,1,12,0)
enhancements to VistA to support integration with the COTS billing
"PKG",206,22,1,"PAH",1,1,13,0)
replacement system.  Significant changes to VistA legacy systems and 
"PKG",206,22,1,"PAH",1,1,14,0)
ancillary packages are necessary.
"PKG",206,22,1,"PAH",1,1,15,0)
 
"PKG",206,22,1,"PAH",1,1,16,0)
Some of the PFSS software components are not operational until the PFSS 
"PKG",206,22,1,"PAH",1,1,17,0)
On/Off Switch, distributed with patch IB*2*260, is set to "ON".  The 
"PKG",206,22,1,"PAH",1,1,18,0)
ability for the local site to set the switch to "ON" will be provided at 
"PKG",206,22,1,"PAH",1,1,19,0)
the appropriate time with the release of a subsequent Integrated Billing 
"PKG",206,22,1,"PAH",1,1,20,0)
patch.
"PKG",206,22,1,"PAH",1,1,21,0)
 
"PKG",206,22,1,"PAH",1,1,22,0)
For more information about the PFSS project, review the documentation 
"PKG",206,22,1,"PAH",1,1,23,0)
accompanying this patch and refer to the following website: 
"PKG",206,22,1,"PAH",1,1,24,0)
http://vista.med.va.gov/billreplace/.
"PKG",206,22,1,"PAH",1,1,25,0)
 
"PKG",206,22,1,"PAH",1,1,26,0)
This Outpatient Pharmacy patch, PSO*7*201 provides the functionality
"PKG",206,22,1,"PAH",1,1,27,0)
needed to support the PFSS project.  Note that this patch depends on
"PKG",206,22,1,"PAH",1,1,28,0)
patches PSN*4*103 and PSS*1*92 to provide the new Charge Description
"PKG",206,22,1,"PAH",1,1,29,0)
Master (CDM) functionality.  The CDM provides Service Codes for each drug,
"PKG",206,22,1,"PAH",1,1,30,0)
supply item, etc. to uniquely identify them to the new COTS billing
"PKG",206,22,1,"PAH",1,1,31,0)
system.  This information is passed via IB Application Program Interface
"PKG",206,22,1,"PAH",1,1,32,0)
(API) calls, which is explained in the Technical Description.
"PKG",206,22,1,"PAH",1,1,33,0)
 
"PKG",206,22,1,"PAH",1,1,34,0)
Functional Description:
"PKG",206,22,1,"PAH",1,1,35,0)
=======================
"PKG",206,22,1,"PAH",1,1,36,0)
 
"PKG",206,22,1,"PAH",1,1,37,0)
Outpatient Pharmacy was modified to check the status of the PFSS 
"PKG",206,22,1,"PAH",1,1,38,0)
switch.  If the PFSS switch is not activated, the current Integrated 
"PKG",206,22,1,"PAH",1,1,39,0)
Billing (IB) billing process will continue.  If the PFSS switch is
"PKG",206,22,1,"PAH",1,1,40,0)
activated, prescription and copay information will be passed to the new
"PKG",206,22,1,"PAH",1,1,41,0)
COTS billing system for final copay assessments and billing via IB.
"PKG",206,22,1,"PAH",1,1,42,0)
As is currently the case with IB, the exchange of information will take
"PKG",206,22,1,"PAH",1,1,43,0)
place in the background with no user impact.
"PKG",206,22,1,"PAH",1,1,44,0)
 
"PKG",206,22,1,"PAH",1,1,45,0)
Upon entering a new prescription order, copying, renewing, or editing 
"PKG",206,22,1,"PAH",1,1,46,0)
an order that causes a new order to be created, a PFSS Account Reference
"PKG",206,22,1,"PAH",1,1,47,0)
will be requested at finish from IB. This reference is used to uniquely
"PKG",206,22,1,"PAH",1,1,48,0)
identify the prescription in the COTS billing system.
"PKG",206,22,1,"PAH",1,1,49,0)
 
"PKG",206,22,1,"PAH",1,1,50,0)
At prescription release, a unique charge identifier will be requested 
"PKG",206,22,1,"PAH",1,1,51,0)
from IB, and it will serve to uniquely identify the fill in IB.  Next, a
"PKG",206,22,1,"PAH",1,1,52,0)
charge message will be sent to the COTS billing system via IB.  This
"PKG",206,22,1,"PAH",1,1,53,0)
includes the release of Consolidated Mail Outpatient Pharmacy (CMOP)
"PKG",206,22,1,"PAH",1,1,54,0)
prescriptions and prescriptions released by the Outpatient Pharmacy
"PKG",206,22,1,"PAH",1,1,55,0)
Automation Interface (OPAI) functionality.
"PKG",206,22,1,"PAH",1,1,56,0)
 
"PKG",206,22,1,"PAH",1,1,57,0)
For return to stocks, and deletes that perform a return to stock, a charge
"PKG",206,22,1,"PAH",1,1,58,0)
credit message will be sent.  
"PKG",206,22,1,"PAH",1,1,59,0)
 
"PKG",206,22,1,"PAH",1,1,60,0)
When Service Connection and/or Environmental Indicators are modified
"PKG",206,22,1,"PAH",1,1,61,0)
without a change in copay using the Reset Copay Status/Cancel Charges
"PKG",206,22,1,"PAH",1,1,62,0)
[PSOCP RESET COPAY STATUS] option, a charge update message will be sent.  
"PKG",206,22,1,"PAH",1,1,63,0)
A charge credit message will be sent when copay charges are cancelled.  
"PKG",206,22,1,"PAH",1,1,64,0)
When the fill is changed to copay, no message will be sent because this
"PKG",206,22,1,"PAH",1,1,65,0)
change is considered to be for the future fills.
"PKG",206,22,1,"PAH",1,1,66,0)
 
"PKG",206,22,1,"PAH",1,1,67,0)
No messaging will take place for discontinued orders.  When a 
"PKG",206,22,1,"PAH",1,1,68,0)
discontinued order is reinstated, the previously obtained PFSS Account 
"PKG",206,22,1,"PAH",1,1,69,0)
Reference will be used.
"PKG",206,22,1,"PAH",1,1,70,0)
 
"PKG",206,22,1,"PAH",1,1,71,0)
In order to maintain the display of the "$" sign on the Medication 
"PKG",206,22,1,"PAH",1,1,72,0)
Profile screen that indicates the prescription is eligible for copay, IB
"PKG",206,22,1,"PAH",1,1,73,0)
will continue to be utilized for the copay eligibility assessment that is
"PKG",206,22,1,"PAH",1,1,74,0)
performed at finish.  Also, the Outpatient Pharmacy and IB copay
"PKG",206,22,1,"PAH",1,1,75,0)
evaluations performed at release for Service Connection, Environmental 
"PKG",206,22,1,"PAH",1,1,76,0)
Indicators, Drug Enforcement Agency (DEA) special handling (supply items
"PKG",206,22,1,"PAH",1,1,77,0)
and investigational drugs), income exempt, and RX Patient Status checks
"PKG",206,22,1,"PAH",1,1,78,0)
have not changed and will continue to be used.  However, the final copay
"PKG",206,22,1,"PAH",1,1,79,0)
billing determination will be performed by the COTS billing system, and
"PKG",206,22,1,"PAH",1,1,80,0)
the final decision is based on the above information, interfacility copay
"PKG",206,22,1,"PAH",1,1,81,0)
information, and current IB billing rules.  There will be no return
"PKG",206,22,1,"PAH",1,1,82,0)
messaging from the COTS billing system to Outpatient Pharmacy.
"PKG",206,22,1,"PAH",1,1,83,0)
 
"PKG",206,22,1,"PAH",1,1,84,0)
When Days Supply is edited on a released prescription, a charge update
"PKG",206,22,1,"PAH",1,1,85,0)
message will be sent to the COTS billing system, and it is understood that
"PKG",206,22,1,"PAH",1,1,86,0)
the COTS billing system will pick up the latest charge update.
"PKG",206,22,1,"PAH",1,1,87,0)
 
"PKG",206,22,1,"PAH",1,1,88,0)
Last, a new CHARGE LOCATION field (#1007) was added to the OUTPATIENT 
"PKG",206,22,1,"PAH",1,1,89,0)
SITE file (#59).  This field will be used by the COTS billing system 
"PKG",206,22,1,"PAH",1,1,90,0)
to group charges by division.  Upon installation and before the PFSS 
"PKG",206,22,1,"PAH",1,1,91,0)
switch is turned on, the user will need to enter an Outpatient Pharmacy
"PKG",206,22,1,"PAH",1,1,92,0)
charge location in the HOSPITAL LOCATION file (#44), and afterward define
"PKG",206,22,1,"PAH",1,1,93,0)
this location in the new CHARGE LOCATION field (#1007) in the OUTPATIENT
"PKG",206,22,1,"PAH",1,1,94,0)
SITE file (#59).  The Site Parameter Enter/Edit [PSO SITE PARAMETERS]
"PKG",206,22,1,"PAH",1,1,95,0)
option may be used to define the CHARGE LOCATION in the OUTPATIENT 
"PKG",206,22,1,"PAH",1,1,96,0)
SITE file (#59).  A charge location should be defined for each division in
"PKG",206,22,1,"PAH",1,1,97,0)
the OUTPATIENT SITE file (#59). It is suggested that this field be
"PKG",206,22,1,"PAH",1,1,98,0)
coordinated with the Medical Center's billing office and the activation of
"PKG",206,22,1,"PAH",1,1,99,0)
the PFSS functionality.  If at least one division has a CHARGE LOCATION
"PKG",206,22,1,"PAH",1,1,100,0)
defined, that value will be passed to the COTS billing system for all 
"PKG",206,22,1,"PAH",1,1,101,0)
division having prescriptions filled. If the CHARGE LOCATION is not
"PKG",206,22,1,"PAH",1,1,102,0)
defined for any division and the PFSS switch is turned on, the
"PKG",206,22,1,"PAH",1,1,103,0)
prescription information will not pass to IB or the COTS billing system.
"PKG",206,22,1,"PAH",1,1,104,0)
 
"PKG",206,22,1,"PAH",1,1,105,0)
 
"PKG",206,22,1,"PAH",1,1,106,0)
Technical Description:
"PKG",206,22,1,"PAH",1,1,107,0)
======================
"PKG",206,22,1,"PAH",1,1,108,0)
 
"PKG",206,22,1,"PAH",1,1,109,0)
At FINISH of the prescription fill:
"PKG",206,22,1,"PAH",1,1,110,0)
 
"PKG",206,22,1,"PAH",1,1,111,0)
1. The new IB API #4664 GETACCT^IBBAPI will be called to request a PFSS
"PKG",206,22,1,"PAH",1,1,112,0)
ACCOUNT REFERENCE and it will be stored in the PRESCRIPTION file (#52) on
"PKG",206,22,1,"PAH",1,1,113,0)
the fill level. For original fills, it will be stored in the PFSS ACCOUNT
"PKG",206,22,1,"PAH",1,1,114,0)
REFERENCE field (#125), and for refills it will be stored in the PFSS
"PKG",206,22,1,"PAH",1,1,115,0)
ACCOUNT REFERENCE field (#21). These references uniquely identify the
"PKG",206,22,1,"PAH",1,1,116,0)
prescription to the COTS billing system.
"PKG",206,22,1,"PAH",1,1,117,0)
 
"PKG",206,22,1,"PAH",1,1,118,0)
2. The array of data passed using the GETACCT^IBBAPI call encompasses all 
"PKG",206,22,1,"PAH",1,1,119,0)
of the minimum required data elements as stated in the PFSS SRS-SDD IBB 
"PKG",206,22,1,"PAH",1,1,120,0)
Generic API document.  The following outlines data passed from 
"PKG",206,22,1,"PAH",1,1,121,0)
Outpatient Pharmacy:
"PKG",206,22,1,"PAH",1,1,122,0)
 
"PKG",206,22,1,"PAH",1,1,123,0)
  $$GETACCT^IBBAPI(VAR1,VAR2,VAR3,VAR4,.ARR1,,,.ARR4,.ARR5,VAR5,,)
"PKG",206,22,1,"PAH",1,1,124,0)
    Where:  
"PKG",206,22,1,"PAH",1,1,125,0)
      VAR1 = Patient Identifier (Patient IEN)  
"PKG",206,22,1,"PAH",1,1,126,0)
      VAR2 = PFSS Account Reference  
"PKG",206,22,1,"PAH",1,1,127,0)
      VAR3 = HL7 Event Code          
"PKG",206,22,1,"PAH",1,1,128,0)
      VAR4 = Application Location Reference
"PKG",206,22,1,"PAH",1,1,129,0)
      ARR1 = ARR1(2) Patient Class, ARR1(3) Patient Location,
"PKG",206,22,1,"PAH",1,1,130,0)
                  ARR1(7) Attending Physician, ARR1(44) Admit 
"PKG",206,22,1,"PAH",1,1,131,0)
                  Date/Time (Fill Date), ARR1(50) Alternant Visit
"PKG",206,22,1,"PAH",1,1,132,0)
                  ID (Prescription IEN)
"PKG",206,22,1,"PAH",1,1,133,0)
      ARR4 = ARR4(n,3) Diagnoses Code, ARR4(n,6) Diagnosis Type 
"PKG",206,22,1,"PAH",1,1,134,0)
      ARR5 = ARR5(n,2) Type
"PKG",206,22,1,"PAH",1,1,135,0)
      VAR5 = Medical Center Division
"PKG",206,22,1,"PAH",1,1,136,0)
 
"PKG",206,22,1,"PAH",1,1,137,0)
3. After IB returns the PFSS ACCOUNT REFERENCE to Outpatient Pharmacy,
"PKG",206,22,1,"PAH",1,1,138,0)
IB will pass the GETACCT information to the COTS billing system via the
"PKG",206,22,1,"PAH",1,1,139,0)
VistA Data Extraction Framework (VDEF) and will store the returned PFSS
"PKG",206,22,1,"PAH",1,1,140,0)
Account Number external value in the PFSS ACCOUNT file (#375).
"PKG",206,22,1,"PAH",1,1,141,0)
 
"PKG",206,22,1,"PAH",1,1,142,0)
 
"PKG",206,22,1,"PAH",1,1,143,0)
At RELEASE of the prescription fill:
"PKG",206,22,1,"PAH",1,1,144,0)
 
"PKG",206,22,1,"PAH",1,1,145,0)
1. The new IB API # 4665 GETCHGID^IBBAPI will be called to request a PFSS
"PKG",206,22,1,"PAH",1,1,146,0)
CHARGE ID.  This information is used to uniquely identify the fill in the
"PKG",206,22,1,"PAH",1,1,147,0)
IB and will be stored in Prescription file (#52) on the fill level. For
"PKG",206,22,1,"PAH",1,1,148,0)
original fills, it will be stored in the PFSS CHARGE ID field (#126), and
"PKG",206,22,1,"PAH",1,1,149,0)
for refills it will be stored in the PFSS CHARGE ID field (#22).  No data
"PKG",206,22,1,"PAH",1,1,150,0)
is passed using this API.
"PKG",206,22,1,"PAH",1,1,151,0)
 
"PKG",206,22,1,"PAH",1,1,152,0)
2. Next, the new IB API #4665 CHARGE^IBBAPI will be called to pass
"PKG",206,22,1,"PAH",1,1,153,0)
prescription and copay information.  This information will be stored in
"PKG",206,22,1,"PAH",1,1,154,0)
the PFSS CHARGE CACHE file (#373).  IB will batch the charge information
"PKG",206,22,1,"PAH",1,1,155,0)
and pass it on to the COTS billing system via VDEF.
"PKG",206,22,1,"PAH",1,1,156,0)
 
"PKG",206,22,1,"PAH",1,1,157,0)
3. The array of data passed using the CHARGE^IBBAPI call encompasses all 
"PKG",206,22,1,"PAH",1,1,158,0)
of the minimum required data elements as stated in the PFSS SRS-SDD IBB 
"PKG",206,22,1,"PAH",1,1,159,0)
Generic API document.  The following outlines data passed from Outpatient
"PKG",206,22,1,"PAH",1,1,160,0)
Pharmacy:
"PKG",206,22,1,"PAH",1,1,161,0)
 
"PKG",206,22,1,"PAH",1,1,162,0)
     $$CHARGE^IBBAPI(VAR1,VAR2,VAR3,VAR4,.ARR1,,.ARR3,.ARR4,.ARR5,,,)
"PKG",206,22,1,"PAH",1,1,163,0)
       Where:
"PKG",206,22,1,"PAH",1,1,164,0)
         VAR1 = Patient Identifier (Patient IEN)              
"PKG",206,22,1,"PAH",1,1,165,0)
         VAR2 = PFSS Account Reference  
"PKG",206,22,1,"PAH",1,1,166,0)
         VAR3 = Charge Type               
"PKG",206,22,1,"PAH",1,1,167,0)
         VAR4 = Unique Charge ID (PFSS Charge ID)
"PKG",206,22,1,"PAH",1,1,168,0)
         ARR1 = ARR1(4) Transaction Date (Fill Date), ARR1(7) Transaction
"PKG",206,22,1,"PAH",1,1,169,0)
                  Code, ARR1(10) Transaction Quantity, ARR1(13) Department
"PKG",206,22,1,"PAH",1,1,170,0)
                  Code, ARR1(18) Patient Copay Status, ARR1(21) Ordered by
"PKG",206,22,1,"PAH",1,1,171,0)
                  Code, ARR1(22) Unit Cost, ARR1(29) NDC_";"_Generic
"PKG",206,22,1,"PAH",1,1,172,0)
                  Name, ARR1(31) Copay Transaction Type
"PKG",206,22,1,"PAH",1,1,173,0)
         ARR3 = ARR3(n,3) Diagnoses Code, ARR3(n,6) Diagnosis Type
"PKG",206,22,1,"PAH",1,1,174,0)
         ARR4 = ARR4(n,2) Type
"PKG",206,22,1,"PAH",1,1,175,0)
         ARR5 = ARR5(1) Quantity_";;"_Days Supply, ARR5(17) Refills 
"PKG",206,22,1,"PAH",1,1,176,0)
                  Dispensed (Fill Number), ARR5(18) Date of Most Recent
"PKG",206,22,1,"PAH",1,1,177,0)
                  Fill (Release Date), ARR5(31) DEA, Special Handling
"PKG",206,22,1,"PAH",1,1,178,0)
 
"PKG",206,22,1,"PAH",1,1,179,0)
4. There will be no return messaging from the COTS billing system to 
"PKG",206,22,1,"PAH",1,1,180,0)
Outpatient Pharmacy.  Note that IB will combine the data passed in the
"PKG",206,22,1,"PAH",1,1,181,0)
GETACCT and CHARGE APIs to form the charge message that will ultimately
"PKG",206,22,1,"PAH",1,1,182,0)
be passed to the COTS billing system via VDEF.
"PKG",206,22,1,"PAH",1,1,183,0)
 
"PKG",206,22,1,"PAH",1,1,184,0)
 
"PKG",206,22,1,"PAH",1,1,185,0)
CHARGE LOCATION additions:
"PKG",206,22,1,"PAH",1,1,186,0)
 
"PKG",206,22,1,"PAH",1,1,187,0)
1. In the OUTPATIENT SITE file (#59), a new CHARGE LOCATION field 
"PKG",206,22,1,"PAH",1,1,188,0)
(#1007) was added, and this field is a pointer to HOSPITAL LOCATION file 
"PKG",206,22,1,"PAH",1,1,189,0)
(#44).
"PKG",206,22,1,"PAH",1,1,190,0)
 
"PKG",206,22,1,"PAH",1,1,191,0)
2. The Site Parameter Enter/Edit [PSO SITE PARAMETERS] option input
"PKG",206,22,1,"PAH",1,1,192,0)
template PSO SITE was modified to accommodate entry of the new CHARGE
"PKG",206,22,1,"PAH",1,1,193,0)
LOCATION field (#1007).
"PKG",206,22,1,"PAH",1,1,194,0)
 
"PKG",206,22,1,"PAH",1,1,195,0)
3. If a CHARGE LOCATION is not defined for a particular division, the 
"PKG",206,22,1,"PAH",1,1,196,0)
system will loop through all divisions in the OUTPATIENT SITE file (#59) 
"PKG",206,22,1,"PAH",1,1,197,0)
and will use the first CHARGE LOCATION it finds.  When none of the
"PKG",206,22,1,"PAH",1,1,198,0)
divisions have a CHARGE LOCATION defined, the prescription will not be 
"PKG",206,22,1,"PAH",1,1,199,0)
passed to IB or the COTS billing system.  This issue will be addressed in
"PKG",206,22,1,"PAH",1,1,200,0)
a subsequent phase of the PFSS project.  Until that time, it is imperative
"PKG",206,22,1,"PAH",1,1,201,0)
that CHARGE LOCATION are defined for each division.
"PKG",206,22,1,"PAH",1,1,202,0)
 
"PKG",206,22,1,"PAH",1,1,203,0)
The Integration Agreement (IA) #4732 was created to facilitate 
"PKG",206,22,1,"PAH",1,1,204,0)
modifications being made by IB for interfacility copay.  It will be used 
"PKG",206,22,1,"PAH",1,1,205,0)
in the background to return the pharmacist, person who last edited the 
"PKG",206,22,1,"PAH",1,1,206,0)
prescription fill, and the value of the IB SERVICE/SECTION field (#1003) 
"PKG",206,22,1,"PAH",1,1,207,0)
from the OUTPATIENT SITE file (#59).
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
16
"RTN","PSOCP")
0^4^B65342782^B68323456
"RTN","PSOCP",1,0)
PSOCP ;BIR/BAB - Pharmacy CO-PAY Application Utilities for IB ;02/06/92
"RTN","PSOCP",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**20,46,71,85,137,157,143,219,239,201**;DEC 1997
"RTN","PSOCP",3,0)
 ;
"RTN","PSOCP",4,0)
 ;REF/IA - IBARX/125, SDCO22/1579, PS(55/2228, PSDRUG(/221, DGMSTAPI/2716
"RTN","PSOCP",5,0)
CP ;Check if COPAY-Requires RXP,PSOSITE7
"RTN","PSOCP",6,0)
 I '$D(PSOPAR) D ^PSOLSET G CP
"RTN","PSOCP",7,0)
 K PSOCP
"RTN","PSOCP",8,0)
 S PSOCPN=$P(^PSRX(RXP,0),"^",2) ; Set COPAY dfn PTR TO PATIENT
"RTN","PSOCP",9,0)
 S PSOCP=$P($G(^PSRX(RXP,"IB")),"^") ; IB action type
"RTN","PSOCP",10,0)
 S PSOSAVE=$S(PSOCP:1,1:"") ; save current copay status
"RTN","PSOCP",11,0)
 ; Set x=service^dfn^actiontype^user duz
"RTN","PSOCP",12,0)
 I +$G(PSOSITE7)'>0 S PSOSITE7=$P(^PS(59,PSOSITE,"IB"),"^")
"RTN","PSOCP",13,0)
 S X=PSOSITE7_"^"_PSOCPN_"^"_PSOCP_"^"_$P(^PSRX(RXP,0),"^",16)
"RTN","PSOCP",14,0)
 ;
"RTN","PSOCP",15,0)
RX ;Determine Orig or Refill for RX
"RTN","PSOCP",16,0)
 N PSOIB,PSOPFS S (PSOIB,PSOREF)=0
"RTN","PSOCP",17,0)
 I $G(^PSRX(RXP,1,+$G(YY),0))]"" S PSOREF=YY
"RTN","PSOCP",18,0)
 D PFSA^PSOPFSU1(RXP,PSOREF,2) G PFS:+PSOPFS
"RTN","PSOCP",19,0)
 ; Check if bill exists
"RTN","PSOCP",20,0)
 I 'PSOREF,+$P($G(^PSRX(RXP,"IB")),"^",2)>0 D CHKIB^PSOCP1 I PSOIB G QUIT
"RTN","PSOCP",21,0)
 I 'PSOREF,+$P($G(^PSRX(RXP,"IB")),"^",4)>0 G QUIT ; 'POTENTIAL BILL' - ALREADY ATTEMPTED TO BILL, BUT EXCEEDED ANNUAL COPAY CAP
"RTN","PSOCP",22,0)
 I PSOREF,+$G(^PSRX(RXP,1,PSOREF,"IB")) D CHKIB^PSOCP1 I PSOIB G QUIT
"RTN","PSOCP",23,0)
 I PSOREF,+$P($G(^PSRX(RXP,1,PSOREF,"IB")),"^",2) G QUIT ; POTENTIAL BILL
"RTN","PSOCP",24,0)
PFS ;
"RTN","PSOCP",25,0)
 S PSOCHG=1 ; set tem var to copay and check exception
"RTN","PSOCP",26,0)
 N MAILMSG
"RTN","PSOCP",27,0)
 D COPAYREL
"RTN","PSOCP",28,0)
 I 'PSOCHG D  D:PSOPFS CHRG^PSOPFSU1(RXP,PSOREF,"CG",PSOPFS) G QUIT
"RTN","PSOCP",29,0)
 . I PSOSAVE S PSODA=RXP,PREA="R" D ACTLOG^PSOCPA S $P(^PSRX(RXP,"IB"),"^",1)=""
"RTN","PSOCP",30,0)
 I PSOCHG=2 D  I 'PSOCP D:PSOPFS CHRG^PSOPFSU1(RXP,PSOREF,"CG",PSOPFS) G QUIT ; IF 'SC' QUESTION APPLIES, BUT HAS NOT BEEN ANSWERED, SEND MAIL MSG AND KEEP COPAY STATUS AS IT WAS
"RTN","PSOCP",31,0)
 . D MAIL2^PSOCPE ; SEND MAIL TO PHARMACIST, PROVIDER, AND HOLDERS OF THE PSO COPAY KEY
"RTN","PSOCP",32,0)
 I PSOCHG=1,PSOSAVE="" D  I PSOREF S PSOCOMM="",PSOOLD="No Copay",PSONW="Copay" S PSODA=RXP,PREA="R" D ACTLOG^PSOCPA
"RTN","PSOCP",33,0)
 . I '$D(^PSRX(RXP,"IB")),'PSOREF S $P(^PSRX(RXP,"IB"),"^",1)=1 Q
"RTN","PSOCP",34,0)
 . S $P(^PSRX(RXP,"IB"),"^",1)=1
"RTN","PSOCP",35,0)
 . S PSOCP=1,$P(X,"^",3)=PSOCP
"RTN","PSOCP",36,0)
 I PSOCHG'=2 I $G(MAILMSG) D MAIL2^PSOCPE ; SEND MAIL TO PHARM, PROV, AND HOLDERS OF PSO COPAY KEY HOLDERS
"RTN","PSOCP",37,0)
 ; Units for COPAY
"RTN","PSOCP",38,0)
 S PSOCPUN=$P(($P(^PSRX(RXP,0),"^",8)+29)/30,".",1)
"RTN","PSOCP",39,0)
 ; Build softlink for x(n)=softlink^units
"RTN","PSOCP",40,0)
 S X(1)="52:"_RXP S:PSOREF>0 X(1)=X(1)_";1:"_PSOREF S X(1)=X(1)_"^"_PSOCPUN
"RTN","PSOCP",41,0)
 ; Set correct user duz if refill
"RTN","PSOCP",42,0)
 I PSOREF S:+$P(^PSRX(RXP,1,PSOREF,0),"^",7)>0 $P(X,"^",4)=$P(^PSRX(RXP,1,PSOREF,0),"^",7)
"RTN","PSOCP",43,0)
 ;
"RTN","PSOCP",44,0)
IBNEW ;  Load ^TMP global for IB call
"RTN","PSOCP",45,0)
 Q:$G(RXP)'>0
"RTN","PSOCP",46,0)
 I PSOPFS D CHRG^PSOPFSU1(RXP,PSOREF,"CG",PSOPFS)
"RTN","PSOCP",47,0)
 G QUIT:PSOPFS
"RTN","PSOCP",48,0)
 N D0
"RTN","PSOCP",49,0)
 G QUIT:'$D(X)
"RTN","PSOCP",50,0)
 S XTMP=X,XTMP(1)=X(1)
"RTN","PSOCP",51,0)
 ;
"RTN","PSOCP",52,0)
 ; Requires x=service^dfn^action type^user duz
"RTN","PSOCP",53,0)
 ;   x(n)=softlink^units 
"RTN","PSOCP",54,0)
 I $P(X,"^",3)="" S $P(X,"^",3)=$P(^PSRX(RXP,"IB"),"^",1)
"RTN","PSOCP",55,0)
 D NEW^IBARX
"RTN","PSOCP",56,0)
 ; Returns y=1^total charges for this group or Y=-1^error code
"RTN","PSOCP",57,0)
 ;         y(n)=IB number^charge for this Rx^AR bill #^Cap met^Partial or Full charge^Copay Exempt^Number from file 354.71
"RTN","PSOCP",58,0)
 ;         Cap met ('1' - If patient has met cap amount or reached cap with this charge or '0' if not)
"RTN","PSOCP",59,0)
 ;         Partial or Full ('P' for partial billing, 'F' for full billing, null for no billing)
"RTN","PSOCP",60,0)
 ;         Copay Exempt - ('1' for exempt, '0' for non-exempt, '-1' for copay off (manila)),
"RTN","PSOCP",61,0)
 ;            ('1' - If patient has met cap amount or reach cap with this charge
"RTN","PSOCP",62,0)
 ; Entry from file 354.71 will only be saved for fills that met the annual cap and could not be fully billed
"RTN","PSOCP",63,0)
 ;
"RTN","PSOCP",64,0)
 G QUIT:+Y=-1
"RTN","PSOCP",65,0)
 S XTMP=XTMP_"^"_Y,XTMP(1)=XTMP(1)_"^"_Y(1)
"RTN","PSOCP",66,0)
 ;
"RTN","PSOCP",67,0)
 ; see if exempt or copay cap was met
"RTN","PSOCP",68,0)
 I $P(Y(1),"^",6) D  G QUIT
"RTN","PSOCP",69,0)
 . S PREA="R",PSOOLD="Copay",PSONW="No Copay"
"RTN","PSOCP",70,0)
 . S PSOCOMM="RX COPAY INCOME EXEMPTION" S PSODA=RXP D ACTLOG^PSOCPA
"RTN","PSOCP",71,0)
 . S $P(^PSRX(RXP,"IB"),"^",1)=""
"RTN","PSOCP",72,0)
 I $P(Y(1),"^",4) D
"RTN","PSOCP",73,0)
 . S PSOCOMM=$S($P(Y(1),"^",5)="F":" FULL BILLING FOR THIS FILL",$P(Y(1),"^",5)="P":" PARTIAL BILLING FOR THIS FILL ",1:" NO BILLING FOR THIS FILL")
"RTN","PSOCP",74,0)
 . S PREA="A"
"RTN","PSOCP",75,0)
 . S PSODA=RXP D ACTLOG^PSOCPA
"RTN","PSOCP",76,0)
 . I $P(Y(1),"^",5)'="F" D
"RTN","PSOCP",77,0)
 . . I PSOREF S $P(^PSRX(RXP,1,PSOREF,"IB"),"^",2)=$P(Y(1),"^",7) Q
"RTN","PSOCP",78,0)
 . . S $P(^PSRX(RXP,"IB"),"^",4)=$P(Y(1),"^",7)
"RTN","PSOCP",79,0)
 I $P(Y(1),"^",1)="" G QUIT
"RTN","PSOCP",80,0)
 ;
"RTN","PSOCP",81,0)
FILE ;File IB number in ^PSRX
"RTN","PSOCP",82,0)
 S PSOCP2=0
"RTN","PSOCP",83,0)
 S PSOCP2=+$P(XTMP(1),":",3)
"RTN","PSOCP",84,0)
 S:PSOCP2>0 ^PSRX(RXP,1,PSOCP2,"IB")=$P(XTMP(1),U,3) ;  Filing in refill node
"RTN","PSOCP",85,0)
 I PSOCP2>0,'$D(^PSRX(RXP,"IB")) S ^PSRX(RXP,"IB")="1^^" ;  If refill "IB" exists, need "IB" entry on original fill node
"RTN","PSOCP",86,0)
 S:PSOCP2=0 $P(^PSRX(RXP,"IB"),"^",2)=$P(XTMP(1),U,3) ;Filing in original fill (zero node)
"RTN","PSOCP",87,0)
QUIT ;
"RTN","PSOCP",88,0)
 K Y,PSOCP1,PSOCP2,QQ,PSOCPN,X,X2,XTMP,PSOCPUN,PSOREF,PSOCHG,PSOSAVE,PSOCOMM,PSOOLD,PSONW,PREA,PSORSN
"RTN","PSOCP",89,0)
 Q
"RTN","PSOCP",90,0)
EN D ^PSOLSET
"RTN","PSOCP",91,0)
EN1 S DIR(0)="NO",DIR("A")="Enter PRESCRIPTION number" D ^DIR K DIR G:$D(DIRUT) EXIT S RXP=X I +$G(^PSRX(RXP,0))'>0!+$P($G(^PSRX(RXP,"IB")),"^",0)>0 W !,?10,"RE-CHECK PRESCRIPTION NUMBER AND RE-ENTER " G EN1
"RTN","PSOCP",92,0)
 S PSOSITE7=$P(^PS(59,PSOSITE,"IB"),"^")
"RTN","PSOCP",93,0)
 S PSODFN=$P(^PSRX(RXP,0),"^",2)
"RTN","PSOCP",94,0)
 D CP G EN1
"RTN","PSOCP",95,0)
EXIT K RXP D FINAL^PSOLSET Q
"RTN","PSOCP",96,0)
 ;
"RTN","PSOCP",97,0)
SC(PSODFN,PSODD) ;sup ref for CPRS, Pre-Copay enhancement
"RTN","PSOCP",98,0)
 N PSOSC
"RTN","PSOCP",99,0)
 I $$DT^PSOMLLDT S PSOSC="" G SCQ
"RTN","PSOCP",100,0)
 I $G(PSODD),($P($G(^PSDRUG(PSODD,0)),"^",3)["S")!($P($G(^(0)),"^",3)["I") S PSOSC=1 G SCQ
"RTN","PSOCP",101,0)
 I $P($G(^PS(55,+$G(PSODFN),"PS")),"^"),$P($G(^PS(53,+$P(^("PS"),"^"),0)),"^",7) S PSOSC=1 G SCQ
"RTN","PSOCP",102,0)
 N I,J,X S (X,PSOSC)=""
"RTN","PSOCP",103,0)
 S J=0 F  S J=$O(^PS(59,J)) Q:'J  I +$G(^(J,"IB")) S X=+^("IB") Q
"RTN","PSOCP",104,0)
 G:'X SCQ
"RTN","PSOCP",105,0)
 S X=X_"^"_PSODFN D XTYPE^IBARX
"RTN","PSOCP",106,0)
 S J="" F  S J=$O(Y(J)) Q:'J  S I="" F  S I=$O(Y(J,I)) Q:I=""  S:I>0 PSOSC=I
"RTN","PSOCP",107,0)
SCQ Q $S($G(PSOSC)=2:0,1:1)
"RTN","PSOCP",108,0)
 ;
"RTN","PSOCP",109,0)
COPAYREL ; Recheck copay status at release
"RTN","PSOCP",110,0)
 ; check Rx patient status
"RTN","PSOCP",111,0)
 I $P(^PSRX(RXP,0),"^",3)'="",$P($G(^PS(53,$P(^PSRX(RXP,0),"^",3),0)),"^",7)=1 S PSOCHG=0,PSOCOMM="Rx Patient Status Change",PSOOLD="Copay",PSONW="No Copay" Q
"RTN","PSOCP",112,0)
 ; see if drug is investigational or supply
"RTN","PSOCP",113,0)
 N DRG,DRGTYP,X
"RTN","PSOCP",114,0)
 S DRG=+$P(^PSRX(RXP,0),"^",6),DRGTYP=$P($G(^PSDRUG(DRG,0)),"^",3)
"RTN","PSOCP",115,0)
 I DRGTYP["I" S PSOCOMM="Investigational Drug",PSOCHG=0,PSOOLD="Copay",PSONW="No Copay",PSOCHG=0
"RTN","PSOCP",116,0)
 I DRGTYP["S" S PSOCOMM="Supply Item",PSOCHG=0,PSOOLD="Copay",PSONW="No Copay",PSOCHG=0
"RTN","PSOCP",117,0)
 K PSOTG,CHKXTYPE
"RTN","PSOCP",118,0)
 I +$G(^PSRX(RXP,"IBQ")) D XTYPE1^PSOCP1
"RTN","PSOCP",119,0)
 I $G(^PSRX(RXP,"IBQ"))["1" D  S PSOCHG=0,PSOOLD="Copay",PSONW="No Copay" Q  ; COPAY EXEMPT
"RTN","PSOCP",120,0)
 . N EXMT,II,PSOCIBQ
"RTN","PSOCP",121,0)
 . S PSOCIBQ=$G(^PSRX(RXP,"IBQ"))
"RTN","PSOCP",122,0)
 . F II=1,7,3,4,5,6,2 I $P(PSOCIBQ,"^",II)=1 S EXMT=$S(II=1:"SC",II=7:"CV",II=3:"AO",II=4:"IR",II=5:"EC",II=2:"MST",II=6:"HNC",1:"") D:EXMT'="" SETCOMM Q
"RTN","PSOCP",123,0)
 D SCNEW(.PSOTG,PSOCPN,DRG,RXP)
"RTN","PSOCP",124,0)
 N EXMT
"RTN","PSOCP",125,0)
 I '$D(CHKXTYPE) D XTYPE
"RTN","PSOCP",126,0)
 F EXMT="SC","CV","AO","IR","EC","MST","HNC" I $D(PSOTG(EXMT)) D  I 'PSOCHG Q
"RTN","PSOCP",127,0)
 . I PSOTG(EXMT)=1 S PSOCHG=0 D SETCOMM
"RTN","PSOCP",128,0)
 I 'PSOCHG S PSOOLD="Copay",PSONW="No Copay" Q
"RTN","PSOCP",129,0)
 ;
"RTN","PSOCP",130,0)
 ; If any of the applicable exemption quest have never been answered, send a mail msg with all of the quest
"RTN","PSOCP",131,0)
 S EXMT="",MAILMSG=0 F  S EXMT=$O(PSOTG(EXMT)) Q:EXMT=""  I PSOTG(EXMT)="" S MAILMSG=1 Q
"RTN","PSOCP",132,0)
 I MAILMSG,$D(PSOTG("SC")) I $G(PSOTG("SC"))="" S PSOCHG=2 ; 'SC' quest not answered, don't reset copay status to 'copay'
"RTN","PSOCP",133,0)
 Q
"RTN","PSOCP",134,0)
 ;
"RTN","PSOCP",135,0)
SCNEW(PSOTG,PSOPT,PSODR,PSORN) ;CPRS supported ref
"RTN","PSOCP",136,0)
 I '$$DT^PSOMLLDT Q
"RTN","PSOCP",137,0)
 I '$G(PSOPT) Q
"RTN","PSOCP",138,0)
 ;I $G(PSODR),($P($G(^PSDRUG(PSODR,0)),"^",3)["S")!($P($G(^(0)),"^",3)["I") Q ;CIDC ALWAYS ASK
"RTN","PSOCP",139,0)
 N PSOCIBQ,PSOQMSH,PSOQVEH,PSOQRQD,PSOQHNC,PSOQPGW,DFN,PSOSCA,ZXX
"RTN","PSOCP",140,0)
 K PSOANSQ("SC>50")
"RTN","PSOCP",141,0)
 S DFN=PSOPT
"RTN","PSOCP",142,0)
 D SCP^PSORN52D S:PSOSCP>49&(PSOSCA) PSOANSQ("SC>50")=1
"RTN","PSOCP",143,0)
 I $G(PSORN) D
"RTN","PSOCP",144,0)
 . S PSOCIBQ=$G(^PSRX(PSORN,"IBQ"))
"RTN","PSOCP",145,0)
 . I $TR(PSOCIBQ,"^")="" S ZXX=$G(^PSRX(PSORN,"ICD",1,0)) D ICD:ZXX'=""
"RTN","PSOCP",146,0)
 I '$G(PSORN) S PSOCIBQ=""
"RTN","PSOCP",147,0)
 ;Rx Patient Status check is not being done here
"RTN","PSOCP",148,0)
 N PSOSCMX,Y,I,J,X S (X,PSOSCMX)=""
"RTN","PSOCP",149,0)
 S J=0 F  S J=$O(^PS(59,J)) Q:'J  I +$G(^(J,"IB")) S X=+^("IB") Q
"RTN","PSOCP",150,0)
 G:'X SKIP
"RTN","PSOCP",151,0)
 S X=X_"^"_PSOPT D XTYPE^IBARX
"RTN","PSOCP",152,0)
 S J="" F  S J=$O(Y(J)) Q:'J  S I="" F  S I=$O(Y(J,I)) Q:I=""  S:I>0 PSOSCMX=I
"RTN","PSOCP",153,0)
SKIP ;
"RTN","PSOCP",154,0)
 I $G(PSOSCA)!($G(PSOSCMX)=2) S PSOTG("SC")=$S($P(PSOCIBQ,"^")=1:1,$P(PSOCIBQ,"^")=0:0,$G(PSORN)&($P($G(^PSRX(+$G(PSORN),"IB")),"^")):0,1:"")
"RTN","PSOCP",155,0)
 S:$$AO^SDCO22(PSOPT) PSOTG("AO")=$S($P(PSOCIBQ,"^",3)=1:1,$P(PSOCIBQ,"^",3)=0:0,1:"")
"RTN","PSOCP",156,0)
 S:$$IR^SDCO22(PSOPT) PSOTG("IR")=$S($P(PSOCIBQ,"^",4)=1:1,$P(PSOCIBQ,"^",4)=0:0,1:"")
"RTN","PSOCP",157,0)
 S:$$EC^SDCO22(PSOPT) PSOTG("EC")=$S($P(PSOCIBQ,"^",5)=1:1,$P(PSOCIBQ,"^",5)=0:0,1:"")
"RTN","PSOCP",158,0)
 S:$P($$GETSTAT^DGMSTAPI(PSOPT),"^",2)="Y" PSOTG("MST")=$S($P(PSOCIBQ,"^",2)=1:1,$P(PSOCIBQ,"^",2)=0:0,1:"")
"RTN","PSOCP",159,0)
 I $T(GETCUR^DGNTAPI)]"" N PSONC,PSONCX S PSONCX=$$GETCUR^DGNTAPI(PSOPT,"PSONC") I $P($G(PSONC("IND")),"^")="Y" S PSOTG("HNC")=$S($P(PSOCIBQ,"^",6)=1:1,$P(PSOCIBQ,"^",6)=0:0,1:"")
"RTN","PSOCP",160,0)
 S:$P($$CVEDT^DGCV(PSOPT),"^",3) PSOTG("CV")=$S($P(PSOCIBQ,"^",7)=1:1,$P(PSOCIBQ,"^",7)=0:0,1:"")
"RTN","PSOCP",161,0)
 Q
"RTN","PSOCP",162,0)
 ;
"RTN","PSOCP",163,0)
ICD ;
"RTN","PSOCP",164,0)
 D ICD^PSOCP1
"RTN","PSOCP",165,0)
 Q
"RTN","PSOCP",166,0)
XTYPE ;
"RTN","PSOCP",167,0)
 N PSOCIBQ,PSOSCMX,Y,I,J,X,SAVY,ZXX
"RTN","PSOCP",168,0)
 S (X,PSOSCMX,SAVY)=""
"RTN","PSOCP",169,0)
 S PSOCIBQ=$G(^PSRX(RXP,"IBQ")) I $TR(PSOCIBQ,"^")="" S ZXX=$G(^PSRX(RXP,"ICD",1,0)) D ICD:ZXX'=""
"RTN","PSOCP",170,0)
 I $P(PSOCIBQ,"^",1)'="" S PSOTG("SC")=$P(PSOCIBQ,"^",1)
"RTN","PSOCP",171,0)
 I $D(PSOTG("SC")),$P(PSOCIBQ,"^",1)="" S PSOTG("SC")="" ; USE "CURRENT" SETTING AS ANS TO SC QUEST IF IT APPLIES
"RTN","PSOCP",172,0)
 S J=0 F  S J=$O(^PS(59,J)) Q:'J  I +$G(^(J,"IB")) S X=+^("IB") Q
"RTN","PSOCP",173,0)
 I 'X Q
"RTN","PSOCP",174,0)
 S X=X_"^"_PSOCPN D XTYPE^IBARX
"RTN","PSOCP",175,0)
 I $G(Y)'=1 Q
"RTN","PSOCP",176,0)
 S J="" F  S J=$O(Y(J)) Q:'J  S I="" F  S SAVY=I,I=$O(Y(J,I)) Q:I=""  S:I>0 PSOSCMX=I
"RTN","PSOCP",177,0)
 I PSOSCMX="",SAVY=0 S PSOCHG=0 S PSOCOMM="Exempt from copayment" Q  ; INCOME EXEMPT OR SC
"RTN","PSOCP",178,0)
 I PSOSCMX=2,'$D(PSOTG("SC")) S PSOTG("SC")=$S(($G(RXP)&($P($G(^PSRX(+$G(RXP),"IB")),"^")))!($P(PSOCIBQ,"^")=0):0,$P(PSOCIBQ,"^")=1:1,1:"") Q
"RTN","PSOCP",179,0)
 Q
"RTN","PSOCP",180,0)
 ;
"RTN","PSOCP",181,0)
SETCOMM ;
"RTN","PSOCP",182,0)
 D SETCOMM^PSOCP1
"RTN","PSOCP",183,0)
 Q
"RTN","PSOCP",184,0)
 ;
"RTN","PSOCPA")
0^5^B43580682^B36106278
"RTN","PSOCPA",1,0)
PSOCPA ;BHAM ISC/LGH - PHARMACY CO-PAY CANCEL & RESET STATUS OPTIONS ;05/27/92
"RTN","PSOCPA",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**9,71,85,137,143,201**;DEC 1997
"RTN","PSOCPA",3,0)
 ;
"RTN","PSOCPA",4,0)
 ;REF/IA
"RTN","PSOCPA",5,0)
 ;^IBARX/125
"RTN","PSOCPA",6,0)
 ;^IBE(350.3/2216
"RTN","PSOCPA",7,0)
 ; PSO=1 (REMOVE CHARGE cancel),PSO=2 (UPDATE CHARGE called from EDIT)
"RTN","PSOCPA",8,0)
 ; PSO=3 (REMOVE CHARGE cancel in background processing) ... USED FOR PSOHLNE3
"RTN","PSOCPA",9,0)
 ;
"RTN","PSOCPA",10,0)
EN ;Entry point for Remove Co-Pay charge
"RTN","PSOCPA",11,0)
 S PSOFLAG=0
"RTN","PSOCPA",12,0)
 S PSO=1 ; Remove Co-Pay charge
"RTN","PSOCPA",13,0)
RX ;
"RTN","PSOCPA",14,0)
 G EXIT:PSO'>0
"RTN","PSOCPA",15,0)
 W ! S DIC="^PSRX(",DIC(0)="AEQMZ" D ^DIC K DIC G EXIT:Y<0 S PSODA=+Y
"RTN","PSOCPA",16,0)
RXED ;         Entry point from PSORXED and PSORESK1...requires PSODA,PSO,PSODAYS,PSOFLAG
"RTN","PSOCPA",17,0)
 N POTBILL
"RTN","PSOCPA",18,0)
 S PSORXN=$P(^PSRX(PSODA,0),"^") ;..........Rx #
"RTN","PSOCPA",19,0)
 ;          Determine if Rx is COPAY 
"RTN","PSOCPA",20,0)
 I +$G(PSOPFS) S PSOREF=+$G(TYPE) G REASON
"RTN","PSOCPA",21,0)
 I PSO'=3 I '$D(^PSRX(PSODA,"IB")) W !,"Rx # ",PSORXN," is NOT a COPAY transaction...NO action taken." G EXIT
"RTN","PSOCPA",22,0)
 I PSO'=3 S PSOIB=^PSRX(PSODA,"IB")
"RTN","PSOCPA",23,0)
 I PSO=2!(PSO=1)!(PSO=3&($G(PSOREF)=0)) I $P(PSOIB,"^",2)'>0 S POTBILL=$P(PSOIB,"^",4) I POTBILL="",'$D(^PSRX(PSODA,1)) G EXIT ; No bill#, no refills
"RTN","PSOCPA",24,0)
 ;I PSO=3&($G(PSOREF)=0) I $P(PSOIB,"^",2)'>0 S POTBILL=$P(PSOIB,"^",4) I POTBILL="",'$D(^PSRX(PSODA,1)) G EXIT ; No bill#, no refills
"RTN","PSOCPA",25,0)
 ;          Determine last entry in ^PSRX
"RTN","PSOCPA",26,0)
 I PSO=3&($D(^PSRX(PSODA,1))) G RXED2
"RTN","PSOCPA",27,0)
 S PSOREF=0
"RTN","PSOCPA",28,0)
 G:'$D(^PSRX(PSODA,1)) REASON
"RTN","PSOCPA",29,0)
 F PSZ=0:0 S PSZ=$O(^PSRX(PSODA,1,PSZ)) Q:PSZ'>0  S PSOREF=PSZ
"RTN","PSOCPA",30,0)
 S PSOIB=$G(^PSRX(PSODA,1,PSOREF,"IB"))
"RTN","PSOCPA",31,0)
RXED2 I PSO=2!(PSO=1)!(PSO=3) I $P(PSOIB,"^",1)'>0 S POTBILL=$P(PSOIB,"^",2)
"RTN","PSOCPA",32,0)
 G:($P(PSOIB,"^",1)'>0)&($G(POTBILL)'>0) EXIT ; No bill#
"RTN","PSOCPA",33,0)
REASON ;
"RTN","PSOCPA",34,0)
 N PSORD S:PSOREF>0 PSORD=$$GET1^DIQ(52.1,PSOREF_","_PSODA,"17","I") S:PSOREF=0 PSORD=$$GET1^DIQ(52,PSODA,"31","I")
"RTN","PSOCPA",35,0)
 ;          Get Cancellation reason
"RTN","PSOCPA",36,0)
 I PSO=1!(PSO=3) G CANCEL2:$G(PSOPFS)&('$P(+$G(^PSRX(PSODA,"IB")),"^",1)) G PFS:$G(PSOPFS) G CANCEL
"RTN","PSOCPA",37,0)
 S DIC="^IBE(350.3,",DIC("S")="I $P(^(0),U,3)'=2",DIC(0)="AEQMZ",DIC("A")="Select CHARGE REMOVAL REASON : " D ^DIC S:$G(Y)<0 COPAYFLG=0 K DIC D ENDMSG:Y<0 G EXIT:Y<0 S PSORSN=+Y
"RTN","PSOCPA",38,0)
 I PSO=2&($G(PSOPFS))&($G(PSORD)) D  Q:'$P(+$G(^PSRX(PSODA,"IB")),"^",1)  D PFS2 G EXIT
"RTN","PSOCPA",39,0)
 . D CHRG^PSOPFSU1(PSODA,PSOREF,"CG",PSOPFS)  ;only send charge msg if released
"RTN","PSOCPA",40,0)
 G UPDATE:PSO=2
"RTN","PSOCPA",41,0)
 G EXIT
"RTN","PSOCPA",42,0)
CANCEL ;
"RTN","PSOCPA",43,0)
 ;          Set x=service^dfn^^user duz
"RTN","PSOCPA",44,0)
 ;              x(n)=IB number^cancellation reason
"RTN","PSOCPA",45,0)
 N PSOIBST
"RTN","PSOCPA",46,0)
 ;G PFS:$G(PSOPFS)
"RTN","PSOCPA",47,0)
 I PSOREF=0,$P(PSOIB,"^",2)>0 S PSOIBST=$$STATUS^IBARX($P(PSOIB,"^",2)) I PSOIBST'=1,PSOIBST'=3 G EXITA
"RTN","PSOCPA",48,0)
 I $G(PSO)=1!(PSO=3) I PSOREF>0,$P(PSOIB,"^",1)>0 S PSOIBST=$$STATUS^IBARX($P(PSOIB,"^",1)) I PSOIBST'=1,PSOIBST'=3 G EXITA
"RTN","PSOCPA",49,0)
PFS I PSO'=3 S DIC="^IBE(350.3,",DIC("S")="I $P(^(0),U,3)'=2",DIC(0)="AEQMZ",DIC("A")="Select CHARGE REMOVAL REASON : " D ^DIC S:$G(Y)<0 COPAYFLG=0 K DIC D ENDMSG:Y<0 G EXIT:Y<0 S PSORSN=+Y
"RTN","PSOCPA",50,0)
 I PSO=3 S DIC="^IBE(350.3,",DIC(0)="QEZ",X="RX EDITED" D ^DIC K DIC G EXIT:Y<0 S PSORSN=+Y
"RTN","PSOCPA",51,0)
 G CANCEL2:$G(PSOPFS)
"RTN","PSOCPA",52,0)
 S X=PSOPAR7_"^"_+$P(^PSRX(PSODA,0),"^",2)_"^^"_DUZ
"RTN","PSOCPA",53,0)
 S:PSOREF=0 X(PSORXN)=$S($G(POTBILL)="":+$P(PSOIB,"^",2),1:POTBILL)_"^"_PSORSN ; Original Rx
"RTN","PSOCPA",54,0)
 S:PSOREF>0 X(PSORXN)=$S($G(POTBILL)="":+^PSRX(PSODA,1,PSOREF,"IB"),1:POTBILL)_"^"_PSORSN ; Refill Rx
"RTN","PSOCPA",55,0)
 I $G(POTBILL)'="" D CANIBAM^IBARX G CANCEL2
"RTN","PSOCPA",56,0)
 D CANCEL^IBARX
"RTN","PSOCPA",57,0)
 ;          Return y=1 if success, -1^error code if error
"RTN","PSOCPA",58,0)
 ;                 y(n)=IB number^total charge^AR bill number
"RTN","PSOCPA",59,0)
 I +Y=-1 W !,"Error in processing...No action taken." G EXIT
"RTN","PSOCPA",60,0)
 G EXIT:'$D(Y(PSORXN))
"RTN","PSOCPA",61,0)
CANCEL2 I $G(PSOPFS)&($G(PSORD)) D CHRG^PSOPFSU1(PSODA,PSOREF,"CD",PSOPFS)  ;only cancel charge if released
"RTN","PSOCPA",62,0)
 G EXIT:'($P(+$G(^PSRX(PSODA,"IB")),"^",1))
"RTN","PSOCPA",63,0)
 I $G(PSOPFS) D PFS2 G EXIT
"RTN","PSOCPA",64,0)
 D FILE
"RTN","PSOCPA",65,0)
 G EXIT
"RTN","PSOCPA",66,0)
FILE ;
"RTN","PSOCPA",67,0)
 ;G PFS2:$G(PSOPFS)
"RTN","PSOCPA",68,0)
 ;          File new Bill # in ^PSRX
"RTN","PSOCPA",69,0)
 I '$G(POTBILL) S:PSOREF=0 $P(^PSRX(PSODA,"IB"),"^",2)=+Y(PSORXN) ;...Original Rx
"RTN","PSOCPA",70,0)
 I $G(POTBILL) S:PSOREF=0 $P(^PSRX(PSODA,"IB"),"^",4)="" ; IF POTENTIAL BILL IS CANCELLED, REMOVE ITS NUMBER FROM ^PSRX
"RTN","PSOCPA",71,0)
 I '$G(POTBILL) S:PSOREF>0 ^PSRX(PSODA,1,PSOREF,"IB")=+Y(PSORXN) ; ...Refill Rx
"RTN","PSOCPA",72,0)
 I $G(POTBILL) S:PSOREF>0 $P(^PSRX(PSODA,1,PSOREF,"IB"),"^",2)="" ; ...Refill Rx (REMOVE "POTENTIAL" BILL NUMBER WHEN CANCELLED)
"RTN","PSOCPA",73,0)
PFS2 ;
"RTN","PSOCPA",74,0)
 I PSO=1 W !!,"Co-Pay transaction for Rx # ",PSORXN,$S(PSOREF>0:" refill # "_PSOREF,1:"")," has been cancelled." S PREA="C",PSOCOMM="Returned to stock"
"RTN","PSOCPA",75,0)
 I PSO=2 W !!,"Co-Pay transaction for Rx # ",PSORXN,$S(PSOREF>0:" refill # "_PSOREF,1:"")," has been updated." S PREA="E",PSOCOMM="Days supply change. Copay amount updated"
"RTN","PSOCPA",76,0)
 D ACTLOG
"RTN","PSOCPA",77,0)
 Q
"RTN","PSOCPA",78,0)
UPDATE ;if days supply changes during Rx edit, cancel old bill and get new bill number
"RTN","PSOCPA",79,0)
 N SAVEDA
"RTN","PSOCPA",80,0)
 S SAVEDA=$G(DA)
"RTN","PSOCPA",81,0)
 I PSOFLAG=0 W !,"Use Pharmacy Manager Option - Edit Prescriptions - to UPDATE this Rx." G EXIT
"RTN","PSOCPA",82,0)
 ;
"RTN","PSOCPA",83,0)
 ;    Set x=service^dfn^action type^user duz.....x value for update
"RTN","PSOCPA",84,0)
 ;  x(n)=softlink^units^IB number of parent to cancel^Cancellation reason
"RTN","PSOCPA",85,0)
 ;
"RTN","PSOCPA",86,0)
 ;
"RTN","PSOCPA",87,0)
 S X=PSOPAR7_"^"_+$P(^PSRX(PSODA,0),"^",2)_"^"_$P(^PSRX(PSODA,"IB"),"^")_"^"_DUZ
"RTN","PSOCPA",88,0)
 ;                Units for COPAY
"RTN","PSOCPA",89,0)
 S PSOCPUN=$P(($P(^PSRX(PSODA,0),"^",8)+29)/30,".",1)
"RTN","PSOCPA",90,0)
 G EXIT:PSOCPUN=$P((PSODAYS+29)/30,".",1) ; No change if UNITS unchanged
"RTN","PSOCPA",91,0)
 ;
"RTN","PSOCPA",92,0)
 ;               Build softlink for x(n)
"RTN","PSOCPA",93,0)
 S X(PSORXN)="52:"_PSODA S:PSOREF>0 X(PSORXN)=X(PSORXN)_";1:"_PSOREF
"RTN","PSOCPA",94,0)
 ;
"RTN","PSOCPA",95,0)
 ;         Set IB number of Parent record to update
"RTN","PSOCPA",96,0)
 S PSOPARNT=$S(PSOREF=0:+$P(^PSRX(PSODA,"IB"),"^",2),PSOREF>0:+^PSRX(PSODA,1,PSOREF,"IB"),1:0)
"RTN","PSOCPA",97,0)
 S X(PSORXN)=X(PSORXN)_"^"_PSOCPUN_"^"_PSOPARNT_"^"_PSORSN
"RTN","PSOCPA",98,0)
 I $G(POTBILL)'="" D
"RTN","PSOCPA",99,0)
 . S $P(X(PSORXN),"^",3)=POTBILL
"RTN","PSOCPA",100,0)
 . I $T(UPIBAM^IBARX)="" Q
"RTN","PSOCPA",101,0)
 . D UPIBAM^IBARX
"RTN","PSOCPA",102,0)
 I '$G(POTBILL) D UPDATE^IBARX
"RTN","PSOCPA",103,0)
 ;          Return y=1 if success, -1^error code if error
"RTN","PSOCPA",104,0)
 ;                 y(n)=IB number^total charge^AR bill number
"RTN","PSOCPA",105,0)
 I +Y=-1 W !,"Error in processing...No action taken." G EXIT
"RTN","PSOCPA",106,0)
 G EXIT:'$D(Y(PSORXN))
"RTN","PSOCPA",107,0)
PFS3 ;
"RTN","PSOCPA",108,0)
 D FILE
"RTN","PSOCPA",109,0)
 G EXIT
"RTN","PSOCPA",110,0)
 ;
"RTN","PSOCPA",111,0)
RXDEL ;          Entry point when Rx is deleted thru menu option -- THIS ENTRY POINT NO LONGER USED WITH MILL BILL COPAY CHANGES
"RTN","PSOCPA",112,0)
 K DIC S DIC="^IBE(350.3,",DIC(0)="M",X="RX DELETED" D ^DIC K DIC Q:+Y<0  S PSORSN=+Y
"RTN","PSOCPA",113,0)
 K Y
"RTN","PSOCPA",114,0)
 S PSODA=RXN,PSORXN=+RX
"RTN","PSOCPA",115,0)
 S X=PSOPAR7_"^"_+$P(RX,"^",2)_"^^"_DUZ
"RTN","PSOCPA",116,0)
 S X(PSORXN)=+$P(PSOIB,"^",2)_"^"_PSORSN ; Original Rx
"RTN","PSOCPA",117,0)
 D CANCEL^IBARX
"RTN","PSOCPA",118,0)
 W:+Y=1 !!,"Copay transaction for this Rx has been cancelled."
"RTN","PSOCPA",119,0)
 S PREA="C" D ACTLOG
"RTN","PSOCPA",120,0)
 G EXIT
"RTN","PSOCPA",121,0)
EXITA ;
"RTN","PSOCPA",122,0)
 I PSO=1 W !!,"Co-Pay transaction for Rx # ",PSORXN,$S(PSOREF>0:" refill # "_PSOREF,1:"")," has previously been cancelled."
"RTN","PSOCPA",123,0)
EXIT I $D(SAVEDA) S DA=SAVEDA ;
"RTN","PSOCPA",124,0)
 I PSO'=3 K PSO,PSOCPUN,PSODA,PSOFLAG,PSOIB,PSOPARNT,PSOREF,PSORSN,PSORXN,PSZ,X,Y Q
"RTN","PSOCPA",125,0)
 I PSO=3 K PSOCPUN,PSOPARNT,PSORXN,X,Y
"RTN","PSOCPA",126,0)
 Q
"RTN","PSOCPA",127,0)
ENDMSG ;
"RTN","PSOCPA",128,0)
 I PSO'=3 W !!,"Unable to UPDATE COPAY TRANSACTON without REMOVAL REASON entry."
"RTN","PSOCPA",129,0)
 Q
"RTN","PSOCPA",130,0)
ACTLOG ;ENTER MESSAGE INTO RX COPAY ACTIVITY LOG
"RTN","PSOCPA",131,0)
 Q:+$G(PSOPFS)&('$D(^PSRX(PSODA,"IB")))  ;don't set copay activity log when no copay when send Rx to external bill sys
"RTN","PSOCPA",132,0)
 N X,Y
"RTN","PSOCPA",133,0)
 S:'$D(PREA) PREA="R" D NOW^%DTC S PSI=0
"RTN","PSOCPA",134,0)
ACTL S PSI=+$O(^PSRX(PSODA,"COPAY",PSI)) G:$O(^PSRX(PSODA,"COPAY",PSI)) ACTL
"RTN","PSOCPA",135,0)
 K DIC,PSORSNZ I $G(PSORSN)'="" S DIC="^IBE(350.3,",DIC(0)="M",X="`"_PSORSN D ^DIC K DIC I $G(Y) S PSORSNZ=$P($G(Y),"^",2)
"RTN","PSOCPA",136,0)
 S PSORSNZ=$G(PSORSNZ)_$S($G(PSORSNZ)="":"",1:" ")_$G(PSOCOMM)
"RTN","PSOCPA",137,0)
 S ^PSRX(PSODA,"COPAY",+PSI+1,0)=%_"^"_PREA_"^"_DUZ_"^"_$G(PSOREF)_"^"_PSORSNZ_"^"_$G(PSOOLD)_"^"_$G(PSONW)
"RTN","PSOCPA",138,0)
 S ^PSRX(PSODA,"COPAY",0)="^52.0107DA^"_(+PSI+1)_"^"_(+PSI+1)
"RTN","PSOCPA",139,0)
 K PSORSNZ
"RTN","PSOCPA",140,0)
 Q
"RTN","PSOCPA",141,0)
 ;
"RTN","PSOCPB")
0^6^B83592265^B78420405
"RTN","PSOCPB",1,0)
PSOCPB ;BIR/BaB - pharmacy co-pay application cont'd ;9/20/96 11:47
"RTN","PSOCPB",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**72,71,85,185,143,219,239,201**;DEC 1997
"RTN","PSOCPB",3,0)
 ;
"RTN","PSOCPB",4,0)
 ;REF/IA
"RTN","PSOCPB",5,0)
 ;DIS^SDROUT2/112
"RTN","PSOCPB",6,0)
 ;^IBARX/125
"RTN","PSOCPB",7,0)
 ;VADPT/10061
"RTN","PSOCPB",8,0)
 ;SWSTAT^IBBAPI/4663
"RTN","PSOCPB",9,0)
COPAY ;
"RTN","PSOCPB",10,0)
 ;Called by PSON52,PSORN52...Requires PSOCPAY,PSOBILL,DEA=PSDEA,PSOFLAG
"RTN","PSOCPB",11,0)
 ;PSOFLAG=1 NEW, PSOFLAG=0 RENEW
"RTN","PSOCPB",12,0)
 S PSOSAVE=PSOCPAY ; Save original status of PSOCPAY
"RTN","PSOCPB",13,0)
 I '$G(PSOSCP)!('$G(PSOSCA)) D SCP^PSORN52D  ;CIDC-must ask sc if flagged for it in enrollment
"RTN","PSOCPB",14,0)
 I $G(PSODRUG("DEA"))["S"!($G(PSODRUG("DEA"))["I") S PSOCPAY=0
"RTN","PSOCPB",15,0)
 G:+PSOBILL'=2&('$G(PSOSCA)) COPAY2
"RTN","PSOCPB",16,0)
 D FULL^VALM1
"RTN","PSOCPB",17,0)
 I $G(PSOMESOI)=1,$G(PSORXED) W !!,"The Pharmacy Orderable Item has changed for this order. Please review any",!,"existing SC or Environmental Indicator defaults carefully for appropriateness.",! S PSOMESOI=2
"RTN","PSOCPB",18,0)
 I $G(PSOMESFI)=1 W !!,"The Pharmacy Orderable Item has changed for this order. Please review any",!,"existing SC or Environmental Indicator defaults carefully for appropriateness.",! S PSOMESFI=2
"RTN","PSOCPB",19,0)
 S DFN=+$G(PSODFN) D DIS^SDROUT2
"RTN","PSOCPB",20,0)
ASK ;
"RTN","PSOCPB",21,0)
 N PSOUFLAG S PSOUFLAG=0
"RTN","PSOCPB",22,0)
 K PSOCPZ("DFLG"),PSONEW("NEWCOPAY")
"RTN","PSOCPB",23,0)
 W ! K DIR,DTOUT,DIRUT,DUOUT
"RTN","PSOCPB",24,0)
 I $G(PSORX("SC"))="SC"!($G(PSORX("SC"))="NSC")!($G(PSOSCOTH)) D
"RTN","PSOCPB",25,0)
 . W:PSOSCP<50&($G(PSODRUG("DEA"))'["S")&($G(PSODRUG("DEA"))'["I") !,"This Rx has been flagged by the provider as: "_$S($G(PSOSCOTH):"NO COPAY",$G(PSORX("SC"))="SC":"NO COPAY",1:"COPAY"),! I $G(PSOSCOTX) S PSOSCOTX=2
"RTN","PSOCPB",26,0)
 S DIR("A")="Was treatment for Service Connected condition",DIR(0)="Y"
"RTN","PSOCPB",27,0)
 S DIR("?")="Enter 'Yes' if this prescription is for a Service Connected condition"
"RTN","PSOCPB",28,0)
 I $G(PSORX("SC"))]""!($G(PSORX(+$G(PSORENW("OIRXN")),"SC"))'="") S DIR("B")=$S($G(PSORX("SC"))="SC":"YES",$G(PSORX("SC"))="NSC":"NO",$G(PSORX(+$G(PSORENW("OIRXN")),"SC"))=1:"YES",$G(PSORX(+$G(PSORENW("OIRXN")),"SC"))=0:"NO",1:"")
"RTN","PSOCPB",29,0)
 I $G(PSONEWFF),$G(PSOFLAG) I $G(PSOANSQD("SC"))=0!($G(PSOANSQD("SC"))=1) S DIR("B")=$S($G(PSOANSQD("SC"))=1:"YES",1:"NO")
"RTN","PSOCPB",30,0)
 I $G(DIR("B"))="YES"!($G(DIR("B"))="NO") S PSOUFLAG=$G(DIR("B"))
"RTN","PSOCPB",31,0)
 I $G(DIR("B"))="" K DIR("B")
"RTN","PSOCPB",32,0)
 D ^DIR
"RTN","PSOCPB",33,0)
 I $G(Y)=1!($G(Y)=0) S PSOANSQ("SC")=$G(Y) I $G(PSONEWFF),$G(PSOFLAG) S PSOANSQD("SC")=$G(Y)
"RTN","PSOCPB",34,0)
 I PSOFLAG I Y["^"!($D(DTOUT))!($D(DUOUT)) S PSOCPZ("DFLG")=1
"RTN","PSOCPB",35,0)
 S:Y=0 Y=2
"RTN","PSOCPB",36,0)
 S PSOANSR=+Y I 'PSOANSR,'PSOFLAG D  S $P(PSOCPAY,"^")=$S($G(PSOUFLAG)="NO":1,1:0) W ! K DIR S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR G COPAY2
"RTN","PSOCPB",37,0)
 .W !!,"This Renewal has been designated as "_$S($G(PSOUFLAG)="YES":"SERVICE CONNECTED",1:"NON-SERVICE CONNECTED.")
"RTN","PSOCPB",38,0)
 .W:PSOSCP<50&($G(PSODRUG("DEA"))'["S")&($G(PSODRUG("DEA"))'["I") !,"Please use the 'Reset Copay Status/Cancel Charges' option to make corrections."
"RTN","PSOCPB",39,0)
 .S PSOANSQ("SC")=$S($G(PSOUFLAG)="YES":1,1:0)
"RTN","PSOCPB",40,0)
 I $G(PSOFLAG),$G(PSOCPZ("DFLG")) G EXIT
"RTN","PSOCPB",41,0)
 S:PSOANSR=1 PSOCPAY=0 S:PSOANSR=2 $P(PSOCPAY,"^")=1
"RTN","PSOCPB",42,0)
COPAY2 ;
"RTN","PSOCPB",43,0)
 N PSOPFS S PSOPFS=$$SWSTAT^IBBAPI()
"RTN","PSOCPB",44,0)
 I +PSOCPAY=1,($P(PSOCPAY,"^",2)=1)!($P(PSOCPAY,"^",2)=2) D
"RTN","PSOCPB",45,0)
 .;set IB node in ^PSRX for copay if xactn type is 1 or 2
"RTN","PSOCPB",46,0)
 .S PSONEW("NEWCOPAY")=$P($G(PSOCPAY),"^",2)_"^^"_$S(+$G(PSOPFS):"",1:$P($G(PSOCPAY),"^",2))
"RTN","PSOCPB",47,0)
EXIT ;
"RTN","PSOCPB",48,0)
 S PSOCPAY=PSOSAVE ;Restore val of PSOCPAY
"RTN","PSOCPB",49,0)
 K PSOSAVE,PSOANSR,DIR,DUOUT,DIRUT,DTOUT,Y,X
"RTN","PSOCPB",50,0)
 Q
"RTN","PSOCPB",51,0)
RESET ;RESET COPAY STATUS
"RTN","PSOCPB",52,0)
 K PSOSUMM,PSOPFS,PSOPFSA,PSOLFIL,PSOPFSG
"RTN","PSOCPB",53,0)
 I '$D(PSOPAR) D ^PSOLSET G RESET
"RTN","PSOCPB",54,0)
 W ! S DIC="^PSRX(",DIC(0)="AEQMZ" D ^DIC K DIC G:Y<0 EXT S PSODA=+Y
"RTN","PSOCPB",55,0)
 W !,?17,"PATIENT: ",$P($G(^DPT($P(^PSRX(PSODA,0),"^",2),0)),"^")
"RTN","PSOCPB",56,0)
 D ICN^PSODPT($P(^PSRX(PSODA,0),"^",2))
"RTN","PSOCPB",57,0)
 S PSORXN=$P(^PSRX(PSODA,0),"^"),PREA="R"
"RTN","PSOCPB",58,0)
 S PCOPAY=$G(^PSRX(PSODA,"IB"))
"RTN","PSOCPB",59,0)
 W !!,"Rx # ",PSORXN," is a ",$S(+PCOPAY:"Copay",1:"No Copay")," prescription"
"RTN","PSOCPB",60,0)
 S PSOLFIL=$$LF^PSOPFSU1(PSODA) D PFSA^PSOPFSU1(PSODA,PSOLFIL,3)  ;PSOCPC def PSOPFSA=1 if OP SC/EI's change.
"RTN","PSOCPB",61,0)
 D EXEMCHK^PSOCPC ; CHECK/CHANGE EXEMPTION FLAGS
"RTN","PSOCPB",62,0)
 S PSOIBQ=$G(^PSRX(PSODA,"IBQ"))
"RTN","PSOCPB",63,0)
 I '$G(^PSRX(PSODA,"IB")),PSOIBQ'["1" D  G ASKCAN
"RTN","PSOCPB",64,0)
 . K DIR S DIR(0)="Y",DIR("B")="N",DIR("A")="Do you want to reset the status to COPAY" D ^DIR K DIR
"RTN","PSOCPB",65,0)
 . I Y'=1 Q
"RTN","PSOCPB",66,0)
 . S DIC="^IBE(350.3,",DIC("S")="I $P(^(0),U,3)'=2",DIC(0)="AEQMZ",DIC("A")="Select Reason for Reset : " D ^DIC K DIC I Y'<0 S PSORSN=+Y
"RTN","PSOCPB",67,0)
 . S PREA="R",PSOOLD="No Copay",PSONW="Copay",PSOCOMM="" D ACTLOG^PSOCPA
"RTN","PSOCPB",68,0)
 . S PSI=0,PSOCOMM="Copay status of this Rx has been reset to COPAY." D SETSUMM^PSOCPC
"RTN","PSOCPB",69,0)
 . S $P(^PSRX(PSODA,"IB"),"^")=1 ;Reset flag to COPAY
"RTN","PSOCPB",70,0)
 ;
"RTN","PSOCPB",71,0)
 I $G(^PSRX(PSODA,"IB")) D  G ASKCAN
"RTN","PSOCPB",72,0)
 . K DIR S DIR(0)="Y",DIR("B")="N",DIR("A")="Do you want to reset the status to NO COPAYMENT" D ^DIR K DIR
"RTN","PSOCPB",73,0)
 . I Y'=1 Q
"RTN","PSOCPB",74,0)
 . S DIC="^IBE(350.3,",DIC("S")="I $P(^(0),U,3)'=2",DIC(0)="AEQMZ",DIC("A")="Select Reason for Reset : " D ^DIC K DIC I Y'<0 S PSORSN=+Y
"RTN","PSOCPB",75,0)
 . S PREA="R",PSOOLD="Copay",PSONW="No Copay",PSOCOMM="" D ACTLOG^PSOCPA
"RTN","PSOCPB",76,0)
 . S PSI=0,PSOCOMM="Copay status of this Rx has been reset to NO COPAY." D SETSUMM^PSOCPC
"RTN","PSOCPB",77,0)
 . S $P(^PSRX(PSODA,"IB"),"^")="" ;Reset flag to NO COPAY
"RTN","PSOCPB",78,0)
ASKCAN D ASKCAN^PSOCPD
"RTN","PSOCPB",79,0)
 I '$D(PSOSUMM) S PSI=0,PSOCOMM="No action taken" D SETSUMM^PSOCPC
"RTN","PSOCPB",80,0)
 D PRTSUMM
"RTN","PSOCPB",81,0)
 I $P($G(PSOPFS),"^",3)>0&(+$G(PSOPFSA)) D CHRG^PSOPFSU1(PSODA,PSOLFIL,"CG",PSOPFS)
"RTN","PSOCPB",82,0)
RESETE K PSODA,PSORXN,PSORSN,PSOREF,X,Y,PCOPAY,PREA,PSOCOMM,PSI
"RTN","PSOCPB",83,0)
 G RESET
"RTN","PSOCPB",84,0)
EXT K PSODA,PSORXN,PSORSN,PSOREF,X,Y,PCOPAY,PREA,PSOCOPAY
"RTN","PSOCPB",85,0)
 Q
"RTN","PSOCPB",86,0)
BILLED ;Collect IB nums,cancel chrgs,reset flag.
"RTN","PSOCPB",87,0)
 W !!,"**********Charges are on file for this Rx.**********"
"RTN","PSOCPB",88,0)
 Q
"RTN","PSOCPB",89,0)
BILL2 ;
"RTN","PSOCPB",90,0)
 N PSOPREV ; VAR FOR PREV CANCELLED
"RTN","PSOCPB",91,0)
 S PSOPREV=0
"RTN","PSOCPB",92,0)
 S DIC="^IBE(350.3,",DIC("S")="I $P(^(0),U,3)'=2",DIC(0)="AEQMZ",DIC("A")="Select Reason for Reset or Charge Cancellation : " D ^DIC K DIC G ENDMSG:Y<0 S PSORSN=+Y
"RTN","PSOCPB",93,0)
 S X=PSOPAR7_"^"_+$P(^PSRX(PSODA,0),"^",2)_"^^"_DUZ
"RTN","PSOCPB",94,0)
 S SAVX=X
"RTN","PSOCPB",95,0)
 I $D(PSOCAN) D:'$G(PSOPFS)  I +$G(PSOPFS)!($G(PSOPFSG)) D PFS^PSOPFSU1 G BILL2END:'$D(PSOCAN)
"RTN","PSOCPB",96,0)
 . N III S III="" F  S III=$O(PSOCAN(III)) Q:III=""  I PSOCAN(III)["PFS" S PSOPFSG=1 Q  ;PFSS switch off, check for prev cots billing
"RTN","PSOCPB",97,0)
 D POTBILL2
"RTN","PSOCPB",98,0)
 I '$D(PSOCAN) G BILL2END
"RTN","PSOCPB",99,0)
 I $G(CANTYPE) D PREVCAN I $O(X(""))="" Q
"RTN","PSOCPB",100,0)
 I '$G(CANTYPE) S I="" F  S I=$O(PSOCAN(I)) Q:I=""  S X($P(PSOCAN(I),"^",1))=$P(PSOCAN(I),"^",2)_"^"_PSORSN
"RTN","PSOCPB",101,0)
 D CANCEL^IBARX
"RTN","PSOCPB",102,0)
 I $G(CANTYPE) D MSG
"RTN","PSOCPB",103,0)
 I '$D(Y) Q
"RTN","PSOCPB",104,0)
 I +Y=-1 Q
"RTN","PSOCPB",105,0)
 I $D(Y(PSORXN)),+Y(PSORXN)'=-1 S $P(^PSRX(PSODA,"IB"),"^",2)=+Y(PSORXN) K Y(PSORXN) S PREA="C",PSOREF=0,PSOOLD="",PSONW="" D ACTLOG^PSOCPA I '$G(CANTYPE) D MSG
"RTN","PSOCPB",106,0)
 F PSOREF=0:0 S PSOREF=$O(Y(PSOREF)) Q:PSOREF=""  I +Y(PSOREF)'=-1 S ^PSRX(PSODA,1,PSOREF,"IB")=+Y(PSOREF) S PREA="C",PSOOLD="",PSONW="" D ACTLOG^PSOCPA I '$G(CANTYPE) D MSG
"RTN","PSOCPB",107,0)
BILL2END K X,Y,SAVX,PSOREF,PSOCAN
"RTN","PSOCPB",108,0)
 Q
"RTN","PSOCPB",109,0)
 ;
"RTN","PSOCPB",110,0)
POTBILL2 ;see if any potential charges (entries from file 354.71 -- bills that exceeded cap prev) to be cancelled before cancelling regular charges
"RTN","PSOCPB",111,0)
 N X,I
"RTN","PSOCPB",112,0)
 S X=SAVX
"RTN","PSOCPB",113,0)
 I $T(CANIBAM^IBARX)="" Q
"RTN","PSOCPB",114,0)
 S I="" F  S I=$O(PSOCAN(I)) Q:I=""  I PSOCAN(I)["^CAP" S X($P(PSOCAN(I),"^",1))=$P(PSOCAN(I),"^",2)_"^"_PSORSN K PSOCAN(I)
"RTN","PSOCPB",115,0)
 I $O(X(""))="" Q
"RTN","PSOCPB",116,0)
 S PSOPREV=1
"RTN","PSOCPB",117,0)
 D CANIBAM^IBARX
"RTN","PSOCPB",118,0)
 I $D(X(PSORXN)) S $P(^PSRX(PSODA,"IB"),"^",4)="" S PREA="C",PSOREF=0,PSOCOMM="Potential charge cancelled",PSOOLD="",PSONW="" D ACTLOG^PSOCPA D POTMSG K X(PSORXN)
"RTN","PSOCPB",119,0)
 F PSOREF=0:0 S PSOREF=$O(X(PSOREF)) Q:PSOREF=""  Q:PSOREF>11  S $P(^PSRX(PSODA,1,PSOREF,"IB"),"^",2)="" S PREA="C",PSOCOMM="Potential charge cancelled",PSOOLD="",PSONW="" D ACTLOG^PSOCPA D POTMSG
"RTN","PSOCPB",120,0)
 K PSOREF,PREA,PSOCOMM
"RTN","PSOCPB",121,0)
 Q
"RTN","PSOCPB",122,0)
REFILL S PSOREF=0
"RTN","PSOCPB",123,0)
 F  S PSOREF=$O(^PSRX(PSODA,1,PSOREF)) Q:PSOREF'?1N.N  D
"RTN","PSOCPB",124,0)
 . I $D(^PSRX(PSODA,1,PSOREF,"PFS")) S:$P($G(^PSRX(PSODA,1,PSOREF,"PFS")),"^",2) X(PSOREF)="^"_$G(PSORSN) Q
"RTN","PSOCPB",125,0)
 . I $D(^PSRX(PSODA,1,PSOREF,"IB")),+^("IB")>0 S X(PSOREF)=+^PSRX(PSODA,1,PSOREF,"IB")_"^"_$G(PSORSN)
"RTN","PSOCPB",126,0)
 S PSOREF=0 F  S PSOREF=$O(^PSRX(PSODA,1,PSOREF)) Q:PSOREF'?1N.N  I '$D(X(PSOREF)),+$P($G(^PSRX(PSODA,1,PSOREF,"IB")),"^",2) S XX(PSOREF)=+$P(^PSRX(PSODA,1,PSOREF,"IB"),"^",2)_"^"_$G(PSORSN) ; IF ONLY ENTRY FROM 354.71 SAVE IT
"RTN","PSOCPB",127,0)
 Q
"RTN","PSOCPB",128,0)
SETCP ;IF NOT COPAY MAKE ELIG CALL/SET FLAG FOR FUTURE
"RTN","PSOCPB",129,0)
 W ! S X=PSOPAR7_"^"_+$P(^PSRX(PSODA,0),"^",2)
"RTN","PSOCPB",130,0)
 D XTYPE^IBARX
"RTN","PSOCPB",131,0)
 I +Y=-1 W !!,"Error in processing Copay eligibility, no action taken." Q
"RTN","PSOCPB",132,0)
 S (ACTYP,BL)="",(PSOBILL,PSOCPAY)=0
"RTN","PSOCPB",133,0)
CP ;
"RTN","PSOCPB",134,0)
 S ACTYP=$O(Y(ACTYP)) G:'ACTYP CP1
"RTN","PSOCPB",135,0)
 F I=0:0 S BL=$O(Y(ACTYP,BL)) Q:BL=""  I BL>0 S PSOBILL=BL,PSOCPAY=ACTYP
"RTN","PSOCPB",136,0)
 G CP
"RTN","PSOCPB",137,0)
CP1 K ACTYP,BL,I
"RTN","PSOCPB",138,0)
 I (PSOBILL'>0)!(PSOCPAY=0) G INELIG
"RTN","PSOCPB",139,0)
 S $P(^PSRX(PSODA,"IB"),"^")=PSOCPAY
"RTN","PSOCPB",140,0)
 W !,"COPAY status on this Rx has been reset.",!,"*** Future refills will be classified as COPAY."
"RTN","PSOCPB",141,0)
 S PREA="R",PSOOLD="No Copay",PSONW="Copay"
"RTN","PSOCPB",142,0)
 D ACTLOG^PSOCPA
"RTN","PSOCPB",143,0)
 Q
"RTN","PSOCPB",144,0)
INELIG W !,"This Rx does not meet patient eligibility requirement for Copay.",!,"****** Status unchanged *******"
"RTN","PSOCPB",145,0)
 S Y=-1
"RTN","PSOCPB",146,0)
 Q
"RTN","PSOCPB",147,0)
ENDMSG K X W !,"Unable to process CHARGE REMOVAL without REASON for Reset."
"RTN","PSOCPB",148,0)
 R !,"ENTER a REASON now?  (Y/N) ",X:DTIME Q:'$T
"RTN","PSOCPB",149,0)
 I ($E(X)["?")!("YyNn^"'[$E(X)) W !,"Enter YES to select REASON and RESET STATUS." G ENDMSG
"RTN","PSOCPB",150,0)
 I "Yy"[$E(X) G BILL2
"RTN","PSOCPB",151,0)
 Q
"RTN","PSOCPB",152,0)
MSG ;
"RTN","PSOCPB",153,0)
 S PSI=0
"RTN","PSOCPB",154,0)
 I $G(CANTYPE) S PSOCOMM="Rx # "_PSORXN_" - All copay charges cancelled" D SETSUMM^PSOCPC K PSOCOMM Q
"RTN","PSOCPB",155,0)
 S PSOCOMM="Rx # "_PSORXN_" - "_$S(PSOREF=0:"Original fill",1:"Refill "_PSOREF)_" copay charge cancelled"
"RTN","PSOCPB",156,0)
 D SETSUMM^PSOCPC
"RTN","PSOCPB",157,0)
 K PSOCOMM
"RTN","PSOCPB",158,0)
 Q
"RTN","PSOCPB",159,0)
POTMSG ;
"RTN","PSOCPB",160,0)
 S PSI=0
"RTN","PSOCPB",161,0)
 I $G(CANTYPE) Q  ; (MESSAGE WILL GET SET LATER)
"RTN","PSOCPB",162,0)
 S PSOCOMM="Rx # "_PSORXN_" - "_$S(PSOREF=0:"Original fill",1:"Refill "_PSOREF)_" potential copay charge cancelled"
"RTN","PSOCPB",163,0)
 D SETSUMM^PSOCPC
"RTN","PSOCPB",164,0)
 K PSOCOMM
"RTN","PSOCPB",165,0)
 Q
"RTN","PSOCPB",166,0)
MSGNOCAN ;
"RTN","PSOCPB",167,0)
 S PSI=0
"RTN","PSOCPB",168,0)
 S PSOCOMM="Rx # "_PSORXN_" - All copay charges have already been cancelled." D SETSUMM^PSOCPC K PSOCOMM
"RTN","PSOCPB",169,0)
 Q
"RTN","PSOCPB",170,0)
 ;
"RTN","PSOCPB",171,0)
PRTSUMM ; prt sum of actions in reset/cancel
"RTN","PSOCPB",172,0)
 I '$D(PSOSUMM) Q
"RTN","PSOCPB",173,0)
 W !
"RTN","PSOCPB",174,0)
 S PSI=""
"RTN","PSOCPB",175,0)
 F  S PSI=$O(PSOSUMM(PSI)) Q:PSI=""  W !,PSOSUMM(PSI)
"RTN","PSOCPB",176,0)
 K PSOSUMM
"RTN","PSOCPB",177,0)
 Q
"RTN","PSOCPB",178,0)
PREVCAN ; PREVIEW CANCELS IF "ALL" IS SELECTED
"RTN","PSOCPB",179,0)
 N I,PSOBILL
"RTN","PSOCPB",180,0)
 S I="" F  S I=$O(PSOCAN(I)) Q:I=""  D  I PSOBILL S X($P(PSOCAN(I),"^",1))=$P(PSOCAN(I),"^",2)_"^"_PSORSN
"RTN","PSOCPB",181,0)
 . S PSOBILL=1 I $T(STATUS^IBARX)'="" I PSOCAN(I)'["CAP" S PSOBILL=$$STATUS^IBARX($P(PSOCAN(I),"^",2)) S:PSOBILL=2 PSOBILL=0 ; PREVIOUSLY CANCELLED
"RTN","PSOCPB",182,0)
 I $O(X(""))="" D
"RTN","PSOCPB",183,0)
 . I PSOPREV D MSG Q
"RTN","PSOCPB",184,0)
 . D MSGNOCAN
"RTN","PSOCPB",185,0)
 Q
"RTN","PSOCPB",186,0)
 ;
"RTN","PSOCPC")
0^7^B68516946^B67206155
"RTN","PSOCPC",1,0)
PSOCPC ;BHAM ISC/BAB - PHARMACY CO-PAY APPLICATION ;06/09/92
"RTN","PSOCPC",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**10,9,71,85,114,157,143,239,201**;DEC 1997
"RTN","PSOCPC",3,0)
 ;
"RTN","PSOCPC",4,0)
 ;REF/IA
"RTN","PSOCPC",5,0)
 ;piece 9 of zero node of File 350 and APDT cross reference of File 350/2215
"RTN","PSOCPC",6,0)
 ;$$STATUS^IBARX/125
"RTN","PSOCPC",7,0)
 ;File 350.1/592 (DBIA125-B)
"RTN","PSOCPC",8,0)
WARN ; Message when attempt is made to delete a refill date on COPAY
"RTN","PSOCPC",9,0)
 N PSOIB,PSOIBST
"RTN","PSOCPC",10,0)
 S PSOFLG=0
"RTN","PSOCPC",11,0)
 G:'$D(^PSRX(DA(1),1,DA,"IB")) ENDW
"RTN","PSOCPC",12,0)
 S PSOIB=^PSRX(DA(1),1,DA,"IB")
"RTN","PSOCPC",13,0)
 I +PSOIB'>0 G ENDW
"RTN","PSOCPC",14,0)
 S PSOIBST=$$STATUS^IBARX(+PSOIB) I PSOIBST=2!(PSOIBST=0) G ENDW
"RTN","PSOCPC",15,0)
 I +PSOIB>0 D CANCEL G ENDW:PSOFLG=0
"RTN","PSOCPC",16,0)
 I '$G(PSOXXDEL) D EN^DDIOL("This REFILL has COPAY charges, which MUST be removed","","$C(7),!!"),EN^DDIOL("BEFORE the refill date is deleted.","","!")
"RTN","PSOCPC",17,0)
 I '$G(PSOXXDEL) D EN^DDIOL("Use option RESET COPAY STATUS/CANCEL CHARGES, return to EDIT A PRESCRIPTION,","","!!"),EN^DDIOL("and delete the refill date.","","!"),EN^DDIOL(" ","","!!")
"RTN","PSOCPC",18,0)
 S PSOFLG=1
"RTN","PSOCPC",19,0)
ENDW ;
"RTN","PSOCPC",20,0)
 I PSOFLG
"RTN","PSOCPC",21,0)
 K PSOFLG
"RTN","PSOCPC",22,0)
 Q
"RTN","PSOCPC",23,0)
CANCEL ;Check if charge is cancelled for this Refill date
"RTN","PSOCPC",24,0)
 S PSOFLG=1 ;indicates a charge not cancelled
"RTN","PSOCPC",25,0)
 S PSOX=+^PSRX(DA(1),1,DA,"IB")
"RTN","PSOCPC",26,0)
 D LAST I PSOLAST'=PSOPARNT,$D(^IB(PSOLAST,0)),$P(^IBE(350.1,$P(^IB(PSOLAST,0),"^",3),0),"^",5)=2 S PSOFLG=0
"RTN","PSOCPC",27,0)
 K PSOLAST,PSOPARNT,PSOX,PSOL,PSOLDT
"RTN","PSOCPC",28,0)
 Q
"RTN","PSOCPC",29,0)
LAST ;find last entry
"RTN","PSOCPC",30,0)
 S PSOLAST=""
"RTN","PSOCPC",31,0)
 S PSOPARNT=$P(^IB(+PSOX,0),"^",9) I 'PSOPARNT S PSOPARNT=+PSOX
"RTN","PSOCPC",32,0)
 S PSOLDT=$O(^IB("APDT",PSOPARNT,"")) I +PSOLDT F PSOL=0:0 S PSOL=$O(^IB("APDT",PSOPARNT,PSOLDT,PSOL)) Q:'PSOL  S PSOLAST=PSOL
"RTN","PSOCPC",33,0)
 I PSOLAST="" S PSOLAST=PSOPARNT
"RTN","PSOCPC",34,0)
 Q
"RTN","PSOCPC",35,0)
 ;
"RTN","PSOCPC",36,0)
EXEMCHK ; Allow reset of exemption answers
"RTN","PSOCPC",37,0)
 N PSOTG,PSOCPN,PSOEXMT,PSOANS,OLDIBQ,PSOSCP,PSOSCA
"RTN","PSOCPC",38,0)
 S PSOANS=0 D SCP^PSORN52D
"RTN","PSOCPC",39,0)
 S OLDIBQ=$G(^PSRX(PSODA,"IBQ"))
"RTN","PSOCPC",40,0)
 I OLDIBQ[0!(OLDIBQ)[1 D
"RTN","PSOCPC",41,0)
 . S PSOANS=1
"RTN","PSOCPC",42,0)
 . I $P(OLDIBQ,"^",1)'="" S PSOTG("SC")=$P(OLDIBQ,"^",1)
"RTN","PSOCPC",43,0)
 . I $P(OLDIBQ,"^",2)'="" S PSOTG("MST")=$P(OLDIBQ,"^",2)
"RTN","PSOCPC",44,0)
 . I $P(OLDIBQ,"^",3)'="" S PSOTG("AO")=$P(OLDIBQ,"^",3)
"RTN","PSOCPC",45,0)
 . I $P(OLDIBQ,"^",4)'="" S PSOTG("IR")=$P(OLDIBQ,"^",4)
"RTN","PSOCPC",46,0)
 . I $P(OLDIBQ,"^",5)'="" S PSOTG("EC")=$P(OLDIBQ,"^",5)
"RTN","PSOCPC",47,0)
 . I $P(OLDIBQ,"^",6)'="" S PSOTG("HNC")=$P(OLDIBQ,"^",6)
"RTN","PSOCPC",48,0)
 . I $P(OLDIBQ,"^",7)'="" S PSOTG("CV")=$P(OLDIBQ,"^",7)
"RTN","PSOCPC",49,0)
 S PSOCPN=$P(^PSRX(PSODA,0),"^",2)
"RTN","PSOCPC",50,0)
 S RXP=PSODA
"RTN","PSOCPC",51,0)
 D SCNEW^PSOCP(.PSOTG,PSOCPN,"",PSODA)
"RTN","PSOCPC",52,0)
 N EXMT
"RTN","PSOCPC",53,0)
 D XTYPE^PSOCP ; KEEP THIS CALL IN HERE TO SEE IF SC QUESTION APPLIES
"RTN","PSOCPC",54,0)
 ;I $D(PSOTG("SC")) S PSOTG("SC")=$P(OLDIBQ,"^",1) ; CHANGED TO JUST USE IBQ SETTING IF SC QUESTION APPLIES - DON'T RE-CALCULATE SERVICE-CONNECTED
"RTN","PSOCPC",55,0)
 S EXMT="" F  S EXMT=$O(PSOTG(EXMT)) Q:EXMT=""  I PSOTG(EXMT)'="" S PSOANS=1 Q
"RTN","PSOCPC",56,0)
 I $O(PSOTG(""))="" Q
"RTN","PSOCPC",57,0)
 I PSOANS W !!,"The following exemption flags have been set:"
"RTN","PSOCPC",58,0)
 F EXMT="SC","CV","AO","IR","EC","MST","HNC" I $G(PSOTG(EXMT))'="" W !,EXMT,": ",?6,$S(PSOTG(EXMT)=1:"Yes",PSOTG(EXMT)=0:"No",1:"")
"RTN","PSOCPC",59,0)
 W !
"RTN","PSOCPC",60,0)
 W ! K DIR S DIR(0)="Y",DIR("B")="N" D  S DIR("A")="Do you want to enter/edit any copay exemption flags"
"RTN","PSOCPC",61,0)
 . S EXMT="" F  S EXMT=$O(PSOTG(EXMT)) Q:EXMT=""  I PSOTG(EXMT)="" S DIR("B")="Y" Q
"RTN","PSOCPC",62,0)
 S DIR("?")="Enter 'Y' for Yes if you want to edit any applicable medication exemption flags."
"RTN","PSOCPC",63,0)
 S DIR("??")="^D HELPEXEM^PSOCPC"
"RTN","PSOCPC",64,0)
 D ^DIR K DIR S PSOEXMT=Y I Y'=1 Q
"RTN","PSOCPC",65,0)
 ; PRESENT ALL APPLICABLE EXEMPTIONS AND SAVE NEW ANSWERS
"RTN","PSOCPC",66,0)
 N PSOIBQ,PSOSUBS,PSOQUES,PSOLTAG,OLDIBQ,II,PSOCHG,PSOPATST
"RTN","PSOCPC",67,0)
 S PSOPATST=$$GET1^DIQ(52,PSODA_",",3,"I")
"RTN","PSOCPC",68,0)
 S PSOIBQ=""
"RTN","PSOCPC",69,0)
 S OLDIBQ=$G(^PSRX(PSODA,"IBQ"))
"RTN","PSOCPC",70,0)
 I '$D(^PSRX(PSODA,"IBQ")),+($G(^PSRX(PSODA,"IB")))=2 S $P(OLDIBQ,"^",1)=0 ; SC QUESTION WAS PREVIOUSLY ANSWERED AS N
"RTN","PSOCPC",71,0)
 S PSOCOMM="",PSOOLD="",PSONW=""
"RTN","PSOCPC",72,0)
 S II=0
"RTN","PSOCPC",73,0)
 F EXMT="SC","CV","AO","IR","EC","MST","HNC" I $D(PSOTG(EXMT)) D
"RTN","PSOCPC",74,0)
 . S PSOLTAG="REL"_EXMT_"^PSOCPE"
"RTN","PSOCPC",75,0)
 . S HELPTAG="HELP"_EXMT
"RTN","PSOCPC",76,0)
 . S PSOQUES=$P($T(@PSOLTAG),";",2) I PSOQUES="" Q
"RTN","PSOCPC",77,0)
 . S PSOQUES=$P(PSOQUES,"?")
"RTN","PSOCPC",78,0)
 . S PSOSUBS=$P($T(@PSOLTAG),";",3) I PSOSUBS="" Q
"RTN","PSOCPC",79,0)
 . D ASKEXEM
"RTN","PSOCPC",80,0)
 I $D(PSOCHG) D
"RTN","PSOCPC",81,0)
 . S:PSOSCP<50&($TR(PSOIBQ,"^")'="")&($P($G(^PS(53,+$G(PSOPATST),0)),"^",7)'=1) ^PSRX(PSODA,"IBQ")=PSOIBQ
"RTN","PSOCPC",82,0)
 . D RESET^PSORN52D  ;set SC/EI on ICD node
"RTN","PSOCPC",83,0)
 . S PSOPFSA=1 ;PFSS-denotes to calling routine that outpatient classifications changed.
"RTN","PSOCPC",84,0)
 . D EN^PSOHLSN1(PSODA,"XX","","Order edited")
"RTN","PSOCPC",85,0)
 . I PCOPAY,PSOIBQ["1" D  ; RESET TO NO COPAY
"RTN","PSOCPC",86,0)
 . . W !,"Editing of exemption flag(s) has resulted in a copay status change.",!,"The status for this Rx will be reset to NO COPAY."
"RTN","PSOCPC",87,0)
 . . S $P(^PSRX(PSODA,"IB"),"^",1)=""
"RTN","PSOCPC",88,0)
 . . S PSOREF="",PSOOLD="Copay",PSONW="No Copay",PREA="R" D ACTLOG^PSOCPA
"RTN","PSOCPC",89,0)
 . . S PSOCOMM="Copay status reset due to exemption flag(s)"
"RTN","PSOCPC",90,0)
 . . S PSI=0 D SETSUMM
"RTN","PSOCPC",91,0)
 . I $G(II)>0 D
"RTN","PSOCPC",92,0)
 . . S PSOCOMM="The following exemption flags have been changed: ",PSI=0 D SETSUMM
"RTN","PSOCPC",93,0)
 . . S II="" F  S II=$O(PSOCHG(II)) Q:II=""  S PSOCOMM=PSOCHG(II),PSI=0 D SETSUMM
"RTN","PSOCPC",94,0)
 Q
"RTN","PSOCPC",95,0)
 ;
"RTN","PSOCPC",96,0)
ASKEXEM ; ASK THE EXEMPTION QUESTIONS
"RTN","PSOCPC",97,0)
 K DIR S DIR("A")=PSOQUES,DIR(0)="YO" S:PSOTG(EXMT)=1 DIR("B")="Y" S:PSOTG(EXMT)=0 DIR("B")="N" D @HELPTAG
"RTN","PSOCPC",98,0)
ASKEXEM1 D ^DIR I X="@" R !,"  Are you sure you want to delete this answer? ",X:DTIME I $E(X)'="Y",$E(X)'="y" G ASKEXEM1
"RTN","PSOCPC",99,0)
 I X="^" S X=$G(DIR("B")) S Y=$S(X="Y":1,X="N":0,1:"")
"RTN","PSOCPC",100,0)
 S $P(PSOIBQ,"^",PSOSUBS)=$S(Y=1:1,Y=0:0,1:"")
"RTN","PSOCPC",101,0)
 I $P(PSOIBQ,"^",PSOSUBS)'=$P(OLDIBQ,"^",PSOSUBS) S II=II+1,PSOCHG(II)=EXMT_": "_$S($P(PSOIBQ,"^",PSOSUBS)=1:"Yes",$P(PSOIBQ,"^",PSOSUBS)=0:"No",1:"")
"RTN","PSOCPC",102,0)
 I Y=1 D
"RTN","PSOCPC",103,0)
 . I PSOCOMM'="" Q
"RTN","PSOCPC",104,0)
 . D SETCOMM^PSOCP
"RTN","PSOCPC",105,0)
 Q
"RTN","PSOCPC",106,0)
 ;
"RTN","PSOCPC",107,0)
HELPEXEM ; help text for exemption edit question
"RTN","PSOCPC",108,0)
 W !,"Enter 'Y' for Yes if you want to edit any applicable exemption flags such as"
"RTN","PSOCPC",109,0)
 W !,"Service Connected (SC), Combat Veteran(CV), Agent Orange (AO), Ionizing Radiation (IR),"
"RTN","PSOCPC",110,0)
 W !,"Environmental Contaminants (EC), Military Sexual Trauma (MST), or"
"RTN","PSOCPC",111,0)
 W !,"Head and/or Neck Cancer (HNC)."
"RTN","PSOCPC",112,0)
 Q
"RTN","PSOCPC",113,0)
 ;
"RTN","PSOCPC",114,0)
HELPSC ;
"RTN","PSOCPC",115,0)
 S DIR("?")=" ",DIR("?",1)="Enter 'Yes' if this prescription is for a Service Connected condition."
"RTN","PSOCPC",116,0)
 S DIR("?",2)="This response will be used to determine whether or not a copay should be"
"RTN","PSOCPC",117,0)
 S DIR("?",3)="applied to the prescription."
"RTN","PSOCPC",118,0)
 Q
"RTN","PSOCPC",119,0)
 ;
"RTN","PSOCPC",120,0)
HELPAO ;
"RTN","PSOCPC",121,0)
 S DIR("?")=" ",DIR("?",1)="Enter 'Yes' if this prescription is being used to treat a condition due to",DIR("?",2)="Vietnam-Era Herbicide (Agent Orange) exposure. This response will be used to"
"RTN","PSOCPC",122,0)
 S DIR("?",3)="determine whether or not a copay should be applied to the prescription."
"RTN","PSOCPC",123,0)
 Q
"RTN","PSOCPC",124,0)
 ;
"RTN","PSOCPC",125,0)
HELPIR ;
"RTN","PSOCPC",126,0)
 S DIR("?")=" ",DIR("?",1)="Enter 'Yes' if this prescription is being used to treat a condition due to",DIR("?",2)="ionizing radiation exposure during military service. This response will be used"
"RTN","PSOCPC",127,0)
 S DIR("?",3)="to determine whether or not a copay should be applied to the prescription."
"RTN","PSOCPC",128,0)
 Q
"RTN","PSOCPC",129,0)
 ;
"RTN","PSOCPC",130,0)
HELPEC ;
"RTN","PSOCPC",131,0)
 S DIR("?")=" ",DIR("?",1)="Enter 'Yes' if this prescription is being used to treat a condition due to",DIR("?",2)="environmental contaminant exposure during the Persian Gulf War. This response"
"RTN","PSOCPC",132,0)
 S DIR("?",3)="will be used to determine whether or not a copay should be applied to the",DIR("?",4)="prescription."
"RTN","PSOCPC",133,0)
 Q
"RTN","PSOCPC",134,0)
 ;
"RTN","PSOCPC",135,0)
HELPMST ;
"RTN","PSOCPC",136,0)
 S DIR("?")=" ",DIR("?",1)="Enter 'Yes' if this prescription is being used to treat a condition related",DIR("?",2)="to Military Sexual Trauma. This response will be used to determine whether or"
"RTN","PSOCPC",137,0)
 S DIR("?",3)="not a copay should be applied to the prescription."
"RTN","PSOCPC",138,0)
 Q
"RTN","PSOCPC",139,0)
 ;
"RTN","PSOCPC",140,0)
HELPHNC ;
"RTN","PSOCPC",141,0)
 S DIR("?")=" ",DIR("?",1)="Enter 'Yes' if this prescription is being used to treat Head and/or Neck Cancer",DIR("?",2)="due to nose or throat radium treatments while in the military. This response"
"RTN","PSOCPC",142,0)
 S DIR("?",3)="will be used to determine whether or not a copay should be applied to the",DIR("?",4)="prescription."
"RTN","PSOCPC",143,0)
 Q
"RTN","PSOCPC",144,0)
 ;
"RTN","PSOCPC",145,0)
HELPCV ;
"RTN","PSOCPC",146,0)
 S DIR("?")=" "
"RTN","PSOCPC",147,0)
 S DIR("?",1)="Enter 'Yes' if this prescription is being used to treat a condition related"
"RTN","PSOCPC",148,0)
 S DIR("?",2)="to Combat Services. This response will be used to determine whether or"
"RTN","PSOCPC",149,0)
 S DIR("?",3)="not a copay should be applied to the prescription."
"RTN","PSOCPC",150,0)
 Q
"RTN","PSOCPC",151,0)
 ;
"RTN","PSOCPC",152,0)
SETSUMM ; SET MESSAGE INTO SUMMARY
"RTN","PSOCPC",153,0)
 S PSI=$O(PSOSUMM(PSI)) G:$O(PSOSUMM(PSI)) SETSUMM
"RTN","PSOCPC",154,0)
 S PSI=PSI+1,PSOSUMM(PSI)=PSOCOMM
"RTN","PSOCPC",155,0)
 K PSOCOMM
"RTN","PSOCPC",156,0)
 Q
"RTN","PSOCPC",157,0)
 ;
"RTN","PSOCPD")
0^11^B68892823^B55811844
"RTN","PSOCPD",1,0)
PSOCPD ;BHAM ISC/BaB - MULTIPLE COPAY CHARGE REMOVAL ;05/27/92
"RTN","PSOCPD",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**71,85,201**;DEC 1997
"RTN","PSOCPD",3,0)
 ;
"RTN","PSOCPD",4,0)
 ;REF/IA
"RTN","PSOCPD",5,0)
 ;^IBARX/125
"RTN","PSOCPD",6,0)
 ; Originally released as part of the copayment enhancement patch
"RTN","PSOCPD",7,0)
 ; Mill Bill Copay enhancement -- entry point ASKCAN - called from PSOCPB
"RTN","PSOCPD",8,0)
CR I '$D(PSOPAR) S PSOINDPT="" D ^PSOLSET G CR ; Setup site parameters
"RTN","PSOCPD",9,0)
ASK K PSPEED,PSPEEDA,PSPOUT W ! R !,"PRESCRIPTION(s): ",PSX:DTIME S:'$T PSX="^" G LASTEX:"^"[PSX
"RTN","PSOCPD",10,0)
 I PSX["?"!($L(PSX)>245)!(PSX?.AP) W !?5,"Enter prescription number(s) for removal of charges. If more than one",!,"separate with commas.  Do not exceed 245 characters including commas." G ASK
"RTN","PSOCPD",11,0)
 G SPEED:PSX[","
"RTN","PSOCPD",12,0)
 I '$D(^PSRX("B",PSX)) W !!,PSX," is not a valid RX #!!" G ASK
"RTN","PSOCPD",13,0)
 S PSODA=$O(^PSRX("B",PSX,"")) W:PSODA="" !!,PSX," is not a valid RX #!!" G ASK:PSODA=""
"RTN","PSOCPD",14,0)
 I '$D(^PSRX(PSODA,"IB")) W !!,"Rx # ",$P($G(^PSRX(PSODA,0)),"^")," is NOT a COPAY transaction...NO action taken." G EXIT
"RTN","PSOCPD",15,0)
 D REASON G:Y<0 LASTEX D SPEED1,LASTEX
"RTN","PSOCPD",16,0)
 Q
"RTN","PSOCPD",17,0)
REASON ;
"RTN","PSOCPD",18,0)
 ;          Get Cancellation reason
"RTN","PSOCPD",19,0)
 W ! S DIC="^IBE(350.3,",DIC("S")="I $P(^(0),U,3)'=2",DIC(0)="AEQMZ",DIC("A")="Select CHARGE REMOVAL REASON : " D ^DIC K DIC D ENDMSG:Y<0 Q:Y<0  S PSORSN=+Y
"RTN","PSOCPD",20,0)
 S PREA="C-CPD"
"RTN","PSOCPD",21,0)
 Q
"RTN","PSOCPD",22,0)
SPEED ;
"RTN","PSOCPD",23,0)
 S PSPEED=1 D REASON G:Y<0 LASTEX
"RTN","PSOCPD",24,0)
 F PSOI=1:1 S X=$P(PSX,",",PSOI) Q:$P(PSX,",",PSOI,99)=""!($G(PSPOUT))  I X S DIC=52,DIC(0)="M" D ^DIC K DIC S:Y<0 PSINV(X)="" I Y>0 S PSODA=+Y D SPEED1
"RTN","PSOCPD",25,0)
INVALD G:'$D(PSINV) ASK
"RTN","PSOCPD",26,0)
 W !!,"The following are INVALID choices:" S PSOI="" F PSOJ=0:0 S PSOI=$O(PSINV(PSOI)) Q:PSOI'>0  W !?10,PSOI
"RTN","PSOCPD",27,0)
 K PSINV
"RTN","PSOCPD",28,0)
 G ASK
"RTN","PSOCPD",29,0)
SPEED1 ;
"RTN","PSOCPD",30,0)
 S PSOFLAG=0
"RTN","PSOCPD",31,0)
 S PSO=1 ; Remove Co-Pay charge
"RTN","PSOCPD",32,0)
 S PSORXN=$P(^PSRX(PSODA,0),"^") ;..........Rx #
"RTN","PSOCPD",33,0)
 ;          Determine if Rx is COPAY 
"RTN","PSOCPD",34,0)
 I '$D(^PSRX(PSODA,"IB")) W !,"Rx # ",PSORXN," is NOT a COPAY transaction...NO action taken." G EXIT
"RTN","PSOCPD",35,0)
 S PSOIB=^PSRX(PSODA,"IB")
"RTN","PSOCPD",36,0)
 G:($P(PSOIB,"^",2)'>0)&('$D(^PSRX(PSODA,1))) ERRBIL ;No bill#/no refills
"RTN","PSOCPD",37,0)
 ;
"RTN","PSOCPD",38,0)
 ;          Determine last entry in ^PSRX
"RTN","PSOCPD",39,0)
 S PSOREF=0
"RTN","PSOCPD",40,0)
 G:'$D(^PSRX(PSODA,1)) CANCEL
"RTN","PSOCPD",41,0)
 F PSZ=0:0 S PSZ=$O(^PSRX(PSODA,1,PSZ)) Q:PSZ'>0  S PSOREF=PSZ
"RTN","PSOCPD",42,0)
 G:$S('$D(^PSRX(PSODA,1,PSOREF,"IB")):1,(+^("IB"))'>0:1,1:0) ERRBIL ;..No bill #
"RTN","PSOCPD",43,0)
 S:PSOREF>0 PSOIB=^PSRX(PSODA,1,PSOREF,"IB")
"RTN","PSOCPD",44,0)
CANCEL ;
"RTN","PSOCPD",45,0)
 I '$G(PSPEED) W ! K DIR S DIR(0)="Y",DIR("B")="Y",DIR("A")="Are you sure you want to remove Copay charges for Rx # "_$G(PSORXN) D ^DIR K DIR I Y'=1 W !!,"No action taken.",! G EXIT
"RTN","PSOCPD",46,0)
 I $G(PSPEED),'$G(PSPEEDA) W ! K DIR S DIR(0)="Y",DIR("B")="Y",DIR("A")="Are you sure you want to remove Copay charges for these Rx's" D ^DIR K DIR S PSPEEDA=1 I Y'=1 W !!,"No action taken.",! S PSPOUT=1 G EXIT
"RTN","PSOCPD",47,0)
 W ! K X
"RTN","PSOCPD",48,0)
 ;          Set x=service^dfn^^user duz
"RTN","PSOCPD",49,0)
 ;              x(n)=IB number^cancellation reason
"RTN","PSOCPD",50,0)
 ;
"RTN","PSOCPD",51,0)
 S X=PSOPAR7_"^"_+$P(^PSRX(PSODA,0),"^",2)_"^^"_DUZ
"RTN","PSOCPD",52,0)
 S:PSOREF=0 X(PSORXN)=+$P(PSOIB,"^",2)_"^"_PSORSN ; Original Rx
"RTN","PSOCPD",53,0)
 S:PSOREF>0 X(PSORXN)=+^PSRX(PSODA,1,PSOREF,"IB")_"^"_PSORSN ; Refill Rx
"RTN","PSOCPD",54,0)
 ;
"RTN","PSOCPD",55,0)
 D CANCEL^IBARX
"RTN","PSOCPD",56,0)
 ;
"RTN","PSOCPD",57,0)
 ;          Return y=1 if success, -1^error code if error
"RTN","PSOCPD",58,0)
 ;                 y(n)=IB number^total charge^AR bill number
"RTN","PSOCPD",59,0)
 ;
"RTN","PSOCPD",60,0)
 I +Y=-1 W !,"......No action taken." G EXIT
"RTN","PSOCPD",61,0)
 G EXIT:'$D(Y(PSORXN))
"RTN","PSOCPD",62,0)
FILE ;
"RTN","PSOCPD",63,0)
 ;          File new Bill # in ^PSRX
"RTN","PSOCPD",64,0)
 ;
"RTN","PSOCPD",65,0)
 S:PSOREF=0 $P(^PSRX(PSODA,"IB"),"^",2)=+Y(PSORXN) ;...Original Rx
"RTN","PSOCPD",66,0)
 S:PSOREF>0 ^PSRX(PSODA,1,PSOREF,"IB")=+Y(PSORXN) ; ...Refill Rx
"RTN","PSOCPD",67,0)
 W:PSO=1 !!,"Co-Pay transaction for Rx # ",PSORXN,$S(PSOREF>0:" refill # "_PSOREF,1:"")," has been cancelled."
"RTN","PSOCPD",68,0)
 ;
"RTN","PSOCPD",69,0)
 D ACTLOG^PSOCPA
"RTN","PSOCPD",70,0)
 ;
"RTN","PSOCPD",71,0)
 G EXIT
"RTN","PSOCPD",72,0)
ERRBIL W !!,"No Entry # for Rx # "_$P($G(^PSRX(PSODA,0)),"^")_" ...No action taken."
"RTN","PSOCPD",73,0)
EXIT ;
"RTN","PSOCPD",74,0)
 K PREA,C,PSO,PSODA,PSOIB,PSOPARNT,PSOREF,PSORXN,PSZ,X,Y
"RTN","PSOCPD",75,0)
 Q
"RTN","PSOCPD",76,0)
LASTEX ;
"RTN","PSOCPD",77,0)
 K PSO,PSPOUT,PSPEED,PSPEEDA,PSOCPUN,PSODA,PSOFLAG,PSOIB,PSOPARNT,PSOREF,PSORSN,PSORXN,PSZ,X,Y,PSINV,PSOI,PSX,PSOJ,PREA,C
"RTN","PSOCPD",78,0)
 I $D(PSOINDPT) K PSOINDPT D FINAL^PSOLSET
"RTN","PSOCPD",79,0)
 Q
"RTN","PSOCPD",80,0)
ENDMSG ;
"RTN","PSOCPD",81,0)
 W !!,"Unable to process without REASON entry."
"RTN","PSOCPD",82,0)
 Q
"RTN","PSOCPD",83,0)
 ;
"RTN","PSOCPD",84,0)
ASKCAN ; if any charges currently, give option to cancel some or all
"RTN","PSOCPD",85,0)
 I '$D(^PSRX(PSODA,"IB")) Q  ;ok to quit based on IB node for PFSS because always have IB node when copay is billed.
"RTN","PSOCPD",86,0)
 N J,PSOREF,PSOCAN,CANTYPE
"RTN","PSOCPD",87,0)
 K X,XX
"RTN","PSOCPD",88,0)
 S J=0
"RTN","PSOCPD",89,0)
 I $P($G(^PSRX(PSODA,"PFS")),"^",2) S X(PSODA)="",J=1,PSOCAN(J)=PSODA_"^"_X(PSODA),$P(PSOCAN(J),"^",10)="PFS" ;if PFS and it has charge id
"RTN","PSOCPD",90,0)
 I $P(^PSRX(PSODA,"IB"),"^",2)>0 S X(PSORXN)=$P(^PSRX(PSODA,"IB"),"^",2),J=1,PSOCAN(J)=PSORXN_"^"_X(PSORXN) ; original fill
"RTN","PSOCPD",91,0)
 I $P(^PSRX(PSODA,"IB"),"^",4)>0,'$D(X(PSORXN)) S XX(PSORXN)=$P(^PSRX(PSODA,"IB"),"^",4),J=1,PSOCAN(J)=PSORXN_"^"_XX(PSORXN)_"^CAP" ; original fill
"RTN","PSOCPD",92,0)
PFS D REFILL^PSOCPB
"RTN","PSOCPD",93,0)
 I '$D(X),'$D(XX) Q  ; no "IB" numbers on original or refills
"RTN","PSOCPD",94,0)
 S PSOREF="" F  S PSOREF=$O(X(PSOREF)) Q:PSOREF=""  Q:PSOREF>12  S J=J+1,PSOCAN(J)=PSOREF_"^"_X(PSOREF) S:$P($G(^PSRX(PSODA,1,PSOREF,"PFS")),"^",2) $P(PSOCAN(J),"^",10)="PFS"
"RTN","PSOCPD",95,0)
 S PSOREF="" F  S PSOREF=$O(XX(PSOREF)) Q:PSOREF=""  Q:PSOREF>12  S J=J+1,PSOCAN(J)=PSOREF_"^"_XX(PSOREF)_"^CAP" S:$P($G(^PSRX(PSODA,1,PSOREF,"PFS")),"^",2) $P(PSOCAN(J),"^",10)="PFS"
"RTN","PSOCPD",96,0)
ASKCAN2 W !!,"Do you want to cancel any charges (Y/N)? "
"RTN","PSOCPD",97,0)
 R X:DTIME S:'$T X="^" Q:X=""  G:"Yy"[$E(X) ASKALL Q:"Nn^"[$E(X)  D HELP2:"?"[$E(X) G ASKCAN2
"RTN","PSOCPD",98,0)
HELP2 W !,"Answering YES will allow cancelling of all or selected charges"
"RTN","PSOCPD",99,0)
 Q
"RTN","PSOCPD",100,0)
HELP3 W !,"Answering YES will proceed with cancelling selected charges"
"RTN","PSOCPD",101,0)
 Q
"RTN","PSOCPD",102,0)
ASKALL ;PFS - check copay activity log to see if any fills were previously cancelled; mark as cancelled for display
"RTN","PSOCPD",103,0)
 N PSOPFSD,PSOFIL D GETS^DIQ(52,PSODA,"107*","I","PSOPFSD") D:$D(PSOPFSD)
"RTN","PSOCPD",104,0)
 .F I=1:1 Q:'$D(PSOPFSD(52.0107,I_","_PSODA_","))  D:$G(PSOPFSD(52.0107,I_","_PSODA_",",1,"I"))="C"
"RTN","PSOCPD",105,0)
 ..S PSOFIL=$G(PSOPFSD(52.0107,I_","_PSODA_",",3,"I")),J=""
"RTN","PSOCPD",106,0)
 ..F  S J=$O(PSOCAN(J)) Q:J=""  S:$P(PSOCAN(J),"^")=PSOFIL&($P(PSOCAN(J),"^",10)="PFS") $P(PSOCAN(J),"^",5)="CANCEL" S:$P(PSOCAN(J),"^")=PSODA&(PSOFIL=0)&($P(PSOCAN(J),"^",10)="PFS") $P(PSOCAN(J),"^",5)="CANCEL"
"RTN","PSOCPD",107,0)
 K PSOFIL,PSOPFSD
"RTN","PSOCPD",108,0)
 ;
"RTN","PSOCPD",109,0)
 W !!,"(A)ll or (S)elect Charges? (A/S): "
"RTN","PSOCPD",110,0)
 R X:DTIME S:'$T X="^" I X="" Q
"RTN","PSOCPD",111,0)
 I X="^" Q
"RTN","PSOCPD",112,0)
 I X'="A",X'="a",X'="S",X'="s" W !,"Enter 'A' to cancel all charges or 'S' to select from list of charges" G ASKALL
"RTN","PSOCPD",113,0)
 I X="A"!(X="a") D  D BILL2^PSOCPB Q
"RTN","PSOCPD",114,0)
 .W !!,"**********Charges are on file for this Rx.**********"
"RTN","PSOCPD",115,0)
 .W !,"Proceeding with cancellation of ALL charges."
"RTN","PSOCPD",116,0)
 .S CANTYPE=1
"RTN","PSOCPD",117,0)
 S CANTYPE=0
"RTN","PSOCPD",118,0)
 D SELECT
"RTN","PSOCPD",119,0)
 Q
"RTN","PSOCPD",120,0)
 ;
"RTN","PSOCPD",121,0)
SELECT ; Choose from list of fills that have charges
"RTN","PSOCPD",122,0)
 N J,I,PSORELDT,PSOBILL,FOOTNOTE
"RTN","PSOCPD",123,0)
 K FOOTNOTE
"RTN","PSOCPD",124,0)
 K X
"RTN","PSOCPD",125,0)
 F J=1:1 Q:'$D(PSOCAN(J))  D  W:PSORELDT'="//" !,J,". ",$S(+PSOCAN(J)>11:"Original fill",1:"Refill #"_+PSOCAN(J)),?20,"(",PSORELDT,")",?35,PSOBILL
"RTN","PSOCPD",126,0)
 .S PSOBILL=""
"RTN","PSOCPD",127,0)
 .I $P(PSOCAN(J),"^",10)'="PFS" D
"RTN","PSOCPD",128,0)
 ..I PSOCAN(J)["CAP" S PSOBILL="(Potential Charge *)",FOOTNOTE=1
"RTN","PSOCPD",129,0)
 ..I $P(PSOCAN(J),"^",10)'="PFS" I $T(STATUS^IBARX)'="" I PSOCAN(J)'["CAP" S PSOBILL=$$STATUS^IBARX($P(PSOCAN(J),"^",2)) S:PSOBILL=2 $P(PSOCAN(J),"^",5)="CANCEL" S PSOBILL=$S(PSOBILL=2:"(Charge Cancelled)",1:"")
"RTN","PSOCPD",130,0)
 .I $P(PSOCAN(J),"^",10)="PFS" S:$P(PSOCAN(J),"^",5)="CANCEL" PSOBILL="(Charge Cancelled)"
"RTN","PSOCPD",131,0)
 .N RX2
"RTN","PSOCPD",132,0)
 .S RX2=$S(+PSOCAN(J)>11:$G(^PSRX(PSODA,2)),1:$G(^PSRX(PSODA,1,+PSOCAN(J),0)))
"RTN","PSOCPD",133,0)
 .I RX2="" S PSORELDT="" Q
"RTN","PSOCPD",134,0)
 .I +PSOCAN(J)>11 S PSORELDT=$S($P(RX2,"^",13):$E($P(RX2,"^",13),4,5)_"/"_$E($P(RX2,"^",13),6,7)_"/"_$E($P(RX2,"^",13),2,3),$P(RX2,"^",15):"RTS",1:"") Q
"RTN","PSOCPD",135,0)
 .S PSORELDT=$E($P(RX2,"^",18),4,5)_"/"_$E($P(RX2,"^",18),6,7)_"/"_$E($P(RX2,"^",18),2,3)
"RTN","PSOCPD",136,0)
 I $D(FOOTNOTE) D
"RTN","PSOCPD",137,0)
 . W !!,"* Potential charge indicates fill was not billed due to the annual cap."
"RTN","PSOCPD",138,0)
 . W !,"If cancelled, this fill will not be considered for future copay billing."
"RTN","PSOCPD",139,0)
SELECT2 ;
"RTN","PSOCPD",140,0)
 K DIR
"RTN","PSOCPD",141,0)
 S DIR("?")="Select a list or a range, e.g., 1,3,5 or 2-5,8"
"RTN","PSOCPD",142,0)
 S DIR(0)="LO^1:"_(J-1)
"RTN","PSOCPD",143,0)
 D ^DIR K DIR
"RTN","PSOCPD",144,0)
 Q:(X="")!(X="^")!(Y=-1)
"RTN","PSOCPD",145,0)
 F I=1:1:$L(Y,",")-1 D
"RTN","PSOCPD",146,0)
 . S PSOSLCT=$P(Y,",",I)
"RTN","PSOCPD",147,0)
 . I $P(PSOCAN(PSOSLCT),"^",5)="" S X($P(PSOCAN(PSOSLCT),"^",1))=$P(PSOCAN(PSOSLCT),"^",2) Q
"RTN","PSOCPD",148,0)
SELECT3 W !!,"Do you wish to continue (Y/N)? "
"RTN","PSOCPD",149,0)
 R X:DTIME S:'$T X="^" I X="" Q
"RTN","PSOCPD",150,0)
 I "Yy"[$E(X) G SELECT4
"RTN","PSOCPD",151,0)
 Q:"Nn^"[$E(X)  D HELP3:"?"[$E(X) G SELECT3
"RTN","PSOCPD",152,0)
SELECT4 I $O(X(""))'="" D  D BILL2^PSOCPB ; cancel charges for selected fills only
"RTN","PSOCPD",153,0)
 . S I="" F  S I=$O(PSOCAN(I)) Q:I=""  I '$D(X($P(PSOCAN(I),"^",1))) K PSOCAN(I) ; remove unselected fills from cancellation list
"RTN","PSOCPD",154,0)
 Q
"RTN","PSOCPD",155,0)
 ;
"RTN","PSOCPD",156,0)
CHKCAN ; SEE IF SELECTION HAS ALREADY BEEN CANCELLED
"RTN","PSOCPD",157,0)
 I '$D(PSOCAN(J)) D  Q
"RTN","PSOCPD",158,0)
 . I J>12!(J'?0.2N) W $C(7),!!,J," is an invalid selection.  Please try again.",!
"RTN","PSOCPD",159,0)
 S PSI=0
"RTN","PSOCPD",160,0)
 I $P(PSOCAN(J),"^",5)="CANCEL" S PSOCOMM="Rx # "_PSORXN_" - "_$S(+PSOCAN(J)>11:"Original fill",1:"Refill #"_+PSOCAN(J))_" copay charge has already been cancelled!" D SETSUMM^PSOCPC
"RTN","PSOCPD",161,0)
 K PSI
"RTN","PSOCPD",162,0)
 Q
"RTN","PSOCPD",163,0)
 ;
"RTN","PSOHLNE3")
0^16^B56031313^B55635403
"RTN","PSOHLNE3",1,0)
PSOHLNE3 ;BIR/LE - Process Edit Information from CPRS ;02/27/04
"RTN","PSOHLNE3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**143,239,201**;DEC 1997
"RTN","PSOHLNE3",3,0)
 ;External reference to ^OR(100 private DBIA 2219
"RTN","PSOHLNE3",4,0)
 ;External reference VADPT supported by DBIA 10061
"RTN","PSOHLNE3",5,0)
 ;
"RTN","PSOHLNE3",6,0)
 ;This API is used to update the prescription file when ICD-9 diagnosis and SC/EI's are updated as a result of an e-sig in CPRS.  
"RTN","PSOHLNE3",7,0)
 ;
"RTN","PSOHLNE3",8,0)
EN(DFN,ORITEM,ORIEN,ORDX,ORSCEI) ;ENTRY POINT
"RTN","PSOHLNE3",9,0)
 ;     Used to import edit information from CPRS 
"RTN","PSOHLNE3",10,0)
 ;Where Input:
"RTN","PSOHLNE3",11,0)
 ;DFN = Patient IEN
"RTN","PSOHLNE3",12,0)
 ;ORITEM = Package reference number from file 100
"RTN","PSOHLNE3",13,0)
 ;ORIEN = ien from file 100
"RTN","PSOHLNE3",14,0)
 ;ORDX(1)= (pointer to file 80) up to 8 accepted and first is primary ICD
"RTN","PSOHLNE3",15,0)
 ;ORDX(2)= (pointer to file 80)
"RTN","PSOHLNE3",16,0)
 ;ORSCEI=  seven pieces - where 1=yes, 0=no, null or ? =not asked
"RTN","PSOHLNE3",17,0)
 ;  ORSCEI=AO^IR^SC^EC^MST^HNC^CV
"RTN","PSOHLNE3",18,0)
 N %,DX,DX2,DX3,RXN,PSOSCP,PSOX,ORDPROV,PSOSCP2,DA,RET,PSOANSQ,PSORX,PTSTATUS,ARRAY,PSOOI,ORITEM2,ORID,OICHK,PSORENW
"RTN","PSOHLNE3",19,0)
 N PSODCPY,PSONEW,PSOOIBQ,PSOFLD,PSODCZ,PSOSTAZ,PREA,PSOPIBQ,PSOIBQC,PSOSCA,PSOPICD,PSODGUP,PSOOICD,PSOPFS,TYPE,PSONW,PSOOLD,PSODA
"RTN","PSOHLNE3",20,0)
 N PSODD,PSOSI,X,PSOSITE,PSOBILL,PSOCPAY,PSOCICD
"RTN","PSOHLNE3",21,0)
 S:'$D(ORIEN) ORIEN="" S:'$D(ORSCEI) ORSCEI="" S:'$D(ORITEM) ORITEM=""
"RTN","PSOHLNE3",22,0)
 ;
"RTN","PSOHLNE3",23,0)
 ;validate prescription IEN with DFN, ord item, and placer#
"RTN","PSOHLNE3",24,0)
 S RET=1,PSODCZ=",12,14,15,"
"RTN","PSOHLNE3",25,0)
 S RXN=ORITEM I '$D(^PSRX(RXN)) S RET="0^1" Q RET  ;invalid RX ien
"RTN","PSOHLNE3",26,0)
 I $D(^PSRX(RXN,"STA")) S PSOSTAZ=^PSRX(RXN,"STA")
"RTN","PSOHLNE3",27,0)
 ; get prescription file patient ien, drug, and placer order #
"RTN","PSOHLNE3",28,0)
 D GETS^DIQ(52,RXN_",","2;6;39.3","I","ARRAY")
"RTN","PSOHLNE3",29,0)
 I '$D(ARRAY(52,RXN_",",2,"I")) S RET="0^3" Q RET  ;quit if you don't have a patient ien
"RTN","PSOHLNE3",30,0)
 I ARRAY(52,RXN_",",2,"I")'=DFN S RET="0^3" Q RET  ;quit if patient dfn is different
"RTN","PSOHLNE3",31,0)
 I '$D(ARRAY(52,RXN_",",39.3,"I")) S ARRAY(52,RXN_",",39.3,"I")=""  ;if don't have it; treat is as null
"RTN","PSOHLNE3",32,0)
 I ARRAY(52,RXN_",",39.3,"I")'="" I ARRAY(52,RXN_",",39.3,"I")'=ORIEN S RET="0^5" Q RET  ;placer # is different
"RTN","PSOHLNE3",33,0)
 I ARRAY(52,RXN_",",39.3,"I")="" S OICHK=0 D CHKOI I OICHK S RET="0^4" Q RET  ;quit if placer # is null and orderable item is different or null.
"RTN","PSOHLNE3",34,0)
 ;end of validation process
"RTN","PSOHLNE3",35,0)
 ;
"RTN","PSOHLNE3",36,0)
 S PSODD=$$GET1^DIQ(52,RXN_",",6,"I") S:($P($G(^PSDRUG(PSODD,0)),"^",3)["S")!($P($G(^(0)),"^",3)["I") PSOSI=1
"RTN","PSOHLNE3",37,0)
 S PSOPIBQ=$G(^PSRX(RXN,"IBQ")),PSOPICD=$P($G(^PSRX(RXN,"ICD",1,0)),"^",2,7)
"RTN","PSOHLNE3",38,0)
 S PSOX("IRXN")=RXN,PSORENW("IRXN")=RXN
"RTN","PSOHLNE3",39,0)
 S (PSONEW("PATIENT STATUS"),PTSTATUS)=$$GET1^DIQ(52,RXN_",","3","I")
"RTN","PSOHLNE3",40,0)
 I '$D(PTSTATUS) S (PSONEW("PATIENT STATUS"),PTSTATUS)=""
"RTN","PSOHLNE3",41,0)
 ;if patient status is null, treat same as PSONEW2, PSORN52, PSONEWG, AND PSONEWF.  If piece 7 of ^PS(53 doesn't equal 1, it's not exempt from copay.
"RTN","PSOHLNE3",42,0)
 I ORSCEI["?" S ORSCEI=$TR(ORSCEI,"?","")
"RTN","PSOHLNE3",43,0)
 D SCP^PSORN52D
"RTN","PSOHLNE3",44,0)
 S PSOANSQ(PSOX("IRXN"),"VEH")=$P(ORSCEI,U,1)
"RTN","PSOHLNE3",45,0)
 S PSOANSQ(PSOX("IRXN"),"RAD")=$P(ORSCEI,U,2)
"RTN","PSOHLNE3",46,0)
 I PSOSCP<50&($P($G(^PS(53,+$G(PTSTATUS),0)),"^",7)'=1) S PSOANSQ(PSOX("IRXN"),"SC")=$P(ORSCEI,U,3),PSOANSQ("SC")=$P(ORSCEI,U,3)
"RTN","PSOHLNE3",47,0)
 I PSOSCP>49!($P($G(^PS(53,+$G(PTSTATUS),0)),"^",7)=1) S PSOANSQ(PSOX("IRXN"),"SC>50")=$P(ORSCEI,U,3),PSOANSQ("SC>50")=$P(ORSCEI,U,3)
"RTN","PSOHLNE3",48,0)
 I PSOSCP=""&('$D(PSOANSQ("SC")))&($D(^PSRX(RXN,"ICD",1))) S PSOANSQ("SC")=$P(^PSRX(RXN,"ICD",1,0),"^",4),PSOANSQ(PSOX("IRXN"),"SC")=PSOANSQ("SC")  ;for SC with no percentage defined/ legacy
"RTN","PSOHLNE3",49,0)
 S PSOANSQ(PSOX("IRXN"),"PGW")=$P(ORSCEI,U,4)
"RTN","PSOHLNE3",50,0)
 S PSOANSQ(PSOX("IRXN"),"MST")=$P(ORSCEI,U,5)
"RTN","PSOHLNE3",51,0)
 S PSOANSQ(PSOX("IRXN"),"HNC")=$P(ORSCEI,U,6)
"RTN","PSOHLNE3",52,0)
 S PSOANSQ(PSOX("IRXN"),"CV")=$P(ORSCEI,U,7)
"RTN","PSOHLNE3",53,0)
 ;
"RTN","PSOHLNE3",54,0)
 S DX="",DX2=0 F  S DX=$O(ORDX(DX)) Q:DX=""  S DX2=DX2+1,PSORX("ICD",DX2)=ORDX(DX)  ;Multi signed Rx's come in consecutively and the diagnosis subscript doesn't start with 1 for each Rx
"RTN","PSOHLNE3",55,0)
 S PSOSCP2=1  ;used in PSORN52D
"RTN","PSOHLNE3",56,0)
 ;
"RTN","PSOHLNE3",57,0)
ICD2 ;Check to see if SC/EI changed during CPRS sign order
"RTN","PSOHLNE3",58,0)
 D GETS^DIQ(52,PSOX("IRXN")_",","52311*","I","PSOOICD")
"RTN","PSOHLNE3",59,0)
 S PSODCPY=0,PSOFLD=""
"RTN","PSOHLNE3",60,0)
 F TYPE="VEH","RAD","SC>50","PGW","MST","HNC","CV" Q:PSODCPY  F PSOFLD=1:1:7 D  Q:PSODCPY
"RTN","PSOHLNE3",61,0)
 . I TYPE="VEH"&(PSOFLD=1) D CHOC
"RTN","PSOHLNE3",62,0)
 . I TYPE="RAD"&(PSOFLD=2) D CHOC
"RTN","PSOHLNE3",63,0)
 . I TYPE="SC>50"&(PSOFLD=3)&($D(PSOANSQ(PSOX("IRXN"),TYPE))) D CHOC
"RTN","PSOHLNE3",64,0)
 . I TYPE="PGW"&(PSOFLD=4) D CHOC
"RTN","PSOHLNE3",65,0)
 . I TYPE="MST"&(PSOFLD=5) D CHOC
"RTN","PSOHLNE3",66,0)
 . I TYPE="HNC"&(PSOFLD=6) D CHOC
"RTN","PSOHLNE3",67,0)
 . I TYPE="CV"&(PSOFLD=7) D CHOC
"RTN","PSOHLNE3",68,0)
 I $D(PSOANSQ("SC")) S PSOFLD=3 S:PSOANSQ("SC")'=PSOOICD(52.052311,1_","_PSOX("IRXN")_",",PSOFLD,"I") PSODCPY=1,PSOFLD=""
"RTN","PSOHLNE3",69,0)
 ; IF NO SC/EI DIFFERENCES, CHECK FOR ICD CHANGES.  If there were SC/EI difference, don't need to check ICD because they are sent anyway when copay update is done.
"RTN","PSOHLNE3",70,0)
 I '$G(PSODCPY) D
"RTN","PSOHLNE3",71,0)
 .I '$D(PSORX("ICD"))&($G(PSOOICD(52.052311,1_","_RXN_",",.01,"I"))) S PSODGUP=1 Q  ;if no ICD's passed and ICD's defined in 52, CPRS overrides OP
"RTN","PSOHLNE3",72,0)
 .S (DX3,DX2,DX)="" F  S DX=$O(PSOOICD(52.052311,DX)) Q:DX=""  S DX2=+DX  ;get last entry for file 52
"RTN","PSOHLNE3",73,0)
 .S DX="" F  S DX=$O(PSORX("ICD",DX)) Q:DX=""  S DX3=DX D  ;get last entry for new ICD's from CPRS
"RTN","PSOHLNE3",74,0)
 .. I $G(PSOOICD(52.052311,DX_","_PSOX("IRXN")_",",.01,"I"))'=PSORX("ICD",DX) S PSODGUP=1  ;if ICD'S changed or more new ICD's than old ones.
"RTN","PSOHLNE3",75,0)
 .I DX2>DX3 S PSODGUP=1  ;if more old ICD's than new ones
"RTN","PSOHLNE3",76,0)
 Q:'$G(PSODCPY)&('$G(PSODGUP)) 1
"RTN","PSOHLNE3",77,0)
 D FILE2^PSORN52D  ;file SC/EI/ICD'S into Rx file
"RTN","PSOHLNE3",78,0)
 ;S PSOCIDC=$P($G(^PSRX(RXN,"ICD",1,0)),"^",2,7)
"RTN","PSOHLNE3",79,0)
 ;only do copay if SC/EI changed and SC is less than 50%.
"RTN","PSOHLNE3",80,0)
 I PSODCZ[(","_$G(PSOSTAZ)_",") S RET="0^6" Q RET  ;discontinue's no copay changes allowed.
"RTN","PSOHLNE3",81,0)
 ;
"RTN","PSOHLNE3",82,0)
 ;Get last fill number
"RTN","PSOHLNE3",83,0)
 N PSOLFIL S PSOLFIL=$$LF^PSOPFSU1(RXN)
"RTN","PSOHLNE3",84,0)
 S PSOPFS=$P($S('PSOLFIL:$G(^PSRX(RXN,"PFS")),1:$G(^PSRX(RXN,1,PSOLFIL,"PFS"))),"^",1,2)
"RTN","PSOHLNE3",85,0)
 ; No-copay to copay updates
"RTN","PSOHLNE3",86,0)
 S PSOIBQC=$G(^PSRX(RXN,"IBQ")),PSOCICD=$P($G(^PSRX(RXN,"ICD",1,0)),"^",2,7)
"RTN","PSOHLNE3",87,0)
 D CPAY
"RTN","PSOHLNE3",88,0)
 ; must check IBQ node in case it's a pre-CIDC rx/copay, ICD node for exempt/supply items, and for diagnosis updates for NSC Rx's
"RTN","PSOHLNE3",89,0)
 I (PSOPIBQ[1&(PSOIBQC'[1))!(PSOIBQC=""&(PSOPICD[1&(PSOCICD'[1)))!($G(PSODGUP)) D  Q RET  ;don't do no copay to copay bills, but update status
"RTN","PSOHLNE3",90,0)
 . D ALOG
"RTN","PSOHLNE3",91,0)
 . I (PSOSCP<50)&($G(PSODCPY)) D
"RTN","PSOHLNE3",92,0)
 .. I $P($G(^PS(53,+$G(PTSTATUS),0)),"^",7)'=1&('$G(PSOSI)) D
"RTN","PSOHLNE3",93,0)
 ... S:+$G(PSOCPAY)<1&($D(^PSRX(RXN,"IB"))) $P(^PSRX(RXN,"IB"),"^",1)=""
"RTN","PSOHLNE3",94,0)
 ... I +$G(PSOCPAY)>0 S $P(^PSRX(RXN,"IB"),"^",1)=+$G(PSOCPAY),PSOOLD="No Copay",PSONW="Copay",PREA="R",PSODA=RXN D:'$G(PSOSI) ACTLOG^PSOCPA
"RTN","PSOHLNE3",95,0)
 . I +$G(PSOPFS)>0&('$P($G(PSOPFS),"^",2)) K PSOPFS Q   ;don't send unreleased charge msg
"RTN","PSOHLNE3",96,0)
 . I +$G(PSOPFS)<1 K PSOPFS  ;invalid PFSS ACCT REF/ SEND TO IB
"RTN","PSOHLNE3",97,0)
 . I +$G(PSOPFS)>0 S PSOPFS="1^"_PSOPFS
"RTN","PSOHLNE3",98,0)
 . ;
"RTN","PSOHLNE3",99,0)
 . I +$G(PSOPFS) D CHRG^PSOPFSU1(RXN,PSOLFIL,"CG",PSOPFS) ;always send to external bill sys
"RTN","PSOHLNE3",100,0)
 ;
"RTN","PSOHLNE3",101,0)
 ; Copay to no-copay updates
"RTN","PSOHLNE3",102,0)
 I $G(PSODCPY) D COPAY^PSOHLNE4
"RTN","PSOHLNE3",103,0)
 ;ICD UPDATE ONLY FOR COPAYS
"RTN","PSOHLNE3",104,0)
 I ('$G(PSODCPY)&($G(PSODGUP)))&($P($G(PSOPFS),"^",2)) D CHRG^PSOPFSU1(RXN,PSOLFIL,"CG",PSOPFS) ;DIAGNOSIS UPDATE ONLY
"RTN","PSOHLNE3",105,0)
 I ($G(PSODCPY)!($G(PSODGUP))) D ALOG
"RTN","PSOHLNE3",106,0)
 Q RET
"RTN","PSOHLNE3",107,0)
 ;
"RTN","PSOHLNE3",108,0)
CPAY ;
"RTN","PSOHLNE3",109,0)
 N X,Y,III,ACTYP,BL
"RTN","PSOHLNE3",110,0)
 S PSOSITE=$P(^PSRX(RXN,2),"^",9)
"RTN","PSOHLNE3",111,0)
 S X=$P($G(^PS(59,+PSOSITE,"IB")),"^")_"^"_DFN D XTYPE^IBARX
"RTN","PSOHLNE3",112,0)
 S (ACTYP,BL)="",(PSOBILL,PSOCPAY)=0
"RTN","PSOHLNE3",113,0)
CPAY1 ;
"RTN","PSOHLNE3",114,0)
 S ACTYP=$O(Y(ACTYP)) G:'ACTYP CSKP F III=0:0 S BL=$O(Y(ACTYP,BL)) Q:BL=""  I BL>0 S PSOBILL=BL,PSOCPAY=BL_"^"_Y(ACTYP,BL)
"RTN","PSOHLNE3",115,0)
 G CPAY1
"RTN","PSOHLNE3",116,0)
CSKP ;
"RTN","PSOHLNE3",117,0)
 S:$G(PSOSI) PSOCPAY=0  ;Supply item/investigational drug
"RTN","PSOHLNE3",118,0)
 S:$P($G(^PS(53,+$G(PTSTATUS),0)),"^",7)=1 PSOCPAY=0  ;Rx Patient Status exempt
"RTN","PSOHLNE3",119,0)
 I PSOIBQC'="" S:PSOIBQC'[1 PSOCPAY=1  ;Yes SC/EI from CPRS
"RTN","PSOHLNE3",120,0)
 I (PSOBILL'>0)!(PSOCPAY=0) S PSOCPAY=0  ;INELIGIBLE
"RTN","PSOHLNE3",121,0)
 Q
"RTN","PSOHLNE3",122,0)
 ;
"RTN","PSOHLNE3",123,0)
CHOC ;check outpatient classifications
"RTN","PSOHLNE3",124,0)
 S:PSOANSQ(PSOX("IRXN"),TYPE)'=PSOOICD(52.052311,1_","_PSOX("IRXN")_",",PSOFLD,"I") PSODCPY=1
"RTN","PSOHLNE3",125,0)
 Q
"RTN","PSOHLNE3",126,0)
 ;
"RTN","PSOHLNE3",127,0)
ALOG ;set activity log with edit info from cprs
"RTN","PSOHLNE3",128,0)
 N ACNT,SUB,RF,RFCNT
"RTN","PSOHLNE3",129,0)
 S ACNT=0 F SUB=0:0 S SUB=$O(^PSRX(RXN,"A",SUB)) Q:'SUB  S ACNT=SUB
"RTN","PSOHLNE3",130,0)
 S RFCNT=0 F RF=0:0 S RF=$O(^PSRX(RXN,1,RF)) Q:'RF  S RFCNT=RF S:RF>5 RFCNT=RF+1
"RTN","PSOHLNE3",131,0)
 D NOW^%DTC S ACNT=ACNT+1
"RTN","PSOHLNE3",132,0)
 S ^PSRX(RXN,"A",0)="^52.3DA^"_ACNT_"^"_ACNT S ^PSRX(RXN,"A",ACNT,0)=%_"^"_"E"_"^^"_RFCNT_"^Clinical Indicators and SC/EI's were updated from a CPRS e-sig edit at "_$E($P(%,".",2),1,2)_":"_$E($P(%,".",2),3,4)_"."
"RTN","PSOHLNE3",133,0)
 Q
"RTN","PSOHLNE3",134,0)
 ;
"RTN","PSOHLNE3",135,0)
CHKOI ;get and compare orderable items in file #100 and #52; don't process
"RTN","PSOHLNE3",136,0)
 ;  if it's different and the placer # is null.
"RTN","PSOHLNE3",137,0)
 I '$D(ARRAY(52,RXN_",",6,"I")) S OICHK=1 Q
"RTN","PSOHLNE3",138,0)
 D GETS^DIQ(50,ARRAY(52,RXN_",",6,"I")_",","2.1","I","PSOOI")
"RTN","PSOHLNE3",139,0)
 S ORITEM2=$$GET1^DIQ(100.001,"1,"_ORIEN_",",".01","I")
"RTN","PSOHLNE3",140,0)
 S ORID=$$GET1^DIQ(101.43,ORITEM2_",","2","I") S ORID=$P(ORID,";",1)
"RTN","PSOHLNE3",141,0)
 I PSOOI(50,ARRAY(52,RXN_",",6,"I")_",",2.1,"I")'="" I PSOOI(50,ARRAY(52,RXN_",",6,"I")_",",2.1,"I")'=ORID S OICHK=1
"RTN","PSOHLNE3",142,0)
 Q
"RTN","PSOHLNE3",143,0)
TEST(ORIEN) ;manually test an individual order record
"RTN","PSOHLNE3",144,0)
 N I,X,ORSCEIS,ORSCEI,ORDX,EDFLG,ORITEM,DFN,JJ
"RTN","PSOHLNE3",145,0)
 S (JJ,I)=0 F  S I=$O(^OR(100,ORIEN,5.1,I)) Q:I=""!(I'?1N.NN)  S JJ=JJ+1,ORDX(JJ)=$G(^OR(100,ORIEN,5.1,I,0))
"RTN","PSOHLNE3",146,0)
 S ORSCEIS=^OR(100,ORIEN,5.2),ORITEM=$P($G(^OR(100,ORIEN,4)),"^",1)
"RTN","PSOHLNE3",147,0)
 S ORSCEI="" F I=3,4,1,5,2,6,7 S ORSCEI=ORSCEI_"^"_$P(ORSCEIS,"^",I)
"RTN","PSOHLNE3",148,0)
 S ORSCEI=$E(ORSCEI,2,99)
"RTN","PSOHLNE3",149,0)
 S RXN=ORITEM,DFN=$P($P(^OR(100,ORIEN,0),"^",2),";",1)
"RTN","PSOHLNE3",150,0)
 D EN^PSOHLNE3(DFN,ORITEM,ORIEN,.ORDX,ORSCEI)
"RTN","PSOHLNE3",151,0)
 Q
"RTN","PSOHLNE4")
0^17^B10329069^n/a
"RTN","PSOHLNE4",1,0)
PSOHLNE4 ;BIR/LE - Process Edit Information from CPRS - CONTINUED FROM PSOHLNE3 ;02/27/04
"RTN","PSOHLNE4",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**201**;DEC 1997
"RTN","PSOHLNE4",3,0)
 ;
"RTN","PSOHLNE4",4,0)
 ;This API is used to update the prescription file when ICD-9 diagnosis
"RTN","PSOHLNE4",5,0)
 ; and SC/EI's are updated as a result of an e-sig in CPRS.
"RTN","PSOHLNE4",6,0)
 Q
"RTN","PSOHLNE4",7,0)
COPAY ;For IB, cancel copay charges if SC<50% and SC/EI changed and released; For PFS, send charge update msgs for SC 0-100%
"RTN","PSOHLNE4",8,0)
 ;  must have PSODA,PSO,PSODAYS,PSOFLAG,PSOREF,PSOIB,PSOPAR7,PSOOLD,PSONW before call to PSOCPA
"RTN","PSOHLNE4",9,0)
 N PSODA,PSO,PSODAYS,PSOFLAG,PSOREF,PSOIB,PSZ,PSOPAR7,PSOCSEQ,PSZ1,PSZ2,RELDAT,PSOOLD,PSONW,PSOSITE,PREA,PSOFLD,PSOPFS
"RTN","PSOHLNE4",10,0)
 S PSODA=RXN,PSO=3,PSODAYS=$$GET1^DIQ(52,PSODA_",","8")
"RTN","PSOHLNE4",11,0)
 S PSOOLD="Copay"
"RTN","PSOHLNE4",12,0)
 S PSONW="No Copay"
"RTN","PSOHLNE4",13,0)
 S PSOSITE=$P(^PSRX(PSODA,2),"^",9)
"RTN","PSOHLNE4",14,0)
 S PSOPAR7=$G(^PS(59,PSOSITE,"IB"))
"RTN","PSOHLNE4",15,0)
 S PSOFLAG=1  ;1 used here to eliminate display/print of messages.
"RTN","PSOHLNE4",16,0)
CSORT ; get orig fill copay info if released.
"RTN","PSOHLNE4",17,0)
 S RELDAT=$$GET1^DIQ(52,PSODA_",","31","I")
"RTN","PSOHLNE4",18,0)
 I RELDAT'="" S PSOCSEQ("A",0)=$G(^PSRX(PSODA,"IB"))
"RTN","PSOHLNE4",19,0)
 ;I RELDAT="" S PREA="R" D:'$G(PSOSI)&(PSOSCP<50)&($P($G(^PS(53,+$G(PTSTATUS),0)),"^",7)'=1) ACTLOG^PSOCPA G SET ;set act log when unreleased, but SC/EI changed copay
"RTN","PSOHLNE4",20,0)
 I RELDAT="" S PREA="R" D:+$G(PSOCPAY)>0&(PSOIBQC[1&(PSOPIBQ'[1)) ACTLOG^PSOCPA G SET ;set act log when unreleased, but SC/EI changed copay
"RTN","PSOHLNE4",21,0)
 ; get copay info for all released refills; if any
"RTN","PSOHLNE4",22,0)
 F PSZ=0:0 S PSZ=$O(^PSRX(PSODA,1,PSZ)) Q:PSZ'>0  D
"RTN","PSOHLNE4",23,0)
 . S RELDAT="",RELDAT=$$GET1^DIQ(52.1,PSZ_","_PSODA_",","17","I")
"RTN","PSOHLNE4",24,0)
 . Q:RELDAT=""
"RTN","PSOHLNE4",25,0)
 . S PSOCSEQ("A",PSZ)=$G(^PSRX(PSODA,1,PSZ,"IB"))
"RTN","PSOHLNE4",26,0)
 ; Sort potential refills to be cancelled first starting with last fill
"RTN","PSOHLNE4",27,0)
 ;    then orig fill then the rest of the entries.
"RTN","PSOHLNE4",28,0)
 S (PSZ1,PSZ2,PSZ)="" F  S PSZ=$O(PSOCSEQ("A",PSZ),-1) Q:PSZ=""  D
"RTN","PSOHLNE4",29,0)
 . I PSZ>0&($P(PSOCSEQ("A",PSZ),"^",2)'="") S PSZ1=PSZ1+1,PSOCSEQ("B",PSZ1,PSZ)="" Q
"RTN","PSOHLNE4",30,0)
 . I PSZ>0&($P(PSOCSEQ("A",PSZ),"^",2)="") S PSZ2=PSZ2+1000,PSOCSEQ("B",PSZ2,PSZ)="" Q
"RTN","PSOHLNE4",31,0)
 . I PSZ=0&($P(PSOCSEQ("A",PSZ),"^",4)'="") S PSZ1=PSZ1+1,PSOCSEQ("B",PSZ1,PSZ)="" Q
"RTN","PSOHLNE4",32,0)
 . I PSZ=0&($P(PSOCSEQ("A",PSZ),"^",4)="") S PSZ2=PSZ2+1000,PSOCSEQ("B",PSZ2,PSZ)="" Q
"RTN","PSOHLNE4",33,0)
 ;
"RTN","PSOHLNE4",34,0)
 ;S (PSZ,PSZ1)="",PSOFLD=0,PREA="R" D:'$G(PSOSI)&(PSOSCP<50)&($P($G(^PS(53,+$G(PTSTATUS),0)),"^",7)'=1) ACTLOG^PSOCPA F  S PSZ1=$O(PSOCSEQ("B",PSZ1)) Q:PSZ1=""  D
"RTN","PSOHLNE4",35,0)
 S (PSZ,PSZ1)="",PSOFLD=0,PREA="R" D:+$G(PSOCPAY)>0&(PSOIBQC[1&(PSOPIBQ'[1)) ACTLOG^PSOCPA F  S PSZ1=$O(PSOCSEQ("B",PSZ1)) Q:PSZ1=""  D
"RTN","PSOHLNE4",36,0)
 . F  S PSZ=$O(PSOCSEQ("B",PSZ1,PSZ)) Q:PSZ=""  D
"RTN","PSOHLNE4",37,0)
 .. S (PSOREF,PSOIB)="",PSOFLD=PSOFLD+1 S PREA="C" ;$S(PSOFLD=1:"R",1:"C")
"RTN","PSOHLNE4",38,0)
 .. ;I PSOFLD>1
"RTN","PSOHLNE4",39,0)
 .. S (PSOOLD,PSONW)=""
"RTN","PSOHLNE4",40,0)
 .. S PSOREF=PSZ
"RTN","PSOHLNE4",41,0)
 .. ;
"RTN","PSOHLNE4",42,0)
 .. S PSOPFS="",PSOPFS=$P($S('PSOREF:$G(^PSRX(PSODA,"PFS")),1:$G(^PSRX(PSODA,1,PSOREF,"PFS"))),"^",1,2)
"RTN","PSOHLNE4",43,0)
 .. I +$G(PSOPFS)>0&('$P($G(PSOPFS),"^",2)) K PSOPFS Q   ;don't send unreleased charge msg
"RTN","PSOHLNE4",44,0)
 .. I +$G(PSOPFS)<1 K PSOPFS  ;invalid PFSS ACCT REF/ SEND TO IB
"RTN","PSOHLNE4",45,0)
 .. I +$G(PSOPFS)>0 S PSOPFS="1^"_PSOPFS
"RTN","PSOHLNE4",46,0)
 .. ;
"RTN","PSOHLNE4",47,0)
 .. N TYPE S PSOIB=PSOCSEQ("A",PSOREF),TYPE=PSOREF
"RTN","PSOHLNE4",48,0)
 .. I +$G(PSOPFS) D CHRG^PSOPFSU1(PSODA,PSOREF,"CG",PSOPFS) D:+$G(PSOCPAY)>0&(PSOIBQC[1&(PSOPIBQ'[1)) ACTLOG^PSOCPA Q  ;PFSS charge update only
"RTN","PSOHLNE4",49,0)
 .. I PSOSCP<50 D RXED^PSOCPA  ;IB - if SC<50 and not billed via PFSS
"RTN","PSOHLNE4",50,0)
SET S:$D(^PSRX(RXN,"IB"))&(PSOSCP<50)&('$G(PSOSI)) $P(^PSRX(RXN,"IB"),"^",1)=""
"RTN","PSOHLNE4",51,0)
 K PSOSCP
"RTN","PSOHLNE4",52,0)
 Q
"RTN","PSOHLNE4",53,0)
 ;
"RTN","PSON52")
0^1^B59816394^B58876503
"RTN","PSON52",1,0)
PSON52 ;BIR/DSD - files new entries in prescription file ;08/09/93
"RTN","PSON52",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**1,16,23,27,32,46,71,111,124,117,131,139,157,143,219,148,239,201**;DEC 1997
"RTN","PSON52",3,0)
 ;External reference ^PS(55 supported by DBIA 2228
"RTN","PSON52",4,0)
 ;External reference to PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSON52",5,0)
 ;External reference to ^XUSEC supported by DBIA 10076
"RTN","PSON52",6,0)
 ;External reference SWSTAT^IBBAPI supported by DBIA 4663
"RTN","PSON52",7,0)
EN(PSOX) ;Entry Point
"RTN","PSON52",8,0)
START ;
"RTN","PSON52",9,0)
 D:$D(XRTL) T0^%ZOSV ; Start RT Monitor
"RTN","PSON52",10,0)
 D INIT G:PSON52("QFLG") END D NFILE Q:$G(PSONEW("DFLG"))  D PS55,DIK
"RTN","PSON52",11,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV ; Stop RT Monitor
"RTN","PSON52",12,0)
 D FINISH
"RTN","PSON52",13,0)
 I $P(^PSRX(PSOX("IRXN"),0),"^",11)="W",$G(^("IB")) S ^PSRX("ACP",$P(^PSRX(PSOX("IRXN"),0),"^",2),$P(^(2),"^",2),0,PSOX("IRXN"))=""
"RTN","PSON52",14,0)
END D EOJ
"RTN","PSON52",15,0)
 Q
"RTN","PSON52",16,0)
INIT ;
"RTN","PSON52",17,0)
 K X,%DT S:$G(PSOID) PSOX("ISSUE DATE")=PSOID
"RTN","PSON52",18,0)
 S PSOX("CS")=0
"RTN","PSON52",19,0)
 F DEA=1:1 Q:$E(PSODRUG("DEA"),DEA)=""  I $E(+PSODRUG("DEA"),DEA)>1,$E(+PSODRUG("DEA"),DEA)<6 S $P(PSOX("CS"),"^")=1 S:$E(+PSODRUG("DEA"),DEA)=2 $P(PSOX("CS"),"^",2)=1
"RTN","PSON52",20,0)
 S PSON52("QFLG")=0,X1=PSOX("ISSUE DATE"),X2=PSOX("DAYS SUPPLY")*(PSOX("# OF REFILLS")+1)\1
"RTN","PSON52",21,0)
 I $D(CLOZPAT) S X2=$S(X2=14:14,X2=7:7,1:X2) G DT
"RTN","PSON52",22,0)
 S X2=$S(PSOX("DAYS SUPPLY")=X2:X2,+$G(PSOX("CS")):184,+$G(DEA("CS")):184,1:366)
"RTN","PSON52",23,0)
 I X2<30 D
"RTN","PSON52",24,0)
 . N % S %=$P($G(PSORX("PATIENT STATUS")),"^"),X2=30
"RTN","PSON52",25,0)
 . S:%?.N %=$P($G(^PS(53,+%,0)),"^") I %["AUTH ABS" S X2=5
"RTN","PSON52",26,0)
DT D C^%DTC S PSOX("STOP DATE")=$P(X,".") K X
"RTN","PSON52",27,0)
 I PSOX("# OF REFILLS")>0 S X1=PSOX("FILL DATE"),X2=$S((PSOX("DAYS SUPPLY")-10\1)<1:1,1:PSOX("DAYS SUPPLY")-10\1) D C^%DTC S PSOX("NEXT POSSIBLE REFILL")=$P(X,".") K X
"RTN","PSON52",28,0)
 S PSOX("TYPE OF RX")=0,PSOX("DISPENSED DATE")=PSOX("FILL DATE") D NOW^%DTC S PSOX("LOGIN DATE")=$S($P($G(OR0),"^",12):$P($G(OR0),"^",12),1:%) K %,X
"RTN","PSON52",29,0)
 S PSOX("STATUS")=$S($G(PSOX("STATUS"))]"":PSOX("STATUS"),$D(PSORX("VERIFY")):1,1:0)
"RTN","PSON52",30,0)
 S PSOX("COPIES")=$S($G(PSOX("COPIES"))]"":PSOX("COPIES"),1:1)
"RTN","PSON52",31,0)
 I $G(PSORX("PHARM"))]"" S PSOX("PHARMACIST")=PSORX("PHARM") K PSORX("PHARM")
"RTN","PSON52",32,0)
INITX Q
"RTN","PSON52",33,0)
 ;
"RTN","PSON52",34,0)
NFILE I $G(OR0) D  Q:$G(PSONEW("DFLG"))
"RTN","PSON52",35,0)
 .D NOOR^PSONEW Q:$G(PSONEW("DFLG"))
"RTN","PSON52",36,0)
 .I $G(PSOSIGFL)!($G(PSODRUG("OI"))'=$P(OR0,"^",8)) S PSONEW("CLERK CODE")=DUZ,PSONEW("REMARKS")=$G(PSONEW("REMARKS"))_" CPRS Order #"_$P(OR0,"^")_" Edited."
"RTN","PSON52",37,0)
 S DIC="^PSRX(",DLAYGO=52,DIC(0)="L",X=PSOX("RX #") K DD,DO D FILE^DICN S PSOX("IRXN")=+Y K DLAYGO,X,Y,DIC,DD,DO D:+$G(DGI) TECH^PSODGDGI
"RTN","PSON52",38,0)
 F PSOX1=0:1 S PSON52=$P($T(DD+PSOX1),";;",2,4) Q:PSON52=""  K PSOY S PSOY=$P(PSON52,";;") I $G(@PSOY)]"" S $P(PSON52(PSOX("IRXN"),$P(PSON52,";;",2)),"^",$P(PSON52,";;",3))=@PSOY
"RTN","PSON52",39,0)
 F I=1:1:PSOX("ENT") S ^PSRX(PSOX("IRXN"),6,I,0)=PSOX("DOSE",I)_"^"_$G(PSOX("DOSE ORDERED",I))_"^"_$G(PSOX("UNITS",I))_"^"_$G(PSOX("NOUN",I))_"^" D
"RTN","PSON52",40,0)
 .S ^PSRX(PSOX("IRXN"),6,I,0)=^PSRX(PSOX("IRXN"),6,I,0)_$G(PSOX("DURATION",I))_"^"_$G(PSOX("CONJUNCTION",I))_"^"_$G(PSOX("ROUTE",I))_"^"_$G(PSOX("SCHEDULE",I))_"^"_$G(PSOX("VERB",I))
"RTN","PSON52",41,0)
 .I $G(PSOX("ODOSE",I))]"" S ^PSRX(PSOX("IRXN"),6,I,1)=PSOX("ODOSE",I)
"RTN","PSON52",42,0)
 S ^PSRX(PSOX("IRXN"),6,0)="^52.0113^"_PSOX("ENT")_"^"_PSOX("ENT")
"RTN","PSON52",43,0)
 K PSOX1,PSOY
"RTN","PSON52",44,0)
 S PSOX1="" F  S PSOX1=$O(PSON52(PSOX("IRXN"),PSOX1)) Q:PSOX1=""  S ^PSRX(PSOX("IRXN"),PSOX1)=$G(PSON52(PSOX("IRXN"),PSOX1))
"RTN","PSON52",45,0)
 I $O(PSOX("SIG",0)) D
"RTN","PSON52",46,0)
 .S D=0 F  S D=$O(PSOX("SIG",D)) Q:'D  S ^PSRX(PSOX("IRXN"),"INS1",D,0)=PSOX("SIG",D),TP=$G(TP)+1
"RTN","PSON52",47,0)
 .S ^PSRX(PSOX("IRXN"),"INS1",0)="^52.0115^"_TP_"^"_TP_"^"_DT_"^^" K TP,D
"RTN","PSON52",48,0)
 I $G(PSOX("SINS"))]"" S ^PSRX(PSOX("IRXN"),"INSS")=PSOX("SINS")
"RTN","PSON52",49,0)
 I $G(SIGOK) D
"RTN","PSON52",50,0)
 .S $P(^PSRX(PSOX("IRXN"),"SIG"),"^",2)=1,^PSRX(PSOX("IRXN"),"SIG1",0)="^52.04A^^"
"RTN","PSON52",51,0)
 .S D=0 F  S D=$O(SIG(D)) Q:'D  S ^PSRX(PSOX("IRXN"),"SIG1",D,0)=SIG(D),$P(^PSRX(PSOX("IRXN"),"SIG1",0),"^",3)=+$P(^PSRX(PSOX("IRXN"),"SIG1",0),"^",3)+1,$P(^(0),"^",4)=+$P(^(0),"^",4)+1 Q:'$O(SIG(D))
"RTN","PSON52",52,0)
 .K SIG
"RTN","PSON52",53,0)
 I $D(PSOINSFL) S ^PSRX(PSOX("IRXN"),"A",0)="^52.3DA^1^1",^PSRX(PSOX("IRXN"),"A",1,0)=DT_"^G^^0^Patient Instructions "_$S(PSOINSFL=1:"",1:"Not ")_"Sent By Provider."
"RTN","PSON52",54,0)
 I $G(OR0) S:$P(OR0,"^",24) ^PSRX(PSOX("IRXN"),"PKI")=1
"RTN","PSON52",55,0)
 K PSOX1,PSOFINFL,HLDSIG,D,PSOINSFL,D
"RTN","PSON52",56,0)
 D:$G(^TMP("PSODAI",$J,0))
"RTN","PSON52",57,0)
 .S $P(^PSRX(PSOX("IRXN"),3),"^",6)=1
"RTN","PSON52",58,0)
 .I $O(^TMP("PSODAI",$J,0)) S DAI=0 F  S DAI=$O(^TMP("PSODAI",$J,DAI)) Q:'DAI  D
"RTN","PSON52",59,0)
 ..S:'$D(^PSRX(PSOX("IRXN"),"DAI",0)) ^PSRX(PSOX("IRXN"),"DAI",0)="^52.03^^" S ^PSRX(PSOX("IRXN"),"DAI",DAI,0)=^TMP("PSODAI",$J,DAI,0)
"RTN","PSON52",60,0)
 ..S $P(^PSRX(PSOX("IRXN"),"DAI",0),"^",3)=+$P(^PSRX(PSOX("IRXN"),"DAI",0),"^",3)+1,$P(^(0),"^",4)=+$P(^(0),"^",4)+1
"RTN","PSON52",61,0)
 .K ^TMP("PSODAI",$J),DAI
"RTN","PSON52",62,0)
 I $G(PSOX("CHCS NUMBER"))'="" S $P(^PSRX(PSOX("IRXN"),"EXT"),"^")=$G(PSOX("CHCS NUMBER"))
"RTN","PSON52",63,0)
 I $G(PSOX("EXTERNAL SYSTEM"))'="" S $P(^PSRX(PSOX("IRXN"),"EXT"),"^",2)=$G(PSOX("EXTERNAL SYSTEM"))
"RTN","PSON52",64,0)
 I $G(PSOX("NEWCOPAY")) S ^PSRX(PSOX("IRXN"),"IB")=$G(PSOX("NEWCOPAY"))
"RTN","PSON52",65,0)
 ;Next line, set SC question based on Copay status?
"RTN","PSON52",66,0)
IBQ ;I $G(PSOBILL)=2 S ^PSRX(PSOX("IRXN"),"IBQ")=$S($G(PSOX("NEWCOPAY")):0,1:1)
"RTN","PSON52",67,0)
 N PSOSCFLD S PSOSCFLD=$S(PSOSCP'="":$G(PSOANSQ("SC")),1:"")_"^"_$G(PSOANSQ("MST"))_"^"_$G(PSOANSQ("VEH"))_"^"_$G(PSOANSQ("RAD"))_"^"_$G(PSOANSQ("PGW"))_"^"_$G(PSOANSQ("HNC"))_"^"_$G(PSOANSQ("CV"))
"RTN","PSON52",68,0)
 I PSOSCP<50&($TR(PSOSCFLD,"^")'="")&($P($G(^PS(53,+$G(PSONEW("PATIENT STATUS")),0)),"^",7)'=1) D
"RTN","PSON52",69,0)
 . S ^PSRX(PSOX("IRXN"),"IBQ")=PSOSCFLD K PSOSCFLD  ;don't set if SC % is null or 0, just set it in ICD node
"RTN","PSON52",70,0)
 D ICD^PSODIAG
"RTN","PSON52",71,0)
 D:$$SWSTAT^IBBAPI() GACT^PSOPFSU0(PSOX("IRXN"),0)
"RTN","PSON52",72,0)
 K PSOANSQ,PSOANSQD,PSOX("NEWCOPAY")
"RTN","PSON52",73,0)
 L -^PSRX("B",PSOX("IRXN"))
"RTN","PSON52",74,0)
 Q
"RTN","PSON52",75,0)
 ;
"RTN","PSON52",76,0)
PS55 ;
"RTN","PSON52",77,0)
 L +^PS(55,PSODFN,"P"):0
"RTN","PSON52",78,0)
 S:'$D(^PS(55,PSODFN,"P",0)) ^(0)="^55.03PA^^"
"RTN","PSON52",79,0)
 F PSOX1=$P(^PS(55,PSODFN,"P",0),"^",3):1 Q:'$D(^PS(55,PSODFN,"P",PSOX1))
"RTN","PSON52",80,0)
 S PSOX("55 IEN")=PSOX1
"RTN","PSON52",81,0)
 S ^PS(55,PSODFN,"P",PSOX1,0)=PSOX("IRXN"),$P(^PS(55,PSODFN,"P",0),"^",3,4)=PSOX1_"^"_($P(^PS(55,PSODFN,"P",0),"^",4)+1)
"RTN","PSON52",82,0)
 S ^PS(55,PSODFN,"P","A",PSONEW("STOP DATE"),PSOX("IRXN"))=""
"RTN","PSON52",83,0)
PS55X L -^PS(55,PSODFN,"P")
"RTN","PSON52",84,0)
 K PSOX1
"RTN","PSON52",85,0)
 Q
"RTN","PSON52",86,0)
DIK ;
"RTN","PSON52",87,0)
 I $D(^XUSEC("PSORPH",DUZ)) S DA=PSOX("IRXN"),DIE=52,DR="41////"_PSOCOU_";S:'X Y=""@1"";42////"_PSOCOUU_";@1" D ^DIE K DIE,DR
"RTN","PSON52",88,0)
 K DIK,DA S DIK="^PSRX(",DA=PSOX("IRXN") D IX1^DIK K DIK
"RTN","PSON52",89,0)
 S DA=PSOX("IRXN") D ORC^PSORN52C
"RTN","PSON52",90,0)
 Q
"RTN","PSON52",91,0)
FINISH ;
"RTN","PSON52",92,0)
ANQ I $G(ANQDATA)]"" D NOW^%DTC G:$D(^PS(52.52,"B",%)) ANQ D
"RTN","PSON52",93,0)
 .K DD,DO S DIC="^PS(52.52,",DIC(0)="L",DLAYGO=52.52,X=% D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","PSON52",94,0)
 .S ^PS(52.52,+Y,0)=$P(Y,"^",2)_"^"_PSOX("IRXN")_"^"_ANQDATA,^PS(52.52,"A",PSOX("IRXN"),+Y)="" K ANQDATA,X,Y,%,ANQREM
"RTN","PSON52",95,0)
 G:PSOX("STATUS")=4 FINISHP
"RTN","PSON52",96,0)
 I $D(PSORX("VERIFY")) D  G FINISHX
"RTN","PSON52",97,0)
 .K DIC,DLAYGO,DINUM,DIADD,X,DD,DO S DIC="^PS(52.4,",DLAYGO=52.4,DINUM=PSOX("IRXN"),DIC(0)="ML",X=PSOX("IRXN")
"RTN","PSON52",98,0)
 .D FILE^DICN K DD,DO,DIC,DLAYGO,DINUM S ^PS(52.4,PSOX("IRXN"),0)=PSOX("IRXN")_"^"_PSODFN_"^"_DUZ_"^"_"^"_$E(PSOX("LOGIN DATE"),1,7)_"^"_PSOX("IRXN")_"^"_PSOX("STOP DATE")
"RTN","PSON52",99,0)
 .K DIK,DA S DIK="^PS(52.4,",DA=PSOX("IRXN") D IX^DIK K DIK,DA
"RTN","PSON52",100,0)
 ;
"RTN","PSON52",101,0)
 I PSOX("FILL DATE")>DT,$P(PSOPAR,"^",6) S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=0 D SUS^PSORXL K DA G FINISHX
"RTN","PSON52",102,0)
 ;
"RTN","PSON52",103,0)
 ; - Calling ECME for claims generation and transmission / REJECT handling
"RTN","PSON52",104,0)
 N ACTION
"RTN","PSON52",105,0)
 I $$SUBMIT^PSOBPSUT(PSOX("IRXN"),0) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSON52",106,0)
 . S ACTION="" D ECMESND^PSOBPSU1(PSOX("IRXN"),0,PSOX("FILL DATE"),"OF")
"RTN","PSON52",107,0)
 . I $$FIND^PSOREJUT(PSOX("IRXN"),0) D
"RTN","PSON52",108,0)
 . . S ACTION=$$HDLG^PSOREJU1(PSOX("IRXN"),0,"79,88","OF","IOQ","I")
"RTN","PSON52",109,0)
 ;
"RTN","PSON52",110,0)
FINISHP ;
"RTN","PSON52",111,0)
 I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSOX("IRXN")_",",RXFL(PSOX("IRXN"))=0 G FINISHX
"RTN","PSON52",112,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSON52",113,0)
 I $L(PSORX("PSOL",PSOX2))+$L(PSOX("IRXN"))<220 S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_PSOX("IRXN")_","
"RTN","PSON52",114,0)
 E  S PSORX("PSOL",PSOX2+1)=PSOX("IRXN")_","
"RTN","PSON52",115,0)
 S RXFL(PSOX("IRXN"))=0
"RTN","PSON52",116,0)
FINISHX ;call to build Rx array for bingo board
"RTN","PSON52",117,0)
 I $G(PSORX("MAIL/WINDOW"))["W" S BINGCRT=1,BINGRTE="W",BBFLG=1 D BBRX^PSORN52C
"RTN","PSON52",118,0)
 K PSOX1,PSOX2
"RTN","PSON52",119,0)
 Q
"RTN","PSON52",120,0)
EOJ ;
"RTN","PSON52",121,0)
 ;B xref locked in routine PSONRXN
"RTN","PSON52",122,0)
 L -^PSRX("B",PSOX("IRXN")) K OTHDOS,DA,PSON52,PSOPRC,RTE,SCH,PSOX("INS"),PSONEW("INS"),PSORXED("INS"),PSONEW("ENT"),PSORXED("ENT"),OLENT
"RTN","PSON52",123,0)
 D PSOUL^PSSLOCK(PSOX("IRXN"))
"RTN","PSON52",124,0)
 Q
"RTN","PSON52",125,0)
 ;
"RTN","PSON52",126,0)
 ;;PSOX("SIG");;SIG;;1
"RTN","PSON52",127,0)
DD ;;PSOX("RX #");;0;;1
"RTN","PSON52",128,0)
 ;;PSOX("ISSUE DATE");;0;;13
"RTN","PSON52",129,0)
 ;;PSODFN;;0;;2
"RTN","PSON52",130,0)
 ;;PSOX("PATIENT STATUS");;0;;3
"RTN","PSON52",131,0)
 ;;PSOX("PROVIDER");;0;;4
"RTN","PSON52",132,0)
 ;;PSOX("CLINIC");;0;;5
"RTN","PSON52",133,0)
 ;;PSODRUG("IEN");;0;;6
"RTN","PSON52",134,0)
 ;;PSODRUG("TRADE NAME");;TN;;1
"RTN","PSON52",135,0)
 ;;PSOX("QTY");;0;;7
"RTN","PSON52",136,0)
 ;;PSOX("DAYS SUPPLY");;0;;8
"RTN","PSON52",137,0)
 ;;PSOX("# OF REFILLS");;0;;9
"RTN","PSON52",138,0)
 ;;PSOX("COPIES");;0;;18
"RTN","PSON52",139,0)
 ;;PSOX("MAIL/WINDOW");;0;;11
"RTN","PSON52",140,0)
 ;;PSOX("REMARKS");;3;;7
"RTN","PSON52",141,0)
 ;;PSOX("CLERK CODE");;0;;16
"RTN","PSON52",142,0)
 ;;PSODRUG("COST");;0;;17
"RTN","PSON52",143,0)
 ;;PSOSITE;;2;;9
"RTN","PSON52",144,0)
 ;;PSOX("LOGIN DATE");;2;;1
"RTN","PSON52",145,0)
 ;;PSOX("FILL DATE");;2;;2
"RTN","PSON52",146,0)
 ;;PSOX("PHARMACIST");;2;;3
"RTN","PSON52",147,0)
 ;;PSOX("LOT #");;2;;4
"RTN","PSON52",148,0)
 ;;PSOX("DISPENSED DATE");;2;;5
"RTN","PSON52",149,0)
 ;;PSOX("STOP DATE");;2;;6
"RTN","PSON52",150,0)
 ;;PSODRUG("NDC");;2;;7
"RTN","PSON52",151,0)
 ;;PSODRUG("DAW");;EPH;;1
"RTN","PSON52",152,0)
 ;;PSODRUG("MANUFACTURER");;2;;8
"RTN","PSON52",153,0)
 ;;PSOX("EXPIRATION DATE");;2;;11
"RTN","PSON52",154,0)
 ;;PSOX("GENERIC PROVIDER");;2;;12
"RTN","PSON52",155,0)
 ;;PSOX("RELEASED DATE/TIME");;2;;13
"RTN","PSON52",156,0)
 ;;PSOX("METHOD OF PICK-UP");;MP;;1
"RTN","PSON52",157,0)
 ;;PSOX("STATUS");;STA;;1
"RTN","PSON52",158,0)
 ;;PSOX("LAST DISPENSED DATE");;3;;1
"RTN","PSON52",159,0)
 ;;PSOX("NEXT POSSIBLE REFILL");;3;;2
"RTN","PSON52",160,0)
 ;;PSOX("COSIGNING PROVIDER");;3;;3
"RTN","PSON52",161,0)
 ;;PSOX("TYPE OF RX");;TYPE;;1
"RTN","PSON52",162,0)
 ;;PSOX("SAND");;SAND;;1
"RTN","PSON52",163,0)
 ;;PSOX("POE");;POE;;1
"RTN","PSON52",164,0)
 ;;PSOX("INS");;INS;;1
"RTN","PSOPFSU0")
0^13^B16719657^n/a
"RTN","PSOPFSU0",1,0)
PSOPFSU0 ;BIR/LE,AM - PFSS Get Account & Utilities ;08/09/93
"RTN","PSOPFSU0",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**201**;DEC 1997
"RTN","PSOPFSU0",3,0)
 ;External reference SWSTAT^IBBAPI supported by DBIA 4663
"RTN","PSOPFSU0",4,0)
 ;External reference GETACCT^IBBAPI supported by DBIA 4664
"RTN","PSOPFSU0",5,0)
 ;External reference ^DG(40.8,"AD" supported by DBIA 2817
"RTN","PSOPFSU0",6,0)
 Q
"RTN","PSOPFSU0",7,0)
 ;
"RTN","PSOPFSU0",8,0)
GACT(PSORXN,PSOREF) ;ENTRY POINT: Called from PSON52; PSOR52, PSORN52.  Get a PFSS acct ref
"RTN","PSOPFSU0",9,0)
 ; This routine is only called when the PFSS Switch is on.   
"RTN","PSOPFSU0",10,0)
 ;
"RTN","PSOPFSU0",11,0)
 N I,J,PSOPFSAC,PSOPV1,PSODG,PSOZCL,PSODFN,PSORX,PSOPV2,PSODIV
"RTN","PSOPFSU0",12,0)
 ;for sending to an external billing system, get data from file 52, build arrays for IBB API call
"RTN","PSOPFSU0",13,0)
 I PSOREF=0 D GACTOF
"RTN","PSOPFSU0",14,0)
 I PSOREF>0 D GACTRF
"RTN","PSOPFSU0",15,0)
 ;Get general Rx data fields
"RTN","PSOPFSU0",16,0)
 S PSODIV=$$MCDIV(PSORXN,PSOREF)
"RTN","PSOPFSU0",17,0)
 S PSODFN=$$GET1^DIQ(52,PSORXN,"2","I")
"RTN","PSOPFSU0",18,0)
 S PSOPV1(2)="O",PSOPV1(50)=PSORXN
"RTN","PSOPFSU0",19,0)
 S PSOPV1(3)=$$CHLOC()
"RTN","PSOPFSU0",20,0)
 Q:PSOPV1(3)="" 0  ;can't do GETACCT if CHARGE LOCATION is null; this is to be address in subsequent PFSS project phase
"RTN","PSOPFSU0",21,0)
 ;request the PFSS Acct Rev
"RTN","PSOPFSU0",22,0)
 S PSOPFSAC=$$GETACCT^IBBAPI(PSODFN,"","A04","GACT;PSOPFSU0",.PSOPV1,"","",.PSODG,.PSOZCL,PSODIV,"")
"RTN","PSOPFSU0",23,0)
 ;Store the PFS Acct Ref with speed in mind
"RTN","PSOPFSU0",24,0)
 Q:PSOPFSAC<1 ""
"RTN","PSOPFSU0",25,0)
 I PSOREF=0 S $P(^PSRX(PSORXN,"PFS"),"^")=PSOPFSAC
"RTN","PSOPFSU0",26,0)
 I PSOREF>0 S $P(^PSRX(PSORXN,1,PSOREF,"PFS"),"^")=PSOPFSAC
"RTN","PSOPFSU0",27,0)
 Q PSOPFSAC
"RTN","PSOPFSU0",28,0)
 ;
"RTN","PSOPFSU0",29,0)
GACTOF ;Get orig fill data
"RTN","PSOPFSU0",30,0)
 D GETS^DIQ(52,PSORXN,"4;22","I","PSORX")
"RTN","PSOPFSU0",31,0)
 S PSOPV1(7)=$G(PSORX(52,PSORXN_",",4,"I")),PSOPV1(44)=$G(PSORX(52,PSORXN_",",22,"I"))
"RTN","PSOPFSU0",32,0)
 D GOC
"RTN","PSOPFSU0",33,0)
 Q
"RTN","PSOPFSU0",34,0)
 ;
"RTN","PSOPFSU0",35,0)
GACTRF ;Called from GACT. Get refill data
"RTN","PSOPFSU0",36,0)
 D GETS^DIQ(52.1,PSOREF_","_PSORXN,".01;15","I","PSORX")
"RTN","PSOPFSU0",37,0)
 S PSOPV1(7)=$G(PSORX(52.1,PSOREF_","_PSORXN_",","15","I"))
"RTN","PSOPFSU0",38,0)
 S PSOPV1(44)=$G(PSORX(52.1,PSOREF_","_PSORXN_",",".01","I"))
"RTN","PSOPFSU0",39,0)
 D GOC
"RTN","PSOPFSU0",40,0)
 Q
"RTN","PSOPFSU0",41,0)
 ;
"RTN","PSOPFSU0",42,0)
CHLOC() ;FIND CHARGE LOCATION
"RTN","PSOPFSU0",43,0)
 N CHLOC,CL,PDIV
"RTN","PSOPFSU0",44,0)
 I PSOREF=0 S PDIV=$$GET1^DIQ(52,PSORXN,"20","I")   ;DIVISION
"RTN","PSOPFSU0",45,0)
 I PSOREF>0 S PDIV=$$GET1^DIQ(52.1,PSOREF_","_PSORXN_",","8","I")
"RTN","PSOPFSU0",46,0)
 S CHLOC=$$GET1^DIQ(59,PDIV,1007,"I") ;Charge location pointer
"RTN","PSOPFSU0",47,0)
 I CHLOC="" S CL="" D CLOK S:CL>0 CHLOC=CL
"RTN","PSOPFSU0",48,0)
 Q CHLOC
"RTN","PSOPFSU0",49,0)
 ;
"RTN","PSOPFSU0",50,0)
GOC ;Called from GACTOF and GACTRF.  Parse OP classifications and ICD's.  Don't send null values.
"RTN","PSOPFSU0",51,0)
 D GETS^DIQ(52,PSORXN,"52311*","I","PSORX")
"RTN","PSOPFSU0",52,0)
 F I=1:1 Q:'$D(PSORX(52.052311,I_","_PSORXN_","))  D
"RTN","PSOPFSU0",53,0)
 . S:PSORX(52.052311,I_","_PSORXN_",",".01","I")'="" PSODG(I,3)=PSORX(52.052311,I_","_PSORXN_",",".01","I"),PSODG(I,6)="W"
"RTN","PSOPFSU0",54,0)
 . I I=1 F J=1:1:7 Q:'$D(PSORX(52.052311,I_","_PSORXN_",",J,"I"))  D
"RTN","PSOPFSU0",55,0)
 . . S:PSORX(52.052311,I_","_PSORXN_",",J,"I")'="" PSOZCL(J,2)=J,PSOZCL(J,3)=PSORX(52.052311,I_","_PSORXN_",",J,"I")
"RTN","PSOPFSU0",56,0)
 S:'$D(PSOZCL) PSOZCL="" S:'$D(PSODG) PSODG=""
"RTN","PSOPFSU0",57,0)
 Q
"RTN","PSOPFSU0",58,0)
 ;
"RTN","PSOPFSU0",59,0)
RPH(PSORXN,PSOREF) ;API entry point
"RTN","PSOPFSU0",60,0)
 ;       Inputs:  PSORXN = prescription IEN, PSOREF = fill number
"RTN","PSOPFSU0",61,0)
 ;       Outputs: PSORPH = rel pharm IEN ^ user IEN who performed last activity or rel pharm iF no activity entries^
"RTN","PSOPFSU0",62,0)
 ;                   IB Service Section pointer from file 59
"RTN","PSOPFSU0",63,0)
 ;       Returns null values when the Rx is not released or the input values are invalid (i.e. "^^").
"RTN","PSOPFSU0",64,0)
 N I,II,IBSS,DIV,PSORPH,PSOEDPH,PSOA,PSORDT,PSOOK,PSOA,DATA
"RTN","PSOPFSU0",65,0)
 S PSOOK=$$CHKRX(PSORXN,PSOREF) Q:PSOOK'=1 "^^"
"RTN","PSOPFSU0",66,0)
 I 'PSOREF D GETS^DIQ(52,PSORXN,"20;23;31","I","DATA")
"RTN","PSOPFSU0",67,0)
 E  D GETS^DIQ(52.1,PSOREF_","_PSORXN,"4;8;17","I","DATA")
"RTN","PSOPFSU0",68,0)
 I PSOREF=0 D
"RTN","PSOPFSU0",69,0)
 . S PSORPH=+$G(DATA(52,PSORXN_",",23,"I")) S:PSORPH=0 PSORPH=""
"RTN","PSOPFSU0",70,0)
 . S DIV=+$G(DATA(52,PSORXN_",",20,"I"))
"RTN","PSOPFSU0",71,0)
 . S PSORDT=+$G(DATA(52,PSORXN_",",31,"I"))
"RTN","PSOPFSU0",72,0)
 I PSOREF>0 D
"RTN","PSOPFSU0",73,0)
 . S PSORPH=+$G(DATA(52.1,PSOREF_","_PSORXN_",",4,"I")) S:PSORPH=0 PSORPH=""
"RTN","PSOPFSU0",74,0)
 . S DIV=+$G(DATA(52.1,PSOREF_","_PSORXN_",",8,"I"))
"RTN","PSOPFSU0",75,0)
 . S PSORDT=+$G(DATA(52.1,PSOREF_","_PSORXN_",",17,"I"))
"RTN","PSOPFSU0",76,0)
 Q:PSORDT=0 "^^"
"RTN","PSOPFSU0",77,0)
 ;last activity - get last one with a user
"RTN","PSOPFSU0",78,0)
 I $D(^PSRX(PSORXN,"A",0)) S PSOA=$P(^PSRX(PSORXN,"A",0),"^",3) D
"RTN","PSOPFSU0",79,0)
 . F II=PSOA:-1:1 S PSOEDPH=$$GET1^DIQ(52.3,II_","_PSORXN_",",".03","I") Q:PSOEDPH'=""
"RTN","PSOPFSU0",80,0)
 ;get IB Service Section (requested by Ed Z. on 6/29/05)
"RTN","PSOPFSU0",81,0)
 S IBSS=$P($G(^PS(59,DIV,"IB")),"^")
"RTN","PSOPFSU0",82,0)
 S:'$G(PSOEDPH) PSOEDPH=PSORPH
"RTN","PSOPFSU0",83,0)
 S PSORPH=$G(PSORPH)_"^"_$G(PSOEDPH)_"^"_$G(IBSS)
"RTN","PSOPFSU0",84,0)
 Q PSORPH
"RTN","PSOPFSU0",85,0)
 ;
"RTN","PSOPFSU0",86,0)
CHKRX(PSORX,PSOF) ;validates Rx & fill. 0=not valid, 1=valid, 2=refill not valid
"RTN","PSOPFSU0",87,0)
 Q:PSORX=""!(PSOF="") 0
"RTN","PSOPFSU0",88,0)
 Q:'$D(^PSRX(PSORX)) 0
"RTN","PSOPFSU0",89,0)
 Q:PSOF>0&('$D(^PSRX(PSORX,1,PSOF))) 2
"RTN","PSOPFSU0",90,0)
 Q 1
"RTN","PSOPFSU0",91,0)
 ;
"RTN","PSOPFSU0",92,0)
MCDIV(RX,FILL) ;Get MC DIVISION from the Rx/Fill
"RTN","PSOPFSU0",93,0)
 N DIV,INST
"RTN","PSOPFSU0",94,0)
 ; outpatient division
"RTN","PSOPFSU0",95,0)
 I 'FILL S DIV=$$GET1^DIQ(52,RX,20,"I")
"RTN","PSOPFSU0",96,0)
 E  S DIV=$$GET1^DIQ(52.1,FILL_","_RX,8,"I")
"RTN","PSOPFSU0",97,0)
 Q:'DIV ""
"RTN","PSOPFSU0",98,0)
 ; related institution
"RTN","PSOPFSU0",99,0)
 S INST=$$GET1^DIQ(59,DIV,100,"I") Q:'INST ""
"RTN","PSOPFSU0",100,0)
 S DIV=$O(^DG(40.8,"AD",INST,0)) ; pointer to medical center division
"RTN","PSOPFSU0",101,0)
 Q DIV
"RTN","PSOPFSU0",102,0)
 ;
"RTN","PSOPFSU0",103,0)
CLOK ;
"RTN","PSOPFSU0",104,0)
 N I S I=0 F  S I=$O(^PS(59,I)) Q:'I!(CL>0)  D
"RTN","PSOPFSU0",105,0)
 . I $S('$D(^PS(59,I,"I")):1,'+$P(^("I"),"^"):1,DT'>+$P(^("I"),"^"):1,1:0) S CL=$P($G(^PS(59,I,"PFS")),"^")
"RTN","PSOPFSU0",106,0)
 Q
"RTN","PSOPFSU0",107,0)
 ;
"RTN","PSOPFSU1")
0^14^B33416408^n/a
"RTN","PSOPFSU1",1,0)
PSOPFSU1 ;BIR/LE,AM - PFSS Charge Message & Utilities ;08/09/93
"RTN","PSOPFSU1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**201**;DEC 1997
"RTN","PSOPFSU1",3,0)
 ;External reference CHARGE^IBBAPI and GETCHGID^IBBAPI supported by DBIA 4665
"RTN","PSOPFSU1",4,0)
 Q
"RTN","PSOPFSU1",5,0)
 ;
"RTN","PSOPFSU1",6,0)
CHRG(PSORXN,PSOREF,PSOCHTYP,PSOPFS) ;ENTRY POINT:  
"RTN","PSOPFSU1",7,0)
 ;Used to pass charge msg info to an external billing system via IBB API's   
"RTN","PSOPFSU1",8,0)
 ;       Inputs:  PSORXN = RX IEN, PSOREF = fill number, PSOCHTYP = "CG" for Charge or "CD" for Credit transaction,
"RTN","PSOPFSU1",9,0)
 ;                PSOPFS = switch status (0 or 1) ^ PFSS Account Reference for the fill ^ PFSS Charge ID for the fill
"RTN","PSOPFSU1",10,0)
 ;       Outputs:  none
"RTN","PSOPFSU1",11,0)
 ;       
"RTN","PSOPFSU1",12,0)
 N I,CLDIV,IFN,J,PSODG,PSOZCL,PSOCHID,PSOPFSA,PSODFN,PSORX,PSOFT1,PSODRG,PSODRUG,PSORXE,PSOCHG,PSOFD,PSOFT,PSOFLD
"RTN","PSOPFSU1",13,0)
 ; quit if PFSS switch is off or not defined
"RTN","PSOPFSU1",14,0)
 Q:'+$G(PSOPFS)
"RTN","PSOPFSU1",15,0)
 ;
"RTN","PSOPFSU1",16,0)
 ; check for CHARGE LOCATION before processing charge message.
"RTN","PSOPFSU1",17,0)
 S CLDIV=$$CHLOC^PSOPFSU0()
"RTN","PSOPFSU1",18,0)
 Q:CLDIV<1  ;if no CHARGE LOCATION, don't send charge message to either IB or external billing system.
"RTN","PSOPFSU1",19,0)
 ;
"RTN","PSOPFSU1",20,0)
 ; check for PFSS Acct Reference; if not one define, request one
"RTN","PSOPFSU1",21,0)
 S PSOPFSA=$P(PSOPFS,"^",2)
"RTN","PSOPFSU1",22,0)
 I PSOPFSA<1 D PFSI(PSORXN,PSOREF) S PSOPFSA=$P(PSOPFS,"^",2) I PSOPFSA<1 D  ;because PSOCP is too large, need to check for/get them here
"RTN","PSOPFSU1",23,0)
 .S PSOPFSA=$$GACT^PSOPFSU0(PSORXN,PSOREF)
"RTN","PSOPFSU1",24,0)
 Q:PSOPFSA<1  ;Normally IB returns an acct ref or zero for unsuccessful if a problem is encountered.  
"RTN","PSOPFSU1",25,0)
 ; If IBB didn't return a value, don't send charge message because IBB will produce a hard error.  Subsequent phase of PFSS will provide further error handling.
"RTN","PSOPFSU1",26,0)
 ;
"RTN","PSOPFSU1",27,0)
 ; check for PFSS Charge ID. If no charge ID, means Rx never sent to external bill sys or there was a problem retrieve one.
"RTN","PSOPFSU1",28,0)
 S PSOCHID=$P(PSOPFS,"^",3)
"RTN","PSOPFSU1",29,0)
 ;If no Charge ID is  defined, request a Unique Charge ID and store it in file 52
"RTN","PSOPFSU1",30,0)
 I PSOCHID<1 S PSOCHID=$$GETCHGID^IBBAPI() I PSOCHID>0 D
"RTN","PSOPFSU1",31,0)
 . I PSOREF=0 S $P(^PSRX(PSORXN,"PFS"),"^",2)=PSOCHID  ;set directly for speed (CMOPs, etc.)
"RTN","PSOPFSU1",32,0)
 . I PSOREF>0 S $P(^PSRX(PSORXN,1,PSOREF,"PFS"),"^",2)=PSOCHID
"RTN","PSOPFSU1",33,0)
 Q:PSOCHID<1  ;no charge message will be sent if can't get a PFSS CHARGE ID from IB.  Subsequent phase of PFSS will provide error handling for this type problem.
"RTN","PSOPFSU1",34,0)
 ;Retrieve all fields to pass for the charge message
"RTN","PSOPFSU1",35,0)
 S PSOFT="4,10,21" I PSOREF=0 D CHRGOF
"RTN","PSOPFSU1",36,0)
 I PSOREF>0 D CHRGRF
"RTN","PSOPFSU1",37,0)
 ;Get general Rx data fields
"RTN","PSOPFSU1",38,0)
 D GETS^DIQ(52,PSORXN,"2;3;6;105","I","PSORX")
"RTN","PSOPFSU1",39,0)
 S PSOFT1(29)=$$NDC^PSOHDR(PSORXN,PSOREF,$S(PSOREF>0:"R",1:""))
"RTN","PSOPFSU1",40,0)
 S PSODFN=$G(PSORX(52,PSORXN_",",2,"I")),PSODRG=$G(PSORX(52,PSORXN_",",6,"I")),PSOFT1(31)=$G(PSORX(52,PSORXN_",",105,"I"))
"RTN","PSOPFSU1",41,0)
 D DATA^PSS50(PSODRG,,,,,"PSOSC")
"RTN","PSOPFSU1",42,0)
 ;S PSOFT1(2)="PSO"_PSORXN_"F"_PSOREF  ;12/6/05; DECISION MADE TO NOT SEND clinicial event indicator FOR OP
"RTN","PSOPFSU1",43,0)
 S PSOFT1(7)=$G(^TMP($J,"PSOSC",PSODRG,400)),PSOFT1(6)=PSOCHTYP,PSOFT1(13)=160
"RTN","PSOPFSU1",44,0)
 S PSOFT1(18)=$G(PSORX(52,PSORXN_",",3,"I")),PSOFT1(18)=$$GET1^DIQ(53,PSOFT1(18)_",",15,"I")
"RTN","PSOPFSU1",45,0)
 S PSOFT1(22)=$FN($G(^TMP($J,"PSOSC",PSODRG,16)),"",2),PSOFT1(29)=PSOFT1(29)_";"_$G(^TMP($J,"PSOSC",PSODRG,.01))
"RTN","PSOPFSU1",46,0)
 S PSORXE(31)=$G(^TMP($J,"PSOSC",PSODRG,3)),PSORXE(17)=PSOREF
"RTN","PSOPFSU1",47,0)
 S:(PSORXE(18)="") PSORXE(18)=$G(RELDT)  ;CMOP
"RTN","PSOPFSU1",48,0)
 S PSORXE(15)=PSORXN
"RTN","PSOPFSU1",49,0)
 S PSOCHG=$$CHARGE^IBBAPI(PSODFN,PSOPFSA,PSOCHTYP,PSOCHID,.PSOFT1,"",.PSODG,.PSOZCL,.PSORXE,"","")
"RTN","PSOPFSU1",50,0)
 ;errors to be handled in subsequent phase
"RTN","PSOPFSU1",51,0)
 K ^TMP($J,"PSOSC")
"RTN","PSOPFSU1",52,0)
 Q
"RTN","PSOPFSU1",53,0)
 ;
"RTN","PSOPFSU1",54,0)
CHRGOF ;Retrieve charge fields for orig fills
"RTN","PSOPFSU1",55,0)
 D GETS^DIQ(52,PSORXN,"4;7;8;22;31;125","I","PSORX")
"RTN","PSOPFSU1",56,0)
 S PSOFD="22,7,4"
"RTN","PSOPFSU1",57,0)
 F I=1:1 S PSOFLD=$P(PSOFD,",",I) Q:PSOFLD=""  S PSOFT1($P(PSOFT,",",I))=$G(PSORX(52,PSORXN_",",$P(PSOFD,",",I),"I"))
"RTN","PSOPFSU1",58,0)
 S PSOPFSA=$G(PSORX(52,PSORXN_",",125,"I")),PSORXE(18)=$G(PSORX(52,PSORXN_",",31,"I"))
"RTN","PSOPFSU1",59,0)
 S PSORXE(1)=PSOFT1(10)_";;"_$G(PSORX(52,PSORXN_",",8,"I"))
"RTN","PSOPFSU1",60,0)
 D GOC
"RTN","PSOPFSU1",61,0)
 Q
"RTN","PSOPFSU1",62,0)
 ;
"RTN","PSOPFSU1",63,0)
CHRGRF ;Retrieve charge fields for refills
"RTN","PSOPFSU1",64,0)
 D GETS^DIQ(52.1,PSOREF_","_PSORXN,".01;1;1.1;15;17;21","I","PSORX")
"RTN","PSOPFSU1",65,0)
 S PSOFD=".01,1,15"
"RTN","PSOPFSU1",66,0)
 F I=1:1 S PSOFLD=$P(PSOFD,",",I) Q:PSOFLD=""  S PSOFT1($P(PSOFT,",",I))=$G(PSORX(52.1,PSOREF_","_PSORXN_",",$P(PSOFD,",",I),"I"))
"RTN","PSOPFSU1",67,0)
 S PSOPFSA=$G(PSORX(52.1,PSOREF_","_PSORXN_",",21,"I")),PSORXE(18)=$G(PSORX(52.1,PSOREF_","_PSORXN_",",17,"I"))
"RTN","PSOPFSU1",68,0)
 S PSORXE(1)=PSOFT1(10)_";;"_$G(PSORX(52.1,PSOREF_","_PSORXN_",",1.1,"I"))
"RTN","PSOPFSU1",69,0)
 D GOC
"RTN","PSOPFSU1",70,0)
 Q
"RTN","PSOPFSU1",71,0)
 ;
"RTN","PSOPFSU1",72,0)
GOC ;Called from CHRGOF, CHRGRF.  Parse OP classifications and ICD's.  Don't send null values.
"RTN","PSOPFSU1",73,0)
 D GETS^DIQ(52,PSORXN,"52311*","I","PSORX")
"RTN","PSOPFSU1",74,0)
 F I=1:1 Q:'$D(PSORX(52.052311,I_","_PSORXN_","))  D
"RTN","PSOPFSU1",75,0)
 . S:PSORX(52.052311,I_","_PSORXN_",",".01","I")'="" PSODG(I,3)=PSORX(52.052311,I_","_PSORXN_",",".01","I"),PSODG(I,6)="F"
"RTN","PSOPFSU1",76,0)
 . I I=1 F J=1:1:7 Q:'$D(PSORX(52.052311,I_","_PSORXN_",",J,"I"))  D
"RTN","PSOPFSU1",77,0)
 . . S:PSORX(52.052311,I_","_PSORXN_",",J,"I")'="" PSOZCL(J,2)=J,PSOZCL(J,3)=PSORX(52.052311,I_","_PSORXN_",",J,"I")
"RTN","PSOPFSU1",78,0)
 S:'$D(PSOZCL) PSOZCL="" S:'$D(PSODG) PSODG=""
"RTN","PSOPFSU1",79,0)
 Q
"RTN","PSOPFSU1",80,0)
 ;
"RTN","PSOPFSU1",81,0)
CG ;Called from PSOCPB; for the last fill, send chrg message if released; PSOCPB too large for more code.
"RTN","PSOPFSU1",82,0)
 ; this is used for SC/EI changes when no charges are cancelled.  Expects to have PSODA = RXIEN and PSOLFIL= fill#
"RTN","PSOPFSU1",83,0)
 ;N REL,PFS
"RTN","PSOPFSU1",84,0)
 ;I 'PSOLFIL S REL=$$GET1^DIQ(52,PSODA_",","31","I")
"RTN","PSOPFSU1",85,0)
 ;I PSOLFIL>0 S REL=$$GET1^DIQ(52.1,PSOLFIL_","_PSODA_",","17","I")  ;REFILL
"RTN","PSOPFSU1",86,0)
 ;I REL'=""&(PSOPFS)&(+$G(PSOPFSA)) D CHRG(PSODA,PSOLFIL,"CG",PSOPFS)
"RTN","PSOPFSU1",87,0)
 Q
"RTN","PSOPFSU1",88,0)
 ;
"RTN","PSOPFSU1",89,0)
LF(PSODA) ;return last fill number;CALLED from PSOCPB
"RTN","PSOPFSU1",90,0)
 N LF
"RTN","PSOPFSU1",91,0)
 I $D(^PSRX(PSODA,1,0)) S LF="A",LF=$O(^PSRX(PSODA,1,LF),-1) Q LF
"RTN","PSOPFSU1",92,0)
 Q 0  ;ORIG FILL
"RTN","PSOPFSU1",93,0)
 ;
"RTN","PSOPFSU1",94,0)
PFSI(PSODA,PSOREF) ;get PFSS Acct Ref and Charge ID and store in PSOPFS; Called from multiple places in this routine
"RTN","PSOPFSU1",95,0)
 I PSOREF=0&($D(^PSRX(PSODA,"PFS"))) S PSOPFS=PSOPFS_"^"_$P(^PSRX(PSODA,"PFS"),"^",1,2) Q
"RTN","PSOPFSU1",96,0)
 I PSOREF>0&($D(^PSRX(PSODA,1,PSOREF,"PFS"))) S PSOPFS=PSOPFS_"^"_$P(^PSRX(PSODA,1,PSOREF,"PFS"),"^",1,2)
"RTN","PSOPFSU1",97,0)
 Q
"RTN","PSOPFSU1",98,0)
 ;
"RTN","PSOPFSU1",99,0)
PFSA(PSODA,PSOREF,WR) ;called from PSOCP (WR=2) and PSOCPB (WR=3)
"RTN","PSOPFSU1",100,0)
 ;get switch status, acct ref, and charge ID, then validate switch vs availability of PFSS acct ref
"RTN","PSOPFSU1",101,0)
 Q:'$G(WR)
"RTN","PSOPFSU1",102,0)
 S PSOPFS=+$$SWSTAT^IBBAPI()
"RTN","PSOPFSU1",103,0)
 D PFSI(PSODA,PSOREF)
"RTN","PSOPFSU1",104,0)
 ; if switch is off, but have an PFSS Acct Ref for new orders, send charge to IDX
"RTN","PSOPFSU1",105,0)
 ; if switch is off, but have a Charge ID, send cancel charge to IDX
"RTN","PSOPFSU1",106,0)
 I '+PSOPFS,$P(PSOPFS,"^",WR)>0 S $P(PSOPFS,"^")=1
"RTN","PSOPFSU1",107,0)
 Q
"RTN","PSOPFSU1",108,0)
 ;
"RTN","PSOPFSU1",109,0)
PFS ;;Called from PSOCPB; PSOCPB is too large to hold more code.  Processes copay cancels for PFS only.
"RTN","PSOPFSU1",110,0)
 ;find any fills being cancelled for PFSS, cancel them, and remove them from PSOCAN, then return to PSOCP to process any IB cancels
"RTN","PSOPFSU1",111,0)
 ;
"RTN","PSOPFSU1",112,0)
 N X,I,PSOREF,PSOOLD,PREA,PSONW
"RTN","PSOPFSU1",113,0)
 ;If it's a PFS fill, if released, and not previously cancelled, set the X array, then kill it out of PSOCAN array.
"RTN","PSOPFSU1",114,0)
 ;Killed out of PSOCAN because don't want the IB processing to look at PFSS billed fills.
"RTN","PSOPFSU1",115,0)
 ;Note that in PSOCPD, PFS entries are not stored in PSOCAN array if a charge ID is not defined.  So, don't have to check for release date. 
"RTN","PSOPFSU1",116,0)
 ;If prev cancelled and PFS, kill it from PSOCAN array
"RTN","PSOPFSU1",117,0)
 S I="" F  S I=$O(PSOCAN(I)) Q:I=""  S PSOREF=+PSOCAN(I) D
"RTN","PSOPFSU1",118,0)
 . I PSOREF=PSODA&($P(PSOCAN(I),"^",10)="PFS") D  Q
"RTN","PSOPFSU1",119,0)
 . . I $P(PSOCAN(I),"^",5)["CANCEL" K PSOCAN(I) Q
"RTN","PSOPFSU1",120,0)
 . . S X(0)=$P(PSOCAN(I),"^",2)_"^"_PSORSN K PSOCAN(I)
"RTN","PSOPFSU1",121,0)
 . I PSOREF'=PSODA&($P(PSOCAN(I),"^",10)="PFS") D
"RTN","PSOPFSU1",122,0)
 . . I $P(PSOCAN(I),"^",5)["CANCEL" K PSOCAN(I) Q
"RTN","PSOPFSU1",123,0)
 . . S X(PSOREF)=$P(PSOCAN(I),"^",2)_"^"_PSORSN K PSOCAN(I)
"RTN","PSOPFSU1",124,0)
 I $G(CANTYPE)&('$D(X)) D MSGNOCAN^PSOCPB Q  ;CANTYPE=1 means trying cancelling all fills;can't cancel twice
"RTN","PSOPFSU1",125,0)
 ;
"RTN","PSOPFSU1",126,0)
 ;send charge messages, set activity log, display message
"RTN","PSOPFSU1",127,0)
 S PREA="C",PSOREF=""
"RTN","PSOPFSU1",128,0)
 F  S PSOREF=$O(X(PSOREF)) Q:PSOREF=""  S PSOPFS=1 D PFSI(PSODA,PSOREF) D CHRG(PSODA,PSOREF,"CD",PSOPFS) D ACTLOG^PSOCPA D:'$G(CANTYPE) MSG^PSOCPB
"RTN","PSOPFSU1",129,0)
 I $G(CANTYPE)&('$D(PSOCAN)) D MSG^PSOCPB  ;if cancelling all and no legacy IB bills to cancel, write msg
"RTN","PSOPFSU1",130,0)
 S PSOPFSA=0  ;reset variable so charge isn't sent twice if SC/EI's were also changed.
"RTN","PSOPFSU1",131,0)
 Q
"RTN","PSOPFSU1",132,0)
 ;
"RTN","PSOR52")
0^2^B31117928^B30307425
"RTN","PSOR52",1,0)
PSOR52 ;IHS/DSD/JCM - Files refill entries in prescription file ;03/10/93
"RTN","PSOR52",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**10,22,27,181,148,201**;DEC 1997
"RTN","PSOR52",3,0)
 ;External reference to ^PSDRUG supported by DBIA 221
"RTN","PSOR52",4,0)
 ;External reference to PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSOR52",5,0)
 ;External reference SWSTAT^IBBAPI supported by DBIA 4663
"RTN","PSOR52",6,0)
 ; This routine is responsible for the actual
"RTN","PSOR52",7,0)
 ; filling of the refill prescription.
"RTN","PSOR52",8,0)
 ;---------------------------------------------------------   
"RTN","PSOR52",9,0)
EN(PSOX) ;Entry Point
"RTN","PSOR52",10,0)
START ;
"RTN","PSOR52",11,0)
 D:$D(XRTL) T0^%ZOSV ; Start RT monitor
"RTN","PSOR52",12,0)
 D INIT G:PSOR52("QFLG") END
"RTN","PSOR52",13,0)
 D FILE
"RTN","PSOR52",14,0)
 D DIK
"RTN","PSOR52",15,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV ; Stop RT Monitor
"RTN","PSOR52",16,0)
 D FINISH
"RTN","PSOR52",17,0)
END D EOJ
"RTN","PSOR52",18,0)
 Q
"RTN","PSOR52",19,0)
 ;---------------------------------------------------------
"RTN","PSOR52",20,0)
 ;
"RTN","PSOR52",21,0)
INIT ;
"RTN","PSOR52",22,0)
 S PSOR52("QFLG")=0
"RTN","PSOR52",23,0)
 S PSOX("QTY")=$P(PSOX("RX0"),"^",7),PSOX("DAYS SUPPLY")=$P(PSOX("RX0"),"^",8)
"RTN","PSOR52",24,0)
 S:$G(^PSDRUG($P(PSOX("RX0"),"^",6),660))]"" PSOX("COST")=$P(^PSDRUG($P(PSOX("RX0"),"^",6),660),"^",6)
"RTN","PSOR52",25,0)
 D NOW^%DTC S PSOX("LOGIN DATE")=$E(%,1,7)
"RTN","PSOR52",26,0)
 S X1=PSOX("FILL DATE"),X2=PSOX("DAYS SUPPLY")-10\1 D C^%DTC S PSOX1=X
"RTN","PSOR52",27,0)
 S X1=$P(PSOX("RX2"),"^",2)
"RTN","PSOR52",28,0)
 S X2=PSOX("DAYS SUPPLY")*(PSOX("NUMBER")+1)-10\1
"RTN","PSOR52",29,0)
 D C^%DTC S PSOX2=X
"RTN","PSOR52",30,0)
 S PSOX("NEXT POSSIBLE REFILL")=$S(PSOX1>PSOX2:PSOX1,1:PSOX2)
"RTN","PSOR52",31,0)
 K X,PSOX1,PSOX2
"RTN","PSOR52",32,0)
 S (PSOX("LAST DISPENSED DATE"),PSOX("DISPENSED DATE"))=PSOX("FILL DATE")
"RTN","PSOR52",33,0)
 I PSOX("FILL DATE")>$S($G(PSOX("LOGIN DATE")):$E(PSOX("LOGIN DATE"),1,7),1:DT),$P(PSOPAR,"^",6) D
"RTN","PSOR52",34,0)
 .S PSOX("OLD MAIL/WINDOW")=$S($G(PSOX("MAIL/WINDOW"))]"":PSOX("MAIL/WINDOW"),1:"MAIL"),PSOX("MAIL/WINDOW")="M"
"RTN","PSOR52",35,0)
 I $P(PSOX("RX2"),"^",12)]"" S PSOX("GENERIC PROVIDER")=$P(PSOX("RX2"),"^",12)
"RTN","PSOR52",36,0)
 S PSOX("PROVIDER")=$P(PSOX("RX0"),"^",4)
"RTN","PSOR52",37,0)
 S:'$D(PSOX("CLERK CODE")) PSOX("CLERK CODE")=DUZ
"RTN","PSOR52",38,0)
 S PSOX("DAW")=$$GETDAW^PSODAWUT(+PSOX("IRXN"))
"RTN","PSOR52",39,0)
INITX Q
"RTN","PSOR52",40,0)
 ;
"RTN","PSOR52",41,0)
FILE ;     
"RTN","PSOR52",42,0)
 ;L +^PSRX(PSOX("IRXN")):0
"RTN","PSOR52",43,0)
 I '$D(^PSRX(PSOX("IRXN"),1,0)) S ^(0)="^52.1DA^1^1"
"RTN","PSOR52",44,0)
 E  S ^PSRX(PSOX("IRXN"),1,0)=$P(^PSRX(PSOX("IRXN"),1,0),"^",1,2)_"^"_PSOX("NUMBER")_"^"_($P(^(0),"^",4)+1)
"RTN","PSOR52",45,0)
 F PSOX1=1:1 S PSOR52=$P($T(DD+PSOX1),";;",2,4) Q:PSOR52=""  K PSOY S PSOY=$P(PSOR52,";;") I $D(@PSOY) S $P(PSOR52(PSOX("IRXN"),1,PSOX("NUMBER"),$P(PSOR52,";;",2)),"^",$P(PSOR52,";;",3))=@PSOY
"RTN","PSOR52",46,0)
 K PSOX1,PSOY
"RTN","PSOR52",47,0)
 S PSOX1="" F  S PSOX1=$O(PSOR52(PSOX("IRXN"),1,PSOX("NUMBER"),PSOX1)) Q:PSOX1=""  S ^PSRX(PSOX("IRXN"),1,PSOX("NUMBER"),PSOX1)=$G(PSOR52(PSOX("IRXN"),1,PSOX("NUMBER"),PSOX1))
"RTN","PSOR52",48,0)
 K PSOX1
"RTN","PSOR52",49,0)
 S:PSOX("STA")=6 $P(^PSRX(PSOX("IRXN"),"STA"),"^")=0
"RTN","PSOR52",50,0)
 S $P(^PSRX(PSOX("IRXN"),3),"^",1,2)=PSOX("LAST DISPENSED DATE")_"^"_PSOX("NEXT POSSIBLE REFILL")
"RTN","PSOR52",51,0)
 S $P(^PSRX(PSOX("IRXN"),3),"^",4)=PSOX("LAST REFILL DATE")
"RTN","PSOR52",52,0)
 I $D(PSOX("METHOD OF PICK-UP")),PSOX("FILL DATE")'>DT S $P(^PSRX(PSOX("IRXN"),"MP"),"^")=PSOX("METHOD OF PICK-UP")
"RTN","PSOR52",53,0)
 D:$$SWSTAT^IBBAPI() GACT^PSOPFSU0(PSOX("IRXN"),PSOX("NUMBER"))
"RTN","PSOR52",54,0)
 ;L -^PSRX(PSOX("IRXN"))
"RTN","PSOR52",55,0)
 Q
"RTN","PSOR52",56,0)
 ;
"RTN","PSOR52",57,0)
DIK ;
"RTN","PSOR52",58,0)
 K DIK,DA
"RTN","PSOR52",59,0)
 S DIK="^PSRX(",DA=PSOX("IRXN") D IX1^DIK K DIK
"RTN","PSOR52",60,0)
 I +$G(^PSRX(DA,"IB")),$P(^PSRX(DA,1,PSOX("NUMBER"),0),"^",2)="W" S ^PSRX("ACP",$P(^PSRX(DA,0),"^",2),$P(^PSRX(DA,1,PSOX("NUMBER"),0),"^"),PSOX("NUMBER"),DA)="" K DA
"RTN","PSOR52",61,0)
 D:$T(EN^PSOHDR)]"" EN^PSOHDR("PREF",PSOX("IRXN"))
"RTN","PSOR52",62,0)
 Q
"RTN","PSOR52",63,0)
 ;
"RTN","PSOR52",64,0)
FINISH ;
"RTN","PSOR52",65,0)
 I $G(PSOX("QS"))="S" D  G FINISHX
"RTN","PSOR52",66,0)
 . S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",67,0)
 . D SUS^PSORXL K DA
"RTN","PSOR52",68,0)
 ;
"RTN","PSOR52",69,0)
 ; - Previous ePharmacy Refill was Deleted and a new one is being entered
"RTN","PSOR52",70,0)
 I '$$SUBMIT^PSOBPSUT(PSOX("IRXN"),PSOX("NUMBER")),$$STATUS^PSOBPSUT(PSOX("IRXN"),PSOX("NUMBER"))'="" D
"RTN","PSOR52",71,0)
 . D RETRXF^PSOREJU2(PSOX("IRXN"),PSOX("NUMBER"),1)
"RTN","PSOR52",72,0)
 ;
"RTN","PSOR52",73,0)
 I PSOX("FILL DATE")>$S($G(PSOX("LOGIN DATE")):$E(PSOX("LOGIN DATE"),1,7),1:DT),$P(PSOPAR,"^",6) D  G FINISHX
"RTN","PSOR52",74,0)
 .K PSOXRXFL I $D(RXFL(PSOX("IRXN"))) S PSOXRXFL=$G(RXFL(PSOX("IRXN")))
"RTN","PSOR52",75,0)
 .S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",76,0)
 .D SUS^PSORXL K DA
"RTN","PSOR52",77,0)
 .I $G(PSOXRXFL)'="" S RXFL(PSOX("IRXN"))=$G(PSOXRXFL) K PSOXRXFL
"RTN","PSOR52",78,0)
 ;
"RTN","PSOR52",79,0)
 ; - Calling ECME for claims generation and transmission / REJECT handling
"RTN","PSOR52",80,0)
 N ACTION
"RTN","PSOR52",81,0)
 I $$SUBMIT^PSOBPSUT(PSOX("IRXN"),PSOX("NUMBER")) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSOR52",82,0)
 . S ACTION="" D ECMESND^PSOBPSU1(PSOX("IRXN"),PSOX("NUMBER"),PSOX("FILL DATE"),"RF")
"RTN","PSOR52",83,0)
 . I $$FIND^PSOREJUT(PSOX("IRXN"),PSOX("NUMBER")) D
"RTN","PSOR52",84,0)
 . . S ACTION=$$HDLG^PSOREJU1(PSOX("IRXN"),PSOX("NUMBER"),"79,88","OF","IOQ","I")
"RTN","PSOR52",85,0)
 ;
"RTN","PSOR52",86,0)
 I $G(PSOX("QS"))="Q" D  G FINISHX
"RTN","PSOR52",87,0)
 . I $G(PPL),$L(PPL_PSOX("IRXN")_",")>240 D TRI^PSOBBC D Q^PSORXL K PPL,RXFL
"RTN","PSOR52",88,0)
 . S RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",89,0)
 . I $G(PPL) S PPL=PPL_PSOX("IRXN")_","
"RTN","PSOR52",90,0)
 . E  S PPL=PSOX("IRXN")_","
"RTN","PSOR52",91,0)
 ;
"RTN","PSOR52",92,0)
 I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSOX("IRXN")_",",RXFL(PSOX("IRXN"))=PSOX("NUMBER") G FINISHX
"RTN","PSOR52",93,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSOR52",94,0)
 I $L(PSORX("PSOL",PSOX2))+$L(PSOX("IRXN"))<220 S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_PSOX("IRXN")_","
"RTN","PSOR52",95,0)
 E  S PSORX("PSOL",PSOX2+1)=PSOX("IRXN")_","
"RTN","PSOR52",96,0)
 S RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",97,0)
 ;
"RTN","PSOR52",98,0)
FINISHX ; 
"RTN","PSOR52",99,0)
 I $G(PSORX("MAIL/WINDOW"))["W" S BINGCRT=1,BINGRTE="W",BBFLG=1 D BBRX^PSORN52C
"RTN","PSOR52",100,0)
 K PSOX1,PSOX2
"RTN","PSOR52",101,0)
 Q
"RTN","PSOR52",102,0)
EOJ ;
"RTN","PSOR52",103,0)
 I $D(PSOX("OLD MAIL/WINDOW")) S PSOX("MAIL/WINDOW")=PSOX("OLD MAIL/WINDOW") K PSOX("OLD MAIL/WINDOW")
"RTN","PSOR52",104,0)
 S DA=$O(^PS(52.41,"ARF",PSOX("IRXN"),0)) I DA D  S DIK="^PS(52.41," D ^DIK
"RTN","PSOR52",105,0)
 .S PSORFKL=DA D PSOUL^PSSLOCK(PSORFKL_"S") K PSORFKL
"RTN","PSOR52",106,0)
 K PSOR52,DA,DIK
"RTN","PSOR52",107,0)
 Q
"RTN","PSOR52",108,0)
 ;
"RTN","PSOR52",109,0)
DD ;rx data nodes
"RTN","PSOR52",110,0)
 ;;PSOX("PROVIDER");;0;;17
"RTN","PSOR52",111,0)
 ;;PSOX("QTY");;0;;4
"RTN","PSOR52",112,0)
 ;;PSOX("DAYS SUPPLY");;0;;10
"RTN","PSOR52",113,0)
 ;;PSOX("MAIL/WINDOW");;0;;2
"RTN","PSOR52",114,0)
 ;;PSOX("REMARKS");;0;;3
"RTN","PSOR52",115,0)
 ;;PSOX("CLERK CODE");;0;;7
"RTN","PSOR52",116,0)
 ;;PSOX("COST");;0;;11
"RTN","PSOR52",117,0)
 ;;PSOSITE;;0;;9
"RTN","PSOR52",118,0)
 ;;PSOX("LOGIN DATE");;0;;8
"RTN","PSOR52",119,0)
 ;;PSOX("FILL DATE");;0;;1
"RTN","PSOR52",120,0)
 ;;PSOX("PHARMACIST");;0;;5
"RTN","PSOR52",121,0)
 ;;PSOX("LOT #");;0;;6
"RTN","PSOR52",122,0)
 ;;PSOX("DISPENSED DATE");;0;;19
"RTN","PSOR52",123,0)
 ;;PSOX("NDC");;1;;3
"RTN","PSOR52",124,0)
 ;;PSOX("DAW");;EPH;;1
"RTN","PSOR52",125,0)
 ;;PSOX("MANUFACTURER");;0;;14
"RTN","PSOR52",126,0)
 ;;PSOX("EXPIRATION DATE");;0;;15
"RTN","PSOR52",127,0)
 ;;PSOX("GENERIC PROVIDER");;1;;1
"RTN","PSOR52",128,0)
 ;;PSOX("RELEASED DATE/TIME");;0;;18
"RTN","PSORESK")
0^10^B61223518^B58029902
"RTN","PSORESK",1,0)
PSORESK ;BIR/SAB-return to stock ;03/31/93
"RTN","PSORESK",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**15,9,27,40,47,55,85,130,185,184,196,148,201**;DEC 1997
"RTN","PSORESK",3,0)
 ;
"RTN","PSORESK",4,0)
 ;REF/IA
"RTN","PSORESK",5,0)
 ;^PSDRUG/221
"RTN","PSORESK",6,0)
 ;^PS(59.7/694
"RTN","PSORESK",7,0)
 ;L, UL, PSOL, and PSOUL^PSSLOCK/2789
"RTN","PSORESK",8,0)
 ;^PS(55/2228
"RTN","PSORESK",9,0)
 ;PSDRTS^PSDOPT0/3064
"RTN","PSORESK",10,0)
AC I '$D(PSOPAR) D ^PSOLSET I '$D(PSOPAR) W !!,"Outpatient Pharmacy Site Parameters are required!" Q
"RTN","PSORESK",11,0)
 S RESK=1 K PSODEF,^UTILITY($J,"PSOPCE") S PSOPCECT=1
"RTN","PSORESK",12,0)
BC K PSOWHERE,PSODEFLG,PSOINVTX,XTYPE W !! S DIR("A")="Enter/Wand PRESCRIPTION number",DIR("?")="^D HP^PSORESK1",DIR(0)="FO" D ^DIR K DIR I $D(DIRUT) K PSODEF G EX
"RTN","PSORESK",13,0)
 I X'["-" D BCI W:'$G(RXP) !,"INVALID Rx" G:'$G(RXP) BC G BC1
"RTN","PSORESK",14,0)
 I X["-" D  I $P(X,"-")'=$G(PSORESST) W !,$C(7),$C(7),"   INVALID STATION NUMBER !!",$C(7),$C(7),! K PSORESST G BC
"RTN","PSORESK",15,0)
 .K PSORESST S PSORESSX=$G(X) K PSORESAR S DA=$P($$SITE^VASITE(),"^") I $G(DA) S DIC=4,DIQ(0)="I",DIQ="PSORESAR",DR="99" D EN^DIQ1 S PSORESST=$G(PSORESAR(4,DA,99,"I")) K PSORESAR,DIQ,DA,DR S X=$G(PSORESSX) K PSORESSX
"RTN","PSORESK",16,0)
 I X["-" S RXP=$P(X,"-",2) I '$D(^PSRX(+$G(RXP),0))!($G(RXP)']"") W !,$C(7),$C(7),$C(7),"   NON-EXISTENT Rx" G BC
"RTN","PSORESK",17,0)
 G:$D(^PSRX(RXP,0)) BC1 W !,$C(7),$C(7),$C(7),"   IMPROPER BARCODE FORMAT" G BC
"RTN","PSORESK",18,0)
BC1 ;
"RTN","PSORESK",19,0)
 S PSORRDFN=+$P($G(^PSRX(RXP,0)),"^",2)
"RTN","PSORESK",20,0)
 D ICN^PSODPT(PSORRDFN)
"RTN","PSORESK",21,0)
 S PSOPLCK=$$L^PSSLOCK(PSORRDFN,0) I '$G(PSOPLCK) D LOCK^PSOORCPY K PSOPLCK G BC
"RTN","PSORESK",22,0)
 K PSOPLCK D PSOL^PSSLOCK(RXP) I '$G(PSOMSG) W !!,$S($P($G(PSOMSG),"^",2)'="":$P($G(PSOMSG),"^",2),1:"Another person is editing this order."),! K PSOMSG D UL^PSSLOCK(+$G(PSORRDFN)) G BC
"RTN","PSORESK",23,0)
 S PSOLOUD=1 D:$P($G(^PS(55,+$P(^PSRX(RXP,0),"^",2),0)),"^",6)'=2 EN^PSOHLUP($P(^PSRX(RXP,0),"^",2)) K PSOLOUD
"RTN","PSORESK",24,0)
 I $S('+$P($G(^PSRX(+RXP,"STA")),"^"):0,$P(^("STA"),"^")=11:0,$P(^("STA"),"^")=12:0,$P(^("STA"),"^")=14:0,$P(^("STA"),"^")=15:0,1:1) D STAT^PSORESK1 D UL G BC
"RTN","PSORESK",25,0)
 S COPAYFLG=1,QDRUG=$P($G(^PSRX(RXP,0)),"^",6),QTY=$P($G(^(0)),"^",7) I $O(^PSRX(RXP,1,0)) G REF
"RTN","PSORESK",26,0)
 S Y="O" I $O(^PSRX(RXP,"P",0)) D  I $D(DUOUT)!($D(DTOUT)) D UL G BC
"RTN","PSORESK",27,0)
 .S DIR(0)="SA^O:ORIGINAL;P:PARTIAL",DIR("B")="ORIGINAL",DIR("A",1)="",DIR("A",2)="There are Partials for this Rx.",DIR("A")="Which are you Returning To Stock? "
"RTN","PSORESK",28,0)
 .S DIR("?")=" Press return for Original. Enter 'P' for Partial" D ^DIR K DIR
"RTN","PSORESK",29,0)
 S XTYPE=$S(Y="O":"O",1:"P") G:Y="P" PAR
"RTN","PSORESK",30,0)
 I $P($G(^PSRX(RXP,2)),"^",15) D  G BC
"RTN","PSORESK",31,0)
 .W !,$C(7),$C(7),"Original fill for Rx # "_$P(^PSRX(RXP,0),"^")_" was Returned to Stock." D UL
"RTN","PSORESK",32,0)
 I '$P($G(^PSRX(RXP,2)),"^",13) W !,$C(7),$C(7),"Rx # "_$P(^PSRX(RXP,0),"^")_" was NOT released !" D UL G BC
"RTN","PSORESK",33,0)
 S PSOLOCRL=$P($G(^PSRX(RXP,2)),"^",13),PSOWHERE=$S($D(^PSRX("AR",+$G(PSOLOCRL),RXP,0)):1,1:0)
"RTN","PSORESK",34,0)
 W ! S DIR("B")="YES",DIR("A",1)="Are you sure you want to RETURN TO STOCK Rx # "_$P(^PSRX(RXP,0),"^")
"RTN","PSORESK",35,0)
 S DIR("A",2)="for "_$P(^DPT($P(^PSRX(RXP,0),"^",2),0),"^")_" ("_$E($P(^(0),"^",9),6,9)_")",DIR("A")="Drug: "_$P(^PSDRUG($P(^PSRX(RXP,0),"^",6),0),"^")
"RTN","PSORESK",36,0)
 I $G(PSOWHERE) S DIR("A",3)=" ",DIR("A",4)="   *** This prescription was filled at the CMOP *** ",DIR("A",5)=" "
"RTN","PSORESK",37,0)
 S DIR(0)="YO" D ^DIR K DIR I Y=0!($D(DIRUT)) D UL G BC
"RTN","PSORESK",38,0)
 ;ORI
"RTN","PSORESK",39,0)
 D  D UL,EX S (RESK,PSOPCECT)=1 G BC
"RTN","PSORESK",40,0)
 .;VMP OIFO BAY PINES;PSO*7.0*196;KILL PSDS
"RTN","PSORESK",41,0)
 .I $T(PSDRTS^PSDOPT0)]"" D PSDRTS^PSDOPT0(RXP,"O^"_0,$P(^PSRX(RXP,2),"^",9),$P(^PSRX(RXP,0),"^",7)) D MSG K PSDS
"RTN","PSORESK",42,0)
 .Q:$G(RETSK)
"RTN","PSORESK",43,0)
 .K PSOINVTX,PSODEFLG I $G(PSOWHERE),$G(^PSDRUG(QDRUG,660.1)) D INVT^PSORXDL I $G(PSODEFLG) W !!?5,"Prescription Not Returned to Stock!",! Q
"RTN","PSORESK",44,0)
 .I +$G(^PSRX(RXP,"IB"))!($P($G(^PSRX(RXP,"PFS")),"^",2)) N PSOPFS S:$P($G(^PSRX(RXP,"PFS")),"^",2) PSOPFS="1^"_$P(^PSRX(RXP,"PFS"),"^",1,2) D CP^PSORESK1 Q:'$G(COPAYFLG)
"RTN","PSORESK",45,0)
 .;Ask comments until answered, do not allow exiting.
"RTN","PSORESK",46,0)
 .F  D  I '$D(DIRUT) Q
"RTN","PSORESK",47,0)
 ..K DIR,DUOUT,DTOUT,DIRUT,X,Y
"RTN","PSORESK",48,0)
 ..S DIR(0)="F0^10:75",DIR("A")="Comments",DIR("?")="Comments are required, 10-75 characters."
"RTN","PSORESK",49,0)
 ..S DIR("B")=$S($D(PSODEF):PSODEF,1:"Per Pharmacy Request")
"RTN","PSORESK",50,0)
 ..D ^DIR I $D(DIRUT) W !?5,"Comments are required, 10-75 characters.",! Q
"RTN","PSORESK",51,0)
 ..S (PSODEF,COM)=$G(Y) K DIR,X,Y
"RTN","PSORESK",52,0)
 ..Q
"RTN","PSORESK",53,0)
 .I $G(^PSDRUG(QDRUG,660.1)) D
"RTN","PSORESK",54,0)
 ..I $G(PSOWHERE),'$G(PSOINVTX) Q
"RTN","PSORESK",55,0)
 ..S ^PSDRUG(QDRUG,660.1)=^PSDRUG(QDRUG,660.1)+QTY
"RTN","PSORESK",56,0)
 .I $G(PSOWHERE) K ^PSRX("AR",+$G(PSOLOCRL),RXP,0)
"RTN","PSORESK",57,0)
 .D NOW^%DTC S DA=RXP,DA=RXP,DIE="^PSRX(",DR="31///@;32.1///"_% D ^DIE K DIE,DR,DA Q:$D(Y)
"RTN","PSORESK",58,0)
 .D ACT^PSORESK1 S DA=$O(^PS(52.5,"B",RXP,0)) I DA S DIK="^PS(52.5," D ^DIK
"RTN","PSORESK",59,0)
 .D REVERSE^PSOBPSU1(RXP,0,"RS",4,,1)
"RTN","PSORESK",60,0)
 .D EN^PSOHLSN1(RXP,"ZD") W !,"Rx # "_$P(^PSRX(RXP,0),"^")_" Returned to Stock.",!
"RTN","PSORESK",61,0)
 .Q
"RTN","PSORESK",62,0)
 ;
"RTN","PSORESK",63,0)
REF I $O(^PSRX(RXP,1,0)),$O(^PSRX(RXP,"P",0)) D  I $D(DTOUT)!($D(DUOUT)) D UL G BC
"RTN","PSORESK",64,0)
 .S DIR(0)="SA^R:REFILL;P:PARTIAL",DIR("B")="REFILL",DIR("A",1)="",DIR("A",2)="There are Refills and Partials for this Rx.",DIR("A")="Which are you Returning To Stock? "
"RTN","PSORESK",65,0)
 .S DIR("?")=" Press return for Refill. Enter 'P' for Partial" D ^DIR K DIR
"RTN","PSORESK",66,0)
 I $O(^PSRX(RXP,1,0)),$O(^PSRX(RXP,"P",0)) S XTYPE=$S(Y="R":1,1:"P")
"RTN","PSORESK",67,0)
PAR S:$G(XTYPE)']"" XTYPE=1 S TYPE=0 F YY=0:0 S YY=$O(^PSRX(RXP,XTYPE,YY)) Q:'YY  S TYPE=YY
"RTN","PSORESK",68,0)
 I 'TYPE D UL,EX S (RESK,PSOPCECT)=1 G BC
"RTN","PSORESK",69,0)
 I $P($G(^PSRX(RXP,XTYPE,TYPE,0)),"^",16) W $C(7),!!,"Last Fill Already Returned to Stock !",! D UL,EX S (RESK,PSOPCECT)=1 G BC
"RTN","PSORESK",70,0)
 I '$P(^PSRX(RXP,XTYPE,TYPE,0),"^",$S(XTYPE:18,1:19)) W !!,$C(7),$C(7),$S(XTYPE:"Refill",1:"PARTIAL")_" #"_TYPE_" was NOT released !",! D UL G BC
"RTN","PSORESK",71,0)
 W ! K DIR,DUOUT,DTOUT
"RTN","PSORESK",72,0)
 K PSOLOCRL,PSOWHERE I $G(XTYPE) S PSOLOCRL=$P($G(^PSRX(RXP,XTYPE,+$G(TYPE),0)),"^",18),PSOWHERE=$S($D(^PSRX("AR",+$G(PSOLOCRL),RXP,+$G(TYPE))):1,1:0)
"RTN","PSORESK",73,0)
 W ! S DIR("B")="YES",DIR("A",1)="Are you sure you want to RETURN TO STOCK Rx # "_$P(^PSRX(RXP,0),"^")_$S(XTYPE:" Refill ",1:" Partial ")_"# "_TYPE,DIR(0)="Y"
"RTN","PSORESK",74,0)
 S DIR("A",2)="for "_$P(^DPT($P(^PSRX(RXP,0),"^",2),0),"^")_" ("_$E($P(^(0),"^",9),6,9)_")",DIR("A")="Drug: "_$P(^PSDRUG($P(^PSRX(RXP,0),"^",6),0),"^")
"RTN","PSORESK",75,0)
 I $G(PSOWHERE) S DIR("A",3)=" ",DIR("A",4)="   *** This prescription was filled at the CMOP *** ",DIR("A",5)=" "
"RTN","PSORESK",76,0)
 D ^DIR K DIR I 'Y!($D(DUOUT))!($D(DTOUT)) D UL G BC
"RTN","PSORESK",77,0)
 I $T(PSDRTS^PSDOPT0)]"" D
"RTN","PSORESK",78,0)
 .;VMP OIFO BAY PINES;PSO*7.0*196;KILL PSDS
"RTN","PSORESK",79,0)
 .I XTYPE D PSDRTS^PSDOPT0(RXP,"R^"_TYPE,$P(^PSRX(RXP,1,TYPE,0),"^",9),$P(^(0),"^",4)) D MSG K PSDS Q
"RTN","PSORESK",80,0)
 .D PSDRTS^PSDOPT0(RXP,"P^"_TYPE,$P(^PSRX(RXP,"P",TYPE,0),"^",9),$P(^(0),"^",4)) D MSG K PSDS
"RTN","PSORESK",81,0)
 I $G(RETSK) D UL,EX G BC
"RTN","PSORESK",82,0)
 K PSOINVTX,PSODEFLG I $G(PSOWHERE),$G(^PSDRUG(QDRUG,660.1)) D INVT^PSORXDL I $G(PSODEFLG) W !!?5,"Prescription Not Returned to Stock!",! D UL G BC
"RTN","PSORESK",83,0)
 I XTYPE I +$G(^PSRX(RXP,"IB"))!($P($G(^PSRX(RXP,1,TYPE,"PFS")),"^",2)) N PSOPFS S:$P($G(^PSRX(RXP,1,TYPE,"PFS")),"^",2) PSOPFS="1^"_$P(^PSRX(RXP,1,TYPE,"PFS"),"^",1,2) D CP^PSORESK1 I '$G(COPAYFLG) D UL G BC
"RTN","PSORESK",84,0)
 ;Ask comments until answered, do not allow exiting.
"RTN","PSORESK",85,0)
 F  D  I '$D(DIRUT) Q
"RTN","PSORESK",86,0)
 .K DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PSORESK",87,0)
 .S DIR(0)="F0^10:75",DIR("A")="Comments",DIR("?")="Comments are required, 10-75 characters."
"RTN","PSORESK",88,0)
 .S DIR("B")=$S($D(PSODEF):PSODEF,1:"Per Pharmacy Request")
"RTN","PSORESK",89,0)
 .D ^DIR K DIR I $D(DIRUT) W !?5,"Comments are required, 10-75 characters.",! Q
"RTN","PSORESK",90,0)
 .Q
"RTN","PSORESK",91,0)
 S (PSODEF,COM)=$G(Y) K X,Y
"RTN","PSORESK",92,0)
 D NOW^%DTC S QTY=$P(^PSRX(RXP,XTYPE,TYPE,0),"^",4) I $G(^PSDRUG(QDRUG,660.1)) D
"RTN","PSORESK",93,0)
 .I $G(PSOWHERE),'$G(PSOINVTX) Q
"RTN","PSORESK",94,0)
 .S ^PSDRUG(QDRUG,660.1)=^PSDRUG(QDRUG,660.1)+$G(QTY)
"RTN","PSORESK",95,0)
 I $G(PSOWHERE) K ^PSRX("AR",+$G(PSOLOCRL),RXP,$G(TYPE))
"RTN","PSORESK",96,0)
 I XTYPE D REVERSE^PSOBPSU1(RXP,TYPE,"RS",4,,1)
"RTN","PSORESK",97,0)
 S DA(1)=RXP,DA=TYPE,DIE="^PSRX("_DA(1)_","_$S(XTYPE:1,1:"""P""")_",",DR=$S(XTYPE:"17////@",1:"8////@")_";.01///@"
"RTN","PSORESK",98,0)
 W ! D ^DIE I $D(Y) D UL G BC
"RTN","PSORESK",99,0)
 D:XTYPE'="P" NPF D ACT^PSORESK1
"RTN","PSORESK",100,0)
 W !!,"Rx # "_$P(^PSRX(RXP,0),"^")_$S(XTYPE:" REFILL",1:" PARTIAL")_" #"_TYPE_" Returned to Stock" S DA=$O(^PS(52.5,"B",RXP,0)) I DA S DIK="^PS(52.5," D ^DIK
"RTN","PSORESK",101,0)
 K PSODISPP S:'$G(XTYPE) PSODISPP=1 D EN^PSOHLSN1(RXP,"ZD") K PSODISPP
"RTN","PSORESK",102,0)
 D UL G BC
"RTN","PSORESK",103,0)
EX ;
"RTN","PSORESK",104,0)
 K DA,DR,DIE,X,X1,X2,Y,RXP,REC,DIR,XDT,REC,RDUZ,DIRUT,PSOCPN,PSOCPRX,YY,QDRUG,QTY,TYPE,XTYPE,I,%,DIRUT,COPAYFLG,PSOINVTX,RESK,PSOPCECT,COM,PSOWHERE,PSOLOCRL,PSODEFLG,PSORRDFN,PSOMSG,PSOPLCK,PSDCS,PSDRS,RETSK
"RTN","PSORESK",105,0)
 K DIC,DIK,PSOPFS
"RTN","PSORESK",106,0)
 Q
"RTN","PSORESK",107,0)
MSG I $G(PSDCS),'$G(PSDRS) W !!,"The PSDMGR key is required to return a CONTROLLED SUBSTANCE Rx to stock and",!,"update corresponding vault balances." S RETSK=1
"RTN","PSORESK",108,0)
 Q
"RTN","PSORESK",109,0)
BCI S RXP=0
"RTN","PSORESK",110,0)
RXP S RXP=$O(^PSRX("B",X,RXP)) I $P($G(^PSRX(+RXP,"STA")),"^")=13 G RXP
"RTN","PSORESK",111,0)
 Q
"RTN","PSORESK",112,0)
UL ;
"RTN","PSORESK",113,0)
 I $G(RXP) D PSOUL^PSSLOCK(RXP)
"RTN","PSORESK",114,0)
 D UL^PSSLOCK(+$G(PSORRDFN))
"RTN","PSORESK",115,0)
 Q
"RTN","PSORESK",116,0)
NPF N PSOY I $G(TYPE)-1>0,+$P(^PSRX(RXP,1,TYPE-1,0),"^") D
"RTN","PSORESK",117,0)
 .S X1=+$P(^PSRX(RXP,1,$G(TYPE)-1,0),"^"),X2=$P(^PSRX(RXP,0),"^",8)-10\1
"RTN","PSORESK",118,0)
 .D C^%DTC S PSOY=X,X1=$P(^PSRX(RXP,2),"^",2),X2=TYPE*$P(^PSRX(RXP,0),"^",8)-10\1
"RTN","PSORESK",119,0)
 .D C^%DTC S X=$S(PSOY<X:X,1:PSOY)
"RTN","PSORESK",120,0)
 I $G(TYPE)-1<1 D
"RTN","PSORESK",121,0)
 .S X1=$P(^PSRX(RXP,2),"^",2),X2=$P(^PSRX(RXP,0),"^",8)-10\1
"RTN","PSORESK",122,0)
 .D C^%DTC S:$P(^PSRX(RXP,3),"^",8) X=""
"RTN","PSORESK",123,0)
 I $G(X) S DA=RXP,DIE=52,DR="102///"_X D ^DIE K DIE
"RTN","PSORESK",124,0)
 Q
"RTN","PSORESK1")
0^12^B7754829^B7187442
"RTN","PSORESK1",1,0)
PSORESK1 ;BHAM ISC/SAB - return to stock continued ;06/03/97 10:12
"RTN","PSORESK1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**9,201**;DEC 1997
"RTN","PSORESK1",3,0)
HP W !!,"Wand the barcode number of the Rx or manually key in",!,"the number below the barcode or the Rx number."
"RTN","PSORESK1",4,0)
 W !,"The barcode number format is - 'NNN-NNNNNNN'",!!,"Press 'ENTER' to process Rx or ""^"" to quit"
"RTN","PSORESK1",5,0)
 Q
"RTN","PSORESK1",6,0)
STAT S RX0=^PSRX(RXP,0),RX2=^PSRX(RXP,2),J=RXP S $P(RX0,"^",15)=$P($G(^PSRX(RXP,"STA")),"^") D ^PSOFUNC
"RTN","PSORESK1",7,0)
 W !!,$C(7),$C(7),"Rx status of "_ST_" and cannot be returned to stock.",! K RX0,ST Q
"RTN","PSORESK1",8,0)
CP D NOW^%DTC S PSODT=%
"RTN","PSORESK1",9,0)
 S PSOCPRX=$P(^PSRX(RXP,0),"^") S PSO=1,PSODA=RXP,PSOPAR7=$G(^PS(59,PSOSITE,"IB")) W !!,"Attempting to remove copay charges",! D RXED^PSOCPA
"RTN","PSORESK1",10,0)
 I COPAYFLG=0 W !!,"Reason must be entered. Rx "_$P(^PSRX(RXP,0),"^")_" not returned to stock.",!
"RTN","PSORESK1",11,0)
 ;PFS: send Rx info to external billing system when copay and no copay.
"RTN","PSORESK1",12,0)
 Q
"RTN","PSORESK1",13,0)
ACT S IFN=0 F I=0:0 S I=$O(^PSRX(RXP,"A",I)) Q:'I  S IFN=I
"RTN","PSORESK1",14,0)
 I $G(PSOWHERE) S COM=$G(COM)_" (Released by CMOP)"
"RTN","PSORESK1",15,0)
 I +$G(PSOPFS) S:$P(PSOPFS,"^",3)'="" COM=$G(COM)_" (External Billing Charge ID: "_$P(PSOPFS,"^",3)_")"
"RTN","PSORESK1",16,0)
 D NOW^%DTC S IFN=IFN+1,^PSRX(RXP,"A",0)="^52.3DA^"_IFN_"^"_IFN,^PSRX(RXP,"A",IFN,0)=%_"^I^"_DUZ_"^"_$S(XTYPE="O":0,$G(TYPE)'<0&($G(TYPE)<6)&(XTYPE):TYPE,$G(TYPE)>5&(XTYPE):(TYPE+1),1:6)_"^"_COM
"RTN","PSORESK1",17,0)
 K DA Q
"RTN","PSORESK1",18,0)
CMOP ;original released by CMOP?  Called by PSORESK
"RTN","PSORESK1",19,0)
 S PSXREL=$P($G(^PSRX(RXP,2)),"^",13)
"RTN","PSORESK1",20,0)
 I $G(PSXREL),($D(^PSRX("AR",PSXREL,RXP,0))) W !!,$C(7),"Rx # "_$P(^PSRX(RXP,0),"^")_":",?20," Was dispensed by the CMOP and may not be returned"
"RTN","PSORESK1",21,0)
 I  W !,?20," to stock at this facility." Q
"RTN","PSORESK1",22,0)
 K PSXREL
"RTN","PSORESK1",23,0)
 Q
"RTN","PSORESK1",24,0)
CMOP1 ; REFILL released by CMOP?  Called by PSORESK
"RTN","PSORESK1",25,0)
 I +$G(XTYPE) S PSXREL=$P($G(^PSRX(RXP,1,TYPE,0)),"^",18)
"RTN","PSORESK1",26,0)
 I $G(PSXREL),($D(^PSRX("AR",PSXREL,RXP,TYPE))) W !!,"REFILL # "_TYPE_":",?20," Was dispensed by the CMOP and may not be returned"
"RTN","PSORESK1",27,0)
 I  W !,?20," to stock at this facility." Q
"RTN","PSORESK1",28,0)
 K PSXREL
"RTN","PSORESK1",29,0)
 Q
"RTN","PSORN52")
0^3^B43085141^B42247336
"RTN","PSORN52",1,0)
PSORN52 ;BIR/DSD - files renewal entries in prescription file ;08/09/93
"RTN","PSORN52",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**1,11,27,37,46,79,71,100,117,157,143,219,148,239,201**;DEC 1997
"RTN","PSORN52",3,0)
 ;Ext ref to ^PS(55 sup by DBIA 2228
"RTN","PSORN52",4,0)
 ;Ext ref to PSOUL^PSSLOCK sup by DBIA 2789
"RTN","PSORN52",5,0)
 ;Ext ref to ^VA(200 sup by DBIA 10060
"RTN","PSORN52",6,0)
 ;Ext ref to SWSTAT^IBBAPI sup by DBIA 4663
"RTN","PSORN52",7,0)
EN(PSOX) ;EP
"RTN","PSORN52",8,0)
START ;
"RTN","PSORN52",9,0)
 D:$D(XRTL) T0^%ZOSV ; Start RT Mon
"RTN","PSORN52",10,0)
 N PSOIBHLD,PSOSCOTH,PSOSCOTX S (PSOSCOTH,PSOSCOTX)=0 S PSOIBHLD="" I $G(PSOFDR),$G(ORD) D
"RTN","PSORN52",11,0)
 .S PSOIBHLD=$S($P($G(^PS(52.41,ORD,0)),"^",16)="SC":1,$P($G(^(0)),"^",16)="NSC":0,1:"")
"RTN","PSORN52",12,0)
 .I '$$DT^PSOMLLDT Q
"RTN","PSORN52",13,0)
 .N PSOIBHLX S PSOIBHLX=$G(^PS(52.41,ORD,"IBQ"))
"RTN","PSORN52",14,0)
 .S PSOIBHLD=PSOIBHLD_"^"_$S($P(PSOIBHLX,"^")=1:1,$P(PSOIBHLX,"^")=0:0,1:"")_"^"_$S($P(PSOIBHLX,"^",2)=1:1,$P(PSOIBHLX,"^",2)=0:0,1:"")_"^"_$S($P(PSOIBHLX,"^",3)=1:1,$P(PSOIBHLX,"^",3)=0:0,1:"")
"RTN","PSORN52",15,0)
 .S PSOIBHLD=PSOIBHLD_"^"_$S($P(PSOIBHLX,"^",4)=1:1,$P(PSOIBHLX,"^",4)=0:0,1:"")_"^"_$S($P(PSOIBHLX,"^",5)=1:1,$P(PSOIBHLX,"^",5)=0:0,1:"")_"^"_$S($P(PSOIBHLX,"^",6)=1:1,$P(PSOIBHLX,"^",6)=0:0,1:"")
"RTN","PSORN52",16,0)
 .I $P(PSOIBHLX,"^")=1!($P(PSOIBHLX,"^",2)=1)!($P(PSOIBHLX,"^",3)=1)!($P(PSOIBHLX,"^",4)=1)!($P(PSOIBHLX,"^",5)=1)!($P(PSOIBHLX,"^",6)=1) S PSOSCOTH=1
"RTN","PSORN52",17,0)
 I $G(PSOSCOTH)!($G(PSORX("SC"))="SC")!($G(PSORX("SC"))="NSC") S PSOSCOTX=1
"RTN","PSORN52",18,0)
 S PSOANSQ("SC>50")="" D SCP^PSORN52D
"RTN","PSORN52",19,0)
 I $G(PSOFDR),$G(ORD) I $D(^PS(52.41,ORD,"ICD")) S FILE=52.41 D GET^PSORN52D
"RTN","PSORN52",20,0)
 ;Set ans to renew from Rx, only if no ans from Pend file
"RTN","PSORN52",21,0)
 I $G(PSORENW("OIRXN")) D
"RTN","PSORN52",22,0)
 .N PSOLDIBQ S PSOLDIBQ=$G(^PSRX(PSORENW("OIRXN"),"IBQ"))
"RTN","PSORN52",23,0)
 .I $P(PSOIBHLD,"^")="" D
"RTN","PSORN52",24,0)
 ..I $P($G(^PSRX(PSORENW("OIRXN"),"IB")),"^")=2 S $P(PSOIBHLD,"^")=0
"RTN","PSORN52",25,0)
 .I '$$DT^PSOMLLDT Q
"RTN","PSORN52",26,0)
 .I PSOLDIBQ="" Q
"RTN","PSORN52",27,0)
 .D IBHLD^PSORN52A
"RTN","PSORN52",28,0)
 D INIT G:PSORN52("QFLG") END D FILE^PSORN52A
"RTN","PSORN52",29,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV ; Stop RT Mon
"RTN","PSORN52",30,0)
 K PSOANSQ,PSOANSQD,PSONEWFF
"RTN","PSORN52",31,0)
 I $G(PSOIBHLD)'="" D
"RTN","PSORN52",32,0)
 .;Set answers based on Pend Renew, prior to Phar call
"RTN","PSORN52",33,0)
 .Q:'$G(PSOX("IRXN"))
"RTN","PSORN52",34,0)
 .I $P(PSOIBHLD,"^")=1!($P(PSOIBHLD,"^")=0) S PSOANSQ("SC")=$P(PSOIBHLD,"^")
"RTN","PSORN52",35,0)
 .I '$$DT^PSOMLLDT Q
"RTN","PSORN52",36,0)
 .I $P(PSOIBHLD,"^",2)=1!($P(PSOIBHLD,"^",2)=0) S PSOANSQ(PSOX("IRXN"),"MST")=$P(PSOIBHLD,"^",2)
"RTN","PSORN52",37,0)
 .I $P(PSOIBHLD,"^",3)=1!($P(PSOIBHLD,"^",3)=0) S PSOANSQ(PSOX("IRXN"),"VEH")=$P(PSOIBHLD,"^",3)
"RTN","PSORN52",38,0)
 .I $P(PSOIBHLD,"^",4)=1!($P(PSOIBHLD,"^",4)=0) S PSOANSQ(PSOX("IRXN"),"RAD")=$P(PSOIBHLD,"^",4)
"RTN","PSORN52",39,0)
 .I $P(PSOIBHLD,"^",5)=1!($P(PSOIBHLD,"^",5)=0) S PSOANSQ(PSOX("IRXN"),"PGW")=$P(PSOIBHLD,"^",5)
"RTN","PSORN52",40,0)
 .I $P(PSOIBHLD,"^",6)=1!($P(PSOIBHLD,"^",6)=0) S PSOANSQ(PSOX("IRXN"),"HNC")=$P(PSOIBHLD,"^",6)
"RTN","PSORN52",41,0)
 .I $P(PSOIBHLD,"^",7)=1!($P(PSOIBHLD,"^",7)=0) S PSOANSQ(PSOX("IRXN"),"CV")=$P(PSOIBHLD,"^",7)
"RTN","PSORN52",42,0)
 K PSOIBHLD
"RTN","PSORN52",43,0)
 I '$G(PSOFDR) I $G(PSORENW("OIRXN")) S FILE=52 D GET^PSORN52D
"RTN","PSORN52",44,0)
 S PSONEW("NEWCOPAY")=""
"RTN","PSORN52",45,0)
 I (PSOSCP<50&('$P($G(^PS(53,+$P(^PSRX(PSOX("IRXN"),0),"^",3),0)),"^",7))),$G(DUZ("AG"))="V" S PSOFLAG=0 D COPAY^PSOCPB
"RTN","PSORN52",46,0)
 ;I PSOSCP>49!($P($G(^PS(53,+$P(^PSRX(PSOX("IRXN"),0),"^",3),0)),"^",7)=1) S PSOFLAG=0 D SC^PSOMLLD2
"RTN","PSORN52",47,0)
 I PSOSCA&(PSOSCP>49)!((PSOSCA!(PSOBILL=2))&($P($G(^PS(53,+$P(^PSRX(PSOX("IRXN"),0),"^",3),0)),"^",7)=1)) S PSOFLAG=0 D SC^PSOMLLD2
"RTN","PSORN52",48,0)
 I $$DT^PSOMLLDT D
"RTN","PSORN52",49,0)
 .I $D(PSOIBQS(PSODFN,"CV")) D MESS D CV^PSOMLLDT I $G(PSOANSQ(PSOX("IRXN"),"CV")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",50,0)
 .I $D(PSOIBQS(PSODFN,"VEH")) D MESS D VEH^PSOMLLDT I $G(PSOANSQ(PSOX("IRXN"),"VEH")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",51,0)
 .I $D(PSOIBQS(PSODFN,"RAD")) D MESS D RAD^PSOMLLDT I $G(PSOANSQ(PSOX("IRXN"),"RAD")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",52,0)
 .I $D(PSOIBQS(PSODFN,"PGW")) D MESS D PGW^PSOMLLDT I $G(PSOANSQ(PSOX("IRXN"),"PGW")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",53,0)
 .I $D(PSOIBQS(PSODFN,"MST")) D MESS D MST^PSOMLLDT I $G(PSOANSQ(PSOX("IRXN"),"MST")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",54,0)
 .I $D(PSOIBQS(PSODFN,"HNC")) D MESS D HNC^PSOMLLDT I $G(PSOANSQ(PSOX("IRXN"),"HNC")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",55,0)
 K PSOSCOTH,PSOSCOTX
"RTN","PSORN52",56,0)
 I $G(PSONEW("NEWCOPAY")) S ^PSRX(PSOX("IRXN"),"IB")=PSONEW("NEWCOPAY")
"RTN","PSORN52",57,0)
 ;
"RTN","PSORN52",58,0)
 D FINISH,ACP^PSOUTIL
"RTN","PSORN52",59,0)
 ;
"RTN","PSORN52",60,0)
 N PSOSCFLD S PSOSCFLD=$S(PSOSCP'="":$G(PSOANSQ("SC")),1:"")_"^"_$G(PSOANSQ(PSOX("IRXN"),"MST"))_"^"_$G(PSOANSQ(PSOX("IRXN"),"VEH"))_"^"_$G(PSOANSQ(PSOX("IRXN"),"RAD"))
"RTN","PSORN52",61,0)
 S PSOSCFLD=PSOSCFLD_"^"_$G(PSOANSQ(PSOX("IRXN"),"PGW"))_"^"_$G(PSOANSQ(PSOX("IRXN"),"HNC"))_"^"_$G(PSOANSQ(PSOX("IRXN"),"CV"))
"RTN","PSORN52",62,0)
 I PSOSCP<50&($TR(PSOSCFLD,"^")'="")&('$P($G(^PS(53,+$P(^PSRX(PSOX("IRXN"),0),"^",3),0)),"^",7)) S ^PSRX(PSOX("IRXN"),"IBQ")=PSOSCFLD K PSOSCFLD
"RTN","PSORN52",63,0)
 ;
"RTN","PSORN52",64,0)
 D FILE2^PSORN52D
"RTN","PSORN52",65,0)
 D:$$SWSTAT^IBBAPI() GACT^PSOPFSU0(PSOX("IRXN"),0)
"RTN","PSORN52",66,0)
 K PSONEW("NEWCOPAY"),PSOANSQ
"RTN","PSORN52",67,0)
END D EOJ
"RTN","PSORN52",68,0)
 Q
"RTN","PSORN52",69,0)
INIT S PSORN52("QFLG")=0 S:'$D(PSOX("DAYS SUPPLY")) PSOX("DAYS SUPPLY")=$P(PSOX("RX0"),"^",8)
"RTN","PSORN52",70,0)
 S:'$D(PSOX("# OF REFILLS")) PSOX("# OF REFILLS")=$P(PSOX("RX0"),"^",9) S:'$D(PSOX("ISSUE DATE")) PSOX("ISSUE DATE")=DT
"RTN","PSORN52",71,0)
 D INIT^PSON52 K PSON52
"RTN","PSORN52",72,0)
 Q
"RTN","PSORN52",73,0)
 ;
"RTN","PSORN52",74,0)
FINISH ;
"RTN","PSORN52",75,0)
 G:PSOX("STATUS")=4 FINISHP
"RTN","PSORN52",76,0)
 I $D(PSORX("VERIFY")) D  G FINISHX
"RTN","PSORN52",77,0)
 .K DIC,DLAYGO,DINUM,DIADD,X,DD,DO S DIC="^PS(52.4,",DLAYGO=52.4,DINUM=PSOX("IRXN"),DIC(0)="ML"
"RTN","PSORN52",78,0)
 .S X=PSOX("IRXN") D FILE^DICN K DD,DO,DIC,DLAYGO,DINUM,X
"RTN","PSORN52",79,0)
 .S ^PS(52.4,PSOX("IRXN"),0)=PSOX("IRXN")_"^"_$P(PSOX("NRX0"),"^",2)_"^"_DUZ_"^"_$G(PSOX("OIRXN"))_"^"_$E(PSOX("LOGIN DATE"),1,7)_"^"_PSOX("IRXN")_"^"_PSOX("STOP DATE")
"RTN","PSORN52",80,0)
 .K DIK,DA S DIK="^PS(52.4,",DA=PSOX("IRXN") D IX^DIK K DIK,DA
"RTN","PSORN52",81,0)
 ;
"RTN","PSORN52",82,0)
 I $G(PSOX("QS"))="S",$G(PSOBARCD) S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=0 D SUS^PSORXL K DA G FINISHX
"RTN","PSORN52",83,0)
 ;
"RTN","PSORN52",84,0)
 I PSOX("FILL DATE")>DT,$P(PSOPAR,"^",6) S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=0 D SUS^PSORXL K DA G FINISHX
"RTN","PSORN52",85,0)
 ;
"RTN","PSORN52",86,0)
 ; - Submitting Rx to ECME for 3rd Party Billing
"RTN","PSORN52",87,0)
 N ACTION
"RTN","PSORN52",88,0)
 I $$SUBMIT^PSOBPSUT(PSOX("IRXN"),0) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSORN52",89,0)
 . S ACTION="" D ECMESND^PSOBPSU1(PSOX("IRXN"),0,PSOX("FILL DATE"),"RN")
"RTN","PSORN52",90,0)
 . I $$FIND^PSOREJUT(PSOX("IRXN"),0) D
"RTN","PSORN52",91,0)
 . . S ACTION=$$HDLG^PSOREJU1(PSOX("IRXN"),0,"79,88","RN","IOQ","I")
"RTN","PSORN52",92,0)
 ;
"RTN","PSORN52",93,0)
 I $G(PSOX("QS"))="Q",$G(PSOBARCD) D  G FINISHX
"RTN","PSORN52",94,0)
 . N PSOFROM S PSOFROM="BATCH" I $G(PPL),$L(PPL_PSOX("IRXN")_",")>240 D TRI^PSOBBC D Q^PSORXL K PPL,RXFL
"RTN","PSORN52",95,0)
 .S RXFL(PSOX("IRXN"))=0
"RTN","PSORN52",96,0)
 . I $G(PPL) S PPL=PPL_PSOX("IRXN")_","
"RTN","PSORN52",97,0)
 . E  S PPL=PSOX("IRXN")_","
"RTN","PSORN52",98,0)
 . Q
"RTN","PSORN52",99,0)
FINISHP I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSOX("IRXN")_",",RXFL(PSOX("IRXN"))=0 G FINISHX
"RTN","PSORN52",100,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSORN52",101,0)
 I $L(PSORX("PSOL",PSOX2))+$L(PSOX("IRXN"))<220 S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_PSOX("IRXN")_","
"RTN","PSORN52",102,0)
 E  S PSORX("PSOL",PSOX2+1)=PSOX("IRXN")_","
"RTN","PSORN52",103,0)
 S RXFL(PSOX("IRXN"))=0
"RTN","PSORN52",104,0)
FINISHX ;
"RTN","PSORN52",105,0)
 ;call to build bingo board Rx array
"RTN","PSORN52",106,0)
 S:'$G(PSORX("MAIL/WINDOW")) PSORX("MAIL/WINDOW")=$P(PSORENW("NRX0"),"^",11)
"RTN","PSORN52",107,0)
 I $G(PSORX("MAIL/WINDOW"))["W" S BINGCRT=1,BINGRTE="W",BBFLG=1 D BBRX^PSORN52C
"RTN","PSORN52",108,0)
 K PSOX1,PSOX2
"RTN","PSORN52",109,0)
 Q
"RTN","PSORN52",110,0)
EOJ ;
"RTN","PSORN52",111,0)
 L -^PSRX("B",PSOX("IRXN")) K PSORN52,PSOX("INS"),PSORENW("INS"),PSORXED("INS"),PSONEW("ENT"),PSORXED("ENT"),OLENT,PSOIBHLD,PSOX("SINS"),PSORENW("SINS"),PSORXED("SINS"),FILE
"RTN","PSORN52",112,0)
 D PSOUL^PSSLOCK(PSOX("IRXN")) D PSOUL^PSSLOCK(PSOX("OIRXN"))
"RTN","PSORN52",113,0)
 Q
"RTN","PSORN52",114,0)
MESS ;
"RTN","PSORN52",115,0)
 I $G(PSOSCOTX)=1&(PSOSCP<50) W:$G(PSODRUG("DEA"))'["S"&($G(PSODRUG("DEA"))'["I") !!,"This Rx has been flagged by the provider as: "_$S($G(PSOSCOTH):"NO COPAY",$G(PSORX("SC"))="SC":"NO COPAY",1:"COPAY"),! S PSOSCOTX=2
"RTN","PSORN52",116,0)
 Q
"RTN","PSORXDL")
0^9^B61943911^B58159508
"RTN","PSORXDL",1,0)
PSORXDL ;BIR/SAB - Deletes one prescription ;06/10/96
"RTN","PSORXDL",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**4,17,9,27,117,131,148,201**;DEC 1997
"RTN","PSORXDL",3,0)
 ;External reference to ^PS(55 supported by DBIA 2228
"RTN","PSORXDL",4,0)
 ;External references L, UL, PSOL, and PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSORXDL",5,0)
 ;External reference to ^PS(59.7 supported by DBIA 694
"RTN","PSORXDL",6,0)
 ;External reference to ^PSDRUG( supported by DBIA 221
"RTN","PSORXDL",7,0)
 I '$D(^XUSEC("PSORPH",DUZ)) W !,$C(7),"Requires Pharmacy Key (PSORPH) !" Q
"RTN","PSORXDL",8,0)
 I '$D(PSOPAR) D ^PSOLSET I '$D(PSOPAR) W $C(7),!!,"SITE PARAMETERS MUST BE DEFINED!",! Q
"RTN","PSORXDL",9,0)
 K DA,PSODEFLG,PSOHLRE,PSOHLDAH,QTY,PSOABCDA,PSOREF S (PSDEL,PSOXXDEL)=1,PS="DELETE",DIC("S")="I $P($G(^(0)),""^"",2),$P($G(^(""STA"")),""^"")'=13,$G(^(2))" D A1^PSORXVW K DIC("S") G:'$G(DA) KILL
"RTN","PSORXDL",10,0)
 D FULL^VALM1
"RTN","PSORXDL",11,0)
 S RXN=+$G(DA)
"RTN","PSORXDL",12,0)
 S PSORXDFN=+$P($G(^PSRX(RXN,0)),"^",2)
"RTN","PSORXDL",13,0)
 S PSOPLCK=$$L^PSSLOCK(PSORXDFN,0) I '$G(PSOPLCK) D LOCK^PSOORCPY K PSOPLCK G PSORXDL
"RTN","PSORXDL",14,0)
 K PSOPLCK D PSOL^PSSLOCK(RXN) I '$G(PSOMSG) W !,$S($P($G(PSOMSG),"^",2)'="":$P($G(PSOMSG),"^",2),1:"Another person is editing this order."),! K PSOMSG D ULP G PSORXDL
"RTN","PSORXDL",15,0)
 S (REL,PSOGGFL)=0 F PSOGG=0:0 S PSOGG=$O(^PSRX(DA,1,PSOGG)) Q:'PSOGG  S:$D(^PSRX(DA,1,PSOGG,0)) PSOGGFL=PSOGG
"RTN","PSORXDL",16,0)
 S REL=$S($G(PSOGGFL)&($P($G(^PSRX(DA,1,+$G(PSOGGFL),0)),"^",18))&('$P($G(^(0)),"^",16)):1,'$G(PSOGGFL)&($P($G(^PSRX(DA,2)),"^",13))&('$P($G(^(2)),"^",15)):1,1:0)
"RTN","PSORXDL",17,0)
 I REL W !!,$S($G(PSOGGFL):"Refill number "_$G(PSOGGFL),1:"The Original Fill")," has already been released for Rx # "_$P($G(^PSRX(DA,0)),"^")
"RTN","PSORXDL",18,0)
 I REL W !,"Drug: ",$P($G(^PSDRUG(+$P($G(^PSRX(DA,0)),"^",6),0)),"^"),?49,$P($G(^DPT(+$P($G(^PSRX(DA,0)),"^",2),0)),"^")
"RTN","PSORXDL",19,0)
 I REL W ! K DIR S DIR(0)="Y",DIR("A")="Return this fill to stock and delete the prescription",DIR("B")="N" D  D ^DIR K DIR G:$G(Y)=1 PASS W !!?5,"No Action Taken.",!  D ULK,ULP,KILL G PSORXDL
"RTN","PSORXDL",20,0)
 .S DIR("?")=" ",DIR("?",1)="Enter 'Y' to return this last fill to stock and continue with the deleting of",DIR("?",2)="this prescription, enter 'N' to exit."
"RTN","PSORXDL",21,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you sure you want to DELETE Rx # "_$P(^PSRX(DA,0),"^"),DIR("A",2)="Drug: "_$P(^PSDRUG($P(^PSRX(DA,0),"^",6),0),"^")
"RTN","PSORXDL",22,0)
 S DIR("A")="for "_$P(^DPT($P(^PSRX(DA,0),"^",2),0),"^")
"RTN","PSORXDL",23,0)
 S DIR("B")="NO" D ^DIR D:$D(DTOUT) ULK,ULP G:$D(DTOUT) KILL I $D(DIRUT)!'Y D ULK,ULP,KILL G PSORXDL
"RTN","PSORXDL",24,0)
PASS N PSORXDAC K PSOXYZF S PSORXDAC=$O(^PS(52.5,"B",DA,0)) I PSORXDAC,$P($G(^PS(52.5,PSORXDAC,0)),"^",7)="L" N PSOXYZ S PSOXYZF=0 W !!,"Please wait, Rx is Loading for CMOP Transmission.." D
"RTN","PSORXDL",25,0)
 .F PSOXYZ=1:1:5 W "." H 1 I $P($G(^PS(52.5,PSORXDAC,0)),"^",7)'="L" S PSOXYZF=1
"RTN","PSORXDL",26,0)
 I $G(PSOXYZF)=0 W !!,"Sorry, still loading for CMOP transmission, try again later.",! D ULK,ULP,KILL K PSOXYZF G PSORXDL
"RTN","PSORXDL",27,0)
 K PSOXYZF
"RTN","PSORXDL",28,0)
 I $G(REL) S PSOHLRE=REL,PSOHLDAH=$G(DA)
"RTN","PSORXDL",29,0)
 I $G(REL) S RXP=DA S PSODEFLG=0 D RESK I $G(PSODEFLG) D ULK,ULP,KILL G PSORXDL
"RTN","PSORXDL",30,0)
 I $G(PSOHLRE) W !!?5,"Deleting prescription..",! S DA=$G(PSOHLDAH),REL=$G(PSOHLRE)
"RTN","PSORXDL",31,0)
 S PSOABCDA=$G(DA) D NOOR^PSOCAN4 I $D(DIRUT) W " NO ACTION TAKEN!",! D ULK,ULP,KILL G PSORXDL
"RTN","PSORXDL",32,0)
 S DA=$G(PSOABCDA) K DIR,PSOABCDA S DIR("A")="Comments",DIR("B")="Per Pharmacy Request",DIR(0)="F^5:100" D ^DIR K DIR I $D(DIRUT) W !!?5,"NO ACTION TAKEN!",! D ULK,ULP G KILL
"RTN","PSORXDL",33,0)
 I $G(PKI1) N INCOM S INCOM=Y D DCV^PSOPKIV1,ULK,ULP G PSORXDL
"RTN","PSORXDL",34,0)
ENQ S PSOIB=$S($D(^PSRX(DA,"IB")):^PSRX(DA,"IB"),1:0) ;Check if copay
"RTN","PSORXDL",35,0)
 S RX=^PSRX(DA,0),RXN=DA
"RTN","PSORXDL",36,0)
 S $P(^PSRX(RXN,"STA"),"^")=13,$P(^PSRX(RXN,"D"),"^")=$G(Y)
"RTN","PSORXDL",37,0)
 S DA=RXN K ^PSRX("ACP",$P(^PSRX(DA,0),"^",2),+$P(^(2),"^",2),0,DA) D ACT
"RTN","PSORXDL",38,0)
 S DA=RXN I $G(^PSRX(DA,"H"))]"" K ^PSRX("AH",+$P(^PSRX(DA,"H"),"^"),DA) S ^PSRX(DA,"H")=""
"RTN","PSORXDL",39,0)
 D EN^PSOHLSN1(DA,"OC","",$P(^PSRX(DA,"D"),"^"),PSONOOR)
"RTN","PSORXDL",40,0)
 S DA=$O(^PS(52.5,"B",RXN,0)) I DA S DIK="^PS(52.5," D ^DIK
"RTN","PSORXDL",41,0)
 S DA=RXN I $D(^PS(52.4,RXN)) S DIK="^PS(52.4," D ^DIK
"RTN","PSORXDL",42,0)
 K PSOABCDA I $G(DA) S PSOABCDA=$G(DA)
"RTN","PSORXDL",43,0)
 I $O(^PS(52.41,"ARF",RXN,0)) S DA=$O(^PS(52.41,"ARF",RXN,0)),DIK="^PS(52.41," D ^DIK K DA,DIK
"RTN","PSORXDL",44,0)
 I $G(PSOABCDA) S DA=$G(PSOABCDA)
"RTN","PSORXDL",45,0)
 I $G(PSOABCDA) S DA=$G(PSOABCDA) K PSOABCDA
"RTN","PSORXDL",46,0)
 Q:+$G(PSORX("INTERVENE"))!($G(PSVFLAG))  I $D(DA),'$G(PSOZVER) D ULK,ULP G PSORXDL
"RTN","PSORXDL",47,0)
 S ^PSDRUG(+$P(RX,"^",6),660.1)=$S($D(^PSDRUG(+$P(RX,"^",6),660.1)):^(660.1),1:0)+$P(RX,"^",7)
"RTN","PSORXDL",48,0)
 S DFN=+$P(RX,"^",2) F I=0:0 S I=$O(^PS(55,DFN,"P",I)) Q:'I  I +^(I,0)=RXN K ^(0) S ^(0)=$P(^PS(55,DFN,"P",0),"^",1,3)_"^"_($P(^(0),"^",4)-1)
"RTN","PSORXDL",49,0)
 F I=0:0 S I=$O(^PS(55,DFN,"P","A",I)) Q:'I  I $D(^(I,RXN)) K ^(RXN)
"RTN","PSORXDL",50,0)
 K STAT,COM,RX,RXN Q:+$G(PSORX("INTERVENE"))!($G(PSVFLAG))  I $G(PSDEL) D ULK,ULP G PSORXDL
"RTN","PSORXDL",51,0)
 ;
"RTN","PSORXDL",52,0)
KILL K PSORXDFN,PSOMSG,PSOPLCK,RXO,RX0,RX2,RESK,PSIN,PSODEF,PSOPCECT,PSDEL,I,II,J,N,PHYS,PS,RFDATE,RFL,RFL1,ST,ST0,%,%Y,D0,DA,DI,DIC,DIE,DIH,DIU,DIV,DR,Z,DIG,X,Y,PSOIB,RX,RXN,PSODEFLG,PSOREF,PSOHLRE,PSOHLDAH,PSOGG,PSODLCOM,COPAYFLG
"RTN","PSORXDL",53,0)
 K DIR,RXP,DIRUT,DUOUT,DTOUT,SIGOK,REL,PSONODF,PSONOOR,PSOGGFL,PSOXYZF,TYPE,XTYPE,QDRUG,QTY,PSOWHERE,PSOLOCRL,PSOCPRX,PSODT,PSODA,PSOINVTX,IFN,PSROF,PSOABCDA,PSOXXDEL,PSOPFS
"RTN","PSORXDL",54,0)
 Q
"RTN","PSORXDL",55,0)
ACT ;adds activity info for deleted rx
"RTN","PSORXDL",56,0)
 S (RXF,PSOREF)=0 F I=0:0 S I=$O(^PSRX(RXN,1,I)) Q:'I  S (RXF,PSOREF)=I S:I>5 RXF=I+1 K ^PSRX("ACP",$P(^PSRX(RXN,0),"^",2),$P(^PSRX(RXN,1,I,0),"^"),I,RXN)
"RTN","PSORXDL",57,0)
 S DA=0 F FDA=0:0 S FDA=$O(^PSRX(RXN,"A",FDA)) Q:'FDA  S DA=FDA
"RTN","PSORXDL",58,0)
 D NOW^%DTC S DA=DA+1,^PSRX(RXN,"A",0)="^52.3DA^"_DA_"^"_DA,^PSRX(RXN,"A",DA,0)=%_"^"_"D"_"^"_DUZ_"^"_RXF_"^"_"RX DELETED on "_$E(DT,4,5)_"-"_$E(DT,6,7)_"-"_$E(DT,2,3)
"RTN","PSORXDL",59,0)
EX W !,"...PRESCRIPTION #"_$P(RX,"^")_" MARKED DELETED!!"
"RTN","PSORXDL",60,0)
 K RXF,I,FDA,DIC,DIE,%,%I,%H S DA=RXN
"RTN","PSORXDL",61,0)
 ; - Sending Refill to ECME for claim REVERSAL (Rx Delete)
"RTN","PSORXDL",62,0)
 D REVERSE^PSOBPSU1(RXN,PSOREF,"DE",5,,1)
"RTN","PSORXDL",63,0)
 Q
"RTN","PSORXDL",64,0)
RESK ;
"RTN","PSORXDL",65,0)
 S RESK=1,PSIN=+$P(^PS(59.7,1,49.99),"^",2) K PSODEF S PSOPCECT=1
"RTN","PSORXDL",66,0)
 S PSOLOUD=1 D:$P($G(^PS(55,+$P(^PSRX(RXP,0),"^",2),0)),"^",6)'=2 EN^PSOHLUP($P(^PSRX(RXP,0),"^",2)) K PSOLOUD
"RTN","PSORXDL",67,0)
 I $S('+$P($G(^PSRX(+RXP,"STA")),"^"):0,$P(^("STA"),"^")=11:0,$P(^("STA"),"^")=12:0,$P(^("STA"),"^")=14:0,$P(^("STA"),"^")=15:0,1:1) D STAT^PSORESK1 S PSODEFLG=1 Q
"RTN","PSORXDL",68,0)
 W !!?5,"Returning Medication to Stock..",!
"RTN","PSORXDL",69,0)
 K DIR,PSODLCOM,COM S DIR(0)="F^10:75",DIR("A")="Comments",DIR("?")="Comments are required, 10-75 characters." W ! D ^DIR K DIR S (COM,PSODLCOM)=Y I Y["^"!($D(DIRUT)) W !!,"No Action Taken!",! S PSODEFLG=1 Q
"RTN","PSORXDL",70,0)
 S QDRUG=+$P($G(^PSRX(RXP,0)),"^",6),QTY=$P($G(^(0)),"^",7) I $O(^PSRX(RXP,1,0)) G REF
"RTN","PSORXDL",71,0)
 S XTYPE="O" I $P($G(^PSRX(RXP,2)),"^",15) Q
"RTN","PSORXDL",72,0)
 I $P($G(^PSRX(RXP,2)),"^",2)<$G(PSIN) Q
"RTN","PSORXDL",73,0)
 K PSOLOCRL,PSOWHERE S PSOLOCRL=$P($G(^PSRX(RXP,2)),"^",13)
"RTN","PSORXDL",74,0)
 Q:'$G(PSOLOCRL)
"RTN","PSORXDL",75,0)
 S PSOWHERE=$S($D(^PSRX("AR",$G(PSOLOCRL),RXP,0)):1,1:0)
"RTN","PSORXDL",76,0)
 I +$G(^PSRX(RXP,"IB"))!($P($G(^PSRX(RXP,"PFS")),"^",2)) S COPAYFLG=1 N PSOPFS S:$P($G(^PSRX(RXP,"PFS")),"^",2) PSOPFS="1^"_$P(^PSRX(RXP,"PFS"),"^",1,2) D CP^PSORESK1 I '$G(COPAYFLG) S PSODEFLG=1 Q
"RTN","PSORXDL",77,0)
 I $G(^PSDRUG(QDRUG,660.1)),$G(PSOWHERE) D INVT W:$G(PSODEFLG) !!?5,"No Action Taken!",! Q:$G(PSODEFLG)  I $G(PSOINVTX) D INVINC
"RTN","PSORXDL",78,0)
 I $G(^PSDRUG(QDRUG,660.1)),'$G(PSOWHERE) D INVINC
"RTN","PSORXDL",79,0)
 I $G(PSOWHERE) K ^PSRX("AR",$G(PSOLOCRL),RXP,0)
"RTN","PSORXDL",80,0)
 D NOW^%DTC K DIE S DA=RXP,DIE="^PSRX(",DR="31///@;32.1///"_% D ^DIE K DIE
"RTN","PSORXDL",81,0)
 ;D EN^PSOHLSN1(RXP,"ZD")
"RTN","PSORXDL",82,0)
 D ACT^PSORESK1
"RTN","PSORXDL",83,0)
 S DA=$O(^PS(52.5,"B",RXP,0)) I DA K DIK S DIK="^PS(52.5," D ^DIK K DIK
"RTN","PSORXDL",84,0)
 D EN^PSOHLSN1(RXP,"ZD")
"RTN","PSORXDL",85,0)
 W !,"Rx # "_$P($G(^PSRX(RXP,0)),"^")_" Returned to Stock.",!
"RTN","PSORXDL",86,0)
 ; - Sending Rx to ECME for claim REVERSAL (Return to Stock)
"RTN","PSORXDL",87,0)
 D REVERSE^PSOBPSU1(RXP,0,"RS",4,,1)
"RTN","PSORXDL",88,0)
 Q
"RTN","PSORXDL",89,0)
REF ;
"RTN","PSORXDL",90,0)
 K TYPE F PSROF=0:0 S PSROF=$O(^PSRX(RXP,1,PSROF)) Q:'PSROF  S:$P($G(^PSRX(RXP,1,PSROF,0)),"^") TYPE=PSROF
"RTN","PSORXDL",91,0)
 I '$G(TYPE) Q
"RTN","PSORXDL",92,0)
 S XTYPE=1
"RTN","PSORXDL",93,0)
 I $P($G(^PSRX(RXP,1,TYPE,0)),"^",16) Q
"RTN","PSORXDL",94,0)
 I '$P($G(^PSRX(RXP,1,TYPE,0)),"^",18) Q
"RTN","PSORXDL",95,0)
 I '$P($G(^PSRX(RXP,1,TYPE,0)),"^",18),$P($G(^(0)),"^")'<PSIN Q
"RTN","PSORXDL",96,0)
 S PSOLOCRL=$P($G(^PSRX(RXP,1,TYPE,0)),"^",18)
"RTN","PSORXDL",97,0)
 Q:'$G(PSOLOCRL)
"RTN","PSORXDL",98,0)
 S PSOWHERE=$S($D(^PSRX("AR",$G(PSOLOCRL),RXP,TYPE)):1,1:0)
"RTN","PSORXDL",99,0)
 S QTY=$P($G(^PSRX(RXP,1,TYPE,0)),"^",4)
"RTN","PSORXDL",100,0)
 I +$G(^PSRX(RXP,"IB"))!($P($G(^PSRX(RXP,1,TYPE,"PFS")),"^",2)) S COPAYFLG=1 N PSOPFS S:$P($G(^PSRX(RXP,1,TYPE,"PFS")),"^",2) PSOPFS="1^"_$P(^PSRX(RXP,1,TYPE,"PFS"),"^",1,2) D CP^PSORESK1 I '$G(COPAYFLG) S PSODEFLG=1 Q
"RTN","PSORXDL",101,0)
 I $G(^PSDRUG(QDRUG,660.1)),$G(PSOWHERE) D INVT W:$G(PSODEFLG) !!?5,"No Action Taken!",! Q:$G(PSODEFLG)  I $G(PSOINVTX) D INVINC
"RTN","PSORXDL",102,0)
 I $G(^PSDRUG(QDRUG,660.1)),'$G(PSOWHERE) D INVINC
"RTN","PSORXDL",103,0)
 I $G(PSOWHERE) K ^PSRX("AR",$G(PSOLOCRL),RXP,TYPE)
"RTN","PSORXDL",104,0)
 D NOW^%DTC K DIE S DA(1)=RXP,DA=TYPE,DIE="^PSRX("_DA(1)_",1,",DR="17////@;.01///@" W ! D ^DIE K DIE
"RTN","PSORXDL",105,0)
 ;D EN^PSOHLSN1(RXP,"ZD")
"RTN","PSORXDL",106,0)
 D ACT^PSORESK1
"RTN","PSORXDL",107,0)
 S DA=$O(^PS(52.5,"B",RXP,0)) I DA K DIK S DIK="^PS(52.5," D ^DIK K DIK
"RTN","PSORXDL",108,0)
 D EN^PSOHLSN1(RXP,"ZD") W !,"Rx # "_$P($G(^PSRX(RXP,0)),"^")_" Refill Returned to Stock.",!
"RTN","PSORXDL",109,0)
 ; - Sending Rx refill to ECME for claim REVERSAL (Return to Stock)
"RTN","PSORXDL",110,0)
 D REVERSE^PSOBPSU1(RXP,TYPE,"RS",4,,1)
"RTN","PSORXDL",111,0)
 Q
"RTN","PSORXDL",112,0)
INVT ;
"RTN","PSORXDL",113,0)
 S PSOINVTX=0
"RTN","PSORXDL",114,0)
 K DIR,DIRUT S DIR(0)="Y",DIR("B")="N",DIR("A")="This is a CMOP Rx, do you want to increment the local inventory" D  W ! D ^DIR K DIR S:$D(DIRUT) PSODEFLG=1 Q:$G(PSODEFLG)  I $G(Y)=1 S PSOINVTX=1
"RTN","PSORXDL",115,0)
 .S DIR("?")=" ",DIR("?",1)="Enter 'Y' if you want to increment the local inventory with the Quantity that",DIR("?",2)="has been released at the CMOP"
"RTN","PSORXDL",116,0)
 Q
"RTN","PSORXDL",117,0)
INVINC ;
"RTN","PSORXDL",118,0)
 S ^PSDRUG(QDRUG,660.1)=$S($P($G(^PSDRUG(QDRUG,660.1)),"^"):$P($G(^PSDRUG(QDRUG,660.1)),"^"),1:0)+$G(QTY)
"RTN","PSORXDL",119,0)
 Q
"RTN","PSORXDL",120,0)
 ;
"RTN","PSORXDL",121,0)
ULK ;
"RTN","PSORXDL",122,0)
 I $G(RXN) D PSOUL^PSSLOCK(RXN)
"RTN","PSORXDL",123,0)
 Q
"RTN","PSORXDL",124,0)
ULP ;
"RTN","PSORXDL",125,0)
 D UL^PSSLOCK(+$G(PSORXDFN))
"RTN","PSORXDL",126,0)
 Q
"RTN","PSORXED")
0^15^B53144628^B49641748
"RTN","PSORXED",1,0)
PSORXED ;IHS/DSD/JCM-edit rx utility ;02/18/98  3:14 PM
"RTN","PSORXED",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**2,16,21,26,56,71,125,201**;DEC 1997
"RTN","PSORXED",3,0)
 ;External reference to ^PSXEDIT supported by DBIA 2209
"RTN","PSORXED",4,0)
 ;External reference to ^DD(52 supported by DBIA 999
"RTN","PSORXED",5,0)
 ;External reference to ^PSDRUG supported by DBIA 221
"RTN","PSORXED",6,0)
 ;External reference to ^PS(55 supported by DBIA 2228
"RTN","PSORXED",7,0)
START ;this entry point is no longer used.
"RTN","PSORXED",8,0)
 ;D INIT,LKUP G:PSORXED("QFLG") END D PARSE,EOJ G START
"RTN","PSORXED",9,0)
END D EOJ
"RTN","PSORXED",10,0)
 Q
"RTN","PSORXED",11,0)
INIT S PSORXED("QFLG")=0 Q
"RTN","PSORXED",12,0)
LKUP ; this line of code is no longer used S PSONUM="RX",PSONUM("A")="EDIT",PSOQFLG=0 D EN1^PSONUM I PSOQFLG!($Q(PSOLIST)']"") S PSORXED("QFLG")=1
"RTN","PSORXED",13,0)
 K PSOQFLG Q
"RTN","PSORXED",14,0)
 ;
"RTN","PSORXED",15,0)
PARSE F PSORXED("LIST")=1:1 Q:'$D(PSOLIST(PSORXED("LIST")))!PSORXED("QFLG")  F PSORXED("I")=1:1:$L(PSOLIST(PSORXED("LIST"))) S PSORXED("IRXN")=$P(PSOLIST(PSORXED("LIST")),",",PSORXED("I")) D:+PSORXED("IRXN") PROCESS
"RTN","PSORXED",16,0)
 Q
"RTN","PSORXED",17,0)
PROCESS S PSORXED("DFLG")=0 G:$G(^PSRX(PSORXED("IRXN"),0))']"" PROCESSX
"RTN","PSORXED",18,0)
 S PSORXED("RX0")=^PSRX(PSORXED("IRXN"),0),PSORXED("RX2")=^(2),PSORXED("RX3")=^(3),PSOSIG=$G(^PSRX(PSORXED("IRXN"),"SIG")),PSODAYS=$P(PSORXED("RX0"),"^",8)
"RTN","PSORXED",19,0)
 S (I,RFED,RFDT)=0 F  S I=$O(^PSRX(PSORXED("IRXN"),1,I)) Q:'I  S RFED=I,PSORXED("RX1")=^PSRX(PSORXED("IRXN"),1,I,0),RFDT=$P(^(0),"^"),PSODAYS=$P(^(0),"^",10) S:$P(^(0),"^",17) PSONEW("PROVIDER NAME")=$P(^VA(200,$P(^(0),"^",17),0),"^")
"RTN","PSORXED",20,0)
 S PSORXST=+$P($G(^PS(53,+$P(PSORXED("RX0"),"^",3),0)),"^",7) N DA S DA=PSORXED("IRXN") D EN^PSORXPR
"RTN","PSORXED",21,0)
 D CHECK G:PSORXED("DFLG") PROCESSX
"RTN","PSORXED",22,0)
 N X S X="PSXEDIT" X ^%ZOSF("TEST") K X I $T D ^PSXEDIT I $G(PSXOUT) K PSXOUT G L1
"RTN","PSORXED",23,0)
 D DIE^PSORXED1
"RTN","PSORXED",24,0)
L1 D LOG,POST
"RTN","PSORXED",25,0)
PROCESSX Q
"RTN","PSORXED",26,0)
CHECK Q  L +^PSRX(PSORXED("IRXN")):0 I '$T W $C(7),!!,"Rx Number is Locked by Another User!",! S PSORXED("DFLG")=1 H 5 Q
"RTN","PSORXED",27,0)
 I $G(^PSDRUG($P(PSORXED("RX0"),"^",6),"I"))]"",^("I")<DT D  G CHECKX
"RTN","PSORXED",28,0)
 . W !,$C(7),"This drug has been inactivated. ",! S PSORXED("DFLG")=1 Q
"RTN","PSORXED",29,0)
 K PSPOP I $G(PSODIV),$P(PSORXED("RX2"),"^",9)'=PSOSITE S PSPRXN=PSORXED("IRXN") D CHK1^PSOUTLA I $G(PSPOP)=1 S PSORXED("DFLG")=1 G CHECKX
"RTN","PSORXED",30,0)
 ;
"RTN","PSORXED",31,0)
 I $P(^PSRX(PSORXED("IRXN"),"STA"),"^")=14!($P(^("STA"),"^")=15) S PSORXED("DFLG")=1 W !!,$C(7),"Discontinued prescriptions cannot be edited.",! G CHECKX
"RTN","PSORXED",32,0)
 I $D(^PS(52.4,"B",PSORXED("IRXN"))) S PSORXED("DFLG")=1 W !!,$C(7),"Non-verified prescriptions cannot be edited.",!
"RTN","PSORXED",33,0)
CHECKX K PSPOP,DIR,DTOUT,DUOUT,Y,X Q
"RTN","PSORXED",34,0)
LOG K PSFROM S DA=PSORXED("IRXN"),(PSRX0,RX0)=PSORXED("RX0"),QTY=$P(RX0,"^",7),QTY=QTY-$P(^PSRX(DA,0),"^",7) K ZD(DA) S:'$O(^PSRX(DA,1,0)) ZD(DA)=$P(^PSRX(DA,2),"^",2)
"RTN","PSORXED",35,0)
 S COM="" F I=3,4,5:1:13,17 I $P(PSRX0,"^",I)'=$P(^PSRX(DA,0),"^",I) S PSI=$S(I=13:1,1:I),COM=COM_$P(^DD(52,PSI,0),"^")_" ("_$P(PSRX0,"^",I)_"),"
"RTN","PSORXED",36,0)
 I $P(PSORXED("RX2"),"^",2)'=$P(^PSRX(DA,2),"^",2) S COM=COM_$P(^DD(52,22,0),"^")_" ("_$P(PSORXED("RX2"),"^",2)_"),"
"RTN","PSORXED",37,0)
 I $P(PSORXED("RX3"),"^",7)'=$P(^PSRX(DA,3),"^",7) S COM=COM_$P(^DD(52,12,0),"^")_" ("_$P(PSORXED("RX3"),"^",7)_"),"
"RTN","PSORXED",38,0)
 I PSOSIG'=$P($G(^PSRX(DA,"SIG")),"^") S COM=COM_$P(^DD(52,10,0),"^")_" ("_PSOSIG_"),"
"RTN","PSORXED",39,0)
 I PSOTRN'=$G(^PSRX(DA,"TN")) S COM=COM_$P(^DD(52,6.5,0),"^")_" ("_PSOTRN_"),"
"RTN","PSORXED",40,0)
 G:COM="" LOGX K PSRX0 S X=$S($D(PSOCLC):PSOCLC,1:DUZ)
"RTN","PSORXED",41,0)
 D FILL,LBL D:$G(PSOEDITL)=2&($P($G(^PSRX(DA,"STA")),"^")'=5)&('$G(RXRP(DA)))&('$G(PSOSIGFL)) ASKL
"RTN","PSORXED",42,0)
 S K=1,D1=0 F Z=0:0 S Z=$O(^PSRX(DA,"A",Z)) Q:'Z  S D1=Z,K=K+1
"RTN","PSORXED",43,0)
 S D1=D1+1 S:'($D(^PSRX(DA,"A",0))#2) ^(0)="^52.3DA^^^" S ^(0)=$P(^(0),"^",1,2)_"^"_D1_"^"_K
"RTN","PSORXED",44,0)
 S ^PSRX(DA,"A",D1,0)=DT_"^E^"_$G(DUZ)_"^0^"_COM
"RTN","PSORXED",45,0)
 I QTY,$P(^PSRX(DA,2),"^",13) S ^PSDRUG($P(^PSRX(DA,0),"^",6),660.1)=$S($D(^PSDRUG(+$P(^PSRX(DA,0),"^",6),660.1)):^(660.1)+QTY,1:QTY)
"RTN","PSORXED",46,0)
 S:$P(RX0,"^",6)'=$P(^PSRX(DA,0),"^",6) ^PSDRUG(+$P(^PSRX(DA,0),"^",6),660.1)=$S($D(^PSDRUG(+$P(RX0,"^",6),660.1)):^(660.1)+$P(RX0,"^",7),1:$P(RX0,"^",7))
"RTN","PSORXED",47,0)
 S RX0=^PSRX(DA,0),RX2=^(2),J=DA,OEXDT=+$P(RX2,"^",6) D ^PSOEXDT S NEXDT=+$P(RX2,"^",6) I OEXDT'=NEXDT D
"RTN","PSORXED",48,0)
 .K ^PSRX("AG",OEXDT,DA) S ^PSRX("AG",NEXDT,DA)=""
"RTN","PSORXED",49,0)
 .S D=+$P(RX0,"^",2) K ^PS(55,D,"P","A",OEXDT,DA) S ^PS(55,D,"P","A",NEXDT,DA)=""
"RTN","PSORXED",50,0)
 K D,OEXDT,NEXDT
"RTN","PSORXED",51,0)
 G:+$P(^PSRX(J,"STA"),"^")!($G(PSOEDITL)=1) LOGX S RXFL(PSORXED("IRXN"))=$S($G(PSOEDITF):$G(PSOEDITF),1:0) I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSORXED("IRXN")_"," D SETRP G LOGX
"RTN","PSORXED",52,0)
 G:$G(PSOEDITL)=1 LOGX
"RTN","PSORXED",53,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSORXED",54,0)
 I $L(PSORX("PSOL",PSOX2))+$L(PSORXED("IRXN"))<220 D  G LOGX
"RTN","PSORXED",55,0)
 .I PSORX("PSOL",PSOX2)'[PSORXED("IRXN")_"," S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_PSORXED("IRXN")_"," D SETRP
"RTN","PSORXED",56,0)
 E  I PSORX("PSOL",PSOX2+1)'[PSORXED("IRXN")_"," S PSORX("PSOL",PSOX2+1)=PSORXED("IRXN")_"," D SETRP
"RTN","PSORXED",57,0)
LOGX K PSOEDITF,PSOEDITR,PSOEDITL D:$G(RFED) ^PSORXED1
"RTN","PSORXED",58,0)
 Q
"RTN","PSORXED",59,0)
POST ; D NEXT D:$G(^PSRX(PSORXED("IRXN"),"IB"))]"" COPAY K PSODAYS,PSORXST
"RTN","PSORXED",60,0)
 D NEXT D COPAY K PSODAYS,PSORXST
"RTN","PSORXED",61,0)
 Q
"RTN","PSORXED",62,0)
COPAY S DA=PSORXED("IRXN") I 'RFD,PSODAYS'=+$P(^PSRX(DA,0),"^",8) I +$G(^PSRX(DA,"IB"))!($P($G(^PSRX(DA,"PFS")),"^",2)) D CPCK G RXST
"RTN","PSORXED",63,0)
 I RFD,+$G(^PSRX(DA,1,RFD,0)),PSODAYS'=$P($G(^PSRX(DA,1,RFD,0)),"^",10) I +$G(^PSRX(DA,"IB"))!($P($G(^PSRX(DA,1,RFD,"PFS")),"^",2)) D CPCK
"RTN","PSORXED",64,0)
RXST G:PSORXST=+$P($G(^PS(53,+$P(^PSRX(DA,0),"^",3),0)),"^",7) COPAYX
"RTN","PSORXED",65,0)
 W !,$C(7),"Patient Status field for this Rx has been changed from a ",$S(PSORXST=0:"COPAYMENT ELIGIBLE",PSORXST=1:"COPAYMENT EXEMPT",1:"")
"RTN","PSORXED",66,0)
 W !,"patient status."
"RTN","PSORXED",67,0)
 W "  The copay status for this Rx will be automatically adjusted."
"RTN","PSORXED",68,0)
 W !,"If action needs to be taken to adjust charges you MUST use the"
"RTN","PSORXED",69,0)
 W !,"Reset Copay Status/Cancel Charges option."
"RTN","PSORXED",70,0)
 W ! K DIR S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSORXED",71,0)
 I +$P($G(^PS(53,+$P(^PSRX(DA,0),"^",3),0)),"^",7)=1 D  ; SET TO NO COPAY AND AUDIT CHANGE
"RTN","PSORXED",72,0)
 . I '$D(^PSRX(DA,"IB")) S ^PSRX(DA,"IB")=""
"RTN","PSORXED",73,0)
 . S $P(^PSRX(DA,"IB"),"^",1)=""
"RTN","PSORXED",74,0)
 . S PSODA=DA
"RTN","PSORXED",75,0)
 . S PSOREF=RFD
"RTN","PSORXED",76,0)
 . S PSOCOMM="Rx Patient Status Change"
"RTN","PSORXED",77,0)
 . S PSOOLD="Copay"
"RTN","PSORXED",78,0)
 . S PSONW="No Copay"
"RTN","PSORXED",79,0)
 . S PREA="R"
"RTN","PSORXED",80,0)
 . D ACTLOG^PSOCPA
"RTN","PSORXED",81,0)
COPAYX K DA,PSODAYS,PSO,PSODA,PSOFLAG,PSORXST,RFD,PSOREF,PSOCOMM,PSOOLD,PSONW
"RTN","PSORXED",82,0)
 Q
"RTN","PSORXED",83,0)
CPCK ;update COPAY
"RTN","PSORXED",84,0)
 I 'RFD,'$D(^PSRX(DA,"PFS")) G CPCK1
"RTN","PSORXED",85,0)
 I RFD,'$D(^PSRX(DA,1,RFD,"PFS")) G CPCK1
"RTN","PSORXED",86,0)
 N PSOPFS S PSOPFS=$P($S('RFD:^PSRX(DA,"PFS"),1:^PSRX(DA,1,RFD,"PFS")),"^",1,2)
"RTN","PSORXED",87,0)
 I +$G(PSOPFS)>0&('$P($G(PSOPFS),"^",2)) K PSOPFS Q
"RTN","PSORXED",88,0)
 I +$G(PSOPFS)<1 K PSOPFS
"RTN","PSORXED",89,0)
 E  S PSOPFS="1^"_PSOPFS
"RTN","PSORXED",90,0)
CPCK1 N TYPE S PSO=2,PSODA=DA,PSOFLAG=1,PSOPAR7=$G(^PS(59,PSOSITE,"IB")),TYPE=RFD D RXED^PSOCPA K TYPE
"RTN","PSORXED",91,0)
 Q
"RTN","PSORXED",92,0)
NEXT D NEXT^PSOUTIL(.PSORXED) K DIE,DR,DA S DIE="^PSRX(",DA=PSORXED("IRXN")
"RTN","PSORXED",93,0)
 S DR="101///"_$P(PSORXED("RX3"),"^")_";102///"_$P(PSORXED("RX3"),"^",2) D ^DIE K DIE,DR,DA,X,Y
"RTN","PSORXED",94,0)
 Q
"RTN","PSORXED",95,0)
EOJ K PSOSIG,PSORXED,PSOLIST,END,PSRX0
"RTN","PSORXED",96,0)
 D EX^PSORXED1
"RTN","PSORXED",97,0)
 Q
"RTN","PSORXED",98,0)
FILL ;
"RTN","PSORXED",99,0)
 K PSOEDITF,PSOEDITR,PSOERF
"RTN","PSORXED",100,0)
 F PSOEZ=0:0 S PSOEZ=$O(^PSRX(DA,1,PSOEZ)) Q:'PSOEZ  S:$D(^PSRX(DA,1,PSOEZ,0)) PSOERF=PSOEZ
"RTN","PSORXED",101,0)
 S PSOEDITF=$S($G(PSOERF):+$G(PSOERF),1:0)
"RTN","PSORXED",102,0)
 I PSOEDITF S PSOEDITR=$S($P($G(^PSRX(DA,1,PSOEDITF,0)),"^",18):1,1:0) G FILLX
"RTN","PSORXED",103,0)
 S PSOEDITR=$S($P($G(^PSRX(DA,2)),"^",13):1,1:0)
"RTN","PSORXED",104,0)
FILLX K PSOERF,PSOEZ
"RTN","PSORXED",105,0)
 Q
"RTN","PSORXED",106,0)
LBL ;
"RTN","PSORXED",107,0)
 S PSOEDITL=0
"RTN","PSORXED",108,0)
 I COM["PROV"!(COM["QTY")!(COM["DAYS")!(COM["MAIL")!(COM["UNIT")!(COM["FILL DATE")!(COM["REMARKS") I COM'["STATUS",COM'["CLINIC",COM'["DRUG",COM'["REFILLS",COM'["ISSUE",COM'["SIG",COM'["TRADE" D  Q
"RTN","PSORXED",109,0)
 .I $G(PSOEDITF) S PSOEDITL=1 Q
"RTN","PSORXED",110,0)
 .I '$G(PSOEDITF),$G(PSOEDITR) S PSOEDITL=2
"RTN","PSORXED",111,0)
 I '$G(PSOEDITF),$G(PSOEDITR) S PSOEDITL=2 Q
"RTN","PSORXED",112,0)
 I '$G(PSOEDITF),'$G(PSOEDITR) S PSOEDITL=0 Q
"RTN","PSORXED",113,0)
 I $G(RXRP(DA)) S PSOEDITL=1 Q
"RTN","PSORXED",114,0)
 I '$G(RXRP(DA)),$G(PSOEDITR) S PSOEDITL=2 Q
"RTN","PSORXED",115,0)
 S PSOEDITL=0
"RTN","PSORXED",116,0)
 Q
"RTN","PSORXED",117,0)
ASKL ;
"RTN","PSORXED",118,0)
 W ! K DIR S DIR("?",1)="You have edited a fill that has already been released. Do you want to",DIR("?",2)="include this prescription as one of the prescriptions to be acted upon",DIR("?",3)="at the label prompt."
"RTN","PSORXED",119,0)
 S DIR("?")="Enter 'Yes' to generate a reprint label request."
"RTN","PSORXED",120,0)
 S DIR(0)="Y",DIR("A")="The last fill has been released, do you want a reprint label",DIR("B")="Y" D ^DIR K DIR I Y=1 S PSOEDITL=0 Q
"RTN","PSORXED",121,0)
 S PSOEDITL=1
"RTN","PSORXED",122,0)
 Q
"RTN","PSORXED",123,0)
SETRP I $P($G(^PSRX(PSORXED("IRXN"),"STA")),"^")'=5,$G(PSOEDITL)=0 S RXRP(PSORXED("IRXN"))="1^^^1",VALMSG="Label will reprint due to Edit"
"RTN","PSORXED",124,0)
 Q
"UP",52,52.1,-1)
52^1
"UP",52,52.1,0)
52.1
"VER")
8.0^22.0
"^DD",52,52,125,0)
PFSS ACCOUNT REFERENCE^P375'IX^IBBAA(375,^PFS;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",52,52,125,8.5)
^
"^DD",52,52,125,9)
^
"^DD",52,52,125,21,0)
^.001^3^3^3050518^^^
"^DD",52,52,125,21,1,0)
This is a reference number to an external medical billing system Account 
"^DD",52,52,125,21,2,0)
Number for the purposes of uniquely identifying prescription charges for 
"^DD",52,52,125,21,3,0)
1st or 3rd party billing.
"^DD",52,52,125,23,0)
^^5^5^3050518^
"^DD",52,52,125,23,1,0)
This field was introduced as part of the Patient Financial Services System
"^DD",52,52,125,23,2,0)
(PFSS) project to implement a new COTS billing system. It requires that
"^DD",52,52,125,23,3,0)
every prescription fill passed to the external billing system to attach a
"^DD",52,52,125,23,4,0)
unique account/visit number. The IBB API GETACCT^IBBAPI provides this data
"^DD",52,52,125,23,5,0)
and is stored during prescription order creation as part of the data.
"^DD",52,52,125,"DT")
3050812
"^DD",52,52,126,0)
PFSS CHARGE ID^NJ8,0^^PFS;2^K:+X'=X!(X>99999999)!(X<90000000)!(X?.E1"."1.N) X
"^DD",52,52,126,3)
Type a number between 90000000 and 99999999, 0 Decimal Digits
"^DD",52,52,126,8.5)
^
"^DD",52,52,126,9)
^
"^DD",52,52,126,21,0)
^^2^2^3050516^^
"^DD",52,52,126,21,1,0)
This is another unique identifier required when prescription charge 
"^DD",52,52,126,21,2,0)
messages are passed to the external billing system.
"^DD",52,52,126,23,0)
^^5^5^3050518^
"^DD",52,52,126,23,1,0)
This field was introduced as part of the Patient Financial Services System
"^DD",52,52,126,23,2,0)
(PFSS) project to implement a new COTS billing system. It requires that
"^DD",52,52,126,23,3,0)
every prescription charge transaction passed to the external billing
"^DD",52,52,126,23,4,0)
system to attach a unique charge identifier. The IBB API GETCHGID^IBBAPI
"^DD",52,52,126,23,5,0)
provides this data.
"^DD",52,52,126,"DT")
3050518
"^DD",52,52.1,21,0)
PFSS ACCOUNT REFERENCE^P375'I^IBBAA(375,^PFS;1^Q
"^DD",52,52.1,21,8.5)
^
"^DD",52,52.1,21,9)
^
"^DD",52,52.1,21,21,0)
^^3^3^3050517^^
"^DD",52,52.1,21,21,1,0)
This is a reference number to an external medical billing system Account 
"^DD",52,52.1,21,21,2,0)
Number for the purposes of uniquely identifying prescription charges for 
"^DD",52,52.1,21,21,3,0)
1st or 3rd party billing.
"^DD",52,52.1,21,23,0)
^^6^6^3050518^
"^DD",52,52.1,21,23,1,0)
This field was introduced as part of the Patient Financial Services 
"^DD",52,52.1,21,23,2,0)
System (PFSS) project to implement a new COTS billing system. It requires
"^DD",52,52.1,21,23,3,0)
that every prescription fill passed to the external billing system to
"^DD",52,52.1,21,23,4,0)
attach a unique account/visit number. The IBB API GETACCT^IBBAPI provides
"^DD",52,52.1,21,23,5,0)
this data and is stored during prescription order creation as part of the
"^DD",52,52.1,21,23,6,0)
data.
"^DD",52,52.1,21,"DT")
3050518
"^DD",52,52.1,22,0)
PFSS CHARGE ID^NJ8,0^^PFS;2^K:+X'=X!(X>99999999)!(X<90000000)!(X?.E1"."1.N) X
"^DD",52,52.1,22,3)
Type a number between 90000000 and 99999999, 0 Decimal Digits
"^DD",52,52.1,22,8.5)
^
"^DD",52,52.1,22,9)
^
"^DD",52,52.1,22,21,0)
^^2^2^3050516^
"^DD",52,52.1,22,21,1,0)
This is another unique identifier required when prescription charge 
"^DD",52,52.1,22,21,2,0)
messages are passed to the external billing system.
"^DD",52,52.1,22,23,0)
^^5^5^3050518^
"^DD",52,52.1,22,23,1,0)
This field was introduced as part of the Patient Financial Services System
"^DD",52,52.1,22,23,2,0)
(PFSS) project to implement a new COTS billing system. It requires that
"^DD",52,52.1,22,23,3,0)
every prescription charge transaction passed to the external billing
"^DD",52,52.1,22,23,4,0)
system to attach a unique charge identifier. The IBB API GETCHGID^IBBAPI
"^DD",52,52.1,22,23,5,0)
provides this data.
"^DD",52,52.1,22,"DT")
3050518
"^DD",59,59,1007,0)
CHARGE LOCATION^P44'^SC(^PFS;1^Q
"^DD",59,59,1007,3)
Enter a valid location.
"^DD",59,59,1007,21,0)
^.001^3^3^3051024^^^^
"^DD",59,59,1007,21,1,0)
This field is a pointer to the Hospital Location File (#44).
"^DD",59,59,1007,21,2,0)
Multi-division sites should populate this field for each division. This
"^DD",59,59,1007,21,3,0)
data could be obtained from the Business Office of the Medical Center.
"^DD",59,59,1007,23,0)
^.001^5^5^3051024^^^^
"^DD",59,59,1007,23,1,0)
This field is a pointer to the Hospital Location File (#44). PFSS project 
"^DD",59,59,1007,23,2,0)
requires this field to be defined as all packages involved have a similar 
"^DD",59,59,1007,23,3,0)
pointer defined except Outpatient Pharmacy. It is needed for the HL7 
"^DD",59,59,1007,23,4,0)
messaging to an external billing system and to facilitate a standardized
"^DD",59,59,1007,23,5,0)
method for VDEF to retrieve the Charge Location using a generic API.
"^DD",59,59,1007,"DEL",1,0)
I 1 D EN^DDIOL("Charge Location cannot be deleted!","","$C(7),!?5")
"^DD",59,59,1007,"DT")
3050725
"BLD",5907,6)
^221
**END**
**END**
