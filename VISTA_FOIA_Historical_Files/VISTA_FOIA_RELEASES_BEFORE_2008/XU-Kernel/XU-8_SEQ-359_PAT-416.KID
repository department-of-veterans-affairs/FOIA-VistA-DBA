Released XU*8*416 SEQ #359
Extracted from mail message
**KIDS**:XU*8.0*416^

**INSTALL NAME**
XU*8.0*416
"BLD",6419,0)
XU*8.0*416^KERNEL^0^3070118^y
"BLD",6419,4,0)
^9.64PA^8932.1^1
"BLD",6419,4,8932.1,0)
8932.1
"BLD",6419,4,8932.1,2,0)
^9.641^8932.1^1
"BLD",6419,4,8932.1,2,8932.1,0)
PERSON CLASS  (File-top level)
"BLD",6419,4,8932.1,2,8932.1,1,0)
^9.6411^90002^1
"BLD",6419,4,8932.1,2,8932.1,1,90002,0)
INDIVIDUAL/NON
"BLD",6419,4,8932.1,222)
y^n^p^^^^n^^n
"BLD",6419,4,8932.1,224)

"BLD",6419,4,"APDD",8932.1,8932.1)

"BLD",6419,4,"APDD",8932.1,8932.1,90002)

"BLD",6419,4,"B",8932.1,8932.1)

"BLD",6419,6.3)
5
"BLD",6419,"ABPKG")
n
"BLD",6419,"INI")
DEL^XUMF416
"BLD",6419,"INID")
^n^n
"BLD",6419,"INIT")
EN^XUMF416
"BLD",6419,"KRN",0)
^9.67PA^8989.52^19
"BLD",6419,"KRN",.4,0)
.4
"BLD",6419,"KRN",.401,0)
.401
"BLD",6419,"KRN",.402,0)
.402
"BLD",6419,"KRN",.403,0)
.403
"BLD",6419,"KRN",.5,0)
.5
"BLD",6419,"KRN",.84,0)
.84
"BLD",6419,"KRN",3.6,0)
3.6
"BLD",6419,"KRN",3.8,0)
3.8
"BLD",6419,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",6419,"KRN",3.8,"NM",1,0)
XUMF NPI^^0
"BLD",6419,"KRN",3.8,"NM","B","XUMF NPI",1)

"BLD",6419,"KRN",9.2,0)
9.2
"BLD",6419,"KRN",9.8,0)
9.8
"BLD",6419,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",6419,"KRN",9.8,"NM",1,0)
XUMFP4^^0^B22700528
"BLD",6419,"KRN",9.8,"NM",2,0)
XUMFP4C^^0^B23028337
"BLD",6419,"KRN",9.8,"NM",3,0)
XUMF416^^0^B82158397
"BLD",6419,"KRN",9.8,"NM",4,0)
XUMFP4Z^^0^B16032973
"BLD",6419,"KRN",9.8,"NM",5,0)
XUMFH^^0^B71969873
"BLD",6419,"KRN",9.8,"NM",6,0)
XUMF^^0^B99395645
"BLD",6419,"KRN",9.8,"NM",7,0)
XUMFHM^^0^B2852790
"BLD",6419,"KRN",9.8,"NM",8,0)
XUSNPI^^0^B57042546
"BLD",6419,"KRN",9.8,"NM",9,0)
XUMFI0^^0^B4537353
"BLD",6419,"KRN",9.8,"NM","B","XUMF",6)

"BLD",6419,"KRN",9.8,"NM","B","XUMF416",3)

"BLD",6419,"KRN",9.8,"NM","B","XUMFH",5)

"BLD",6419,"KRN",9.8,"NM","B","XUMFHM",7)

"BLD",6419,"KRN",9.8,"NM","B","XUMFI0",9)

"BLD",6419,"KRN",9.8,"NM","B","XUMFP4",1)

"BLD",6419,"KRN",9.8,"NM","B","XUMFP4C",2)

"BLD",6419,"KRN",9.8,"NM","B","XUMFP4Z",4)

"BLD",6419,"KRN",9.8,"NM","B","XUSNPI",8)

"BLD",6419,"KRN",19,0)
19
"BLD",6419,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",6419,"KRN",19,"NM",1,0)
XUMF LOAD NPI^^0
"BLD",6419,"KRN",19,"NM","B","XUMF LOAD NPI",1)

"BLD",6419,"KRN",19.1,0)
19.1
"BLD",6419,"KRN",101,0)
101
"BLD",6419,"KRN",409.61,0)
409.61
"BLD",6419,"KRN",771,0)
771
"BLD",6419,"KRN",870,0)
870
"BLD",6419,"KRN",8989.51,0)
8989.51
"BLD",6419,"KRN",8989.52,0)
8989.52
"BLD",6419,"KRN",8994,0)
8994
"BLD",6419,"KRN","B",.4,.4)

"BLD",6419,"KRN","B",.401,.401)

"BLD",6419,"KRN","B",.402,.402)

"BLD",6419,"KRN","B",.403,.403)

"BLD",6419,"KRN","B",.5,.5)

"BLD",6419,"KRN","B",.84,.84)

"BLD",6419,"KRN","B",3.6,3.6)

"BLD",6419,"KRN","B",3.8,3.8)

"BLD",6419,"KRN","B",9.2,9.2)

"BLD",6419,"KRN","B",9.8,9.8)

"BLD",6419,"KRN","B",19,19)

"BLD",6419,"KRN","B",19.1,19.1)

"BLD",6419,"KRN","B",101,101)

"BLD",6419,"KRN","B",409.61,409.61)

"BLD",6419,"KRN","B",771,771)

"BLD",6419,"KRN","B",870,870)

"BLD",6419,"KRN","B",8989.51,8989.51)

"BLD",6419,"KRN","B",8989.52,8989.52)

"BLD",6419,"KRN","B",8994,8994)

"BLD",6419,"QUES",0)
^9.62^^
"BLD",6419,"REQB",0)
^9.611^3^3
"BLD",6419,"REQB",1,0)
XU*8.0*369^1
"BLD",6419,"REQB",2,0)
XU*8.0*410^1
"BLD",6419,"REQB",3,0)
XU*8.0*435^1
"BLD",6419,"REQB","B","XU*8.0*369",1)

"BLD",6419,"REQB","B","XU*8.0*410",2)

"BLD",6419,"REQB","B","XU*8.0*435",3)

"FIA",8932.1)
PERSON CLASS
"FIA",8932.1,0)
^USC(8932.1,
"FIA",8932.1,0,0)
8932.1OIs
"FIA",8932.1,0,1)
y^n^p^^^^n^^n
"FIA",8932.1,0,10)

"FIA",8932.1,0,11)

"FIA",8932.1,0,"RLRO")

"FIA",8932.1,0,"VR")
8.0^XU
"FIA",8932.1,8932.1)
1
"FIA",8932.1,8932.1,90002)

"INI")
DEL^XUMF416
"INIT")
EN^XUMF416
"KRN",3.8,226,-1)
0^1
"KRN",3.8,226,0)
XUMF NPI^PU^^^^0^
"KRN",3.8,226,2,0)
^3.801^1^1^3070118^^^^
"KRN",3.8,226,2,1,0)
This mail group receives messages related to the Master File Server.
"KRN",3.8,226,3)

"KRN",3.8,226,6,0)
^3.812^1^1
"KRN",3.8,226,6,1,0)
G.XUMF ERROR@FORUM.VA.GOV
"KRN",3.8,226,6,"B","G.XUMF ERROR@FORUM.VA.GOV",1)

"KRN",19,10465,-1)
0^1
"KRN",19,10465,0)
XUMF LOAD NPI^Load Institution NPI values^^R^^^^^^^^KERNEL
"KRN",19,10465,1,0)
^^2^2^3060822^
"KRN",19,10465,1,1,0)
This option will execute an HL7 query to FORUM to get the NPI values
"KRN",19,10465,1,2,0)
from the Institution Master File and update the local Institution file.
"KRN",19,10465,25)
EN^XUMF416
"KRN",19,10465,"U")
LOAD INSTITUTION NPI VALUES
"MBREQ")
0
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3040115^2960606^1
"PKG",3,22,1,"PAH",1,0)
416^3070118
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","XUMF")
0^6^B99395645^B79908671
"RTN","XUMF",1,0)
XUMF ;OIFO-OAK/RAM - XUMF API's;04/15/02
"RTN","XUMF",2,0)
 ;;8.0;KERNEL;**218,335,416**;Jul 10, 1995;Build 5
"RTN","XUMF",3,0)
 ;
"RTN","XUMF",4,0)
 Q
"RTN","XUMF",5,0)
 ;
"RTN","XUMF",6,0)
IEN(IFN,CDSYS,ID) ; -- Internal Entry Number
"RTN","XUMF",7,0)
 ;
"RTN","XUMF",8,0)
 N IEN,ROOT
"RTN","XUMF",9,0)
 ;
"RTN","XUMF",10,0)
 S IFN=$G(IFN),CDSYS=$G(CDSYS),ID=$G(ID)
"RTN","XUMF",11,0)
 ;
"RTN","XUMF",12,0)
 Q:'IFN "0^IFN required"
"RTN","XUMF",13,0)
 Q:CDSYS="" "0^CDSYS required"
"RTN","XUMF",14,0)
 Q:ID="" "0^ID required"
"RTN","XUMF",15,0)
 ;
"RTN","XUMF",16,0)
 S ROOT=$$ROOT^DILFD(IFN,,1) Q:ROOT="" "0^invalid IFN"
"RTN","XUMF",17,0)
 S IEN=$O(@ROOT@("XUMFIDX",CDSYS,ID,0))
"RTN","XUMF",18,0)
 ;
"RTN","XUMF",19,0)
 Q $S(IEN:IEN,1:"0^not found")
"RTN","XUMF",20,0)
 ;
"RTN","XUMF",21,0)
FLD(FILE,FIELD) ; field
"RTN","XUMF",22,0)
 ;
"RTN","XUMF",23,0)
 N Y,DA,X
"RTN","XUMF",24,0)
 ;
"RTN","XUMF",25,0)
 S Y=$$FIELD(FILE,FIELD,"LABEL")
"RTN","XUMF",26,0)
 ;
"RTN","XUMF",27,0)
 Q $S(Y'="":1,1:0)
"RTN","XUMF",28,0)
 ;
"RTN","XUMF",29,0)
LBL(FILE,FIELD) ; field label
"RTN","XUMF",30,0)
 ;
"RTN","XUMF",31,0)
 Q $$FIELD(FILE,FIELD,"LABEL")
"RTN","XUMF",32,0)
 ;
"RTN","XUMF",33,0)
TYP(FILE,FIELD) ; field type
"RTN","XUMF",34,0)
 ;
"RTN","XUMF",35,0)
 Q $$FIELD(FILE,FIELD,"TYPE")
"RTN","XUMF",36,0)
 ;
"RTN","XUMF",37,0)
PTR(FILE,FIELD) ; pointer field?
"RTN","XUMF",38,0)
 ;
"RTN","XUMF",39,0)
 Q $S($$TYP(FILE,FIELD)="POINTER":1,1:0)
"RTN","XUMF",40,0)
 ;
"RTN","XUMF",41,0)
FIELD(FILE,FIELD,ATT) ; field attributes
"RTN","XUMF",42,0)
 ;
"RTN","XUMF",43,0)
 N Y,DA,X
"RTN","XUMF",44,0)
 ;
"RTN","XUMF",45,0)
 Q:'$G(FILE) ""
"RTN","XUMF",46,0)
 Q:'$G(FIELD) ""
"RTN","XUMF",47,0)
 Q:$G(ATT)="" ""
"RTN","XUMF",48,0)
 ;
"RTN","XUMF",49,0)
 D FIELD^DID(FILE,FIELD,"N",ATT,"Y")
"RTN","XUMF",50,0)
 ;
"RTN","XUMF",51,0)
 Q $G(Y(ATT))
"RTN","XUMF",52,0)
 ;
"RTN","XUMF",53,0)
FILE(FILE,ATT) ; file attributes
"RTN","XUMF",54,0)
 ;
"RTN","XUMF",55,0)
 N Y,DA,X
"RTN","XUMF",56,0)
 ;
"RTN","XUMF",57,0)
 Q:'$G(FILE) ""
"RTN","XUMF",58,0)
 Q:$G(ATT)="" ""
"RTN","XUMF",59,0)
 ;
"RTN","XUMF",60,0)
 D FILE^DID(FILE,,ATT,"Y")
"RTN","XUMF",61,0)
 ;
"RTN","XUMF",62,0)
 Q $G(Y(ATT))
"RTN","XUMF",63,0)
 ;
"RTN","XUMF",64,0)
ECHO(FILE,IDX,X,XUMF) ; validate field exists and echo name
"RTN","XUMF",65,0)
 ;
"RTN","XUMF",66,0)
 Q:'$$F(+$G(XUMF)) 0
"RTN","XUMF",67,0)
 ;
"RTN","XUMF",68,0)
 N SUBFILE,NAME
"RTN","XUMF",69,0)
 ;
"RTN","XUMF",70,0)
 S SUBFILE=$P($G(^DIC(4.001,+$G(FILE),1,+$G(IDX),0)),U,4)
"RTN","XUMF",71,0)
 ;
"RTN","XUMF",72,0)
 S NAME=$$LBL($S(SUBFILE:SUBFILE,1:+$G(FILE)),X)
"RTN","XUMF",73,0)
 ;
"RTN","XUMF",74,0)
 Q:NAME="" 0
"RTN","XUMF",75,0)
 ;
"RTN","XUMF",76,0)
 ;W " "_NAME
"RTN","XUMF",77,0)
 ;
"RTN","XUMF",78,0)
 Q 1
"RTN","XUMF",79,0)
 ;
"RTN","XUMF",80,0)
F(XUMF) ; constrain edits to standard values
"RTN","XUMF",81,0)
 ;
"RTN","XUMF",82,0)
 Q $S($G(XUMF):1,1:0)
"RTN","XUMF",83,0)
 ;
"RTN","XUMF",84,0)
PKV(IFN,IEN,HLCS) ; Primary Key Value - MFE.4
"RTN","XUMF",85,0)
 ;
"RTN","XUMF",86,0)
 S IFN=$G(IFN),IEN=$G(IEN),HLCS=$G(HLCS)
"RTN","XUMF",87,0)
 ;
"RTN","XUMF",88,0)
 N MFE,NODE,ID,TEXT,CDSYS,IENS
"RTN","XUMF",89,0)
 ;
"RTN","XUMF",90,0)
 S NODE=$G(^DIC(4.001,IFN,"MFE"))
"RTN","XUMF",91,0)
 Q:NODE="" "1Error - MFS parameter not defined for IFN "_IFN
"RTN","XUMF",92,0)
 ;
"RTN","XUMF",93,0)
 S:HLCS="" HLCS="~"
"RTN","XUMF",94,0)
 S CDSYS=$P(NODE,U,3)
"RTN","XUMF",95,0)
 ;
"RTN","XUMF",96,0)
 Q:IEN="NEW" IEN_HLCS_"NEW ENTRY"_HLCS_CDSYS
"RTN","XUMF",97,0)
 ;
"RTN","XUMF",98,0)
 Q:'IFN "1Error - IFN required"
"RTN","XUMF",99,0)
 Q:'IEN "1Error - IEN required"
"RTN","XUMF",100,0)
 ;
"RTN","XUMF",101,0)
 S IENS=IEN_","
"RTN","XUMF",102,0)
 ;
"RTN","XUMF",103,0)
 S FIELD=$P(NODE,U,1),ID=$$GET1^DIQ(IFN,IENS,FIELD)
"RTN","XUMF",104,0)
 S FIELD=$P(NODE,U,2),TEXT=$$GET1^DIQ(IFN,IENS,FIELD)
"RTN","XUMF",105,0)
 ;
"RTN","XUMF",106,0)
 S MFE=ID_HLCS_TEXT_HLCS_CDSYS
"RTN","XUMF",107,0)
 ;
"RTN","XUMF",108,0)
 Q:'$P(NODE,U,4) MFE
"RTN","XUMF",109,0)
 ;
"RTN","XUMF",110,0)
 S FIELD=$P(NODE,U,4),ID=$$GET1^DIQ(IFN,IENS,FIELD)
"RTN","XUMF",111,0)
 S FIELD=$P(NODE,U,5),TEXT=$$GET1^DIQ(IFN,IENS,FIELD)
"RTN","XUMF",112,0)
 S CDSYS=$P(NODE,U,6)
"RTN","XUMF",113,0)
 ;
"RTN","XUMF",114,0)
 Q MFE_HLCS_ID_HLCS_TEXT_HLCS_CDSYS
"RTN","XUMF",115,0)
 ;
"RTN","XUMF",116,0)
MFE(IFN,PKV,HLCS,IEN,ERROR) ; -- update
"RTN","XUMF",117,0)
 ;
"RTN","XUMF",118,0)
 N IENS,MFE,I,X,ID,XREF,NAME,FLD,FDA,DIC
"RTN","XUMF",119,0)
 ;
"RTN","XUMF",120,0)
 S IFN=$G(IFN),IEN=$G(IEN),HLCS=$G(HLCS),ERROR=$G(ERROR)
"RTN","XUMF",121,0)
 S:HLCS="" HLCS="~"
"RTN","XUMF",122,0)
 ;
"RTN","XUMF",123,0)
 Q:ERROR
"RTN","XUMF",124,0)
 ;
"RTN","XUMF",125,0)
 I 'IFN S ERROR="1Error - IFN required" Q
"RTN","XUMF",126,0)
 ;
"RTN","XUMF",127,0)
 I IFN'=4.001 D  Q:ERROR
"RTN","XUMF",128,0)
 .S MFE=$G(^DIC(4.001,IFN,"MFE")),XREF=$P(MFE,U,8)
"RTN","XUMF",129,0)
 .I '$P(MFE,U,1) D  Q
"RTN","XUMF",130,0)
 ..S ERROR="1MFS PARAM MFE.4.1 null"
"RTN","XUMF",131,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMF",132,0)
 .I '$P(MFE,U,2) D  Q
"RTN","XUMF",133,0)
 ..S ERROR="1MFS PARAM MFE.4.2 null"
"RTN","XUMF",134,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMF",135,0)
 .I XREF="" D  Q
"RTN","XUMF",136,0)
 ..S ERROR="1MFS PARAM MFE XREF not defined"
"RTN","XUMF",137,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMF",138,0)
 ;
"RTN","XUMF",139,0)
 I IFN=4.001 D  Q
"RTN","XUMF",140,0)
 .S IEN=$$FIND1^DIC(1,,"BX",$P(PKV,HLCS))
"RTN","XUMF",141,0)
 .I 'IEN D  Q
"RTN","XUMF",142,0)
 ..S ERROR="1not a valid IEN in MFE XUMF"
"RTN","XUMF",143,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMF",144,0)
 .Q:$D(^DIC(4.001,IEN))
"RTN","XUMF",145,0)
 .X HLNEXT
"RTN","XUMF",146,0)
 .I $P(HLNODE,HLFS)'="ZZZ" D  Q
"RTN","XUMF",147,0)
 ..S ERROR="1MFP error in MFE XUMF"
"RTN","XUMF",148,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMF",149,0)
 .S MFE=$P(HLNODE,HLFS,7,12),MFE=$TR(MFE,HLFS,U)
"RTN","XUMF",150,0)
 .S X="" F I=5,4,2,1 S:$P(MFE,U,I)=.01 X=I
"RTN","XUMF",151,0)
 .I 'X D  Q
"RTN","XUMF",152,0)
 ..S ERROR="1MFS PARAM no .01 in MFE"
"RTN","XUMF",153,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMF",154,0)
 .S NAME=$P(PKV,HLCS,X) K X
"RTN","XUMF",155,0)
 .K FDA
"RTN","XUMF",156,0)
 .S FDA(IFN,"?+1,",.01)=NAME
"RTN","XUMF",157,0)
 .D UPDATE^DIE("E","FDA")
"RTN","XUMF",158,0)
 ;
"RTN","XUMF",159,0)
 S ID=$P(PKV,HLCS)
"RTN","XUMF",160,0)
 I ID="" D  Q
"RTN","XUMF",161,0)
 .S ERROR="1MFS PARAM MFE PKV ID null"
"RTN","XUMF",162,0)
 .D EM^XUMFH(ERROR,.ERR)
"RTN","XUMF",163,0)
 S ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","XUMF",164,0)
 I $D(@ROOT@(XREF)),'$G(IEN) S IEN=$O(@ROOT@(XREF,ID,0))
"RTN","XUMF",165,0)
 S:'IEN IEN=$$FIND1^DIC(IFN,,"B",ID)
"RTN","XUMF",166,0)
 ;
"RTN","XUMF",167,0)
 I 'IEN D  Q:ERROR
"RTN","XUMF",168,0)
 .S X="" F I=5,4,2,1 S:$P(MFE,U,I)=.01 X=I
"RTN","XUMF",169,0)
 .I 'X D  Q
"RTN","XUMF",170,0)
 ..S ERROR="1MFS PARAM no .01 in MFE"
"RTN","XUMF",171,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMF",172,0)
 .S NAME=$P(PKV,HLCS,X) K X
"RTN","XUMF",173,0)
 .I NAME="" S ERROR="1MFS PARAM MFE PKV .01 is null" Q
"RTN","XUMF",174,0)
 .D CHK^DIE(IFN,.01,,NAME,.X)
"RTN","XUMF",175,0)
 .I X="^" D  Q
"RTN","XUMF",176,0)
 ..S ERROR="1MFS PARAM MFE PKV .01 is invalid"
"RTN","XUMF",177,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMF",178,0)
 .K DIC S DIC=IFN,DIC(0)="F" D FILE^DICN K DIC
"RTN","XUMF",179,0)
 .I Y="-1" D  Q
"RTN","XUMF",180,0)
 ..S ERROR="1MFS PARAM MFE FileDICN unsuccessful"
"RTN","XUMF",181,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMF",182,0)
 .S IEN=+Y
"RTN","XUMF",183,0)
 ;
"RTN","XUMF",184,0)
 S IENS=IEN_","
"RTN","XUMF",185,0)
 ;
"RTN","XUMF",186,0)
 F I=1,2,4,5 D
"RTN","XUMF",187,0)
 .S FLD=$P(MFE,U,I) Q:'FLD
"RTN","XUMF",188,0)
 .S FDA(IFN,IENS,FLD)=$P(PKV,HLCS,I)
"RTN","XUMF",189,0)
 ;
"RTN","XUMF",190,0)
 D FILE^DIE("E","FDA","ERR")
"RTN","XUMF",191,0)
 I $D(ERR) D
"RTN","XUMF",192,0)
 .D EM^XUMFH("1FILE DIE error msg in MFE of XUMF",.ERR)
"RTN","XUMF",193,0)
 .K ERR
"RTN","XUMF",194,0)
 ;
"RTN","XUMF",195,0)
 Q
"RTN","XUMF",196,0)
 ;
"RTN","XUMF",197,0)
MFP(IFN,ERR) ; -- validate Master File Parameters entry FALSE=valid
"RTN","XUMF",198,0)
 ;
"RTN","XUMF",199,0)
 Q:'$G(IFN) "IFN null"
"RTN","XUMF",200,0)
 ;
"RTN","XUMF",201,0)
 D ZERO(IFN,.ERR)
"RTN","XUMF",202,0)
 D MFE1(IFN,.ERR)
"RTN","XUMF",203,0)
 D SEQ(IFN,.ERR)
"RTN","XUMF",204,0)
 ;
"RTN","XUMF",205,0)
 Q $S($D(ERR("FATAL")):1,$D(ERR("WARNING")):2,1:0)
"RTN","XUMF",206,0)
 ;
"RTN","XUMF",207,0)
ZERO(IFN,ERR) ; -- zero node
"RTN","XUMF",208,0)
 ;
"RTN","XUMF",209,0)
 N X,CNT
"RTN","XUMF",210,0)
 ;
"RTN","XUMF",211,0)
 S X=$G(^DIC(4.001,+IFN,0)),CNT=1
"RTN","XUMF",212,0)
 I $P(X,U,2)="" D
"RTN","XUMF",213,0)
 .S ERR("FATAL","ZERO",CNT)="Z SEGMENT is null",CNT=CNT+1
"RTN","XUMF",214,0)
 I $P(X,U,3)="" D
"RTN","XUMF",215,0)
 .S ERR("FATAL","ZERO",CNT)="MFI CODE is null",CNT=CNT+1
"RTN","XUMF",216,0)
 I $P(X,U,4)="" D
"RTN","XUMF",217,0)
 .S ERR("WARNING","ZERO",CNT)="PRE-UPDATE ROUTINE is null",CNT=CNT+1
"RTN","XUMF",218,0)
 I $P(X,U,5)="" D
"RTN","XUMF",219,0)
 .S ERR("WARNING","ZERO",CNT)="POST-UPDATE ROUTINE is null",CNT=CNT+1
"RTN","XUMF",220,0)
 I $P(X,U,6)="" D
"RTN","XUMF",221,0)
 .S ERR("WARNING","ZERO",CNT)="MAIL GROUP is null",CNT=CNT+1
"RTN","XUMF",222,0)
 ;
"RTN","XUMF",223,0)
 Q
"RTN","XUMF",224,0)
 ;
"RTN","XUMF",225,0)
MFE1(IFN,ERR) ; -- MFE node
"RTN","XUMF",226,0)
 ;
"RTN","XUMF",227,0)
 N X,I,CNT
"RTN","XUMF",228,0)
 ;
"RTN","XUMF",229,0)
 S X=$G(^DIC(4.001,+IFN,"MFE")),CNT=1
"RTN","XUMF",230,0)
 F I=1:1:6 I $P(X,U,I)="" D
"RTN","XUMF",231,0)
 .S ERR("FATAL","MFE",CNT)="MFE ID & ALT ID field and codsys required"
"RTN","XUMF",232,0)
 .S CNT=CNT+1
"RTN","XUMF",233,0)
 I $P(X,U,8)="" D
"RTN","XUMF",234,0)
 .S ERR("FATAL","MFE",CNT)="MFE PKV X-REF required",CNT=CNT+1
"RTN","XUMF",235,0)
 F I=11,12,14,15 I $P(X,U,I)="" D
"RTN","XUMF",236,0)
 .S ERR("WARNING","MFE",CNT)="MFE PKV types are null",CNT=CNT+1
"RTN","XUMF",237,0)
 I $P(X,U,9)="" D
"RTN","XUMF",238,0)
 .S ERR("WARNING","MFE",CNT)="ASSIGNING AUTHORITY is null",CNT=CNT+1
"RTN","XUMF",239,0)
 ;
"RTN","XUMF",240,0)
 Q
"RTN","XUMF",241,0)
 ;
"RTN","XUMF",242,0)
SEQ(IFN,ERR) ; -- sequence nodes
"RTN","XUMF",243,0)
 ;
"RTN","XUMF",244,0)
 N SEQ,MULT,X,I,Y
"RTN","XUMF",245,0)
 ;
"RTN","XUMF",246,0)
 S SEQ=0
"RTN","XUMF",247,0)
 F  S SEQ=$O(^DIC(4.001,IFN,1,SEQ)) Q:'SEQ  D
"RTN","XUMF",248,0)
 .S X=$G(^DIC(4.001,IFN,1,SEQ,0))
"RTN","XUMF",249,0)
 .I $$TYP($S($P(X,U,4):$P(X,U,4),1:IFN),$P(X,U,2))="POINTER" D
"RTN","XUMF",250,0)
 ..Q:$P(X,U,7)'=""
"RTN","XUMF",251,0)
 ..S Y=$S($P(X,U,4):$P(X,U,4),1:IFN),Y=$$LBL(Y,$P(X,U,2))
"RTN","XUMF",252,0)
 ..S Y="field "_Y_" is pointer EXTENDED POINTER LKUP is NULL"
"RTN","XUMF",253,0)
 ..S ERR("WARNING",SEQ)=Y
"RTN","XUMF",254,0)
 .S MULT=$S($P(X,U,4):1,1:0)
"RTN","XUMF",255,0)
 .I '$P(X,U,2) S ERR("FATAL",SEQ)=" missing FIELD NUMBER"
"RTN","XUMF",256,0)
 .I MULT,$P(X,U,8)="" D
"RTN","XUMF",257,0)
 ..S ERR("FATAL",SEQ)=" MULT IEN FUNCTION is null"
"RTN","XUMF",258,0)
 .I MULT,$P(X,U,6),$P(X,U,5)'="" D
"RTN","XUMF",259,0)
 ..S ERR("FATAL",SEQ)=" SUBFILE KEY LKUP/KEY SEQ mismatch"
"RTN","XUMF",260,0)
 .I MULT,'$P(X,U,6),$P(X,U,5)="" D
"RTN","XUMF",261,0)
 ..S ERR("FATAL",SEQ)=" SUBFILE KEY LKUP/KEY SEQ mismatch"
"RTN","XUMF",262,0)
 .I 'MULT F I=5,6,8 D
"RTN","XUMF",263,0)
 ..Q:$P(X,U,I)=""
"RTN","XUMF",264,0)
 ..S ERR("FATAL",SEQ)=" SUBFILE null with subfile parameters"
"RTN","XUMF",265,0)
 ;
"RTN","XUMF",266,0)
 Q
"RTN","XUMF",267,0)
 ;
"RTN","XUMF",268,0)
BG(IFN,IEN,TYP) ; -- background job
"RTN","XUMF",269,0)
 ;
"RTN","XUMF",270,0)
 ; type (5=file, 7=array)
"RTN","XUMF",271,0)
 ;
"RTN","XUMF",272,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSAVE
"RTN","XUMF",273,0)
 ;
"RTN","XUMF",274,0)
 S TYP=$G(TYP) S:'TYP TYP=5
"RTN","XUMF",275,0)
 S IEN=$G(IEN) S:IEN="" IEN="ALL"
"RTN","XUMF",276,0)
 ;
"RTN","XUMF",277,0)
 S ZTDTH=$$NOW^XLFDT,ZTRTN="BG1^XUMF",ZTIO=""
"RTN","XUMF",278,0)
 S ZTSAVE("IFN")="",ZTSAVE("TYP")="",ZTSAVE("IEN")=""
"RTN","XUMF",279,0)
 S ZTDESC="XUMF get "_$$FILE^XUMF(IFN,"NAME")_" using MFS"
"RTN","XUMF",280,0)
 ;
"RTN","XUMF",281,0)
 D ^%ZTLOAD
"RTN","XUMF",282,0)
 ;
"RTN","XUMF",283,0)
 Q
"RTN","XUMF",284,0)
 ;
"RTN","XUMF",285,0)
BG1 ; -- get file
"RTN","XUMF",286,0)
 ;
"RTN","XUMF",287,0)
 D MFS(IFN,IEN,TYP,.ERROR),EXIT
"RTN","XUMF",288,0)
 ;
"RTN","XUMF",289,0)
 Q
"RTN","XUMF",290,0)
 ;
"RTN","XUMF",291,0)
LOAD(IFN) ; -- query and file
"RTN","XUMF",292,0)
 ;
"RTN","XUMF",293,0)
 D MFS(IFN,"ALL",5,.ERROR)
"RTN","XUMF",294,0)
 ;
"RTN","XUMF",295,0)
 Q
"RTN","XUMF",296,0)
 ;
"RTN","XUMF",297,0)
ARRAY(IFN) ; -- query and put in array
"RTN","XUMF",298,0)
 ;
"RTN","XUMF",299,0)
 D MFS(IFN,"ALL",7,.ERROR)
"RTN","XUMF",300,0)
 ;
"RTN","XUMF",301,0)
 Q
"RTN","XUMF",302,0)
 ;
"RTN","XUMF",303,0)
GETCE(IFN,IEN,TYP,ERROR) ; -- get master file provide coded element
"RTN","XUMF",304,0)
 ;
"RTN","XUMF",305,0)
 Q
"RTN","XUMF",306,0)
 ;
"RTN","XUMF",307,0)
MFS(IFN,IEN,TYP,ERROR) ; -- get file from Master File Server
"RTN","XUMF",308,0)
 ;
"RTN","XUMF",309,0)
 ; TYP (5=query/file, 7=query/tmp_array)
"RTN","XUMF",310,0)
 ;
"RTN","XUMF",311,0)
 N TEST
"RTN","XUMF",312,0)
 ;
"RTN","XUMF",313,0)
 S (ERROR,TEST)=0
"RTN","XUMF",314,0)
 ;
"RTN","XUMF",315,0)
 S IFN=$G(IFN),IEN=$G(IEN),TYP=$G(TYP)
"RTN","XUMF",316,0)
 ;
"RTN","XUMF",317,0)
 I 'IFN S ERROR="1IFN not valid MFS in XUMF" Q
"RTN","XUMF",318,0)
 I IEN="" S ERROR="1IEN not valid MFS in XUMF" Q
"RTN","XUMF",319,0)
 I TYP'=5,TYP'=7 S ERROR="1type not support by MFS in XUMF" Q
"RTN","XUMF",320,0)
 ;
"RTN","XUMF",321,0)
 I $P($$PARAM^HLCS2,U,3)="T" S TEST=1
"RTN","XUMF",322,0)
 ;
"RTN","XUMF",323,0)
 S PARAM("LLNK")="XUMF MFR^XUMF "_$S('TEST:"FORUM",1:"TEST")
"RTN","XUMF",324,0)
 S PARAM("PROTOCOL")=$O(^ORD(101,"B","XUMF MFQ",0))
"RTN","XUMF",325,0)
 ;
"RTN","XUMF",326,0)
 D MAIN^XUMFP(IFN,"ALL",TYP,.PARAM,.ERROR) Q:ERROR
"RTN","XUMF",327,0)
 D MAIN^XUMFI(IFN,"ALL",TYP,.PARAM,.ERROR) Q:ERROR
"RTN","XUMF",328,0)
 D MAIN^XUMFH
"RTN","XUMF",329,0)
 ;
"RTN","XUMF",330,0)
 Q
"RTN","XUMF",331,0)
 ;
"RTN","XUMF",332,0)
 ;
"RTN","XUMF",333,0)
EXIT ; -- cleanup and quit
"RTN","XUMF",334,0)
 ;
"RTN","XUMF",335,0)
 K ^TMP("XUMF MFS",$J),^TMP("DIERR",$J)
"RTN","XUMF",336,0)
 ;
"RTN","XUMF",337,0)
 S ZTREQ="@"
"RTN","XUMF",338,0)
 ;
"RTN","XUMF",339,0)
 Q
"RTN","XUMF",340,0)
 ;
"RTN","XUMF",341,0)
NPI ; -- NPI
"RTN","XUMF",342,0)
 ;
"RTN","XUMF",343,0)
 N COL,X,FDA,NPIDT,NPISTAT,NPI,TAX,TAXPC,TAXSTAT,ERR
"RTN","XUMF",344,0)
 ;
"RTN","XUMF",345,0)
 D SEGPRSE^XUMFXHL7("HLNODE","COL")
"RTN","XUMF",346,0)
 ;
"RTN","XUMF",347,0)
 S NPIDT=$$FMDATE^HLFNC(COL(17))
"RTN","XUMF",348,0)
 S NPISTAT=COL(18)
"RTN","XUMF",349,0)
 S NPI=COL(19)
"RTN","XUMF",350,0)
 S TAX=COL(20)
"RTN","XUMF",351,0)
 S TAXPC=COL(21)
"RTN","XUMF",352,0)
 S TAXSTAT=COL(22)
"RTN","XUMF",353,0)
 ;
"RTN","XUMF",354,0)
 S X=$$NPI^XUSNPI("Organization_ID",IEN,NPIDT)
"RTN","XUMF",355,0)
 I $S(X=0:1,$$UP^XLFSTR($P(X,U,3))'=NPISTAT:1,NPI'=+X:1,1:0) D
"RTN","XUMF",356,0)
 .S X=$$ADDNPI^XUSNPI("Organization_ID",IEN,NPI,NPIDT,$S(NPISTAT="ACTIVE":1,1:0))
"RTN","XUMF",357,0)
 ;
"RTN","XUMF",358,0)
 S IENS="?+1,"_IEN_","
"RTN","XUMF",359,0)
 K FDA
"RTN","XUMF",360,0)
 S FDA(4.9999,IENS,.01)="NPI"
"RTN","XUMF",361,0)
 S FDA(4.9999,IENS,.02)=NPI
"RTN","XUMF",362,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","XUMF",363,0)
 ;
"RTN","XUMF",364,0)
 K FDA
"RTN","XUMF",365,0)
 S IENS="?+1,"_IEN_","
"RTN","XUMF",366,0)
 S FDA(4.043,IENS,.01)=TAX
"RTN","XUMF",367,0)
 S FDA(4.043,IENS,.02)=TAXPC
"RTN","XUMF",368,0)
 S FDA(4.043,IENS,.03)=TAXSTAT
"RTN","XUMF",369,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","XUMF",370,0)
 ;
"RTN","XUMF",371,0)
 S SEQ=22
"RTN","XUMF",372,0)
 ;
"RTN","XUMF",373,0)
 Q
"RTN","XUMF",374,0)
 ;
"RTN","XUMF",375,0)
CDSYS(CDSYS,ID,IEN) ; udpate coding system / ID
"RTN","XUMF",376,0)
 ;
"RTN","XUMF",377,0)
 N IENS,FDA
"RTN","XUMF",378,0)
 ;
"RTN","XUMF",379,0)
 S IENS="?+1,"_IEN_","
"RTN","XUMF",380,0)
 K FDA
"RTN","XUMF",381,0)
 S FDA(4.9999,IENS,.01)=CDSYS
"RTN","XUMF",382,0)
 S FDA(4.9999,IENS,.02)=ID
"RTN","XUMF",383,0)
 D
"RTN","XUMF",384,0)
 .N IEN,VALUE
"RTN","XUMF",385,0)
 .D UPDATE^DIE("E","FDA")
"RTN","XUMF",386,0)
 ;
"RTN","XUMF",387,0)
 Q
"RTN","XUMF",388,0)
 ;
"RTN","XUMF416")
0^3^B82158397^n/a
"RTN","XUMF416",1,0)
XUMF416 ;ISS/RAM - Load NPI;12/15/05
"RTN","XUMF416",2,0)
 ;;8.0;KERNEL;**416**;Jul 10, 1995;Build 5
"RTN","XUMF416",3,0)
 ;
"RTN","XUMF416",4,0)
 ; $$PARAM^HLCS2 call supported by IA #3552
"RTN","XUMF416",5,0)
 ;
"RTN","XUMF416",6,0)
 Q
"RTN","XUMF416",7,0)
 ;
"RTN","XUMF416",8,0)
BG ; -- background job
"RTN","XUMF416",9,0)
 ;
"RTN","XUMF416",10,0)
 N ZTRTN,ZTDESC,ZTDTH
"RTN","XUMF416",11,0)
 ;
"RTN","XUMF416",12,0)
 S ZTRTN="EN^XUMF416"
"RTN","XUMF416",13,0)
 S ZTDESC="XUMF Load NPI"
"RTN","XUMF416",14,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","XUMF416",15,0)
 S ZTIO=""
"RTN","XUMF416",16,0)
 ;
"RTN","XUMF416",17,0)
 D ^%ZTLOAD
"RTN","XUMF416",18,0)
 ;
"RTN","XUMF416",19,0)
 Q
"RTN","XUMF416",20,0)
 ;
"RTN","XUMF416",21,0)
EN ; -- entry point
"RTN","XUMF416",22,0)
 ;
"RTN","XUMF416",23,0)
 K ^TMP("XUMF ARRAY",$J)
"RTN","XUMF416",24,0)
 ;
"RTN","XUMF416",25,0)
 N PARAM,XUMFLAG,ERROR,TEST
"RTN","XUMF416",26,0)
 ;
"RTN","XUMF416",27,0)
 S (ERROR,XUMFLAG,TEST)=0
"RTN","XUMF416",28,0)
 ;
"RTN","XUMF416",29,0)
 I $P($$PARAM^HLCS2,U,3)="T" S TEST=1
"RTN","XUMF416",30,0)
 ;
"RTN","XUMF416",31,0)
 L +^TMP("XUMF ARRAY",$J):0 D:'$T
"RTN","XUMF416",32,0)
 .S ERROR="1^another process is using the Master File Server"
"RTN","XUMF416",33,0)
 ;
"RTN","XUMF416",34,0)
 I ERROR D EXIT Q
"RTN","XUMF416",35,0)
 ;
"RTN","XUMF416",36,0)
 D MFS0
"RTN","XUMF416",37,0)
 ;
"RTN","XUMF416",38,0)
 I ERROR D EXIT Q
"RTN","XUMF416",39,0)
 ;
"RTN","XUMF416",40,0)
 I '$D(^TMP("XUMF ARRAY",$J)) D
"RTN","XUMF416",41,0)
 .S ERROR="1^Connection to master file server failed!"
"RTN","XUMF416",42,0)
 ;
"RTN","XUMF416",43,0)
 I ERROR D EXIT Q
"RTN","XUMF416",44,0)
 ;
"RTN","XUMF416",45,0)
 D NPI
"RTN","XUMF416",46,0)
 ;
"RTN","XUMF416",47,0)
 D EXIT
"RTN","XUMF416",48,0)
 ;
"RTN","XUMF416",49,0)
 Q
"RTN","XUMF416",50,0)
 ;
"RTN","XUMF416",51,0)
MFS0 ; -- get NPI from Institution Master File
"RTN","XUMF416",52,0)
 ;
"RTN","XUMF416",53,0)
 S PARAM("CDSYS")="NPI"
"RTN","XUMF416",54,0)
 S PARAM("LLNK")="XUMF MFR^XUMF "_$S('TEST:"FORUM",1:"TEST")
"RTN","XUMF416",55,0)
 S PARAM("PROTOCOL")=$O(^ORD(101,"B","XUMF MFQ",0))
"RTN","XUMF416",56,0)
 ;
"RTN","XUMF416",57,0)
 D MAIN^XUMFP(4,"ALL",7,.PARAM,.ERROR) Q:ERROR
"RTN","XUMF416",58,0)
 D MAIN^XUMFI(4,"ALL",7,.PARAM,.ERROR) Q:ERROR
"RTN","XUMF416",59,0)
 D MAIN^XUMFH
"RTN","XUMF416",60,0)
 ;
"RTN","XUMF416",61,0)
 Q
"RTN","XUMF416",62,0)
 ;
"RTN","XUMF416",63,0)
EXIT ; -- cleanup and quit
"RTN","XUMF416",64,0)
 ;
"RTN","XUMF416",65,0)
 I '$$FIND1^DIC(4,,"BX","BONHAM PHARMACY") D EM
"RTN","XUMF416",66,0)
 ;
"RTN","XUMF416",67,0)
 K ^TMP("XUMF ARRAY",$J),^TMP("XUMF MFS",$J),^TMP("DIERR",$J)
"RTN","XUMF416",68,0)
 ;
"RTN","XUMF416",69,0)
 L -^TMP("XUMF ARRAY",$J)
"RTN","XUMF416",70,0)
 ;
"RTN","XUMF416",71,0)
 S ZTREQ="@"
"RTN","XUMF416",72,0)
 ;
"RTN","XUMF416",73,0)
 Q
"RTN","XUMF416",74,0)
 ;
"RTN","XUMF416",75,0)
NPI ; -- add NPI ID to Institution file
"RTN","XUMF416",76,0)
 ;
"RTN","XUMF416",77,0)
 N ID,FDA,ERROR,IEN,IENS,HLNODE,ARRAY,XUMF,STANUM,TAX,TAXPC,TAXSTAT,NPI,NPIDT,NPISTAT,X,ERR,VISN
"RTN","XUMF416",78,0)
 N NAME,OFNME,AGENCY,FACTYP,STREET,CITY,STATE,ZIP,FDA,PARENT,STRT1,CITY1,STATE1,ZIP1,INACTIVE
"RTN","XUMF416",79,0)
 ;
"RTN","XUMF416",80,0)
 S XUMF=1
"RTN","XUMF416",81,0)
 ;
"RTN","XUMF416",82,0)
 S ID=""
"RTN","XUMF416",83,0)
 F  S ID=$O(^TMP("XUMF ARRAY",$J,ID)) Q:ID=""  D
"RTN","XUMF416",84,0)
 .K HLNODE
"RTN","XUMF416",85,0)
 .M HLNODE=^TMP("XUMF ARRAY",$J,ID)
"RTN","XUMF416",86,0)
 .D UPDATE
"RTN","XUMF416",87,0)
 ;
"RTN","XUMF416",88,0)
 Q
"RTN","XUMF416",89,0)
 ;
"RTN","XUMF416",90,0)
UPDATE ;
"RTN","XUMF416",91,0)
 ;
"RTN","XUMF416",92,0)
 D SEGPRSE^XUMFXHL7("HLNODE","ARRAY")
"RTN","XUMF416",93,0)
 ;
"RTN","XUMF416",94,0)
 S NAME=ARRAY(1)
"RTN","XUMF416",95,0)
 S STANUM=ARRAY(2)
"RTN","XUMF416",96,0)
 S FACTYP=$P(ARRAY(4),"~",1)
"RTN","XUMF416",97,0)
 S OFNME=ARRAY(5)
"RTN","XUMF416",98,0)
 S INACTIVE=ARRAY(6)
"RTN","XUMF416",99,0)
 S STATE=ARRAY(7)
"RTN","XUMF416",100,0)
 S VISN=ARRAY(8)
"RTN","XUMF416",101,0)
 S PARENT=ARRAY(9)
"RTN","XUMF416",102,0)
 S STREET=$P(ARRAY(14),"~",2)
"RTN","XUMF416",103,0)
 S CITY=$P(ARRAY(14),"~",3)
"RTN","XUMF416",104,0)
 S ZIP=$P(ARRAY(14),"~",5)
"RTN","XUMF416",105,0)
 S STRT1=$P(ARRAY(15),"~",2)
"RTN","XUMF416",106,0)
 S CITY1=$P(ARRAY(15),"~",3)
"RTN","XUMF416",107,0)
 S STATE1=$P(ARRAY(15),"~",4)
"RTN","XUMF416",108,0)
 S ZIP1=$P(ARRAY(15),"~",5)
"RTN","XUMF416",109,0)
 S AGENCY=$P(ARRAY(16),"~")
"RTN","XUMF416",110,0)
 S NPIDT=$$FMDATE^HLFNC(ARRAY(17))
"RTN","XUMF416",111,0)
 S NPISTAT=ARRAY(18)
"RTN","XUMF416",112,0)
 S NPI=ARRAY(19)
"RTN","XUMF416",113,0)
 S TAX=ARRAY(20)
"RTN","XUMF416",114,0)
 S TAXPC=ARRAY(21)
"RTN","XUMF416",115,0)
 S TAXSTAT=ARRAY(22)
"RTN","XUMF416",116,0)
 ;
"RTN","XUMF416",117,0)
 S IEN=$$IEN^XUMF(4,"NPI",ID)
"RTN","XUMF416",118,0)
 I 'IEN,$G(STANUM)'="" S IEN=$O(^DIC(4,"D",STANUM,0))
"RTN","XUMF416",119,0)
 I 'IEN,$D(^DIC(4,"B",NAME)) S IEN=$O(^DIC(4,"B",NAME,0))
"RTN","XUMF416",120,0)
 ;
"RTN","XUMF416",121,0)
 I 'IEN D  Q:'IEN
"RTN","XUMF416",122,0)
 .N X,Y S X=NAME
"RTN","XUMF416",123,0)
 .K DIC S DIC=4,DIC(0)="F"
"RTN","XUMF416",124,0)
 .D FILE^DICN K DIC
"RTN","XUMF416",125,0)
 .S IEN=$S(Y="-1":0,1:+Y)
"RTN","XUMF416",126,0)
 ;
"RTN","XUMF416",127,0)
 S IENS=IEN_","
"RTN","XUMF416",128,0)
 ;
"RTN","XUMF416",129,0)
 K FDA
"RTN","XUMF416",130,0)
 S FDA(4,IENS,.01)=NAME
"RTN","XUMF416",131,0)
 S FDA(4,IENS,13)=FACTYP
"RTN","XUMF416",132,0)
 S FDA(4,IENS,1.01)=STREET
"RTN","XUMF416",133,0)
 S FDA(4,IENS,1.03)=CITY
"RTN","XUMF416",134,0)
 S FDA(4,IENS,1.04)=ZIP
"RTN","XUMF416",135,0)
 S FDA(4,IENS,.02)=STATE
"RTN","XUMF416",136,0)
 S FDA(4,IENS,4.01)=STRT1
"RTN","XUMF416",137,0)
 S FDA(4,IENS,4.03)=CITY1
"RTN","XUMF416",138,0)
 S FDA(4,IENS,4.04)=STATE1
"RTN","XUMF416",139,0)
 S FDA(4,IENS,4.05)=ZIP1
"RTN","XUMF416",140,0)
 S FDA(4,IENS,11)="National"
"RTN","XUMF416",141,0)
 S FDA(4,IENS,100)=OFNME
"RTN","XUMF416",142,0)
 S FDA(4,IENS,101)=INACTIVE
"RTN","XUMF416",143,0)
 S FDA(4,IENS,95)=AGENCY
"RTN","XUMF416",144,0)
 D FILE^DIE("E","FDA","ERR")
"RTN","XUMF416",145,0)
 ;
"RTN","XUMF416",146,0)
 K FDA
"RTN","XUMF416",147,0)
 S IENS="?+1,"_IEN_","
"RTN","XUMF416",148,0)
 S FDA(4.014,IENS,.01)="VISN"
"RTN","XUMF416",149,0)
 S FDA(4.014,IENS,1)=VISN
"RTN","XUMF416",150,0)
 D UPDATE^DIE("E","FDA")
"RTN","XUMF416",151,0)
 ;
"RTN","XUMF416",152,0)
 K FDA
"RTN","XUMF416",153,0)
 S IENS="?+2,"_IEN_","
"RTN","XUMF416",154,0)
 S FDA(4.014,IENS,.01)="PARENT FACILITY"
"RTN","XUMF416",155,0)
 S FDA(4.014,IENS,1)=PARENT
"RTN","XUMF416",156,0)
 D UPDATE^DIE("E","FDA")
"RTN","XUMF416",157,0)
 ;
"RTN","XUMF416",158,0)
 S X=$$NPI^XUSNPI("Organization_ID",IEN,NPIDT)
"RTN","XUMF416",159,0)
 I $S(X=0:1,$$UP^XLFSTR($P(X,U,3))'=NPISTAT:1,NPI'=+X:1,1:0) D
"RTN","XUMF416",160,0)
 .S X=$$ADDNPI^XUSNPI("Organization_ID",IEN,NPI,NPIDT,$S(NPISTAT="ACTIVE":1,1:0))
"RTN","XUMF416",161,0)
 ;
"RTN","XUMF416",162,0)
 S IENS="?+1,"_IEN_","
"RTN","XUMF416",163,0)
 K FDA
"RTN","XUMF416",164,0)
 S FDA(4.9999,IENS,.01)="NPI"
"RTN","XUMF416",165,0)
 S FDA(4.9999,IENS,.02)=NPI
"RTN","XUMF416",166,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","XUMF416",167,0)
 ;
"RTN","XUMF416",168,0)
 K FDA
"RTN","XUMF416",169,0)
 S IENS="?+1,"_IEN_","
"RTN","XUMF416",170,0)
 S FDA(4.043,IENS,.01)=TAX
"RTN","XUMF416",171,0)
 S FDA(4.043,IENS,.02)=TAXPC
"RTN","XUMF416",172,0)
 S FDA(4.043,IENS,.03)=TAXSTAT
"RTN","XUMF416",173,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","XUMF416",174,0)
 ;
"RTN","XUMF416",175,0)
 Q
"RTN","XUMF416",176,0)
 ;
"RTN","XUMF416",177,0)
POST ;
"RTN","XUMF416",178,0)
 ;
"RTN","XUMF416",179,0)
 D TAX,STA,OPT
"RTN","XUMF416",180,0)
 ;
"RTN","XUMF416",181,0)
 Q
"RTN","XUMF416",182,0)
 ;
"RTN","XUMF416",183,0)
TAX ;
"RTN","XUMF416",184,0)
 ;
"RTN","XUMF416",185,0)
 N IENS,FDA
"RTN","XUMF416",186,0)
 ;
"RTN","XUMF416",187,0)
 S IENS="?+954,"
"RTN","XUMF416",188,0)
 K FDA
"RTN","XUMF416",189,0)
 S FDA(8932.1,IENS,.01)="General Acute Care Hospital"
"RTN","XUMF416",190,0)
 S FDA(8932.1,IENS,6)="282N00000X"
"RTN","XUMF416",191,0)
 S FDA(8932.1,IENS,90002)="NON-INDIVIDUAL"
"RTN","XUMF416",192,0)
 D UPDATE^DIE("E","FDA","IEN","ERR")
"RTN","XUMF416",193,0)
 ;
"RTN","XUMF416",194,0)
 S IENS="?+955,"
"RTN","XUMF416",195,0)
 K FDA
"RTN","XUMF416",196,0)
 S FDA(8932.1,IENS,.01)="VA FACILITY"
"RTN","XUMF416",197,0)
 S FDA(8932.1,IENS,6)="261QV0200X"
"RTN","XUMF416",198,0)
 S FDA(8932.1,IENS,90002)="NON-INDIVIDUAL"
"RTN","XUMF416",199,0)
 D UPDATE^DIE("E","FDA","IEN","ERR")
"RTN","XUMF416",200,0)
 ;
"RTN","XUMF416",201,0)
 S IENS="?+956,"
"RTN","XUMF416",202,0)
 K FDA
"RTN","XUMF416",203,0)
 S FDA(8932.1,IENS,.01)="Department of Veterans Affairs (VA) Pharmacy"
"RTN","XUMF416",204,0)
 S FDA(8932.1,IENS,6)="332100000X"
"RTN","XUMF416",205,0)
 S FDA(8932.1,IENS,90002)="NON-INDIVIDUAL"
"RTN","XUMF416",206,0)
 D UPDATE^DIE("E","FDA","IEN","ERR")
"RTN","XUMF416",207,0)
 ;
"RTN","XUMF416",208,0)
 Q
"RTN","XUMF416",209,0)
 ;
"RTN","XUMF416",210,0)
OPT ;
"RTN","XUMF416",211,0)
 ;
"RTN","XUMF416",212,0)
 N IEN,FDA,IENS
"RTN","XUMF416",213,0)
 ;
"RTN","XUMF416",214,0)
 S IEN=$$FIND1^DIC(19,,"B","XUKERNEL")
"RTN","XUMF416",215,0)
 K FDA
"RTN","XUMF416",216,0)
 S IENS="?+1,"_IEN_","
"RTN","XUMF416",217,0)
 S FDA(19.01,IENS,.01)="XUMF LOAD NPI"
"RTN","XUMF416",218,0)
 D UPDATE^DIE("E","FDA")
"RTN","XUMF416",219,0)
 ;
"RTN","XUMF416",220,0)
 Q
"RTN","XUMF416",221,0)
 ;
"RTN","XUMF416",222,0)
STA ;
"RTN","XUMF416",223,0)
 ;
"RTN","XUMF416",224,0)
 N STA,IEN,IENS,FDA,FTYP,XUMF
"RTN","XUMF416",225,0)
 ;
"RTN","XUMF416",226,0)
 S XUMF=1
"RTN","XUMF416",227,0)
 ;
"RTN","XUMF416",228,0)
 S STA=""
"RTN","XUMF416",229,0)
 F  S STA=$O(^DIC(4,"D",STA)) Q:STA=""  D
"RTN","XUMF416",230,0)
 .S IEN=$O(^DIC(4,"D",STA,0))
"RTN","XUMF416",231,0)
 .S IENS="?+1,"_IEN_","
"RTN","XUMF416",232,0)
 .K FDA
"RTN","XUMF416",233,0)
 .S FDA(4.9999,IENS,.01)="VASTANUM"
"RTN","XUMF416",234,0)
 .S FDA(4.9999,IENS,.02)=STA
"RTN","XUMF416",235,0)
 .D
"RTN","XUMF416",236,0)
 ..N IEN,STA
"RTN","XUMF416",237,0)
 ..D UPDATE^DIE("E","FDA")
"RTN","XUMF416",238,0)
 ;
"RTN","XUMF416",239,0)
 Q
"RTN","XUMF416",240,0)
 ;
"RTN","XUMF416",241,0)
DEL ;USE EXTREME CAUTION!!!!
"RTN","XUMF416",242,0)
 ;
"RTN","XUMF416",243,0)
 N IEN,NPI,IEN1,FDA,ERR
"RTN","XUMF416",244,0)
 ;
"RTN","XUMF416",245,0)
 S IEN=0
"RTN","XUMF416",246,0)
 F  S IEN=$O(^DIC(4,IEN)) Q:'IEN  D
"RTN","XUMF416",247,0)
 .;Q:'$G(^DIC(4,IEN,99))
"RTN","XUMF416",248,0)
 .S NPI=$G(^DIC(4,IEN,"NPI")) ;Q:'NPI
"RTN","XUMF416",249,0)
 .K ^DIC(4,"ANPI",+NPI,IEN)
"RTN","XUMF416",250,0)
 .K ^DIC(4,"NPI42",+NPI,IEN)
"RTN","XUMF416",251,0)
 .K ^DIC(4,IEN,"NPI")
"RTN","XUMF416",252,0)
 .K ^DIC(4,IEN,"NPISTATUS")
"RTN","XUMF416",253,0)
 .K ^DIC(4,IEN,"TAXONOMY")
"RTN","XUMF416",254,0)
 .K ^DIC(4,"TAXSTATUS","A",IEN)
"RTN","XUMF416",255,0)
 ;
"RTN","XUMF416",256,0)
XXX ;
"RTN","XUMF416",257,0)
 ;
"RTN","XUMF416",258,0)
 S NPI=0
"RTN","XUMF416",259,0)
 F  S NPI=$O(^DIC(4,"XUMFIDX","NPI",NPI)) Q:'NPI  D
"RTN","XUMF416",260,0)
 .S IEN=$O(^DIC(4,"XUMFIDX","NPI",NPI,0)) Q:'IEN
"RTN","XUMF416",261,0)
 .S IEN1=$O(^DIC(4,"XUMFIDX","NPI",NPI,IEN,0)) Q:'IEN1
"RTN","XUMF416",262,0)
 .;Q:'$G(^DIC(4,IEN,99))
"RTN","XUMF416",263,0)
 .K FDA
"RTN","XUMF416",264,0)
 .S FDA(4.9999,IEN1_","_IEN_",",.01)="@"
"RTN","XUMF416",265,0)
 .D FILE^DIE("E","FDA","ERR")
"RTN","XUMF416",266,0)
 ;
"RTN","XUMF416",267,0)
YYY ;
"RTN","XUMF416",268,0)
 ;
"RTN","XUMF416",269,0)
 S IEN=$$FIND1^DIC(870,,"BX","XUMF FORUM")
"RTN","XUMF416",270,0)
 S IENS=IEN_","
"RTN","XUMF416",271,0)
 ;
"RTN","XUMF416",272,0)
 K FDA
"RTN","XUMF416",273,0)
 S FDA(870,IENS,4.5)=1
"RTN","XUMF416",274,0)
 S FDA(870,IENS,200.04)=60
"RTN","XUMF416",275,0)
 S FDA(870,IENS,200.05)=60
"RTN","XUMF416",276,0)
 D UPDATE^DIE(,"FDA")
"RTN","XUMF416",277,0)
 ;
"RTN","XUMF416",278,0)
 Q
"RTN","XUMF416",279,0)
 ;
"RTN","XUMF416",280,0)
EM ;
"RTN","XUMF416",281,0)
 ;
"RTN","XUMF416",282,0)
 N X,XMTEXT,XMDUZ,XMSUB
"RTN","XUMF416",283,0)
 ;
"RTN","XUMF416",284,0)
 S X(1)="The post install of patch XU*8*416 has completed but the NPI values"
"RTN","XUMF416",285,0)
 S X(2)="did not get updated in your INSTITUTION (#4) file.  Check your HL LOGICAL"
"RTN","XUMF416",286,0)
 S X(3)="LINK (#870) 'XUMF FORUM.' You should be able to PING the link -- stop/start"
"RTN","XUMF416",287,0)
 S X(4)="the link if necessary.",X(4.5)=""
"RTN","XUMF416",288,0)
 S X(5)="After you have verified your XUMF FORUM link use the 'Load Institution"
"RTN","XUMF416",289,0)
 S X(6)="NPI values' [XUMF LOAD NPI] in the [XUKERNEL] menu to load the NPI values."
"RTN","XUMF416",290,0)
 S X(7)=""
"RTN","XUMF416",291,0)
 S X(8)="NOTE: If you are installing in a TEST ACCOUNT then you may disregard this"
"RTN","XUMF416",292,0)
 S X(9)="message.  If you do need to install the NPI values in a test/development"
"RTN","XUMF416",293,0)
 S X(10)="environment then you must set up the 'XUMF TEST' logical link to connect"
"RTN","XUMF416",294,0)
 S X(11)="to a test server environment.  Hospitals will most likely not wish to update"
"RTN","XUMF416",295,0)
 S X(12)="the Institution file using HL7 messaging but rather wait until the mirror"
"RTN","XUMF416",296,0)
 S X(13)="image overwrites the file normally.  If you do need to update the test or"
"RTN","XUMF416",297,0)
 S X(14)="development account and you don't have a test server available then you'll"
"RTN","XUMF416",298,0)
 S X(16)="need to contact the Institution file developer."
"RTN","XUMF416",299,0)
 ;
"RTN","XUMF416",300,0)
 S XMSUB="XUMF NPI ERROR/WARNING/INFO"
"RTN","XUMF416",301,0)
 S XMY("G.XUMF NPI")="",XMY(DUZ)="",XMDUZ=.5
"RTN","XUMF416",302,0)
 S XMTEXT="X("
"RTN","XUMF416",303,0)
 ;
"RTN","XUMF416",304,0)
 D ^XMD
"RTN","XUMF416",305,0)
 ;
"RTN","XUMF416",306,0)
 Q
"RTN","XUMF416",307,0)
 ;
"RTN","XUMFH")
0^5^B71969873^B81261510
"RTN","XUMFH",1,0)
XUMFH ;CIOFO-SF/RAM - Master File HL7 Msg Handler ;11/16/05
"RTN","XUMFH",2,0)
 ;;8.0;KERNEL;**206,209,217,218,262,335,261,390,369,416**;Jul 10, 1995;Build 5
"RTN","XUMFH",3,0)
 ;
"RTN","XUMFH",4,0)
 ; This routine handles Master File HL7 messages.
"RTN","XUMFH",5,0)
 ;
"RTN","XUMFH",6,0)
MAIN ; -- entry point
"RTN","XUMFH",7,0)
 ;
"RTN","XUMFH",8,0)
 N CNT,ERR,I,X,HLFS,HLCS,ERROR,HLRESLTA,IFN,IEN,MTPE,TYPE,ARRAY
"RTN","XUMFH",9,0)
 N HDT,KEY,MID,REASON,VALUE,XREF,ALL,GROUP,PARAM,ROOT,SEG,QRD
"RTN","XUMFH",10,0)
 N QID,WHAT,WHO,HLSCS,CDSYS,ERRCNT,IDX98
"RTN","XUMFH",11,0)
 ;
"RTN","XUMFH",12,0)
 D INIT,PROCESS,REPLY,EXIT
"RTN","XUMFH",13,0)
 ;
"RTN","XUMFH",14,0)
 Q
"RTN","XUMFH",15,0)
 ;
"RTN","XUMFH",16,0)
INIT ; -- initialize
"RTN","XUMFH",17,0)
 ;
"RTN","XUMFH",18,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J)
"RTN","XUMFH",19,0)
 K ^TMP("HLS",$J),^TMP("HLA",$J),^TMP("XUMF ERROR",$J)
"RTN","XUMFH",20,0)
 ;
"RTN","XUMFH",21,0)
 S (ERROR,CNT,TYPE,ARRAY,ERRCNT)=0
"RTN","XUMFH",22,0)
 S HLFS=HL("FS"),HLCS=$E(HL("ECH")),HLSCS=$E(HL("ECH"),4)
"RTN","XUMFH",23,0)
 ;
"RTN","XUMFH",24,0)
 Q
"RTN","XUMFH",25,0)
 ;
"RTN","XUMFH",26,0)
PROCESS ; -- pull message text
"RTN","XUMFH",27,0)
 ;
"RTN","XUMFH",28,0)
 F  X HLNEXT Q:HLQUIT'>0  D
"RTN","XUMFH",29,0)
 .Q:$P(HLNODE,HLFS)=""
"RTN","XUMFH",30,0)
 .D @($P(HLNODE,HLFS))
"RTN","XUMFH",31,0)
 ;
"RTN","XUMFH",32,0)
 Q
"RTN","XUMFH",33,0)
 ;
"RTN","XUMFH",34,0)
MSH ; -- MSH segment
"RTN","XUMFH",35,0)
 ;
"RTN","XUMFH",36,0)
 Q
"RTN","XUMFH",37,0)
 ;
"RTN","XUMFH",38,0)
MSA ; -- MSA segment
"RTN","XUMFH",39,0)
 ;
"RTN","XUMFH",40,0)
 N CODE
"RTN","XUMFH",41,0)
 ;
"RTN","XUMFH",42,0)
 S CODE=$P(HLNODE,HLFS,2)
"RTN","XUMFH",43,0)
 ;
"RTN","XUMFH",44,0)
 I CODE="AE"!(CODE="AR") D
"RTN","XUMFH",45,0)
 .S ERROR=ERROR_U_$P(HLNODE,HLFS,4)_U_$G(ERR)
"RTN","XUMFH",46,0)
 .D EM(ERROR,.ERR)
"RTN","XUMFH",47,0)
 ;
"RTN","XUMFH",48,0)
 Q
"RTN","XUMFH",49,0)
 ;
"RTN","XUMFH",50,0)
QRD ; -- QRD segment
"RTN","XUMFH",51,0)
 ;
"RTN","XUMFH",52,0)
 Q:ERROR
"RTN","XUMFH",53,0)
 ;
"RTN","XUMFH",54,0)
 S QRD="QRD,QDT,QFC,QP,QID,DRT,DRDT,QLR,WHO,WHAT,WDDC,WDCVQ,QRL"
"RTN","XUMFH",55,0)
 ;
"RTN","XUMFH",56,0)
 F I=2:1:13 S PARAM($P(QRD,",",I))=$P(HLNODE,HLFS,I)
"RTN","XUMFH",57,0)
 S QID=$P(HLNODE,HLFS,5)
"RTN","XUMFH",58,0)
 S WHO=$P(HLNODE,HLFS,9)
"RTN","XUMFH",59,0)
 I WHO="" D  Q
"RTN","XUMFH",60,0)
 .S ERROR="1^QRD segment has null missing WHO parameter"
"RTN","XUMFH",61,0)
 .D EM(ERROR,.ERR)
"RTN","XUMFH",62,0)
 S WHAT=$P(HLNODE,HLFS,10)
"RTN","XUMFH",63,0)
 I WHAT="" D  Q
"RTN","XUMFH",64,0)
 .S ERROR="1^QRD segment has null missing WHAT parameter"
"RTN","XUMFH",65,0)
 .D EM(ERROR,.ERR)
"RTN","XUMFH",66,0)
 ;
"RTN","XUMFH",67,0)
 S ARRAY=$S(QID["ARRAY":1,1:0)
"RTN","XUMFH",68,0)
 S ALL=$S(WHO["ALL":1,1:0)
"RTN","XUMFH",69,0)
 S GROUP=$S(ALL:1,(WHO["IEN"):1,1:0)
"RTN","XUMFH",70,0)
 ;
"RTN","XUMFH",71,0)
 S:ARRAY TYPE=$S(GROUP:7,1:3)
"RTN","XUMFH",72,0)
 S:'ARRAY TYPE=$S(GROUP:5,1:1)
"RTN","XUMFH",73,0)
 S:HL("MTN")="MFR" TYPE=TYPE+10
"RTN","XUMFH",74,0)
 ;
"RTN","XUMFH",75,0)
 S IFN=+WHAT
"RTN","XUMFH",76,0)
 S XREF=$P(WHO,HLCS,9),ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","XUMFH",77,0)
 S IEN=$O(@ROOT@(XREF,$P(WHO,HLCS),0))
"RTN","XUMFH",78,0)
 S IEN=$S(IEN:IEN,1:$P(WHO,HLCS))
"RTN","XUMFH",79,0)
 S:$L(XREF)>1 PARAM("CDSYS")=XREF
"RTN","XUMFH",80,0)
 ;
"RTN","XUMFH",81,0)
 K:ARRAY ^TMP("XUMF ARRAY",$J)
"RTN","XUMFH",82,0)
 ;
"RTN","XUMFH",83,0)
 Q
"RTN","XUMFH",84,0)
 ;
"RTN","XUMFH",85,0)
MFI ; -- MFI segment
"RTN","XUMFH",86,0)
 ;
"RTN","XUMFH",87,0)
 Q:ERROR
"RTN","XUMFH",88,0)
 Q:$G(IFN)
"RTN","XUMFH",89,0)
 ;
"RTN","XUMFH",90,0)
 I $P(HLNODE,HLFS,2)="" D  Q
"RTN","XUMFH",91,0)
 .S ERROR="1^MFI segment missing Master File Identifier"
"RTN","XUMFH",92,0)
 .D EM(ERROR,.ERR)
"RTN","XUMFH",93,0)
 S IFN=$$MFI^XUMFP($P(HLNODE,HLFS,2))
"RTN","XUMFH",94,0)
 I 'IFN D  Q
"RTN","XUMFH",95,0)
 .S ERROR="1^IFN in MFI could not be resolved"
"RTN","XUMFH",96,0)
 .D EM(ERROR,.ERR)
"RTN","XUMFH",97,0)
 ;
"RTN","XUMFH",98,0)
 Q
"RTN","XUMFH",99,0)
 ;
"RTN","XUMFH",100,0)
MFE ; -- MFE segment
"RTN","XUMFH",101,0)
 ;
"RTN","XUMFH",102,0)
 Q:ERROR
"RTN","XUMFH",103,0)
 ;Q:$G(IEN)
"RTN","XUMFH",104,0)
 ;
"RTN","XUMFH",105,0)
 S KEY=$P(HLNODE,HLFS,5) Q:ARRAY
"RTN","XUMFH",106,0)
 ;
"RTN","XUMFH",107,0)
 I $P(KEY,HLCS)="" D  Q
"RTN","XUMFH",108,0)
 .D EM("MFE segment NULL key "_$E(HLNODE,1,80),.ERR)
"RTN","XUMFH",109,0)
 .
"RTN","XUMFH",110,0)
 S XREF=$P(KEY,HLCS,3)
"RTN","XUMFH",111,0)
 S CDSYS=$S($L(XREF)>1:XREF,1:"")
"RTN","XUMFH",112,0)
 ;
"RTN","XUMFH",113,0)
 S IEN=$S(CDSYS'="":$$IEN^XUMF(IFN,CDSYS,$P(KEY,HLCS)),1:$$FIND1^DIC(IFN,,"BX",$P(KEY,HLCS),XREF,,"ERR"))
"RTN","XUMFH",114,0)
 S IEN=$S(IEN:IEN,KEY["ALL":"ALL",$G(ERR)'="":"ERROR",1:"NEW")
"RTN","XUMFH",115,0)
 I IEN="ERROR" D  Q
"RTN","XUMFH",116,0)
 .D EM("MFE segment couldn't resolve IEN",.ERR)
"RTN","XUMFH",117,0)
 .K ERR
"RTN","XUMFH",118,0)
 D MAIN^XUMFP(IFN,IEN,TYPE,.PARAM,.ERROR)
"RTN","XUMFH",119,0)
 ;
"RTN","XUMFH",120,0)
 Q
"RTN","XUMFH",121,0)
 ;
"RTN","XUMFH",122,0)
ZL7 ; -- Generic Master File
"RTN","XUMFH",123,0)
ZIN ; -- VHA Institution segment
"RTN","XUMFH",124,0)
ZFT ; -- VHA Facility Type segment
"RTN","XUMFH",125,0)
LOC ; -- Location Identification segment
"RTN","XUMFH",126,0)
ZZZ ; -- get [Z...] segment(s)
"RTN","XUMFH",127,0)
 ;
"RTN","XUMFH",128,0)
 Q:ERROR
"RTN","XUMFH",129,0)
 Q:IEN="ERROR"
"RTN","XUMFH",130,0)
 ;
"RTN","XUMFH",131,0)
 I $G(ARRAY) D ARRAY Q
"RTN","XUMFH",132,0)
 ;
"RTN","XUMFH",133,0)
 N FDA,IENS,FIELD,ERR,PRE,POST,XUMF,MULT,FDA1,SEQ,SEQ1,SEQ2,SEQ3,XUMFSEQ
"RTN","XUMFH",134,0)
 ;
"RTN","XUMFH",135,0)
 D SEGPRSE^XUMFXHL7("HLNODE","XUMFSEQ")
"RTN","XUMFH",136,0)
 ;
"RTN","XUMFH",137,0)
 I IFN=4,CDSYS'="",XUMFSEQ(2)'="",'$D(^DIC(4,"D",XUMFSEQ(2),IEN)) D  Q
"RTN","XUMFH",138,0)
 .D EM("Coding system/station number mismatch - record "_KEY_" not updated",.ERR)
"RTN","XUMFH",139,0)
 ;
"RTN","XUMFH",140,0)
 S PRE=$G(^TMP("XUMF MFS",$J,"PARAM","PRE"))
"RTN","XUMFH",141,0)
 D:PRE'="" @(PRE)
"RTN","XUMFH",142,0)
 ;
"RTN","XUMFH",143,0)
 S XUMF=7
"RTN","XUMFH",144,0)
 ;
"RTN","XUMFH",145,0)
 S SEG=$P(HLNODE,HLFS)
"RTN","XUMFH",146,0)
 S IENS=$S(IEN:IEN,1:"+1")_","
"RTN","XUMFH",147,0)
 S SEQ=0
"RTN","XUMFH",148,0)
 F  S SEQ=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ)) Q:'SEQ  D
"RTN","XUMFH",149,0)
 .I IFN=4,SEQ=17 D NPI^XUMF Q
"RTN","XUMFH",150,0)
 .S SEQ1=$P(SEQ,"."),SEQ2=$P(SEQ,".",2)
"RTN","XUMFH",151,0)
 .S SEQ3=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"HLSCS",0))
"RTN","XUMFH",152,0)
 .I SEQ3 D SUBCOMP Q
"RTN","XUMFH",153,0)
 .S FIELD=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,0))
"RTN","XUMFH",154,0)
 .I FIELD=".01" D
"RTN","XUMFH",155,0)
 ..N FDA,IEN1
"RTN","XUMFH",156,0)
 ..S TYP=$G(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,FIELD))
"RTN","XUMFH",157,0)
 ..;S VALUE=$$VALUE()
"RTN","XUMFH",158,0)
 ..S VALUE=$S(SEQ2:XUMFSEQ($P(SEQ,".")),1:XUMFSEQ(SEQ))
"RTN","XUMFH",159,0)
 ..S:SEQ2 VALUE=$$VAL2()
"RTN","XUMFH",160,0)
 ..S VALUE=$$DTYP^XUMFP(VALUE,TYP,HLCS,0)
"RTN","XUMFH",161,0)
 ..S FDA(IFN,IENS,FIELD)=VALUE
"RTN","XUMFH",162,0)
 ..D UPDATE^DIE("E","FDA","IEN1","ERR")
"RTN","XUMFH",163,0)
 ..I $D(ERR) D
"RTN","XUMFH",164,0)
 ...D EM("Update DIE - error message",.ERR)
"RTN","XUMFH",165,0)
 ...K ERR
"RTN","XUMFH",166,0)
 ..;NEW RECORD
"RTN","XUMFH",167,0)
 ..I $D(IEN1) D
"RTN","XUMFH",168,0)
 ...S IENS=IEN1(1)_","
"RTN","XUMFH",169,0)
 ...D CDSYS^XUMF(CDSYS,$P(KEY,HLCS),IEN1(1))
"RTN","XUMFH",170,0)
 .I 'FIELD D SUBFILE Q
"RTN","XUMFH",171,0)
 .S TYP=$G(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,FIELD))
"RTN","XUMFH",172,0)
 .;S VALUE=$$VALUE()
"RTN","XUMFH",173,0)
 .S VALUE=$S(SEQ2:XUMFSEQ($P(SEQ,".")),1:XUMFSEQ(SEQ))
"RTN","XUMFH",174,0)
 .S:SEQ2 VALUE=$$VAL2()
"RTN","XUMFH",175,0)
 .S VALUE=$$DTYP^XUMFP(VALUE,TYP,HLCS,0)
"RTN","XUMFH",176,0)
 .S FDA(IFN,IENS,FIELD)=VALUE
"RTN","XUMFH",177,0)
 ;
"RTN","XUMFH",178,0)
 M FDA=FDA1
"RTN","XUMFH",179,0)
 ;
"RTN","XUMFH",180,0)
 D FILE^DIE("E","FDA","ERR")
"RTN","XUMFH",181,0)
 I $D(ERR) D
"RTN","XUMFH",182,0)
 .D EM("File DIE -- error message",.ERR)
"RTN","XUMFH",183,0)
 .K ERR
"RTN","XUMFH",184,0)
 ;
"RTN","XUMFH",185,0)
 S POST=$G(^TMP("XUMF MFS",$J,"PARAM","POST"))
"RTN","XUMFH",186,0)
 D:POST'="" @(POST)
"RTN","XUMFH",187,0)
 ;
"RTN","XUMFH",188,0)
 K IEN
"RTN","XUMFH",189,0)
 ;
"RTN","XUMFH",190,0)
 Q
"RTN","XUMFH",191,0)
 ;
"RTN","XUMFH",192,0)
SUBFILE ; -- process subfile record
"RTN","XUMFH",193,0)
 ;
"RTN","XUMFH",194,0)
 N IFN,IENS1,KEY1,FIELD,TYP,MKEY,ERR
"RTN","XUMFH",195,0)
 ;
"RTN","XUMFH",196,0)
 S IFN=^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"FILE")
"RTN","XUMFH",197,0)
 S FIELD=^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"FIELD")
"RTN","XUMFH",198,0)
 S TYP=^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"DTYP")
"RTN","XUMFH",199,0)
 ;S VALUE=$$VALUE()
"RTN","XUMFH",200,0)
 S VALUE=$S(SEQ2:XUMFSEQ($P(SEQ,".")),1:XUMFSEQ(SEQ))
"RTN","XUMFH",201,0)
 S:SEQ2 VALUE=$$VAL2()
"RTN","XUMFH",202,0)
 S VALUE=$$DTYP^XUMFP(VALUE,TYP,HLCS,0)
"RTN","XUMFH",203,0)
 ;
"RTN","XUMFH",204,0)
 S MULT=$G(^TMP("XUMF MFS",$J,"PARAM","MULT",SEG,SEQ))
"RTN","XUMFH",205,0)
 S MKEY=$G(^TMP("XUMF MFS",$J,"PARAM","MKEY",SEG,SEQ))
"RTN","XUMFH",206,0)
 I MULT=SEQ Q:VALUE=""  D
"RTN","XUMFH",207,0)
 .N FDA,IEN
"RTN","XUMFH",208,0)
 .S FDA(IFN,"?+1,"_IENS,.01)=VALUE
"RTN","XUMFH",209,0)
 .D UPDATE^DIE("E","FDA","IEN","ERR")
"RTN","XUMFH",210,0)
 .I $D(ERR) D
"RTN","XUMFH",211,0)
 ..D EM("update DIE call error message in SUBFILE",.ERR)
"RTN","XUMFH",212,0)
 ..K ERR
"RTN","XUMFH",213,0)
 .S IENS1=IEN(1)_","_IENS,MULT(SEQ)=IENS1
"RTN","XUMFH",214,0)
 I 'MULT D
"RTN","XUMFH",215,0)
 .N FDA,IEN
"RTN","XUMFH",216,0)
 .S FDA(IFN,"?+1,"_IENS,.01)=MKEY
"RTN","XUMFH",217,0)
 .D UPDATE^DIE("E","FDA","IEN","ERR")
"RTN","XUMFH",218,0)
 .I $D(ERR) D
"RTN","XUMFH",219,0)
 ..D EM("update DIE call error message in SUBFILE",.ERR)
"RTN","XUMFH",220,0)
 ..K ERR
"RTN","XUMFH",221,0)
 .S IENS1=IEN(1)_","_IENS,MULT(SEQ)=IENS1
"RTN","XUMFH",222,0)
 .S FDA1(IFN,IENS1,.01)=MKEY
"RTN","XUMFH",223,0)
 I MULT,MULT'=SEQ S IENS1=$G(MULT(+MULT)) Q:IENS1=""
"RTN","XUMFH",224,0)
 S FDA1(IFN,IENS1,FIELD)=VALUE
"RTN","XUMFH",225,0)
 ;
"RTN","XUMFH",226,0)
 Q
"RTN","XUMFH",227,0)
 ;
"RTN","XUMFH",228,0)
VALUE() ; -- parse segment
"RTN","XUMFH",229,0)
 ;
"RTN","XUMFH",230,0)
 ;Q
"RTN","XUMFH",231,0)
 ;
"RTN","XUMFH",232,0)
 ;N COL
"RTN","XUMFH",233,0)
 ;
"RTN","XUMFH",234,0)
 ;D SEGPRSE^XUMFXHL7("HLNODE","COL")
"RTN","XUMFH",235,0)
 ;
"RTN","XUMFH",236,0)
 ;Q:SEQ2 COL($P(SEQ,"."))
"RTN","XUMFH",237,0)
 ;
"RTN","XUMFH",238,0)
 ;Q COL(SEQ)
"RTN","XUMFH",239,0)
 ;
"RTN","XUMFH",240,0)
 ;
"RTN","XUMFH",241,0)
VAL2() ; -- parse component
"RTN","XUMFH",242,0)
 ;
"RTN","XUMFH",243,0)
 N XXX
"RTN","XUMFH",244,0)
 ;
"RTN","XUMFH",245,0)
 D SEQPRSE^XUMFXHL7("VALUE","XXX")
"RTN","XUMFH",246,0)
 ;
"RTN","XUMFH",247,0)
 Q XXX(1,SEQ2)
"RTN","XUMFH",248,0)
 ;
"RTN","XUMFH",249,0)
 ;
"RTN","XUMFH",250,0)
SUBCOMP ; -- subcomponents
"RTN","XUMFH",251,0)
 ;
"RTN","XUMFH",252,0)
 S SEQ3=0
"RTN","XUMFH",253,0)
 F  S SEQ3=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"HLSCS",SEQ3)) Q:'SEQ3  D
"RTN","XUMFH",254,0)
 .S FIELD=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"HLSCS",SEQ3,0))
"RTN","XUMFH",255,0)
 .S TYP=$G(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"HLSCS",SEQ3,FIELD))
"RTN","XUMFH",256,0)
 .;S VALUE=$$VALUE()
"RTN","XUMFH",257,0)
 .S VALUE=$S(SEQ2:XUMFSEQ($P(SEQ,".")),1:XUMFSEQ(SEQ))
"RTN","XUMFH",258,0)
 .S VALUE=$$VAL2()
"RTN","XUMFH",259,0)
 .S VALUE=$P(VALUE,HLSCS,SEQ3)
"RTN","XUMFH",260,0)
 .S VALUE=$$DTYP^XUMFP(VALUE,TYP,HLSCS,0)
"RTN","XUMFH",261,0)
 .S FDA(IFN,IENS,FIELD)=VALUE
"RTN","XUMFH",262,0)
 ;
"RTN","XUMFH",263,0)
 Q
"RTN","XUMFH",264,0)
 ;
"RTN","XUMFH",265,0)
ARRAY ; -- query data stored in array (not filed)
"RTN","XUMFH",266,0)
 ;
"RTN","XUMFH",267,0)
 I $P($G(KEY),HLCS)="" D  Q
"RTN","XUMFH",268,0)
 .D EM("Null KEY found in the following segment: "_$E(HLNODE,1,80),.ERR)
"RTN","XUMFH",269,0)
 .S ERROR=ERROR_U_$G(ERR)
"RTN","XUMFH",270,0)
 ;
"RTN","XUMFH",271,0)
 I $G(IFN)=9.8 D  Q
"RTN","XUMFH",272,0)
 .S IDX98=$G(IDX98)+1
"RTN","XUMFH",273,0)
 .S ^TMP("XUMF ARRAY",$J,IDX98)=HLNODE
"RTN","XUMFH",274,0)
 ;
"RTN","XUMFH",275,0)
 M ^TMP("XUMF ARRAY",$J,$P(KEY,HLCS))=HLNODE
"RTN","XUMFH",276,0)
 ;
"RTN","XUMFH",277,0)
 Q
"RTN","XUMFH",278,0)
 ;
"RTN","XUMFH",279,0)
REPLY ; -- master file response
"RTN","XUMFH",280,0)
 ;
"RTN","XUMFH",281,0)
 Q:HL("MTN")="MFR"
"RTN","XUMFH",282,0)
 Q:HL("MTN")="MFK"
"RTN","XUMFH",283,0)
 Q:HL("MTN")="ACK"
"RTN","XUMFH",284,0)
 ;
"RTN","XUMFH",285,0)
 S:(TYPE<10) TYPE=(TYPE+10)
"RTN","XUMFH",286,0)
 ;
"RTN","XUMFH",287,0)
 I HL("MTN")="MFQ" D
"RTN","XUMFH",288,0)
 .S IFN=+$G(WHAT) I 'IFN D  Q
"RTN","XUMFH",289,0)
 ..S ERROR="1^REPLY MFQ couldn't resolve IFN"
"RTN","XUMFH",290,0)
 ..D EM(ERROR,.ERR)
"RTN","XUMFH",291,0)
 .S XREF=$P(WHO,HLCS,9),ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","XUMFH",292,0)
 .S IEN=$O(@ROOT@(XREF,$P(WHO,HLCS),0))
"RTN","XUMFH",293,0)
 .S IEN=$S(IEN:IEN,1:$P(WHO,HLCS))
"RTN","XUMFH",294,0)
 ;
"RTN","XUMFH",295,0)
 S IFN=$G(IFN),IEN=$G(IEN)
"RTN","XUMFH",296,0)
 ;
"RTN","XUMFH",297,0)
 D MAIN^XUMFP(IFN,IEN,TYPE,.PARAM,.ERROR)
"RTN","XUMFH",298,0)
 D MAIN^XUMFI(IFN,IEN,TYPE,.PARAM,.ERROR)
"RTN","XUMFH",299,0)
 ;
"RTN","XUMFH",300,0)
 Q
"RTN","XUMFH",301,0)
 ;
"RTN","XUMFH",302,0)
EXIT ; -- cleanup, and quit
"RTN","XUMFH",303,0)
 ;
"RTN","XUMFH",304,0)
 I $D(^TMP("XUMF ERROR",$J)) D EM1 K ^TMP("XUMF ERROR",$J)
"RTN","XUMFH",305,0)
 ;
"RTN","XUMFH",306,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J),^TMP("HLS",$J),^TMP("HLA",$J)
"RTN","XUMFH",307,0)
 ;
"RTN","XUMFH",308,0)
 Q
"RTN","XUMFH",309,0)
 ;
"RTN","XUMFH",310,0)
EM(ERROR,ERR) ; -- error message
"RTN","XUMFH",311,0)
 ;
"RTN","XUMFH",312,0)
 D EM^XUMFHM(ERROR,.ERR)
"RTN","XUMFH",313,0)
 ;
"RTN","XUMFH",314,0)
 Q
"RTN","XUMFH",315,0)
 ;
"RTN","XUMFH",316,0)
 ;
"RTN","XUMFH",317,0)
 ;N X,I,Y,XMTEXT,FLG
"RTN","XUMFH",318,0)
 ;
"RTN","XUMFH",319,0)
 ;S FLG=0
"RTN","XUMFH",320,0)
 ;
"RTN","XUMFH",321,0)
 ;D MSG^DIALOG("AM",.X,80,,"ERR")
"RTN","XUMFH",322,0)
 ;
"RTN","XUMFH",323,0)
 ;S X(.02)="",X(.03)=$G(ERROR),X(.04)=""
"RTN","XUMFH",324,0)
 ;
"RTN","XUMFH",325,0)
 ;S X=.9 F  S X=$O(X(X)) Q:'X  D
"RTN","XUMFH",326,0)
 ;.I X(X)="" K X(X) Q
"RTN","XUMFH",327,0)
 ;.I X(X)["DINUMed field cannot" S FLG=1 K X(X) Q
"RTN","XUMFH",328,0)
 ;.I X(X)["ASSOCIATION" S FLG=1 K X(X) Q
"RTN","XUMFH",329,0)
 ;.I X(X)["INSTITUTION" S FLG=1 K X(X) Q
"RTN","XUMFH",330,0)
 ;.I X(X)["The entry does not exist." S FLG=1 K X(X) Q
"RTN","XUMFH",331,0)
 ;.I X(X)["already exists." S FLG=1 K X(X) Q
"RTN","XUMFH",332,0)
 ;
"RTN","XUMFH",333,0)
 ;I FLG Q:'$O(X(.9))
"RTN","XUMFH",334,0)
 ;
"RTN","XUMFH",335,0)
 ;S ERRCNT=ERRCNT+1
"RTN","XUMFH",336,0)
 ;
"RTN","XUMFH",337,0)
 ;S ^TMP("XUMF ERROR",$J,ERRCNT_".01")=""
"RTN","XUMFH",338,0)
 ;S ^TMP("XUMF ERROR",$J,ERRCNT_".02")=""
"RTN","XUMFH",339,0)
 ;S ^TMP("XUMF ERROR",$J,ERRCNT_".03")=$G(ERROR)
"RTN","XUMFH",340,0)
 ;S ^TMP("XUMF ERROR",$J,ERRCNT_".04")=""
"RTN","XUMFH",341,0)
 ;S ^TMP("XUMF ERROR",$J,ERRCNT_".05")="KEY: "_$G(KEY)_"   IFN: "_$G(IFN)_"   IEN: "_$G(IEN)
"RTN","XUMFH",342,0)
 ;S ^TMP("XUMF ERROR",$J,ERRCNT_".06")=""
"RTN","XUMFH",343,0)
 ;S X=.9 F  S X=$O(X(X)) Q:'X  D
"RTN","XUMFH",344,0)
 ;.S ^TMP("XUMF ERROR",$J,ERRCNT_"."_X)=X(X)
"RTN","XUMFH",345,0)
 ;
"RTN","XUMFH",346,0)
 ;Q
"RTN","XUMFH",347,0)
 ;
"RTN","XUMFH",348,0)
EM1 ;
"RTN","XUMFH",349,0)
 ;
"RTN","XUMFH",350,0)
 D EM1^XUMFHM
"RTN","XUMFH",351,0)
 ;
"RTN","XUMFH",352,0)
 Q
"RTN","XUMFH",353,0)
 ;
"RTN","XUMFH",354,0)
 ;N XMY,XMSUB
"RTN","XUMFH",355,0)
 ;
"RTN","XUMFH",356,0)
 ;S ^TMP("XUMF ERROR",$J,.1)="HL7 message ID: "_$G(HL("MID"))
"RTN","XUMFH",357,0)
 ;S XMY("G.XUMF ERROR")="",XMSUB="MFS ERROR"
"RTN","XUMFH",358,0)
 ;S XMTEXT="^TMP(""XUMF ERROR"",$J,"
"RTN","XUMFH",359,0)
 ;
"RTN","XUMFH",360,0)
 ;D ^XMD
"RTN","XUMFH",361,0)
 ;
"RTN","XUMFH",362,0)
 ;Q
"RTN","XUMFH",363,0)
 ;
"RTN","XUMFHM")
0^7^B2852790^n/a
"RTN","XUMFHM",1,0)
XUMFHM ;ISS/RAM - MFS HANDLER ERROR MESSAGE ;11/16/05
"RTN","XUMFHM",2,0)
 ;;8.0;KERNEL;**416**;Jul 10, 1995;Build 5
"RTN","XUMFHM",3,0)
 ;
"RTN","XUMFHM",4,0)
 ;
"RTN","XUMFHM",5,0)
EM(ERROR,ERR) ; -- error message
"RTN","XUMFHM",6,0)
 ;
"RTN","XUMFHM",7,0)
 N X,I,Y,XMTEXT,FLG
"RTN","XUMFHM",8,0)
 ;
"RTN","XUMFHM",9,0)
 S FLG=0
"RTN","XUMFHM",10,0)
 ;
"RTN","XUMFHM",11,0)
 D MSG^DIALOG("AM",.X,80,,"ERR")
"RTN","XUMFHM",12,0)
 ;
"RTN","XUMFHM",13,0)
 ;S X(.02)="",X(.03)=$G(ERROR),X(.04)=""
"RTN","XUMFHM",14,0)
 ;
"RTN","XUMFHM",15,0)
 S X=.9 F  S X=$O(X(X)) Q:'X  D
"RTN","XUMFHM",16,0)
 .I X(X)="" K X(X) Q
"RTN","XUMFHM",17,0)
 .I X(X)["DINUMed field cannot" S FLG=1 K X(X) Q
"RTN","XUMFHM",18,0)
 .I X(X)["ASSOCIATION" S FLG=1 K X(X) Q
"RTN","XUMFHM",19,0)
 .I X(X)["INSTITUTION" S FLG=1 K X(X) Q
"RTN","XUMFHM",20,0)
 .I X(X)["The entry does not exist." S FLG=1 K X(X) Q
"RTN","XUMFHM",21,0)
 .I X(X)["already exists." S FLG=1 K X(X) Q
"RTN","XUMFHM",22,0)
 ;
"RTN","XUMFHM",23,0)
 I FLG Q:'$O(X(.9))
"RTN","XUMFHM",24,0)
 ;
"RTN","XUMFHM",25,0)
 S ERRCNT=ERRCNT+1
"RTN","XUMFHM",26,0)
 ;
"RTN","XUMFHM",27,0)
 S ^TMP("XUMF ERROR",$J,ERRCNT_".01")=""
"RTN","XUMFHM",28,0)
 S ^TMP("XUMF ERROR",$J,ERRCNT_".02")=""
"RTN","XUMFHM",29,0)
 S ^TMP("XUMF ERROR",$J,ERRCNT_".03")=$G(ERROR)
"RTN","XUMFHM",30,0)
 S ^TMP("XUMF ERROR",$J,ERRCNT_".04")=""
"RTN","XUMFHM",31,0)
 S ^TMP("XUMF ERROR",$J,ERRCNT_".05")="KEY: "_$G(KEY)_"   IFN: "_$G(IFN)_"   IEN: "_$G(IEN)
"RTN","XUMFHM",32,0)
 S ^TMP("XUMF ERROR",$J,ERRCNT_".06")=""
"RTN","XUMFHM",33,0)
 S X=.9 F  S X=$O(X(X)) Q:'X  D
"RTN","XUMFHM",34,0)
 .S ^TMP("XUMF ERROR",$J,ERRCNT_"."_X)=X(X)
"RTN","XUMFHM",35,0)
 ;
"RTN","XUMFHM",36,0)
 Q
"RTN","XUMFHM",37,0)
 ;
"RTN","XUMFHM",38,0)
EM1 ;
"RTN","XUMFHM",39,0)
 ;
"RTN","XUMFHM",40,0)
 N XMY,XMSUB
"RTN","XUMFHM",41,0)
 ;
"RTN","XUMFHM",42,0)
 S ^TMP("XUMF ERROR",$J,.1)="HL7 message ID: "_$G(HL("MID"))
"RTN","XUMFHM",43,0)
 S XMY("G.XUMF ERROR")="",XMSUB="MFS ERROR"
"RTN","XUMFHM",44,0)
 S XMTEXT="^TMP(""XUMF ERROR"",$J,"
"RTN","XUMFHM",45,0)
 ;
"RTN","XUMFHM",46,0)
 D ^XMD
"RTN","XUMFHM",47,0)
 ;
"RTN","XUMFHM",48,0)
 Q
"RTN","XUMFHM",49,0)
 ;
"RTN","XUMFI0")
0^9^B4537353^B4427792
"RTN","XUMFI0",1,0)
XUMFI0 ;CIOFO-SF/RAM - Master File Interface ;06/28/00
"RTN","XUMFI0",2,0)
 ;;8.0;KERNEL;**369,416**;Jul 10, 1995;Build 5
"RTN","XUMFI0",3,0)
 ;
"RTN","XUMFI0",4,0)
 Q
"RTN","XUMFI0",5,0)
 ;
"RTN","XUMFI0",6,0)
INIT ; -- initialize
"RTN","XUMFI0",7,0)
 ;
"RTN","XUMFI0",8,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J)
"RTN","XUMFI0",9,0)
 K ^TMP("HLS",$J),^TMP("HLA",$J)
"RTN","XUMFI0",10,0)
 ;
"RTN","XUMFI0",11,0)
 S IEN=$G(IEN),IFN=$G(IFN)
"RTN","XUMFI0",12,0)
 S TYPE=$G(TYPE),ERROR=$G(ERROR),CNT=1
"RTN","XUMFI0",13,0)
 S UPDATE=$S(TYPE#2:0,1:1)
"RTN","XUMFI0",14,0)
 S QUERY='UPDATE
"RTN","XUMFI0",15,0)
 S GROUP=$S(UPDATE:0,TYPE[5:1,TYPE[7:1,1:0)
"RTN","XUMFI0",16,0)
 S ARRAY=$S(UPDATE:0,TYPE[3:1,TYPE[7:1,1:0)
"RTN","XUMFI0",17,0)
 S ALL=$S(IEN["ALL":1,1:0)
"RTN","XUMFI0",18,0)
 S PROTOCOL=$G(^TMP("XUMF MFS",$J,"PARAM","PROTOCOL"))
"RTN","XUMFI0",19,0)
 S MFR=$S(UPDATE:0,TYPE>10:1,1:0)
"RTN","XUMFI0",20,0)
 S MFQ=$S(UPDATE:0,'MFR:1,1:0)
"RTN","XUMFI0",21,0)
 S MFK=$S(TYPE=10:1,1:0)
"RTN","XUMFI0",22,0)
 S MTYP=$S(MFR:"HLA",MFK:"HLA",1:"HLS")
"RTN","XUMFI0",23,0)
 ;
"RTN","XUMFI0",24,0)
 ; -- get variables from HL7 package
"RTN","XUMFI0",25,0)
 I $O(HL(""))="" D INIT^HLFNC2(PROTOCOL,.HL)
"RTN","XUMFI0",26,0)
 I $O(HL(""))="" S ERROR="1^"_$P(HL,"^",2) Q
"RTN","XUMFI0",27,0)
 S HLFS=HL("FS"),HLCS=$E(HL("ECH")),HLSCS=$E(HL("ECH"),4)
"RTN","XUMFI0",28,0)
 ;
"RTN","XUMFI0",29,0)
 Q:ERROR
"RTN","XUMFI0",30,0)
 I UPDATE,'IEN,TYPE=10 Q
"RTN","XUMFI0",31,0)
 ;
"RTN","XUMFI0",32,0)
 ; -- check parameters
"RTN","XUMFI0",33,0)
 I 'QUERY,'UPDATE S ERROR="1^invalid message type" Q
"RTN","XUMFI0",34,0)
 I 'IFN S ERROR="1^invalid file number" Q
"RTN","XUMFI0",35,0)
 I 'IEN,'ALL,'MFK S ERROR="1^invalid IEN" Q
"RTN","XUMFI0",36,0)
 I '$$VFILE^DILFD(IFN) S ERROR="1^invalid file number" Q
"RTN","XUMFI0",37,0)
 I UPDATE,'IEN S ERROR="1^update message requires an IEN" Q
"RTN","XUMFI0",38,0)
 ;
"RTN","XUMFI0",39,0)
 ; -- get root of file
"RTN","XUMFI0",40,0)
 S ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","XUMFI0",41,0)
 ;
"RTN","XUMFI0",42,0)
 ; -- if IEN array input, merge with param
"RTN","XUMFI0",43,0)
 I 'ALL,'IEN,$O(IEN(0)) M ^TMP("XUMF MFS",$J,"PARAM","IEN")=IEN
"RTN","XUMFI0",44,0)
 ;
"RTN","XUMFI0",45,0)
 ; -- if CDSYS and ALL get entries
"RTN","XUMFI0",46,0)
 S CDSYS=$G(^TMP("XUMF MFS",$J,"PARAM","CDSYS"))
"RTN","XUMFI0",47,0)
 I ALL,CDSYS'="" D
"RTN","XUMFI0",48,0)
 .S I=0 F  S I=$O(@ROOT@("XUMFIDX",CDSYS,I)) Q:'I  D
"RTN","XUMFI0",49,0)
 ..S J=$O(@ROOT@("XUMFIDX",CDSYS,I,0))
"RTN","XUMFI0",50,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IEN",J)=""
"RTN","XUMFI0",51,0)
 ;
"RTN","XUMFI0",52,0)
 ; -- get ALL file 'national' entries
"RTN","XUMFI0",53,0)
 I ALL,'$D(^TMP("XUMF MFS",$J,"PARAM","IEN")) D
"RTN","XUMFI0",54,0)
 .S I=0 F  S I=$O(@ROOT@("XUMF","N",I)) Q:'I  D
"RTN","XUMFI0",55,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IEN",I)=""
"RTN","XUMFI0",56,0)
 ;
"RTN","XUMFI0",57,0)
 Q
"RTN","XUMFI0",58,0)
 ;
"RTN","XUMFP4")
0^1^B22700528^B33777925
"RTN","XUMFP4",1,0)
XUMFP4 ;CIOFO-SF/RAM - Master File C/S Params INSTITUTION ;06/28/00
"RTN","XUMFP4",2,0)
 ;;8.0;KERNEL;**206,217,294,335,416**;Jul 10, 1995;Build 5
"RTN","XUMFP4",3,0)
 ;
"RTN","XUMFP4",4,0)
 ;
"RTN","XUMFP4",5,0)
 ; This routine sets up the parameters required by the INSTITUTION (#4)
"RTN","XUMFP4",6,0)
 ; file for the Master File server mechanism.
"RTN","XUMFP4",7,0)
 ;
"RTN","XUMFP4",8,0)
 ;  ** This routine is not a supported interface -- use XUMFP **
"RTN","XUMFP4",9,0)
 ;
"RTN","XUMFP4",10,0)
 ;  See XUMFP for parameter list documentation
"RTN","XUMFP4",11,0)
 ;
"RTN","XUMFP4",12,0)
 N PKV,HLFS,HLCS,RT,RF,NPI,TAX
"RTN","XUMFP4",13,0)
 ;
"RTN","XUMFP4",14,0)
 S ^TMP("XUMF MFS",$J,"PARAM","PRE")="PRE^XUMFP4C"
"RTN","XUMFP4",15,0)
 S ^TMP("XUMF MFS",$J,"PARAM","POST")="POST^XUMFP4C"
"RTN","XUMFP4",16,0)
 ;
"RTN","XUMFP4",17,0)
 I $O(HL(""))="" D
"RTN","XUMFP4",18,0)
 .I 'PROTOCOL D
"RTN","XUMFP4",19,0)
 ..S:UPDATE PROTOCOL=$O(^ORD(101,"B","XUMF MFN",0))
"RTN","XUMFP4",20,0)
 ..S:QUERY PROTOCOL=$O(^ORD(101,"B","XUMF MFQ",0))
"RTN","XUMFP4",21,0)
 .S:'PROTOCOL ERROR="1^invalid protocol" Q:ERROR
"RTN","XUMFP4",22,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","PROTOCOL")=PROTOCOL
"RTN","XUMFP4",23,0)
 .D INIT^HLFNC2(PROTOCOL,.HL)
"RTN","XUMFP4",24,0)
 ;
"RTN","XUMFP4",25,0)
 I $O(HL(""))="" S ERROR="1^"_$P(HL,U,2) Q
"RTN","XUMFP4",26,0)
 S HLFS=HL("FS"),HLCS=$E(HL("ECH"))
"RTN","XUMFP4",27,0)
 ;
"RTN","XUMFP4",28,0)
 I QUERY D QRD^XUMFP4C
"RTN","XUMFP4",29,0)
 ;
"RTN","XUMFP4",30,0)
 ; MFI -- Master File Identification Segment
"RTN","XUMFP4",31,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MFI")="Z04"  ;Master File Identifier
"RTN","XUMFP4",32,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MFAI")=""  ;Application Identifier
"RTN","XUMFP4",33,0)
 S ^TMP("XUMF MFS",$J,"PARAM","FLEC")="UPD"  ;File-Level Event Code
"RTN","XUMFP4",34,0)
 S ^TMP("XUMF MFS",$J,"PARAM","ENDT")=""  ;Entered Data/Time
"RTN","XUMFP4",35,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MFIEDT")=""  ;Effective Date/Time
"RTN","XUMFP4",36,0)
 S ^TMP("XUMF MFS",$J,"PARAM","RLC")="NE"  ;Response Level Code
"RTN","XUMFP4",37,0)
 ;
"RTN","XUMFP4",38,0)
 ; MFE -- Master File Entry
"RTN","XUMFP4",39,0)
 I $G(^TMP("XUMF MFS",$J,"PARAM","RLEC"))="" D  ;Record-Level Event Code
"RTN","XUMFP4",40,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","RLEC")="MUP"
"RTN","XUMFP4",41,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MFNCID")=""  ;MFN Control ID
"RTN","XUMFP4",42,0)
 I $G(^TMP("XUMF MFS",$J,"PARAM","MFEEDT"))="" D  ;Effective Date/Time
"RTN","XUMFP4",43,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","MFEEDT")=$$HLDATE^HLFNC($$NOW^XLFDT)
"RTN","XUMFP4",44,0)
 ;
"RTN","XUMFP4",45,0)
SEG ; -- ZIN segment
"RTN","XUMFP4",46,0)
 ;
"RTN","XUMFP4",47,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZIN",8)=""
"RTN","XUMFP4",48,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MKEY","ZIN",8)="VISN"
"RTN","XUMFP4",49,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZIN",9)=""
"RTN","XUMFP4",50,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MKEY","ZIN",9)="PARENT FACILITY"
"RTN","XUMFP4",51,0)
 ;history
"RTN","XUMFP4",52,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZIN",10)=10
"RTN","XUMFP4",53,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZIN",11)=10
"RTN","XUMFP4",54,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZIN",12)=12
"RTN","XUMFP4",55,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZIN",13)=12
"RTN","XUMFP4",56,0)
 ;npi
"RTN","XUMFP4",57,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZIN",17)=17
"RTN","XUMFP4",58,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZIN",18)=17
"RTN","XUMFP4",59,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZIN",19)=17
"RTN","XUMFP4",60,0)
 ;taxonomy
"RTN","XUMFP4",61,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZIN",20)=20
"RTN","XUMFP4",62,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZIN",21)=20
"RTN","XUMFP4",63,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZIN",22)=20
"RTN","XUMFP4",64,0)
 ;
"RTN","XUMFP4",65,0)
 I IEN D
"RTN","XUMFP4",66,0)
 .I $G(^DIC(4,IEN,99)) D
"RTN","XUMFP4",67,0)
 ..S PKV=$P(^DIC(4,IEN,99),U)_HLCS_"STATION NUMBER"_HLCS_"D"
"RTN","XUMFP4",68,0)
 .I 'PKV,CDSYS'="" D
"RTN","XUMFP4",69,0)
 ..I CDSYS="NPI" D
"RTN","XUMFP4",70,0)
 ...S $P(PKV,HLCS,1)=+$$NPI^XUSNPI("Organization_ID",IEN)
"RTN","XUMFP4",71,0)
 ..S $P(PKV,HLCS,2)=$P($G(^DIC(4,+IEN,0)),U),$P(PKV,HLCS,3)=CDSYS
"RTN","XUMFP4",72,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","PKV")=PKV  ; Primary Key Value
"RTN","XUMFP4",73,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","IENS","ZIN",8)="1,"_IEN_","
"RTN","XUMFP4",74,0)
 .;S ^TMP("XUMF MFS",$J,"PARAM","KEY","ZIN",4.014,"1,"_IEN_",")="VISN"
"RTN","XUMFP4",75,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","IENS","ZIN",9)="2,"_IEN_","
"RTN","XUMFP4",76,0)
 .;S ^TMP("XUMF MFS",$J,"PARAM","KEY","ZIN",4.014,"2,"_IEN_",")="PARENT FACILITY"
"RTN","XUMFP4",77,0)
 .S RF=$$RF^XUAF4(IEN) D:RF
"RTN","XUMFP4",78,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IENS","ZIN",10)=$P(RF,U,3)_","_IEN_","
"RTN","XUMFP4",79,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IENS","ZIN",11)=$P(RF,U,3)_","_IEN_","
"RTN","XUMFP4",80,0)
 ..;S ^TMP("XUMF MFS",$J,"PARAM","KEY","ZIN",4.999,$P(RF,U,3)_","_IEN_",")=$P(RF,U,3)
"RTN","XUMFP4",81,0)
 .S RT=$$RT^XUAF4(IEN) D:RT
"RTN","XUMFP4",82,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IENS","ZIN",12)=$P(RT,U,3)_","_IEN_","
"RTN","XUMFP4",83,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IENS","ZIN",13)=$P(RT,U,3)_","_IEN_","
"RTN","XUMFP4",84,0)
 ..;S ^TMP("XUMF MFS",$J,"PARAM","KEY","ZIN",4.999,$P(RT,U,3)_","_IEN_",")=$P(RT,U,3)
"RTN","XUMFP4",85,0)
 .S NPI=$$NPI^XUSNPI("Organization_ID",IEN) D:NPI
"RTN","XUMFP4",86,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IENS","ZIN",17)=$O(^DIC(4,IEN,"NPISTATUS","C",+NPI,999),-1)_","_IEN_","
"RTN","XUMFP4",87,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IENS","ZIN",18)=$O(^DIC(4,IEN,"NPISTATUS","C",+NPI,999),-1)_","_IEN_","
"RTN","XUMFP4",88,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IENS","ZIN",19)=$O(^DIC(4,IEN,"NPISTATUS","C",+NPI,999),-1)_","_IEN_","
"RTN","XUMFP4",89,0)
 .S TAX=$$TAXORG^XUSTAX(IEN) D:TAX
"RTN","XUMFP4",90,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IENS","ZIN",20)=$O(^DIC(4,IEN,"TAXONOMY","B",+$P(TAX,U,2),999),-1)_","_IEN_","
"RTN","XUMFP4",91,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IENS","ZIN",21)=$O(^DIC(4,IEN,"TAXONOMY","B",+$P(TAX,U,2),999),-1)_","_IEN_","
"RTN","XUMFP4",92,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IENS","ZIN",22)=$O(^DIC(4,IEN,"TAXONOMY","B",+$P(TAX,U,2),999),-1)_","_IEN_","
"RTN","XUMFP4",93,0)
 ;
"RTN","XUMFP4",94,0)
 I NEW D
"RTN","XUMFP4",95,0)
 .S PKV="NEW"_HLCS_"STATION NUMBER"_HLCS_"D"
"RTN","XUMFP4",96,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","PKV")=PKV  ; Primary Key Value
"RTN","XUMFP4",97,0)
 ;
"RTN","XUMFP4",98,0)
 D ^XUMFP4Z
"RTN","XUMFP4",99,0)
 ;
"RTN","XUMFP4",100,0)
GROUP ; -- query group
"RTN","XUMFP4",101,0)
 ;
"RTN","XUMFP4",102,0)
 D GROUP^XUMFP4C
"RTN","XUMFP4",103,0)
 ;
"RTN","XUMFP4",104,0)
 Q
"RTN","XUMFP4",105,0)
 ;
"RTN","XUMFP4C")
0^2^B23028337^B15661298
"RTN","XUMFP4C",1,0)
XUMFP4C ;CIOFO-SF/RAM - Master File C/S Params INSTITUTION ;06/28/00
"RTN","XUMFP4C",2,0)
 ;;8.0;KERNEL;**206,209,217,270,294,335,390,416**;Jul 10, 1995;Build 5
"RTN","XUMFP4C",3,0)
 ;
"RTN","XUMFP4C",4,0)
 ; this routine is a called by XUMFP4 and is a continuation of that
"RTN","XUMFP4C",5,0)
 ; routine
"RTN","XUMFP4C",6,0)
 ;
"RTN","XUMFP4C",7,0)
QRD ; -- query definition segment
"RTN","XUMFP4C",8,0)
 ;
"RTN","XUMFP4C",9,0)
 ;Query Date/Time
"RTN","XUMFP4C",10,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","QDT")) D
"RTN","XUMFP4C",11,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","QDT")=$$HLDATE^HLFNC($$NOW^XLFDT)
"RTN","XUMFP4C",12,0)
 ;
"RTN","XUMFP4C",13,0)
 ;Query Format Code
"RTN","XUMFP4C",14,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","QFC")) D
"RTN","XUMFP4C",15,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","QFC")="R"
"RTN","XUMFP4C",16,0)
 ;
"RTN","XUMFP4C",17,0)
 ;Query Priority
"RTN","XUMFP4C",18,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","QP")) D
"RTN","XUMFP4C",19,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","QP")="I"
"RTN","XUMFP4C",20,0)
 ;
"RTN","XUMFP4C",21,0)
 ;Query ID
"RTN","XUMFP4C",22,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","QID")) D
"RTN","XUMFP4C",23,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","QID")="Z04 "_$S(ARRAY:"ARRAY",1:"FILE")
"RTN","XUMFP4C",24,0)
 ;
"RTN","XUMFP4C",25,0)
 ;Deferred Response Type (optional)
"RTN","XUMFP4C",26,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","DRT")) D
"RTN","XUMFP4C",27,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","DRT")=""
"RTN","XUMFP4C",28,0)
 ;
"RTN","XUMFP4C",29,0)
 ;Deferred Response Date/Time (optional)
"RTN","XUMFP4C",30,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","DRDT")) D
"RTN","XUMFP4C",31,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","DRDT")=""
"RTN","XUMFP4C",32,0)
 ;
"RTN","XUMFP4C",33,0)
 ;Quantity Limited Request
"RTN","XUMFP4C",34,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","QLR")) D
"RTN","XUMFP4C",35,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","QLR")="RD"_HLCS_999
"RTN","XUMFP4C",36,0)
 ;
"RTN","XUMFP4C",37,0)
 ;Who Subject Filter - sta#, D x-ref, assigning facility
"RTN","XUMFP4C",38,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","WHO")) D
"RTN","XUMFP4C",39,0)
 .N X S X=$S(ALL:"ALL",IEN:$P($G(^DIC(4,+IEN,99)),U),1:"IEN ARRAY")
"RTN","XUMFP4C",40,0)
 .S $P(X,HLCS,9,10)="D"_HLCS_"045A4"
"RTN","XUMFP4C",41,0)
 .S:$G(CDSYS)'="" $P(X,HLCS,9,10)=CDSYS_HLCS_""
"RTN","XUMFP4C",42,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","WHO")=X
"RTN","XUMFP4C",43,0)
 ;
"RTN","XUMFP4C",44,0)
 ;What Subject Filter
"RTN","XUMFP4C",45,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","WHAT")) D
"RTN","XUMFP4C",46,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","WHAT")="4"_HLCS_"IFN"_HLCS_"VA FM"
"RTN","XUMFP4C",47,0)
 ;
"RTN","XUMFP4C",48,0)
 ;What Department Data Code
"RTN","XUMFP4C",49,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","WDDC")) D
"RTN","XUMFP4C",50,0)
 .N X S X="INFRASTRUCTURE"_HLCS_"INFORMATION INFRASTRUCTURE"
"RTN","XUMFP4C",51,0)
 .S X=X_HLCS_"VA TS"
"RTN","XUMFP4C",52,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","WDDC")=X
"RTN","XUMFP4C",53,0)
 ;
"RTN","XUMFP4C",54,0)
 ;What Data Code Value Qual (optional)
"RTN","XUMFP4C",55,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","WDCVQ")) D
"RTN","XUMFP4C",56,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","WDCVQ")=""
"RTN","XUMFP4C",57,0)
 ;
"RTN","XUMFP4C",58,0)
 ;Query Results Level (optional)
"RTN","XUMFP4C",59,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","QRL")) D
"RTN","XUMFP4C",60,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","QRL")=""
"RTN","XUMFP4C",61,0)
 ;
"RTN","XUMFP4C",62,0)
 Q
"RTN","XUMFP4C",63,0)
 ;
"RTN","XUMFP4C",64,0)
PRE ; -- pre-update record
"RTN","XUMFP4C",65,0)
 ;
"RTN","XUMFP4C",66,0)
 D PRE^XUMFR
"RTN","XUMFP4C",67,0)
 ;
"RTN","XUMFP4C",68,0)
 D IFF(IEN)
"RTN","XUMFP4C",69,0)
 ;
"RTN","XUMFP4C",70,0)
 Q
"RTN","XUMFP4C",71,0)
 ;
"RTN","XUMFP4C",72,0)
POST ; -- post-update record
"RTN","XUMFP4C",73,0)
 ;
"RTN","XUMFP4C",74,0)
 D POST^XUMFR
"RTN","XUMFP4C",75,0)
 ;
"RTN","XUMFP4C",76,0)
 Q
"RTN","XUMFP4C",77,0)
 ;
"RTN","XUMFP4C",78,0)
GROUP ; -- query group
"RTN","XUMFP4C",79,0)
 ;
"RTN","XUMFP4C",80,0)
 S IEN=0
"RTN","XUMFP4C",81,0)
 F  S IEN=$O(^TMP("XUMF MFS",$J,"PARAM","IEN",IEN)) Q:'IEN  D
"RTN","XUMFP4C",82,0)
 .I '$G(^DIC(4,IEN,99)) D
"RTN","XUMFP4C",83,0)
 ..S PKV="NEW"_HLCS_"STATION NUMBER"_HLCS_"D"
"RTN","XUMFP4C",84,0)
 .I $G(^DIC(4,IEN,99)) D
"RTN","XUMFP4C",85,0)
 ..S PKV=$P(^DIC(4,IEN,99),U)_HLCS_"STATION NUMBER"_HLCS_"D"
"RTN","XUMFP4C",86,0)
 .I CDSYS'="" D
"RTN","XUMFP4C",87,0)
 ..S $P(PKV,HLCS,1)=^TMP("XUMF MFS",$J,"PARAM","IEN",IEN)
"RTN","XUMFP4C",88,0)
 ..S $P(PKV,HLCS,2)=$P($G(^DIC(4,+IEN,0)),U),$P(PKV,HLCS,3)=CDSYS
"RTN","XUMFP4C",89,0)
 .S ^TMP("XUMF MFS",$J,"PARAM",IEN,"PKV")=PKV
"RTN","XUMFP4C",90,0)
 .I '$P($G(^DIC(4,+IEN,99)),U,4) D
"RTN","XUMFP4C",91,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZIN",8)="1,"_IEN_","
"RTN","XUMFP4C",92,0)
 ..;S ^TMP("XUMF MFS",$J,"PARAM",IEN,"KEY","ZIN",4.014,"1,"_IEN_",")="VISN"
"RTN","XUMFP4C",93,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZIN",9)="2,"_IEN_","
"RTN","XUMFP4C",94,0)
 ..;S ^TMP("XUMF MFS",$J,"PARAM",IEN,"KEY","ZIN",4.014,"2,"_IEN_",")="PARENT FACILITY"
"RTN","XUMFP4C",95,0)
 .S RF=$$RF^XUAF4(IEN) D:RF
"RTN","XUMFP4C",96,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZIN",10)=$P(RF,U,3)_","_IEN_","
"RTN","XUMFP4C",97,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZIN",11)=$P(RF,U,3)_","_IEN_","
"RTN","XUMFP4C",98,0)
 ..;S ^TMP("XUMF MFS",$J,"PARAM",IEN,"KEY","ZIN",4.999,$P(RF,U,3)_","_IEN_",")=$P(RF,U,3)
"RTN","XUMFP4C",99,0)
 .S RT=$$RT^XUAF4(IEN) D:RT
"RTN","XUMFP4C",100,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZIN",12)=$P(RT,U,3)_","_IEN_","
"RTN","XUMFP4C",101,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZIN",13)=$P(RT,U,3)_","_IEN_","
"RTN","XUMFP4C",102,0)
 ..;S ^TMP("XUMF MFS",$J,"PARAM",IEN,"KEY","ZIN",4.999,$P(RT,U,3)_","_IEN_",")=$P(RT,U,3)
"RTN","XUMFP4C",103,0)
 .S NPI=$$NPI^XUSNPI("Organization_ID",IEN) D:NPI
"RTN","XUMFP4C",104,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZIN",17)=$O(^DIC(4,IEN,"NPISTATUS","C",+NPI,999),-1)_","_IEN_","
"RTN","XUMFP4C",105,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZIN",18)=$O(^DIC(4,IEN,"NPISTATUS","C",+NPI,999),-1)_","_IEN_","
"RTN","XUMFP4C",106,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZIN",19)=$O(^DIC(4,IEN,"NPISTATUS","C",+NPI,999),-1)_","_IEN_","
"RTN","XUMFP4C",107,0)
 .S TAX=$$TAXORG^XUSTAX(IEN) D:TAX
"RTN","XUMFP4C",108,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZIN",20)=$O(^DIC(4,IEN,"TAXONOMY","B",+$P(TAX,U,2),999),-1)_","_IEN_","
"RTN","XUMFP4C",109,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZIN",21)=$O(^DIC(4,IEN,"TAXONOMY","B",+$P(TAX,U,2),999),-1)_","_IEN_","
"RTN","XUMFP4C",110,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZIN",22)=$O(^DIC(4,IEN,"TAXONOMY","B",+$P(TAX,U,2),999),-1)_","_IEN_","
"RTN","XUMFP4C",111,0)
 ;
"RTN","XUMFP4C",112,0)
 Q
"RTN","XUMFP4C",113,0)
 ;
"RTN","XUMFP4C",114,0)
IFF(IEN) ; -- inactive facility remove VISN and parent association
"RTN","XUMFP4C",115,0)
 ;
"RTN","XUMFP4C",116,0)
 N FDA,IENS,XUMF
"RTN","XUMFP4C",117,0)
 ;
"RTN","XUMFP4C",118,0)
 S XUMF=1
"RTN","XUMFP4C",119,0)
 ;
"RTN","XUMFP4C",120,0)
 S IENS="1,"_IEN_","
"RTN","XUMFP4C",121,0)
 S FDA(4.014,IENS,.01)="@"
"RTN","XUMFP4C",122,0)
 S IENS="2,"_IEN_","
"RTN","XUMFP4C",123,0)
 S FDA(4.014,IENS,.01)="@"
"RTN","XUMFP4C",124,0)
 D FILE^DIE("E","FDA")
"RTN","XUMFP4C",125,0)
 ;
"RTN","XUMFP4C",126,0)
 Q
"RTN","XUMFP4C",127,0)
 ;
"RTN","XUMFP4Z")
0^4^B16032973^n/a
"RTN","XUMFP4Z",1,0)
XUMFP4Z ;CIOFO-SF/RAM - Master File C/S Params INSTITUTION ;06/28/00
"RTN","XUMFP4Z",2,0)
 ;;8.0;KERNEL;**416**;Jul 10, 1995;Build 5
"RTN","XUMFP4Z",3,0)
 ;
"RTN","XUMFP4Z",4,0)
 ;
"RTN","XUMFP4Z",5,0)
 ; This routine sets up the parameters required by the INSTITUTION (#4)
"RTN","XUMFP4Z",6,0)
 ; file for the Master File server mechanism.
"RTN","XUMFP4Z",7,0)
 ;
"RTN","XUMFP4Z",8,0)
 ;  ** This routine is not a supported interface -- use XUMFP **
"RTN","XUMFP4Z",9,0)
 ;
"RTN","XUMFP4Z",10,0)
 ;  See XUMFP for parameter list documentation
"RTN","XUMFP4Z",11,0)
 ;
"RTN","XUMFP4Z",12,0)
 ; ZIN -- VA Specific VHA Institution Segment sequence
"RTN","XUMFP4Z",13,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEGMENT")="ZIN"
"RTN","XUMFP4Z",14,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",1,.01)="ST"
"RTN","XUMFP4Z",15,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",2,99)="ST"
"RTN","XUMFP4Z",16,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",3,11)="ID"
"RTN","XUMFP4Z",17,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",4,13)="CE^~FACILITY TYPE~VA"
"RTN","XUMFP4Z",18,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",5,100)="ST"
"RTN","XUMFP4Z",19,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",6,101)="ST"
"RTN","XUMFP4Z",20,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",7,.02)="ST"
"RTN","XUMFP4Z",21,0)
 ; associations -- VISN
"RTN","XUMFP4Z",22,0)
 I '$P($G(^DIC(4,+IEN,99)),U,4) D
"RTN","XUMFP4Z",23,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",8,"FILE")=4.014
"RTN","XUMFP4Z",24,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",8,"FIELD")=1
"RTN","XUMFP4Z",25,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",8,"DTYP")="CE^~VISN~VA"
"RTN","XUMFP4Z",26,0)
 .; associations -- parent
"RTN","XUMFP4Z",27,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",9,"FILE")=4.014
"RTN","XUMFP4Z",28,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",9,"FIELD")="1"
"RTN","XUMFP4Z",29,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",9,"DTYP")="ST"
"RTN","XUMFP4Z",30,0)
 ; history -- old station number
"RTN","XUMFP4Z",31,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",10,"FILE")=4.999
"RTN","XUMFP4Z",32,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",10,"FIELD")=.01
"RTN","XUMFP4Z",33,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",10,"DTYP")="DT"
"RTN","XUMFP4Z",34,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",11,"FILE")=4.999
"RTN","XUMFP4Z",35,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",11,"FIELD")=".06"
"RTN","XUMFP4Z",36,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",11,"DTYP")="ST^^:99"
"RTN","XUMFP4Z",37,0)
 ; history -- new station number
"RTN","XUMFP4Z",38,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",12,"FILE")=4.999
"RTN","XUMFP4Z",39,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",12,"FIELD")=.01
"RTN","XUMFP4Z",40,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",12,"DTYP")="DT"
"RTN","XUMFP4Z",41,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",13,"FILE")=4.999
"RTN","XUMFP4Z",42,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",13,"FIELD")=".05"
"RTN","XUMFP4Z",43,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",13,"DTYP")="ST^^:99"
"RTN","XUMFP4Z",44,0)
 ; physical address
"RTN","XUMFP4Z",45,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",14.1,.01)="SAD"
"RTN","XUMFP4Z",46,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",14.2,1.01)="ST"
"RTN","XUMFP4Z",47,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",14.3,1.03)="ST"
"RTN","XUMFP4Z",48,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",14.4,.02)="ST"
"RTN","XUMFP4Z",49,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",14.5,1.04)="ST"
"RTN","XUMFP4Z",50,0)
 ; mailing address
"RTN","XUMFP4Z",51,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",15.1,.01)="SAD"
"RTN","XUMFP4Z",52,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",15.2,4.01)="ST"
"RTN","XUMFP4Z",53,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",15.3,4.03)="ST"
"RTN","XUMFP4Z",54,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",15.4,4.04)="ST"
"RTN","XUMFP4Z",55,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",15.5,4.05)="ST"
"RTN","XUMFP4Z",56,0)
 ; agency code
"RTN","XUMFP4Z",57,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",16,95)="CE^~AGENCY CODE~VA"
"RTN","XUMFP4Z",58,0)
 ; npi
"RTN","XUMFP4Z",59,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",17,"FILE")=4.042
"RTN","XUMFP4Z",60,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",17,"FIELD")=.01
"RTN","XUMFP4Z",61,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",17,"DTYP")="DT"
"RTN","XUMFP4Z",62,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",18,"FILE")=4.042
"RTN","XUMFP4Z",63,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",18,"FIELD")=.02
"RTN","XUMFP4Z",64,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",18,"DTYP")="NM"
"RTN","XUMFP4Z",65,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",19,"FILE")=4.042
"RTN","XUMFP4Z",66,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",19,"FIELD")=.03
"RTN","XUMFP4Z",67,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",19,"DTYP")="ST"
"RTN","XUMFP4Z",68,0)
 ; taxonomy
"RTN","XUMFP4Z",69,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",20,"FILE")=4.043
"RTN","XUMFP4Z",70,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",20,"FIELD")=.01
"RTN","XUMFP4Z",71,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",20,"DTYP")="ST"
"RTN","XUMFP4Z",72,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",21,"FILE")=4.043
"RTN","XUMFP4Z",73,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",21,"FIELD")=.02
"RTN","XUMFP4Z",74,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",21,"DTYP")="ST"
"RTN","XUMFP4Z",75,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",22,"FILE")=4.043
"RTN","XUMFP4Z",76,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",22,"FIELD")=.03
"RTN","XUMFP4Z",77,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZIN","SEQ",22,"DTYP")="ST"
"RTN","XUMFP4Z",78,0)
 ;
"RTN","XUMFP4Z",79,0)
 Q
"RTN","XUMFP4Z",80,0)
 ;
"RTN","XUSNPI")
0^8^B57042546^B55759384
"RTN","XUSNPI",1,0)
XUSNPI ;OAK_BP/BDT - NATIONAL PROVIDER IDENTIFIER; 8/10/06
"RTN","XUSNPI",2,0)
 ;;8.0;KERNEL;**410,416**; July 10, 1997;Build 5
"RTN","XUSNPI",3,0)
 ;;
"RTN","XUSNPI",4,0)
ADDNPI(XUSQI,XUSIEN,XUSNPI,XUSDATE,XUSTATUS) ;
"RTN","XUSNPI",5,0)
 ;;==============================================================
"RTN","XUSNPI",6,0)
 ;; Update the Effective Date, Status & NPI trio.
"RTN","XUSNPI",7,0)
 ;; XUSQI   : Qualified Identifier, Required. For examble: Individual_ID Or Organization_ID
"RTN","XUSNPI",8,0)
 ;; XUSIEN  : Internal Entry Number. Required.
"RTN","XUSNPI",9,0)
 ;; XUSNPI  : National Provider Identifier. Required.
"RTN","XUSNPI",10,0)
 ;; XUSDATE : Active Date. Required.
"RTN","XUSNPI",11,0)
 ;; 
"RTN","XUSNPI",12,0)
 ;; If successful, return XUSRTN = IEN of new 42 sub-file entry.
"RTN","XUSNPI",13,0)
 ;; Else return XUSRTN = "-1^ErrorMessage".
"RTN","XUSNPI",14,0)
 ;; =============================================================
"RTN","XUSNPI",15,0)
 ;
"RTN","XUSNPI",16,0)
 ; Check valid inputs.
"RTN","XUSNPI",17,0)
 N XUSROOT,XUSFNB
"RTN","XUSNPI",18,0)
 S XUSROOT=$$GET^XPAR("PKG.KERNEL","XUSNPI QUALIFIED IDENTIFIER",XUSQI)
"RTN","XUSNPI",19,0)
 I $E(XUSROOT)'="^" S XUSROOT="^"_XUSROOT
"RTN","XUSNPI",20,0)
 I XUSROOT="^" Q "-1^Invalid Qualified Identifier"
"RTN","XUSNPI",21,0)
 I $$GLCK(XUSROOT)'>0 Q "-1^Invalid Qualified Identifier"
"RTN","XUSNPI",22,0)
 S XUSFNB=+$P(XUSROOT,"(",2)
"RTN","XUSNPI",23,0)
 I 'XUSFNB Q "-1^No File #"
"RTN","XUSNPI",24,0)
 S XUSFNB=XUSFNB_".42"
"RTN","XUSNPI",25,0)
 I $G(XUSIEN)'>0 Q "-1^Invalid IEN"
"RTN","XUSNPI",26,0)
 ;I (XUSIEN?.N)=0 Q "-1^Invalid IEN"
"RTN","XUSNPI",27,0)
 I ((XUSIEN?.N)!(XUSIEN?.N1"."1N.N))=0 Q "-1^Invalid IEN"
"RTN","XUSNPI",28,0)
 N XUIENCK S XUIENCK=XUSROOT_XUSIEN_","_0_")" I '$D(@XUIENCK) Q "-1^Invalid IEN"
"RTN","XUSNPI",29,0)
 I '$$CHKDGT(XUSNPI) Q "-1^Invalid NPI"
"RTN","XUSNPI",30,0)
 I '$$CHKDT(XUSQI,XUSIEN,XUSDATE) Q "-1^Invalid Effective Date"
"RTN","XUSNPI",31,0)
 I $G(XUSTATUS)="" S XUSTATUS=1
"RTN","XUSNPI",32,0)
 I (XUSTATUS'=0),(XUSTATUS'=1) Q "-1^Invalid Status"
"RTN","XUSNPI",33,0)
 N CHNPI S CHNPI=$$CHKDGT^XUSNPIE1(XUSNPI,XUSIEN,XUSQI) ; check if NPI is being used.
"RTN","XUSNPI",34,0)
 I CHNPI'=1 Q "-1^The NPI is being used."
"RTN","XUSNPI",35,0)
 ;
"RTN","XUSNPI",36,0)
 ;------------------------------------------------------------------
"RTN","XUSNPI",37,0)
 N ZZ,XUSRTN,ERRMSG,XUSX S ERRMSG=""
"RTN","XUSNPI",38,0)
 S XUSX=XUSROOT_XUSIEN_","_"""NPISTATUS"""_")"
"RTN","XUSNPI",39,0)
 ; Update Effective Date #42 multiple fields 
"RTN","XUSNPI",40,0)
 S XUSFNB=$P(XUSROOT,"(",2)
"RTN","XUSNPI",41,0)
 S XUSFNB=+$P(XUSFNB,",") I XUSFNB S XUSFNB=XUSFNB_".042"
"RTN","XUSNPI",42,0)
 S ZZ(1,XUSFNB,"+2,"_XUSIEN_",",.01)=XUSDATE
"RTN","XUSNPI",43,0)
 S ZZ(1,XUSFNB,"+2,"_XUSIEN_",",.02)=XUSTATUS
"RTN","XUSNPI",44,0)
 S ZZ(1,XUSFNB,"+2,"_XUSIEN_",",.03)=XUSNPI
"RTN","XUSNPI",45,0)
 D UPDATE^DIE("","ZZ(1)",,ERRMSG)
"RTN","XUSNPI",46,0)
 I $L(ERRMSG) Q "-1^"_$G(ERRMSG)
"RTN","XUSNPI",47,0)
 S XUSX=XUSROOT_XUSIEN_","_"""NPISTATUS"""_","_"""B"""_","_XUSDATE_","_"""A"""_")"
"RTN","XUSNPI",48,0)
 S XUSRTN=$O(@XUSX,-1)
"RTN","XUSNPI",49,0)
 I '+XUSRTN Q "-1^No entry add"
"RTN","XUSNPI",50,0)
 Q XUSRTN
"RTN","XUSNPI",51,0)
 ;
"RTN","XUSNPI",52,0)
NPI(XUSQI,XUSIEN,XUSDATE) ; Retrieve the NPI value for a qualified identifier entity.
"RTN","XUSNPI",53,0)
 ;;==============================================================
"RTN","XUSNPI",54,0)
 ;; XUSQI   : Qualified Identifier, Required. For examble: Individual_ID Or Organization_ID
"RTN","XUSNPI",55,0)
 ;; XUSIEN  : Internal Entry Number of file #4 or #200. Required.
"RTN","XUSNPI",56,0)
 ;; XUSDATE : Active Date. Not Required. Default: 'Today'.
"RTN","XUSNPI",57,0)
 ;; 
"RTN","XUSNPI",58,0)
 ;; If current NPI exists, return XUSRTN = 'NPI^EffectiveDate^Status'
"RTN","XUSNPI",59,0)
 ;; If invalid XUSQI or XUSIEN, return '-1^ErrorMessage'
"RTN","XUSNPI",60,0)
 ;; Else return 0
"RTN","XUSNPI",61,0)
 ;; =============================================================
"RTN","XUSNPI",62,0)
 ; check valid inputs
"RTN","XUSNPI",63,0)
 I $G(XUSIEN)'>0 Q "-1^Invalid IEN"
"RTN","XUSNPI",64,0)
 ;I (XUSIEN?.N)=0 Q "-1^Invalid IEN"
"RTN","XUSNPI",65,0)
 I ((XUSIEN?.N)!(XUSIEN?.N1"."1N.N))=0 Q "-1^Invalid IEN"
"RTN","XUSNPI",66,0)
 I $G(XUSDATE)="" S XUSDATE=$$NOW^XLFDT
"RTN","XUSNPI",67,0)
 N X,Y,%DT S %DT="T",X=XUSDATE D ^%DT I Y'=XUSDATE Q "-1^Invalid Effective Date"
"RTN","XUSNPI",68,0)
 ;-----------------------------------
"RTN","XUSNPI",69,0)
 N XUSDA,XUSI,XUSRTN,XUSROOT,XUSX,XUSTAT S (XUSDA,XUSRTN)="",XUSTAT="Inactive"
"RTN","XUSNPI",70,0)
 ; get global from Parameter file base on Qualified Identifier.
"RTN","XUSNPI",71,0)
 S XUSROOT=$$GET^XPAR("PKG.KERNEL","XUSNPI QUALIFIED IDENTIFIER",XUSQI)
"RTN","XUSNPI",72,0)
 I $E(XUSROOT)'="^" S XUSROOT="^"_XUSROOT
"RTN","XUSNPI",73,0)
 I XUSROOT="^" Q "-1^Invalid Qualified Identifier"
"RTN","XUSNPI",74,0)
 N XUIENCK S XUIENCK=XUSROOT_XUSIEN_","_0_")" I '$D(@XUIENCK) Q "-1^Invalid IEN"
"RTN","XUSNPI",75,0)
 I $$GLCK(XUSROOT)'>0 Q "-1^Invalid Qualified Identifier"
"RTN","XUSNPI",76,0)
 S XUSROOT=XUSROOT_XUSIEN_","_"""NPISTATUS"""
"RTN","XUSNPI",77,0)
 S XUSX=XUSROOT_")" I '$D(@XUSX) Q "-1^No NPI found"
"RTN","XUSNPI",78,0)
 S XUSI=0 F  S XUSI=$O(@(XUSROOT_","_"""B"""_","_XUSI_")")) Q:XUSI>XUSDATE!'XUSI
"RTN","XUSNPI",79,0)
 I 'XUSI S XUSX=XUSROOT_","_"""B"""_","_"""A"""_")",XUSDA=$O(@XUSX,-1)
"RTN","XUSNPI",80,0)
 I XUSI>XUSDATE S XUSX=XUSROOT_","_"""B"""_","_XUSI_")",XUSDA=$O(@(XUSX),-1)
"RTN","XUSNPI",81,0)
 I XUSDA="" Q 0
"RTN","XUSNPI",82,0)
 S XUSDA=XUSROOT_","_"""B"""_","_XUSDA_","_"""A"""_")",XUSDA=$O(@XUSDA,-1)
"RTN","XUSNPI",83,0)
 S XUSRTN=XUSROOT_","_XUSDA_","_0_")"
"RTN","XUSNPI",84,0)
 I '$D(@XUSRTN) Q "-1^Invalid IEN"
"RTN","XUSNPI",85,0)
 I $P($G(@XUSRTN),"^",2)=1 S XUSTAT="Active"
"RTN","XUSNPI",86,0)
 Q $P($G(@XUSRTN),"^",3)_"^"_$P($G(@XUSRTN),"^",1)_"^"_XUSTAT
"RTN","XUSNPI",87,0)
 ;       
"RTN","XUSNPI",88,0)
QI(XUSNPI) ; Retrieve the ALL qualified indentifier entity for an NPI value.
"RTN","XUSNPI",89,0)
 ;;================================================
"RTN","XUSNPI",90,0)
 ;; XUSNPI  : National Provider Identifier. Required
"RTN","XUSNPI",91,0)
 ;; 
"RTN","XUSNPI",92,0)
 ;; If qualified identified entity exists, return
"RTN","XUSNPI",93,0)
 ;; 'QualifiedIdentifier^IEN^EffectiveDate^Status;'
"RTN","XUSNPI",94,0)
 ;; If more than one records found, they are separated by ";"
"RTN","XUSNPI",95,0)
 ;; Else return 0        
"RTN","XUSNPI",96,0)
 ;;================================================
"RTN","XUSNPI",97,0)
 ; check valid NPI
"RTN","XUSNPI",98,0)
 I '$$CHKDGT(XUSNPI) Q "0^Invalid NPI"
"RTN","XUSNPI",99,0)
 N ZZ
"RTN","XUSNPI",100,0)
 D GETLST^XPAR(.ZZ,"PKG.KERNEL","XUSNPI QUALIFIED IDENTIFIER")
"RTN","XUSNPI",101,0)
 I ZZ'>0 Q 0
"RTN","XUSNPI",102,0)
 N XUSI,XUSIEN,XUSROOT,XUSQT,XUSX,XUSRTN,XUSRTN1 S (XUSQT,XUSRTN)=0,XUSRTN1=""
"RTN","XUSNPI",103,0)
 S XUSI=0 F  S XUSI=$O(ZZ(XUSI)) Q:'XUSI  D
"RTN","XUSNPI",104,0)
 . S XUSROOT=$P(ZZ(XUSI),"^",2),XUSROOT="^"_XUSROOT
"RTN","XUSNPI",105,0)
 . I $$GLCK(XUSROOT)'>0 Q  ;check valid global root
"RTN","XUSNPI",106,0)
 . I $E(XUSNPI,1,1)=0 S XUSNPI=""""_XUSNPI_""""
"RTN","XUSNPI",107,0)
 . S XUSX=XUSROOT_"""NPI42"""_","_XUSNPI_")" Q:'$D(@XUSX)
"RTN","XUSNPI",108,0)
 . S XUSIEN=0 F  S XUSX=XUSROOT_"""NPI42"""_","_XUSNPI_","_XUSIEN_")",XUSIEN=$O(@XUSX) Q:XUSIEN'>0  D
"RTN","XUSNPI",109,0)
 . . S XUSRTN=$$SRCHNPI(XUSROOT,XUSIEN,XUSNPI)
"RTN","XUSNPI",110,0)
 . . I +XUSRTN S XUSRTN1=XUSRTN1_$P(ZZ(XUSI),"^")_"^"_XUSRTN_";",XUSQT=XUSQT+1
"RTN","XUSNPI",111,0)
 I XUSRTN1="" S XUSRTN1=0
"RTN","XUSNPI",112,0)
 Q XUSRTN1
"RTN","XUSNPI",113,0)
 ;
"RTN","XUSNPI",114,0)
GLCK(XUSROOT) ; check valid global root
"RTN","XUSNPI",115,0)
 N XUFNB,ZZ
"RTN","XUSNPI",116,0)
 I $G(XUSROOT)="" Q 0
"RTN","XUSNPI",117,0)
 S XUFNB=$P(XUSROOT,"(",2),XUFNB=$P(XUFNB,",")
"RTN","XUSNPI",118,0)
 D FILE^DID(XUFNB,"","GLOBAL NAME","ZZ")
"RTN","XUSNPI",119,0)
 Q (XUSROOT=$G(ZZ("GLOBAL NAME")))
"RTN","XUSNPI",120,0)
 ;
"RTN","XUSNPI",121,0)
SRCHNPI(XUSROOT,XUSIEN,XUSNPI) ;
"RTN","XUSNPI",122,0)
 I $G(XUSIEN)'>0 Q 0
"RTN","XUSNPI",123,0)
 I (XUSIEN?.N)=0 Q 0
"RTN","XUSNPI",124,0)
 N XUSX,XUSRTN S XUSRTN=0
"RTN","XUSNPI",125,0)
 I $E(XUSNPI,1,1)=0 S XUSNPI=""""_XUSNPI_""""
"RTN","XUSNPI",126,0)
 S XUSX=XUSROOT_XUSIEN_","_"""NPISTATUS"""_","_"""C"""_","_XUSNPI_")"
"RTN","XUSNPI",127,0)
 I '$D(@XUSX) Q 0
"RTN","XUSNPI",128,0)
 S XUSX=XUSROOT_XUSIEN_","_"""NPISTATUS"""_","_"""C"""_","_XUSNPI_","_"""A"""_")"
"RTN","XUSNPI",129,0)
 S XUSRTN=$O(@XUSX,-1)
"RTN","XUSNPI",130,0)
 I '+XUSRTN Q 0
"RTN","XUSNPI",131,0)
 S XUSX=XUSROOT_XUSIEN_","_"""NPISTATUS"""_","_XUSRTN_","_0_")"
"RTN","XUSNPI",132,0)
 I '$D(@XUSX) Q 0
"RTN","XUSNPI",133,0)
 S XUSRTN=$G(@XUSX) I XUSRTN S XUSRTN=XUSIEN_"^"_$P(XUSRTN,"^")_"^"_$P(XUSRTN,"^",2)
"RTN","XUSNPI",134,0)
 I $P(XUSRTN,"^",3)=1 S $P(XUSRTN,"^",3)="Active"
"RTN","XUSNPI",135,0)
 I $P(XUSRTN,"^",3)=0 S $P(XUSRTN,"^",3)="Inactive"
"RTN","XUSNPI",136,0)
 Q XUSRTN
"RTN","XUSNPI",137,0)
 ;
"RTN","XUSNPI",138,0)
CHKDGT(XUSNPI) ;
"RTN","XUSNPI",139,0)
 ;  Function to validate the format of an NPI number.  It checks the
"RTN","XUSNPI",140,0)
 ;  length of the number, whether the NPI is numeric, and whether
"RTN","XUSNPI",141,0)
 ;  the check digit is valid.
"RTN","XUSNPI",142,0)
 ;
"RTN","XUSNPI",143,0)
 ;  Input parameter:
"RTN","XUSNPI",144,0)
 ;    NPI - 10-digit NPI number to validate.
"RTN","XUSNPI",145,0)
 ;
"RTN","XUSNPI",146,0)
 ;  Output parameter:
"RTN","XUSNPI",147,0)
 ;    Boolean value indicating whether the NPI has a valid format
"RTN","XUSNPI",148,0)
 ;
"RTN","XUSNPI",149,0)
 ;  NPI must be 10 digits long.
"RTN","XUSNPI",150,0)
 I XUSNPI'?10N Q 0
"RTN","XUSNPI",151,0)
 Q $E(XUSNPI,10)=$$CKDIGIT($E(XUSNPI,1,9))
"RTN","XUSNPI",152,0)
 ;
"RTN","XUSNPI",153,0)
CKDIGIT(XUSNPI) ;
"RTN","XUSNPI",154,0)
 ;  Function to calculate and return the check digit of an NPI.
"RTN","XUSNPI",155,0)
 ;  The check digit is calculated using the Luhn Formula for
"RTN","XUSNPI",156,0)
 ;  Modulus 10 "double-add-double" Check Digit.  A value of 24 is
"RTN","XUSNPI",157,0)
 ;  added to the total to account for the implied USA (80840) prefix.
"RTN","XUSNPI",158,0)
 ;
"RTN","XUSNPI",159,0)
 N XUSCTOT,XUSCN,XUSCDIG,XUSI
"RTN","XUSNPI",160,0)
 S XUSCTOT=24
"RTN","XUSNPI",161,0)
 F XUSI=9:-2:1 S XUSCN=2*$E(XUSNPI,XUSI),XUSCTOT=XUSCTOT+$E(XUSCN)+$E(XUSCN,2)+$E(XUSNPI,XUSI-1)
"RTN","XUSNPI",162,0)
 S XUSCDIG=150-XUSCTOT
"RTN","XUSNPI",163,0)
 Q $E(XUSCDIG,$L(XUSCDIG))
"RTN","XUSNPI",164,0)
 ;
"RTN","XUSNPI",165,0)
CHKDT(XUSQI,XUSIEN,XUSDATE) ; Check Date
"RTN","XUSNPI",166,0)
 ;;============================================================================
"RTN","XUSNPI",167,0)
 ;;  XUSQI   : Qualified Identifier. Required. For examble: "Individual_ID"
"RTN","XUSNPI",168,0)
 ;;  XUSIEN  : Internal Entry Number. Required.
"RTN","XUSNPI",169,0)
 ;;  XUSDATE : The Effective Date value to test. Must be FM date. Required. 
"RTN","XUSNPI",170,0)
 ;;  
"RTN","XUSNPI",171,0)
 ;;  If input passes date comparison, return 1.
"RTN","XUSNPI",172,0)
 ;;  Else return 0.
"RTN","XUSNPI",173,0)
 ;;============================================================================
"RTN","XUSNPI",174,0)
 ; 
"RTN","XUSNPI",175,0)
 I $G(XUSIEN)'>0 Q "0^Invalid IEN."
"RTN","XUSNPI",176,0)
 ;I (XUSIEN?.N)=0 Q "0^Invalid IEN."
"RTN","XUSNPI",177,0)
 I ((XUSIEN?.N)!(XUSIEN?.N1"."1N.N))=0 Q "-1^Invalid IEN"
"RTN","XUSNPI",178,0)
 N X,Y,%DT S %DT="T",X=$G(XUSDATE) D ^%DT I Y'=XUSDATE Q "0^Invalid Effective Date. Must be FM Date/Time."
"RTN","XUSNPI",179,0)
 ;-----------------------------------
"RTN","XUSNPI",180,0)
 N XUSROOT,XUSDA
"RTN","XUSNPI",181,0)
 N XUSCRDT S XUSCRDT=$$NOW^XLFDT I XUSDATE>XUSCRDT Q 0
"RTN","XUSNPI",182,0)
 ; get global from Parameter file base on Qualified Identifier.
"RTN","XUSNPI",183,0)
 S XUSROOT=$$GET^XPAR("PKG.KERNEL","XUSNPI QUALIFIED IDENTIFIER",XUSQI)
"RTN","XUSNPI",184,0)
 I $E(XUSROOT)'="^" S XUSROOT="^"_XUSROOT
"RTN","XUSNPI",185,0)
 I XUSROOT="^" Q "0^Invalid Qualified Identifier."
"RTN","XUSNPI",186,0)
 I $$GLCK(XUSROOT)'>0 Q "-1^Invalid Qualified Identifier"
"RTN","XUSNPI",187,0)
 N XUIENCK S XUIENCK=XUSROOT_XUSIEN_","_0_")" I $D(@XUIENCK)'>0 Q "0^Invalid IEN."
"RTN","XUSNPI",188,0)
 S XUSROOT=XUSROOT_XUSIEN_","_"""NPISTATUS"""_","_"""B"""_","_"""A"""_")",XUSDA=$O(@XUSROOT,-1)
"RTN","XUSNPI",189,0)
 Q (XUSDATE'<XUSDA)
"VER")
8.0^22.0
"^DD",8932.1,8932.1,90002,0)
INDIVIDUAL/NON^S^I:INDIVIDUAL;N:NON-INDIVIDUAL;^90002;2^Q
"^DD",8932.1,8932.1,90002,21,0)
^^7^7^3020830^
"^DD",8932.1,8932.1,90002,21,1,0)
This field indicates whether the entry is for an Individual or for a
"^DD",8932.1,8932.1,90002,21,2,0)
Non-Individual, and was added at the request of IHS in their namespace,
"^DD",8932.1,8932.1,90002,21,3,0)
until the file supporting Non-Individuals can be defined.
"^DD",8932.1,8932.1,90002,21,4,0)
 
"^DD",8932.1,8932.1,90002,21,5,0)
Note that the current definition of the X12 CODE does not explicitly
"^DD",8932.1,8932.1,90002,21,6,0)
indicate whether an entry is for an Individual or for a Non-Individual,
"^DD",8932.1,8932.1,90002,21,7,0)
either in value or structure definition.
"^DD",8932.1,8932.1,90002,23,0)
^^11^11^3030708^
"^DD",8932.1,8932.1,90002,23,1,0)
This field is in the IHS numberspace, and is for their use pending
"^DD",8932.1,8932.1,90002,23,2,0)
development and deployment of a file to support a Non-Individual taxonomy.
"^DD",8932.1,8932.1,90002,23,3,0)
 
"^DD",8932.1,8932.1,90002,23,4,0)
PERSON CLASS is intended for Individuals, and as of this writing, plans
"^DD",8932.1,8932.1,90002,23,5,0)
are under way to create a separate file to support that portion of the
"^DD",8932.1,8932.1,90002,23,6,0)
X12 Provider Taxonomy which is for Non-Individuals.
"^DD",8932.1,8932.1,90002,23,7,0)
 
"^DD",8932.1,8932.1,90002,23,8,0)
August 30, 2002.
"^DD",8932.1,8932.1,90002,23,9,0)
 
"^DD",8932.1,8932.1,90002,23,10,0)
IHS has added entries for non-Individuals to the file.  Patches should 
"^DD",8932.1,8932.1,90002,23,11,0)
take that in to account when planning how to load new data.
"^DD",8932.1,8932.1,90002,"DT")
3030708
"BLD",6419,6)
^359
**END**
**END**
