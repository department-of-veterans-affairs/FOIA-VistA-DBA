Released IVM*2*120 SEQ #102
Extracted from mail message
**KIDS**:IVM*2.0*120^

**INSTALL NAME**
IVM*2.0*120
"BLD",6583,0)
IVM*2.0*120^INCOME VERIFICATION MATCH^0^3070209^y
"BLD",6583,1,0)
^^1^1^3061211^
"BLD",6583,1,1,0)
IVM*2*120
"BLD",6583,4,0)
^9.64PA^^
"BLD",6583,6.3)
8
"BLD",6583,"KRN",0)
^9.67PA^8989.52^19
"BLD",6583,"KRN",.4,0)
.4
"BLD",6583,"KRN",.401,0)
.401
"BLD",6583,"KRN",.402,0)
.402
"BLD",6583,"KRN",.403,0)
.403
"BLD",6583,"KRN",.5,0)
.5
"BLD",6583,"KRN",.84,0)
.84
"BLD",6583,"KRN",3.6,0)
3.6
"BLD",6583,"KRN",3.8,0)
3.8
"BLD",6583,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",6583,"KRN",9.2,0)
9.2
"BLD",6583,"KRN",9.8,0)
9.8
"BLD",6583,"KRN",9.8,"NM",0)
^9.68A^87^1
"BLD",6583,"KRN",9.8,"NM",87,0)
IVMCQ^^0^B25139388
"BLD",6583,"KRN",9.8,"NM","B","IVMCQ",87)

"BLD",6583,"KRN",19,0)
19
"BLD",6583,"KRN",19,"NM",0)
^9.68A^^0
"BLD",6583,"KRN",19.1,0)
19.1
"BLD",6583,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",6583,"KRN",101,0)
101
"BLD",6583,"KRN",101,"NM",0)
^9.68A^^0
"BLD",6583,"KRN",409.61,0)
409.61
"BLD",6583,"KRN",409.61,"NM",0)
^9.68A^^0
"BLD",6583,"KRN",771,0)
771
"BLD",6583,"KRN",771,"NM",0)
^9.68A^^0
"BLD",6583,"KRN",870,0)
870
"BLD",6583,"KRN",8989.51,0)
8989.51
"BLD",6583,"KRN",8989.52,0)
8989.52
"BLD",6583,"KRN",8994,0)
8994
"BLD",6583,"KRN","B",.4,.4)

"BLD",6583,"KRN","B",.401,.401)

"BLD",6583,"KRN","B",.402,.402)

"BLD",6583,"KRN","B",.403,.403)

"BLD",6583,"KRN","B",.5,.5)

"BLD",6583,"KRN","B",.84,.84)

"BLD",6583,"KRN","B",3.6,3.6)

"BLD",6583,"KRN","B",3.8,3.8)

"BLD",6583,"KRN","B",9.2,9.2)

"BLD",6583,"KRN","B",9.8,9.8)

"BLD",6583,"KRN","B",19,19)

"BLD",6583,"KRN","B",19.1,19.1)

"BLD",6583,"KRN","B",101,101)

"BLD",6583,"KRN","B",409.61,409.61)

"BLD",6583,"KRN","B",771,771)

"BLD",6583,"KRN","B",870,870)

"BLD",6583,"KRN","B",8989.51,8989.51)

"BLD",6583,"KRN","B",8989.52,8989.52)

"BLD",6583,"KRN","B",8994,8994)

"BLD",6583,"QUES",0)
^9.62^^
"BLD",6583,"REQB",0)
^9.611^^
"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
120^3070209
"PKG",220,22,1,"PAH",1,1,0)
^^1^1^3070209
"PKG",220,22,1,"PAH",1,1,1,0)
IVM*2*120
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IVMCQ")
0^87^B25139388^B31930563
"RTN","IVMCQ",1,0)
IVMCQ ;ALB/KCL/AEG/GAH - API FOR FINANCIAL QUERIES ; 28-N0V-06
"RTN","IVMCQ",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,30,55,120**;21-OCT-94;Build 8
"RTN","IVMCQ",3,0)
 ;
"RTN","IVMCQ",4,0)
 ;
"RTN","IVMCQ",5,0)
OPT ; Entry point for stand-alone financial query option.
"RTN","IVMCQ",6,0)
 ;
"RTN","IVMCQ",7,0)
 N IVMQUIT
"RTN","IVMCQ",8,0)
 W !!,"This option allows queries to be sent to the Health Eligibility"
"RTN","IVMCQ",9,0)
 W !,"Center (HEC) for patients that require updated income information."
"RTN","IVMCQ",10,0)
 S IVMQUIT=0 F  D EACH1 Q:IVMQUIT
"RTN","IVMCQ",11,0)
 Q
"RTN","IVMCQ",12,0)
 ;
"RTN","IVMCQ",13,0)
EACH1 ; Description: Used to send a financial query for each patient selected. from stand-alone option.
"RTN","IVMCQ",14,0)
 ;
"RTN","IVMCQ",15,0)
 N DFN,IVMERROR,IVMOK,IVMOUT,IVMQUE,IVMREPLY,Y
"RTN","IVMCQ",16,0)
 S DIC="^DPT(",DIC(0)="AEMQ"
"RTN","IVMCQ",17,0)
 W ! D ^DIC K DIC S DFN=+Y I Y<1 S IVMQUIT=1 G EACH1Q
"RTN","IVMCQ",18,0)
 ;
"RTN","IVMCQ",19,0)
 ; does patient need a financial query?
"RTN","IVMCQ",20,0)
 I '$$NEED(DFN,1,.IVMERROR) W !!,"A financial query can not be sent for this patient!" W !,IVMERROR G EACH1Q
"RTN","IVMCQ",21,0)
 ;
"RTN","IVMCQ",22,0)
 ; ask if okay to send query?
"RTN","IVMCQ",23,0)
 I '$$ASK(.IVMOK)!($G(IVMOK)) G EACH1Q
"RTN","IVMCQ",24,0)
 ;
"RTN","IVMCQ",25,0)
 ; notify when a reply to query is received?
"RTN","IVMCQ",26,0)
 S IVMREPLY=$$NOTIFY(.IVMOUT)
"RTN","IVMCQ",27,0)
 I $G(IVMOUT) G EACH1Q
"RTN","IVMCQ",28,0)
 ;
"RTN","IVMCQ",29,0)
 ; send query for patient, else write error
"RTN","IVMCQ",30,0)
 I $$QUERY^IVMCQ1(DFN,$G(DUZ),$G(IVMREPLY),$G(XQY),.IVMERROR,1) W !!,"Financial query sent ..."
"RTN","IVMCQ",31,0)
 E  D
"RTN","IVMCQ",32,0)
 .W !!,"Failure to send query: ",IVMERROR
"RTN","IVMCQ",33,0)
 ;
"RTN","IVMCQ",34,0)
EACH1Q Q
"RTN","IVMCQ",35,0)
 ;
"RTN","IVMCQ",36,0)
 ;
"RTN","IVMCQ",37,0)
REG(DFN) ; Entry point to automatically send a query to HEC for updated financial information.
"RTN","IVMCQ",38,0)
 ;
"RTN","IVMCQ",39,0)
 ;   This entry point is called from hooks in registration: 
"RTN","IVMCQ",40,0)
 ;      - Register a Patient option (DGREG)
"RTN","IVMCQ",41,0)
 ;      - Load/Edit Patient Data option (DG10)
"RTN","IVMCQ",42,0)
 ;
"RTN","IVMCQ",43,0)
 ;  Input:
"RTN","IVMCQ",44,0)
 ;   DFN - IEN of patient record in PATIENT file
"RTN","IVMCQ",45,0)
 ;
"RTN","IVMCQ",46,0)
 ; Output: none
"RTN","IVMCQ",47,0)
 ;
"RTN","IVMCQ",48,0)
 I '$G(DFN) G REGQ
"RTN","IVMCQ",49,0)
 I '$$NEED(DFN) G REGQ
"RTN","IVMCQ",50,0)
 I $$QUERY^IVMCQ1(DFN,$G(DUZ),0,$G(XQY),,1) W !!,"Financial query sent ..."
"RTN","IVMCQ",51,0)
REGQ Q
"RTN","IVMCQ",52,0)
 ;
"RTN","IVMCQ",53,0)
 ;
"RTN","IVMCQ",54,0)
APPT ; Entry point for IVM SEND FINANCIAL QUERY protocol.
"RTN","IVMCQ",55,0)
 ;
"RTN","IVMCQ",56,0)
 ;  Input:
"RTN","IVMCQ",57,0)
 ;   SDAMEVT - IEN of record in APPOINTMENT TRANSACTION TYPE file.
"RTN","IVMCQ",58,0)
 ;             (Transaction type that can occur against an appointment)
"RTN","IVMCQ",59,0)
 ;     SDATA - Array passed from the [SDAM APPOINTMENT EVENTS]
"RTN","IVMCQ",60,0)
 ;             extended protocol.  2nd piece of SDATA is IEN of patient
"RTN","IVMCQ",61,0)
 ;             record in PATIENT file.
"RTN","IVMCQ",62,0)
 ;
"RTN","IVMCQ",63,0)
 ; Output: none
"RTN","IVMCQ",64,0)
 ;
"RTN","IVMCQ",65,0)
 N DFN
"RTN","IVMCQ",66,0)
 ;
"RTN","IVMCQ",67,0)
 ; quit if supported Sched vars not defined
"RTN","IVMCQ",68,0)
 I '$D(SDAMEVT) G APPTQ
"RTN","IVMCQ",69,0)
 S DFN=$P($G(SDATA),"^",2)
"RTN","IVMCQ",70,0)
 I 'DFN G APPTQ
"RTN","IVMCQ",71,0)
 ;
"RTN","IVMCQ",72,0)
 ; quit if transaction type not (make appt, check-in, check-out)
"RTN","IVMCQ",73,0)
 I SDAMEVT'=1,(SDAMEVT'=4),(SDAMEVT'=5) G APPTQ
"RTN","IVMCQ",74,0)
 ;
"RTN","IVMCQ",75,0)
 ; does patient need query sent?
"RTN","IVMCQ",76,0)
 I '$$NEED(DFN,1) G APPTQ
"RTN","IVMCQ",77,0)
 ;
"RTN","IVMCQ",78,0)
 ; send query for patient
"RTN","IVMCQ",79,0)
 I $$QUERY^IVMCQ1(DFN,$G(DUZ),0,$G(XQY),,1)
"RTN","IVMCQ",80,0)
 ;
"RTN","IVMCQ",81,0)
APPTQ Q
"RTN","IVMCQ",82,0)
 ;
"RTN","IVMCQ",83,0)
 ;
"RTN","IVMCQ",84,0)
ASK(IVMTOUT) ; Ask user if ok to send financial query for patient.
"RTN","IVMCQ",85,0)
 ;
"RTN","IVMCQ",86,0)
 ;  Input: none
"RTN","IVMCQ",87,0)
 ;
"RTN","IVMCQ",88,0)
 ; Output: 
"RTN","IVMCQ",89,0)
 ;  Function Value: 1=Yes and 0=No
"RTN","IVMCQ",90,0)
 ;                  IVMTOUT (pass by reference)  1=Timeout or up-arrow
"RTN","IVMCQ",91,0)
 ;
"RTN","IVMCQ",92,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IVMCQ",93,0)
 W !
"RTN","IVMCQ",94,0)
 S DIR("A")="Would you like to send a financial query for this patient"
"RTN","IVMCQ",95,0)
 S DIR("B")="YES"
"RTN","IVMCQ",96,0)
 S DIR(0)="Y"
"RTN","IVMCQ",97,0)
 W ! D ^DIR
"RTN","IVMCQ",98,0)
 I $D(DTOUT)!($D(DUOUT)) S IVMTOUT=1
"RTN","IVMCQ",99,0)
 Q +$G(Y)
"RTN","IVMCQ",100,0)
 ;
"RTN","IVMCQ",101,0)
 ;
"RTN","IVMCQ",102,0)
NOTIFY(IVMOUT) ; Ask if user should be notified when a reply to query is received.
"RTN","IVMCQ",103,0)
 ;
"RTN","IVMCQ",104,0)
 ;  Input: none
"RTN","IVMCQ",105,0)
 ;
"RTN","IVMCQ",106,0)
 ; Output: 
"RTN","IVMCQ",107,0)
 ;  Function Value: 1=Yes and 0=No
"RTN","IVMCQ",108,0)
 ;                  IVMOUT (pass by reference)  1=Timeout or up-arrow
"RTN","IVMCQ",109,0)
 ;
"RTN","IVMCQ",110,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","IVMCQ",111,0)
 S DIR("A")="Do you want to be notified when a query reply is received"
"RTN","IVMCQ",112,0)
 S DIR("B")="YES"
"RTN","IVMCQ",113,0)
 S DIR(0)="Y"
"RTN","IVMCQ",114,0)
 W ! D ^DIR
"RTN","IVMCQ",115,0)
 I $D(DTOUT)!($D(DUOUT)) S IVMOUT=1
"RTN","IVMCQ",116,0)
 Q +$G(Y)
"RTN","IVMCQ",117,0)
 ;
"RTN","IVMCQ",118,0)
 ;
"RTN","IVMCQ",119,0)
NEED(DFN,IVMSENT,ERROR) ; Description: Used to determine if a financial query should be sent for a patient.
"RTN","IVMCQ",120,0)
 ;
"RTN","IVMCQ",121,0)
 ;  Input:
"RTN","IVMCQ",122,0)
 ;       DFN - ien of patient record in PATIENT file
"RTN","IVMCQ",123,0)
 ;   IVMSENT - (optional) Check if query sent on same day 0=>No|1=>Yes
"RTN","IVMCQ",124,0)
 ; Output:
"RTN","IVMCQ",125,0)
 ;  Function Value: Does pt. need a query? 1 on success, 0 on failure
"RTN","IVMCQ",126,0)
 ;     ERROR - If failure, return the reason for not sending
"RTN","IVMCQ",127,0)
 ;             the query (pass by reference)
"RTN","IVMCQ",128,0)
 ;
"RTN","IVMCQ",129,0)
 N DGMSGF,DGADDF,DGREQF,IVMBT,IVML,SUCCESS
"RTN","IVMCQ",130,0)
 N IVMDOD
"RTN","IVMCQ",131,0)
 ;
"RTN","IVMCQ",132,0)
 S SUCCESS=0,(DGMSGF,DGADDF)=1
"RTN","IVMCQ",133,0)
 I '$D(IVMSENT) S IVMSENT=1
"RTN","IVMCQ",134,0)
 ; Can this patient be identified?
"RTN","IVMCQ",135,0)
 I '$G(DFN) S ERROR="PATIENT CAN NOT BE IDENTIFIED" G NEEDQ
"RTN","IVMCQ",136,0)
 ; is this patient deceased?
"RTN","IVMCQ",137,0)
 S IVMDOD=$$GET1^DIQ(2,DFN_",",.351,"I")
"RTN","IVMCQ",138,0)
 I IVMDOD]"" S ERROR="Patient Expired on "_$$GET1^DIQ(2,DFN_",",.351,"E")_".  Financial query unnecessary."  G NEEDQ
"RTN","IVMCQ",139,0)
 ; Check to see if this patient is currently on a DOM ward.
"RTN","IVMCQ",140,0)
 D DOM^DGMTR I $G(DGDOM) D  G NEEDQ
"RTN","IVMCQ",141,0)
 .S ERROR="PATIENT CURRENTLY A DOMICILIARY PATIENT - "
"RTN","IVMCQ",142,0)
 .S ERROR=ERROR_"QUERY NOT REQUIRED"
"RTN","IVMCQ",143,0)
 .K DGDOM
"RTN","IVMCQ",144,0)
 .Q
"RTN","IVMCQ",145,0)
 ; Check for PRIMARY test either MEANS or Copay exemption.
"RTN","IVMCQ",146,0)
 S IVML=$$LST^DGMTCOU1(DFN,DT_.2359,3)
"RTN","IVMCQ",147,0)
 ; If no primary test on file check to see if patient requires a means
"RTN","IVMCQ",148,0)
 ; test or copay exemption test.  Call to DGMTR invokes EN^DGMTCOR as
"RTN","IVMCQ",149,0)
 ; well.
"RTN","IVMCQ",150,0)
 I IVML']"" D EN^DGMTR I +$G(DGREQF) S SUCCESS=1 G NEEDQ
"RTN","IVMCQ",151,0)
 ;
"RTN","IVMCQ",152,0)
 ; If current test is not incomplete and not required and is less than
"RTN","IVMCQ",153,0)
 ; 365 days old, presume a current test exists, no query necessary.
"RTN","IVMCQ",154,0)
 I ($P(IVML,U,4)'="I")&($P(IVML,U,4)'="R"),'$$OLD^DGMTU4($P(IVML,U,2)) D  G NEEDQ
"RTN","IVMCQ",155,0)
 .S ERROR="PATIENT HAS A CURRENT "_$S($P(IVML,U,5)=1:"MEANS",$P(IVML,U,5)=2:"COPAY EXEMPTION",1:"MEANS")_" TEST ON FILE"
"RTN","IVMCQ",156,0)
 .Q
"RTN","IVMCQ",157,0)
 ;
"RTN","IVMCQ",158,0)
 ; If the current test is NO LONGER REQUIRED or NO LONGER APPLICABLE no
"RTN","IVMCQ",159,0)
 ; query is necessary.
"RTN","IVMCQ",160,0)
 I ($P(IVML,U,4)="N")!($P(IVML,U,4)="L") D  G NEEDQ
"RTN","IVMCQ",161,0)
 .S ERROR="PATIENT'S "_$S($P(IVML,U,5)=1:"MEANS",$P(IVML,U,5)=2:"COPAY EXEMPTION",1:"MEANS")_" TEST STATUS "_$P(IVML,U,3)_"."
"RTN","IVMCQ",162,0)
 .Q
"RTN","IVMCQ",163,0)
 ;
"RTN","IVMCQ",164,0)
 ; If current test is not REQUIRED and not NO LONGER REQUIRED and it is 
"RTN","IVMCQ",165,0)
 ; older than 365 days, initiate query.
"RTN","IVMCQ",166,0)
 I ($P(IVML,U,4)'="R")&($P(IVML,U,4)'="N"),$$OLD^DGMTU4($P(IVML,U,2)) S SUCCESS=1 G NEEDQ
"RTN","IVMCQ",167,0)
 ;
"RTN","IVMCQ",168,0)
 ; If a query is pending, don't send another.
"RTN","IVMCQ",169,0)
 I $$OPEN^IVMCQ2(DFN) S ERROR="A QUERY IS ALREADY PENDING FOR THIS PATIENT" G NEEDQ
"RTN","IVMCQ",170,0)
 ;
"RTN","IVMCQ",171,0)
 ; if a query has already been sent today, don't send another.
"RTN","IVMCQ",172,0)
 I IVMSENT,$$SENT^IVMCQ2(DFN) S ERROR="A QUERY HAS BEEN SENT FOR PATIENT TODAY" G NEEDQ
"RTN","IVMCQ",173,0)
 ;
"RTN","IVMCQ",174,0)
 ; Has a bene travel cert been filed with a year?
"RTN","IVMCQ",175,0)
 S IVMBT=$O(^DGBT(392.2,"C",DFN,0))
"RTN","IVMCQ",176,0)
 I IVMBT,$$FMDIFF^XLFDT(DT,+$G(^DGBT(392.2,IVMBT,0))\1)>330 S SUCCESS=1 G NEEDQ
"RTN","IVMCQ",177,0)
 ;
"RTN","IVMCQ",178,0)
 S ERROR="A FINANCIAL QUERY IS NOT REQUIRED FOR THIS PATIENT"
"RTN","IVMCQ",179,0)
 ;
"RTN","IVMCQ",180,0)
NEEDQ Q SUCCESS
"VER")
8.0^22.0
"BLD",6583,6)
^102
**END**
**END**
