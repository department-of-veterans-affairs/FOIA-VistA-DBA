KIDS Distribution saved on Feb 04, 2004@10:13:23
OR*3*187V15 2/4/04 1005MT
**KIDS**:OR*3.0*187^

**INSTALL NAME**
OR*3.0*187
"BLD",16118,0)
OR*3.0*187^ORDER ENTRY/RESULTS REPORTING^0^3040204^y
"BLD",16118,4,0)
^9.64PA^100^1
"BLD",16118,4,100,0)
100
"BLD",16118,4,100,2,0)
^9.641^100^1
"BLD",16118,4,100,2,100,0)
ORDER  (File-top level)
"BLD",16118,4,100,2,100,1,0)
^9.6411^^
"BLD",16118,4,100,222)
y^n^p^^^^n^^n
"BLD",16118,4,100,224)

"BLD",16118,4,"APDD",100,100)

"BLD",16118,4,"B",100,100)

"BLD",16118,"INI")
PRE^ORY187
"BLD",16118,"INID")
^n^n
"BLD",16118,"INIT")
POST^ORY187
"BLD",16118,"KRN",0)
^9.67PA^8989.52^19
"BLD",16118,"KRN",.4,0)
.4
"BLD",16118,"KRN",.401,0)
.401
"BLD",16118,"KRN",.402,0)
.402
"BLD",16118,"KRN",.403,0)
.403
"BLD",16118,"KRN",.5,0)
.5
"BLD",16118,"KRN",.84,0)
.84
"BLD",16118,"KRN",3.6,0)
3.6
"BLD",16118,"KRN",3.8,0)
3.8
"BLD",16118,"KRN",9.2,0)
9.2
"BLD",16118,"KRN",9.8,0)
9.8
"BLD",16118,"KRN",9.8,"NM",0)
^9.68A^32^30
"BLD",16118,"KRN",9.8,"NM",1,0)
ORIMO^^0^B454651
"BLD",16118,"KRN",9.8,"NM",2,0)
ORWDX^^0^B73339230
"BLD",16118,"KRN",9.8,"NM",3,0)
ORCSAVE^^0^B58749880
"BLD",16118,"KRN",9.8,"NM",5,0)
ORWDXR^^0^B31935130
"BLD",16118,"KRN",9.8,"NM",6,0)
ORM^^0^B17667106
"BLD",16118,"KRN",9.8,"NM",7,0)
ORMBLD^^0^B35919203
"BLD",16118,"KRN",9.8,"NM",8,0)
ORWDPS4^^0^B15419305
"BLD",16118,"KRN",9.8,"NM",9,0)
ORWDXM2^^0^B60409623
"BLD",16118,"KRN",9.8,"NM",10,0)
ORWOR^^0^B32817132
"BLD",16118,"KRN",9.8,"NM",11,0)
ORWPCE1^^0^B61726959
"BLD",16118,"KRN",9.8,"NM",13,0)
ORWDX1^^0^B4574854
"BLD",16118,"KRN",9.8,"NM",14,0)
ORWDFH^^0^B32858711
"BLD",16118,"KRN",9.8,"NM",15,0)
ORCSAVE1^^0^B30430470
"BLD",16118,"KRN",9.8,"NM",16,0)
ORWU^^0^B58767029
"BLD",16118,"KRN",9.8,"NM",17,0)
ORWU1^^0^B26936719
"BLD",16118,"KRN",9.8,"NM",18,0)
ORCACT01^^0^B71478249
"BLD",16118,"KRN",9.8,"NM",19,0)
ORWDXR01^^0^B7675311
"BLD",16118,"KRN",9.8,"NM",20,0)
ORQPTQ2^^0^B40973300
"BLD",16118,"KRN",9.8,"NM",21,0)
ORWTPN^^0^B46513383
"BLD",16118,"KRN",9.8,"NM",22,0)
ORCSEND1^^0^B69341728
"BLD",16118,"KRN",9.8,"NM",23,0)
ORWPT^^0^B56396501
"BLD",16118,"KRN",9.8,"NM",24,0)
ORQPTQ5^^0^B61497889
"BLD",16118,"KRN",9.8,"NM",25,0)
ORQPTQ6^^0^B43002726
"BLD",16118,"KRN",9.8,"NM",26,0)
ORWDXM1^^0^B68113891
"BLD",16118,"KRN",9.8,"NM",27,0)
ORWDPS3^^0^B18465447
"BLD",16118,"KRN",9.8,"NM",28,0)
ORWDXM3^^0^B33303372
"BLD",16118,"KRN",9.8,"NM",29,0)
ORQQPX^^0^B57352754
"BLD",16118,"KRN",9.8,"NM",30,0)
ORQQPXRM^^0^B9706760
"BLD",16118,"KRN",9.8,"NM",31,0)
ORPRF^^0^B5926773
"BLD",16118,"KRN",9.8,"NM",32,0)
ORWDXA^^0^B74718319
"BLD",16118,"KRN",9.8,"NM","B","ORCACT01",18)

"BLD",16118,"KRN",9.8,"NM","B","ORCSAVE",3)

"BLD",16118,"KRN",9.8,"NM","B","ORCSAVE1",15)

"BLD",16118,"KRN",9.8,"NM","B","ORCSEND1",22)

"BLD",16118,"KRN",9.8,"NM","B","ORIMO",1)

"BLD",16118,"KRN",9.8,"NM","B","ORM",6)

"BLD",16118,"KRN",9.8,"NM","B","ORMBLD",7)

"BLD",16118,"KRN",9.8,"NM","B","ORPRF",31)

"BLD",16118,"KRN",9.8,"NM","B","ORQPTQ2",20)

"BLD",16118,"KRN",9.8,"NM","B","ORQPTQ5",24)

"BLD",16118,"KRN",9.8,"NM","B","ORQPTQ6",25)

"BLD",16118,"KRN",9.8,"NM","B","ORQQPX",29)

"BLD",16118,"KRN",9.8,"NM","B","ORQQPXRM",30)

"BLD",16118,"KRN",9.8,"NM","B","ORWDFH",14)

"BLD",16118,"KRN",9.8,"NM","B","ORWDPS3",27)

"BLD",16118,"KRN",9.8,"NM","B","ORWDPS4",8)

"BLD",16118,"KRN",9.8,"NM","B","ORWDX",2)

"BLD",16118,"KRN",9.8,"NM","B","ORWDX1",13)

"BLD",16118,"KRN",9.8,"NM","B","ORWDXA",32)

"BLD",16118,"KRN",9.8,"NM","B","ORWDXM1",26)

"BLD",16118,"KRN",9.8,"NM","B","ORWDXM2",9)

"BLD",16118,"KRN",9.8,"NM","B","ORWDXM3",28)

"BLD",16118,"KRN",9.8,"NM","B","ORWDXR",5)

"BLD",16118,"KRN",9.8,"NM","B","ORWDXR01",19)

"BLD",16118,"KRN",9.8,"NM","B","ORWOR",10)

"BLD",16118,"KRN",9.8,"NM","B","ORWPCE1",11)

"BLD",16118,"KRN",9.8,"NM","B","ORWPT",23)

"BLD",16118,"KRN",9.8,"NM","B","ORWTPN",21)

"BLD",16118,"KRN",9.8,"NM","B","ORWU",16)

"BLD",16118,"KRN",9.8,"NM","B","ORWU1",17)

"BLD",16118,"KRN",19,0)
19
"BLD",16118,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",16118,"KRN",19,"NM",1,0)
OR CPRS GUI CHART^^0
"BLD",16118,"KRN",19,"NM","B","OR CPRS GUI CHART",1)

"BLD",16118,"KRN",19.1,0)
19.1
"BLD",16118,"KRN",101,0)
101
"BLD",16118,"KRN",409.61,0)
409.61
"BLD",16118,"KRN",771,0)
771
"BLD",16118,"KRN",870,0)
870
"BLD",16118,"KRN",8989.51,0)
8989.51
"BLD",16118,"KRN",8989.52,0)
8989.52
"BLD",16118,"KRN",8994,0)
8994
"BLD",16118,"KRN",8994,"NM",0)
^9.68A^16^16
"BLD",16118,"KRN",8994,"NM",1,0)
ORIMO IMOLOC^^0
"BLD",16118,"KRN",8994,"NM",2,0)
ORIMO IMOOD^^0
"BLD",16118,"KRN",8994,"NM",3,0)
ORWDPS4 IPOD4OP^^0
"BLD",16118,"KRN",8994,"NM",4,0)
ORWDPS4 UPDTDG^^0
"BLD",16118,"KRN",8994,"NM",5,0)
ORWDX SAVE^^0
"BLD",16118,"KRN",8994,"NM",6,0)
ORWDXR RENEW^^0
"BLD",16118,"KRN",8994,"NM",7,0)
ORWOR ACTION TEXT^^0
"BLD",16118,"KRN",8994,"NM",8,0)
ORQQPXRM GET WH REPORT TEXT^^0
"BLD",16118,"KRN",8994,"NM",9,0)
ORQQPXRM GEC DIALOG^^0
"BLD",16118,"KRN",8994,"NM",10,0)
ORWDXR01 CANCHG^^0
"BLD",16118,"KRN",8994,"NM",11,0)
ORWDXR01 SAVCHG^^0
"BLD",16118,"KRN",8994,"NM",12,0)
ORQQPXRM CHECK REM VERSION^^0
"BLD",16118,"KRN",8994,"NM",13,0)
ORQQPXRM GEC FINISHED?^^0
"BLD",16118,"KRN",8994,"NM",14,0)
ORQQPXRM GEC STATUS PROMPT^^0
"BLD",16118,"KRN",8994,"NM",15,0)
ORWDXM3 ISUDQO^^0
"BLD",16118,"KRN",8994,"NM",16,0)
ORWDXM1 BLDQRSP^^0
"BLD",16118,"KRN",8994,"NM","B","ORIMO IMOLOC",1)

"BLD",16118,"KRN",8994,"NM","B","ORIMO IMOOD",2)

"BLD",16118,"KRN",8994,"NM","B","ORQQPXRM CHECK REM VERSION",12)

"BLD",16118,"KRN",8994,"NM","B","ORQQPXRM GEC DIALOG",9)

"BLD",16118,"KRN",8994,"NM","B","ORQQPXRM GEC FINISHED?",13)

"BLD",16118,"KRN",8994,"NM","B","ORQQPXRM GEC STATUS PROMPT",14)

"BLD",16118,"KRN",8994,"NM","B","ORQQPXRM GET WH REPORT TEXT",8)

"BLD",16118,"KRN",8994,"NM","B","ORWDPS4 IPOD4OP",3)

"BLD",16118,"KRN",8994,"NM","B","ORWDPS4 UPDTDG",4)

"BLD",16118,"KRN",8994,"NM","B","ORWDX SAVE",5)

"BLD",16118,"KRN",8994,"NM","B","ORWDXM1 BLDQRSP",16)

"BLD",16118,"KRN",8994,"NM","B","ORWDXM3 ISUDQO",15)

"BLD",16118,"KRN",8994,"NM","B","ORWDXR RENEW",6)

"BLD",16118,"KRN",8994,"NM","B","ORWDXR01 CANCHG",10)

"BLD",16118,"KRN",8994,"NM","B","ORWDXR01 SAVCHG",11)

"BLD",16118,"KRN",8994,"NM","B","ORWOR ACTION TEXT",7)

"BLD",16118,"KRN","B",.4,.4)

"BLD",16118,"KRN","B",.401,.401)

"BLD",16118,"KRN","B",.402,.402)

"BLD",16118,"KRN","B",.403,.403)

"BLD",16118,"KRN","B",.5,.5)

"BLD",16118,"KRN","B",.84,.84)

"BLD",16118,"KRN","B",3.6,3.6)

"BLD",16118,"KRN","B",3.8,3.8)

"BLD",16118,"KRN","B",9.2,9.2)

"BLD",16118,"KRN","B",9.8,9.8)

"BLD",16118,"KRN","B",19,19)

"BLD",16118,"KRN","B",19.1,19.1)

"BLD",16118,"KRN","B",101,101)

"BLD",16118,"KRN","B",409.61,409.61)

"BLD",16118,"KRN","B",771,771)

"BLD",16118,"KRN","B",870,870)

"BLD",16118,"KRN","B",8989.51,8989.51)

"BLD",16118,"KRN","B",8989.52,8989.52)

"BLD",16118,"KRN","B",8994,8994)

"BLD",16118,"QUES",0)
^9.62^^
"BLD",16118,"REQB",0)
^9.611^5^2
"BLD",16118,"REQB",4,0)
SD*5.3*316^2
"BLD",16118,"REQB",5,0)
OR*3.0*206^2
"BLD",16118,"REQB","B","OR*3.0*206",5)

"BLD",16118,"REQB","B","SD*5.3*316",4)

"FIA",100)
ORDER
"FIA",100,0)
^OR(100,
"FIA",100,0,0)
100I
"FIA",100,0,1)
y^n^f^^^^n^^n
"FIA",100,0,10)

"FIA",100,0,11)

"FIA",100,0,"RLRO")

"FIA",100,0,"VR")
3.0^OR
"FIA",100,100)
0
"FIA",100,100.001)
0
"FIA",100,100.002)
0
"FIA",100,100.008)
0
"FIA",100,100.0081)
0
"FIA",100,100.0082)
0
"FIA",100,100.0085)
0
"FIA",100,100.045)
0
"FIA",100,100.0451)
0
"FIA",100,100.09)
0
"INI")
PRE^ORY187
"INIT")
POST^ORY187
"IX",100,100,"AEVNT",0)
100^AEVNT^Orders delayed for release until Event occurs^R^^R^IR^I^100^^^^^S
"IX",100,100,"AEVNT",1)
S ^OR(100,"AEVNT",X(1),X(2),DA)=""
"IX",100,100,"AEVNT",2)
K ^OR(100,"AEVNT",X(1),X(2),DA)
"IX",100,100,"AEVNT",2.5)
K ^OR(100,"AEVNT")
"IX",100,100,"AEVNT",11.1,0)
^.114IA^2^2
"IX",100,100,"AEVNT",11.1,1,0)
1^F^100^.02^^1^F
"IX",100,100,"AEVNT",11.1,1,3)

"IX",100,100,"AEVNT",11.1,2,0)
2^F^100^15^^2^F
"IX",100,100,"AEVNT",11.1,2,3)

"KRN",19,10082,-1)
0^1
"KRN",19,10082,0)
OR CPRS GUI CHART^CPRSChart version 1.0.23.15^^B^^^^^^^^
"KRN",19,10082,1,0)
^19.06^2^2^3040204^^^^
"KRN",19,10082,1,1,0)
This option is required by the Kernel Broker to give access to the
"KRN",19,10082,1,2,0)
RPCs used by the CPRS GUI (CPRSChart.EXE).
"KRN",19,10082,99.1)
59556,39476
"KRN",19,10082,"RPC",0)
^19.05P^1901^1901
"KRN",19,10082,"RPC",1,0)
GMRC LIST CONSULT REQUESTS
"KRN",19,10082,"RPC",218,0)
XWB GET VARIABLE VALUE
"KRN",19,10082,"RPC",219,0)
TIU AUTHORIZATION
"KRN",19,10082,"RPC",220,0)
TIU CAN CHANGE COSIGNER?
"KRN",19,10082,"RPC",221,0)
TIU CREATE ADDENDUM RECORD
"KRN",19,10082,"RPC",222,0)
TIU CREATE RECORD
"KRN",19,10082,"RPC",223,0)
TIU DELETE RECORD
"KRN",19,10082,"RPC",224,0)
TIU DETAILED DISPLAY
"KRN",19,10082,"RPC",225,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,10082,"RPC",226,0)
TIU GET ADDITIONAL SIGNERS
"KRN",19,10082,"RPC",227,0)
TIU GET ALERT INFO
"KRN",19,10082,"RPC",228,0)
TIU GET DOCUMENT PARAMETERS
"KRN",19,10082,"RPC",229,0)
TIU GET DS TITLES
"KRN",19,10082,"RPC",230,0)
TIU GET DS URGENCIES
"KRN",19,10082,"RPC",231,0)
TIU GET PERSONAL PREFERENCES
"KRN",19,10082,"RPC",232,0)
TIU GET PN TITLES
"KRN",19,10082,"RPC",233,0)
TIU GET RECORD TEXT
"KRN",19,10082,"RPC",234,0)
TIU IDENTIFY CONSULTS CLASS
"KRN",19,10082,"RPC",235,0)
TIU IS THIS A CONSULT?
"KRN",19,10082,"RPC",236,0)
TIU JUSTIFY DELETE?
"KRN",19,10082,"RPC",237,0)
TIU LOAD BOILERPLATE TEXT
"KRN",19,10082,"RPC",238,0)
TIU LOAD RECORD FOR EDIT
"KRN",19,10082,"RPC",239,0)
TIU LOCK RECORD
"KRN",19,10082,"RPC",240,0)
TIU LONG LIST CONSULT TITLES
"KRN",19,10082,"RPC",241,0)
TIU LONG LIST OF TITLES
"KRN",19,10082,"RPC",242,0)
TIU NOTES
"KRN",19,10082,"RPC",243,0)
TIU NOTES 16 BIT
"KRN",19,10082,"RPC",244,0)
TIU NOTES BY VISIT
"KRN",19,10082,"RPC",245,0)
TIU PERSONAL TITLE LIST
"KRN",19,10082,"RPC",246,0)
TIU PRINT RECORD
"KRN",19,10082,"RPC",247,0)
TIU REQUIRES COSIGNATURE
"KRN",19,10082,"RPC",248,0)
TIU SIGN RECORD
"KRN",19,10082,"RPC",249,0)
TIU SUMMARIES
"KRN",19,10082,"RPC",250,0)
TIU SUMMARIES BY VISIT
"KRN",19,10082,"RPC",251,0)
TIU UNLOCK RECORD
"KRN",19,10082,"RPC",252,0)
TIU UPDATE ADDITIONAL SIGNERS
"KRN",19,10082,"RPC",253,0)
TIU UPDATE RECORD
"KRN",19,10082,"RPC",254,0)
TIU WHICH SIGNATURE ACTION
"KRN",19,10082,"RPC",1032,0)
ORB DELETE ALERT
"KRN",19,10082,"RPC",1033,0)
ORB FOLLOW-UP ARRAY
"KRN",19,10082,"RPC",1034,0)
ORB FOLLOW-UP STRING
"KRN",19,10082,"RPC",1035,0)
ORB FOLLOW-UP TYPE
"KRN",19,10082,"RPC",1036,0)
ORB SORT METHOD
"KRN",19,10082,"RPC",1037,0)
ORK TRIGGER
"KRN",19,10082,"RPC",1038,0)
ORQ NULL LIST
"KRN",19,10082,"RPC",1039,0)
ORQOR DETAIL
"KRN",19,10082,"RPC",1040,0)
TIU TEMPLATE CHECK BOILERPLATE
"KRN",19,10082,"RPC",1041,0)
TIU TEMPLATE CREATE/MODIFY
"KRN",19,10082,"RPC",1042,0)
TIU TEMPLATE DELETE
"KRN",19,10082,"RPC",1045,0)
TIU TEMPLATE GETPROOT
"KRN",19,10082,"RPC",1049,0)
TIU TEMPLATE LISTOWNR
"KRN",19,10082,"RPC",1050,0)
TIU TEMPLATE SET ITEMS
"KRN",19,10082,"RPC",1051,0)
TIU GET LIST OF OBJECTS
"KRN",19,10082,"RPC",1052,0)
ORQOR LIST
"KRN",19,10082,"RPC",1053,0)
ORQORB SORT
"KRN",19,10082,"RPC",1054,0)
ORQPT ATTENDING/PRIMARY
"KRN",19,10082,"RPC",1055,0)
ORQPT CLINIC PATIENTS
"KRN",19,10082,"RPC",1056,0)
ORQPT CLINICS
"KRN",19,10082,"RPC",1057,0)
ORQPT DEFAULT LIST SOURCE
"KRN",19,10082,"RPC",1058,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,10082,"RPC",1059,0)
ORQPT PATIENT TEAM PROVIDERS
"KRN",19,10082,"RPC",1060,0)
ORQPT PROVIDER PATIENTS
"KRN",19,10082,"RPC",1061,0)
ORQPT PROVIDERS
"KRN",19,10082,"RPC",1062,0)
ORQPT SPECIALTIES
"KRN",19,10082,"RPC",1063,0)
ORQPT SPECIALTY PATIENTS
"KRN",19,10082,"RPC",1064,0)
ORQPT TEAM PATIENTS
"KRN",19,10082,"RPC",1065,0)
ORQPT TEAMS
"KRN",19,10082,"RPC",1066,0)
ORQPT WARD PATIENTS
"KRN",19,10082,"RPC",1067,0)
ORQPT WARDRMBED
"KRN",19,10082,"RPC",1068,0)
ORQPT WARDS
"KRN",19,10082,"RPC",1069,0)
ORQQAL DETAIL
"KRN",19,10082,"RPC",1070,0)
ORQQAL LIST
"KRN",19,10082,"RPC",1071,0)
ORQQAL LIST REPORT
"KRN",19,10082,"RPC",1072,0)
ORQQCN ADDCMT
"KRN",19,10082,"RPC",1073,0)
ORQQCN ADMIN COMPLETE
"KRN",19,10082,"RPC",1074,0)
ORQQCN DETAIL
"KRN",19,10082,"RPC",1075,0)
ORQQCN DISCONTINUE
"KRN",19,10082,"RPC",1076,0)
ORQQCN FIND CONSULT
"KRN",19,10082,"RPC",1077,0)
ORQQCN FORWARD
"KRN",19,10082,"RPC",1078,0)
ORQQCN GET CONSULT
"KRN",19,10082,"RPC",1079,0)
ORQQCN GET ORDER NUMBER
"KRN",19,10082,"RPC",1080,0)
ORQQCN GET PROC SVCS
"KRN",19,10082,"RPC",1081,0)
ORQQCN LIST
"KRN",19,10082,"RPC",1082,0)
ORQQCN LOAD FOR EDIT
"KRN",19,10082,"RPC",1083,0)
ORQQCN MED RESULTS
"KRN",19,10082,"RPC",1084,0)
ORQQCN PRINT SF513
"KRN",19,10082,"RPC",1085,0)
ORQQCN RECEIVE
"KRN",19,10082,"RPC",1086,0)
ORQQCN RESUBMIT
"KRN",19,10082,"RPC",1087,0)
ORQQCN SET ACT MENUS
"KRN",19,10082,"RPC",1088,0)
ORQQCN SHOW SF513
"KRN",19,10082,"RPC",1089,0)
ORQQCN SIGFIND
"KRN",19,10082,"RPC",1090,0)
ORQQCN STATUS
"KRN",19,10082,"RPC",1091,0)
ORQQCN SVCLIST
"KRN",19,10082,"RPC",1092,0)
ORQQCN SVCTREE
"KRN",19,10082,"RPC",1093,0)
ORQQCN URGENCIES
"KRN",19,10082,"RPC",1094,0)
ORQQCN2 GET CONTEXT
"KRN",19,10082,"RPC",1095,0)
ORQQCN2 SAVE CONTEXT
"KRN",19,10082,"RPC",1096,0)
ORQQLR DETAIL
"KRN",19,10082,"RPC",1097,0)
ORQQLR SEARCH RANGE INPT
"KRN",19,10082,"RPC",1098,0)
ORQQLR SEARCH RANGE OUTPT
"KRN",19,10082,"RPC",1099,0)
ORQQPL ADD SAVE
"KRN",19,10082,"RPC",1100,0)
ORQQPL AUDIT HIST
"KRN",19,10082,"RPC",1101,0)
ORQQPL CHECK DUP
"KRN",19,10082,"RPC",1102,0)
ORQQPL CLIN FILTER LIST
"KRN",19,10082,"RPC",1103,0)
ORQQPL CLIN SRCH
"KRN",19,10082,"RPC",1104,0)
ORQQPL DELETE
"KRN",19,10082,"RPC",1105,0)
ORQQPL DETAIL
"KRN",19,10082,"RPC",1106,0)
ORQQPL EDIT LOAD
"KRN",19,10082,"RPC",1107,0)
ORQQPL EDIT SAVE
"KRN",19,10082,"RPC",1108,0)
ORQQPL INACTIVATE
"KRN",19,10082,"RPC",1109,0)
ORQQPL INIT PT
"KRN",19,10082,"RPC",1110,0)
ORQQPL INIT USER
"KRN",19,10082,"RPC",1111,0)
ORQQPL LIST
"KRN",19,10082,"RPC",1112,0)
ORQQPL PROB COMMENTS
"KRN",19,10082,"RPC",1113,0)
ORQQPL PROBLEM LEX SEARCH
"KRN",19,10082,"RPC",1114,0)
ORQQPL PROBLEM LIST
"KRN",19,10082,"RPC",1115,0)
ORQQPL PROV FILTER LIST
"KRN",19,10082,"RPC",1116,0)
ORQQPL PROVIDER LIST
"KRN",19,10082,"RPC",1117,0)
ORQQPL REPLACE
"KRN",19,10082,"RPC",1118,0)
ORQQPL SAVEVIEW
"KRN",19,10082,"RPC",1119,0)
ORQQPL SERV FILTER LIST
"KRN",19,10082,"RPC",1120,0)
ORQQPL SRVC SRCH
"KRN",19,10082,"RPC",1121,0)
ORQQPL UPDATE
"KRN",19,10082,"RPC",1122,0)
ORQQPL USER PROB CATS
"KRN",19,10082,"RPC",1123,0)
ORQQPL USER PROB LIST
"KRN",19,10082,"RPC",1124,0)
ORQQPL VERIFY
"KRN",19,10082,"RPC",1125,0)
ORQQPP LIST
"KRN",19,10082,"RPC",1126,0)
ORQQPS DETAIL
"KRN",19,10082,"RPC",1127,0)
ORQQPS LIST
"KRN",19,10082,"RPC",1133,0)
ORQQPX REMINDER DETAIL
"KRN",19,10082,"RPC",1135,0)
ORQQPX REMINDERS LIST
"KRN",19,10082,"RPC",1136,0)
ORQQVI NOTEVIT
"KRN",19,10082,"RPC",1137,0)
ORQQVI VITALS
"KRN",19,10082,"RPC",1138,0)
ORQQVI VITALS FOR DATE RANGE
"KRN",19,10082,"RPC",1139,0)
ORQQVI1 DETAIL
"KRN",19,10082,"RPC",1140,0)
ORQQVI1 GRID
"KRN",19,10082,"RPC",1141,0)
ORQQVI2 VITALS HELP
"KRN",19,10082,"RPC",1142,0)
ORQQVI2 VITALS RATE CHECK
"KRN",19,10082,"RPC",1144,0)
ORQQVI2 VITALS VAL & STORE
"KRN",19,10082,"RPC",1145,0)
ORQQVI2 VITALS VALIDATE
"KRN",19,10082,"RPC",1146,0)
ORQQVI2 VITALS VALIDATE TYPE
"KRN",19,10082,"RPC",1147,0)
ORQQVS DETAIL NOTES
"KRN",19,10082,"RPC",1148,0)
ORQQVS DETAIL SUMMARY
"KRN",19,10082,"RPC",1149,0)
ORQQVS VISITS/APPTS
"KRN",19,10082,"RPC",1150,0)
ORQQXMB MAIL GROUPS
"KRN",19,10082,"RPC",1151,0)
ORQQXQA PATIENT
"KRN",19,10082,"RPC",1152,0)
ORQQXQA USER
"KRN",19,10082,"RPC",1153,0)
ORWCH LOADALL
"KRN",19,10082,"RPC",1154,0)
ORWCH LOADSIZ
"KRN",19,10082,"RPC",1155,0)
ORWCH SAVEALL
"KRN",19,10082,"RPC",1156,0)
ORWCH SAVESIZ
"KRN",19,10082,"RPC",1157,0)
ORWCS LIST OF CONSULT REPORTS
"KRN",19,10082,"RPC",1158,0)
ORWCS PRINT REPORT
"KRN",19,10082,"RPC",1159,0)
ORWCS REPORT TEXT
"KRN",19,10082,"RPC",1160,0)
ORWCV DTLVST
"KRN",19,10082,"RPC",1161,0)
ORWCV LAB
"KRN",19,10082,"RPC",1162,0)
ORWCV POLL
"KRN",19,10082,"RPC",1163,0)
ORWCV START
"KRN",19,10082,"RPC",1164,0)
ORWCV STOP
"KRN",19,10082,"RPC",1165,0)
ORWCV VST
"KRN",19,10082,"RPC",1166,0)
ORWD DEF
"KRN",19,10082,"RPC",1167,0)
ORWD DT
"KRN",19,10082,"RPC",1168,0)
ORWD FORMID
"KRN",19,10082,"RPC",1169,0)
ORWD GET4EDIT
"KRN",19,10082,"RPC",1170,0)
ORWD KEY
"KRN",19,10082,"RPC",1171,0)
ORWD OI
"KRN",19,10082,"RPC",1172,0)
ORWD PROVKEY
"KRN",19,10082,"RPC",1173,0)
ORWD SAVE
"KRN",19,10082,"RPC",1174,0)
ORWD SAVEACT
"KRN",19,10082,"RPC",1175,0)
ORWD SIGN
"KRN",19,10082,"RPC",1176,0)
ORWD VALIDACT
"KRN",19,10082,"RPC",1177,0)
ORWD1 PARAM
"KRN",19,10082,"RPC",1178,0)
ORWD1 PRINTGUI
"KRN",19,10082,"RPC",1179,0)
ORWD1 RVPRINT
"KRN",19,10082,"RPC",1180,0)
ORWD2 DEVINFO
"KRN",19,10082,"RPC",1181,0)
ORWD2 MANUAL
"KRN",19,10082,"RPC",1182,0)
ORWDAL32 ALLERGY MATCH
"KRN",19,10082,"RPC",1183,0)
ORWDAL32 DEF
"KRN",19,10082,"RPC",1184,0)
ORWDAL32 SYMPTOMS
"KRN",19,10082,"RPC",1185,0)
ORWDCN32 DEF
"KRN",19,10082,"RPC",1186,0)
ORWDCN32 ORDRMSG
"KRN",19,10082,"RPC",1187,0)
ORWDCN32 PROCEDURES
"KRN",19,10082,"RPC",1188,0)
ORWDCSLT DEF
"KRN",19,10082,"RPC",1189,0)
ORWDCSLT LOOK200
"KRN",19,10082,"RPC",1190,0)
ORWDFH ADDLATE
"KRN",19,10082,"RPC",1191,0)
ORWDFH ATTR
"KRN",19,10082,"RPC",1192,0)
ORWDFH CURISO
"KRN",19,10082,"RPC",1193,0)
ORWDFH DIETS
"KRN",19,10082,"RPC",1194,0)
ORWDFH FINDTYP
"KRN",19,10082,"RPC",1195,0)
ORWDFH ISOIEN
"KRN",19,10082,"RPC",1196,0)
ORWDFH ISOLIST
"KRN",19,10082,"RPC",1197,0)
ORWDFH PARAM
"KRN",19,10082,"RPC",1198,0)
ORWDFH QTY2CC
"KRN",19,10082,"RPC",1199,0)
ORWDFH TFPROD
"KRN",19,10082,"RPC",1200,0)
ORWDFH TXT
"KRN",19,10082,"RPC",1201,0)
ORWDGX LOAD
"KRN",19,10082,"RPC",1202,0)
ORWDGX VMDEF
"KRN",19,10082,"RPC",1203,0)
ORWDLR ABBSPEC
"KRN",19,10082,"RPC",1204,0)
ORWDLR ALLSAMP
"KRN",19,10082,"RPC",1205,0)
ORWDLR DEF
"KRN",19,10082,"RPC",1206,0)
ORWDLR LOAD
"KRN",19,10082,"RPC",1207,0)
ORWDLR OIPARAM
"KRN",19,10082,"RPC",1208,0)
ORWDLR STOP
"KRN",19,10082,"RPC",1209,0)
ORWDLR32 ABBSPEC
"KRN",19,10082,"RPC",1210,0)
ORWDLR32 ALLSAMP
"KRN",19,10082,"RPC",1211,0)
ORWDLR32 ALLSPEC
"KRN",19,10082,"RPC",1212,0)
ORWDLR32 DEF
"KRN",19,10082,"RPC",1213,0)
ORWDLR32 IC DEFAULT
"KRN",19,10082,"RPC",1214,0)
ORWDLR32 IC VALID
"KRN",19,10082,"RPC",1215,0)
ORWDLR32 IMMED COLLECT
"KRN",19,10082,"RPC",1216,0)
ORWDLR32 LAB COLL TIME
"KRN",19,10082,"RPC",1217,0)
ORWDLR32 LOAD
"KRN",19,10082,"RPC",1218,0)
ORWDLR32 MAXDAYS
"KRN",19,10082,"RPC",1219,0)
ORWDLR32 ONE SAMPLE
"KRN",19,10082,"RPC",1220,0)
ORWDLR32 ONE SPECIMEN
"KRN",19,10082,"RPC",1221,0)
ORWDLR32 STOP
"KRN",19,10082,"RPC",1222,0)
ORWDOR VMSLCT
"KRN",19,10082,"RPC",1227,0)
ORWDPS32 ALLROUTE
"KRN",19,10082,"RPC",1228,0)
ORWDPS32 AUTH
"KRN",19,10082,"RPC",1229,0)
ORWDPS32 DLGSLCT
"KRN",19,10082,"RPC",1230,0)
ORWDPS32 DOSES
"KRN",19,10082,"RPC",1231,0)
ORWDPS32 DRUGMSG
"KRN",19,10082,"RPC",1232,0)
ORWDPS32 FORMALT
"KRN",19,10082,"RPC",1233,0)
ORWDPS32 ISSPLY
"KRN",19,10082,"RPC",1234,0)
ORWDPS32 IVAMT
"KRN",19,10082,"RPC",1235,0)
ORWDPS32 MEDISIV
"KRN",19,10082,"RPC",1236,0)
ORWDPS32 OISLCT
"KRN",19,10082,"RPC",1237,0)
ORWDPS32 SCSTS
"KRN",19,10082,"RPC",1238,0)
ORWDPS32 VALQTY
"KRN",19,10082,"RPC",1239,0)
ORWDPS32 VALRATE
"KRN",19,10082,"RPC",1240,0)
ORWDPS32 VALSCH
"KRN",19,10082,"RPC",1241,0)
ORWDRA DEF
"KRN",19,10082,"RPC",1242,0)
ORWDRA32 APPROVAL
"KRN",19,10082,"RPC",1243,0)
ORWDRA32 DEF
"KRN",19,10082,"RPC",1244,0)
ORWDRA32 IMTYPSEL
"KRN",19,10082,"RPC",1245,0)
ORWDRA32 ISOLATN
"KRN",19,10082,"RPC",1246,0)
ORWDRA32 LOCTYPE
"KRN",19,10082,"RPC",1247,0)
ORWDRA32 PROCMSG
"KRN",19,10082,"RPC",1248,0)
ORWDRA32 RADSRC
"KRN",19,10082,"RPC",1249,0)
ORWDRA32 RAORDITM
"KRN",19,10082,"RPC",1250,0)
ORWDX AGAIN
"KRN",19,10082,"RPC",1251,0)
ORWDX DGRP
"KRN",19,10082,"RPC",1252,0)
ORWDX DISMSG
"KRN",19,10082,"RPC",1253,0)
ORWDX DLGDEF
"KRN",19,10082,"RPC",1254,0)
ORWDX DLGID
"KRN",19,10082,"RPC",1255,0)
ORWDX DLGQUIK
"KRN",19,10082,"RPC",1256,0)
ORWDX FORMID
"KRN",19,10082,"RPC",1257,0)
ORWDX LOADRSP
"KRN",19,10082,"RPC",1258,0)
ORWDX LOCK
"KRN",19,10082,"RPC",1259,0)
ORWDX MSG
"KRN",19,10082,"RPC",1260,0)
ORWDX ORDITM
"KRN",19,10082,"RPC",1261,0)
ORWDX SAVE
"KRN",19,10082,"RPC",1262,0)
ORWDX SEND
"KRN",19,10082,"RPC",1263,0)
ORWDX SENDP
"KRN",19,10082,"RPC",1264,0)
ORWDX UNLOCK
"KRN",19,10082,"RPC",1265,0)
ORWDX WRLST
"KRN",19,10082,"RPC",1266,0)
ORWDXA ALERT
"KRN",19,10082,"RPC",1267,0)
ORWDXA COMPLETE
"KRN",19,10082,"RPC",1268,0)
ORWDXA DC
"KRN",19,10082,"RPC",1269,0)
ORWDXA DCREASON
"KRN",19,10082,"RPC",1270,0)
ORWDXA DCREQIEN
"KRN",19,10082,"RPC",1271,0)
ORWDXA FLAG
"KRN",19,10082,"RPC",1272,0)
ORWDXA FLAGTXT
"KRN",19,10082,"RPC",1273,0)
ORWDXA HOLD
"KRN",19,10082,"RPC",1274,0)
ORWDXA UNFLAG
"KRN",19,10082,"RPC",1275,0)
ORWDXA UNHOLD
"KRN",19,10082,"RPC",1276,0)
ORWDXA VALID
"KRN",19,10082,"RPC",1277,0)
ORWDXA VERIFY
"KRN",19,10082,"RPC",1278,0)
ORWDXA WCGET
"KRN",19,10082,"RPC",1279,0)
ORWDXA WCPUT
"KRN",19,10082,"RPC",1280,0)
ORWDXC ACCEPT
"KRN",19,10082,"RPC",1281,0)
ORWDXC DELAY
"KRN",19,10082,"RPC",1282,0)
ORWDXC DELORD
"KRN",19,10082,"RPC",1283,0)
ORWDXC DISPLAY
"KRN",19,10082,"RPC",1284,0)
ORWDXC FILLID
"KRN",19,10082,"RPC",1285,0)
ORWDXC ON
"KRN",19,10082,"RPC",1286,0)
ORWDXC SAVECHK
"KRN",19,10082,"RPC",1287,0)
ORWDXC SESSION
"KRN",19,10082,"RPC",1288,0)
ORWDXM AUTOACK
"KRN",19,10082,"RPC",1289,0)
ORWDXM DLGNAME
"KRN",19,10082,"RPC",1290,0)
ORWDXM FORMID
"KRN",19,10082,"RPC",1291,0)
ORWDXM LOADSET
"KRN",19,10082,"RPC",1292,0)
ORWDXM MENU
"KRN",19,10082,"RPC",1293,0)
ORWDXM MSTYLE
"KRN",19,10082,"RPC",1294,0)
ORWDXM PROMPTS
"KRN",19,10082,"RPC",1295,0)
ORWDXM1 BLDQRSP
"KRN",19,10082,"RPC",1296,0)
ORWDXM2 CLRRCL
"KRN",19,10082,"RPC",1297,0)
ORWDXQ DLGNAME
"KRN",19,10082,"RPC",1298,0)
ORWDXQ DLGSAVE
"KRN",19,10082,"RPC",1299,0)
ORWDXQ GETQLST
"KRN",19,10082,"RPC",1300,0)
ORWDXQ GETQNAM
"KRN",19,10082,"RPC",1301,0)
ORWDXQ PUTQLST
"KRN",19,10082,"RPC",1302,0)
ORWDXQ PUTQNAM
"KRN",19,10082,"RPC",1303,0)
ORWDXR ISREL
"KRN",19,10082,"RPC",1304,0)
ORWDXR RENEW
"KRN",19,10082,"RPC",1305,0)
ORWDXR RNWFLDS
"KRN",19,10082,"RPC",1306,0)
ORWGEPT CLINRNG
"KRN",19,10082,"RPC",1307,0)
ORWLR CUMULATIVE REPORT
"KRN",19,10082,"RPC",1308,0)
ORWLR CUMULATIVE SECTION
"KRN",19,10082,"RPC",1309,0)
ORWLR REPORT LISTS
"KRN",19,10082,"RPC",1310,0)
ORWLRR ALLTESTS
"KRN",19,10082,"RPC",1311,0)
ORWLRR ATESTS
"KRN",19,10082,"RPC",1312,0)
ORWLRR ATG
"KRN",19,10082,"RPC",1313,0)
ORWLRR ATOMICS
"KRN",19,10082,"RPC",1314,0)
ORWLRR CHART
"KRN",19,10082,"RPC",1315,0)
ORWLRR CHEMTEST
"KRN",19,10082,"RPC",1316,0)
ORWLRR GRID
"KRN",19,10082,"RPC",1317,0)
ORWLRR INTERIM
"KRN",19,10082,"RPC",1318,0)
ORWLRR INTERIMG
"KRN",19,10082,"RPC",1319,0)
ORWLRR INTERIMS
"KRN",19,10082,"RPC",1320,0)
ORWLRR MICRO
"KRN",19,10082,"RPC",1321,0)
ORWLRR NEWOLD
"KRN",19,10082,"RPC",1322,0)
ORWLRR PARAM
"KRN",19,10082,"RPC",1323,0)
ORWLRR SPEC
"KRN",19,10082,"RPC",1324,0)
ORWLRR TG
"KRN",19,10082,"RPC",1325,0)
ORWLRR USERS
"KRN",19,10082,"RPC",1326,0)
ORWLRR UTGA
"KRN",19,10082,"RPC",1327,0)
ORWLRR UTGD
"KRN",19,10082,"RPC",1328,0)
ORWLRR UTGR
"KRN",19,10082,"RPC",1329,0)
ORWMC PATIENT PROCEDURES
"KRN",19,10082,"RPC",1330,0)
ORWOR RESULT
"KRN",19,10082,"RPC",1331,0)
ORWOR SHEETS
"KRN",19,10082,"RPC",1332,0)
ORWOR TSALL
"KRN",19,10082,"RPC",1333,0)
ORWORB AUTOUNFLAG ORDERS
"KRN",19,10082,"RPC",1334,0)
ORWORB FASTUSER
"KRN",19,10082,"RPC",1335,0)
ORWORB GET TIU ALERT INFO
"KRN",19,10082,"RPC",1336,0)
ORWORB GETDATA
"KRN",19,10082,"RPC",1337,0)
ORWORB KILL UNSIG ORDERS ALERT
"KRN",19,10082,"RPC",1339,0)
ORWORDG ALLTREE
"KRN",19,10082,"RPC",1340,0)
ORWORDG GRPSEQB
"KRN",19,10082,"RPC",1341,0)
ORWORDG IEN
"KRN",19,10082,"RPC",1342,0)
ORWORDG MAPSEQ
"KRN",19,10082,"RPC",1343,0)
ORWORDG REVSTS
"KRN",19,10082,"RPC",1344,0)
ORWORR AGET
"KRN",19,10082,"RPC",1345,0)
ORWORR GET
"KRN",19,10082,"RPC",1346,0)
ORWORR GET4LST
"KRN",19,10082,"RPC",1347,0)
ORWORR GETBYIFN
"KRN",19,10082,"RPC",1348,0)
ORWORR GETTXT
"KRN",19,10082,"RPC",1349,0)
ORWPCE ACTIVE PROV
"KRN",19,10082,"RPC",1350,0)
ORWPCE ACTPROB
"KRN",19,10082,"RPC",1351,0)
ORWPCE CPTREQD
"KRN",19,10082,"RPC",1352,0)
ORWPCE DELETE
"KRN",19,10082,"RPC",1353,0)
ORWPCE DIAG
"KRN",19,10082,"RPC",1354,0)
ORWPCE GET EDUCATION TOPICS
"KRN",19,10082,"RPC",1355,0)
ORWPCE GET EXAM TYPE
"KRN",19,10082,"RPC",1356,0)
ORWPCE GET HEALTH FACTORS TY
"KRN",19,10082,"RPC",1357,0)
ORWPCE GET IMMUNIZATION TYPE
"KRN",19,10082,"RPC",1358,0)
ORWPCE GET SET OF CODES
"KRN",19,10082,"RPC",1359,0)
ORWPCE GET SKIN TEST TYPE
"KRN",19,10082,"RPC",1360,0)
ORWPCE GET TREATMENT TYPE
"KRN",19,10082,"RPC",1361,0)
ORWPCE HF
"KRN",19,10082,"RPC",1362,0)
ORWPCE IMM
"KRN",19,10082,"RPC",1363,0)
ORWPCE LEX
"KRN",19,10082,"RPC",1364,0)
ORWPCE LEXCODE
"KRN",19,10082,"RPC",1366,0)
ORWPCE NOTEVSTR
"KRN",19,10082,"RPC",1367,0)
ORWPCE PCE4NOTE
"KRN",19,10082,"RPC",1368,0)
ORWPCE PED
"KRN",19,10082,"RPC",1369,0)
ORWPCE PROC
"KRN",19,10082,"RPC",1370,0)
ORWPCE SAVE
"KRN",19,10082,"RPC",1371,0)
ORWPCE SCDIS
"KRN",19,10082,"RPC",1372,0)
ORWPCE SCSEL
"KRN",19,10082,"RPC",1373,0)
ORWPCE SK
"KRN",19,10082,"RPC",1374,0)
ORWPCE TRT
"KRN",19,10082,"RPC",1375,0)
ORWPCE VISIT
"KRN",19,10082,"RPC",1376,0)
ORWPCE XAM
"KRN",19,10082,"RPC",1377,0)
ORWPS ACTIVE
"KRN",19,10082,"RPC",1378,0)
ORWPS COVER
"KRN",19,10082,"RPC",1379,0)
ORWPS DETAIL
"KRN",19,10082,"RPC",1380,0)
ORWPS1 NEWDLG
"KRN",19,10082,"RPC",1381,0)
ORWPS1 PICKUP
"KRN",19,10082,"RPC",1382,0)
ORWPS1 REFILL
"KRN",19,10082,"RPC",1383,0)
ORWPT ADMITLST
"KRN",19,10082,"RPC",1384,0)
ORWPT APPTLST
"KRN",19,10082,"RPC",1385,0)
ORWPT CLINRNG
"KRN",19,10082,"RPC",1386,0)
ORWPT CWAD
"KRN",19,10082,"RPC",1387,0)
ORWPT DFLTSRC
"KRN",19,10082,"RPC",1388,0)
ORWPT DIEDON
"KRN",19,10082,"RPC",1389,0)
ORWPT DISCHARGE
"KRN",19,10082,"RPC",1390,0)
ORWPT ENCTITL
"KRN",19,10082,"RPC",1391,0)
ORWPT FULLSSN
"KRN",19,10082,"RPC",1392,0)
ORWPT ID INFO
"KRN",19,10082,"RPC",1393,0)
ORWPT LAST5
"KRN",19,10082,"RPC",1394,0)
ORWPT LIST ALL
"KRN",19,10082,"RPC",1395,0)
ORWPT PTINQ
"KRN",19,10082,"RPC",1396,0)
ORWPT SAVDFLT
"KRN",19,10082,"RPC",1397,0)
ORWPT SELCHK
"KRN",19,10082,"RPC",1398,0)
ORWPT SELECT
"KRN",19,10082,"RPC",1399,0)
ORWPT SHARE
"KRN",19,10082,"RPC",1400,0)
ORWPT TOP
"KRN",19,10082,"RPC",1401,0)
ORWPT1 PCDETAIL
"KRN",19,10082,"RPC",1402,0)
ORWPT1 PRCARE
"KRN",19,10082,"RPC",1403,0)
ORWPT16 ADMITLST
"KRN",19,10082,"RPC",1404,0)
ORWPT16 APPTLST
"KRN",19,10082,"RPC",1405,0)
ORWPT16 DEMOG
"KRN",19,10082,"RPC",1406,0)
ORWPT16 GETVSIT
"KRN",19,10082,"RPC",1407,0)
ORWPT16 ID INFO
"KRN",19,10082,"RPC",1408,0)
ORWPT16 LIST ALL
"KRN",19,10082,"RPC",1409,0)
ORWPT16 LOOKUP
"KRN",19,10082,"RPC",1410,0)
ORWPT16 PSCNVT
"KRN",19,10082,"RPC",1411,0)
ORWRA DEFAULT EXAM SETTINGS
"KRN",19,10082,"RPC",1412,0)
ORWRA IMAGING EXAMS
"KRN",19,10082,"RPC",1413,0)
ORWRA PRINT REPORT
"KRN",19,10082,"RPC",1414,0)
ORWRA REPORT TEXT
"KRN",19,10082,"RPC",1415,0)
ORWRP PRINT LAB REPORTS
"KRN",19,10082,"RPC",1416,0)
ORWRP PRINT REPORT
"KRN",19,10082,"RPC",1417,0)
ORWRP REPORT LISTS
"KRN",19,10082,"RPC",1418,0)
ORWRP REPORT TEXT
"KRN",19,10082,"RPC",1419,0)
ORWRP1 LISTNUTR
"KRN",19,10082,"RPC",1420,0)
ORWRP16 REPORT LISTS
"KRN",19,10082,"RPC",1421,0)
ORWRP16 REPORT TEXT
"KRN",19,10082,"RPC",1422,0)
ORWTIU GET DCSUMM CONTEXT
"KRN",19,10082,"RPC",1423,0)
ORWTIU GET TIU CONTEXT
"KRN",19,10082,"RPC",1424,0)
ORWTIU SAVE DCSUMM CONTEXT
"KRN",19,10082,"RPC",1425,0)
ORWTIU SAVE TIU CONTEXT
"KRN",19,10082,"RPC",1426,0)
ORWU CLINLOC
"KRN",19,10082,"RPC",1427,0)
ORWU DEVICE
"KRN",19,10082,"RPC",1428,0)
ORWU DT
"KRN",19,10082,"RPC",1429,0)
ORWU EXTNAME
"KRN",19,10082,"RPC",1430,0)
ORWU GBLREF
"KRN",19,10082,"RPC",1431,0)
ORWU GENERIC
"KRN",19,10082,"RPC",1432,0)
ORWU HASKEY
"KRN",19,10082,"RPC",1433,0)
ORWU HOSPLOC
"KRN",19,10082,"RPC",1434,0)
ORWU INPLOC
"KRN",19,10082,"RPC",1435,0)
ORWU NEWPERS
"KRN",19,10082,"RPC",1436,0)
ORWU NPHASKEY
"KRN",19,10082,"RPC",1437,0)
ORWU PATCH
"KRN",19,10082,"RPC",1438,0)
ORWU TOOLMENU
"KRN",19,10082,"RPC",1439,0)
ORWU USERINFO
"KRN",19,10082,"RPC",1440,0)
ORWU VALDT
"KRN",19,10082,"RPC",1441,0)
ORWU VALIDSIG
"KRN",19,10082,"RPC",1442,0)
ORWU VERSRV
"KRN",19,10082,"RPC",1443,0)
ORWU16 DEVICE
"KRN",19,10082,"RPC",1444,0)
ORWU16 HOSPLOC
"KRN",19,10082,"RPC",1445,0)
ORWU16 NEWPERS
"KRN",19,10082,"RPC",1446,0)
ORWU16 USERINFO
"KRN",19,10082,"RPC",1447,0)
ORWU16 VALDT
"KRN",19,10082,"RPC",1448,0)
ORWU16 VALIDSIG
"KRN",19,10082,"RPC",1449,0)
ORWUH POPUP
"KRN",19,10082,"RPC",1450,0)
ORWUX SYMTAB
"KRN",19,10082,"RPC",1451,0)
ORWUXT LST
"KRN",19,10082,"RPC",1452,0)
ORWUXT REF
"KRN",19,10082,"RPC",1453,0)
ORWUXT VAL
"KRN",19,10082,"RPC",1454,0)
ORQQCN DEFAULT REQUEST REASON
"KRN",19,10082,"RPC",1455,0)
ORWDX LOCK ORDER
"KRN",19,10082,"RPC",1456,0)
ORWDX UNLOCK ORDER
"KRN",19,10082,"RPC",1457,0)
ORWDCN32 NEWDLG
"KRN",19,10082,"RPC",1458,0)
ORQQCN GET SERVICE IEN
"KRN",19,10082,"RPC",1459,0)
ORQQCN PROVDX
"KRN",19,10082,"RPC",1460,0)
TIU TEMPLATE ACCESS LEVEL
"KRN",19,10082,"RPC",1461,0)
TIU GET DOCUMENT TITLE
"KRN",19,10082,"RPC",1462,0)
ORWPT BYWARD
"KRN",19,10082,"RPC",1463,0)
ORQQPX GET HIST LOCATIONS
"KRN",19,10082,"RPC",1464,0)
ORQQPX NEW REMINDERS ACTIVE
"KRN",19,10082,"RPC",1465,0)
ORWPCE GET VISIT
"KRN",19,10082,"RPC",1480,0)
TIU GET REQUEST
"KRN",19,10082,"RPC",1481,0)
ORWORB KILL EXPIR MED ALERT
"KRN",19,10082,"RPC",1482,0)
DG CHK BS5 XREF ARRAY
"KRN",19,10082,"RPC",1483,0)
DG CHK BS5 XREF Y/N
"KRN",19,10082,"RPC",1484,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,10082,"RPC",1485,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,10082,"RPC",1486,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,10082,"RPC",1487,0)
ORQQCN CANEDIT
"KRN",19,10082,"RPC",1488,0)
ORQQCN EDIT DEFAULT REASON
"KRN",19,10082,"RPC",1489,0)
ORQQCN SF513 WINDOWS PRINT
"KRN",19,10082,"RPC",1490,0)
ORWCIRN FACLIST
"KRN",19,10082,"RPC",1491,0)
ORWDLR32 GET LAB TIMES
"KRN",19,10082,"RPC",1492,0)
ORWPT LEGACY
"KRN",19,10082,"RPC",1493,0)
ORWRP GET DEFAULT PRINTER
"KRN",19,10082,"RPC",1494,0)
ORWRP PRINT WINDOWS REPORT
"KRN",19,10082,"RPC",1495,0)
ORWRP SAVE DEFAULT PRINTER
"KRN",19,10082,"RPC",1496,0)
ORWRP WINPRINT DEFAULT
"KRN",19,10082,"RPC",1497,0)
ORWRP WINPRINT LAB REPORTS
"KRN",19,10082,"RPC",1498,0)
ORWTIU WINPRINT NOTE
"KRN",19,10082,"RPC",1500,0)
ORWPCE GAFOK
"KRN",19,10082,"RPC",1501,0)
ORWPCE MHCLINIC
"KRN",19,10082,"RPC",1502,0)
ORWPCE LOADGAF
"KRN",19,10082,"RPC",1503,0)
ORWPCE SAVEGAF
"KRN",19,10082,"RPC",1504,0)
ORWPCE FORCE
"KRN",19,10082,"RPC",1505,0)
TIU GET DEFAULT PROVIDER
"KRN",19,10082,"RPC",1506,0)
TIU GET SITE PARAMETERS
"KRN",19,10082,"RPC",1507,0)
TIU IS USER A PROVIDER?
"KRN",19,10082,"RPC",1508,0)
ORWOR VWGET
"KRN",19,10082,"RPC",1509,0)
ORWOR VWSET
"KRN",19,10082,"RPC",1510,0)
ORWU PARAM
"KRN",19,10082,"RPC",1511,0)
ORWDOR LKSCRN
"KRN",19,10082,"RPC",1512,0)
ORWDOR VALNUM
"KRN",19,10082,"RPC",1513,0)
ORWDPS32 VALROUTE
"KRN",19,10082,"RPC",1515,0)
ORWORB UNSIG ORDERS FOLLOWUP
"KRN",19,10082,"RPC",1516,0)
ORWTIU GET LISTBOX ITEM
"KRN",19,10082,"RPC",1517,0)
ORWRP2 HS COMP FILES
"KRN",19,10082,"RPC",1518,0)
ORWRP2 HS COMPONENTS
"KRN",19,10082,"RPC",1519,0)
ORWRP2 HS FILE LOOKUP
"KRN",19,10082,"RPC",1520,0)
ORWRP2 HS REPORT TEXT
"KRN",19,10082,"RPC",1521,0)
ORWRP2 HS SUBITEMS
"KRN",19,10082,"RPC",1522,0)
ORWPCE HASCPT
"KRN",19,10082,"RPC",1523,0)
ORWPCE ASKPCE
"KRN",19,10082,"RPC",1524,0)
ORWPCE MHTESTOK
"KRN",19,10082,"RPC",1525,0)
ORWPCE GAFURL
"KRN",19,10082,"RPC",1526,0)
ORQQPXRM DIALOG PROMPTS
"KRN",19,10082,"RPC",1527,0)
ORQQPXRM EDUCATION SUBTOPICS
"KRN",19,10082,"RPC",1528,0)
ORQQPXRM EDUCATION SUMMARY
"KRN",19,10082,"RPC",1529,0)
ORQQPXRM EDUCATION TOPIC
"KRN",19,10082,"RPC",1530,0)
ORQQPXRM MENTAL HEALTH
"KRN",19,10082,"RPC",1531,0)
ORQQPXRM MENTAL HEALTH RESULTS
"KRN",19,10082,"RPC",1532,0)
ORQQPXRM MENTAL HEALTH SAVE
"KRN",19,10082,"RPC",1533,0)
ORQQPXRM PROGRESS NOTE HEADER
"KRN",19,10082,"RPC",1534,0)
ORQQPXRM REMINDER CATEGORIES
"KRN",19,10082,"RPC",1535,0)
ORQQPXRM REMINDER DETAIL
"KRN",19,10082,"RPC",1536,0)
ORQQPXRM REMINDER DIALOG
"KRN",19,10082,"RPC",1537,0)
ORQQPXRM REMINDER EVALUATION
"KRN",19,10082,"RPC",1538,0)
ORQQPXRM REMINDER INQUIRY
"KRN",19,10082,"RPC",1539,0)
ORQQPXRM REMINDER WEB
"KRN",19,10082,"RPC",1540,0)
ORQQPXRM REMINDERS APPLICABLE
"KRN",19,10082,"RPC",1541,0)
ORQQPXRM REMINDERS UNEVALUATED
"KRN",19,10082,"RPC",1542,0)
ORWLRR INFO
"KRN",19,10082,"RPC",1543,0)
TIU GET PRINT NAME
"KRN",19,10082,"RPC",1544,0)
TIU WAS THIS SAVED?
"KRN",19,10082,"RPC",1545,0)
ORWD1 COMLOC
"KRN",19,10082,"RPC",1546,0)
ORWD1 SIG4ANY
"KRN",19,10082,"RPC",1547,0)
ORWD1 SIG4ONE
"KRN",19,10082,"RPC",1548,0)
ORWOR UNSIGN
"KRN",19,10082,"RPC",1549,0)
ORWPT INPLOC
"KRN",19,10082,"RPC",1553,0)
ORQQCN2 GET PREREQUISITE
"KRN",19,10082,"RPC",1554,0)
ORQQCN2 SCHEDULE CONSULT
"KRN",19,10082,"RPC",1555,0)
YS GAF API
"KRN",19,10082,"RPC",1556,0)
TIU LONG LIST BOILERPLATED
"KRN",19,10082,"RPC",1557,0)
ORWDLR33 FUTURE LAB COLLECTS
"KRN",19,10082,"RPC",1558,0)
ORWRP PRINT REMOTE REPORT
"KRN",19,10082,"RPC",1559,0)
ORWRP PRINT WINDOWS REMOTE
"KRN",19,10082,"RPC",1560,0)
ORWRP PRINT LAB REMOTE
"KRN",19,10082,"RPC",1561,0)
ORWRP PRINT WINDOWS LAB REMOTE
"KRN",19,10082,"RPC",1562,0)
ORQQPXRM DIALOG ACTIVE
"KRN",19,10082,"RPC",1563,0)
ORWPCE MH TEST AUTHORIZED
"KRN",19,10082,"RPC",1564,0)
TIU GET BOILERPLATE
"KRN",19,10082,"RPC",1565,0)
ORWRP2 HS COMPONENT SUBS
"KRN",19,10082,"RPC",1566,0)
ORWCH SAVFONT
"KRN",19,10082,"RPC",1567,0)
ORWDLR33 LASTTIME
"KRN",19,10082,"RPC",1568,0)
ORWD1 SVONLY
"KRN",19,10082,"RPC",1569,0)
ORWPCE HASVISIT
"KRN",19,10082,"RPC",1570,0)
ORWPCE GETMOD
"KRN",19,10082,"RPC",1571,0)
ORWPCE CPTMODS
"KRN",19,10082,"RPC",1572,0)
XWB REMOTE CLEAR
"KRN",19,10082,"RPC",1573,0)
XWB REMOTE GETDATA
"KRN",19,10082,"RPC",1574,0)
XWB REMOTE RPC
"KRN",19,10082,"RPC",1575,0)
XWB REMOTE STATUS CHECK
"KRN",19,10082,"RPC",1576,0)
ORQQCN ASSIGNABLE MED RESULTS
"KRN",19,10082,"RPC",1577,0)
ORQQCN ATTACH MED RESULTS
"KRN",19,10082,"RPC",1578,0)
ORQQCN GET MED RESULT DETAILS
"KRN",19,10082,"RPC",1579,0)
ORQQCN REMOVABLE MED RESULTS
"KRN",19,10082,"RPC",1580,0)
ORQQCN REMOVE MED RESULTS
"KRN",19,10082,"RPC",1581,0)
ORQQCN SVC W/SYNONYMS
"KRN",19,10082,"RPC",1582,0)
ORWCV1 COVERSHEET LIST
"KRN",19,10082,"RPC",1583,0)
ORWORB KILL EXPIR OI ALERT
"KRN",19,10082,"RPC",1584,0)
ORWPCE GETSVC
"KRN",19,10082,"RPC",1585,0)
ORWRP LAB REPORT LISTS
"KRN",19,10082,"RPC",1587,0)
ORWTPN GETCLASS
"KRN",19,10082,"RPC",1588,0)
ORWTPN GETTC
"KRN",19,10082,"RPC",1589,0)
ORWTPO CSARNGD
"KRN",19,10082,"RPC",1590,0)
ORWTPO CSLABD
"KRN",19,10082,"RPC",1591,0)
ORWTPO GETTABS
"KRN",19,10082,"RPC",1592,0)
ORWTPP ADDLIST
"KRN",19,10082,"RPC",1593,0)
ORWTPP CHKSURR
"KRN",19,10082,"RPC",1594,0)
ORWTPP CLDAYS
"KRN",19,10082,"RPC",1595,0)
ORWTPP CLEARNOT
"KRN",19,10082,"RPC",1596,0)
ORWTPP CLRANGE
"KRN",19,10082,"RPC",1597,0)
ORWTPP CSARNG
"KRN",19,10082,"RPC",1598,0)
ORWTPP CSLAB
"KRN",19,10082,"RPC",1599,0)
ORWTPP DELLIST
"KRN",19,10082,"RPC",1600,0)
ORWTPP GETCOMBO
"KRN",19,10082,"RPC",1601,0)
ORWTPP GETCOS
"KRN",19,10082,"RPC",1602,0)
ORWTPP GETDCOS
"KRN",19,10082,"RPC",1603,0)
ORWTPP GETNOT
"KRN",19,10082,"RPC",1604,0)
ORWTPP GETNOTO
"KRN",19,10082,"RPC",1605,0)
ORWTPP GETOC
"KRN",19,10082,"RPC",1606,0)
ORWTPP GETOTHER
"KRN",19,10082,"RPC",1607,0)
ORWTPP GETREM
"KRN",19,10082,"RPC",1608,0)
ORWTPP GETSUB
"KRN",19,10082,"RPC",1609,0)
ORWTPP GETSURR
"KRN",19,10082,"RPC",1610,0)
ORWTPP GETTD
"KRN",19,10082,"RPC",1611,0)
ORWTPP GETTU
"KRN",19,10082,"RPC",1612,0)
ORWTPP LSDEF
"KRN",19,10082,"RPC",1613,0)
ORWTPP NEWLIST
"KRN",19,10082,"RPC",1614,0)
ORWTPP PLISTS
"KRN",19,10082,"RPC",1615,0)
ORWTPP PLTEAMS
"KRN",19,10082,"RPC",1616,0)
ORWTPP REMLIST
"KRN",19,10082,"RPC",1617,0)
ORWTPP SAVECD
"KRN",19,10082,"RPC",1618,0)
ORWTPP SAVECS
"KRN",19,10082,"RPC",1619,0)
ORWTPP SAVELIST
"KRN",19,10082,"RPC",1620,0)
ORWTPP SAVENOT
"KRN",19,10082,"RPC",1621,0)
ORWTPP SAVENOTO
"KRN",19,10082,"RPC",1622,0)
ORWTPP SAVEOC
"KRN",19,10082,"RPC",1623,0)
ORWTPP SAVEPLD
"KRN",19,10082,"RPC",1624,0)
ORWTPP SAVESURR
"KRN",19,10082,"RPC",1625,0)
ORWTPP SAVET
"KRN",19,10082,"RPC",1626,0)
ORWTPP SETCOMBO
"KRN",19,10082,"RPC",1627,0)
ORWTPP SETDCOS
"KRN",19,10082,"RPC",1628,0)
ORWTPP SETOTHER
"KRN",19,10082,"RPC",1629,0)
ORWTPP SETREM
"KRN",19,10082,"RPC",1630,0)
ORWTPP SETSUB
"KRN",19,10082,"RPC",1631,0)
ORWTPP SORTDEF
"KRN",19,10082,"RPC",1632,0)
ORWTPP TEAMS
"KRN",19,10082,"RPC",1633,0)
ORWTPT ATEAMS
"KRN",19,10082,"RPC",1634,0)
ORWTPT GETTEAM
"KRN",19,10082,"RPC",1635,0)
TIU TEMPLATE GET DEFAULTS
"KRN",19,10082,"RPC",1636,0)
TIU TEMPLATE GET DESCRIPTION
"KRN",19,10082,"RPC",1637,0)
TIU TEMPLATE SET DEFAULTS
"KRN",19,10082,"RPC",1638,0)
ORWTIU IDNOTES INSTALLED
"KRN",19,10082,"RPC",1639,0)
ORQQPX GET FOLDERS
"KRN",19,10082,"RPC",1640,0)
ORQQPX SET FOLDERS
"KRN",19,10082,"RPC",1641,0)
TIU FIELD CAN EDIT
"KRN",19,10082,"RPC",1642,0)
TIU FIELD DELETE
"KRN",19,10082,"RPC",1643,0)
TIU FIELD EXPORT
"KRN",19,10082,"RPC",1644,0)
TIU FIELD IMPORT
"KRN",19,10082,"RPC",1645,0)
TIU FIELD LIST
"KRN",19,10082,"RPC",1646,0)
TIU FIELD LOAD
"KRN",19,10082,"RPC",1647,0)
TIU FIELD LOAD BY IEN
"KRN",19,10082,"RPC",1648,0)
TIU FIELD LOCK
"KRN",19,10082,"RPC",1649,0)
TIU FIELD NAME IS UNIQUE
"KRN",19,10082,"RPC",1650,0)
TIU FIELD SAVE
"KRN",19,10082,"RPC",1651,0)
TIU FIELD UNLOCK
"KRN",19,10082,"RPC",1652,0)
ORWDPS1 CHK94
"KRN",19,10082,"RPC",1653,0)
ORWDPS1 ODSLCT
"KRN",19,10082,"RPC",1654,0)
ORWDPS1 SCHALL
"KRN",19,10082,"RPC",1655,0)
ORWDPS2 ADMIN
"KRN",19,10082,"RPC",1656,0)
ORWDPS2 DAY2QTY
"KRN",19,10082,"RPC",1657,0)
ORWDPS2 OISLCT
"KRN",19,10082,"RPC",1658,0)
ORWDPS2 REQST
"KRN",19,10082,"RPC",1659,0)
ORWDX DGNM
"KRN",19,10082,"RPC",1660,0)
ORWUL FV4DG
"KRN",19,10082,"RPC",1661,0)
ORWUL FVIDX
"KRN",19,10082,"RPC",1662,0)
ORWUL FVSUB
"KRN",19,10082,"RPC",1663,0)
ORWUL QV4DG
"KRN",19,10082,"RPC",1664,0)
ORWUL QVIDX
"KRN",19,10082,"RPC",1665,0)
ORWUL QVSUB
"KRN",19,10082,"RPC",1666,0)
ORWDPS1 DFLTSPLY
"KRN",19,10082,"RPC",1668,0)
PXRM REMINDER DIALOG (TIU)
"KRN",19,10082,"RPC",1669,0)
ORWPCE ANYTIME
"KRN",19,10082,"RPC",1670,0)
ORQQPX GET DEF LOCATIONS
"KRN",19,10082,"RPC",1671,0)
ORWTPP GETIMG
"KRN",19,10082,"RPC",1672,0)
ORWTPP SETIMG
"KRN",19,10082,"RPC",1673,0)
ORWTPO GETIMGD
"KRN",19,10082,"RPC",1674,0)
ORQQPX REM INSERT AT CURSOR
"KRN",19,10082,"RPC",1675,0)
TIU REMINDER DIALOGS
"KRN",19,10082,"RPC",1676,0)
TIU REM DLG OK AS TEMPLATE
"KRN",19,10082,"RPC",1677,0)
ORWDPS2 MAXREF
"KRN",19,10082,"RPC",1678,0)
ORWDPS2 SCHREQ
"KRN",19,10082,"RPC",1679,0)
ORWRP COLUMN HEADERS
"KRN",19,10082,"RPC",1680,0)
TIU FIELD DOLMTEXT
"KRN",19,10082,"RPC",1681,0)
TIU TEMPLATE PERSONAL OBJECTS
"KRN",19,10082,"RPC",1682,0)
ORWPCE AUTO VISIT TYPE SELECT
"KRN",19,10082,"RPC",1683,0)
ORWDPS2 QTY2DAY
"KRN",19,10082,"RPC",1684,0)
ORWU HAS OPTION ACCESS
"KRN",19,10082,"RPC",1685,0)
TIU TEMPLATE LOCK
"KRN",19,10082,"RPC",1686,0)
ORQQPX LVREMLST
"KRN",19,10082,"RPC",1687,0)
ORQQPX NEW COVER SHEET ACTIVE
"KRN",19,10082,"RPC",1688,0)
ORQQPX NEW COVER SHEET REMS
"KRN",19,10082,"RPC",1689,0)
ORQQPX SAVELVL
"KRN",19,10082,"RPC",1690,0)
PXRM REMINDER CATEGORY
"KRN",19,10082,"RPC",1691,0)
PXRM REMINDERS AND CATEGORIES
"KRN",19,10082,"RPC",1692,0)
TIU DIV AND CLASS INFO
"KRN",19,10082,"RPC",1693,0)
TIU TEMPLATE GETBOIL
"KRN",19,10082,"RPC",1694,0)
TIU TEMPLATE GETITEMS
"KRN",19,10082,"RPC",1695,0)
TIU TEMPLATE GETROOTS
"KRN",19,10082,"RPC",1696,0)
TIU TEMPLATE GETTEXT
"KRN",19,10082,"RPC",1697,0)
TIU TEMPLATE ISEDITOR
"KRN",19,10082,"RPC",1698,0)
TIU TEMPLATE UNLOCK
"KRN",19,10082,"RPC",1699,0)
TIU USER CLASS LONG LIST
"KRN",19,10082,"RPC",1700,0)
ORWPCE ALWAYS CHECKOUT
"KRN",19,10082,"RPC",1701,0)
ORWPCE GET EXCLUDED
"KRN",19,10082,"RPC",1702,0)
ORWDPS1 FORMALT
"KRN",19,10082,"RPC",1703,0)
ORQPT DEFAULT LIST SORT
"KRN",19,10082,"RPC",1704,0)
ORWDPS1 DOSEALT
"KRN",19,10082,"RPC",1705,0)
ORWTPR OCDESC
"KRN",19,10082,"RPC",1706,0)
ORWTPR NOTDESC
"KRN",19,10082,"RPC",1707,0)
ORWDPS1 FAILDEA
"KRN",19,10082,"RPC",1708,0)
ORQPT DEFAULT CLINIC DATE RANG
"KRN",19,10082,"RPC",1709,0)
ORWTIU CANLINK
"KRN",19,10082,"RPC",1710,0)
TIU ID ATTACH ENTRY
"KRN",19,10082,"RPC",1711,0)
TIU ID CAN ATTACH
"KRN",19,10082,"RPC",1712,0)
TIU ID CAN RECEIVE
"KRN",19,10082,"RPC",1713,0)
TIU ID DETACH ENTRY
"KRN",19,10082,"RPC",1714,0)
ORWCOM GETOBJS
"KRN",19,10082,"RPC",1715,0)
ORWCOM DETAILS
"KRN",19,10082,"RPC",1716,0)
ORWCOM PTOBJ
"KRN",19,10082,"RPC",1718,0)
TIU TEMPLATE GETLINK
"KRN",19,10082,"RPC",1719,0)
TIU TEMPLATE ALL TITLES
"KRN",19,10082,"RPC",1720,0)
ORWSR LIST
"KRN",19,10082,"RPC",1721,0)
ORWSR SHOW SURG TAB
"KRN",19,10082,"RPC",1722,0)
ORWSR GET SURG CONTEXT
"KRN",19,10082,"RPC",1723,0)
ORWSR SAVE SURG CONTEXT
"KRN",19,10082,"RPC",1724,0)
ORWSR ONECASE
"KRN",19,10082,"RPC",1725,0)
ORWSR OPTOP
"KRN",19,10082,"RPC",1726,0)
ORWSR OPTOP NON-OR
"KRN",19,10082,"RPC",1727,0)
ORWSR SHOW OPTOP WHEN SIGNING
"KRN",19,10082,"RPC",1728,0)
ORWSR IS NON-OR PROCEDURE
"KRN",19,10082,"RPC",1729,0)
ORWSR CASELIST
"KRN",19,10082,"RPC",1730,0)
ORQQCN GET PROC IEN
"KRN",19,10082,"RPC",1731,0)
ORWRP PRINT V REPORT
"KRN",19,10082,"RPC",1732,0)
ORWRP3 EXPAND COLUMNS
"KRN",19,10082,"RPC",1733,0)
ORWTPD ACTDF
"KRN",19,10082,"RPC",1734,0)
ORWTPD DELDFLT
"KRN",19,10082,"RPC",1735,0)
ORWTPD GETDFLT
"KRN",19,10082,"RPC",1736,0)
ORWTPD RSDFLT
"KRN",19,10082,"RPC",1737,0)
ORWTPD SUDF
"KRN",19,10082,"RPC",1738,0)
ORWTPD SUINDV
"KRN",19,10082,"RPC",1739,0)
ORWTPD GETSETS
"KRN",19,10082,"RPC",1740,0)
ORWCOM ORDEROBJ
"KRN",19,10082,"RPC",1741,0)
ORWRP2 COMPABV
"KRN",19,10082,"RPC",1742,0)
ORWRP2 GETLKUP
"KRN",19,10082,"RPC",1743,0)
ORWRP2 SAVLKUP
"KRN",19,10082,"RPC",1744,0)
ORWRP2 COMPDISP
"KRN",19,10082,"RPC",1745,0)
ORWPCE ISCLINIC
"KRN",19,10082,"RPC",1746,0)
ORWCH SAVECOL
"KRN",19,10082,"RPC",1747,0)
ORWSR RPTLIST
"KRN",19,10082,"RPC",1748,0)
ORQQPXRM MST UPDATE
"KRN",19,10082,"RPC",1749,0)
ORWMC PATIENT PROCEDURES1
"KRN",19,10082,"RPC",1750,0)
ORWRA IMAGING EXAMS1
"KRN",19,10082,"RPC",1751,0)
ORWRA REPORT TEXT1
"KRN",19,10082,"RPC",1752,0)
ORWDPS4 CPINFO
"KRN",19,10082,"RPC",1753,0)
ORWDPS4 CPLST
"KRN",19,10082,"RPC",1754,0)
ORWORB KILL UNVER MEDS ALERT
"KRN",19,10082,"RPC",1755,0)
ORWORB KILL UNVER ORDERS ALERT
"KRN",19,10082,"RPC",1756,0)
ORWPCE HNCOK
"KRN",19,10082,"RPC",1757,0)
ORWPS MEDHIST
"KRN",19,10082,"RPC",1758,0)
TIU FIELD CHECK
"KRN",19,10082,"RPC",1759,0)
TIU FIELD LIST ADD
"KRN",19,10082,"RPC",1760,0)
TIU FIELD LIST IMPORT
"KRN",19,10082,"RPC",1761,0)
TIU SET DOCUMENT TEXT
"KRN",19,10082,"RPC",1762,0)
ORWDPS2 CHKPI
"KRN",19,10082,"RPC",1763,0)
ORWDXR GTORITM
"KRN",19,10082,"RPC",1764,0)
ORWDPS2 CHKGRP
"KRN",19,10082,"RPC",1765,0)
ORWDPS2 QOGRP
"KRN",19,10082,"RPC",1766,0)
ORWDXR GETPKG
"KRN",19,10082,"RPC",1767,0)
ORQPT MAKE RPL
"KRN",19,10082,"RPC",1768,0)
ORQPT READ RPL
"KRN",19,10082,"RPC",1769,0)
ORQPT KILL RPL
"KRN",19,10082,"RPC",1770,0)
ORWTIU GET SAVED CP FIELDS
"KRN",19,10082,"RPC",1771,0)
ORWDPS1 LOCPICK
"KRN",19,10082,"RPC",1772,0)
ORWPT LAST5 RPL
"KRN",19,10082,"RPC",1773,0)
ORWPT FULLSSN RPL
"KRN",19,10082,"RPC",1774,0)
ORWOR PKIUSE
"KRN",19,10082,"RPC",1775,0)
ORWOR1 SIG
"KRN",19,10082,"RPC",1776,0)
ORWOR1 CHKDIG
"KRN",19,10082,"RPC",1777,0)
ORWOR1 GETDTEXT
"KRN",19,10082,"RPC",1778,0)
ORWOR1 GETDSIG
"KRN",19,10082,"RPC",1779,0)
ORWTPD GETIMG
"KRN",19,10082,"RPC",1780,0)
OREVNTX1 PRMPTID
"KRN",19,10082,"RPC",1781,0)
ORECS01 CHKESSO
"KRN",19,10082,"RPC",1782,0)
ORECS01 VSITID
"KRN",19,10082,"RPC",1784,0)
OREVNTX LIST
"KRN",19,10082,"RPC",1785,0)
OREVNTX PAT
"KRN",19,10082,"RPC",1786,0)
OREVNTX1 GTEVT
"KRN",19,10082,"RPC",1787,0)
OREVNTX1 CPACT
"KRN",19,10082,"RPC",1788,0)
OREVNTX1 CURSPE
"KRN",19,10082,"RPC",1789,0)
OREVNTX1 CHGEVT
"KRN",19,10082,"RPC",1790,0)
OREVNTX1 DELPTEVT
"KRN",19,10082,"RPC",1791,0)
OREVNTX1 DFLTEVT
"KRN",19,10082,"RPC",1792,0)
OREVNTX ACTIVE
"KRN",19,10082,"RPC",1793,0)
OREVNTX1 PUTEVNT
"KRN",19,10082,"RPC",1794,0)
OREVNTX1 WRLSTED
"KRN",19,10082,"RPC",1795,0)
OREVNTX1 EVT
"KRN",19,10082,"RPC",1796,0)
OREVNTX1 NAME
"KRN",19,10082,"RPC",1797,0)
OREVNTX1 MATCH
"KRN",19,10082,"RPC",1798,0)
OREVNTX1 EMPTY
"KRN",19,10082,"RPC",1799,0)
OREVNTX1 EXISTS
"KRN",19,10082,"RPC",1800,0)
OREVNTX1 GTEVT1
"KRN",19,10082,"RPC",1801,0)
OREVNTX1 DIV
"KRN",19,10082,"RPC",1802,0)
OREVNTX1 DIV1
"KRN",19,10082,"RPC",1803,0)
OREVNTX1 LOC
"KRN",19,10082,"RPC",1804,0)
OREVNTX1 LOC1
"KRN",19,10082,"RPC",1805,0)
ORWDX SENDED
"KRN",19,10082,"RPC",1806,0)
OREVNTX1 GETDLG
"KRN",19,10082,"RPC",1807,0)
ORECS01 ECPRINT
"KRN",19,10082,"RPC",1811,0)
ORECS01 ECRPT
"KRN",19,10082,"RPC",1812,0)
OREVNTX1 ISDCOD
"KRN",19,10082,"RPC",1813,0)
OREVNTX1 SETDFLT
"KRN",19,10082,"RPC",1815,0)
TIU IS THIS A CLINPROC?
"KRN",19,10082,"RPC",1816,0)
TIU IDENTIFY CLINPROC CLASS
"KRN",19,10082,"RPC",1817,0)
TIU LONG LIST CLINPROC TITLES
"KRN",19,10082,"RPC",1819,0)
ORWDPS1 HASOIPI
"KRN",19,10082,"RPC",1821,0)
OREVNTX1 DEFLTS
"KRN",19,10082,"RPC",1822,0)
OREVNTX1 MULTS
"KRN",19,10082,"RPC",1823,0)
OREVNTX1 DONE
"KRN",19,10082,"RPC",1824,0)
OREVNTX1 PROMPT IDS
"KRN",19,10082,"RPC",1825,0)
ORWCIRN CHECKLINK
"KRN",19,10082,"RPC",1826,0)
XWB DIRECT RPC
"KRN",19,10082,"RPC",1827,0)
ORWDPS1 HASROUTE
"KRN",19,10082,"RPC",1828,0)
ORQQCN UNRESOLVED
"KRN",19,10082,"RPC",1829,0)
OREVNTX1 DELDFLT
"KRN",19,10082,"RPC",1830,0)
ORWCH LDFONT
"KRN",19,10082,"RPC",1831,0)
ORWU1 NAMECVT
"KRN",19,10082,"RPC",1832,0)
OREVNTX1 DFLTDLG
"KRN",19,10082,"RPC",1833,0)
ORWDPS5 LESAPI
"KRN",19,10082,"RPC",1834,0)
ORWDPS5 LESGRP
"KRN",19,10082,"RPC",1839,0)
OREVNTX1 TYPEXT
"KRN",19,10082,"RPC",1840,0)
ORWORR RGET
"KRN",19,10082,"RPC",1841,0)
OREVNTX1 AUTHMREL
"KRN",19,10082,"RPC",1842,0)
OREVNTX1 HAVEPRT
"KRN",19,10082,"RPC",1843,0)
OREVNTX1 CMEVTS
"KRN",19,10082,"RPC",1844,0)
OREVNTX1 ODPTEVID
"KRN",19,10082,"RPC",1845,0)
ORWOR PKISITE
"KRN",19,10082,"RPC",1846,0)
OREVNTX1 COMP
"KRN",19,10082,"RPC",1847,0)
OREVNTX1 ISHDORD
"KRN",19,10082,"RPC",1848,0)
ORWDXR ORCPLX
"KRN",19,10082,"RPC",1849,0)
OREVNTX1 ISPASS
"KRN",19,10082,"RPC",1850,0)
OREVNTX1 ISPASS1
"KRN",19,10082,"RPC",1851,0)
OREVNTX1 DLGIEN
"KRN",19,10082,"RPC",1852,0)
ORWDXR CANRN
"KRN",19,10082,"RPC",1853,0)
ORWDXR ISCPLX
"KRN",19,10082,"RPC",1854,0)
ORWDXA OFCPLX
"KRN",19,10082,"RPC",1855,0)
ORQQPX GET NOT PURPOSE
"KRN",19,10082,"RPC",1856,0)
ORWDPS1 IVDEA
"KRN",19,10082,"RPC",1857,0)
ORWDXR ISNOW
"KRN",19,10082,"RPC",1858,0)
ORRHCQ QRYITR
"KRN",19,10082,"RPC",1859,0)
OREVNTX1 GETSTS
"KRN",19,10082,"RPC",1860,0)
ORWU DEFAULT DIVISION
"KRN",19,10082,"RPC",1861,0)
ORWDXA ISACTOI
"KRN",19,10082,"RPC",1862,0)
ORECS01 SAVPATH
"KRN",19,10082,"RPC",1863,0)
ORWOR RESULT HISTORY
"KRN",19,10082,"RPC",1864,0)
XUS GET TOKEN
"KRN",19,10082,"RPC",1865,0)
ORQQPX IMMUN LIST
"KRN",19,10082,"RPC",1866,0)
XWB DEFERRED CLEARALL
"KRN",19,10082,"RPC",1867,0)
ORWOR1 SETDTEXT
"KRN",19,10082,"RPC",1868,0)
ORWOR1 GETDEA
"KRN",19,10082,"RPC",1869,0)
ORWOR1 GETDSCH
"KRN",19,10082,"RPC",1870,0)
ORWORB TEXT FOLLOWUP
"KRN",19,10082,"RPC",1871,0)
ORWU1 NEWLOC
"KRN",19,10082,"RPC",1872,0)
ORWPCE ACTIVE CODE
"KRN",19,10082,"RPC",1873,0)
ORQQPXRM GET WH LETTER TEXT
"KRN",19,10082,"RPC",1874,0)
ORQQPXRM GET WH LETTER TYPE
"KRN",19,10082,"RPC",1875,0)
ORQQPXRM GET WH PROC RESULT
"KRN",19,10082,"RPC",1876,0)
ORQQPXRM WOMEN HEALTH SAVE
"KRN",19,10082,"RPC",1877,0)
ORB FORWARD ALERT
"KRN",19,10082,"RPC",1878,0)
ORB RENEW ALERT
"KRN",19,10082,"RPC",1879,0)
ORPRF CLEAR
"KRN",19,10082,"RPC",1880,0)
ORPRF GETFLG
"KRN",19,10082,"RPC",1881,0)
ORPRF HASFLG
"KRN",19,10082,"RPC",1882,0)
ORWTPD GETOCM
"KRN",19,10082,"RPC",1883,0)
TIU ONE VISIT NOTE?
"KRN",19,10082,"RPC",1884,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,10082,"RPC",1885,0)
ORIMO IMOLOC
"KRN",19,10082,"RPC",1886,0)
ORIMO IMOOD
"KRN",19,10082,"RPC",1887,0)
ORWDPS4 IPOD4OP
"KRN",19,10082,"RPC",1888,0)
ORWDPS4 UPDTDG
"KRN",19,10082,"RPC",1889,0)
TIU USER INACTIVE?
"KRN",19,10082,"RPC",1890,0)
ORWTPD PUTOCM
"KRN",19,10082,"RPC",1891,0)
ORWOR ACTION TEXT
"KRN",19,10082,"RPC",1892,0)
ORQQPXRM GEC DIALOG
"KRN",19,10082,"RPC",1893,0)
ORQQPXRM GET WH REPORT TEXT
"KRN",19,10082,"RPC",1894,0)
ORWDXR01 CANCHG
"KRN",19,10082,"RPC",1895,0)
ORWDXR01 SAVCHG
"KRN",19,10082,"RPC",1896,0)
TIU HAS AUTHOR SIGNED?
"KRN",19,10082,"RPC",1897,0)
ORQQPXRM CHECK REM VERSION
"KRN",19,10082,"RPC",1898,0)
ORQQPXRM GEC STATUS PROMPT
"KRN",19,10082,"RPC",1899,0)
ORQQPXRM GEC STATUS PROMPT
"KRN",19,10082,"RPC",1900,0)
ORQQPXRM GEC FINISHED?
"KRN",19,10082,"RPC",1901,0)
ORWDXM3 ISUDQO
"KRN",19,10082,"U")
CPRSCHART VERSION 1.0.23.15
"KRN",8994,325,-1)
0^5
"KRN",8994,325,0)
ORWDX SAVE^SAVE^ORWDX^2
"KRN",8994,325,1,0)
^8994.01^9^9^3000104^
"KRN",8994,325,1,1,0)
Save the order by passing in the following information:
"KRN",8994,325,1,2,0)
        ORVP=DFN
"KRN",8994,325,1,3,0)
        ORNP=Provider
"KRN",8994,325,1,4,0)
        ORL=Location
"KRN",8994,325,1,5,0)
        DLG=Order Dialog,
"KRN",8994,325,1,6,0)
        ORDG=Display Group
"KRN",8994,325,1,7,0)
        ORIT=Quick Order Dialog,
"KRN",8994,325,1,8,0)
        ORIFN=null if new order
"KRN",8994,325,1,9,0)
        ORDIALOG=Response List
"KRN",8994,397,-1)
0^6
"KRN",8994,397,0)
ORWDXR RENEW^RENEW^ORWDXR^2
"KRN",8994,397,1,0)
^8994.01^1^1^3000105^
"KRN",8994,397,1,1,0)
Renew an existing order.
"KRN",8994,576,-1)
0^16
"KRN",8994,576,0)
ORWDXM1 BLDQRSP^BLDQRSP^ORWDXM1^2
"KRN",8994,576,1,0)
^^10^10^3000105^
"KRN",8994,576,1,1,0)
Build responses for an order
"KRN",8994,576,1,2,0)
 
"KRN",8994,576,1,3,0)
Input:
"KRN",8994,576,1,4,0)
      1   2    3    4   5   6    7    8        11-20
"KRN",8994,576,1,5,0)
FLDS=DFN^LOC^ORNP^INPT^SEX^AGE^EVENT^SC%^^^Key Variables...
"KRN",8994,576,1,6,0)
ORIT=+ORIT: ptr to 101.41, $E(ORIT)=C: copy $E(ORIT)=X: change
"KRN",8994,576,1,7,0)
 
"KRN",8994,576,1,8,0)
Output:
"KRN",8994,576,1,9,0)
LST=QuickLevel^ResponseID(ORIT;$H)^Dialog^Type^FormID^DGrp
"KRN",8994,576,1,10,0)
LST(n)=verify text or rejection text
"KRN",8994,1382,-1)
0^8
"KRN",8994,1382,0)
ORQQPXRM GET WH REPORT TEXT^WHREPORT^ORQQPXRM^4^S^^^1
"KRN",8994,1382,1,0)
^8994.01^1^1^3031113^^^
"KRN",8994,1382,1,1,0)
This RPC will return the Radiology/Lab Report for a WH Procedure
"KRN",8994,1382,2,0)
^8994.02A^1^1
"KRN",8994,1382,2,1,0)
IEN^1^^1^1
"KRN",8994,1382,2,1,1,0)
^8994.021^1^1^3031113^^^
"KRN",8994,1382,2,1,1,1,0)
IEN is equal the Women's Health Procedure IEN
"KRN",8994,1382,2,"B","IEN",1)

"KRN",8994,1382,2,"PARAMSEQ",1,1)

"KRN",8994,1436,-1)
0^1
"KRN",8994,1436,0)
ORIMO IMOLOC^IMOLOC^ORIMO^1
"KRN",8994,1437,-1)
0^2
"KRN",8994,1437,0)
ORIMO IMOOD^IMOOD^ORIMO^1
"KRN",8994,1438,-1)
0^3
"KRN",8994,1438,0)
ORWDPS4 IPOD4OP^IPOD4OP^ORWDPS4^1
"KRN",8994,1439,-1)
0^4
"KRN",8994,1439,0)
ORWDPS4 UPDTDG^UPDTDG^ORWDPS4^1
"KRN",8994,1440,-1)
0^7
"KRN",8994,1440,0)
ORWOR ACTION TEXT^ACTXT^ORWOR^2^^^^1
"KRN",8994,1441,-1)
0^9
"KRN",8994,1441,0)
ORQQPXRM GEC DIALOG^GEC^ORQQPXRM^1^S
"KRN",8994,1441,1,0)
^^3^3^3030605^
"KRN",8994,1441,1,1,0)
This RPC will evaluate the Reminder Dialogs as the Finish button is click
"KRN",8994,1441,1,2,0)
for the GEC Project. THis RPC will return an error messages if the four
"KRN",8994,1441,1,3,0)
GEC Reminder Dialogs are done out of order.
"KRN",8994,1441,2,0)
^8994.02A^3^3
"KRN",8994,1441,2,1,0)
IEN^1^^1^1
"KRN",8994,1441,2,1,1,0)
^^1^1^3030605^
"KRN",8994,1441,2,1,1,1,0)
This is the Reminder Definition IEN or the Reminder Dialog IEN
"KRN",8994,1441,2,2,0)
DFN^1^^1^2
"KRN",8994,1441,2,2,1,0)
^^1^1^3030605^
"KRN",8994,1441,2,2,1,1,0)
Patient DFN
"KRN",8994,1441,2,3,0)
Visit^1^^1^3
"KRN",8994,1441,2,3,1,0)
^8994.021^1^1^3030605^^^
"KRN",8994,1441,2,3,1,1,0)
This is the Visit Encounter String
"KRN",8994,1441,2,"B","DFN",2)

"KRN",8994,1441,2,"B","IEN",1)

"KRN",8994,1441,2,"B","Visit",3)

"KRN",8994,1441,2,"PARAMSEQ",1,1)

"KRN",8994,1441,2,"PARAMSEQ",2,2)

"KRN",8994,1441,2,"PARAMSEQ",3,3)

"KRN",8994,1441,3,0)
^8994.03^2^2^3030605^^
"KRN",8994,1441,3,1,0)
A single string that will return a value to set in the V HF file an error
"KRN",8994,1441,3,2,0)
message
"KRN",8994,1442,-1)
0^10
"KRN",8994,1442,0)
ORWDXR01 CANCHG^CANCHG^ORWDXR01^1
"KRN",8994,1443,-1)
0^11
"KRN",8994,1443,0)
ORWDXR01 SAVCHG^SAVCHG^ORWDXR01^2
"KRN",8994,1444,-1)
0^13
"KRN",8994,1444,0)
ORQQPXRM GEC FINISHED?^GECF^ORQQPXRM^1
"KRN",8994,1444,1,0)
^^1^1^3030801
"KRN",8994,1444,1,1,0)
This RPC pass a boolean value to PXRMGECU
"KRN",8994,1444,2,0)
^8994.02A^2^2
"KRN",8994,1444,2,1,0)
DFN^1^^1^1
"KRN",8994,1444,2,1,1,0)
^^1^1^3030801
"KRN",8994,1444,2,1,1,1,0)
This is the Patient DFN
"KRN",8994,1444,2,2,0)
FIN^1^^1^2
"KRN",8994,1444,2,2,1,0)
^^1^1^3030801
"KRN",8994,1444,2,2,1,1,0)
Fin is a 1 or 0
"KRN",8994,1444,2,"B","DFN",1)

"KRN",8994,1444,2,"B","FIN",2)

"KRN",8994,1444,2,"PARAMSEQ",1,1)

"KRN",8994,1444,2,"PARAMSEQ",2,2)

"KRN",8994,1445,-1)
0^12
"KRN",8994,1445,0)
ORQQPXRM CHECK REM VERSION^REMVER^ORQQPXRM^1
"KRN",8994,1445,3,0)
^^1^1^3030801
"KRN",8994,1445,3,1,0)
Single value
"KRN",8994,1446,-1)
0^14
"KRN",8994,1446,0)
ORQQPXRM GEC STATUS PROMPT^GECP^ORQQPXRM^1
"KRN",8994,1446,1,0)
^^2^2^3030801
"KRN",8994,1446,1,1,0)
This remote procedure will return the text value to display in CPRS of the 
"KRN",8994,1446,1,2,0)
status of the current GEC Referral.
"KRN",8994,1446,2,0)
^8994.02A^1^1
"KRN",8994,1446,2,1,0)
DFN^1^^1^1
"KRN",8994,1446,2,"B","DFN",1)

"KRN",8994,1446,2,"PARAMSEQ",1,1)

"KRN",8994,1447,-1)
0^15
"KRN",8994,1447,0)
ORWDXM3 ISUDQO^ISUDQO^ORWDXM3^1
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",22,-1)
1^1
"PKG",22,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",22,20,0)
^9.402P^^
"PKG",22,22,0)
^9.49I^1^1
"PKG",22,22,1,0)
3.0^2971217^2980204^64
"PKG",22,22,1,"PAH",1,0)
187^3040204^1362
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
31
"RTN","ORCACT01")
0^18^B71478249
"RTN","ORCACT01",1,0)
ORCACT01        ;SLC/MKB-Validate order actions cont ;2/12/03  13:14
"RTN","ORCACT01",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**94,116,134,141,163,187**;Dec 17, 1997
"RTN","ORCACT01",3,0)
 ;
"RTN","ORCACT01",4,0)
ES ; -- sign [on chart]
"RTN","ORCACT01",5,0)
 I ORDSTS=11,VER<3,PKG'="OR" S ERROR="This order cannot be released and must be discontinued!" Q
"RTN","ORCACT01",6,0)
 N X I ACTSTS=11!(ACTSTS=10) D  Q:$L($G(ERROR))
"RTN","ORCACT01",7,0)
 . I $P(ORA0,U,2)="DC",$$DONE^ORCACT0 D CANCEL^ORCSEND(+IFN),UNOTIF^ORCSIGN S OREBUILD=1 Q
"RTN","ORCACT01",8,0)
 . S X=$$DISABLED^ORCACT0 I X S ERROR=$P(X,U,2) Q
"RTN","ORCACT01",9,0)
 S X=$P(ORA0,U,4) I X=3 S:ACTSTS'=11&(ACTSTS'=10) ERROR="This order does not require a signature!" Q
"RTN","ORCACT01",10,0)
 I X'=2 S ERROR="This order has been signed!" Q
"RTN","ORCACT01",11,0)
 I DG="O RX",ACTION'="ES",ACTION'="DS",$G(NATR)'="I" S ERROR="Outpatient meds may not be released without a clinician's signature!" Q
"RTN","ORCACT01",12,0)
 I (ACTION="ES"!(ACTION="DS")),$D(^XUSEC("ORELSE",DUZ)),$P(OR0,U,16)'<2 S ERROR="You are not privileged to sign this order!" Q
"RTN","ORCACT01",13,0)
 I ACTION="OC" S:MEDPARM<2 ERROR="You are not authorized to release med orders!" Q
"RTN","ORCACT01",14,0)
 I ACTION="RS" D  Q:$D(ERROR)  Q:$G(NATR)'="I"
"RTN","ORCACT01",15,0)
 . Q:ACTSTS=11  Q:ACTSTS=10  ;unreleased - ok
"RTN","ORCACT01",16,0)
 . S ERROR="This order has already been released!"
"RTN","ORCACT01",17,0)
ES1 I PKG="PS" D  ;authorized to write meds?
"RTN","ORCACT01",18,0)
 . N TYPE,OI,PSOI,DEAFLG,PKI
"RTN","ORCACT01",19,0)
 . S X=$G(^VA(200,DUZ,"PS"))
"RTN","ORCACT01",20,0)
 . I '$P(X,U) S ERROR="You are not authorized to sign med orders!" Q
"RTN","ORCACT01",21,0)
 . I $P(X,U,4),$$NOW^XLFDT>$P(X,U,4) S ERROR="You are no longer authorized to sign med orders!" Q
"RTN","ORCACT01",22,0)
 . Q:DG="IV RX"  Q:$P(ORA0,U,2)="DC"  ;don't need to ck DEA#
"RTN","ORCACT01",23,0)
 . S OI=+$$VALUE^ORX8(+IFN,"ORDERABLE")
"RTN","ORCACT01",24,0)
 . S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2) Q:PSOI'>0
"RTN","ORCACT01",25,0)
 . S TYPE=$S($P(DG," ")="O":"O",1:"I"),DEAFLG=$$OIDEA^PSSUTLA1(PSOI,TYPE)
"RTN","ORCACT01",26,0)
 . I DEAFLG>0,'$L($$DEA^XUSER()) S ERROR="You must have a valid DEA# or VA# to sign this order!" Q
"RTN","ORCACT01",27,0)
 . D PKISITE^ORWOR(.PKI)
"RTN","ORCACT01",28,0)
 . I $G(PKI),ACTION="RS",DEAFLG>0 S ERROR="This order cannot be released without a Digital Signature" Q
"RTN","ORCACT01",29,0)
 Q
"RTN","ORCACT01",30,0)
 ;
"RTN","ORCACT01",31,0)
XFR ; -- transfer to inpt/outpt [IFN=order to be transferred]
"RTN","ORCACT01",32,0)
 N OI,PS I DG="TPN" S ERROR="TPN orders may not be copied!" Q
"RTN","ORCACT01",33,0)
 I $$INACTIVE S ERROR="Orders for inactive orderables may not be transferred; please enter a new order!" Q
"RTN","ORCACT01",34,0)
 S OI=+$O(^OR(100,+IFN,.1,"B",0)),ORPS=$G(^ORD(101.43,OI,"PS"))
"RTN","ORCACT01",35,0)
 I DG="UD RX",'$P(ORPS,U,2) S ERROR="This drug may not be ordered for an outpatient!" Q
"RTN","ORCACT01",36,0)
 I DG="O RX" D  Q:$L($G(ERROR))
"RTN","ORCACT01",37,0)
 . I '$P(ORPS,U) S ERROR="This drug may not be ordered for an inpatient!" Q
"RTN","ORCACT01",38,0)
 . D:$O(^OR(100,+IFN,4.5,"ID","MISC",0)) DOSES^ORCACT02(+IFN)
"RTN","ORCACT01",39,0)
 Q
"RTN","ORCACT01",40,0)
 ;
"RTN","ORCACT01",41,0)
RW ; -- rewrite/copy
"RTN","ORCACT01",42,0)
 I ACTSTS=12 S ERROR="Orders that have been dc'd due to editing may not be copied!" Q
"RTN","ORCACT01",43,0)
 I DG="TPN" S ERROR="TPN orders may not be rewritten!" Q
"RTN","ORCACT01",44,0)
 I DG="UD RX",$$NTBG(+IFN) S ERROR="This order has been marked 'Not to be Given' and may not be rewritten!" Q
"RTN","ORCACT01",45,0)
 I $$INACTIVE S ERROR="Orders for inactive orderables may not be copied; please enter a new order!" Q
"RTN","ORCACT01",46,0)
 I PKG="PS",'$$MEDOK S ERROR="This drug may not be ordered!" Q
"RTN","ORCACT01",47,0)
 I DG="O RX",$O(^OR(100,+IFN,4.5,"ID","MISC",0)) D DOSES^ORCACT02(+IFN) ;old form
"RTN","ORCACT01",48,0)
 Q
"RTN","ORCACT01",49,0)
 ;
"RTN","ORCACT01",50,0)
RN ; -- renew
"RTN","ORCACT01",51,0)
 I PKG'="PS",PKG'="OR" S ERROR="This order may not be renewed!" Q
"RTN","ORCACT01",52,0)
 I (ORDSTS=11)!(ORDSTS=10) S ERROR="This order has not been released to the service." Q
"RTN","ORCACT01",53,0)
 I ACTSTS=12 S ERROR="Orders that have been dc'd due to editing may not be renewed!" Q
"RTN","ORCACT01",54,0)
 I $P(OR3,U,6) S ERROR="This order has already been "_$S($P($G(^OR(100,+$P(OR3,U,6),3)),U,11)=1:"changed!",1:"renewed!") Q
"RTN","ORCACT01",55,0)
 I PKG="OR" D  Q  ;Generic orders
"RTN","ORCACT01",56,0)
 . I $$INACTIVE S ERROR="Orders for inactive orderables may not be renewed!" Q
"RTN","ORCACT01",57,0)
 . I DG="ADT" S ERROR="M.A.S. orders may not be renewed!" Q
"RTN","ORCACT01",58,0)
 . I "^1^2^6^7^"[(U_ORDSTS_U) Q  ;ok
"RTN","ORCACT01",59,0)
 . S ERROR="This order may not be renewed!"
"RTN","ORCACT01",60,0)
 I (PKG="PS"),$$INACTIVE S ERROR="Orders for inactive orderables may not be renewed!" Q
"RTN","ORCACT01",61,0)
 I '$$MEDOK S ERROR="This drug may not be ordered!" Q
"RTN","ORCACT01",62,0)
RN1 N PSIFN S PSIFN=$G(^OR(100,+IFN,4))
"RTN","ORCACT01",63,0)
 I PSIFN<1,'$O(^OR(100,+IFN,2,0)) S ERROR="Missing or invalid order number!" Q
"RTN","ORCACT01",64,0)
 I DG="O RX" D  Q  ;Outpt Meds
"RTN","ORCACT01",65,0)
 . N ORZ,ORD S ORZ=$L($T(RENEW^PSORENW),",")
"RTN","ORCACT01",66,0)
 . I ORZ>1 S ORD=+$$VALUE^ORX8(+IFN,"DRUG"),X=$$RENEW^PSORENW(PSIFN,ORD)
"RTN","ORCACT01",67,0)
 . S:ORZ'>1 X=$$RENEW^PSORENW(PSIFN) I X<1 S ERROR=$P(X,U,2) Q
"RTN","ORCACT01",68,0)
 . S X=+$P(X,U,2) D:X RESET(+IFN,X)
"RTN","ORCACT01",69,0)
 . I $O(^OR(100,+IFN,4.5,"ID","MISC",0)) D DOSES^ORCACT02(+IFN) ;old format
"RTN","ORCACT01",70,0)
 I DG="UD RX",$$NTBG(+IFN) S ERROR="This order has been marked 'Not to be Given' and may not be renewed!" Q
"RTN","ORCACT01",71,0)
 I ORDSTS=7,'$$IV,$P(OR0,U,9)<$$FMADD^XLFDT(DT,-4)  S ERROR="Inpatient med orders may not be renewed more than 4 days after expiration!" Q
"RTN","ORCACT01",72,0)
 I ORDSTS'=6,ORDSTS'=7 S ERROR="This order may not be renewed!" Q
"RTN","ORCACT01",73,0)
RN2 I '$O(^OR(100,+IFN,2,0))!$P(OR3,U,9) D  Q:$D(ERROR)!'PSIFN
"RTN","ORCACT01",74,0)
 . I $P(OR3,U,9),$$VALUE^ORX8(+IFN,"SCHEDULE",1,"E")="NOW" S ERROR="One-time NOW orders may not be renewed!" Q
"RTN","ORCACT01",75,0)
 . N DAD,ORD3,I,Y S DAD=$S($P(OR3,U,9):+$P(OR3,U,9),1:+IFN),Y=0
"RTN","ORCACT01",76,0)
 . S ORD3=$G(^OR(100,DAD,3)) I $P(ORD3,U,6) S ERROR="This complex order has already been renewed!" Q
"RTN","ORCACT01",77,0)
 . I $P(ORD3,U,3)'=6 S ERROR="This complex order is not active and may not be renewed!" Q
"RTN","ORCACT01",78,0)
 . I '$$AND^ORX8(DAD) S ERROR="Complex orders with sequential doses may not be renewed!" Q
"RTN","ORCACT01",79,0)
 . S I=0 F  S I=+$O(^OR(100,DAD,2,I)) Q:I<1  D  Q:Y
"RTN","ORCACT01",80,0)
 .. I $P($G(^OR(100,I,3)),U,3)'=6 S Y=1,ERROR="Complex orders with terminated doses may not be renewed!" Q
"RTN","ORCACT01",81,0)
 .. I PSIFN<1 S X=$$ACTIVE^PSJORREN(+ORVP,$G(^OR(100,I,4))) I +X'=1 S ERROR="This order may not be renewed: "_$S(+X>1:"Inactive orderable item",1:$P(X,U,2)) Q
"RTN","ORCACT01",82,0)
 ;I DG="TPN" S ERROR="TPN orders may not be renewed!" Q
"RTN","ORCACT01",83,0)
 S X=$$ACTIVE^PSJORREN(+ORVP,PSIFN) Q:+X=1  ;Ok
"RTN","ORCACT01",84,0)
 I +X>1,$P(X,U,2) D RESET(+IFN,+$P(X,U,2)) Q  ;replace OI
"RTN","ORCACT01",85,0)
 S ERROR="This order may not be renewed: "_$P(X,U,2)
"RTN","ORCACT01",86,0)
 Q
"RTN","ORCACT01",87,0)
 ;
"RTN","ORCACT01",88,0)
XX ; -- edit/change--
"RTN","ORCACT01",89,0)
 I PKG="RA",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Radiology cannot be changed!" Q
"RTN","ORCACT01",90,0)
 I PKG="LR",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Lab cannot be changed!" Q
"RTN","ORCACT01",91,0)
 I PKG="FH",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Dietetics cannot be changed!" Q
"RTN","ORCACT01",92,0)
 I PKG="GMRC",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Consults cannot be changed!" Q
"RTN","ORCACT01",93,0)
 I DG="TPN" S ERROR="TPN orders may not be changed!" Q
"RTN","ORCACT01",94,0)
 I ORDSTS=3 S ERROR="Orders on hold may not be changed!" Q
"RTN","ORCACT01",95,0)
 I DG="UD RX",$$NTBG(+IFN) S ERROR="This order has been marked 'Not to be Given' and may not be changed!" Q
"RTN","ORCACT01",96,0)
 I $O(^OR(100,+IFN,2,0)) S ERROR="Complex orders may not be changed!" Q
"RTN","ORCACT01",97,0)
 I $P(OR3,U,9) D  Q:$D(ERROR)
"RTN","ORCACT01",98,0)
 . Q:$$VALUE^ORX8(+IFN,"SCHEDULE",1,"E")="NOW"  ;NOW ok
"RTN","ORCACT01",99,0)
 . Q:'$O(^OR(100,+$P(OR3,U,9),4.5,"ID","CONJ",0))  ;no conj=1dose/ok
"RTN","ORCACT01",100,0)
 . S ERROR="Complex orders may not be changed!" Q
"RTN","ORCACT01",101,0)
 I $P(OR3,U,6) S ERROR="This order may not be changed - a "_$S($P($G(^OR(100,+$P(OR3,U,6),3)),U,11)=1:"change",1:"renewal")_" order already exists!" Q
"RTN","ORCACT01",102,0)
 I $P(OR3,U,11)=2 D  Q:$D(ERROR)
"RTN","ORCACT01",103,0)
 . I (ORDSTS=10!(ORDSTS=11)),DG'="O RX" S ERROR="Unreleased renewals may not be changed!" Q
"RTN","ORCACT01",104,0)
 . I PKG="PS",ORDSTS=5 S ERROR="Pending renewals may not be changed!" Q
"RTN","ORCACT01",105,0)
 I $$INACTIVE S ERROR="Orders for inactive orderables may not be changed; please enter a new order!" Q
"RTN","ORCACT01",106,0)
 I PKG="PS",'$$MEDOK S ERROR="This drug may not be ordered!" Q
"RTN","ORCACT01",107,0)
 I DG="O RX",$O(^OR(100,+IFN,4.5,"ID","MISC",0)) D DOSES^ORCACT02(+IFN) ;old form
"RTN","ORCACT01",108,0)
 Q
"RTN","ORCACT01",109,0)
 ;
"RTN","ORCACT01",110,0)
INACTIVE() ; -- Returns 1 or 0, if OI is now inactive
"RTN","ORCACT01",111,0)
 N I,OI,PREOI,PREOIX,X,Y,ORNOW,DD,PSOI S Y=0,ORNOW=$$NOW^XLFDT
"RTN","ORCACT01",112,0)
 S I=0 F  S I=+$O(^OR(100,+IFN,4.5,"ID","ORDERABLE",I)) Q:I'>0  D  Q:Y
"RTN","ORCACT01",113,0)
 . S OI=+$G(^OR(100,+IFN,4.5,I,1))
"RTN","ORCACT01",114,0)
 . I OI S X=$G(^ORD(101.43,OI,.1)) I X,X<ORNOW S Y=1
"RTN","ORCACT01",115,0)
 I Y,PKG="PS",DG'="IV RX" D  ;replacement OI?
"RTN","ORCACT01",116,0)
 . S I=+$O(^OR(100,+IFN,4.5,"ID","DRUG",0)) Q:I'>0  ;first
"RTN","ORCACT01",117,0)
 . S DD=+$G(^OR(100,+IFN,4.5,I,1)) Q:DD'>0  Q:$G(OI)'>0
"RTN","ORCACT01",118,0)
 . S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2),X=$$ITEM^PSSUTIL1(PSOI,DD)
"RTN","ORCACT01",119,0)
 . Q:X'>0  S X=+$O(^ORD(101.43,"ID",+$P(X,U,2)_";99PSP",0)) Q:X'>0
"RTN","ORCACT01",120,0)
 . I $G(^ORD(101.43,X,.1)),$G(^(.1))<ORNOW Q  ;make sure new OI is active
"RTN","ORCACT01",121,0)
 . S I=+$O(^OR(100,+IFN,4.5,"ID","ORDERABLE",0))
"RTN","ORCACT01",122,0)
 . IF I D
"RTN","ORCACT01",123,0)
 . . S PREOI=$G(^OR(100,+IFN,4.5,I,1))
"RTN","ORCACT01",124,0)
 . . S PREOIX=$O(^OR(100,+IFN,.1,"B",PREOI,0))
"RTN","ORCACT01",125,0)
 . . K ^OR(100,+IFN,.1,"B",PREOI,PREOIX)
"RTN","ORCACT01",126,0)
 . . S ^OR(100,+IFN,.1,"B",X,PREOIX)=""
"RTN","ORCACT01",127,0)
 . . S ^OR(100,+IFN,.1,PREOIX,0)=X
"RTN","ORCACT01",128,0)
 . . S ^OR(100,+IFN,4.5,I,1)=X
"RTN","ORCACT01",129,0)
 . . S Y=0 ;reset
"RTN","ORCACT01",130,0)
 Q Y
"RTN","ORCACT01",131,0)
 ;
"RTN","ORCACT01",132,0)
MEDOK() ; -- Returns 1 or 0, if med OI usage=Y
"RTN","ORCACT01",133,0)
 N Y,OI,ORPS,X S Y=1,X=$P(OR0,U,12)
"RTN","ORCACT01",134,0)
 I (DG="SPLY")!(DG="O RX")!(DG="I RX")!(DG="UD RX") D
"RTN","ORCACT01",135,0)
 . S OI=+$O(^OR(100,+IFN,4.5,"ID","ORDERABLE",0))
"RTN","ORCACT01",136,0)
 . S OI=+$G(^OR(100,+IFN,4.5,OI,1))
"RTN","ORCACT01",137,0)
 . S ORPS=$G(^ORD(101.43,OI,"PS"))
"RTN","ORCACT01",138,0)
 I DG="SPLY",'$P(ORPS,U,5) S Y=0
"RTN","ORCACT01",139,0)
 I DG="O RX",'(X="O"&$P(ORPS,U,2)),'(X="I"&($P(ORPS,U)=2)) S Y=0
"RTN","ORCACT01",140,0)
 I DG="I RX"!(DG="UD RX"),'$P(ORPS,U) S Y=0
"RTN","ORCACT01",141,0)
 I DG="IV RX" D
"RTN","ORCACT01",142,0)
 . N I,X0,X1 S I=0
"RTN","ORCACT01",143,0)
 . F  S I=+$O(^OR(100,+IFN,4.5,"ID","ORDERABLE",I)) Q:I<1  D  Q:Y<1
"RTN","ORCACT01",144,0)
 .. S X0=$G(^OR(100,+IFN,4.5,I,0)),X1=+$G(^(1))
"RTN","ORCACT01",145,0)
 .. I $P($G(^ORD(101.41,+$P(X0,U,2),0)),U)["ADDITIVE" S:'$P($G(^ORD(101.43,X1,"PS")),U,4) Y=0 Q
"RTN","ORCACT01",146,0)
 .. S:'$P($G(^ORD(101.43,X1,"PS")),U,3) Y=0
"RTN","ORCACT01",147,0)
 Q Y
"RTN","ORCACT01",148,0)
 ;
"RTN","ORCACT01",149,0)
IV() ; -- IV order, either Inpt or Fluid?
"RTN","ORCACT01",150,0)
 I DG="IV RX" Q 1
"RTN","ORCACT01",151,0)
 N I,OI,X S I=+$O(^OR(100,IFN,4.5,"ID","ORDERABLE",0))
"RTN","ORCACT01",152,0)
 S OI=+$G(^OR(100,IFN,4.5,+I,1)),X=$P($G(^ORD(101.43,+OI,"PS")),U)
"RTN","ORCACT01",153,0)
 Q (X>1)
"RTN","ORCACT01",154,0)
 ;
"RTN","ORCACT01",155,0)
NTBG(ORIFN) ; -- Inpt order marked as 'Not to be Given'?
"RTN","ORCACT01",156,0)
 N PSIFN,Y,ORI,ORCH S Y=""
"RTN","ORCACT01",157,0)
 S PSIFN=$G(^OR(100,+ORIFN,4)) I PSIFN>0 Q $$ENNG^PSJORUT2(+ORVP,PSIFN)
"RTN","ORCACT01",158,0)
 S ORI=0 F  S ORI=$O(^OR(100,+ORIFN,2,ORI)) Q:ORI'>0  S ORCH=+$G(^(ORI,0)),PSIFN=$G(^OR(100,ORCH,4)) I PSIFN>0 S Y=$$ENNG^PSJORUT2(+ORVP,PSIFN) Q:Y
"RTN","ORCACT01",159,0)
 Q Y
"RTN","ORCACT01",160,0)
 ;
"RTN","ORCACT01",161,0)
RESET(IFN,NEWOI)   ; -- Update OI if changed before renewing
"RTN","ORCACT01",162,0)
 Q:'$G(IFN)  Q:'$D(^OR(100,+IFN,0))  Q:'$G(NEWOI)
"RTN","ORCACT01",163,0)
 N I,ORIT S ORIT=+$O(^ORD(101.43,"ID",NEWOI_";99PSP",0)) Q:ORIT'>0
"RTN","ORCACT01",164,0)
 S I=$O(^OR(100,+IFN,4.5,"ID","ORDERABLE",0))
"RTN","ORCACT01",165,0)
 S:I ^OR(100,+IFN,4.5,I,1)=ORIT
"RTN","ORCACT01",166,0)
 Q
"RTN","ORCSAVE")
0^3^B58749880
"RTN","ORCSAVE",1,0)
ORCSAVE ;SLC/MKB/JDL-Save ;10/17/02  10:39
"RTN","ORCSAVE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,56,70,73,92,94,116,141,163,187**;Dec 17, 1997
"RTN","ORCSAVE",3,0)
NEW(ORDIALOG,ORDG,ORPKG,ORCAT,OREVENT,ORDUZ,ORLOG) ; -- New order
"RTN","ORCSAVE",4,0)
 ; Returns ORIFN = [new] order number, if created/saved
"RTN","ORCSAVE",5,0)
 D EN
"RTN","ORCSAVE",6,0)
 Q
"RTN","ORCSAVE",7,0)
 ;
"RTN","ORCSAVE",8,0)
XX ; -- save new/unreleased edited order into Orders file
"RTN","ORCSAVE",9,0)
 ;    Requires: ORDIALOG() = array of dialog values
"RTN","ORCSAVE",10,0)
 ;              ORIFN      = IFN of original order that was edited
"RTN","ORCSAVE",11,0)
 ;  
"RTN","ORCSAVE",12,0)
 N OLDIFN S ORIFN=+ORIFN
"RTN","ORCSAVE",13,0)
 I $S($P(^OR(100,ORIFN,3),U,3)=11:0,$P(^(3),U,3)'=10:1,$P(^(8,1,0),U,4)=2:0,1:1) S OLDIFN=ORIFN K ORIFN ; create new order if released or delayed&signed
"RTN","ORCSAVE",14,0)
 D EN Q:'ORIFN  S:'$G(ORDA) ORDA=1
"RTN","ORCSAVE",15,0)
 I $G(OLDIFN) D  ;save links between orders
"RTN","ORCSAVE",16,0)
 . S $P(^OR(100,ORIFN,3),U,5)=OLDIFN,$P(^(3),U,11)=1
"RTN","ORCSAVE",17,0)
 . S $P(^OR(100,OLDIFN,3),U,6)=ORIFN S:$D(^(5)) ^OR(100,ORIFN,5)=^OR(100,OLDIFN,5)
"RTN","ORCSAVE",18,0)
 Q
"RTN","ORCSAVE",19,0)
 ;
"RTN","ORCSAVE",20,0)
RN ; -- save new/unreleased renewal order into Orders file
"RTN","ORCSAVE",21,0)
 ;    Requires: ORDIALOG() = array of new dialog values
"RTN","ORCSAVE",22,0)
 ;              ORIFN      = IFN of original order that was renewed
"RTN","ORCSAVE",23,0)
 ; 
"RTN","ORCSAVE",24,0)
 N OLDIFN S OLDIFN=+ORIFN K ORIFN
"RTN","ORCSAVE",25,0)
 D EN Q:'ORIFN  S:'$G(ORDA) ORDA=1
"RTN","ORCSAVE",26,0)
 S $P(^OR(100,ORIFN,3),U,5)=OLDIFN,$P(^(3),U,11)=2
"RTN","ORCSAVE",27,0)
 S $P(^OR(100,OLDIFN,3),U,6)=ORIFN S:$D(^(5)) ^OR(100,ORIFN,5)=^OR(100,OLDIFN,5)
"RTN","ORCSAVE",28,0)
 Q
"RTN","ORCSAVE",29,0)
 ;
"RTN","ORCSAVE",30,0)
EN ; -- save new/unreleased order in ORDIALOG() into Orders file
"RTN","ORCSAVE",31,0)
 ;    Requires: ORVP, ORNP [and ORL, ORTS, ORAPPT if available]
"RTN","ORCSAVE",32,0)
 ;
"RTN","ORCSAVE",33,0)
 N PKG,NOW,NODE,CNT,CDL,I,X,STS,SIGNREQD,LOC,TRSPEC,NATR,CATG,DG,LOG,USR
"RTN","ORCSAVE",34,0)
 Q:'$G(ORVP)  Q:'$G(ORDIALOG)  Q:'$D(^ORD(101.41,+ORDIALOG,0))
"RTN","ORCSAVE",35,0)
 S NOW=$$NOW^XLFDT,SIGNREQD=+$P(^ORD(101.41,+ORDIALOG,0),U,6)
"RTN","ORCSAVE",36,0)
 S CATG=$S($L($G(ORCAT)):ORCAT,1:$S($$INPT^ORCD:"I",1:"O"))
"RTN","ORCSAVE",37,0)
 S PKG=$S($G(ORPKG):ORPKG,1:$P(^ORD(101.41,+ORDIALOG,0),U,7))
"RTN","ORCSAVE",38,0)
 I $G(ORIFN),$D(^OR(100,ORIFN,0)) S STS=$P(^(3),U,3) G EN2 ; unrel order
"RTN","ORCSAVE",39,0)
 S DG=$S($G(ORDG):+ORDG,1:$P(^ORD(101.41,+ORDIALOG,0),U,5))
"RTN","ORCSAVE",40,0)
 I $G(OREVENT),$$GET1^DIQ(9.4,+PKG_",",1)'="PSO" S LOC="",TRSPEC=""
"RTN","ORCSAVE",41,0)
 E  S LOC=$G(ORL),TRSPEC=$G(ORTS)
"RTN","ORCSAVE",42,0)
 S LOG=$S($G(ORLOG):ORLOG,1:+$E(NOW,1,12)),USR=$S($G(ORDUZ):ORDUZ,1:DUZ)
"RTN","ORCSAVE",43,0)
 S NATR=+$O(^ORD(100.02,"C","E",0)) ;assume Elec Entered until changed
"RTN","ORCSAVE",44,0)
 S STS=$S($G(OREVENT):10,1:11),ORIFN=$$NEXTIFN Q:'ORIFN
"RTN","ORCSAVE",45,0)
EN1 S ^OR(100,ORIFN,0)=ORIFN_U_ORVP_U_U_$G(ORNP)_U_+ORDIALOG_";ORD(101.41,^"_USR_U_LOG_U_U_U_LOC_U_DG_U_CATG_U_TRSPEC_U_PKG_U_U_SIGNREQD_U_$G(OREVENT)_U_$G(ORAPPT)
"RTN","ORCSAVE",46,0)
 S ^OR(100,ORIFN,3)=LOG_"^90^"_STS_U_$S($G(ORIT):ORIT_";ORD(101.41,",1:"")_U_$G(ORDIALOG("PREV"))_"^^1^^^^0"
"RTN","ORCSAVE",47,0)
 S ^OR(100,ORIFN,8,0)="^100.008DA^1^1",^OR(100,ORIFN,8,1,0)=LOG_"^NW^"_$G(ORNP)_U_$S(SIGNREQD:2,1:3)_"^^^^^^^^"_NATR_U_USR_"^1^"_STS,^OR(100,ORIFN,8,"C","NW",1)=""
"RTN","ORCSAVE",48,0)
 S ^OR(100,"AF",LOG,ORIFN,1)=""
"RTN","ORCSAVE",49,0)
 S ^OR(100,"ACT",ORVP,9999999-LOG,+DG,ORIFN,1)=""
"RTN","ORCSAVE",50,0)
 S:STS'=10 ^OR(100,"AC",ORVP,9999999-LOG,ORIFN,1)=""
"RTN","ORCSAVE",51,0)
 S:SIGNREQD ^OR(100,"AS",ORVP,9999999-LOG,ORIFN,1)=""
"RTN","ORCSAVE",52,0)
 S:$G(OREVENT) ^OR(100,"AEVNT",ORVP,OREVENT,ORIFN)=""
"RTN","ORCSAVE",53,0)
EN2 S ORIFN=+ORIFN D RESPONSE ; save responses
"RTN","ORCSAVE",54,0)
 I $P(^OR(100,ORIFN,0),"^",5) D  ;Copy orders PKI fix
"RTN","ORCSAVE",55,0)
 . N OI
"RTN","ORCSAVE",56,0)
 . S OI=+$O(^OR(100,ORIFN,4.5,"ID","ORDERABLE",0)),OI=+$G(^OR(100,ORIFN,4.5,OI,1)) Q:'OI
"RTN","ORCSAVE",57,0)
 . I PKG'=$O(^DIC(9.4,"B","OUTPATIENT PHARMACY",0)) Q
"RTN","ORCSAVE",58,0)
 . D PKI^ORWDPS1(.ORY,OI,CATG,+ORVP,$$GET^XPAR("ALL^USR.`"_DUZ,"ORWOR PKI USE",1,"Q"))
"RTN","ORCSAVE",59,0)
 . I $E($G(ORY))=2 S ORDEA=ORY
"RTN","ORCSAVE",60,0)
 K ^OR(100,ORIFN,8,1,.1) D ORDTEXT^ORCSAVE1(ORIFN_";1") ; order text
"RTN","ORCSAVE",61,0)
 S NODE=$G(^OR(100,ORIFN,0)) D  S ^OR(100,ORIFN,0)=NODE
"RTN","ORCSAVE",62,0)
 . S $P(NODE,U,4)=$G(ORNP) ; COST?
"RTN","ORCSAVE",63,0)
 . S I=$O(^OR(100,ORIFN,4.5,"ID","LOCATION",0))
"RTN","ORCSAVE",64,0)
 . I I,$P(NODE,U,10) S X=+$G(^OR(100,ORIFN,4.5,+I,1)) S:X $P(NODE,U,10)=X_";SC(" ;reset Loc if prev value
"RTN","ORCSAVE",65,0)
 . S I=$O(^OR(100,ORIFN,4.5,"ID","CLASS",0))
"RTN","ORCSAVE",66,0)
 . I I S X=$G(^OR(100,ORIFN,4.5,+I,1)) S:"^I^O^"[(U_X_U) $P(NODE,U,12)=X
"RTN","ORCSAVE",67,0)
 S $P(^OR(100,ORIFN,3),U)=NOW
"RTN","ORCSAVE",68,0)
 K ^OR(100,ORIFN,9) I $G(ORCHECK) D  ; save order checks
"RTN","ORCSAVE",69,0)
 . S (CNT,CDL)=0 F  S CDL=$O(ORCHECK("NEW",CDL)) Q:CDL'>0  S I=0 D
"RTN","ORCSAVE",70,0)
 . . F  S I=$O(ORCHECK("NEW",CDL,I)) Q:I'>0  S X=ORCHECK("NEW",CDL,I) D
"RTN","ORCSAVE",71,0)
 . . . S CNT=CNT+1,^OR(100,ORIFN,9,"B",+X,CNT)=""
"RTN","ORCSAVE",72,0)
 . . . S ^OR(100,ORIFN,9,CNT,0)=$P(X,U,1,2),^(1)=$E($P(X,U,3),1,245)
"RTN","ORCSAVE",73,0)
 . S:CNT ^OR(100,ORIFN,9,0)="^100.09PA^"_CNT_U_CNT
"RTN","ORCSAVE",74,0)
 K ORDEA
"RTN","ORCSAVE",75,0)
ENQ Q
"RTN","ORCSAVE",76,0)
 ;
"RTN","ORCSAVE",77,0)
NEXTIFN() ; -- Returns next available ORIFN
"RTN","ORCSAVE",78,0)
 N I,HDR,LAST,TOTAL,DA
"RTN","ORCSAVE",79,0)
 F I=1:1:10 L +^OR(100,0):1 Q:$T  H 2
"RTN","ORCSAVE",80,0)
 I '$T Q "^"
"RTN","ORCSAVE",81,0)
 S HDR=$G(^OR(100,0)),TOTAL=+$P(HDR,U,4),LAST=$O(^OR(100,"?"),-1)
"RTN","ORCSAVE",82,0)
 S I=LAST\1 F I=(I+1):1 Q:'$D(^OR(100,I,0))
"RTN","ORCSAVE",83,0)
 S DA=I,^OR(100,DA,0)=DA,$P(HDR,U,3,4)=DA_U_(TOTAL+1)
"RTN","ORCSAVE",84,0)
 S ^OR(100,0)=HDR L -^OR(100,0)
"RTN","ORCSAVE",85,0)
 Q DA
"RTN","ORCSAVE",86,0)
 ;
"RTN","ORCSAVE",87,0)
RESPONSE ; -- Save responses in ORDIALOG() into ^OR(100,ORIFN,4.5)
"RTN","ORCSAVE",88,0)
 N PROMPT,CNT,ITM,TYPE,INST,VALUE,I,START,PAT,X
"RTN","ORCSAVE",89,0)
 S PAT=$P(^OR(100,ORIFN,0),U,2),START=$P(^(0),U,8) K ^(4.5)
"RTN","ORCSAVE",90,0)
 S (PROMPT,CNT)=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:PROMPT'>0  D
"RTN","ORCSAVE",91,0)
 . S ITM=$G(ORDIALOG(PROMPT)) Q:'ITM
"RTN","ORCSAVE",92,0)
 . S TYPE=$E($G(ORDIALOG(PROMPT,0))) Q:'$L(TYPE)
"RTN","ORCSAVE",93,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  D
"RTN","ORCSAVE",94,0)
 . . S VALUE=$G(ORDIALOG(PROMPT,INST)) Q:VALUE=""  S CNT=CNT+1
"RTN","ORCSAVE",95,0)
 . . S ^OR(100,ORIFN,4.5,CNT,0)=+ITM_U_PROMPT_U_INST_U_$P(ITM,U,2)
"RTN","ORCSAVE",96,0)
 . . S:$L($P(ITM,U,2)) ^OR(100,ORIFN,4.5,"ID",$P(ITM,U,2),CNT)=""
"RTN","ORCSAVE",97,0)
 . . S:TYPE'="W" ^OR(100,ORIFN,4.5,CNT,1)=VALUE
"RTN","ORCSAVE",98,0)
 . . M:TYPE="W" ^OR(100,ORIFN,4.5,CNT,2)=@VALUE ; array root
"RTN","ORCSAVE",99,0)
 S ^OR(100,ORIFN,4.5,0)="^100.045A^"_CNT_U_CNT
"RTN","ORCSAVE",100,0)
R1 ; [Reset] Orderables
"RTN","ORCSAVE",101,0)
 I $D(^OR(100,ORIFN,.1)) S I=0 F  S I=$O(^OR(100,ORIFN,.1,I)) Q:I'>0  S X=$G(^(I,0)) I X,PAT,START K ^OR(100,"AOI",X,PAT,9999999-START,ORIFN) ; kill xref
"RTN","ORCSAVE",102,0)
 K ^OR(100,ORIFN,.1) I $D(^OR(100,ORIFN,4.5,"ID","ORDERABLE")) D
"RTN","ORCSAVE",103,0)
 . S (I,CNT)=0
"RTN","ORCSAVE",104,0)
 . F  S I=$O(^OR(100,ORIFN,4.5,"ID","ORDERABLE",I)) Q:I'>0  D
"RTN","ORCSAVE",105,0)
 . . S X=$G(^OR(100,ORIFN,4.5,I,1)) Q:'X
"RTN","ORCSAVE",106,0)
 . . S CNT=CNT+1,^OR(100,ORIFN,.1,CNT,0)=X,^OR(100,ORIFN,.1,"B",X,CNT)=""
"RTN","ORCSAVE",107,0)
 . . I PAT,START S ^OR(100,"AOI",X,PAT,9999999-START,ORIFN)=""
"RTN","ORCSAVE",108,0)
 . S ^OR(100,ORIFN,.1,0)="^100.001PA^"_CNT_U_CNT
"RTN","ORCSAVE",109,0)
 Q
"RTN","ORCSAVE",110,0)
 ;
"RTN","ORCSAVE",111,0)
RESUME(IFN) ; -- add Response nodes for RESUME tray service
"RTN","ORCSAVE",112,0)
 ; S ^OR(100,+IFN,4.5,<next>,0)=DT_"^^^RESUME",^(1)=1
"RTN","ORCSAVE",113,0)
 ;
"RTN","ORCSAVE",114,0)
 N X,Y,DA,DIC
"RTN","ORCSAVE",115,0)
 S DIC="^OR(100,"_+IFN_",4.5,",DIC(0)="LX",DA(1)=+IFN,X=DT
"RTN","ORCSAVE",116,0)
 S DIC("DR")=".04///RESUME",DIC("P")=$P(^DD(100,4.5,0),U,2)
"RTN","ORCSAVE",117,0)
 D ^DIC S:Y ^OR(100,+IFN,4.5,+Y,1)=1
"RTN","ORCSAVE",118,0)
 Q
"RTN","ORCSAVE",119,0)
 ;
"RTN","ORCSAVE",120,0)
PROVIDER(ORDER,PROV) ; -- Change PROVider assigned to ORDER
"RTN","ORCSAVE",121,0)
 Q:'$G(ORDER)  Q:'$G(PROV)
"RTN","ORCSAVE",122,0)
 N ORACT S ORACT=+$P(ORDER,";",2) S:'ORACT ORACT=1
"RTN","ORCSAVE",123,0)
 S $P(^OR(100,+ORDER,8,ORACT,0),U,3)=PROV
"RTN","ORCSAVE",124,0)
 S:ORACT=1 $P(^OR(100,+ORDER,0),U,4)=PROV
"RTN","ORCSAVE",125,0)
 Q
"RTN","ORCSAVE",126,0)
 ;
"RTN","ORCSAVE",127,0)
ACTION(CODE,DA,PROV,REASON,WHEN,WHO) ; -- save new action
"RTN","ORCSAVE",128,0)
 N NEXT,TOTAL,HDR,LAST,X,PAT,DGRP,SIG,NATR,TXT S DA=+DA
"RTN","ORCSAVE",129,0)
 Q:'$D(^OR(100,DA,0)) 0 Q:$G(CODE)'?2U 0
"RTN","ORCSAVE",130,0)
 S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12) S:'$G(WHO) WHO=DUZ
"RTN","ORCSAVE",131,0)
 S NATR=+$O(^ORD(100.02,"C","E",0)) ;assume Elec Entered until changed
"RTN","ORCSAVE",132,0)
 S PAT=$P(^OR(100,DA,0),U,2),DGRP=$P(^(0),U,11),SIG=$P(^(0),U,16),X=+$P($G(^(3)),U,7),HDR=$G(^(8,0))
"RTN","ORCSAVE",133,0)
 S:X'>0 X=1 S TXT=$P($G(^OR(100,DA,8,X,0)),U,14) ;current actn's txt ptr
"RTN","ORCSAVE",134,0)
 S:HDR="" HDR="^100.008DA^^" S TOTAL=+$P(HDR,U,4)
"RTN","ORCSAVE",135,0)
 S LAST=$O(^OR(100,DA,8,"C",CODE,"?"),-1) I LAST D
"RTN","ORCSAVE",136,0)
 . S X=$G(^OR(100,DA,8,LAST,0)) Q:$P(X,U,15)'=11  Q:$P(X,U,4)'=2
"RTN","ORCSAVE",137,0)
 . S NEXT=LAST I PAT,$P(X,U) D  ; kill old xref entries
"RTN","ORCSAVE",138,0)
 . . K:DGRP ^OR(100,"ACT",PAT,(9999999-$P(X,U)),DGRP,DA,NEXT)
"RTN","ORCSAVE",139,0)
 . . K ^OR(100,"AC",PAT,(9999999-$P(X,U)),DA,NEXT),^OR(100,"AS",PAT,(9999999-$P(X,U)),DA,NEXT),^OR(100,"AF",$P(X,U),DA,NEXT)
"RTN","ORCSAVE",140,0)
 S:'$G(NEXT) NEXT=$O(^OR(100,DA,8,"?"),-1)+1,TOTAL=TOTAL+1
"RTN","ORCSAVE",141,0)
 S ^OR(100,DA,8,NEXT,0)=WHEN_U_CODE_U_$G(PROV)_U_$S(SIG:2,1:3)_"^^^^^^^^"_NATR_U_WHO_U_TXT_"^11",^OR(100,DA,8,"C",CODE,NEXT)=""
"RTN","ORCSAVE",142,0)
 S ^OR(100,"AF",WHEN,DA,NEXT)=""
"RTN","ORCSAVE",143,0)
 I PAT,DGRP S ^OR(100,"ACT",PAT,9999999-WHEN,DGRP,DA,NEXT)=""
"RTN","ORCSAVE",144,0)
 I PAT S ^OR(100,"AC",PAT,9999999-WHEN,DA,NEXT)=""
"RTN","ORCSAVE",145,0)
 I SIG S ^OR(100,"AS",PAT,9999999-WHEN,DA,NEXT)=""
"RTN","ORCSAVE",146,0)
 S:$L($G(REASON)) ^OR(100,DA,8,NEXT,1)=REASON
"RTN","ORCSAVE",147,0)
 S $P(HDR,U,3,4)=NEXT_U_TOTAL,^OR(100,DA,8,0)=HDR
"RTN","ORCSAVE",148,0)
 Q NEXT
"RTN","ORCSAVE",149,0)
 ;
"RTN","ORCSAVE",150,0)
SET(DLG) ; -- Create new parent for order set ORDIALOG
"RTN","ORCSAVE",151,0)
 ; Returns ORPIFN = ifn of new parent order for set
"RTN","ORCSAVE",152,0)
 ;
"RTN","ORCSAVE",153,0)
 Q:'$G(ORVP)  Q:'$G(DLG)  N OR0,PKG,NOW,CATG,STS,ORLOC,TRSPEC,X
"RTN","ORCSAVE",154,0)
 S OR0=$G(^ORD(101.41,DLG,0)) Q:OR0=""  S ORPIFN=$$NEXTIFN Q:'ORPIFN
"RTN","ORCSAVE",155,0)
 S PKG=$O(^DIC(9.4,"C","OR",0)),CATG=$S($$INPT^ORCD:"I",1:"O"),STS=$S($G(OREVENT):10,1:11),NOW=$S($G(ORSLOG):ORSLOG,1:+$E($$NOW^XLFDT,1,12))
"RTN","ORCSAVE",156,0)
 I $G(OREVENT) S ORLOC="",TRSPEC=""
"RTN","ORCSAVE",157,0)
 S ^OR(100,ORPIFN,0)=ORPIFN_U_ORVP_U_U_$G(ORNP)_U_DLG_";ORD(101.41,^"_DUZ_U_NOW_U_U_U_ORLOC_U_U_CATG_U_TRSPEC_U_PKG_"^^^"_$G(OREVENT),^(3)=NOW_"^90^"_STS_U_$S($G(ORIT):ORIT_"ORD(101.41,",1:"")_"^^^1^^^^0^^"_+$P(OR0,U,6)
"RTN","ORCSAVE",158,0)
 S ^OR(100,ORPIFN,8,0)="^100.008DA^1^1",^(1,0)=NOW_"^NW^"_$G(ORNP)_"^^^^^^^^^^"_DUZ_"^^"_STS,^OR(100,ORPIFN,8,"C","NW",1)="",^OR(100,"AF",NOW,ORPIFN,1)=""
"RTN","ORCSAVE",159,0)
 S ^OR(100,"ACT",ORVP,9999999-NOW,ORPIFN,1)=""
"RTN","ORCSAVE",160,0)
 S:STS=11 ^OR(100,"AC",ORVP,9999999-NOW,ORPIFN,1)=""
"RTN","ORCSAVE",161,0)
 ; AEVNT ??
"RTN","ORCSAVE",162,0)
 S ^OR(100,ORPIFN,1,0)="^100.011^1^1",^(1,0)=$P(OR0,U,2) ; Order text
"RTN","ORCSAVE",163,0)
 Q
"RTN","ORCSAVE1")
0^15^B30430470
"RTN","ORCSAVE1",1,0)
ORCSAVE1 ; SLC/MKB - Save Order Text ;7/21/97  15:47
"RTN","ORCSAVE1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**92,132,141,163,187**;Dec 17, 1997
"RTN","ORCSAVE1",3,0)
 ;
"RTN","ORCSAVE1",4,0)
 ; ^ORD(101.41,+ORDIALOG,10,ITM,2)=Seq#^Format^Omit^Lead Text^Trail Text
"RTN","ORCSAVE1",5,0)
 ; ^ORD(101.41,+ORDIALOG,10,"ATXT",Seq#,ITM)=""
"RTN","ORCSAVE1",6,0)
 ;
"RTN","ORCSAVE1",7,0)
ORDTEXT(ORDER) ; -- Build and save order text from ORDIALOG() into ORDER
"RTN","ORCSAVE1",8,0)
 N ORTX,I,IFN,ACT,ORSET
"RTN","ORCSAVE1",9,0)
 D ORTX(240) Q:'$G(ORTX)
"RTN","ORCSAVE1",10,0)
 S IFN=+ORDER,ACT=+$P(ORDER,";",2) S:ACT'>0 ACT=1
"RTN","ORCSAVE1",11,0)
 F I=1:1:ORTX S ^OR(100,IFN,8,ACT,.1,I,0)=ORTX(I)
"RTN","ORCSAVE1",12,0)
 S ^OR(100,IFN,8,ACT,.1,0)=U_U_ORTX_U_ORTX_U_DT_U
"RTN","ORCSAVE1",13,0)
 I $E($G(ORDEA))=2 D  ;PKI Drug Schedule - in future may allow 2-5
"RTN","ORCSAVE1",14,0)
 . S ORSET=0
"RTN","ORCSAVE1",15,0)
 . D DIGTEXT(IFN,ORDEA)
"RTN","ORCSAVE1",16,0)
 . F I=1:1:ORSET S ^OR(100,IFN,8,ACT,.2,I,0)=ORSET(I)
"RTN","ORCSAVE1",17,0)
 . I ORSET>0 S ^OR(100,IFN,8,ACT,.2,0)=U_U_ORSET_U_ORSET_U_DT_U
"RTN","ORCSAVE1",18,0)
 Q
"RTN","ORCSAVE1",19,0)
 ;
"RTN","ORCSAVE1",20,0)
ORTX(WIDTH) ; -- May enter here to return order text in ORTX()
"RTN","ORCSAVE1",21,0)
 N ORP,SEQ,ITEM,ORMAX
"RTN","ORCSAVE1",22,0)
 K ORTX S ORMAX=$S(+$G(WIDTH):WIDTH,1:240)
"RTN","ORCSAVE1",23,0)
 D EXT ; get external form of values
"RTN","ORCSAVE1",24,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"ATXT",SEQ)) Q:SEQ'>0  S ITEM=$O(^(SEQ,0)) D TEXT(ITEM)
"RTN","ORCSAVE1",25,0)
 Q
"RTN","ORCSAVE1",26,0)
 ;
"RTN","ORCSAVE1",27,0)
TEXT(DA) ; -- Includes text of item DA
"RTN","ORCSAVE1",28,0)
 Q:$P(^ORD(101.41,ORDIALOG,10,DA,0),U,11)  Q:'$O(ORP(DA,0))
"RTN","ORCSAVE1",29,0)
 N NEWLN,INST,TYPE,PTR,CHSEQ,CHILD,ORI,X,Y
"RTN","ORCSAVE1",30,0)
 S:'$G(ORTX) ORTX=1,ORTX(1)=""
"RTN","ORCSAVE1",31,0)
 S NEWLN=+$P(ORP(DA),U,4),INST=$O(ORP(DA,0)),Y=""
"RTN","ORCSAVE1",32,0)
 I NEWLN,$L(ORTX(ORTX)) S ORTX=ORTX+1,ORTX(ORTX)="",Y=" "
"RTN","ORCSAVE1",33,0)
 S X=$$GETXT($P(ORP(DA),U,2)) I $L(X) S X=Y_X,Y="" D TXT^ORCHTAB ;lead tx
"RTN","ORCSAVE1",34,0)
 S PTR=+ORP(DA),TYPE=$E(ORDIALOG(PTR,0))
"RTN","ORCSAVE1",35,0)
TXT1 I TYPE'="W" S X=Y_ORP(DA,INST),Y="" D TXT^ORCHTAB
"RTN","ORCSAVE1",36,0)
 I TYPE="W" S ORI=0 F  S ORI=$O(ORP(DA,INST,ORI)) Q:ORI'>0  D  S Y=""
"RTN","ORCSAVE1",37,0)
 . N XX,X1
"RTN","ORCSAVE1",38,0)
 . S Y=$S(Y=" ":" ",$P(ORP(DA),U,5):" ",1:"") ;new line, or as stored
"RTN","ORCSAVE1",39,0)
 . S X=Y_ORP(DA,INST,ORI,0),Y=""
"RTN","ORCSAVE1",40,0)
 . S X1=$$UP^XLFSTR(X),XX=$$UP^XLFSTR(ORTX(ORTX))
"RTN","ORCSAVE1",41,0)
 . I XX[X1 Q
"RTN","ORCSAVE1",42,0)
 . I $E(X)'=" " D TXT^ORCHTAB Q  ; wrap
"RTN","ORCSAVE1",43,0)
 . S:$L(ORTX(ORTX)) ORTX=ORTX+1,ORTX(ORTX)="" ; force new line
"RTN","ORCSAVE1",44,0)
 . I X?1." " S ORTX(ORTX)=" ",ORTX=ORTX+1,ORTX(ORTX)="" ; blank line
"RTN","ORCSAVE1",45,0)
 . E  D TXT^ORCHTAB
"RTN","ORCSAVE1",46,0)
 D:$D(^ORD(101.41,+ORDIALOG,10,"DAD",PTR)) CHILD(PTR)
"RTN","ORCSAVE1",47,0)
 S INST=$O(ORP(DA,INST)) ; multiple?
"RTN","ORCSAVE1",48,0)
 I INST S ORTX(ORTX)=ORTX(ORTX)_",",Y="" S:NEWLN ORTX=ORTX+1,ORTX(ORTX)="",Y=" " G TXT1
"RTN","ORCSAVE1",49,0)
 S X=$$GETXT($P(ORP(DA),U,3)) D:$L(X) TXT^ORCHTAB ; trailing text
"RTN","ORCSAVE1",50,0)
 Q
"RTN","ORCSAVE1",51,0)
 ;
"RTN","ORCSAVE1",52,0)
CHILD(PARENT) ; -- add child values
"RTN","ORCSAVE1",53,0)
 N CHSEQ,CHILD S CHSEQ=0
"RTN","ORCSAVE1",54,0)
 F  S CHSEQ=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PARENT,CHSEQ)) Q:CHSEQ'>0  S CHILD=$O(^(CHSEQ,0)) D
"RTN","ORCSAVE1",55,0)
 . Q:'$L($G(ORP(CHILD,INST)))
"RTN","ORCSAVE1",56,0)
 . S X=$$GETXT($P(ORP(CHILD),U,2)) D:$L(X) TXT^ORCHTAB ; lead text
"RTN","ORCSAVE1",57,0)
 . S X=ORP(CHILD,INST) D TXT^ORCHTAB
"RTN","ORCSAVE1",58,0)
 . S X=$$GETXT($P(ORP(CHILD),U,3)) D:$L(X) TXT^ORCHTAB ; trail text
"RTN","ORCSAVE1",59,0)
 Q
"RTN","ORCSAVE1",60,0)
 ;
"RTN","ORCSAVE1",61,0)
GETXT(X) ; -- Returns text of X
"RTN","ORCSAVE1",62,0)
 I $E(X)="@" N VAR S VAR=$E(X,2,99),X=$G(@VAR) K @VAR ; variable w/text
"RTN","ORCSAVE1",63,0)
 Q X
"RTN","ORCSAVE1",64,0)
 ;
"RTN","ORCSAVE1",65,0)
EXT ; -- Build ORP(DA) array of external forms
"RTN","ORCSAVE1",66,0)
 N PROMPT,INST,DA,NODE,FORMAT,OMIT,X,Y,TYPE,PTR
"RTN","ORCSAVE1",67,0)
 S PROMPT=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:PROMPT'>0  D
"RTN","ORCSAVE1",68,0)
 . S DA=+$G(ORDIALOG(PROMPT)),TYPE=$E($G(ORDIALOG(PROMPT,0))) Q:'$L(TYPE)
"RTN","ORCSAVE1",69,0)
 . Q:'DA  S NODE=$G(^ORD(101.41,ORDIALOG,10,DA,2)),FORMAT=$P(NODE,U,2),OMIT=$P(NODE,U,3)
"RTN","ORCSAVE1",70,0)
 . S:$D(ORDIALOG(PROMPT,"FORMAT")) FORMAT=ORDIALOG(PROMPT,"FORMAT")
"RTN","ORCSAVE1",71,0)
 . I $E(FORMAT)="@" S PTR=+$E(FORMAT,2,99) Q:'PTR  ; Don't include
"RTN","ORCSAVE1",72,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  D
"RTN","ORCSAVE1",73,0)
 . . Q:ORDIALOG(PROMPT,INST)=""
"RTN","ORCSAVE1",74,0)
 . . I $E(FORMAT)="@",$L($G(ORDIALOG(PTR,INST))) Q  ; use PTR instead
"RTN","ORCSAVE1",75,0)
 . . I $E(FORMAT)="*" S PTR=+$E(FORMAT,2,99) I '$L($G(ORDIALOG(PTR,INST))) Q  ; must have PTR too
"RTN","ORCSAVE1",76,0)
 . . I $E(FORMAT)="=" S PTR=+$E(FORMAT,2,99) I PTR,$L($G(ORDIALOG(PTR,INST))) S Y=$$EXT^ORCD(PTR,INST),X=$$EXT^ORCD(PROMPT,INST) I (X=Y)!(X[Y)!(Y[X) Q
"RTN","ORCSAVE1",77,0)
 . . I TYPE="W" M ORP(DA,INST)=@ORDIALOG(PROMPT,INST)
"RTN","ORCSAVE1",78,0)
 . . E  S X=$$EXT^ORCD(PROMPT,INST,FORMAT) Q:X=""  Q:OMIT[X  S ORP(DA,INST)=X
"RTN","ORCSAVE1",79,0)
 . . S ORP(DA)=PROMPT_U_$P(NODE,U,4,7) ; ptr^lead^trail^new line^wrap
"RTN","ORCSAVE1",80,0)
 Q
"RTN","ORCSAVE1",81,0)
DIGTEXT(ORDER,ORDEA,ORSIGNER)  ;Build text used to create Digital Signature
"RTN","ORCSAVE1",82,0)
 ;ORDER = ifn of order # (file 100)
"RTN","ORCSAVE1",83,0)
 ;ORDEA = Controlled substance schedule of drug (2-5)
"RTN","ORCSAVE1",84,0)
 ;ORSIGNER = DUZ of sigining physician
"RTN","ORCSAVE1",85,0)
 ;ORSET(1)=1)Date of Prescription (RX) -Date Ordered HL7 format 2)Full Patient Name 3)Patient SSN 4)DFN
"RTN","ORCSAVE1",86,0)
 ;ORSET(2)=5)Patient Street1 6)Patient Street2 7)Patient Street3 8)Patient City 9)Patient State 10)Patient Zip 11)???
"RTN","ORCSAVE1",87,0)
 ;ORSET(3)=12)Drug name (From Dispense Drug or Orderable Item) 13)Variable ptr for Drug (file 50 or 101.43) 14)Drug quantity prescribed 15)Schedule of medication 16)DEA Schedule
"RTN","ORCSAVE1",88,0)
 ;ORSET(4)=17)Direction for use
"RTN","ORCSAVE1",89,0)
 ;ORSET(5)=18)Practitioner's name 19)DUZ 20)Practitioner's (DEA) registration number
"RTN","ORCSAVE1",90,0)
 ;ORSET(6)=22)SiteName 23)SiteStreet1 24)SiteStreet2 25)SiteCity 26)SiteState 27)SiteZip
"RTN","ORCSAVE1",91,0)
 ;ORSET(7)=28)$H
"RTN","ORCSAVE1",92,0)
 N I,DFN,OR80,ORPNM,ORSSN,ORXDT,VAERR,VAPA,X0,X1,X4,X5,X6,X8,X9,X10,X11,X12,X13,X14,SIG
"RTN","ORCSAVE1",93,0)
 S OR80=$G(^OR(100,ORDER,8,1,0))
"RTN","ORCSAVE1",94,0)
 Q:'$L(OR80)
"RTN","ORCSAVE1",95,0)
 S:'$G(ORSIGNER) ORSIGNER=$P(OR80,"^",3)
"RTN","ORCSAVE1",96,0)
 Q:'ORSIGNER
"RTN","ORCSAVE1",97,0)
 S $P(^OR(100,ORDER,8,1,2),"^",4,5)=ORDEA_"^"_1 ;Flag to signing process to get digital signature
"RTN","ORCSAVE1",98,0)
 S ORXDT=$P(OR80,"^"),X1=$$FMTHL7^XLFDT(ORXDT),X4="",X14="",X10=""
"RTN","ORCSAVE1",99,0)
 I '$D(ORVP) S ORVP=$P(^OR(100,ORDER,0),"^",2)
"RTN","ORCSAVE1",100,0)
 S DFN=+ORVP
"RTN","ORCSAVE1",101,0)
 D ADD^VADPT
"RTN","ORCSAVE1",102,0)
 S ORPNM=^DPT(+ORVP,0),ORSSN=$P(ORPNM,"^",9),ORPNM=$P(ORPNM,"^")
"RTN","ORCSAVE1",103,0)
 F I=1:1:6 S X4=X4_$S($L($G(VAPA(I))):$S((I=5):$P(VAPA(I),"^",2),1:VAPA(I)),1:"")_"^"
"RTN","ORCSAVE1",104,0)
 S X11=$$GET1^DIQ(200,ORSIGNER,.01,"E") Q:'$L(X11)
"RTN","ORCSAVE1",105,0)
 S X12=$$DEA^XUSER(,ORSIGNER)
"RTN","ORCSAVE1",106,0)
 S X0=$$GET1^DIQ(4,+$G(DUZ(2)),.01,"E")
"RTN","ORCSAVE1",107,0)
 I $L(X0) S X14=X0_"^"_$$GET1^DIQ(4,DUZ(2),1.01,"E")_"^"_$$GET1^DIQ(4,DUZ(2),1.02,"E")_"^"_$$GET1^DIQ(4,DUZ(2),1.03,"E")_"^"_$$GET1^DIQ(4,DUZ(2),.02,"E")_"^"_$$GET1^DIQ(4,DUZ(2),1.04,"E")
"RTN","ORCSAVE1",108,0)
 S X5=$$VALUE^ORX8(ORDER,"DRUG",,"E"),X6=$$VALUE^ORX8(ORDER,"DRUG")_";50"
"RTN","ORCSAVE1",109,0)
 I '$L(X5) S X5=$$VALUE^ORX8(ORDER,"ORDERABLE",,"E"),X6=$$VALUE^ORX8(ORDER,"ORDERABLE")_";101.43"
"RTN","ORCSAVE1",110,0)
 S X8=$$VALUE^ORX8(ORDER,"QTY",,"E"),X9=$$VALUE^ORX8(ORDER,"SCHEDULE",,"E")
"RTN","ORCSAVE1",111,0)
 S SIG=+$O(^OR(100,ORDER,4.5,"ID","SIG",0)) I SIG,$L($G(^OR(100,ORDER,4.5,SIG,2,1,0))) S X10=^(0)
"RTN","ORCSAVE1",112,0)
 S ORSET(1)=X1_"^"_ORPNM_"^"_ORSSN_"^"_+ORVP_"^"
"RTN","ORCSAVE1",113,0)
 S ORSET(2)=X4_"^"
"RTN","ORCSAVE1",114,0)
 S ORSET(3)=X5_"^"_X6_"^"_X8_"^"_X9_"^"_ORDEA_"^"
"RTN","ORCSAVE1",115,0)
 S ORSET(4)=X10_"^"
"RTN","ORCSAVE1",116,0)
 S ORSET(5)=X11_"^"_ORSIGNER_"^"_X12_"^"
"RTN","ORCSAVE1",117,0)
 S ORSET(6)=X14
"RTN","ORCSAVE1",118,0)
 S ORSET(7)=$H
"RTN","ORCSAVE1",119,0)
 S ORSET=7
"RTN","ORCSAVE1",120,0)
 Q
"RTN","ORCSEND1")
0^22^B69341728
"RTN","ORCSEND1",1,0)
ORCSEND1 ;SLC/MKB-Release cont ;11/25/02  09:48
"RTN","ORCSEND1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,29,45,61,79,94,116,138,158,149,187**;Dec 17, 1997
"RTN","ORCSEND1",3,0)
PKGSTUFF(PKG) ; -- Package code
"RTN","ORCSEND1",4,0)
 S PKG=$$GET1^DIQ(9.4,+PKG_",",1) Q:'$L(PKG)
"RTN","ORCSEND1",5,0)
 D:$L($T(@PKG)) @PKG
"RTN","ORCSEND1",6,0)
 Q
"RTN","ORCSEND1",7,0)
LR ; Spawn child orders if continuous schedule
"RTN","ORCSEND1",8,0)
 N ORSTRT,ORPARENT,OR0,ORNP,ORDIALOG,ORL,ORX,ORTIME,ORPITEM,ORPSAMP,ORPSPEC,ORPURG,ORPCOMM,ORPTYPE,ORPCOLL,ORS1,ORS2,P,ORCHLD,ORDG,ORLAST,ORDUZ,ORLOG,ORCOLLCT,STS
"RTN","ORCSEND1",9,0)
 S ORPARENT=+ORIFN,OR0=$G(^OR(100,ORIFN,0)),ORL=$P(OR0,U,10)
"RTN","ORCSEND1",10,0)
 D SCHEDULE(ORIFN,"LR",.ORSTRT) I ORSTRT'>1 D  Q
"RTN","ORCSEND1",11,0)
 . N START S START=$O(ORSTRT(0)) Q:START=$P($G(^OR(100,+ORIFN,0)),U,8)
"RTN","ORCSEND1",12,0)
 . D DATES^ORCSAVE2(+ORIFN,START) ;update start date from schedule
"RTN","ORCSEND1",13,0)
 S ORNP=+$P(OR0,U,4),ORDIALOG=+$P(OR0,U,5),ORDUZ=+$P(OR0,U,6),ORLOG=$P(OR0,U,7),ORDG=+$P(OR0,U,11)
"RTN","ORCSEND1",14,0)
 D GETDLG1^ORCD(ORDIALOG),GETORDER(ORIFN),GETIMES^ORCDLR1
"RTN","ORCSEND1",15,0)
 K ORDIALOG($$PTR^ORCD("OR GTX ADMIN SCHEDULE"),1),ORDIALOG($$PTR^ORCD("OR GTX DURATION"),1)
"RTN","ORCSEND1",16,0)
 S ORPITEM=$$PTR^ORCD("OR GTX ORDERABLE ITEM")
"RTN","ORCSEND1",17,0)
 S ORPSAMP=$$PTR^ORCD("OR GTX COLLECTION SAMPLE")
"RTN","ORCSEND1",18,0)
 S ORPSPEC=$$PTR^ORCD("OR GTX SPECIMEN")
"RTN","ORCSEND1",19,0)
 S ORPURG=$$PTR^ORCD("OR GTX LAB URGENCY")
"RTN","ORCSEND1",20,0)
 S ORPCOMM=$$PTR^ORCD("OR GTX WORD PROCESSING 1")
"RTN","ORCSEND1",21,0)
 S ORPTYPE=$$PTR^ORCD("OR GTX COLLECTION TYPE")
"RTN","ORCSEND1",22,0)
 S ORPCOLL=$$PTR^ORCD("OR GTX START DATE/TIME")
"RTN","ORCSEND1",23,0)
LR1 S ORS1=0 F  S ORS1=$O(ORX(ORS1)) Q:ORS1'>0  D
"RTN","ORCSEND1",24,0)
 . F P=ORPITEM,ORPSAMP,ORPSPEC,ORPURG,ORPCOMM,ORPTYPE S ORDIALOG(P,1)=$G(ORX(ORS1,P)) ;set values to next instance
"RTN","ORCSEND1",25,0)
 . S ORCOLLCT=$G(ORDIALOG(ORPTYPE,1))
"RTN","ORCSEND1",26,0)
 . S ORS2=0 F  S ORS2=$O(ORSTRT(ORS2)) Q:ORS2'>0  D
"RTN","ORCSEND1",27,0)
 .. S ORDIALOG(ORPCOLL,1)=ORS2 ;,ORDUZ=DUZ,ORLOG=+$E($$NOW^XLFDT,1,12)
"RTN","ORCSEND1",28,0)
 .. I ORCOLLCT="LC" S ORDIALOG(ORPTYPE,1)=$S($$LABCOLL^ORCDLR1(ORS2):"LC",1:"WC")
"RTN","ORCSEND1",29,0)
 .. I ORCOLLCT="I" S ORDIALOG(ORPTYPE,1)=$S($$IMMCOLL^ORCDLR1(ORS2):"I",1:"WC")
"RTN","ORCSEND1",30,0)
 .. D CHILD()
"RTN","ORCSEND1",31,0)
 S:$G(ORCHLD) ^OR(100,ORPARENT,2,0)="^100.002PA^"_ORLAST_U_ORCHLD
"RTN","ORCSEND1",32,0)
 S ORIFN=ORPARENT,ORQUIT=1,STS=$P(^OR(100,ORIFN,3),U,3)
"RTN","ORCSEND1",33,0)
 I (STS=1)!(STS=13)!(STS=11) S ORERR="1^Unable to release orders"
"RTN","ORCSEND1",34,0)
 D RELEASE^ORCSAVE2(ORPARENT,1,ORNOW,DUZ,$G(NATURE))
"RTN","ORCSEND1",35,0)
 Q
"RTN","ORCSEND1",36,0)
SCHEDULE(IFN,PKG,ORY,STRT) ;Returns list of start time(s) from schedule
"RTN","ORCSEND1",37,0)
 N I,X,PSJSD,PSJFD,PSJW,PSJNE,PSJPP,PSJX,PSJAT,PSJM,PSJTS,PSJY,PSJAX,PSJSCH,PSJOSD,PSJOFD,PSJC,ORDUR
"RTN","ORCSEND1",38,0)
 S PSJSD=$S(+$G(STRT):STRT,1:$P($G(^OR(100,+IFN,0)),U,8)) I 'PSJSD S ORY=-1 Q
"RTN","ORCSEND1",39,0)
 S ORY=1,ORY(PSJSD)="" ;1st occurrance
"RTN","ORCSEND1",40,0)
 S I=$O(^OR(100,+IFN,4.5,"ID","SCHEDULE",0)) Q:'I  Q:'$L($G(PKG))
"RTN","ORCSEND1",41,0)
 S X=$G(^OR(100,+IFN,4.5,I,1)),PSJX=$S(X:$$GET1^DIQ(51.1,+X_",",.01),1:X)
"RTN","ORCSEND1",42,0)
 S PSJW=+$G(ORL),PSJNE="",PSJPP=PKG D ENSV^PSJEEU Q:'$L($G(PSJX))
"RTN","ORCSEND1",43,0)
 I $G(PSJTS)'="C",$G(PSJTS)'="D" Q  ;not continuous or day-of-week
"RTN","ORCSEND1",44,0)
 S PSJSCH=PSJX,I=$O(^OR(100,+IFN,4.5,"ID","DAYS",0)) Q:'I
"RTN","ORCSEND1",45,0)
 S ORDUR=$G(^OR(100,+IFN,4.5,+I,1))
"RTN","ORCSEND1",46,0)
 S:ORDUR PSJFD=$$FMADD^XLFDT(PSJSD,+ORDUR,,-1)
"RTN","ORCSEND1",47,0)
 I 'ORDUR S X=+$E(ORDUR,2,9) D
"RTN","ORCSEND1",48,0)
 . I PSJM S PSJFD=$$FMADD^XLFDT(PSJSD,,,(PSJM*X)-1) ;X_#times
"RTN","ORCSEND1",49,0)
 . E  D  ;no freq in minutes --> day of week
"RTN","ORCSEND1",50,0)
 .. N DAYS,LOCMX,SCHMX
"RTN","ORCSEND1",51,0)
 .. S LOCMX=$$GET^XPAR("ALL^LOC.`"_+ORL,"LR MAX DAYS CONTINUOUS",1,"Q")
"RTN","ORCSEND1",52,0)
 .. S SCHMX=$P(^PS(51.1,PSJY,0),U,7)
"RTN","ORCSEND1",53,0)
 .. S DAYS=$S('SCHMX:LOCMX,LOCMX<SCHMX:LOCMX,1:SCHMX)
"RTN","ORCSEND1",54,0)
 .. S PSJFD=$$FMADD^XLFDT(PSJSD,DAYS,,-1)
"RTN","ORCSEND1",55,0)
 D ENSPU^PSJEEU K ORY
"RTN","ORCSEND1",56,0)
 I ORDUR M ORY=PSJC Q
"RTN","ORCSEND1",57,0)
 S ORY=$S(PSJC<$E(ORDUR,2,9):PSJC,1:$E(ORDUR,2,9))
"RTN","ORCSEND1",58,0)
 N NXT
"RTN","ORCSEND1",59,0)
 S NXT=0 F I=1:1:ORY S NXT=$O(PSJC(NXT)) Q:'NXT  S ORY(NXT)=PSJC(NXT)
"RTN","ORCSEND1",60,0)
 Q
"RTN","ORCSEND1",61,0)
GETORDER(IFN) ;Set ORX(Inst,Ptr)=Value
"RTN","ORCSEND1",62,0)
 N I,X,Y,PTR,INST,TYPE
"RTN","ORCSEND1",63,0)
 S I=0 F  S I=$O(^OR(100,IFN,4.5,I)) Q:I'>0  S X=$G(^(I,0)),Y=$G(^(1)) D
"RTN","ORCSEND1",64,0)
 . S PTR=+$P(X,U,2),INST=+$P(X,U,3),TYPE=$P($G(^ORD(101.41,PTR,1)),U)
"RTN","ORCSEND1",65,0)
 . I TYPE'="W" S ORX(INST,PTR)=Y Q
"RTN","ORCSEND1",66,0)
 . S ORX(INST,PTR)="^OR(100,"_IFN_",4.5,"_I_",2)"
"RTN","ORCSEND1",67,0)
 Q
"RTN","ORCSEND1",68,0)
PTR(X) ; Returns ptr of prompt X in Order Dialog file
"RTN","ORCSEND1",69,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_X,1,63),0))
"RTN","ORCSEND1",70,0)
CHILD(STRT)   ;Create child order, send to package
"RTN","ORCSEND1",71,0)
 N ORAPPT
"RTN","ORCSEND1",72,0)
 K ORIFN D EN^ORCSAVE Q:'$G(ORIFN)  D STARTDT^ORCSAVE2(ORIFN)
"RTN","ORCSEND1",73,0)
 I $G(STRT) D DATES^ORCSAVE2(ORIFN,STRT)
"RTN","ORCSEND1",74,0)
 S ORCHLD=+$G(ORCHLD)+1,^OR(100,ORPARENT,2,ORIFN,0)=ORIFN,ORLAST=ORIFN
"RTN","ORCSEND1",75,0)
 S ORAPPT=$P($G(^OR(100,ORPARENT,0)),U,18)
"RTN","ORCSEND1",76,0)
 S $P(^OR(100,ORIFN,0),U,18)=ORAPPT
"RTN","ORCSEND1",77,0)
 S $P(^OR(100,ORIFN,3),U,9)=ORPARENT
"RTN","ORCSEND1",78,0)
 I $G(PKG)="LR" S $P(^OR(100,ORIFN,8,1,0),U,4)="" K ^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,1) ;signature tracked on parent order only, for Labs
"RTN","ORCSEND1",79,0)
 I $G(PKG)?1"PS".E D
"RTN","ORCSEND1",80,0)
 . N X0 S X0=$G(^OR(100,ORPARENT,8,1,0))
"RTN","ORCSEND1",81,0)
 . I $P(X0,U,4)'=2 D SIGN^ORCSAVE2(ORIFN,+$P(X0,U,5),ORNOW,$P(X0,U,4),1)
"RTN","ORCSEND1",82,0)
 . I $D(^OR(100,ORPARENT,9)) M ^OR(100,ORIFN,9)=^OR(100,ORPARENT,9)
"RTN","ORCSEND1",83,0)
 . I $G(ORENEW) S OLD=$O(ORENEW(0)) I OLD S $P(^OR(100,OLD,3),U,6)=ORIFN,$P(^OR(100,ORIFN,3),U,5)=OLD,$P(^(3),U,11)=2 K ORENEW(OLD)
"RTN","ORCSEND1",84,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORNOW,DUZ,$G(NATURE)),NEW^ORMBLD(ORIFN)
"RTN","ORCSEND1",85,0)
 Q
"RTN","ORCSEND1",86,0)
PS ; -- spawn child orders if multiple doses
"RTN","ORCSEND1",87,0)
PSJ ;    (Inpt only)
"RTN","ORCSEND1",88,0)
PSS ;
"RTN","ORCSEND1",89,0)
 N ORPARENT,OR0,ORNP,ORDIALOG,ORDUZ,ORLOG,ORL,ORDG,ORCAT,ORX,ORP,ORI,STS
"RTN","ORCSEND1",90,0)
 N ORDOSE,ORT,ORSCH,ORDUR,ORSTRT,ORFRST,ORCONJ,ORID,ORDD,ORSTR,ORDGNM
"RTN","ORCSEND1",91,0)
 N ORSTART,ORCHLD,ORLAST,ORSIG,OROI,ID,OR3,ORIG,CODE,ORPKG,ORENEW,I
"RTN","ORCSEND1",92,0)
 S ORPARENT=+ORIFN,OR0=$G(^OR(100,ORPARENT,0)),OR3=$G(^(3))
"RTN","ORCSEND1",93,0)
 Q:$P(OR0,U,12)'="I"  S ORCAT="I",ORNP=+$P(OR0,U,4)
"RTN","ORCSEND1",94,0)
 S ORDIALOG=+$P(OR0,U,5),ORDUZ=+$P(OR0,U,6),ORLOG=$P(OR0,U,7)
"RTN","ORCSEND1",95,0)
 S ORL=$P(OR0,U,10),ORDG=+$P(OR0,U,11),ORPKG=+$P(OR0,U,14)
"RTN","ORCSEND1",96,0)
 D GETDLG1^ORCD(ORDIALOG),GETORDER(ORPARENT)
"RTN","ORCSEND1",97,0)
 S ORDOSE=$$PTR("INSTRUCTIONS"),ORT=$$PTR("ROUTE")
"RTN","ORCSEND1",98,0)
 S ORSCH=$$PTR("SCHEDULE"),ORDUR=$$PTR("DURATION")
"RTN","ORCSEND1",99,0)
 S ORCONJ=$$PTR("AND/THEN") D STRT S ORSTART=$G(ORSTRT("BEG"))
"RTN","ORCSEND1",100,0)
 D DATES^ORCSAVE2(ORPARENT,ORSTART) Q:$$DOSES(ORPARENT)'>1
"RTN","ORCSEND1",101,0)
 S ORFRST=$$PTR("NOW"),ORSIG=$$PTR("SIG")
"RTN","ORCSEND1",102,0)
 S ORID=$$PTR("DOSE"),ORDD=$$PTR("DISPENSE DRUG")
"RTN","ORCSEND1",103,0)
 S ORSTR=$$PTR("STRENGTH"),ORDGNM=$$PTR("DRUG NAME")
"RTN","ORCSEND1",104,0)
 I $P(OR3,U,11)=2,$O(^OR(100,+$P(OR3,U,5),2,0)) D
"RTN","ORCSEND1",105,0)
 . S ORENEW=+$P(OR3,U,5),I=0
"RTN","ORCSEND1",106,0)
 . I $$VALUE^ORX8(ORENEW,"NOW") S I=$O(^OR(100,ORENEW,2,0))
"RTN","ORCSEND1",107,0)
 . F  S I=$O(^OR(100,ORENEW,2,I)) Q:I<1  S ORENEW(I)=""
"RTN","ORCSEND1",108,0)
PS1 F ORP="ORDERABLE ITEM","URGENCY","WORD PROCESSING 1" D
"RTN","ORCSEND1",109,0)
 . N PTR S PTR=$$PTR(ORP) Q:PTR'>0  Q:'$D(ORX(1,PTR))
"RTN","ORCSEND1",110,0)
 . S ORDIALOG(PTR,1)=ORX(1,PTR) S:$E(ORP)="O" OROI=ORX(1,PTR)
"RTN","ORCSEND1",111,0)
 S ORI=$$FRSTDOSE I $G(ORX(1,ORFRST)) D
"RTN","ORCSEND1",112,0)
 . F ORP=ORDOSE,ORT,ORID S:$D(ORX(ORI,ORP)) ORDIALOG(ORP,1)=ORX(ORI,ORP)
"RTN","ORCSEND1",113,0)
 . S ID=$G(ORX(ORI,ORID)) S:$P(ID,"&",6) ORDIALOG(ORDD,1)=$P(ID,"&",6)
"RTN","ORCSEND1",114,0)
 . S ORDIALOG(ORSCH,1)="NOW",ORSTART=$$NOW^XLFDT
"RTN","ORCSEND1",115,0)
 . D SIG,CHILD(ORSTART)
"RTN","ORCSEND1",116,0)
 F  D  S ORI=$O(ORX(ORI)) Q:ORI'>0
"RTN","ORCSEND1",117,0)
 . F ORP=ORDOSE,ORT,ORSCH,ORDUR,ORID S:$D(ORX(ORI,ORP)) ORDIALOG(ORP,1)=ORX(ORI,ORP) K:'$D(ORX(ORI,ORP)) ORDIALOG(ORP,1)
"RTN","ORCSEND1",118,0)
 . K ORDIALOG(ORDD,1) S ID=$G(ORX(ORI,ORID))
"RTN","ORCSEND1",119,0)
 . S:$P(ID,"&",6) ORDIALOG(ORDD,1)=$P(ID,"&",6)
"RTN","ORCSEND1",120,0)
 . S ORSTART=$G(ORSTRT(ORI))
"RTN","ORCSEND1",121,0)
 . D SIG,CHILD(ORSTART)
"RTN","ORCSEND1",122,0)
 S:$G(ORCHLD) ^OR(100,ORPARENT,2,0)="^100.002PA^"_ORLAST_U_ORCHLD
"RTN","ORCSEND1",123,0)
 S ORIFN=ORPARENT,ORQUIT=1,OR3=$G(^OR(100,ORIFN,3)),STS=$P(OR3,U,3)
"RTN","ORCSEND1",124,0)
 I (STS=1)!(STS=13)!(STS=11) S ORERR="1^Unable to release orders"
"RTN","ORCSEND1",125,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORNOW,DUZ,$G(NATURE)) K ^TMP("ORWORD",$J)
"RTN","ORCSEND1",126,0)
 S $P(^OR(100,ORIFN,3),U,8)=1 ;veil parent order - set stop date/time?
"RTN","ORCSEND1",127,0)
 Q:(STS=1)!(STS=13)!(STS=11)  ;unsuccessful
"RTN","ORCSEND1",128,0)
PS2 ; -- ck if parent is unsigned or edit
"RTN","ORCSEND1",129,0)
 I $P($G(^OR(100,ORIFN,8,1,0)),U,4)=2 S $P(^(0),U,4)="" K ^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,1) ;clear ES
"RTN","ORCSEND1",130,0)
 Q:$P(OR3,U,11)'=1  S ORIG=$P(OR3,U,5) Q:ORIG'>0
"RTN","ORCSEND1",131,0)
 S CODE=$S($P($G(^OR(100,ORIG,3)),U,3)=5:"CA",1:"DC")
"RTN","ORCSEND1",132,0)
 D MSG^ORMBLD(ORIG,CODE) I "^1^13^"[(U_$P($G(^OR(100,ORIG,3)),U,3)_U) D
"RTN","ORCSEND1",133,0)
 . N NATR S NATR=+$O(^ORD(100.02,"C","C",0))
"RTN","ORCSEND1",134,0)
 . S $P(^OR(100,ORIG,3),U,3)=12,$P(^(3),U,7)=0,^(6)=NATR_U_DUZ_U_ORNOW
"RTN","ORCSEND1",135,0)
 . D CANCEL^ORCSEND(ORIG) ;ck for unrel actions
"RTN","ORCSEND1",136,0)
 Q
"RTN","ORCSEND1",137,0)
DOSES(IFN) ; -- count number of doses in order
"RTN","ORCSEND1",138,0)
 N I,CNT S CNT=0
"RTN","ORCSEND1",139,0)
 S I=0 F  S I=$O(^OR(100,+$G(IFN),4.5,"ID","INSTR",I)) Q:I'>0  I $L($G(^OR(100,+$G(IFN),4.5,I,1))) S CNT=CNT+1
"RTN","ORCSEND1",140,0)
 S I=+$O(^OR(100,+$G(IFN),4.5,"ID","NOW",0)) I I,$G(^OR(100,+$G(IFN),4.5,I,1)) S CNT=CNT+1
"RTN","ORCSEND1",141,0)
 Q CNT
"RTN","ORCSEND1",142,0)
FRSTDOSE()      ; -- Return instance of first dose
"RTN","ORCSEND1",143,0)
 N I,Y S I=0,Y=1
"RTN","ORCSEND1",144,0)
 F  S I=$O(ORX(I)) Q:I'>0  I $D(ORX(I,ORDOSE)) S Y=I Q
"RTN","ORCSEND1",145,0)
 Q Y
"RTN","ORCSEND1",146,0)
SIG ; -- Build text of instructions
"RTN","ORCSEND1",147,0)
 N ORDRUG,ID,DOSE,ORI,ORX K ^TMP("ORWORD",$J,ORSIG,1)
"RTN","ORCSEND1",148,0)
 S ORDRUG=$G(ORDIALOG(ORDD,1)),ID=$G(ORDIALOG(ORID,1))
"RTN","ORCSEND1",149,0)
 S DOSE=$G(ORDIALOG(ORDOSE,1)),ORI=1
"RTN","ORCSEND1",150,0)
 S ORX=$$DOSE^ORCDPS2_$$RTE^ORCDPS2_$$SCH^ORCDPS2_$$DUR^ORCDPS2
"RTN","ORCSEND1",151,0)
 S ^TMP("ORWORD",$J,ORSIG,1,0)="^^1^1^"_DT_U,^(1,0)=ORX
"RTN","ORCSEND1",152,0)
 S ORDIALOG(ORSIG,1)=$NA(^TMP("ORWORD",$J,ORSIG,1))
"RTN","ORCSEND1",153,0)
 S ORDIALOG(ORDOSE,"FORMAT")="@"
"RTN","ORCSEND1",154,0)
 K ORDIALOG(ORSTR,1),ORDIALOG(ORDGNM,1)
"RTN","ORCSEND1",155,0)
 I ORDRUG,'ID D  ;set strength or drug name
"RTN","ORCSEND1",156,0)
 . N STR,ITM S STR=$P(ID,"&",7)_$P(ID,"&",8)
"RTN","ORCSEND1",157,0)
 . I STR'>0 S ORDIALOG(ORDGNM,1)=$$GET1^DIQ(50,+ORDRUG_",",.01) Q
"RTN","ORCSEND1",158,0)
 . S ITM=$P($G(^ORD(101.43,+$G(OROI),0)),U)
"RTN","ORCSEND1",159,0)
 . S:ITM'[STR ORDIALOG(ORSTR,1)=STR
"RTN","ORCSEND1",160,0)
 Q
"RTN","ORCSEND1",161,0)
STRT ; -- Build ORSTRT(inst)=date.time array of start times by dose
"RTN","ORCSEND1",162,0)
 N OI,PSOI,XD,XH,XM,XS,ORWD,ORI,SCH,ORSD,X,ORD K ORSTRT
"RTN","ORCSEND1",163,0)
 S OI=$G(ORX(1,$$PTR^ORCD("OR GTX ORDERABLE ITEM")))
"RTN","ORCSEND1",164,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2),(XD,XH,XM,XS)=0
"RTN","ORCSEND1",165,0)
 S ORWD=+$G(^SC(+$G(ORL),42)) ;ward
"RTN","ORCSEND1",166,0)
 S ORI=0 F  S ORI=$O(ORX(ORI)) Q:ORI<1  D
"RTN","ORCSEND1",167,0)
 . S SCH=$G(ORX(ORI,ORSCH)),ORSD="" S:'$L(SCH) X=$$NOW^XLFDT
"RTN","ORCSEND1",168,0)
 . S:$L(SCH) ORSD=$$STARTSTP^PSJORPOE(+ORVP,SCH,PSOI,ORWD),X=$P(ORSD,U,4)
"RTN","ORCSEND1",169,0)
 . S ORSTRT(ORI)=$$FMADD^XLFDT(X,XD,XH,XM,XS) ;START+OFFSET
"RTN","ORCSEND1",170,0)
 . ; -- update OFFSET for next THEN dose
"RTN","ORCSEND1",171,0)
 . D DUR(ORI) I $G(ORX(ORI,ORCONJ))="T" D
"RTN","ORCSEND1",172,0)
 .. I $G(ORD("XD"))<1,$G(ORD("XH"))<1,$G(ORD("XM"))<1,$G(ORD("XS"))<1 S ORD("XD")=+$P(ORSD,U,3) ;default duration
"RTN","ORCSEND1",173,0)
 .. N I,Y F I="XD","XH","XM","XS" S Y=@I,@I=Y+$G(ORD(I))
"RTN","ORCSEND1",174,0)
 .. K ORD
"RTN","ORCSEND1",175,0)
 ; -- find beginning date.time for parent
"RTN","ORCSEND1",176,0)
 S ORI=0,X=9999999 F  S ORI=$O(ORSTRT(ORI)) Q:ORI<1  I ORSTRT(ORI)<X S X=ORSTRT(ORI)
"RTN","ORCSEND1",177,0)
 S ORSTRT("BEG")=X
"RTN","ORCSEND1",178,0)
 Q
"RTN","ORCSEND1",179,0)
 ;
"RTN","ORCSEND1",180,0)
DUR(I) ; -- Accumulate duration in ORD("Xt") for offsetting next THEN dose
"RTN","ORCSEND1",181,0)
 N X,Y S X=$$FMDUR^ORCDPS3($G(ORX(I,ORDUR)))
"RTN","ORCSEND1",182,0)
 I X["S",+X>$G(ORD("XS")) S ORD("XS")=+X
"RTN","ORCSEND1",183,0)
 I X["'",+X>$G(ORD("XM")) S ORD("XM")=+X
"RTN","ORCSEND1",184,0)
 I X["H",+X>$G(ORD("XH")) S ORD("XH")=+X
"RTN","ORCSEND1",185,0)
 S Y=$S(X["D":+X,X["W":+X*7,X["M":+X*30,1:0)
"RTN","ORCSEND1",186,0)
 I Y,Y>$G(ORD("XD")) S ORD("XD")=Y
"RTN","ORCSEND1",187,0)
 Q
"RTN","ORIMO")
0^1^B454651
"RTN","ORIMO",1,0)
ORIMO ;SLC/JDL - Inpatient medication on outpatient
"RTN","ORIMO",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**187**;Dec 17, 1997
"RTN","ORIMO",3,0)
IMOLOC(ORY,ORLOC,ORDFN) ;ORY>=0: LOC is an IMO authorized location
"RTN","ORIMO",4,0)
 ;ORDFN: PATIENT IEN
"RTN","ORIMO",5,0)
 ;ORLOC: CLINICAL LOCATION
"RTN","ORIMO",6,0)
 S ORY=-1
"RTN","ORIMO",7,0)
 N PACH
"RTN","ORIMO",8,0)
 S PACH=$$PATCH^XPDUTL("PSJ*5.0*111")
"RTN","ORIMO",9,0)
 Q:'PACH
"RTN","ORIMO",10,0)
 I $L($TEXT(SDIMO^SDAMA203)) D
"RTN","ORIMO",11,0)
 . ;#DBIA 4133
"RTN","ORIMO",12,0)
 . S ORY=$$SDIMO^SDAMA203(ORLOC,ORDFN)
"RTN","ORIMO",13,0)
 . K SDIMO(1)
"RTN","ORIMO",14,0)
 Q
"RTN","ORIMO",15,0)
 ; 
"RTN","ORIMO",16,0)
IMOOD(ORY,ORDERID) ;Is it an IMO order?
"RTN","ORIMO",17,0)
 Q:'$D(^OR(100,+ORDERID,0))
"RTN","ORIMO",18,0)
 I $P($G(^OR(100,+ORDERID,0)),U,18)>0 S ORY="1"
"RTN","ORIMO",19,0)
 Q
"RTN","ORIMO",20,0)
 ;
"RTN","ORM")
0^6^B17667106
"RTN","ORM",1,0)
ORM ; SLC/MKB/JDL - ORM msg router ;11/17/00  10:58
"RTN","ORM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,97,141,187**;Dec 17, 1997
"RTN","ORM",3,0)
EN(MSG) ; -- main entry point for OR RECEIVE where MSG contains HL7 msg
"RTN","ORM",4,0)
 N ORMSG,ORNMSP,ORTYPE,MSH,PID,PV1,ORC,ORVP,ORTS,ORL,ORCAT,ORAPPT
"RTN","ORM",5,0)
 S ORMSG=$S($L($G(MSG)):MSG,1:"MSG") ; MSG="NAME" or MSG(#)=message
"RTN","ORM",6,0)
 I '$O(@ORMSG@(0)) D EN^ORERR("Missing HL7 message",.ORMSG) Q
"RTN","ORM",7,0)
 S MSH=0 F  S MSH=$O(@ORMSG@(MSH)) Q:MSH'>0  Q:$E(@ORMSG@(MSH),1,3)="MSH"
"RTN","ORM",8,0)
 I 'MSH D EN^ORERR("Missing or invalid MSH segment",.ORMSG) Q
"RTN","ORM",9,0)
 S ORNMSP=$$NMSP($P(@ORMSG@(MSH),"|",3)),ORTYPE=$P(@ORMSG@(MSH),"|",9)
"RTN","ORM",10,0)
 I '$L(ORNMSP) D EN^ORERR("Missing or invalid sending application",.ORMSG) Q
"RTN","ORM",11,0)
 D PID I '$G(ORVP) D EN^ORERR("Missing or invalid patient ID",.ORMSG) Q
"RTN","ORM",12,0)
 D PV1 S ORC=PID
"RTN","ORM",13,0)
EN1 F  S ORC=$O(@ORMSG@(+ORC)) Q:ORC'>0  I $E(@ORMSG@(ORC),1,3)="ORC" D
"RTN","ORM",14,0)
 . N ORDCNTRL,ORDSTS,PKGIFN,ORIFN,ORNP,ORTN,ORERR,ORLOG,ORDUZ,ORQT,ORSTRT,ORSTOP,ORURG,ORNATR,OREASON
"RTN","ORM",15,0)
 . S ORC=ORC_U_@ORMSG@(ORC),ORDCNTRL=$TR($P(ORC,"|",2),"@","P")
"RTN","ORM",16,0)
 . I '$L(ORDCNTRL) S ORERR="Invalid control code" D ERROR Q
"RTN","ORM",17,0)
 . S ORIFN=$P($P(ORC,"|",3),U),PKGIFN=$P($P(ORC,"|",4),U)
"RTN","ORM",18,0)
 . I ORIFN,$D(^OR(100,+ORIFN,0)),$P(^(0),U,2)'=ORVP S ORERR="Patient doesn't match" D ERROR Q
"RTN","ORM",19,0)
 . S ORDSTS=$P(ORC,"|",6),ORQT=$P(ORC,"|",8)
"RTN","ORM",20,0)
 . S ORSTRT=$$FMDATE($P(ORQT,U,4)),ORSTOP=$$FMDATE($P(ORQT,U,5))
"RTN","ORM",21,0)
 . S ORURG=$$URGENCY($P(ORQT,U,6)),ORLOG=$$FMDATE($P(ORC,"|",10))
"RTN","ORM",22,0)
 . S ORDUZ=+$P(ORC,"|",11),ORNP=+$P(ORC,"|",13),OREASON=$P(ORC,"|",17)
"RTN","ORM",23,0)
 . S ORNATR=$S($P(OREASON,U,3)="99ORN":$P(OREASON,U),1:"")
"RTN","ORM",24,0)
 . S ORTN="EN^ORM"_ORNMSP D @ORTN I $D(ORERR) D ERROR Q
"RTN","ORM",25,0)
 . I ORDCNTRL="SN",$G(ORIFN) D MSG^ORMBLD(ORIFN,"NA")
"RTN","ORM",26,0)
 . I $G(DGPMT),ORDCNTRL="OD"!(ORDCNTRL="OC") D XTMP
"RTN","ORM",27,0)
 Q
"RTN","ORM",28,0)
 ;
"RTN","ORM",29,0)
NMSP(NAME) ; -- Returns pkg namespace
"RTN","ORM",30,0)
 I NAME="RADIOLOGY"!(NAME="IMAGING") Q "RA"
"RTN","ORM",31,0)
 I NAME="LABORATORY" Q "LR"
"RTN","ORM",32,0)
 I NAME="DIETETICS" Q "FH"
"RTN","ORM",33,0)
 I NAME="PHARMACY" Q "PS"
"RTN","ORM",34,0)
 I NAME="CONSULTS" Q "GMRC"
"RTN","ORM",35,0)
 I NAME="PROCEDURES" Q "GMRC"
"RTN","ORM",36,0)
 I NAME="ORDER ENTRY" Q "ORG"
"RTN","ORM",37,0)
 Q ""
"RTN","ORM",38,0)
 ;
"RTN","ORM",39,0)
PID ; -- Returns patient from PID segment in current msg
"RTN","ORM",40,0)
 ;    Sets PID, ORVP, ORTS if valid patient
"RTN","ORM",41,0)
 N I,DFN,SEG S I=MSH,PID=""
"RTN","ORM",42,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="PID" D  Q
"RTN","ORM",43,0)
 . S DFN=+$P(@ORMSG@(I),"|",4),PID=I
"RTN","ORM",44,0)
 . I $D(^DPT(DFN,0)) S ORVP=DFN_";DPT(",ORTS=$G(^DPT(DFN,.103)) Q
"RTN","ORM",45,0)
 . S:$L($P(@ORMSG@(I),"|",5)) ORVP=$P(@ORMSG@(I),"|",5) ; alt ID for Lab
"RTN","ORM",46,0)
 Q
"RTN","ORM",47,0)
 ;
"RTN","ORM",48,0)
PV1 ; -- Returns patient location in PV1 segment in current msg
"RTN","ORM",49,0)
 ;    Sets PV1, ORCAT, & ORL if valid location, ORAPPT: IMO appointment
"RTN","ORM",50,0)
 N I,X,SEG S I=PID,PV1=""
"RTN","ORM",51,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="PV1" D  Q
"RTN","ORM",52,0)
 . S X=+$P(@ORMSG@(I),"|",4),ORCAT=$P(@ORMSG@(I),"|",3),PV1=I
"RTN","ORM",53,0)
 . S:$D(^SC(X,0)) ORL=X_";SC("
"RTN","ORM",54,0)
 . S:$D(ORL) ORAPPT=$P(@ORMSG@(I),"|",45)
"RTN","ORM",55,0)
 . S:$G(ORAPPT) ORAPPT=$$FMDATE($G(ORAPPT))
"RTN","ORM",56,0)
 Q
"RTN","ORM",57,0)
 ;
"RTN","ORM",58,0)
ORDITEM(USID) ; -- Returns pointer to Orderable Item file for USID
"RTN","ORM",59,0)
 N ID,OI
"RTN","ORM",60,0)
 S ID=$P(USID,U,4)_";"_$P(USID,U,6)
"RTN","ORM",61,0)
 S OI=+$O(^ORD(101.43,"ID",ID,0))
"RTN","ORM",62,0)
 Q OI
"RTN","ORM",63,0)
 ;
"RTN","ORM",64,0)
URGENCY(CODE) ; -- Return ptr to Order Urgency file #101.42
"RTN","ORM",65,0)
 S:'$L(CODE) CODE="R"
"RTN","ORM",66,0)
 Q $O(^ORD(101.42,"C",CODE,0))
"RTN","ORM",67,0)
 ;
"RTN","ORM",68,0)
FMDATE(Y) ; -- Convert HL7 date/time to FM format
"RTN","ORM",69,0)
 Q $$HL7TFM^XLFDT(Y)  ;**97
"RTN","ORM",70,0)
 ;
"RTN","ORM",71,0)
ERROR ; -- Sends a DE reply to current msg
"RTN","ORM",72,0)
 ; Uses ORVP, ORNMSP, ORDUZ, ORIFN, ORERR, and PKGIFN
"RTN","ORM",73,0)
 N ORV S ORV("XQY0")="" D EN^ORERR(ORERR,.ORMSG,.ORV)
"RTN","ORM",74,0)
 Q:ORTYPE="ORR"  Q:'$L($G(ORNMSP))
"RTN","ORM",75,0)
 N OREMSG,ORVP,ORTS S:'$G(ORDUZ) ORDUZ=DUZ D:'$G(ORVP) PID
"RTN","ORM",76,0)
 S OREMSG(1)=$$MSH^ORMBLD("ORR",ORNMSP),OREMSG(2)=$$PID^ORMBLD($G(ORVP))
"RTN","ORM",77,0)
 S OREMSG(3)="ORC|DE|"_$S($G(ORIFN):ORIFN_"^OR",1:"")_"|"_$S($L($G(PKGIFN)):PKGIFN_U_ORNMSP,1:"")_"|||||||"_ORDUZ_"||||||"_ORERR
"RTN","ORM",78,0)
 D MSG^XQOR("OR EVSEND "_ORNMSP,.OREMSG)
"RTN","ORM",79,0)
 Q
"RTN","ORM",80,0)
 ;
"RTN","ORM",81,0)
FIND(SEG,PIECE) ; -- Returns value in $P(@ORMSG@(SEG),"|",PIECE)
"RTN","ORM",82,0)
 N X,Y,FLDS,I,DONE
"RTN","ORM",83,0)
 S X=$G(@ORMSG@(SEG)),FLDS=$L(X,"|"),Y="",(I,DONE)=0
"RTN","ORM",84,0)
 F  D  Q:DONE
"RTN","ORM",85,0)
 . I PIECE<FLDS S Y=$P(X,"|",PIECE),DONE=1 Q
"RTN","ORM",86,0)
 . I PIECE=FLDS D  Q
"RTN","ORM",87,0)
 . . S Y=$P(X,"|",PIECE),I=$O(@ORMSG@(SEG,I)),DONE=1
"RTN","ORM",88,0)
 . . I I S Y=Y_$P($G(@ORMSG@(SEG,I)),"|")
"RTN","ORM",89,0)
 . S I=$O(@ORMSG@(SEG,I)) I 'I S Y="",DONE=1 Q
"RTN","ORM",90,0)
 . S PIECE=PIECE-(FLDS-1),X=$G(@ORMSG@(SEG,I)),FLDS=$L(X,"|")
"RTN","ORM",91,0)
FQ Q Y
"RTN","ORM",92,0)
 ;
"RTN","ORM",93,0)
XTMP ; -- Save package auto-dc'd order numbers in ^XTMP
"RTN","ORM",94,0)
 ;    Uses ORIFN, ORNMSP
"RTN","ORM",95,0)
 Q:'$G(ORIFN)  Q:"^1^13^"'[($P($G(^OR(100,+ORIFN,3)),U,3)_U)
"RTN","ORM",96,0)
 N ORNOW,ORDC S ORNOW=+$$NOW^XLFDT,ORDC="ORDC-"_$G(DGPMDA)
"RTN","ORM",97,0)
 I $G(^XTMP(ORDC,0)),+^(0)<ORNOW K ^XTMP(ORDC)
"RTN","ORM",98,0)
 I '$G(^XTMP(ORDC,0)) D
"RTN","ORM",99,0)
 . N ORNOW1H S ORNOW1H=$$FMADD^XLFDT(ORNOW,,1)
"RTN","ORM",100,0)
 . S ^XTMP(ORDC,0)=ORNOW1H_U_ORNOW_"^Orders AutoDC'd by Packages on Discharge"
"RTN","ORM",101,0)
 S ^XTMP(ORDC,+ORIFN)=$G(ORNMSP)
"RTN","ORM",102,0)
 Q
"RTN","ORMBLD")
0^7^B35919203
"RTN","ORMBLD",1,0)
ORMBLD ; SLC/MKB/JDL - Build outgoing ORM msgs ;11/24/00  13:09
"RTN","ORMBLD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,33,26,45,79,97,133,168,187**;Dec 17, 1997
"RTN","ORMBLD",3,0)
NEW(IFN,CODE) ; -- Send NW order message to pkg
"RTN","ORMBLD",4,0)
 ;I $P($G(^ORD(101.42,+$$VALUE^ORCSAVE2(IFN,"URGENCY"),0)),U)="DONE" D STATUS^ORCSAVE2(IFN,2) Q  ; complete -> don't send to pkg
"RTN","ORMBLD",5,0)
 N ORPKG,ORMSG,DGQUIET K ^TMP("ORWORD",$J)
"RTN","ORMBLD",6,0)
 S DGQUIET=1 D  Q:'$O(ORMSG(0))  ;build msg, ORDIALOG gone when posted
"RTN","ORMBLD",7,0)
 . N OR0,OR3,OR8,ORVP,ORDG,ORDIALOG,ORPARENT S:'$D(CODE) CODE="NW"
"RTN","ORMBLD",8,0)
 . S OR0=$G(^OR(100,IFN,0)) Q:'$L(OR0)  S OR3=$G(^(3)),OR8=$G(^(8,1,0))
"RTN","ORMBLD",9,0)
 . S ORVP=$P(OR0,U,2),ORDG=$P(OR0,U,11),ORPKG=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORMBLD",10,0)
 . Q:"^GMRA^GMRC^FH^LR^PS^RA^OR^"'[(U_ORPKG_U)
"RTN","ORMBLD",11,0)
 . S ORDIALOG=+$P(OR0,U,5) Q:'ORDIALOG
"RTN","ORMBLD",12,0)
 . D GETDLG1^ORCD(ORDIALOG),GETORDER^ORCD(IFN)
"RTN","ORMBLD",13,0)
 . S ORMSG(1)=$$MSH("ORM",ORPKG),ORMSG(2)=$$PID(ORVP)
"RTN","ORMBLD",14,0)
 . S ORMSG(3)=$$PV1(ORVP,$P(OR0,U,12),+$P(OR0,U,10),"",$P(OR0,U,18))
"RTN","ORMBLD",15,0)
 . S ORPARENT=$P(OR3,U,9) I ORPARENT,$G(ORDIALOG($$PTR^ORCD("OR GTX SCHEDULE"),1))="NOW"!'$O(^OR(100,+ORPARENT,4.5,"ID","CONJ",0)) S ORPARENT="" ;no parent if NOW or only child
"RTN","ORMBLD",16,0)
 . S ORMSG(4)="ORC|"_CODE_"|"_+OR0_";1^OR||||||"_ORPARENT_"|"_$$HL7DATE($P(OR0,U,7))_"|"_+$P(OR0,U,6)_"||"_+$P(OR0,U,4)_"|||"_$$HL7DATE($$NOW^XLFDT)_"|"_$$NATURE($P(OR8,U,12))_"^^^"
"RTN","ORMBLD",17,0)
 . D @ORPKG K ^TMP("ORWORD",$J)
"RTN","ORMBLD",18,0)
 I $G(ORZTEST) M ORZTEST=ORMSG Q  ;testing only
"RTN","ORMBLD",19,0)
 D MSG^XQOR("OR EVSEND "_ORPKG,.ORMSG)
"RTN","ORMBLD",20,0)
 Q
"RTN","ORMBLD",21,0)
 ;
"RTN","ORMBLD",22,0)
MSG(IFN,CODE,REASON) ; -- Send all other order msgs
"RTN","ORMBLD",23,0)
 N ORPKG,ORMSG,DGQUIET K ^TMP("ORWORD",$J)
"RTN","ORMBLD",24,0)
 S DGQUIET=1 D  Q:'$O(ORMSG(0))  ; build message
"RTN","ORMBLD",25,0)
 . N OR0,OR8,DG,PKGID,I,TYPE,DA,PROV,NATR,STS,OI
"RTN","ORMBLD",26,0)
 . S OR0=$G(^OR(100,+IFN,0)),PKGID=$G(^(4)),STS=$P($G(^(3)),U,3)
"RTN","ORMBLD",27,0)
 . S ORPKG=$$NMSP^ORCD($P(OR0,U,14)) Q:"^GMRA^GMRC^FH^LR^PS^RA^OR^"'[(U_ORPKG_U)  S:ORPKG="LR" ORPKG="LRCH"
"RTN","ORMBLD",28,0)
 . S DA=+$P(IFN,";",2),OR8=$G(^OR(100,+IFN,8,DA,0))
"RTN","ORMBLD",29,0)
 . S PROV=$P(OR8,U,3),NATR=$P(OR8,U,12) S:'PROV PROV=$G(ORNP)
"RTN","ORMBLD",30,0)
 . S TYPE=$S(CODE="NA"!(CODE="DE"):"ORR",1:"ORM")
"RTN","ORMBLD",31,0)
 . S ORMSG(1)=$$MSH(TYPE,ORPKG),ORMSG(2)=$$PID($P(OR0,U,2)),I=2
"RTN","ORMBLD",32,0)
 . I ORPKG="PS" S I=I+1,ORMSG(I)=$$PV1($P(OR0,U,2),$P(OR0,U,12),+$P(OR0,U,10))
"RTN","ORMBLD",33,0)
 . S I=I+1,ORMSG(I)="ORC|"_CODE_"|"_IFN_"^OR|"_PKGID_U_ORPKG_"||||||"_$S($G(DGPMA):$$HL7DATE($P(DGPMA,U)),1:"")_"|"_DUZ_"||"_PROV_"|||"_$$HL7DATE($$NOW^XLFDT)_"|"_$$REASON(+$G(REASON),NATR)
"RTN","ORMBLD",34,0)
 . I ORPKG="FH",CODE="SS" S $P(ORMSG(I),"|",6)=$S(STS=8:"SC",STS=6:"IP",1:"")
"RTN","ORMBLD",35,0)
 . I $E(ORPKG,1,2)="LR" S OI=+$O(^OR(100,+IFN,.1,0)),OI=+$G(^(OI,0)) S:OI I=I+1,ORMSG(I)="OBR||||"_$$USID(OI)
"RTN","ORMBLD",36,0)
 . K ^TMP("ORWORD",$J)
"RTN","ORMBLD",37,0)
 D MSG^XQOR("OR EVSEND "_ORPKG,.ORMSG)
"RTN","ORMBLD",38,0)
 Q
"RTN","ORMBLD",39,0)
 ;
"RTN","ORMBLD",40,0)
BHS(PAT) ; -- Send batch header segment/message to Lab
"RTN","ORMBLD",41,0)
 N ORMSG S ORMSG(1)="BHS|^~\&|ORDER ENTRY|"_$G(DUZ(2))_"|LABORATORY|"_$G(DUZ(2))_"|"_$$HL7DATE($$NOW^XLFDT)
"RTN","ORMBLD",42,0)
 S ORMSG(2)=$$PID($G(PAT))
"RTN","ORMBLD",43,0)
 D MSG^XQOR("OR EVSEND LRCH",.ORMSG)
"RTN","ORMBLD",44,0)
 Q
"RTN","ORMBLD",45,0)
 ;
"RTN","ORMBLD",46,0)
BTS(PAT) ; -- Send batch trailer segment/message to Lab
"RTN","ORMBLD",47,0)
 N ORMSG S ORMSG(1)="BTS",ORMSG(2)=$$PID($G(PAT))
"RTN","ORMBLD",48,0)
 D MSG^XQOR("OR EVSEND LRCH",.ORMSG)
"RTN","ORMBLD",49,0)
 Q
"RTN","ORMBLD",50,0)
 ;
"RTN","ORMBLD",51,0)
MSH(TYPE,TO) ; -- MSH segment
"RTN","ORMBLD",52,0)
 N MSH
"RTN","ORMBLD",53,0)
 S MSH="MSH|^~\&|ORDER ENTRY|"_$G(DUZ(2))_"|"_$$NAME(TO)_"|"_$G(DUZ(2))_"|"_$$HL7DATE($$NOW^XLFDT)_"||"_TYPE
"RTN","ORMBLD",54,0)
 Q MSH
"RTN","ORMBLD",55,0)
 ;
"RTN","ORMBLD",56,0)
NAME(NMSP) ; -- Returns name of pkg NMSP
"RTN","ORMBLD",57,0)
 I NMSP="GMRA" Q "ALLERGIES"
"RTN","ORMBLD",58,0)
 I NMSP="GMRC" Q "CONSULTS"
"RTN","ORMBLD",59,0)
 I NMSP="FH" Q "DIETETICS"
"RTN","ORMBLD",60,0)
 I NMSP?1"LR".E Q "LABORATORY"
"RTN","ORMBLD",61,0)
 I NMSP="PS" Q "PHARMACY"
"RTN","ORMBLD",62,0)
 I NMSP="RA" Q "RADIOLOGY"
"RTN","ORMBLD",63,0)
 I NMSP="OR" Q "ORDER ENTRY"
"RTN","ORMBLD",64,0)
 Q ""
"RTN","ORMBLD",65,0)
 ;
"RTN","ORMBLD",66,0)
PID(DFN) ; -- PID segment
"RTN","ORMBLD",67,0)
 N PID,PTR,ROOT
"RTN","ORMBLD",68,0)
 S PTR=+$P(DFN,";"),ROOT=$P(DFN,";",2),PID="PID|||"
"RTN","ORMBLD",69,0)
 I ROOT="DPT(" S PID=PID_PTR_"||"_$P($G(^DPT(PTR,0)),U)
"RTN","ORMBLD",70,0)
 E  S PID=PID_"|"_DFN_"|"_$S($L(ROOT):$P($G(@(U_ROOT_PTR_",0)")),U),1:"")
"RTN","ORMBLD",71,0)
 Q PID
"RTN","ORMBLD",72,0)
 ;
"RTN","ORMBLD",73,0)
PV1(OBJ,TYPE,LOC,VISIT,APPTDT) ; -- PV1 segment
"RTN","ORMBLD",74,0)
 N PV1,RB,PACH S RB=""
"RTN","ORMBLD",75,0)
 S:$G(APPTDT) APPTDT=$$FMTHL7^XLFDT(APPTDT)
"RTN","ORMBLD",76,0)
 I TYPE="I",+OBJ,$P(OBJ,";",2)="DPT(" S RB=$P($G(^DPT(+OBJ,.101)),U)
"RTN","ORMBLD",77,0)
 S PACH=$$PATCH^XPDUTL("PSJ*5.0*111")
"RTN","ORMBLD",78,0)
 S:PACH PV1="PV1||"_TYPE_"|"_LOC_$S($L(RB):U_RB,1:"")_"||||||||||||||||"_$G(VISIT)_"|||||||||||||||||||||||||"_$G(APPTDT)
"RTN","ORMBLD",79,0)
 S:'PACH PV1="PV1||"_TYPE_"|"_LOC_$S($L(RB):U_RB,1:"")_"||||||||||||||||"_$G(VISIT)
"RTN","ORMBLD",80,0)
 Q PV1
"RTN","ORMBLD",81,0)
 ;
"RTN","ORMBLD",82,0)
HL7DATE(DATE) ; -- FM -> HL7 format
"RTN","ORMBLD",83,0)
 Q $$FMTHL7^XLFDT(DATE)  ;**97
"RTN","ORMBLD",84,0)
 ;
"RTN","ORMBLD",85,0)
USID(OI) ; -- Returns Univ Serv ID for Orderable Item
"RTN","ORMBLD",86,0)
 N OITEM,NATL,LOCAL S OITEM=$G(^ORD(101.43,+OI,0))
"RTN","ORMBLD",87,0)
 S NATL=$P(OITEM,U,3)_U_U_$P(OITEM,U,4)
"RTN","ORMBLD",88,0)
 S LOCAL=$P($P(OITEM,U,2),";")_U_$P(OITEM,U)_U_$P($P(OITEM,U,2),";",2)
"RTN","ORMBLD",89,0)
 Q NATL_U_LOCAL
"RTN","ORMBLD",90,0)
 ;
"RTN","ORMBLD",91,0)
NATURE(X) ; -- Returns 3 ^-piece identifier for nature X
"RTN","ORMBLD",92,0)
 N ORN,Y S ORN=$G(^ORD(100.02,+$G(X),0))
"RTN","ORMBLD",93,0)
 S Y=$P(ORN,U,2)_U_$P(ORN,U)_"^99ORN"
"RTN","ORMBLD",94,0)
 Q Y
"RTN","ORMBLD",95,0)
 ;
"RTN","ORMBLD",96,0)
REASON(X,N) ; -- Returns 6 ^-piece format of reason X
"RTN","ORMBLD",97,0)
 ;    N ^ NATURE ^ 99ORN ^ # ^ Reason ^ 99ORR
"RTN","ORMBLD",98,0)
 N Y,ORR S ORR=$G(^ORD(100.03,+$G(X),0))
"RTN","ORMBLD",99,0)
 S:'$G(N) N=+$P(ORR,U,7) S Y=$$NATURE(N)
"RTN","ORMBLD",100,0)
 S:$G(X) Y=Y_U_$S(ORPKG'="RA":+X,1:"")_U_$P(ORR,U)_"^99ORR"
"RTN","ORMBLD",101,0)
 Q Y
"RTN","ORMBLD",102,0)
 ;
"RTN","ORMBLD",103,0)
IP() ; -- Returns ORIFN^Type if pt has active isolation order (or 0 if not)
"RTN","ORMBLD",104,0)
 N TYPE,START,ORIFN,Y
"RTN","ORMBLD",105,0)
 S TYPE=$O(^ORD(100.98,"B","PREC",0)),START=$$NOW^XLFDT,Y=0
"RTN","ORMBLD",106,0)
 F  S START=$O(^OR(100,"AW",ORVP,TYPE,START),-1) Q:START'>0  S ORIFN=$O(^(START,0)) I $P($G(^OR(100,ORIFN,3)),U,3)=6 S Y=ORIFN Q
"RTN","ORMBLD",107,0)
 I Y S TYPE=$$VALUE^ORCSAVE2(ORIFN,"ISOLATION"),Y=Y_U_$$GET1^DIQ(119.4,+TYPE_",",.01)
"RTN","ORMBLD",108,0)
 Q Y
"RTN","ORMBLD",109,0)
 ;
"RTN","ORMBLD",110,0)
OR ; -- new Generic order
"RTN","ORMBLD",111,0)
 I ORDG=$O(^ORD(100.98,"B","M.A.S.",0)) D ADT^ORMBLDOR Q
"RTN","ORMBLD",112,0)
 D EN^ORMBLDOR
"RTN","ORMBLD",113,0)
 Q
"RTN","ORMBLD",114,0)
 ;
"RTN","ORMBLD",115,0)
GMRA ; -- new Allergy order
"RTN","ORMBLD",116,0)
 D ALG^ORMBLDAL
"RTN","ORMBLD",117,0)
 Q
"RTN","ORMBLD",118,0)
 ;
"RTN","ORMBLD",119,0)
GMRC ; -- new Consult order
"RTN","ORMBLD",120,0)
 D CSLT^ORMBLDGM
"RTN","ORMBLD",121,0)
 Q
"RTN","ORMBLD",122,0)
 ;
"RTN","ORMBLD",123,0)
FH ; -- new Diet order
"RTN","ORMBLD",124,0)
 N ORPARAM D EN^FHWOR8(+ORVP,.ORPARAM) ; set parameters
"RTN","ORMBLD",125,0)
 S:'$L($G(ORPARAM(3))) ORPARAM(3)="T"
"RTN","ORMBLD",126,0)
 I ORDG=$O(^ORD(100.98,"B","PRECAUTIONS",0)) D IP^ORMBLDFH Q
"RTN","ORMBLD",127,0)
 I ORDG=$O(^ORD(100.98,"B","EARLY/LATE TRAYS",0)) D TRAY^ORMBLDFH Q
"RTN","ORMBLD",128,0)
 I ORDG=$O(^ORD(100.98,"B","TUBEFEEDINGS",0)) D TF^ORMBLDFH Q
"RTN","ORMBLD",129,0)
 I ORDG=$O(^ORD(100.98,"B","DIET ADDITIONAL ORDERS",0)) D ADDN^ORMBLDFH Q
"RTN","ORMBLD",130,0)
 D DIET^ORMBLDFH
"RTN","ORMBLD",131,0)
 Q
"RTN","ORMBLD",132,0)
 ;
"RTN","ORMBLD",133,0)
LR ; -- new Lab order
"RTN","ORMBLD",134,0)
 I CODE="XO" D XO^ORMBLDLR Q  ; change
"RTN","ORMBLD",135,0)
 D CH^ORMBLDLR S ORPKG="LRCH" Q  ;no difference by subscript at this time
"RTN","ORMBLD",136,0)
 N SUB S SUB=$P($G(^ORD(100.98,ORDG,0)),U,3)
"RTN","ORMBLD",137,0)
 S:(SUB="SP")!(SUB="EM")!(SUB="AU")!(SUB="CY") SUB="AP"
"RTN","ORMBLD",138,0)
 S:(SUB="LAB")!(SUB="MI")!(SUB="HEMA") SUB="CH"
"RTN","ORMBLD",139,0)
 D @(SUB_"^ORMBLDLR") S ORPKG=ORPKG_SUB
"RTN","ORMBLD",140,0)
 Q
"RTN","ORMBLD",141,0)
 ;
"RTN","ORMBLD",142,0)
PS ; -- new Pharmacy order
"RTN","ORMBLD",143,0)
 ;I ORDG=$O(^ORD(100.98,"B","OUTPATIENT MEDICATIONS",0)) D OUT^ORMBLDPS Q
"RTN","ORMBLD",144,0)
 ;I ORDG=$O(^ORD(100.98,"B","IV MEDICATIONS",0)) D IV^ORMBLDPS Q
"RTN","ORMBLD",145,0)
 ;D UD^ORMBLDPS
"RTN","ORMBLD",146,0)
 N PKG S PKG=$P(OR0,U,14),PKG=$$GET1^DIQ(9.4,+PKG_",",1)
"RTN","ORMBLD",147,0)
 I PKG="PSO",+$$VALUE^ORCSAVE2(IFN,"URGENCY")=99 D STATUS^ORCSAVE2(IFN,2) K ORMSG Q  ;complete, don't send
"RTN","ORMBLD",148,0)
 D @($S(PKG="PSIV":"IV",PKG="PSO":"OUT",1:"UD")_"^ORMBLDPS")
"RTN","ORMBLD",149,0)
 Q
"RTN","ORMBLD",150,0)
 ;
"RTN","ORMBLD",151,0)
RA ; -- new Radiology order
"RTN","ORMBLD",152,0)
 D EN^ORMBLDRA
"RTN","ORMBLD",153,0)
 Q
"RTN","ORMBLD",154,0)
 ;
"RTN","ORMBLD",155,0)
TEST(ORIFN) ; -- Build/display HL7 msgs w/o sending
"RTN","ORMBLD",156,0)
 K ORZTEST S ORZTEST=1 D NEW(ORIFN) ; leaves msg in ORZTEST() on exit
"RTN","ORMBLD",157,0)
 Q
"RTN","ORPRF")
0^31^B5926773
"RTN","ORPRF",1,0)
ORPRF ;SLC/JLI-Patient record flag ;9/30/03  11:44
"RTN","ORPRF",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**173,187**;Dec 17, 1997
"RTN","ORPRF",3,0)
 ;
"RTN","ORPRF",4,0)
 ; ^TMP("ORPRF",$J,NN) store the flag array.
"RTN","ORPRF",5,0)
 ;
"RTN","ORPRF",6,0)
FMT(ROOT) ; Convert record flag data to displayable data
"RTN","ORPRF",7,0)
 N IDX,IX,CNT,TMPRT
"RTN","ORPRF",8,0)
 S (IDX,IX,CNT)=0
"RTN","ORPRF",9,0)
 F  S IDX=$O(ROOT(IDX)) Q:'IDX  D
"RTN","ORPRF",10,0)
 . S TMPRT(IDX,"FLAG")=$P($G(ROOT(IDX,"FLAG")),U,2)
"RTN","ORPRF",11,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Flag Name:               "_$P($G(ROOT(IDX,"FLAG")),U,2)
"RTN","ORPRF",12,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Flag Type:               "_$P($G(ROOT(IDX,"FLAGTYPE")),U,2)
"RTN","ORPRF",13,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Flag Category:           "_$P($G(ROOT(IDX,"CATEGORY")),U)
"RTN","ORPRF",14,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Assignment Status:       "_"Active"
"RTN","ORPRF",15,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Initial Assigned Date:   "_$P($G(ROOT(IDX,"ASSIGNDT")),U,2)
"RTN","ORPRF",16,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Approved by:             "_$P($G(ROOT(IDX,"APPRVBY")),U,2)
"RTN","ORPRF",17,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Next Review Date:        "_$P($G(ROOT(IDX,"REVIEWDT")),U,2)
"RTN","ORPRF",18,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Owner Site:              "_$P($G(ROOT(IDX,"OWNER")),U,2)
"RTN","ORPRF",19,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Originating Site:        "_$P($G(ROOT(IDX,"ORIGSITE")),U,2)
"RTN","ORPRF",20,0)
 . Q:'$D(ROOT(IDX,"NARR"))
"RTN","ORPRF",21,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="            "
"RTN","ORPRF",22,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="Assignment Narratives:   "
"RTN","ORPRF",23,0)
 . S CNT=CNT+1,TMPRT(IDX,CNT)="-------------------------"
"RTN","ORPRF",24,0)
 . F  S IX=$O(ROOT(IDX,"NARR",IX)) Q:'IX  D
"RTN","ORPRF",25,0)
 . . S CNT=CNT+1,TMPRT(IDX,CNT)=$G(ROOT(IDX,"NARR",IX,0))
"RTN","ORPRF",26,0)
 K ROOT
"RTN","ORPRF",27,0)
 M ROOT=TMPRT
"RTN","ORPRF",28,0)
 Q
"RTN","ORPRF",29,0)
 ;
"RTN","ORPRF",30,0)
HASFLG(ORY,PTDFN) ;If patient has record flag
"RTN","ORPRF",31,0)
 ;DBIA 3860: $$GETACT^DGPFAPI(PTDFN,.FLGDATA)
"RTN","ORPRF",32,0)
 I '$L($TEXT(GETACT^DGPFAPI)) S ORY=0 Q
"RTN","ORPRF",33,0)
 N ROOT,IDX
"RTN","ORPRF",34,0)
 S ROOT="PRFARR",(ORY,IDX)=0 K ^TMP("ORPRF",$J)
"RTN","ORPRF",35,0)
 S ORY=$$GETACT^DGPFAPI(PTDFN,ROOT)
"RTN","ORPRF",36,0)
 Q:'ORY
"RTN","ORPRF",37,0)
 D FMT(.@ROOT)
"RTN","ORPRF",38,0)
 M ^TMP("ORPRF",$J)=@ROOT
"RTN","ORPRF",39,0)
 K PRFARR
"RTN","ORPRF",40,0)
 F  S IDX=$O(^TMP("ORPRF",$J,IDX)) Q:'IDX  D
"RTN","ORPRF",41,0)
 . S ORY(IDX)=IDX_U_$G(^TMP("ORPRF",$J,IDX,"FLAG"))
"RTN","ORPRF",42,0)
 Q
"RTN","ORPRF",43,0)
 ;
"RTN","ORPRF",44,0)
GETFLG(ORY,PTDFN,FLAGID) ;Return detail flag information
"RTN","ORPRF",45,0)
 I '$D(^TMP("ORPRF",$J,FLAGID)) Q
"RTN","ORPRF",46,0)
 N IX,CNT
"RTN","ORPRF",47,0)
 S (IX,CNT)=0
"RTN","ORPRF",48,0)
 F  S IX=$O(^TMP("ORPRF",$J,FLAGID,IX)) Q:'IX  D
"RTN","ORPRF",49,0)
 . S CNT=CNT+1,ORY(CNT)=$G(^TMP("ORPRF",$J,FLAGID,IX))
"RTN","ORPRF",50,0)
 Q
"RTN","ORPRF",51,0)
 ;
"RTN","ORPRF",52,0)
CLEAR(ORY) ;Clear up the temp globe
"RTN","ORPRF",53,0)
 K ^TMP("ORPRF",$J)
"RTN","ORPRF",54,0)
 Q
"RTN","ORPRF",55,0)
 ;
"RTN","ORQPTQ2")
0^20^B40973300
"RTN","ORQPTQ2",1,0)
ORQPTQ2 ; slc/CLA - Functions which return patient lists and list sources pt 2 ;12/15/97 [ 04/02/97  3:41 PM ] [10/16/03 11:58am]
"RTN","ORQPTQ2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**9,10,85,187**;Dec 17, 1997
"RTN","ORQPTQ2",3,0)
CLIN(Y) ; RETURN LIST OF CLINICS
"RTN","ORQPTQ2",4,0)
 N ORLST,IEN,I
"RTN","ORQPTQ2",5,0)
 D GETLST^XPAR(.ORLST,"ALL","ORWD COMMON CLINIC")
"RTN","ORQPTQ2",6,0)
 S I=0 F  S I=$O(ORLST(I)) Q:'I  D
"RTN","ORQPTQ2",7,0)
 . S IEN=$P(ORLST(I),U,2) I $$ACTLOC^ORWU(IEN)=1 D
"RTN","ORQPTQ2",8,0)
 .. S Y(I)=IEN_U_$P(^SC(IEN,0),U,1)
"RTN","ORQPTQ2",9,0)
 Q
"RTN","ORQPTQ2",10,0)
 ;
"RTN","ORQPTQ2",11,0)
CLINPTS(Y,CLIN,ORBDATE,OREDATE) ; RETURN LIST OF PTS W/CLINIC APPT W/IN BEGINNING AND END DATES
"RTN","ORQPTQ2",12,0)
 ; PKS-8/2003: Modified for new scheduling pkg APIs.
"RTN","ORQPTQ2",13,0)
 I +$G(CLIN)<1 S Y(1)="^No clinic identified" Q 
"RTN","ORQPTQ2",14,0)
 I $$ACTLOC^ORWU(CLIN)'=1 S Y(1)="^Clinic is inactive or Occasion Of Service" Q
"RTN","ORQPTQ2",15,0)
 N DFN,NAME,I,J,X,ORJ,ORSRV,ORNOWDT,CHKX,CHKIN,MAXAPPTS,ORC,CLNAM,ORFLDS,ORCLIN,ORRESULT,ORSTART,OREND,ORSTAT,ORASTAT,ORERR,ORI,ORPT,ORPTSTAT,ORMAX,ORHOLD
"RTN","ORQPTQ2",16,0)
 S MAXAPPTS=200
"RTN","ORQPTQ2",17,0)
 S ORNOWDT=$$NOW^XLFDT
"RTN","ORQPTQ2",18,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQPTQ2",19,0)
 S DFN=0,I=1
"RTN","ORQPTQ2",20,0)
 I ORBDATE="" S ORBDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","ORQPTQ2",21,0)
 I OREDATE="" S OREDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","ORQPTQ2",22,0)
 ;
"RTN","ORQPTQ2",23,0)
 ; Convert ORBDATE, OREDATE to FM Date/Time:
"RTN","ORQPTQ2",24,0)
 D DT^DILF("T",ORBDATE,.ORBDATE,"","")
"RTN","ORQPTQ2",25,0)
 D DT^DILF("T",OREDATE,.OREDATE,"","")
"RTN","ORQPTQ2",26,0)
 ; *****
"RTN","ORQPTQ2",27,0)
 W !,"POST: ",ORBDATE
"RTN","ORQPTQ2",28,0)
 W !,"POST: ",OREDATE
"RTN","ORQPTQ2",29,0)
 I (ORBDATE=-1)!(OREDATE=-1) S Y(1)="^Error in date range." Q 
"RTN","ORQPTQ2",30,0)
 S OREDATE=$P(OREDATE,".")_.5 ; Add 1/2 day to end date.
"RTN","ORQPTQ2",31,0)
 K ^TMP($J,"SDAMA202","GETPLIST") ; Clean house before starting.
"RTN","ORQPTQ2",32,0)
 S ORRESULT=""
"RTN","ORQPTQ2",33,0)
 S ORCLIN=+CLIN,ORFLDS="1;3;4;12",ORASTAT="R;NT",ORSTART=ORBDATE,OREND=OREDATE,ORSTAT="" ; Assign parameters.
"RTN","ORQPTQ2",34,0)
 ; ORFLDS: 1;3;4;12 = ApptDateTime;ApptStatus;IEN^PtName;PtStatus.
"RTN","ORQPTQ2",35,0)
 D GETPLIST^SDAMA202(ORCLIN,ORFLDS,ORASTAT,ORSTART,OREND,.ORRESULT,ORSTAT) ; DBIA # 3869.
"RTN","ORQPTQ2",36,0)
 ;
"RTN","ORQPTQ2",37,0)
 ; Deal with server errors:
"RTN","ORQPTQ2",38,0)
 S ORERR=""
"RTN","ORQPTQ2",39,0)
 I ORRESULT=-1 D
"RTN","ORQPTQ2",40,0)
 .S ORERR=$O(^TMP($J,"SDAMA202","GETPLIST","ERROR",ORERR))
"RTN","ORQPTQ2",41,0)
 I ORERR'="" S Y(1)="Server Error: "_ORERR Q
"RTN","ORQPTQ2",42,0)
 ;
"RTN","ORQPTQ2",43,0)
 ; Reassign ^TMP array to local array:
"RTN","ORQPTQ2",44,0)
 S (ORPT,ORI)=0,ORMAX=MAXAPPTS
"RTN","ORQPTQ2",45,0)
 I ORRESULT'>0 S Y(1)="^No appointments." Q
"RTN","ORQPTQ2",46,0)
 F  S ORPT=$O(^TMP($J,"SDAMA202","GETPLIST",ORPT)) Q:ORPT=""!(ORI>ORMAX)  D
"RTN","ORQPTQ2",47,0)
 .S ORI=ORI+1
"RTN","ORQPTQ2",48,0)
 .S Y(ORI)=$G(^TMP($J,"SDAMA202","GETPLIST",ORPT,4)) ; IEN^Name.
"RTN","ORQPTQ2",49,0)
 .S Y(ORI)=Y(ORI)_U_ORCLIN ; ^Clinic IEN.
"RTN","ORQPTQ2",50,0)
 .S Y(ORI)=Y(ORI)_U_$G(^TMP($J,"SDAMA202","GETPLIST",ORPT,1)) ; App't.
"RTN","ORQPTQ2",51,0)
 .S ORPTSTAT=$G(^TMP($J,"SDAMA202","GETPLIST",ORPT,12)) ; Pt Status.
"RTN","ORQPTQ2",52,0)
 .S ORPTSTAT=$S(ORPTSTAT="I":"IPT",ORPTSTAT="O":"OPT",1:"")
"RTN","ORQPTQ2",53,0)
 .S ORHOLD=$G(^TMP($J,"SDAMA202","GETPLIST",ORPT,3)) ; Appt Status.
"RTN","ORQPTQ2",54,0)
 .I ORPTSTAT=""&(ORHOLD="NT") S ORPTSTAT="NT" ; "No Action Taken."
"RTN","ORQPTQ2",55,0)
 .S Y(ORI)=Y(ORI)_U_U_ORPTSTAT ; Pt I or O status (or "NT").
"RTN","ORQPTQ2",56,0)
 ;
"RTN","ORQPTQ2",57,0)
 K ^TMP($J,"SDAMA202","GETPLIST") ; Clean house after finishing.
"RTN","ORQPTQ2",58,0)
 ;
"RTN","ORQPTQ2",59,0)
 Q
"RTN","ORQPTQ2",60,0)
 ;
"RTN","ORQPTQ2",61,0)
CDATRANG(ORY) ; return default start and stop dates for clinics in form start^stop
"RTN","ORQPTQ2",62,0)
 N ORBDATE,OREDATE,ORSRV
"RTN","ORQPTQ2",63,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQPTQ2",64,0)
 S ORBDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","ORQPTQ2",65,0)
 S OREDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","ORQPTQ2",66,0)
 S ORBDATE=$S($L($G(ORBDATE)):ORBDATE,1:""),OREDATE=$S($L($G(OREDATE)):OREDATE,1:"")
"RTN","ORQPTQ2",67,0)
 S ORY=$$UP^XLFSTR(ORBDATE)_"^"_$$UP^XLFSTR(OREDATE)
"RTN","ORQPTQ2",68,0)
 Q
"RTN","ORQPTQ2",69,0)
PTAPPTS(Y,DFN,ORBDATE,OREDATE,CLIN) ; return appts for a patient between beginning and end dates for a clinic, if no clinic return all appointments
"RTN","ORQPTQ2",70,0)
 ;I +$G(CLIN)<1 S Y(1)="^No clinic identified" Q 
"RTN","ORQPTQ2",71,0)
 I +$G(CLIN)>0,$$ACTLOC^ORWU(CLIN)'=1 S Y(1)="^Clinic is inactive or Occasion Of Service" Q
"RTN","ORQPTQ2",72,0)
 N VASD,NUM,CNT,INVDT,INT,EXT,ORSRV S NUM=0,CNT=1
"RTN","ORQPTQ2",73,0)
 I (ORBDATE="")!(OREDATE="") D  ;get user's service and set up entities:
"RTN","ORQPTQ2",74,0)
 .S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQPTQ2",75,0)
 I ORBDATE="" D
"RTN","ORQPTQ2",76,0)
 .I '$L(CLIN) S ORBDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORQQAP SEARCH RANGE START",1,"E"))
"RTN","ORQPTQ2",77,0)
 .S:ORBDATE="" ORBDATE="T" ;default start date across all clinics is today
"RTN","ORQPTQ2",78,0)
 I OREDATE="" D
"RTN","ORQPTQ2",79,0)
 .I '$L(CLIN) S OREDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORQQAP SEARCH RANGE STOP",1,"E"))
"RTN","ORQPTQ2",80,0)
 .S:OREDATE="" OREDATE="T" ;default end date across all clinics is today
"RTN","ORQPTQ2",81,0)
 ;CONVERT ORBDATE AND OREDATE INTO FILEMAN DATE/TIME
"RTN","ORQPTQ2",82,0)
 D DT^DILF("T",ORBDATE,.ORBDATE,"","")
"RTN","ORQPTQ2",83,0)
 D DT^DILF("T",OREDATE,.OREDATE,"","")
"RTN","ORQPTQ2",84,0)
 I (ORBDATE=-1)!(OREDATE=-1) S Y(1)="^Error in date range." Q 
"RTN","ORQPTQ2",85,0)
 S VASD("F")=ORBDATE
"RTN","ORQPTQ2",86,0)
 S VASD("T")=$P(OREDATE,".")_.5  ;ADD 1/2 DAY TO END DATE
"RTN","ORQPTQ2",87,0)
 I $L($G(CLIN)) S VASD("C",CLIN)=""
"RTN","ORQPTQ2",88,0)
 D SDA^VADPT
"RTN","ORQPTQ2",89,0)
 Q:VAERR=1
"RTN","ORQPTQ2",90,0)
 F  S NUM=$O(^UTILITY("VASD",$J,NUM)) Q:'NUM  D
"RTN","ORQPTQ2",91,0)
 .S INT=^UTILITY("VASD",$J,NUM,"I"),INVDT=9999999-$P(INT,U)
"RTN","ORQPTQ2",92,0)
 .S EXT=^UTILITY("VASD",$J,NUM,"E")
"RTN","ORQPTQ2",93,0)
 .S Y(CNT)=$P(INT,U)_U_$P(EXT,U,2)_U_$P(EXT,U,3)_U_$P(EXT,U,4)_U_INVDT
"RTN","ORQPTQ2",94,0)
 .S CNT=CNT+1
"RTN","ORQPTQ2",95,0)
 S:+$G(Y(1))<1 Y(1)="^No appointments."
"RTN","ORQPTQ2",96,0)
 K VAERR
"RTN","ORQPTQ2",97,0)
 Q
"RTN","ORQPTQ2",98,0)
PROV(Y) ; RETURN LIST OF PROVIDERS
"RTN","ORQPTQ2",99,0)
 N I,IEN,NAME,TDATE
"RTN","ORQPTQ2",100,0)
 S I=1,NAME=""
"RTN","ORQPTQ2",101,0)
 F  S NAME=$O(^VA(200,"B",NAME)) Q:NAME=""  S IEN=0,IEN=$O(^(NAME,IEN))  D
"RTN","ORQPTQ2",102,0)
 .Q:$E(NAME)="*"
"RTN","ORQPTQ2",103,0)
 .I $D(^XUSEC("PROVIDER",IEN)),$$ACTIVE^XUSER(IEN) S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","ORQPTQ2",104,0)
 Q
"RTN","ORQPTQ2",105,0)
PROVPTS(Y,PROV) ; RETURN LIST OF PATIENTS LINKED TO A PRIMARY PROVIDER
"RTN","ORQPTQ2",106,0)
 I +$G(PROV)<1 S Y(1)="^No provider identified" Q
"RTN","ORQPTQ2",107,0)
 N ORI,DFN
"RTN","ORQPTQ2",108,0)
 S ORI=1,DFN=0
"RTN","ORQPTQ2",109,0)
 F  S DFN=$O(^DPT("APR",PROV,DFN)) Q:DFN'>0  S Y(ORI)=+DFN_"^"_$P(^DPT(+DFN,0),"^"),ORI=ORI+1
"RTN","ORQPTQ2",110,0)
 S:+$G(Y(1))<1 Y(1)="^No patients found."
"RTN","ORQPTQ2",111,0)
 Q
"RTN","ORQPTQ2",112,0)
SPEC(Y) ; RETURN LIST OF TREATING SPECIALTIES
"RTN","ORQPTQ2",113,0)
 N I,NAME,IEN
"RTN","ORQPTQ2",114,0)
 S I=1,NAME=""
"RTN","ORQPTQ2",115,0)
 ;access to DIC(45.7 global granted under DBIA #519:
"RTN","ORQPTQ2",116,0)
 F  S NAME=$O(^DIC(45.7,"B",NAME)) Q:NAME=""  S IEN=0,IEN=$O(^(NAME,IEN)) I $$ACTIVE^DGACT(45.7,IEN) S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","ORQPTQ2",117,0)
 Q
"RTN","ORQPTQ2",118,0)
SPECPTS(Y,SPEC) ; RETURN LIST OF PATIENTS LINKED TO A TREATING SPECIALTY
"RTN","ORQPTQ2",119,0)
 I +$G(SPEC)<1 S Y(1)="^No specialty identified" Q 
"RTN","ORQPTQ2",120,0)
 N ORI,DFN
"RTN","ORQPTQ2",121,0)
 S ORI=1,DFN=0
"RTN","ORQPTQ2",122,0)
 F  S DFN=$O(^DPT("ATR",SPEC,DFN)) Q:DFN'>0  S Y(ORI)=+DFN_"^"_$P(^DPT(+DFN,0),"^"),ORI=ORI+1
"RTN","ORQPTQ2",123,0)
 S:+$G(Y(1))<1 Y(1)="^No patients found."
"RTN","ORQPTQ2",124,0)
 Q
"RTN","ORQPTQ2",125,0)
WARD(Y) ; RETURN LIST OF ACTIVE WARDS
"RTN","ORQPTQ2",126,0)
 N I,IEN,NAME,D0
"RTN","ORQPTQ2",127,0)
 S I=1,NAME=""
"RTN","ORQPTQ2",128,0)
 ;access to DIC(42 global granted under DBIA #36:
"RTN","ORQPTQ2",129,0)
 F  S NAME=$O(^DIC(42,"B",NAME)) Q:NAME=""  S IEN=$O(^(NAME,0)) D
"RTN","ORQPTQ2",130,0)
 . S D0=IEN D WIN^DGPMDDCF
"RTN","ORQPTQ2",131,0)
 . I X=0 S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","ORQPTQ2",132,0)
 Q
"RTN","ORQPTQ2",133,0)
WARDPTS(Y,WARD) ; RETURN LIST OF PATIENTS IN A WARD
"RTN","ORQPTQ2",134,0)
 ; SLC/PKS - Modifications for Room/Bed data on  1/19/2001.
"RTN","ORQPTQ2",135,0)
 I +$G(WARD)<1 S Y(1)="^No ward identified" Q 
"RTN","ORQPTQ2",136,0)
 N ORI,DFN,RBDAT
"RTN","ORQPTQ2",137,0)
 S ORI=1,DFN=0
"RTN","ORQPTQ2",138,0)
 ; Access to DIC(42 global granted under DBIA #36:
"RTN","ORQPTQ2",139,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;GET WARD NAME FOR "CN"  LOOKUP
"RTN","ORQPTQ2",140,0)
 ; Next section modified 1/19/2001 by PKS:
"RTN","ORQPTQ2",141,0)
 F  D  Q:DFN'>0
"RTN","ORQPTQ2",142,0)
 .S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0
"RTN","ORQPTQ2",143,0)
 .S Y(ORI)=+DFN_"^"_$P(^DPT(+DFN,0),"^")
"RTN","ORQPTQ2",144,0)
 .S RBDAT=""
"RTN","ORQPTQ2",145,0)
 .; Add patient room/bed information where data exists:
"RTN","ORQPTQ2",146,0)
 .S RBDAT=$P($G(^DPT(+DFN,.101)),U)
"RTN","ORQPTQ2",147,0)
 .I RBDAT'="" D                                   ; Any R/B data?
"RTN","ORQPTQ2",148,0)
 ..I $L(RBDAT)<4 S RBDAT=RBDAT_"   "              ; Add if < 4 chars.
"RTN","ORQPTQ2",149,0)
 ..S RBDAT=$E(RBDAT,1,4)                          ; Get first 4 only.
"RTN","ORQPTQ2",150,0)
 .S Y(ORI)=Y(ORI)_U_RBDAT                         ; Add R/B to string
"RTN","ORQPTQ2",151,0)
 .S ORI=ORI+1                                     ; Increment counter.
"RTN","ORQPTQ2",152,0)
 ;
"RTN","ORQPTQ2",153,0)
 S:+$G(Y(1))<1 Y(1)="^No patients found."
"RTN","ORQPTQ2",154,0)
 Q
"RTN","ORQPTQ2",155,0)
NLIST(ORQY) ; return a null list
"RTN","ORQPTQ2",156,0)
 S ORQY(1)=""
"RTN","ORQPTQ2",157,0)
 Q
"RTN","ORQPTQ5")
0^24^B61497889
"RTN","ORQPTQ5",1,0)
ORQPTQ5 ; SLC/PKS - Functions for Patient Selection Lists. [9/10/03 11:05am]
"RTN","ORQPTQ5",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**82,85,187**;Dec 17, 1997
"RTN","ORQPTQ5",3,0)
 ;
"RTN","ORQPTQ5",4,0)
 Q
"RTN","ORQPTQ5",5,0)
 ;
"RTN","ORQPTQ5",6,0)
COMBDISP(ORQDUZ,ORQPTR) ; Display user's "Combination" pt selection sources.
"RTN","ORQPTQ5",7,0)
 ;
"RTN","ORQPTQ5",8,0)
 ; Variables used:
"RTN","ORQPTQ5",9,0)
 ;
"RTN","ORQPTQ5",10,0)
 ;   ORQCNT = Counter for number of entries displayed.
"RTN","ORQPTQ5",11,0)
 ;   ORQDUZ = DUZ of user involved.
"RTN","ORQPTQ5",12,0)
 ;   ORQPTR = IEN for user's OE/RR PT SEL COMBO file entries.
"RTN","ORQPTQ5",13,0)
 ;   ORQSRC = $O command values from combo entries, file ^OR(100.24,.
"RTN","ORQPTQ5",14,0)
 ;   ORQTXT = Text name string for combo entry pointers.
"RTN","ORQPTQ5",15,0)
 ;
"RTN","ORQPTQ5",16,0)
 N ORQCNT,ORQSRC,ORQTXT
"RTN","ORQPTQ5",17,0)
 ;
"RTN","ORQPTQ5",18,0)
 ; Check passed variables, punt on errors:
"RTN","ORQPTQ5",19,0)
 S ORQCNT=0
"RTN","ORQPTQ5",20,0)
 I '($D(ORQDUZ)) W !,"No user DUZ passed.",! Q ORQCNT
"RTN","ORQPTQ5",21,0)
 I '($D(ORQPTR)) W !,"No combination pointer passed.",! Q ORQCNT
"RTN","ORQPTQ5",22,0)
 I ORQDUZ="" W !,"No user DUZ passed.",! Q ORQCNT
"RTN","ORQPTQ5",23,0)
 I ORQPTR="" W !,"No combination pointer passed.",! Q ORQCNT
"RTN","ORQPTQ5",24,0)
 ;
"RTN","ORQPTQ5",25,0)
 ; Order through the user's combination source entries:
"RTN","ORQPTQ5",26,0)
 K ^TMP("OR",$J,"ORQCPL")
"RTN","ORQPTQ5",27,0)
 S ORQSRC=0
"RTN","ORQPTQ5",28,0)
 F  S ORQSRC=$O(^OR(100.24,ORQPTR,.01,ORQSRC)) Q:'ORQSRC  D
"RTN","ORQPTQ5",29,0)
 .;
"RTN","ORQPTQ5",30,0)
 .; Get the actual source name based on the pointer entry value:
"RTN","ORQPTQ5",31,0)
 .S ORQTXT=""
"RTN","ORQPTQ5",32,0)
 .S ORQTXT=$G(^OR(100.24,ORQPTR,.01,ORQSRC,0))
"RTN","ORQPTQ5",33,0)
 .I '(ORQTXT="") D
"RTN","ORQPTQ5",34,0)
 ..S ORQCNT=ORQCNT+1         ; Increment counter.
"RTN","ORQPTQ5",35,0)
 ..S ORQTXT=$$COMBNM(ORQTXT) ; Call tag to create complete string.
"RTN","ORQPTQ5",36,0)
 ..;
"RTN","ORQPTQ5",37,0)
 ..; Write to ^TMP file for sorting:
"RTN","ORQPTQ5",38,0)
 ..I ORQTXT'="" S ^TMP("OR",$J,"ORQCPL",$P(ORQTXT,U))=$P(ORQTXT,U,2)
"RTN","ORQPTQ5",39,0)
 ;
"RTN","ORQPTQ5",40,0)
 ; Write data to the screen:
"RTN","ORQPTQ5",41,0)
 I ORQCNT D                                       ; Data to write?
"RTN","ORQPTQ5",42,0)
 .S ORQTXT=""                                     ; Reset, re-use.
"RTN","ORQPTQ5",43,0)
 .F  S ORQTXT=$O(^TMP("OR",$J,"ORQCPL",ORQTXT)) Q:ORQTXT=""  D
"RTN","ORQPTQ5",44,0)
 ..W !,$G(^TMP("OR",$J,"ORQCPL",ORQTXT))
"RTN","ORQPTQ5",45,0)
 ;
"RTN","ORQPTQ5",46,0)
 K ^TMP("OR",$J,"ORQCPL")                         ; Clean house.
"RTN","ORQPTQ5",47,0)
 ;
"RTN","ORQPTQ5",48,0)
 Q ORQCNT                                         ; Return counter.
"RTN","ORQPTQ5",49,0)
 ;
"RTN","ORQPTQ5",50,0)
COMBNM(ORQVAL) ; Returns name of "Combination" source entry, ^OR(100.24 file.
"RTN","ORQPTQ5",51,0)
 ;
"RTN","ORQPTQ5",52,0)
 ; Returned string is "X_Name^String" where X is letter of type,
"RTN","ORQPTQ5",53,0)
 ;    Name is name of entity, and String resembles examples below:
"RTN","ORQPTQ5",54,0)
 ; 
"RTN","ORQPTQ5",55,0)
 ;       W_1W^Ward:       1W  SURGERY WEST
"RTN","ORQPTQ5",56,0)
 ;       P_JONES,WILMA MD^Provider:   JONES,WILMA MD
"RTN","ORQPTQ5",57,0)
 ;       T_SURGERYLIST2^Team List:  SURGERYLIST2
"RTN","ORQPTQ5",58,0)
 ;       (Etc.)
"RTN","ORQPTQ5",59,0)
 ;
"RTN","ORQPTQ5",60,0)
 ; Variables used:
"RTN","ORQPTQ5",61,0)
 ;
"RTN","ORQPTQ5",62,0)
 ;    ORQFILE = File for retrieval of name.
"RTN","ORQPTQ5",63,0)
 ;    ORQPTR  = Name string to return.
"RTN","ORQPTQ5",64,0)
 ;    ORQRTN  = Value returned by this function.
"RTN","ORQPTQ5",65,0)
 ;    ORQVAL  = Combo source entry pointer.
"RTN","ORQPTQ5",66,0)
 ;
"RTN","ORQPTQ5",67,0)
 N ORQPTR,ORQFILE,ORQRTN
"RTN","ORQPTQ5",68,0)
 I '($D(ORQVAL)) Q ORQRTN                         ; Error - punt.
"RTN","ORQPTQ5",69,0)
 ;
"RTN","ORQPTQ5",70,0)
 S ORQRTN="No source found...."                   ; Default init.
"RTN","ORQPTQ5",71,0)
 S ORQPTR=$P(ORQVAL,";")                          ; Get pointer.
"RTN","ORQPTQ5",72,0)
 S ORQFILE="^"_$P(ORQVAL,";",2)                   ; Get file.
"RTN","ORQPTQ5",73,0)
 ;
"RTN","ORQPTQ5",74,0)
 I ORQFILE="^DIC(42," D  Q ORQRTN                 ; Wards.
"RTN","ORQPTQ5",75,0)
 .S ORQRTN=$G(^DIC(42,ORQPTR,0))
"RTN","ORQPTQ5",76,0)
 .I $D(ORQRTN) S ORQRTN="W"_"_"_$P(ORQRTN,U)_U_"Ward:       "_$P(ORQRTN,U)_"  "_$P(ORQRTN,U,2)
"RTN","ORQPTQ5",77,0)
 ;
"RTN","ORQPTQ5",78,0)
 I ORQFILE="^VA(200," D  Q ORQRTN                 ; Providers.
"RTN","ORQPTQ5",79,0)
 .S ORQRTN=$G(^VA(200,ORQPTR,0))
"RTN","ORQPTQ5",80,0)
 .I $D(ORQRTN) S ORQRTN="P"_"_"_$P(ORQRTN,U)_U_"Provider:   "_$P(ORQRTN,U)
"RTN","ORQPTQ5",81,0)
 ;
"RTN","ORQPTQ5",82,0)
 I ORQFILE="^DIC(45.7," D  Q ORQRTN               ; Specialties.
"RTN","ORQPTQ5",83,0)
 .S ORQRTN=$G(^DIC(45.7,ORQPTR,0))
"RTN","ORQPTQ5",84,0)
 .I $D(ORQRTN) S ORQRTN="S"_"_"_$P(ORQRTN,U)_U_"Specialty:  "_$P(ORQRTN,U)
"RTN","ORQPTQ5",85,0)
 ;
"RTN","ORQPTQ5",86,0)
 I ORQFILE="^OR(100.21," D  Q ORQRTN              ; Team Lists.
"RTN","ORQPTQ5",87,0)
 .S ORQRTN=$G(^OR(100.21,ORQPTR,0))
"RTN","ORQPTQ5",88,0)
 .I $D(ORQRTN) S ORQRTN="T"_"_"_$P(ORQRTN,U)_U_"Team List:  "_$P(ORQRTN,U)
"RTN","ORQPTQ5",89,0)
 ;
"RTN","ORQPTQ5",90,0)
 I ORQFILE="^SC(" D  Q ORQRTN                     ; Clinics.
"RTN","ORQPTQ5",91,0)
 .S ORQRTN=$G(^SC(ORQPTR,0))
"RTN","ORQPTQ5",92,0)
 .I $D(ORQRTN) S ORQRTN="C"_"_"_$P(ORQRTN,U)_U_"Clinic:     "_$P(ORQRTN,U)
"RTN","ORQPTQ5",93,0)
 ;
"RTN","ORQPTQ5",94,0)
 ; Return value (null will be returned if nothing matched):
"RTN","ORQPTQ5",95,0)
 Q ORQRTN
"RTN","ORQPTQ5",96,0)
 ;
"RTN","ORQPTQ5",97,0)
PTSCOMBO(ORQTYP,ORQPTR) ; Write ^TMP("OR",$J,"PATIENTS","B") patient entries.
"RTN","ORQPTQ5",98,0)
 ;
"RTN","ORQPTQ5",99,0)
 ; Called from COMBPTS^ORQPTQ6.
"RTN","ORQPTQ5",100,0)
 ; (ORQCNT,ORQPDAT,ORQPIEN,ORQPNM,ORQPSTAT,SORT new'd in calling tag.)
"RTN","ORQPTQ5",101,0)
 ; (Array ORY new'd in calling routine ORQPTQ2.)
"RTN","ORQPTQ5",102,0)
 ;
"RTN","ORQPTQ5",103,0)
 ; Variables used:
"RTN","ORQPTQ5",104,0)
 ;
"RTN","ORQPTQ5",105,0)
 ;    ORQDOB  = Patient DOB.
"RTN","ORQPTQ5",106,0)
 ;    ORQDONE = Flag for end of patient records.
"RTN","ORQPTQ5",107,0)
 ;    ORQIDT  = Clinic app't date stored in internal format.
"RTN","ORQPTQ5",108,0)
 ;    ORQMORE = Room/bed or appointment information.
"RTN","ORQPTQ5",109,0)
 ;    ORQPTR  = PASSED: Pointer from subfile entry, combination file.
"RTN","ORQPTQ5",110,0)
 ;    ORQSNM  = Name of source from subfile entry pointer.
"RTN","ORQPTQ5",111,0)
 ;    ORQSNM4 = First four letters of name of source.
"RTN","ORQPTQ5",112,0)
 ;    ORQSSN  = Patient SSN suffix.
"RTN","ORQPTQ5",113,0)
 ;    ORQTYP  = PASSED: Holds source type:
"RTN","ORQPTQ5",114,0)
 ;
"RTN","ORQPTQ5",115,0)
 ;                W = Ward
"RTN","ORQPTQ5",116,0)
 ;                P = Provider
"RTN","ORQPTQ5",117,0)
 ;                S = Specialty
"RTN","ORQPTQ5",118,0)
 ;                T = Team List
"RTN","ORQPTQ5",119,0)
 ;                C = Clinic
"RTN","ORQPTQ5",120,0)
 ;
"RTN","ORQPTQ5",121,0)
 N ORQDOB,ORQDONE,ORQIDT,ORQMORE,ORQSNM,ORQSNM4,ORQSSN
"RTN","ORQPTQ5",122,0)
 ;
"RTN","ORQPTQ5",123,0)
 ; Initialize variables:
"RTN","ORQPTQ5",124,0)
 S ORQDONE=0
"RTN","ORQPTQ5",125,0)
 S ORQCNT=1
"RTN","ORQPTQ5",126,0)
 ;
"RTN","ORQPTQ5",127,0)
 ; Get name data for source:
"RTN","ORQPTQ5",128,0)
 S ORQSNM4=""                                     ; Default setting.
"RTN","ORQPTQ5",129,0)
 I ORQTYP="W" S ORQSNM4=$G(^DIC(42,ORQPTR,0))     ; Wards.
"RTN","ORQPTQ5",130,0)
 I ORQTYP="P" S ORQSNM4=$G(^VA(200,ORQPTR,0))     ; Providers.
"RTN","ORQPTQ5",131,0)
 I ORQTYP="S" S ORQSNM4=$G(^DIC(45.7,ORQPTR,0))   ; Specialties.
"RTN","ORQPTQ5",132,0)
 I ORQTYP="T" S ORQSNM4=$G(^OR(100.21,ORQPTR,0))  ; Team Lists.
"RTN","ORQPTQ5",133,0)
 I ORQTYP="C" S ORQSNM4=$G(^SC(ORQPTR,0))         ; Clinics.
"RTN","ORQPTQ5",134,0)
 ;
"RTN","ORQPTQ5",135,0)
 ; Assure use of first 4 letters of name:
"RTN","ORQPTQ5",136,0)
 S ORQSNM4=$P(ORQSNM4,U)_"    "                   ; Add 4 for safety.
"RTN","ORQPTQ5",137,0)
 S ORQSNM4=$E(ORQSNM4,1,4)                        ; Get first 4 only.
"RTN","ORQPTQ5",138,0)
 ;
"RTN","ORQPTQ5",139,0)
 ; Add label prefix to source name:
"RTN","ORQPTQ5",140,0)
 S ORQSNM=""                                      ; Default setting.
"RTN","ORQPTQ5",141,0)
 S ORQSNM=$S(ORQTYP="W":"Wd ",ORQTYP="P":"Pr ",ORQTYP="S":"Sp ",ORQTYP="T":"Tm ",ORQTYP="C":"Cl ",1:"     ")           ; Get correct name.
"RTN","ORQPTQ5",142,0)
 S ORQSNM=ORQSNM_ORQSNM4                          ; Prepend label.
"RTN","ORQPTQ5",143,0)
 ;
"RTN","ORQPTQ5",144,0)
 ; Order thru ORY array created by calls in calling routine:
"RTN","ORQPTQ5",145,0)
 S ORQPDAT=""                                     ; Initialize.
"RTN","ORQPTQ5",146,0)
 F  S ORQPDAT=$G(ORY(ORQCNT)) Q:((ORQPDAT="")!(ORQDONE))  D
"RTN","ORQPTQ5",147,0)
 .;
"RTN","ORQPTQ5",148,0)
 .; Clear variables each time:
"RTN","ORQPTQ5",149,0)
 .S (ORQPIEN,ORQPNM,ORQSSN,ORQDOB,ORQIDT,ORQMORE,ORQPSTAT)=""
"RTN","ORQPTQ5",150,0)
 .;
"RTN","ORQPTQ5",151,0)
 .S ORQPIEN=$P(ORQPDAT,U)                         ; Get patient IEN.
"RTN","ORQPTQ5",152,0)
 .I ORQPIEN="" S ORQDONE=1 Q                      ; Punt if no IEN.
"RTN","ORQPTQ5",153,0)
 .S ORQPNM=$P(ORQPDAT,U,2)                        ; Get patient name.
"RTN","ORQPTQ5",154,0)
 .;
"RTN","ORQPTQ5",155,0)
 .; Get patient SSN suffix:
"RTN","ORQPTQ5",156,0)
 .S ORQSSN=$$ID($G(ORQPIEN))
"RTN","ORQPTQ5",157,0)
 .;
"RTN","ORQPTQ5",158,0)
 .; Get patient DOB:
"RTN","ORQPTQ5",159,0)
 .S ORQDOB=$$FMTE^XLFDT($P($G(^DPT(ORQPIEN,0)),U,3))
"RTN","ORQPTQ5",160,0)
 .;
"RTN","ORQPTQ5",161,0)
 .; Get patient room/bed information where data exists:
"RTN","ORQPTQ5",162,0)
 .S ORQMORE=$P($G(^DPT(ORQPIEN,.101)),U)
"RTN","ORQPTQ5",163,0)
 .;
"RTN","ORQPTQ5",164,0)
 .; Assure at least 4 letters for any existing room/bed data:
"RTN","ORQPTQ5",165,0)
 .I ORQMORE'="" D                                 ; Any data now?
"RTN","ORQPTQ5",166,0)
 ..I $L(ORQMORE)<4 D                              ; Less than 4 now?
"RTN","ORQPTQ5",167,0)
 ...S ORQMORE=ORQMORE_"   "                       ; Add 3 for safety.
"RTN","ORQPTQ5",168,0)
 ...S ORQMORE=$E(ORQMORE,1,4)                     ; Get first 4 only.
"RTN","ORQPTQ5",169,0)
 .;
"RTN","ORQPTQ5",170,0)
 .; Get clinic appointment information, if applicable:
"RTN","ORQPTQ5",171,0)
 .I ORQTYP="C" D
"RTN","ORQPTQ5",172,0)
 ..S ORQMORE=""                                   ; Reset, re-use.
"RTN","ORQPTQ5",173,0)
 ..S ORQMORE=$P(ORQPDAT,U,4)                      ; App't data.
"RTN","ORQPTQ5",174,0)
 ..S ORQIDT=ORQMORE                               ; Internal format.
"RTN","ORQPTQ5",175,0)
 ..S $P(ORQMORE,".",2)=$E($P(ORQMORE,".",2)_"000",1,4)
"RTN","ORQPTQ5",176,0)
 ..S ORQMORE=$$FMTE^XLFDT($P(ORQMORE,U))          ; Format app't.
"RTN","ORQPTQ5",177,0)
 ..S ORQPSTAT=$P(ORQPDAT,U,6)                     ; Ipt/Opt status.
"RTN","ORQPTQ5",178,0)
 .;
"RTN","ORQPTQ5",179,0)
 .; Write a sorted entry in ^TMP("OR",$J,"PATIENTS","B"):
"RTN","ORQPTQ5",180,0)
 .;    (Node's data:)
"RTN","ORQPTQ5",181,0)
 .;    (DFN^PtName^SSN^DOB^SourceName^App't/Room/Bed^SourceIEN^IOStat)
"RTN","ORQPTQ5",182,0)
 .I ORQPIEN'="" D
"RTN","ORQPTQ5",183,0)
 ..;
"RTN","ORQPTQ5",184,0)
 ..; Write using source name first if sorted by "S" (source) -or-
"RTN","ORQPTQ5",185,0)
 ..;    if "P" (app't) sort and not a clinic:
"RTN","ORQPTQ5",186,0)
 ..I ((SORT="S")!((SORT="P")&(ORQTYP'="C"))) D  Q
"RTN","ORQPTQ5",187,0)
 ...S ^TMP("OR",$J,"PATIENTS","B",ORQSNM_" "_ORQPNM_" "_ORQPIEN_" "_ORQIDT)=ORQPIEN_U_ORQPNM_U_ORQSSN_U_ORQDOB_U_ORQSNM_U_ORQMORE_U_ORQPTR_U_ORQIDT_U_ORQPSTAT
"RTN","ORQPTQ5",188,0)
 ..; 
"RTN","ORQPTQ5",189,0)
 ..; Use source source+app't first if "P" (app't) sort, and a clinic:
"RTN","ORQPTQ5",190,0)
 ..I ((ORQTYP="C")&(SORT="P")) D  Q
"RTN","ORQPTQ5",191,0)
 ...S ^TMP("OR",$J,"PATIENTS","B",ORQSNM_" "_ORQIDT_" "_ORQPNM_" "_ORQPIEN)=ORQPIEN_U_ORQPNM_U_ORQSSN_U_ORQDOB_U_ORQSNM_U_ORQMORE_U_ORQPTR_U_ORQIDT_U_ORQPSTAT
"RTN","ORQPTQ5",192,0)
 ..;
"RTN","ORQPTQ5",193,0)
 ..; If not by source or source/app't, default to alpha ("A") sort:
"RTN","ORQPTQ5",194,0)
 ..S ^TMP("OR",$J,"PATIENTS","B",ORQPNM_" "_ORQPIEN_" "_ORQSNM_" "_ORQIDT)=ORQPIEN_U_ORQPNM_U_ORQSSN_U_ORQDOB_U_ORQSNM_U_ORQMORE_U_ORQPTR_U_ORQIDT_U_ORQPSTAT
"RTN","ORQPTQ5",195,0)
 .;
"RTN","ORQPTQ5",196,0)
 .S ORQCNT=ORQCNT+1                               ; Increment counter.
"RTN","ORQPTQ5",197,0)
 ;
"RTN","ORQPTQ5",198,0)
 Q
"RTN","ORQPTQ5",199,0)
 ;
"RTN","ORQPTQ5",200,0)
ID(ORQPIEN) ; Return short ID for patient ID.
"RTN","ORQPTQ5",201,0)
 ; (Copied from ORQPT routine and modified.)
"RTN","ORQPTQ5",202,0)
 ;
"RTN","ORQPTQ5",203,0)
 N ID
"RTN","ORQPTQ5",204,0)
 ;
"RTN","ORQPTQ5",205,0)
 S ID=$P($G(^DPT(ORQPIEN,.36)),U,4)               ; Gets short ID.
"RTN","ORQPTQ5",206,0)
 I '$L(ID) D                                      ; - or -
"RTN","ORQPTQ5",207,0)
 .S ID=$E($P($G(^DPT(ORQPIEN,0)),U,9),6,9)        ; Last 4 of SSN
"RTN","ORQPTQ5",208,0)
 ;
"RTN","ORQPTQ5",209,0)
 Q "("_$E(ORQPNM)_ID_")"
"RTN","ORQPTQ5",210,0)
 ;
"RTN","ORQPTQ6")
0^25^B43002726
"RTN","ORQPTQ6",1,0)
ORQPTQ6 ; SLC/PKS [8/27/03 11:20am]
"RTN","ORQPTQ6",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**82,85,187**;Dec 17, 1997
"RTN","ORQPTQ6",3,0)
 ;
"RTN","ORQPTQ6",4,0)
 ; Called by BUILD^ORQPT (LM) and DEFLIST^ORQPTQ11 (GUI).
"RTN","ORQPTQ6",5,0)
 ;
"RTN","ORQPTQ6",6,0)
 Q
"RTN","ORQPTQ6",7,0)
 ;
"RTN","ORQPTQ6",8,0)
COMBPTS(ORQLM,ORQCPTR,ORBDATE,OREDATE) ; Build "Combination" pt. list.
"RTN","ORQPTQ6",9,0)
 ; SLC/PKS.
"RTN","ORQPTQ6",10,0)
 ;
"RTN","ORQPTQ6",11,0)
 ; NOTE: Any calls to this tag need to deal with ORQLM passed 
"RTN","ORQPTQ6",12,0)
 ;       variable appropriately.  Notice where it is evaluated 
"RTN","ORQPTQ6",13,0)
 ;       and make sure code specifies the setting of ORQLM (a 
"RTN","ORQPTQ6",14,0)
 ;       boolean variable) properly for the call.
"RTN","ORQPTQ6",15,0)
 ;
"RTN","ORQPTQ6",16,0)
 ; Variables used:
"RTN","ORQPTQ6",17,0)
 ; 
"RTN","ORQPTQ6",18,0)
 ;    MSG      = Holds error message, if any.
"RTN","ORQPTQ6",19,0)
 ;    ORBDATE  = PASSED: Beginning date for clinic appointments.
"RTN","ORQPTQ6",20,0)
 ;    OREDATE  = PASSED: End date for clinic appointments.
"RTN","ORQPTQ6",21,0)
 ;    ORQCNT   = Counter for patients.
"RTN","ORQPTQ6",22,0)
 ;    ORQCPTR  = PASSED: Combination file [^OR(100.24,] pointer.
"RTN","ORQPTQ6",23,0)
 ;    ORQDUZ   = DUZ of current user.
"RTN","ORQPTQ6",24,0)
 ;    ORQERR   = Array for error msg(s) return from DB calls.
"RTN","ORQPTQ6",25,0)
 ;    ORQFILE  = Combo source entry file.
"RTN","ORQPTQ6",26,0)
 ;    ORQLM    = PASSED: Called from LM ("1") or GUI ("0")?
"RTN","ORQPTQ6",27,0)
 ;    ORQPDAT  = String holder for arrays and ^TMP file values.
"RTN","ORQPTQ6",28,0)
 ;    ORQPDOB  = Patient DOB.
"RTN","ORQPTQ6",29,0)
 ;    ORQPFMDT = Hold app't date/time in FM internal format.
"RTN","ORQPTQ6",30,0)
 ;    ORQPIEN  = Variable for patient IEN, ^TMP("OR",$J,"PTSCOMBO")
"RTN","ORQPTQ6",31,0)
 ;    ORQPMOR  = Appointment or Room/Bed information.
"RTN","ORQPTQ6",32,0)
 ;    ORQPNM   = Variable for patient name, ^TMP("OR",$J,"PTSCOMBO")
"RTN","ORQPTQ6",33,0)
 ;    ORQPSNM  = Source name display string holder.
"RTN","ORQPTQ6",34,0)
 ;    ORQPSSN  = Patient ID (first letter of last name, last 4 SSN).
"RTN","ORQPTQ6",35,0)
 ;    ORQPSTAT = Ipt or Opt (or C/NS) status for clinic lists.
"RTN","ORQPTQ6",36,0)
 ;    ORQPTMP  = Temporary string construction holder.
"RTN","ORQPTQ6",37,0)
 ;    ORQPTR   = Pointer to combo source entry.
"RTN","ORQPTQ6",38,0)
 ;    ORQRTN   = Holds return value from DB calls.
"RTN","ORQPTQ6",39,0)
 ;    ORQSPCH  = Holds return value from SELCHK^ORWPT.
"RTN","ORQPTQ6",40,0)
 ;    ORQSRC   = Variable to hold each combo source subscript.
"RTN","ORQPTQ6",41,0)
 ;    ORQSRCID = IEN of source.
"RTN","ORQPTQ6",42,0)
 ;    ORQTXT   = Variable to hold stored values.
"RTN","ORQPTQ6",43,0)
 ;    ORY      = Array used in sub-calls.
"RTN","ORQPTQ6",44,0)
 ;
"RTN","ORQPTQ6",45,0)
 ; (NOTE: LCNT,LIST,MSG,NUM,SORT new'd in calling routines for LM.)
"RTN","ORQPTQ6",46,0)
 ;
"RTN","ORQPTQ6",47,0)
 N ORQCNT,ORQDUZ,ORQERR,ORQFILE,ORQPCNT,ORQPDAT,ORQPDOB,ORQPFMDT,ORQPIEN,ORQPNM,ORQPMOR,ORQPSNM,ORQPSSN,ORQPSTAT,ORQPTMP,ORQPTR,ORQRTN,ORQSPCH,ORQSRC,ORQSRCID,ORQTXT,ORY
"RTN","ORQPTQ6",48,0)
 ;
"RTN","ORQPTQ6",49,0)
 K ^TMP("OR",$J,"PATIENTS")                     ; Safety cleanup.
"RTN","ORQPTQ6",50,0)
 ;
"RTN","ORQPTQ6",51,0)
 ; Do preliminary settings, cleanup, look for an existing user record:
"RTN","ORQPTQ6",52,0)
 S MSG=""                                       ; Default.
"RTN","ORQPTQ6",53,0)
 I '$D(DUZ) D
"RTN","ORQPTQ6",54,0)
 .S MSG="No user DUZ info."
"RTN","ORQPTQ6",55,0)
 .I 'ORQLM D GUIABORT
"RTN","ORQPTQ6",56,0)
 .Q
"RTN","ORQPTQ6",57,0)
 S ORQDUZ=DUZ
"RTN","ORQPTQ6",58,0)
 K ORQERR
"RTN","ORQPTQ6",59,0)
 S ORQRTN=$$FIND1^DIC(100.24,"","QX",ORQDUZ,"","","ORQERR")
"RTN","ORQPTQ6",60,0)
 K ORQERR
"RTN","ORQPTQ6",61,0)
 D CLEAN^DILF ; Clean up after DB call.
"RTN","ORQPTQ6",62,0)
 ;
"RTN","ORQPTQ6",63,0)
 ; If no combination record, then punt:
"RTN","ORQPTQ6",64,0)
 I +ORQRTN<1 D
"RTN","ORQPTQ6",65,0)
 .S MSG="No combination entry."
"RTN","ORQPTQ6",66,0)
 .I 'ORQLM D GUIABORT
"RTN","ORQPTQ6",67,0)
 .Q
"RTN","ORQPTQ6",68,0)
 ;
"RTN","ORQPTQ6",69,0)
 I ORQLM D CLEAN^VALM10 ; VALM housekeeping.
"RTN","ORQPTQ6",70,0)
 ;
"RTN","ORQPTQ6",71,0)
 ; Order through the user's combination source entries:
"RTN","ORQPTQ6",72,0)
 I 'ORQLM S SORT="A" ; Required variable for PTSCOMBO^ORQPTQ5.
"RTN","ORQPTQ6",73,0)
 S ORQSRC=0
"RTN","ORQPTQ6",74,0)
 F  S ORQSRC=$O(^OR(100.24,ORQRTN,.01,ORQSRC)) Q:'ORQSRC  D
"RTN","ORQPTQ6",75,0)
 .K ORY                                         ; Clean up each time.
"RTN","ORQPTQ6",76,0)
 .S ORQTXT=""                                   ; Initialize.
"RTN","ORQPTQ6",77,0)
 .S ORQTXT=$G(^OR(100.24,ORQRTN,.01,ORQSRC,0))  ; Get record's value.
"RTN","ORQPTQ6",78,0)
 .;
"RTN","ORQPTQ6",79,0)
 .; In case of error, punt:
"RTN","ORQPTQ6",80,0)
 .I ORQTXT="" D
"RTN","ORQPTQ6",81,0)
 ..S MSG="Combination source entry error."
"RTN","ORQPTQ6",82,0)
 ..I 'ORQLM D GUIABORT                          ; GUI is different.
"RTN","ORQPTQ6",83,0)
 ..Q
"RTN","ORQPTQ6",84,0)
 .I ORQTXT="" Q
"RTN","ORQPTQ6",85,0)
 .S ORQPTR=$P(ORQTXT,";")                       ; Get pointer.
"RTN","ORQPTQ6",86,0)
 .S ORQFILE="^"_$P(ORQTXT,";",2)                ; Get file.
"RTN","ORQPTQ6",87,0)
 .;
"RTN","ORQPTQ6",88,0)
 .; Get info for each source entry and build ORY array accordingly.
"RTN","ORQPTQ6",89,0)
 .I ORQFILE="^DIC(42," D  Q                     ; Wards.
"RTN","ORQPTQ6",90,0)
 ..D WARDPTS^ORQPTQ2(.ORY,ORQPTR)
"RTN","ORQPTQ6",91,0)
 ..I $D(ORY) D PTSCOMBO^ORQPTQ5("W",ORQPTR)     ; Process ORY array.
"RTN","ORQPTQ6",92,0)
 .I ORQFILE="^VA(200," D  Q                     ; Providers.
"RTN","ORQPTQ6",93,0)
 ..D PROVPTS^ORQPTQ2(.ORY,ORQPTR)
"RTN","ORQPTQ6",94,0)
 ..I $D(ORY) D PTSCOMBO^ORQPTQ5("P",ORQPTR)     ; Process ORY array.
"RTN","ORQPTQ6",95,0)
 .I ORQFILE="^DIC(45.7," D  Q                   ; Specialties.
"RTN","ORQPTQ6",96,0)
 ..D SPECPTS^ORQPTQ2(.ORY,ORQPTR)
"RTN","ORQPTQ6",97,0)
 ..I $D(ORY) D PTSCOMBO^ORQPTQ5("S",ORQPTR)     ; Process ORY array.
"RTN","ORQPTQ6",98,0)
 .I ORQFILE="^OR(100.21," D  Q                  ; Team Lists
"RTN","ORQPTQ6",99,0)
 ..D TEAMPTS^ORQPTQ1(.ORY,ORQPTR)
"RTN","ORQPTQ6",100,0)
 ..I $D(ORY) D PTSCOMBO^ORQPTQ5("T",ORQPTR)     ; Process ORY array.
"RTN","ORQPTQ6",101,0)
 .I ORQFILE="^SC(" D  Q                         ; Clinics.
"RTN","ORQPTQ6",102,0)
 ..D CLINPTS^ORQPTQ2(.ORY,ORQPTR,ORBDATE,OREDATE)
"RTN","ORQPTQ6",103,0)
 ..I $D(ORY) D PTSCOMBO^ORQPTQ5("C",ORQPTR)     ; Process ORY array.
"RTN","ORQPTQ6",104,0)
 ;
"RTN","ORQPTQ6",105,0)
 ; Order thru ^TMP file "B" node entries returned by previous calls:
"RTN","ORQPTQ6",106,0)
 S ORQCNT=0                                     ; Reset for final use.
"RTN","ORQPTQ6",107,0)
 I $D(^TMP("OR",$J,"PATIENTS")) D
"RTN","ORQPTQ6",108,0)
 .S ORQPDAT=""
"RTN","ORQPTQ6",109,0)
 .F  S ORQPDAT=$O(^TMP("OR",$J,"PATIENTS","B",ORQPDAT)) Q:ORQPDAT=""  D
"RTN","ORQPTQ6",110,0)
 ..;
"RTN","ORQPTQ6",111,0)
 ..; Clear variables each time through:
"RTN","ORQPTQ6",112,0)
 ..S (ORQTXT,ORQPFMDT,ORQPIEN,ORQPNM,ORQPSSN,ORQPSTAT,ORQPDOB,ORQPSNM,ORQPMOR,ORQSRCID)=""
"RTN","ORQPTQ6",113,0)
 ..;
"RTN","ORQPTQ6",114,0)
 ..; Retrieve node's value:
"RTN","ORQPTQ6",115,0)
 ..S ORQTXT=$G(^TMP("OR",$J,"PATIENTS","B",ORQPDAT))
"RTN","ORQPTQ6",116,0)
 ..;
"RTN","ORQPTQ6",117,0)
 ..; Set indvidual variables:
"RTN","ORQPTQ6",118,0)
 ..S ORQPIEN=$P(ORQTXT,U)                       ; Patient DFN.
"RTN","ORQPTQ6",119,0)
 ..S ORQPNM=$P(ORQTXT,U,2)                      ; Patient name.
"RTN","ORQPTQ6",120,0)
 ..S ORQPSSN=$P(ORQTXT,U,3)                     ; Patient ID.
"RTN","ORQPTQ6",121,0)
 ..S ORQPDOB=$P(ORQTXT,U,4)                     ; Patient DOB.
"RTN","ORQPTQ6",122,0)
 ..S ORQPSNM=$P(ORQTXT,U,5)                     ; Source data.
"RTN","ORQPTQ6",123,0)
 ..S ORQPMOR=$P(ORQTXT,U,6)                     ; App't or R/B info.
"RTN","ORQPTQ6",124,0)
 ..S ORQSRCID=$P(ORQTXT,U,7)                    ; Source IEN.
"RTN","ORQPTQ6",125,0)
 ..S ORQPFMDT=$P(ORQTXT,U,8)                    ; App't FM date/time.
"RTN","ORQPTQ6",126,0)
 ..S ORQPSTAT=$P(ORQTXT,U,9)                    ; Ipt/Opt status.
"RTN","ORQPTQ6",127,0)
 ..S ORQCNT=ORQCNT+1                            ; Increment counter.
"RTN","ORQPTQ6",128,0)
 ..;
"RTN","ORQPTQ6",129,0)
 ..; If a "sensitive" patient, reassign SSN, DOB data:
"RTN","ORQPTQ6",130,0)
 ..S ORQSPCH=$$SSN^DPTLK1(ORQPIEN)
"RTN","ORQPTQ6",131,0)
 ..I ORQSPCH["*" S ORQPSSN=""
"RTN","ORQPTQ6",132,0)
 ..S ORQPDOB=$$DOB^DPTLK1(ORQPIEN)
"RTN","ORQPTQ6",133,0)
 ..;
"RTN","ORQPTQ6",134,0)
 ..; Make some preliminary data settings:
"RTN","ORQPTQ6",135,0)
 ..S ORQPTMP=""
"RTN","ORQPTQ6",136,0)
 ..I ORQPSNM'="" S ORQPTMP=ORQPSNM_"  "
"RTN","ORQPTQ6",137,0)
 ..S ORQPTMP=ORQPTMP_ORQPMOR
"RTN","ORQPTQ6",138,0)
 ..;
"RTN","ORQPTQ6",139,0)
 ..; Write new ^TMP file "PATIENTS" nodes:
"RTN","ORQPTQ6",140,0)
 ..I ORQLM D                                    ; For LM.
"RTN","ORQPTQ6",141,0)
 ...S ^TMP("OR",$J,"PATIENTS","IDX",ORQCNT)=ORQPIEN_U_ORQPNM
"RTN","ORQPTQ6",142,0)
 ...S ^TMP("OR",$J,"PATIENTS",ORQCNT,0)=$$LJ^XLFSTR(ORQCNT,5)_$$LJ^XLFSTR(ORQPNM,31)_$$LJ^XLFSTR(ORQPSSN,10)_$$LJ^XLFSTR(ORQPDOB,15)_ORQPTMP_$$LJ^XLFSTR(ORQPDOB,15)_$$RJ^XLFSTR(ORQSRCID,8)_"  "_ORQPFMDT
"RTN","ORQPTQ6",143,0)
 ...D CNTRL^VALM10(ORQCNT,1,5,IOINHI,IOINORM)
"RTN","ORQPTQ6",144,0)
 ..;
"RTN","ORQPTQ6",145,0)
 ..I 'ORQLM D                                   ; For GUI.
"RTN","ORQPTQ6",146,0)
 ...S ORQTXT=ORQPIEN_U_ORQPNM_U_ORQPSNM_U_ORQPMOR_U_ORQPSSN_U_ORQPDOB_U_ORQSRCID_U_ORQPFMDT_U_ORQPSTAT
"RTN","ORQPTQ6",147,0)
 ...S ^TMP("OR",$J,"PATIENTS",ORQCNT,0)=ORQTXT  ; Actual global write.
"RTN","ORQPTQ6",148,0)
 ;
"RTN","ORQPTQ6",149,0)
 ; Set counters for return, if applicable; do cleanup:
"RTN","ORQPTQ6",150,0)
 I ORQCNT S (LCNT,NUM)=ORQCNT
"RTN","ORQPTQ6",151,0)
 K ORY
"RTN","ORQPTQ6",152,0)
 ;
"RTN","ORQPTQ6",153,0)
 ; If no patients found, prepare user message:
"RTN","ORQPTQ6",154,0)
 I 'ORQCNT S MSG="No patients found."
"RTN","ORQPTQ6",155,0)
 ;
"RTN","ORQPTQ6",156,0)
 ; If an error message exists, dump any partial processing and quit:
"RTN","ORQPTQ6",157,0)
 I MSG'="" D  Q
"RTN","ORQPTQ6",158,0)
 .I 'ORQLM D GUIABORT
"RTN","ORQPTQ6",159,0)
 .I ORQLM K ^TMP("OR",$J,"PATIENTS")
"RTN","ORQPTQ6",160,0)
 ;
"RTN","ORQPTQ6",161,0)
 ; Next lines create #line^^#pts^context value entry:
"RTN","ORQPTQ6",162,0)
 I ORQLM D
"RTN","ORQPTQ6",163,0)
 .S ^TMP("OR",$J,"PATIENTS",0)=ORQCNT_U_ORQCNT_U_$G(LIST)
"RTN","ORQPTQ6",164,0)
 .S ^TMP("OR",$J,"PATIENTS","#")=$O(^ORD(101,"B","ORQPT SELECT PATIENT",0))_"^1:"_ORQCNT
"RTN","ORQPTQ6",165,0)
 ;
"RTN","ORQPTQ6",166,0)
 ; Standard clean-up for GUI:
"RTN","ORQPTQ6",167,0)
 I 'ORQLM D
"RTN","ORQPTQ6",168,0)
 .K LCNT,LIST,MSG,NUM,SORT
"RTN","ORQPTQ6",169,0)
 .K ^TMP("OR",$J,"PATIENTS","B")
"RTN","ORQPTQ6",170,0)
 ;
"RTN","ORQPTQ6",171,0)
 Q
"RTN","ORQPTQ6",172,0)
 ;
"RTN","ORQPTQ6",173,0)
GUIABORT ; Cleanup when aborting when called from GUI.
"RTN","ORQPTQ6",174,0)
 ;
"RTN","ORQPTQ6",175,0)
 K ^TMP("OR",$J,"PATIENTS")
"RTN","ORQPTQ6",176,0)
 S ^TMP("OR",$J,"PATIENTS",0)=""
"RTN","ORQPTQ6",177,0)
 K LCNT,LIST,MSG,NUM,SORT
"RTN","ORQPTQ6",178,0)
 ;
"RTN","ORQPTQ6",179,0)
 Q
"RTN","ORQPTQ6",180,0)
 ;
"RTN","ORQQPX")
0^29^B57352754
"RTN","ORQQPX",1,0)
ORQQPX ; SLC/JM - PCE and Reminder routines ;9/3/2003
"RTN","ORQQPX",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,184,187**;Dec 17, 1997
"RTN","ORQQPX",3,0)
 Q
"RTN","ORQQPX",4,0)
IMMLIST(ORY,ORPT) ;return pt's immunization list:
"RTN","ORQQPX",5,0)
 ;id^name^date/time^reaction^inverse d/t
"RTN","ORQQPX",6,0)
 I $L($T(IMMUN^PXRHS03))<1 S ORY(1)="^Immunizations not available." Q
"RTN","ORQQPX",7,0)
 K ^TMP("PXI",$J)
"RTN","ORQQPX",8,0)
 D IMMUN^PXRHS03(ORPT)
"RTN","ORQQPX",9,0)
 N ORI,IMM,IVDT,IEN,X
"RTN","ORQQPX",10,0)
 S ORI=0,IMM="",IVDT="",IEN=0
"RTN","ORQQPX",11,0)
 F  S IMM=$O(^TMP("PXI",$J,IMM)) Q:IMM=""  D
"RTN","ORQQPX",12,0)
 .F  S IVDT=$O(^TMP("PXI",$J,IMM,IVDT)) Q:IVDT=""  D
"RTN","ORQQPX",13,0)
 ..F  S IEN=$O(^TMP("PXI",$J,IMM,IVDT,IEN)) Q:IEN<1  D
"RTN","ORQQPX",14,0)
 ...S ORI=ORI+1,X=$G(^TMP("PXI",$J,IMM,IVDT,IEN,0)) Q:'$L(X)
"RTN","ORQQPX",15,0)
 ...S ORY(ORI)=IEN_U_IMM_U_$P(X,U,3)
"RTN","ORQQPX",16,0)
 ...I $P(X,U,7)=1 S ORY(ORI)=ORY(ORI)_U_$P(X,U,6)_U_IVDT
"RTN","ORQQPX",17,0)
 ...E  S ORY(ORI)=ORY(ORI)_U_U_IVDT
"RTN","ORQQPX",18,0)
 S:+$G(ORY(1))<1 ORY(1)="^No immunizations found.^2900101^^9999999"
"RTN","ORQQPX",19,0)
 K ^TMP("PXI",$J)
"RTN","ORQQPX",20,0)
 Q
"RTN","ORQQPX",21,0)
DETAIL(ORY,IMM) ; return detailed information for an immunization
"RTN","ORQQPX",22,0)
 S ORY(1)="Detailed information on immunizations is not available."
"RTN","ORQQPX",23,0)
 Q
"RTN","ORQQPX",24,0)
REMIND(ORY,ORPT) ;return pt's currently due PCE clinical reminders
"RTN","ORQQPX",25,0)
 ; in the format file 811.9 ien^reminder print name^date due^last occur.
"RTN","ORQQPX",26,0)
 N ORTMPLST,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT,ORLOC
"RTN","ORQQPX",27,0)
 S ORJ=0
"RTN","ORQQPX",28,0)
 ;
"RTN","ORQQPX",29,0)
 ;get patient's location flag (INPATIENT ONLY - outpt locations cannot be
"RTN","ORQQPX",30,0)
 ;reliably determined, and many simultaneous outpt locations can occur):
"RTN","ORQQPX",31,0)
 I +$G(ORPT)>0 D
"RTN","ORQQPX",32,0)
 .N DFN S DFN=ORPT,VA200="" D OERR^VADPT
"RTN","ORQQPX",33,0)
 .I +$G(VAIN(4))>0 S ORLOC=+$G(^DIC(42,+$G(VAIN(4)),44))
"RTN","ORQQPX",34,0)
 .K VA200,VAIN
"RTN","ORQQPX",35,0)
 ;
"RTN","ORQQPX",36,0)
 D REMLIST(.ORTMPLST,$G(ORLOC))
"RTN","ORQQPX",37,0)
 ;D GETLST^XPAR(.ORTMPLST,"USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORQQPX SEARCH ITEMS","Q",.ORERR)
"RTN","ORQQPX",38,0)
 ;I ORERR>0 S ORY(1)=U_"Error: "_$P(ORERR,U,2) Q
"RTN","ORQQPX",39,0)
 S ORI=0 F  S ORI=$O(ORTMPLST(ORI)) Q:'ORI  D
"RTN","ORQQPX",40,0)
 .S ORIEN=$P(ORTMPLST(ORI),U,2)
"RTN","ORQQPX",41,0)
 .K ^TMP("PXRHM",$J)
"RTN","ORQQPX",42,0)
 .D MAIN^PXRM(ORPT,ORIEN,0)
"RTN","ORQQPX",43,0)
 .S ORTXT="",ORTXT=$O(^TMP("PXRHM",$J,ORIEN,ORTXT)) Q:ORTXT=""  D
"RTN","ORQQPX",44,0)
 ..S ORX=^TMP("PXRHM",$J,ORIEN,ORTXT)
"RTN","ORQQPX",45,0)
 ..S ORDUEDT=$P(ORX,U,2),ORLASTDT=$P(ORX,U,3)
"RTN","ORQQPX",46,0)
 ..S ORLASTDT=$S(+$G(ORLASTDT)>0:ORLASTDT,1:"")  ;null if not a date
"RTN","ORQQPX",47,0)
 ..S ORJ=ORJ+1
"RTN","ORQQPX",48,0)
 ..S ORY(ORJ)=ORIEN_U_ORTXT_U_ORDUEDT_U_ORLASTDT
"RTN","ORQQPX",49,0)
 .K ^TMP("PXRHM",$J)
"RTN","ORQQPX",50,0)
 Q
"RTN","ORQQPX",51,0)
REMDET(ORY,ORPT,ORIEN) ;return detail for a pt's clinical reminder
"RTN","ORQQPX",52,0)
 ; ORY - return array
"RTN","ORQQPX",53,0)
 ; ORPT - patient DFN
"RTN","ORQQPX",54,0)
 ; ORIEN - clinical reminder (811.9 ien)
"RTN","ORQQPX",55,0)
 K ^TMP("PXRHM",$J)
"RTN","ORQQPX",56,0)
 D MAIN^PXRM(ORPT,ORIEN,5)     ; 5 returns all reminder info
"RTN","ORQQPX",57,0)
 N CR,I,J,ORTXT S I=1
"RTN","ORQQPX",58,0)
 S ORTXT="",ORTXT=$O(^TMP("PXRHM",$J,ORIEN,ORTXT)) Q:ORTXT=""  D
"RTN","ORQQPX",59,0)
 .S J=0 F  S J=$O(^TMP("PXRHM",$J,ORIEN,ORTXT,"TXT",J)) Q:J=""  D
"RTN","ORQQPX",60,0)
 ..S ORY(I)=^TMP("PXRHM",$J,ORIEN,ORTXT,"TXT",J),I=I+1
"RTN","ORQQPX",61,0)
 K ^TMP("PXRHM",$J)
"RTN","ORQQPX",62,0)
 Q
"RTN","ORQQPX",63,0)
NEWACTIV(ORY) ;Return true if Interactive Reminders are active
"RTN","ORQQPX",64,0)
 S ORY=0
"RTN","ORQQPX",65,0)
 I $T(APPL^PXRMRPCA)'="",+$G(DUZ) D
"RTN","ORQQPX",66,0)
 . N SRV
"RTN","ORQQPX",67,0)
 . S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORQQPX",68,0)
 . S ORY=$$GET^XPAR(DUZ_";VA(200,^SRV.`"_+$G(SRV)_"^DIV^SYS","PXRM GUI REMINDERS ACTIVE",1,"Q")
"RTN","ORQQPX",69,0)
 . I +ORY S ORY=1
"RTN","ORQQPX",70,0)
 . E  S ORY=0
"RTN","ORQQPX",71,0)
 Q
"RTN","ORQQPX",72,0)
HISTLOC(LST) ;Returns a list of historical locations
"RTN","ORQQPX",73,0)
 N IDX,PTR,LINE,NAME
"RTN","ORQQPX",74,0)
 K ^TMP("OR",$J,"LOC")
"RTN","ORQQPX",75,0)
 S LST=$NA(^TMP("OR",$J,"LOC"))
"RTN","ORQQPX",76,0)
 S (LINE,IDX)=0
"RTN","ORQQPX",77,0)
 F  S IDX=$O(^AUTTLOC(IDX)) Q:'IDX  D
"RTN","ORQQPX",78,0)
 .S PTR=+$G(^AUTTLOC(IDX,0))
"RTN","ORQQPX",79,0)
 .I +PTR D
"RTN","ORQQPX",80,0)
 ..S NAME=$P($G(^DIC(4,PTR,0)),U)
"RTN","ORQQPX",81,0)
 ..I NAME'="" D
"RTN","ORQQPX",82,0)
 ...S LINE=LINE+1
"RTN","ORQQPX",83,0)
 ...S ^TMP("OR",$J,"LOC",LINE)=PTR_U_NAME
"RTN","ORQQPX",84,0)
 Q
"RTN","ORQQPX",85,0)
GETFLDRS(ORFLDRS) ;Return Visible Reminder Folders
"RTN","ORQQPX",86,0)
 ; Codes: D=Due, A=Applicable, N=Not Applicable, E=Evaluated, O=Other
"RTN","ORQQPX",87,0)
 N SRV,ORERR,ORTMP
"RTN","ORQQPX",88,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORQQPX",89,0)
 D GETLST^XPAR(.ORTMP,"USR^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORQQPX REMINDER FOLDERS","Q",.ORERR)
"RTN","ORQQPX",90,0)
 I +ORTMP S ORFLDRS=$P($G(ORTMP(1)),U,2)
"RTN","ORQQPX",91,0)
 E  S ORFLDRS="DAO"
"RTN","ORQQPX",92,0)
 Q
"RTN","ORQQPX",93,0)
SETFLDRS(ORY,ORFLDRS) ;Sets Visible Reminder Folders for the current user
"RTN","ORQQPX",94,0)
 N ORERR
"RTN","ORQQPX",95,0)
 D EN^XPAR(DUZ_";VA(200,","ORQQPX REMINDER FOLDERS",1,ORFLDRS,.ORERR)
"RTN","ORQQPX",96,0)
 S ORY=1
"RTN","ORQQPX",97,0)
 Q
"RTN","ORQQPX",98,0)
GETDEFOL(ORDEFLOC) ;Return Default Outside Locations
"RTN","ORQQPX",99,0)
 N SRV,ORERR
"RTN","ORQQPX",100,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORQQPX",101,0)
 D GETLST^XPAR(.ORDEFLOC,"USR^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORQQPX DEFAULT LOCATIONS","Q",.ORERR)
"RTN","ORQQPX",102,0)
 Q
"RTN","ORQQPX",103,0)
INSCURS(ORY) ; Returns status of ORQQPX REMINDER TEXT AT CURSOR
"RTN","ORQQPX",104,0)
 N SRV,ORERR,ORTMP
"RTN","ORQQPX",105,0)
 S ORY=0,SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORQQPX",106,0)
 D GETLST^XPAR(.ORTMP,"USR^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORQQPX REMINDER TEXT AT CURSOR","Q",.ORERR)
"RTN","ORQQPX",107,0)
 I +ORTMP S ORY=$P($G(ORTMP(1)),U,2)
"RTN","ORQQPX",108,0)
 Q
"RTN","ORQQPX",109,0)
NEWCVOK(ORY) ; Returns status of 
"RTN","ORQQPX",110,0)
 N SRV,ORERR,ORTMP
"RTN","ORQQPX",111,0)
 S ORY=0,SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORQQPX",112,0)
 D GETLST^XPAR(.ORTMP,"USR^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORQQPX NEW REMINDER PARAMS","Q",.ORERR)
"RTN","ORQQPX",113,0)
 I +ORTMP S ORY=$P($G(ORTMP(1)),U,2)
"RTN","ORQQPX",114,0)
 Q
"RTN","ORQQPX",115,0)
ADDNAME(ORX) ; Add Reminder or Category Name as 3rd piece
"RTN","ORQQPX",116,0)
 N CAT,IEN
"RTN","ORQQPX",117,0)
 S CAT=$E($P(ORX,U,2),2)
"RTN","ORQQPX",118,0)
 S IEN=$E($P(ORX,U,2),3,99)
"RTN","ORQQPX",119,0)
 I +IEN D
"RTN","ORQQPX",120,0)
 .I CAT="R" S $P(ORX,U,3)=$P($G(^PXD(811.9,IEN,0)),U,3)
"RTN","ORQQPX",121,0)
 .I CAT="C" S $P(ORX,U,3)=$P($G(^PXRMD(811.7,IEN,0)),U)
"RTN","ORQQPX",122,0)
 Q ORX
"RTN","ORQQPX",123,0)
REMACCUM(ORY,LVL,TYP,SORT,CLASS) ; Accumulates ORTMP into ORY
"RTN","ORQQPX",124,0)
 ; Format of entries in ORQQPX COVER SHEET REMINDERS:
"RTN","ORQQPX",125,0)
 ;   L:Lock;R:Remove;N:Normal / C:Category;R:Reminder / Cat or Rem IEN
"RTN","ORQQPX",126,0)
 N IDX,I,J,K,M,FOUND,ORERR,ORTMP,FLAG,IEN
"RTN","ORQQPX",127,0)
 N FFLAG,FIEN,OUT,P2,ADD,DOADD,CODE
"RTN","ORQQPX",128,0)
 I LVL="CLASS" D  I 1
"RTN","ORQQPX",129,0)
 .N ORLST,ORCLS,ORCLSPRM,ORWP
"RTN","ORQQPX",130,0)
 .S ORCLSPRM="ORQQPX COVER SHEET REM CLASSES"
"RTN","ORQQPX",131,0)
 .D GETLST^XPAR(.ORLST,"SYS",ORCLSPRM,"Q",.ORERR)
"RTN","ORQQPX",132,0)
 .S I=0,M=0,CLASS=$G(CLASS)
"RTN","ORQQPX",133,0)
 .F  S I=$O(ORLST(I)) Q:'I  D
"RTN","ORQQPX",134,0)
 ..S ORCLS=$P(ORLST(I),U,1)
"RTN","ORQQPX",135,0)
 ..I +CLASS S ADD=(ORCLS=+CLASS) I 1
"RTN","ORQQPX",136,0)
 ..E  S ADD=$$ISA^USRLM(DUZ,ORCLS,.ORERR)
"RTN","ORQQPX",137,0)
 ..I +ADD D
"RTN","ORQQPX",138,0)
 ...D GETWP^XPAR(.ORWP,"SYS",ORCLSPRM,ORCLS,.ORERR)
"RTN","ORQQPX",139,0)
 ...S K=0
"RTN","ORQQPX",140,0)
 ...F  S K=$O(ORWP(K)) Q:'K  D
"RTN","ORQQPX",141,0)
 ....S M=M+1
"RTN","ORQQPX",142,0)
 ....S J=$P(ORWP(K,0),";",1)
"RTN","ORQQPX",143,0)
 ....S ORTMP(M)=J_U_$P(ORWP(K,0),";",2)
"RTN","ORQQPX",144,0)
 E  D GETLST^XPAR(.ORTMP,LVL,"ORQQPX COVER SHEET REMINDERS",TYP,.ORERR)
"RTN","ORQQPX",145,0)
 S I=0,IDX=$O(ORY(999999),-1)+1,ADD=(SORT="")
"RTN","ORQQPX",146,0)
 F  S I=$O(ORTMP(I)) Q:'I  D
"RTN","ORQQPX",147,0)
 .S (FOUND,J)=0,P2=$P(ORTMP(I),U,2)
"RTN","ORQQPX",148,0)
 .S FLAG=$E(P2),IEN=$E(P2,2,999)
"RTN","ORQQPX",149,0)
 .I ADD S DOADD=1
"RTN","ORQQPX",150,0)
 .E  D
"RTN","ORQQPX",151,0)
 ..S DOADD=0
"RTN","ORQQPX",152,0)
 ..F  S J=$O(ORY(J)) Q:'J  D  Q:FOUND
"RTN","ORQQPX",153,0)
 ...S P2=$P(ORY(J),U,2)
"RTN","ORQQPX",154,0)
 ...S FIEN=$E(P2,2,999)
"RTN","ORQQPX",155,0)
 ...I FIEN=IEN S FOUND=J,FFLAG=$E(P2)
"RTN","ORQQPX",156,0)
 ..I FOUND D  I 1
"RTN","ORQQPX",157,0)
 ...I FLAG="R",FFLAG'="L" K ORY(FOUND)
"RTN","ORQQPX",158,0)
 ...I FLAG'=FFLAG,(FLAG_FFLAG)["L" S $E(P2)="L",$P(ORY(FOUND),U,2)=P2
"RTN","ORQQPX",159,0)
 ..E  I (FLAG'="R") S DOADD=1
"RTN","ORQQPX",160,0)
 .I DOADD D
"RTN","ORQQPX",161,0)
 ..S OUT(IDX)=ORTMP(I)
"RTN","ORQQPX",162,0)
 ..S $P(OUT(IDX),U)=$P(OUT(IDX),U)_SORT
"RTN","ORQQPX",163,0)
 ..I SORT="" S OUT(IDX)=$$ADDNAME(OUT(IDX))
"RTN","ORQQPX",164,0)
 ..S IDX=IDX+1
"RTN","ORQQPX",165,0)
 M ORY=OUT
"RTN","ORQQPX",166,0)
 Q
"RTN","ORQQPX",167,0)
ADDREM(ORY,IDX,IEN) ; Add Reminder to ORY list
"RTN","ORQQPX",168,0)
 I $D(ORY("B",IEN)) Q               ; See if it's in the list
"RTN","ORQQPX",169,0)
 I '$D(^PXD(811.9,IEN)) Q           ; Check if Exists
"RTN","ORQQPX",170,0)
 I $P(^PXD(811.9,IEN,0),U,6)'="" Q  ; Check if Active
"RTN","ORQQPX",171,0)
 ;check to see if the reminder is assigned to CPRS
"RTN","ORQQPX",172,0)
 I $P($G(^PXD(811.9,IEN,100)),U,4)'["C",$P($G(^PXD(811.9,IEN,100)),U,4)'="*" Q
"RTN","ORQQPX",173,0)
 S ORY(IDX)=IDX_U_IEN
"RTN","ORQQPX",174,0)
 S ORY("B",IEN)=""
"RTN","ORQQPX",175,0)
 Q
"RTN","ORQQPX",176,0)
ADDCAT(ORY,IDX,IEN) ; Add Category Reminders to ORY list
"RTN","ORQQPX",177,0)
 N ORREM,I,IDX2,NREM
"RTN","ORQQPX",178,0)
 D CATREM^PXRMAPI0(IEN,.ORREM)
"RTN","ORQQPX",179,0)
 S I=0
"RTN","ORQQPX",180,0)
 F  S I=$O(ORREM(I)) Q:'I  D
"RTN","ORQQPX",181,0)
 . S IDX2="00000"_I
"RTN","ORQQPX",182,0)
 . S IDX2=$E(IDX2,$L(IDX2)-5,99)
"RTN","ORQQPX",183,0)
 . D ADDREM(.ORY,+(IDX_"."_IDX2),$P(ORREM(I),U,1))
"RTN","ORQQPX",184,0)
 Q
"RTN","ORQQPX",185,0)
REMLIST(ORY,LOC) ;Returns a list of all cover sheet reminders
"RTN","ORQQPX",186,0)
 N SRV,I,J,ORLST,CODE,IDX,IEN,NEWP
"RTN","ORQQPX",187,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORQQPX",188,0)
 D NEWCVOK(.NEWP)
"RTN","ORQQPX",189,0)
 I 'NEWP D GETLST^XPAR(.ORY,"USR^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORQQPX SEARCH ITEMS","Q",.ORERR) Q
"RTN","ORQQPX",190,0)
 D REMACCUM(.ORLST,"PKG","Q",1000)
"RTN","ORQQPX",191,0)
 D REMACCUM(.ORLST,"SYS","Q",2000)
"RTN","ORQQPX",192,0)
 D REMACCUM(.ORLST,"DIV","Q",3000)
"RTN","ORQQPX",193,0)
 I +SRV D REMACCUM(.ORLST,"SRV.`"_+$G(SRV),"Q",4000)
"RTN","ORQQPX",194,0)
 I +LOC D REMACCUM(.ORLST,"LOC.`"_+$G(LOC),"Q",5000)
"RTN","ORQQPX",195,0)
 D REMACCUM(.ORLST,"CLASS","Q",6000)
"RTN","ORQQPX",196,0)
 D REMACCUM(.ORLST,"USR","Q",7000)
"RTN","ORQQPX",197,0)
 S I=0
"RTN","ORQQPX",198,0)
 F  S I=$O(ORLST(I)) Q:'I  D
"RTN","ORQQPX",199,0)
 .S IDX=$P(ORLST(I),U,1)
"RTN","ORQQPX",200,0)
 .F  Q:'$D(ORY(IDX))  S IDX=IDX+1
"RTN","ORQQPX",201,0)
 .S CODE=$E($P(ORLST(I),U,2),2)
"RTN","ORQQPX",202,0)
 .S IEN=$E($P(ORLST(I),U,2),3,999)
"RTN","ORQQPX",203,0)
 .I CODE="R" D ADDREM(.ORY,IDX,IEN)
"RTN","ORQQPX",204,0)
 .I CODE="C" D ADDCAT(.ORY,IDX,IEN)
"RTN","ORQQPX",205,0)
 K ORY("B")
"RTN","ORQQPX",206,0)
 Q
"RTN","ORQQPX",207,0)
LVREMLST(ORY,LVL,CLASS) ;Returns cover sheet reminders at a specified level
"RTN","ORQQPX",208,0)
 D REMACCUM(.ORY,LVL,"Q","",$G(CLASS))
"RTN","ORQQPX",209,0)
 Q
"RTN","ORQQPX",210,0)
SAVELVL(ORY,LVL,CLASS,DATA) ;Save cover sheet reminders at a specified level
"RTN","ORQQPX",211,0)
 N ORERR,PARAM,I
"RTN","ORQQPX",212,0)
 I LVL="CLASS" D  I 1
"RTN","ORQQPX",213,0)
 .S PARAM="ORQQPX COVER SHEET REM CLASSES"
"RTN","ORQQPX",214,0)
 .S LVL="SYS"
"RTN","ORQQPX",215,0)
 .D DEL^XPAR(LVL,PARAM,"`"_CLASS,.ORERR)
"RTN","ORQQPX",216,0)
 .D EN^XPAR(LVL,PARAM,"`"_CLASS,.DATA,.ORERR)
"RTN","ORQQPX",217,0)
 E  D
"RTN","ORQQPX",218,0)
 .S PARAM="ORQQPX COVER SHEET REMINDERS"
"RTN","ORQQPX",219,0)
 .D NDEL^XPAR(LVL,PARAM,.ORERR)
"RTN","ORQQPX",220,0)
 .S I=0
"RTN","ORQQPX",221,0)
 .F  S I=$O(DATA(I)) Q:'I  D
"RTN","ORQQPX",222,0)
 ..D EN^XPAR(LVL,PARAM,$P(DATA(I),U,1),$P(DATA(I),U,2),.ORERR)
"RTN","ORQQPX",223,0)
 S ORY=1
"RTN","ORQQPX",224,0)
 Q
"RTN","ORQQPX",225,0)
GETLIST(ORY,ORLOC) ;Returns a list of all cover sheet reminders
"RTN","ORQQPX",226,0)
 N I
"RTN","ORQQPX",227,0)
 D REMLIST(.ORY,$G(ORLOC))
"RTN","ORQQPX",228,0)
 S I=0
"RTN","ORQQPX",229,0)
 F  S I=$O(ORY(I)) Q:'I  D
"RTN","ORQQPX",230,0)
 .S ORY(I)=$P(ORY(I),U,2)
"RTN","ORQQPX",231,0)
 Q
"RTN","ORQQPX",232,0)
EVALCOVR(ORY,ORPT,ORLOC) ; Evaluate Cover Sheet Reminders
"RTN","ORQQPX",233,0)
 N ORTMP
"RTN","ORQQPX",234,0)
 D GETLIST(.ORTMP,$G(ORLOC))
"RTN","ORQQPX",235,0)
 D ALIST^ORQQPXRM(.ORY,ORPT,.ORTMP)
"RTN","ORQQPX",236,0)
 Q
"RTN","ORQQPXRM")
0^30^B9706760
"RTN","ORQQPXRM",1,0)
ORQQPXRM ; SLC/PJH - Functions for reminder data ;4/15/2003
"RTN","ORQQPXRM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,173,187**;Dec 17, 1997
"RTN","ORQQPXRM",3,0)
 ;
"RTN","ORQQPXRM",4,0)
 ;ORQQPXRM DIALOG ACTIVE
"RTN","ORQQPXRM",5,0)
ACTIVE(ORY,ORLIST) D ACTIVE^PXRMRPCC(.ORY,.ORLIST) Q  ; DBIA 3080
"RTN","ORQQPXRM",6,0)
 ;
"RTN","ORQQPXRM",7,0)
 ;ORQQPXRM REMINDER EVALUATION
"RTN","ORQQPXRM",8,0)
ALIST(ORY,ORPT,ORLIST) D ALIST^PXRMRPCA(.ORY,.ORPT,.ORLIST) Q  ; DBIA 3078
"RTN","ORQQPXRM",9,0)
 ;
"RTN","ORQQPXRM",10,0)
 ;ORQQPXRM REMINDERS APPLICABLE
"RTN","ORQQPXRM",11,0)
APPL(ORY,ORPT,ORLOC) D EVALCOVR^ORQQPX(.ORY,ORPT,ORLOC) Q
"RTN","ORQQPXRM",12,0)
 ;D APPL^PXRMRPCA(.ORY,ORPT,ORLOC) Q  ; DBIA 3078
"RTN","ORQQPXRM",13,0)
 ;
"RTN","ORQQPXRM",14,0)
 ;ORQQPXRM REMINDER CATEGORIES
"RTN","ORQQPXRM",15,0)
CATEGORY(ORY,ORPT,ORLOC) ;
"RTN","ORQQPXRM",16,0)
 D CATEGORY^PXRMRPCA(.ORY,ORPT,ORLOC) Q  ; DBIA 3078
"RTN","ORQQPXRM",17,0)
 ;
"RTN","ORQQPXRM",18,0)
 ;ORQQPXRM REMINDER DIALOG
"RTN","ORQQPXRM",19,0)
DIALOG(ORY,ORREM,DFN) ;
"RTN","ORQQPXRM",20,0)
 ; DBIA 3080
"RTN","ORQQPXRM",21,0)
 I $G(DFN)'="" D DIALOG^PXRMRPCC(.ORY,ORREM,DFN)
"RTN","ORQQPXRM",22,0)
 I $G(DFN)="" D DIALOG^PXRMRPCC(.ORY,ORREM)
"RTN","ORQQPXRM",23,0)
 Q
"RTN","ORQQPXRM",24,0)
 ;
"RTN","ORQQPXRM",25,0)
 ;ORQQPXRM EDUCATION SUBTOPICS
"RTN","ORQQPXRM",26,0)
EDS(ORY,OREDU) D EDS^PXRMRPCB(.ORY,OREDU) Q  ; DBIA 3079
"RTN","ORQQPXRM",27,0)
 ;
"RTN","ORQQPXRM",28,0)
 ;ORQQPXRM EDUCATION SUMMARY
"RTN","ORQQPXRM",29,0)
EDL(ORY,OREM) D EDL^PXRMRPCB(.ORY,OREM) Q  ; DBIA 3079
"RTN","ORQQPXRM",30,0)
 ;
"RTN","ORQQPXRM",31,0)
 ;ORQQPXRM EDUCATION TOPIC
"RTN","ORQQPXRM",32,0)
EDU(ORY,OREDU) D EDU^PXRMRPCB(.ORY,OREDU) Q  ; DBIA 3079
"RTN","ORQQPXRM",33,0)
 ;
"RTN","ORQQPXRM",34,0)
 ;ORQQPXRM PROGRESS NOTE HEADER
"RTN","ORQQPXRM",35,0)
HDR(ORY,ORLOC) D HDR^PXRMRPCC(.ORY,ORLOC) Q  ; DBIA 3080
"RTN","ORQQPXRM",36,0)
 ;
"RTN","ORQQPXRM",37,0)
 ;ORQQPXRM REMINDERS UNEVALUATED
"RTN","ORQQPXRM",38,0)
LIST(ORY,ORPT,ORLOC) D GETLIST^ORQQPX(.ORY,ORLOC) Q
"RTN","ORQQPXRM",39,0)
 ;D LIST^PXRMRPCA(.ORY,ORPT,ORLOC) Q  ; DBIA 3078
"RTN","ORQQPXRM",40,0)
 ;
"RTN","ORQQPXRM",41,0)
 ;ORQQPXRM MENTAL HEALTH
"RTN","ORQQPXRM",42,0)
MH(ORY,OTEST) D MH^PXRMRPCC(.ORY,OTEST) Q  ; DBIA 3080
"RTN","ORQQPXRM",43,0)
 ;
"RTN","ORQQPXRM",44,0)
 ;ORQQPXRM MENTAL HEALTH RESULTS
"RTN","ORQQPXRM",45,0)
MHR(ORY,RESULT,ORES) D MHR^PXRMRPCC(.ORY,RESULT,.ORES) Q  ; DBIA 3080
"RTN","ORQQPXRM",46,0)
 ;
"RTN","ORQQPXRM",47,0)
 ;ORQQPXRM MENTAL HEALTH SAVE
"RTN","ORQQPXRM",48,0)
MHS(ORY,ORES) D MHS^PXRMRPCC(.ORY,.ORES) Q  ; DBIA 3080
"RTN","ORQQPXRM",49,0)
 ;
"RTN","ORQQPXRM",50,0)
 ;ORQQPXRM MST UPDATE
"RTN","ORQQPXRM",51,0)
MST(ORY,ORPT,ORDATE,ORSTAT,ORPROV,ORFTYP,ORFIEN,ORRES) ;
"RTN","ORQQPXRM",52,0)
 D MST^PXRMRPCC(.ORY,ORPT,ORDATE,ORSTAT,ORPROV,ORFTYP,ORFIEN,ORRES) Q
"RTN","ORQQPXRM",53,0)
 ;
"RTN","ORQQPXRM",54,0)
 ;ORQQPXRM WOMEN HEALTH RESULT
"RTN","ORQQPXRM",55,0)
WH(ORY,ORRESULT) ;
"RTN","ORQQPXRM",56,0)
 D WH^PXRMRPCC(.ORY,.ORRESULT) Q
"RTN","ORQQPXRM",57,0)
 ;
"RTN","ORQQPXRM",58,0)
WHLETTER(ORY,ORIEN) ;
"RTN","ORQQPXRM",59,0)
 D LETTER^WVRPCNO1(.ORY,ORIEN) Q
"RTN","ORQQPXRM",60,0)
 ;
"RTN","ORQQPXRM",61,0)
WHREPORT(ORY,ORIEN) ;
"RTN","ORQQPXRM",62,0)
 D RESULTS^WVALERTF(.ORY,ORIEN) Q
"RTN","ORQQPXRM",63,0)
 ;
"RTN","ORQQPXRM",64,0)
 ;ORQQPXRM DIALOG PROMPTS
"RTN","ORQQPXRM",65,0)
PROMPT(ORY,ORDLG,ORDCUR,ORFTYP) ;
"RTN","ORQQPXRM",66,0)
 D PROMPT^PXRMRPCC(.ORY,ORDLG,ORDCUR,ORFTYP) Q  ; DBIA 3080
"RTN","ORQQPXRM",67,0)
 ;
"RTN","ORQQPXRM",68,0)
 ;ORQQPXRM REMINDER DETAIL
"RTN","ORQQPXRM",69,0)
REMDET(ORY,ORPT,ORIEN) D REMDET^PXRMRPCA(.ORY,ORPT,ORIEN) Q  ; DBIA 3078
"RTN","ORQQPXRM",70,0)
 ;
"RTN","ORQQPXRM",71,0)
 ;ORQQPXRM REMINDER INQUIRY
"RTN","ORQQPXRM",72,0)
RES(ORY,ORREM) D RES^PXRMRPCC(.ORY,ORREM) Q  ; DBIA 3080
"RTN","ORQQPXRM",73,0)
 ;
"RTN","ORQQPXRM",74,0)
 ;ORQQPXRM REMINDER WEB
"RTN","ORQQPXRM",75,0)
WEB(ORY,ORREM) D WEB^PXRMRPCA(.ORY,ORREM) Q  ; DBIA 3078
"RTN","ORQQPXRM",76,0)
 ;
"RTN","ORQQPXRM",77,0)
ACT(REM) ;ORQQPX SEARCH ITEMS - XPAR value screen for active reminders
"RTN","ORQQPXRM",78,0)
 ;Treat a null value as inactive
"RTN","ORQQPXRM",79,0)
 I 'REM Q 0
"RTN","ORQQPXRM",80,0)
 ;Treat a non-existen entry as inactive
"RTN","ORQQPXRM",81,0)
 I $G(^PXD(811.9,REM,0))="" Q 0
"RTN","ORQQPXRM",82,0)
 ;Check IF inactive flag is set
"RTN","ORQQPXRM",83,0)
 I ($T(INACTIVE^PXRM)'=""),$$INACTIVE^PXRM(REM) Q 0 ; DBIA 2182
"RTN","ORQQPXRM",84,0)
 ;Otherwise active
"RTN","ORQQPXRM",85,0)
 Q 1
"RTN","ORQQPXRM",86,0)
 ;
"RTN","ORQQPXRM",87,0)
REMVER(ORLIST) ;
"RTN","ORQQPXRM",88,0)
 S ORLIST=$$VERSION^XPDUTL("PXRM")
"RTN","ORQQPXRM",89,0)
 Q
"RTN","ORQQPXRM",90,0)
 ;
"RTN","ORQQPXRM",91,0)
GEC(ORRESULT,IEN,DFN,VISIT) ;
"RTN","ORQQPXRM",92,0)
 I $$VERSION^XPDUTL("PXRM")["2.0" D API^PXRMGECU(.ORRESULT,IEN,DFN,VISIT,1)
"RTN","ORQQPXRM",93,0)
 Q
"RTN","ORQQPXRM",94,0)
 ;
"RTN","ORQQPXRM",95,0)
GECF(RESULT,DFN,FIN) ;
"RTN","ORQQPXRM",96,0)
 I $$VERSION^XPDUTL("PXRM")["2.0" D FINISHED^PXRMGECU(DFN,FIN)
"RTN","ORQQPXRM",97,0)
 Q
"RTN","ORQQPXRM",98,0)
 ;
"RTN","ORQQPXRM",99,0)
GECP(RESULT,DFN) ;
"RTN","ORQQPXRM",100,0)
 I $$VERSION^XPDUTL("PXRM")["2.0",$G(DFN)'="" S RESULT=$$STATUS^PXRMGECU(DFN)
"RTN","ORQQPXRM",101,0)
 Q
"RTN","ORQQPXRM",102,0)
 ;
"RTN","ORWDFH")
0^14^B32858711
"RTN","ORWDFH",1,0)
ORWDFH ; SLC/KCM/JLI - Diet Order calls for Windows Dialogs ;12/12/00  14:44
"RTN","ORWDFH",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,92,141,187**;Dec 17, 1997
"RTN","ORWDFH",3,0)
TXT(LST,DFN)    ; Return text of current & future diets for a patient
"RTN","ORWDFH",4,0)
 S LST(1)="Current Diet:  "_$$DIET^ORCDFH(DFN)
"RTN","ORWDFH",5,0)
 N FUTLST D FUT(.FUTLST,DFN) I $D(FUTLST)>1 D
"RTN","ORWDFH",6,0)
 . S LST(2)="Future Diet Orders:",ILST=2
"RTN","ORWDFH",7,0)
 . S I=0 F  S I=$O(FUTLST(I)) Q:'I  D
"RTN","ORWDFH",8,0)
 . . S X=$$FMTE^XLFDT(I,2)_"  "_$P(FUTLST(I),U,2)
"RTN","ORWDFH",9,0)
 . . S LST(ILST)=$S(ILST=2:"Future Diet Orders:  "_X,1:"   "_X)
"RTN","ORWDFH",10,0)
 . . S ILST=ILST+1
"RTN","ORWDFH",11,0)
 Q
"RTN","ORWDFH",12,0)
FUT(LST,DFN)    ; Return a list of future diet orders
"RTN","ORWDFH",13,0)
 N DGRP,NXTDT,ORIFN,ORVP,ORTX
"RTN","ORWDFH",14,0)
 S ORVP=DFN_";DPT(",DGRP=$O(^ORD(100.98,"B","DO",0)),NXTDT=$$NOW^XLFDT
"RTN","ORWDFH",15,0)
 F  S NXTDT=$O(^OR(100,"AW",ORVP,DGRP,NXTDT)) Q:NXTDT'>0  D
"RTN","ORWDFH",16,0)
 . S ORIFN=+$O(^OR(100,"AW",ORVP,DGRP,NXTDT,0))
"RTN","ORWDFH",17,0)
 . I $P($G(^OR(100,ORIFN,3)),U,3)'=8 Q  ; only scheduled diets
"RTN","ORWDFH",18,0)
 . D TEXT^ORQ12(.ORTX,ORIFN) S LST(NXTDT)=NXTDT_U_$G(ORTX(1))
"RTN","ORWDFH",19,0)
 Q
"RTN","ORWDFH",20,0)
PARAM(ORLST,ORVP,ORLOC)  ; Return dietetics parameters for a patient at a location
"RTN","ORWDFH",21,0)
 ; ORLOC: hospital location ptr to ^SC #44
"RTN","ORWDFH",22,0)
 ; ORLST(1)=EB1^EB2^EB3^LB1^LB2^LB3^EN1^EN2^...LE2^LE3
"RTN","ORWDFH",23,0)
 ; ORLST(2)=BAB^BAE^NAB^NAE^EAB^EAE^BegB^BegN^BegE^Bagged
"RTN","ORWDFH",24,0)
 ; ORLST(3)=type of service^RegIEN^NPOIEN^EarlyIEN^LateIEN^TFIFN
"RTN","ORWDFH",25,0)
 Q:'+ORVP
"RTN","ORWDFH",26,0)
 S ORVP=+ORVP_";DPT(",ORLOC=+ORLOC
"RTN","ORWDFH",27,0)
 I $D(^SC(ORLOC,42)) S ORLOC=$G(^SC(ORLOC,42))
"RTN","ORWDFH",28,0)
 E  S ORLOC=0
"RTN","ORWDFH",29,0)
 D:ORLOC>0 EN1^FHWOR8(ORLOC,.ORLST)
"RTN","ORWDFH",30,0)
 I '$L($G(ORLST(3))) S ORLST(3)="T"
"RTN","ORWDFH",31,0)
 S $P(ORLST(3),U,2)=$O(^ORD(101.43,"S.DIET","REGULAR",0))
"RTN","ORWDFH",32,0)
 S $P(ORLST(3),U,3)=$O(^ORD(101.43,"S.DIET","NPO",0))
"RTN","ORWDFH",33,0)
 S $P(ORLST(3),U,4)=$O(^ORD(101.43,"S.E/L T","EARLY TRAY",0))
"RTN","ORWDFH",34,0)
 S $P(ORLST(3),U,5)=$O(^ORD(101.43,"S.E/L T","LATE TRAY",0))
"RTN","ORWDFH",35,0)
 N TF S TF=$$CURRENT^ORCDFH("TF") I $L(TF,";")=1 S TF=TF_";1"
"RTN","ORWDFH",36,0)
 I TF,'$$FUTURE^ORCDFH("EFFECTIVE DATE/TIME") S $P(ORLST(3),U,6)=TF
"RTN","ORWDFH",37,0)
 Q
"RTN","ORWDFH",38,0)
ATTR(REC,OI)    ; Return OI^Text^Type^Precedence^AskExpire for a diet
"RTN","ORWDFH",39,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT S REC="0^"_$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore." Q
"RTN","ORWDFH",40,0)
 S REC=OI_U_$P($G(^ORD(101.43,OI,0)),U)_U_$G(^("FH"))
"RTN","ORWDFH",41,0)
 Q
"RTN","ORWDFH",42,0)
DIETS(Y,FROM,DIR)       ; Return a subset of active diets, including NPO
"RTN","ORWDFH",43,0)
 ; Y(n)=IEN^.01 Name^.01 Name  -or-  IEN^Synonym <.01 Name>^.01 Name
"RTN","ORWDFH",44,0)
 N I,IEN,CNT,X,CURTM
"RTN","ORWDFH",45,0)
 S I=0,CNT=44,CURTM=$$NOW^XLFDT
"RTN","ORWDFH",46,0)
 F  Q:I'<CNT  S FROM=$O(^ORD(101.43,"S.DIET",FROM),DIR) Q:FROM=""  D
"RTN","ORWDFH",47,0)
 . S IEN=0 F  S IEN=$O(^ORD(101.43,"S.DIET",FROM,IEN)) Q:'IEN  D
"RTN","ORWDFH",48,0)
 . . S X=^ORD(101.43,"S.DIET",FROM,IEN)
"RTN","ORWDFH",49,0)
 . . I +$P(X,U,3),$P(X,U,3)<CURTM Q
"RTN","ORWDFH",50,0)
 . . I $P($G(^ORD(101.43,IEN,"FH")),U)'="D",($P($G(^(0)),U)'="NPO") Q
"RTN","ORWDFH",51,0)
 . . S I=I+1
"RTN","ORWDFH",52,0)
 . . I 'X S Y(I)=IEN_U_$P(X,U,2)_U_$P(X,U,2)
"RTN","ORWDFH",53,0)
 . . E  S Y(I)=IEN_U_$P(X,U,2)_$C(9)_"<"_$P(X,U,4)_">"_U_$P(X,U,4)
"RTN","ORWDFH",54,0)
 Q
"RTN","ORWDFH",55,0)
TFPROD(Y)     ; Return a list of active tubefeeding products
"RTN","ORWDFH",56,0)
 N I,IEN,NAM,X,CURTM
"RTN","ORWDFH",57,0)
 S I=0,NAM="",CURTM=$$NOW^XLFDT
"RTN","ORWDFH",58,0)
 F  S NAM=$O(^ORD(101.43,"S.TF",NAM)) Q:NAM=""  D
"RTN","ORWDFH",59,0)
 . S IEN=0 F  S IEN=$O(^ORD(101.43,"S.TF",NAM,IEN)) Q:'IEN  D
"RTN","ORWDFH",60,0)
 . . S X=^ORD(101.43,"S.TF",NAM,IEN)
"RTN","ORWDFH",61,0)
 . . I +$P(X,U,3),$P(X,U,3)<CURTM Q
"RTN","ORWDFH",62,0)
 . . S I=I+1
"RTN","ORWDFH",63,0)
 . . I 'X S Y(I)=IEN_U_$P(X,U,2)_U_$P(X,U,2)
"RTN","ORWDFH",64,0)
 . . E  S Y(I)=IEN_U_$P(X,U,2)_$C(9)_"<"_$P(X,U,4)_">"_U_$P(X,U,4)
"RTN","ORWDFH",65,0)
 Q
"RTN","ORWDFH",66,0)
QTY2CC(VAL,PRD,STR,QTY)     ; Return cc's given a product, strength, & quantity
"RTN","ORWDFH",67,0)
 N X,VQTY,DUR
"RTN","ORWDFH",68,0)
 S VQTY=$$VALIDQTY^ORCDFHTF(QTY) I '$L(VQTY)!('PRD)!('STR) S VAL="" Q
"RTN","ORWDFH",69,0)
 S PRD=+$P($G(^ORD(101.43,PRD,0)),U,2)
"RTN","ORWDFH",70,0)
 S DUR=$P(VQTY," X ",2) I $L(DUR) S DUR=$S(DUR["H":"H",1:"X")_+DUR
"RTN","ORWDFH",71,0)
 S X=+VQTY_"&"_$E($P(VQTY," ",2))_U_$P($P(VQTY,"/",2)," ")_U_DUR
"RTN","ORWDFH",72,0)
 S VAL=$$QUAN^FHWOR5R(PRD_"-"_STR,X)_U_VQTY
"RTN","ORWDFH",73,0)
 Q
"RTN","ORWDFH",74,0)
FINDTYP(VAL,DGRP)       ; Return type of dietetics order based on display group
"RTN","ORWDFH",75,0)
 S VAL=$P($G(^ORD(100.98,DGRP,0)),U,3)
"RTN","ORWDFH",76,0)
 S:VAL="D AO" VAL="A" S VAL=$E(VAL)
"RTN","ORWDFH",77,0)
 Q
"RTN","ORWDFH",78,0)
ISOIEN(VAL)     ; Return IEN for the Isolation/Precaution orderable item
"RTN","ORWDFH",79,0)
 S VAL=$O(^ORD(101.43,"S.PREC","ISOLATION PROCEDURES",0))
"RTN","ORWDFH",80,0)
 Q
"RTN","ORWDFH",81,0)
CURISO(VAL,ORVP) ; Return a patient's current isolation
"RTN","ORWDFH",82,0)
 S ORVP=ORVP_";DPT(" S VAL=$P($$IP^ORMBLD,U,2)
"RTN","ORWDFH",83,0)
 I '$L(VAL) S VAL="<none>"
"RTN","ORWDFH",84,0)
 Q
"RTN","ORWDFH",85,0)
ISOLIST(LST)    ; Return list of active isolations/precautions
"RTN","ORWDFH",86,0)
 N I,X,IEN
"RTN","ORWDFH",87,0)
 S I=0,X="" F  S X=$O(^FH(119.4,"B",X)) Q:X=""  S IEN=$O(^(X,0)) D
"RTN","ORWDFH",88,0)
 . I '$D(^FH(119.4,IEN,"I")) S I=I+1,LST(I)=IEN_U_X
"RTN","ORWDFH",89,0)
 Q
"RTN","ORWDFH",90,0)
MILTM(X)        ; return military time for am/pm time
"RTN","ORWDFH",91,0)
 N TM
"RTN","ORWDFH",92,0)
 S TM=$P(X,":",1)_+$P(X,":",2)
"RTN","ORWDFH",93,0)
 I X["P",TM<1200 S TM=TM+1200
"RTN","ORWDFH",94,0)
 I X["A",TM>1200 S TM=TM-1200
"RTN","ORWDFH",95,0)
 Q TM
"RTN","ORWDFH",96,0)
 ;
"RTN","ORWDFH",97,0)
ASKLATE(REC,DFN,ORIFN)        ; Return info for ordering late tray for diet order
"RTN","ORWDFH",98,0)
 ; REC=0  or  1^meal^bagged^time^time^time
"RTN","ORWDFH",99,0)
 S REC=0 Q:'$G(ORIFN)  Q:$E($$VALUE^ORX8(ORIFN,"ORDERABLE",1,"E"),1,3)="NPO"
"RTN","ORWDFH",100,0)
 N X,Y,%DT,STRT,DATE,ORPARAM,I,MEAL,MEALTIME
"RTN","ORWDFH",101,0)
 S X=$O(^OR(100,ORIFN,4.5,"ID","START",0)),X=$G(^OR(100,ORIFN,4.5,+X,1))
"RTN","ORWDFH",102,0)
 Q:X=""  S %DT="TX" D ^%DT Q:Y'>0  Q:$P(Y,".")>DT  ;invalid or future
"RTN","ORWDFH",103,0)
 S DATE=$P(Y,"."),STRT=+$E($P(Y,".",2)_"0000",1,4),MEAL=0
"RTN","ORWDFH",104,0)
 D EN^FHWOR8(DFN,.ORPARAM) Q:'$D(ORPARAM(2))
"RTN","ORWDFH",105,0)
 F I=1,3,5 I $P(ORPARAM(2),U,I)<STRT,STRT<$P(ORPARAM(2),U,I+1) S MEAL=I Q
"RTN","ORWDFH",106,0)
 S MEAL=$S(MEAL=1:4,MEAL=3:10,MEAL=5:16,1:0) Q:'MEAL
"RTN","ORWDFH",107,0)
 S MEALTIME=$P(ORPARAM(1),U,MEAL,MEAL+2)
"RTN","ORWDFH",108,0)
 S MEAL=$S(MEAL=4:"B",MEAL=10:"N",MEAL=16:"E",1:"")
"RTN","ORWDFH",109,0)
 F I=1:1:3 S X=$$MILTM($P(MEAL,U,I)) I X<STRT S $P(MEAL,U,I)=""
"RTN","ORWDFH",110,0)
 S REC="1"_U_MEAL_U_$P(ORPARAM(2),U,10)_U_MEALTIME
"RTN","ORWDFH",111,0)
 I $P(REC,U,2,4)="^^" S REC=0
"RTN","ORWDFH",112,0)
 Q
"RTN","ORWDFH",113,0)
ADDLATE(REC,ORVP,ORNP,ORL,MEAL,TIME,BAG)      ; Add late tray order
"RTN","ORWDFH",114,0)
 N ORIFN,ORNEW,ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORCHECK,ORLOG
"RTN","ORWDFH",115,0)
 N ORDIALOG,ORDG,ORTYPE,DA,FIRST,TRAY
"RTN","ORWDFH",116,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDFH",117,0)
 S ORTYPE="D",FIRST=1,ORDUZ=DUZ,ORLOG=+$E($$NOW^XLFDT,1,12)
"RTN","ORWDFH",118,0)
 S TRAY=+$O(^ORD(101.43,"S.E/L T","LATE TRAY",0))
"RTN","ORWDFH",119,0)
 S ORDIALOG=$O(^ORD(101.41,"AB","FHW2",0))
"RTN","ORWDFH",120,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDFH",121,0)
 S ORDIALOG($$PTR^ORCD("OR GTX MEAL"),1)=MEAL
"RTN","ORWDFH",122,0)
 S ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1)=TRAY
"RTN","ORWDFH",123,0)
 S ORDIALOG($$PTR^ORCD("OR GTX START DATE"),1)=DT
"RTN","ORWDFH",124,0)
 S ORDIALOG($$PTR^ORCD("OR GTX STOP DATE"),1)=DT
"RTN","ORWDFH",125,0)
 S ORDIALOG($$PTR^ORCD("OR GTX MEAL TIME"),1)=TIME
"RTN","ORWDFH",126,0)
 S ORDIALOG($$PTR^ORCD("OR GTX YES/NO"),1)=BAG
"RTN","ORWDFH",127,0)
 D EN^ORCSAVE
"RTN","ORWDFH",128,0)
 S REC="" I ORIFN D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDFH",129,0)
 Q
"RTN","ORWDFH",130,0)
  
"RTN","ORWDPS3")
0^27^B18465447
"RTN","ORWDPS3",1,0)
ORWDPS3 ; SLC/KCM/JLI - Order Dialogs, Menus;10:42 AM  3/29/2002 4/10/02 11:00AM
"RTN","ORWDPS3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,94,116,132,187**;Dec 17, 1997
"RTN","ORWDPS3",3,0)
MEDXFER ; -- setup ORDIALOG for a med that is transferred (from SETUP^ORWDXM4)
"RTN","ORWDPS3",4,0)
 N IVDIALOG,OI K ^TMP("PS",$J)
"RTN","ORWDPS3",5,0)
 S IVDIALOG=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWDPS3",6,0)
 S ORDIALOG=$O(^ORD(101.41,"AB","PS MEDS",0))
"RTN","ORWDPS3",7,0)
 I $P($G(^OR(100,+ORIT,0)),U,5)=IVDIALOG S ORDIALOG=IVDIALOG
"RTN","ORWDPS3",8,0)
 S ORDG=+$P(^ORD(101.41,ORDIALOG,0),U,5)
"RTN","ORWDPS3",9,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDPS3",10,0)
 D GETORDER^ORCD("^OR(100,"_+ORIT_",4.5)")
"RTN","ORWDPS3",11,0)
 S OI=$$VAL^ORCD("MEDICATION")
"RTN","ORWDPS3",12,0)
 I '$$MEDOK(OI,ORCAT) D SETERR(ORIT,"This may not be ordered as an "_$S(ORCAT="I":"in",1:"out")_"patient drug.") Q
"RTN","ORWDPS3",13,0)
 I $G(^ORD(101.43,OI,.1)),(^(.1)<$$NOW^XLFDT) D SETERR(ORIT,"This may no longer be ordered.") Q
"RTN","ORWDPS3",14,0)
 I (ORDIALOG'=IVDIALOG),(ORCAT="I") D OUT^ORCMED
"RTN","ORWDPS3",15,0)
 I (ORDIALOG'=IVDIALOG),(ORCAT="O") D IN^ORCMED
"RTN","ORWDPS3",16,0)
 S ORWPSWRG="" ; force interactive dialog for transfers
"RTN","ORWDPS3",17,0)
 Q
"RTN","ORWDPS3",18,0)
MEDOK(OI,CAT)   ; return 1 if med may be ordered for this patient category
"RTN","ORWDPS3",19,0)
 N P S P=$S(CAT="I":1,1:2)
"RTN","ORWDPS3",20,0)
 I ORIMO S P=1
"RTN","ORWDPS3",21,0)
 Q $P($G(^ORD(101.43,+OI,"PS")),U,P)
"RTN","ORWDPS3",22,0)
 ;
"RTN","ORWDPS3",23,0)
SETERR(ID,X)       ; sets LST to rejection with error message
"RTN","ORWDPS3",24,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDPS3",25,0)
 S LST(0)="8^0",LST(.5)=X,LST(.6)=""
"RTN","ORWDPS3",26,0)
 Q
"RTN","ORWDPS3",27,0)
 ;
"RTN","ORWDPS3",28,0)
PS ; setup environment for medications
"RTN","ORWDPS3",29,0)
 D AUTHMED Q:$G(ORQUIT)  ; checks authorized to write meds
"RTN","ORWDPS3",30,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORWDPS3",31,0)
 N PROMPT,OI
"RTN","ORWDPS3",32,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDPS3",33,0)
 S OI=""
"RTN","ORWDPS3",34,0)
 I $D(ORDIALOG(PROMPT,1)) S OI=ORDIALOG(PROMPT,1) D MEDACTV Q:$G(ORQUIT)
"RTN","ORWDPS3",35,0)
 N PSOI
"RTN","ORWDPS3",36,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2) D START^PSSJORDF(PSOI,ORCAT)
"RTN","ORWDPS3",37,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX SCHEDULE",0))
"RTN","ORWDPS3",38,0)
 I $D(ORDIALOG(PROMPT,1)) S ORSCH=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",39,0)
 I (ORCAT="I"),$L($G(ORSCH)) D
"RTN","ORWDPS3",40,0)
 . S ORSD=""
"RTN","ORWDPS3",41,0)
 . I $L($G(^DPT(+ORVP,.1))) S ORSD=$$STARTSTP^PSJORPOE(+ORVP,ORSCH,PSOI,+$G(ORWARD),"")
"RTN","ORWDPS3",42,0)
 . I $P(ORSD,U)="NEXT" S $P(ORSD,U)="NEXTA"
"RTN","ORWDPS3",43,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX DAYS SUPPLY",0))
"RTN","ORWDPS3",44,0)
 I $D(ORDIALOG(PROMPT,1)) S ORDSUP=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",45,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX DISPENSE DRUG",0))
"RTN","ORWDPS3",46,0)
 I $D(ORDIALOG(PROMPT,1)) S ORDRUG=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",47,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX REFILLS",0))
"RTN","ORWDPS3",48,0)
 I $D(ORDIALOG(PROMPT,1)) S OREFILLS=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",49,0)
 I ORCAT="O" S ORCOPAY=$$ASKSC^ORCDPS1
"RTN","ORWDPS3",50,0)
 I ORCAT="I" S PROMPT=$O(^ORD(101.41,"AB","OR GTX START DATE/TIME",0)) D
"RTN","ORWDPS3",51,0)
 . I $L($P($G(ORSD),U)),'$D(ORDIALOG(PROMPT,1)) S ORDIALOG(PROMPT,1)=$P(ORSD,U)
"RTN","ORWDPS3",52,0)
 ; create a SIG if none exists (i.e., when copying pre-POE orders)
"RTN","ORWDPS3",53,0)
 I '$L($G(ORDIALOG($$PTR^ORCD("OR GTX SIG"),1))) D
"RTN","ORWDPS3",54,0)
 . N ORDOSE,ORDRUG,ORWPSOI,PROMPT,DRUG
"RTN","ORWDPS3",55,0)
 . S PROMPT=$$PTR^ORCD("OR GTX INSTRUCTIONS")
"RTN","ORWDPS3",56,0)
 . S ORDRUG=$G(ORDIALOG($$PTR^ORCD("OR GTX DISPENSE DRUG"),1))
"RTN","ORWDPS3",57,0)
 . S ORWPSOI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDPS3",58,0)
 . I ORWPSOI S ORWPSOI=+$P($G(^ORD(101.43,+ORWPSOI,0)),U,2)
"RTN","ORWDPS3",59,0)
 . D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,$S(ORCAT="I":"U",1:"O"),ORVP)       ; dflt doses
"RTN","ORWDPS3",60,0)
 . D D1^ORCDPS2  ; set up ORDOSE & xrefs in ORDIALOG
"RTN","ORWDPS3",61,0)
 . S DRUG=$G(ORDOSE("DD",+ORDRUG))
"RTN","ORWDPS3",62,0)
 . I DRUG,ORCAT="O" D RESETID^ORCDPS
"RTN","ORWDPS3",63,0)
 . D SIG^ORCDPS2
"RTN","ORWDPS3",64,0)
 Q
"RTN","ORWDPS3",65,0)
AUTHMED ; sets ORQUIT if not authorized to write meds
"RTN","ORWDPS3",66,0)
 N NOAUTH,NAME
"RTN","ORWDPS3",67,0)
 D AUTH^ORWDPS32(.NOAUTH,ORNP)
"RTN","ORWDPS3",68,0)
 I +NOAUTH D
"RTN","ORWDPS3",69,0)
 . S ORQUIT=1
"RTN","ORWDPS3",70,0)
 . S LST(0)="8^0"
"RTN","ORWDPS3",71,0)
 . S NAME=$P($G(^VA(200,+ORNP,20)),U,2)
"RTN","ORWDPS3",72,0)
 . I '$L(NAME) S NAME=$P($G(^VA(200,+ORNP,0)),U,1)
"RTN","ORWDPS3",73,0)
 . S LST(.5)=NAME_" is not authorized to write med orders."
"RTN","ORWDPS3",74,0)
 Q
"RTN","ORWDPS3",75,0)
MEDACTV ; sets ORQUIT if the orderable item is not active for a med
"RTN","ORWDPS3",76,0)
 Q:'$G(OI)
"RTN","ORWDPS3",77,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDPS3",78,0)
 . S ORQUIT=1
"RTN","ORWDPS3",79,0)
 . S LST(0)="8^0"
"RTN","ORWDPS3",80,0)
 . S LST(.5)=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDPS3",81,0)
 I $D(ORQUIT) Q:ORQUIT
"RTN","ORWDPS3",82,0)
 ; copied from ORDITM^ORCDPS1 to make sure quick order if for right dialog
"RTN","ORWDPS3",83,0)
 N ORPS,PSOI,ORIV,ORINPT
"RTN","ORWDPS3",84,0)
 S ORINPT=$$INPT^ORCD
"RTN","ORWDPS3",85,0)
 S ORPS=$G(^ORD(101.43,+OI,"PS")),PSOI=+$P($G(^(0)),U,2)
"RTN","ORWDPS3",86,0)
 S ORIV=$S($P(ORPS,U)=2:1,1:0)
"RTN","ORWDPS3",87,0)
 I $G(ORCAT)="O",'$P(ORPS,U,2) S LST(.5)="This drug may not be used in an outpatient order."
"RTN","ORWDPS3",88,0)
 I $G(ORCAT)="I" D
"RTN","ORWDPS3",89,0)
 . I $G(ORINPT),'$P(ORPS,U) S LST(.5)="This drug may not be used in an inpatient order."
"RTN","ORWDPS3",90,0)
 . I '$G(ORINPT),'ORIV,'ORIMO S LST(.5)="This drug may not be ordered for an outpatient."
"RTN","ORWDPS3",91,0)
 I $L($G(LST(.5))) S ORQUIT=1,LST(0)="8^0"
"RTN","ORWDPS3",92,0)
 Q
"RTN","ORWDPS4")
0^8^B15419305
"RTN","ORWDPS4",1,0)
ORWDPS4 ;; SLC/JDL - Order Dialogs CO-PAY and Other;[12/31/01 6:38pm]
"RTN","ORWDPS4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**116,125,131,141,173,187**;Dec 17, 1997
"RTN","ORWDPS4",3,0)
 ;
"RTN","ORWDPS4",4,0)
CPLST(TEST,PTIFN,ORIFNS) ; --Get CP questions
"RTN","ORWDPS4",5,0)
 N ORIFN,ORDA,ORI,ORPSO,CPX
"RTN","ORWDPS4",6,0)
 S ORI=0,ORPSO=+$O(^DIC(9.4,"C","PSO",0))
"RTN","ORWDPS4",7,0)
 F  S ORI=$O(ORIFNS(ORI)) Q:'ORI  D
"RTN","ORWDPS4",8,0)
 .S ORIFN=+ORIFNS(ORI),ORDA=$P(ORIFNS(ORI),";",2)
"RTN","ORWDPS4",9,0)
 .I $D(^OR(100,ORIFN,0)),($P(^OR(100,ORIFN,0),U,14)=ORPSO) D
"RTN","ORWDPS4",10,0)
 ..S CPX=$$SC(ORIFN)
"RTN","ORWDPS4",11,0)
 ..I $L(CPX)>1 S TEST(ORIFN)=ORIFN_";"_ORDA_CPX
"RTN","ORWDPS4",12,0)
 K PTIFN,ORIFN,ORDA,ORI,CPX
"RTN","ORWDPS4",13,0)
 Q
"RTN","ORWDPS4",14,0)
 ;
"RTN","ORWDPS4",15,0)
CPINFO(Y,ORINFO) ; -- Save reponses to CP questions
"RTN","ORWDPS4",16,0)
 Q:'$D(ORINFO)
"RTN","ORWDPS4",17,0)
 N ORIFN,ORI,ORX,ANS S ORI=0
"RTN","ORWDPS4",18,0)
 F  S ORI=$O(ORINFO(ORI)) Q:'ORI  D
"RTN","ORWDPS4",19,0)
 .S ORIFN=$P($P(ORINFO(ORI),U,1),";",1)
"RTN","ORWDPS4",20,0)
 .S ANS=$P(ORINFO(ORI),U,2)
"RTN","ORWDPS4",21,0)
 .D REFMT(.ORX,ANS)
"RTN","ORWDPS4",22,0)
 .D SC^ORCSAVE2(.ORX,ORIFN)
"RTN","ORWDPS4",23,0)
 S Y=1
"RTN","ORWDPS4",24,0)
 K ORIFN,ORX,ORI,ANS
"RTN","ORWDPS4",25,0)
 Q
"RTN","ORWDPS4",26,0)
 ;
"RTN","ORWDPS4",27,0)
SC(ORIFN) ; -- Dialog validation, to ask CP questions
"RTN","ORWDPS4",28,0)
 ;Expects ORIFN and ORDA
"RTN","ORWDPS4",29,0)
 ;
"RTN","ORWDPS4",30,0)
 N DR S DR=""
"RTN","ORWDPS4",31,0)
 I '$L($T(SCNEW^PSOCP))!('$G(ORIFN))!('$G(ORDA)) Q DR
"RTN","ORWDPS4",32,0)
 I $P($G(^OR(100,ORIFN,8,ORDA,0)),U,2)'="NW" Q DR
"RTN","ORWDPS4",33,0)
 ;
"RTN","ORWDPS4",34,0)
 N OR3,ORDRUG,ORENEW,ORX,I,X,Y,CPNODE,ASC,AAO,AIR,AEC,AMST,AHNC
"RTN","ORWDPS4",35,0)
 S ORX=""
"RTN","ORWDPS4",36,0)
 ;--Only new, renew, edited, copied outpatient order can continue...
"RTN","ORWDPS4",37,0)
 S OR3=$G(^OR(100,ORIFN,3)),X=$P(OR3,U,11) I (X'=0)&((X'=2)&(X'=1)) Q DR
"RTN","ORWDPS4",38,0)
 I (X=1)&($D(^OR(100,ORIFN,5))=0) Q DR
"RTN","ORWDPS4",39,0)
 I $D(^OR(100,ORIFN,5))>0 D
"RTN","ORWDPS4",40,0)
 .S CPNODE=$G(^OR(100,ORIFN,5))
"RTN","ORWDPS4",41,0)
 .S ASC=$S($L($P(CPNODE,"^",1)):"SC;"_$P(CPNODE,"^",1),1:"")
"RTN","ORWDPS4",42,0)
 .S DR=$S($L(ASC):DR_U_ASC,1:DR)
"RTN","ORWDPS4",43,0)
 .S AAO=$S($L($P(CPNODE,"^",3)):"AO;"_$P(CPNODE,"^",3),1:"")
"RTN","ORWDPS4",44,0)
 .S DR=$S($L(AAO):DR_U_AAO,1:DR)
"RTN","ORWDPS4",45,0)
 .S AIR=$S($L($P(CPNODE,"^",4)):"IR;"_$P(CPNODE,"^",4),1:"")
"RTN","ORWDPS4",46,0)
 .S DR=$S($L(AIR):DR_U_AIR,1:DR)
"RTN","ORWDPS4",47,0)
 .S AEC=$S($L($P(CPNODE,"^",5)):"EC;"_$P(CPNODE,"^",5),1:"")
"RTN","ORWDPS4",48,0)
 .S DR=$S($L(AEC):DR_U_AEC,1:DR)
"RTN","ORWDPS4",49,0)
 .S AMST=$S($L($P(CPNODE,"^",2)):"MST;"_$P(CPNODE,"^",2),1:"")
"RTN","ORWDPS4",50,0)
 .S DR=$S($L(AMST):DR_U_AMST,1:DR)
"RTN","ORWDPS4",51,0)
 .S AHNC=$S($L($P(CPNODE,"^",6)):"HNC;"_$P(CPNODE,"^",6),1:"")
"RTN","ORWDPS4",52,0)
 .S DR=$S($L(AHNC):DR_U_AHNC,1:DR)
"RTN","ORWDPS4",53,0)
 .D CPCOMP(.DR)
"RTN","ORWDPS4",54,0)
 .K ASC,AAO,AIR,AEC,AMST,AHNC,CPNODE
"RTN","ORWDPS4",55,0)
 I $L(DR)>0 Q DR
"RTN","ORWDPS4",56,0)
 I X=2 S Y=$P(OR3,U,5),ORENEW=$G(^OR(100,Y,4)) ;get PS# if renewal
"RTN","ORWDPS4",57,0)
 S ORDRUG=$$VALUE^ORCSAVE2(ORIFN,"DRUG")
"RTN","ORWDPS4",58,0)
 D SCNEW^PSOCP(.ORX,+PTIFN,ORDRUG,$G(ORENEW)) I '$D(ORX) Q DR
"RTN","ORWDPS4",59,0)
 F I="SC","AO","IR","EC","MST","HNC" D
"RTN","ORWDPS4",60,0)
 . I $D(ORX(I)) S DR=DR_U_I_$S($L(ORX(I)):";"_ORX(I),1:"")
"RTN","ORWDPS4",61,0)
 Q DR
"RTN","ORWDPS4",62,0)
REFMT(ORX,INFO) ;
"RTN","ORWDPS4",63,0)
 ;"U": Unchecked ("NO") 
"RTN","ORWDPS4",64,0)
 ;"C": Checked ("YES")
"RTN","ORWDPS4",65,0)
 ;"N" : Question not asked
"RTN","ORWDPS4",66,0)
 N RST,RST1
"RTN","ORWDPS4",67,0)
 S RST=""
"RTN","ORWDPS4",68,0)
 F I=1:1:$L(INFO)  S RST=RST_U_$S($E(INFO,I)="U":0,$E(INFO,I)="C":1,1:"")
"RTN","ORWDPS4",69,0)
 S RST1=$E(RST,2,$L(RST))
"RTN","ORWDPS4",70,0)
 S ORX("SC")=$P(RST1,U,1)
"RTN","ORWDPS4",71,0)
 S ORX("MST")=$P(RST1,U,5)
"RTN","ORWDPS4",72,0)
 S ORX("AO")=$P(RST1,U,2)
"RTN","ORWDPS4",73,0)
 S ORX("IR")=$P(RST1,U,3)
"RTN","ORWDPS4",74,0)
 S ORX("EC")=$P(RST1,U,4)
"RTN","ORWDPS4",75,0)
 S ORX("HNC")=$P(RST1,U,6)
"RTN","ORWDPS4",76,0)
 K RST,RST1
"RTN","ORWDPS4",77,0)
 Q
"RTN","ORWDPS4",78,0)
CPCOMP(PREX) ; -- Compare the existed exemptions with new exemption questions
"RTN","ORWDPS4",79,0)
 N ORX1,ORDRUG1,CPI,LSTCP,TMPVAL
"RTN","ORWDPS4",80,0)
 S LSTCP=""
"RTN","ORWDPS4",81,0)
 S ORDRUG1=$$VALUE^ORCSAVE2(ORIFN,"DRUG")
"RTN","ORWDPS4",82,0)
 D SCNEW^PSOCP(.ORX1,+PTIFN,ORDRUG1,$G(ORENEW)) I '$D(ORX1) Q
"RTN","ORWDPS4",83,0)
 F CPI="SC","AO","IR","EC","MST","HNC" D
"RTN","ORWDPS4",84,0)
 . I $D(ORX1(CPI)) D
"RTN","ORWDPS4",85,0)
 . . S TMPVAL=""
"RTN","ORWDPS4",86,0)
 . . I $F(PREX,CPI) D
"RTN","ORWDPS4",87,0)
 . . . S TMPVAL=+$E(PREX,$F(PREX,CPI)+1)
"RTN","ORWDPS4",88,0)
 . . . I $L(TMPVAL),((TMPVAL=0)!(TMPVAL=1)) S TMPVAL=CPI_";"_TMPVAL
"RTN","ORWDPS4",89,0)
 . . . E  S TMPVAL=CPI
"RTN","ORWDPS4",90,0)
 . . E  S TMPVAL=CPI
"RTN","ORWDPS4",91,0)
 . . S LSTCP=LSTCP_U_TMPVAL
"RTN","ORWDPS4",92,0)
 S PREX=LSTCP
"RTN","ORWDPS4",93,0)
 Q
"RTN","ORWDPS4",94,0)
IPOD4OP(ORY,ORID) ;True: is an Inpt (IV OI) order on an OutPatient
"RTN","ORWDPS4",95,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDPS4",96,0)
 S ORY=0
"RTN","ORWDPS4",97,0)
 N APKG,ADLG,ADG,APTCLS,RXDG,UDDLG,IPPKG
"RTN","ORWDPS4",98,0)
 S (RXDG,UDDLG,IPPKG)=0
"RTN","ORWDPS4",99,0)
 S RXDG=+$O(^ORD(100.98,"B","O RX",0))
"RTN","ORWDPS4",100,0)
 S UDDLG=+$O(^ORD(101.41,"B","PSJ OR PAT OE",0))
"RTN","ORWDPS4",101,0)
 S IPPKG=+$O(^DIC(9.4,"B","INPATIENT MEDICATIONS",0))
"RTN","ORWDPS4",102,0)
 S ADLG=+$P($G(^OR(100,+ORID,0)),U,5)
"RTN","ORWDPS4",103,0)
 S ADG=$P($G(^OR(100,+ORID,0)),U,11)
"RTN","ORWDPS4",104,0)
 S APKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDPS4",105,0)
 S APTCLS=$P($G(^OR(100,+ORID,0)),U,12)
"RTN","ORWDPS4",106,0)
 I ADG=RXDG,(ADLG=UDDLG),(APKG=IPPKG),(APTCLS="I") S ORY=1
"RTN","ORWDPS4",107,0)
 Q
"RTN","ORWDPS4",108,0)
 ;
"RTN","ORWDPS4",109,0)
UPDTDG(ORY,ORID) ;Update Inpt order for outpatient DG to Inpt DG
"RTN","ORWDPS4",110,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDPS4",111,0)
 N UDDG
"RTN","ORWDPS4",112,0)
 S UDDG=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORWDPS4",113,0)
 S $P(^OR(100,+ORID,0),U,11)=UDDG
"RTN","ORWDPS4",114,0)
 Q
"RTN","ORWDX")
0^2^B73339230
"RTN","ORWDX",1,0)
ORWDX ; SLC/KCM/REV/JLI - Order dailog utilities ;8/20/03  10:48
"RTN","ORWDX",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,132,141,164,178,187**;Dec 17, 1997
"RTN","ORWDX",3,0)
NXT() ; -- Gets index in array
"RTN","ORWDX",4,0)
 S ILST=ILST+1
"RTN","ORWDX",5,0)
 Q ILST
"RTN","ORWDX",6,0)
ORDITM(Y,FROM,DIR,XREF) ; Subset of OI
"RTN","ORWDX",7,0)
 ; Y(n)=IEN^.01 Name^.01 Name or IEN^Synonym <.01 Name>^.01 Name
"RTN","ORWDX",8,0)
 N I,IEN,CNT,X,DTXT,CURTM
"RTN","ORWDX",9,0)
 S I=0,CNT=44,CURTM=$$NOW^XLFDT
"RTN","ORWDX",10,0)
 F  Q:I'<CNT  S FROM=$O(^ORD(101.43,XREF,FROM),DIR) Q:FROM=""  D
"RTN","ORWDX",11,0)
 . S IEN="" F  S IEN=$O(^ORD(101.43,XREF,FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWDX",12,0)
 . . S X=^ORD(101.43,XREF,FROM,IEN)
"RTN","ORWDX",13,0)
 . . I +$P(X,U,3),$P(X,U,3)<CURTM Q
"RTN","ORWDX",14,0)
 . . Q:$P(X,U,5)  S I=I+1
"RTN","ORWDX",15,0)
 . . I 'X S Y(I)=IEN_U_$P(X,U,2)_U_$P(X,U,2)
"RTN","ORWDX",16,0)
 . . E  S Y(I)=IEN_U_$P(X,U,2)_$C(9)_"<"_$P(X,U,4)_">"_U_$P(X,U,4)
"RTN","ORWDX",17,0)
 Q
"RTN","ORWDX",18,0)
ODITMBC(Y,XREF,ODLST) ; OI Info
"RTN","ORWDX",19,0)
 N CNT,NM,XRF
"RTN","ORWDX",20,0)
 S CNT=0,NM=0,XRF=XREF
"RTN","ORWDX",21,0)
 F  S CNT=$O(ODLST(CNT)) Q:'CNT  D FNDINFO(.Y,ODLST(CNT))
"RTN","ORWDX",22,0)
 Q
"RTN","ORWDX",23,0)
FNDINFO(Y,ODIEN) ;
"RTN","ORWDX",24,0)
 N ODI,CRTM,FRM,XX
"RTN","ORWDX",25,0)
 S FRM="",CRTM=$$NOW^XLFDT
"RTN","ORWDX",26,0)
 F  S FRM=$O(^ORD(101.43,XRF,FRM)) Q:FRM=""  D
"RTN","ORWDX",27,0)
 . S ODI=0 F  S ODI=$O(^ORD(101.43,XRF,FRM,ODI)) Q:'ODI  D
"RTN","ORWDX",28,0)
 .. S XX=^ORD(101.43,XRF,FRM,ODI)
"RTN","ORWDX",29,0)
 .. I +$P(XX,U,3),$P(XX,U,3)<CRTM Q
"RTN","ORWDX",30,0)
 .. I ODI=ODIEN D
"RTN","ORWDX",31,0)
 ... S NM=NM+1
"RTN","ORWDX",32,0)
 ... I 'XX S Y(NM)=ODIEN_U_$P(XX,U,2)_U_$P(XX,U,2)
"RTN","ORWDX",33,0)
 ... E  S Y(NM)=ODIEN_U_$P(XX,U,2)_$C(9)_"<"_$P(XX,U,4)_">"_U_$P(XX,U,4)
"RTN","ORWDX",34,0)
 Q
"RTN","ORWDX",35,0)
DLGDEF(LST,DLG) ; Format mapping for a dlg
"RTN","ORWDX",36,0)
 N I,IEN,ILST,X0,X2,XW  S ILST=0
"RTN","ORWDX",37,0)
 I $O(^ORD(101.41,"AB",DLG,0))>0 S DLG=$O(^ORD(101.41,"AB",DLG,0))
"RTN","ORWDX",38,0)
 E  S DLG=$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWDX",39,0)
 Q:'DLG
"RTN","ORWDX",40,0)
 S I=0 F  S I=$O(^ORD(101.41,DLG,10,I)) Q:I'>0  D
"RTN","ORWDX",41,0)
 . S X0=$G(^ORD(101.41,DLG,10,I,0)),X2=$G(^(2)),IEN=+$P(X0,U,2)
"RTN","ORWDX",42,0)
 . S ILST=ILST+1,LST(ILST)=U_IEN_U_$P(X2,U,1,7)
"RTN","ORWDX",43,0)
 . I $P(X0,U,11) S $P(LST(ILST),U,11)=1
"RTN","ORWDX",44,0)
 . S $P(LST(ILST),U)=$P($G(^ORD(101.41,IEN,1)),U,3)
"RTN","ORWDX",45,0)
 . I $P($G(^ORD(101.41,IEN,0)),U)="OR GTX ADDITIVE" S $P(LST(ILST),U)="ADDITIVE"
"RTN","ORWDX",46,0)
 . I $L($P(LST(ILST),U))=0 S $P(LST(ILST),U)="ID"_IEN
"RTN","ORWDX",47,0)
 . I $D(^ORD(101.41,DLG,10,"DAD",IEN)) D
"RTN","ORWDX",48,0)
 .. N SEQ,DA,CHILD S CHILD=""
"RTN","ORWDX",49,0)
 .. S SEQ=0 F  S SEQ=$O(^ORD(101.41,DLG,10,"DAD",IEN,SEQ)) Q:'SEQ  D
"RTN","ORWDX",50,0)
 ... S DA=0 F  S DA=$O(^ORD(101.41,DLG,10,"DAD",IEN,SEQ,DA)) Q:'DA  D
"RTN","ORWDX",51,0)
 .... S CHILD=CHILD_+$P($G(^ORD(101.41,DLG,10,DA,0)),U,2)_"~"
"RTN","ORWDX",52,0)
 .. S $P(LST(ILST),U,10)=CHILD
"RTN","ORWDX",53,0)
 Q
"RTN","ORWDX",54,0)
DLGQUIK(LST,QO) ; Responses for QO (NOT USED)
"RTN","ORWDX",55,0)
 D LOADRSP(.LST,QO)
"RTN","ORWDX",56,0)
 Q
"RTN","ORWDX",57,0)
LOADRSP(LST,RSPID)      ; Load responses from 101.41 or 100
"RTN","ORWDX",58,0)
 ; RSPID:  C123456;1-3243 = cached copy,   134-3234 = cached quick
"RTN","ORWDX",59,0)
 ;         X123456;1      = change order,  134      = quick dialog
"RTN","ORWDX",60,0)
 N I,J,DLG,INST,ID,VAL,ILST,ROOT S ROOT=""
"RTN","ORWDX",61,0)
 I RSPID["-" S ROOT="^TMP(""ORWDXMQ"",$J,"""_RSPID_""")" G XROOT
"RTN","ORWDX",62,0)
 I $E(RSPID)="X" S ROOT="^OR(100,"_+$P(RSPID,"X",2)_",4.5)"  G XROOT
"RTN","ORWDX",63,0)
 I +RSPID=RSPID  S ROOT="^ORD(101.41,"_+RSPID_",6)" G XROOT
"RTN","ORWDX",64,0)
 Q:ROOT=""
"RTN","ORWDX",65,0)
XROOT S (ILST,I)=0 F  S I=$O(@ROOT@(I)) Q:I'>0  D
"RTN","ORWDX",66,0)
 . S DLG=$P(@ROOT@(I,0),U,2),INST=$P(^(0),U,3)
"RTN","ORWDX",67,0)
 . S ID=$P($G(^ORD(101.41,DLG,1)),U,3)
"RTN","ORWDX",68,0)
 . I '$L(ID) S ID="ID"_DLG
"RTN","ORWDX",69,0)
 . S VAL=$G(@ROOT@(I,1))
"RTN","ORWDX",70,0)
 . I $P($G(^ORD(101.41,DLG,0)),U)="OR GTX ADDITIVE" S ID="ADDITIVE"
"RTN","ORWDX",71,0)
 . I $E(RSPID)="C",(ID="START"),VAL Q
"RTN","ORWDX",72,0)
 . S LST($$NXT)="~"_DLG_U_INST_U_ID
"RTN","ORWDX",73,0)
 . I $L(VAL) D
"RTN","ORWDX",74,0)
 .. S LST($$NXT)="i"_VAL,LST($$NXT)="e"_$$EXTVAL(VAL,DLG)
"RTN","ORWDX",75,0)
 . I $D(@ROOT@(I,2))>1 D
"RTN","ORWDX",76,0)
 .. S J=0 F  S J=$O(@ROOT@(I,2,J)) Q:J'>0  D
"RTN","ORWDX",77,0)
 ... S LST($$NXT)="t"_$G(@ROOT@(I,2,J,0))
"RTN","ORWDX",78,0)
 I $E(ROOT,1,4)="^TMP" K ^TMP("ORWDXMQ",$J)
"RTN","ORWDX",79,0)
 Q
"RTN","ORWDX",80,0)
SAVE(REC,ORVP,ORNP,ORL,DLG,ORDG,ORIT,ORIFN,ORDIALOG,ORDEA,ORAPPT,ODSRC) ;
"RTN","ORWDX",81,0)
 ; ORVP=DFN, ORNP=Provider, ORL=Location, DLG=Order Dialog,
"RTN","ORWDX",82,0)
 ; ORDG=Display Group, ORIT=Quick Order Dialog, ORAPPT=Appointment
"RTN","ORWDX",83,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORLEAD,ORTRAIL,ORPKG,ORWP94,ORCATFN,OREVTYPE,ONPASS
"RTN","ORWDX",84,0)
 S ORCATFN=""
"RTN","ORWDX",85,0)
 I $L($P(DLG,U,2)) S ORCATFN=$P(DLG,U,2),DLG=$P(DLG,U,1)
"RTN","ORWDX",86,0)
 I $G(ORDIALOG("ORTS")) S ORTS=ORDIALOG("ORTS") K ORDIALOG("ORTS")
"RTN","ORWDX",87,0)
 I $G(ORDIALOG("ORSLOG")) S ORLOG=ORDIALOG("ORSLOG") K ORDIALOG("ORSLOG")
"RTN","ORWDX",88,0)
 I $D(ORDIALOG("OREVENT")) S OREVENT=ORDIALOG("OREVENT") K ORDIALOG("OREVENT")
"RTN","ORWDX",89,0)
 I $L($G(OREVENT)) D
"RTN","ORWDX",90,0)
 . S ONPASS=0
"RTN","ORWDX",91,0)
 . S OREVTYPE=$$TYPE^OREVNTX(OREVENT)
"RTN","ORWDX",92,0)
 . I OREVTYPE="T" D ISPASS^OREVNTX1(.ONPASS,+OREVENT,"T")
"RTN","ORWDX",93,0)
 . S ORCAT=$S(OREVTYPE="A":"I",OREVTYPE="T":"I",ONPASS=1:"O",1:"O")
"RTN","ORWDX",94,0)
 E  S ORCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDX",95,0)
 I DLG="PS MEDS" S ORWP94=1 D
"RTN","ORWDX",96,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO SUPPLY",0)) S DLG="PSO SUPPLY"
"RTN","ORWDX",97,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO OERR",0)) S DLG="PSO OERR"
"RTN","ORWDX",98,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSJ OR PAT OE",0)) S DLG="PSJ OR PAT OE"
"RTN","ORWDX",99,0)
 I DLG="PSO OERR" S ORCAT="O" I $G(OREVENT("EFFECTIVE")) D
"RTN","ORWDX",100,0)
 . S ORDIALOG($O(^ORD(101.41,"B","OR GTX START DATE"_$S($G(ORWP94):"/TIME",1:""),0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDX",101,0)
 I DLG="PSJ OR PAT OE" S ORCAT="I"
"RTN","ORWDX",102,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDX",103,0)
 K:'ORDG ORDG K:'ORIT ORIT
"RTN","ORWDX",104,0)
 M ORCHECK=ORDIALOG("ORCHECK") K ORDIALOG("ORCHECK")
"RTN","ORWDX",105,0)
 S ORDIALOG=$O(^ORD(101.41,"AB",DLG,0))
"RTN","ORWDX",106,0)
 I 'ORDIALOG S ORDIALOG=$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWDX",107,0)
 I $D(ORDIALOG("ORLEAD")) S ORLEAD=ORDIALOG("ORLEAD")
"RTN","ORWDX",108,0)
 I $D(ORDIALOG("ORTRAIL")) S ORTRAIL=ORDIALOG("ORTRAIL")
"RTN","ORWDX",109,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORWDX",110,0)
 I $L(ORCATFN) S ORCAT=ORCATFN
"RTN","ORWDX",111,0)
 I $G(ORWP94) D
"RTN","ORWDX",112,0)
 . N SIGPRMT S SIGPRMT=$O(^ORD(101.41,"B","OR GTX SIG",0))
"RTN","ORWDX",113,0)
 . N INSPRMT S INSPRMT=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDX",114,0)
 . I $L($G(ORDIALOG(SIGPRMT,1))) S ORDIALOG(INSPRMT,"FORMAT")="@"
"RTN","ORWDX",115,0)
 . I ORCAT="O" S ORPKG=$O(^DIC(9.4,"C","PSO",0))
"RTN","ORWDX",116,0)
 . I ORCAT="I" S ORPKG=$O(^DIC(9.4,"C","PSJ",0))
"RTN","ORWDX",117,0)
 N ORSRC
"RTN","ORWDX",118,0)
 S ORSCR=$G(ODSRC)
"RTN","ORWDX",119,0)
 D DELPI^ORWDX1 ;delete empty PI
"RTN","ORWDX",120,0)
 I $G(ORIFN)="" D
"RTN","ORWDX",121,0)
 . D EN^ORCSAVE
"RTN","ORWDX",122,0)
 . S REC="" I ORIFN D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",123,0)
 . I '$D(^TMP("ORECALL",$J,ORDIALOG)) M ^TMP("ORECALL",$J,ORDIALOG)=ORDIALOG
"RTN","ORWDX",124,0)
 E  D
"RTN","ORWDX",125,0)
 . N OR0
"RTN","ORWDX",126,0)
 . S OR0=$G(^OR(100,+ORIFN,0)),ORSTS=$P($G(^(3)),U,3),ORDG=$P(OR0,U,11)
"RTN","ORWDX",127,0)
 . I $L($P(OR0,U,17)),ORSTS=10 S OREVENT=$P(OR0,U,17),OREVENT("TS")=$P(OR0,U,13)
"RTN","ORWDX",128,0)
 . D XX^ORCSAVE ; edit order
"RTN","ORWDX",129,0)
 . S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",130,0)
 Q
"RTN","ORWDX",131,0)
SENDED(ORWLST,ORIENS,TS,LOC) ; Release EDOs to svc
"RTN","ORWDX",132,0)
 N OK,ORVP,ORWERR,ORSIGST,ORDA,ORNATURE,ORIX,X,PTEVT,ORIFN
"RTN","ORWDX",133,0)
 S ORWERR="",ORIX=0,LOC=LOC_";SC("
"RTN","ORWDX",134,0)
 F  S ORIX=$O(ORIENS(ORIX)) Q:'ORIX  D
"RTN","ORWDX",135,0)
 . S ORIFN=ORIENS(ORIX)
"RTN","ORWDX",136,0)
 . S ORDA=$P(ORIFN,";",2) S:'ORDA ORDA=1
"RTN","ORWDX",137,0)
 . S ORVP=$P($G(^OR(100,+ORIFN,0)),U,2)
"RTN","ORWDX",138,0)
 . I $D(^OR(100,+ORIFN,8,ORDA,0)) D
"RTN","ORWDX",139,0)
 .. S ORSIGST=$P($G(^(0)),U,4)
"RTN","ORWDX",140,0)
 .. S ORNATURE=$P($G(^(0)),U,12)
"RTN","ORWDX",141,0)
 . S:$G(LOC) $P(^OR(100,+ORIFN,0),U,10)=LOC
"RTN","ORWDX",142,0)
 . S:$G(TS) $P(^OR(100,+ORIFN,0),U,13)=TS
"RTN","ORWDX",143,0)
 . S OK=$$LOCK1^ORX2(ORIFN) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",144,0)
 . I OK D EN2^ORCSEND(ORIENS(ORIX),ORSIGST,ORNATURE,.ORWERR),UNLK1^ORX2(ORIENS(ORIX))
"RTN","ORWDX",145,0)
 . S ORWLST(ORIX)=ORIENS(ORIX)
"RTN","ORWDX",146,0)
 . I $L(ORWERR) S ORWLST(ORIX)=ORWLST(ORIX)_"^E^"_ORWERR Q
"RTN","ORWDX",147,0)
 . E  D
"RTN","ORWDX",148,0)
 .. S PTEVT=$P($G(^OR(100,+ORIENS(ORIX),0)),U,17)
"RTN","ORWDX",149,0)
 .. D:$$TYPE^OREVNTX(PTEVT)="M" SAVE^ORMEVNT1(ORIENS(ORIX),PTEVT,2)
"RTN","ORWDX",150,0)
 . S X="RS"
"RTN","ORWDX",151,0)
 . S $P(ORWLST(ORIX),U,2)=X
"RTN","ORWDX",152,0)
 Q
"RTN","ORWDX",153,0)
SEND(ORWLST,DFN,ORNP,ORL,ES,ORWREC) ; Sign
"RTN","ORWDX",154,0)
 ; DFN=Patient, ORNP=Provider, ORL=Location, ES=Encrypted ES code
"RTN","ORWDX",155,0)
 ; ORWREC(n)=ORIFN;Action^Signature Sts^Release Sts^Nature of Order
"RTN","ORWDX",156,0)
SEND1 N ORVP,ORWI,ORWERR,ORWREL,ORWSIG,ORWNATR,ORDERID,ORBEF,ORLR,ORLAB,X
"RTN","ORWDX",157,0)
 S ORVP=DFN_";DPT(",ORL=ORL_";SC(",ORL(2)=ORL,ORWLST=0
"RTN","ORWDX",158,0)
 S ORLR=+$O(^DIC(9.4,"C","LR",0))
"RTN","ORWDX",159,0)
 S ORWI=0 F  S ORWI=$O(ORWREC(ORWI)) Q:'ORWI  D
"RTN","ORWDX",160,0)
 . S X=ORWREC(ORWI),ORWERR=""
"RTN","ORWDX",161,0)
 . S ORDERID=$P(X,U),ORWSIG=$P(X,U,2),ORWREL=$P(X,U,3),ORWNATR=$P(X,U,4)
"RTN","ORWDX",162,0)
 . S ORBEF=0
"RTN","ORWDX",163,0)
 . I '$D(^OR(100,+ORDERID,0)) Q
"RTN","ORWDX",164,0)
 . I $D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) S ORBEF=$P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),U,15)
"RTN","ORWDX",165,0)
 . S:$D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) ORWNATR=$S($P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),"^",4)=3:"",1:ORWNATR) ;If order doesn't require signature leave nature at electronic --patch 110
"RTN","ORWDX",166,0)
 . S ORWERR=$$CHKACT^ORWDXR(ORDERID,ORWSIG,ORWREL,ORWNATR)
"RTN","ORWDX",167,0)
 . I $L(ORWERR) S ORWERR="1^"_ORWERR
"RTN","ORWDX",168,0)
 . I '$L(ORWERR) D
"RTN","ORWDX",169,0)
 .. I $P(^OR(100,+ORDERID,0),U,14)=ORLR,'$G(ORLAB) D  ; lab batch start
"RTN","ORWDX",170,0)
 ... I $L($T(BHS^ORMBLD)) D BHS^ORMBLD(ORVP) S ORLAB=1
"RTN","ORWDX",171,0)
 .. N OK S OK=$$LOCK1^ORX2(ORDERID) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",172,0)
 .. I OK D EN^ORCSEND(ORDERID,"",ORWSIG,ORWREL,ORWNATR,"",.ORWERR),UNLK1^ORX2(ORDERID)
"RTN","ORWDX",173,0)
 . S ORWLST(ORWI)=ORDERID,X=""
"RTN","ORWDX",174,0)
 . I $L(ORWERR) S ORWLST(ORWI)=ORWLST(ORWI)_"^E^"_ORWERR Q
"RTN","ORWDX",175,0)
 . I ORWREL,((ORBEF=10)!(ORBEF=11)),($P(^OR(100,+ORDERID,3),U,3)'=10) S X="R"
"RTN","ORWDX",176,0)
 . I ORWSIG'=2 S X=X_"S"
"RTN","ORWDX",177,0)
 . S $P(ORWLST(ORWI),U,2)=X
"RTN","ORWDX",178,0)
 I $G(ORLAB) D BTS^ORMBLD(ORVP)
"RTN","ORWDX",179,0)
 Q
"RTN","ORWDX",180,0)
EXTVAL(IVAL,DLG) ; External value given a dlg ptr
"RTN","ORWDX",181,0)
 N ORDIALOG
"RTN","ORWDX",182,0)
 S ORDIALOG(DLG,0)=$P($G(^ORD(101.41,DLG,1)),U,1,2)
"RTN","ORWDX",183,0)
 S ORDIALOG(DLG,1)=IVAL
"RTN","ORWDX",184,0)
 I $E(ORDIALOG(DLG,0))="R",(+IVAL'=IVAL) Q IVAL  ; free text date/time
"RTN","ORWDX",185,0)
 Q $$EXT^ORCD(DLG,1)  ; all others
"RTN","ORWDX",186,0)
DLGID(VAL,ORIFN) ; return dlg IEN
"RTN","ORWDX",187,0)
 S VAL=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",188,0)
 S VAL=$S($P(VAL,";",2)="ORD(101.41,":+VAL,1:0)
"RTN","ORWDX",189,0)
 Q
"RTN","ORWDX",190,0)
FORMID(VAL,ORIFN)  ; Base dlg FormID for an order
"RTN","ORWDX",191,0)
 N DLG
"RTN","ORWDX",192,0)
 S VAL=0,DLG=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",193,0)
 Q:$P(DLG,";",2)'="ORD(101.41,"
"RTN","ORWDX",194,0)
 D FORMID^ORWDXM(.VAL,+DLG)
"RTN","ORWDX",195,0)
 Q
"RTN","ORWDX",196,0)
AGAIN(VAL,DLG)  ; return true to keep dlg for another order
"RTN","ORWDX",197,0)
 S VAL=''$P($G(^ORD(101.41,DLG,0)),U,9)
"RTN","ORWDX",198,0)
 Q
"RTN","ORWDX",199,0)
DGRP(VAL,DLG)   ; Display grp pointer for a dlg
"RTN","ORWDX",200,0)
 S DLG=$S($E(DLG)="`":+$P(DLG,"`",2),1:$O(^ORD(101.41,"AB",DLG,0))) ;kcm
"RTN","ORWDX",201,0)
 S VAL=$P($G(^ORD(101.41,DLG,0)),U,5)
"RTN","ORWDX",202,0)
 Q
"RTN","ORWDX",203,0)
DGNM(VAL,NM) ; Display grp pointer for name
"RTN","ORWDX",204,0)
 S VAL=$O(^ORD(100.98,"B",NM,0))
"RTN","ORWDX",205,0)
 Q
"RTN","ORWDX",206,0)
WRLST(LST,LOC) ; List of dlgs for writing orders
"RTN","ORWDX",207,0)
 G WRLST1^ORWDX1 ;moved to new routine
"RTN","ORWDX",208,0)
MSG(LST,IEN) ; Msg text for orderable item
"RTN","ORWDX",209,0)
 N I
"RTN","ORWDX",210,0)
 S I=0 F  S I=$O(^ORD(101.43,IEN,8,I)) Q:I'>0  S LST(I)=^(I,0)
"RTN","ORWDX",211,0)
 Q
"RTN","ORWDX",212,0)
DISMSG(VAL,IEN) ; Disabled mge for ordering dlg
"RTN","ORWDX",213,0)
 S VAL=$P($G(^ORD(101.41,+IEN,0)),U,3)
"RTN","ORWDX",214,0)
 Q
"RTN","ORWDX",215,0)
LOCK(OK,DFN) ; Attempt to lock pt for ordering
"RTN","ORWDX",216,0)
 S OK=$$LOCK^ORX2(DFN)
"RTN","ORWDX",217,0)
 Q
"RTN","ORWDX",218,0)
UNLOCK(OK,DFN) ; Unlock pt for ordering
"RTN","ORWDX",219,0)
 D UNLOCK^ORX2(DFN) S OK=1
"RTN","ORWDX",220,0)
 Q
"RTN","ORWDX",221,0)
LOCKORD(OK,ORIFN) ; Attempt to lock order
"RTN","ORWDX",222,0)
 S OK=$$LOCK1^ORX2(ORIFN)
"RTN","ORWDX",223,0)
 Q
"RTN","ORWDX",224,0)
UNLKORD(OK,ORIFN) ; Unlock order
"RTN","ORWDX",225,0)
 D UNLK1^ORX2(ORIFN) S OK=1
"RTN","ORWDX",226,0)
 Q
"RTN","ORWDX1")
0^13^B4574854
"RTN","ORWDX1",1,0)
ORWDX1 ; SLC/KCM/REV - Utilities for Order Dialogs ;28-JAN-1999 12:37
"RTN","ORWDX1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,187**;Dec 17, 1997
"RTN","ORWDX1",3,0)
 ;
"RTN","ORWDX1",4,0)
WRLST(LST,LOC) ; Return list of dialogs for writing orders
"RTN","ORWDX1",5,0)
 ; .Y(n): DlgName^ListBox Text
"RTN","ORWDX1",6,0)
WRLST1 N ANENT
"RTN","ORWDX1",7,0)
 S LOC=+$G(LOC)_";SC(" I 'LOC S LOC=""
"RTN","ORWDX1",8,0)
 S ANENT="ALL^"_LOC_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+$G(^(5)),1:"")
"RTN","ORWDX1",9,0)
 D WRLSTB(.LST) Q:$D(LST)>1  ; check ORWDX WRITE ORDERS first
"RTN","ORWDX1",10,0)
 N ORX,X0,X5,ORERR,I,SEQ,IEN,DGRP,FID,TXT,TYP
"RTN","ORWDX1",11,0)
 D GETLST^XPAR(.ORX,ANENT,"ORWOR WRITE ORDERS LIST","Q",.ORERR) Q:ORERR
"RTN","ORWDX1",12,0)
 S I=0 F  S I=$O(ORX(I)) Q:'I  D
"RTN","ORWDX1",13,0)
 . S SEQ=+ORX(I),IEN=$P(ORX(I),U,2),X0=^ORD(101.41,IEN,0),X5=$G(^(5))
"RTN","ORWDX1",14,0)
 . S DGRP=+$P(X0,U,5),FID=+$P(X5,U,5),TXT=$P(X5,U,4),TYP=$P(X0,U,4)
"RTN","ORWDX1",15,0)
 . S:'$L(TXT) TXT=$P(X0,U,2)
"RTN","ORWDX1",16,0)
 . I $P(X0,U,4)="M" S:'FID FID=1001
"RTN","ORWDX1",17,0)
 . S LST(SEQ)=IEN_";"_FID_";"_DGRP_";"_TYP_U_TXT
"RTN","ORWDX1",18,0)
 Q
"RTN","ORWDX1",19,0)
WRLSTB(LST)     ; return menu from which Write Orders list is built
"RTN","ORWDX1",20,0)
 N MNU,SEQ,IEN,ITM,TXT,FID,DGRP,X,TYP
"RTN","ORWDX1",21,0)
 S MNU=$$GET^XPAR(ANENT,"ORWDX WRITE ORDERS LIST",1,"I") Q:'MNU
"RTN","ORWDX1",22,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,MNU,10,"B",SEQ)) Q:'SEQ  D
"RTN","ORWDX1",23,0)
 . S IEN=0 F  S IEN=$O(^ORD(101.41,MNU,10,"B",SEQ,IEN)) Q:'IEN  D
"RTN","ORWDX1",24,0)
 . . S X=$G(^ORD(101.41,MNU,10,IEN,0)),ITM=+$P(X,U,2),TXT=$P(X,U,4)
"RTN","ORWDX1",25,0)
 . . S X=$G(^ORD(101.41,ITM,5)),FID=+$P(X,U,5)
"RTN","ORWDX1",26,0)
 . . S X=$G(^ORD(101.41,ITM,0)),TYP=$P(X,U,4),DGRP=+$P(X,U,5)
"RTN","ORWDX1",27,0)
 . . S:'$L(TXT) TXT=$P(X,U,2)
"RTN","ORWDX1",28,0)
 . . I TYP="M" S:'FID FID=1001
"RTN","ORWDX1",29,0)
 . . S LST(SEQ)=ITM_";"_FID_";"_DGRP_";"_TYP_U_TXT
"RTN","ORWDX1",30,0)
 Q
"RTN","ORWDX1",31,0)
DELPI ; delete PI from ORDIALOG if PI = ""
"RTN","ORWDX1",32,0)
 ;Called from SAVE^ORWDX
"RTN","ORWDX1",33,0)
 N ORPI S ORPI=0
"RTN","ORWDX1",34,0)
 S ORPI=$O(^ORD(101.41,"B","OR GTX PATIENT INSTRUCTIONS",ORPI))
"RTN","ORWDX1",35,0)
 Q:'$D(ORDIALOG(ORPI))
"RTN","ORWDX1",36,0)
 I '$D(ORDIALOG(ORPI,1)) K ORDIALOG(ORPI),ORDIALOG("WP",ORPI) Q
"RTN","ORWDX1",37,0)
 N PINODE,PITX
"RTN","ORWDX1",38,0)
 S PITX="",PINODE=$G(ORDIALOG(ORPI,1))
"RTN","ORWDX1",39,0)
 S PITX=$G(@PINODE@(1,0))
"RTN","ORWDX1",40,0)
 S PITX=$TR(PITX," ","")
"RTN","ORWDX1",41,0)
 I '$L(PITX) K ORDIALOG(ORPI),ORDIALOG("WP",ORPI)
"RTN","ORWDX1",42,0)
 Q
"RTN","ORWDXA")
0^32^B74718319
"RTN","ORWDXA",1,0)
ORWDXA ; SLC/KCM/JLI - Utilites for Order Actions; 2/10/03 9:13Am
"RTN","ORWDXA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148,141,149,187**;Dec 17, 1997
"RTN","ORWDXA",3,0)
 ;
"RTN","ORWDXA",4,0)
VALID(VAL,ORID,ACTION,ORNP,ORWNAT) ; Return error message if not valid action for order
"RTN","ORWDXA",5,0)
 N ORACT,ORVP,ORVER,ORIFN,PRTID S VAL="",PRTID=0
"RTN","ORWDXA",6,0)
 I +ORID=0 S VAL="This order has been deleted." Q
"RTN","ORWDXA",7,0)
 I '$D(^OR(100,+ORID,0)) S VAL="This order has been deleted!" Q
"RTN","ORWDXA",8,0)
 I ACTION="XFR",'$L($T(XFR^ORCACT01)) S ACTION="RW" ; for pre-POE
"RTN","ORWDXA",9,0)
 S ORIFN=ORID,ORVP=$P(^OR(100,+ORID,0),U,2)  ; ORCACT0 expects defined
"RTN","ORWDXA",10,0)
 I (ACTION="RN") D  Q:$L(VAL)  ; ** There's got to be a better way!
"RTN","ORWDXA",11,0)
 . N DLG S DLG=$P(^OR(100,+ORID,0),U,5) Q:DLG'[";ORD(101.41,"
"RTN","ORWDXA",12,0)
 . I $G(^ORD(101.41,+DLG,3))'["PROVIDER^ORCDPSIV" Q
"RTN","ORWDXA",13,0)
 . D AUTH^ORWDPS32(.VAL,ORNP)
"RTN","ORWDXA",14,0)
 . I VAL S VAL=$P(VAL,U,2)
"RTN","ORWDXA",15,0)
 . E  S VAL=""
"RTN","ORWDXA",16,0)
 S ORVER=$S(ACTION="CR":"R",$D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:"^")
"RTN","ORWDXA",17,0)
 I ACTION="CR" S ACTION="VR"
"RTN","ORWDXA",18,0)
 I (ACTION="ES")!(ACTION="OC")!(ACTION="RS") S ORACT=ACTION ; why not defined???
"RTN","ORWDXA",19,0)
 I (ACTION="VR"),'($D(^XUSEC("ORELSE",DUZ))!$D(^XUSEC("OREMAS",DUZ))) D  Q
"RTN","ORWDXA",20,0)
 . S VAL="You are not authorized to verify these orders."
"RTN","ORWDXA",21,0)
 I $L(VAL) Q
"RTN","ORWDXA",22,0)
 N OIIEN,ISIV,IVOD
"RTN","ORWDXA",23,0)
 S (ISIV,OIIEN,IVOD)=0
"RTN","ORWDXA",24,0)
 I (ACTION="RW")!(ACTION="XX")!(ACTION="XFR") D  Q:$L(VAL)
"RTN","ORWDXA",25,0)
 . S ISIV=$P(^OR(100,+ORID,0),U,11)
"RTN","ORWDXA",26,0)
 . I ISIV,($P(^ORD(100.98,ISIV,0),U,3)="IV RX") S IVOD=1
"RTN","ORWDXA",27,0)
 . D:'IVOD GTORITM^ORWDXR(.OIIEN,+ORID)
"RTN","ORWDXA",28,0)
 . D:OIIEN ISACTOI(.VAL,OIIEN) I $L(VAL)>0 Q
"RTN","ORWDXA",29,0)
 . N DLG,FRM
"RTN","ORWDXA",30,0)
 . S DLG=$P(^OR(100,+ORID,0),U,5),FRM=0
"RTN","ORWDXA",31,0)
 . I $P(DLG,";",2)'="ORD(101.41," S DLG=0
"RTN","ORWDXA",32,0)
 . I DLG D FORMID^ORWDXM(.FRM,+DLG)
"RTN","ORWDXA",33,0)
 . I '(DLG&FRM) D
"RTN","ORWDXA",34,0)
 . . S VAL="Copy & Change are not implemented for this order that predates CPRS."
"RTN","ORWDXA",35,0)
 N OREBUILD  ; sometimes left defined by $$VALID
"RTN","ORWDXA",36,0)
 I $$VALID^ORCACT0(ORID,ACTION,.VAL,$G(ORWNAT)) S VAL="" ; VAL=error
"RTN","ORWDXA",37,0)
 Q
"RTN","ORWDXA",38,0)
HOLD(REC,ORID,ORNP)  ; Place an order on hold
"RTN","ORWDXA",39,0)
 N ACTDA
"RTN","ORWDXA",40,0)
 S ACTDA=$$ACTION^ORCSAVE("HD",+ORID,ORNP)
"RTN","ORWDXA",41,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",42,0)
 Q
"RTN","ORWDXA",43,0)
UNHOLD(REC,ORID,ORNP)  ; Release an order from hold
"RTN","ORWDXA",44,0)
 N ACTDA
"RTN","ORWDXA",45,0)
 S ACTDA=$$ACTION^ORCSAVE("RL",+ORID,ORNP)
"RTN","ORWDXA",46,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",47,0)
 Q
"RTN","ORWDXA",48,0)
DC(REC,ORID,ORNP,ORL,REASON)   ; Discontinue/Cancel/Delete an order
"RTN","ORWDXA",49,0)
 N NATURE,CREATE,PRINT,STATUS,ACTDA,SIGSTS
"RTN","ORWDXA",50,0)
 N X3,X8,CURRACT
"RTN","ORWDXA",51,0)
 Q:'+ORID
"RTN","ORWDXA",52,0)
 S CURRACT=0
"RTN","ORWDXA",53,0)
 S ORL(2)=ORL_";SC(",ORL=ORL(2),NATURE=""
"RTN","ORWDXA",54,0)
 I REASON S NATURE=$P(^ORD(100.02,$P(^ORD(100.03,REASON,0),U,7),0),U,2)
"RTN","ORWDXA",55,0)
 S:NATURE="" NATURE="W"  ; S:ORNP=DUZ NATURE="E" 
"RTN","ORWDXA",56,0)
 S CREATE=$$CREATE^ORX1(NATURE),PRINT=$$PRINT^ORCACT2(NATURE)
"RTN","ORWDXA",57,0)
 S X3=$G(^OR(100,+ORID,3))
"RTN","ORWDXA",58,0)
 S CURRACT=$P(X3,U,7) S:CURRACT<1 CURRACT=+$O(^OR(100,+ORID,8,"?"),-1)
"RTN","ORWDXA",59,0)
 I '$D(^OR(100,+ORID,8,+$P(ORID,";",2),0)) D
"RTN","ORWDXA",60,0)
 . S X8=$G(^OR(100,+ORID,8,CURRACT,0))
"RTN","ORWDXA",61,0)
 . S SIGSTS=$P(X8,U,4)
"RTN","ORWDXA",62,0)
 . S $P(ORID,";",2)=CURRACT
"RTN","ORWDXA",63,0)
 E  D
"RTN","ORWDXA",64,0)
 . S X8=^OR(100,+ORID,8,+$P(ORID,";",2),0)
"RTN","ORWDXA",65,0)
 . S SIGSTS=$P(X8,U,4)
"RTN","ORWDXA",66,0)
 I '$D(SIGSTS) S SIGSTS=1
"RTN","ORWDXA",67,0)
 S STATUS=$P($G(^OR(100,+ORID,8,+$P(ORID,";",2),0)),U,15)
"RTN","ORWDXA",68,0)
 I (STATUS=10)!(STATUS=11) D  Q   ; delete/cancel unreleased order
"RTN","ORWDXA",69,0)
 . N RPLORD
"RTN","ORWDXA",70,0)
 . S RPLORD=$P($G(^OR(100,+ORID,3)),U,5)    ; replaced order
"RTN","ORWDXA",71,0)
 . D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",72,0)
 . I STATUS=10,($P(X8,U,4)'=2) D  ; CANCEL signed, delayed, unreleased
"RTN","ORWDXA",73,0)
 . . ; taken from CLRDLY^ORCACT2
"RTN","ORWDXA",74,0)
 . . I REASON D SET^ORCACT2(+ORID,NATURE,REASON)
"RTN","ORWDXA",75,0)
 . . I 'REASON D SET^ORCACT2(+ORID,"M","","Delayed Order Cancelled")
"RTN","ORWDXA",76,0)
 . . D STATUS^ORCSAVE2(+ORID,13) S $P(^OR(100,+ORID,8,1,0),U,15)=13
"RTN","ORWDXA",77,0)
 . E  D                           ; DELETE unsigned, unreleased
"RTN","ORWDXA",78,0)
 . . I $P(X8,U,2)="DC" K ^OR(100,+ORID,6)
"RTN","ORWDXA",79,0)
 . . ; delete fwd ptr to order about to be deleted
"RTN","ORWDXA",80,0)
 . . I RPLORD,$P(X8,U,2)="NW" S $P(^OR(100,RPLORD,3),U,6)=""
"RTN","ORWDXA",81,0)
 . . ; delete ptr to order in Patient Event file #100.2
"RTN","ORWDXA",82,0)
 . . N EVT S EVT=$P($G(^OR(100,+ORID,0)),U,17) I EVT,EVT=+$O(^ORE(100.2,"AO",+ORID,0)) S $P(^ORE(100.2,EVT,0),U,4)="" K ^ORE(100.2,"AO",+ORID,EVT)
"RTN","ORWDXA",83,0)
 . . D DELETE^ORCSAVE2(ORID)
"RTN","ORWDXA",84,0)
 . I RPLORD,'(SIGSTS=1) S ORID=RPLORD  ; for Renews & Changes, show replaced order
"RTN","ORWDXA",85,0)
 . I '$D(^OR(100,+ORID)) D
"RTN","ORWDXA",86,0)
 . . S $P(REC(1),U)="~0",REC(2)="tDELETED: "_$E(REC(2),2,245)
"RTN","ORWDXA",87,0)
 . E  D
"RTN","ORWDXA",88,0)
 . . K REC
"RTN","ORWDXA",89,0)
 . . D GETBYIFN^ORWORR(.REC,+ORID_";"_$P($G(^OR(100,+ORID,3)),U,7))
"RTN","ORWDXA",90,0)
 . S $P(REC(1),U,14)=2 ; DCType = deletion
"RTN","ORWDXA",91,0)
 I CREATE D
"RTN","ORWDXA",92,0)
 . S ACTDA=$$ACTION^ORCSAVE("DC",+ORID,ORNP)
"RTN","ORWDXA",93,0)
 . D SET^ORCACT2(+ORID,NATURE,REASON)
"RTN","ORWDXA",94,0)
 E  D 
"RTN","ORWDXA",95,0)
 . D EN^ORCSEND(+ORID,"DC",3,1,NATURE,REASON)
"RTN","ORWDXA",96,0)
 . S ACTDA=$P(ORID,";",2)
"RTN","ORWDXA",97,0)
 . I PRINT ; do something to print this
"RTN","ORWDXA",98,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",99,0)
 S $P(REC(1),U,14)=$S(CREATE:1,1:3)  ;DCType - 1=NewOrder, 3=NewStatus
"RTN","ORWDXA",100,0)
 Q
"RTN","ORWDXA",101,0)
DCREASON(LST)   ; Return a list of DC reasons
"RTN","ORWDXA",102,0)
 N IEN,ILST,X
"RTN","ORWDXA",103,0)
 S ILST=1,LST(ILST)="~DCReason"
"RTN","ORWDXA",104,0)
 S IEN=0 F  S IEN=$O(^ORD(100.03,IEN)) Q:'IEN  S X=^(IEN,0) D
"RTN","ORWDXA",105,0)
 . I $P(X,U,4) Q                              ; inactive
"RTN","ORWDXA",106,0)
 . I $P(X,U,5)'=+$O(^DIC(9.4,"C","OR",0)) Q   ; not OR pkg
"RTN","ORWDXA",107,0)
 . I $P(X,U,7)=+$O(^ORD(100.02,"C","A",0)) Q  ; nature=auto
"RTN","ORWDXA",108,0)
 . S ILST=ILST+1,LST(ILST)="i"_IEN_U_$P(X,U)
"RTN","ORWDXA",109,0)
 S IEN=$O(^ORD(100.03,"C","ORREQ",0))
"RTN","ORWDXA",110,0)
 I IEN S ILST=ILST+1,LST(ILST)="d"_IEN_U_$P(^ORD(100.03,IEN,0),U)
"RTN","ORWDXA",111,0)
 Q
"RTN","ORWDXA",112,0)
DCREQIEN(VAL)   ; Return the IEN for Requesting Physician Cancelled reason
"RTN","ORWDXA",113,0)
 S VAL=$O(^ORD(100.03,"S","REQ",0))
"RTN","ORWDXA",114,0)
 Q
"RTN","ORWDXA",115,0)
COMPLETE(REC,ORID,ESCODE)      ; Complete an order (generic orders)
"RTN","ORWDXA",116,0)
 ;N X S X=+$E($$NOW^XLFDT,1,12)
"RTN","ORWDXA",117,0)
 ;D DATES^ORCSAVE2(+ORID,,X)
"RTN","ORWDXA",118,0)
 ;D STATUS^ORCSAVE2(+ORID,2)
"RTN","ORWDXA",119,0)
 ; validate ESCode
"RTN","ORWDXA",120,0)
 D COMP^ORCSAVE2(ORID)
"RTN","ORWDXA",121,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",122,0)
 Q
"RTN","ORWDXA",123,0)
VERIFY(REC,ORID,ESCODE,ORVER) ; Verify an order
"RTN","ORWDXA",124,0)
 ; validate ESCode
"RTN","ORWDXA",125,0)
 S ORVER=$G(ORVER,$S($D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:U))
"RTN","ORWDXA",126,0)
 I ORVER'=U D
"RTN","ORWDXA",127,0)
 . N ORIFN,ORES,ORI
"RTN","ORWDXA",128,0)
 . ; to match 56, need to VERIFY any replaced orders:
"RTN","ORWDXA",129,0)
 . S ORIFN=ORID,ORES(ORIFN)="" D REPLCD^ORCACT1
"RTN","ORWDXA",130,0)
 . S ORI="" F  S ORI=$O(ORES(ORI)) Q:ORI=""  D EN^ORCSEND(ORI,"VR","",""),UNLK1^ORX2(+ORI):ORI'=ORID ;ORID locked prior
"RTN","ORWDXA",131,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",132,0)
 Q
"RTN","ORWDXA",133,0)
ALERT(DUMMY,ORID,ORDUZ)       ;send alert to user (ORDUZ) when order (ORID) resulted
"RTN","ORWDXA",134,0)
 ;if no user passed from GUI, use ordering provider:
"RTN","ORWDXA",135,0)
 I $G(ORDUZ)<1 S ORDUZ=+$$ORDERER^ORQOR2(+ORID)
"RTN","ORWDXA",136,0)
 I $L($G(ORDUZ))<1 S ORDUZ=DUZ
"RTN","ORWDXA",137,0)
 S DUMMY=1,$P(^OR(100,+ORID,3),U,10)=ORDUZ
"RTN","ORWDXA",138,0)
 Q
"RTN","ORWDXA",139,0)
FLAG(REC,ORIFN,OREASON,ORNP)   ; Flag an order
"RTN","ORWDXA",140,0)
 N ORB,ORVP,DA,ORPS
"RTN","ORWDXA",141,0)
 D BULLETIN
"RTN","ORWDXA",142,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",143,0)
 K ^OR(100,+ORIFN,8,DA,3) S ^(3)="1^"_$G(XMZ)_U_+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON
"RTN","ORWDXA",144,0)
 D KILL^XM,MSG^ORCFLAG(ORIFN)
"RTN","ORWDXA",145,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ; Last Activity
"RTN","ORWDXA",146,0)
 I +$G(ORNP)<1 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",147,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^1" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",148,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",149,0)
 Q
"RTN","ORWDXA",150,0)
BULLETIN        ; Send flagged order bulletin (USED BY FLAG)
"RTN","ORWDXA",151,0)
 N OR0,OR3,ORDTXT,XMB,XMY,XMDUZ,ORENT,BULL,ORSRV,ORUSR
"RTN","ORWDXA",152,0)
 S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3))
"RTN","ORWDXA",153,0)
 ;CLA - 3/21/96:
"RTN","ORWDXA",154,0)
 S ORUSR=+$P(OR0,U,4)
"RTN","ORWDXA",155,0)
 S ORSRV=$G(^VA(200,ORUSR,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORWDXA",156,0)
 S ORENT="USR.`"_ORUSR_"^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","ORWDXA",157,0)
 S BULL=$$GET^XPAR(ORENT,"ORB FLAGGED ORDERS BULLETIN",1,"Q")
"RTN","ORWDXA",158,0)
 Q:$G(BULL)'="Y"   ;quit if parameter value is not 'Y'es
"RTN","ORWDXA",159,0)
 ;
"RTN","ORWDXA",160,0)
 S XMB="OR FLAGGED ORDER",XMDUZ=DUZ,XMY(+$P(OR0,U,4))=""
"RTN","ORWDXA",161,0)
 S XMB(1)=$P(^DPT(+$P(OR0,U,2),0),U),XMB(2)=$P(^(0),U,9),XMB(3)="" ;sb AGE
"RTN","ORWDXA",162,0)
 S XMB(4)=$$FMTE^XLFDT($P(OR0,U,7))
"RTN","ORWDXA",163,0)
 D TEXT^ORQ12(.ORDTXT,+ORIFN,80)
"RTN","ORWDXA",164,0)
 S XMB(5)=$G(ORDTXT(1)),XMB(6)=$G(ORDTXT(2)),XMB(7)=$G(ORDTXT(3))
"RTN","ORWDXA",165,0)
 S XMB(8)=$$FMTE^XLFDT($P(OR0,U,8)),XMB(9)=$$FMTE^XLFDT($P(OR0,U,9)),XMB(10)=OREASON
"RTN","ORWDXA",166,0)
 S XMB(11)=$P($G(^ORD(100.01,+$P(OR3,U,3),0)),U)
"RTN","ORWDXA",167,0)
 D EN^XMB
"RTN","ORWDXA",168,0)
 Q
"RTN","ORWDXA",169,0)
UNFLAG(REC,ORIFN,OREASON)       ; Unflag an order
"RTN","ORWDXA",170,0)
 N DA,ORB,ORNP,ORVP,ORPS
"RTN","ORWDXA",171,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",172,0)
 S $P(^OR(100,+ORIFN,8,DA,3),U)=0,$P(^(3),U,6,8)=+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON D MSG^ORCFLAG(ORIFN)
"RTN","ORWDXA",173,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT  ; Last Activity
"RTN","ORWDXA",174,0)
 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",175,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^0" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",176,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",177,0)
 Q
"RTN","ORWDXA",178,0)
FLAGTXT(LST,ORID)      ; Return flag reason
"RTN","ORWDXA",179,0)
 N FLAG
"RTN","ORWDXA",180,0)
 S FLAG=$G(^OR(100,+ORID,8,$P(ORID,";",2),3))
"RTN","ORWDXA",181,0)
 S LST(1)="FLAGGED: "_$$FMTE^XLFDT($P(FLAG,U,3))_" by "_$P($G(^VA(200,+$P(FLAG,U,4),0)),U)
"RTN","ORWDXA",182,0)
 S LST(2)=$P(FLAG,U,5) ; reason
"RTN","ORWDXA",183,0)
 Q
"RTN","ORWDXA",184,0)
WCGET(LST,ORID) ; Return ward comments
"RTN","ORWDXA",185,0)
 N I,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",186,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,8,ACT,5,I)) Q:'I  S LST(I)=$G(^(I,0))
"RTN","ORWDXA",187,0)
 Q
"RTN","ORWDXA",188,0)
WCPUT(ERR,ORID,WCLST) ; Set ward comments for order
"RTN","ORWDXA",189,0)
 N DIERR,ERRLST,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",190,0)
 D WP^DIE(100.008,ACT_","_ORIFN_",",50,"","WCLST","ERRLST")
"RTN","ORWDXA",191,0)
 S ERR="" I $D(DIERR) S ERR="An error occurred while saving comments."
"RTN","ORWDXA",192,0)
 Q
"RTN","ORWDXA",193,0)
OFCPLX(ORY,ORID,PRTORDER) ;Check if ORID is an child of the PRTORDER
"RTN","ORWDXA",194,0)
 N NUMCHDS,NOWID,NOWVAL,X3,ORDA
"RTN","ORWDXA",195,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXA",196,0)
 N PKG
"RTN","ORWDXA",197,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXA",198,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXA",199,0)
 I PKG'="PS" Q
"RTN","ORWDXA",200,0)
 I $L($G(^OR(100,+ORID,3))),('$L($P(^(3),U,9))) Q
"RTN","ORWDXA",201,0)
 S (NUMCHDS,NOWID,NOWVAL,X3,ORDA)=0
"RTN","ORWDXA",202,0)
 S PRTORDER=+$P(^(3),U,9)
"RTN","ORWDXA",203,0)
 S X3=$G(^OR(100,PRTORDER,3)),ORDA=$P(X3,U,7)
"RTN","ORWDXA",204,0)
 S PRTORDER=PRTORDER_";"_ORDA
"RTN","ORWDXA",205,0)
 S NUMCHDS=$P($G(^OR(100,+PRTORDER,2,0)),U,4)
"RTN","ORWDXA",206,0)
 I NUMCHDS>2 S ORY="COMPLEX-PSI"_U_PRTORDER
"RTN","ORWDXA",207,0)
 S:$D(^OR(100,+PRTORDER,4.5,"ID","NOW")) NOWID=$O(^("NOW",0))
"RTN","ORWDXA",208,0)
 S:NOWID NOWVAL=$G(^OR(100,+PRTORDER,4.5,NOWID,1))
"RTN","ORWDXA",209,0)
 I NOWVAL=1 Q
"RTN","ORWDXA",210,0)
 E  S ORY="COMPLEX-PSI"_U_PRTORDER
"RTN","ORWDXA",211,0)
 Q
"RTN","ORWDXA",212,0)
ISACTOI(ORY,OI) ;If it's an active orderable item
"RTN","ORWDXA",213,0)
 I $G(^ORD(101.43,+OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXA",214,0)
 . S ORY=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDXA",215,0)
 Q
"RTN","ORWDXM1")
0^26^B68113891
"RTN","ORWDXM1",1,0)
ORWDXM1 ; SLC/KCM - Order Dialogs, Menus;2/19/03 ;8/15/03  10:45
"RTN","ORWDXM1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,131,132,141,178,185,187**;Dec 17, 1997
"RTN","ORWDXM1",3,0)
BLDQRSP(LST,ORIT,FLDS,ISIMO) ; Build responses for an order
"RTN","ORWDXM1",4,0)
 ; LST=QuickLevel^ResponseID(ORIT;$H)^Dialog^Type^FormID^DGrp
"RTN","ORWDXM1",5,0)
 ; LST(n)=verify text or rejection text
"RTN","ORWDXM1",6,0)
 ; ORIT= ptr to 101.41 for quick order, 100 for copy
"RTN","ORWDXM1",7,0)
 ;       1   2    3    4   5   6    7    8        11-20
"RTN","ORWDXM1",8,0)
 ; FLDS=DFN^LOC^ORNP^INPT^SEX^AGE^EVENT^SC%^^^Key Variables...
"RTN","ORWDXM1",9,0)
 ; ORIT=+ORIT: ptr to 101.41, $E(ORIT)=C: copy $E(ORIT)=X: change
"RTN","ORWDXM1",10,0)
 ; !! SHOULD ALSO CHECK for PRE-CPRS ORDERS (treat as text?)
"RTN","ORWDXM1",11,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","ORWDXM1",12,0)
 N ORWMODE ; 0:Dialog,Quick 1:copy order 2:change order
"RTN","ORWDXM1",13,0)
 N TEMPCAT ; patient category from DPT file
"RTN","ORWDXM1",14,0)
 N ISXFER ; If it is transfer order
"RTN","ORWDXM1",15,0)
 N ORIMO ;If it's for IMO(inpatient medication on outpatient)
"RTN","ORWDXM1",16,0)
 S ORIMO=$G(ISIMO)
"RTN","ORWDXM1",17,0)
 S ORWMODE=0,ISXFER=""
"RTN","ORWDXM1",18,0)
 S:$E(ORIT)="C" ORWMODE=1 S:$E(ORIT)="T" ORWMODE=1,ISXFER=";T" ;treat xfer as copy for now
"RTN","ORWDXM1",19,0)
 S:$E(ORIT)="X" ORWMODE=2
"RTN","ORWDXM1",20,0)
 I ORWMODE S ORIT=$E(ORIT,2,999)
"RTN","ORWDXM1",21,0)
 S LST(0)=""
"RTN","ORWDXM1",22,0)
 D CHKDSBL^ORWDXM3(.LST,ORIT,ORWMODE) Q:+LST(0)=8  ;disable
"RTN","ORWDXM1",23,0)
 D CHKVACT^ORWDXM3(.LST,ORIT,ORWMODE,$P(FLDS,U,3)) Q:+LST(0)=8  ;action
"RTN","ORWDXM1",24,0)
 I ORWMODE=1 D CHKCOPY^ORWDXM3(.LST,ORIT,FLDS) Q:+LST(0)=8  ;no copy
"RTN","ORWDXM1",25,0)
 I ORWMODE=2 D BLD4CHG^ORWDXM3(.LST,ORIT,FLDS) Q  ;change
"RTN","ORWDXM1",26,0)
 I 'ORWMODE,($P(^ORD(101.41,+ORIT,0),U,4)="D"),'($O(^DIC(9.4,"C","OR",0))[$P(^ORD(101.41,+ORIT,0),U,7)) S LST(0)="0^0^"_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER) Q
"RTN","ORWDXM1",27,0)
 ;radilogy specific variables
"RTN","ORWDXM1",28,0)
 N ORIMTYPE
"RTN","ORWDXM1",29,0)
 ;lab specific variables
"RTN","ORWDXM1",30,0)
 N LRFZX,LRFSAMP,LRFSPEC,LRFDATE,LRFURG,LRFSCH
"RTN","ORWDXM1",31,0)
 N ORTIME,ORCOLLCT,ORMAX,ORTEST,ORIMTIME,ORSMAX,ORSTMS,ORSCH
"RTN","ORWDXM1",32,0)
 ;pharmacy specific variables
"RTN","ORWDXM1",33,0)
 N PSJNOPC,ORMORE,ORINPT,ORXNP,ORSCHED,ORQTY,ORNOUNS,ORXNP,OREFILLS
"RTN","ORWDXM1",34,0)
 N ORCOMPLX,ORQTY,ORCOPAY,ORDRUG,ORWPSPIK,ORWPSWRG,ORSD,ORDSUP,ORWP94
"RTN","ORWDXM1",35,0)
 ;dietetics specific variables
"RTN","ORWDXM1",36,0)
 N ORPARAM,ORNPO,ORTIME,ORMEAL,ORTRAY,ORDATE
"RTN","ORWDXM1",37,0)
 ;consults specific variables
"RTN","ORWDXM1",38,0)
 N GMRCNOPD,GMRCNOAT,GMRCREAF
"RTN","ORWDXM1",39,0)
 ; setup general environment
"RTN","ORWDXM1",40,0)
 N ORTYPE,ORVP,ORL,ORNP,ORSEX,ORAGE,ORWARD,OREVENT,ORDIV,ORSC,KEYVAR
"RTN","ORWDXM1",41,0)
 N ORDG,ORDIALOG,ORCAT,FIRST,ORQUIT,X,ORTRAIL,ORLEAD,RSPREF,AUTOACK
"RTN","ORWDXM1",42,0)
 N OREVNTYP
"RTN","ORWDXM1",43,0)
 S ORWP94=$O(^ORD(101.41,"AB","PS MEDS",0))>0
"RTN","ORWDXM1",44,0)
 S ORVP=$P(FLDS,U,1)_";DPT(",ORNP=+$P(FLDS,U,3),ORSC=$P(FLDS,U,8)
"RTN","ORWDXM1",45,0)
 S ORL=$P(FLDS,U,2)_";SC(",ORL(2)=ORL
"RTN","ORWDXM1",46,0)
 S ORSEX=$P(FLDS,U,5),ORAGE=$P(FLDS,U,6),ORTYPE="Q",FIRST=1
"RTN","ORWDXM1",47,0)
 I $P(FLDS,U,4),$G(^SC(+ORL,42)) S ORWARD=+^SC(+ORL,42)
"RTN","ORWDXM1",48,0)
 I $L($P(FLDS,U,7))  D
"RTN","ORWDXM1",49,0)
 . S OREVENT=$P(FLDS,U,7)
"RTN","ORWDXM1",50,0)
 . S OREVNTYP=$P(OREVENT,";",2)
"RTN","ORWDXM1",51,0)
 . S OREVENT("TS")=$P(OREVENT,";",3)
"RTN","ORWDXM1",52,0)
 . S OREVENT("EFFECTIVE")=$P(OREVENT,";",4)
"RTN","ORWDXM1",53,0)
 . S OREVENT=+$P(OREVENT,";",1)
"RTN","ORWDXM1",54,0)
 I 'ORWMODE D
"RTN","ORWDXM1",55,0)
 . D SETKEYV^ORWDXM3($P(FLDS,U,11,20)) ; from menu path
"RTN","ORWDXM1",56,0)
 . S KEYVAR=$$KEYVAR^ORWDXM3(ORIT) ; from entry action
"RTN","ORWDXM1",57,0)
 . D SETKEYV^ORWDXM3(KEYVAR)
"RTN","ORWDXM1",58,0)
 K ^TMP("ORWORD",$J)
"RTN","ORWDXM1",59,0)
 ; initialize return record based on auto-accept
"RTN","ORWDXM1",60,0)
 I ORWMODE S LST(0)="2^"_ORIT ;verify on copy 
"RTN","ORWDXM1",61,0)
 E  S LST(0)=+$P($G(^ORD(101.41,ORIT,5)),U,8)_U_ORIT
"RTN","ORWDXM1",62,0)
 S TEMPCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDXM1",63,0)
 I $L($G(OREVNTYP)) D
"RTN","ORWDXM1",64,0)
 . S ORCAT=$S(OREVNTYP="A":"I",OREVNTYP="T":"I",OREVNTYP="O":TEMPCAT,OREVNTYP="M":TEMPCAT,OREVNTYP="C":TEMPCAT,1:"O") I $G(OREVENT) D
"RTN","ORWDXM1",65,0)
 .. N X S X=$$EVT^OREVNTX(OREVENT),X=$P($G(^ORD(100.5,+X,0)),U,7)
"RTN","ORWDXM1",66,0)
 .. I OREVNTYP="T",X,X<4 S ORCAT="O" ;To pass=outpt
"RTN","ORWDXM1",67,0)
 .. I OREVNTYP="D",X=41 S ORCAT="I" ;From ASIH=inpt
"RTN","ORWDXM1",68,0)
 E  S ORCAT=TEMPCAT
"RTN","ORWDXM1",69,0)
 D SETUP^ORWDXM4 Q:+LST(0)=8
"RTN","ORWDXM1",70,0)
 S X=$S($G(ORWP94):"OR GTX START DATE/TIME",1:"OR GTX START DATE")
"RTN","ORWDXM1",71,0)
 I ORWMODE,(ORDG=+$O(^ORD(100.98,"B","O RX",0))) K ORDIALOG($$PTR^ORCD(X),1)
"RTN","ORWDXM1",72,0)
 ; pharmacy uses ORCAT to know which package the order goes to
"RTN","ORWDXM1",73,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0)) S ORCAT="O"
"RTN","ORWDXM1",74,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) D
"RTN","ORWDXM1",75,0)
 . I ORCAT="O",'ORIMO S ORWPSWRG="" ; not auto-ack, pt not inpt
"RTN","ORWDXM1",76,0)
 . S ORCAT="I"
"RTN","ORWDXM1",77,0)
 I ORCAT="O",$D(OREVENT("EFFECTIVE")),(ORDG=+$O(^ORD(100.98,"B","O RX",0))) D
"RTN","ORWDXM1",78,0)
 . S ORDIALOG($O(^ORD(101.41,"B",X,0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDXM1",79,0)
 I ORDIALOG=$O(^ORD(101.41,"B","RA OERR EXAM",0))         D RA^ORWDXM2 G XENV
"RTN","ORWDXM1",80,0)
 I ORDIALOG=$O(^ORD(101.41,"B","LR OTHER LAB TESTS",0))   D LR^ORWDXM2 G XENV
"RTN","ORWDXM1",81,0)
 I ORDIALOG=$O(^ORD(101.41,"B","FHW1",0))                 D DO^ORWDXM2 G XENV
"RTN","ORWDXM1",82,0)
 I ORDIALOG=$O(^ORD(101.41,"B","FHW2",0))                 D EL^ORWDXM2 G XENV
"RTN","ORWDXM1",83,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0))        D UD^ORWDXM2 G XENV
"RTN","ORWDXM1",84,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0)) D IV^ORWDXM2 G XENV
"RTN","ORWDXM1",85,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0))             D OP^ORWDXM2 G XENV
"RTN","ORWDXM1",86,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO SUPPLY",0))           D OP^ORWDXM2 G XENV
"RTN","ORWDXM1",87,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PS MEDS",0))              D PS^ORWDPS3 G XENV
"RTN","ORWDXM1",88,0)
 I ORDIALOG=$O(^ORD(101.41,"B","GMRAOR ALLERGY ENTER/EDIT",0)) S ORQUIT=1
"RTN","ORWDXM1",89,0)
XENV ;    end case
"RTN","ORWDXM1",90,0)
 Q:+LST(0)=8
"RTN","ORWDXM1",91,0)
 I $G(ORQUIT) S LST(0)="0^0^"_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER)_"^"_$G(KEYVAR) Q
"RTN","ORWDXM1",92,0)
 N SEQ,DA,XCODE,MUSTASK,PROMPT,INST,KEY,IVFID
"RTN","ORWDXM1",93,0)
 S IVFID=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM1",94,0)
 S AUTOACK=$S($D(ORWPSWRG):0,1:1)
"RTN","ORWDXM1",95,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ)) Q:'SEQ  D
"RTN","ORWDXM1",96,0)
 . S DA=0 F  S DA=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORWDXM1",97,0)
 . . ; skip if this is a child prompt
"RTN","ORWDXM1",98,0)
 . . I $P(^ORD(101.41,+ORDIALOG,10,DA,0),U,11) Q
"RTN","ORWDXM1",99,0)
 . . ; set default for prompt, see if needs to be interactive
"RTN","ORWDXM1",100,0)
 . . S PROMPT=$P(^ORD(101.41,+ORDIALOG,10,DA,0),U,2)
"RTN","ORWDXM1",101,0)
 . . D SETITEM(DA,PROMPT,1,.MUSTASK)
"RTN","ORWDXM1",102,0)
 . . I MUSTASK S AUTOACK=0 Q
"RTN","ORWDXM1",103,0)
 . . ; iterate through the child items if parent and editonly
"RTN","ORWDXM1",104,0)
 . . Q:'$D(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT))
"RTN","ORWDXM1",105,0)
 . . N CSEQ,CDA,CPROMPT,INST,ORQUIT
"RTN","ORWDXM1",106,0)
 . . S CSEQ=0 F  S CSEQ=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT,CSEQ)) Q:'CSEQ  D  Q:$G(ORQUIT)
"RTN","ORWDXM1",107,0)
 . . . S CDA=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT,CSEQ,0))
"RTN","ORWDXM1",108,0)
 . . . S CPROMPT=$P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,2)
"RTN","ORWDXM1",109,0)
 . . . ; if required and no instances then need interaction
"RTN","ORWDXM1",110,0)
 . . . I $P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,6),ORDIALOG'=IVFID,'$O(ORDIALOG(CPROMPT,0)) S AUTOACK=0
"RTN","ORWDXM1",111,0)
 . . . S INST=0 F  S INST=$O(ORDIALOG(CPROMPT,INST)) Q:'INST  D
"RTN","ORWDXM1",112,0)
 . . . . ; set default for each child prompt, if necessary
"RTN","ORWDXM1",113,0)
 . . . . D SETITEM(CDA,CPROMPT,INST,.MUSTASK)
"RTN","ORWDXM1",114,0)
 . . . . ; if no val and child prmpt required then need interaction
"RTN","ORWDXM1",115,0)
 . . . . I MUSTASK,$P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,6) S AUTOACK=0
"RTN","ORWDXM1",116,0)
 N IVDLG
"RTN","ORWDXM1",117,0)
 S IVDLG=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM1",118,0)
 I $$ISMED(ORIT),(ORDIALOG'=IVDLG),(ORCAT="I") D
"RTN","ORWDXM1",119,0)
 . F P="PATIENT INSTRUCTIONS","START DATE/TIME","DAYS SUPPLY","QUANTITY","REFILLS","ROUTING","SERVICE CONNECTED" K ORDIALOG($$PTR(P),1)
"RTN","ORWDXM1",120,0)
 S KEY=$S(ORWMODE:"C",1:"")_ORIT_"-"_$P($H,",",2),SEQ=0
"RTN","ORWDXM1",121,0)
 S PROMPT=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:'PROMPT  D
"RTN","ORWDXM1",122,0)
 . I '$D(^ORD(101.41,ORDIALOG,10,"D",PROMPT)) K ORDIALOG(PROMPT) Q 
"RTN","ORWDXM1",123,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  D
"RTN","ORWDXM1",124,0)
 . . S SEQ=SEQ+1,^TMP("ORWDXMQ",$J,KEY,SEQ,0)=U_PROMPT_U_INST
"RTN","ORWDXM1",125,0)
 . . ; save word processing value
"RTN","ORWDXM1",126,0)
 . . I $E(ORDIALOG(PROMPT,0))="W",$L(ORDIALOG(PROMPT,INST)) D
"RTN","ORWDXM1",127,0)
 . . .  M ^TMP("ORWDXMQ",$J,KEY,SEQ,2)=@ORDIALOG(PROMPT,INST)
"RTN","ORWDXM1",128,0)
 . . ; save other types of values
"RTN","ORWDXM1",129,0)
 . . E  S ^TMP("ORWDXMQ",$J,KEY,SEQ,1)=ORDIALOG(PROMPT,INST)
"RTN","ORWDXM1",130,0)
 I AUTOACK D
"RTN","ORWDXM1",131,0)
 . I ORWMODE S AUTOACK=2
"RTN","ORWDXM1",132,0)
 . I 'ORWMODE,($P(^ORD(101.41,ORIT,0),U,8)!'LST(0)) S AUTOACK=2
"RTN","ORWDXM1",133,0)
 I ($$ISMED(ORIT)),'($$VALQO^ORWDXM3(ORIT)) S AUTOACK=0
"RTN","ORWDXM1",134,0)
 I ORIMO,ORWMODE S AUTOACK=2
"RTN","ORWDXM1",135,0)
 I AUTOACK=2 D VERTXT^ORWDXM2
"RTN","ORWDXM1",136,0)
 S LST(0)=AUTOACK_U_KEY_U_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER)_"^"_$G(KEYVAR)
"RTN","ORWDXM1",137,0)
 I $P(LST(0),U,4)="D" S $P(LST(0),U,4)="Q"
"RTN","ORWDXM1",138,0)
 I ORWMODE=1 S $P(LST(0),U,4)="C"
"RTN","ORWDXM1",139,0)
 K ^TMP("ORWORD",$J)
"RTN","ORWDXM1",140,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J)
"RTN","ORWDXM1",141,0)
 Q
"RTN","ORWDXM1",142,0)
SETITEM(DA,PROMPT,INST,MUSTASK) ; set default value & return if must prompt
"RTN","ORWDXM1",143,0)
 N EDITONLY,Y,XCODE
"RTN","ORWDXM1",144,0)
 S MUSTASK=0,EDITONLY=0
"RTN","ORWDXM1",145,0)
 I $D(^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)) D
"RTN","ORWDXM1",146,0)
 . I $E(ORDIALOG(PROMPT,0))="W" D
"RTN","ORWDXM1",147,0)
 . . S ^TMP("ORWORD",$J,PROMPT,INST,1,0)=^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)
"RTN","ORWDXM1",148,0)
 . . S ORDIALOG(PROMPT,INST)="^TMP(""ORWORD"","_$J_","_PROMPT_","_INST_")"
"RTN","ORWDXM1",149,0)
 . E  S ORDIALOG(PROMPT,INST)=^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)
"RTN","ORWDXM1",150,0)
 I $D(^TMP("ORWDHTM",$J,ORIT,PROMPT)) D
"RTN","ORWDXM1",151,0)
 . S ORDIALOG(PROMPT,INST)=^TMP("ORWDHTM",$J,ORIT,PROMPT)
"RTN","ORWDXM1",152,0)
 . ; NEED TO CLEAN UP ^TMP("ORWDHTM") after processing order set!!!
"RTN","ORWDXM1",153,0)
 ;
"RTN","ORWDXM1",154,0)
 ; skip if a value already exists for this prompt and not WP
"RTN","ORWDXM1",155,0)
 Q:$D(ORDIALOG(PROMPT,INST))&($E(ORDIALOG(PROMPT,0))'="W")
"RTN","ORWDXM1",156,0)
 ; execute default action if no value in QO, checking EDITONLY afterwards
"RTN","ORWDXM1",157,0)
 I '$D(ORDIALOG(PROMPT,INST)) D
"RTN","ORWDXM1",158,0)
 . I $E(ORDIALOG(PROMPT,0))="W",$D(^ORD(101.41,+ORDIALOG,10,DA,8))>9 D
"RTN","ORWDXM1",159,0)
 . . M ^TMP("ORWORD",$J,PROMPT,INST)=^ORD(101.41,+ORDIALOG,10,DA,8)
"RTN","ORWDXM1",160,0)
 . . S ORDIALOG(PROMPT,INST)="^TMP(""ORWORD"","_$J_","_PROMPT_","_INST_")"
"RTN","ORWDXM1",161,0)
 . E  D
"RTN","ORWDXM1",162,0)
 . . S XCODE=$$SUBCODE($G(^ORD(101.41,+ORDIALOG,10,DA,7)))
"RTN","ORWDXM1",163,0)
 . . I $L(XCODE) X XCODE S:$D(Y) ORDIALOG(PROMPT,INST)=Y
"RTN","ORWDXM1",164,0)
 Q:$G(EDITONLY)
"RTN","ORWDXM1",165,0)
 I 'ORWMODE,$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,8) Q
"RTN","ORWDXM1",166,0)
 I ORWMODE,($P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,9)'["W"),'$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,6)!$D(ORDIALOG(PROMPT,INST)) Q
"RTN","ORWDXM1",167,0)
 I 'ORWMODE,LST(0),$D(ORDIALOG(PROMPT,INST)),($E(ORDIALOG(PROMPT,0))="W") Q
"RTN","ORWDXM1",168,0)
 I 'ORWMODE,LST(0),'$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,6) Q
"RTN","ORWDXM1",169,0)
 S XCODE=$$SUBCODE($G(^ORD(101.41,+ORDIALOG,10,DA,3)))
"RTN","ORWDXM1",170,0)
 I $L(XCODE) X XCODE Q:'$T
"RTN","ORWDXM1",171,0)
 S MUSTASK=1
"RTN","ORWDXM1",172,0)
 Q
"RTN","ORWDXM1",173,0)
SUBCODE(X) ; substitute code
"RTN","ORWDXM1",174,0)
 I X["$$REQDCOMM^ORCDLR" Q "I $$LRRQCM^ORWDXM2"
"RTN","ORWDXM1",175,0)
 I X["$$ASKSAMP^ORCDLR" Q "I $$LRASMP^ORWDXM2"
"RTN","ORWDXM1",176,0)
 I X["$$SCHEDULD^ORCDRA1" Q "I $$SCHEDULD^ORWDXM2"
"RTN","ORWDXM1",177,0)
 I X["(^PSX(550,""C"")" Q "S Y=$E($$DEFPICK^ORWDPS32) K:'$L(Y) Y"
"RTN","ORWDXM1",178,0)
 Q X
"RTN","ORWDXM1",179,0)
PTR(NAME) ; -- Returns pointer to OR GTX NAME
"RTN","ORWDXM1",180,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORWDXM1",181,0)
 ;
"RTN","ORWDXM1",182,0)
ISMED(IFN) ; return 1 if it use a pharmacy order dlg
"RTN","ORWDXM1",183,0)
 N PKG
"RTN","ORWDXM1",184,0)
 I 'ORWMODE S PKG=$P($G(^ORD(101.41,IFN,0)),U,7)
"RTN","ORWDXM1",185,0)
 E  S PKG=$P($G(^OR(100,+IFN,0)),U,14)
"RTN","ORWDXM1",186,0)
 Q $$NMSP^ORCD(PKG)="PS"
"RTN","ORWDXM2")
0^9^B60409623
"RTN","ORWDXM2",1,0)
ORWDXM2 ; SLC/KCM - Quick Orders ;11/25/02  09:49
"RTN","ORWDXM2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,116,132,158,187**;Dec 17, 1997
"RTN","ORWDXM2",3,0)
 ;
"RTN","ORWDXM2",4,0)
CLRRCL(OK)      ; clear ORECALL
"RTN","ORWDXM2",5,0)
 S OK=1
"RTN","ORWDXM2",6,0)
 K ^TMP("ORECALL",$J),^TMP("ORWDXMQ",$J)
"RTN","ORWDXM2",7,0)
 Q
"RTN","ORWDXM2",8,0)
VERTXT ; set verify text for order
"RTN","ORWDXM2",9,0)
 N SEQ,DA,X,PROMPT,MULT,CHILD,INST,TITLE,ILST,SPACES
"RTN","ORWDXM2",10,0)
 S ILST=0,$P(SPACES," ",31)=""
"RTN","ORWDXM2",11,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ)) Q:SEQ'>0  D
"RTN","ORWDXM2",12,0)
 . S DA=0 F  S DA=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORWDXM2",13,0)
 . . S X0=$G(^ORD(101.41,+ORDIALOG,10,DA,0))
"RTN","ORWDXM2",14,0)
 . . Q:$P(X0,U,9)["*"  ; hidden prompt
"RTN","ORWDXM2",15,0)
 . . S PROMPT=$P(X0,U,2),MULT=$P(X0,U,7),CHILD=$P(X0,U,11) Q:CHILD
"RTN","ORWDXM2",16,0)
 . . Q:'PROMPT  S INST=$O(ORDIALOG(PROMPT,0)) Q:'INST  ; no values
"RTN","ORWDXM2",17,0)
 . . S TITLE=$S($L($G(ORDIALOG(PROMPT,"TTL"))):ORDIALOG(PROMPT,"TTL"),1:ORDIALOG(PROMPT,"A"))
"RTN","ORWDXM2",18,0)
 . . I $E(ORDIALOG(PROMPT,0))="W" D
"RTN","ORWDXM2",19,0)
 . . . N IWP,WP,CNT
"RTN","ORWDXM2",20,0)
 . . . S IWP=0,CNT=0
"RTN","ORWDXM2",21,0)
 . . . F  S IWP=$O(^TMP("ORWORD",$J,PROMPT,INST,IWP)) Q:'IWP  D
"RTN","ORWDXM2",22,0)
 . . . . S CNT=CNT+1,WP(CNT)=^TMP("ORWORD",$J,PROMPT,INST,IWP,0)
"RTN","ORWDXM2",23,0)
 . . . I CNT=1 S ILST=ILST+1,LST(ILST)=$J(TITLE,30)_WP(1)
"RTN","ORWDXM2",24,0)
 . . . I CNT>1 D 
"RTN","ORWDXM2",25,0)
 . . . . S ILST=ILST+1,LST(ILST)=TITLE,IWP=0
"RTN","ORWDXM2",26,0)
 . . . . F  S IWP=$O(WP(IWP)) Q:'IWP  S ILST=ILST+1,LST(ILST)=WP(IWP)
"RTN","ORWDXM2",27,0)
 . . E  D
"RTN","ORWDXM2",28,0)
 . . . S ILST=ILST+1,LST(ILST)=$J(TITLE,30)
"RTN","ORWDXM2",29,0)
 . . . S LST(ILST)=LST(ILST)_$$ITEM^ORCDLG(PROMPT,INST)
"RTN","ORWDXM2",30,0)
 . . Q:'MULT  Q:'$O(ORDIALOG(PROMPT,INST))  ; done
"RTN","ORWDXM2",31,0)
 . . F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  S ILST=ILST+1,LST(ILST)=SPACES_$$ITEM^ORCDLG(PROMPT,INST)
"RTN","ORWDXM2",32,0)
 Q
"RTN","ORWDXM2",33,0)
RA ; setup environment for radiology
"RTN","ORWDXM2",34,0)
 ; -- get imaging types based on display group of quick order and
"RTN","ORWDXM2",35,0)
 ;    setup list of imaging locations based on imaging type
"RTN","ORWDXM2",36,0)
 N ORY,ITYPE,IFN,CNT,ORIMLOC,PROMPT
"RTN","ORWDXM2",37,0)
 S ORDIV=$$DIV^ORCDRA1,ITYPE=$P($G(^ORD(100.98,+ORDG,0)),U,3)
"RTN","ORWDXM2",38,0)
 S ORIMTYPE=$O(^RA(79.2,"C",ITYPE,0))
"RTN","ORWDXM2",39,0)
 D EN4^RAO7PC1(ITYPE,"ORY")
"RTN","ORWDXM2",40,0)
 S (IFN,CNT)=0 F  S IFN=$O(ORY(IFN)) Q:IFN'>0  D
"RTN","ORWDXM2",41,0)
 . S CNT=CNT+1,ORIMLOC(CNT)=ORY(IFN),ORIMLOC("B",$P(ORY(IFN),U,2))=IFN
"RTN","ORWDXM2",42,0)
 I '$$GET^XPAR("ALL","RA SUBMIT PROMPT",1,"Q"),CNT>1 K ORIMLOC
"RTN","ORWDXM2",43,0)
 E  S ORIMLOC=CNT_"^1"
"RTN","ORWDXM2",44,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX IMAGING LOCATION",0))
"RTN","ORWDXM2",45,0)
 I $G(ORIMLOC) M ORDIALOG(PROMPT,"LIST")=ORIMLOC
"RTN","ORWDXM2",46,0)
 Q
"RTN","ORWDXM2",47,0)
LR ; setup environment for lab
"RTN","ORWDXM2",48,0)
 ; -- setup ORTIME, ORIMTIME & ORTEST arrays
"RTN","ORWDXM2",49,0)
 ;    setup ORMAX, ORDG, & ORCOLLCT variables
"RTN","ORWDXM2",50,0)
 N PROMPT,INST,EDITONLY
"RTN","ORWDXM2",51,0)
 D GETIMES^ORCDLR1  ; sets up ORTIME and ORIMTIME arrays
"RTN","ORWDXM2",52,0)
 S ORMAX=$$GET^XPAR("ALL^LOC.`"_+ORL,"LR MAX DAYS CONTINUOUS",1,"Q")
"RTN","ORWDXM2",53,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0)),INST=1
"RTN","ORWDXM2",54,0)
 D LRTEST           ; sets up ORTEST array and ORDG
"RTN","ORWDXM2",55,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX COLLECTION TYPE",0))
"RTN","ORWDXM2",56,0)
 I $D(ORDIALOG(PROMPT,1)) S ORCOLLCT=ORDIALOG(PROMPT,1) I 1
"RTN","ORWDXM2",57,0)
 E  S EDITONLY=0,ORCOLLCT=$$COLLTYPE^ORCDLR1
"RTN","ORWDXM2",58,0)
 I ORCOLLCT="I" D
"RTN","ORWDXM2",59,0)
 . S PROMPT=$O(^ORD(101.41,"AB","OR GTX START DATE/TIME",0))
"RTN","ORWDXM2",60,0)
 . D LRICTMOK
"RTN","ORWDXM2",61,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ADMIN SCHEDULE",0))
"RTN","ORWDXM2",62,0)
 I $D(ORDIALOG(PROMPT,1)) S ORSCH=ORDIALOG(PROMPT,1)
"RTN","ORWDXM2",63,0)
 Q
"RTN","ORWDXM2",64,0)
LRTEST ; -- Setup ORTEST() array of ordering parameters (copied from ORCDLR)
"RTN","ORWDXM2",65,0)
 N OI,TST,DG
"RTN","ORWDXM2",66,0)
 S OI=+$G(ORDIALOG(PROMPT,INST)) Q:'OI
"RTN","ORWDXM2",67,0)
 I '$D(ORTEST) S TST=+$P($G(^ORD(101.43,OI,0)),U,2) D TEST^LR7OR3(TST,.ORTEST) S ORTEST=TST
"RTN","ORWDXM2",68,0)
 S DG=$P($G(^ORD(101.43,+OI,"LR")),U,6) S:'$L(DG) DG="LAB"
"RTN","ORWDXM2",69,0)
 S DG=$O(^ORD(100.98,"B",DG,0)) S:DG ORDG=DG
"RTN","ORWDXM2",70,0)
 Q
"RTN","ORWDXM2",71,0)
LRRQCM()        ; return true if lab test has required comments
"RTN","ORWDXM2",72,0)
 I $O(^TMP("ORWORD",$J,PROMPT,INST,0)) Q 1 ; edit via WP
"RTN","ORWDXM2",73,0)
 N LRTEST,LRSAMP,LRSPEC,LRTSTN,LRTCOM,LRCCOM,DA,CNT,I,REQDCOMM,OI,TST
"RTN","ORWDXM2",74,0)
 S LRSAMP=$$VAL^ORCD("COLLECTION SAMPLE"),LRSPEC=$$VAL^ORCD("SPECIMEN")
"RTN","ORWDXM2",75,0)
 S OI=+$G(ORDIALOG(PROMPT,INST)) Q:'OI 0
"RTN","ORWDXM2",76,0)
 I '$D(ORTEST) S TST=+$P($G(^ORD(101.43,OI,0)),U,2) D TEST^LR7OR3(TST,.ORTEST) S ORTEST=TST
"RTN","ORWDXM2",77,0)
 S LRTSTN=1,LRTEST(1)=+ORTEST,DA=$O(^LAB(60,LRTEST(1),3,"B",+LRSAMP,0))
"RTN","ORWDXM2",78,0)
 S REQDCOMM=$P($G(^LAB(60,LRTEST(1),3,+DA,0)),U,6)
"RTN","ORWDXM2",79,0)
 S:'REQDCOMM REQDCOMM=+$P($G(^LAB(60,LRTEST(1),0)),U,19)
"RTN","ORWDXM2",80,0)
 Q REQDCOMM
"RTN","ORWDXM2",81,0)
LRASMP()       ; return true to ask collection sample (from ASKSAMP^ORCDLR)
"RTN","ORWDXM2",82,0)
 N DEFSAMP,SAMP0
"RTN","ORWDXM2",83,0)
 S DEFSAMP=$G(ORDIALOG(PROMPT,INST)),SAMP0=$G(^LAB(62,+DEFSAMP,0))
"RTN","ORWDXM2",84,0)
 I (ORCOLLCT="LC")!(ORCOLLCT="I"),$G(ORTEST("Lab CollSamp")) Q 0
"RTN","ORWDXM2",85,0)
 I $G(ORTEST("Unique CollSamp")),DEFSAMP Q 0 ; unique -> don't ask
"RTN","ORWDXM2",86,0)
 I 'DEFSAMP!('FIRST) Q 1 ; no default or edit -> ask
"RTN","ORWDXM2",87,0)
 I $G(ORDIALOG(PROMPT,"LIST"))="1^1" Q 0 ; only one choice
"RTN","ORWDXM2",88,0)
 Q 1
"RTN","ORWDXM2",89,0)
LRICTMOK        ;
"RTN","ORWDXM2",90,0)
 Q:'$D(ORDIALOG(PROMPT,1))
"RTN","ORWDXM2",91,0)
 N ORY
"RTN","ORWDXM2",92,0)
 D VALDT^ORWU(.ORY,ORDIALOG(PROMPT,1))
"RTN","ORWDXM2",93,0)
 I +$$VALID^LR7OV4(DUZ(2),ORY)=0 S ORDIALOG(PROMPT,1)=""
"RTN","ORWDXM2",94,0)
 Q
"RTN","ORWDXM2",95,0)
DO ; setup environment for diet order
"RTN","ORWDXM2",96,0)
 ; partially copied from EN^ORCDFH
"RTN","ORWDXM2",97,0)
 I ORCAT'="I" D  Q
"RTN","ORWDXM2",98,0)
 . S ORQUIT=1
"RTN","ORWDXM2",99,0)
 . S LST(0)="8^0"
"RTN","ORWDXM2",100,0)
 . S LST(.5)="Diet orders allowed for inpatients only."
"RTN","ORWDXM2",101,0)
 D EN^FHWOR8(+ORVP,.ORPARAM)          ; set FH ordering parameters
"RTN","ORWDXM2",102,0)
 S:'$L($G(ORPARAM(3))) ORPARAM(3)="T" ; for now
"RTN","ORWDXM2",103,0)
 N PROMPT,OI                          ; set NPO flag if NPO diet
"RTN","ORWDXM2",104,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",105,0)
 S OI=+$G(ORDIALOG(PROMPT,1))
"RTN","ORWDXM2",106,0)
 S ORNPO=($P($G(^ORD(101.43,OI,0)),U)="NPO")
"RTN","ORWDXM2",107,0)
 Q
"RTN","ORWDXM2",108,0)
EL ; setup environment for early/late tray
"RTN","ORWDXM2",109,0)
 D EN^FHWOR8(+ORVP,.ORPARAM)          ; set FH ordering parameters
"RTN","ORWDXM2",110,0)
 S:'$L($G(ORPARAM(3))) ORPARAM(3)="T" ; for now
"RTN","ORWDXM2",111,0)
 D EN2^ORCDFH                         ; setup ORTIME array
"RTN","ORWDXM2",112,0)
 N PROMPT                             ; set ORMEAL,ORTRAY
"RTN","ORWDXM2",113,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX MEAL",0))
"RTN","ORWDXM2",114,0)
 I $D(ORDIALOG(PROMPT,1)) S ORMEAL=ORDIALOG(PROMPT,1)
"RTN","ORWDXM2",115,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",116,0)
 I $D(ORDIALOG(PROMPT,1)) S ORTRAY=ORDIALOG(PROMPT,1)
"RTN","ORWDXM2",117,0)
 Q
"RTN","ORWDXM2",118,0)
UD ; setup environment for unit dose med
"RTN","ORWDXM2",119,0)
 I $G(ORWP94) G PS^ORWDPS3  ; if patch 94 installed
"RTN","ORWDXM2",120,0)
 ;
"RTN","ORWDXM2",121,0)
 D AUTHMED Q:$G(ORQUIT)  ; checks authorized to write meds
"RTN","ORWDXM2",122,0)
 N PROMPT,OI
"RTN","ORWDXM2",123,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",124,0)
 I $D(ORDIALOG(PROMPT,1)) S OI=ORDIALOG(PROMPT,1) D MEDACTV(1) Q:$G(ORQUIT)
"RTN","ORWDXM2",125,0)
 D INSTR^ORCDPS(OI)      ; sets up instructions, routes, etc.
"RTN","ORWDXM2",126,0)
 D CHOICES^ORCDPS("U")   ; gets list of dispense drugs       
"RTN","ORWDXM2",127,0)
 Q
"RTN","ORWDXM2",128,0)
IV ; setup environment for IV fluid
"RTN","ORWDXM2",129,0)
 D AUTHMED Q:$G(ORQUIT)  ; checks authorized to write meds
"RTN","ORWDXM2",130,0)
 ; sets up list of volumes if only one solution
"RTN","ORWDXM2",131,0)
 ; otherwise, let the dialog go interactive
"RTN","ORWDXM2",132,0)
 N PROMPT,INST,CNT,OI
"RTN","ORWDXM2",133,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",134,0)
 S (CNT,INST)=0
"RTN","ORWDXM2",135,0)
 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  D  Q:$G(ORQUIT)
"RTN","ORWDXM2",136,0)
 . S CNT=CNT+1
"RTN","ORWDXM2",137,0)
 . S OI=ORDIALOG(PROMPT,INST) D MEDACTV(3) ; check active solutions
"RTN","ORWDXM2",138,0)
 I CNT=1 S INST=1 D VOLUME^ORCDPSIV
"RTN","ORWDXM2",139,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ADDITIVE",0))
"RTN","ORWDXM2",140,0)
 S INST=0
"RTN","ORWDXM2",141,0)
 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  D  Q:$G(ORQUIT)
"RTN","ORWDXM2",142,0)
 . S OI=ORDIALOG(PROMPT,INST) D MEDACTV(4) ; check active additives
"RTN","ORWDXM2",143,0)
 Q
"RTN","ORWDXM2",144,0)
OP ; setup environment for outpatient pharmacy
"RTN","ORWDXM2",145,0)
 I $G(ORWP94) G PS^ORWDPS3  ; if patch 94 installed
"RTN","ORWDXM2",146,0)
 ;
"RTN","ORWDXM2",147,0)
 D AUTHMED Q:$G(ORQUIT)       ; checks authorized to write meds
"RTN","ORWDXM2",148,0)
 N PROMPT,INST,CNT,OI
"RTN","ORWDXM2",149,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0)),OI=0
"RTN","ORWDXM2",150,0)
 I $D(ORDIALOG(PROMPT,1)) S OI=$G(ORDIALOG(PROMPT,1)) D MEDACTV(2) Q:$G(ORQUIT)
"RTN","ORWDXM2",151,0)
 D:+OI INSTR^ORCDPS(OI)           ; sets up instructions, routes, etc.
"RTN","ORWDXM2",152,0)
 D CHOICES^ORCDPS("O")        ; gets list of dispense drugs      
"RTN","ORWDXM2",153,0)
 ; get defaults for drug, refills if only one dispense drug
"RTN","ORWDXM2",154,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX DISPENSE DRUG",0))
"RTN","ORWDXM2",155,0)
 S (CNT,INST)=0
"RTN","ORWDXM2",156,0)
 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  S CNT=CNT+1
"RTN","ORWDXM2",157,0)
 I CNT=1 D
"RTN","ORWDXM2",158,0)
 . S ORDRUG=+$G(ORDIALOG(PROMPT,1)),ORCOMPLX=0
"RTN","ORWDXM2",159,0)
 . S OREFILLS=$P($G(ORDIALOG(PROMPT,"LIST","D",ORDRUG)),U,3)
"RTN","ORWDXM2",160,0)
 . S:'$L(OREFILLS) OREFILLS=11
"RTN","ORWDXM2",161,0)
 E  S ORCOMPLX=1,OREFILLS=11  ; force interactive on complex order
"RTN","ORWDXM2",162,0)
 S ORCOPAY=1                  ; ask SC if can't determine copay
"RTN","ORWDXM2",163,0)
 I $G(ORDRUG),$L($T(ASKSC^ORCDPS)) S ORCOPAY=$$ASKSC^ORCDPS
"RTN","ORWDXM2",164,0)
 Q
"RTN","ORWDXM2",165,0)
AUTHMED ; sets ORQUIT if not authorized to write meds
"RTN","ORWDXM2",166,0)
 N NOAUTH,NAME
"RTN","ORWDXM2",167,0)
 D AUTH^ORWDPS32(.NOAUTH,ORNP)
"RTN","ORWDXM2",168,0)
 I +NOAUTH D
"RTN","ORWDXM2",169,0)
 . S ORQUIT=1
"RTN","ORWDXM2",170,0)
 . S LST(0)="8^0"
"RTN","ORWDXM2",171,0)
 . S NAME=$P($G(^VA(200,+ORNP,20)),U,2)
"RTN","ORWDXM2",172,0)
 . I '$L(NAME) S NAME=$P($G(^VA(200,+ORNP,0)),U,1)
"RTN","ORWDXM2",173,0)
 . S LST(.5)=NAME_" is not authorized to write med orders."
"RTN","ORWDXM2",174,0)
 Q
"RTN","ORWDXM2",175,0)
MEDACTV(USAGE) ; sets ORQUIT if the orderable item is not active for a med
"RTN","ORWDXM2",176,0)
 Q:'$G(OI)  S USAGE=+$G(USAGE)
"RTN","ORWDXM2",177,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D  Q
"RTN","ORWDXM2",178,0)
 . S ORQUIT=1,LST(0)="8^0"
"RTN","ORWDXM2",179,0)
 . S LST(.5)=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDXM2",180,0)
 I USAGE,'$P($G(^ORD(101.43,OI,"PS")),U,USAGE) D  Q
"RTN","ORWDXM2",181,0)
 . S ORQUIT=1,LST(0)="8^0"
"RTN","ORWDXM2",182,0)
 . S LST(.5)=$P($G(^ORD(101.43,OI,0)),U)_" may not be ordered as an "_$S(USAGE=1:"inpatient medication",USAGE=2:"outpatient medication",USAGE=3:"IV solution",1:"IV additive")_" anymore."
"RTN","ORWDXM2",183,0)
 Q
"RTN","ORWDXM2",184,0)
SCHEDULD() ; Is patient scheduled for PREOP (Imaging)
"RTN","ORWDXM2",185,0)
 I $G(ORDIALOG(PROMPT,1)) Q 1 ; don't ask - already have date
"RTN","ORWDXM2",186,0)
 E  Q 0
"RTN","ORWDXM2",187,0)
 Q
"RTN","ORWDXM3")
0^28^B33303372
"RTN","ORWDXM3",1,0)
ORWDXM3 ; SLC/KCM/JLI - Quick Orders ;10:42 AM 6/20/2002
"RTN","ORWDXM3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,131,132,141,185,187**;Dec 17, 1997
"RTN","ORWDXM3",3,0)
 ;
"RTN","ORWDXM3",4,0)
KEYVAR(DLG)  ; Parse entry action for key variables & return in string
"RTN","ORWDXM3",5,0)
 ; RV=CollTp^Samp^Spec^CollDt^Urg^Sched^NoComm^NoDiag^NoProv^NoRsn
"RTN","ORWDXM3",6,0)
 N XCODE,RV,POS,Z
"RTN","ORWDXM3",7,0)
 S XCODE=$G(^ORD(101.41,DLG,3)),RV=""
"RTN","ORWDXM3",8,0)
 I '$L(XCODE) Q ""
"RTN","ORWDXM3",9,0)
 S POS=$F(XCODE,"LRFZX=")    I POS S $P(RV,U,1)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",10,0)
 S POS=$F(XCODE,"LRFSAMP=")  I POS S $P(RV,U,2)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",11,0)
 S POS=$F(XCODE,"LRFSPEC=")  I POS S $P(RV,U,3)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",12,0)
 S POS=$F(XCODE,"LRFDATE=")  I POS S $P(RV,U,4)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",13,0)
 S POS=$F(XCODE,"LRFURG=")   I POS S $P(RV,U,5)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",14,0)
 S POS=$F(XCODE,"LRFSCH=")   I POS S $P(RV,U,6)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",15,0)
 S POS=$F(XCODE,"PSJNOPC=")  I POS S $P(RV,U,7)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",16,0)
 S POS=$F(XCODE,"GMRCNOPD=") I POS S $P(RV,U,8)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",17,0)
 S POS=$F(XCODE,"GMRCNOAT=") I POS S $P(RV,U,9)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",18,0)
 S POS=$F(XCODE,"GMRCREAF=") I POS S $P(RV,U,10)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",19,0)
 S POS=$F(XCODE,"ORFORGET=") I POS D
"RTN","ORWDXM3",20,0)
 . ; need to change this so that it is executed in SETKEYV so
"RTN","ORWDXM3",21,0)
 . ; that it is executed each time menu is revisited
"RTN","ORWDXM3",22,0)
 . N ORFORGET S ORFORGET=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",23,0)
 . I ORFORGET K ^TMP("ORECALL",$J,+ORFORGET)
"RTN","ORWDXM3",24,0)
 . E  K ^TMP("ORECALL",$J)
"RTN","ORWDXM3",25,0)
 Q RV
"RTN","ORWDXM3",26,0)
VALUE(STR,BEG) ; Return value of "var=" (copied from ORCONVRT)
"RTN","ORWDXM3",27,0)
 N X,Y,I S X=$E(STR,BEG,999),Y=""
"RTN","ORWDXM3",28,0)
 S:$E(X)="""" X=$E(X,2,999) ; strip leading "
"RTN","ORWDXM3",29,0)
 F I=1:1:$L(X) S Z=$E(X,I) Q:(Z=",")!(Z=" ")!(Z="""")  S Y=Y_Z
"RTN","ORWDXM3",30,0)
 Q $TR(Y,U,"")
"RTN","ORWDXM3",31,0)
 ;
"RTN","ORWDXM3",32,0)
SETKEYV(X)      ; Set the key variables based on contents of X
"RTN","ORWDXM3",33,0)
 I $L($P(X,U,1))  S LRFZX=$P(X,U,1)
"RTN","ORWDXM3",34,0)
 I $L($P(X,U,2))  S LRFSAMP=$P(X,U,2)
"RTN","ORWDXM3",35,0)
 I $L($P(X,U,3))  S LRFSPEC=$P(X,U,3)
"RTN","ORWDXM3",36,0)
 I $L($P(X,U,4))  S LRFDATE=$P(X,U,4)
"RTN","ORWDXM3",37,0)
 I $L($P(X,U,5))  S LRFURG=$P(X,U,5)
"RTN","ORWDXM3",38,0)
 I $L($P(X,U,6))  S LRFSCH=$P(X,U,6)
"RTN","ORWDXM3",39,0)
 I $L($P(X,U,7))  S PSJNOPC=$P(X,U,7)
"RTN","ORWDXM3",40,0)
 I $L($P(X,U,8))  S GMRCNOPD=$P(X,U,8)
"RTN","ORWDXM3",41,0)
 I $L($P(X,U,9))  S GMRCNOAT=$P(X,U,9)
"RTN","ORWDXM3",42,0)
 I $L($P(X,U,10)) S GMRCREAF=$P(X,U,10)
"RTN","ORWDXM3",43,0)
 Q
"RTN","ORWDXM3",44,0)
DLGINFO(IEN,MODE)    ; return information about a dialog
"RTN","ORWDXM3",45,0)
 ; IEN=DlgIEN or ORIFN, MODE=0:Dlg,1:Copy,2:Change
"RTN","ORWDXM3",46,0)
 ; RESULT=DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",47,0)
 ; If MODE="1;T",don't check "PS MEDS" for transfer order
"RTN","ORWDXM3",48,0)
 ; PSMDGP=1: Unit/Dose  Group
"RTN","ORWDXM3",49,0)
 ; PSMDGP=2: OutPatient Group
"RTN","ORWDXM3",50,0)
 N X0,DLGIEN,TYP,FID,DGRP,PSMDGP,ISXF
"RTN","ORWDXM3",51,0)
 S PSMDGP=0,ISXF=""
"RTN","ORWDXM3",52,0)
 S ISXF=$P(MODE,";",2)
"RTN","ORWDXM3",53,0)
 S MODE=+MODE
"RTN","ORWDXM3",54,0)
 S DLGIEN=IEN I MODE,(ISXF'="T") D
"RTN","ORWDXM3",55,0)
 . S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",56,0)
 . I $P(^ORD(101.41,DLGIEN,0),U)="PS MEDS" D
"RTN","ORWDXM3",57,0)
 . . N PTCAT S PTCAT=$P($G(^OR(100,+IEN,0)),U,12)
"RTN","ORWDXM3",58,0)
 . . I PTCAT="I" S DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)),PSMDGP=1
"RTN","ORWDXM3",59,0)
 . . I PTCAT="O" S DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)),PSMDGP=2
"RTN","ORWDXM3",60,0)
 I MODE,(ISXF="T") S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",61,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),TYP=$P(X0,U,4),DGRP=$P(X0,U,5)
"RTN","ORWDXM3",62,0)
 I MODE S DGRP=+$P($G(^OR(100,+IEN,0)),U,11)
"RTN","ORWDXM3",63,0)
 ;JD NEW START 11/13/02
"RTN","ORWDXM3",64,0)
 I DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) S PSMDGP=1
"RTN","ORWDXM3",65,0)
 I DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)) S PSMDGP=2
"RTN","ORWDXM3",66,0)
 ;JD NEW END 11/13/02
"RTN","ORWDXM3",67,0)
 ; for copy or change, if the base dialog has changed, use it's info 
"RTN","ORWDXM3",68,0)
 I MODE,$G(ORDIALOG),(+DLGIEN'=+ORDIALOG),(PSMDGP=0) D
"RTN","ORWDXM3",69,0)
 . S DLGIEN=+ORDIALOG,DGRP=$P(^ORD(101.41,+ORDIALOG,0),U,5)
"RTN","ORWDXM3",70,0)
 D FORMID^ORWDXM(.FID,DLGIEN)
"RTN","ORWDXM3",71,0)
 Q DLGIEN_U_TYP_U_FID_U_DGRP
"RTN","ORWDXM3",72,0)
 ;
"RTN","ORWDXM3",73,0)
CHKDSBL(LST,ID,MODE)  ; return message if dialog disabled
"RTN","ORWDXM3",74,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",75,0)
 ; LST=QL_REJECT + disabled message or unchanged
"RTN","ORWDXM3",76,0)
 S DLGIEN=+ID I MODE S DLGIEN=+$P($G(^OR(100,+ID,0)),U,5)
"RTN","ORWDXM3",77,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),X=$P(X0,U,3)
"RTN","ORWDXM3",78,0)
 I '$L(X),($P(X0,U,4)="Q") D  ; check default dialog
"RTN","ORWDXM3",79,0)
 . S DLGIEN=+$$DEFDLG^ORWDXQ($P(X0,U,5))
"RTN","ORWDXM3",80,0)
 . S X=$P($G(^ORD(101.41,DLGIEN,0)),U,3)
"RTN","ORWDXM3",81,0)
 I $L(X) D
"RTN","ORWDXM3",82,0)
 . I MODE D GETTXT^ORWORR(.LST,ID) S LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",83,0)
 . S LST(0)="8^0",LST(.5)="Dialog Disabled:  "_X
"RTN","ORWDXM3",84,0)
 Q
"RTN","ORWDXM3",85,0)
CHKVACT(LST,ID,MODE,ORNP)  ; return message if action not valid
"RTN","ORWDXM3",86,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",87,0)
 ; LST=QL_REJECT + invalid action message or unchanged
"RTN","ORWDXM3",88,0)
 Q:'MODE  ; not an action on an order
"RTN","ORWDXM3",89,0)
 N X,ACT S ACT=$S(MODE=1:"RW",MODE=2:"XX",1:"")
"RTN","ORWDXM3",90,0)
 D VALID^ORWDXA(.X,ID,ACT,ORNP)
"RTN","ORWDXM3",91,0)
 I $L(X) D GETTXT^ORWORR(.LST,ID) D
"RTN","ORWDXM3",92,0)
 . S LST(0)="8^0",LST(.5)=X,LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",93,0)
 Q
"RTN","ORWDXM3",94,0)
CHKCOPY(LST,ID,FLDS)  ; return message if can't copy this order
"RTN","ORWDXM3",95,0)
 ; ID=ORIFN;ACT FLDS=EventType in 7th piece
"RTN","ORWDXM3",96,0)
 ; LST=QL_REJECT + cannot copy message or unchanged
"RTN","ORWDXM3",97,0)
 I "^A^D^T^"'[(U_$E($P(FLDS,U,7))_U) Q             ; not event delayed
"RTN","ORWDXM3",98,0)
 N PKG S PKG=$P($G(^OR(100,+ID,0)),U,14)
"RTN","ORWDXM3",99,0)
 S PKG=$$NMSP^ORCD(PKG) I PKG="OR"!(PKG="PS") Q    ; xfer meds, generics
"RTN","ORWDXM3",100,0)
 N ORWCAT S ORWCAT=$P($G(^OR(100,+ID,0)),U,12)
"RTN","ORWDXM3",101,0)
 I ORWCAT="I",("^A^T^"[(U_$E($P(FLDS,U,7))_U)) Q   ; admit, xfer inpt
"RTN","ORWDXM3",102,0)
 I ORWCAT="O",$E($P(FLDS,U,7))="D" Q               ; discharge outpt
"RTN","ORWDXM3",103,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDXM3",104,0)
 I ORWCAT="I" S LST(.5)="inpatient order to outpatient -"
"RTN","ORWDXM3",105,0)
 I ORWCAT="O" S LST(.5)="outpatient order to inpatient -"
"RTN","ORWDXM3",106,0)
 S:$D(LST(.5)) LST(.5)="Cannot copy the following "_LST(.5)
"RTN","ORWDXM3",107,0)
 S LST(0)="8^0",LST(.7)=""
"RTN","ORWDXM3",108,0)
 Q
"RTN","ORWDXM3",109,0)
BLD4CHG(LST,ID,FLDS)  ; build responses for an edit
"RTN","ORWDXM3",110,0)
 ; ID=ORIFN;ACT FLDS=unused right now
"RTN","ORWDXM3",111,0)
 ; LST(0)=Qlvl^RespID(XOrderID)^DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",112,0)
 N OIDX,OI,CNT
"RTN","ORWDXM3",113,0)
 S (OI,OIDX,CNT)=0
"RTN","ORWDXM3",114,0)
 S:$D(^OR(100,+ID,4.5,"ID","ORDERABLE")) OIDX=$O(^OR(100,+ID,4.5,"ID","ORDERABLE",0))
"RTN","ORWDXM3",115,0)
 I $D(^OR(100,+ID,4.5,OIDX)) D
"RTN","ORWDXM3",116,0)
 . F  S CNT=$O(^OR(100,+ID,4.5,OIDX,CNT)) Q:'CNT  D
"RTN","ORWDXM3",117,0)
 . . S OI=^(CNT) D VALDOI
"RTN","ORWDXM3",118,0)
 I +LST(0)=8 S LST(.5)="You can not change this order." Q
"RTN","ORWDXM3",119,0)
 S LST(0)="0^X"_ID_U_$$DLGINFO(+ID,2)
"RTN","ORWDXM3",120,0)
 S $P(LST(0),U,4)="X"
"RTN","ORWDXM3",121,0)
 Q
"RTN","ORWDXM3",122,0)
VALDOI ; Validate the Orderable Items
"RTN","ORWDXM3",123,0)
 N ORQUIT,ORPS
"RTN","ORWDXM3",124,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXM3",125,0)
 . S ORQUIT=1
"RTN","ORWDXM3",126,0)
 . S LST(0)="8^0"
"RTN","ORWDXM3",127,0)
 I $D(ORQUIT) Q:ORQUIT
"RTN","ORWDXM3",128,0)
 S ORPS=$G(^ORD(101.43,+OI,"PS"))
"RTN","ORWDXM3",129,0)
 I $P(ORPS,U,1,4)="0^0^0^0" S LST(0)="8^0"
"RTN","ORWDXM3",130,0)
 Q
"RTN","ORWDXM3",131,0)
VALQO(IFN) ;Check to see if it's a good QO med
"RTN","ORWDXM3",132,0)
 ;If it's an IV QO: check if infusion rate entered
"RTN","ORWDXM3",133,0)
 ;If it's an UD QO: check if dosage entered
"RTN","ORWDXM3",134,0)
 ;regular order treated as good QO
"RTN","ORWDXM3",135,0)
 ;
"RTN","ORWDXM3",136,0)
 I $P($G(^ORD(101.41,IFN,0)),U,4)'="Q" Q 1
"RTN","ORWDXM3",137,0)
 N ODP,INFUID,DSAGEID,SUCC
"RTN","ORWDXM3",138,0)
 S SUCC=0
"RTN","ORWDXM3",139,0)
 S ODP=$P($G(^ORD(101.41,IFN,0)),U,7)
"RTN","ORWDXM3",140,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1)
"RTN","ORWDXM3",141,0)
 ;check infusion rate for IV QO
"RTN","ORWDXM3",142,0)
 I ODP="PSIV" D
"RTN","ORWDXM3",143,0)
 . S INFUID=$O(^ORD(101.41,"B","OR GTX INFUSION RATE",0))
"RTN","ORWDXM3",144,0)
 . I $D(ORDIALOG(INFUID,1)) S SUCC=1
"RTN","ORWDXM3",145,0)
 ;check dosage for UD QO
"RTN","ORWDXM3",146,0)
 I (ODP="PSJ")!(ODP="PSO") D
"RTN","ORWDXM3",147,0)
 . S DSAGEID=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDXM3",148,0)
 . I $D(ORDIALOG(DSAGEID,1)) S SUCC=1
"RTN","ORWDXM3",149,0)
 Q SUCC
"RTN","ORWDXM3",150,0)
ISUDQO(ORY,DLGID) ;True: is unit dose quick order
"RTN","ORWDXM3",151,0)
 S ORY=0
"RTN","ORWDXM3",152,0)
 Q:'$D(^ORD(101.41,DLGID,0))
"RTN","ORWDXM3",153,0)
 N UDGRP,DLGTYP,DLGGRP
"RTN","ORWDXM3",154,0)
 S UDGRP=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORWDXM3",155,0)
 S DLGTYP=$P($G(^ORD(101.41,DLGID,0)),U,4)
"RTN","ORWDXM3",156,0)
 S DLGGRP=$P($G(^ORD(101.41,DLGID,0)),U,5)
"RTN","ORWDXM3",157,0)
 I (DLGTYP="Q"),(DLGGRP=UDGRP) S ORY=1
"RTN","ORWDXM3",158,0)
 Q
"RTN","ORWDXR")
0^5^B31935130
"RTN","ORWDXR",1,0)
ORWDXR ; SLC/KCM/JDL - Utilites for Order Actions;;3/28/02  07:47 ;11/15/02  16:18
"RTN","ORWDXR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,134,141,149,187**;Dec 17, 1997
"RTN","ORWDXR",3,0)
 ;
"RTN","ORWDXR",4,0)
ISREL(VAL,ORIFN) ; Return true if an order has been released
"RTN","ORWDXR",5,0)
 N STS S STS=$P(^OR(100,+ORIFN,3),U,3)
"RTN","ORWDXR",6,0)
 S VAL=$S(STS=10:0,STS=11:0,1:1)  ; false if delayed or unreleased order
"RTN","ORWDXR",7,0)
 Q
"RTN","ORWDXR",8,0)
 ;RENEW(REC,ORIFN,ORVP,ORNP,ORL,FLDS) ;Renew an order
"RTN","ORWDXR",9,0)
RENEW(REC,ORIFN,ORVP,ORNP,ORL,FLDS,CPLX,ORAPPT) ; Renew an order
"RTN","ORWDXR",10,0)
 N ORDG
"RTN","ORWDXR",11,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORPKG
"RTN","ORWDXR",12,0)
 N ORDIALOG,PRMT,X0
"RTN","ORWDXR",13,0)
 N FSTDOSE,FST
"RTN","ORWDXR",14,0)
 S (FSTDOSE,FST)=0
"RTN","ORWDXR",15,0)
 I '$D(CPLX) S CPLX=0
"RTN","ORWDXR",16,0)
 I '$G(ORAPPT) S ORAPPT=""
"RTN","ORWDXR",17,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDXR",18,0)
 S X0=^OR(100,+ORIFN,0)
"RTN","ORWDXR",19,0)
 S ORDG=$P(X0,U,11)
"RTN","ORWDXR",20,0)
 S ORPKG=$P(X0,U,14)
"RTN","ORWDXR",21,0)
 I $P(X0,U,5)["101.41," D                        ; version 3
"RTN","ORWDXR",22,0)
 . S ORDIALOG=+$P(X0,U,5),ORCAT=$P(^OR(100,+ORIFN,0),U,12)
"RTN","ORWDXR",23,0)
 . D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN)
"RTN","ORWDXR",24,0)
 . S:CPLX FSTDOSE=$P($G(ORDIALOG("B","FIRST DOSE")),U,2)
"RTN","ORWDXR",25,0)
 . I FSTDOSE,$G(ORDIALOG(FSTDOSE,1)) K ORDIALOG(FSTDOSE,1)
"RTN","ORWDXR",26,0)
 E  D                                            ; version 2.5 generic
"RTN","ORWDXR",27,0)
 . S ORDIALOG=$O(^ORD(101.41,"B","OR GXTEXT WORD PROCESSING ORDE",0))
"RTN","ORWDXR",28,0)
 . D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXR",29,0)
 . S PRMT=$O(^ORD(101.41,"B","OR GTX WORD PROCESSING 1",0))
"RTN","ORWDXR",30,0)
 . S ORDIALOG(PRMT,1)=$NA(^TMP("ORWORD",$J,PRMT,1))
"RTN","ORWDXR",31,0)
 . M ^TMP("ORWORD",$J,PRMT,1)=^OR(100,+ORIFN,1)
"RTN","ORWDXR",32,0)
 . S PRMT=$O(^ORD(101.41,"B","OR GTX START DATE/TIME",0))
"RTN","ORWDXR",33,0)
 . I $P(X0,U,9) S ORDIALOG(PRMT,1)=$P(X0,U,9)
"RTN","ORWDXR",34,0)
 I +FLDS(1)=999 D  ; generic order
"RTN","ORWDXR",35,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX START DATE/TIME"),1)=$P(FLDS(1),U,2)
"RTN","ORWDXR",36,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX STOP DATE/TIME"),1)=$P(FLDS(1),U,3)
"RTN","ORWDXR",37,0)
 I ($O(^ORD(101.41,"AB","PS MEDS",0))>0),(+FLDS(1)=130)!(+FLDS(1)=135)!(+FLDS(1)=140),'$L($G(ORDIALOG($$PTR^ORCD("OR GTX SIG"),1))) D
"RTN","ORWDXR",38,0)
 . N ORDOSE,ORDRUG,ORCAT,ORWPSOI,PROMPT,DRUG
"RTN","ORWDXR",39,0)
 . S ORCAT=$P($G(^OR(100,+ORIFN,0)),U,12)
"RTN","ORWDXR",40,0)
 . S PROMPT=$$PTR^ORCD("OR GTX INSTRUCTIONS")
"RTN","ORWDXR",41,0)
 . S ORDRUG=$G(ORDIALOG($$PTR^ORCD("OR GTX DISPENSE DRUG"),1))
"RTN","ORWDXR",42,0)
 . S ORWPSOI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDXR",43,0)
 . I ORWPSOI S ORWPSOI=+$P($G(^ORD(101.43,+ORWPSOI,0)),U,2)
"RTN","ORWDXR",44,0)
 . D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,$S(ORCAT="I":"U",1:"O"),ORVP)       ; dflt doses
"RTN","ORWDXR",45,0)
 . D D1^ORCDPS2  ; set up ORDOSE
"RTN","ORWDXR",46,0)
 . S DRUG=$G(ORDOSE("DD",+ORDRUG))
"RTN","ORWDXR",47,0)
 . I DRUG,ORCAT="O" D RESETID^ORCDPS
"RTN","ORWDXR",48,0)
 . D SIG^ORCDPS2
"RTN","ORWDXR",49,0)
 I +FLDS(1)=140 D  ; outpatient meds
"RTN","ORWDXR",50,0)
 . K ORDIALOG($$PTR^ORCD("OR GTX START DATE"),1) ; remove effective dt
"RTN","ORWDXR",51,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX REFILLS"),1)=$P(FLDS(1),U,4)
"RTN","ORWDXR",52,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX ROUTING"),1)=$P(FLDS(1),U,5)
"RTN","ORWDXR",53,0)
 . S PRMT=$$PTR^ORCD("OR GTX WORD PROCESSING 1")
"RTN","ORWDXR",54,0)
 . K ^TMP("ORWORD",$J,PRMT,1)
"RTN","ORWDXR",55,0)
 . S I=1 F  S I=$O(FLDS(I)) Q:'I  S ^TMP("ORWORD",$J,PRMT,1,I-1,0)=FLDS(I)
"RTN","ORWDXR",56,0)
 . S ^TMP("ORWORD",$J,PRMT,1,0)=U_U_(I-1)_U_(I-1)_U_DT_U
"RTN","ORWDXR",57,0)
 . S ORDIALOG(PRMT,1)=$NA(^TMP("ORWORD",$J,PRMT,1))
"RTN","ORWDXR",58,0)
 D RN^ORCSAVE
"RTN","ORWDXR",59,0)
 S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXR",60,0)
 Q
"RTN","ORWDXR",61,0)
RNWFLDS(LST,ORIFN)      ; Return fields for renew action
"RTN","ORWDXR",62,0)
 ; LST(0)=RenewType^Start^Stop^Refills^Pickup  LST(n)=Comments
"RTN","ORWDXR",63,0)
 N X0,DG,PKG,RNWTYPE,START,STOP,REFILLS
"RTN","ORWDXR",64,0)
 S ORIFN=+ORIFN,X0=^OR(100,ORIFN,0),DG=$P(X0,U,11),PKG=$P(X0,U,14)
"RTN","ORWDXR",65,0)
 S PKG=$E($P(^DIC(9.4,PKG,0),U,2),1,2),DG=$P(^ORD(100.98,DG,0),U,3)
"RTN","ORWDXR",66,0)
 S LST(0)=$S(PKG="OR":999,PKG="PS"&(DG="O RX"):140,PKG="PS"&(DG="UD RX"):130,1:0)
"RTN","ORWDXR",67,0)
 I +LST(0)=140 D
"RTN","ORWDXR",68,0)
 . S LST(0)=LST(0)_U_U_U_+$$VAL(ORIFN,"REFILLS")_U_$$VAL(ORIFN,"PICKUP")
"RTN","ORWDXR",69,0)
 . D WPVAL(.LST,ORIFN,"COMMENT")
"RTN","ORWDXR",70,0)
 I +LST(0)=999 S LST(0)=LST(0)_U_$$VAL(ORIFN,"START")_U_$$VAL(ORIFN,"STOP")
"RTN","ORWDXR",71,0)
 ; make sure start/stop times are relative times, otherwise use NOW, no Stop
"RTN","ORWDXR",72,0)
 I +$P(LST(0),U,2) S $P(LST(0),U,2)="NOW"
"RTN","ORWDXR",73,0)
 I +$P(LST(0),U,3)!($P(LST(0),U,3)="0") S $P(LST(0),U,3)=""
"RTN","ORWDXR",74,0)
 Q
"RTN","ORWDXR",75,0)
VAL(ORIFN,ID)   ; Return value for order response
"RTN","ORWDXR",76,0)
 N DA S DA=+$O(^OR(100,ORIFN,4.5,"ID",ID,0))
"RTN","ORWDXR",77,0)
 Q $G(^OR(100,ORIFN,4.5,DA,1))
"RTN","ORWDXR",78,0)
WPVAL(TXT,ORIFN,ID)    ; Return word processing value
"RTN","ORWDXR",79,0)
 N DA S DA=+$O(^OR(100,ORIFN,4.5,"ID",ID,0))
"RTN","ORWDXR",80,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,4.5,DA,2,I)) Q:'I  S TXT(I)=^(I,0)
"RTN","ORWDXR",81,0)
 Q
"RTN","ORWDXR",82,0)
CHKACT(ORDERID,ORWSIG,ORWREL,ORWNATR) ; Return error if can't sign/release order
"RTN","ORWDXR",83,0)
 N ORACT,ORWERR
"RTN","ORWDXR",84,0)
 ; begin case
"RTN","ORWDXR",85,0)
 S ORACT=""
"RTN","ORWDXR",86,0)
 I (ORWSIG=1),$D(^XUSEC("ORES",DUZ)) S ORACT="ES" G XC1
"RTN","ORWDXR",87,0)
 I (ORWSIG=7),$D(^XUSEC("ORES",DUZ)) S ORACT="DS" G XC1
"RTN","ORWDXR",88,0)
 I ORWREL,(ORWNATR="W") S ORACT="OC" G XC1
"RTN","ORWDXR",89,0)
 I ORWREL S ORACT="RS" S:$P($G(^OR(100,+ORDERID,0)),U,16)<2 ORACT="ES"
"RTN","ORWDXR",90,0)
XC1 ; end case
"RTN","ORWDXR",91,0)
 S ORWERR=""
"RTN","ORWDXR",92,0)
 I $L(ORACT),$$VALID^ORCACT0(ORDERID,ORACT,.ORWERR,ORWNATR) S ORWERR=""
"RTN","ORWDXR",93,0)
 Q ORWERR
"RTN","ORWDXR",94,0)
GTORITM(Y,ORIFN)        ;-- Get back the orderable item IEN
"RTN","ORWDXR",95,0)
 S ORIFN=+ORIFN
"RTN","ORWDXR",96,0)
 S Y=$$VALUE^ORCSAVE2(ORIFN,"ORDERABLE")
"RTN","ORWDXR",97,0)
 Q
"RTN","ORWDXR",98,0)
GETPKG(Y,IFN) ;Get package for an order
"RTN","ORWDXR",99,0)
 N ORDERID,PKGID
"RTN","ORWDXR",100,0)
 Q:+IFN<1
"RTN","ORWDXR",101,0)
 S ORDERID=+IFN,Y=""
"RTN","ORWDXR",102,0)
 S PKGID=$P(^OR(100,ORDERID,0),U,14)
"RTN","ORWDXR",103,0)
 S:PKGID>0 Y=$P(^DIC(9.4,PKGID,0),U,2)
"RTN","ORWDXR",104,0)
 Q
"RTN","ORWDXR",105,0)
ISCPLX(ORY,ORID) ; 1: is complex order 0: is not
"RTN","ORWDXR",106,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",107,0)
 N PKG
"RTN","ORWDXR",108,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXR",109,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXR",110,0)
 I PKG'="PS" Q
"RTN","ORWDXR",111,0)
 N NUMCHDS,NOWID,NOWVAL
"RTN","ORWDXR",112,0)
 S (NOWVAL,NOWID)=0
"RTN","ORWDXR",113,0)
 S NUMCHDS=$P($G(^OR(100,+ORID,2,0)),U,4)
"RTN","ORWDXR",114,0)
 I NUMCHDS>2 S ORY=1 Q
"RTN","ORWDXR",115,0)
 I NUMCHDS=2 D
"RTN","ORWDXR",116,0)
 . S ORY=1
"RTN","ORWDXR",117,0)
 . S:$D(^OR(100,+ORID,4.5,"ID","NOW")) NOWID=$O(^("NOW",0))
"RTN","ORWDXR",118,0)
 . S:NOWID NOWVAL=$G(^OR(100,+ORID,4.5,NOWID,1))
"RTN","ORWDXR",119,0)
 I NOWVAL=1 S ORY=0 Q
"RTN","ORWDXR",120,0)
 Q
"RTN","ORWDXR",121,0)
ORCPLX(ORY,ORID,ORACT) ;Return children orders of the complex order
"RTN","ORWDXR",122,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",123,0)
 N PKG
"RTN","ORWDXR",124,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXR",125,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXR",126,0)
 I PKG'="PS" Q
"RTN","ORWDXR",127,0)
 N CHLDCNT,IDX,X3
"RTN","ORWDXR",128,0)
 S (CHLDCNT,IDX)=0
"RTN","ORWDXR",129,0)
 S:$L($G(^OR(100,+ORID,2,0))) CHLDCNT=$P(^(0),U,4)
"RTN","ORWDXR",130,0)
 I 'CHLDCNT Q
"RTN","ORWDXR",131,0)
 F  S IDX=$O(^OR(100,+ORID,2,IDX)) Q:'IDX  D
"RTN","ORWDXR",132,0)
 . S X3=$G(^OR(100,IDX,3))
"RTN","ORWDXR",133,0)
 . S:'ORACT ORACT=$P(X3,U,7)
"RTN","ORWDXR",134,0)
 . S ORY(IDX)=IDX_";"_ORACT
"RTN","ORWDXR",135,0)
 Q
"RTN","ORWDXR",136,0)
CANRN(ORY,ORID) ; Check conjunction for renew.
"RTN","ORWDXR",137,0)
 ; All conjunctioni = "And" return 1
"RTN","ORWDXR",138,0)
 ; Has a "Then" return 0
"RTN","ORWDXR",139,0)
 Q:'$G(^OR(100,+ORID,0))
"RTN","ORWDXR",140,0)
 N PKG
"RTN","ORWDXR",141,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXR",142,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXR",143,0)
 I PKG'="PS" Q
"RTN","ORWDXR",144,0)
 N INDX,INDY,CANRENEW
"RTN","ORWDXR",145,0)
 S (INDX,INDY)=0
"RTN","ORWDXR",146,0)
 S CANRENEW=1
"RTN","ORWDXR",147,0)
 F  S INDX=$O(^OR(100,+ORID,4.5,"ID","CONJ",INDX)) Q:'INDX  D
"RTN","ORWDXR",148,0)
 . F  S INDY=$O(^OR(100,+ORID,4.5,INDX,INDY)) Q:'INDY  D
"RTN","ORWDXR",149,0)
 . . I $G(^(INDY))="T" S CANRENEW=0 Q
"RTN","ORWDXR",150,0)
 . I CANRENEW=0 Q
"RTN","ORWDXR",151,0)
 S ORY=CANRENEW
"RTN","ORWDXR",152,0)
 Q
"RTN","ORWDXR",153,0)
ISNOW(ORY,ORID) ; Is first time now order?
"RTN","ORWDXR",154,0)
 N SCH
"RTN","ORWDXR",155,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",156,0)
 S SCH=""
"RTN","ORWDXR",157,0)
 S SCH=$O(^OR(100,+ORID,4.5,"ID","SCHEDULE",0))
"RTN","ORWDXR",158,0)
 S:SCH SCH=$G(^OR(100,+ORID,4.5,SCH,1))
"RTN","ORWDXR",159,0)
 S:SCH="NOW" ORY=1
"RTN","ORWDXR",160,0)
 Q
"RTN","ORWDXR01")
0^19^B7675311
"RTN","ORWDXR01",1,0)
ORWDXR01 ;SLC/JDL - Utilities for Order Actions;; 6/30/03 11:48
"RTN","ORWDXR01",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**187**;Dec 17, 1997
"RTN","ORWDXR01",3,0)
CANCHG(ORY,ORIFN,TXTOD) ;
"RTN","ORWDXR01",4,0)
 ;If it's an pending or unsigned unreleased renewed order, can edit=True
"RTN","ORWDXR01",5,0)
 S ORY=0
"RTN","ORWDXR01",6,0)
 Q:'$D(^OR(100,+ORIFN,0))
"RTN","ORWDXR01",7,0)
 I TXTOD D TXTCAN(.ORY) Q
"RTN","ORWDXR01",8,0)
 N OUTGRP,URELSTS,USIGSTS,RNTYPE
"RTN","ORWDXR01",9,0)
 N ODGRP,ODREL,ODSIG,ODTYPE,LSTACT
"RTN","ORWDXR01",10,0)
 S OUTGRP=$O(^ORD(100.98,"B","O RX",0))
"RTN","ORWDXR01",11,0)
 S URELSTS=$O(^ORD(100.01,"B","UNRELEASED",0))
"RTN","ORWDXR01",12,0)
 S PDSTS=$O(^ORD(100.01,"B","PENDING",0))
"RTN","ORWDXR01",13,0)
 S USIGSTS=2 ; unsigned order
"RTN","ORWDXR01",14,0)
 S RNTYPE=2 ; renew action
"RTN","ORWDXR01",15,0)
 ;Data from the order entry
"RTN","ORWDXR01",16,0)
 S LSTACT=$P($G(^OR(100,+ORIFN,3)),U,7)
"RTN","ORWDXR01",17,0)
 S ODGRP=$P($G(^OR(100,+ORIFN,0)),U,11)
"RTN","ORWDXR01",18,0)
 S ODREL=$P($G(^OR(100,+ORIFN,3)),U,3)
"RTN","ORWDXR01",19,0)
 S ODSIG=$P($G(^OR(100,+ORIFN,8,LSTACT,0)),U,4)
"RTN","ORWDXR01",20,0)
 S ODTYPE=$P($G(^OR(100,+ORIFN,3)),U,11)
"RTN","ORWDXR01",21,0)
 I (ODGRP=OUTGRP),(ODREL=URELSTS),(ODSIG=USIGSTS),(ODTYPE=RNTYPE) S ORY=1
"RTN","ORWDXR01",22,0)
 Q
"RTN","ORWDXR01",23,0)
 ;
"RTN","ORWDXR01",24,0)
TXTCAN(ORY) ;
"RTN","ORWDXR01",25,0)
 ;if it's an unsigned unreleased renewed text order, can change=true
"RTN","ORWDXR01",26,0)
 N URELSTS,USIGSTS,RNTYPE
"RTN","ORWDXR01",27,0)
 N ODREL,ODSIG,ODTYPE,LSTACT
"RTN","ORWDXR01",28,0)
 S URELSTS=$O(^ORD(100.01,"B","UNRELEASED",0))
"RTN","ORWDXR01",29,0)
 S USIGSTS=2 ; unsigned order
"RTN","ORWDXR01",30,0)
 S RNTYPE=2 ; renew action
"RTN","ORWDXR01",31,0)
 ;Data from the order entry
"RTN","ORWDXR01",32,0)
 S LSTACT=$P($G(^OR(100,+ORIFN,3)),U,7)
"RTN","ORWDXR01",33,0)
 S ODREL=$P($G(^OR(100,+ORIFN,8,LSTACT,0)),U,15)
"RTN","ORWDXR01",34,0)
 S ODSIG=$P($G(^OR(100,+ORIFN,8,LSTACT,0)),U,4)
"RTN","ORWDXR01",35,0)
 S ODTYPE=$P($G(^OR(100,+ORIFN,3)),U,11)
"RTN","ORWDXR01",36,0)
 I (ODREL=URELSTS),(ODSIG=USIGSTS),(ODTYPE=RNTYPE) S ORY=1
"RTN","ORWDXR01",37,0)
 Q
"RTN","ORWDXR01",38,0)
 ;
"RTN","ORWDXR01",39,0)
SAVCHG(ORY,ORID,PARM1,PARM2,TXTOD) ;
"RTN","ORWDXR01",40,0)
 ;save new changes on the unreleased unsigned renewed order
"RTN","ORWDXR01",41,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR01",42,0)
 ;Update new start and stop date the text order
"RTN","ORWDXR01",43,0)
 I TXTOD D TXTSAV(.ORY,ORID,PARM1,PARM2) Q
"RTN","ORWDXR01",44,0)
 ;Update new refills and pickup for the med order
"RTN","ORWDXR01",45,0)
 N REFID,PICKID,ACT,IX,TXT,REFPOS,NDQUIT
"RTN","ORWDXR01",46,0)
 S (REFID,PICKID,ACT,REFPOS,NDQUIT)=0,ORY=""
"RTN","ORWDXR01",47,0)
 S ACT=+$P(ORID,";",2) S:ACT'>0 ACT=1
"RTN","ORWDXR01",48,0)
 S REFID=$O(^OR(100,+ORID,4.5,"ID","REFILLS",0))
"RTN","ORWDXR01",49,0)
 S PICKID=$O(^OR(100,+ORID,4.5,"ID","PICKUP",0))
"RTN","ORWDXR01",50,0)
 S:$D(^OR(100,+ORID,4.5,REFID,1)) ^(1)=PARM1
"RTN","ORWDXR01",51,0)
 S:$D(^OR(100,+ORID,4.5,PICKID,1)) ^(1)=PARM2
"RTN","ORWDXR01",52,0)
 S IX=0 F  S IX=$O(^OR(100,+ORID,8,ACT,.1,IX)) Q:('IX)!(NDQUIT)  D
"RTN","ORWDXR01",53,0)
 . S TXT=$G(^OR(100,+ORID,8,ACT,.1,IX,0))
"RTN","ORWDXR01",54,0)
 . I ($$UP^XLFSTR(TXT)["QUANTITY:"),($$UP^XLFSTR(TXT)["REFILLS:") D
"RTN","ORWDXR01",55,0)
 . . S REFPOS=$F($$UP^XLFSTR(TXT),"REFILLS")-$L("REFILLS")-1
"RTN","ORWDXR01",56,0)
 . . S TXT=$E(TXT,1,REFPOS)_"Refills: "_PARM1
"RTN","ORWDXR01",57,0)
 . . S ^OR(100,+ORID,8,ACT,.1,IX,0)=TXT,NDQUIT=1 Q
"RTN","ORWDXR01",58,0)
 D GETBYIFN^ORWORR(.ORY,+ORID)
"RTN","ORWDXR01",59,0)
 Q
"RTN","ORWDXR01",60,0)
 ;
"RTN","ORWDXR01",61,0)
TXTSAV(ORY,ORID,PARM1,PARM2) ;
"RTN","ORWDXR01",62,0)
 ; Update new start and stop date for the unsigned unreleased 
"RTN","ORWDXR01",63,0)
 ; renewed text order
"RTN","ORWDXR01",64,0)
 N STRTID,STOPID
"RTN","ORWDXR01",65,0)
 S STRTID=$O(^OR(100,+ORID,4.5,"ID","START",0))
"RTN","ORWDXR01",66,0)
 S STOPID=$O(^OR(100,+ORID,4.5,"ID","STOP",0))
"RTN","ORWDXR01",67,0)
 S:$D(^OR(100,+ORID,4.5,STRTID,1)) ^(1)=PARM1
"RTN","ORWDXR01",68,0)
 S:$D(^OR(100,+ORID,4.5,STOPID,1)) ^(1)=PARM2
"RTN","ORWDXR01",69,0)
 D GETBYIFN^ORWORR(.ORY,+ORID)
"RTN","ORWDXR01",70,0)
 Q
"RTN","ORWDXR01",71,0)
 ;
"RTN","ORWOR")
0^10^B32817132
"RTN","ORWOR",1,0)
ORWOR ; SLC/KCM - Orders Calls;10:54 PM  02 Feb 2003
"RTN","ORWOR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132,141,163,187**;Dec 17, 1997
"RTN","ORWOR",3,0)
 ;
"RTN","ORWOR",4,0)
CURRENT(LST,DFN) ; Get Current Orders for a Patient
"RTN","ORWOR",5,0)
 ; Returns two lists in ^TMP("ORW",$J), fields and text
"RTN","ORWOR",6,0)
 N TM,IEN,X,X0,X3,CTR,IDX,I
"RTN","ORWOR",7,0)
 K ^TMP("ORW",$J)
"RTN","ORWOR",8,0)
 S IDX=0,DFN=DFN_";DPT("
"RTN","ORWOR",9,0)
 S TM=0 F  S TM=$O(^OR(100,"AC",DFN,TM)) Q:TM<1  D
"RTN","ORWOR",10,0)
 . S IEN=0 F  S IEN=$O(^OR(100,"AC",DFN,TM,IEN)) Q:IEN<1  D
"RTN","ORWOR",11,0)
 . . S X0=^OR(100,IEN,0),X3=^(3)
"RTN","ORWOR",12,0)
 . . S X=IEN_U_$P(X0,U,7)_U_$P(X0,U,11)_U_$P(X3,U,6)_U_$P(X3,U,3)
"RTN","ORWOR",13,0)
 . . S ^TMP("ORW",$J,IDX+1)=X
"RTN","ORWOR",14,0)
 . . S (CTR,I)=0,X=""
"RTN","ORWOR",15,0)
 . . F  S I=$O(^OR(100,IEN,1,I)) Q:I<1  D  Q:CTR>244
"RTN","ORWOR",16,0)
 . . . S X=X_$E(^OR(100,IEN,1,I,0),1,(245-CTR)),CTR=$L(X)
"RTN","ORWOR",17,0)
 . . S ^TMP("ORW",$J,IDX+2)=X,IDX=IDX+2
"RTN","ORWOR",18,0)
 ; S LST=$NA(^TMP("ORW",$J))
"RTN","ORWOR",19,0)
 M LST=^TMP("ORW",$J)
"RTN","ORWOR",20,0)
 Q
"RTN","ORWOR",21,0)
DETAIL(LST,ORID,DFN)    ; Return details of ORID (shell to kill VIDEO subs)
"RTN","ORWOR",22,0)
 I $G(DFN) N ORVP S ORVP=DFN_";DPT("
"RTN","ORWOR",23,0)
 S LST="^TMP(""ORTXT"",$J)"
"RTN","ORWOR",24,0)
 D DETAIL^ORQ2(.LST,ORID)
"RTN","ORWOR",25,0)
 K @LST@("VIDEO")
"RTN","ORWOR",26,0)
 S LST=$NA(^TMP("ORTXT",$J)),@LST=""
"RTN","ORWOR",27,0)
 Q
"RTN","ORWOR",28,0)
RESULT(REF,DFN,ORID,ID)      ; Return results of order identified by ID
"RTN","ORWOR",29,0)
 K ^TMP("ORXPND",$J)
"RTN","ORWOR",30,0)
 N ORESULTS,ORVP,LCNT S ORESULTS=1,LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWOR",31,0)
 D ORDERS^ORCXPND1
"RTN","ORWOR",32,0)
 K ^TMP("ORXPND",$J,"VIDEO")
"RTN","ORWOR",33,0)
 S REF=$NA(^TMP("ORXPND",$J))
"RTN","ORWOR",34,0)
 Q
"RTN","ORWOR",35,0)
RESHIST(REF,DFN,ORID,ID)      ; Return result history of associated tests identified by ID
"RTN","ORWOR",36,0)
 K ^TMP("ORXPND",$J)
"RTN","ORWOR",37,0)
 N ORESULTS,ORVP,LCNT
"RTN","ORWOR",38,0)
 S ORESULTS=1,LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWOR",39,0)
 D ORDHIST^ORWOR2
"RTN","ORWOR",40,0)
 K ^TMP("ORXPND",$J,"VIDEO")
"RTN","ORWOR",41,0)
 S REF=$NA(^TMP("ORXPND",$J))
"RTN","ORWOR",42,0)
 Q
"RTN","ORWOR",43,0)
TSALL(LST)      ; Return list of treating specialties
"RTN","ORWOR",44,0)
 N Y S Y=0
"RTN","ORWOR",45,0)
 F  S Y=$O(^DIC(45.7,Y)) Q:'Y  I $$ACTIVE^DGACT(45.7,Y) S LST(Y)=Y_U_$P(^DIC(45.7,Y,0),U)
"RTN","ORWOR",46,0)
 Q
"RTN","ORWOR",47,0)
DT(X) ; -- Returns FM date for X (SEE ORCHTAB1)
"RTN","ORWOR",48,0)
 N Y,%DT S %DT="T",Y="" D:X'="" ^%DT
"RTN","ORWOR",49,0)
 Q +Y
"RTN","ORWOR",50,0)
VWSET(ORERR,VIEW)       ; Set the preferred view for orders
"RTN","ORWOR",51,0)
 ; VIEW:  semi-colon delimited record
"RTN","ORWOR",52,0)
 ;        1 - Relative From Date/Time or ""
"RTN","ORWOR",53,0)
 ;        2 - Relative Thru Date/Time or ""
"RTN","ORWOR",54,0)
 ;        3 - Filter
"RTN","ORWOR",55,0)
 ;        4 - Display Group Pointer
"RTN","ORWOR",56,0)
 ;        5 - Format (preserve for list manager)
"RTN","ORWOR",57,0)
 ;        6 - chronological display (R or F)
"RTN","ORWOR",58,0)
 ;        7 - sort by display group
"RTN","ORWOR",59,0)
 N FMT
"RTN","ORWOR",60,0)
 ; use short name for display group instead of pointer
"RTN","ORWOR",61,0)
 S $P(VIEW,";",4)=$P($G(^ORD(100.98,+$P(VIEW,";",4),0)),U,3)
"RTN","ORWOR",62,0)
 ; use last saved format, since this is used only by LM
"RTN","ORWOR",63,0)
 S FMT=$P($$GET^XPAR("ALL","ORCH CONTEXT ORDERS",1,"I"),";",5)
"RTN","ORWOR",64,0)
 S:'$L(FMT) FMT="L" S $P(VIEW,";",5)=FMT
"RTN","ORWOR",65,0)
 ; and save the parameter
"RTN","ORWOR",66,0)
 D EN^XPAR(DUZ_";VA(200,","ORCH CONTEXT ORDERS",1,VIEW,.ORERR)
"RTN","ORWOR",67,0)
 Q
"RTN","ORWOR",68,0)
VWGET(REC)      ; Get the preferred view for orders
"RTN","ORWOR",69,0)
 N FROM,THRU,FILTER,DGRP,FRMT,CHRN,BYGRP,S,VNAME,FL
"RTN","ORWOR",70,0)
 S REC=$$GET^XPAR("ALL","ORCH CONTEXT ORDERS",1,"I"),S=";"
"RTN","ORWOR",71,0)
 S FROM=$$DT($P(REC,S)),THRU=$$DT($P(REC,S,2)),FILTER=$P(REC,S,3)
"RTN","ORWOR",72,0)
 S DGRP=$P(REC,S,4),FRMT=$P(REC,S,5),CHRN=$P(REC,S,6),BYGRP=$P(REC,S,7)
"RTN","ORWOR",73,0)
 S:'$L(DGRP) DGRP="ALL" S DGRP=+$O(^ORD(100.98,"B",DGRP,0))
"RTN","ORWOR",74,0)
 I FILTER="" S FILTER=2  ; active orders
"RTN","ORWOR",75,0)
 I CHRN="" S CHRN="R"    ; reverse chronological
"RTN","ORWOR",76,0)
 I BYGRP="" S BYGRP=1    ; sort by display group
"RTN","ORWOR",77,0)
 ; set up view name
"RTN","ORWOR",78,0)
 D REVSTS^ORWORDG(.FL)
"RTN","ORWOR",79,0)
 S I=0 F  S I=$O(FL(I)) Q:'I  Q:+FL(I)=FILTER
"RTN","ORWOR",80,0)
 S VNAME=$P($G(FL(+I)),U,2)
"RTN","ORWOR",81,0)
 I '("^6^8^9^10^19^20^"[(U_FILTER_U)) S VNAME=VNAME_" Orders"
"RTN","ORWOR",82,0)
 I FILTER=2 S VNAME="Active Orders (includes Pending & Recent Activity)"
"RTN","ORWOR",83,0)
 I FILTER=23 S VNAME="Current Orders (Active & Pending Status Only)"
"RTN","ORWOR",84,0)
 S VNAME=VNAME_" - "_$P($G(^ORD(100.98,DGRP,0)),U)
"RTN","ORWOR",85,0)
 I (FROM>0)!(THRU>0) D
"RTN","ORWOR",86,0)
 . S VNAME=VNAME_" ("_$$FMTE^XLFDT(FROM,"2D")_" thru "
"RTN","ORWOR",87,0)
 . S VNAME=VNAME_$S(THRU>0:$$FMTE^XLFDT(THRU,"2D"),1:"")_")"
"RTN","ORWOR",88,0)
 S REC=FROM_S_THRU_S_FILTER_S_DGRP_S_FRMT_S_CHRN_S_BYGRP_S_VNAME
"RTN","ORWOR",89,0)
 Q
"RTN","ORWOR",90,0)
SHEETS(LST,ORVP) ; Return Order Sheets for a patient
"RTN","ORWOR",91,0)
 N ELST,ETYP,ORIFN,TS,I
"RTN","ORWOR",92,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWOR",93,0)
 S ETYP="" F  S ETYP=$O(^OR(100,"AEVNT",ORVP,ETYP)) Q:ETYP=""  D
"RTN","ORWOR",94,0)
 . S ORIFN=0 F  S ORIFN=$O(^OR(100,"AEVNT",ORVP,ETYP,ORIFN)) Q:'ORIFN  D
"RTN","ORWOR",95,0)
 . . I (ETYP="A")!(ETYP="T") S ELST(ETYP,$P($G(^OR(100,+ORIFN,0)),U,13))=""
"RTN","ORWOR",96,0)
 S LST(1)="C;O^Current View",I=1
"RTN","ORWOR",97,0)
 S TS="" F  S TS=$O(ELST("A",TS)) Q:TS=""  D
"RTN","ORWOR",98,0)
 . S I=I+1,LST(I)="A;"_TS_U_"Admit to "_$P($G(^DIC(45.7,TS,0)),U)
"RTN","ORWOR",99,0)
 S I=I+1,LST(I)="A;-1^Admit..."
"RTN","ORWOR",100,0)
 S TS="" F  S TS=$O(ELST("T",TS)) Q:TS=""  D
"RTN","ORWOR",101,0)
 . S I=I+1,LST(I)="T;"_TS_U_"Transfer to "_$P($G(^DIC(45.7,TS,0)),U)
"RTN","ORWOR",102,0)
 I $L($G(^DPT(+ORVP,.1))) D
"RTN","ORWOR",103,0)
 . S I=I+1,LST(I)="T;-1^Transfer..."
"RTN","ORWOR",104,0)
 . S I=I+1,LST(I)="D;0^Discharge"
"RTN","ORWOR",105,0)
 Q
"RTN","ORWOR",106,0)
EVENTS(LST,EVT) ; Return general delayed events categories for a patient
"RTN","ORWOR",107,0)
 N EVTI
"RTN","ORWOR",108,0)
 S EVTI=0
"RTN","ORWOR",109,0)
 S EVTI=EVTI+1,LST(EVTI)="A;-1^Admit..."
"RTN","ORWOR",110,0)
 S EVTI=EVTI+1,LST(EVTI)="T;-1^Transfer..."
"RTN","ORWOR",111,0)
 S EVTI=EVTI+1,LST(EVTI)="D;0^Discharge"
"RTN","ORWOR",112,0)
 Q
"RTN","ORWOR",113,0)
UNSIGN(LST,ORVP,HAVE)   ; Return Unsigned Orders that are not on client
"RTN","ORWOR",114,0)
 N IFN,ACT,X8,ENT,LVL,TM,ILST S ILST=0
"RTN","ORWOR",115,0)
 Q:'$D(^XUSEC("ORES",DUZ))
"RTN","ORWOR",116,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWOR",117,0)
 S ENT="ALL"_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+^(5),1:"")
"RTN","ORWOR",118,0)
 S LVL=$$GET^XPAR(ENT,"OR UNSIGNED ORDERS ON EXIT")
"RTN","ORWOR",119,0)
 Q:'LVL
"RTN","ORWOR",120,0)
 S TM=0 F  S TM=$O(^OR(100,"AS",ORVP,TM)) Q:TM<1  D
"RTN","ORWOR",121,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AS",ORVP,TM,IFN)) Q:IFN<1  D
"RTN","ORWOR",122,0)
 . . S ACT=0 F  S ACT=$O(^OR(100,"AS",ORVP,TM,IFN,ACT)) Q:ACT<1  D
"RTN","ORWOR",123,0)
 . . . Q:$D(HAVE(IFN_";"_ACT))                        ;in Changes
"RTN","ORWOR",124,0)
 . . . S X8=$G(^OR(100,IFN,8,ACT,0))
"RTN","ORWOR",125,0)
 . . . I '$S(LVL=1&($P(X8,U,3)=DUZ):1,LVL=2:1,1:0) Q  ;chk user
"RTN","ORWOR",126,0)
 . . . S ILST=ILST+1,LST(ILST)=IFN_";"_ACT
"RTN","ORWOR",127,0)
 Q
"RTN","ORWOR",128,0)
PKIUSE(RETURN) ; RPC determines user can use PKI Digital Signature
"RTN","ORWOR",129,0)
 S RETURN=0
"RTN","ORWOR",130,0)
 I $$GET^XPAR("ALL^USR.`"_DUZ,"ORWOR PKI USE",1,"Q") S RETURN=1
"RTN","ORWOR",131,0)
 Q
"RTN","ORWOR",132,0)
PKISITE(RETURN) ; RPC determines if PKI is turned on at the site
"RTN","ORWOR",133,0)
 S RETURN=0
"RTN","ORWOR",134,0)
 Q:'$L($T(STORESIG^XUSSPKI))  ;Check for Kernel piece
"RTN","ORWOR",135,0)
 Q:'$L($T(DOSE^PSSOPKI1))  ;Check for Pharmacy piece
"RTN","ORWOR",136,0)
 I $$GET^XPAR("ALL","ORWOR PKI SITE",1,"Q") S RETURN=1
"RTN","ORWOR",137,0)
 Q
"RTN","ORWOR",138,0)
ACTXT(ORY,ORIFN) ;Return detail action information
"RTN","ORWOR",139,0)
 N ORI,CNT,OR0,OR3,OR6
"RTN","ORWOR",140,0)
 K ^TMP("ORACTXT",$J)
"RTN","ORWOR",141,0)
 S ORY="^TMP(""ORACTXT"",$J)",ORI=$P(ORIFN,";",2)
"RTN","ORWOR",142,0)
 S CNT=0,ORIFN=+ORIFN,OR0=$G(^OR(100,ORIFN,0)),OR3=$G(^(3)),OR6=$G(^(6))
"RTN","ORWOR",143,0)
 F  S ORI=$O(^OR(100,+ORIFN,8,ORI)) Q:ORI'>0  S ACTION=$G(^(ORI,0)) D ACT^ORQ20
"RTN","ORWOR",144,0)
 S ORY=$NA(^TMP("ORACTXT",$J)),@ORY=""
"RTN","ORWOR",145,0)
 Q
"RTN","ORWPCE1")
0^11^B61726959
"RTN","ORWPCE1",1,0)
ORWPCE1 ;SLC/KCM - PCE Calls from CPRS GUI;Feb 04, 2002 [12/3/03 11:30am]
"RTN","ORWPCE1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148,187**;Dec 17, 1997
"RTN","ORWPCE1",3,0)
GETVSIT(VSTR,DFN) ; lookup a visit
"RTN","ORWPCE1",4,0)
 N PKG,SRC,ORPXAPI,OK,ORVISIT
"RTN","ORWPCE1",5,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",6,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",7,0)
 S ORPXAPI("ENCOUNTER",1,"ENC D/T")=$P(VSTR,";",2)
"RTN","ORWPCE1",8,0)
 S ORPXAPI("ENCOUNTER",1,"PATIENT")=DFN
"RTN","ORWPCE1",9,0)
 S ORPXAPI("ENCOUNTER",1,"HOS LOC")=+VSTR
"RTN","ORWPCE1",10,0)
 S ORPXAPI("ENCOUNTER",1,"SERVICE CATEGORY")=$P(VSTR,";",3)
"RTN","ORWPCE1",11,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",12,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORVISIT)
"RTN","ORWPCE1",13,0)
 Q ORVISIT
"RTN","ORWPCE1",14,0)
DQDEL ; background call to DATA2PCE and DELVFILE
"RTN","ORWPCE1",15,0)
 N VISIT,VAL
"RTN","ORWPCE1",16,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",17,0)
 S VISIT=$$GETVSIT(VSTR,DFN)
"RTN","ORWPCE1",18,0)
 S VAL=$$DELVFILE^PXAPI("ALL",VISIT,"","TEXT INTEGRATION UTILITIES")
"RTN","ORWPCE1",19,0)
 S VAL=$$DELVFILE^PXAPI("ALL",VISIT,"","GEC1")
"RTN","ORWPCE1",20,0)
 S VAL=$$DELVFILE^PXAPI("ALL",VISIT,"","GEC2")
"RTN","ORWPCE1",21,0)
 S VAL=$$DELVFILE^PXAPI("ALL",VISIT,"","GEC3")
"RTN","ORWPCE1",22,0)
 S VAL=$$DELVFILE^PXAPI("ALL",VISIT,"","GECF")
"RTN","ORWPCE1",23,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",24,0)
 Q
"RTN","ORWPCE1",25,0)
DQSAVE ; Background Call to DATA2PCE
"RTN","ORWPCE1",26,0)
 N PKG,SRC,TYP,CODE,IEN,OK,I,X,ORPXAPI,ORPXDEL
"RTN","ORWPCE1",27,0)
 N CAT,NARR,ROOT,ROOT2,ORAVST
"RTN","ORWPCE1",28,0)
 N PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT,MOD,MODCNT,MODIDX,MODS
"RTN","ORWPCE1",29,0)
 N COM,COMMENT,COMMENTS
"RTN","ORWPCE1",30,0)
 N DFN,PROBLEMS,PXAPREDT,ORCPTDEL
"RTN","ORWPCE1",31,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",32,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",33,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",34,0)
 S (PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT)=0
"RTN","ORWPCE1",35,0)
 S I="" F  S I=$O(PCELIST(I)) Q:'I  S X=PCELIST(I) D
"RTN","ORWPCE1",36,0)
 . S X=PCELIST(I),TYP=$P(X,U),CODE=$P(X,U,2),CAT=$P(X,U,3),NARR=$P(X,U,4)
"RTN","ORWPCE1",37,0)
 . I $E(TYP,1,3)="PRV" D  Q
"RTN","ORWPCE1",38,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",39,0)
 . . S PRV=PRV+1
"RTN","ORWPCE1",40,0)
 . . S ROOT="ORPXAPI(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",41,0)
 . . S ROOT2="ORPXDEL(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",42,0)
 . . I $E(TYP,4)'="-" D
"RTN","ORWPCE1",43,0)
 . . . S @ROOT@("NAME")=CODE
"RTN","ORWPCE1",44,0)
 . . . S @ROOT@("PRIMARY")=$P(X,U,6)
"RTN","ORWPCE1",45,0)
 . . S @ROOT2@("NAME")=CODE
"RTN","ORWPCE1",46,0)
 . . S @ROOT2@("DELETE")=1
"RTN","ORWPCE1",47,0)
 . . S PXAPREDT=1 ;Allow edit of primary flag
"RTN","ORWPCE1",48,0)
 . I TYP="VST" D  Q
"RTN","ORWPCE1",49,0)
 . . S ROOT="ORPXAPI(""ENCOUNTER"",1)"
"RTN","ORWPCE1",50,0)
 . . I CODE="DT" S @ROOT@("ENC D/T")=$P(X,U,3) Q
"RTN","ORWPCE1",51,0)
 . . I CODE="PT" S @ROOT@("PATIENT")=$P(X,U,3),DFN=$P(X,U,3) Q
"RTN","ORWPCE1",52,0)
 . . I CODE="HL" S @ROOT@("HOS LOC")=$P(X,U,3) Q
"RTN","ORWPCE1",53,0)
 . . I CODE="PR" S @ROOT@("PARENT")=$P(X,U,3) Q
"RTN","ORWPCE1",54,0)
 . . ;prevents checkout! 
"RTN","ORWPCE1",55,0)
 . . I CODE="VC" S @ROOT@("SERVICE CATEGORY")=$P(X,U,3) Q
"RTN","ORWPCE1",56,0)
 . . I CODE="SC" S @ROOT@("SC")=$P(X,U,3) Q
"RTN","ORWPCE1",57,0)
 . . I CODE="AO" S @ROOT@("AO")=$P(X,U,3) Q
"RTN","ORWPCE1",58,0)
 . . I CODE="IR" S @ROOT@("IR")=$P(X,U,3) Q
"RTN","ORWPCE1",59,0)
 . . I CODE="EC" S @ROOT@("EC")=$P(X,U,3) Q
"RTN","ORWPCE1",60,0)
 . . I CODE="MST" S @ROOT@("MST")=$P(X,U,3) Q
"RTN","ORWPCE1",61,0)
 . . I CODE="HNC" S @ROOT@("HNC")=$P(X,U,3) Q
"RTN","ORWPCE1",62,0)
 . . I CODE="OL" D  Q
"RTN","ORWPCE1",63,0)
 . . . I +$P(X,U,3) S @ROOT@("INSTITUTION")=$P(X,U,3)
"RTN","ORWPCE1",64,0)
 . . . E  I $P(X,U,4)'="",$P(X,U,4)'="0" D
"RTN","ORWPCE1",65,0)
 . . . . I $$PATCH^XPDUTL("PX*1.0*96") S @ROOT@("OUTSIDE LOCATION")=$P(X,U,4)
"RTN","ORWPCE1",66,0)
 . . . . E  S @ROOT@("COMMENT")="OUTSIDE LOCATION:  "_$P(X,U,4)
"RTN","ORWPCE1",67,0)
 . I $E(TYP,1,3)="CPT" D  Q
"RTN","ORWPCE1",68,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",69,0)
 . . S CPT=CPT+1,ROOT="ORPXAPI(""PROCEDURE"","_CPT_")"
"RTN","ORWPCE1",70,0)
 . . S IEN=+$O(^ICPT("B",CODE,0))
"RTN","ORWPCE1",71,0)
 . . S @ROOT@("PROCEDURE")=IEN
"RTN","ORWPCE1",72,0)
 . . I +$P(X,U,9) D
"RTN","ORWPCE1",73,0)
 . . . S MODS=$P(X,U,9),MODCNT=+MODS
"RTN","ORWPCE1",74,0)
 . . . F MODIDX=1:1:MODCNT D
"RTN","ORWPCE1",75,0)
 . . . . S MOD=$P($P(MODS,";",MODIDX+1),"/")
"RTN","ORWPCE1",76,0)
 . . . . S @ROOT@("MODIFIERS",MOD)=""
"RTN","ORWPCE1",77,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",78,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",79,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",80,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",81,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PROCEDURE^"_CPT
"RTN","ORWPCE1",82,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0,ORCPTDEL=CPT
"RTN","ORWPCE1",83,0)
 . I $E(TYP,1,3)="POV" D  Q
"RTN","ORWPCE1",84,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",85,0)
 . . S ICD=ICD+1,ROOT="ORPXAPI(""DX/PL"","_ICD_")"
"RTN","ORWPCE1",86,0)
 . . S IEN=+$O(^ICD9("AB",CODE_" ",0))
"RTN","ORWPCE1",87,0)
 . . S @ROOT@("DIAGNOSIS")=IEN
"RTN","ORWPCE1",88,0)
 . . S @ROOT@("PRIMARY")=$P(X,U,5)
"RTN","ORWPCE1",89,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",90,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",91,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",92,0)
 . . I $L($P(X,U,7)),$P(X,U,7)=1 S @ROOT@("PL ADD")=$P(X,U,7),PROBLEMS(ICD)=NARR_U_CODE
"RTN","ORWPCE1",93,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="DX/PL^"_ICD
"RTN","ORWPCE1",94,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",95,0)
 . I $E(TYP,1,3)="IMM" D  Q
"RTN","ORWPCE1",96,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",97,0)
 . . S IMM=IMM+1,ROOT="ORPXAPI(""IMMUNIZATION"","_IMM_")"
"RTN","ORWPCE1",98,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",99,0)
 . . S:$L($P(X,U,5)) @ROOT@("SERIES")=$P(X,U,5)
"RTN","ORWPCE1",100,0)
 . . S:$L($P(X,U,5)) @ROOT@("REACTION")=$P(X,U,7)
"RTN","ORWPCE1",101,0)
 . . S:$L($P(X,U,8)) @ROOT@("CONTRAINDICATED")=$P(X,U,8)
"RTN","ORWPCE1",102,0)
 . . S:$L($P(X,U,9)) @ROOT@("REFUSED")=$P(X,U,9)
"RTN","ORWPCE1",103,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",104,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="IMMUNIZATION^"_IMM
"RTN","ORWPCE1",105,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",106,0)
 . I $E(TYP,1,2)="SK" D  Q
"RTN","ORWPCE1",107,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",108,0)
 . . S SK=SK+1,ROOT="ORPXAPI(""SKIN TEST"","_SK_")"
"RTN","ORWPCE1",109,0)
 . . S @ROOT@("TEST")=CODE
"RTN","ORWPCE1",110,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",111,0)
 . . S:$L($P(X,U,7)) @ROOT@("READING")=$P(X,U,7)
"RTN","ORWPCE1",112,0)
 . . S:$L($P(X,U,8)) @ROOT@("D/T READ")=$P(X,U,8)
"RTN","ORWPCE1",113,0)
 . . S:$L($P(X,U,9)) @ROOT@("EVENT D/T")=$P(X,U,9)
"RTN","ORWPCE1",114,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",115,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="SKIN TEST^"_SK
"RTN","ORWPCE1",116,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",117,0)
 . I $E(TYP,1,3)="PED" D  Q
"RTN","ORWPCE1",118,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",119,0)
 . . S PED=PED+1,ROOT="ORPXAPI(""PATIENT ED"","_PED_")"
"RTN","ORWPCE1",120,0)
 . . S @ROOT@("TOPIC")=CODE
"RTN","ORWPCE1",121,0)
 . . S:$L($P(X,U,5)) @ROOT@("UNDERSTANDING")=$P(X,U,5)
"RTN","ORWPCE1",122,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",123,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PATIENT ED^"_PED
"RTN","ORWPCE1",124,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",125,0)
 . I $E(TYP,1,2)="HF" D  Q
"RTN","ORWPCE1",126,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",127,0)
 . . S HF=HF+1,ROOT="ORPXAPI(""HEALTH FACTOR"","_HF_")"
"RTN","ORWPCE1",128,0)
 . . S @ROOT@("HEALTH FACTOR")=CODE
"RTN","ORWPCE1",129,0)
 . . S:$L($P(X,U,5)) @ROOT@("LEVEL/SEVERITY")=$P(X,U,5)
"RTN","ORWPCE1",130,0)
 . . S:$P(X,U,6)'>0 $P(X,U,6)=$G(ORPXAPI("PROVIDER",1,"NAME"))
"RTN","ORWPCE1",131,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",132,0)
 . . S:$L($P(X,U,11)) @ROOT@("EVENT D/T")=$P($P(X,U,11),";",1)
"RTN","ORWPCE1",133,0)
 . . S:$L($P(X,U,11)) SRC=$P($P(X,U,11),";",2)
"RTN","ORWPCE1",134,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="HEALTH FACTOR^"_HF
"RTN","ORWPCE1",135,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",136,0)
 . I $E(TYP,1,3)="XAM" D  Q
"RTN","ORWPCE1",137,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",138,0)
 . . S XAM=XAM+1,ROOT="ORPXAPI(""EXAM"","_XAM_")"
"RTN","ORWPCE1",139,0)
 . . S @ROOT@("EXAM")=CODE
"RTN","ORWPCE1",140,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",141,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",142,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="EXAM^"_XAM
"RTN","ORWPCE1",143,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",144,0)
 . I $E(TYP,1,3)="TRT" D  Q
"RTN","ORWPCE1",145,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",146,0)
 . . S TRT=TRT+1,ROOT="ORPXAPI(""TREATMENT"","_TRT_")"
"RTN","ORWPCE1",147,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",148,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",149,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",150,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",151,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",152,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="TREATMENT^"_TRT
"RTN","ORWPCE1",153,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0
"RTN","ORWPCE1",154,0)
 . I $E(TYP,1,3)="COM" D  Q
"RTN","ORWPCE1",155,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",156,0)
 . . Q:'$L(CAT)
"RTN","ORWPCE1",157,0)
 . . S COMMENTS(CODE)=$P(X,U,3,999)
"RTN","ORWPCE1",158,0)
 ;Store the comments
"RTN","ORWPCE1",159,0)
 S COM=""
"RTN","ORWPCE1",160,0)
 F  S COM=$O(COMMENT(COM)) Q:COM=""  S:$D(COMMENTS(COM)) ORPXAPI($P(COMMENT(COM),"^",1),$P(COMMENT(COM),"^",2),"COMMENT")=COMMENTS(COM)
"RTN","ORWPCE1",161,0)
 ;
"RTN","ORWPCE1",162,0)
 ;Remove any problems to add that the patient already has as active problems
"RTN","ORWPCE1",163,0)
 I $D(PROBLEMS),$D(DFN) D
"RTN","ORWPCE1",164,0)
 . N ORWPROB,ORPROBIX
"RTN","ORWPCE1",165,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",166,0)
 . D DSELECT^GMPLENFM
"RTN","ORWPCE1",167,0)
 . S ORPROBIX=0
"RTN","ORWPCE1",168,0)
 . F  S ORPROBIX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE1",169,0)
 .. S ORWPROB=$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)
"RTN","ORWPCE1",170,0)
 .. S ORWPROB($S($E(ORWPROB,1)="$":$E(ORWPROB,2,255),1:ORWPROB))=""
"RTN","ORWPCE1",171,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",172,0)
 . Q:'$D(ORWPROB)
"RTN","ORWPCE1",173,0)
 . S ORPROBIX=""
"RTN","ORWPCE1",174,0)
 . F  S ORPROBIX=$O(PROBLEMS(ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE1",175,0)
 .. S:$D(ORWPROB(PROBLEMS(ORPROBIX))) ORPXAPI("DX/PL",ORPROBIX,"PL ADD")=0
"RTN","ORWPCE1",176,0)
 ;
"RTN","ORWPCE1",177,0)
 I $$MDS(.ORPXAPI,$G(ORLOC)) S ORPXAPI("ENCOUNTER",1,"CHECKOUT D/T")=$$NOW^XLFDT
"RTN","ORWPCE1",178,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",179,0)
DATA2PCE ;
"RTN","ORWPCE1",180,0)
 I $G(PXAPREDT)!($G(ORCPTDEL)) D
"RTN","ORWPCE1",181,0)
 . M ORPXDEL("ENCOUNTER")=ORPXAPI("ENCOUNTER")
"RTN","ORWPCE1",182,0)
 . I $G(ORCPTDEL) M ORPXDEL("PROCEDURE",ORCPTDEL)=ORPXAPI("PROCEDURE",ORCPTDEL)
"RTN","ORWPCE1",183,0)
 . S OK=$$DATA2PCE^PXAPI("ORPXDEL",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",184,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",185,0)
 I OK>0,+NOTEIEN,+ORAVST D  ; NOTEIEN only set on inpatient encounters
"RTN","ORWPCE1",186,0)
 .N OROK,ORX
"RTN","ORWPCE1",187,0)
 .S ORX(1207)=ORAVST
"RTN","ORWPCE1",188,0)
 .D FILE^TIUSRVP(.OROK,NOTEIEN,.ORX,1)
"RTN","ORWPCE1",189,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",190,0)
 Q
"RTN","ORWPCE1",191,0)
 ;
"RTN","ORWPCE1",192,0)
MDS(X,ORLOC) ; return TRUE if checkout is needed 
"RTN","ORWPCE1",193,0)
 I $$CHKOUT^ORWPCE2(ORLOC) Q 1
"RTN","ORWPCE1",194,0)
 N I,ORAUTO,OROK
"RTN","ORWPCE1",195,0)
 S (OROK,I)=0
"RTN","ORWPCE1",196,0)
 F  S I=$O(X("DX/PL",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",197,0)
 . I $G(X("DX/PL",I,"DIAGNOSIS")) S OROK=1
"RTN","ORWPCE1",198,0)
 I 'OROK D
"RTN","ORWPCE1",199,0)
 .S I=0 F  S I=$O(X("PROCEDURE",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",200,0)
 .. I $G(X("PROCEDURE",I,"PROCEDURE")) S OROK=1
"RTN","ORWPCE1",201,0)
 I $D(X("PROVIDER",1,"NAME")) S OROK=1
"RTN","ORWPCE1",202,0)
 Q OROK
"RTN","ORWPT")
0^23^B56396501
"RTN","ORWPT",1,0)
ORWPT ; SLC/KCM/REV - Patient Lookup Functions ;25-JAN-1999 11:26:58 [10/8/03 2:09pm]
"RTN","ORWPT",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,149,206,187**;Dec 17, 1997
"RTN","ORWPT",3,0)
 ;
"RTN","ORWPT",4,0)
IDINFO(REC,DFN) ; Return identifying information for a patient
"RTN","ORWPT",5,0)
 ; PID^DOB^SEX^VET^SC%^WARD^RM-BED^NAME
"RTN","ORWPT",6,0)
 N X0,X1,X101,X3,XV  ; name/dob/sex/ssn, ward, room-bed, sc%, vet
"RTN","ORWPT",7,0)
 S X0=$G(^DPT(DFN,0)),X1=$G(^(.1)),X101=$G(^(.101)),X3=$G(^(.3)),XV=$G(^("VET"))
"RTN","ORWPT",8,0)
 S REC=$$SSN^DPTLK1(DFN)_U_$$DOB^DPTLK1(DFN,2)_U_$P(X0,U,2)_U_$P(XV,U)_U_$P(X3,U,2)_U_$P(X1,U)_U_$P(X101,U)_U_$P(X0,U) ;DG249
"RTN","ORWPT",9,0)
 Q
"RTN","ORWPT",10,0)
PTINQ(REF,DFN) ; Return formatted pt inquiry report
"RTN","ORWPT",11,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",12,0)
 D DGINQ^ORCXPND1(DFN)
"RTN","ORWPT",13,0)
 S REF=$NA(^TMP("ORDATA",$J,1))
"RTN","ORWPT",14,0)
 Q
"RTN","ORWPT",15,0)
SCDIS(LST,DFN) ; Return service connected % and rated disabilities
"RTN","ORWPT",16,0)
 N VAEL,VAERR,I,ILST,DIS,SC,X
"RTN","ORWPT",17,0)
 D ELIG^VADPT
"RTN","ORWPT",18,0)
 S LST(1)="Service Connected: "_$S(+VAEL(3):$P(VAEL(3),U,2)_"%",1:"NO")
"RTN","ORWPT",19,0)
 I 'VAEL(4),'$P($G(^DG(391,+VAEL(6),0)),U,2) S LST(2)="NOT A VETERAN." Q
"RTN","ORWPT",20,0)
 S I=0,ILST=1 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X=^(I,0) D
"RTN","ORWPT",21,0)
 . S DIS=$P($G(^DIC(31,+X,0)),U) Q:DIS=""
"RTN","ORWPT",22,0)
 . S SC=$S($P(X,U,3):"SC",$P(X,U,3)']"":"not specified",1:"NSC")
"RTN","ORWPT",23,0)
 . S ILST=ILST+1,LST(ILST)=DIS_" ("_$P(X,U,2)_"% "_SC_")"
"RTN","ORWPT",24,0)
 I ILST=1 S LST(2)="Rated Disabilities: NONE STATED"
"RTN","ORWPT",25,0)
 Q
"RTN","ORWPT",26,0)
SHOW ; temporary - show patient inquiry screen
"RTN","ORWPT",27,0)
 N I,Y,DIC S DIC=2,DIC(0)="AEMQ" D ^DIC Q:'Y
"RTN","ORWPT",28,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",29,0)
 D DGINQ^ORCXPND1(+Y)
"RTN","ORWPT",30,0)
 S I=0 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:'I  W !,^(I)
"RTN","ORWPT",31,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",32,0)
 Q
"RTN","ORWPT",33,0)
SELCHK(REC,DFN) ; Check for sensitive pt
"RTN","ORWPT",34,0)
 ; SENSITIVE
"RTN","ORWPT",35,0)
 S REC=$$EN1^ORQPT2(DFN)
"RTN","ORWPT",36,0)
 Q
"RTN","ORWPT",37,0)
DIEDON(VAL,DFN) ; Check for a date of death
"RTN","ORWPT",38,0)
 S VAL=+$G(^DPT(DFN,.35))
"RTN","ORWPT",39,0)
 Q
"RTN","ORWPT",40,0)
SELECT(REC,DFN) ; Selects patient & returns key information
"RTN","ORWPT",41,0)
 ;  1    2   3   4    5      6    7    8       9       10      11  12
"RTN","ORWPT",42,0)
 ; NAME^SEX^DOB^SSN^LOCIEN^LOCNM^RMBD^CWAD^SENSITIVE^ADMITTED^CONV^SC^
"RTN","ORWPT",43,0)
 ; 13  14  15  16
"RTN","ORWPT",44,0)
 ; SC%^ICN^AGE^TS
"RTN","ORWPT",45,0)
 ;
"RTN","ORWPT",46,0)
 ; for CCOW (RV - 2/27/03)  name="-1", location=error message
"RTN","ORWPT",47,0)
 I '$D(^DPT(DFN,0)) S REC="-1^^^^^Patient is unknown to CPRS." Q
"RTN","ORWPT",48,0)
 ;
"RTN","ORWPT",49,0)
 N X
"RTN","ORWPT",50,0)
 K ^TMP("ORWPCE",$J) ; delete PCE 'cache' when switching patients
"RTN","ORWPT",51,0)
 S X=^DPT(DFN,0),REC=$P(X,U,1,3)_U_$P(X,U,9)_U_U_$G(^(.1))_U_$G(^(.101))
"RTN","ORWPT",52,0)
 S X=$P(REC,U,6) I $L(X) S $P(REC,U,5)=+$G(^DIC(42,+$O(^DIC(42,"B",X,0)),44))
"RTN","ORWPT",53,0)
 S $P(REC,U,8)=$$CWAD^ORQPT2(DFN)_U_$$EN1^ORQPT2(DFN)
"RTN","ORWPT",54,0)
 ; I $P(REC,U,9) D EN2^ORQPT2(DFN)  ;update DG security log ; DG249
"RTN","ORWPT",55,0)
 S X=$G(^DPT(DFN,.105)) I X S $P(REC,U,10)=$P($G(^DGPM(X,0)),U)
"RTN","ORWPT",56,0)
 S:'$D(IOST) IOST="P-OTHER"
"RTN","ORWPT",57,0)
 S $P(REC,U,11)=$$OTF^OR3CONV(DFN,1)
"RTN","ORWPT",58,0)
 D ELIG^VADPT S $P(REC,U,12)=$G(VAEL(3)) ;two pieces: SC^SC%
"RTN","ORWPT",59,0)
 I $L($T(GETICN^MPIF001)) S X=+$$GETICN^MPIF001(DFN) S:X>0 $P(REC,U,14)=X
"RTN","ORWPT",60,0)
 S $P(REC,U,15)=$$AGE(DFN,$P(REC,U,3))
"RTN","ORWPT",61,0)
 S $P(REC,U,16)=+$G(^DPT(DFN,.103)) ; treating specialty
"RTN","ORWPT",62,0)
 K VAEL,VAERR ;VADPT call to kill?
"RTN","ORWPT",63,0)
 S ^DISV(DUZ,"^DPT(")=DFN
"RTN","ORWPT",64,0)
 Q
"RTN","ORWPT",65,0)
SHARE(VAL,IP,HWND,DFN) ; Set global to share DFN with other applications
"RTN","ORWPT",66,0)
 K ^TMP("ORWCHART",$J),^TMP("ORECALL",$J),^TMP("ORWORD",$J)
"RTN","ORWPT",67,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","ORWPT",68,0)
 S ^TMP("ORWCHART",$J,IP,HWND)=DFN
"RTN","ORWPT",69,0)
 Q
"RTN","ORWPT",70,0)
BYWARD(LST,WARD) ; Return a list of patients in a ward
"RTN","ORWPT",71,0)
 N ILST,DFN
"RTN","ORWPT",72,0)
 I +$G(WARD)<1 S LST(1)="^No ward identified" Q
"RTN","ORWPT",73,0)
 S (ILST,DFN)=0
"RTN","ORWPT",74,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;DBIA #36
"RTN","ORWPT",75,0)
 F  S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0  D
"RTN","ORWPT",76,0)
 . S ILST=ILST+1,LST(ILST)=+DFN_U_$P(^DPT(+DFN,0),U)_U_$G(^DPT(+DFN,.101))
"RTN","ORWPT",77,0)
 I ILST<1 S LST(1)="^No patients found."
"RTN","ORWPT",78,0)
 Q
"RTN","ORWPT",79,0)
LAST5(LST,ID) ; Return a list of patients matching A9999 identifiers
"RTN","ORWPT",80,0)
 N I,IEN,XREF
"RTN","ORWPT",81,0)
 S (I,IEN)=0,XREF=$S($L(ID)=5:"BS5",1:"BS")
"RTN","ORWPT",82,0)
 F  S IEN=$O(^DPT(XREF,ID,IEN)) Q:'IEN  D
"RTN","ORWPT",83,0)
 . S I=I+1,LST(I)=IEN_U_$P(^DPT(IEN,0),U)_U_$$DOB^DPTLK1(IEN,2)_U_$$SSN^DPTLK1(IEN)  ; DG249
"RTN","ORWPT",84,0)
 Q
"RTN","ORWPT",85,0)
 ;
"RTN","ORWPT",86,0)
LAST5RPL(LST,ID) ; ; Return list matching A9999 id's, but from RPL only.
"RTN","ORWPT",87,0)
 N ORRPL,ORCNT,ORPT,ORPIEN
"RTN","ORWPT",88,0)
 ; IA ____ allows read access to NEW PERSON file node 101:
"RTN","ORWPT",89,0)
 S ORRPL=$G(^VA(200,DUZ,101))
"RTN","ORWPT",90,0)
 S ORRPL=$P(ORRPL,U,2)
"RTN","ORWPT",91,0)
 I (('ORRPL)!(ORRPL="")) S LST(0)="" Q
"RTN","ORWPT",92,0)
 ;
"RTN","ORWPT",93,0)
 S (ORCNT,ORPT)=0
"RTN","ORWPT",94,0)
 F  S ORPT=$O(^OR(100.21,ORRPL,10,ORPT)) Q:'ORPT  D
"RTN","ORWPT",95,0)
 .S ORPIEN=+$G(^OR(100.21,ORRPL,10,ORPT,0))
"RTN","ORWPT",96,0)
 .I ((ORPIEN<0)!(ORPIEN="")) Q
"RTN","ORWPT",97,0)
 .S ORCNT=ORCNT+1
"RTN","ORWPT",98,0)
 .S LST(ORCNT)=ORPIEN_U_$P(^DPT(ORPIEN,0),U)_U_$$DOB^DPTLK1(ORPIEN,2)_U_$$SSN^DPTLK1(ORPIEN) ; DG249.
"RTN","ORWPT",99,0)
 ;
"RTN","ORWPT",100,0)
 Q
"RTN","ORWPT",101,0)
 ;
"RTN","ORWPT",102,0)
FULLSSN(LST,ID) ; Return a list of patients matching full SSN entered
"RTN","ORWPT",103,0)
 N I,IEN
"RTN","ORWPT",104,0)
 S (I,IEN)=0
"RTN","ORWPT",105,0)
 F  S IEN=$O(^DPT("SSN",ID,IEN)) Q:'IEN  D
"RTN","ORWPT",106,0)
 . S I=I+1,LST(I)=IEN_U_$P(^DPT(IEN,0),U)_U_$$DOB^DPTLK1(IEN,2)_U_$$SSN^DPTLK1(IEN)  ; DG249
"RTN","ORWPT",107,0)
 Q
"RTN","ORWPT",108,0)
 ;
"RTN","ORWPT",109,0)
FSSNRPL(LST,ID) ; Return list matching Full SSN, but from RPL only.
"RTN","ORWPT",110,0)
 N ORRPL,ORCNT,ORPT,ORLPT,ORPIEN
"RTN","ORWPT",111,0)
 ; IA ____ allows read access to NEW PERSON file node 101:
"RTN","ORWPT",112,0)
 S ORRPL=$G(^VA(200,DUZ,101))
"RTN","ORWPT",113,0)
 S ORRPL=$P(ORRPL,U,2)
"RTN","ORWPT",114,0)
 I (('ORRPL)!(ORRPL="")) S LST(0)="" Q
"RTN","ORWPT",115,0)
 ;
"RTN","ORWPT",116,0)
 S (ORCNT,ORPT)=0
"RTN","ORWPT",117,0)
 F  S ORPT=$O(^DPT("SSN",ID,ORPT)) Q:'ORPT  D
"RTN","ORWPT",118,0)
 .S ORLPT=0
"RTN","ORWPT",119,0)
 .F  S ORLPT=$O(^OR(100.21,ORRPL,10,ORLPT)) Q:'ORLPT  D
"RTN","ORWPT",120,0)
 ..S ORPIEN=+$G(^OR(100.21,ORRPL,10,ORLPT,0))
"RTN","ORWPT",121,0)
 ..I ((ORPIEN<0)!(ORPIEN="")) Q
"RTN","ORWPT",122,0)
 ..I (ORPIEN'=ORPT) Q
"RTN","ORWPT",123,0)
 ..S ORCNT=ORCNT+1
"RTN","ORWPT",124,0)
 ..S LST(ORCNT)=ORPIEN_U_$P(^DPT(ORPIEN,0),U)_U_$$DOB^DPTLK1(ORPIEN,2)_U_$$SSN^DPTLK1(ORPIEN) ; DG249.
"RTN","ORWPT",125,0)
 ;
"RTN","ORWPT",126,0)
 Q
"RTN","ORWPT",127,0)
 ;
"RTN","ORWPT",128,0)
TOP(LST) ; Return top for all patients list (last selected for now)
"RTN","ORWPT",129,0)
 N IEN
"RTN","ORWPT",130,0)
 S IEN=$G(^DISV(DUZ,"^DPT("))
"RTN","ORWPT",131,0)
 I IEN S LST(1)=IEN_U_$P($G(^DPT(IEN,0)),U)
"RTN","ORWPT",132,0)
 Q
"RTN","ORWPT",133,0)
ENCTITL(REC,DFN,LOC,PROV) ; Return external values for encounter
"RTN","ORWPT",134,0)
 ; LOCNAME^LOCABBR^ROOMBED^PROVNAME
"RTN","ORWPT",135,0)
 S $P(REC,U,1)=$P($G(^SC(+LOC,0)),U,1,2)
"RTN","ORWPT",136,0)
 S $P(REC,U,3)=$P($G(^DPT(DFN,.101)),U)
"RTN","ORWPT",137,0)
 S $P(REC,U,4)=$P($G(^VA(200,+PROV,0)),U)
"RTN","ORWPT",138,0)
 Q
"RTN","ORWPT",139,0)
LISTALL(Y,FROM,DIR) ; Return a bolus of patient names.  From is either Name or IEN^Name.
"RTN","ORWPT",140,0)
 N I,IEN,CNT,FROMIEN,ORIDNAME S CNT=44,I=0,FROMIEN=0
"RTN","ORWPT",141,0)
 I $P(FROM,U,2)'="" S FROMIEN=$P(FROM,U,1),FROM=$O(^DPT("B",$P(FROM,U,2)),-DIR)
"RTN","ORWPT",142,0)
 F  S FROM=$O(^DPT("B",FROM),DIR) Q:FROM=""  D  Q:I=CNT
"RTN","ORWPT",143,0)
 . S IEN=FROMIEN,FROMIEN=0 F  S IEN=$O(^DPT("B",FROM,IEN)) Q:'IEN  D  Q:I=CNT
"RTN","ORWPT",144,0)
 . . S ORIDNAME=""
"RTN","ORWPT",145,0)
 . . S ORIDNAME=$G(^DPT(IEN,0)) ; Get zero node name.
"RTN","ORWPT",146,0)
 . . ; S X1=$G(^DPT(IEN,.1))_" "_$G(^DPT(IEN,.101))
"RTN","ORWPT",147,0)
 . . S I=I+1 S Y(I)=IEN_U_FROM_U_U_U_U_$P(ORIDNAME,U) ;_"^"_X ; _"^"_X1  ;"   ("_X_")"
"RTN","ORWPT",148,0)
 Q
"RTN","ORWPT",149,0)
APPTLST(LST,DFN) ; return a list of appointments
"RTN","ORWPT",150,0)
 ; APPTTIME^LOCIEN^LOCNAME^EXTSTATUS
"RTN","ORWPT",151,0)
 N VASD
"RTN","ORWPT",152,0)
 S VASD("F")=$$HTFM^XLFDT($H-30,1)
"RTN","ORWPT",153,0)
 S VASD("T")=$$HTFM^XLFDT($H+1,1)_".2359"
"RTN","ORWPT",154,0)
 S VASD("W")="123456789"
"RTN","ORWPT",155,0)
 D SDA^VADPT
"RTN","ORWPT",156,0)
 S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","ORWPT",157,0)
 . S LST(I)=$P(^UTILITY("VASD",$J,I,"I"),U,1,2)_U_$P(^("E"),U,2,3)
"RTN","ORWPT",158,0)
 K ^UTILITY("VASD",$J)
"RTN","ORWPT",159,0)
 Q
"RTN","ORWPT",160,0)
ADMITLST(LST,DFN) ; return a list of admissions
"RTN","ORWPT",161,0)
 ; MOVETIME^LOCIEN^LOCNAME^TYPE
"RTN","ORWPT",162,0)
 N TIM,MOV,X0,Y,MTIM,XTYP,XLOC,HLOC,ILST S ILST=0
"RTN","ORWPT",163,0)
 S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D
"RTN","ORWPT",164,0)
 . S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D
"RTN","ORWPT",165,0)
 . . N VSTR,TIUDA
"RTN","ORWPT",166,0)
 . . S X0=$G(^DGPM(MOV,0)) I X0']"" Q
"RTN","ORWPT",167,0)
 . . S MTIM=$P(X0,U)
"RTN","ORWPT",168,0)
 . . S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","ORWPT",169,0)
 . . S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","ORWPT",170,0)
 . . S VSTR=HLOC_";"_MTIM_";H",TIUDA=$$HASDS^TIULX(DFN,VSTR)
"RTN","ORWPT",171,0)
 . . S ILST=ILST+1,LST(ILST)=MTIM_U_HLOC_U_XLOC_U_XTYP_U_MOV_U_TIUDA
"RTN","ORWPT",172,0)
 Q
"RTN","ORWPT",173,0)
CLINRNG(LST) ; return date ranges for clinic appointments
"RTN","ORWPT",174,0)
 S LST(1)="T;T^Today"
"RTN","ORWPT",175,0)
 S LST(2)="T+1;T+1^Tomorrow"
"RTN","ORWPT",176,0)
 S LST(3)="T-1;T-1^Yesterday"
"RTN","ORWPT",177,0)
 S LST(4)="T-7;T^Past Week"
"RTN","ORWPT",178,0)
 S LST(5)="T-31;T^Past Month"
"RTN","ORWPT",179,0)
 S LST(6)="S^Specify Date Range..."
"RTN","ORWPT",180,0)
 Q
"RTN","ORWPT",181,0)
 ;
"RTN","ORWPT",182,0)
 N %,%H,X,SUNDAY,START
"RTN","ORWPT",183,0)
 S LST(1)=DT_";"_DT_"^Today",X=$$HTFM^XLFDT($H+1,1)
"RTN","ORWPT",184,0)
 S LST(2)=X_";"_X_"^Tomorrow"
"RTN","ORWPT",185,0)
 S X=+$H F  Q:X#7=3  S X=X-1                        ; $H#7=3 is Sunday
"RTN","ORWPT",186,0)
 S LST(3)=$$HTFM^XLFDT(X)_";"_$$HTFM^XLFDT(X+6)_"^This Week"
"RTN","ORWPT",187,0)
 S LST(4)=$$HTFM^XLFDT(X+7)_";"_$$HTFM^XLFDT(X+13)_"^Next Week"
"RTN","ORWPT",188,0)
 S LST(5)=$E(DT,1,5)_"01;"_$E(DT,1,5)_"31^This Month"
"RTN","ORWPT",189,0)
 S X=$E(DT,4,5)+1 S:X=13 X=1 S X=$E(DT,1,3)_$TR($J(X,2)," ",0)
"RTN","ORWPT",190,0)
 S LST(6)=X_"01;"_X_"31^Next Month"
"RTN","ORWPT",191,0)
 S LST(7)="^Specify Dates"
"RTN","ORWPT",192,0)
 Q
"RTN","ORWPT",193,0)
DFLTSRC(VAL) ; return default patient list source (T, W, C, P, S)
"RTN","ORWPT",194,0)
 N SRV S SRV=+$G(^VA(200,DUZ,5))
"RTN","ORWPT",195,0)
 S VAL=$$GET^XPAR("ALL^SRV.`"_SRV,"ORLP DEFAULT LIST SOURCE")
"RTN","ORWPT",196,0)
 Q
"RTN","ORWPT",197,0)
SAVDFLT(OK,X) ; save new default patient list settings (X=type^ien^sdt;edt)
"RTN","ORWPT",198,0)
 G SAVDFLT^ORWPT1
"RTN","ORWPT",199,0)
 ;
"RTN","ORWPT",200,0)
DISCHRG(Y,DFN,ADMITDT) ; Get discharge movement information
"RTN","ORWPT",201,0)
 N VAIP
"RTN","ORWPT",202,0)
 I +$G(ADMITDT)=0 S Y=DT Q
"RTN","ORWPT",203,0)
 S VAIP("D")=ADMITDT D 52^VADPT
"RTN","ORWPT",204,0)
 I +VAIP(17)=0 S Y=DT Q
"RTN","ORWPT",205,0)
 S Y=+VAIP(17,1)
"RTN","ORWPT",206,0)
 Q
"RTN","ORWPT",207,0)
CWAD(Y,DFN) ;  returns CWAD flags for a patient
"RTN","ORWPT",208,0)
 S Y=$$CWAD^ORQPT2(DFN)
"RTN","ORWPT",209,0)
 Q
"RTN","ORWPT",210,0)
LEGACY(ORLST,DFN) ; return message if data on the legacy system
"RTN","ORWPT",211,0)
 ; ORLST(0)=1 if data,  ORLST(n)=display message if data
"RTN","ORWPT",212,0)
 S ORLST(0)=0
"RTN","ORWPT",213,0)
 I $L($T(HXDATA^A7RDPAGU)) D
"RTN","ORWPT",214,0)
 . D HXDATA^A7RDPAGU(.ORLST,DFN)
"RTN","ORWPT",215,0)
 . I $O(ORLST(0)) S ORLST(0)=1
"RTN","ORWPT",216,0)
 Q
"RTN","ORWPT",217,0)
INPLOC(REC,DFN) ; Return a patient's current location
"RTN","ORWPT",218,0)
 N X
"RTN","ORWPT",219,0)
 S X=$G(^DPT(DFN,.102)),REC=0
"RTN","ORWPT",220,0)
 I X S X=$P($G(^DGPM(X,0)),U,6)
"RTN","ORWPT",221,0)
 I X S REC=+$G(^DIC(42,X,44))
"RTN","ORWPT",222,0)
 I X S $P(REC,U,2)=$P($G(^DIC(42,X,0)),U,1)
"RTN","ORWPT",223,0)
 I X S X=$P($G(^DIC(42,X,0)),U,3)
"RTN","ORWPT",224,0)
 S $P(REC,U,3)=X
"RTN","ORWPT",225,0)
 Q
"RTN","ORWPT",226,0)
AGE(DFN,BEG) ; returns age based on date of birth and date of death (or DT)
"RTN","ORWPT",227,0)
 N END,X
"RTN","ORWPT",228,0)
 S END=+$G(^DPT(DFN,.35)),END=$S(END:END,1:DT)
"RTN","ORWPT",229,0)
 S X=$E(END,1,3)-$E(BEG,1,3)-($E(END,4,7)<$E(BEG,4,7))
"RTN","ORWPT",230,0)
 Q X
"RTN","ORWTPN")
0^21^B46513383
"RTN","ORWTPN",1,0)
ORWTPN ; SLC/STAFF Personal Preference - Notes ;2/21/01  08:11 [9/11/03 12:06pm]
"RTN","ORWTPN",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,149,187**;Dec 17, 1997
"RTN","ORWTPN",3,0)
 ;
"RTN","ORWTPN",4,0)
GETSUB(VALUE,USER) ; from ORWTPP
"RTN","ORWTPN",5,0)
 ; get Ask for Subject on notes for user
"RTN","ORWTPN",6,0)
 N NODE
"RTN","ORWTPN",7,0)
 S NODE=+$O(^TIU(8926,"B",USER,0))
"RTN","ORWTPN",8,0)
 S VALUE=+$P($G(^TIU(8926,NODE,0)),U,8)
"RTN","ORWTPN",9,0)
 Q
"RTN","ORWTPN",10,0)
 ;
"RTN","ORWTPN",11,0)
SETSUB(OK,VALUE,USER) ; from ORWTPP
"RTN","ORWTPN",12,0)
 ; set Ask for Subject on note for user
"RTN","ORWTPN",13,0)
 N DA,DIE,DIK,DR,NODE,NUM
"RTN","ORWTPN",14,0)
 S OK=1
"RTN","ORWTPN",15,0)
 S VALUE=+$G(VALUE),VALUE=$S(VALUE=1:1,VALUE=0:0,1:"")
"RTN","ORWTPN",16,0)
 I VALUE="" S OK=0 Q
"RTN","ORWTPN",17,0)
 S NODE=+$O(^TIU(8926,"B",USER,0))
"RTN","ORWTPN",18,0)
 I 'NODE D  Q  ; make new entry if user does not have TIU preferences
"RTN","ORWTPN",19,0)
 .I 'VALUE Q  ; no need to set since default for no user preference is 0
"RTN","ORWTPN",20,0)
 .L +^TIU(8926,0):5 I '$T S OK=0 Q
"RTN","ORWTPN",21,0)
 .S NUM=1+$P(^TIU(8926,0),U,3)
"RTN","ORWTPN",22,0)
 .F  Q:'$D(^TIU(8926,NUM,0))  S NUM=NUM+1
"RTN","ORWTPN",23,0)
 .S $P(^(0),U,4)=1+$P(^TIU(8926,0),U,4),$P(^(0),U,3)=NUM
"RTN","ORWTPN",24,0)
 .S ^TIU(8926,NUM,0)=USER_"^^^^^^^1"
"RTN","ORWTPN",25,0)
 .L -^TIU(8926,0)
"RTN","ORWTPN",26,0)
 .S DA=NUM,DIK="^TIU(8926,"
"RTN","ORWTPN",27,0)
 .D IX1^DIK
"RTN","ORWTPN",28,0)
 I USER'=+$G(^TIU(8926,NODE,0)) Q
"RTN","ORWTPN",29,0)
 S DA=NODE,DIE="^TIU(8926,",DR=".08///"_VALUE
"RTN","ORWTPN",30,0)
 D ^DIE
"RTN","ORWTPN",31,0)
 Q
"RTN","ORWTPN",32,0)
 ;
"RTN","ORWTPN",33,0)
GETCOS(ORY,ORUSER,ORFROM,ORDIR,ORVIZ) ; Get cosigners for user (from ORWTPP).
"RTN","ORWTPN",34,0)
 ; (Keep this code matched with NP1^ORWU1.)
"RTN","ORWTPN",35,0)
 ;
"RTN","ORWTPN",36,0)
 ; Params:
"RTN","ORWTPN",37,0)
 ;  .ORY=returned list, ORFROM=text to $O from, ORDIR=$O direction.
"RTN","ORWTPN",38,0)
 ;  ORUSER=User seeking a Cosigner.
"RTN","ORWTPN",39,0)
 ;  ORFROM=Starting value to use.
"RTN","ORWTPN",40,0)
 ;  ORDIR=Direction to move through x-ref.
"RTN","ORWTPN",41,0)
 ;  ORVIZ=If true, includes RDV users; otherwise not (optional).
"RTN","ORWTPN",42,0)
 ;
"RTN","ORWTPN",43,0)
 N OR1DIV,ORCNT,ORDD,ORDIV,ORDUP,ORGOOD,ORHOLD,ORI,ORIEN1,ORIEN2,ORIENP2,ORLAST,ORMAX,ORMRK,ORMULTI,ORNAME,ORPREV,ORSRV,ORTTL,ORVALID
"RTN","ORWTPN",44,0)
 ;
"RTN","ORWTPN",45,0)
 S ORI=0,ORMAX=44,(ORLAST,ORPREV)=""
"RTN","ORWTPN",46,0)
 S ORMULTI=$$ALL^VASITE ; Do once at beginning of call.
"RTN","ORWTPN",47,0)
 S ORNAME("FILE")=200,ORNAME("FIELD")=.01 ; Array for XLFNAME call.
"RTN","ORWTPN",48,0)
 ;
"RTN","ORWTPN",49,0)
 F  Q:ORI'<ORMAX  S ORFROM=$O(^VA(200,"B",ORFROM),ORDIR) Q:ORFROM=""  D
"RTN","ORWTPN",50,0)
 .S ORVALID=0                                     ; Init each time.
"RTN","ORWTPN",51,0)
 .S ORIEN1=""
"RTN","ORWTPN",52,0)
 .F  S ORIEN1=$O(^VA(200,"B",ORFROM,ORIEN1),ORDIR) Q:'ORIEN1  D
"RTN","ORWTPN",53,0)
 ..;
"RTN","ORWTPN",54,0)
 ..; Screen out RDVs if applicable:
"RTN","ORWTPN",55,0)
 ..I +$G(ORVIZ)=0,$D(^VA(200,"BB","VISITOR",ORIEN1))&'$D(^VA(200,ORIEN1,"USC1",1,0)) Q
"RTN","ORWTPN",56,0)
 ..; Screen default cosigner selection:
"RTN","ORWTPN",57,0)
 ..I '$$SCRDFCS^TIULA3(ORUSER,ORIEN1) Q
"RTN","ORWTPN",58,0)
 ..S ORNODE=$P($G(^VA(200,ORIEN1,0)),U)
"RTN","ORWTPN",59,0)
 ..I '$L(ORNODE) Q
"RTN","ORWTPN",60,0)
 ..S ORNAME("IENS")=ORIEN1_","         ; For DIQ calls.
"RTN","ORWTPN",61,0)
 ..S ORI=ORI+1,ORY(ORI)=ORIEN1_"^"_$$NAMEFMT^XLFNAME(.ORNAME,"F","CcMP")
"RTN","ORWTPN",62,0)
 ..S ORHOLD=ORY(ORI)                   ; Save in case of duplication.
"RTN","ORWTPN",63,0)
 ..S ORDUP=0                           ; Init flag, check duplication.
"RTN","ORWTPN",64,0)
 ..I ($P(ORPREV_" "," ")=$P(ORFROM_" "," ")) S ORDUP=1
"RTN","ORWTPN",65,0)
 ..;
"RTN","ORWTPN",66,0)
 ..; Append Title if not duplicated:
"RTN","ORWTPN",67,0)
 ..I 'ORDUP D
"RTN","ORWTPN",68,0)
 ...S ORVALID=1                        ; Valid user, set flag.
"RTN","ORWTPN",69,0)
 ...S ORTTL=$$GET1^DIQ(200,ORIEN1,8)   ; Get Title.
"RTN","ORWTPN",70,0)
 ...I ORTTL="" Q
"RTN","ORWTPN",71,0)
 ...S ORY(ORI)=ORY(ORI)_U_"- "_ORTTL
"RTN","ORWTPN",72,0)
 ..;
"RTN","ORWTPN",73,0)
 ..; Get data in case of dupes:
"RTN","ORWTPN",74,0)
 ..I ORDUP D
"RTN","ORWTPN",75,0)
 ...S ORVALID=1                        ; Valid user(s), set flag.
"RTN","ORWTPN",76,0)
 ...S ORIENP2=ORLAST                   ; Use prev IEN for call to NP2.
"RTN","ORWTPN",77,0)
 ...;
"RTN","ORWTPN",78,0)
 ...; Reset, use previous array element, call for extended data:
"RTN","ORWTPN",79,0)
 ...S ORI=ORI-1,ORY(ORI)=$P(ORY(ORI),U)_U_$P(ORY(ORI),U,2)  D NP2^ORWU1
"RTN","ORWTPN",80,0)
 ...;
"RTN","ORWTPN",81,0)
 ...; Then return to current user for second extended data call:
"RTN","ORWTPN",82,0)
 ...S ORIENP2=ORIEN1,ORI=ORI+1  D NP2^ORWU1
"RTN","ORWTPN",83,0)
 ..S ORLAST=ORIEN1,ORPREV=ORFROM       ; Reassign vars for next pass.
"RTN","ORWTPN",84,0)
 ;
"RTN","ORWTPN",85,0)
 Q
"RTN","ORWTPN",86,0)
 ;
"RTN","ORWTPN",87,0)
GETDCOS(VALUE,USER) ; from ORWTPP
"RTN","ORWTPN",88,0)
 ; get default cosigner for user
"RTN","ORWTPN",89,0)
 N IEN,NAME,NODE
"RTN","ORWTPN",90,0)
 S NODE=+$O(^TIU(8926,"B",USER,0))
"RTN","ORWTPN",91,0)
 S IEN=+$P($G(^TIU(8926,NODE,0)),U,9)
"RTN","ORWTPN",92,0)
 S NAME=$P($G(^VA(200,IEN,0)),U)
"RTN","ORWTPN",93,0)
 S VALUE=IEN_U_NAME
"RTN","ORWTPN",94,0)
 Q
"RTN","ORWTPN",95,0)
 ;
"RTN","ORWTPN",96,0)
SETDCOS(OK,VALUE,USER) ; from ORWTPP
"RTN","ORWTPN",97,0)
 ; set default cosigner for user
"RTN","ORWTPN",98,0)
 N DA,DIE,DIK,DR,NODE,NUM
"RTN","ORWTPN",99,0)
 S OK=1
"RTN","ORWTPN",100,0)
 S VALUE=+$G(VALUE)
"RTN","ORWTPN",101,0)
 I 'VALUE S VALUE="@"
"RTN","ORWTPN",102,0)
 S NODE=+$O(^TIU(8926,"B",USER,0))
"RTN","ORWTPN",103,0)
 I 'NODE D  Q  ; make new entry if user does not have TIU preferences
"RTN","ORWTPN",104,0)
 .I 'VALUE Q
"RTN","ORWTPN",105,0)
 .I '$$SCRDFCS^TIULA3(USER,VALUE) Q
"RTN","ORWTPN",106,0)
 .L +^TIU(8926,0):5 I '$T S OK=0 Q
"RTN","ORWTPN",107,0)
 .S NUM=1+$P(^TIU(8926,0),U,3)
"RTN","ORWTPN",108,0)
 .F  Q:'$D(^TIU(8926,NUM,0))  S NUM=NUM+1
"RTN","ORWTPN",109,0)
 .S $P(^(0),U,4)=1+$P(^TIU(8926,0),U,4),$P(^(0),U,3)=NUM
"RTN","ORWTPN",110,0)
 .S ^TIU(8926,NUM,0)=USER_"^^^^^^^^"_VALUE
"RTN","ORWTPN",111,0)
 .L -^TIU(8926,0)
"RTN","ORWTPN",112,0)
 .S DA=NUM,DIK="^TIU(8926,"
"RTN","ORWTPN",113,0)
 .D IX1^DIK
"RTN","ORWTPN",114,0)
 I USER'=+$G(^TIU(8926,NODE,0)) Q
"RTN","ORWTPN",115,0)
 S DA=NODE,DIE="^TIU(8926,",DR=".09///"_$S(VALUE:"`"_VALUE,1:"@")
"RTN","ORWTPN",116,0)
 D ^DIE
"RTN","ORWTPN",117,0)
 Q
"RTN","ORWTPN",118,0)
 ;
"RTN","ORWTPN",119,0)
GETCLASS(VALUES) ; RPC
"RTN","ORWTPN",120,0)
 ; get available document classes
"RTN","ORWTPN",121,0)
 N CNT,NODE,NUM K VALUES
"RTN","ORWTPN",122,0)
 S CNT=0
"RTN","ORWTPN",123,0)
 S NUM=0 F  S NUM=$O(^TIU(8925.1,"AT","CL",NUM)) Q:NUM<1  D
"RTN","ORWTPN",124,0)
 .I '$$CLASPICK^TIULA4(38,NUM,"CL") Q
"RTN","ORWTPN",125,0)
 .S NODE=$G(^TIU(8925.1,NUM,0))
"RTN","ORWTPN",126,0)
 .I '$L(NODE) Q
"RTN","ORWTPN",127,0)
 .S CNT=CNT+1
"RTN","ORWTPN",128,0)
 .S VALUES(CNT)=NUM_U_NODE
"RTN","ORWTPN",129,0)
 Q
"RTN","ORWTPN",130,0)
 ;
"RTN","ORWTPN",131,0)
GETTC(VALUES,CLASS,FROM,DIR) ; RPC
"RTN","ORWTPN",132,0)
 ; get titles for a class
"RTN","ORWTPN",133,0)
 N CNT,IEN,NODE,NUM K VALUES
"RTN","ORWTPN",134,0)
 S CNT=44,NUM=0
"RTN","ORWTPN",135,0)
 F  Q:NUM>CNT  S FROM=$O(^TIU(8925.1,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORWTPN",136,0)
 .S IEN=0 F  S IEN=$O(^TIU(8925.1,"B",FROM,IEN)) Q:IEN<1  D
"RTN","ORWTPN",137,0)
 ..I '$D(^TIU(8925.1,"AT","DOC",IEN)) Q
"RTN","ORWTPN",138,0)
 ..I '$$ISA^TIULX(IEN,CLASS) Q
"RTN","ORWTPN",139,0)
 ..I '$$CANPICK^TIULP(IEN) Q
"RTN","ORWTPN",140,0)
 ..I '$$CANENTR^TIULP(IEN) Q
"RTN","ORWTPN",141,0)
 ..S NODE=$G(^TIU(8925.1,IEN,0))
"RTN","ORWTPN",142,0)
 ..I '$L(NODE) Q
"RTN","ORWTPN",143,0)
 ..S NUM=NUM+1
"RTN","ORWTPN",144,0)
 ..S VALUES(NUM)=IEN_U_NODE
"RTN","ORWTPN",145,0)
 Q
"RTN","ORWTPN",146,0)
 ;
"RTN","ORWTPN",147,0)
GETTU(VALUES,CLASS,USER) ; from ORWTPP
"RTN","ORWTPN",148,0)
 ; get titles for a user
"RTN","ORWTPN",149,0)
 N CNT,IEN,NUM,NUM1,NODE K VALUES
"RTN","ORWTPN",150,0)
 S CNT=0
"RTN","ORWTPN",151,0)
 S NUM=+$O(^TIU(8925.98,"AC",USER,CLASS,0))
"RTN","ORWTPN",152,0)
 I 'NUM Q
"RTN","ORWTPN",153,0)
 S NUM1=0 F  S NUM1=$O(^TIU(8925.98,NUM,10,NUM1)) Q:NUM1<1  D
"RTN","ORWTPN",154,0)
 .S IEN=+$G(^TIU(8925.98,NUM,10,NUM1,0))
"RTN","ORWTPN",155,0)
 .S NODE=$P($G(^TIU(8925.1,IEN,0)),U)
"RTN","ORWTPN",156,0)
 .I '$L(NODE) Q
"RTN","ORWTPN",157,0)
 .S CNT=CNT+1
"RTN","ORWTPN",158,0)
 .S VALUES(CNT)=IEN_U_NODE_U_(.0000001*$P(^TIU(8925.98,NUM,10,NUM1,0),U,2))_U_$P(^(0),U,3)
"RTN","ORWTPN",159,0)
 Q
"RTN","ORWTPN",160,0)
 ;
"RTN","ORWTPN",161,0)
GETTD(VALUE,CLASS,USER) ; from ORWTPP
"RTN","ORWTPN",162,0)
 ; get default title for user
"RTN","ORWTPN",163,0)
 N IEN,NUM,NODE
"RTN","ORWTPN",164,0)
 S VALUE=-1,USER=+$G(USER)
"RTN","ORWTPN",165,0)
 S NUM=+$O(^TIU(8925.98,"AC",USER,CLASS,0))
"RTN","ORWTPN",166,0)
 I 'NUM Q
"RTN","ORWTPN",167,0)
 S IEN=+$P($G(^TIU(8925.98,NUM,0)),U,3)
"RTN","ORWTPN",168,0)
 S NODE=$G(^TIU(8925.1,IEN,0))
"RTN","ORWTPN",169,0)
 I '$L(NODE) Q
"RTN","ORWTPN",170,0)
 S VALUE=IEN
"RTN","ORWTPN",171,0)
 Q
"RTN","ORWTPN",172,0)
 ;
"RTN","ORWTPN",173,0)
SAVET(OK,CLASS,DEFAULT,VALUES,USER) ; from ORWTPP
"RTN","ORWTPN",174,0)
 ; save titles for user
"RTN","ORWTPN",175,0)
 N CNT,DA,DIK,IEN,NUM,VALUE K DA
"RTN","ORWTPN",176,0)
 S CLASS=+$G(CLASS),DEFAULT=+$G(DEFAULT),OK=1
"RTN","ORWTPN",177,0)
 I DEFAULT'>0 S DEFAULT=""
"RTN","ORWTPN",178,0)
 S IEN=+$O(^TIU(8925.98,"AC",USER,CLASS,0))
"RTN","ORWTPN",179,0)
 I IEN D  Q
"RTN","ORWTPN",180,0)
 .S DA(1)=IEN
"RTN","ORWTPN",181,0)
 .S DIK="^TIU(8925.98,"_DA(1)_",10,"
"RTN","ORWTPN",182,0)
 .L +^TIU(8925.98,IEN):5 I '$T S OK=0 Q
"RTN","ORWTPN",183,0)
 .S DA=0 F  S DA=$O(^TIU(8925.98,IEN,10,DA)) Q:DA<1  D
"RTN","ORWTPN",184,0)
 ..D ^DIK
"RTN","ORWTPN",185,0)
 .S CNT=0
"RTN","ORWTPN",186,0)
 .S NUM=0 F  S NUM=$O(VALUES(NUM)) Q:NUM<1  D
"RTN","ORWTPN",187,0)
 ..S VALUE=+VALUES(NUM) I 'VALUE Q
"RTN","ORWTPN",188,0)
 ..S CNT=CNT+1
"RTN","ORWTPN",189,0)
 ..S ^TIU(8925.98,IEN,10,CNT,0)=VALUE_U_CNT_U_$P(VALUES(NUM),U,4)
"RTN","ORWTPN",190,0)
 .S ^TIU(8925.98,IEN,10,0)="^8925.9801IP^"_CNT_U_CNT
"RTN","ORWTPN",191,0)
 .S $P(^TIU(8925.98,IEN,0),U,3)=DEFAULT
"RTN","ORWTPN",192,0)
 .K DA S DA=IEN,DIK="^TIU(8925.98,"
"RTN","ORWTPN",193,0)
 .D IX1^DIK
"RTN","ORWTPN",194,0)
 .L -^TIU(8925.98,IEN)
"RTN","ORWTPN",195,0)
 S DA=1+$P(^TIU(8925.98,0),U,3)
"RTN","ORWTPN",196,0)
 L +^TIU(8925.98,0):5 I '$T S OK=0 Q
"RTN","ORWTPN",197,0)
 F  Q:'$D(^TIU(8925.98,DA))  S DA=DA+1
"RTN","ORWTPN",198,0)
 S ^TIU(8925.98,DA,0)=USER_U_CLASS_U_DEFAULT
"RTN","ORWTPN",199,0)
 S $P(^(0),U,4)=1+$P(^TIU(8925.98,0),U,4),$P(^(0),U,3)=DA
"RTN","ORWTPN",200,0)
 L -^TIU(8925.98,0)
"RTN","ORWTPN",201,0)
 S CNT=0
"RTN","ORWTPN",202,0)
 S NUM=0 F  S NUM=$O(VALUES(NUM)) Q:NUM<1  D
"RTN","ORWTPN",203,0)
 .S VALUE=+VALUES(NUM)
"RTN","ORWTPN",204,0)
 .I 'VALUE Q
"RTN","ORWTPN",205,0)
 .S CNT=CNT+1
"RTN","ORWTPN",206,0)
 .S ^TIU(8925.98,DA,10,CNT,0)=VALUE
"RTN","ORWTPN",207,0)
 S ^TIU(8925.98,DA,10,0)="^8925.9801IP^"_CNT_U_CNT
"RTN","ORWTPN",208,0)
 S DIK="^TIU(8925.98,"
"RTN","ORWTPN",209,0)
 D IX1^DIK
"RTN","ORWTPN",210,0)
 Q
"RTN","ORWU")
0^16^B58767029
"RTN","ORWU",1,0)
ORWU ; SLC/KCM - General Utilites for Windows Calls; 2/28/01 [10/6/03 10:38am]
"RTN","ORWU",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132,148,149,187**;Dec 17, 1997
"RTN","ORWU",3,0)
 ;
"RTN","ORWU",4,0)
DT(Y,X,%DT) ; Internal Fileman Date/Time
"RTN","ORWU",5,0)
 ; change the '00:00' that could be passed so Fileman doesn't reject
"RTN","ORWU",6,0)
 I $L($P(X,"@",2)),("00000000"[$TR($P(X,"@",2),":","")) S $P(X,"@",2)="00:00:01"
"RTN","ORWU",7,0)
 S %DT=$G(%DT,"TS") D ^%DT K %DT
"RTN","ORWU",8,0)
 Q
"RTN","ORWU",9,0)
VALDT(Y,X,%DT) ; Validate date/time
"RTN","ORWU",10,0)
 S:'$D(%DT) %DT="TX" D ^%DT
"RTN","ORWU",11,0)
 Q
"RTN","ORWU",12,0)
USERINFO(REC) ; Relevant info for current user
"RTN","ORWU",13,0)
 ; return DUZ^NAME^USRCLS^CANSIGN^ISPROVIDER^ORDERROLE^NOORDER^DTIME^
"RTN","ORWU",14,0)
 ;        COUNTDOWN^ENABLEVERIFY^NOTIFYAPPS^MSGHANG^DOMAIN^SERVICE^
"RTN","ORWU",15,0)
 ;        AUTOSAVE^INITTAB^LASTTAB^WEBACCESS^ALLOWHOLD^ISRPL^RPLLIST^
"RTN","ORWU",16,0)
 ;        CORTABS^RPTTAB^STANUM^GECSTATUS
"RTN","ORWU",17,0)
 N X,ORRPL,ORRPL1,ORRPL2,ORTAB,CORTABS,RPTTAB,ORDT,OREFF,OREXP,ORDATEOK
"RTN","ORWU",18,0)
 S REC=DUZ_U_$P(^VA(200,DUZ,0),U)
"RTN","ORWU",19,0)
 S $P(REC,U,3)=$S($D(^XUSEC("ORES",DUZ)):3,$D(^XUSEC("ORELSE",DUZ)):2,$D(^XUSEC("OREMAS",DUZ)):1,1:0)
"RTN","ORWU",20,0)
 S $P(REC,U,4)=$D(^XUSEC("ORES",DUZ))&$D(^XUSEC("PROVIDER",DUZ))
"RTN","ORWU",21,0)
 S $P(REC,U,5)=$D(^XUSEC("PROVIDER",DUZ))
"RTN","ORWU",22,0)
 S $P(REC,U,6)=$$ORDROLE
"RTN","ORWU",23,0)
 S $P(REC,U,7)=$$GET^XPAR("USR^SYS^PKG","ORWOR DISABLE ORDERING",1,"I")
"RTN","ORWU",24,0)
 S $P(REC,U,8)=$$GET^XPAR("USR^SYS","ORWOR TIMEOUT CHART",1,"I")
"RTN","ORWU",25,0)
 I '$P(REC,U,8),$G(DTIME) S $P(REC,U,8)=DTIME
"RTN","ORWU",26,0)
 S $P(REC,U,9)=$$GET^XPAR("USR^SYS^PKG","ORWOR TIMEOUT COUNTDOWN",1,"I")
"RTN","ORWU",27,0)
 S X=$$GET^XPAR("USR^SYS^PKG","ORWOR ENABLE VERIFY",1,"I")
"RTN","ORWU",28,0)
 S $P(REC,U,10)=$S(X=1:1,X=2:0,1:'$P(REC,U,7))
"RTN","ORWU",29,0)
 S $P(REC,U,11)=$$GET^XPAR("USR^SYS^PKG","ORWOR BROADCAST MESSAGES",1,"I")
"RTN","ORWU",30,0)
 S $P(REC,U,12)=$$GET^XPAR("USR^SYS^PKG","ORWOR AUTO CLOSE PT MSG",1,"I")
"RTN","ORWU",31,0)
 S $P(REC,U,13)=$$KSP^XUPARAM("WHERE")  ; domain
"RTN","ORWU",32,0)
 S $P(REC,U,14)=+$G(^VA(200,DUZ,5))     ; service/section
"RTN","ORWU",33,0)
 S $P(REC,U,15)=$$GET^XPAR("USR^SYS^PKG","ORWOR AUTOSAVE NOTE",1,"I")
"RTN","ORWU",34,0)
 S $P(REC,U,16)=$$GET^XPAR("USR^DIV^SYS^PKG","ORCH INITIAL TAB",1,"I")
"RTN","ORWU",35,0)
 S $P(REC,U,17)=$$GET^XPAR("USR^DIV^SYS^PKG","ORCH USE LAST TAB",1,"I")
"RTN","ORWU",36,0)
 S $P(REC,U,18)=$$GET^XPAR("USR^DIV^SYS^PKG","ORWOR DISABLE WEB ACCESS",1,"I")
"RTN","ORWU",37,0)
 S $P(REC,U,19)=$$GET^XPAR("SYS^PKG","ORWOR DISABLE HOLD ORDERS",1,"I")
"RTN","ORWU",38,0)
 ; 2 pieces added by PKS on 11/5/2001 for "Reports Only:"
"RTN","ORWU",39,0)
 ; IA# 10060 allows read access to ^VA(200 file.
"RTN","ORWU",40,0)
 S ORRPL=$G(^VA(200,DUZ,101))           ; RPL node.
"RTN","ORWU",41,0)
 S ORRPL1=$P(ORRPL,U)
"RTN","ORWU",42,0)
 S $P(REC,U,20)=ORRPL1                  ; ISRPL piece.
"RTN","ORWU",43,0)
 S ORRPL2=$P(ORRPL,U,2)
"RTN","ORWU",44,0)
 S $P(REC,U,21)=ORRPL2                  ; RPLLIST piece.
"RTN","ORWU",45,0)
 ;
"RTN","ORWU",46,0)
 ; Additional pieces for CPRS tabs access:
"RTN","ORWU",47,0)
 ; IA# 10060 allows read access to ^VA(200.01013 multiple.
"RTN","ORWU",48,0)
 S ORDT=DT                              ; Today.
"RTN","ORWU",49,0)
 S (CORTABS,RPTTAB)=0
"RTN","ORWU",50,0)
 S ORRPL=0
"RTN","ORWU",51,0)
 F  S ORRPL=$O(^VA(200,DUZ,"ORD",ORRPL)) Q:ORRPL<1  D
"RTN","ORWU",52,0)
 .S ORTAB=$G(^VA(200,DUZ,"ORD",ORRPL,0))
"RTN","ORWU",53,0)
 .I ORTAB="" Q
"RTN","ORWU",54,0)
 .S OREFF=$P(ORTAB,U,2)
"RTN","ORWU",55,0)
 .S OREXP=$P(ORTAB,U,3)
"RTN","ORWU",56,0)
 .S ORTAB=$P(ORTAB,U)
"RTN","ORWU",57,0)
 .I ORTAB="" Q
"RTN","ORWU",58,0)
 .S ORTAB=$G(^ORD(101.13,ORTAB,0))
"RTN","ORWU",59,0)
 .I ORTAB="" Q
"RTN","ORWU",60,0)
 .S ORTAB=$P(ORTAB,U)
"RTN","ORWU",61,0)
 .I ORTAB="" Q
"RTN","ORWU",62,0)
 .S ORTAB=$$UP^XLFSTR(ORTAB)
"RTN","ORWU",63,0)
 .S ORDATEOK=1                             ; Default.
"RTN","ORWU",64,0)
 .I ((OREFF="")!(OREFF>ORDT)) S ORDATEOK=0 ; Eff. date NG.
"RTN","ORWU",65,0)
 .I ORDATEOK  D
"RTN","ORWU",66,0)
 ..I OREXP="" Q                            ; No exp. date.
"RTN","ORWU",67,0)
 ..I (OREXP<ORDT) S ORDATEOK=0             ; Exp. date NG.
"RTN","ORWU",68,0)
 ..I (OREXP=ORDT) S ORDATEOK=0             ; Exp. date NG.
"RTN","ORWU",69,0)
 .;
"RTN","ORWU",70,0)
 .; Set TRUE if OK:
"RTN","ORWU",71,0)
 .I ((ORTAB="COR")&(ORDATEOK)) S CORTABS=1
"RTN","ORWU",72,0)
 .I ((ORTAB="RPT")&(ORDATEOK)) S RPTTAB=1
"RTN","ORWU",73,0)
 ;
"RTN","ORWU",74,0)
 ; When done, set all valid tabs for access:
"RTN","ORWU",75,0)
 S $P(REC,U,22)=CORTABS                 ; "Core" tabs.
"RTN","ORWU",76,0)
 S $P(REC,U,23)=RPTTAB                  ; "Reports" tab.
"RTN","ORWU",77,0)
 ;
"RTN","ORWU",78,0)
 S $P(REC,U,24)=$P($$SITE^VASITE,U,3)
"RTN","ORWU",79,0)
 ;S $P(REC,U,24)=$E($$STA^XUAF4(DUZ(2)),1,3)     ; DBIA #2171 - station number for CCOW
"RTN","ORWU",80,0)
 S $P(REC,U,25)=$$GET^XPAR("USR^TEA","PXRM GEC STATUS CHECK",1,"I")
"RTN","ORWU",81,0)
 Q
"RTN","ORWU",82,0)
 ;
"RTN","ORWU",83,0)
HASKEY(VAL,KEY) ; returns TRUE if the user possesses the security key
"RTN","ORWU",84,0)
 S VAL=''$D(^XUSEC(KEY,DUZ))
"RTN","ORWU",85,0)
 Q
"RTN","ORWU",86,0)
HASOPTN(VAL,OPTION) ; returns TRUE if the user has access to a menu option
"RTN","ORWU",87,0)
 S VAL=+$$ACCESS^XQCHK(DUZ,OPTION)
"RTN","ORWU",88,0)
 I VAL'>0 S VAL=0
"RTN","ORWU",89,0)
 E  S VAL=1
"RTN","ORWU",90,0)
 Q
"RTN","ORWU",91,0)
NPHASKEY(VAL,NP,KEY)    ; returns TRUE if the person has the security key
"RTN","ORWU",92,0)
 S VAL=''$D(^XUSEC(KEY,NP))
"RTN","ORWU",93,0)
 Q
"RTN","ORWU",94,0)
ORDROLE()    ; returns the role a person takes in ordering
"RTN","ORWU",95,0)
 ; VAL: 0=nokey, 1=clerk, 2=nurse, 3=physician, 4=student, 5=bad keys
"RTN","ORWU",96,0)
 ;I '$G(ORWCLVER) Q 0  ; version of client is to old for ordering
"RTN","ORWU",97,0)
 I ($D(^XUSEC("OREMAS",DUZ))+$D(^XUSEC("ORELSE",DUZ))+$D(^XUSEC("ORES",DUZ)))>1 Q 5
"RTN","ORWU",98,0)
 I $D(^XUSEC("OREMAS",DUZ)) Q 1                           ; clerk
"RTN","ORWU",99,0)
 I $D(^XUSEC("ORELSE",DUZ)) Q 2                           ; nurse
"RTN","ORWU",100,0)
 I $D(^XUSEC("ORES",DUZ)),$D(^XUSEC("PROVIDER",DUZ)) Q 3  ; doctor
"RTN","ORWU",101,0)
 I $D(^XUSEC("PROVIDER",DUZ)) Q 4                         ; student
"RTN","ORWU",102,0)
 Q 0
"RTN","ORWU",103,0)
VALIDSIG(ESOK,X) ; returns TRUE if valid electronic signature
"RTN","ORWU",104,0)
 S X=$$DECRYP^XUSRB1(X),ESOK=0                   ; network encrypted
"RTN","ORWU",105,0)
 D HASH^XUSHSHP
"RTN","ORWU",106,0)
 I X=$P($G(^VA(200,+DUZ,20)),U,4) S ESOK=1
"RTN","ORWU",107,0)
 Q
"RTN","ORWU",108,0)
TOOLMENU(ORLST) ; returns a list of items for the Tools menu
"RTN","ORWU",109,0)
 N ANENT
"RTN","ORWU",110,0)
 S ANENT="ALL^"_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+$G(^(5)),1:"")
"RTN","ORWU",111,0)
 D GETLST^XPAR(.ORLST,ANENT,"ORWT TOOLS MENU","N")
"RTN","ORWU",112,0)
 Q
"RTN","ORWU",113,0)
ACTLOC(LOC) ; Function: returns TRUE if active hospital location
"RTN","ORWU",114,0)
 ; IA# 10040:
"RTN","ORWU",115,0)
 N D0,X I +$G(^SC(LOC,"OOS")) Q 0                ; screen out OOS entry
"RTN","ORWU",116,0)
 S D0=+$G(^SC(LOC,42)) I D0 D WIN^DGPMDDCF Q 'X  ; chk out of svc wards
"RTN","ORWU",117,0)
 S X=$G(^SC(LOC,"I")) I +X=0 Q 1                 ; no inactivate date
"RTN","ORWU",118,0)
 I DT>$P(X,U)&($P(X,U,2)=""!(DT<$P(X,U,2))) Q 0  ; chk reactivate date
"RTN","ORWU",119,0)
 Q 1                                             ; must still be active
"RTN","ORWU",120,0)
 ;
"RTN","ORWU",121,0)
CLINLOC(Y,FROM,DIR) ; Return a set of clinics from HOSPITAL LOCATION
"RTN","ORWU",122,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",123,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",124,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D  ; IA# 10040.
"RTN","ORWU",125,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",126,0)
 . . I ($P($G(^SC(IEN,0)),U,3)'="C")!('$$ACTLOC(IEN)) Q
"RTN","ORWU",127,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",128,0)
 Q
"RTN","ORWU",129,0)
INPLOC(Y,FROM,DIR) ;Return a set of wards from HOSPITAL LOCATION
"RTN","ORWU",130,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",131,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",132,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D  ; IA# 10040.
"RTN","ORWU",133,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",134,0)
 . . I ($P($G(^SC(IEN,0)),U,3)'="W") Q
"RTN","ORWU",135,0)
 . . I '$$ACTLOC(IEN) Q
"RTN","ORWU",136,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",137,0)
 Q
"RTN","ORWU",138,0)
HOSPLOC(Y,FROM,DIR) ; Return a set of locations from HOSPITAL LOCATION
"RTN","ORWU",139,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",140,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",141,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D  ; IA# 10040.
"RTN","ORWU",142,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",143,0)
 . . I '$$ACTLOC(IEN) Q
"RTN","ORWU",144,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",145,0)
 Q
"RTN","ORWU",146,0)
NEWPERS(ORY,ORFROM,ORDIR,ORKEY,ORDATE,ORALLUSE,ORVIZ) ; Return a set of names from the NEW PERSON file.
"RTN","ORWU",147,0)
 ; SLC/PKS: Code moved to ORWU1 on 12/3/2002.
"RTN","ORWU",148,0)
 D NP1^ORWU1
"RTN","ORWU",149,0)
 Q
"RTN","ORWU",150,0)
GBLREF(VAL,FN) ; return global reference for file number
"RTN","ORWU",151,0)
 S VAL="" Q:'FN
"RTN","ORWU",152,0)
 S VAL=$$ROOT^DILFD(+FN)
"RTN","ORWU",153,0)
 ; I $E($RE(VAL))="," S VAL=$E(VAL,1,$L(VAL)-1)_")"
"RTN","ORWU",154,0)
 ; I $E($RE(VAL))="(" S VAL=$P(VAL,"(",1) 
"RTN","ORWU",155,0)
 Q
"RTN","ORWU",156,0)
GENERIC(Y,FROM,DIR,REF) ; Return a set of entries from xref in REF
"RTN","ORWU",157,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",158,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",159,0)
 F  Q:I'<CNT  S FROM=$O(@REF@(FROM),DIR) Q:FROM=""  D
"RTN","ORWU",160,0)
 . S IEN="" F  S IEN=$O(@REF@(FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",161,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",162,0)
 Q
"RTN","ORWU",163,0)
EXTNAME(VAL,IEN,FN) ; return external form of pointer
"RTN","ORWU",164,0)
 ; IEN=internal number, FN=file number
"RTN","ORWU",165,0)
 N REF S REF=$G(^DIC(FN,0,"GL")),VAL=""
"RTN","ORWU",166,0)
 I $L(REF),+IEN S VAL=$P($G(@(REF_IEN_",0)")),U)
"RTN","ORWU",167,0)
 Q
"RTN","ORWU",168,0)
PARAM(VAL,APARAM)       ; return a parameter value for a user
"RTN","ORWU",169,0)
 ; call assumes current user, default entities, single instance
"RTN","ORWU",170,0)
 S VAL=$$GET^XPAR("ALL",APARAM,1,"I")
"RTN","ORWU",171,0)
 Q
"RTN","ORWU",172,0)
DEVICE(Y,FROM,DIR) ; Return a subset of entries from the Device file
"RTN","ORWU",173,0)
 ; .LST(n)=IEN;Name^DisplayName^Location^RMar^PLen
"RTN","ORWU",174,0)
 ; FROM=text to $O from, DIR=$O direction
"RTN","ORWU",175,0)
 N I,IEN,CNT,SHOW,X S I=0,CNT=20
"RTN","ORWU",176,0)
 I FROM["<" S FROM=$RE($P($RE(FROM),"<  ",2))
"RTN","ORWU",177,0)
 F  Q:I'<CNT  S FROM=$O(^%ZIS(1,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",178,0)
 . S IEN=0 F  S IEN=$O(^%ZIS(1,"B",FROM,IEN)) Q:'IEN  D
"RTN","ORWU",179,0)
 .. N X0,X1,X90,X91,X95,XTYPE,XSTYPE,XTIME,%A,%X,POP
"RTN","ORWU",180,0)
 .. Q:'$D(^%ZIS(1,IEN,0))  S X0=^(0),X1=$G(^(1)),X90=$G(^(90)),X91=$G(^(91)),X95=$G(^(95)),XSTYPE=$G(^("SUBTYPE")),XTIME=$G(^("TIME")),XTYPE=$G(^("TYPE"))
"RTN","ORWU",181,0)
 .. I $E($G(^%ZIS(2,+XSTYPE,0)))'="P" Q  ;Printers only
"RTN","ORWU",182,0)
 .. S X=$P(XTYPE,"^") I X'="TRM",X'="HG",X'="HFS",X'="CHAN" Q  ;Device Types
"RTN","ORWU",183,0)
 .. S X=X0 I ($P(X,U,2)="0")!($P(X,U,12)=2) Q  ;Queuing allowed
"RTN","ORWU",184,0)
 .. S X=+X90 I X,(X'>DT) Q  ;Out of Service
"RTN","ORWU",185,0)
 .. I XTIME]"" S %A=$P(XTIME,"^"),%X=$P($H,",",2),%=%X\60#60+(%X\3600*100),%X=$P(%A,"-",2) I %X'<%A&(%'>%X&(%'<%A))!(%X<%A&(%'<%A!(%'>%X))) Q  ;Prohibited Times
"RTN","ORWU",186,0)
 .. S POP=0
"RTN","ORWU",187,0)
 .. I X95]"" S %X=$G(DUZ(0)) I %X'="@" S POP=1 F %A=1:1:$L(%X) I X95[$E(%X,%A) S POP=0 Q
"RTN","ORWU",188,0)
 .. Q:POP  ;Security check
"RTN","ORWU",189,0)
 .. S SHOW=$P(X0,U) I SHOW'=FROM S SHOW=FROM_"  <"_SHOW_">"
"RTN","ORWU",190,0)
 .. S I=I+1,Y(I)=IEN_";"_$P(X0,U)_U_SHOW_U_$P(X1,U)_U_$P(X91,U)_U_$P(X91,U,3)
"RTN","ORWU",191,0)
 Q
"RTN","ORWU",192,0)
URGENCY(Y) ; -- retrieve set values from dd for discharge summary urgency
"RTN","ORWU",193,0)
 N ORDD,I,X
"RTN","ORWU",194,0)
 D FIELD^DID(8925,.09,"","POINTER","ORDD")
"RTN","ORWU",195,0)
 F I=1:1 S X=$P(ORDD("POINTER"),";",I) Q:X=""   S Y(I)=$TR(X,":","^")
"RTN","ORWU",196,0)
 Q
"RTN","ORWU",197,0)
PATCH(VAL,X) ; Return 1 if patch X is installed
"RTN","ORWU",198,0)
 S VAL=$$PATCH^XPDUTL(X)
"RTN","ORWU",199,0)
 Q
"RTN","ORWU",200,0)
VERSRV(VAL,X,CLVER)   ; Return server version of option name
"RTN","ORWU",201,0)
 S ORWCLVER=$G(CLVER)  ; leave in partition for session
"RTN","ORWU",202,0)
 N BADVAL,ORLST
"RTN","ORWU",203,0)
 D FIND^DIC(19,"",1,"X",X,1,,,,"ORLST")
"RTN","ORWU",204,0)
 I 'ORLST("DILIST",0) S VAL="0.0.0.0" Q
"RTN","ORWU",205,0)
 S VAL=ORLST("DILIST","ID",1,1)
"RTN","ORWU",206,0)
 S VAL=$P(VAL,"version ",2)
"RTN","ORWU",207,0)
 S BADVAL=0
"RTN","ORWU",208,0)
 I $P(VAL,".",1)="" S BADVAL=1
"RTN","ORWU",209,0)
 I $P(VAL,".",2)="" S BADVAL=1
"RTN","ORWU",210,0)
 I $P(VAL,".",3)="" S BADVAL=1
"RTN","ORWU",211,0)
 I $P(VAL,".",4)="" S BADVAL=1
"RTN","ORWU",212,0)
 I ((BADVAL)!('VAL)!(VAL="")) S VAL="0.0.0.0"
"RTN","ORWU",213,0)
 ;N IEN S VAL="",IEN=$O(^DIC(19,"B",X,0)) Q:'IEN
"RTN","ORWU",214,0)
 ;S VAL=$P($P($G(^DIC(19,IEN,0)),U,2),"version ",2)
"RTN","ORWU",215,0)
 Q
"RTN","ORWU1")
0^17^B26936719
"RTN","ORWU1",1,0)
ORWU1 ;SLC/GRE - General Utilities for Windows Calls [10/15/03 1:52pm]
"RTN","ORWU1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**149,187**;Dec 17, 1997
"RTN","ORWU1",3,0)
 ;
"RTN","ORWU1",4,0)
 Q
"RTN","ORWU1",5,0)
 ;
"RTN","ORWU1",6,0)
NP1 ; Return a set of names from the NEW PERSON file.
"RTN","ORWU1",7,0)
 ; (PKS/8/5/2003: Now called by NEWPERS^ORWU; internal mods made.)
"RTN","ORWU1",8,0)
 ; (Keep GETCOS^ORWTPN up to date with matching logic/code, too.)
"RTN","ORWU1",9,0)
 ;
"RTN","ORWU1",10,0)
 ; PARAMS from NEWPERS^ORWU call:
"RTN","ORWU1",11,0)
 ;  .ORY=returned list, ORFROM=text to $O from, ORDIR=$O direction.
"RTN","ORWU1",12,0)
 ;  ORKEY=Screen users by security key (optional).
"RTN","ORWU1",13,0)
 ;  ORDATE=Checks for an active person class on this date (optional).
"RTN","ORWU1",14,0)
 ;  ORALLUSE=If not true, screens for providers; currently that
"RTN","ORWU1",15,0)
 ;           amounts to only a check for terminated users (optional).
"RTN","ORWU1",16,0)
 ;  ORVIZ=If true, includes RDV users; otherwise not (optional).
"RTN","ORWU1",17,0)
 ;
"RTN","ORWU1",18,0)
 N OR1DIV,ORCNT,ORDD,ORDIV,ORDUP,ORGOOD,ORHOLD,ORI,ORIEN1,ORIEN2,ORIENP2,ORLAST,ORMAX,ORMRK,ORMULTI,ORNAME,ORPREV,ORSRV,ORTTL,ORVALID
"RTN","ORWU1",19,0)
 ;
"RTN","ORWU1",20,0)
 S ORI=0,ORMAX=44,(ORLAST,ORPREV)="",ORKEY=$G(ORKEY),ORDATE=$G(ORDATE)
"RTN","ORWU1",21,0)
 S ORMULTI=$$ALL^VASITE ; Do once at beginning of call.
"RTN","ORWU1",22,0)
 S ORNAME("FILE")=200,ORNAME("FIELD")=.01 ; Array for XLFNAME call.
"RTN","ORWU1",23,0)
 ;
"RTN","ORWU1",24,0)
 F  Q:ORI'<ORMAX  S ORFROM=$O(^VA(200,"B",ORFROM),ORDIR) Q:ORFROM=""  D
"RTN","ORWU1",25,0)
 .S ORVALID=0                                     ; Init each time.
"RTN","ORWU1",26,0)
 .S ORIEN1=""
"RTN","ORWU1",27,0)
 .F  S ORIEN1=$O(^VA(200,"B",ORFROM,ORIEN1),ORDIR) Q:'ORIEN1  D
"RTN","ORWU1",28,0)
 ..;
"RTN","ORWU1",29,0)
 ..; Screen out RDVs if applicable:
"RTN","ORWU1",30,0)
 ..I +$G(ORVIZ)=0,$D(^VA(200,"BB","VISITOR",ORIEN1))&'$D(^VA(200,ORIEN1,"USC1",1,0)) Q
"RTN","ORWU1",31,0)
 ..I $L(ORKEY),'$D(^XUSEC(ORKEY,+ORIEN1)) Q
"RTN","ORWU1",32,0)
 ..I +$G(ORALLUSE)=0,'$$PROVIDER^XUSER(ORIEN1) Q  ; Terminated users.
"RTN","ORWU1",33,0)
 ..I ORDATE>0,$$GET^XUA4A72(ORIEN1,ORDATE)<1 Q
"RTN","ORWU1",34,0)
 ..S ORNAME("IENS")=ORIEN1_","                    ; For DIQ calls.
"RTN","ORWU1",35,0)
 ..S ORI=ORI+1,ORY(ORI)=ORIEN1_"^"_$$NAMEFMT^XLFNAME(.ORNAME,"F","CcMP")
"RTN","ORWU1",36,0)
 ..S ORHOLD=ORY(ORI)                   ; Save in case of duplication.
"RTN","ORWU1",37,0)
 ..S ORDUP=0                           ; Init flag, check duplication.
"RTN","ORWU1",38,0)
 ..I ($P(ORPREV_" "," ")=$P(ORFROM_" "," ")) S ORDUP=1
"RTN","ORWU1",39,0)
 ..;
"RTN","ORWU1",40,0)
 ..; Append Title if not duplicated:
"RTN","ORWU1",41,0)
 ..I 'ORDUP D
"RTN","ORWU1",42,0)
 ...S ORVALID=1                        ; Valid user, set flag.
"RTN","ORWU1",43,0)
 ...S ORTTL=$$GET1^DIQ(200,ORIEN1,8)   ; Get Title.
"RTN","ORWU1",44,0)
 ...I ORTTL="" Q
"RTN","ORWU1",45,0)
 ...S ORY(ORI)=ORY(ORI)_U_"- "_ORTTL
"RTN","ORWU1",46,0)
 ..;
"RTN","ORWU1",47,0)
 ..; Get data in case of dupes:
"RTN","ORWU1",48,0)
 ..I ORDUP D
"RTN","ORWU1",49,0)
 ...S ORVALID=1                        ; Valid user(s), set flag.
"RTN","ORWU1",50,0)
 ...S ORIENP2=ORLAST                   ; Use prev IEN for call to NP2.
"RTN","ORWU1",51,0)
 ...;
"RTN","ORWU1",52,0)
 ...; Reset, use previous array element, call for extended data:
"RTN","ORWU1",53,0)
 ...S ORI=ORI-1,ORY(ORI)=$P(ORY(ORI),U)_U_$P(ORY(ORI),U,2)  D NP2
"RTN","ORWU1",54,0)
 ...;
"RTN","ORWU1",55,0)
 ...; Then return to current user for second extended data call:
"RTN","ORWU1",56,0)
 ...S ORIENP2=ORIEN1,ORI=ORI+1  D NP2
"RTN","ORWU1",57,0)
 ..S ORLAST=ORIEN1,ORPREV=ORFROM       ; Reassign vars for next pass.
"RTN","ORWU1",58,0)
 ;
"RTN","ORWU1",59,0)
 Q
"RTN","ORWU1",60,0)
 ;
"RTN","ORWU1",61,0)
NP2 ; Retrieve subset of data for dupes in NP1.
"RTN","ORWU1",62,0)
 ; (Assumes certain vars already set/new'd.)
"RTN","ORWU1",63,0)
 ;
"RTN","ORWU1",64,0)
 S (ORDIV,ORSRV,ORTTL)=""              ; Reset.
"RTN","ORWU1",65,0)
 S ORIEN2=ORIENP2_","                  ; IEN + comma for DIQ calls.
"RTN","ORWU1",66,0)
 S ORTTL=$$GET1^DIQ(200,ORIEN2,8)      ; Get Title.
"RTN","ORWU1",67,0)
 S ORSRV=$$GET1^DIQ(200,ORIEN2,29)     ; Get Service/Section.
"RTN","ORWU1",68,0)
 ;
"RTN","ORWU1",69,0)
 ; For multi-divisional site, get Division if determinable:
"RTN","ORWU1",70,0)
 I ORMULTI D
"RTN","ORWU1",71,0)
 .; ^TMP("DILIST" is written by the API call: LIST^DIC below:
"RTN","ORWU1",72,0)
 .K ^TMP("DILIST",$J)                  ; Cleanup.
"RTN","ORWU1",73,0)
 .D LIST^DIC(200.02,","_ORIENP2_",",".01;1","Q",,,,,,,)
"RTN","ORWU1",74,0)
 .S OR1DIV="",(ORDD,ORGOOD,ORCNT)=0
"RTN","ORWU1",75,0)
 .F  S ORDD=$O(^TMP("DILIST",$J,"ID",ORDD)) Q:+ORDD=0!'($L(ORDD))  D  Q:ORGOOD
"RTN","ORWU1",76,0)
 ..S ORCNT=ORCNT+1                     ; Increment counter.
"RTN","ORWU1",77,0)
 ..I ORCNT=1 D
"RTN","ORWU1",78,0)
 ...I $D(^TMP("DILIST",$J,"ID",ORDD,01)) D
"RTN","ORWU1",79,0)
 ....S OR1DIV=$G(^TMP("DILIST",$J,"ID",ORDD,.01))
"RTN","ORWU1",80,0)
 ..I $G(^TMP("DILIST",$J,"ID",ORDD,1))="Yes" S ORDIV=$G(^TMP("DILIST",$J,"ID",ORDD,.01)),ORGOOD=1  Q        ; Division text.
"RTN","ORWU1",81,0)
 .K ^TMP("DILIST",$J)                  ; Cleanup.
"RTN","ORWU1",82,0)
 .I ((ORCNT=1)&(ORDIV="")) D
"RTN","ORWU1",83,0)
 ..I OR1DIV'="" S ORDIV=OR1DIV         ; Only one? - use it.
"RTN","ORWU1",84,0)
 ;
"RTN","ORWU1",85,0)
 ; Append new pieces to array string.
"RTN","ORWU1",86,0)
 S ORMRK=""
"RTN","ORWU1",87,0)
 I (ORTTL="")&(ORSRV="")&(ORDIV="")  Q  ; Nothing to append.
"RTN","ORWU1",88,0)
 S ORY(ORI)=ORY(ORI)_U_"- "             ; At least something exists.
"RTN","ORWU1",89,0)
 I (ORTTL'="") S ORY(ORI)=ORY(ORI)_ORTTL,ORMRK=", "       ; Title.
"RTN","ORWU1",90,0)
 I (ORSRV'="") S ORY(ORI)=ORY(ORI)_ORMRK_ORSRV,ORMRK=", " ; Service.
"RTN","ORWU1",91,0)
 I (ORDIV'="") S ORY(ORI)=ORY(ORI)_ORMRK_ORDIV            ; Division.
"RTN","ORWU1",92,0)
 ;
"RTN","ORWU1",93,0)
 Q
"RTN","ORWU1",94,0)
 ;
"RTN","ORWU1",95,0)
NAMECVT(Y,IEN) ; Returns text name(mixed-case) derived from IEN xref.
"RTN","ORWU1",96,0)
 ; GRE/2002
"RTN","ORWU1",97,0)
 ; PKS-12/20/2002 Tag not presently used.
"RTN","ORWU1",98,0)
 ; Y=Returned value, IEN=Internal number
"RTN","ORWU1",99,0)
 N ORNAME
"RTN","ORWU1",100,0)
 S IEN=IEN_","
"RTN","ORWU1",101,0)
 S ORNAME=$$GET1^DIQ(200,IEN,20.2)
"RTN","ORWU1",102,0)
 S Y=$$NAMEFMT^XLFNAME(.ORNAME,"F","DcMP")
"RTN","ORWU1",103,0)
 Q
"RTN","ORWU1",104,0)
 ;
"RTN","ORWU1",105,0)
DEFDIV(Y) ; Return user's default division, if specified.
"RTN","ORWU1",106,0)
 ;
"RTN","ORWU1",107,0)
 ; Variables used:
"RTN","ORWU1",108,0)
 ;   ORDD   = Default division.
"RTN","ORWU1",109,0)
 ;   ORDIV  = Division holder variable.
"RTN","ORWU1",110,0)
 ;   ORGOOD = Flag for successful default division found.
"RTN","ORWU1",111,0)
 ;   ORIEN  = IEN of user.
"RTN","ORWU1",112,0)
 ;   Y      = Returned value.
"RTN","ORWU1",113,0)
 ;
"RTN","ORWU1",114,0)
 N ORDD,ORDIV,ORGOOD
"RTN","ORWU1",115,0)
 ;
"RTN","ORWU1",116,0)
 S ORIEN=DUZ,ORDIV=""
"RTN","ORWU1",117,0)
 K ^TMP("DILIST",$J) ; Cleanup.
"RTN","ORWU1",118,0)
 S Y=0,(ORDD,ORGOOD)=0             ; Initialize variables.
"RTN","ORWU1",119,0)
 ;
"RTN","ORWU1",120,0)
 ; Get list of divisions from NEW PERSON file multiple:
"RTN","ORWU1",121,0)
 D LIST^DIC(200.02,","_ORIEN_",",".01;1","Q",,,,,,,)
"RTN","ORWU1",122,0)
 ;
"RTN","ORWU1",123,0)
 ; Iterate through list:
"RTN","ORWU1",124,0)
 F  S ORDD=$O(^TMP("DILIST",$J,"ID",ORDD)) Q:+ORDD=0!'($L(ORDD))  D  Q:ORGOOD
"RTN","ORWU1",125,0)
 .I $G(^TMP("DILIST",$J,"ID",ORDD,1))="Yes" S ORDIV=$G(^TMP("DILIST",$J,"ID",ORDD,.01)),ORGOOD=1  Q     ; Division text.
"RTN","ORWU1",126,0)
 K ^TMP("DILIST",$J)               ; Cleanup.
"RTN","ORWU1",127,0)
 I (ORDIV="") Q                    ; Punt if no default division.
"RTN","ORWU1",128,0)
 I $$UP^XLFSTR(ORDIV)="SALT LAKE CITY OIFO" S Y=1
"RTN","ORWU1",129,0)
 ;
"RTN","ORWU1",130,0)
 Q
"RTN","ORWU1",131,0)
 ;
"RTN","ORWU1",132,0)
NEWLOC(Y,ORFROM,DIR) ; Return "CZ" locations from HOSPITAL LOCATION file.
"RTN","ORWU1",133,0)
 ; C=Clinics, Z=Other, screened by $$ACTLOC^ORWU.
"RTN","ORWU1",134,0)
 ; .Y=returned list, ORFROM=text to $O from, DIR=$O direction.
"RTN","ORWU1",135,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU1",136,0)
 F  Q:I'<CNT  S ORFROM=$O(^SC("B",ORFROM),DIR) Q:ORFROM=""  D  ; IA# 10040.
"RTN","ORWU1",137,0)
 . S IEN="" F  S IEN=$O(^SC("B",ORFROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU1",138,0)
 . . Q:("CZ"'[$P($G(^SC(IEN,0)),U,3)!('$$ACTLOC^ORWU(IEN)))
"RTN","ORWU1",139,0)
 . . S I=I+1,Y(I)=IEN_"^"_ORFROM
"RTN","ORWU1",140,0)
 Q
"RTN","ORWU1",141,0)
 ;
"RTN","ORY187")
0^^B4052190
"RTN","ORY187",1,0)
ORY187 ;SLC/PKS -- postinit rtn for OR*3*187;7/2/2003  06:25 [2/4/04 9:43am]
"RTN","ORY187",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**187**;Dec 17, 1997
"RTN","ORY187",3,0)
 ;
"RTN","ORY187",4,0)
 Q
"RTN","ORY187",5,0)
 ;
"RTN","ORY187",6,0)
PRE ; -- preinit
"RTN","ORY187",7,0)
 ;
"RTN","ORY187",8,0)
 Q
"RTN","ORY187",9,0)
 ;
"RTN","ORY187",10,0)
POST ; -- postinit
"RTN","ORY187",11,0)
 ;
"RTN","ORY187",12,0)
 N VER
"RTN","ORY187",13,0)
 ;
"RTN","ORY187",14,0)
 S VER=$P($T(VERSION^ORY187),";",3)
"RTN","ORY187",15,0)
 I +$$PATCH^XPDUTL("TIU*1.0*112") D SURGREG
"RTN","ORY187",16,0)
 D SETVAL
"RTN","ORY187",17,0)
 D MAIL
"RTN","ORY187",18,0)
 ;
"RTN","ORY187",19,0)
 Q
"RTN","ORY187",20,0)
 ;
"RTN","ORY187",21,0)
SURGREG ; Register TIU SURGERY RPCs if TIU*1.0*112 present
"RTN","ORY187",22,0)
 N MENU,RPC
"RTN","ORY187",23,0)
 S MENU="OR CPRS GUI CHART"
"RTN","ORY187",24,0)
 F RPC="TIU IS THIS A SURGERY?","TIU IDENTIFY SURGERY CLASS","TIU LONG LIST SURGERY TITLES","TIU GET DOCUMENTS FOR REQUEST" D INSERT(MENU,RPC)
"RTN","ORY187",25,0)
 Q
"RTN","ORY187",26,0)
 ;
"RTN","ORY187",27,0)
INSERT(OPTION,RPC) ; Call FM Updater with each RPC
"RTN","ORY187",28,0)
 ; Input  -- OPTION   Option file (#19) Name field (#.01)
"RTN","ORY187",29,0)
 ;           RPC      RPC sub-file (#19.05) RPC field (#.01)
"RTN","ORY187",30,0)
 ; Output -- None
"RTN","ORY187",31,0)
 N FDA,FDAIEN,ERR,DIERR
"RTN","ORY187",32,0)
 S FDA(19,"?1,",.01)=OPTION
"RTN","ORY187",33,0)
 S FDA(19.05,"?+2,?1,",.01)=RPC
"RTN","ORY187",34,0)
 D UPDATE^DIE("E","FDA","FDAIEN","ERR")
"RTN","ORY187",35,0)
 Q
"RTN","ORY187",36,0)
 ;
"RTN","ORY187",37,0)
SENDPAR(ANAME) ; Return true if the current parameter should be sent.
"RTN","ORY187",38,0)
 Q 0
"RTN","ORY187",39,0)
 ;
"RTN","ORY187",40,0)
SETVAL ;       Set package-level values for params
"RTN","ORY187",41,0)
 N VAL S VAL=1
"RTN","ORY187",42,0)
 Q
"RTN","ORY187",43,0)
 ;
"RTN","ORY187",44,0)
MAIL ; send bulletin of installation time
"RTN","ORY187",45,0)
 N COUNT,DIFROM,I,START,TEXT,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","ORY187",46,0)
 S COUNT=0
"RTN","ORY187",47,0)
 S XMSUB="Version "_$P($T(VERSION),";;",2)_" Installed"
"RTN","ORY187",48,0)
 S XMDUZ="CPRS PACKAGE"
"RTN","ORY187",49,0)
 F I="G.CPRS GUI INSTALL@ISC-SLC.VA.GOV",DUZ S XMY(I)=""
"RTN","ORY187",50,0)
 S XMTEXT="TEXT("
"RTN","ORY187",51,0)
 ;
"RTN","ORY187",52,0)
 S X=$P($T(VERSION),";;",2)
"RTN","ORY187",53,0)
 D LINE("Version "_X_" has been installed.")
"RTN","ORY187",54,0)
 D LINE(" ")
"RTN","ORY187",55,0)
 D LINE("Install complete:  "_$$FMTE^XLFDT($$NOW^XLFDT()))
"RTN","ORY187",56,0)
 ;
"RTN","ORY187",57,0)
 D ^XMD
"RTN","ORY187",58,0)
 Q
"RTN","ORY187",59,0)
 ;
"RTN","ORY187",60,0)
LINE(DATA)      ; set text into array
"RTN","ORY187",61,0)
 S COUNT=COUNT+1
"RTN","ORY187",62,0)
 S TEXT(COUNT)=DATA
"RTN","ORY187",63,0)
 Q
"RTN","ORY187",64,0)
 ;
"RTN","ORY187",65,0)
VERSION ;;23.15
"VER")
8.0^22.0
"^DD",100,100,0)
FIELD^^68^48
"^DD",100,100,0,"DDA")
N
"^DD",100,100,0,"DIK")
ORD2
"^DD",100,100,0,"DIKOLD")
ORD2
"^DD",100,100,0,"DT")
3030521
"^DD",100,100,0,"IX","AC",100,.02)

"^DD",100,100,0,"IX","AC1",100.008,.01)

"^DD",100,100,0,"IX","ACT1",100,.02)

"^DD",100,100,0,"IX","ACT2",100,23)

"^DD",100,100,0,"IX","ACT3",100.008,.01)

"^DD",100,100,0,"IX","AD",100,21)

"^DD",100,100,0,"IX","AE",100,22)

"^DD",100,100,0,"IX","AF",100.008,.01)

"^DD",100,100,0,"IX","AOI",100.001,.01)

"^DD",100,100,0,"IX","AOI1",100,.02)

"^DD",100,100,0,"IX","AOI2",100,21)

"^DD",100,100,0,"IX","AR",100,.02)

"^DD",100,100,0,"IX","AR1",100.008,16)

"^DD",100,100,0,"IX","AS",100,.02)

"^DD",100,100,0,"IX","AS1",100.008,.01)

"^DD",100,100,0,"IX","AS2",100.008,4)

"^DD",100,100,0,"IX","AW",100,.02)

"^DD",100,100,0,"IX","AW1",100,23)

"^DD",100,100,0,"IX","AW2",100,21)

"^DD",100,100,0,"IX","AZ",100,.01)

"^DD",100,100,0,"NM","ORDER")

"^DD",100,100,0,"PT",55.05,7)

"^DD",100,100,0,"PT",69.03,6)

"^DD",100,100,0,"PT",75.1,7)

"^DD",100,100,0,"PT",100,9)

"^DD",100,100,0,"PT",100,9.1)

"^DD",100,100,0,"PT",100,36)

"^DD",100,100,0,"PT",100.002,.01)

"^DD",100,100,0,"PT",100.2,4)

"^DD",100,100,0,"PT",100.26,.01)

"^DD",100,100,0,"PT",100.27,.01)

"^DD",100,100,0,"PT",100.99,14)

"^DD",100,100,0,"PT",115.01,10)

"^DD",100,100,0,"PT",115.02,13)

"^DD",100,100,0,"PT",115.03,11)

"^DD",100,100,0,"PT",115.03,12)

"^DD",100,100,0,"PT",115.04,13)

"^DD",100,100,0,"PT",115.05,6)

"^DD",100,100,0,"PT",115.06,7)

"^DD",100,100,0,"PT",120.55,.01)

"^DD",100,100,0,"PT",123,.03)

"^DD",100,100,0,"PT",130,100)

"^DD",100,100,0,"PT",668,19)

"^DD",100,100,0,"PT",691,1000)

"^DD",100,100,0,"PT",691.1,1000)

"^DD",100,100,0,"PT",691.5,1000)

"^DD",100,100,0,"PT",691.6,1000)

"^DD",100,100,0,"PT",691.7,1000)

"^DD",100,100,0,"PT",691.8,1000)

"^DD",100,100,0,"PT",694,1000)

"^DD",100,100,0,"PT",698,1000)

"^DD",100,100,0,"PT",698.1,1000)

"^DD",100,100,0,"PT",698.2,1000)

"^DD",100,100,0,"PT",698.3,1000)

"^DD",100,100,0,"PT",699,1000)

"^DD",100,100,0,"PT",699.5,1000)

"^DD",100,100,0,"PT",700,1000)

"^DD",100,100,0,"PT",701,1000)

"^DD",100,100,0,"PT",8925,1210)

"^DD",100,100,0,"VRPK")
OR
"^DD",100,100,.01,0)
ORDER #^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<0) X I $D(X) S DINUM=X
"^DD",100,100,.01,.1)

"^DD",100,100,.01,1,0)
^.1
"^DD",100,100,.01,1,1,0)
100^AZ^MUMPS
"^DD",100,100,.01,1,1,1)
S ^OR(100,"AZ",DA,$P(^OR(100,DA,0),U,2))=""
"^DD",100,100,.01,1,1,2)
Q
"^DD",100,100,.01,1,1,"DT")
2990107
"^DD",100,100,.01,3)
Enter the order number.
"^DD",100,100,.01,21,0)
^^1^1^2920225^^^^
"^DD",100,100,.01,21,1,0)
This is the internal order number of the file.
"^DD",100,100,.01,"DT")
2990107
"^DD",100,100,.02,0)
OBJECT OF ORDER^RV^^0;2^Q
"^DD",100,100,.02,1,0)
^.1^^-1
"^DD",100,100,.02,1,2,0)
100^AC^MUMPS
"^DD",100,100,.02,1,2,1)
D SETALL^ORDD100(DA)
"^DD",100,100,.02,1,2,2)
D KILALL^ORDD100(DA)
"^DD",100,100,.02,1,2,"%D",0)
^^4^4^2971028^
"^DD",100,100,.02,1,2,"%D",1,0)
^OR(100,"AC",ORVP,9999999-ORLOG,ORIFN,DA)
"^DD",100,100,.02,1,2,"%D",2,0)
Allows retrieval of "active" orders; includes orders with any kind of
"^DD",100,100,.02,1,2,"%D",3,0)
active status, as well as those that have ended w/in the Active Orders
"^DD",100,100,.02,1,2,"%D",4,0)
Context Hours.
"^DD",100,100,.02,1,2,"DT")
2960830
"^DD",100,100,.02,1,5,0)
100^AS^MUMPS
"^DD",100,100,.02,1,5,1)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D S1^ORDD100(DA,ORDA,X)
"^DD",100,100,.02,1,5,2)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,9,ORDA)) Q:ORDA'>0  D S2^ORDD100(DA,ORDA,X)
"^DD",100,100,.02,1,5,"%D",0)
^^2^2^2971028^^^
"^DD",100,100,.02,1,5,"%D",1,0)
^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,DA)
"^DD",100,100,.02,1,5,"%D",2,0)
Allows retrieval of unsigned orders.
"^DD",100,100,.02,1,5,"DT")
2910624
"^DD",100,100,.02,1,7,0)
100^AR^MUMPS
"^DD",100,100,.02,1,7,1)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D RS^ORDD100(DA,ORDA,X)
"^DD",100,100,.02,1,7,2)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D RK^ORDD100(DA,ORDA,X)
"^DD",100,100,.02,1,7,"%D",0)
^^2^2^2980602^
"^DD",100,100,.02,1,7,"%D",1,0)
^OR(100,"AR",ORVP,9999999-ORRDT,ORIFN,ORDA)
"^DD",100,100,.02,1,7,"%D",2,0)
Allows retrieval of orders by inverse date released.
"^DD",100,100,.02,1,7,"DT")
2980602
"^DD",100,100,.02,1,9,0)
100^AW^MUMPS
"^DD",100,100,.02,1,9,1)
D WS^ORDD100
"^DD",100,100,.02,1,9,2)
D WK^ORDD100
"^DD",100,100,.02,1,9,"%D",0)
^^2^2^2971028^^^
"^DD",100,100,.02,1,9,"%D",1,0)
^OR(100,"AW",ORVP,ORDG,ORSTRT,ORIFN)
"^DD",100,100,.02,1,9,"%D",2,0)
Allows retrieval of orders by display group.
"^DD",100,100,.02,1,9,"DT")
2920526
"^DD",100,100,.02,1,10,0)
100^AOI1^MUMPS
"^DD",100,100,.02,1,10,1)
D OI1^ORDD100A(DA)
"^DD",100,100,.02,1,10,2)
D OI2^ORDD100A(DA)
"^DD",100,100,.02,1,10,"%D",0)
^^2^2^2971028^^^
"^DD",100,100,.02,1,10,"%D",1,0)
^OR(100,"AOI",ORIT,ORVP,9999999-ORSTRT,ORIFN)
"^DD",100,100,.02,1,10,"%D",2,0)
Allows retrieval of patients for whom an item has been ordered.
"^DD",100,100,.02,1,10,"DT")
2960404
"^DD",100,100,.02,1,11,0)
100^ACT1^MUMPS
"^DD",100,100,.02,1,11,1)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D ACT1^ORDD100A(DA,ORDA,,X)
"^DD",100,100,.02,1,11,2)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D ACT2^ORDD100A(DA,ORDA,,X)
"^DD",100,100,.02,1,11,"%D",0)
^^2^2^2971028^^^^
"^DD",100,100,.02,1,11,"%D",1,0)
^OR(100,"ACT",ORVP,9999999-ORLOG,ORDG,ORIFN,DA)
"^DD",100,100,.02,1,11,"%D",2,0)
Allows retrieval of orders in reverse-chronological order.
"^DD",100,100,.02,1,11,"DT")
2960801
"^DD",100,100,.02,3)
Enter the name of a patient.
"^DD",100,100,.02,21,0)
^^2^2^2920224^^^^
"^DD",100,100,.02,21,1,0)
This is the individual object of the order.  Depending on the parent 
"^DD",100,100,.02,21,2,0)
file entry, this would be the Patient, Control Point, etc.
"^DD",100,100,.02,"DT")
3020612
"^DD",100,100,.02,"V",0)
^.12P^3^2
"^DD",100,100,.02,"V",1,0)
2^PATIENT^1^P^n^n
"^DD",100,100,.02,"V",3,0)
67^REFERRAL^6^R^n^n
"^DD",100,100,.1,0)
ORDERABLE ITEMS^100.001PA^^.1;0
"^DD",100,100,.1,21,0)
^^1^1^2950622^^
"^DD",100,100,.1,21,1,0)
This multiple contains the items being ordered.
"^DD",100,100,.1,"DT")
2950622
"^DD",100,100,.8,0)
ORDER ACTIONS^100.008DA^^8;0
"^DD",100,100,.8,3)
Enter the order that this order relates to.
"^DD",100,100,.8,21,0)
^^2^2^2971219^^^^
"^DD",100,100,.8,21,1,0)
These are the actions taken on this order, including the signature and
"^DD",100,100,.8,21,2,0)
verification required to release to the service.
"^DD",100,100,.8,"DT")
2951027
"^DD",100,100,.9,0)
ORDER CHECKS^100.09P^^9;0
"^DD",100,100,.9,21,0)
^^1^1^2971025^^^
"^DD",100,100,.9,21,1,0)
This is the list of order checks found for this order.
"^DD",100,100,1,0)
CURRENT AGENT/PROVIDER^P200'^VA(200,^0;4^Q
"^DD",100,100,1,3)
Enter the name of the requesting clinician for this order.
"^DD",100,100,1,21,0)
^^1^1^2970306^^^^
"^DD",100,100,1,21,1,0)
This is the person who is responsible for the order.
"^DD",100,100,1,"DT")
2970306
"^DD",100,100,2,0)
DIALOG^RV^^0;5^Q
"^DD",100,100,2,1,0)
^.1^^0
"^DD",100,100,2,3)
Enter the dialog that was used to create this order.
"^DD",100,100,2,21,0)
^^1^1^2951120^^^^
"^DD",100,100,2,21,1,0)
This is the dialog that created this order.
"^DD",100,100,2,"DT")
2951101
"^DD",100,100,2,"V",0)
^.12P^2^2
"^DD",100,100,2,"V",1,0)
19^OPTION^1^OPT^^n
"^DD",100,100,2,"V",2,0)
101^PROTOCOL^2^PRO^^n
"^DD",100,100,2,"V",3,0)
101.41^DIALOG^3^DLG^n^n
"^DD",100,100,3,0)
WHO ENTERED^P200'^VA(200,^0;6^Q
"^DD",100,100,3,3)
Enter the name of the person who entered this order.
"^DD",100,100,3,21,0)
^^1^1^2920224^^^^
"^DD",100,100,3,21,1,0)
This is the USER who entered the information about the order.
"^DD",100,100,3,"DT")
2900820
"^DD",100,100,4,0)
WHEN ENTERED^D^^0;7^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,4,1,0)
^.1^^0
"^DD",100,100,4,3)
Enter the date/time when this order was entered.
"^DD",100,100,4,21,0)
^^1^1^2920224^^^^
"^DD",100,100,4,21,1,0)
This is the date/time of completion of the initiation of the order.
"^DD",100,100,4,"DT")
2961224
"^DD",100,100,4.5,0)
RESPONSES^100.045A^^4.5;0
"^DD",100,100,4.5,21,0)
^^1^1^2970926^^^^
"^DD",100,100,4.5,21,1,0)
This contains the responses to an order dialog.
"^DD",100,100,4.5,"DT")
2910905
"^DD",100,100,5,0)
STATUS^P100.01'^ORD(100.01,^3;3^Q
"^DD",100,100,5,1,0)
^.1^^0
"^DD",100,100,5,3)
Enter the status of this order.
"^DD",100,100,5,21,0)
^^1^1^2951120^^^^
"^DD",100,100,5,21,1,0)
This is the status of the order.
"^DD",100,100,5,"DT")
2890131
"^DD",100,100,6,0)
PATIENT LOCATION^V^^0;10^Q
"^DD",100,100,6,3)
Enter the location of the patient.
"^DD",100,100,6,21,0)
^^1^1^2920224^^^^
"^DD",100,100,6,21,1,0)
This is the hospital location from which the order originated.
"^DD",100,100,6,"DT")
2970508
"^DD",100,100,6,"V",0)
^.12P^1^1
"^DD",100,100,6,"V",1,0)
44^HOSPITAL LOCATION^1^H^n^n
"^DD",100,100,7,0)
ITEM ORDERED^V^^3;4^Q
"^DD",100,100,7,1,0)
^.1^^0
"^DD",100,100,7,3)
Enter the item ordered.
"^DD",100,100,7,21,0)
^^1^1^2971027^^^^
"^DD",100,100,7,21,1,0)
This is the variable pointer to the file and item ordered. 
"^DD",100,100,7,"DT")
2890131
"^DD",100,100,7,"V",0)
^.12P^3^2
"^DD",100,100,7,"V",1,0)
19^PROTOCOL^1^MISC^^n
"^DD",100,100,7,"V",2,0)
60^LAB TEST^2^LAB^^n
"^DD",100,100,7,"V",3,0)
101.41^ORDER DIALOG^3^DIALOG^n^n
"^DD",100,100,8,0)
VEILED^S^1:VEILED;0:UNVEILED;^3;8^Q
"^DD",100,100,8,21,0)
^^3^3^2920224^^
"^DD",100,100,8,21,1,0)
This field is set when creating an order to prevent the order from
"^DD",100,100,8,21,2,0)
being displayed on the review screen until the order is complete and
"^DD",100,100,8,21,3,0)
accepted.
"^DD",100,100,8,"DT")
2890816
"^DD",100,100,8.1,0)
TYPE^S^0:STANDARD;1:EDIT;2:RENEW;4:HOLD;6:DISCONTINUE;^3;11^Q
"^DD",100,100,8.1,3)
The type of order is determined by the action a user takes when processing orders.
"^DD",100,100,8.1,21,0)
^^2^2^2920225^
"^DD",100,100,8.1,21,1,0)
This field is used to determine the type of order that is being processed.
"^DD",100,100,8.1,21,2,0)
Different things happen depending on the order type.
"^DD",100,100,8.1,"DT")
2910627
"^DD",100,100,9,0)
REPLACED ORDER^P100'^OR(100,^3;5^Q
"^DD",100,100,9,3)
Enter the number of the order that this order replaces.
"^DD",100,100,9,21,0)
^^2^2^2951027^^^^
"^DD",100,100,9,21,1,0)
This is the order number of the order which was replaced by this order,
"^DD",100,100,9,21,2,0)
either by editing or renewal.
"^DD",100,100,9,"DT")
2960202
"^DD",100,100,9.1,0)
REPLACEMENT ORDER^P100'^OR(100,^3;6^Q
"^DD",100,100,9.1,3)
Enter the number of the order that replaces this one.
"^DD",100,100,9.1,21,0)
^^2^2^2970701^
"^DD",100,100,9.1,21,1,0)
This is the order number of the order that replaces this one, either
"^DD",100,100,9.1,21,2,0)
by edit or renewal.
"^DD",100,100,9.1,"DT")
2970701
"^DD",100,100,10,0)
PATIENT CLASS^S^I:INPATIENT;O:OUTPATIENT;^0;12^Q
"^DD",100,100,10,3)
Enter the patient's classification for this order.
"^DD",100,100,10,21,0)
^^2^2^2960918^
"^DD",100,100,10,21,1,0)
This is the patient's inpatient classification for this order; an inpatient
"^DD",100,100,10,21,2,0)
may have some orders performed on an outpatient basis.
"^DD",100,100,10,"DT")
2960918
"^DD",100,100,11,0)
TREATING SPECIALTY^P45.7'^DIC(45.7,^0;13^Q
"^DD",100,100,11,3)
Enter the treating specialty associated with this order.
"^DD",100,100,11,21,0)
^^1^1^2920423^^^^
"^DD",100,100,11,21,1,0)
This is the TREATING SPECIALTY associated with this order.
"^DD",100,100,11,"DT")
2870522
"^DD",100,100,12,0)
PACKAGE^RP9.4'^DIC(9.4,^0;14^Q
"^DD",100,100,12,1,0)
^.1^^0
"^DD",100,100,12,3)
Enter the package that is generating this order.
"^DD",100,100,12,21,0)
^^1^1^2920226^^^^
"^DD",100,100,12,21,1,0)
This is the package creating the order.
"^DD",100,100,12,"DT")
2880307
"^DD",100,100,13,0)
COST^NJ11,2^^0;15^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999999)!(X<0) X
"^DD",100,100,13,3)
Type a Dollar Amount between 0 and 99999999, 2 Decimal Digits
"^DD",100,100,13,21,0)
^^1^1^2920224^^^^
"^DD",100,100,13,21,1,0)
This is the cost of filling this order.
"^DD",100,100,13,"DT")
2871202
"^DD",100,100,14,0)
SIGNATURE REQUIRED^S^0:NONE;1:ORELSE;2:ORES;^0;16^Q
"^DD",100,100,14,3)
Enter the OR key required to sign this order
"^DD",100,100,14,21,0)
^^4^4^2970314^
"^DD",100,100,14,21,1,0)
This is the OR key required to sign this order.  If set to 2, only users
"^DD",100,100,14,21,2,0)
with the ORES key will be allowed to sign this order; if set to 1, users
"^DD",100,100,14,21,3,0)
with either the ORELSE or ORES keys will be allowed to sign.  A 0 or ""
"^DD",100,100,14,21,4,0)
indicates that no signature is required.
"^DD",100,100,14,"DT")
2970314
"^DD",100,100,15,0)
EVENT^P100.2'^ORE(100.2,^0;17^Q
"^DD",100,100,15,1,0)
^.1^^0
"^DD",100,100,15,3)
Enter the event this order should be delayed for.
"^DD",100,100,15,21,0)
^.001^1^1^3020425^^^
"^DD",100,100,15,21,1,0)
This is the event that this order's release is/was delayed till.
"^DD",100,100,15,"DT")
3020425
"^DD",100,100,16,0)
PATIENT APPOINTMENT^D^^0;18^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,16,21,0)
^^2^2^3031230^
"^DD",100,100,16,21,1,0)
This is the appointment date/time for outpatients and is only entered 
"^DD",100,100,16,21,2,0)
when inpatient medications are ordered for them.
"^DD",100,100,16,"DT")
3031230
"^DD",100,100,20,0)
CHILDREN^100.002PA^^2;0
"^DD",100,100,20,3)
Enter the children associated with this order.
"^DD",100,100,20,21,0)
^^2^2^2920224^^^^
"^DD",100,100,20,21,1,0)
This field allows a single order or set of orders to be linked 
"^DD",100,100,20,21,2,0)
to a parent order.
"^DD",100,100,21,0)
START DATE^D^^0;8^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,21,1,0)
^.1
"^DD",100,100,21,1,1,0)
100^AD^MUMPS
"^DD",100,100,21,1,1,1)
D SS^ORDD100
"^DD",100,100,21,1,1,2)
D SK^ORDD100
"^DD",100,100,21,1,1,"%D",0)
^^3^3^2971028^^
"^DD",100,100,21,1,1,"%D",1,0)
^OR(100,"AD",ORSTRT,ORIFN)
"^DD",100,100,21,1,1,"%D",2,0)
Allows retrieval of orders by start date; set only for future orders
"^DD",100,100,21,1,1,"%D",3,0)
that are scheduled.
"^DD",100,100,21,1,1,"DT")
2970312
"^DD",100,100,21,1,2,0)
100^AW2^MUMPS
"^DD",100,100,21,1,2,1)
D WS^ORDD100
"^DD",100,100,21,1,2,2)
D WK^ORDD100
"^DD",100,100,21,1,2,"%D",0)
^^2^2^2971028^
"^DD",100,100,21,1,2,"%D",1,0)
^OR(100,"AW",ORVP,ORDG,ORSTRT,ORIFN)
"^DD",100,100,21,1,2,"%D",2,0)
Allows retrieval of orders by display group.
"^DD",100,100,21,1,2,"DT")
2970312
"^DD",100,100,21,1,3,0)
100^AOI2^MUMPS
"^DD",100,100,21,1,3,1)
D OI1^ORDD100A(DA)
"^DD",100,100,21,1,3,2)
D OI2^ORDD100A(DA)
"^DD",100,100,21,1,3,"%D",0)
^^2^2^2971028^^
"^DD",100,100,21,1,3,"%D",1,0)
^OR(100,"AOI",ORIT,ORVP,9999999-ORSTRT,ORIFN)
"^DD",100,100,21,1,3,"%D",2,0)
Allows retrieval of patients for whom an item has been ordered.
"^DD",100,100,21,1,3,"DT")
2970312
"^DD",100,100,21,3)
Enter the start date/time for this order
"^DD",100,100,21,21,0)
^^1^1^2970312^^^^
"^DD",100,100,21,21,1,0)
This is the start date/time of the order.
"^DD",100,100,21,"DT")
2970312
"^DD",100,100,22,0)
STOP DATE^DX^^0;9^S %DT="ETX" D ^%DT S X=Y K:Y<1 X I $D(X),X<$P(^OR(100,DA,0),"^",8) K X
"^DD",100,100,22,1,0)
^.1
"^DD",100,100,22,1,1,0)
100^AE^MUMPS
"^DD",100,100,22,1,1,1)
D ES^ORDD100A
"^DD",100,100,22,1,1,2)
D EK^ORDD100A
"^DD",100,100,22,1,1,"%D",0)
^^3^3^2971028^^^
"^DD",100,100,22,1,1,"%D",1,0)
^OR(100,"AE",ORSTOP,ORIFN)
"^DD",100,100,22,1,1,"%D",2,0)
Allows retrieval of orders by expiration date; set only for orders that
"^DD",100,100,22,1,1,"%D",3,0)
have not already completed, expired, or been discontinued or canceled.
"^DD",100,100,22,1,1,"DT")
2960625
"^DD",100,100,22,3)
STOP DATE must be after the START DATE.
"^DD",100,100,22,21,0)
^^1^1^2970710^^^^
"^DD",100,100,22,21,1,0)
This is the stop date/time of the order.
"^DD",100,100,22,"DT")
2960625
"^DD",100,100,23,0)
TO^RP100.98'^ORD(100.98,^0;11^Q
"^DD",100,100,23,1,0)
^.1^^-1
"^DD",100,100,23,1,1,0)
100^AW1^MUMPS
"^DD",100,100,23,1,1,1)
D WS^ORDD100
"^DD",100,100,23,1,1,2)
D WK^ORDD100
"^DD",100,100,23,1,1,"%D",0)
^^2^2^2971028^
"^DD",100,100,23,1,1,"%D",1,0)
^OR(100,"AW",ORVP,ORDG,ORSTRT,ORIFN)
"^DD",100,100,23,1,1,"%D",2,0)
Allows retrieval of orders by display group.
"^DD",100,100,23,1,1,"DT")
2920601
"^DD",100,100,23,1,3,0)
100^ACT2^MUMPS
"^DD",100,100,23,1,3,1)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D ACT1^ORDD100A(DA,ORDA,,,X)
"^DD",100,100,23,1,3,2)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D ACT2^ORDD100A(DA,ORDA,,,X)
"^DD",100,100,23,1,3,"%D",0)
^^2^2^2971028^^^^
"^DD",100,100,23,1,3,"%D",1,0)
^OR(100,"ACT",ORVP,9999999-ORLOG,ORDG,ORIFN,DA)
"^DD",100,100,23,1,3,"%D",2,0)
Allows retrieval of orders in reverse-chronological order.
"^DD",100,100,23,1,3,"DT")
2960801
"^DD",100,100,23,3)
Enter the service that generates this order.
"^DD",100,100,23,21,0)
^^2^2^2920224^^^^
"^DD",100,100,23,21,1,0)
This is the service to which the order is referred.
"^DD",100,100,23,21,2,0)
This is used to determine the display group in which the order appears.
"^DD",100,100,23,"DT")
2961017
"^DD",100,100,23,"V",0)
^.12P
"^DD",100,100,30,0)
CURRENT ACTION^NJ3,0^^3;7^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",100,100,30,1,0)
^.1^^0
"^DD",100,100,30,3)
Enter the item number of the action currently being taken on this order
"^DD",100,100,30,21,0)
^^3^3^2961031^^^^
"^DD",100,100,30,21,1,0)
This is the item number of the action in the Order Actions multiple that
"^DD",100,100,30,21,2,0)
is currently being carried out on this order; it will be used to build
"^DD",100,100,30,21,3,0)
the text for the Current Orders list.
"^DD",100,100,30,"DT")
2961030
"^DD",100,100,31,0)
DATE OF LAST ACTIVITY^D^^3;1^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,31,3)
Enter the date of last activity for this order.
"^DD",100,100,31,21,0)
^^1^1^2970306^^^^
"^DD",100,100,31,21,1,0)
This is the date/time the order was last updated.
"^DD",100,100,31,"DT")
2970306
"^DD",100,100,32,0)
GRACE DAYS BEFORE PURGE^NJ3,0^^3;2^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",100,100,32,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",100,100,32,21,0)
^^8^8^2970306^^^^
"^DD",100,100,32,21,1,0)
This is the number of days to hold an order from the
"^DD",100,100,32,21,2,0)
date of last activity. The order in OE/RR may be 
"^DD",100,100,32,21,3,0)
purged after this date.
"^DD",100,100,32,21,4,0)
The default is 30 days.  If a package needs the order
"^DD",100,100,32,21,5,0)
retained for a period longer than 30 days, this can
"^DD",100,100,32,21,6,0)
be specified when the order is created by setting the
"^DD",100,100,32,21,7,0)
variable ORPURG to the appropriate number of days before
"^DD",100,100,32,21,8,0)
calling FILE^ORX.
"^DD",100,100,32,"DT")
2970306
"^DD",100,100,33,0)
PACKAGE REFERENCE^F^^4;E1,200^K:$L(X)>200!($L(X)<1) X
"^DD",100,100,33,3)
ANSWER MUST BE 1-200 CHARACTERS IN LENGTH
"^DD",100,100,33,21,0)
^^4^4^2960801^^^^
"^DD",100,100,33,21,1,0)
This information allows the package to link the order in OR
"^DD",100,100,33,21,2,0)
with its more detailed order information in the individual package.
"^DD",100,100,33,21,3,0)
It is the package's responsibility to define and determine the
"^DD",100,100,33,21,4,0)
structure of this information.
"^DD",100,100,33,"DT")
2850807
"^DD",100,100,35,0)
ALERT ON RESULTS^P200'^VA(200,^3;10^Q
"^DD",100,100,35,3)
Enter the name of the user to be alerted when results for this order become available.
"^DD",100,100,35,21,0)
^.001^3^3^3011210^^^
"^DD",100,100,35,21,1,0)
This field contains the user who requested to be alerted when results
"^DD",100,100,35,21,2,0)
for this order become available.  Only lab, radiology, and consult orders
"^DD",100,100,35,21,3,0)
will generate results.
"^DD",100,100,35,"DT")
3011210
"^DD",100,100,36,0)
PARENT^P100'^OR(100,^3;9^Q
"^DD",100,100,36,3)
Enter the parent, if this order is its child.
"^DD",100,100,36,21,0)
^^1^1^2920423^^^
"^DD",100,100,36,21,1,0)
This is the parent of an order that may have a parent/child relationship.
"^DD",100,100,36,"DT")
2900116
"^DD",100,100,51,0)
SERVICE CONNECTED CONDITION^S^1:YES;0:NO;^5;1^Q
"^DD",100,100,51,3)
Enter YES if this order is for treatment of a service-connected condition.
"^DD",100,100,51,21,0)
^.001^5^5^3010921^^
"^DD",100,100,51,21,1,0)
When signing orders, the provider may be asked if this order is for
"^DD",100,100,51,21,2,0)
treatment of  a service-connected condition; his/her response to this
"^DD",100,100,51,21,3,0)
question will be stored in this field.  Currently this question is only
"^DD",100,100,51,21,4,0)
asked for Outpatient Medications, and the response is passed to that
"^DD",100,100,51,21,5,0)
package with the new order.
"^DD",100,100,51,"DT")
3010921
"^DD",100,100,52,0)
MST^S^1:YES;0:NO;^5;2^Q
"^DD",100,100,52,.1)
MILITARY SEXUAL TRAUMA
"^DD",100,100,52,3)
Enter YES if this order is for treatment of a condition due to MST.
"^DD",100,100,52,21,0)
^^6^6^3010925^
"^DD",100,100,52,21,1,0)
If a patient has been identified as having been treated for Military
"^DD",100,100,52,21,2,0)
Sexual Trauma (MST), then the provider may be asked when signing the
"^DD",100,100,52,21,3,0)
order if it is for treatment of a condition related to MST and his/her
"^DD",100,100,52,21,4,0)
response to this question will be stored in this field.  Currently this
"^DD",100,100,52,21,5,0)
question is only asked for Outpatient Medications, and the response is
"^DD",100,100,52,21,6,0)
passed to that package with the new order.
"^DD",100,100,52,"DT")
3010925
"^DD",100,100,53,0)
AGENT ORANGE EXPOSURE^S^1:YES;0:NO;^5;3^Q
"^DD",100,100,53,3)
Enter YES if this order is for treatment of a condition due to Agent Orange exposure during Vietnam service.
"^DD",100,100,53,21,0)
^^6^6^3010925^
"^DD",100,100,53,21,1,0)
If a patient has been identified as having been exposed to Agent Orange
"^DD",100,100,53,21,2,0)
(AO) during service in Vietnam, then the provider may be asked when
"^DD",100,100,53,21,3,0)
signing the order if it is for treatment of a condition related to AO
"^DD",100,100,53,21,4,0)
and his/her response to this question will be stored in this field.
"^DD",100,100,53,21,5,0)
Currently this question is only asked for Outpatient Medications, and
"^DD",100,100,53,21,6,0)
the response is passed to that package with the new order.
"^DD",100,100,53,"DT")
3010921
"^DD",100,100,54,0)
IONIZING RADIATION EXPOSURE^S^1:YES;0:NO;^5;4^Q
"^DD",100,100,54,3)
Enter YES if this order is for treatment of a condition due to ionizing radiation exposure during military service.
"^DD",100,100,54,21,0)
^^7^7^3010925^
"^DD",100,100,54,21,1,0)
If a patient has been identified as having been treated for exposure to
"^DD",100,100,54,21,2,0)
ionizing radiation (IR) during military service, then the provider may
"^DD",100,100,54,21,3,0)
be asked when signing the order if it is for treatment of a condition
"^DD",100,100,54,21,4,0)
related to IR and his/her response to this question will be stored in
"^DD",100,100,54,21,5,0)
this field.  Currently this question is only asked for Outpatient
"^DD",100,100,54,21,6,0)
Medications, and the response is passed to that package with the new
"^DD",100,100,54,21,7,0)
order.
"^DD",100,100,54,"DT")
3010921
"^DD",100,100,55,0)
ENVIRONMENTAL CONTAMINANTS^S^1:YES;0:NO;^5;5^Q
"^DD",100,100,55,3)
Enter YES if this order is for treatment of a condition due to environmental contaminant exposure during the Persian Gulf War.
"^DD",100,100,55,21,0)
^.001^7^7^3010921^^
"^DD",100,100,55,21,1,0)
If a patient has been identified as having been treated for exposure to
"^DD",100,100,55,21,2,0)
environmental contaminants (EC) during the Persian Gulf War, then the
"^DD",100,100,55,21,3,0)
provider may be asked when signing the order if it is for treatment of a
"^DD",100,100,55,21,4,0)
condition related to EC and his/her response to this question will be
"^DD",100,100,55,21,5,0)
stored in this field.  Currently this question is only asked for
"^DD",100,100,55,21,6,0)
Outpatient Medications, and the response is passed to that package with
"^DD",100,100,55,21,7,0)
the new order.
"^DD",100,100,55,"DT")
3010921
"^DD",100,100,56,0)
HEAD AND/OR NECK CANCER^S^1:YES;0:NO;^5;6^Q
"^DD",100,100,56,3)
Enter YES if this order is for treatment of head or neck cancer due to nose or throat radium treatments while in the military.
"^DD",100,100,56,21,0)
^^7^7^3010925^
"^DD",100,100,56,21,1,0)
If a patient has been identified as having been treated for head or neck
"^DD",100,100,56,21,2,0)
cancer due to nose or throat radium treatments while in the military,
"^DD",100,100,56,21,3,0)
then the provider may be asked when signing the order if it is for
"^DD",100,100,56,21,4,0)
treatment of head or neck cancer and his/her response to this question
"^DD",100,100,56,21,5,0)
will be stored in this field.  Currently this question is only asked for
"^DD",100,100,56,21,6,0)
Outpatient Medications, and the response is passed to that package with
"^DD",100,100,56,21,7,0)
the new order.
"^DD",100,100,56,"DT")
3010925
"^DD",100,100,61,0)
NATURE OF DC^P100.02'^ORD(100.02,^6;1^Q
"^DD",100,100,61,3)
Enter the nature of this dc order
"^DD",100,100,61,21,0)
^^4^4^2970312^^^
"^DD",100,100,61,21,1,0)
Orders that are DC'ed because they have been duplicated do not create a
"^DD",100,100,61,21,2,0)
DC order, nor is a chart copy or electronic signature notification
"^DD",100,100,61,21,3,0)
generated.  If this is a CHANGE IN THERAPY, then a DC order is generated
"^DD",100,100,61,21,4,0)
that must be signed, and a chart copy of the new DC request is printed.
"^DD",100,100,61,"DT")
2970312
"^DD",100,100,62,0)
DC'ed BY^P200'^VA(200,^6;2^Q
"^DD",100,100,62,3)
Enter the name of the person who DC'ed this order
"^DD",100,100,62,21,0)
^^1^1^2970312^
"^DD",100,100,62,21,1,0)
This is the person who DC'ed this order.
"^DD",100,100,62,"DT")
2970312
"^DD",100,100,63,0)
DC DATE/TIME^D^^6;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,63,3)
Enter the date/time this order was DC'ed.
"^DD",100,100,63,21,0)
^^1^1^2970312^
"^DD",100,100,63,21,1,0)
This is the date/time the order was DC'ed.
"^DD",100,100,63,"DT")
2970312
"^DD",100,100,64,0)
DC REASON^P100.03'^ORD(100.03,^6;4^Q
"^DD",100,100,64,3)
Enter the reason why this order was DC'ed.
"^DD",100,100,64,21,0)
^^1^1^2970312^
"^DD",100,100,64,21,1,0)
This is the reason this order was DC'ed, i.e. "Patient discharged."
"^DD",100,100,64,"DT")
2970312
"^DD",100,100,65,0)
DC REASON TEXT^F^^6;5^K:$L(X)>80!($L(X)<1) X
"^DD",100,100,65,3)
Answer must be 1-80 characters in length.
"^DD",100,100,65,21,0)
^^1^1^2970312^^
"^DD",100,100,65,21,1,0)
This is the text of the DC reason.
"^DD",100,100,65,"DT")
2970312
"^DD",100,100,66,0)
COMPLETED^D^^6;6^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,66,3)
Enter the date/time this order was completed.
"^DD",100,100,66,21,0)
^^1^1^2990519^^
"^DD",100,100,66,21,1,0)
This is the date/time the order was marked as complete.
"^DD",100,100,66,"DT")
2990519
"^DD",100,100,67,0)
COMPLETED BY^P200'^VA(200,^6;7^Q
"^DD",100,100,67,3)
Enter the name of the person who completed this order.
"^DD",100,100,67,21,0)
^^1^1^2990519^
"^DD",100,100,67,21,1,0)
This is the person who marked this order as complete.
"^DD",100,100,67,"DT")
2990519
"^DD",100,100,68,0)
DC EVENT^P100.2'^ORE(100.2,^6;8^Q
"^DD",100,100,68,3)
Enter the event that caused this order to terminate.
"^DD",100,100,68,21,0)
^.001^1^1^3020425^^^
"^DD",100,100,68,21,1,0)
This is the event that automatically discontinued this order.
"^DD",100,100,68,"DT")
3020425
"^DD",100,100.001,0)
ORDERABLE ITEMS SUB-FIELD^^.01^1
"^DD",100,100.001,0,"DIK")
ORD2
"^DD",100,100.001,0,"DT")
2950622
"^DD",100,100.001,0,"IX","B",100.001,.01)

"^DD",100,100.001,0,"NM","ORDERABLE ITEMS")

"^DD",100,100.001,0,"UP")
100
"^DD",100,100.001,.01,0)
ORDERABLE ITEM^MP101.43'^ORD(101.43,^0;1^Q
"^DD",100,100.001,.01,1,0)
^.1
"^DD",100,100.001,.01,1,1,0)
100.001^B
"^DD",100,100.001,.01,1,1,1)
S ^OR(100,DA(1),.1,"B",$E(X,1,30),DA)=""
"^DD",100,100.001,.01,1,1,2)
K ^OR(100,DA(1),.1,"B",$E(X,1,30),DA)
"^DD",100,100.001,.01,1,2,0)
100^AOI^MUMPS
"^DD",100,100.001,.01,1,2,1)
D OI1^ORDD100A(DA(1))
"^DD",100,100.001,.01,1,2,2)
D OI2^ORDD100A(DA(1))
"^DD",100,100.001,.01,1,2,"%D",0)
^^2^2^2971028^^
"^DD",100,100.001,.01,1,2,"%D",1,0)
^OR(100,"AOI",ORIT,ORVP,9999999-ORSTRT,ORIFN)
"^DD",100,100.001,.01,1,2,"%D",2,0)
Allows retrieval of patients for whom an item has been ordered.
"^DD",100,100.001,.01,1,2,"DT")
2960404
"^DD",100,100.001,.01,3)
Enter the item you wish to order.
"^DD",100,100.001,.01,21,0)
^^2^2^2950622^
"^DD",100,100.001,.01,21,1,0)
This is the actual item (test, procedure, diet, drug, etc) being ordered
"^DD",100,100.001,.01,21,2,0)
from the Orderable Items file.
"^DD",100,100.001,.01,"DT")
2960404
"^DD",100,100.002,0)
CHILDREN SUB-FIELD^NL^.01^1
"^DD",100,100.002,0,"DIK")
ORD2
"^DD",100,100.002,0,"IX","AL",100.002,.01)

"^DD",100,100.002,0,"NM","CHILDREN")

"^DD",100,100.002,0,"UP")
100
"^DD",100,100.002,.01,0)
CHILDREN^M*P100X^OR(100,^0;1^D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X I $D(X) S DINUM=X
"^DD",100,100.002,.01,1,0)
^.1^^0
"^DD",100,100.002,.01,1,1,0)
100.002^AL^MUMPS
"^DD",100,100.002,.01,1,1,1)
S P=$P(^OR(100,DA(1),0),"^",2),P2=$P(^(0),"^",8),P1=$S($D(^(3)):$P(^(3),"^",4),1:"") I P,P1,P2 S ^OR(100,"AL",P,P1,P2,DA,DA(1))=""
"^DD",100,100.002,.01,1,1,2)
S P=$P(^OR(100,DA(1),0),"^",2),P2=$P(^(0),"^",8),P1=$S($D(^(3)):$P(^(3),"^",4),1:"") I P,P1,P2 K ^OR(100,"AL",P,P1,P2,DA,DA(1))
"^DD",100,100.002,.01,3)
Enter the children associated with this order.
"^DD",100,100.002,.01,21,0)
^^2^2^2920224^^^^
"^DD",100,100.002,.01,21,1,0)
These are the orders which compose this entry 
"^DD",100,100.002,.01,21,2,0)
and have this entry in the Parent field.
"^DD",100,100.002,.01,"DT")
2900116
"^DD",100,100.008,0)
ORDER ACTIONS SUB-FIELD^^74^41
"^DD",100,100.008,0,"DIK")
ORD2
"^DD",100,100.008,0,"DT")
3020425
"^DD",100,100.008,0,"IX","C",100.008,2)

"^DD",100,100.008,0,"NM","ORDER ACTIONS")

"^DD",100,100.008,0,"UP")
100
"^DD",100,100.008,.01,0)
DATE/TIME ORDERED^RD^^0;1^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,.01,1,0)
^.1
"^DD",100,100.008,.01,1,1,0)
100^ACT3^MUMPS
"^DD",100,100.008,.01,1,1,1)
N ORDA S ORDA=DA(1) D ACT1^ORDD100A(ORDA,DA)
"^DD",100,100.008,.01,1,1,2)
N ORDA S ORDA=DA(1) D ACT2^ORDD100A(ORDA,DA)
"^DD",100,100.008,.01,1,1,"%D",0)
^^2^2^2971028^^^^
"^DD",100,100.008,.01,1,1,"%D",1,0)
^OR(100,"ACT",ORVP,9999999-ORLOG,ORDG,ORIFN,DA)
"^DD",100,100.008,.01,1,1,"%D",2,0)
Allows retrieval of orders in reverse-chronological order.
"^DD",100,100.008,.01,1,1,"DT")
2961224
"^DD",100,100.008,.01,1,2,0)
100^AC1^MUMPS
"^DD",100,100.008,.01,1,2,1)
N X1,X2 S X1=DA(1),X2=DA D SET^ORDD100(X1,X2)
"^DD",100,100.008,.01,1,2,2)
N X1,X2 S X1=DA(1),X2=DA D KIL^ORDD100(X1,X2)
"^DD",100,100.008,.01,1,2,"%D",0)
^^4^4^2971028^
"^DD",100,100.008,.01,1,2,"%D",1,0)
^OR(100,"AC",ORVP,9999999-ORLOG,ORIFN,DA)
"^DD",100,100.008,.01,1,2,"%D",2,0)
Allows retrieval of "active" orders; includes orders with any kind of
"^DD",100,100.008,.01,1,2,"%D",3,0)
active status, as well as those that have ended w/in the Active Orders
"^DD",100,100.008,.01,1,2,"%D",4,0)
Context Hours.
"^DD",100,100.008,.01,1,2,"DT")
2960830
"^DD",100,100.008,.01,1,3,0)
100^AS1^MUMPS
"^DD",100,100.008,.01,1,3,1)
N ORDA S ORDA=DA(1) D S1^ORDD100(ORDA,DA,"",X)
"^DD",100,100.008,.01,1,3,2)
N ORDA S ORDA=DA(1) D S2^ORDD100(ORDA,DA,"",X)
"^DD",100,100.008,.01,1,3,"%D",0)
^^2^2^2971028^^^
"^DD",100,100.008,.01,1,3,"%D",1,0)
^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,DA)
"^DD",100,100.008,.01,1,3,"%D",2,0)
Allows retrieval of unsigned orders.
"^DD",100,100.008,.01,1,3,"DT")
2970107
"^DD",100,100.008,.01,1,4,0)
100^AF
"^DD",100,100.008,.01,1,4,1)
S ^OR(100,"AF",$E(X,1,30),DA(1),DA)=""
"^DD",100,100.008,.01,1,4,2)
K ^OR(100,"AF",$E(X,1,30),DA(1),DA)
"^DD",100,100.008,.01,1,4,"DT")
2970814
"^DD",100,100.008,.01,3)
Enter the date/time this action was ordered.
"^DD",100,100.008,.01,21,0)
^^1^1^2951027^^
"^DD",100,100.008,.01,21,1,0)
This is the date/time this action was ordered.
"^DD",100,100.008,.01,"DT")
2970814
"^DD",100,100.008,.1,0)
ORDER TEXT^100.0081^^.1;0
"^DD",100,100.008,.1,21,0)
^^1^1^3000727^
"^DD",100,100.008,.1,21,1,0)
This is the text of the order.
"^DD",100,100.008,.2,0)
EXTERNAL TEXT^100.0082^^.2;0
"^DD",100,100.008,.2,9)
@
"^DD",100,100.008,.2,21,0)
^.001^4^4^3020326^^^^
"^DD",100,100.008,.2,21,1,0)
This is the text of the order stored in external format.
"^DD",100,100.008,.2,21,2,0)
DO NOT EDIT THIS FIELD!  This field is used to create a Digital Signature.
"^DD",100,100.008,.2,21,3,0)
Editing this field will render the Digital Signature invalid and prevent
"^DD",100,100.008,.2,21,4,0)
the order from being processed.
"^DD",100,100.008,.2,"DT")
3020326
"^DD",100,100.008,1,0)
REASON FOR ACTION/REJECT^F^^1;1^K:$L(X)>240!($L(X)<1) X
"^DD",100,100.008,1,3)
Answer must be 1-240 characters in length.
"^DD",100,100.008,1,21,0)
^^2^2^2970308^
"^DD",100,100.008,1,21,1,0)
This is the reason returned by the package why this action is being
"^DD",100,100.008,1,21,2,0)
taken or rejected.
"^DD",100,100.008,1,"DT")
2970308
"^DD",100,100.008,2,0)
ACTION^RS^NW:NEW;DC:DISCONTINUE;HD:HOLD;RL:RELEASE HOLD;XX:CHANGE;^0;2^Q
"^DD",100,100.008,2,1,0)
^.1
"^DD",100,100.008,2,1,1,0)
100.008^C
"^DD",100,100.008,2,1,1,1)
S ^OR(100,DA(1),8,"C",$E(X,1,30),DA)=""
"^DD",100,100.008,2,1,1,2)
K ^OR(100,DA(1),8,"C",$E(X,1,30),DA)
"^DD",100,100.008,2,1,1,"DT")
2960202
"^DD",100,100.008,2,3)
Enter the action to be taken on this order.
"^DD",100,100.008,2,21,0)
^.001^1^1^3000712^^^^
"^DD",100,100.008,2,21,1,0)
This is the action being ordered.
"^DD",100,100.008,2,"DT")
3000712
"^DD",100,100.008,3,0)
PROVIDER^P200'^VA(200,^0;3^Q
"^DD",100,100.008,3,3)
Enter the name of the requesting clinician for this order.
"^DD",100,100.008,3,21,0)
^^1^1^2970310^^
"^DD",100,100.008,3,21,1,0)
This is the requestor of this order.
"^DD",100,100.008,3,"DT")
2970310
"^DD",100,100.008,4,0)
SIGNATURE STATUS^S^0:ON CHART w/written orders;1:ELECTRONIC;2:NOT SIGNED;3:NOT REQUIRED;4:ON CHART w/printed orders;5:NOT REQUIRED due to cancel;6:SERVICE CORRECTION to signed order;7:DIGITALLY SIGNED;^0;4^Q
"^DD",100,100.008,4,1,0)
^.1
"^DD",100,100.008,4,1,1,0)
100^AS2^MUMPS
"^DD",100,100.008,4,1,1,1)
N ORDA S ORDA=DA(1) D S1^ORDD100(ORDA,DA)
"^DD",100,100.008,4,1,1,2)
N ORDA S ORDA=DA(1) D S2^ORDD100(ORDA,DA)
"^DD",100,100.008,4,1,1,"%D",0)
^^2^2^2971028^^
"^DD",100,100.008,4,1,1,"%D",1,0)
^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,DA)
"^DD",100,100.008,4,1,1,"%D",2,0)
Allows retrieval of unsigned orders.
"^DD",100,100.008,4,1,1,"DT")
2961224
"^DD",100,100.008,4,3)
Select 0=On chart-written, 1=Electronic, 2=Not Signed, 3=Not Required, 4=On chart-printed, 5=Not Required-cancelled, 6=Service Correction, 7=Digitally Signed
"^DD",100,100.008,4,21,0)
^^4^4^2970228^^^
"^DD",100,100.008,4,21,1,0)
This is the signature status of the order.  Entries with a null value
"^DD",100,100.008,4,21,2,0)
in this field are assumed to have been entered through the back door
"^DD",100,100.008,4,21,3,0)
via specific package order entry options and do not require signature
"^DD",100,100.008,4,21,4,0)
unless so specified by the package.
"^DD",100,100.008,4,"DT")
3020314
"^DD",100,100.008,5,0)
SIGNED BY^*P200'^VA(200,^0;5^I $D(^XUSEC("ORES",DUZ)) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",100,100.008,5,3)
Enter the person signing this order.
"^DD",100,100.008,5,12)
Only users with the ORES key allowed.
"^DD",100,100.008,5,12.1)
I $D(^XUSEC("ORES",DUZ))
"^DD",100,100.008,5,21,0)
^^4^4^2960525^^
"^DD",100,100.008,5,21,1,0)
This is the user who entered his/her electronic signature code to
"^DD",100,100.008,5,21,2,0)
authenticate this order.  It will be replaced by an encryption of
"^DD",100,100.008,5,21,3,0)
the name and title of the signer, along with a checksum of the order
"^DD",100,100.008,5,21,4,0)
text, as soon as we figure out how to do that. :)
"^DD",100,100.008,5,"DT")
2960525
"^DD",100,100.008,6,0)
DATE/TIME SIGNED^D^^0;6^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,6,3)
Enter the date/time the order was electronically signed.
"^DD",100,100.008,6,21,0)
^^1^1^2951027^
"^DD",100,100.008,6,21,1,0)
This is the date/time that the order was electronically signed.
"^DD",100,100.008,6,"DT")
2951027
"^DD",100,100.008,7,0)
SIGNED ON CHART^P200'^VA(200,^0;7^Q
"^DD",100,100.008,7,3)
Enter the person who specified that this order was signed on the patient's chart.
"^DD",100,100.008,7,21,0)
^^1^1^2951027^
"^DD",100,100.008,7,21,1,0)
This is the person who released an order based on a signature in the chart.
"^DD",100,100.008,7,"DT")
2951027
"^DD",100,100.008,8,0)
VERIFYING NURSE^P200'^VA(200,^0;8^Q
"^DD",100,100.008,8,3)
Enter the name of the nurse who verified this order.
"^DD",100,100.008,8,21,0)
^^1^1^2951027^
"^DD",100,100.008,8,21,1,0)
This is the nurse who acknowledged or verified the accuracy of this order.
"^DD",100,100.008,8,"DT")
2951027
"^DD",100,100.008,9,0)
DATE/TIME NURSE VERIFIED^D^^0;9^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,9,3)
Enter the date/time the order was verified by a nurse.
"^DD",100,100.008,9,21,0)
^^2^2^2951027^
"^DD",100,100.008,9,21,1,0)
This is the date/time that the order was acknowledged or verified by a
"^DD",100,100.008,9,21,2,0)
nurse.
"^DD",100,100.008,9,"DT")
2951027
"^DD",100,100.008,10,0)
VERIFYING CLERK^P200'^VA(200,^0;10^Q
"^DD",100,100.008,10,3)
Enter the name of the ward clerk who verified this order.
"^DD",100,100.008,10,21,0)
^^2^2^2951027^
"^DD",100,100.008,10,21,1,0)
This is the ward clerk who took off this order, if it was not transmitted
"^DD",100,100.008,10,21,2,0)
directly to the service for action.
"^DD",100,100.008,10,"DT")
2951027
"^DD",100,100.008,11,0)
DATE/TIME CLERK VERIFIED^D^^0;11^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,11,3)
Enter the date/time this order was verified.
"^DD",100,100.008,11,21,0)
^^1^1^2951027^
"^DD",100,100.008,11,21,1,0)
This is the date/time that the ward clerk took off this order.
"^DD",100,100.008,11,"DT")
2951027
"^DD",100,100.008,12,0)
NATURE OF ORDER^P100.02'^ORD(100.02,^0;12^Q
"^DD",100,100.008,12,3)
Enter how this order originated
"^DD",100,100.008,12,21,0)
^^1^1^2970312^^^^
"^DD",100,100.008,12,21,1,0)
This specifies the nature of the order or how it originated.
"^DD",100,100.008,12,"DT")
2970312
"^DD",100,100.008,13,0)
ENTERED BY^P200'^VA(200,^0;13^Q
"^DD",100,100.008,13,3)
Enter the name of the person who entered this order.
"^DD",100,100.008,13,21,0)
^^2^2^2960408^
"^DD",100,100.008,13,21,1,0)
This is the user who entered the information about this order into the
"^DD",100,100.008,13,21,2,0)
computer.
"^DD",100,100.008,13,"DT")
2960408
"^DD",100,100.008,14,0)
TEXT REFERENCE^NJ3,0^^0;14^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",100,100.008,14,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",100,100.008,14,21,0)
^.001^2^2^3000724^^^
"^DD",100,100.008,14,21,1,0)
This field contains a reference to the Order Action entry containing
"^DD",100,100.008,14,21,2,0)
the text for this order.
"^DD",100,100.008,14,"DT")
3000724
"^DD",100,100.008,15,0)
RELEASE STATUS^S^11:unreleased;10:pre-release;13:rejected;12:dc/edit;^0;15^Q
"^DD",100,100.008,15,3)
Enter the status of this action request.
"^DD",100,100.008,15,21,0)
^.001^2^2^3000712^^^
"^DD",100,100.008,15,21,1,0)
This field tracks the status of the request for this action; this is NOT
"^DD",100,100.008,15,21,2,0)
the same as the order status.
"^DD",100,100.008,15,"DT")
3000712
"^DD",100,100.008,16,0)
RELEASE DATE/TIME^D^^0;16^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,16,1,0)
^.1
"^DD",100,100.008,16,1,1,0)
100^AR1^MUMPS
"^DD",100,100.008,16,1,1,1)
N ORDER S ORDER=DA(1) D RS^ORDD100(ORDER,DA,,X)
"^DD",100,100.008,16,1,1,2)
N ORDER S ORDER=DA(1) D RK^ORDD100(ORDER,DA,,X)
"^DD",100,100.008,16,1,1,"%D",0)
^^2^2^2980602^
"^DD",100,100.008,16,1,1,"%D",1,0)
^OR(100,"AR",ORVP,9999999-ORRDT,ORIFN,ORDA)
"^DD",100,100.008,16,1,1,"%D",2,0)
Allows retrieval of orders by inverse date released.
"^DD",100,100.008,16,1,1,"DT")
2980602
"^DD",100,100.008,16,3)
Enter the date/time this order was released to the service
"^DD",100,100.008,16,21,0)
^^1^1^2970312^
"^DD",100,100.008,16,21,1,0)
This is the date/time the order was released to the service for action.
"^DD",100,100.008,16,"DT")
2980602
"^DD",100,100.008,17,0)
RELEASING PERSON^P200'^VA(200,^0;17^Q
"^DD",100,100.008,17,3)
Enter the name of the person releasing the order
"^DD",100,100.008,17,21,0)
^^1^1^2970312^
"^DD",100,100.008,17,21,1,0)
This is the person who released the order to the service for action.
"^DD",100,100.008,17,"DT")
2970312
"^DD",100,100.008,18,0)
CHART REVIEWED BY^P200'^VA(200,^0;18^Q
"^DD",100,100.008,18,3)
Enter the name of the person who reviewed this order in the chart.
"^DD",100,100.008,18,21,0)
^^2^2^2980508^^
"^DD",100,100.008,18,21,1,0)
This field contains the name of the user who performed the chart review
"^DD",100,100.008,18,21,2,0)
that included this order.
"^DD",100,100.008,18,"DT")
2980508
"^DD",100,100.008,19,0)
DATE/TIME CHART REVIEWED^D^^0;19^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,19,3)
Enter the date/time this order was reviewed in the chart.
"^DD",100,100.008,19,21,0)
^^2^2^2980508^
"^DD",100,100.008,19,21,1,0)
This field contains the date/time that a chart review was performed, that
"^DD",100,100.008,19,21,2,0)
included this order.
"^DD",100,100.008,19,"DT")
2980508
"^DD",100,100.008,21,0)
DC/HOLD UNTIL^D^^2;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,21,3)
Enter the date/time the hold should be removed from this order
"^DD",100,100.008,21,21,0)
^^6^6^2970519^^^
"^DD",100,100.008,21,21,1,0)
This is the date/time the hold was or will be removed from this order; if
"^DD",100,100.008,21,21,2,0)
a future date/time is entered at the time of holding the order, the hold
"^DD",100,100.008,21,21,3,0)
will be automatically removed when this date/time is reached.
"^DD",100,100.008,21,21,4,0)
  
"^DD",100,100.008,21,21,5,0)
If this order is reinstated after being cancelled, this is the date/time
"^DD",100,100.008,21,21,6,0)
the cancel status was removed from this order.
"^DD",100,100.008,21,"DT")
2970519
"^DD",100,100.008,22,0)
DC/HOLD RELEASED BY^P200'^VA(200,^2;2^Q
"^DD",100,100.008,22,3)
Enter the name of the person who removed the hold on this order
"^DD",100,100.008,22,21,0)
^^1^1^2970519^^^
"^DD",100,100.008,22,21,1,0)
This is the user who released the cancel or hold on this order.
"^DD",100,100.008,22,"DT")
2970519
"^DD",100,100.008,23,0)
DIGITAL SIGNATURE^FI^^2;3^K:$L(X)>100!($L(X)<1) X
"^DD",100,100.008,23,3)
Answer must be 1-100 characters in length.
"^DD",100,100.008,23,8.5)
^
"^DD",100,100.008,23,9)
^
"^DD",100,100.008,23,21,0)
^.001^1^1^3020314^^^
"^DD",100,100.008,23,21,1,0)
This is the digital signature of the order.
"^DD",100,100.008,23,"DT")
3020314
"^DD",100,100.008,24,0)
DRUG SCHEDULE^F^^2;4^K:$L(X)>3!($L(X)<1) X
"^DD",100,100.008,24,3)
Answer must be 1-3 characters in length.
"^DD",100,100.008,24,21,0)
^^11^11^3020425^
"^DD",100,100.008,24,21,1,0)
 This is the CS FEDERAL SCHEDULE of the drug as defined in the National
"^DD",100,100.008,24,21,2,0)
 Drug file (VA PRODUCT #50.68).  Pharmacy package further refines the
"^DD",100,100.008,24,21,3,0)
 schedule to:
"^DD",100,100.008,24,21,4,0)
   1    Sch. I Nar.
"^DD",100,100.008,24,21,5,0)
   2    II
"^DD",100,100.008,24,21,6,0)
   2n   II Non-Nar.
"^DD",100,100.008,24,21,7,0)
   3    III
"^DD",100,100.008,24,21,8,0)
   3n   III Non-Nar.
"^DD",100,100.008,24,21,9,0)
   4    IV
"^DD",100,100.008,24,21,10,0)
   5    V
"^DD",100,100.008,24,21,11,0)
   0    other active drugs
"^DD",100,100.008,24,"DT")
3020425
"^DD",100,100.008,25,0)
DIGITAL SIGNATURE REQUIRED^S^0:NO;1:YES;^2;5^Q
"^DD",100,100.008,25,3)

"^DD",100,100.008,25,21,0)
^^1^1^3020322^
"^DD",100,100.008,25,21,1,0)
This field is set if a Digital Signature is required.
"^DD",100,100.008,25,"DT")
3020322
"^DD",100,100.008,31,0)
FLAGGED^S^1:YES;0:NO;^3;1^Q
"^DD",100,100.008,31,3)
Enter YES if this order is being flagged
"^DD",100,100.008,31,21,0)
^^1^1^2970308^
"^DD",100,100.008,31,21,1,0)
This indicates that this order has been flagged.
"^DD",100,100.008,31,"DT")
2970308
"^DD",100,100.008,32,0)
BULLETIN^P3.9'^XMB(3.9,^3;2^Q
"^DD",100,100.008,32,3)
Enter the message sent regarding this flag
"^DD",100,100.008,32,21,0)
^^1^1^2970308^
"^DD",100,100.008,32,21,1,0)
This is the bulletin sent as a result of flagging this order.
"^DD",100,100.008,32,"DT")
2970308
"^DD",100,100.008,33,0)
DATE/TIME FLAGGED^D^^3;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,33,3)
Enter the date/time this order was flagged
"^DD",100,100.008,33,21,0)
^^1^1^2970308^
"^DD",100,100.008,33,21,1,0)
This is the date/time when this order was flagged.
"^DD",100,100.008,33,"DT")
2970308
"^DD",100,100.008,34,0)
FLAGGED BY^P200'^VA(200,^3;4^Q
"^DD",100,100.008,34,3)
Enter the name of the person who flagged this order
"^DD",100,100.008,34,21,0)
^^1^1^2970308^
"^DD",100,100.008,34,21,1,0)
This is the user who flagged this order.
"^DD",100,100.008,34,"DT")
2970308
"^DD",100,100.008,35,0)
REASON FOR FLAG^F^^3;5^K:$L(X)>80!($L(X)<1) X
"^DD",100,100.008,35,3)
Answer must be 1-80 characters in length.
"^DD",100,100.008,35,21,0)
^^3^3^2970308^
"^DD",100,100.008,35,21,1,0)
This is the reason this order was flagged; it will be included in the
"^DD",100,100.008,35,21,2,0)
bulletin generated, as well as included in the text of this order until
"^DD",100,100.008,35,21,3,0)
this order is unflagged.
"^DD",100,100.008,35,"DT")
2970308
"^DD",100,100.008,36,0)
DATE/TIME UNFLAGGED^D^^3;6^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,36,3)
Enter the date/time this order was unflagged
"^DD",100,100.008,36,21,0)
^^1^1^2970308^
"^DD",100,100.008,36,21,1,0)
This is the date/time this order was unflagged.
"^DD",100,100.008,36,"DT")
2970308
"^DD",100,100.008,37,0)
UNFLAGGED BY^P200'^VA(200,^3;7^Q
"^DD",100,100.008,37,3)
Enter the name of the person who unflagged this order
"^DD",100,100.008,37,21,0)
^^1^1^2970308^
"^DD",100,100.008,37,21,1,0)
This is the user who unflagged this order.
"^DD",100,100.008,37,"DT")
2970308
"^DD",100,100.008,38,0)
REASON FOR UNFLAG^F^^3;8^K:$L(X)>80!($L(X)<1) X
"^DD",100,100.008,38,3)
Answer must be 1-80 characters in length.
"^DD",100,100.008,38,21,0)
^^2^2^2970308^
"^DD",100,100.008,38,21,1,0)
This is the reason for unflagging this order, usually a response to the
"^DD",100,100.008,38,21,2,0)
reason for flag.
"^DD",100,100.008,38,"DT")
2970308
"^DD",100,100.008,39,0)
ALERTED PROVIDER^P200'^VA(200,^3;9^Q
"^DD",100,100.008,39,3)
Enter the name of the user who should be alerted to this flag.
"^DD",100,100.008,39,21,0)
^^1^1^2991216^
"^DD",100,100.008,39,21,1,0)
This is the user who was alerted to the flag.
"^DD",100,100.008,39,"DT")
2991216
"^DD",100,100.008,50,0)
WARD COMMENTS^100.0085^^5;0
"^DD",100,100.008,50,21,0)
^^1^1^2971219^
"^DD",100,100.008,50,21,1,0)
This is where ward or clinic comments on orders are stored.
"^DD",100,100.008,71,0)
CHART COPY PRINTED^S^0:NO;1:YES;^7;1^Q
"^DD",100,100.008,71,3)
ENTRY OF 'YES' MEANS CHART COPY HAS PRINTED.
"^DD",100,100.008,71,21,0)
^^1^1^2990707^^
"^DD",100,100.008,71,21,1,0)
This field is set to YES when the chart copy has printed.
"^DD",100,100.008,71,"DT")
2980521
"^DD",100,100.008,72,0)
CHART COPY PRINTED WHEN^D^^7;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,72,3)
ENTER THE 1ST TIME THE CHART COPY PRINTED.
"^DD",100,100.008,72,21,0)
^^1^1^2980521^
"^DD",100,100.008,72,21,1,0)
This field stores the date/time the chart copy 1st printed.
"^DD",100,100.008,72,"DT")
2980521
"^DD",100,100.008,73,0)
CHART COPY PRINTED BY^P200'^VA(200,^7;3^Q
"^DD",100,100.008,73,3)
ENTER THE PERSON WHO PRINTED THE 1ST CHART COPY
"^DD",100,100.008,73,21,0)
^^1^1^2980521^
"^DD",100,100.008,73,21,1,0)
This field contains the person signed on when the chart copy 1st printed.
"^DD",100,100.008,73,"DT")
2980521
"^DD",100,100.008,74,0)
CHART COPY PRINTER^F^^7;4^K:$L(X)>50!($L(X)<2) X
"^DD",100,100.008,74,3)
Answer must be 2-50 characters in length.
"^DD",100,100.008,74,21,0)
^^1^1^2980521^
"^DD",100,100.008,74,21,1,0)
This is the device that the chart copy was 1st sent to.
"^DD",100,100.008,74,"DT")
2980521
"^DD",100,100.0081,0)
ORDER TEXT SUB-FIELD^^.01^1
"^DD",100,100.0081,0,"DT")
3000724
"^DD",100,100.0081,0,"NM","ORDER TEXT")

"^DD",100,100.0081,0,"UP")
100.008
"^DD",100,100.0081,.01,0)
ORDER TEXT^WL^^0;1^Q
"^DD",100,100.0081,.01,3)
Enter the text of this order.
"^DD",100,100.0081,.01,21,0)
^.001^1^1^3000727^^
"^DD",100,100.0081,.01,21,1,0)
This is the text of the order.
"^DD",100,100.0081,.01,"DT")
3000724
"^DD",100,100.0082,0)
EXTERNAL TEXT SUB-FIELD^^.01^1
"^DD",100,100.0082,0,"DT")
3020312
"^DD",100,100.0082,0,"NM","EXTERNAL TEXT")

"^DD",100,100.0082,0,"UP")
100.008
"^DD",100,100.0082,.01,0)
EXTERNAL TEXT^WL^^0;1^Q
"^DD",100,100.0082,.01,8.5)
^
"^DD",100,100.0082,.01,9)
^
"^DD",100,100.0082,.01,21,0)
^.001^4^4^3020326^^^^
"^DD",100,100.0082,.01,21,1,0)
This is the text of the order stored in external format.  This field is used
"^DD",100,100.0082,.01,21,2,0)
along with the Digital Signature to validate the integrity of the order.
"^DD",100,100.0082,.01,21,3,0)
DO NOT MODIFY THE DATA IN THIS FIELD!  Changing anything in this field
"^DD",100,100.0082,.01,21,4,0)
will invalidate the order.
"^DD",100,100.0082,.01,"DT")
3020326
"^DD",100,100.0085,0)
WARD COMMENTS SUB-FIELD^^.01^1
"^DD",100,100.0085,0,"DT")
2970308
"^DD",100,100.0085,0,"NM","WARD COMMENTS")

"^DD",100,100.0085,0,"UP")
100.008
"^DD",100,100.0085,.01,0)
WARD COMMENTS^WL^^0;1^Q
"^DD",100,100.0085,.01,3)
Enter any additional comments on this order
"^DD",100,100.0085,.01,21,0)
^^3^3^2970308^
"^DD",100,100.0085,.01,21,1,0)
This field contains additional comments or instructions regarding this
"^DD",100,100.0085,.01,21,2,0)
order; these will be included in a detailed display of this order, but
"^DD",100,100.0085,.01,21,3,0)
not transmitted to the ancillary service.
"^DD",100,100.0085,.01,"DT")
2970308
"^DD",100,100.045,0)
RESPONSES SUB-FIELD^^2^6
"^DD",100,100.045,0,"DIK")
ORD2
"^DD",100,100.045,0,"DT")
2961003
"^DD",100,100.045,0,"IX","ID",100.045,.04)

"^DD",100,100.045,0,"NM","RESPONSES")

"^DD",100,100.045,0,"UP")
100
"^DD",100,100.045,.01,0)
ITEM ENTRY^NJ7,0^^0;1^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",100,100.045,.01,1,0)
^.1^^0
"^DD",100,100.045,.01,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",100,100.045,.01,21,0)
^^2^2^2950707^^
"^DD",100,100.045,.01,21,1,0)
This is the internal entry number of the prompt in the Item multiple
"^DD",100,100.045,.01,21,2,0)
by which this response was obtained.
"^DD",100,100.045,.01,"DT")
2910904
"^DD",100,100.045,.02,0)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"^DD",100,100.045,.02,3)
Select the dialog prompt from which this response was generated.
"^DD",100,100.045,.02,21,0)
^^2^2^2950707^^
"^DD",100,100.045,.02,21,1,0)
This is a pointer to the dialog prompt, which is in the Order Dialog file
"^DD",100,100.045,.02,21,2,0)
as type prompt.
"^DD",100,100.045,.02,"DT")
2950707
"^DD",100,100.045,.03,0)
INSTANCE^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",100,100.045,.03,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",100,100.045,.03,21,0)
^^2^2^2920225^
"^DD",100,100.045,.03,21,1,0)
In the case of multiple answers for the same item, this identifies the
"^DD",100,100.045,.03,21,2,0)
individual instance.
"^DD",100,100.045,.03,"DT")
2910805
"^DD",100,100.045,.04,0)
ID^F^^0;4^K:$L(X)>10!($L(X)<2) X
"^DD",100,100.045,.04,1,0)
^.1
"^DD",100,100.045,.04,1,1,0)
100.045^ID
"^DD",100,100.045,.04,1,1,1)
S ^OR(100,DA(1),4.5,"ID",$E(X,1,30),DA)=""
"^DD",100,100.045,.04,1,1,2)
K ^OR(100,DA(1),4.5,"ID",$E(X,1,30),DA)
"^DD",100,100.045,.04,1,1,"DT")
2961003
"^DD",100,100.045,.04,3)
Answer must be 2-10 characters in length.
"^DD",100,100.045,.04,21,0)
^^2^2^2961003^
"^DD",100,100.045,.04,21,1,0)
This field assigns a free text identifier to this response value, for quick
"^DD",100,100.045,.04,21,2,0)
access to certain values in this order.
"^DD",100,100.045,.04,"DT")
2961003
"^DD",100,100.045,1,0)
VALUE^F^^1;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",100,100.045,1,3)
Answer must be 1-245 characters in length.
"^DD",100,100.045,1,21,0)
^^2^2^2920225^
"^DD",100,100.045,1,21,1,0)
This contains the actual response, unless the value is a word processing
"^DD",100,100.045,1,21,2,0)
type.
"^DD",100,100.045,1,"DT")
2910805
"^DD",100,100.045,2,0)
TEXT^100.0451^^2;0
"^DD",100,100.045,2,21,0)
^^1^1^2970926^^
"^DD",100,100.045,2,21,1,0)
This contains responses to items that are a word processing type.
"^DD",100,100.0451,0)
TEXT SUB-FIELD^^.01^1
"^DD",100,100.0451,0,"DT")
2910805
"^DD",100,100.0451,0,"NM","TEXT")

"^DD",100,100.0451,0,"UP")
100.045
"^DD",100,100.0451,.01,0)
TEXT^WL^^0;1^Q
"^DD",100,100.0451,.01,3)
Enter text.
"^DD",100,100.0451,.01,"DT")
2910805
"^DD",100,100.09,0)
ORDER CHECKS SUB-FIELD^^1^6
"^DD",100,100.09,0,"DIK")
ORD2
"^DD",100,100.09,0,"DT")
2971025
"^DD",100,100.09,0,"IX","B",100.09,.01)

"^DD",100,100.09,0,"NM","ORDER CHECKS")

"^DD",100,100.09,0,"UP")
100
"^DD",100,100.09,.01,0)
ORDER CHECK^MP100.8'^ORD(100.8,^0;1^Q
"^DD",100,100.09,.01,1,0)
^.1
"^DD",100,100.09,.01,1,1,0)
100.09^B
"^DD",100,100.09,.01,1,1,1)
S ^OR(100,DA(1),9,"B",$E(X,1,30),DA)=""
"^DD",100,100.09,.01,1,1,2)
K ^OR(100,DA(1),9,"B",$E(X,1,30),DA)
"^DD",100,100.09,.01,3)
Enter an order check found for this order.
"^DD",100,100.09,.01,21,0)
^^1^1^2971025^^
"^DD",100,100.09,.01,21,1,0)
This is an order check that was found to be true for this order.
"^DD",100,100.09,.01,"DT")
2971025
"^DD",100,100.09,.02,0)
CLINICAL DANGER LEVEL^S^1:HIGH;2:MODERATE;3:LOW;^0;2^Q
"^DD",100,100.09,.02,3)
Enter the clinical danger level of this order check.
"^DD",100,100.09,.02,21,0)
^^3^3^2960424^
"^DD",100,100.09,.02,21,1,0)
This is the clinical danger level associated with this check; checks
"^DD",100,100.09,.02,21,2,0)
flagged as 'HIGH' danger level will require a justification for
"^DD",100,100.09,.02,21,3,0)
overriding it and releasing the order.
"^DD",100,100.09,.02,"DT")
2960424
"^DD",100,100.09,.04,0)
OVERRIDE REASON^F^^0;4^K:$L(X)>80!($L(X)<1) X
"^DD",100,100.09,.04,3)
Answer must be 1-80 characters in length.
"^DD",100,100.09,.04,21,0)
^^2^2^2960424^
"^DD",100,100.09,.04,21,1,0)
This is the reason entered by the user as the justification for
"^DD",100,100.09,.04,21,2,0)
overriding the order check and releasing the order.
"^DD",100,100.09,.04,"DT")
2960424
"^DD",100,100.09,.05,0)
OVERRIDDEN BY^P200'^VA(200,^0;5^Q
"^DD",100,100.09,.05,3)
Enter the name of the person who is overriding this order check
"^DD",100,100.09,.05,21,0)
^^2^2^2960613^
"^DD",100,100.09,.05,21,1,0)
This is the user who chose to override this order check and entered the
"^DD",100,100.09,.05,21,2,0)
reason why.
"^DD",100,100.09,.05,"DT")
2960613
"^DD",100,100.09,.06,0)
DATE/TIME OVERRIDDEN^D^^0;6^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.09,.06,3)
Enter the date/time this order check was overridden.
"^DD",100,100.09,.06,21,0)
^^1^1^2960613^
"^DD",100,100.09,.06,21,1,0)
This is the date/time when this order check occurred and was overridden.
"^DD",100,100.09,.06,"DT")
2960613
"^DD",100,100.09,1,0)
ORDER CHECK MESSAGE^F^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",100,100.09,1,3)
Answer must be 1-245 characters in length.
"^DD",100,100.09,1,21,0)
^^1^1^2990518^
"^DD",100,100.09,1,21,1,0)
This is the actual text of the order check that was displayed to the user.
"^DD",100,100.09,1,"DT")
2990518
"^DIC",100,100,0)
ORDER^100I
"^DIC",100,100,0,"GL")
^OR(100,
"^DIC",100,100,"%D",0)
^^2^2^2950424^^^^
"^DIC",100,100,"%D",1,0)
This is the file of orders/requisitions made for any package through the
"^DIC",100,100,"%D",2,0)
Order Entry Option (OR).
"^DIC",100,"B","ORDER",100)

**END**
**END**
