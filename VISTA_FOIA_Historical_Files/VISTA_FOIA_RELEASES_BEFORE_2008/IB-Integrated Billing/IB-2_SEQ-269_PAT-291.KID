Released IB*2*291 SEQ #269
Extracted from mail message
**KIDS**:IB*2.0*291^

**INSTALL NAME**
IB*2.0*291
"BLD",5103,0)
IB*2.0*291^INTEGRATED BILLING^0^3041220^y
"BLD",5103,1,0)
^9.61A^10^10^3041115^^
"BLD",5103,1,1,0)
This patch contains the following changes:
"BLD",5103,1,2,0)
 
"BLD",5103,1,3,0)
1.  Adds a parameter to the insurance company to specify whether the
"BLD",5103,1,4,0)
provider's SSN is to print on the HCFA and the UB92.
"BLD",5103,1,5,0)
 
"BLD",5103,1,6,0)
2.  Adds the capability to override the GROUP# field on transmitted claims.
"BLD",5103,1,7,0)
 
"BLD",5103,1,8,0)
3.  Fixes a problem where the ?ID action on screen 8 of the edit bill
"BLD",5103,1,9,0)
screens displays the wrong provider type for other than attending/rendering
"BLD",5103,1,10,0)
providers.
"BLD",5103,4,0)
^9.64PA^399^4
"BLD",5103,4,36,0)
36
"BLD",5103,4,36,2,0)
^9.641^36^1
"BLD",5103,4,36,2,36,0)
INSURANCE COMPANY  (File-top level)
"BLD",5103,4,36,2,36,1,0)
^9.6411^3.12^2
"BLD",5103,4,36,2,36,1,3.11,0)
REQUIRE SSN FOR PRINT HCFA
"BLD",5103,4,36,2,36,1,3.12,0)
REQUIRE SSN FOR PRINT UB92
"BLD",5103,4,36,222)
y^n^p^^^^n^^n
"BLD",5103,4,36,224)

"BLD",5103,4,350.8,0)
350.8
"BLD",5103,4,350.8,222)
n^n^f^^n^^y^o^n
"BLD",5103,4,350.8,224)
I $D(^IBE(350.8,"B","IB327",+Y))
"BLD",5103,4,364.6,0)
364.6
"BLD",5103,4,364.6,222)
n^n^f^^y^^y^o^n
"BLD",5103,4,364.6,224)
I +Y=1316
"BLD",5103,4,399,0)
399
"BLD",5103,4,399,2,0)
^9.641^399^1
"BLD",5103,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",5103,4,399,2,399,1,0)
^9.6411^.21^3
"BLD",5103,4,399,2,399,1,.21,0)
CURRENT BILL PAYER SEQUENCE
"BLD",5103,4,399,2,399,1,101,0)
PRIMARY INSURANCE CARRIER
"BLD",5103,4,399,2,399,1,102,0)
SECONDARY INSURANCE CARRIER
"BLD",5103,4,399,222)
y^n^p^^^^n^^n
"BLD",5103,4,399,224)

"BLD",5103,4,"APDD",36,36)

"BLD",5103,4,"APDD",36,36,3.11)

"BLD",5103,4,"APDD",36,36,3.12)

"BLD",5103,4,"APDD",399,399)

"BLD",5103,4,"APDD",399,399,.21)

"BLD",5103,4,"APDD",399,399,101)

"BLD",5103,4,"APDD",399,399,102)

"BLD",5103,4,"B",36,36)

"BLD",5103,4,"B",350.8,350.8)

"BLD",5103,4,"B",364.6,364.6)

"BLD",5103,4,"B",399,399)

"BLD",5103,"KRN",0)
^9.67PA^8989.52^19
"BLD",5103,"KRN",.4,0)
.4
"BLD",5103,"KRN",.401,0)
.401
"BLD",5103,"KRN",.402,0)
.402
"BLD",5103,"KRN",.402,"NM",0)
^9.68A^2^2
"BLD",5103,"KRN",.402,"NM",1,0)
IBEDIT INS CO1    FILE #36^36^0
"BLD",5103,"KRN",.402,"NM",2,0)
IB SCREEN3    FILE #399^399^0
"BLD",5103,"KRN",.402,"NM","B","IB SCREEN3    FILE #399",2)

"BLD",5103,"KRN",.402,"NM","B","IBEDIT INS CO1    FILE #36",1)

"BLD",5103,"KRN",.403,0)
.403
"BLD",5103,"KRN",.5,0)
.5
"BLD",5103,"KRN",.84,0)
.84
"BLD",5103,"KRN",3.6,0)
3.6
"BLD",5103,"KRN",3.8,0)
3.8
"BLD",5103,"KRN",9.2,0)
9.2
"BLD",5103,"KRN",9.8,0)
9.8
"BLD",5103,"KRN",9.8,"NM",0)
^9.68A^4^3
"BLD",5103,"KRN",9.8,"NM",1,0)
IBCNSC1^^0^B17304683
"BLD",5103,"KRN",9.8,"NM",2,0)
IBCEF74^^0^B71820469
"BLD",5103,"KRN",9.8,"NM",4,0)
IBCBB21^^0^B14291950
"BLD",5103,"KRN",9.8,"NM","B","IBCBB21",4)

"BLD",5103,"KRN",9.8,"NM","B","IBCEF74",2)

"BLD",5103,"KRN",9.8,"NM","B","IBCNSC1",1)

"BLD",5103,"KRN",19,0)
19
"BLD",5103,"KRN",19.1,0)
19.1
"BLD",5103,"KRN",101,0)
101
"BLD",5103,"KRN",409.61,0)
409.61
"BLD",5103,"KRN",771,0)
771
"BLD",5103,"KRN",870,0)
870
"BLD",5103,"KRN",8989.51,0)
8989.51
"BLD",5103,"KRN",8989.52,0)
8989.52
"BLD",5103,"KRN",8994,0)
8994
"BLD",5103,"KRN","B",.4,.4)

"BLD",5103,"KRN","B",.401,.401)

"BLD",5103,"KRN","B",.402,.402)

"BLD",5103,"KRN","B",.403,.403)

"BLD",5103,"KRN","B",.5,.5)

"BLD",5103,"KRN","B",.84,.84)

"BLD",5103,"KRN","B",3.6,3.6)

"BLD",5103,"KRN","B",3.8,3.8)

"BLD",5103,"KRN","B",9.2,9.2)

"BLD",5103,"KRN","B",9.8,9.8)

"BLD",5103,"KRN","B",19,19)

"BLD",5103,"KRN","B",19.1,19.1)

"BLD",5103,"KRN","B",101,101)

"BLD",5103,"KRN","B",409.61,409.61)

"BLD",5103,"KRN","B",771,771)

"BLD",5103,"KRN","B",870,870)

"BLD",5103,"KRN","B",8989.51,8989.51)

"BLD",5103,"KRN","B",8989.52,8989.52)

"BLD",5103,"KRN","B",8994,8994)

"BLD",5103,"QUES",0)
^9.62^^
"BLD",5103,"REQB",0)
^9.611^2^2
"BLD",5103,"REQB",1,0)
IB*2.0*290^2
"BLD",5103,"REQB",2,0)
IB*2.0*288^2
"BLD",5103,"REQB","B","IB*2.0*288",2)

"BLD",5103,"REQB","B","IB*2.0*290",1)

"DATA",350.8,308,0)
IB327^SSN is required on UB92 provider ID print - must be forced to print locally^IB327
"DATA",364.6,1316,0)
8^N^^20^1^^1^7^20^CURRENT INS CO PROVIDER NUMBER^0^1
"FIA",36)
INSURANCE COMPANY
"FIA",36,0)
^DIC(36,
"FIA",36,0,0)
36I
"FIA",36,0,1)
y^n^p^^^^n^^n
"FIA",36,0,10)

"FIA",36,0,11)

"FIA",36,0,"RLRO")

"FIA",36,0,"VR")
2.0^IB
"FIA",36,36)
1
"FIA",36,36,3.11)

"FIA",36,36,3.12)

"FIA",350.8)
IB ERROR
"FIA",350.8,0)
^IBE(350.8,
"FIA",350.8,0,0)
350.8I
"FIA",350.8,0,1)
n^n^f^^n^^y^o^n
"FIA",350.8,0,10)

"FIA",350.8,0,11)
I $D(^IBE(350.8,"B","IB327",+Y))
"FIA",350.8,0,"RLRO")

"FIA",350.8,0,"VR")
2.0^IB
"FIA",350.8,350.8)
0
"FIA",364.6)
IB FORM SKELETON DEFINITION
"FIA",364.6,0)
^IBA(364.6,
"FIA",364.6,0,0)
364.6IP
"FIA",364.6,0,1)
n^n^f^^y^^y^o^n
"FIA",364.6,0,10)

"FIA",364.6,0,11)
I +Y=1316
"FIA",364.6,0,"RLRO")

"FIA",364.6,0,"VR")
2.0^IB
"FIA",364.6,364.6)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,.21)

"FIA",399,399,101)

"FIA",399,399,102)

"IX",364.6,364.6,"ALL",0)
364.6^ALL^Allows for identification of local override fields that apply to ALL^MU^^F^IR^I^364.6^^^^^S
"IX",364.6,364.6,"ALL",1)
S ^IBA(364.7,"ALL",DA,X2(5))=""
"IX",364.6,364.6,"ALL",1.4)
I X2(4)'="L"!'X2(5)!(X2(2)'="")!(X2(3)'="")!'X2(1) S X=0
"IX",364.6,364.6,"ALL",2)
K ^IBA(364.7,"ALL",DA,X1(5))
"IX",364.6,364.6,"ALL",2.4)
I X1(4)'="L"!'X1(5)!(X1(2)'="")!(X1(3)'="")!'X1(1) S X=0
"IX",364.6,364.6,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.6,364.6,"ALL",11.1,0)
^.114IA^5^5
"IX",364.6,364.6,"ALL",11.1,1,0)
1^F^364.6^.03^^1^F
"IX",364.6,364.6,"ALL",11.1,1,1)
 
"IX",364.6,364.6,"ALL",11.1,2,0)
2^C
"IX",364.6,364.6,"ALL",11.1,2,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,5)
"IX",364.6,364.6,"ALL",11.1,3,0)
3^C
"IX",364.6,364.6,"ALL",11.1,3,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,6)
"IX",364.6,364.6,"ALL",11.1,4,0)
4^C
"IX",364.6,364.6,"ALL",11.1,4,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,2)
"IX",364.6,364.6,"ALL",11.1,5,0)
5^C
"IX",364.6,364.6,"ALL",11.1,5,1.5)
S X=+$O(^IBA(364.7,"B",DA,0))
"IX",364.6,364.6,"D",0)
364.6^D^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^R^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"D",1)
S ^IBA(364.6,"D",X2(1)_","_X2(2)_","_X2(3)_","_X2(4),DA)=""
"IX",364.6,364.6,"D",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.6,364.6,"D",2)
K ^IBA(364.6,"D",X1(1)_","_X1(2)_","_X1(3)_","_X1(4),DA)
"IX",364.6,364.6,"D",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.6,364.6,"D",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"D",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"D",11.1,1,0)
1^F^364.6^.01^^1^F
"IX",364.6,364.6,"D",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"D",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"D",11.1,4,0)
4^F^364.6^.08^^^F
"IX",399,399,"AE",0)
399^AE^Index by patient and insurance company^MU^^R^IR^I^399^^^^^S
"IX",399,399,"AE",.1,0)
^^7^7^3041021^
"IX",399,399,"AE",.1,1,0)
Cross reference of patients and bills to payer responsible for the bill.
"IX",399,399,"AE",.1,2,0)
This will be used to prevent deletion of insurance policy entries from the
"IX",399,399,"AE",.1,3,0)
patient file if a bill has been created for this insurance company.
"IX",399,399,"AE",.1,4,0)
 
"IX",399,399,"AE",.1,5,0)
Created with patch IB*2.0*288 replacing traditional cross-reference #1 in 
"IX",399,399,"AE",.1,6,0)
field 135 of file 399.  Medicare is now a valid insurance company for 
"IX",399,399,"AE",.1,7,0)
this index file.
"IX",399,399,"AE",1)
N CURR S CURR=+$$COBN^IBCEF(DA) I $G(X(4)),$G(X(CURR)) S ^DGCR(399,"AE",X(4),X(CURR),DA)=""
"IX",399,399,"AE",2)
N G I $G(X(4)) F G=1,2,3 I $G(X(G)) K ^DGCR(399,"AE",X(4),X(G),DA)
"IX",399,399,"AE",2.5)
K ^DGCR(399,"AE")
"IX",399,399,"AE",11.1,0)
^.114IA^4^4
"IX",399,399,"AE",11.1,1,0)
1^F^399^101^^^F
"IX",399,399,"AE",11.1,1,3)

"IX",399,399,"AE",11.1,2,0)
2^F^399^102^^^F
"IX",399,399,"AE",11.1,2,3)

"IX",399,399,"AE",11.1,3,0)
3^F^399^103^^^F
"IX",399,399,"AE",11.1,3,3)

"IX",399,399,"AE",11.1,4,0)
4^F^399^.02^^^F
"IX",399,399,"AE",11.1,4,3)

"IX",399,399,"AUPDID",0)
399^AUPDID^UPDATE PROVIDER ID WHEN DATA FIELDS CHANGE AT TOP LEVEL OF FILE^MU^^R^IR^I^399^^^^^A
"IX",399,399,"AUPDID",.1,0)
^^5^5^3010109^
"IX",399,399,"AUPDID",.1,1,0)
This cross reference maintains the integrity of the rendering or attending
"IX",399,399,"AUPDID",.1,2,0)
provider id whenever an insurance company is added, deleted or changed
"IX",399,399,"AUPDID",.1,3,0)
on the claim.  If either of these provider functions exist on the bill,
"IX",399,399,"AUPDID",.1,4,0)
this cross reference sets the default id data based on the insurance co's
"IX",399,399,"AUPDID",.1,5,0)
parameters.
"IX",399,399,"AUPDID",1)
D:X1(1)'=X2(1)!(X1(5)'=X2(5)) SETID^IBCEP3(DA,1) D:X1(2)'=X2(2)!(X1(4)'=X2(4)) SETID^IBCEP3(DA,2) D:X1(3)'=X2(3)!(X1(6)'=X2(6)) SETID^IBCEP3(DA,3)
"IX",399,399,"AUPDID",1.4)
S X=$S($O(^DGCR(399,DA,"PRV",0)):1,1:0)
"IX",399,399,"AUPDID",2)
D:X1(1)'=X2(1)!(X1(5)'=X2(5)) DELID^IBCEP3(DA,1) D:X1(2)'=X2(2)!(X1(4)'=X2(4)) DELID^IBCEP3(DA,2) D:X1(3)'=X2(3)!(X1(6)'=X2(6)) DELID^IBCEP3(DA,3)
"IX",399,399,"AUPDID",2.4)
S X=$S($O(^DGCR(399,DA,"PRV",0)):1,1:0)
"IX",399,399,"AUPDID",11.1,0)
^.114IA^6^6
"IX",399,399,"AUPDID",11.1,1,0)
1^F^399^101^^^F
"IX",399,399,"AUPDID",11.1,2,0)
2^F^399^102^^^F
"IX",399,399,"AUPDID",11.1,3,0)
3^F^399^103^^^F
"IX",399,399,"AUPDID",11.1,4,0)
4^F^399^113^^^F
"IX",399,399,"AUPDID",11.1,5,0)
5^F^399^112^^^F
"IX",399,399,"AUPDID",11.1,5,3)
 
"IX",399,399,"AUPDID",11.1,6,0)
6^F^399^114^^^F
"IX",399,399,"AUPDID",11.1,6,3)
 
"KRN",.402,1276)
 
"KRN",.402,1276,-1)
0^1
"KRN",.402,1276,0)
IBEDIT INS CO1^3041119.0845^^36^^^3041119
"KRN",.402,1276,"DIAB",1,0,36,1)
MAX NUMBER TEST BILLS PER DAY;"MAX # TEST BILLS TO TRANSMIT PER DAY"
"KRN",.402,1276,"DIAB",1,1,36.03,0)
ALL
"KRN",.402,1276,"DIAB",4,0,36,3)
ANOTHER CO. PROCESS OP CLAIMS?;T
"KRN",.402,1276,"DIAB",8,0,36,1)
4.01;T
"KRN",.402,1276,"DIAB",9,0,36,1)
4.02;T
"KRN",.402,1276,"DIAB",9,0,36,5)
ANOTHER CO. PROCESS INQUIRIES?;T
"KRN",.402,1276,"DIAB",12,0,36,2)
ANOTHER CO. PROCESS IP CLAIMS?;T
"KRN",.402,1276,"DIAB",19,0,36,4)
ANOTHER CO. PROCESS APPEALS?;T
"KRN",.402,1276,"DIAB",20,0,36,0)
ANOTHER CO. PROCESS PRECERTS?;T
"KRN",.402,1276,"DIAB",24,0,36,3)
ANOTHER CO. PROCESS RX CLAIMS?;T
"KRN",.402,1276,"DR",1,36)
S:",6,"'[IBY Y="@0";.01;@0;S:",0,1,6,12,"'[IBY Y="@10";S:",12,"[IBY Y="@18";2;1;.06;.07;.08;.09;.15;3.03;.12;.14;.13;3.09;.132;.134;.178T~;S:'X Y="@11";.139;S Y="@16";@11;.133;@16;3.01;S DIPA("IBTX")=X S:DIPA("IBTX")'=2 Y="@17";
"KRN",.402,1276,"DR",1,36,1)
3.06MAX # TEST BILLS TO TRANSMIT PER DAY~;@17;I '$G(DIPA("IBTX")) S Y="@18";3.02;3.04;@18;S:",6,12,"'[IBY Y="@181";4.01T~;4.02T~;4.03;3.11;3.12;4.09;@181;S:IBY["1" Y="@99";@10;S:",0,2,6,"'[IBY Y="@20";.111;S:X="" Y="@1";.112;
"KRN",.402,1276,"DR",1,36,2)
S:X="" Y="@1";.113;@1;.114;.115;.116;.131;.119;S:(IBY["0")!(IBY["2") Y="@99";@20;S:",3,6,"'[IBY Y="@30";.128T~;S:'X Y="@21";.127;S Y="@26";@21;.121;S:X="" Y="@2";.122;S:X="" Y="@2";.123;@2;.124;.125;.126;.135;.129;@26;
"KRN",.402,1276,"DR",1,36,3)
S:IBY["3" Y="@99";@30;S:",10,6,"'[IBY Y="@80";.168T~;S:'X Y="@31";.167;S Y="@36";@31;.161;S:X="" Y="@5";.162;S:X="" Y="@5";.163;@5;.164;.165;.166;.136;.169;@36;S:IBY["10" Y="@99";@80;S:",11,6,"'[IBY Y="@90";.188T~;S:'X Y="@81";
"KRN",.402,1276,"DR",1,36,4)
.187;S Y="@86";@81;.181;S:X="" Y="@6";.182;S:X="" Y="@6";.183;@6;.184;.185;.186;.1311;.189;@86;S:IBY["11" Y="@99";@90;S:",4,6,"'[IBY Y="@40";.148T~;S:'X Y="@41";.147;S Y="@46";@41;.141;S:X="" Y="@3";.142;S:X="" Y="@3";.143;@3;.144;
"KRN",.402,1276,"DR",1,36,5)
.145;.146;.137;.149;@46;S:IBY["4" Y="@99";@40;S:",5,6,"'[IBY Y="@60";.158T~;S:'X Y="@51";.157;S Y="@56";@51;.151;S:X="" Y="@4";.152;S:X="" Y="@4";.153;@4;.154;.155;.156;.138;.159;@56;S:IBY["5" Y="@99";@60;S:",7,6,"'[IBY Y="@50";
"KRN",.402,1276,"DR",1,36,6)
3.1;@50;S:",8,6,"'[IBY Y="@70";11;S:IBY["8" Y="@99";@70;S:",9,6,"'[IBY Y="@99";10;@99;
"KRN",.402,1276,"DR",2,36.03)
.01
"KRN",.402,1297,-1)
0^2
"KRN",.402,1297,0)
IB SCREEN3^3020125.1206^@^399^^@^3041119
"KRN",.402,1297,"AR",399,85)
1^IBXSC311
"KRN",.402,1297,"DR",1,399)
S:$G(IBCNRTN) Y="@313" K IBCNRTN;S:IBDR20'["31" Y="@31";.07;S:'+$P(^IBE(350.9,1,1),U,22) Y="@314";S DIPA("FT1")=$P($G(^DGCR(399,DA,0)),U,19);@5;.19;S DIPA("FT")=$P($G(^DGCR(399,DA,0)),U,19);
"KRN",.402,1297,"DR",1,399,1)
I $P($G(^IBE(353,+DIPA("FT"),2)),U,2)="P",$P($G(^(2)),U,4) S DIPA("FT1")=DIPA("FT") D CKFT^IBCIUT1(IBIFN) S Y="@10";W !,*7,"Must be a printable national form type";.19///^S X=$G(DIPA("FT1"));S Y="@5";@10;D FTPRV^IBCEU5(DA);@314;
"KRN",.402,1297,"DR",1,399,2)
S X=$P(^DGCR(399,DA,0),U,11);S Y="@"_$S(X']"":31,X="p":31,X="o":311,1:310);@310;D 1^IBCSCH1 S Y="@"_$S(IBADI=-1:31,'IBADI:312,1:33);@313;@312;112;I X'="" S:$E(IBVV,9) IBVV=$E(IBVV,1,8)_"0";S:X="" Y="@998";113;S:X="" Y="@998";114;
"KRN",.402,1297,"DR",1,399,3)
@998;S Y="@31";@311;D INST^IBCU;111;K DIC("DR"),DLAYGO;@31;.21;S:IBDR20'["32" Y="@33";122;123;124;@33;S:IBDR20'["33" Y="@34";104;105;106;S:X="" Y=107;121;107;108;109;@34;@999;
"KRN",.402,1297,"ROU")
^IBXSC3
"KRN",.402,1297,"ROUOLD")
IBXSC3
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"PGL",364.6,0,3,.03)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)
 
"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
291^3041220
"PKG",200,22,1,"PAH",1,1,0)
^^10^10^3041220
"PKG",200,22,1,"PAH",1,1,1,0)
This patch contains the following changes:
"PKG",200,22,1,"PAH",1,1,2,0)
 
"PKG",200,22,1,"PAH",1,1,3,0)
1.  Adds a parameter to the insurance company to specify whether the
"PKG",200,22,1,"PAH",1,1,4,0)
provider's SSN is to print on the HCFA and the UB92.
"PKG",200,22,1,"PAH",1,1,5,0)
 
"PKG",200,22,1,"PAH",1,1,6,0)
2.  Adds the capability to override the GROUP# field on transmitted claims.
"PKG",200,22,1,"PAH",1,1,7,0)
 
"PKG",200,22,1,"PAH",1,1,8,0)
3.  Fixes a problem where the ?ID action on screen 8 of the edit bill
"PKG",200,22,1,"PAH",1,1,9,0)
screens displays the wrong provider type for other than attending/rendering
"PKG",200,22,1,"PAH",1,1,10,0)
providers.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","IBCBB21")
0^4^B14291950
"RTN","IBCBB21",1,0)
IBCBB21 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE FOR UB-92 ;2-NOV-89
"RTN","IBCBB21",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,232,155,291**;21-MAR-94
"RTN","IBCBB21",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB21",4,0)
 ;
"RTN","IBCBB21",5,0)
EN(IBZPRC92) ;
"RTN","IBCBB21",6,0)
 ;
"RTN","IBCBB21",7,0)
 N ECODE,IBTXMT,IBXDATA,IBLPRT,IBI,Z,Z0,Z1,IBREQMRA
"RTN","IBCBB21",8,0)
 I '$D(IBZPRC92) D ALLPROC^IBCVA1(IBIFN,.IBZPRC92)
"RTN","IBCBB21",9,0)
 S IBREQMRA=$$REQMRA^IBEFUNC(IBIFN)    ; MRA?
"RTN","IBCBB21",10,0)
 K IBQUIT S IBQUIT=0
"RTN","IBCBB21",11,0)
 S (Z,Z0,Z1)=0
"RTN","IBCBB21",12,0)
 F  S Z=$O(IBZPRC92(Z)) Q:'Z  S:IBZPRC92(Z)["CPT" Z0=Z0+1 S:IBZPRC92(Z)["ICD" Z1=Z1+1
"RTN","IBCBB21",13,0)
 S IBTXMT=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB21",14,0)
 S IBZPRC92=Z0_U_Z1 ;Save # of CPT's and ICD9's
"RTN","IBCBB21",15,0)
 ; More than 50 procedures on a bill - must print locally
"RTN","IBCBB21",16,0)
 I IBTXMT,(+IBZPRC92>50!(+$P(IBZPRC92,U,2)>50)) D  Q:IBQUIT
"RTN","IBCBB21",17,0)
 . I 'IBREQMRA S IBQUIT=$$IBER^IBCBB3(.IBER,308) Q
"RTN","IBCBB21",18,0)
 . I '$P(IBNDTX,U,9) S IBQUIT=$$IBER^IBCBB3(.IBER,325)
"RTN","IBCBB21",19,0)
 ; If ICD9 procedures with dates and charges, bill 11x or 83x needs operating physician
"RTN","IBCBB21",20,0)
 I IBTOB12="11",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB304;"
"RTN","IBCBB21",21,0)
 I IBTOB12="83",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB312;"
"RTN","IBCBB21",22,0)
 ;
"RTN","IBCBB21",23,0)
 ; If any CPT procedures have more than 2 modifiers, warn
"RTN","IBCBB21",24,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>2 S Z0="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 2 modifiers - only first 2 will be used" D WARN^IBCBB11(Z0)
"RTN","IBCBB21",25,0)
 ;
"RTN","IBCBB21",26,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="A" S IBER=IBER_"IB086;"
"RTN","IBCBB21",27,0)
 ;
"RTN","IBCBB21",28,0)
 ; UB92 Diagnosis Codes
"RTN","IBCBB21",29,0)
 K IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCBB21",30,0)
 ;
"RTN","IBCBB21",31,0)
 ; Only 9 dx's allowed per claim plus 1 E-code
"RTN","IBCBB21",32,0)
 S (Z,ECODE,IBI)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  D  Q:IBER["309;"
"RTN","IBCBB21",33,0)
 . S IBI=IBI+1
"RTN","IBCBB21",34,0)
 . I $E($$ICD9^IBACSV(+$P(IBXDATA(Z),U)))="E" S:ECODE IBQUIT=$$IBER^IBCBB3(.IBER,301) S:'ECODE IBI=IBI-1,ECODE=1
"RTN","IBCBB21",35,0)
 . ; max DX check does not apply to MRAs
"RTN","IBCBB21",36,0)
 . I IBTXMT,IBI>9 D
"RTN","IBCBB21",37,0)
 .. I 'IBREQMRA Q:$P(IBNDTX,U,8)  S IBER=IBER_"IB309;" Q
"RTN","IBCBB21",38,0)
 .. I '$P(IBNDTX,U,9) S IBER=IBER_"IB326;"
"RTN","IBCBB21",39,0)
 ;
"RTN","IBCBB21",40,0)
 I 'IBI S IBER=IBER_"IB071;"   ;Require Diag code NOIS:OKL-0304-72495
"RTN","IBCBB21",41,0)
 I IBI,$$INPAT^IBCEF(IBIFN,1),$E($$ICD9^IBACSV(+$P(IBXDATA(1),U)))="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB21",42,0)
 I '$$OCC10^IBCBB2(IBIFN,.IBXDATA,3) S IBER=IBER_"IB093;"
"RTN","IBCBB21",43,0)
 ;
"RTN","IBCBB21",44,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",45,0)
 D F^IBCEF("N-UB92 SERVICE LINE (PRINT)",,,IBIFN)
"RTN","IBCBB21",46,0)
 S (Z0,IBI)=0 F  S IBI=$O(^TMP($J,"IBC-RC",IBI)) Q:'IBI  S Z=$G(^(IBI))  Q:+$P(Z,U,2)=1  I $P(Z,U,2) D
"RTN","IBCBB21",47,0)
 . I IBER'["IB090;",$P(Z,U,2)>1,($P(Z,U,7)>99999.99!($P(Z,U,8)>99999.99)) S IBER=IBER_"IB090;"
"RTN","IBCBB21",48,0)
 . Q:$P(Z,U,2)'<180&($P(Z,U,2)'>189)  ;Pass days (LOA) don't matter
"RTN","IBCBB21",49,0)
 . I '$P(Z,U,7),'$P(Z,U,8),'Z0,$$COBN^IBCEF(IBIFN)'>1  S Z0="Rev Code(s) having a 0-charge will not be transmitted for the bill" D WARN^IBCBB11(Z0) S Z0=1
"RTN","IBCBB21",50,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",51,0)
 I IBTXMT D
"RTN","IBCBB21",52,0)
 . ; Force UB92 to print local if SSN ID required and claim may be
"RTN","IBCBB21",53,0)
 . ; printed at clearinghouse
"RTN","IBCBB21",54,0)
 . N IBZ
"RTN","IBCBB21",55,0)
 . I 'IBREQMRA Q:$S('$P($G(^DIC(36,+$$CURR^IBCEF2(IBIFN),3)),U,12):1,1:$P($G(^DGCR(399,IBIFN,"TX")),U,8)=1)
"RTN","IBCBB21",56,0)
 . I IBREQMRA Q:$S('$P($G(^DIC(36,+$P($G(^DGCR(399,IBIFN,"M")),U,$$COBN^IBCEF(IBIFN)+1),3)),U,12):1,1:$P($G(^DGCR(399,IBIFN,"TX")),U,9)=1)
"RTN","IBCBB21",57,0)
 . D F^IBCEF("N-"_$S('IBREQMRA:"CURRENT",1:"ALL")_" INSURANCE CO 837 ID","IBZ",,IBIFN)
"RTN","IBCBB21",58,0)
 . I IBREQMRA S IBZ=$G(IBI($$COBN^IBCEF(IBIFN)+1))
"RTN","IBCBB21",59,0)
 . I $S(IBZ="":0,$E(IBZ,$L(IBZ)-3,$L(IBZ))="PRNT":0,1:1) Q
"RTN","IBCBB21",60,0)
 . S IBER=IBER_"IB327;"
"RTN","IBCBB21",61,0)
 Q
"RTN","IBCBB21",62,0)
 ;
"RTN","IBCEF74")
0^2^B71820469
"RTN","IBCEF74",1,0)
IBCEF74 ;WOIFO/SS - FORMATTER/EXTRACT BILL FUNCTIONS ;31-JUL-03
"RTN","IBCEF74",2,0)
 ;;2.0;INTEGRATED BILLING;**232,280,155,290,291**;21-MAR-94
"RTN","IBCEF74",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF74",4,0)
 ;
"RTN","IBCEF74",5,0)
SORT(IBPRNUM,IBPRTYP,IB399,IBSRC,IBDST,IBN,IBEXC,IBSEQ) ;
"RTN","IBCEF74",6,0)
 N IBXIEN,IBXDATA,IBNET,IBTRI,IB1,IB2,IBID,Z,IBZ,IBZ1,IBSVP
"RTN","IBCEF74",7,0)
 S (IB1,IB2,IBZ,IBZ1,IBTRI)=""
"RTN","IBCEF74",8,0)
 D F^IBCEF("N-ALL ATT/RENDERING PROV SSN","IBZ",,IB399)
"RTN","IBCEF74",9,0)
 S IBZ1=$$ALLPTYP^IBCEF3(IB399)
"RTN","IBCEF74",10,0)
 F Z=1:1:3 S $P(IBZ1,U,Z)=$S($P(IBZ1,U,Z)="CH":1,1:"") S:$P(IBZ1,U,Z) IBTRI=1
"RTN","IBCEF74",11,0)
 S IBNET=$$NETID^IBCEP() ; netwrk id type
"RTN","IBCEF74",12,0)
 I $G(IBN) D
"RTN","IBCEF74",13,0)
 . S Z=0 F  S Z=$O(IBDST(IBPRNUM,IBPRTYP,Z)) Q:'Z  S IBID(+$P(IBDST(IBPRNUM,IBPRTYP,Z),U,9))=""
"RTN","IBCEF74",14,0)
 F  S IB1=$O(IBSRC(IB1)) Q:IB1=""  D
"RTN","IBCEF74",15,0)
 . N OK,IBSTLIC
"RTN","IBCEF74",16,0)
 . S IBSTLIC=""
"RTN","IBCEF74",17,0)
 . F  S IB2=$O(IBSRC(IB1,IB2)) Q:IB2=""  D
"RTN","IBCEF74",18,0)
 . . S IBSVP=$P(IBSRC(IB1,IB2),U)
"RTN","IBCEF74",19,0)
 . . ; Ck state of care/lic match if st lic#
"RTN","IBCEF74",20,0)
 . . I $P($G(IBSRC(IB1,IB2)),U,3)="0B" S OK=1 D  Q:'OK
"RTN","IBCEF74",21,0)
 . . . I +$$CAREST^IBCEP2A(IB399)'=$P(IBSRC(IB1,IB2),U,7) S IBSTLIC=1 Q
"RTN","IBCEF74",22,0)
 . . . I $G(IBSTLIC(0))'="" S OK=0 Q
"RTN","IBCEF74",23,0)
 . . . S IBSTLIC(0)=$G(IBSRC(IB1,IB2)),OK=0
"RTN","IBCEF74",24,0)
 . . ; If ID overridden, output no others of this type
"RTN","IBCEF74",25,0)
 . . I $G(IBEXC),$P($G(IBSRC(IB1,IB2)),U,8)=IBEXC Q
"RTN","IBCEF74",26,0)
 . . ; Exclude SSN from sec ids unless required
"RTN","IBCEF74",27,0)
 . . I $P($G(IBSRC(IB1,IB2)),U,3)="SY" Q
"RTN","IBCEF74",28,0)
 . . ; Only 1 of each prov id type
"RTN","IBCEF74",29,0)
 . . Q:$D(IBID(+$P($G(IBSRC(IB1,IB2)),U,9)))
"RTN","IBCEF74",30,0)
 . . S IBN=IBN+1,IBID(+$P($G(IBSRC(IB1,IB2)),U,9))=""
"RTN","IBCEF74",31,0)
 . . S IBDST(IBPRNUM,IBPRTYP,IBN)=$G(IBSRC(IB1,IB2))
"RTN","IBCEF74",32,0)
 . I '$G(IBSTLIC),$G(IBSTLIC(0))'="" S IBN=IBN+1,IBDST(IBPRNUM,IBPRTYP,IBN)=IBSTLIC(0)
"RTN","IBCEF74",33,0)
 I $$FT^IBCEF(IBIFN)=2,$G(IBID(IBNET))="",IBTRI,$P(IBZ1,U,IBSEQ) D
"RTN","IBCEF74",34,0)
 . Q:$P(IBZ,U,IBPRTYP)=""
"RTN","IBCEF74",35,0)
 . ; here, no network id & TRICARE ins co.
"RTN","IBCEF74",36,0)
 . N Z
"RTN","IBCEF74",37,0)
 . S Z=+$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0)),Z=$P($G(^DGCR(399,IB399,"PRV",Z,0)),U,2)
"RTN","IBCEF74",38,0)
 . S IBN=IBN+1,IBDST(IBPRNUM,IBPRTYP,IBN)=Z_U_+$$POLICY^IBCEF(IB399,1,IBSEQ)_U_$P($G(^IBE(355.97,IBNET,0)),U,3)_U_$P(IBZ,U,IBPRTYP)_U_"0^0^^^"_IBNET
"RTN","IBCEF74",39,0)
 Q
"RTN","IBCEF74",40,0)
 ;
"RTN","IBCEF74",41,0)
 ;-- PROVINF --
"RTN","IBCEF74",42,0)
 ;Create array with prov info
"RTN","IBCEF74",43,0)
 ;Input:
"RTN","IBCEF74",44,0)
 ; IB399 - ien #399
"RTN","IBCEF74",45,0)
 ; IBPRNUM - 1=prim ins, 2= sec, 3 -tert
"RTN","IBCEF74",46,0)
 ; IBRES - for results
"RTN","IBCEF74",47,0)
 ; IBSORT - to sort OTHER INSURANCE data 
"RTN","IBCEF74",48,0)
 ;  if PROVINF is called for "C" mode of PROVIDER subroutine then 
"RTN","IBCEF74",49,0)
 ;    IBSORT can be any (say 1)
"RTN","IBCEF74",50,0)
 ;  if PROVINF is called for "O" mode then can be more than set of data
"RTN","IBCEF74",51,0)
 ;    - need to sort array to use it (like IBXDATA(1) and IBXDATA(2))
"RTN","IBCEF74",52,0)
 ;    for mode "O" it should be 1 or 2 (see PROVIDER section)
"RTN","IBCEF74",53,0)
 ;IBINSTP -  "C" -current ins, "O"-other
"RTN","IBCEF74",54,0)
 ;Output:
"RTN","IBCEF74",55,0)
 ; IBRES(PRNUM,PRTYPE,SEQ#)=PROV^INSUR^IDTYPE^ID^FORMTYP^CARETYP
"RTN","IBCEF74",56,0)
 ; where:(see PROVIDER)
"RTN","IBCEF74",57,0)
PROVINF(IB399,IBPRNUM,IBRES,IBSORT,IBINSTP) ;
"RTN","IBCEF74",58,0)
 I +$G(IBSORT)=0 S IBSORT=IBPRNUM
"RTN","IBCEF74",59,0)
 N IBPRTYP,IBINSCO,IBPROV,IBFRMTYP,IBCARE,IB35591,IBN,IBCURR,IBEXC,IBALLSSN,IBSSNIEN
"RTN","IBCEF74",60,0)
 S IBN=0
"RTN","IBCEF74",61,0)
 D F^IBCEF("N-ALL ATT/RENDERING PROV SSN","IBALLSSN",,IB399)
"RTN","IBCEF74",62,0)
 S Q=0 F  S Q=$O(^IBE(355.97,Q)) Q:'Q  I $P($G(^(Q,0)),U,3)="SY" S IBSSNIEN=Q Q
"RTN","IBCEF74",63,0)
 S IBINSCO=+$P($G(^DGCR(399,IB399,"M")),"^",IBPRNUM)
"RTN","IBCEF74",64,0)
 S IBFRMTYP=$$FT^IBCEF(IB399),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF74",65,0)
 S IBCARE=$S($$ISRX^IBCEF1(IB399):3,1:0) ;if an Rx refill bill
"RTN","IBCEF74",66,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IB399,1) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEF74",67,0)
 F IBPRTYP=1:1:9 D
"RTN","IBCEF74",68,0)
 . N Z,IB355OV
"RTN","IBCEF74",69,0)
 . S IBPROV=$$PROVPTR^IBCEF7(IB399,IBPRTYP)
"RTN","IBCEF74",70,0)
 . Q:+IBPROV=0
"RTN","IBCEF74",71,0)
 . ;don't create anything if form type not HCFA or UB
"RTN","IBCEF74",72,0)
 . Q:IBFRMTYP=0
"RTN","IBCEF74",73,0)
 . N IBRETARR S IBRETARR=0
"RTN","IBCEF74",74,0)
 . D PRACT^IBCEF71(IBINSCO,IBFRMTYP,IBCARE,IBPROV,.IBRETARR,IBPRTYP,$G(IBINSTP))
"RTN","IBCEF74",75,0)
 . S IB355OV="",IBEXC=""
"RTN","IBCEF74",76,0)
 . S Z=$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0))
"RTN","IBCEF74",77,0)
 . I Z S Z=$G(^DGCR(399,IB399,"PRV",Z,0)) D
"RTN","IBCEF74",78,0)
 .. I $P(Z,U,IBPRNUM+4)'="",$P(Z,U,IBPRNUM+11)'="" S IB355OV=$P(Z,U,IBPRNUM+4)_U_$P(Z,U,IBPRNUM+11)
"RTN","IBCEF74",79,0)
 . S IBCURR=$$COB^IBCEF(IB399)
"RTN","IBCEF74",80,0)
 . S IBN=0,IB35591=$$CH35591^IBCEF72(IBINSCO,IBFRMTYP,IBCARE)
"RTN","IBCEF74",81,0)
 . I $G(IBINSTP)="C","34"[$G(IBPRTYP),"P"[$G(IBCURR),$G(IBFRMTYP)=2,$$MCRONBIL^IBEFUNC(IB399) S IB355OV=$$MCR24K^IBCEU3(IB399)_"^12"
"RTN","IBCEF74",82,0)
 . I $G(IBINSTP)="O","34"[$G(IBPRTYP),"ST"[$G(IBCURR),$G(IBFRMTYP)=2,$$MCRONBIL^IBEFUNC(IB399) S IB355OV=$$MCR24K^IBCEU3(IB399)_"^12" ;Calculate MEDICARE (WNR) specific provider qualifier and ID for HCFA 1500 secondary claims
"RTN","IBCEF74",83,0)
 . I $P(IB355OV,U,2) D
"RTN","IBCEF74",84,0)
 .. I $$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P($G(^IBE(355.97,+$P(IB355OV,U,2),0)),U,3)) D
"RTN","IBCEF74",85,0)
 ... S IBEXC=$P(IB355OV,U,2),IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="OVERRIDE^"_IBINSCO_U_$P($G(^IBE(355.97,+IBEXC,0)),U,3)_U_$P(IB355OV,U)_"^^^^^"_+IBEXC
"RTN","IBCEF74",86,0)
 . I IB35591'="",IBEXC'=$P(IB35591,U,3) S:$$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P(IB35591,"^")) IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="DEFAULT^"_IBINSCO_"^"_IB35591_"^^",$P(IBRES(IBSORT,IBPRTYP,IBN),U,9)=$P(IB35591,U,3)
"RTN","IBCEF74",87,0)
 . I IBFRMTYP=2,$P($G(^DIC(36,IBINSCO,3)),U,11),$P(IBALLSSN,U,IBPRTYP)'="",IBSSNIEN D  ; Force SSN as secondary id for HCFA 1500
"RTN","IBCEF74",88,0)
 .. S IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="REQUIRED^"_IBINSCO_"^SY^"_$P(IBALLSSN,U,IBPRTYP),$P(IBRES(IBSORT,IBPRTYP,IBN),U,9)=IBSSNIEN
"RTN","IBCEF74",89,0)
 . D SORT(IBSORT,IBPRTYP,IB399,.IBRETARR,.IBRES,IBN,IBEXC,IBPRNUM)
"RTN","IBCEF74",90,0)
 . S IBRES(IBSORT,IBPRTYP)=IBPROV
"RTN","IBCEF74",91,0)
 S IBRES(IBSORT)=$S(IBPRNUM=3:"T",IBPRNUM=2:"S",1:"P")
"RTN","IBCEF74",92,0)
 Q
"RTN","IBCEF74",93,0)
 ;
"RTN","IBCEF74",94,0)
SECIDCK(IBIFN,IBSEQ,IBTYP,IBIFN1) ; Function returns 1 if ID type ptr in
"RTN","IBCEF74",95,0)
 ;  IBTYP is valid X12 code for the claim/prov function (IBPROVF)
"RTN","IBCEF74",96,0)
 ;  as a sec id
"RTN","IBCEF74",97,0)
 ; IBSEQ = COB seq being checked
"RTN","IBCEF74",98,0)
 ; IBIFN1 = entry # in PRV multiple being checked
"RTN","IBCEF74",99,0)
 ;  Called from input transform of fields .12-.14, subfile 399.0222
"RTN","IBCEF74",100,0)
 N IBOK,IBFRM,IBCOBN,IBX12,IBPROVF
"RTN","IBCEF74",101,0)
 S IBPROVF=+$G(^DGCR(399,IBIFN,"PRV",IBIFN1,0))
"RTN","IBCEF74",102,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBFRM=$S(IBFRM=3:1,1:2) ; Form type
"RTN","IBCEF74",103,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN) S:'IBCOBN IBCOBN=1 ; Current COB seq
"RTN","IBCEF74",104,0)
 S IBX12=$P($G(^IBE(355.97,+IBTYP,0)),U,3) ; X12 code for prov id typ
"RTN","IBCEF74",105,0)
 Q $$CHSEC^IBCEF73(IBFRM,IBPROVF,$S(IBSEQ=IBCOBN:"C",1:"O"),IBX12)
"RTN","IBCEF74",106,0)
 ;
"RTN","IBCEF74",107,0)
DEFID(IBIFN,IBPRV) ;
"RTN","IBCEF74",108,0)
 ; IBIFN = ien of bill
"RTN","IBCEF74",109,0)
 ; IBPRV = ien of entry subfile 399.0222
"RTN","IBCEF74",110,0)
 ;  Function returns default ids: prim id def^sec id def^tert id def
"RTN","IBCEF74",111,0)
 ;  SSN cannot be the default ID
"RTN","IBCEF74",112,0)
 N Z,Z1,ID,IBZ,IBINS,IBINS4,IBUB
"RTN","IBCEF74",113,0)
 S IBZ=""
"RTN","IBCEF74",114,0)
 S IBUB=($$FT^IBCEF(IBIFN)=3)
"RTN","IBCEF74",115,0)
 D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ","",IBIFN)
"RTN","IBCEF74",116,0)
 S Z=$G(^DGCR(399,IBIFN,"PRV",IBPRV,0)),ID=$P(Z,U,5,7)
"RTN","IBCEF74",117,0)
 F Z1=1:1:3 I $P(ID,U,Z1)="" D
"RTN","IBCEF74",118,0)
 . Q:'$G(^DGCR(399,IBIFN,"I"_Z1))  S IBINS=+^("I"_Z1)
"RTN","IBCEF74",119,0)
 . S $P(ID,U,Z1)=$$GETID^IBCEP2(IBIFN,2,$P(Z,U,2),Z1)
"RTN","IBCEF74",120,0)
 . ; Set default if null - based on parameter for require print SSN
"RTN","IBCEF74",121,0)
 . I $P(ID,U,Z1)="" S $P(ID,U,Z1)=$S('$P($G(^DIC(36,IBINS,3)),U,11+IBUB):"VAD000",1:$P(IBZ,U,+Z))
"RTN","IBCEF74",122,0)
 Q ID
"RTN","IBCEF74",123,0)
 ;
"RTN","IBCEF74",124,0)
DISPID(IBXIEN) ; Display list of all prov and fac ids that will
"RTN","IBCEF74",125,0)
 ; extract for this bill if transmitted electronically
"RTN","IBCEF74",126,0)
 N IBID,IBID1,IBZ,IBCT,IBFRM,IBCOBN,IBATT,IBQUIT,IBTYP,DIR,IBIFN,X,Y,Z,Z0,Z1
"RTN","IBCEF74",127,0)
 S IBIFN=IBXIEN
"RTN","IBCEF74",128,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBCOBN=$$COBN^IBCEF(IBIFN),IBATT=$S(IBFRM=2:3,1:4)
"RTN","IBCEF74",129,0)
 W @IOF
"RTN","IBCEF74",130,0)
 W !,"IF THIS BILL IS TRANSMITTED ELECTRONICALLY, THE FOLLOWING IDS WILL BE SENT:"
"RTN","IBCEF74",131,0)
 ; Returns all prov sec ids to be transmitted in indicated segments
"RTN","IBCEF74",132,0)
 S Z=+$G(^DGCR(399,IBIFN,"I1")) I Z W !,"  PRIMARY INS CO: ",$$EXTERNAL^DILFD(399,101,"",Z),$S(IBCOBN=1:" <<<Current Ins",1:"")
"RTN","IBCEF74",133,0)
 S Z=+$G(^DGCR(399,IBIFN,"I2")) I Z W !,"SECONDARY INS CO: ",$$EXTERNAL^DILFD(399,101,"",Z),$S(IBCOBN=2:" <<<Current Ins",1:"")
"RTN","IBCEF74",134,0)
 S Z=+$G(^DGCR(399,IBIFN,"I3")) I Z W !," TERTIARY INS CO: ",$$EXTERNAL^DILFD(399,101,"",Z),$S(IBCOBN=3:" <<<Current Ins",1:"")
"RTN","IBCEF74",135,0)
 W !!,"PROVIDER IDs: (VISTA RECORDS OP1,OP2,OP4,OP8,OP9,OPR2,OPR3,OPR4,OPR5,OPR8):"
"RTN","IBCEF74",136,0)
 F Z=1:1:3 I $G(^DGCR(399,IBIFN,"I"_Z)) D PROVINF(IBIFN,Z,.IBID,"",$S(IBCOBN=Z:"C",1:"O"))
"RTN","IBCEF74",137,0)
 S Z=0 F  S Z=$O(IBID(Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBID(Z,Z0)) Q:'Z0  S IBID1(Z0,Z)="",Z1=0 F  S Z1=$O(IBID(Z,Z0,Z1)) Q:'Z1  I $P(IBID(Z,Z0,Z1),U,9) S IBID1(Z0,Z,Z1)=IBID(Z,Z0,Z1)
"RTN","IBCEF74",138,0)
 S Z=+$O(^DGCR(399,IBIFN,"PRV","B",IBATT,0))
"RTN","IBCEF74",139,0)
 I Z S Z=$P($G(^DGCR(399,IBIFN,"PRV",Z,0)),U,2)
"RTN","IBCEF74",140,0)
 W !,?5,"ATTENDING/RENDERING: ",$$EXTERNAL^DILFD(399.0222,.02,"",Z)
"RTN","IBCEF74",141,0)
 D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ","",IBIFN)
"RTN","IBCEF74",142,0)
 W !,?8,"SSN: ",?35,$S($P(IBZ,U,IBATT)'="":$P(IBZ,U,IBATT),1:"***MISSING***")
"RTN","IBCEF74",143,0)
 I $O(IBID1(IBATT,0)) W !,?8,"SECONDARY IDs"
"RTN","IBCEF74",144,0)
 S IBQUIT=0
"RTN","IBCEF74",145,0)
 S Z0=0 F  S Z0=$O(IBID1(IBATT,Z0)) Q:'Z0!IBQUIT  K IBTYP S Z1=0 F  S Z1=$O(IBID1(IBATT,Z0,Z1)) Q:'Z1  D  Q:IBQUIT
"RTN","IBCEF74",146,0)
 . Q:$D(IBTYP(+$P(IBID1(IBATT,Z0,Z1),U,9)))  ;1st of each type transmits
"RTN","IBCEF74",147,0)
 . I ($Y+5)>IOSL S IBQUIT=$$NOMORE() Q:IBQUIT
"RTN","IBCEF74",148,0)
 . S IBTYP(+$P(IBID1(IBATT,Z0,Z1),U,9))=""
"RTN","IBCEF74",149,0)
 . W !,?8,"(",$E("PST",Z0),") ",$$EXTERNAL^DILFD(36,4.01,"",$P(IBID1(IBATT,Z0,Z1),U,9)),?35,$P(IBID1(IBATT,Z0,Z1),U,4)
"RTN","IBCEF74",150,0)
 S Z=0 F  S Z=$O(IBID1(Z)) Q:'Z  I Z<3!(Z>4) D  Q:IBQUIT
"RTN","IBCEF74",151,0)
 . N Q
"RTN","IBCEF74",152,0)
 . S Q=+$O(^DGCR(399,IBIFN,"PRV","B",Z,0))
"RTN","IBCEF74",153,0)
 . W !!,?5,$$EXTERNAL^DILFD(399.0222,.01,"",Z),": "_$$EXTERNAL^DILFD(399.0222,.02,"",$P($G(^DGCR(399,IBIFN,"PRV",Q,0)),U,2))
"RTN","IBCEF74",154,0)
 . S Z0=0 F  S Z0=$O(IBID1(Z,Z0)) Q:'Z0!IBQUIT  K IBTYP S Z1=0 F  S Z1=$O(IBID1(Z,Z0,Z1)) Q:'Z1!IBQUIT  D
"RTN","IBCEF74",155,0)
 .. Q:$D(IBTYP(+$P(IBID1(Z,Z0,Z1),U,9)))  ; 1st of each type transmits
"RTN","IBCEF74",156,0)
 .. I ($Y+5)>IOSL S IBQUIT=$$NOMORE() Q:IBQUIT
"RTN","IBCEF74",157,0)
 .. S IBTYP(+$P(IBID1(Z,Z0,Z1),U,9))=""
"RTN","IBCEF74",158,0)
 .. W !,?8,"(",$E("PST",Z0),") ",$$EXTERNAL^DILFD(36,4.01,"",$P(IBID1(Z,Z0,Z1),U,9)),?35,$P(IBID1(Z,Z0,Z1),U,4)
"RTN","IBCEF74",159,0)
 S DIR(0)="EA",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","IBCEF74",160,0)
 Q
"RTN","IBCEF74",161,0)
 ;
"RTN","IBCEF74",162,0)
NOMORE() ;
"RTN","IBCEF74",163,0)
 S DIR(0)="EA",DIR("A")="Press RETURN for more IDs or '^' to exit: " W ! D ^DIR
"RTN","IBCEF74",164,0)
 W @IOF
"RTN","IBCEF74",165,0)
 Q (Y'=1)
"RTN","IBCEF74",166,0)
 ;
"RTN","IBCEF74",167,0)
DEFSEC(IBIFN,IBARR) ; Returns array in IBARR for default prov sec ids for ien IBIFN
"RTN","IBCEF74",168,0)
 ; IBARR if passed by ref is returned   IBARR(prov function,COBN)=def id
"RTN","IBCEF74",169,0)
 N IBCAR,IBCOBN,IBPC,IBINS,IBARRX,Q,Z,Z0,ZINS,X
"RTN","IBCEF74",170,0)
 K IBARR
"RTN","IBCEF74",171,0)
 S ZINS="",IBCOBN=$$COBN^IBCEF(IBIFN),IBPC=$S($$FT^IBCEF(IBIFN)=3:2,1:1)
"RTN","IBCEF74",172,0)
 S IBCAR=$$INPAT^IBCEF(IBIFN,1),IBCAR=$S('IBCAR:2,1:1)
"RTN","IBCEF74",173,0)
 F Z=1:1:3 S ZINS=ZINS_+$G(^DGCR(399,IBIFN,"I"_Z))_U
"RTN","IBCEF74",174,0)
 F Z=1:1:3 I $P(ZINS,U,Z),'$P($G(^DIC(36,+$P(ZINS,U,Z),4)),U,IBPC) S $P(ZINS,U,Z)=""
"RTN","IBCEF74",175,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBCEF74",176,0)
 . F Q=1:1:3 D
"RTN","IBCEF74",177,0)
 .. I $P(Z0,U,Q+4)'="" S IBARR(+Z0,Q)=$P(Z0,U,Q+4) Q  ; Override
"RTN","IBCEF74",178,0)
 .. S IBINS=$P(ZINS,U,Q)
"RTN","IBCEF74",179,0)
 .. Q:'IBINS
"RTN","IBCEF74",180,0)
 .. S X=$$IDFIND^IBCEP2(IBIFN,"",$P(Z0,U,2),Q,1)
"RTN","IBCEF74",181,0)
 .. I X'="" S IBARR(+Z0,Q)=X
"RTN","IBCEF74",182,0)
 Q
"RTN","IBCEF74",183,0)
 ;
"RTN","IBCNSC1")
0^1^B17304683
"RTN","IBCNSC1",1,0)
IBCNSC1 ;ALB/NLR - IBCNS INSURANCE COMPANY ;23-MAR-93
"RTN","IBCNSC1",2,0)
 ;;2.0;INTEGRATED BILLING;**62,137,232,291**;21-MAR-94
"RTN","IBCNSC1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNSC1",4,0)
 ;
"RTN","IBCNSC1",5,0)
% G EN^IBCNSC
"RTN","IBCNSC1",6,0)
 ;
"RTN","IBCNSC1",7,0)
AI ; -- (In)Activate Company
"RTN","IBCNSC1",8,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",9,0)
 I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) D SORRY G EXIT
"RTN","IBCNSC1",10,0)
 D ^IBCNSC2
"RTN","IBCNSC1",11,0)
 G EXIT
"RTN","IBCNSC1",12,0)
CC ; -- Change Insurance Company
"RTN","IBCNSC1",13,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",14,0)
 S IBCNS1=IBCNS K IBCNS D INSCO^IBCNSC
"RTN","IBCNSC1",15,0)
 I '$D(IBCNS) S IBCNS=IBCNS1
"RTN","IBCNSC1",16,0)
 K IBCNS1,VALMQUIT
"RTN","IBCNSC1",17,0)
 G EXIT
"RTN","IBCNSC1",18,0)
EA ; -- Billing,Claims,Appeals,Inquiry,Telephone,Main,Remarks,Synonyms
"RTN","IBCNSC1",19,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",20,0)
 D MAIN
"RTN","IBCNSC1",21,0)
 ;
"RTN","IBCNSC1",22,0)
 ; -- was company deleted
"RTN","IBCNSC1",23,0)
 I '$D(^DIC(36,IBCNS)) W !!,"<DELETED>",!! S VALMQUIT="" Q
"RTN","IBCNSC1",24,0)
 ;
"RTN","IBCNSC1",25,0)
EXIT ;
"RTN","IBCNSC1",26,0)
 D HDR^IBCNSC,BLD^IBCNSC
"RTN","IBCNSC1",27,0)
 S VALMBCK="R"
"RTN","IBCNSC1",28,0)
 Q
"RTN","IBCNSC1",29,0)
MAIN ; -- Call edit template
"RTN","IBCNSC1",30,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","IBCNSC1",31,0)
 S Y=1
"RTN","IBCNSC1",32,0)
 I $G(IBY)'=",12," S DIR(0)="YA",DIR("B")="YES",DIR("A")="WANT TO EDIT BILLING FACILITY PRIMARY IDs?: " W ! D ^DIR K DIR
"RTN","IBCNSC1",33,0)
 G:$D(DTOUT)!$D(DUOUT) MAINQ
"RTN","IBCNSC1",34,0)
 I Y D FACID
"RTN","IBCNSC1",35,0)
 L +^DIC(36,+IBCNS):5 I '$T D LOCKED^IBTRCD1 G MAINQ
"RTN","IBCNSC1",36,0)
 N DIE,DA,DR S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]" D ^DIE K DIE I $D(Y) S IB("^")=1
"RTN","IBCNSC1",37,0)
 I $G(IBY)=",12," D EDITID^IBCEP(+IBCNS)
"RTN","IBCNSC1",38,0)
 L -^DIC(36,+IBCNS)
"RTN","IBCNSC1",39,0)
MAINQ Q
"RTN","IBCNSC1",40,0)
 ;
"RTN","IBCNSC1",41,0)
FACID ; -- Edit facility ids
"RTN","IBCNSC1",42,0)
 D FACID^IBCEP2B(+IBCNS)
"RTN","IBCNSC1",43,0)
 Q
"RTN","IBCNSC1",44,0)
 ;
"RTN","IBCNSC1",45,0)
SORRY ; -- can't inactivate, don't have key
"RTN","IBCNSC1",46,0)
 W !!,"You do not have access to Inactivate entries.  See your application coordinator.",! D PAUSE^VALM1
"RTN","IBCNSC1",47,0)
 Q
"RTN","IBCNSC1",48,0)
PRESCR ;
"RTN","IBCNSC1",49,0)
 N OFFSET,START,IBCNS18,IBADD
"RTN","IBCNSC1",50,0)
 S IBCNS18=$$ADDRESS^IBCNSC0(IBCNS,.18,11)
"RTN","IBCNSC1",51,0)
 S START=34,OFFSET=2
"RTN","IBCNSC1",52,0)
 D SET^IBCNSP(START,OFFSET+19," Prescription Claims Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC1",53,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS18,"^",7),0)),"^",1))
"RTN","IBCNSC1",54,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS18,"^",1))
"RTN","IBCNSC1",55,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS18,"^",2))
"RTN","IBCNSC1",56,0)
 ; D SET^IBCNSP(START+4,OFFSET,"Claim Off. ID: "_$P(IBCNS18,"^",11))
"RTN","IBCNSC1",57,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC1",58,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS18,"^",3)) S IBADD=1
"RTN","IBCNSC1",59,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS18,"^",4),1,15)_$S($P(IBCNS18,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS18,"^",5),0)),"^",2)_" "_$E($P(IBCNS18,"^",6),1,5))
"RTN","IBCNSC1",60,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS18,"^",8))
"RTN","IBCNSC1",61,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS18,"^",9))
"RTN","IBCNSC1",62,0)
 Q
"RTN","IBCNSC1",63,0)
 ;
"RTN","IBCNSC1",64,0)
PROVID N OFFSET,START,IBCNS4,IBCNS3,IBDISP,Z
"RTN","IBCNSC1",65,0)
 S START=53,OFFSET=2,IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3))
"RTN","IBCNSC1",66,0)
 D SET^IBCNSP(START,OFFSET+25," Provider ID Parameters ",IORVON,IORVOFF)
"RTN","IBCNSC1",67,0)
 D PARAMS(IBCNS4,IBCNS3,.IBDISP)
"RTN","IBCNSC1",68,0)
 S Z=0 F  S Z=$O(IBDISP(Z)) Q:'Z  D SET^IBCNSP(START+Z,OFFSET+$P(IBDISP(Z),U),$P(IBDISP(Z),U,2))
"RTN","IBCNSC1",69,0)
 ;
"RTN","IBCNSC1",70,0)
 Q
"RTN","IBCNSC1",71,0)
 ;
"RTN","IBCNSC1",72,0)
INSDEF(IBINS,IBPTYP) ; Returns the default id # for an ins co, if possible
"RTN","IBCNSC1",73,0)
 N X
"RTN","IBCNSC1",74,0)
 S X=""
"RTN","IBCNSC1",75,0)
 I IBINS,IBPTYP S X=$P($G(^IBA(355.91,+$O(^IBA(355.91,"AC",IBINS,IBPTYP,"*N/A*","")),0)),U,7)
"RTN","IBCNSC1",76,0)
 Q X
"RTN","IBCNSC1",77,0)
 ;
"RTN","IBCNSC1",78,0)
PARAMS(IBCNS4,IBCNS3,IBDISP) ; Returns array containing prov id parameters
"RTN","IBCNSC1",79,0)
 ; IBCNS3,IBCNS4 = '3','4' nodes of ins co
"RTN","IBCNSC1",80,0)
 ; IBDISP = returned IBDISP(line#)=offset^text
"RTN","IBCNSC1",81,0)
 N IBQ
"RTN","IBCNSC1",82,0)
 S IBDISP(1)="0^Perf Provider Secondary ID Type (HCFA): "_$$EXPAND^IBTRE(36,4.01,+$P(IBCNS4,U))
"RTN","IBCNSC1",83,0)
 S IBDISP(2)="0^Perf Provider Secondary ID Type (UB92): "_$$EXPAND^IBTRE(36,4.02,+$P(IBCNS4,U,2))
"RTN","IBCNSC1",84,0)
 S IBDISP(3)="0^Perf Provider Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.03,+$P(IBCNS4,U,3))
"RTN","IBCNSC1",85,0)
 S IBDISP(4)="0^Require Provider's SSN To Print (HCFA): "_$$EXPAND^IBTRE(36,3.11,+$P(IBCNS3,U,11))
"RTN","IBCNSC1",86,0)
 S IBDISP(5)="0^Require Provider's SSN To Print (UB92): "_$$EXPAND^IBTRE(36,3.12,+$P(IBCNS3,U,12))
"RTN","IBCNSC1",87,0)
 S IBDISP(6)="22^Care Unit Prompt: "_$$EXPAND^IBTRE(36,4.09,$P(IBCNS4,U,9))
"RTN","IBCNSC1",88,0)
 Q
"RTN","IBCNSC1",89,0)
 ;
"VER")
8.0^22.0
"^DD",36,36,3.11,0)
REQUIRE SSN ID FOR HCFA PRINT^S^0:NO;1:YES;^3;11^Q
"^DD",36,36,3.11,3)
Enter 1 (YES) if the SSN must print as the referring provider's id on a HCFA 1500.
"^DD",36,36,3.11,21,0)
^.001^2^2^3041115^^
"^DD",36,36,3.11,21,1,0)
This is a flag that determines whether or not the payer requires the
"^DD",36,36,3.11,21,2,0)
referring provider's SSN to print in box 17A on a HCFA 1500 claim form.
"^DD",36,36,3.11,"DT")
3041115
"^DD",36,36,3.12,0)
REQUIRE SSN ID FOR UB92 PRINT^S^0:NO;1:YES;^3;12^Q
"^DD",36,36,3.12,3)
Enter 1 (YES) if the SSN must print as the performing provider's id on a UB-92 printed form.
"^DD",36,36,3.12,21,0)
^.001^6^6^3041115^^
"^DD",36,36,3.12,21,1,0)
This is a flag that determines whether or not the payer requires the
"^DD",36,36,3.12,21,2,0)
performing provider's SSN to print in boxes 82 and 83 on a UB92 claim form.
"^DD",36,36,3.12,21,3,0)
If this field is set to YES, the UB92 claims for this payer must be
"^DD",36,36,3.12,21,4,0)
printed locally if the clearinghouse's electronic ID for the insurance
"^DD",36,36,3.12,21,5,0)
company is either missing or indicates it will be printed at the
"^DD",36,36,3.12,21,6,0)
clearinghouse (electronic id ends with PRNT).
"^DD",36,36,3.12,"DT")
3041115
"^DD",350.8,350.8,0)
FIELD^^10^7
"^DD",350.8,350.8,0,"DDA")
N
"^DD",350.8,350.8,0,"DT")
2930322
"^DD",350.8,350.8,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",350.8,350.8,0,"IX","AC",350.8,.03)

"^DD",350.8,350.8,0,"IX","B",350.8,.01)

"^DD",350.8,350.8,0,"IX","C",350.8,.03)

"^DD",350.8,350.8,0,"NM","IB ERROR")
 
"^DD",350.8,350.8,0,"VRPK")
IB
"^DD",350.8,350.8,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",350.8,350.8,.01,1,0)
^.1
"^DD",350.8,350.8,.01,1,1,0)
350.8^B
"^DD",350.8,350.8,.01,1,1,1)
S ^IBE(350.8,"B",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.01,1,1,2)
K ^IBE(350.8,"B",$E(X,1,30),DA)
"^DD",350.8,350.8,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",350.8,350.8,.01,21,0)
^^2^2^2910305^^
"^DD",350.8,350.8,.01,21,1,0)
This is a free text name of the entry.  It should be namespaced with
"^DD",350.8,350.8,.01,21,2,0)
the namespace of the package reporting the error.
"^DD",350.8,350.8,.02,0)
ERROR MESSAGE^F^^0;2^K:$L(X)>80!($L(X)<3) X
"^DD",350.8,350.8,.02,3)
Answer must be 3-80 characters in length.
"^DD",350.8,350.8,.02,21,0)
^^3^3^2940209^^^^
"^DD",350.8,350.8,.02,21,1,0)
This is the text of the message as it will be displayed to a user or
"^DD",350.8,350.8,.02,21,2,0)
posted in a bulletin.  It should be as meaningful as possible to the
"^DD",350.8,350.8,.02,21,3,0)
person seeing the message.
"^DD",350.8,350.8,.03,0)
ERROR CODE^F^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>9!($L(X)<1) X
"^DD",350.8,350.8,.03,1,0)
^.1
"^DD",350.8,350.8,.03,1,1,0)
350.8^AC
"^DD",350.8,350.8,.03,1,1,1)
S ^IBE(350.8,"AC",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.03,1,1,2)
K ^IBE(350.8,"AC",$E(X,1,30),DA)
"^DD",350.8,350.8,.03,1,2,0)
350.8^C
"^DD",350.8,350.8,.03,1,2,1)
S ^IBE(350.8,"C",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.03,1,2,2)
K ^IBE(350.8,"C",$E(X,1,30),DA)
"^DD",350.8,350.8,.03,3)
Answer must be 1-9 characters in length.
"^DD",350.8,350.8,.03,21,0)
^^9^9^2920219^^^^
"^DD",350.8,350.8,.03,21,1,0)
This is the error code that will be passed to or determined by
"^DD",350.8,350.8,.03,21,2,0)
Integrated Billing.  The format for the Error Code should be
"^DD",350.8,350.8,.03,21,3,0)
nnxxx, where nn is the reporting package namespace and xxx are numeric
"^DD",350.8,350.8,.03,21,4,0)
values.
"^DD",350.8,350.8,.03,21,5,0)
 
"^DD",350.8,350.8,.03,21,6,0)
This is the error code that will be passed as the second piece of
"^DD",350.8,350.8,.03,21,7,0)
the variable Y to IB when +Y=-1.  More than one error code can be
"^DD",350.8,350.8,.03,21,8,0)
placed in the second ^ piece of Y delimited by semi-colons.  Applications
"^DD",350.8,350.8,.03,21,9,0)
may call ^IBAERR to display the error message(s).
"^DD",350.8,350.8,.03,"DT")
2920219
"^DD",350.8,350.8,.04,0)
PACKAGE REPORTING ERROR^S^1:INTEGRATED BILLING;2:ACCOUNTS RECEIVABLE;3:PHARMACY;^0;4^Q
"^DD",350.8,350.8,.04,21,0)
^^2^2^2920415^^^
"^DD",350.8,350.8,.04,21,1,0)
This is the package that requested this entry in this file and will
"^DD",350.8,350.8,.04,21,2,0)
report it to IB as an error if the conditions are detected.
"^DD",350.8,350.8,.05,0)
ERROR ACTION^S^1:DISPLAY MESSAGE;2:SEND BULLETIN;3:EDIT FILE;^0;5^Q
"^DD",350.8,350.8,.05,21,0)
^^6^6^2910227^
"^DD",350.8,350.8,.05,21,1,0)
This is the type of action that should be taken when this error is
"^DD",350.8,350.8,.05,21,2,0)
reported to IB.  If action other than displaying a message is indicated
"^DD",350.8,350.8,.05,21,3,0)
then the MUMPS code in the ERROR ACTION field will be executed.
"^DD",350.8,350.8,.05,21,4,0)
 
"^DD",350.8,350.8,.05,21,5,0)
Currently only display actions are implemented.  Please contact the 
"^DD",350.8,350.8,.05,21,6,0)
developing ISC if other action types are desired.
"^DD",350.8,350.8,.06,0)
CORRESPONDING ALERT^P354.5'^IBE(354.5,^0;6^Q
"^DD",350.8,350.8,.06,21,0)
^^1^1^2940209^
"^DD",350.8,350.8,.06,21,1,0)
This is the type of alert that should be sent when this error occurs.
"^DD",350.8,350.8,.06,"DT")
2930322
"^DD",350.8,350.8,10,0)
EXECUTABLE LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",350.8,350.8,10,3)
This is Standard MUMPS code.
"^DD",350.8,350.8,10,21,0)
^^2^2^2910227^
"^DD",350.8,350.8,10,21,1,0)
This is the MUMPS code that will be executed if an error is reported
"^DD",350.8,350.8,10,21,2,0)
with an ERROR ACTION of other than to display a message.
"^DD",364.6,364.6,0)
FIELD^^.13^13
"^DD",364.6,364.6,0,"DDA")
N
"^DD",364.6,364.6,0,"DT")
3000216
"^DD",364.6,364.6,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",364.6,364.6,0,"ID",.05)
W "   ",$P(^(0),U,5)
"^DD",364.6,364.6,0,"ID",.08)
W "   ",$P(^(0),U,8)
"^DD",364.6,364.6,0,"ID",.1)
W "   ",$P(^(0),U,10)
"^DD",364.6,364.6,0,"IX","APAR",364.6,.01)

"^DD",364.6,364.6,0,"IX","APAR1",364.6,.03)

"^DD",364.6,364.6,0,"IX","ASEQ",364.6,.01)

"^DD",364.6,364.6,0,"IX","ASEQ1",364.6,.04)

"^DD",364.6,364.6,0,"IX","ASEQ2",364.6,.05)

"^DD",364.6,364.6,0,"IX","ASEQ3",364.6,.08)

"^DD",364.6,364.6,0,"IX","B",364.6,.01)

"^DD",364.6,364.6,0,"IX","C",364.6,.1)

"^DD",364.6,364.6,0,"NM","IB FORM SKELETON DEFINITION")
 
"^DD",364.6,364.6,0,"PT",364.6,.03)

"^DD",364.6,364.6,0,"PT",364.7,.01)

"^DD",364.6,364.6,0,"VRPK")
IB
"^DD",364.6,364.6,.01,0)
BILL FORM^RP353'X^IBE(353,^0;1^I $$DUP^IBCEFG0($G(DA),X,1) K X
"^DD",364.6,364.6,.01,1,0)
^.1
"^DD",364.6,364.6,.01,1,1,0)
364.6^B
"^DD",364.6,364.6,.01,1,1,1)
S ^IBA(364.6,"B",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.01,1,1,2)
K ^IBA(364.6,"B",$E(X,1,30),DA)
"^DD",364.6,364.6,.01,1,2,0)
364.6^ASEQ^MUMPS
"^DD",364.6,364.6,.01,1,2,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)=""
"^DD",364.6,364.6,.01,1,2,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)
"^DD",364.6,364.6,.01,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,2,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.01,1,2,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.01,1,2,"DT")
2960116
"^DD",364.6,364.6,.01,1,3,0)
364.6^APAR^MUMPS
"^DD",364.6,364.6,.01,1,3,1)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X S ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)=""
"^DD",364.6,364.6,.01,1,3,2)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X K ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)
"^DD",364.6,364.6,.01,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,3,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.01,1,3,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.01,1,3,"DT")
2960117
"^DD",364.6,364.6,.01,1,4,0)
^^TRIGGER^364.6^.03
"^DD",364.6,364.6,.01,1,4,1)
X ^DD(364.6,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0) X ^DD(364.6,.01,1,4,1.4)
"^DD",364.6,364.6,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,1.4)
S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2)
X ^DD(364.6,.01,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,79.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,4,69.2)
S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3),Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"")
"^DD",364.6,364.6,.01,1,4,79.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3)
"^DD",364.6,364.6,.01,1,4,"%D",0)
^^1^1^3000613^
"^DD",364.6,364.6,.01,1,4,"%D",1,0)
This trigger is needed for the local screen 9 logic to work correctly.
"^DD",364.6,364.6,.01,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"CREATE VALUE")
NUMBER
"^DD",364.6,364.6,.01,1,4,"DELETE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"DELETE VALUE")
@
"^DD",364.6,364.6,.01,1,4,"DT")
3000613
"^DD",364.6,364.6,.01,1,4,"FIELD")
ASSOCIATED FORM DEFINITION
"^DD",364.6,364.6,.01,3)
Enter a BILLING FORM that the data element will appear on.
"^DD",364.6,364.6,.01,21,0)
^^2^2^2960318^^^^
"^DD",364.6,364.6,.01,21,1,0)
Identifies a billing 'form' or 'screen' where the data element is used.
"^DD",364.6,364.6,.01,21,2,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.01,"DT")
3000613
"^DD",364.6,364.6,.02,0)
SECURITY LEVEL^SX^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^I X="N",$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.02,3)
Enter an N if no editing is allowed, L if editing is OK because this entry is associated with a locally defined form.
"^DD",364.6,364.6,.02,5,1,0)
364.6^.03^7
"^DD",364.6,364.6,.02,21,0)
^.001^4^4^3001030^^
"^DD",364.6,364.6,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  If
"^DD",364.6,364.6,.02,21,2,0)
the security level of the entry is NATIONAL (N), no local editing is
"^DD",364.6,364.6,.02,21,3,0)
allowed.  If the security level of the entry is LOCAL (L), it may be
"^DD",364.6,364.6,.02,21,4,0)
edited.
"^DD",364.6,364.6,.02,"DT")
2960117
"^DD",364.6,364.6,.03,0)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"^DD",364.6,364.6,.03,1,0)
^.1
"^DD",364.6,364.6,.03,1,1,0)
364.6^APAR1^MUMPS
"^DD",364.6,364.6,.03,1,1,1)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X S ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.03,1,1,2)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X K ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)
"^DD",364.6,364.6,.03,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,1,1,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.03,1,1,"DT")
2960117
"^DD",364.6,364.6,.03,1,2,0)
^^TRIGGER^364.6^.04
"^DD",364.6,364.6,.03,1,2,1)
X ^DD(364.6,.03,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,2,1.4)
"^DD",364.6,364.6,.03,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,2,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.6,DIG=.04 D ^DICR
"^DD",364.6,364.6,.03,1,2,2)
Q
"^DD",364.6,364.6,.03,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,2,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,2,"%D",0)
^.101^2^2^3000424^^
"^DD",364.6,364.6,.03,1,2,"%D",1,0)
If an associated form that is not a screen form, page is taken from the
"^DD",364.6,364.6,.03,1,2,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,2,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,2,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,2,"DT")
3000405
"^DD",364.6,364.6,.03,1,2,"FIELD")
PAGE OR SEQUENCE
"^DD",364.6,364.6,.03,1,3,0)
^^TRIGGER^364.6^.05
"^DD",364.6,364.6,.03,1,3,1)
X ^DD(364.6,.03,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,3,1.4)
"^DD",364.6,364.6,.03,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,3,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=364.6,DIG=.05 D ^DICR
"^DD",364.6,364.6,.03,1,3,2)
Q
"^DD",364.6,364.6,.03,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,3,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,3,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,3,"%D",1,0)
If an associated form that is not a screen form, line is taken from the
"^DD",364.6,364.6,.03,1,3,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,3,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,3,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,3,"DT")
3000405
"^DD",364.6,364.6,.03,1,3,"FIELD")
FIRST LINE NUMBER
"^DD",364.6,364.6,.03,1,4,0)
^^TRIGGER^364.6^.08
"^DD",364.6,364.6,.03,1,4,1)
X ^DD(364.6,.03,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,4,1.4)
"^DD",364.6,364.6,.03,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,4,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.6,DIG=.08 D ^DICR
"^DD",364.6,364.6,.03,1,4,2)
Q
"^DD",364.6,364.6,.03,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,4,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,4,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,4,"%D",1,0)
If an associated form that is not a screen form, column is taken from the
"^DD",364.6,364.6,.03,1,4,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,4,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,4,"DT")
3000405
"^DD",364.6,364.6,.03,1,4,"FIELD")
STARTING COLUMN
"^DD",364.6,364.6,.03,1,5,0)
^^TRIGGER^364.6^.09
"^DD",364.6,364.6,.03,1,5,1)
X ^DD(364.6,.03,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,5,1.4)
"^DD",364.6,364.6,.03,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,5,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,5,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=364.6,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,5,2)
Q
"^DD",364.6,364.6,.03,1,5,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,5,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,5,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,5,"%D",1,0)
If an associated form that is not a screen form, length is taken from the
"^DD",364.6,364.6,.03,1,5,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,5,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,5,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,5,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,5,"DT")
3000405
"^DD",364.6,364.6,.03,1,5,"FIELD")
LENGTH
"^DD",364.6,364.6,.03,1,6,0)
^^TRIGGER^364.6^.06
"^DD",364.6,364.6,.03,1,6,1)
X ^DD(364.6,.03,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,6,1.4)
"^DD",364.6,364.6,.03,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,6,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,6,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.6,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,6,2)
Q
"^DD",364.6,364.6,.03,1,6,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,6,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,6,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,6,"%D",1,0)
If associated form that is not a screen form, the max number lines is taken
"^DD",364.6,364.6,.03,1,6,"%D",2,0)
from the associated with field definition.
"^DD",364.6,364.6,.03,1,6,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,6,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,6,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,6,"DT")
3000405
"^DD",364.6,364.6,.03,1,6,"FIELD")
MAX NUMBER LINES
"^DD",364.6,364.6,.03,1,7,0)
^^TRIGGER^364.6^.02
"^DD",364.6,364.6,.03,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="L" X ^DD(364.6,.03,1,7,1.4)
"^DD",364.6,364.6,.03,1,7,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=364.6,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,7,2)
Q
"^DD",364.6,364.6,.03,1,7,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,7,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.03,1,7,"%D",1,0)
Only local entries can be associated.
"^DD",364.6,364.6,.03,1,7,"CREATE VALUE")
"L"
"^DD",364.6,364.6,.03,1,7,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,7,"DT")
2960117
"^DD",364.6,364.6,.03,1,7,"FIELD")
SECURITY LEVEL
"^DD",364.6,364.6,.03,3)
Enter the form definition record this definition will override.
"^DD",364.6,364.6,.03,5,1,0)
364.6^.01^4
"^DD",364.6,364.6,.03,21,0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,21,1,0)
The form definition record this definition will override.
"^DD",364.6,364.6,.03,"DT")
3000414
"^DD",364.6,364.6,.04,0)
PAGE OR SEQUENCE^FX^^0;4^K:$L(X)>20!($L(X)<1) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,2) K X
"^DD",364.6,364.6,.04,1,0)
^.1^^-1
"^DD",364.6,364.6,.04,1,1,0)
364.6^ASEQ1^MUMPS
"^DD",364.6,364.6,.04,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)=""
"^DD",364.6,364.6,.04,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)
"^DD",364.6,364.6,.04,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.04,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.04,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.04,1,1,"DT")
2960117
"^DD",364.6,364.6,.04,3)
This data must be 1-20 char long, can't be an assoc form, and must be a unique form/page/line/column.
"^DD",364.6,364.6,.04,5,1,0)
364.6^.03^2
"^DD",364.6,364.6,.04,21,0)
^^4^4^2960318^^^^
"^DD",364.6,364.6,.04,21,1,0)
This field is used to specify the page, section, transaction segment, etc.
"^DD",364.6,364.6,.04,21,2,0)
that the data element is to be associated with.  This field will be used as
"^DD",364.6,364.6,.04,21,3,0)
the second-level sort field when extracting data fields for this form.
"^DD",364.6,364.6,.04,21,4,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.04,"DT")
3000428
"^DD",364.6,364.6,.05,0)
FIRST LINE NUMBER^NJ4,0X^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,3) K X
"^DD",364.6,364.6,.05,.1)
LINE
"^DD",364.6,364.6,.05,1,0)
^.1
"^DD",364.6,364.6,.05,1,1,0)
364.6^ASEQ2^MUMPS
"^DD",364.6,364.6,.05,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)=""
"^DD",364.6,364.6,.05,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)
"^DD",364.6,364.6,.05,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.05,1,1,"%D",0)
^^1^1^2960117^^^^
"^DD",364.6,364.6,.05,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.05,1,1,"DT")
2960117
"^DD",364.6,364.6,.05,3)
Type a # 0-9999, 0 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.05,5,1,0)
364.6^.03^3
"^DD",364.6,364.6,.05,21,0)
^^5^5^2960318^^^
"^DD",364.6,364.6,.05,21,1,0)
If this is a printed form, this is the first line number that this data
"^DD",364.6,364.6,.05,21,2,0)
element will appear on.  For transmitted forms, this is assumed to always
"^DD",364.6,364.6,.05,21,3,0)
be a 1.  This will be used as the third-level sort field when extracting
"^DD",364.6,364.6,.05,21,4,0)
data fields for this form.  The combination of form/page/line/column must
"^DD",364.6,364.6,.05,21,5,0)
be unique.
"^DD",364.6,364.6,.05,"DT")
3000428
"^DD",364.6,364.6,.06,0)
MAX NUMBER LINES^NJ3,0X^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.06,3)
Type a Number between 0 and 999, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.06,5,1,0)
364.6^.03^6
"^DD",364.6,364.6,.06,21,0)
^^2^2^2951205^
"^DD",364.6,364.6,.06,21,1,0)
If a printed form, this is the highest numbered line number that this data
"^DD",364.6,364.6,.06,21,2,0)
element is allowed to print on.
"^DD",364.6,364.6,.06,"DT")
2960117
"^DD",364.6,364.6,.07,0)
LOCAL OVERRIDE ALLOWED^S^0:NO;1:YES;^0;7^Q
"^DD",364.6,364.6,.07,3)
Enter 0 (NO) to prevent local override, 1 to allow local override.
"^DD",364.6,364.6,.07,21,0)
^.001^2^2^3020822^^
"^DD",364.6,364.6,.07,21,1,0)
This controls whether or not the output forms generator will allow for a
"^DD",364.6,364.6,.07,21,2,0)
redefinition of this record via a local override.
"^DD",364.6,364.6,.07,"DT")
2960311
"^DD",364.6,364.6,.08,0)
STARTING COLUMN OR PIECE^NJ3,1X^^0;8^K:+X'=X!(X>999)!(X<0)!($S(X[".":X'?.E1"."1.2N,1:0)) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,4) K X
"^DD",364.6,364.6,.08,.1)
COLUMN
"^DD",364.6,364.6,.08,1,0)
^.1
"^DD",364.6,364.6,.08,1,1,0)
364.6^ASEQ3^MUMPS
"^DD",364.6,364.6,.08,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.08,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)
"^DD",364.6,364.6,.08,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.08,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.08,1,1,"DT")
2960117
"^DD",364.6,364.6,.08,1,2,0)
^^TRIGGER^364.6^.11
"^DD",364.6,364.6,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)["." I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(364.6,.08,1,2,1.4)
"^DD",364.6,364.6,.08,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=364.6,DIG=.11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.08,1,2,2)
Q
"^DD",364.6,364.6,.08,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,2,"%D",0)
^^2^2^2960126^^^
"^DD",364.6,364.6,.08,1,2,"%D",1,0)
If the starting column or piece is not a whole number, this must be a
"^DD",364.6,364.6,.08,1,2,"%D",2,0)
calculate only field - no output.
"^DD",364.6,364.6,.08,1,2,"CREATE CONDITION")
STARTING COLUMN OR PIECE["."
"^DD",364.6,364.6,.08,1,2,"CREATE VALUE")
S X=1
"^DD",364.6,364.6,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.08,1,2,"DT")
2960126
"^DD",364.6,364.6,.08,1,2,"FIELD")
#.11
"^DD",364.6,364.6,.08,3)
Type a # 0-9999, 1-2 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.08,5,1,0)
364.6^.03^4
"^DD",364.6,364.6,.08,21,0)
^^5^5^2960318^^^^
"^DD",364.6,364.6,.08,21,1,0)
This is the column on the form, position in the data string (for non-printed
"^DD",364.6,364.6,.08,21,2,0)
forms) -  starting at position 1, or delimited piece that this data element
"^DD",364.6,364.6,.08,21,3,0)
is to be printed or stored in.  This will be used as the fourth-level sort
"^DD",364.6,364.6,.08,21,4,0)
field when extracting data fields for this form.  The combination of
"^DD",364.6,364.6,.08,21,5,0)
form/page/line/column must be unique.
"^DD",364.6,364.6,.08,"DT")
3000428
"^DD",364.6,364.6,.09,0)
LENGTH^NJ3,0X^^0;9^K:+X'=X!(X>250)!(X<1)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3),$P($G(^IBE(353,+^IBA(364.6,DA,0),2)),U,2)'="S" K X
"^DD",364.6,364.6,.09,3)
Type a Number between 1 and 250, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.09,5,1,0)
364.6^.03^5
"^DD",364.6,364.6,.09,21,0)
^^3^3^2951205^
"^DD",364.6,364.6,.09,21,1,0)
The length desired for the data element.  If present, this field will be used
"^DD",364.6,364.6,.09,21,2,0)
to truncate or pad the data element to this length after the element has been
"^DD",364.6,364.6,.09,21,3,0)
passed through the routine identified in the FORMAT ROUTINE field.
"^DD",364.6,364.6,.09,"DT")
3000111
"^DD",364.6,364.6,.1,0)
SHORT DESCRIPTION^F^^0;10^K:$L(X)>30!($L(X)<1) X
"^DD",364.6,364.6,.1,1,0)
^.1
"^DD",364.6,364.6,.1,1,1,0)
364.6^C
"^DD",364.6,364.6,.1,1,1,1)
S ^IBA(364.6,"C",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.1,1,1,2)
K ^IBA(364.6,"C",$E(X,1,30),DA)
"^DD",364.6,364.6,.1,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.1,1,1,"%D",0)
^^1^1^2960123^
"^DD",364.6,364.6,.1,1,1,"%D",1,0)
Field name lookup
"^DD",364.6,364.6,.1,1,1,"DT")
2960123
"^DD",364.6,364.6,.1,3)
Answer must be 1-30 characters in length.
"^DD",364.6,364.6,.1,21,0)
^^2^2^2951207^
"^DD",364.6,364.6,.1,21,1,0)
This is a short description of the field that is used as an identifier to
"^DD",364.6,364.6,.1,21,2,0)
make lookups on this file meaningful.
"^DD",364.6,364.6,.1,"DT")
2960123
"^DD",364.6,364.6,.11,0)
CALCULATE ONLY OR OUTPUT^S^1:CALCULATE ONLY;0:OUTPUT;^0;11^Q
"^DD",364.6,364.6,.11,3)
Enter 1 if this field is used for calculation purposes and is not meant to be output
"^DD",364.6,364.6,.11,5,1,0)
364.6^.08^2
"^DD",364.6,364.6,.11,21,0)
^^4^4^2960715^^^^
"^DD",364.6,364.6,.11,21,1,0)
This field is set to 1 if there is a need to do a special extract or
"^DD",364.6,364.6,.11,21,2,0)
calculation at some point in the processing, but no output is desired
"^DD",364.6,364.6,.11,21,3,0)
from the field's code execution.  Used to set up arrays for group elements
"^DD",364.6,364.6,.11,21,4,0)
then the individual elements are output separately.
"^DD",364.6,364.6,.11,"DT")
2960715
"^DD",364.6,364.6,.12,0)
TRANSMIT IGNORES IF NULL^S^0:FALSE;1:TRUE;^0;12^Q
"^DD",364.6,364.6,.12,3)
Enter 1 (TRUE) if there should be no entry made in the output global if the data value of the element is null.
"^DD",364.6,364.6,.12,21,0)
^.001^5^5^3001030^^^
"^DD",364.6,364.6,.12,21,1,0)
This field can be used to suppress output of a field if its value is null.
"^DD",364.6,364.6,.12,21,2,0)
If not suppressed, an entry is made in the output global used by the
"^DD",364.6,364.6,.12,21,3,0)
formatter, regardless of the contents of the data for this field.
"^DD",364.6,364.6,.12,21,4,0)
Supressing the value results in no output to the formatter's output
"^DD",364.6,364.6,.12,21,5,0)
global if the value of the data for this field is determined to be null.
"^DD",364.6,364.6,.12,"DT")
2991006
"^DD",364.6,364.6,.13,0)
DATA REQUIRED FOR FIELD^S^1:YES;0:NO;^0;13^Q
"^DD",364.6,364.6,.13,3)
Enter yes if there should always be data in this field.
"^DD",364.6,364.6,.13,21,0)
^^2^2^3000216^
"^DD",364.6,364.6,.13,21,1,0)
This field is a flag that will stop the output of a record if this field
"^DD",364.6,364.6,.13,21,2,0)
indicates data is required and the data extracted is null.
"^DD",364.6,364.6,.13,"DT")
3000216
"^DD",399,399,.21,0)
CURRENT BILL PAYER SEQUENCE^*S^P:PRIMARY INSURANCE;S:SECONDARY INSURANCE;T:TERTIARY INSURANCE;A:PATIENT;^0;21^Q
"^DD",399,399,.21,1,0)
^.1
"^DD",399,399,.21,1,1,0)
^^TRIGGER^399^136
"^DD",399,399,.21,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$BPP^IBCNS2(DA) X ^DD(399,.21,1,1,1.4)
"^DD",399,399,.21,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"MP")):^("MP"),1:""),DIV=X S $P(^("MP"),U,2)=DIV,DIH=399,DIG=136 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,.21,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(399,.21,1,1,2.4)
"^DD",399,399,.21,1,1,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"MP")):^("MP"),1:""),DIV=X S $P(^("MP"),U,2)=DIV,DIH=399,DIG=136 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,.21,1,1,"%D",0)
^^2^2^2970821^
"^DD",399,399,.21,1,1,"%D",1,0)
Set the Bill Payer Policy to the Payer Policy corresponding to the Payer
"^DD",399,399,.21,1,1,"%D",2,0)
Sequence.
"^DD",399,399,.21,1,1,"CREATE VALUE")
S X=$$BPP^IBCNS2(DA)
"^DD",399,399,.21,1,1,"DELETE VALUE")
@
"^DD",399,399,.21,1,1,"DT")
2970821
"^DD",399,399,.21,1,1,"FIELD")
BILL PAYER POLICY
"^DD",399,399,.21,1,2,0)
^^TRIGGER^399^24
"^DD",399,399,.21,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=('$$REQMRA^IBEFUNC(DA)&$$NEEDMRA^IBEFUNC(DA)) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV S X=0 X ^DD(399,.21,1,2,1.4)
"^DD",399,399,.21,1,2,1.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR
"^DD",399,399,.21,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=('$$REQMRA^IBEFUNC(DA)&$$NEEDMRA^IBEFUNC(DA)) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399,.21,1,2,2.4)
"^DD",399,399,.21,1,2,2.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR
"^DD",399,399,.21,1,2,"%D",0)
^^4^4^3041108^
"^DD",399,399,.21,1,2,"%D",1,0)
When the payer sequence changes, this trigger will detect if an MRA is no
"^DD",399,399,.21,1,2,"%D",2,0)
longer needed, but the CLAIM MRA STATUS field still indicates than an MRA
"^DD",399,399,.21,1,2,"%D",3,0)
is still needed.  In this case, the CLAIM MRA STATUS is updated to be 0 -
"^DD",399,399,.21,1,2,"%D",4,0)
NO MRA NEEDED.
"^DD",399,399,.21,1,2,"CREATE CONDITION")
('$$REQMRA^IBEFUNC(DA)&$$NEEDMRA^IBEFUNC(DA))
"^DD",399,399,.21,1,2,"CREATE VALUE")
S X=0
"^DD",399,399,.21,1,2,"DELETE CONDITION")
('$$REQMRA^IBEFUNC(DA)&$$NEEDMRA^IBEFUNC(DA))
"^DD",399,399,.21,1,2,"DELETE VALUE")
@
"^DD",399,399,.21,1,2,"DT")
3041108
"^DD",399,399,.21,1,2,"FIELD")
CLAIM MRA STATUS
"^DD",399,399,.21,1,3,0)
^^TRIGGER^399^27
"^DD",399,399,.21,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S($$WNRBILL^IBEFUNC(DA,X):1,1:0) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(399,.21,1,3,1.4)
"^DD",399,399,.21,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,8)=DIV,DIH=399,DIG=27 D ^DICR
"^DD",399,399,.21,1,3,2)
Q
"^DD",399,399,.21,1,3,3)
Do not delete
"^DD",399,399,.21,1,3,"%D",0)
^^3^3^3041119^
"^DD",399,399,.21,1,3,"%D",1,0)
If the insurance for the payer sequence is MEDICARE WNR, the
"^DD",399,399,.21,1,3,"%D",2,0)
data in field FORCE CLAIM TO PRINT must be deleted as it is not valid
"^DD",399,399,.21,1,3,"%D",3,0)
to print an MRA request.
"^DD",399,399,.21,1,3,"CREATE CONDITION")
S X=$S($$WNRBILL^IBEFUNC(DA,X):1,1:0)
"^DD",399,399,.21,1,3,"CREATE VALUE")
@
"^DD",399,399,.21,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.21,1,3,"DT")
3041119
"^DD",399,399,.21,1,3,"FIELD")
FORCE CLAIM TO PRINT
"^DD",399,399,.21,3)
Enter the entity currently responsible for paying this bill.
"^DD",399,399,.21,5,1,0)
399^.11^4
"^DD",399,399,.21,12)
Primary/Secondary/Tertiary must have corresponding insurance co on bill.
"^DD",399,399,.21,12.1)
S DIC("S")="I $S(X=""P"":$D(^DGCR(399,DA,""I1"")),X=""S"":$D(^DGCR(399,DA,""I2"")),X=""T"":$D(^DGCR(399,DA,""I3"")),1:1)"
"^DD",399,399,.21,21,0)
^^1^1^2960129^^^
"^DD",399,399,.21,21,1,0)
This field determines the entity currently responsible for paying this bill.
"^DD",399,399,.21,"DT")
3041119
"^DD",399,399,101,0)
PRIMARY INSURANCE CARRIER^R*P36'X^DIC(36,^M;1^D DD^IBCNS S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))" D ^DIC K DIC,IBDD S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,101,1,0)
^.1
"^DD",399,399,101,1,1,0)
^^TRIGGER^399^122
"^DD",399,399,101,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,X,1) X ^DD(399,101,1,1,1.4)
"^DD",399,399,101,1,1,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,2)=DIV,DIH=399,DIG=122 D ^DICR
"^DD",399,399,101,1,1,2)
Q
"^DD",399,399,101,1,1,3)
Do Not Delete
"^DD",399,399,101,1,1,"%D",0)
^.101^3^3^3020819^^
"^DD",399,399,101,1,1,"%D",1,0)
This trigger sets the Bill Primary Provider # based on the Form Type,  
"^DD",399,399,101,1,1,"%D",2,0)
using the Primary Insurance Companies Hospital or Professional Provider 
"^DD",399,399,101,1,1,"%D",3,0)
Number.  Special case for Medicare Part A.
"^DD",399,399,101,1,1,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,X,1)
"^DD",399,399,101,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,101,1,1,"DT")
3020819
"^DD",399,399,101,1,1,"FIELD")
PRIMARY PROVIDER #
"^DD",399,399,101,1,2,0)
^^TRIGGER^399^24
"^DD",399,399,101,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=1 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(399,101,1,2,1.1) X ^DD(399,101,1,2,1.4)
"^DD",399,399,101,1,2,1.1)
S X=DIV S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,101,1,2,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,101,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=1 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399,101,1,2,2.4)
"^DD",399,399,101,1,2,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,101,1,2,3)
DO NOT DELETE
"^DD",399,399,101,1,2,"%D",0)
^^2^2^2990628^
"^DD",399,399,101,1,2,"%D",1,0)
This triggers the CLAIM MRA STATUS to 'MRA NEEDED' (1N) if the primary
"^DD",399,399,101,1,2,"%D",2,0)
insurance is the current insurance and the current insurance = MEDICARE WNR.
"^DD",399,399,101,1,2,"CREATE CONDITION")
I $$COBN^IBCEF(DA)=1
"^DD",399,399,101,1,2,"CREATE VALUE")
S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,101,1,2,"DELETE CONDITION")
I $$COBN^IBCEF(DA)=1
"^DD",399,399,101,1,2,"DELETE VALUE")
@
"^DD",399,399,101,1,2,"DT")
2990628
"^DD",399,399,101,1,2,"FIELD")
CLAIM MRA STATUS
"^DD",399,399,101,1,3,0)
^^TRIGGER^399^27
"^DD",399,399,101,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=1,1:0) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(399,101,1,3,1.4)
"^DD",399,399,101,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,8)=DIV,DIH=399,DIG=27 D ^DICR
"^DD",399,399,101,1,3,2)
Q
"^DD",399,399,101,1,3,3)
Do not delete
"^DD",399,399,101,1,3,"%D",0)
^^3^3^3041119^
"^DD",399,399,101,1,3,"%D",1,0)
When the current insurance is the primary insurance and the primary
"^DD",399,399,101,1,3,"%D",2,0)
insurance is MEDICARE WNR, delete the FORCE CLAIM TO PRINT field as it
"^DD",399,399,101,1,3,"%D",3,0)
is not valid to print an MRA request.
"^DD",399,399,101,1,3,"CREATE CONDITION")
S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=1,1:0)
"^DD",399,399,101,1,3,"CREATE VALUE")
@
"^DD",399,399,101,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,101,1,3,"DT")
3041119
"^DD",399,399,101,1,3,"FIELD")
FORCE CLAIM TO PRINT
"^DD",399,399,101,3)
Enter name of insurance carrier to which this bill is to be sent.
"^DD",399,399,101,5,1,0)
399^112^1
"^DD",399,399,101,12)
Only valid insurance companies for this date of care.
"^DD",399,399,101,12.1)
S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))"
"^DD",399,399,101,21,0)
^^2^2^2990503^^^^
"^DD",399,399,101,21,1,0)
This is the name of the insurance carrier to which this bill is to be sent.
"^DD",399,399,101,21,2,0)
This is from the entries in this patient's file of insurance companies. 
"^DD",399,399,101,23,0)
^^3^3^2990503^^^
"^DD",399,399,101,23,1,0)
Only valid/active insurance companies for this patient can be choosen,
"^DD",399,399,101,23,2,0)
as defined by DD^IBCNS.  Company must not already be defined as a carrier 
"^DD",399,399,101,23,3,0)
(399,102-103) for this bill.
"^DD",399,399,101,"DT")
3041119
"^DD",399,399,102,0)
SECONDARY INSURANCE CARRIER^*P36'X^DIC(36,^M;2^D ^DIC K DIC,IBDD S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,102,1,0)
^.1
"^DD",399,399,102,1,1,0)
399^AI2^MUMPS
"^DD",399,399,102,1,1,1)
Q
"^DD",399,399,102,1,1,2)
Q
"^DD",399,399,102,1,1,"DT")
2931220
"^DD",399,399,102,1,2,0)
^^TRIGGER^399^123
"^DD",399,399,102,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,X,2) X ^DD(399,102,1,2,1.4)
"^DD",399,399,102,1,2,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,3)=DIV,DIH=399,DIG=123 D ^DICR
"^DD",399,399,102,1,2,2)
Q
"^DD",399,399,102,1,2,3)
Do Not Delete
"^DD",399,399,102,1,2,"%D",0)
^^3^3^3020819^
"^DD",399,399,102,1,2,"%D",1,0)
This trigger sets the Bill Secondary Provider # based on the Form Type,  
"^DD",399,399,102,1,2,"%D",2,0)
using the Secondary Insurance Companies Hospital or Professional Provider 
"^DD",399,399,102,1,2,"%D",3,0)
Number.  Special case for Medicare Part A.
"^DD",399,399,102,1,2,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,X,2)
"^DD",399,399,102,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,102,1,2,"DT")
3020819
"^DD",399,399,102,1,2,"FIELD")
SECONDARY PROVIDER 
"^DD",399,399,102,1,3,0)
^^TRIGGER^399^24
"^DD",399,399,102,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=2 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(399,102,1,3,1.1) X ^DD(399,102,1,3,1.4)
"^DD",399,399,102,1,3,1.1)
S X=DIV S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,102,1,3,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,102,1,3,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=2 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399,102,1,3,2.4)
"^DD",399,399,102,1,3,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,102,1,3,3)
DO NOT DELETE
"^DD",399,399,102,1,3,"%D",0)
^^3^3^2990628^
"^DD",399,399,102,1,3,"%D",1,0)
This trigger forces the CLAIM MRA STATUS field to be set appropriately if
"^DD",399,399,102,1,3,"%D",2,0)
the current insurance is the secondary insurance company and it will require
"^DD",399,399,102,1,3,"%D",3,0)
an MRA request.
"^DD",399,399,102,1,3,"CREATE CONDITION")
I $$COBN^IBCEF(DA)=2
"^DD",399,399,102,1,3,"CREATE VALUE")
S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,102,1,3,"DELETE CONDITION")
I $$COBN^IBCEF(DA)=2
"^DD",399,399,102,1,3,"DELETE VALUE")
@
"^DD",399,399,102,1,3,"DT")
2990628
"^DD",399,399,102,1,3,"FIELD")
CLAIM MRA STATUS
"^DD",399,399,102,1,4,0)
^^TRIGGER^399^27
"^DD",399,399,102,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=2,1:0) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(399,102,1,4,1.4)
"^DD",399,399,102,1,4,1.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,8)=DIV,DIH=399,DIG=27 D ^DICR
"^DD",399,399,102,1,4,2)
Q
"^DD",399,399,102,1,4,3)
Do not delete
"^DD",399,399,102,1,4,"%D",0)
^^3^3^3041119^
"^DD",399,399,102,1,4,"%D",1,0)
When the current insurance is the secondary insurance and the secondary
"^DD",399,399,102,1,4,"%D",2,0)
insurance is MEDICARE WNR, delete the FORCE CLAIM TO PRINT field as it
"^DD",399,399,102,1,4,"%D",3,0)
is not valid to print an MRA request.
"^DD",399,399,102,1,4,"CREATE CONDITION")
S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=2,1:0)
"^DD",399,399,102,1,4,"CREATE VALUE")
@
"^DD",399,399,102,1,4,"DELETE VALUE")
NO EFFECT
"^DD",399,399,102,1,4,"DT")
3041119
"^DD",399,399,102,1,4,"FIELD")
FORCE CLAIM TO PRINT
"^DD",399,399,102,3)
Enter name of secondary insurance carrier from which the provider might expect some payment for this bill.
"^DD",399,399,102,5,1,0)
399^113^1
"^DD",399,399,102,12)
Only valid insurance companies for this date of care.
"^DD",399,399,102,12.1)
S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))"
"^DD",399,399,102,21,0)
^^2^2^2880831^
"^DD",399,399,102,21,1,0)
This is the name of the secondary insurance carrier from which the provider
"^DD",399,399,102,21,2,0)
might expect some payment for this bill.
"^DD",399,399,102,"DT")
3041119
"^DIC",350.8,350.8,0)
IB ERROR
"^DIC",350.8,350.8,0,"GL")
^IBE(350.8,
"^DIC",350.8,350.8,"%D",0)
^^11^11^2940214^^^^
"^DIC",350.8,350.8,"%D",1,0)
This file contains errors for billing functions.  It may be used by
"^DIC",350.8,350.8,"%D",2,0)
applications, IB or AR.  The normal format for a routine to return
"^DIC",350.8,350.8,"%D",3,0)
an error is to return the variable:
"^DIC",350.8,350.8,"%D",4,0)
  Y=1^... a successful event occured
"^DIC",350.8,350.8,"%D",5,0)
  Y=-1^error code[;error code;error code...]^additional text
"^DIC",350.8,350.8,"%D",6,0)
The error messages can be displayed by calling routine ^IBAERR.  If
"^DIC",350.8,350.8,"%D",7,0)
the error occurs in a tasked job ($D(ZTQUEUED)'=0) the routine will
"^DIC",350.8,350.8,"%D",8,0)
put the error message in a bulletin and post it to the group defined
"^DIC",350.8,350.8,"%D",9,0)
in the IB SITE PARAMETER FILE.
"^DIC",350.8,350.8,"%D",10,0)
 
"^DIC",350.8,350.8,"%D",11,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",350.8,"B","IB ERROR",350.8)

"^DIC",364.6,364.6,0)
IB FORM SKELETON DEFINITION^364.6P
"^DIC",364.6,364.6,0,"GL")
^IBA(364.6,
"^DIC",364.6,364.6,"%D",0)
^^10^10^2970606^^^^
"^DIC",364.6,364.6,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.6,364.6,"%D",2,0)
 
"^DIC",364.6,364.6,"%D",3,0)
This file contains records that define the skeleton makeup of forms for
"^DIC",364.6,364.6,"%D",4,0)
the IB system.  This definition includes the absolute position of every
"^DIC",364.6,364.6,"%D",5,0)
field that can be output on the form, the length each field must be limited
"^DIC",364.6,364.6,"%D",6,0)
to, and some descriptive information.   This includes printed forms,
"^DIC",364.6,364.6,"%D",7,0)
transmittable output files, and special local billing screens.
"^DIC",364.6,364.6,"%D",8,0)
 
"^DIC",364.6,364.6,"%D",9,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.6,364.6,"%D",10,0)
NATIONAL should not be deleted or edited.
"^DIC",364.6,"B","IB FORM SKELETON DEFINITION",364.6)

**END**
**END**
