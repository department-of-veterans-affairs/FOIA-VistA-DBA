KIDS Distribution saved on May 27, 2003@08:58:47
PATCH SD*5.3*296 - MT Appt. Blocking Removal
**KIDS**:SD*5.3*296^PX*1.0*122^DG*5.3*512^EAS*1.0*32^

**INSTALL NAME**
SD*5.3*296
"BLD",4697,0)
SD*5.3*296^SCHEDULING^0^3030527^y
"BLD",4697,1,0)
^^24^24^3030425^
"BLD",4697,1,1,0)
In response to Policy Board (NLB) comment on the VHA Veterans Equitable
"BLD",4697,1,2,0)
Resource Allocation (VERA) process, the CBO requests the removal of:
"BLD",4697,1,3,0)
 
"BLD",4697,1,4,0)
(1) the current restriction that blocks transmission of outpatient 
"BLD",4697,1,5,0)
encounters (ACRP) to the National Patient Care Database (NPCD) if a
"BLD",4697,1,6,0)
veteran's updated financial assessment (Means Test) information is not
"BLD",4697,1,7,0)
complete, and 
"BLD",4697,1,8,0)
(2) the restriction that blocks the ability to schedule
"BLD",4697,1,9,0)
future appointments for veterans whose financial assessments need
"BLD",4697,1,10,0)
updating.
"BLD",4697,1,11,0)
 
"BLD",4697,1,12,0)
Current policy establishes a requirement to block transmission of 
"BLD",4697,1,13,0)
outpatient encounters (ACRP) to the National Patient Care Database if the
"BLD",4697,1,14,0)
patient's current Means Test status equals "Required."  This leads to
"BLD",4697,1,15,0)
under-reported workload and inaccurate information in national
"BLD",4697,1,16,0)
databases.  
"BLD",4697,1,17,0)
 
"BLD",4697,1,18,0)
Software has been implemented which blocks the ability to schedule future 
"BLD",4697,1,19,0)
appointments for veterans whose financial assessment needs updating.  VHA 
"BLD",4697,1,20,0)
Directive 2002-019, dated April 4, 2002, provided guidance to facilities 
"BLD",4697,1,21,0)
on the implementation of the appointment blocking software.  If a 
"BLD",4697,1,22,0)
veteran's financial assessment needs updating, the software prevents the 
"BLD",4697,1,23,0)
ability to make future appointments for the veteran.  This restriction 
"BLD",4697,1,24,0)
shall also be removed at the request of the CBO.  
"BLD",4697,4,0)
^9.64PA^^
"BLD",4697,"KRN",0)
^9.67PA^8989.52^19
"BLD",4697,"KRN",.4,0)
.4
"BLD",4697,"KRN",.401,0)
.401
"BLD",4697,"KRN",.402,0)
.402
"BLD",4697,"KRN",.403,0)
.403
"BLD",4697,"KRN",.5,0)
.5
"BLD",4697,"KRN",.84,0)
.84
"BLD",4697,"KRN",3.6,0)
3.6
"BLD",4697,"KRN",3.8,0)
3.8
"BLD",4697,"KRN",9.2,0)
9.2
"BLD",4697,"KRN",9.8,0)
9.8
"BLD",4697,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",4697,"KRN",9.8,"NM",1,0)
SDCO1^^0^B23369936
"BLD",4697,"KRN",9.8,"NM",2,0)
SDAM2^^0^B19842319
"BLD",4697,"KRN",9.8,"NM",3,0)
SDAMWI^^0^B12281879
"BLD",4697,"KRN",9.8,"NM",4,0)
SDM^^0^B26228021
"BLD",4697,"KRN",9.8,"NM",5,0)
SCMSVUT1^^0^B59499386
"BLD",4697,"KRN",9.8,"NM","B","SCMSVUT1",5)

"BLD",4697,"KRN",9.8,"NM","B","SDAM2",2)

"BLD",4697,"KRN",9.8,"NM","B","SDAMWI",3)

"BLD",4697,"KRN",9.8,"NM","B","SDCO1",1)

"BLD",4697,"KRN",9.8,"NM","B","SDM",4)

"BLD",4697,"KRN",19,0)
19
"BLD",4697,"KRN",19.1,0)
19.1
"BLD",4697,"KRN",101,0)
101
"BLD",4697,"KRN",409.61,0)
409.61
"BLD",4697,"KRN",771,0)
771
"BLD",4697,"KRN",870,0)
870
"BLD",4697,"KRN",8989.51,0)
8989.51
"BLD",4697,"KRN",8989.52,0)
8989.52
"BLD",4697,"KRN",8994,0)
8994
"BLD",4697,"KRN","B",.4,.4)

"BLD",4697,"KRN","B",.401,.401)

"BLD",4697,"KRN","B",.402,.402)

"BLD",4697,"KRN","B",.403,.403)

"BLD",4697,"KRN","B",.5,.5)

"BLD",4697,"KRN","B",.84,.84)

"BLD",4697,"KRN","B",3.6,3.6)

"BLD",4697,"KRN","B",3.8,3.8)

"BLD",4697,"KRN","B",9.2,9.2)

"BLD",4697,"KRN","B",9.8,9.8)

"BLD",4697,"KRN","B",19,19)

"BLD",4697,"KRN","B",19.1,19.1)

"BLD",4697,"KRN","B",101,101)

"BLD",4697,"KRN","B",409.61,409.61)

"BLD",4697,"KRN","B",771,771)

"BLD",4697,"KRN","B",870,870)

"BLD",4697,"KRN","B",8989.51,8989.51)

"BLD",4697,"KRN","B",8989.52,8989.52)

"BLD",4697,"KRN","B",8994,8994)

"BLD",4697,"QUES",0)
^9.62^^
"BLD",4697,"REQB",0)
^9.611^3^3
"BLD",4697,"REQB",1,0)
SD*5.3*250^1
"BLD",4697,"REQB",2,0)
SD*5.3*254^1
"BLD",4697,"REQB",3,0)
SD*5.3*258^1
"BLD",4697,"REQB","B","SD*5.3*250",1)

"BLD",4697,"REQB","B","SD*5.3*254",2)

"BLD",4697,"REQB","B","SD*5.3*258",3)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813
"PKG",16,22,1,"PAH",1,0)
296^3030527
"PKG",16,22,1,"PAH",1,1,0)
^^24^24^3030527
"PKG",16,22,1,"PAH",1,1,1,0)
In response to Policy Board (NLB) comment on the VHA Veterans Equitable
"PKG",16,22,1,"PAH",1,1,2,0)
Resource Allocation (VERA) process, the CBO requests the removal of:
"PKG",16,22,1,"PAH",1,1,3,0)
 
"PKG",16,22,1,"PAH",1,1,4,0)
(1) the current restriction that blocks transmission of outpatient 
"PKG",16,22,1,"PAH",1,1,5,0)
encounters (ACRP) to the National Patient Care Database (NPCD) if a
"PKG",16,22,1,"PAH",1,1,6,0)
veteran's updated financial assessment (Means Test) information is not
"PKG",16,22,1,"PAH",1,1,7,0)
complete, and 
"PKG",16,22,1,"PAH",1,1,8,0)
(2) the restriction that blocks the ability to schedule
"PKG",16,22,1,"PAH",1,1,9,0)
future appointments for veterans whose financial assessments need
"PKG",16,22,1,"PAH",1,1,10,0)
updating.
"PKG",16,22,1,"PAH",1,1,11,0)
 
"PKG",16,22,1,"PAH",1,1,12,0)
Current policy establishes a requirement to block transmission of 
"PKG",16,22,1,"PAH",1,1,13,0)
outpatient encounters (ACRP) to the National Patient Care Database if the
"PKG",16,22,1,"PAH",1,1,14,0)
patient's current Means Test status equals "Required."  This leads to
"PKG",16,22,1,"PAH",1,1,15,0)
under-reported workload and inaccurate information in national
"PKG",16,22,1,"PAH",1,1,16,0)
databases.  
"PKG",16,22,1,"PAH",1,1,17,0)
 
"PKG",16,22,1,"PAH",1,1,18,0)
Software has been implemented which blocks the ability to schedule future 
"PKG",16,22,1,"PAH",1,1,19,0)
appointments for veterans whose financial assessment needs updating.  VHA 
"PKG",16,22,1,"PAH",1,1,20,0)
Directive 2002-019, dated April 4, 2002, provided guidance to facilities 
"PKG",16,22,1,"PAH",1,1,21,0)
on the implementation of the appointment blocking software.  If a 
"PKG",16,22,1,"PAH",1,1,22,0)
veteran's financial assessment needs updating, the software prevents the 
"PKG",16,22,1,"PAH",1,1,23,0)
ability to make future appointments for the veteran.  This restriction 
"PKG",16,22,1,"PAH",1,1,24,0)
shall also be removed at the request of the CBO.  
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","SCMSVUT1")
0^5^B59499386
"RTN","SCMSVUT1",1,0)
SCMSVUT1 ;ALB/JLU;validation utility routine;06/19/99 ; 4/24/03
"RTN","SCMSVUT1",2,0)
 ;;5.3;Scheduling;**66,143,180,239,247,258,296**;AUG 13,1993
"RTN","SCMSVUT1",3,0)
 ;06/19/99 ACS - Added CPT Modifier API calls to PROCCOD(DATA)
"RTN","SCMSVUT1",4,0)
 ;04/24/03 SCK - Added allowable MT Indicator of 'U' to MEANSTST and DEPMEANS
"RTN","SCMSVUT1",5,0)
 ;
"RTN","SCMSVUT1",6,0)
SEGERR(DATA,HLFS) ;
"RTN","SCMSVUT1",7,0)
 ;INPUT DATA - This is a check for the segment errors of null
"RTN","SCMSVUT1",8,0)
 ;      HLFS - The string separator character
"RTN","SCMSVUT1",9,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",10,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",11,0)
 I $L(DATA,HLFS)'>2 Q 0
"RTN","SCMSVUT1",12,0)
 Q 1
"RTN","SCMSVUT1",13,0)
 ;
"RTN","SCMSVUT1",14,0)
DODA(DATA) ;
"RTN","SCMSVUT1",15,0)
 ;INPUT   DATA - The FM date of death.
"RTN","SCMSVUT1",16,0)
 ;
"RTN","SCMSVUT1",17,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",18,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",19,0)
 N %DT,X,Y
"RTN","SCMSVUT1",20,0)
 S %DT="T",%DT(0)="-NOW",X=DATA
"RTN","SCMSVUT1",21,0)
 D ^%DT
"RTN","SCMSVUT1",22,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",23,0)
 ;
"RTN","SCMSVUT1",24,0)
DODB(DATA,ENCDT) ;
"RTN","SCMSVUT1",25,0)
 ;INPUT   DATA - The FM date of death
"RTN","SCMSVUT1",26,0)
 ;       ENCDT - The FM date of encounter
"RTN","SCMSVUT1",27,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",28,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",29,0)
 N %DT,X,Y
"RTN","SCMSVUT1",30,0)
 S %DT="T",%DT(0)=ENCDT,X=DATA
"RTN","SCMSVUT1",31,0)
 D ^%DT
"RTN","SCMSVUT1",32,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",33,0)
 ;
"RTN","SCMSVUT1",34,0)
DODL(DATA,ENCDT) ;
"RTN","SCMSVUT1",35,0)
 ;INPUT  DATA - The FM date of death
"RTN","SCMSVUT1",36,0)
 ;      ENCDT - The FM date of the encounter
"RTN","SCMSVUT1",37,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",38,0)
 I '$D(ENCDT) Q 0
"RTN","SCMSVUT1",39,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",40,0)
 I ENCDT<DATA Q 1
"RTN","SCMSVUT1",41,0)
 I ENCDT=DATA Q 1
"RTN","SCMSVUT1",42,0)
 N X1,X2,X
"RTN","SCMSVUT1",43,0)
 S X1=ENCDT,X2=DATA
"RTN","SCMSVUT1",44,0)
 D ^%DTC
"RTN","SCMSVUT1",45,0)
 I X>14 Q 0
"RTN","SCMSVUT1",46,0)
 Q 1
"RTN","SCMSVUT1",47,0)
 ;
"RTN","SCMSVUT1",48,0)
HOME(DATA) ;
"RTN","SCMSVUT1",49,0)
 ;INPUT   DATA - THe homeless indicator to be validated.
"RTN","SCMSVUT1",50,0)
 ;
"RTN","SCMSVUT1",51,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",52,0)
 I DATA'=1,DATA'=0 Q 0
"RTN","SCMSVUT1",53,0)
 Q 1
"RTN","SCMSVUT1",54,0)
 ;
"RTN","SCMSVUT1",55,0)
POW(DATA) ;
"RTN","SCMSVUT1",56,0)
 ;INPUT  DATA - The POW indicatort to be validated.
"RTN","SCMSVUT1",57,0)
 ;
"RTN","SCMSVUT1",58,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",59,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",60,0)
 I DATA'="N",DATA'="U",DATA'="Y" Q 0
"RTN","SCMSVUT1",61,0)
 Q 1
"RTN","SCMSVUT1",62,0)
 ;
"RTN","SCMSVUT1",63,0)
TYPINS(DATA) ;
"RTN","SCMSVUT1",64,0)
 ;INPUT  DATA - Type if insurance indicator to be validated.
"RTN","SCMSVUT1",65,0)
 ;
"RTN","SCMSVUT1",66,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",67,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",68,0)
 I DATA?.A Q 0
"RTN","SCMSVUT1",69,0)
 I DATA>-1,(DATA<13) Q 1
"RTN","SCMSVUT1",70,0)
 Q 0
"RTN","SCMSVUT1",71,0)
 ;
"RTN","SCMSVUT1",72,0)
PATCLSS(DATA) ;
"RTN","SCMSVUT1",73,0)
 ;INPUT  DATA - the patient's class
"RTN","SCMSVUT1",74,0)
 ;
"RTN","SCMSVUT1",75,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",76,0)
 I DATA'="O" Q 0
"RTN","SCMSVUT1",77,0)
 Q 1
"RTN","SCMSVUT1",78,0)
 ;
"RTN","SCMSVUT1",79,0)
POV(DATA) ;
"RTN","SCMSVUT1",80,0)
 ;INPUT DATA - the purpose of visit.
"RTN","SCMSVUT1",81,0)
 ;
"RTN","SCMSVUT1",82,0)
 N VAR
"RTN","SCMSVUT1",83,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",84,0)
 I $L(DATA)'=4 Q 0
"RTN","SCMSVUT1",85,0)
 I DATA?.A Q 0
"RTN","SCMSVUT1",86,0)
 S VAR=$E(DATA,1,2)
"RTN","SCMSVUT1",87,0)
 I VAR<1!(VAR>4) Q 0
"RTN","SCMSVUT1",88,0)
 S VAR=$E(DATA,3,4)
"RTN","SCMSVUT1",89,0)
 I VAR<1!(VAR>9) Q 0
"RTN","SCMSVUT1",90,0)
 Q 1
"RTN","SCMSVUT1",91,0)
 ;
"RTN","SCMSVUT1",92,0)
COMPGEN(DATA) ;
"RTN","SCMSVUT1",93,0)
 ;INPUT DATA - checking computer generated.
"RTN","SCMSVUT1",94,0)
 ;
"RTN","SCMSVUT1",95,0)
 N VAR
"RTN","SCMSVUT1",96,0)
 S VAR=$E(DATA,3,4)
"RTN","SCMSVUT1",97,0)
 I VAR=10 Q 0
"RTN","SCMSVUT1",98,0)
 Q 1
"RTN","SCMSVUT1",99,0)
 ;
"RTN","SCMSVUT1",100,0)
LOCVIS(DATA) ;
"RTN","SCMSVUT1",101,0)
 ;INPUT DATA - Location of visit
"RTN","SCMSVUT1",102,0)
 ;
"RTN","SCMSVUT1",103,0)
 I DATA'=1,DATA'=6 Q 0
"RTN","SCMSVUT1",104,0)
 Q 1
"RTN","SCMSVUT1",105,0)
 ;
"RTN","SCMSVUT1",106,0)
FACNMBR(DATA) ;
"RTN","SCMSVUT1",107,0)
 ;INPUT DATA - The facility number
"RTN","SCMSVUT1",108,0)
 ;
"RTN","SCMSVUT1",109,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",110,0)
 I DATA'?3N.AN Q 0
"RTN","SCMSVUT1",111,0)
 I '$D(^DIC(4,"D",DATA)) Q 0
"RTN","SCMSVUT1",112,0)
 Q 1
"RTN","SCMSVUT1",113,0)
 ;
"RTN","SCMSVUT1",114,0)
FACACT(DATA,ENCDT,DIV) ;
"RTN","SCMSVUT1",115,0)
 ;INPUT DATA - The active flag of the facility number.
"RTN","SCMSVUT1",116,0)
 ;
"RTN","SCMSVUT1",117,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",118,0)
 I '$D(ENCDT) Q 0
"RTN","SCMSVUT1",119,0)
 I '$D(DIV) Q 0
"RTN","SCMSVUT1",120,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",121,0)
 N SITE
"RTN","SCMSVUT1",122,0)
 I DIV]"" S SITE=$$SITE^VASITE(ENCDT,DIV)
"RTN","SCMSVUT1",123,0)
 I DIV']"" S SITE=$$SITE^VASITE(ENCDT)
"RTN","SCMSVUT1",124,0)
 I DATA'=$P(SITE,U,3) Q 0
"RTN","SCMSVUT1",125,0)
 Q 1
"RTN","SCMSVUT1",126,0)
 ;
"RTN","SCMSVUT1",127,0)
ENCDT(DATA) ;
"RTN","SCMSVUT1",128,0)
 ;INPUT DATA - The date/time of the encounter
"RTN","SCMSVUT1",129,0)
 ;
"RTN","SCMSVUT1",130,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",131,0)
 N %DT,X,Y
"RTN","SCMSVUT1",132,0)
 S %DT="T"
"RTN","SCMSVUT1",133,0)
 S X=DATA
"RTN","SCMSVUT1",134,0)
 D ^%DT
"RTN","SCMSVUT1",135,0)
 I Y=-1 Q 0
"RTN","SCMSVUT1",136,0)
 N VAR
"RTN","SCMSVUT1",137,0)
 S VAR=$$OKTOXMIT^SCDXFU04(DATA)
"RTN","SCMSVUT1",138,0)
 ;I +VAR=1 Q 1
"RTN","SCMSVUT1",139,0)
 I +VAR<4&(VAR'<0) Q 1  ;SD*5.3*247
"RTN","SCMSVUT1",140,0)
 Q 0
"RTN","SCMSVUT1",141,0)
 ;
"RTN","SCMSVUT1",142,0)
UNIQNMBR(DATA) ;
"RTN","SCMSVUT1",143,0)
 ;INPUT DATA - The unique number from PCE for the encounter
"RTN","SCMSVUT1",144,0)
 ;
"RTN","SCMSVUT1",145,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",146,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",147,0)
 I DATA=-1 Q 0
"RTN","SCMSVUT1",148,0)
 I DATA=0 Q 0
"RTN","SCMSVUT1",149,0)
 Q 1
"RTN","SCMSVUT1",150,0)
 ;
"RTN","SCMSVUT1",151,0)
SEGCHK(DATA,HLFS) ;
"RTN","SCMSVUT1",152,0)
 ;INPUT DATA - The segment to be checked.
"RTN","SCMSVUT1",153,0)
 ;      HLFS - The HL7 field separator
"RTN","SCMSVUT1",154,0)
 ;
"RTN","SCMSVUT1",155,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",156,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",157,0)
 I $L(DATA,HLFS)'>2 Q 0
"RTN","SCMSVUT1",158,0)
 Q 1
"RTN","SCMSVUT1",159,0)
 ;
"RTN","SCMSVUT1",160,0)
SEQNBR(DATA,SEQNBR) ;
"RTN","SCMSVUT1",161,0)
 ;INPUT DATA - The sequence number to be checked.
"RTN","SCMSVUT1",162,0)
 ;     SEQNBR - This is the previous seq number to compare to
"RTN","SCMSVUT1",163,0)
 ;
"RTN","SCMSVUT1",164,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",165,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",166,0)
 I +DATA'=+SEQNBR Q 0
"RTN","SCMSVUT1",167,0)
 S SEQNBR=SEQNBR+1
"RTN","SCMSVUT1",168,0)
 Q 1
"RTN","SCMSVUT1",169,0)
 ;
"RTN","SCMSVUT1",170,0)
DCODMTHD(DATA) ;
"RTN","SCMSVUT1",171,0)
 ;INPUT DATA - This is the coding method to be checked.
"RTN","SCMSVUT1",172,0)
 ;
"RTN","SCMSVUT1",173,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",174,0)
 I DATA'="I9" Q 0
"RTN","SCMSVUT1",175,0)
 Q 1
"RTN","SCMSVUT1",176,0)
 ;
"RTN","SCMSVUT1",177,0)
DIAGCOD(DATA,ENCDT) ;
"RTN","SCMSVUT1",178,0)
 ;INPUT DATA - This is the diagnosis code
"RTN","SCMSVUT1",179,0)
 ;     ENCDT - This is the encounter date
"RTN","SCMSVUT1",180,0)
 ;
"RTN","SCMSVUT1",181,0)
 N VAR
"RTN","SCMSVUT1",182,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",183,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",184,0)
 S VAR=$O(^ICD9("BA",DATA_" ",""))
"RTN","SCMSVUT1",185,0)
 I 'VAR Q 0
"RTN","SCMSVUT1",186,0)
 S VAR=$G(^ICD9(VAR,0))
"RTN","SCMSVUT1",187,0)
 I VAR']"" Q 0
"RTN","SCMSVUT1",188,0)
 ;this is the inactive flag
"RTN","SCMSVUT1",189,0)
 I $P(VAR,U,9)'=1 Q 1
"RTN","SCMSVUT1",190,0)
 S VAR=$P(VAR,U,11)
"RTN","SCMSVUT1",191,0)
 N %DT,X,Y
"RTN","SCMSVUT1",192,0)
 S %DT="ST",%DT(0)=-VAR,X=ENCDT
"RTN","SCMSVUT1",193,0)
 D ^%DT
"RTN","SCMSVUT1",194,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",195,0)
 ;
"RTN","SCMSVUT1",196,0)
PRIOR(DATA) ;
"RTN","SCMSVUT1",197,0)
 ;INPUT DATA - The priority of the diagnosis found
"RTN","SCMSVUT1",198,0)
 ;
"RTN","SCMSVUT1",199,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",200,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",201,0)
 I DATA=1 Q 1
"RTN","SCMSVUT1",202,0)
 Q 0
"RTN","SCMSVUT1",203,0)
 ;
"RTN","SCMSVUT1",204,0)
ELIGCODM(DATA) ;
"RTN","SCMSVUT1",205,0)
 ;INPUT DATA - The eligibility code
"RTN","SCMSVUT1",206,0)
 ;A CHECK FOR MISSING
"RTN","SCMSVUT1",207,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",208,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",209,0)
 I '$D(^DIC(8.1,DATA,0)) Q 0
"RTN","SCMSVUT1",210,0)
 Q 1
"RTN","SCMSVUT1",211,0)
 ;
"RTN","SCMSVUT1",212,0)
ELIGINCV(DATA) ;
"RTN","SCMSVUT1",213,0)
 ;INPUT DATA - Contains the eligibility code in the first piece and
"RTN","SCMSVUT1",214,0)
 ;the veteran status in the second.
"RTN","SCMSVUT1",215,0)
 ;
"RTN","SCMSVUT1",216,0)
 ;the following quit is to stop this edit check.
"RTN","SCMSVUT1",217,0)
 ;Per Austin 9/97 this is not needed.
"RTN","SCMSVUT1",218,0)
 Q 1
"RTN","SCMSVUT1",219,0)
 N VET,ELIG
"RTN","SCMSVUT1",220,0)
 S VET=$P(DATA,U,2)
"RTN","SCMSVUT1",221,0)
 S ELIG=$P(DATA,U,1)
"RTN","SCMSVUT1",222,0)
 I VET=1&((ELIG<1)!(ELIG>18)) Q 0
"RTN","SCMSVUT1",223,0)
 I VET=1,ELIG>5,ELIG<15 Q 0
"RTN","SCMSVUT1",224,0)
 I VET=0,ELIG<6 Q 0
"RTN","SCMSVUT1",225,0)
 I VET=0,ELIG=11 Q 0
"RTN","SCMSVUT1",226,0)
 I VET=0,ELIG>14,ELIG'=19 Q 0
"RTN","SCMSVUT1",227,0)
 Q 1
"RTN","SCMSVUT1",228,0)
 ;
"RTN","SCMSVUT1",229,0)
ELIGINCS(DATA) ;
"RTN","SCMSVUT1",230,0)
 ;INPUT DATA - Eligibility code
"RTN","SCMSVUT1",231,0)
 ;
"RTN","SCMSVUT1",232,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",233,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",234,0)
 I '$D(^DIC(8.1,DATA,0)) Q 0
"RTN","SCMSVUT1",235,0)
 I +$P(^DIC(8.1,DATA,0),U,7) Q 0
"RTN","SCMSVUT1",236,0)
 Q 1
"RTN","SCMSVUT1",237,0)
 ;
"RTN","SCMSVUT1",238,0)
VETSTAT(DATA) ;
"RTN","SCMSVUT1",239,0)
 ;INPUT DATA - The veteran status indicator
"RTN","SCMSVUT1",240,0)
 ;
"RTN","SCMSVUT1",241,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",242,0)
 I DATA'=0,DATA'=1 Q 0
"RTN","SCMSVUT1",243,0)
 Q 1
"RTN","SCMSVUT1",244,0)
 ;
"RTN","SCMSVUT1",245,0)
VETPOW(DATA,DFN) ;
"RTN","SCMSVUT1",246,0)
 ;INPUT DATA - veteran status to check with POW status.
"RTN","SCMSVUT1",247,0)
 ;       DFN - The DFN of the patient.
"RTN","SCMSVUT1",248,0)
 ;
"RTN","SCMSVUT1",249,0)
 N VAR,POW
"RTN","SCMSVUT1",250,0)
 I DATA=0 Q 1
"RTN","SCMSVUT1",251,0)
 S VAR=$G(^DPT(DFN,.52))
"RTN","SCMSVUT1",252,0)
 S POW=$S(VAR]"":$P(VAR,U,5),1:VAR)
"RTN","SCMSVUT1",253,0)
 I POW="" Q 1
"RTN","SCMSVUT1",254,0)
 I POW="Y"!(POW="N")!(POW="U") Q 1
"RTN","SCMSVUT1",255,0)
 Q 0
"RTN","SCMSVUT1",256,0)
 ;
"RTN","SCMSVUT1",257,0)
NMBRDEP(DATA) ;
"RTN","SCMSVUT1",258,0)
 ;INPUT DATA - the number of dependents
"RTN","SCMSVUT1",259,0)
 ;
"RTN","SCMSVUT1",260,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",261,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",262,0)
 I DATA="XX" Q 1
"RTN","SCMSVUT1",263,0)
 I DATA'?1.2N Q 0
"RTN","SCMSVUT1",264,0)
 I +DATA>99!(+DATA<0) Q 0
"RTN","SCMSVUT1",265,0)
 Q 1
"RTN","SCMSVUT1",266,0)
 ;
"RTN","SCMSVUT1",267,0)
PATINC(DATA) ;
"RTN","SCMSVUT1",268,0)
 ;INPUT DATA - The patient's income
"RTN","SCMSVUT1",269,0)
 ;
"RTN","SCMSVUT1",270,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",271,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",272,0)
 I DATA<0 Q 0
"RTN","SCMSVUT1",273,0)
 I DATA'?.N.1".".N Q 0
"RTN","SCMSVUT1",274,0)
 Q 1
"RTN","SCMSVUT1",275,0)
 ;
"RTN","SCMSVUT1",276,0)
MEANSTST(DATA) ;
"RTN","SCMSVUT1",277,0)
 ;INPUT DATA - The means test indicator
"RTN","SCMSVUT1",278,0)
 ;
"RTN","SCMSVUT1",279,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",280,0)
 S DATA=","_DATA_","
"RTN","SCMSVUT1",281,0)
 ; ** SD*296, added 'U' means test indicator to allowed list.
"RTN","SCMSVUT1",282,0)
 I ",AS,AN,N,X,C,G,U,"'[DATA Q 0
"RTN","SCMSVUT1",283,0)
 Q 1
"RTN","SCMSVUT1",284,0)
 ;
"RTN","SCMSVUT1",285,0)
DEPMEANS(DATA) ;
"RTN","SCMSVUT1",286,0)
 ;INPUT DATA - This variable contains the number of dependents in the
"RTN","SCMSVUT1",287,0)
 ;             first peice and the means test indicator in the second.
"RTN","SCMSVUT1",288,0)
 ;
"RTN","SCMSVUT1",289,0)
 N MT,DEP
"RTN","SCMSVUT1",290,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",291,0)
 S DEP=$P(DATA,U,1)
"RTN","SCMSVUT1",292,0)
 S MT=","_$P(DATA,U,2)_","
"RTN","SCMSVUT1",293,0)
 I DEP="XX",(",AS,N,X,U,"'[MT) Q 0
"RTN","SCMSVUT1",294,0)
 Q 1
"RTN","SCMSVUT1",295,0)
 ;
"RTN","SCMSVUT1",296,0)
CLASSQUE(DATA) ;
"RTN","SCMSVUT1",297,0)
 ;INPUT DATA - Classification question value.
"RTN","SCMSVUT1",298,0)
 ;
"RTN","SCMSVUT1",299,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",300,0)
 I DATA'=1,DATA'=0,DATA'="" Q 0
"RTN","SCMSVUT1",301,0)
 Q 1
"RTN","SCMSVUT1",302,0)
 ;
"RTN","SCMSVUT1",303,0)
CLAQUETY(DATA) ;
"RTN","SCMSVUT1",304,0)
 ;INPUT DATA - Outpatient classification type to be checked.
"RTN","SCMSVUT1",305,0)
 ;
"RTN","SCMSVUT1",306,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",307,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",308,0)
 I '$D(^SD(409.41,DATA,0)) Q 0
"RTN","SCMSVUT1",309,0)
 Q 1
"RTN","SCMSVUT1",310,0)
 ;
"RTN","SCMSVUT1",311,0)
CLAVET(DATA,DFN,TYPE) ;
"RTN","SCMSVUT1",312,0)
 ;INPUT DATA - Classification question information to compare to VET
"RTN","SCMSVUT1",313,0)
 ;             status
"RTN","SCMSVUT1",314,0)
 ;       DFN - The patient to compare this info to.
"RTN","SCMSVUT1",315,0)
 ;      TYPE - The classification type.
"RTN","SCMSVUT1",316,0)
 ;
"RTN","SCMSVUT1",317,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",318,0)
 I '$D(DFN) Q 0
"RTN","SCMSVUT1",319,0)
 N VET
"RTN","SCMSVUT1",320,0)
 S VET=$P($G(^DPT(DFN,"VET")),U,1)
"RTN","SCMSVUT1",321,0)
 I VET="Y",DATA'=1,DATA'=0,DATA'="" Q 0
"RTN","SCMSVUT1",322,0)
 ;This edit check is per a mail message from austin
"RTN","SCMSVUT1",323,0)
 I TYPE=4,VET'="Y",DATA'="","^A^B^C^D^"'[("^"_($P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)),"^",3))_"^") Q 0
"RTN","SCMSVUT1",324,0)
 I VET'="Y",DATA'="" Q $$EC^SDCO22(DFN)
"RTN","SCMSVUT1",325,0)
 Q 1
"RTN","SCMSVUT1",326,0)
 ;
"RTN","SCMSVUT1",327,0)
STPCOD(DATA) ;
"RTN","SCMSVUT1",328,0)
 ;INPUT DATA - stop code data to be checked
"RTN","SCMSVUT1",329,0)
 ;
"RTN","SCMSVUT1",330,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",331,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",332,0)
 I '$D(^DIC(40.7,"C",DATA)) Q 0
"RTN","SCMSVUT1",333,0)
 Q 1
"RTN","SCMSVUT1",334,0)
 ;
"RTN","SCMSVUT1",335,0)
ACTSTP(DATA,ENCDT) ;
"RTN","SCMSVUT1",336,0)
 ;INPUT  DATA - IEN of the stop code to be checked.
"RTN","SCMSVUT1",337,0)
 ;      ENCDT - the encounter date in question
"RTN","SCMSVUT1",338,0)
 ;
"RTN","SCMSVUT1",339,0)
 N STPCOD,%DT,X,Y
"RTN","SCMSVUT1",340,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",341,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",342,0)
 S STPCOD=$G(^DIC(40.7,DATA,0))
"RTN","SCMSVUT1",343,0)
 I STPCOD="" Q 0
"RTN","SCMSVUT1",344,0)
 I '$P(STPCOD,U,3) Q 1
"RTN","SCMSVUT1",345,0)
 S %DT(0)="-"_$P(STPCOD,U,3),%DT="T",X=ENCDT
"RTN","SCMSVUT1",346,0)
 D ^%DT
"RTN","SCMSVUT1",347,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",348,0)
 ;
"RTN","SCMSVUT1",349,0)
SERCON(DATA) ;
"RTN","SCMSVUT1",350,0)
 ;INPUT DATA - Service connection to be checked, missing or invalid
"RTN","SCMSVUT1",351,0)
 ;
"RTN","SCMSVUT1",352,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",353,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",354,0)
 I DATA'=1,DATA'=0 Q 0
"RTN","SCMSVUT1",355,0)
 Q 1
"RTN","SCMSVUT1",356,0)
 ;
"RTN","SCMSVUT1",357,0)
SCPER(DATA) ;
"RTN","SCMSVUT1",358,0)
 ;INPUT DATA - Service connected % to be tested
"RTN","SCMSVUT1",359,0)
 ;
"RTN","SCMSVUT1",360,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",361,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",362,0)
 I DATA'?.N.1".".N Q 0
"RTN","SCMSVUT1",363,0)
 Q 1
"RTN","SCMSVUT1",364,0)
 ;
"RTN","SCMSVUT1",365,0)
PRDSER(DATA) ;
"RTN","SCMSVUT1",366,0)
 ;INPUT DATA - period of service to be tested.
"RTN","SCMSVUT1",367,0)
 ;
"RTN","SCMSVUT1",368,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",369,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",370,0)
 I '$D(^DIC(21,"D",DATA)) Q 0
"RTN","SCMSVUT1",371,0)
 Q 1
"RTN","SCMSVUT1",372,0)
 ;
"RTN","SCMSVUT1",373,0)
VIETSER1(DATA) ;
"RTN","SCMSVUT1",374,0)
 ;INPUT DATA - Vietnam service to be checked
"RTN","SCMSVUT1",375,0)
 ;
"RTN","SCMSVUT1",376,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",377,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",378,0)
 I DATA'="Y",DATA'="N",DATA'="U" Q 0
"RTN","SCMSVUT1",379,0)
 Q 1
"RTN","SCMSVUT1",380,0)
 ;
"RTN","SCMSVUT1",381,0)
VIETSER2(DATA,DFN) ;
"RTN","SCMSVUT1",382,0)
 ;INPUT DATA - Vietnam service to be checked against vet status
"RTN","SCMSVUT1",383,0)
 ;
"RTN","SCMSVUT1",384,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",385,0)
 N VAR
"RTN","SCMSVUT1",386,0)
 S VAR=$G(^DPT(DFN,"VET"))
"RTN","SCMSVUT1",387,0)
 I DATA="",VAR'="Y" Q 1
"RTN","SCMSVUT1",388,0)
 I (DATA="Y"!(DATA="N")!(DATA="U")),VAR="Y" Q 1
"RTN","SCMSVUT1",389,0)
 Q 0
"RTN","SCMSVUT1",390,0)
 ;
"RTN","SCMSVUT1",391,0)
ACTPRD(DATA) ;
"RTN","SCMSVUT1",392,0)
 ;INPUT DATA - period of serivce indicator to be check to ensure active
"RTN","SCMSVUT1",393,0)
 ;
"RTN","SCMSVUT1",394,0)
 N VAR
"RTN","SCMSVUT1",395,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",396,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",397,0)
 S VAR=+$O(^DIC(21,"D",DATA,0))
"RTN","SCMSVUT1",398,0)
 S VAR=$P($G(^DIC(21,VAR,0)),U,8)
"RTN","SCMSVUT1",399,0)
 I VAR Q 0
"RTN","SCMSVUT1",400,0)
 Q 1
"RTN","SCMSVUT1",401,0)
 ;
"RTN","SCMSVUT1",402,0)
PCODMTHD(DATA) ;
"RTN","SCMSVUT1",403,0)
 ;INPUT DATA - The coding method to be checked.
"RTN","SCMSVUT1",404,0)
 ;
"RTN","SCMSVUT1",405,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",406,0)
 I DATA'="C4" Q 0
"RTN","SCMSVUT1",407,0)
 Q 1
"RTN","SCMSVUT1",408,0)
 ;
"RTN","SCMSVUT1",409,0)
PROCCOD(DATA) ;
"RTN","SCMSVUT1",410,0)
 ;INPUT DATA - The procedure code to be checked.
"RTN","SCMSVUT1",411,0)
 ;This call makes the assumption that leading zeros are intact in the 
"RTN","SCMSVUT1",412,0)
 ;input.
"RTN","SCMSVUT1",413,0)
 ;
"RTN","SCMSVUT1",414,0)
 N VAR
"RTN","SCMSVUT1",415,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",416,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",417,0)
 ;S VAR=+$O(^ICPT("B",DATA,""))
"RTN","SCMSVUT1",418,0)
 ;I '$D(^ICPT(VAR,0)) Q 0
"RTN","SCMSVUT1",419,0)
 I $$CPT^ICPTCOD(DATA,,1)'>0 Q 0
"RTN","SCMSVUT1",420,0)
 Q 1
"RTN","SCMSVUT1",421,0)
 ;
"RTN","SCMSVUT1",422,0)
PROVCLS(DATA) ;
"RTN","SCMSVUT1",423,0)
 ;INPUT DATA - The practitioner class to be checked.
"RTN","SCMSVUT1",424,0)
 ;
"RTN","SCMSVUT1",425,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",426,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",427,0)
 I $$CODE2TXT^XUA4A72(DATA)']"" Q 0
"RTN","SCMSVUT1",428,0)
 Q 1
"RTN","SCMSVUT1",429,0)
 ;
"RTN","SDAM2")
0^2^B19842319
"RTN","SDAM2",1,0)
SDAM2 ;MJK/ALB - Appt Mgt (cont); 12/1/91
"RTN","SDAM2",2,0)
 ;;5.3;Scheduling;**250,296**;Aug 13, 1993
"RTN","SDAM2",3,0)
 ;
"RTN","SDAM2",4,0)
CI ; -- protocol SDAM APPT CHECK IN entry pt
"RTN","SDAM2",5,0)
 ; input:  VALMY := array entries
"RTN","SDAM2",6,0)
 ;
"RTN","SDAM2",7,0)
 N SDI,SDAT,VALMY,SDAMCIDT,SDCIACT
"RTN","SDAM2",8,0)
 D SEL^VALM2 S SDI=0,SDCIACT=""
"RTN","SDAM2",9,0)
 D NOW^%DTC S SDAMCIDT=$P(%,".")_"."_$E($P(%,".",2)_"0000",1,4)
"RTN","SDAM2",10,0)
 F  S SDI=$O(VALMY(SDI)) Q:'SDI  I $D(^TMP("SDAMIDX",$J,SDI)) K SDAT D
"RTN","SDAM2",11,0)
 .S SDAT=^TMP("SDAMIDX",$J,SDI)
"RTN","SDAM2",12,0)
 .W !,^TMP("SDAM",$J,+SDAT,0)
"RTN","SDAM2",13,0)
 .D:VALMCC SELECT^VALM10(+SDAT,1)
"RTN","SDAM2",14,0)
 .D ONE($P(SDAT,U,2),$P(SDAT,U,4),$P(SDAT,U,3),$P(SDAT,U,5),0,SDAMCIDT)
"RTN","SDAM2",15,0)
 .D:VALMCC SELECT^VALM10(+SDAT,0)
"RTN","SDAM2",16,0)
 S VALMBCK=$S(VALMCC:"",1:"R")
"RTN","SDAM2",17,0)
 Q
"RTN","SDAM2",18,0)
 ;
"RTN","SDAM2",19,0)
ONE(DFN,SDCL,SDT,SDDA,SDASK,SDAMCIDT) ; -- check in one appt
"RTN","SDAM2",20,0)
 ; input:  DFN := ifn of patient
"RTN","SDAM2",21,0)
 ;        SDCL := clinic# 
"RTN","SDAM2",22,0)
 ;         SDT := appt d/t
"RTN","SDAM2",23,0)
 ;        SDDA := ifn in ^SC multiple or null
"RTN","SDAM2",24,0)
 ;       SDASK := ask d/t of ci always [1|yes or 0|no]
"RTN","SDAM2",25,0)
 ;    SDAMCIDT := ci date/time [optional]
"RTN","SDAM2",26,0)
 ;
"RTN","SDAM2",27,0)
 I $D(XRTL) D T0^%ZOSV
"RTN","SDAM2",28,0)
 S:'SDDA SDDA=$$FIND(DFN,SDT,SDCL)
"RTN","SDAM2",29,0)
 I 'SDDA W !!,*7,"You cannot check in this appointment." D PAUSE^VALM1 G ONEQ
"RTN","SDAM2",30,0)
 N SDATA,SDCIHDL,X S SDATA=SDDA_U_DFN_U_SDT_U_SDCL,SDCIHDL=$$HANDLE^SDAMEVT(1)
"RTN","SDAM2",31,0)
 D BEFORE^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCIHDL)
"RTN","SDAM2",32,0)
 I '$D(^SD(409.63,"ACI",1,+SDATA("BEFORE","STATUS"))) W !!,*7,"You cannot check in this appointment." D PAUSE^VALM1 G ONEQ
"RTN","SDAM2",33,0)
 ; *** mt blocking removed
"RTN","SDAM2",34,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T,$G(EASACT)'="W",$$MT^EASMTCHK(DFN,"","C",SDT) D PAUSE^VALM1 G ONEQ
"RTN","SDAM2",35,0)
 I $P(SDT,".")>DT W !!,*7,"It is too soon to check in this appointment." D PAUSE^VALM1 G ONEQ
"RTN","SDAM2",36,0)
 S:'$D(^SC(SDCL,"S",0)) ^(0)="^44.001DA^^"
"RTN","SDAM2",37,0)
 S DR="",X=$G(^SC(SDCL,"S",SDT,1,SDDA,"C"))
"RTN","SDAM2",38,0)
 I +X S DR=309
"RTN","SDAM2",39,0)
 ; -- already co'ed
"RTN","SDAM2",40,0)
 I DR="",$P(X,U,3) D
"RTN","SDAM2",41,0)
 .S DR="309//"
"RTN","SDAM2",42,0)
 .I $P(^SC(SDCL,0),U,24)!(SDASK) S DR=DR_$$FTIME^VALM1($P(X,U,3)) Q
"RTN","SDAM2",43,0)
 .S DR=DR_"//^S X="_$P(X,U,3)
"RTN","SDAM2",44,0)
 ;
"RTN","SDAM2",45,0)
 I DR="",$P(^SC(SDCL,0),U,24)!(SDASK) S DR="309//"_$S(SDAMCIDT:$$FTIME^VALM1(SDAMCIDT),1:"NOW")
"RTN","SDAM2",46,0)
 I DR="" S DR="309///"_$S(SDAMCIDT:"/"_SDAMCIDT,1:"NOW")
"RTN","SDAM2",47,0)
 S DA(2)=SDCL,DA(1)=SDT,DA=SDDA,DIE="^SC("_DA(2)_",""S"","_DA(1)_",1," D ^DIE
"RTN","SDAM2",48,0)
 D AFTER^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCIHDL)
"RTN","SDAM2",49,0)
 I '$P(SDATA("AFTER","STATUS"),U,4),'$P(SDATA("BEFORE","STATUS"),U,4) W !?8,*7,"...appointment has not been checked in" D PAUSE^VALM1
"RTN","SDAM2",50,0)
 I SDATA("BEFORE","STATUS")'=SDATA("AFTER","STATUS") D
"RTN","SDAM2",51,0)
 .I $P(SDATA("AFTER","STATUS"),U,4),'$P(SDATA("BEFORE","STATUS"),U,4) W !?8,"...checked in ",$$FTIME^VALM1($P(SDATA("AFTER","STATUS"),U,4))
"RTN","SDAM2",52,0)
 .I $D(SDCIACT) D
"RTN","SDAM2",53,0)
 ..S Y=SDATA("AFTER","STATUS"),Y1=$P(Y,U,4),Y=$P(Y,U,3)
"RTN","SDAM2",54,0)
 ..I $P(SDATA("BEFORE","STATUS"),U,3)'=Y D UPD($$LOWER^VALM1(Y),"STAT",+SDAT,1),UPD("","TIME",+SDAT,1)
"RTN","SDAM2",55,0)
 ..I $P(SDATA("AFTER","STATUS"),U,3)["CHECKED IN" D UPD($S($P(Y1,".")=DT:$$TIME^SDAM1($P(Y1,".",2)),1:"     "),"TIME",+SDAT,1)
"RTN","SDAM2",56,0)
 .D EVT^SDAMEVT(.SDATA,4,0,SDCIHDL) ; 4 := ci evt , 0 := interactive mode
"RTN","SDAM2",57,0)
 I $D(XRT0) S XRTN="SDAM2" D T1^%ZOSV
"RTN","SDAM2",58,0)
ONEQ K DA,DIE,DR,DQ,DE,Y,Y1 Q
"RTN","SDAM2",59,0)
 ;
"RTN","SDAM2",60,0)
 ;
"RTN","SDAM2",61,0)
FIND(DFN,SDT,SDCL) ; -- return appt ifn for pat
"RTN","SDAM2",62,0)
 ;   input:        DFN := ifn of pat.
"RTN","SDAM2",63,0)
 ;                 SDT := appt d/t
"RTN","SDAM2",64,0)
 ;                SDCL := ifn of clinic
"RTN","SDAM2",65,0)
 ;  output: [returned] := ifn if pat has appt on date/time
"RTN","SDAM2",66,0)
 ;
"RTN","SDAM2",67,0)
 N Y
"RTN","SDAM2",68,0)
 S Y=0 F  S Y=$O(^SC(SDCL,"S",SDT,1,Y)) Q:'Y  I $D(^(Y,0)),DFN=+^(0),$D(^DPT(+DFN,"S",SDT,0)),$$VALID(DFN,SDCL,SDT,Y) Q
"RTN","SDAM2",69,0)
 Q Y
"RTN","SDAM2",70,0)
 ;
"RTN","SDAM2",71,0)
UPD(TEXT,FLD,LINE,SAVE) ; -- update data for screen
"RTN","SDAM2",72,0)
 D FLDTEXT^VALM10(LINE,FLD,TEXT)
"RTN","SDAM2",73,0)
 D:VALMCC CNTRL^VALM10(LINE,$P(VALMDDF(FLD),U,2),$P(VALMDDF(FLD),U,3),IOINHI,IOINORM,+$G(SAVE))
"RTN","SDAM2",74,0)
 Q
"RTN","SDAM2",75,0)
 ;
"RTN","SDAM2",76,0)
MAKE ; -- make appt action
"RTN","SDAM2",77,0)
 N ORACTION,ORVP,XQORQUIT,SDAMERR
"RTN","SDAM2",78,0)
 D FULL^VALM1
"RTN","SDAM2",79,0)
 W !!,VALMHDR(1)
"RTN","SDAM2",80,0)
 D ^SDM
"RTN","SDAM2",81,0)
 I '$D(SDAMERR) D BLD^SDAM
"RTN","SDAM2",82,0)
 I $D(SDAMERR) D PAUSE^VALM1
"RTN","SDAM2",83,0)
 D SDM^SDKILL S VALMBCK="R"
"RTN","SDAM2",84,0)
 Q
"RTN","SDAM2",85,0)
 ;
"RTN","SDAM2",86,0)
WI ; -- walk-in visit action
"RTN","SDAM2",87,0)
 S VALMBCK="R"
"RTN","SDAM2",88,0)
 D FULL^VALM1
"RTN","SDAM2",89,0)
 I SDAMTYP="P" I $$CL^SDAMWI(SDFN) D BLD^SDAM1
"RTN","SDAM2",90,0)
 I SDAMTYP="C" I $$PT^SDAMWI(SDCLN) D BLD^SDAM3
"RTN","SDAM2",91,0)
 Q
"RTN","SDAM2",92,0)
 ;
"RTN","SDAM2",93,0)
DATE ; -- change date range
"RTN","SDAM2",94,0)
 S VALMB=SDBEG D RANGE^VALM11
"RTN","SDAM2",95,0)
 I $S('VALMBEG:1,SDBEG'=VALMBEG:0,1:SDEND=VALMEND) W !!,"Date range was not changed." D PAUSE^VALM1 S VALMBCK="" G DATEQ
"RTN","SDAM2",96,0)
 S SDBEG=VALMBEG,SDEND=VALMEND
"RTN","SDAM2",97,0)
 I SDAMTYP="P" D BLD^SDAM1
"RTN","SDAM2",98,0)
 I SDAMTYP="C" D BLD^SDAM3
"RTN","SDAM2",99,0)
 S VALMBCK="R"
"RTN","SDAM2",100,0)
DATEQ K VALMB,VALMBEG,VALMEND Q
"RTN","SDAM2",101,0)
 ;
"RTN","SDAM2",102,0)
INP(DFN,VDATE) ; -- determine inpat status ; dom is not an inpat appt
"RTN","SDAM2",103,0)
 N SDINP,VAINDT,VADMVT
"RTN","SDAM2",104,0)
 S SDINP="",VAINDT=VDATE D ADM^VADPT2 G INPQ:'VADMVT
"RTN","SDAM2",105,0)
 I $P(^DG(43,1,0),U,21),$P($G(^DIC(42,+$P($G(^DGPM(VADMVT,0)),U,6),0)),U,3)="D" G INPQ
"RTN","SDAM2",106,0)
 S SDINP="I"
"RTN","SDAM2",107,0)
INPQ Q SDINP
"RTN","SDAM2",108,0)
 ;
"RTN","SDAM2",109,0)
VALID(DFN,SDCL,SDT,SDDA) ; -- return valid appt.
"RTN","SDAM2",110,0)
 ; **NOTE:  For speed consideration the ^SC and ^DPT nodes must be
"RTN","SDAM2",111,0)
 ;          check to see they exist prior to calling this entry point.
"RTN","SDAM2",112,0)
 ;   input:        DFN := ifn of pat.
"RTN","SDAM2",113,0)
 ;                 SDT := appt d/t
"RTN","SDAM2",114,0)
 ;                SDCL := ifn of clinic
"RTN","SDAM2",115,0)
 ;                SDDA := ifn of appt
"RTN","SDAM2",116,0)
 ;  output: [returned] := 1 for valid appt., 0 for not valid
"RTN","SDAM2",117,0)
 Q $S($P(^SC(SDCL,"S",SDT,1,SDDA,0),U,9)'="C":1,$P(^DPT(DFN,"S",SDT,0),U,2)["C":1,1:0)
"RTN","SDAMWI")
0^3^B12281879
"RTN","SDAMWI",1,0)
SDAMWI ;ALB/MJK - Unscheduled Appointments ; 13 Jun 2001  4:02 PM
"RTN","SDAMWI",2,0)
 ;;5.3;Scheduling;**63,94,241,250,296**;Aug 13, 1993
"RTN","SDAMWI",3,0)
 ;
"RTN","SDAMWI",4,0)
EN(DFN,SC) ; -- main entry point
"RTN","SDAMWI",5,0)
 ;    input: DFN ; SC := clinic#
"RTN","SDAMWI",6,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",7,0)
 ;
"RTN","SDAMWI",8,0)
 N SDY,SDAPTYP,SDRE,SDRE1,SDIN,SDSL,SDD,SDALLE,SDATD,SDDECOD,SDEC,SDEMP,SDOEL,SDPL,SDRT,SDSC,SDTTM,COLLAT,SDX,SDSTART,ORDER,SDREP,SDDA,SDCL
"RTN","SDAMWI",9,0)
 D 2^VADPT I +VADM(6) W !!?5,*7,"o  Patient has died!" D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",10,0)
 S SDCL=SC,SDSL=$S($D(^SC(SC,"SL")):+^("SL"),1:""),SDD=0
"RTN","SDAMWI",11,0)
 K SDRE,SDIN,SDRE1
"RTN","SDAMWI",12,0)
 I $D(^SC(SC,"I")) S Y=^("I"),SDIN=+Y,SDRE=+$P(Y,U,2),SDRE1=$$FDATE^VALM1(SDRE)
"RTN","SDAMWI",13,0)
 I $D(SDIN),SDIN,SDIN'>DT,SDRE,SDRE>DT W !!?5,*7,"o  Clinic is inactive from ",$$FTIME^VALM1(SDIN)," to "_SDRE1 D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",14,0)
 I $D(SDIN),SDIN,SDIN'>DT,'SDRE W !!?5,*7,"o  Clinic is inactive as of ",$$FTIME^VALM1(SDIN) D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",15,0)
 I '$$TIME(.DFN,.SC,.SDT) S SDY=0 G ENQ
"RTN","SDAMWI",16,0)
 S Y=SDT D ^SDM4 I X="^" S SDY=0 G ENQ
"RTN","SDAMWI",17,0)
 ; ** SD*5.3*250 MT Blocking check removed
"RTN","SDAMWI",18,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T N EASACT S EASACT="W" I $$MT^EASMTCHK(DFN,+$G(SDAPTYP),EASACT) D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",19,0)
 ;-- get sub-category for appointment type
"RTN","SDAMWI",20,0)
 S SDXSCAT=$$SUB^DGSAUTL(SDAPTYP,2,"")
"RTN","SDAMWI",21,0)
 S SDY=$$MAKE^SDAMWI1(DFN,SDCL,SDT)
"RTN","SDAMWI",22,0)
 K SDXSCAT
"RTN","SDAMWI",23,0)
ENQ D KVAR^VADPT
"RTN","SDAMWI",24,0)
 Q SDY
"RTN","SDAMWI",25,0)
 ;
"RTN","SDAMWI",26,0)
TIME(DFN,SC,SDT) ; -- get appt date/time
"RTN","SDAMWI",27,0)
 ;    input: DFN ; SC := clinic#
"RTN","SDAMWI",28,0)
 ;   output: SDT := date/time of wi appt
"RTN","SDAMWI",29,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",30,0)
 ;
"RTN","SDAMWI",31,0)
 N SDY,%DT
"RTN","SDAMWI",32,0)
ASK R !!,"APPOINTMENT TIME: NOW// ",X:DTIME S X=$$UPPER^VALM1(X)
"RTN","SDAMWI",33,0)
 I X["^"!('$T) S SDY=0 G TIMEQ
"RTN","SDAMWI",34,0)
 I X?.E1"?" D  G ASK
"RTN","SDAMWI",35,0)
 .W !,"  Enter a time or date@time for the appointment or return for 'NOW'."
"RTN","SDAMWI",36,0)
 .W !,"The date must be today or earlier."
"RTN","SDAMWI",37,0)
 S:X=""!(X="N")!(X="NO") X="NOW"
"RTN","SDAMWI",38,0)
 I X'="NOW",X'["@" S X="T@"_X
"RTN","SDAMWI",39,0)
 S %DT="TEP",%DT(0)=-(DT+1) D ^%DT G ASK:Y<0 S SDT=Y
"RTN","SDAMWI",40,0)
 G:'$$CANCHK(.SC,.SDT) ASK
"RTN","SDAMWI",41,0)
 I $D(^DPT(DFN,"S",SDT,0)) W !?5,*7,"o  Patient already has an appt on ",$$FTIME^VALM1(SDT) G ASK
"RTN","SDAMWI",42,0)
 S SDY=1
"RTN","SDAMWI",43,0)
TIMEQ Q SDY
"RTN","SDAMWI",44,0)
 ;
"RTN","SDAMWI",45,0)
CANCHK(SC,SDT) ; -- is clinic cancelled for date
"RTN","SDAMWI",46,0)
 ;    input: SC := clinic# ; SDT := date/time of wi appt
"RTN","SDAMWI",47,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",48,0)
 ;
"RTN","SDAMWI",49,0)
 N SDY
"RTN","SDAMWI",50,0)
 S SDY=1
"RTN","SDAMWI",51,0)
 I $D(^SC(SC,"ST",$P(SDT,"."))),'$D(^SC(SC,"ST",$P(SDT,"."),"CAN")) G CANCHKQ
"RTN","SDAMWI",52,0)
 I $D(^SC(SC,"ST",$P(SDT,"."),"CAN")),$G(^SC(SC,"ST",$P(SDT,"."),1))["CANCEL" W !?5,*7,"o  This date's clinic has been cancelled!" S SDY=0 G CANCHKQ
"RTN","SDAMWI",53,0)
 I $D(^SC(SC,"ST",$P(SDT,"."),"CAN")),$G(^SC(SC,"ST",$P(SDT,"."),1))'["CANCEL" W !?5,*7,"o  Warning: Part of this day's clinic has been cancelled!" G CANCHKQ
"RTN","SDAMWI",54,0)
 S SDY=$$AVAIL(.SC,.SDT)
"RTN","SDAMWI",55,0)
CANCHKQ Q SDY
"RTN","SDAMWI",56,0)
 ;
"RTN","SDAMWI",57,0)
AVAIL(SC,SDT) ; -- does clinic meet
"RTN","SDAMWI",58,0)
 ;    input: SC := clinic# ; SDT := date/time of wi appt
"RTN","SDAMWI",59,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",60,0)
 ;
"RTN","SDAMWI",61,0)
 N SDY
"RTN","SDAMWI",62,0)
 S X=$P(SDT,".") D DOW^SDM0
"RTN","SDAMWI",63,0)
 I $D(^SC(SC,"T"_Y)) S Z=$O(^SC(SC,"T"_Y,DT)) I Z'="",$D(^SC(SC,"T"_Y,Z,1)),^(1)]"" S SDY=1 G AVAILQ
"RTN","SDAMWI",64,0)
 W !?5,*7,"o  Clinic does not meet on this date!" S SDY=0
"RTN","SDAMWI",65,0)
AVAILQ Q SDY
"RTN","SDAMWI",66,0)
 ;
"RTN","SDAMWI",67,0)
CL(DFN) ; -- make wi appt
"RTN","SDAMWI",68,0)
 ;    input: DFN
"RTN","SDAMWI",69,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",70,0)
 ;
"RTN","SDAMWI",71,0)
 S DIC="^SC(",DIC(0)="AEMQ",DIC("A")="Select Clinic: ",DIC("S")="I $P(^(0),U,3)=""C"",'$G(^(""OOS""))"
"RTN","SDAMWI",72,0)
 D ^DIC K DIC
"RTN","SDAMWI",73,0)
 I Y<0 S SDY=0 G CLQ
"RTN","SDAMWI",74,0)
 S SC=+Y S SDY=$$EN(.DFN,.SC)
"RTN","SDAMWI",75,0)
CLQ Q SDY
"RTN","SDAMWI",76,0)
 ;
"RTN","SDAMWI",77,0)
PT(SC) ;
"RTN","SDAMWI",78,0)
 ;    input:  SC := clinic#
"RTN","SDAMWI",79,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",80,0)
 ;
"RTN","SDAMWI",81,0)
 S DIC="^DPT(",DIC(0)="AEMQ",DIC("A")="Select Patient: "
"RTN","SDAMWI",82,0)
 D ^DIC K DIC
"RTN","SDAMWI",83,0)
 I Y<0 S SDY=0 G PTQ
"RTN","SDAMWI",84,0)
 S DFN=+Y S SDY=$$EN(.DFN,.SC)
"RTN","SDAMWI",85,0)
PTQ Q SDY
"RTN","SDAMWI",86,0)
 ;
"RTN","SDCO1")
0^1^B23369936
"RTN","SDCO1",1,0)
SDCO1 ;ALB/RMO - Appointment - Check Out;Apr 23 1999
"RTN","SDCO1",2,0)
 ;;5.3;Scheduling;**27,132,149,193,250,296**;08/13/93
"RTN","SDCO1",3,0)
 ;
"RTN","SDCO1",4,0)
EN ;Entry point for SDCO APPT CHECK OUT protocol
"RTN","SDCO1",5,0)
 N SDCOALBF,SDCOAP,SDCOBG,SDCODT,VALMY
"RTN","SDCO1",6,0)
 S VALMBCK=""
"RTN","SDCO1",7,0)
 D EN^VALM2(XQORNOD(0))
"RTN","SDCO1",8,0)
 D FULL^VALM1
"RTN","SDCO1",9,0)
 S SDCOAP=0 D NOW^%DTC S SDCODT=$P(%,".")_"."_$E($P(%,".",2)_"0000",1,4)
"RTN","SDCO1",10,0)
 F  S SDCOAP=$O(VALMY(SDCOAP)) Q:'SDCOAP  D
"RTN","SDCO1",11,0)
 .I $D(^TMP("SDAMIDX",$J,SDCOAP)) K SDAT S SDAT=^(SDCOAP) D
"RTN","SDCO1",12,0)
 ..W !!,^TMP("SDAM",$J,+SDAT,0)
"RTN","SDCO1",13,0)
 ..I $$CHK^SDCOU(SDCOAP) D CO(+$P(SDAT,"^",2),+$P(SDAT,"^",3),+$P(SDAT,"^",4),+$P(SDAT,"^",5),0,SDCODT,"CO",+SDAT,.SDCOALBF)
"RTN","SDCO1",14,0)
 I $G(SDCOALBF) S SDCOBG=VALMBG W ! D BLD^SDAM S:$D(@VALMAR@(SDCOBG,0)) VALMBG=SDCOBG
"RTN","SDCO1",15,0)
 S VALMBCK="R"
"RTN","SDCO1",16,0)
 K SDAT
"RTN","SDCO1",17,0)
 Q
"RTN","SDCO1",18,0)
 ;
"RTN","SDCO1",19,0)
CO(DFN,SDT,SDCL,SDDA,SDASK,SDCODT,SDCOACT,SDLNE,SDCOALBF) ;Appt Check Out
"RTN","SDCO1",20,0)
 ; Input  -- DFN      Patient file IEN
"RTN","SDCO1",21,0)
 ;           SDT      Appointment Date/Time
"RTN","SDCO1",22,0)
 ;           SDCL     Hospital Location file IEN for Appt
"RTN","SDCO1",23,0)
 ;           SDDA     IEN in ^SC multiple or null [Optional]
"RTN","SDCO1",24,0)
 ;           SDASK    Ask Check Out Date/Time     [Optional]
"RTN","SDCO1",25,0)
 ;           SDCODT   Date/Time of Check Out      [Optional]
"RTN","SDCO1",26,0)
 ;           SDCOACT  Appt Mgmt Check Out Action  [Optional]
"RTN","SDCO1",27,0)
 ;           SDLNE    Appt Mgmt Line Number       [Optional]
"RTN","SDCO1",28,0)
 ; Output -- SDCOALBF Re-build Appt Mgmt List
"RTN","SDCO1",29,0)
 I $D(XRTL) D T0^%ZOSV
"RTN","SDCO1",30,0)
 N SDCOQUIT,SDOE,SDATA
"RTN","SDCO1",31,0)
 S:'SDDA SDDA=$$FIND^SDAM2(DFN,SDT,SDCL)
"RTN","SDCO1",32,0)
 I 'SDDA W !!,*7,">>> You cannot check out this appointment." D PAUSE^VALM1 G COQ
"RTN","SDCO1",33,0)
 S SDATA=$G(^DPT(DFN,"S",SDT,0))
"RTN","SDCO1",34,0)
 ; ** MT Blocking removed
"RTN","SDCO1",35,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T,$G(EASACT)'="W",$$MT^EASMTCHK(DFN,$P($G(SDATA),U,16),"C",$G(SDT)) D PAUSE^VALM1 G COQ
"RTN","SDCO1",36,0)
 ;
"RTN","SDCO1",37,0)
 ;-- if new encounter, pass to PCE
"RTN","SDCO1",38,0)
 I $$NEW^SDPCE(SDT) D  S VALMBCK="R",SDCOALBF=1 G COQ
"RTN","SDCO1",39,0)
 . N SDCOED
"RTN","SDCO1",40,0)
 . S SDOE=$$GETAPT^SDVSIT2(DFN,SDT,SDCL)
"RTN","SDCO1",41,0)
 . ;
"RTN","SDCO1",42,0)
 . ; -- has appt already been checked out
"RTN","SDCO1",43,0)
 . S SDCOED=$$CHK($TR($$STATUS^SDAM1(DFN,SDT,SDCL,SDATA,SDDA),";","^"))
"RTN","SDCO1",44,0)
 . ;
"RTN","SDCO1",45,0)
 . ; -- if not checked out then do interview process
"RTN","SDCO1",46,0)
 . IF '$$CODT^SDCOU(DFN,SDT,SDCL) D
"RTN","SDCO1",47,0)
 . . N SDCOMKF,SDTRES
"RTN","SDCO1",48,0)
 . . ;
"RTN","SDCO1",49,0)
 . . ; -- first, check if should make follow-up appt
"RTN","SDCO1",50,0)
 . . IF $G(SDCOACT)="CO",'SDCOED D
"RTN","SDCO1",51,0)
 . . . N SDCOMKF
"RTN","SDCO1",52,0)
 . . . D MC^SDCO5(SDOE,1,.SDCOMKF,.SDCOQUIT) Q:$D(SDCOQUIT)
"RTN","SDCO1",53,0)
 . . . ;
"RTN","SDCO1",54,0)
 . . . ; -- Set flag to re-build appointment list
"RTN","SDCO1",55,0)
 . . . IF $G(SDCOMKF) S SDCOALBF=1
"RTN","SDCO1",56,0)
 . . ;
"RTN","SDCO1",57,0)
 . . ; -- c/o interview if user didn't quit
"RTN","SDCO1",58,0)
 . . I '$D(SDCOQUIT),'SDCOED D
"RTN","SDCO1",59,0)
 . . . N SDAPTYP
"RTN","SDCO1",60,0)
 . . . S SDTRES=$$INTV^PXAPI("INTV","SD","PIMS",$P($G(^SCE(+SDOE,0)),U,5),$P($G(^SCE(+SDOE,0)),U,4),DFN)
"RTN","SDCO1",61,0)
 . . . Q:SDTRES<0
"RTN","SDCO1",62,0)
 . . . ;
"RTN","SDCO1",63,0)
 . . . ; -- ask user if they want to see c/o screen
"RTN","SDCO1",64,0)
 . . . S SDGAFC=$$ASK^SDCO6
"RTN","SDCO1",65,0)
 . . . I 'SDGAFC D
"RTN","SDCO1",66,0)
 . . . .N SDELIG
"RTN","SDCO1",67,0)
 . . . .S SDELIG=$$ELSTAT^SDUTL2(DFN)
"RTN","SDCO1",68,0)
 . . . .I $$MHCLIN^SDUTL2(SDCL),'($$COLLAT^SDUTL2(SDELIG)!$P(SDATA,U,11)) D
"RTN","SDCO1",69,0)
 . . . . .I $$NEWGAF^SDUTL2(DFN) D
"RTN","SDCO1",70,0)
 . . . . . .I '$$GAFCM^SDUTL2() S SDGAFC=1
"RTN","SDCO1",71,0)
 . . .I SDGAFC D EN^SDCO(SDOE,,1)
"RTN","SDCO1",72,0)
 . ;
"RTN","SDCO1",73,0)
 . ; -- if already checked out then show c/o screen
"RTN","SDCO1",74,0)
 . E  D EN^SDCO(SDOE,,1)
"RTN","SDCO1",75,0)
 ;
"RTN","SDCO1",76,0)
 ; -- view if old encounters
"RTN","SDCO1",77,0)
 S SDOE=$$GETAPT^SDVSIT2(DFN,SDT,SDCL)
"RTN","SDCO1",78,0)
 D EN^SDCO(SDOE,,1)
"RTN","SDCO1",79,0)
 ;
"RTN","SDCO1",80,0)
COQ K % Q
"RTN","SDCO1",81,0)
 ;
"RTN","SDCO1",82,0)
BEFORE(SDATA,DFN,SDT,SDCL,SDDA,SDHDL) ; -- event driver before ; not used
"RTN","SDCO1",83,0)
 S SDATA=SDDA_"^"_DFN_"^"_SDT_"^"_SDCL,SDHDL=$$HANDLE^SDAMEVT(1)
"RTN","SDCO1",84,0)
 D BEFORE^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDHDL)
"RTN","SDCO1",85,0)
 Q
"RTN","SDCO1",86,0)
 ;
"RTN","SDCO1",87,0)
AFTER(SDATA,DFN,SDT,SDCL,SDDA,SDHDL,SDLNE) ; -- event driver after ; not used
"RTN","SDCO1",88,0)
 D AFTER^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDHDL)
"RTN","SDCO1",89,0)
 D:$G(SDLNE) UPD(DFN,SDT,SDCL,SDLNE,SDATA("BEFORE","STATUS"),SDATA("AFTER","STATUS"))
"RTN","SDCO1",90,0)
 D EVT^SDAMEVT(.SDATA,5,0,SDHDL)
"RTN","SDCO1",91,0)
 Q
"RTN","SDCO1",92,0)
 ;
"RTN","SDCO1",93,0)
UPD(DFN,SDT,SDCL,SDLNE,SDSTB,SDSTA) ; -- update appt mgmt screen ; used by AFTER but AFTER is not used
"RTN","SDCO1",94,0)
 N SDAMBOLD
"RTN","SDCO1",95,0)
 I $P(SDSTB,"^",3)'=$P(SDSTA,"^",3) D UPD^SDAM2($$LOWER^VALM1($P(SDSTA,"^",3)),"STAT",SDLNE),UPD^SDAM2("","TIME",SDLNE) S SDAMBOLD(DFN,SDT,SDCL)=""
"RTN","SDCO1",96,0)
 I $P(SDSTA,"^",3)["CHECKED OUT",$P($P(SDSTA,"^",5),".")=DT D UPD^SDAM2($$TIME^SDAM1($P($P(SDSTA,"^",5),".",2)),"TIME",SDLNE)
"RTN","SDCO1",97,0)
 Q
"RTN","SDCO1",98,0)
 ;
"RTN","SDCO1",99,0)
ELIG(DFN,SDT,SDCL,SDDA) ; -- update elig if blank
"RTN","SDCO1",100,0)
 N X,DR
"RTN","SDCO1",101,0)
 I $P(^SC(SDCL,"S",SDT,1,SDDA,0),U,10)="" D
"RTN","SDCO1",102,0)
 .S X=+$G(^DPT(DFN,.36)),X=$S('$D(^DIC(8,X,0)):"",$P(^(0),U,4)=6:"",1:X)
"RTN","SDCO1",103,0)
 .I X]"" S DR="30////^S X="_X D DIE(SDCL,SDT,SDDA,DR)
"RTN","SDCO1",104,0)
 Q
"RTN","SDCO1",105,0)
 ;
"RTN","SDCO1",106,0)
CHK(SDSTB) ; -- is appointment checked out
"RTN","SDCO1",107,0)
 N Y
"RTN","SDCO1",108,0)
 I "^2^8^12^"[("^"_+SDSTB_"^"),$P(SDSTB,"^",3)["CHECKED OUT" S Y=1
"RTN","SDCO1",109,0)
 Q +$G(Y)
"RTN","SDCO1",110,0)
 ;
"RTN","SDCO1",111,0)
DT(DFN,SDT,SDCL,SDDA,SDASK,SDCODT,SDCOQUIT) ;Update Check Out Date
"RTN","SDCO1",112,0)
 N %DT,DR,SDCIDT,X
"RTN","SDCO1",113,0)
 S:'$D(^SC(SDCL,"S",0)) ^(0)="^44.001DA^^"
"RTN","SDCO1",114,0)
 S DR="",SDCIDT=$P($G(^SC(SDCL,"S",SDT,1,SDDA,"C")),"^"),X=$P($G(^("C")),"^",3)
"RTN","SDCO1",115,0)
 I X G DTQ:'SDASK  S DR="303R"
"RTN","SDCO1",116,0)
 I DR="",$P(^SC(SDCL,0),U,24),$$REQ^SDM1A(SDT)="CO" S DR="303R//"_$S($G(SDCODT):$$FTIME^VALM1($S(SDCODT<SDCIDT:SDCIDT,1:SDCODT)),1:"NOW")
"RTN","SDCO1",117,0)
 I DR="" S DR="303R///"_$S($G(SDCODT):"/"_$S(SDCODT<SDCIDT:SDCIDT,1:SDCODT),1:"NOW")
"RTN","SDCO1",118,0)
 S DR="S SDCOQUIT="""";"_DR_";K SDCOQUIT"
"RTN","SDCO1",119,0)
 D DIE(SDCL,SDT,SDDA,DR)
"RTN","SDCO1",120,0)
DTQ Q
"RTN","SDCO1",121,0)
 ;
"RTN","SDCO1",122,0)
DIE(SDCL,SDT,SDDA,DR) ; -- update appt data in ^SC
"RTN","SDCO1",123,0)
 N DA,DIE
"RTN","SDCO1",124,0)
 S DA(2)=SDCL,DA(1)=SDT,DA=SDDA,DIE="^SC("_DA(2)_",""S"","_DA(1)_",1,"
"RTN","SDCO1",125,0)
 D ^DIE K DQ,DE
"RTN","SDCO1",126,0)
DIEQ Q
"RTN","SDM")
0^4^B26228021
"RTN","SDM",1,0)
SDM ;SF/GFT,ALB/BOK - MAKE AN APPOINTMENT ; 08 Nov 2000  2:26 PM
"RTN","SDM",2,0)
 ;;5.3;Scheduling;**15,32,38,41,44,79,94,167,168,218,223,250,254,296**;AUG 13, 1993
"RTN","SDM",3,0)
 ;                                           If defined...
"RTN","SDM",4,0)
 ; appt mgt vars:  SDFN := DFN of patient....will not be asked
"RTN","SDM",5,0)
 ;                SDCLN := ifn of clinic.....will not be asked    
"RTN","SDM",6,0)
 ;              SDAMERR := returned if error occurs
"RTN","SDM",7,0)
 ; 
"RTN","SDM",8,0)
 S:'$D(SDMM) SDMM=0
"RTN","SDM",9,0)
EN1 L  W !! D I^SDUTL I '$D(SDCLN) S DIC="^SC(",DIC(0)="AEMZQ",DIC("A")="Select CLINIC: ",DIC("S")="I $P(^(0),U,3)=""C"",'$G(^(""OOS""))" D ^DIC K DIC G:Y<0!'$D(^("SL")) END
"RTN","SDM",10,0)
 K SDAPTYP,SDIN,SDRE,SDXXX S:$D(SDCLN) Y=+SDCLN
"RTN","SDM",11,0)
 I $D(^SC(+Y,"I")) S SDIN=+^("I"),SDRE=+$P(^("I"),U,2)
"RTN","SDM",12,0)
 K SDINA I $D(SDIN),SDIN S SDINA=SDIN K SDIN
"RTN","SDM",13,0)
 I $D(SD),$D(SC),+Y'=+SC K SD
"RTN","SDM",14,0)
 S SL=$G(^SC(+Y,"SL")),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SC=Y,SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2) K Y
"RTN","SDM",15,0)
 I $D(^SC(+SC,"SDPROT")),$P(^("SDPROT"),U)="Y",'$D(^SC(+SC,"SDPRIV",DUZ)) W !,*7,"Access to ",$$CNAM(+SC)," is prohibited!",!,"Only users with a special code may access this clinic.",*7 S:$D(SDCLN) SDAMERR="" G END:$D(SDCLN),SDM
"RTN","SDM",16,0)
 D CS^SDM1A S SDW="",WY="Y"
"RTN","SDM",17,0)
 I '$D(ORACTION),'$D(SDFN) S (DIC,DIE)="^DPT(",DIC(0)="AQZME" D ^DIC S DFN=+Y G:Y<0 END:$D(SDCLN),^SDM0:X[U,SDM
"RTN","SDM",18,0)
 S:$D(SDFN) DFN=SDFN
"RTN","SDM",19,0)
 I $D(^DPT(DFN,.35)),$P(^(.35),U)]"" W !?10,*7,"PATIENT HAS DIED." S:$D(SDFN) SDAMERR="" G END:$D(SDFN),SDM
"RTN","SDM",20,0)
 D ^SDM4 I $S('$D(COLLAT):1,COLLAT=7:1,1:0) G:$D(SDCLN) END G SDM
"RTN","SDM",21,0)
 ;-- get sub-category for appointment type
"RTN","SDM",22,0)
 S SDXSCAT=$$SUB^DGSAUTL(SDAPTYP,2,"")
"RTN","SDM",23,0)
 K SDXXX D EN G END:$D(SDCLN),SDM
"RTN","SDM",24,0)
EN K SDMLT1 W:$P(VAEL(9),U,2)]"" !!,?15,"MEANS TEST STATUS: ",$P(VAEL(9),U,2),!
"RTN","SDM",25,0)
 ; *** sck, mt blocking removed
"RTN","SDM",26,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T,$$MT^EASMTCHK(DFN,+$G(SDAPTYP),"M") S SDAMERR="" Q
"RTN","SDM",27,0)
 S Y=DFN,Y(0)=^DPT(DFN,0) I VADM(7)]"" W !?3,*7,VADM(7)
"RTN","SDM",28,0)
 I $D(^DGS(41.1,"B",DFN)) F I=0:0 S I=$O(^DGS(41.1,"B",DFN,I)) Q:I'>0  I $P(^DGS(41.1,I,0),U,2)'<DT&('$P(^DGS(41.1,I,0),U,13)) W !,"SCHEDULED FOR ADMISSION ON " S Y=$P(^(0),U,2) D DT^SDM0
"RTN","SDM",29,0)
PEND S %="" W:$O(^DPT(DFN,"S",DT))'>DT !,"NO PENDING APPOINTMENTS"
"RTN","SDM",30,0)
 I $O(^DPT(DFN,"S",DT))>DT D  G END:%<0,HELP:'%
"RTN","SDM",31,0)
 .S %=2 W !,"DISPLAY PENDING APPOINTMENTS:"
"RTN","SDM",32,0)
 .D YN^DICN
"RTN","SDM",33,0)
 .I %Y["^" S SDMLT1=1
"RTN","SDM",34,0)
 D:%=1
"RTN","SDM",35,0)
 .N DX,DY,SDXY,SDEND S SDXY="S DX=$X,DY=0"_$S($L($G(^%ZOSF("XY"))):" "_^("XY"),1:"") X SDXY
"RTN","SDM",36,0)
 .F Y=DT:0 S Y=$O(^DPT(DFN,"S",Y)) Q:Y'>0  I "I"[$P(^(Y,0),U,2) X:(($Y+4)>IOSL) "D OUT^SDUTL X SDXY" Q:$G(SDEND)  D CHKSO W:$X>9 ! W ?11 D DT^SDM0 W ?32 S DA=+SSC W SDLN,$S($D(^SC(DA,0)):$P(^(0),U),1:"DELETED CLINIC "),COV,"  ",SDAT16
"RTN","SDM",37,0)
 ;Prompt for ETHNICITY if no value on file
"RTN","SDM",38,0)
 I '$O(^DPT(DFN,.06,0)) D
"RTN","SDM",39,0)
 .S DA=DFN,DR="6ETHNICITY",DIE="^DPT("
"RTN","SDM",40,0)
 .S DR(2,2.06)=".01ETHNICITY"
"RTN","SDM",41,0)
 .D ^DIE K DR
"RTN","SDM",42,0)
 ;Prompt for RACE if no value on file
"RTN","SDM",43,0)
 I '$O(^DPT(DFN,.02,0)) D
"RTN","SDM",44,0)
 .S DA=DFN,DR="2RACE",DIE="^DPT("
"RTN","SDM",45,0)
 .S DR(2,2.02)=".01RACE"
"RTN","SDM",46,0)
 .D ^DIE K DR
"RTN","SDM",47,0)
 S DA=DFN,DR=$S('$D(^DPT(DA,.11)):"[SDM1]",$P(^(.11),U)="":"[SDM1]",1:"")
"RTN","SDM",48,0)
 S DIE="^DPT(" D ^DIE:DR]"" K DR Q:$D(SDXXX)
"RTN","SDM",49,0)
E S Y=$P(SL,U,5)
"RTN","SDM",50,0)
 S SDW="" I $D(^DPT(DFN,.1)) S SDW=^(.1) W !,"NOTE - PATIENT IS NOW IN WARD "_SDW
"RTN","SDM",51,0)
 Q:$D(SDXXX)
"RTN","SDM",52,0)
EN2 F X=0:0 S X=$O(^DPT(DFN,"DE",X)) Q:'$D(^(+X,0))  I ^(0)-SC=0!'(^(0)-Y) F XX=0:0 S XX=$O(^DPT(DFN,"DE",X,1,XX)) Q:XX<1  S SDDIS=$P(^(XX,0),U,3) G ^SDM0:'SDDIS
"RTN","SDM",53,0)
 I '$D(^SC(+Y,0)) S Y=+SC
"RTN","SDM",54,0)
 S Y=$P(^SC(Y,0),U)
"RTN","SDM",55,0)
 ; SCRESTA = Array of pt's teams causing restricted consults
"RTN","SDM",56,0)
 N SCRESTA
"RTN","SDM",57,0)
 S SCREST=$$RESTPT^SCAPMCU4(DFN,DT,"SCRESTA")
"RTN","SDM",58,0)
 IF SCREST D
"RTN","SDM",59,0)
 .N SCTM
"RTN","SDM",60,0)
 . S SCCLNM=Y
"RTN","SDM",61,0)
 . W !,?5,"Patient has restricted consults due to team assignment(s):"
"RTN","SDM",62,0)
 .S SCTM=0
"RTN","SDM",63,0)
 .F  S SCTM=$O(SCRESTA(SCTM)) Q:'SCTM  W !,?10,SCRESTA(SCTM)
"RTN","SDM",64,0)
 IF SCREST&'$G(SCOKCONS) D  Q
"RTN","SDM",65,0)
 .W !,?5,"This patient may only be given appointments and enrolled in clinics via"
"RTN","SDM",66,0)
 .W !,?15,"Make Consult Appointment Option, and"
"RTN","SDM",67,0)
 .W !,?15,"Edit Clinic Enrollment Data option"
"RTN","SDM",68,0)
 D:$G(SCREST) MAIL^SCMCCON(DFN,.SCCLNM,2,DT,"SCRESTA")
"RTN","SDM",69,0)
 K DR,SCREST,SCCLNM
"RTN","SDM",70,0)
 G ^SDM0
"RTN","SDM",71,0)
 ;
"RTN","SDM",72,0)
CHKSO S COV=$S($P(^DPT(DFN,"S",Y,0),U,11)=1:" (COLLATERAL)",1:""),HY=Y,SSC=^(0),SDAT16=$S($D(^SD(409.1,+$P(SSC,U,16),0)):$P(^(0),U),1:"")
"RTN","SDM",73,0)
 F SDJ=3,4,5 I $P(^DPT(DFN,"S",HY,0),U,SDJ)]"" S Y=$P(^(0),U,SDJ) W:$X>9 ! W ?10,"*" D DT^SDM0 W ?32,$S(SDJ=3:"LAB",SDJ=4:"XRAY",1:"EKG")
"RTN","SDM",74,0)
 S SDLN="" F J=0:0 S J=$O(^SC(+SSC,"S",HY,1,J)) Q:'J  I $D(^(J,0)),+^(0)=DFN S SDLN="("_$P(^(0),U,2)_" MINUTES) " Q
"RTN","SDM",75,0)
 S Y=HY Q
"RTN","SDM",76,0)
 ;
"RTN","SDM",77,0)
END D KVAR^VADPT K SDAPTYP,SDSC,%,%DT,ASKC,COV,DA,DIC,DIE,DP,DR,HEY,HSI,HY,J,SB,SC,SDDIF,SDJ,SDLN,SD17,SDMAX,SDU,SDYC,SI,SL,SSC,STARTDAY,STR
"RTN","SDM",78,0)
 K WY,X,XX,Y,S,SD,SDAP16,SDEDT,SDTY,SM,SS,ST,ARG,CCX,CCXN,HX,I,PXR,SDINA,SDW,COLLAT,SDDIS I $D(SDMM) K:'SDMM SDMM
"RTN","SDM",79,0)
 I '$D(SDMLT) K SDMLT1
"RTN","SDM",80,0)
 Q
"RTN","SDM",81,0)
 ;
"RTN","SDM",82,0)
OERR S XQORQUIT=1 Q:'$D(ORVP)  S DFN=+ORVP G SDM
"RTN","SDM",83,0)
 ;
"RTN","SDM",84,0)
HELP W !,"YES - TO DISPLAY FUTURE APPOINTMENTS",!,"NO - FUTURE APPOINTMENTS NOT DISPLAYED" G PEND
"RTN","SDM",85,0)
 ;
"RTN","SDM",86,0)
CNAM(SDCL) ;Return clinic name
"RTN","SDM",87,0)
 ;Input: SDCL=clinic ien
"RTN","SDM",88,0)
 N SDX
"RTN","SDM",89,0)
 S SDX=$P($G(^SC(+SDCL,0)),U)
"RTN","SDM",90,0)
 Q $S($L(SDX):SDX,1:"this clinic")
"VER")
8.0^22
**INSTALL NAME**
PX*1.0*122
"BLD",4705,0)
PX*1.0*122^PCE PATIENT CARE ENCOUNTER^0^3030527^y
"BLD",4705,1,0)
^^24^24^3030425^
"BLD",4705,1,1,0)
In response to Policy Board (NLB) comment on the VHA Veterans Equitable
"BLD",4705,1,2,0)
Resource Allocation (VERA) process, the CBO requests the removal of:
"BLD",4705,1,3,0)
 
"BLD",4705,1,4,0)
(1) the current restriction that blocks transmission of outpatient 
"BLD",4705,1,5,0)
encounters (ACRP) to the National Patient Care Database (NPCD) if a
"BLD",4705,1,6,0)
veteran's updated financial assessment (Means Test) information is not
"BLD",4705,1,7,0)
complete, and 
"BLD",4705,1,8,0)
(2) the restriction that blocks the ability to schedule
"BLD",4705,1,9,0)
future appointments for veterans whose financial assessments need
"BLD",4705,1,10,0)
updating.
"BLD",4705,1,11,0)
 
"BLD",4705,1,12,0)
Current policy establishes a requirement to block transmission of 
"BLD",4705,1,13,0)
outpatient encounters (ACRP) to the National Patient Care Database if the
"BLD",4705,1,14,0)
patient's current Means Test status equals "Required."  This leads to
"BLD",4705,1,15,0)
under-reported workload and inaccurate information in national
"BLD",4705,1,16,0)
databases.  
"BLD",4705,1,17,0)
 
"BLD",4705,1,18,0)
Software has been implemented which blocks the ability to schedule future 
"BLD",4705,1,19,0)
appointments for veterans whose financial assessment needs updating.  VHA 
"BLD",4705,1,20,0)
Directive 2002-019, dated April 4, 2002, provided guidance to facilities 
"BLD",4705,1,21,0)
on the implementation of the appointment blocking software.  If a 
"BLD",4705,1,22,0)
veteran's financial assessment needs updating, the software prevents the 
"BLD",4705,1,23,0)
ability to make future appointments for the veteran.  This restriction 
"BLD",4705,1,24,0)
shall also be removed at the request of the CBO.  
"BLD",4705,4,0)
^9.64PA^^
"BLD",4705,"KRN",0)
^9.67PA^8989.52^19
"BLD",4705,"KRN",.4,0)
.4
"BLD",4705,"KRN",.401,0)
.401
"BLD",4705,"KRN",.402,0)
.402
"BLD",4705,"KRN",.403,0)
.403
"BLD",4705,"KRN",.5,0)
.5
"BLD",4705,"KRN",.84,0)
.84
"BLD",4705,"KRN",3.6,0)
3.6
"BLD",4705,"KRN",3.8,0)
3.8
"BLD",4705,"KRN",9.2,0)
9.2
"BLD",4705,"KRN",9.8,0)
9.8
"BLD",4705,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",4705,"KRN",9.8,"NM",1,0)
PXBAPI1^^0^B46279754
"BLD",4705,"KRN",9.8,"NM","B","PXBAPI1",1)

"BLD",4705,"KRN",19,0)
19
"BLD",4705,"KRN",19.1,0)
19.1
"BLD",4705,"KRN",101,0)
101
"BLD",4705,"KRN",409.61,0)
409.61
"BLD",4705,"KRN",771,0)
771
"BLD",4705,"KRN",870,0)
870
"BLD",4705,"KRN",8989.51,0)
8989.51
"BLD",4705,"KRN",8989.52,0)
8989.52
"BLD",4705,"KRN",8994,0)
8994
"BLD",4705,"KRN","B",.4,.4)

"BLD",4705,"KRN","B",.401,.401)

"BLD",4705,"KRN","B",.402,.402)

"BLD",4705,"KRN","B",.403,.403)

"BLD",4705,"KRN","B",.5,.5)

"BLD",4705,"KRN","B",.84,.84)

"BLD",4705,"KRN","B",3.6,3.6)

"BLD",4705,"KRN","B",3.8,3.8)

"BLD",4705,"KRN","B",9.2,9.2)

"BLD",4705,"KRN","B",9.8,9.8)

"BLD",4705,"KRN","B",19,19)

"BLD",4705,"KRN","B",19.1,19.1)

"BLD",4705,"KRN","B",101,101)

"BLD",4705,"KRN","B",409.61,409.61)

"BLD",4705,"KRN","B",771,771)

"BLD",4705,"KRN","B",870,870)

"BLD",4705,"KRN","B",8989.51,8989.51)

"BLD",4705,"KRN","B",8989.52,8989.52)

"BLD",4705,"KRN","B",8994,8994)

"BLD",4705,"QUES",0)
^9.62^^
"BLD",4705,"REQB",0)
^9.611^1^1
"BLD",4705,"REQB",1,0)
PX*1.0*113^1
"BLD",4705,"REQB","B","PX*1.0*113",1)

"MBREQ")
0
"PKG",413,-1)
1^1
"PKG",413,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter (VA Parent package)^
"PKG",413,20,0)
^9.402P^^
"PKG",413,22,0)
^9.49I^1^1
"PKG",413,22,1,0)
1.0^2960812^2960913^12537
"PKG",413,22,1,"PAH",1,0)
122^3030527
"PKG",413,22,1,"PAH",1,1,0)
^^24^24^3030527
"PKG",413,22,1,"PAH",1,1,1,0)
In response to Policy Board (NLB) comment on the VHA Veterans Equitable
"PKG",413,22,1,"PAH",1,1,2,0)
Resource Allocation (VERA) process, the CBO requests the removal of:
"PKG",413,22,1,"PAH",1,1,3,0)
 
"PKG",413,22,1,"PAH",1,1,4,0)
(1) the current restriction that blocks transmission of outpatient 
"PKG",413,22,1,"PAH",1,1,5,0)
encounters (ACRP) to the National Patient Care Database (NPCD) if a
"PKG",413,22,1,"PAH",1,1,6,0)
veteran's updated financial assessment (Means Test) information is not
"PKG",413,22,1,"PAH",1,1,7,0)
complete, and 
"PKG",413,22,1,"PAH",1,1,8,0)
(2) the restriction that blocks the ability to schedule
"PKG",413,22,1,"PAH",1,1,9,0)
future appointments for veterans whose financial assessments need
"PKG",413,22,1,"PAH",1,1,10,0)
updating.
"PKG",413,22,1,"PAH",1,1,11,0)
 
"PKG",413,22,1,"PAH",1,1,12,0)
Current policy establishes a requirement to block transmission of 
"PKG",413,22,1,"PAH",1,1,13,0)
outpatient encounters (ACRP) to the National Patient Care Database if the
"PKG",413,22,1,"PAH",1,1,14,0)
patient's current Means Test status equals "Required."  This leads to
"PKG",413,22,1,"PAH",1,1,15,0)
under-reported workload and inaccurate information in national
"PKG",413,22,1,"PAH",1,1,16,0)
databases.  
"PKG",413,22,1,"PAH",1,1,17,0)
 
"PKG",413,22,1,"PAH",1,1,18,0)
Software has been implemented which blocks the ability to schedule future 
"PKG",413,22,1,"PAH",1,1,19,0)
appointments for veterans whose financial assessment needs updating.  VHA 
"PKG",413,22,1,"PAH",1,1,20,0)
Directive 2002-019, dated April 4, 2002, provided guidance to facilities 
"PKG",413,22,1,"PAH",1,1,21,0)
on the implementation of the appointment blocking software.  If a 
"PKG",413,22,1,"PAH",1,1,22,0)
veteran's financial assessment needs updating, the software prevents the 
"PKG",413,22,1,"PAH",1,1,23,0)
ability to make future appointments for the veteran.  This restriction 
"PKG",413,22,1,"PAH",1,1,24,0)
shall also be removed at the request of the CBO.  
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","PXBAPI1")
0^1^B46279754
"RTN","PXBAPI1",1,0)
PXBAPI1 ;ISL/JVS,dee - PCE's API - interview questions ;10/15/96
"RTN","PXBAPI1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**1,9,23,56,104,111,113,122**;Aug 12, 1996
"RTN","PXBAPI1",3,0)
 ;;
"RTN","PXBAPI1",4,0)
 Q
"RTN","PXBAPI1",5,0)
 ;
"RTN","PXBAPI1",6,0)
PROCESS(PXBEXIT) ;
"RTN","PXBAPI1",7,0)
 I WHAT="INTV" D
"RTN","PXBAPI1",8,0)
 . ;-- Interview is all of the questions
"RTN","PXBAPI1",9,0)
 . D ADQ(.PXBEXIT) I PXBEXIT<1 Q 
"RTN","PXBAPI1",10,0)
1 . D PRV(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",11,0)
3 . D POV(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",12,0)
2 . D CPT(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",13,0)
 . I $P($G(^AUPNVSIT($G(PXBVST),150)),"^",3)="O" S PXBEXIT=0 Q
"RTN","PXBAPI1",14,0)
 . I '$$DISPOSIT^PXUTL1($G(PXBPAT),$P($G(^AUPNVSIT(PXBVST,0)),"^",1),$G(PXBVST)) D STP(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",15,0)
 E  I WHAT="ADDEDIT" D
"RTN","PXBAPI1",16,0)
 . D ADDEDIT
"RTN","PXBAPI1",17,0)
 E  I WHAT="ADQ" D
"RTN","PXBAPI1",18,0)
 . ;-- Adminstrative questions
"RTN","PXBAPI1",19,0)
 . D ADQ(.PXBEXIT)
"RTN","PXBAPI1",20,0)
 E  I WHAT="CODT" D
"RTN","PXBAPI1",21,0)
 . ;-- Check out Date/Time
"RTN","PXBAPI1",22,0)
 . D CODT(.PXBEXIT)
"RTN","PXBAPI1",23,0)
 . Q:PXBEXIT<1
"RTN","PXBAPI1",24,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",25,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",26,0)
 E  I WHAT="SCC" D
"RTN","PXBAPI1",27,0)
 . ;-- Service connected conditions
"RTN","PXBAPI1",28,0)
 . D SCC(.PXBEXIT)
"RTN","PXBAPI1",29,0)
 . Q:PXBEXIT<1
"RTN","PXBAPI1",30,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",31,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",32,0)
 E  I WHAT="PRV" D
"RTN","PXBAPI1",33,0)
 . ;-- Providers
"RTN","PXBAPI1",34,0)
 . D PRV(.PXBEXIT)
"RTN","PXBAPI1",35,0)
 E  I WHAT="CPT" D
"RTN","PXBAPI1",36,0)
 . ;-- Providers and CPT codes
"RTN","PXBAPI1",37,0)
 . D CPT(.PXBEXIT)
"RTN","PXBAPI1",38,0)
 E  I WHAT="POV" D
"RTN","PXBAPI1",39,0)
 . ;-- Diagnoses
"RTN","PXBAPI1",40,0)
 . D POV(.PXBEXIT)
"RTN","PXBAPI1",41,0)
 E  I WHAT="STP" D
"RTN","PXBAPI1",42,0)
 . ;-- Stop Codes
"RTN","PXBAPI1",43,0)
 . D STP(.PXBEXIT)
"RTN","PXBAPI1",44,0)
 E  S PXBEXIT=-3 W !,"Procedure ""INTV^PXAPI"" was called incorrectly, contact IRM."
"RTN","PXBAPI1",45,0)
 Q
"RTN","PXBAPI1",46,0)
 ;
"RTN","PXBAPI1",47,0)
ADDEDIT ;
"RTN","PXBAPI1",48,0)
 N ANS
"RTN","PXBAPI1",49,0)
ADDEDIT1 ;
"RTN","PXBAPI1",50,0)
 D ADQ(.PXBEXIT)
"RTN","PXBAPI1",51,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",52,0)
 D PRV(.PXBEXIT)
"RTN","PXBAPI1",53,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",54,0)
 D POV(.PXBEXIT)
"RTN","PXBAPI1",55,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",56,0)
 ;
"RTN","PXBAPI1",57,0)
 ;Call to CPT is not determined by a credit stop code any more
"RTN","PXBAPI1",58,0)
 ;
"RTN","PXBAPI1",59,0)
 D CPT(.PXBEXIT)
"RTN","PXBAPI1",60,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",61,0)
ADDEDIT2 ;
"RTN","PXBAPI1",62,0)
 I PXBVST>0,'$D(^AUPNVCPT("AD",PXBVST)),'$D(^AUPNVSIT("AD",PXBVST)) D  I ANS'=1 S PXBEXIT=1 G ADDEDIT1
"RTN","PXBAPI1",63,0)
 . N DIR,X,Y
"RTN","PXBAPI1",64,0)
 . W !!
"RTN","PXBAPI1",65,0)
 . S DIR(0)="Y"
"RTN","PXBAPI1",66,0)
 . S DIR("A",1)="Must have a STOP CODE or a PROCEDURE to complete this action."
"RTN","PXBAPI1",67,0)
 . S DIR("A")="Do you want to delete this encounter"
"RTN","PXBAPI1",68,0)
 . S DIR("B")="NO"
"RTN","PXBAPI1",69,0)
 . D ^DIR
"RTN","PXBAPI1",70,0)
 . S ANS=Y
"RTN","PXBAPI1",71,0)
 . Q:ANS'=1
"RTN","PXBAPI1",72,0)
 . I $$DELVFILE^PXAPIDEL("ALL",PXBVST,"","","","","")=1 S PXBEXIT=-1
"RTN","PXBAPI1",73,0)
 I PXBVST>0,'$D(^AUPNVSIT(PXBVST,0)) S PXBVST=""
"RTN","PXBAPI1",74,0)
 Q
"RTN","PXBAPI1",75,0)
 ;
"RTN","PXBAPI1",76,0)
ADQ(PXBEXIT) ;Ask the Administration questions
"RTN","PXBAPI1",77,0)
 I PXBVST'>0 D
"RTN","PXBAPI1",78,0)
 . ;This is only done for new visits
"RTN","PXBAPI1",79,0)
 . I PXBPAT'>0 S PXBPAT=$$ASKPAT I PXBPAT'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",80,0)
 . S DFN=PXBPAT
"RTN","PXBAPI1",81,0)
 . I PXBHLOC'>0 S PXBHLOC=$$ASKHL I PXBHLOC'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",82,0)
 . S PXBVSTDT=$S(PXBAPPT>0:PXBAPPT,1:$$ASKDT) I PXBVSTDT'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",83,0)
 . I PXBAPPT'>0&PXBHLOC'=+$G(^DPT(PXBPAT,"S",PXBVSTDT,0)) D
"RTN","PXBAPI1",84,0)
 .. ;This is only done if there is no appointment.
"RTN","PXBAPI1",85,0)
 .. S PXELAP=$$ELAP^SDPCE(PXBPAT,PXBHLOC)
"RTN","PXBAPI1",86,0)
 I PXBEXIT'<1,PXBHLOC'>0 S PXBHLOC=$$ASKHL I PXBHLOC'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",87,0)
 I PXBEXIT'<1 D CODT(.PXBEXIT)
"RTN","PXBAPI1",88,0)
 I PXBEXIT'<1 D SCC(.PXBEXIT)
"RTN","PXBAPI1",89,0)
 I PXBEXIT'<1 D
"RTN","PXBAPI1",90,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",91,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",92,0)
 Q
"RTN","PXBAPI1",93,0)
 ;
"RTN","PXBAPI1",94,0)
ASKPAT() ;Ask user for a patient
"RTN","PXBAPI1",95,0)
 ;DIC on file 9000001
"RTN","PXBAPI1",96,0)
 N DIR,DIC,Y,X,DA
"RTN","PXBAPI1",97,0)
 S DIR(0)="P^9000001:AEMQ"
"RTN","PXBAPI1",98,0)
 S DIR("A")="Patient Name"
"RTN","PXBAPI1",99,0)
 D ^DIR
"RTN","PXBAPI1",100,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",101,0)
 ;
"RTN","PXBAPI1",102,0)
ASKHL() ;Ask user for a Hospital Location
"RTN","PXBAPI1",103,0)
ASKHL2 ;DIC on file 44
"RTN","PXBAPI1",104,0)
 N DIR,DIC,Y,X,DA
"RTN","PXBAPI1",105,0)
 S DIR(0)="PA^44:AEMQ"
"RTN","PXBAPI1",106,0)
 S DIR("A")="Clinic: "
"RTN","PXBAPI1",107,0)
 ; not occasion of service and not dispositioning
"RTN","PXBAPI1",108,0)
 I PXALHLOC S DIR("S")="I '+$G(^(""OOS""))&'$O(^PX(815,1,""DHL"",""B"",Y,0))"
"RTN","PXBAPI1",109,0)
 ; only clinic that are not occasion of service and not dispositioning
"RTN","PXBAPI1",110,0)
 E  S DIR("S")="I $P(^(0),U,3)=""C""&'+$G(^(""OOS""))&'$O(^PX(815,1,""DHL"",""B"",Y,0))"
"RTN","PXBAPI1",111,0)
 D ^DIR
"RTN","PXBAPI1",112,0)
 I $D(^PX(815,1,"DHL","B",+Y)) D HELPDISP^PXCEVSIT W !,$C(7) G ASKHL2
"RTN","PXBAPI1",113,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",114,0)
 ;
"RTN","PXBAPI1",115,0)
ASKDT() ;Ask user for the encounter Date/Time
"RTN","PXBAPI1",116,0)
 N DIR,Y,X,DA
"RTN","PXBAPI1",117,0)
 S DIR(0)="D^"_$S(PXLIMDT>2960000:PXLIMDT,1:"")_":"_(DT+.24)_":AEPRSX"
"RTN","PXBAPI1",118,0)
 S DIR("A")="Encounter Date and Time"
"RTN","PXBAPI1",119,0)
 S DIR("?")="Enter the Date and Time of this encounter"
"RTN","PXBAPI1",120,0)
 D ^DIR
"RTN","PXBAPI1",121,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",122,0)
 ;
"RTN","PXBAPI1",123,0)
CODT(PXBEXIT) ;Ask the user the Check out Date/Time
"RTN","PXBAPI1",124,0)
 N PXCHKOUT
"RTN","PXBAPI1",125,0)
 D CHIKOUT^PXBAPI2("",PXBPAT,PXBHLOC,PXBVSTDT)
"RTN","PXBAPI1",126,0)
 S PXBCODT=PXCHKOUT
"RTN","PXBAPI1",127,0)
 S:PXCHKOUT=-1 PXBCODT=""
"RTN","PXBAPI1",128,0)
 ;; PX*1*113 - Change for EAS*1*3 Appointment processing removed
"RTN","PXBAPI1",129,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T D  Q:PXBEXIT<1
"RTN","PXBAPI1",130,0)
 ;. S:$G(EASACT)'="W" EASACT="C"
"RTN","PXBAPI1",131,0)
 ;. I $$MT^EASMTCHK(PXBPAT,"",EASACT,PXBVSTDT) D  S PXBEXIT=-1
"RTN","PXBAPI1",132,0)
 ;. . D PAUSE^VALM1
"RTN","PXBAPI1",133,0)
 I WHAT'["ADDEDIT",PXCHKOUT=-1 S PXBEXIT=-1
"RTN","PXBAPI1",134,0)
 I $G(PXBVST),$$DISPOSIT^PXUTL1(DFN,$P($G(^AUPNVSIT(PXBVST,0)),"^",1),PXBVST) S PXBEXIT=1
"RTN","PXBAPI1",135,0)
 Q
"RTN","PXBAPI1",136,0)
 ;
"RTN","PXBAPI1",137,0)
SCC(PXBEXIT) ;Ask the user the Service connected conditions
"RTN","PXBAPI1",138,0)
 N PXBDATA,PXBCLASS,PXBOUTEN
"RTN","PXBAPI1",139,0)
 S PXBOUTEN=""
"RTN","PXBAPI1",140,0)
 ;I $$APPOINT^PXUTL1(PXBPAT,PXBVSTDT,PXBHLOC) D
"RTN","PXBAPI1",141,0)
 ;. S PXBOUTEN=$P($G(^DPT(+PXBPAT,"S",+PXBVSTDT,0)),"^",20)
"RTN","PXBAPI1",142,0)
 ;E  I $$DISPOSIT^PXUTL1(PXBPAT,PXBVSTDT,PXBVST) D
"RTN","PXBAPI1",143,0)
 ;. S PXBOUTEN=+$P($G(^DPT(+PXBPAT,"DIS",9999999-PXBVSTDT,0)),"^",18)
"RTN","PXBAPI1",144,0)
 ;I 'PXBOUTEN,$G(PXBVST)>0 S PXBOUTEN=$O(^SCE("AVSIT",PXBVST,0))
"RTN","PXBAPI1",145,0)
 ;D CLASS^PXBAPI21(PXBOUTEN,PXBPAT,PXBVSTDT,PXBHLOC)
"RTN","PXBAPI1",146,0)
 D CLASS^PXBAPI21(PXBOUTEN,PXBPAT,PXBVSTDT,PXBHLOC,PXBVST)
"RTN","PXBAPI1",147,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",148,0)
 F PXBCLASS=1:1:6 I $G(PXBDATA("ERR",PXBCLASS))=4 S PXBEXIT=-1 Q  ; changed 6/17/98 for MST enhancement
"RTN","PXBAPI1",149,0)
 Q:PXBEXIT<1
"RTN","PXBAPI1",150,0)
 S PXB800(1)=$P($G(PXBDATA(3)),"^",2)
"RTN","PXBAPI1",151,0)
 S PXB800(2)=$P($G(PXBDATA(1)),"^",2)
"RTN","PXBAPI1",152,0)
 S PXB800(3)=$P($G(PXBDATA(2)),"^",2)
"RTN","PXBAPI1",153,0)
 S PXB800(4)=$P($G(PXBDATA(4)),"^",2)
"RTN","PXBAPI1",154,0)
 S PXB800(5)=$P($G(PXBDATA(5)),"^",2) ;added 6/17/98 for MST enhancement
"RTN","PXBAPI1",155,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",156,0)
 S PXB800(6)=$P($G(PXBDATA(6)),"^",2)
"RTN","PXBAPI1",157,0)
 Q
"RTN","PXBAPI1",158,0)
 ;
"RTN","PXBAPI1",159,0)
VISIT(PXBEXIT) ;Creat or edit the Visit
"RTN","PXBAPI1",160,0)
 ;Set up ^TMP("PXK",$J and call PXK
"RTN","PXBAPI1",161,0)
 I PXBVST>0 L +^AUPNVSIT(PXBVST):10 E  W !!,$C(7),"Cannot edit at this time, try again later." D WAIT^PXCEHELP S PXBEXIT=-2 Q
"RTN","PXBAPI1",162,0)
 K ^TMP("PXK",$J)
"RTN","PXBAPI1",163,0)
 N PXBNODE,PXBAFTER,PXKERROR
"RTN","PXBAPI1",164,0)
 F PXBNODE=0,21,150,800,811,812 D
"RTN","PXBAPI1",165,0)
 . S PXBAFTER(PXBNODE)=$S(PXBVST>0:$G(^AUPNVSIT(PXBVST,PXBNODE)),1:"")
"RTN","PXBAPI1",166,0)
 . S ^TMP("PXK",$J,"VST",1,PXBNODE,"BEFORE")=PXBAFTER(PXBNODE)
"RTN","PXBAPI1",167,0)
 I PXBVST'>0 D
"RTN","PXBAPI1",168,0)
 . S $P(PXBAFTER(0),"^",1)=PXBVSTDT
"RTN","PXBAPI1",169,0)
 . S $P(PXBAFTER(0),"^",5)=PXBPAT
"RTN","PXBAPI1",170,0)
 . S $P(PXBAFTER(0),"^",8)=$P(^SC(PXBHLOC,0),"^",7)
"RTN","PXBAPI1",171,0)
 . S:PXBAPPT>0 $P(PXBAFTER(0),"^",16)="A"
"RTN","PXBAPI1",172,0)
 . S $P(PXBAFTER(150),"^",3)="P"
"RTN","PXBAPI1",173,0)
 . S $P(PXBAFTER(812),"^",2)=PXBPKG
"RTN","PXBAPI1",174,0)
 . S $P(PXBAFTER(812),"^",3)=PXBSOURC
"RTN","PXBAPI1",175,0)
 S $P(PXBAFTER(0),"^",18)=$G(PXBCODT)
"RTN","PXBAPI1",176,0)
 S:$P(PXBAFTER(0),"^",22)="" $P(PXBAFTER(0),"^",22)=PXBHLOC
"RTN","PXBAPI1",177,0)
 S $P(PXBAFTER(800),"^",1)=$G(PXB800(1))
"RTN","PXBAPI1",178,0)
 S $P(PXBAFTER(800),"^",2)=$G(PXB800(2))
"RTN","PXBAPI1",179,0)
 S $P(PXBAFTER(800),"^",3)=$G(PXB800(3))
"RTN","PXBAPI1",180,0)
 S $P(PXBAFTER(800),"^",4)=$G(PXB800(4))
"RTN","PXBAPI1",181,0)
 S $P(PXBAFTER(800),"^",5)=$G(PXB800(5)) ;added 6/17/98 for MST emhancement
"RTN","PXBAPI1",182,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",183,0)
 S $P(PXBAFTER(800),"^",6)=$G(PXB800(6))
"RTN","PXBAPI1",184,0)
 I $D(PXELAP)#2 D
"RTN","PXBAPI1",185,0)
 . S $P(PXBAFTER(0),"^",21)=+PXELAP
"RTN","PXBAPI1",186,0)
 F PXBNODE=0,21,150,800,811,812 D
"RTN","PXBAPI1",187,0)
 . S ^TMP("PXK",$J,"VST",1,PXBNODE,"AFTER")=PXBAFTER(PXBNODE)
"RTN","PXBAPI1",188,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=$S(PXBVST>0:PXBVST,1:"")
"RTN","PXBAPI1",189,0)
 S ^TMP("PXK",$J,"SOR")=PXBSOURC
"RTN","PXBAPI1",190,0)
 D EN1^PXKMAIN
"RTN","PXBAPI1",191,0)
 I PXBVST>0 L -^AUPNVSIT(PXBVST):5
"RTN","PXBAPI1",192,0)
 S PXBVST=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXBAPI1",193,0)
 Q
"RTN","PXBAPI1",194,0)
 ;
"RTN","PXBAPI1",195,0)
CPT(PXBEXIT) ;Ask the user Providers and CTPs
"RTN","PXBAPI1",196,0)
 D CPT^PXBMCPT(PXBVST) K PRVDR
"RTN","PXBAPI1",197,0)
 Q
"RTN","PXBAPI1",198,0)
 ;
"RTN","PXBAPI1",199,0)
POV(PXBEXIT) ;Ask the user Diagnoses
"RTN","PXBAPI1",200,0)
 D POV^PXBMPOV(PXBVST) K PRVDR
"RTN","PXBAPI1",201,0)
 Q
"RTN","PXBAPI1",202,0)
 ;
"RTN","PXBAPI1",203,0)
PRV(PXBEXIT) ;Ask the user Providers
"RTN","PXBAPI1",204,0)
 D PRV^PXBMPRV(PXBVST,"PRV") K PRVDR
"RTN","PXBAPI1",205,0)
 Q
"RTN","PXBAPI1",206,0)
 ;
"RTN","PXBAPI1",207,0)
STP(PXBEXIT) ;Ask the user Stop Codes
"RTN","PXBAPI1",208,0)
 I $L($T(DATE^SCDXUTL)),$$DATE^SCDXUTL(+$G(^AUPNVSIT(PXBVST,0))) Q
"RTN","PXBAPI1",209,0)
 D STP^PXBMSTP(PXBVST) K PRVDR
"RTN","PXBAPI1",210,0)
 Q
"RTN","PXBAPI1",211,0)
 ;
"VER")
8.0^22
**INSTALL NAME**
DG*5.3*512
"BLD",4719,0)
DG*5.3*512^REGISTRATION^0^3030527^y
"BLD",4719,4,0)
^9.64PA^^
"BLD",4719,"KRN",0)
^9.67PA^8989.52^19
"BLD",4719,"KRN",.4,0)
.4
"BLD",4719,"KRN",.401,0)
.401
"BLD",4719,"KRN",.402,0)
.402
"BLD",4719,"KRN",.403,0)
.403
"BLD",4719,"KRN",.5,0)
.5
"BLD",4719,"KRN",.84,0)
.84
"BLD",4719,"KRN",3.6,0)
3.6
"BLD",4719,"KRN",3.8,0)
3.8
"BLD",4719,"KRN",9.2,0)
9.2
"BLD",4719,"KRN",9.8,0)
9.8
"BLD",4719,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",4719,"KRN",9.8,"NM",1,0)
DGPTFVC1^^0^B33471747
"BLD",4719,"KRN",9.8,"NM","B","DGPTFVC1",1)

"BLD",4719,"KRN",19,0)
19
"BLD",4719,"KRN",19.1,0)
19.1
"BLD",4719,"KRN",101,0)
101
"BLD",4719,"KRN",409.61,0)
409.61
"BLD",4719,"KRN",771,0)
771
"BLD",4719,"KRN",870,0)
870
"BLD",4719,"KRN",8989.51,0)
8989.51
"BLD",4719,"KRN",8989.52,0)
8989.52
"BLD",4719,"KRN",8994,0)
8994
"BLD",4719,"KRN","B",.4,.4)

"BLD",4719,"KRN","B",.401,.401)

"BLD",4719,"KRN","B",.402,.402)

"BLD",4719,"KRN","B",.403,.403)

"BLD",4719,"KRN","B",.5,.5)

"BLD",4719,"KRN","B",.84,.84)

"BLD",4719,"KRN","B",3.6,3.6)

"BLD",4719,"KRN","B",3.8,3.8)

"BLD",4719,"KRN","B",9.2,9.2)

"BLD",4719,"KRN","B",9.8,9.8)

"BLD",4719,"KRN","B",19,19)

"BLD",4719,"KRN","B",19.1,19.1)

"BLD",4719,"KRN","B",101,101)

"BLD",4719,"KRN","B",409.61,409.61)

"BLD",4719,"KRN","B",771,771)

"BLD",4719,"KRN","B",870,870)

"BLD",4719,"KRN","B",8989.51,8989.51)

"BLD",4719,"KRN","B",8989.52,8989.52)

"BLD",4719,"KRN","B",8994,8994)

"BLD",4719,"QUES",0)
^9.62^^
"BLD",4719,"REQB",0)
^9.611^1^1
"BLD",4719,"REQB",1,0)
DG*5.3*493^1
"BLD",4719,"REQB","B","DG*5.3*493",1)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
512^3030527
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","DGPTFVC1")
0^1^B33471747
"RTN","DGPTFVC1",1,0)
DGPTFVC1 ;ALB/AS - Expanded PTF Close-Out Edits ; Jul 20 88 @ 0900
"RTN","DGPTFVC1",2,0)
 ;;5.3;Registration;**52,58,79,114,164,400,342,466,415,493,512**;Aug 13, 1993
"RTN","DGPTFVC1",3,0)
 ;Called from Q+2^DGPTFTR. Variable must be passed in: PTF
"RTN","DGPTFVC1",4,0)
 ;Variable returned: DGERR.   DGERR <-- 1 if record fails to pass a check; DGERR <-- "" if record passes all checks
"RTN","DGPTFVC1",5,0)
 ;
"RTN","DGPTFVC1",6,0)
 Q:'$D(PTF)
"RTN","DGPTFVC1",7,0)
 S DGERR="",DGV(701)=$S($D(^DGPT(PTF,70)):^(70),1:""),DGV(101)=^(0),DGSUFFIX=$P(DGV(101),"^",5),DGV("FEE")=$P(DGV(101),"^",4),DFN=$P(DGV(101),"^",1)
"RTN","DGPTFVC1",8,0)
 ;
"RTN","DGPTFVC1",9,0)
 I $P(DGV(101),"^",2)>2820700 D AO
"RTN","DGPTFVC1",10,0)
 ;
"RTN","DGPTFVC1",11,0)
 I DGRTY=1,DGV("FEE") D MT
"RTN","DGPTFVC1",12,0)
 ;
"RTN","DGPTFVC1",13,0)
 ; DG*512, sck/Remove 101-Means Test indocator = 'U' xmit block
"RTN","DGPTFVC1",14,0)
 ;I 'DGV("FEE"),$P(DGV(101),"^",10)="U",'DGV(701)!(+DGV(701)>2890700) S DGERR=1 W !,"101 MEANS TEST",?23," value 'U' - not valid for discharges as of 7/1/1989",!?42,"per MAS VACO policy"
"RTN","DGPTFVC1",15,0)
 ;
"RTN","DGPTFVC1",16,0)
 I $D(^DPT(DFN,57)),$P(^(57),"^",4)>0 S S0=$P(^(57),"^",4),DGDX=$S(S0=1!(S0=3):"344.1",1:"344.0"),DGSCI="" F DGX=0:0 S DGX=$O(^DGPT(PTF,"M",DGX)) Q:DGX'>0  S DGNODE=^(DGX,0),DGSCI="" D SCI
"RTN","DGPTFVC1",17,0)
 ;
"RTN","DGPTFVC1",18,0)
 S DGDP="",DGDISPO=$P(DGV(701),"^",6),DGRECSUF=$P(DGV(701),"^",13)
"RTN","DGPTFVC1",19,0)
 I DGRTY=1 D
"RTN","DGPTFVC1",20,0)
 .S DGSTATYP=$S(DGDISPO=12!(DGDISPO=13):30,DGDISPO=10:42,DGDISPO=8:40,1:"")
"RTN","DGPTFVC1",21,0)
 .I DGSTATYP]"" D
"RTN","DGPTFVC1",22,0)
 ..D NUMACT^DGPTSUF(DGSTATYP)
"RTN","DGPTFVC1",23,0)
 ..I DGANUM>0 F I=1:1:DGANUM I DGSUFFIX=DGSUFNAM(I) D
"RTN","DGPTFVC1",24,0)
 ...I DGDISPO'=8 I DGRECSUF=DGSUFNAM(DGANUM) S DGDP=5 D DP
"RTN","DGPTFVC1",25,0)
 ...I DGDISPO=8 N DGANUM,DGSUFNAM D NUMACT^DGPTSUF(42) I DGRECSUF=DGSUFNAM(DGANUM) S DGDP=5 D DP
"RTN","DGPTFVC1",26,0)
 .K DGANUM,DGSTATYP,DGSUFNAM,I
"RTN","DGPTFVC1",27,0)
 ;
"RTN","DGPTFVC1",28,0)
 I DGRTY=1 S %=$P(DGV(701),"^",3) I %=4!(%=6)!(%=7) S DGDP="" D OP I $P(DGV(701),"^",5)=1 S DGERR=1 W !,"701 VA AUSPICES",?23," value inconsistent for discharge"
"RTN","DGPTFVC1",29,0)
 ;
"RTN","DGPTFVC1",30,0)
 ;I 'DGV("FEE") S %=$P(^DPT(DFN,0),"^",6),%=$S($D(^DIC(10,+%,0)):$P(^(0),"^",2),1:"") I '%!(%>7) S DGERR=1 W !,"701 RACE",?23," value " W:%']"" "blank" I %]"" W %," (invalid code)"
"RTN","DGPTFVC1",31,0)
 ;
"RTN","DGPTFVC1",32,0)
 ;If PRRTP treating specialty, must have valid PRRTP suffix
"RTN","DGPTFVC1",33,0)
 ;Fee records would not contain PRRTP specialties
"RTN","DGPTFVC1",34,0)
 I 'DGV("FEE"),"^25^26^27^28^29^38^39^"[(U_$P(DGV(701),U,2)_U) D
"RTN","DGPTFVC1",35,0)
 .I DGSUFFIX'="PA",(DGSUFFIX'="PB"),(DGSUFFIX'="PC"),(DGSUFFIX'="PD") D
"RTN","DGPTFVC1",36,0)
 ..S DGERR=1
"RTN","DGPTFVC1",37,0)
 ..W !,"101 SUFFIX",?23,"value must be set to a valid PRRTP suffix."
"RTN","DGPTFVC1",38,0)
 ;
"RTN","DGPTFVC1",39,0)
 D RACETHNC
"RTN","DGPTFVC1",40,0)
 K DGDISPO,DGRECSUF,DGV,DGDP,DGDX,DGSCI,DGSUFFIX,DGNODE,DGX,%,S0,I,X
"RTN","DGPTFVC1",41,0)
 I DGERR H 4
"RTN","DGPTFVC1",42,0)
 Q
"RTN","DGPTFVC1",43,0)
 ;
"RTN","DGPTFVC1",44,0)
SCI F X=5:1:15 I X#10 S:$E($P($G(^ICD9(+$P(DGNODE,"^",X),0)),"^"),1,5)=DGDX DGSCI=1 Q:DGSCI
"RTN","DGPTFVC1",45,0)
 I 'DGSCI S DGERR=1,%=$P(DGNODE,"^",10),X=$TR($$FMTE^XLFDT(%,"5DF")," ","0") W !,"501 ",X," SCI of ",S0,?23," requires an ICD Diagnosis code beginning with",!?12," or equal to ",DGDX
"RTN","DGPTFVC1",46,0)
 Q
"RTN","DGPTFVC1",47,0)
 ;
"RTN","DGPTFVC1",48,0)
MT S DGVMT=$P(DGV(101),"^",10),DGX=999 G DGX:DGVMT']"" I +$P(DGV(101),"^",2)<2860700!(DGSUFFIX="BU") S DGX="X" G DGX
"RTN","DGPTFVC1",49,0)
 ;S DGZEC=$S($D(^DPT(DFN,.36)):$P(^(.36),U,1),1:""),DGZEC=$S($D(^DIC(8,+DGZEC,0)):^(0),1:"") I $P(DGZEC,U,5)="N" S DGX="N" G DGX
"RTN","DGPTFVC1",50,0)
 S DGZEC=$P($G(^DGPT(PTF,101)),U,8),DGZEC=$S($D(^DIC(8,+DGZEC,0)):^(0),1:"") I $P(DGZEC,U,5)="N" S DGX="N" G DGX
"RTN","DGPTFVC1",51,0)
 S DGT=$P(DGV(701),".") G AS:'$O(^DGMT(408.31,"AD",1,DFN,0)) S DGZ1=$$LST^DGMTU(DFN,DGT) K:DGZ1']"" DGZ1
"RTN","DGPTFVC1",52,0)
 I DGVMT="X" K DGX,DGVMT Q
"RTN","DGPTFVC1",53,0)
 S DGX=$S('$D(DGZ1):"U",1:$P(DGZ1,U,4))
"RTN","DGPTFVC1",54,0)
 ; Determine if the Pending Adjudication is for MT(C) or GMT(G)
"RTN","DGPTFVC1",55,0)
 I DGX="P" D  G DGX
"RTN","DGPTFVC1",56,0)
 . I '+$P($G(DGZ1),U) S DGX="U" Q
"RTN","DGPTFVC1",57,0)
 . S DGX=$$PA^DGMTUTL($P(DGZ1,U)),DGX=$S('$D(DGX):"U",DGX="MT":"C",DGX="GMT":"G",1:"U")
"RTN","DGPTFVC1",58,0)
 S DGX=$S(DGX="A":"AN","BCGN"[DGX:DGX,1:"U") G DGX:DGX'="N"
"RTN","DGPTFVC1",59,0)
AS S DGZ=$S($D(^DPT(DFN,.321)):^(.321),1:0) I $P(DGZ,U,2)="Y"!($P(DGZ,U,3)="Y") S DGX="AS" G DGX
"RTN","DGPTFVC1",60,0)
 S DGZ=$S($D(^DPT(DFN,.322)):^(.322),1:0) I $P(DGZ,U,13)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",61,0)
 N DGNTARR S DGZ=$S($$GETCUR^DGNTAPI(DFN,"DGNTARR")>0:DGNTARR("NTR"),1:"") I $P(DGZ,U)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",62,0)
 S DGZ=$$GETSTAT^DGMSTAPI(DFN) I $P(DGZ,U,2)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",63,0)
 I $P(DGZEC,U,5)="Y",$P(DGZEC,U,4)<4,"^2^15^"'[(U_$P(DGZEC,U,9)_U) S DGX="AS" G DGX
"RTN","DGPTFVC1",64,0)
 S DGX="AN"
"RTN","DGPTFVC1",65,0)
DGX I DGVMT'=DGX S DGERR=1 W !,"101 ","MEANS TEST",?23," value ",DGVMT,$S(DGVMT']"":"blank",DGVMT="X":" only for admissions prior to 7/1/86 or domicilliary use",1:" inconsistent with eligibility data")
"RTN","DGPTFVC1",66,0)
 K DGZEC,DGZ,DGZ1,DGT,DGX,DGVMT Q
"RTN","DGPTFVC1",67,0)
 ;
"RTN","DGPTFVC1",68,0)
DP I $P(DGV(701),"^",3)'=5 S DGERR=1 W !,"701 ",$E("TYPE OF DISPOSITION",1,18),?23," value inconsistent for discharge"
"RTN","DGPTFVC1",69,0)
OP I $P(DGV(701),"^",4)=1 S DGERR=1 W !,"701 ",$E("OUTPATIENT TREATMENT",1,18),?23," value inconsistent for discharge" Q:DGDP=""
"RTN","DGPTFVC1",70,0)
 I $P(DGV(701),"^",5)=2 S DGERR=1 W !,"701 VA AUSPICES",?23," value inconsistent for discharge"
"RTN","DGPTFVC1",71,0)
 Q
"RTN","DGPTFVC1",72,0)
 ;
"RTN","DGPTFVC1",73,0)
AO I DGPTFMT<2 D  Q
"RTN","DGPTFVC1",74,0)
 .S %=$S($D(^DGPT(PTF,101)):$P(^(101),"^",4),1:"")
"RTN","DGPTFVC1",75,0)
 .S %=$S($D(^DIC(45.82,+%,0)):$P(^(0),"^",1),1:"")
"RTN","DGPTFVC1",76,0)
 .S I=$S($D(^DPT(DFN,.321)):^(.321),1:"")
"RTN","DGPTFVC1",77,0)
 .S:$P(I,"^",2)="Y"&(%'=6) DGERR=1,DGV("E")=1
"RTN","DGPTFVC1",78,0)
 .W:$D(DGV("E")) !,"101 AGENT ORANGE",?23," value ",$S(DGV("E"):"can only be used with COB of '6'",1:"is inconsistent with Vietnam Service and/or COB")
"RTN","DGPTFVC1",79,0)
 ;
"RTN","DGPTFVC1",80,0)
 N AO,AOL,TMP
"RTN","DGPTFVC1",81,0)
 S TMP=$G(^DPT(DFN,.321))
"RTN","DGPTFVC1",82,0)
 S AO=$S($P(TMP,"^",2)="Y":1,1:0)
"RTN","DGPTFVC1",83,0)
 S AOL=$P(TMP,"^",13)
"RTN","DGPTFVC1",84,0)
 Q:('AO)
"RTN","DGPTFVC1",85,0)
 Q:(AOL'="")
"RTN","DGPTFVC1",86,0)
 S DGERR=1,DGV("E")=1
"RTN","DGPTFVC1",87,0)
 W !,"101 AGENT ORANGE LOCATION",?23,"value required if exposure to Agent Orange claimed"
"RTN","DGPTFVC1",88,0)
 Q
"RTN","DGPTFVC1",89,0)
RACETHNC        ;Race and ethnicity check
"RTN","DGPTFVC1",90,0)
 ;Ensure that a value for ethnicity and at least one race is on file.
"RTN","DGPTFVC1",91,0)
 ;Ensure all active race/ethnicity values have a valid PTF value and an
"RTN","DGPTFVC1",92,0)
 ;associated collection method.  Ensure all collection methods have a
"RTN","DGPTFVC1",93,0)
 ;valid PTF value.  Ignore race/ethicity entries that are inactive or
"RTN","DGPTFVC1",94,0)
 ;invalid pointers.  Note: PTF sends first active ethnicity and first
"RTN","DGPTFVC1",95,0)
 ;six active races.
"RTN","DGPTFVC1",96,0)
 N REF,IEN,TYPE,TEXT,PTRVAL,PTRMTHD,NUM,MAX
"RTN","DGPTFVC1",97,0)
 N VALIDVAL,VALIDMTH,VALUE,VADM
"RTN","DGPTFVC1",98,0)
 D DEM^VADPT
"RTN","DGPTFVC1",99,0)
 F REF=11,12 D
"RTN","DGPTFVC1",100,0)
 .I REF=12 D
"RTN","DGPTFVC1",101,0)
 ..S MAX=6
"RTN","DGPTFVC1",102,0)
 ..S TYPE=1
"RTN","DGPTFVC1",103,0)
 ..S VALIDVAL=",3,8,9,A,B,C,D,"
"RTN","DGPTFVC1",104,0)
 ..S VALIDMTH=",S,P,O,U,"
"RTN","DGPTFVC1",105,0)
 ..S TEXT="RACE"
"RTN","DGPTFVC1",106,0)
 .I REF=11 D
"RTN","DGPTFVC1",107,0)
 ..S MAX=1
"RTN","DGPTFVC1",108,0)
 ..S TYPE=2
"RTN","DGPTFVC1",109,0)
 ..S TEXT="ETHNICITY"
"RTN","DGPTFVC1",110,0)
 ..S VALIDVAL=",H,N,D,U,"
"RTN","DGPTFVC1",111,0)
 ..S VALIDMTH=",S,P,O,U,"
"RTN","DGPTFVC1",112,0)
 .S NUM=1
"RTN","DGPTFVC1",113,0)
 .S IEN=0
"RTN","DGPTFVC1",114,0)
 .F  S IEN=+$O(VADM(REF,IEN)) Q:'IEN  D  Q:NUM>MAX
"RTN","DGPTFVC1",115,0)
 ..S PTRVAL=+VADM(REF,IEN)
"RTN","DGPTFVC1",116,0)
 ..S PTRMTHD=+$G(VADM(REF,IEN,1))
"RTN","DGPTFVC1",117,0)
 ..Q:'PTRVAL
"RTN","DGPTFVC1",118,0)
 ..Q:$$INACTIVE^DGUTL4(PTRVAL,TYPE)
"RTN","DGPTFVC1",119,0)
 ..S NUM=NUM+1
"RTN","DGPTFVC1",120,0)
 ..S VALUE=$$PTR2CODE^DGUTL4(PTRVAL,TYPE,4)
"RTN","DGPTFVC1",121,0)
 ..I (VALUE="")!(VALIDVAL'[VALUE) D  Q
"RTN","DGPTFVC1",122,0)
 ...W !,"701 ",TEXT,?23,"missing/invalid xmit value"
"RTN","DGPTFVC1",123,0)
 ...S DGERR=1
"RTN","DGPTFVC1",124,0)
 ..I ('PTRMTHD) D  Q
"RTN","DGPTFVC1",125,0)
 ...W !,"701 ",TEXT,?23,"method of collection missing/invalid"
"RTN","DGPTFVC1",126,0)
 ...S DGERR=1
"RTN","DGPTFVC1",127,0)
 ..S VALUE=$$PTR2CODE^DGUTL4(PTRMTHD,3,4)
"RTN","DGPTFVC1",128,0)
 ..I (VALUE="")!(VALIDMTH'[VALUE) D  Q
"RTN","DGPTFVC1",129,0)
 ...W !,"701 ",TEXT,?23,"missing/invalid xmit value for method of collection"
"RTN","DGPTFVC1",130,0)
 ...S DGERR=1
"RTN","DGPTFVC1",131,0)
 Q
"VER")
8.0^22
**INSTALL NAME**
EAS*1.0*32
"BLD",4721,0)
EAS*1.0*32^ENROLLMENT APPLICATION SYSTEM^0^3030527^y
"BLD",4721,4,0)
^9.64PA^^
"BLD",4721,"INID")
^n
"BLD",4721,"INIT")
EAS132PT
"BLD",4721,"KRN",0)
^9.67PA^8989.52^19
"BLD",4721,"KRN",.4,0)
.4
"BLD",4721,"KRN",.401,0)
.401
"BLD",4721,"KRN",.402,0)
.402
"BLD",4721,"KRN",.403,0)
.403
"BLD",4721,"KRN",.5,0)
.5
"BLD",4721,"KRN",.84,0)
.84
"BLD",4721,"KRN",3.6,0)
3.6
"BLD",4721,"KRN",3.8,0)
3.8
"BLD",4721,"KRN",9.2,0)
9.2
"BLD",4721,"KRN",9.8,0)
9.8
"BLD",4721,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",4721,"KRN",9.8,"NM",1,0)
EAS132PT^^0^B43807000
"BLD",4721,"KRN",9.8,"NM","B","EAS132PT",1)

"BLD",4721,"KRN",19,0)
19
"BLD",4721,"KRN",19.1,0)
19.1
"BLD",4721,"KRN",101,0)
101
"BLD",4721,"KRN",409.61,0)
409.61
"BLD",4721,"KRN",771,0)
771
"BLD",4721,"KRN",870,0)
870
"BLD",4721,"KRN",8989.51,0)
8989.51
"BLD",4721,"KRN",8989.52,0)
8989.52
"BLD",4721,"KRN",8994,0)
8994
"BLD",4721,"KRN","B",.4,.4)

"BLD",4721,"KRN","B",.401,.401)

"BLD",4721,"KRN","B",.402,.402)

"BLD",4721,"KRN","B",.403,.403)

"BLD",4721,"KRN","B",.5,.5)

"BLD",4721,"KRN","B",.84,.84)

"BLD",4721,"KRN","B",3.6,3.6)

"BLD",4721,"KRN","B",3.8,3.8)

"BLD",4721,"KRN","B",9.2,9.2)

"BLD",4721,"KRN","B",9.8,9.8)

"BLD",4721,"KRN","B",19,19)

"BLD",4721,"KRN","B",19.1,19.1)

"BLD",4721,"KRN","B",101,101)

"BLD",4721,"KRN","B",409.61,409.61)

"BLD",4721,"KRN","B",771,771)

"BLD",4721,"KRN","B",870,870)

"BLD",4721,"KRN","B",8989.51,8989.51)

"BLD",4721,"KRN","B",8989.52,8989.52)

"BLD",4721,"KRN","B",8994,8994)

"BLD",4721,"QUES",0)
^9.62^^
"BLD",4721,"REQB",0)
^9.611^^
"INIT")
EAS132PT
"MBREQ")
0
"PKG",552,-1)
1^1
"PKG",552,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",552,20,0)
^9.402P^2^1
"PKG",552,20,2,0)
2^^EASXDR
"PKG",552,20,2,1)
 
"PKG",552,20,"B",2,2)

"PKG",552,22,0)
^9.49I^1^1
"PKG",552,22,1,0)
1.0^3010315^3010419^66481
"PKG",552,22,1,"PAH",1,0)
32^3030527
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","EAS132PT")
0^1^B43807000
"RTN","EAS132PT",1,0)
EAS132PT ;ALB/SCK - POST INSTALL ROUTINE PATCH EAS*1*32 ;29-APR-2003
"RTN","EAS132PT",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**32**;MAR 15,2001
"RTN","EAS132PT",3,0)
 ;
"RTN","EAS132PT",4,0)
EN ; Main entry point for the Post Installation routine
"RTN","EAS132PT",5,0)
 N EASIEN,EASTYP,MSG
"RTN","EAS132PT",6,0)
 ;
"RTN","EAS132PT",7,0)
 ; EAS Letter types (TYPE Field, #2, EAS MT LETTERS File, #713.3)
"RTN","EAS132PT",8,0)
 ; Set of Codes: 1 -  60-Day Letter
"RTN","EAS132PT",9,0)
 ;               2 -  30-Day Letter 
"RTN","EAS132PT",10,0)
 ;               4 -   0-Day Letter
"RTN","EAS132PT",11,0)
 ;
"RTN","EAS132PT",12,0)
 ;
"RTN","EAS132PT",13,0)
 D BMES^XPDUTL("Beginning the Post-Install update of EAS MT Letters File")
"RTN","EAS132PT",14,0)
 F EASTYP=1,2,4 D
"RTN","EAS132PT",15,0)
 . S EASIEN=0
"RTN","EAS132PT",16,0)
 . F  S EASIEN=$O(^EAS(713.3,"C",EASTYP,EASIEN)) Q:'EASIEN  D
"RTN","EAS132PT",17,0)
 . . D UPDLTR(EASIEN,EASTYP)
"RTN","EAS132PT",18,0)
 D BMES^XPDUTL("Update of EAS MT Letters File with revised text complete")
"RTN","EAS132PT",19,0)
 S MSG(1)="If any errors were reported during the text updates, please contact"
"RTN","EAS132PT",20,0)
 S MSG(2)="the VistA Help Desk"
"RTN","EAS132PT",21,0)
 D MES^XPDUTL(.MSG)
"RTN","EAS132PT",22,0)
 Q
"RTN","EAS132PT",23,0)
 ;
"RTN","EAS132PT",24,0)
UPDLTR(EASIEN,EASTYP) ; Update specific letter with new text from text updates below.
"RTN","EAS132PT",25,0)
 N LTRTYPE,MSG,WPR
"RTN","EAS132PT",26,0)
 ;
"RTN","EAS132PT",27,0)
 S LTRTYPE=$S(EASTYP=1:"UPD1",EASTYP=2:"UPD2",EASTYP=4:"UPD4",1:"")
"RTN","EAS132PT",28,0)
 I LTRTYPE']"" D  Q
"RTN","EAS132PT",29,0)
 . D BMES^XPDUTL(">>> UNIDENTIFIED LETTER TYPE PASSED IN")
"RTN","EAS132PT",30,0)
 ;
"RTN","EAS132PT",31,0)
 S MSG="Updating the "_$S(EASTYP=1:"60",EASTYP=2:"30",1:"0")_"-Day Letter..."
"RTN","EAS132PT",32,0)
 D BMES^XPDUTL(MSG)
"RTN","EAS132PT",33,0)
 ;
"RTN","EAS132PT",34,0)
 N LINE,EAX,EASOUT,EASER
"RTN","EAS132PT",35,0)
 ;
"RTN","EAS132PT",36,0)
 F EAX=1:1  D  Q:$G(LINE)="$$END"
"RTN","EAS132PT",37,0)
 . S LINE=$P($T(@LTRTYPE+EAX),";;",2)
"RTN","EAS132PT",38,0)
 . Q:LINE="$$END"
"RTN","EAS132PT",39,0)
 . S WPR("WP",EAX)=LINE
"RTN","EAS132PT",40,0)
 ;
"RTN","EAS132PT",41,0)
 D WP^DIE(713.3,EASIEN_",",3,"K","WPR(""WP"")","EASER")
"RTN","EAS132PT",42,0)
 I $D(EASER) D
"RTN","EAS132PT",43,0)
 . D BMES^XPDUTL("An error occurred while updating the initial section of the "_LTRTYPE_" letter")
"RTN","EAS132PT",44,0)
 . D MSG^DIALOG("AS",.EASOUT,"","","EASER")
"RTN","EAS132PT",45,0)
 . D MES^XPDUTL(.EASOUT)
"RTN","EAS132PT",46,0)
 E  D
"RTN","EAS132PT",47,0)
 . D BMES^XPDUTL(LTRTYPE_" Letter text updated.")
"RTN","EAS132PT",48,0)
 ; 
"RTN","EAS132PT",49,0)
 K WPR
"RTN","EAS132PT",50,0)
 Q
"RTN","EAS132PT",51,0)
 ;
"RTN","EAS132PT",52,0)
 ; Updated text for the Means Test Letters, per VHA Directive published
"RTN","EAS132PT",53,0)
 ; by the Chief Buisness Office
"RTN","EAS132PT",54,0)
 ;
"RTN","EAS132PT",55,0)
UPD1 ;;60-Day Letter text
"RTN","EAS132PT",56,0)
 ;;Each year the VA requires nonservice-connected veterans and 0% service-
"RTN","EAS132PT",57,0)
 ;;connected veterans to complete a financial assessment (means test). Our
"RTN","EAS132PT",58,0)
 ;;records show that your annual means test is due |ANNVDT|.
"RTN","EAS132PT",59,0)
 ;;
"RTN","EAS132PT",60,0)
 ;;What Does This Mean To You?
"RTN","EAS132PT",61,0)
 ;;  o The means test you completed last year exempted you from copayments
"RTN","EAS132PT",62,0)
 ;;    for health care provided for your nonservice-connected conditions.
"RTN","EAS132PT",63,0)
 ;;  o Failure to complete the means test by the anniversary date will
"RTN","EAS132PT",64,0)
 ;;    cause your priority for enrollment in the VA health care system to 
"RTN","EAS132PT",65,0)
 ;;    lapse.
"RTN","EAS132PT",66,0)
 ;;
"RTN","EAS132PT",67,0)
 ;;What Do You Need To Do?
"RTN","EAS132PT",68,0)
 ;;  o Complete and sign the Financial Assessment portion of the enclosed VA
"RTN","EAS132PT",69,0)
 ;;    Form l0-10EZ, Application for Health Benefits, reporting income and
"RTN","EAS132PT",70,0)
 ;;    assets for the previous calendar year.
"RTN","EAS132PT",71,0)
 ;;  o Return the completed and signed form in the enclosed envelope before
"RTN","EAS132PT",72,0)
 ;;    your means test anniversary date.
"RTN","EAS132PT",73,0)
 ;;  o When you report to your next health care appointment, bring your
"RTN","EAS132PT",74,0)
 ;;    health insurance card so we may update your health insurance 
"RTN","EAS132PT",75,0)
 ;;    information.
"RTN","EAS132PT",76,0)
 ;;  o Notify us if you feel you received this letter in error.
"RTN","EAS132PT",77,0)
 ;;
"RTN","EAS132PT",78,0)
 ;;What If You Have Questions?
"RTN","EAS132PT",79,0)
 ;;$$END
"RTN","EAS132PT",80,0)
UPD2 ;;30-Day Letter txt
"RTN","EAS132PT",81,0)
 ;;Each year the VA requires nonservice-connected veterans and 0% service-
"RTN","EAS132PT",82,0)
 ;;connected veterans to complete a financial assessment (means test). Our
"RTN","EAS132PT",83,0)
 ;;records show that your annual means test is due |ANNVDT|.
"RTN","EAS132PT",84,0)
 ;;
"RTN","EAS132PT",85,0)
 ;;As of this date we have not received the updated financial income
"RTN","EAS132PT",86,0)
 ;;information we requested in a previous letter.
"RTN","EAS132PT",87,0)
 ;;
"RTN","EAS132PT",88,0)
 ;;What Does This Mean To You?
"RTN","EAS132PT",89,0)
 ;;  o The means test you completed last year exempted you from copayments
"RTN","EAS132PT",90,0)
 ;;    for health care provided for your nonservice-connected conditions.
"RTN","EAS132PT",91,0)
 ;;  o Failure to complete the means test by the anniversary date will 
"RTN","EAS132PT",92,0)
 ;;    cause your priority for enrollment in the VA health care system to 
"RTN","EAS132PT",93,0)
 ;;    lapse.
"RTN","EAS132PT",94,0)
 ;;
"RTN","EAS132PT",95,0)
 ;;What Do You Need To Do?
"RTN","EAS132PT",96,0)
 ;;  o Complete and sign the enclosed Financial Assessment portion of the
"RTN","EAS132PT",97,0)
 ;;    enclosed VA Form l0-10EZ, Application for Health Benefits, reporting
"RTN","EAS132PT",98,0)
 ;;    income and assets for the previous calendar year.
"RTN","EAS132PT",99,0)
 ;;  o Return the completed and signed form in the enclosed envelope before
"RTN","EAS132PT",100,0)
 ;;    your means test anniversary date.
"RTN","EAS132PT",101,0)
 ;;  o When you report to your next health care appointment, bring your
"RTN","EAS132PT",102,0)
 ;;    health insurance card so we may update your health insurance 
"RTN","EAS132PT",103,0)
 ;;    information.
"RTN","EAS132PT",104,0)
 ;;  o Notify us if you feel you received this letter in error.
"RTN","EAS132PT",105,0)
 ;;
"RTN","EAS132PT",106,0)
 ;;What If You Have Questions?
"RTN","EAS132PT",107,0)
 ;;$$END
"RTN","EAS132PT",108,0)
UPD4 ;;0-Day Letter txt
"RTN","EAS132PT",109,0)
 ;;According to our records you have not responded to our previous requests
"RTN","EAS132PT",110,0)
 ;;to complete the financial section of VA Form l0-10EZ, Application for
"RTN","EAS132PT",111,0)
 ;;Health Benefits. This is to inform you that your current financial 
"RTN","EAS132PT",112,0)
 ;;assessment (means test) has expired.
"RTN","EAS132PT",113,0)
 ;;
"RTN","EAS132PT",114,0)
 ;;How Does This Affect Your Eligibility for Cost Free Care?
"RTN","EAS132PT",115,0)
 ;;  o We do not have a current means test for you on file as is required to
"RTN","EAS132PT",116,0)
 ;;    determine your eligibility for cost-free care.
"RTN","EAS132PT",117,0)
 ;;
"RTN","EAS132PT",118,0)
 ;;How Does This Affect Your Enrollment?
"RTN","EAS132PT",119,0)
 ;;  o We are unable to determine your priority for enrollment in the VA
"RTN","EAS132PT",120,0)
 ;;    health care system.
"RTN","EAS132PT",121,0)
 ;;
"RTN","EAS132PT",122,0)
 ;;What Do You Need To Do?
"RTN","EAS132PT",123,0)
 ;;  o Complete, sign and return a new VA Form l0-10EZ, including the
"RTN","EAS132PT",124,0)
 ;;    financial section.
"RTN","EAS132PT",125,0)
 ;;  o Read the enclosed VA Form 4107VHA, Your Rights to Appeal our 
"RTN","EAS132PT",126,0)
 ;;    Decision. If you disagree with our decision, you or your 
"RTN","EAS132PT",127,0)
 ;;    representative may complete a Notice of Disagreement and return it
"RTN","EAS132PT",128,0)
 ;;    to the Enrollment Coordinator or Health Benefits Advisor at your 
"RTN","EAS132PT",129,0)
 ;;    local VA health care facility.
"RTN","EAS132PT",130,0)
 ;;
"RTN","EAS132PT",131,0)
 ;;What If You Have Questions?
"RTN","EAS132PT",132,0)
 ;;$$END
"VER")
8.0^22
**END**
**END**
