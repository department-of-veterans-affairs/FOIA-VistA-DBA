Released PX*1*174 SEQ #131
Extracted from mail message
**KIDS**:PX*1.0*174^

**INSTALL NAME**
PX*1.0*174
"BLD",5764,0)
PX*1.0*174^PCE PATIENT CARE ENCOUNTER^0^3051117^y
"BLD",5764,4,0)
^9.64PA^^
"BLD",5764,"ABPKG")
n
"BLD",5764,"KRN",0)
^9.67PA^8989.52^19
"BLD",5764,"KRN",.4,0)
.4
"BLD",5764,"KRN",.401,0)
.401
"BLD",5764,"KRN",.402,0)
.402
"BLD",5764,"KRN",.403,0)
.403
"BLD",5764,"KRN",.5,0)
.5
"BLD",5764,"KRN",.84,0)
.84
"BLD",5764,"KRN",3.6,0)
3.6
"BLD",5764,"KRN",3.8,0)
3.8
"BLD",5764,"KRN",9.2,0)
9.2
"BLD",5764,"KRN",9.8,0)
9.8
"BLD",5764,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",5764,"KRN",9.8,"NM",1,0)
PXKMAIN^^0^B42253213
"BLD",5764,"KRN",9.8,"NM",2,0)
PXRRMDR^^0^B78875508
"BLD",5764,"KRN",9.8,"NM",3,0)
PXBMPOV^^0^B7489251
"BLD",5764,"KRN",9.8,"NM",4,0)
PXCECCLS^^0^B19236518
"BLD",5764,"KRN",9.8,"NM",5,0)
PXCEC800^^0^B3063764
"BLD",5764,"KRN",9.8,"NM",6,0)
PXRRMDR1^^0^B1090646
"BLD",5764,"KRN",9.8,"NM",7,0)
PXAIPOV^^0^B21994466
"BLD",5764,"KRN",9.8,"NM","B","PXAIPOV",7)

"BLD",5764,"KRN",9.8,"NM","B","PXBMPOV",3)

"BLD",5764,"KRN",9.8,"NM","B","PXCEC800",5)

"BLD",5764,"KRN",9.8,"NM","B","PXCECCLS",4)

"BLD",5764,"KRN",9.8,"NM","B","PXKMAIN",1)

"BLD",5764,"KRN",9.8,"NM","B","PXRRMDR",2)

"BLD",5764,"KRN",9.8,"NM","B","PXRRMDR1",6)

"BLD",5764,"KRN",19,0)
19
"BLD",5764,"KRN",19.1,0)
19.1
"BLD",5764,"KRN",101,0)
101
"BLD",5764,"KRN",409.61,0)
409.61
"BLD",5764,"KRN",771,0)
771
"BLD",5764,"KRN",870,0)
870
"BLD",5764,"KRN",8989.51,0)
8989.51
"BLD",5764,"KRN",8989.52,0)
8989.52
"BLD",5764,"KRN",8994,0)
8994
"BLD",5764,"KRN","B",.4,.4)

"BLD",5764,"KRN","B",.401,.401)

"BLD",5764,"KRN","B",.402,.402)

"BLD",5764,"KRN","B",.403,.403)

"BLD",5764,"KRN","B",.5,.5)

"BLD",5764,"KRN","B",.84,.84)

"BLD",5764,"KRN","B",3.6,3.6)

"BLD",5764,"KRN","B",3.8,3.8)

"BLD",5764,"KRN","B",9.2,9.2)

"BLD",5764,"KRN","B",9.8,9.8)

"BLD",5764,"KRN","B",19,19)

"BLD",5764,"KRN","B",19.1,19.1)

"BLD",5764,"KRN","B",101,101)

"BLD",5764,"KRN","B",409.61,409.61)

"BLD",5764,"KRN","B",771,771)

"BLD",5764,"KRN","B",870,870)

"BLD",5764,"KRN","B",8989.51,8989.51)

"BLD",5764,"KRN","B",8989.52,8989.52)

"BLD",5764,"KRN","B",8994,8994)

"BLD",5764,"QUES",0)
^9.62^^
"BLD",5764,"REQB",0)
^9.611^1^1
"BLD",5764,"REQB",1,0)
PX*1.0*124^2
"BLD",5764,"REQB","B","PX*1.0*124",1)

"MBREQ")
0
"PKG",327,-1)
1^1
"PKG",327,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter (VA Parent package)
"PKG",327,20,0)
^9.402P^^
"PKG",327,22,0)
^9.49I^1^1
"PKG",327,22,1,0)
1.0^2970109^2970108^1453
"PKG",327,22,1,"PAH",1,0)
174^3051117^123457151
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","PXAIPOV")
0^7^B21994466
"RTN","PXAIPOV",1,0)
PXAIPOV ;ISL/JVS,ESW - SET THE DIAGNOSIS/PROBLEM LIST NODES ;6/25/03 2:05pm
"RTN","PXAIPOV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**28,73,69,108,112,130,124,174**;Aug 12, 1996
"RTN","PXAIPOV",3,0)
 ;
"RTN","PXAIPOV",4,0)
 Q
"RTN","PXAIPOV",5,0)
POV ;--CREATE DIAGNOSIS
"RTN","PXAIPOV",6,0)
 ;
"RTN","PXAIPOV",7,0)
SET ;--SET AND NEW VARIABLES
"RTN","PXAIPOV",8,0)
 N AFTER0,AFTER12,AFTER800,AFTER801,AFTER811,AFTER802,AFTER812
"RTN","PXAIPOV",9,0)
 N BEFOR0,BEFOR12,BEFOR800,BEFOR801,BEFOR811,BEFOR802,BEFOR812
"RTN","PXAIPOV",10,0)
 N PXAA,PXAB,SUB,PIECE,PXAAX,IENB,STOP,VAR,AFTER8A
"RTN","PXAIPOV",11,0)
 N FPRI,J,LNARR,GMPSAVED,NOPLLIST,PXDIGNS,VAR,PRI
"RTN","PXAIPOV",12,0)
 N POVI,PRVDR,PXBCNT,PXBCNTPL,PXBKY,PXBPMT,PXBSAM,PXBSKY,PXKDONE
"RTN","PXAIPOV",13,0)
 ;
"RTN","PXAIPOV",14,0)
 K PXAERR
"RTN","PXAIPOV",15,0)
 S PXAERR(8)=PXAK
"RTN","PXAIPOV",16,0)
 S PXAERR(7)="DX/PL"
"RTN","PXAIPOV",17,0)
 ;
"RTN","PXAIPOV",18,0)
 S SUB="" F  S SUB=$O(@PXADATA@("DX/PL",PXAK,SUB)) Q:SUB=""  D
"RTN","PXAIPOV",19,0)
 .S PXAA(SUB)=@PXADATA@("DX/PL",PXAK,SUB)
"RTN","PXAIPOV",20,0)
 ;
"RTN","PXAIPOV",21,0)
 ;--VALIDATE ENOUGH DATA
"RTN","PXAIPOV",22,0)
 D VAL^PXAIPOVV Q:$G(STOP)
"RTN","PXAIPOV",23,0)
 ;
"RTN","PXAIPOV",24,0)
SETVARA ;--SET VISIT VARIABLES
"RTN","PXAIPOV",25,0)
 S $P(AFTER0,"^",1)=$G(PXAA("DIAGNOSIS"))
"RTN","PXAIPOV",26,0)
 I $G(PXAA("DELETE")) S $P(AFTER0,"^",1)="@"
"RTN","PXAIPOV",27,0)
 S $P(AFTER0,"^",2)=$G(PATIENT),PXAA("PATIENT")=$G(PATIENT)
"RTN","PXAIPOV",28,0)
 S $P(AFTER0,"^",3)=$G(PXAVISIT)
"RTN","PXAIPOV",29,0)
 S $P(AFTER0,"^",4)=$G(PXAA("NARRATIVE")) D
"RTN","PXAIPOV",30,0)
 .I $G(PXAA("NARRATIVE"))']""!($L($G(PXAA("NARRATIVE")))>245) D
"RTN","PXAIPOV",31,0)
 ..S PXAA("NARRATIVE")=$$EXTTEXT^PXUTL1($G(PXAA("DIAGNOSIS")),1,80,10,3) ;--TEXT OF NARRATIVE
"RTN","PXAIPOV",32,0)
 .S $P(AFTER0,"^",4)=+$$PROVNARR^PXAPI($G(PXAA("NARRATIVE")),9000010.07)
"RTN","PXAIPOV",33,0)
 ;PX*1*124
"RTN","PXAIPOV",34,0)
 S $P(AFTER0,"^",12)=$S($G(PXAA("PRIMARY"))=1:"P",$G(PXAA("PRIMARY"))="P":"P",1:"S")
"RTN","PXAIPOV",35,0)
 ;--ADDED FOR PATCH 28
"RTN","PXAIPOV",36,0)
 S $P(AFTER0,"^",15)=$G(PXAA("LEXICON TERM"))
"RTN","PXAIPOV",37,0)
 S $P(AFTER0,"^",16)=$G(PXAA("PL IEN"))
"RTN","PXAIPOV",38,0)
 S $P(AFTER0,"^",17)=$G(PXAA("ORD/RES"))
"RTN","PXAIPOV",39,0)
 ;--END OF NEW PATCH 28
"RTN","PXAIPOV",40,0)
 S $P(AFTER12,"^",1)=$G(PXAA("EVENT D/T"))
"RTN","PXAIPOV",41,0)
 S $P(AFTER12,"^",4)=$G(PXAA("ENC PROVIDER"))
"RTN","PXAIPOV",42,0)
 ;PX*1*108
"RTN","PXAIPOV",43,0)
 I $G(PXAA("ENC PROVIDER"))]"",'$G(PXAA("DELETE")) D
"RTN","PXAIPOV",44,0)
 .S ^TMP("PXAIADDPRV",$J,$G(PXAA("ENC PROVIDER")))=""
"RTN","PXAIPOV",45,0)
 ;
"RTN","PXAIPOV",46,0)
 I $G(PXAA("CATEGORY"))]"" S $P(AFTER802,"^",1)=+$$PROVNARR^PXAPI($G(PXAA("CATEGORY")),9000010.07)
"RTN","PXAIPOV",47,0)
 S $P(AFTER811,"^",1)=$G(PXAA("COMMENT"))
"RTN","PXAIPOV",48,0)
 ;
"RTN","PXAIPOV",49,0)
 S $P(AFTER800,"^",1)=$G(PXAA("PL SC"))
"RTN","PXAIPOV",50,0)
 S $P(AFTER800,"^",2)=$G(PXAA("PL AO"))
"RTN","PXAIPOV",51,0)
 S $P(AFTER800,"^",3)=$G(PXAA("PL IR"))
"RTN","PXAIPOV",52,0)
 S $P(AFTER800,"^",4)=$G(PXAA("PL EC"))
"RTN","PXAIPOV",53,0)
 S $P(AFTER800,"^",5)=$G(PXAA("PL MST"))
"RTN","PXAIPOV",54,0)
 S $P(AFTER800,"^",6)=$G(PXAA("PL HNC"))
"RTN","PXAIPOV",55,0)
 S $P(AFTER800,"^",7)=$G(PXAA("PL CV"))
"RTN","PXAIPOV",56,0)
 ;
"RTN","PXAIPOV",57,0)
 D SCC^PXUTLSCC(PATIENT,$P($G(^AUPNVSIT(PXAVISIT,0)),"^",1),$P($G(^AUPNVSIT(PXAVISIT,0)),"^",22),$G(PXAVISIT),AFTER800,.AFTER800)
"RTN","PXAIPOV",58,0)
 ;
"RTN","PXAIPOV",59,0)
 I $G(PXAA("PL SC"))="" S $P(AFTER800,"^",1)=""
"RTN","PXAIPOV",60,0)
 I $G(PXAA("PL AO"))="" S $P(AFTER800,"^",2)=""
"RTN","PXAIPOV",61,0)
 I $G(PXAA("PL IR"))="" S $P(AFTER800,"^",3)=""
"RTN","PXAIPOV",62,0)
 I $G(PXAA("PL EC"))="" S $P(AFTER800,"^",4)=""
"RTN","PXAIPOV",63,0)
 I $G(PXAA("PL MST"))="" S $P(AFTER800,"^",5)=""
"RTN","PXAIPOV",64,0)
 I $G(PXAA("PL HNC"))="" S $P(AFTER800,"^",6)=""
"RTN","PXAIPOV",65,0)
 I $G(PXAA("PL CV"))="" S $P(AFTER800,"^",7)=""
"RTN","PXAIPOV",66,0)
 ;
"RTN","PXAIPOV",67,0)
 S $P(AFTER812,"^",3)=$G(PXASOURC)
"RTN","PXAIPOV",68,0)
 S $P(AFTER812,"^",2)=$G(PXAPKG)
"RTN","PXAIPOV",69,0)
 ;
"RTN","PXAIPOV",70,0)
 D PL^PXAIPL
"RTN","PXAIPOV",71,0)
 ;
"RTN","PXAIPOV",72,0)
 ;
"RTN","PXAIPOV",73,0)
SETPXKA ;--SET PXK ARRAY AFTER
"RTN","PXAIPOV",74,0)
 S ^TMP("PXK",$J,"POV",PXAK,0,"AFTER")=$G(AFTER0)
"RTN","PXAIPOV",75,0)
 S ^TMP("PXK",$J,"POV",PXAK,12,"AFTER")=$G(AFTER12)
"RTN","PXAIPOV",76,0)
 S ^TMP("PXK",$J,"POV",PXAK,800,"AFTER")=$G(AFTER800)
"RTN","PXAIPOV",77,0)
 S ^TMP("PXK",$J,"POV",PXAK,802,"AFTER")=$G(AFTER802)
"RTN","PXAIPOV",78,0)
 S ^TMP("PXK",$J,"POV",PXAK,811,"AFTER")=$G(AFTER811)
"RTN","PXAIPOV",79,0)
 S ^TMP("PXK",$J,"POV",PXAK,812,"AFTER")=$G(AFTER812)
"RTN","PXAIPOV",80,0)
 ;
"RTN","PXAIPOV",81,0)
SETVARB ;--SET VARIABLES BEFORE
"RTN","PXAIPOV",82,0)
 ;
"RTN","PXAIPOV",83,0)
 ;--GET IEN FOR 'PXK NODE'
"RTN","PXAIPOV",84,0)
 D POV^PXBGPOV(PXAVISIT)
"RTN","PXAIPOV",85,0)
 I $D(^TMP("PXBGPOVMATCH",$J,$G(PXAA("DIAGNOSIS")))) D
"RTN","PXAIPOV",86,0)
 .S (^TMP("PXK",$J,"POV",PXAK,"IEN"),IENB)=$O(^TMP("PXBGPOVMATCH",$J,$G(PXAA("DIAGNOSIS")),0))
"RTN","PXAIPOV",87,0)
 K ^TMP("PXBGPOVMATCH",$J)
"RTN","PXAIPOV",88,0)
 ;
"RTN","PXAIPOV",89,0)
BEFOR ;
"RTN","PXAIPOV",90,0)
 I $G(IENB) D
"RTN","PXAIPOV",91,0)
 .F PIECE=0,12,800,802,811 S ^TMP("PXK",$J,"POV",PXAK,PIECE,"BEFORE")=$G(^AUPNVPOV(IENB,PIECE))
"RTN","PXAIPOV",92,0)
 .K ^TMP("PXK",$J,"POV",PXAK,812)
"RTN","PXAIPOV",93,0)
 E  D
"RTN","PXAIPOV",94,0)
 .S (BEFOR0,BEFOR12,BEFOR800,BEFOR802,BEFOR811,BEFOR812)=""
"RTN","PXAIPOV",95,0)
 .;
"RTN","PXAIPOV",96,0)
SETPXKB .;--SET PXK ARRAY BEFORE
"RTN","PXAIPOV",97,0)
 .S ^TMP("PXK",$J,"POV",PXAK,0,"BEFORE")=$G(BEFOR0)
"RTN","PXAIPOV",98,0)
 .S ^TMP("PXK",$J,"POV",PXAK,12,"BEFORE")=$G(BEFOR12)
"RTN","PXAIPOV",99,0)
 .S ^TMP("PXK",$J,"POV",PXAK,800,"BEFORE")=$G(BEFOR800)
"RTN","PXAIPOV",100,0)
 .S ^TMP("PXK",$J,"POV",PXAK,802,"BEFORE")=$G(BEFOR802)
"RTN","PXAIPOV",101,0)
 .S ^TMP("PXK",$J,"POV",PXAK,811,"BEFORE")=$G(BEFOR811)
"RTN","PXAIPOV",102,0)
 .S ^TMP("PXK",$J,"POV",PXAK,812,"BEFORE")=$G(BEFOR812)
"RTN","PXAIPOV",103,0)
 .S ^TMP("PXK",$J,"POV",PXAK,"IEN")=""
"RTN","PXAIPOV",104,0)
 ;
"RTN","PXAIPOV",105,0)
MISC ;--MISCELLANEOUS NODE
"RTN","PXAIPOV",106,0)
 ;
"RTN","PXAIPOV",107,0)
 Q
"RTN","PXAIPOV",108,0)
PRIM ;--SET A PROVIDER AS PRIMARY
"RTN","PXAIPOV",109,0)
 N PXBCNT,PXBKY,PXBSAM,PXBSKY,PRVDR,FPRI ;108
"RTN","PXAIPOV",110,0)
 D PRV^PXBGPRV(PXAVISIT,.PXBSKY,.PXBKY,.PXBSAM,.PXBCNT,.PRVDR,.FPRI) ;108
"RTN","PXAIPOV",111,0)
 I $D(PRVDR) Q
"RTN","PXAIPOV",112,0)
 I '$D(PXBSKY) Q
"RTN","PXAIPOV",113,0)
 ;
"RTN","PXAIPOV",114,0)
 S $P(AFTER0,"^",1)=$P(^AUPNVPRV($O(PXBSKY(1,0)),0),"^",1)
"RTN","PXAIPOV",115,0)
 S $P(AFTER0,"^",2)=$P(^AUPNVSIT(PXAVISIT,0),"^",5)
"RTN","PXAIPOV",116,0)
 S $P(AFTER0,"^",3)=PXAVISIT
"RTN","PXAIPOV",117,0)
 S $P(AFTER0,"^",4)="P"
"RTN","PXAIPOV",118,0)
 S ^TMP("PXK",$J,"PRV",22222,0,"AFTER")=AFTER0
"RTN","PXAIPOV",119,0)
 S ^TMP("PXK",$J,"PRV",22222,0,"BEFORE")=$G(^AUPNVPRV($O(PXBSKY(1,0)),0))
"RTN","PXAIPOV",120,0)
 S ^TMP("PXK",$J,"PRV",22222,"IEN")=$O(PXBSKY(1,0))
"RTN","PXAIPOV",121,0)
 D EN1^PXKMAIN
"RTN","PXAIPOV",122,0)
 K PXRDR
"RTN","PXAIPOV",123,0)
 K ^TMP("PXBGPOVMATCH",$J)
"RTN","PXAIPOV",124,0)
 Q
"RTN","PXBMPOV")
0^3^B7489251
"RTN","PXBMPOV",1,0)
PXBMPOV ;ISL/JVS,ESW - MAIN ROUTINE DIAGNOSIS ;3/5/04 1:50pm
"RTN","PXBMPOV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,14,108,124,174**;Aug 12, 1996
"RTN","PXBMPOV",3,0)
 ;
"RTN","PXBMPOV",4,0)
 W !,"This is not the entry into this routine" Q
"RTN","PXBMPOV",5,0)
 ;
"RTN","PXBMPOV",6,0)
 ;  VARABLE LIST
"RTN","PXBMPOV",7,0)
 ;
"RTN","PXBMPOV",8,0)
 ;
"RTN","PXBMPOV",9,0)
 ;
"RTN","PXBMPOV",10,0)
POV(PXBVST) ;---Real entry point
"RTN","PXBMPOV",11,0)
 Q:'$D(^AUPNVSIT(PXBVST))
"RTN","PXBMPOV",12,0)
 ; PXBVST  = Appointment-Encounter Visit IEN
"RTN","PXBMPOV",13,0)
 ; PXBDPRV = Default Provider for clinic appointment IEN
"RTN","PXBMPOV",14,0)
 ;--Set up
"RTN","PXBMPOV",15,0)
 N PXBCNT,I,J,IDATE,PRIP,PRIPOV,PRISEC,QUA,VISIT,PRI,POV,PRV,PXBENT,SAVE
"RTN","PXBMPOV",16,0)
 N PXBUT,FPRI,ENTRY,PXBSAVE,DATA,PXBPRBLM,PXBRES,PXBSPL,NAME,PATIENT
"RTN","PXBMPOV",17,0)
 N REQI,REQE,PROMPT,PROVIDER,PXDIGNS,CYCL,PXBNPOVL,FROM,NOREV,NOPLLIST
"RTN","PXBMPOV",18,0)
 N PXBNCPT,PXBNPRV,PXBNPOV,FIRST,PXBWIN,CLINIC,PXBPMT,LEAVE,VAR,%
"RTN","PXBMPOV",19,0)
 K ^TMP("PXBGPOVMATCH",$J)
"RTN","PXBMPOV",20,0)
 S CLINIC=$P(^AUPNVSIT(PXBVST,0),"^",22),PROMPT="POV",FIRST=1,PXBEXIT=1
"RTN","PXBMPOV",21,0)
 S (REQE,REQI)=""
"RTN","PXBMPOV",22,0)
 S ^TMP("PXBDPOV",$J,"START")=0
"RTN","PXBMPOV",23,0)
 ;
"RTN","PXBMPOV",24,0)
PPP ;--Obtain the POV (DIAGNOSIS)
"RTN","PXBMPOV",25,0)
 N PXBSKY,PXBKY,PXBSAM,PXBCNT,PRVDR,FPRI
"RTN","PXBMPOV",26,0)
 D PRV^PXBGPRV(PXBVST,.PXBSKY,.PXBKY,.PXBSAM,.PXBCNT,.PRVDR,.FPRI)
"RTN","PXBMPOV",27,0)
 K PXBSPL
"RTN","PXBMPOV",28,0)
 D TERM^PXBCC
"RTN","PXBMPOV",29,0)
 D HDR^PXBUTL(PXBVST,1)
"RTN","PXBMPOV",30,0)
 D REQ^PXBDREQ(6)
"RTN","PXBMPOV",31,0)
 N LNARR D POV^PXBGPOV(PXBVST)
"RTN","PXBMPOV",32,0)
 D EN0^PXBDPOV
"RTN","PXBMPOV",33,0)
R D WIN17^PXBCC(PXBCNT),LOC^PXBCC(15,1)
"RTN","PXBMPOV",34,0)
 K ERROR D POV^PXBPPOV G:$G(PXBEXIT)<1 POVXIT G:$G(ERROR) R W IOEDEOP
"RTN","PXBMPOV",35,0)
 K FIRST
"RTN","PXBMPOV",36,0)
 I DATA["^P" D RSET^PXBDREQ("POV") G PPP
"RTN","PXBMPOV",37,0)
 I $G(PXBUT)=1,$D(LEAVE) G POVXIT
"RTN","PXBMPOV",38,0)
 ;
"RTN","PXBMPOV",39,0)
 ;--Prompt for Primary or Secondary DIAGNOSIS
"RTN","PXBMPOV",40,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBMPOV",41,0)
 D PRI^PXBPPOV1
"RTN","PXBMPOV",42,0)
 I $D(DIRUT) D RSET^PXBDREQ("POV") G PPP
"RTN","PXBMPOV",43,0)
 D ORD^PXBPPOV1
"RTN","PXBMPOV",44,0)
 N PXCEVIEN,PXCEAFTR,PXD
"RTN","PXBMPOV",45,0)
 S PXCEVIEN=PXBVST,PXD=$P(REQI,U,5)
"RTN","PXBMPOV",46,0)
 D FULL0^PXBCC,GET800^PXCEC800 ;CI's PX*1.0*174
"RTN","PXBMPOV",47,0)
 S PXBREQ(PXD,"I")=$G(PXCEAFTR(800))
"RTN","PXBMPOV",48,0)
 ;
"RTN","PXBMPOV",49,0)
 ;--Display the Requested Diagnosis
"RTN","PXBMPOV",50,0)
 D PRINT^PXBDREQ(4),EN0^PXBSTOR(PXBVST,PATIENT,REQI),EN1^PXKMAIN
"RTN","PXBMPOV",51,0)
 ;
"RTN","PXBMPOV",52,0)
 ;--Request entry to problem list
"RTN","PXBMPOV",53,0)
 I $D(DIRUT)!('$G(PXBPRBLM)) K DIRUT,PXBPRBLM D EN0^PXBSTOR(PXBVST,PATIENT,REQI),EN1^PXKMAIN,RSET^PXBDREQ("POV") G PPP
"RTN","PXBMPOV",54,0)
 ;
"RTN","PXBMPOV",55,0)
 ;--Request the Associated Provider
"RTN","PXBMPOV",56,0)
 ;---I NOT PROVIDER GO PPP
"RTN","PXBMPOV",57,0)
 ;
"RTN","PXBMPOV",58,0)
 ;--RETURN TO THE BEGINNING
"RTN","PXBMPOV",59,0)
 D RSET^PXBDREQ("POV"),RSET^PXBDREQ("PRV")
"RTN","PXBMPOV",60,0)
 G PPP
"RTN","PXBMPOV",61,0)
 Q
"RTN","PXBMPOV",62,0)
 ;
"RTN","PXBMPOV",63,0)
POVXIT ;----EXIT AND CLEAN UP
"RTN","PXBMPOV",64,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBMPOV",65,0)
 ;
"RTN","PXBMPOV",66,0)
 ;--Send the data to the problem list
"RTN","PXBMPOV",67,0)
PL I '$G(PXBEXIT)<1 D
"RTN","PXBMPOV",68,0)
 .I '$G(PXBPRBON) Q
"RTN","PXBMPOV",69,0)
 .I PXBCNT>0 N LNARR D SET^PXBPL
"RTN","PXBMPOV",70,0)
 D PRIM^PXBUTL
"RTN","PXBMPOV",71,0)
 ;D PRIMD^PXBUTL
"RTN","PXBMPOV",72,0)
 D FULL0^PXBCC
"RTN","PXBMPOV",73,0)
 D CLEAR1^PXBCC
"RTN","PXBMPOV",74,0)
 K PXBKY,PXBSAM,PXBSKY,PXBVST
"RTN","PXBMPOV",75,0)
 ;----Do the EVENT to the Protocol
"RTN","PXBMPOV",76,0)
 ;D EVENT^PXKMAIN
"RTN","PXBMPOV",77,0)
 K ^TMP("PXBDPOV",$J),^TMP("PXBSTOR",$J),^TMP("PXK",$J),^TMP("PXBDPL",$J)
"RTN","PXBMPOV",78,0)
 K ^TMP("PXBTOTAL",$J),^TMP("PXBTANA",$J),^TMP("PXBGPOVMATCH",$J)
"RTN","PXBMPOV",79,0)
 Q
"RTN","PXBMPOV",80,0)
 ;
"RTN","PXCEC800")
0^5^B3063764
"RTN","PXCEC800",1,0)
PXCEC800 ;ISL/dee,ISA/KWP - Used in editing the 800 node, Service Connected conditions ;12/22/04 1:38pm
"RTN","PXCEC800",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**124,174**;Aug 12, 1996
"RTN","PXCEC800",3,0)
 ;; ;
"RTN","PXCEC800",4,0)
 Q
"RTN","PXCEC800",5,0)
 ;
"RTN","PXCEC800",6,0)
GET800 ;Used by the Service Connected Conditions
"RTN","PXCEC800",7,0)
 N PXCEINDX,PXOUT
"RTN","PXCEC800",8,0)
 N PXBDATA,PXLOC,PXAPTDT,PXDFN
"RTN","PXCEC800",9,0)
 I $O(^SCE("AVSIT",PXCEVIEN,0)) D CLASS^PXBAPI21("","","","",PXCEVIEN)
"RTN","PXCEC800",10,0)
 I '$O(^SCE("AVSIT",PXCEVIEN,0)) D
"RTN","PXCEC800",11,0)
 . S PXAPTDT=+^AUPNVSIT(PXCEVIEN,0)
"RTN","PXCEC800",12,0)
 . S PXDFN=$P(^AUPNVSIT(PXCEVIEN,0),"^",5)
"RTN","PXCEC800",13,0)
 . S PXLOC=$P(^AUPNVSIT(PXCEVIEN,0),"^",22)
"RTN","PXCEC800",14,0)
 . D CLASS^PXBAPI21("",PXDFN,PXAPTDT,PXLOC,"")
"RTN","PXCEC800",15,0)
 F PXCEINDX=1:1:7 I $G(PXBDATA("ERR",PXCEINDX))=4 S PXOUT=PXBDATA("ERR",PXCEINDX)
"RTN","PXCEC800",16,0)
 I $D(PXOUT) S PXCEEND=1 Q  ;for visit and required fields
"RTN","PXCEC800",17,0)
 S $P(PXCEAFTR(800),"^",1)=$P($G(PXBDATA(3)),"^",2)
"RTN","PXCEC800",18,0)
 S $P(PXCEAFTR(800),"^",2)=$P($G(PXBDATA(1)),"^",2) S:$P(PXCEAFTR(800),"^",2)="" $P(PXCEAFTR(800),"^",2)="@"
"RTN","PXCEC800",19,0)
 S $P(PXCEAFTR(800),"^",3)=$P($G(PXBDATA(2)),"^",2) S:$P(PXCEAFTR(800),"^",3)="" $P(PXCEAFTR(800),"^",3)="@"
"RTN","PXCEC800",20,0)
 S $P(PXCEAFTR(800),"^",4)=$P($G(PXBDATA(4)),"^",2) S:$P(PXCEAFTR(800),"^",4)="" $P(PXCEAFTR(800),"^",4)="@"
"RTN","PXCEC800",21,0)
 S $P(PXCEAFTR(800),"^",5)=$P($G(PXBDATA(5)),"^",2)
"RTN","PXCEC800",22,0)
 S $P(PXCEAFTR(800),"^",6)=$P($G(PXBDATA(6)),"^",2)
"RTN","PXCEC800",23,0)
 S $P(PXCEAFTR(800),"^",7)=$P($G(PXBDATA(7)),"^",2)
"RTN","PXCEC800",24,0)
 Q
"RTN","PXCEC800",25,0)
 ;
"RTN","PXCECCLS")
0^4^B19236518
"RTN","PXCECCLS",1,0)
PXCECCLS ;WASH/BDB - UPDATE ENCOUNTER SC/EI FROM DX SC/EI ;5/18/05 1:31pm
"RTN","PXCECCLS",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**124,174**;Feb 12, 2004
"RTN","PXCECCLS",3,0)
 Q
"RTN","PXCECCLS",4,0)
 ;
"RTN","PXCECCLS",5,0)
VST(PXVIEN) ;
"RTN","PXCECCLS",6,0)
 ;  VISITIEN  Pointer to the Visit (#9000010)
"RTN","PXCECCLS",7,0)
 ;  Loop over the diagnoses SC/EI, auto-populate the encounter level
"RTN","PXCECCLS",8,0)
 ;   SC/EI based on the following rule:
"RTN","PXCECCLS",9,0)
 ;   
"RTN","PXCECCLS",10,0)
 ;   If the SC/EI for at least one ICD-9 is "Yes"the Encounter Level
"RTN","PXCECCLS",11,0)
 ;    SC/EI will automatically be set to "Yes" regardless if the
"RTN","PXCECCLS",12,0)
 ;     Encounter Level SC (or EI) was previously populated ("Yes", "No" or Null).
"RTN","PXCECCLS",13,0)
 ;            Note: This presumes that a single ICD-9 with SC/EI determination of "Yes"
"RTN","PXCECCLS",14,0)
 ;        makes the Encounter SC/EI determination "Yes"
"RTN","PXCECCLS",15,0)
 ;        
"RTN","PXCECCLS",16,0)
 ;       If the SC/EI for all ICD-9s are "No" the Encounter Level SC/EI will
"RTN","PXCECCLS",17,0)
 ;       automatically be set to "No" regardless if the Encounter Level SC/EI
"RTN","PXCECCLS",18,0)
 ;       was previously populated ("Yes", "No" or Null).
"RTN","PXCECCLS",19,0)
 ;            Note: This presumes that an Encounter SC/EI can not be "Yes" if all
"RTN","PXCECCLS",20,0)
 ;        ICD-9s have an SC/EI determination of "No".
"RTN","PXCECCLS",21,0)
 ;        
"RTN","PXCECCLS",22,0)
 ;       If at least one ICD-9 is missing SC/EI determination and none of the
"RTN","PXCECCLS",23,0)
 ;       other ICD-9s SC/EI determination is "Yes" do not change the SC/EI
"RTN","PXCECCLS",24,0)
 ;       determination of the Encounter level.
"RTN","PXCECCLS",25,0)
 ;                 Note: This presumes that if one or more ICD-9s do not have an SC/EI
"RTN","PXCECCLS",26,0)
 ;       determination then no inference can be made upon the Encounter Level SC
"RTN","PXCECCLS",27,0)
 ;       determination.  In addition if another package populates SC/EI
"RTN","PXCECCLS",28,0)
 ;       directly do not overwrite that value in the case of incomplete
"RTN","PXCECCLS",29,0)
 ;       data.  In other words do not set the Encounter Level to Null.
"RTN","PXCECCLS",30,0)
 ;       
"RTN","PXCECCLS",31,0)
 ;       VARIABLE LIST TO AUTO POPULATE THE ENCOUNTER LEVEL SC/EI
"RTN","PXCECCLS",32,0)
 ;       For each SC/EI in the PXSCEINW string:
"RTN","PXCECCLS",33,0)
 ;                =1  SC/EI Classification determined by the DX's is found to be "Yes"
"RTN","PXCECCLS",34,0)
 ;                =0  SC/EI Classification determined by the DX's is found to be "NO"
"RTN","PXCECCLS",35,0)
 ;                =-1 SC/EI can not be determined by the DX's
"RTN","PXCECCLS",36,0)
 ;                ="" Do not ask the SC/EI questions
"RTN","PXCECCLS",37,0)
 ;       
"RTN","PXCECCLS",38,0)
 ;       Edit flag for SC: SCEF, AO: AOEF, IR: IREF, EC:ECEF, MST: MSTEF, HNC: HNCEF
"RTN","PXCECCLS",39,0)
 ;           , CV: CVEF  - Used in Visit File Filing - See ^VSITFLD
"RTN","PXCECCLS",40,0)
 ;           example below          
"RTN","PXCECCLS",41,0)
 ;       VIST("SCEF")=1  SC/EI Classification determined by the DX's - do not ask SC/EI
"RTN","PXCECCLS",42,0)
 ;       VIST("SCEF")=0  SC/EI Classification undetermined by the DX's - ask SC/EI
"RTN","PXCECCLS",43,0)
 ;       etc.
"RTN","PXCECCLS",44,0)
 ;             
"RTN","PXCECCLS",45,0)
 N PX0,PXDFN,PXDT,PXCL,PXPOV,VSIT,PXDFN,PXSCEINW,PXSCEI,PXPOV800
"RTN","PXCECCLS",46,0)
 S PXSCEINW="^^^^^^"
"RTN","PXCECCLS",47,0)
 ; Set encounter data in ^TMP
"RTN","PXCECCLS",48,0)
 D ENCEVENT^PXKENC(PXVIEN)
"RTN","PXCECCLS",49,0)
 ; Get classifications
"RTN","PXCECCLS",50,0)
 S PXDFN=$P($G(^TMP("PXKENC",$J,PXVIEN,"VST",PXVIEN,0)),U,5)
"RTN","PXCECCLS",51,0)
 Q:'PXDFN
"RTN","PXCECCLS",52,0)
 ;Loop over DX's
"RTN","PXCECCLS",53,0)
 S PXPOV="" F  S PXPOV=$O(^TMP("PXKENC",$J,PXVIEN,"POV",PXPOV)) Q:'PXPOV  D
"RTN","PXCECCLS",54,0)
 .S PXPOV800=$G(^(PXPOV,800))
"RTN","PXCECCLS",55,0)
 .I '($P(PXSCEINW,U,1)="1")  S:$P(PXPOV800,U,1)="1" $P(PXSCEINW,U,1)="1" I '($P(PXSCEINW,U,1)<0)  S:$P(PXPOV800,U,1)="" $P(PXSCEINW,U,1)="-1" S:$P(PXPOV800,U,1)="0" $P(PXSCEINW,U,1)="0"
"RTN","PXCECCLS",56,0)
 .I '($P(PXSCEINW,U,2)="1")  S:$P(PXPOV800,U,2)="1" $P(PXSCEINW,U,2)="1" I '($P(PXSCEINW,U,2)<0)  S:$P(PXPOV800,U,2)="" $P(PXSCEINW,U,2)="-1" S:$P(PXPOV800,U,2)="0" $P(PXSCEINW,U,2)="0"
"RTN","PXCECCLS",57,0)
 .I '($P(PXSCEINW,U,3)="1")  S:$P(PXPOV800,U,3)="1" $P(PXSCEINW,U,3)="1" I '($P(PXSCEINW,U,3)<0)  S:$P(PXPOV800,U,3)="" $P(PXSCEINW,U,3)="-1" S:$P(PXPOV800,U,3)="0" $P(PXSCEINW,U,3)="0"
"RTN","PXCECCLS",58,0)
 .I '($P(PXSCEINW,U,4)="1")  S:$P(PXPOV800,U,4)="1" $P(PXSCEINW,U,4)="1" I '($P(PXSCEINW,U,4)<0)  S:$P(PXPOV800,U,4)="" $P(PXSCEINW,U,4)="-1" S:$P(PXPOV800,U,4)="0" $P(PXSCEINW,U,4)="0"
"RTN","PXCECCLS",59,0)
 .I '($P(PXSCEINW,U,5)="1")  S:$P(PXPOV800,U,5)="1" $P(PXSCEINW,U,5)="1" I '($P(PXSCEINW,U,5)<0)  S:$P(PXPOV800,U,5)="" $P(PXSCEINW,U,5)="-1" S:$P(PXPOV800,U,5)="0" $P(PXSCEINW,U,5)="0"
"RTN","PXCECCLS",60,0)
 .I '($P(PXSCEINW,U,6)="1")  S:$P(PXPOV800,U,6)="1" $P(PXSCEINW,U,6)="1" I '($P(PXSCEINW,U,6)<0)  S:$P(PXPOV800,U,6)="" $P(PXSCEINW,U,6)="-1" S:$P(PXPOV800,U,6)="0" $P(PXSCEINW,U,6)="0"
"RTN","PXCECCLS",61,0)
 .I '($P(PXSCEINW,U,7)="1")  S:$P(PXPOV800,U,7)="1" $P(PXSCEINW,U,7)="1" I '($P(PXSCEINW,U,7)<0)  S:$P(PXPOV800,U,7)="" $P(PXSCEINW,U,7)="-1" S:$P(PXPOV800,U,7)="0" $P(PXSCEINW,U,7)="0"
"RTN","PXCECCLS",62,0)
 S VSIT("IEN")=PXVIEN
"RTN","PXCECCLS",63,0)
 S VSIT("SCEF")=0,VSIT("AOEF")=0,VSIT("IREF")=0,VSIT("ECEF")=0,VSIT("MSTEF")=0,VSIT("HNCEF")=0,VSIT("CVEF")=0
"RTN","PXCECCLS",64,0)
 S:$P(PXSCEINW,U,1)="0"!($P(PXSCEINW,U,1)="1") VSIT("SC")=$P(PXSCEINW,U,1),VSIT("SCEF")=1
"RTN","PXCECCLS",65,0)
 S:$P(PXSCEINW,U,2)="0"!($P(PXSCEINW,U,2)="1") VSIT("AO")=$P(PXSCEINW,U,2),VSIT("AOEF")=1 S:$G(VSIT("SC"))=1 VSIT("AO")="@"
"RTN","PXCECCLS",66,0)
 S:$P(PXSCEINW,U,3)="0"!($P(PXSCEINW,U,3)="1") VSIT("IR")=$P(PXSCEINW,U,3),VSIT("IREF")=1 S:$G(VSIT("SC"))=1 VSIT("IR")="@"
"RTN","PXCECCLS",67,0)
 S:$P(PXSCEINW,U,4)="0"!($P(PXSCEINW,U,4)="1") VSIT("EC")=$P(PXSCEINW,U,4),VSIT("ECEF")=1 S:$G(VSIT("SC"))=1 VSIT("EC")="@"
"RTN","PXCECCLS",68,0)
 S:$P(PXSCEINW,U,5)="0"!($P(PXSCEINW,U,5)="1") VSIT("MST")=$P(PXSCEINW,U,5),VSIT("MSTEF")=1
"RTN","PXCECCLS",69,0)
 S:$P(PXSCEINW,U,6)="0"!($P(PXSCEINW,U,6)="1") VSIT("HNC")=$P(PXSCEINW,U,6),VSIT("HNCEF")=1
"RTN","PXCECCLS",70,0)
 S:$P(PXSCEINW,U,7)="0"!($P(PXSCEINW,U,7)="1") VSIT("CV")=$P(PXSCEINW,U,7),VSIT("CVEF")=1
"RTN","PXCECCLS",71,0)
 D UPD^VSIT
"RTN","PXCECCLS",72,0)
 K ^TMP("PXKENC",$J)
"RTN","PXCECCLS",73,0)
 Q
"RTN","PXKMAIN")
0^1^B42253213
"RTN","PXKMAIN",1,0)
PXKMAIN ;ISL/JVS,ISA/Zoltan - Main Routine for Data Capture ;9/11/98
"RTN","PXKMAIN",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,59,73,88,69,117,130,124,174**;Aug 12, 1996
"RTN","PXKMAIN",3,0)
 ;+This routine is responsible for:
"RTN","PXKMAIN",4,0)
 ;+
"RTN","PXKMAIN",5,0)
 ;+LOCAL VARIABLE LIST:
"RTN","PXKMAIN",6,0)
 ;+ PXP59LOC = LOCK name (introduced in patch PX*1.0*59).
"RTN","PXKMAIN",7,0)
 ;+ PXFG     = Stop flag with duplicate of delete
"RTN","PXKMAIN",8,0)
 ;+ PXKAFT   = After node
"RTN","PXKMAIN",9,0)
 ;+ PXKBEF   = Before node
"RTN","PXKMAIN",10,0)
 ;+ PXKAV    = Pieces from the after node
"RTN","PXKMAIN",11,0)
 ;+ PXKBV    = Pieces from the before node
"RTN","PXKMAIN",12,0)
 ;+ PXKERROR = Set when there is an error
"RTN","PXKMAIN",13,0)
 ;+ PXKFGAD  = ADD flag
"RTN","PXKMAIN",14,0)
 ;+ PXKFGED  = EDIT flag
"RTN","PXKMAIN",15,0)
 ;+ PXKFGDE  = DELETE flag
"RTN","PXKMAIN",16,0)
 ;+ PXKSEQ   = Sequence number in PXK tmp global
"RTN","PXKMAIN",17,0)
 ;+ PXKCAT   = Category of entry (CPT,MSR,VST...)
"RTN","PXKMAIN",18,0)
 ;+ PXKREF   = Root of temp global
"RTN","PXKMAIN",19,0)
 ;+ PXKPIEN  = IEN of v file or the visit file
"RTN","PXKMAIN",20,0)
 ;+ PXKREF   = The original reference we are ordering off of
"RTN","PXKMAIN",21,0)
 ;+ PXKRT    = name of the node in the v file
"RTN","PXKMAIN",22,0)
 ;+ PXKRTN   = routine name for the "f"ile routine
"RTN","PXKMAIN",23,0)
 ;+ PXKSOR   = the data source for this entry
"RTN","PXKMAIN",24,0)
 ;+ PXKSUB   = the subscript the data is located on the the v file
"RTN","PXKMAIN",25,0)
 ;+ PXKVST   = the visit IEN
"RTN","PXKMAIN",26,0)
 ;+ PXKDUZ   = the DUZ of the user
"RTN","PXKMAIN",27,0)
 ;+ *PXKHLR* = A variable set by calling routine so that duplicate
"RTN","PXKMAIN",28,0)
 ;+            PXKERROR messages aren't produced.
"RTN","PXKMAIN",29,0)
 ;
"RTN","PXKMAIN",30,0)
 W !,"This is not an entry point" Q
"RTN","PXKMAIN",31,0)
EN1 ;+Main entry point to read ^TMP("PXK", Global
"RTN","PXKMAIN",32,0)
 ;+ Partial ^TMP Global Structure when called:
"RTN","PXKMAIN",33,0)
 ;+ ^TMP("PXK",$J,"SOR") = Source ien
"RTN","PXKMAIN",34,0)
 ;+
"RTN","PXKMAIN",35,0)
 ;+ ^TMP("PXK",$J,"VST",1,0,"BEFORE") = the 0-node of the visit file
"RTN","PXKMAIN",36,0)
 ;+ ^TMP("PXK",$J,"VST",1,0,"AFTER") = 0-node after changes.
"RTN","PXKMAIN",37,0)
 ;+ ^TMP("PXK",$J,"VST",provider counter,"IEN") = ""
"RTN","PXKMAIN",38,0)
 ;+
"RTN","PXKMAIN",39,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,0,"BEFORE") = ""
"RTN","PXKMAIN",40,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,0,"AFTER") = Provider id^DFN^Visitien^'P' or 'S' for primary/secondary
"RTN","PXKMAIN",41,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,"IEN") = ""
"RTN","PXKMAIN",42,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,"BEFORE") = ""
"RTN","PXKMAIN",43,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,"AFTER") = ^Package ien^Source ien
"RTN","PXKMAIN",44,0)
 ;+
"RTN","PXKMAIN",45,0)
 N PXP59LOC
"RTN","PXKMAIN",46,0)
 D LOCK
"RTN","PXKMAIN",47,0)
 K PXKERROR
"RTN","PXKMAIN",48,0)
 I '$G(PXKDUZ) D
"RTN","PXKMAIN",49,0)
 . I $G(DUZ) S PXKDUZ=DUZ
"RTN","PXKMAIN",50,0)
 . E  S PXKDUZ=.5
"RTN","PXKMAIN",51,0)
 D VST
"RTN","PXKMAIN",52,0)
 I $D(PXP59LOC) D UNLOCK
"RTN","PXKMAIN",53,0)
 Q
"RTN","PXKMAIN",54,0)
VST ;--Check for visit node and get one created or quit.
"RTN","PXKMAIN",55,0)
 I '$G(^TMP("PXK",$J,"VST",1,"IEN")) D
"RTN","PXKMAIN",56,0)
 .D VSIT^PXKVST
"RTN","PXKMAIN",57,0)
 I +$G(^TMP("PXK",$J,"VST",1,"IEN"))=-1 S PXKERROR("VISIT")="Visit Tracking could not get a visit." Q
"RTN","PXKMAIN",58,0)
 I +$G(^TMP("PXK",$J,"VST",1,"IEN"))=-2 S PXKERROR("VISIT")="PCE is not activated in Visit Tracking Parameters and thus cannot create visits." Q
"RTN","PXKMAIN",59,0)
 I +$G(^TMP("PXK",$J,"VST",1,"IEN"))<1 S PXKERROR("VISIT")="Did not get a visit^"_$G(^TMP("PXK",$J,"VST",1,"IEN")) Q
"RTN","PXKMAIN",60,0)
 ;
"RTN","PXKMAIN",61,0)
NEW ;--New variables and set main variables
"RTN","PXKMAIN",62,0)
 N PXKDFN,PXKSOR,PXKVST,PXKSEQ,PXFG,PXKAFT,PXKBEF,PXKAUDIT
"RTN","PXKMAIN",63,0)
 N PXKCAT,PXKER,PXKFGAD,PXKFGED,PXKFGDE,PXKNOD,PXKPCE
"RTN","PXKMAIN",64,0)
 N PXKPIEN,PXKREF,PXKRTN,PXKSORR,PXKSUB,PXKVCAT
"RTN","PXKMAIN",65,0)
 N PXKPTR,PXDFG,PX,PXJJJ,PXKAFT8,PXKAFTR,PXKGN,PXKN,PXKP
"RTN","PXKMAIN",66,0)
 N PXKRRT,PXKVRTN,PXKRT,PXKFVDLM,TMPPX
"RTN","PXKMAIN",67,0)
PRVTYPE ;---DO PROVIDER TYPE--PXKMAIN2
"RTN","PXKMAIN",68,0)
 D PRVTYPE^PXKMAIN2
"RTN","PXKMAIN",69,0)
 ;
"RTN","PXKMAIN",70,0)
SET ;--SET VARIABLES NECESSARY
"RTN","PXKMAIN",71,0)
 ;'DA' should not be defined at this point
"RTN","PXKMAIN",72,0)
 N DA ;PX*1.0*117
"RTN","PXKMAIN",73,0)
 ;
"RTN","PXKMAIN",74,0)
 S PXFG=0,TMPPX="^",PXKLAYGO="",PXDFG=0
"RTN","PXKMAIN",75,0)
SOURCE S PXKSOR=$G(^TMP("PXK",$J,"SOR")) D  Q:$D(PXKERROR("SOURCE"))
"RTN","PXKMAIN",76,0)
 .S PXKCO("SOR")=PXKSOR
"RTN","PXKMAIN",77,0)
 .I $D(PXKSOR)']"" S PXKERROR("SOURCE")="" Q
"RTN","PXKMAIN",78,0)
VISIT S (PXKVST,VSIT("IEN"))=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXKMAIN",79,0)
ORDER ;--$ORDER Through the ^TMP("PXK", global setting variables
"RTN","PXKMAIN",80,0)
 S PXKREF="^TMP(""PXK"",$J)"
"RTN","PXKMAIN",81,0)
CATEG S PXKCAT="" F  S (PXKCAT,PXKVCAT)=$O(@PXKREF@(PXKCAT)) Q:PXKCAT=""  D
"RTN","PXKMAIN",82,0)
 .I PXKCAT="VST" S PXKVCAT="SIT"
"RTN","PXKMAIN",83,0)
 .S PXKRTN="PXKF"_PXKCAT
"RTN","PXKMAIN",84,0)
 .S X=PXKRTN X ^%ZOSF("TEST") Q:'$T
"RTN","PXKMAIN",85,0)
SEQUE .S PXKSEQ=0 F  S PXKSEQ=$O(@PXKREF@(PXKCAT,PXKSEQ)) K PXKAV,PXKBV S PXFG=0 Q:'PXKSEQ  D
"RTN","PXKMAIN",86,0)
 ..S PXKPIEN=$G(@PXKREF@(PXKCAT,PXKSEQ,"IEN")),(PXKFGAD,PXKFGDE,PXKFGED,PXDFG)=0
"RTN","PXKMAIN",87,0)
SUBSCR ..S PXKSUB="" F  S PXKSUB=$O(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB)) Q:PXKSUB["IEN"  Q:PXFG=1  Q:PXDFG=1  D
"RTN","PXKMAIN",88,0)
AFTER ...S PXKAFT(PXKSUB)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,"AFTER"))
"RTN","PXKMAIN",89,0)
BEFORE ...S PXKBEF(PXKSUB)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,"BEFORE"))
"RTN","PXKMAIN",90,0)
 ...I PXKCAT="CPT",PXKSUB=1 D SUBSCR^PXKMOD
"RTN","PXKMAIN",91,0)
 ...D LOOP^PXKMAIN1 D ERROR^PXKMAIN1 S PXDFG=0 I $G(PXKAV(0,1))["@"!('$D(PXKAV(0,1))) S PXKAFT(PXKSUB)="" K PXKAV(0) S PXDFG=1
"RTN","PXKMAIN",92,0)
 ..Q:PXFG=1
"RTN","PXKMAIN",93,0)
 ..I $D(PXKAV),'$D(PXKBV) S PXKSORR=PXKSOR_"-A "_PXKDUZ,PXKFGAD=1 I PXKCAT["VST" S PXKFGAD=0
"RTN","PXKMAIN",94,0)
 ..I '$D(PXKAV),$D(PXKBV) S PXKFGDE=1,PXKFVDLM="" D
"RTN","PXKMAIN",95,0)
 ...S PXKRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_")" I $D(@PXKRT) D DELETE^PXKMAIN1,EN1^PXKMASC S PXFG=1 K PXKRT Q
"RTN","PXKMAIN",96,0)
 ..I 'PXKFGAD,'PXKFGDE D
"RTN","PXKMAIN",97,0)
 ...I PXKCAT="VST" D CQDEL
"RTN","PXKMAIN",98,0)
 ...D CLEAN^PXKMAIN1
"RTN","PXKMAIN",99,0)
 ...I $D(PXKAV) S PXKSORR=PXKSOR_"-E "_PXKDUZ,PXKFGED=1 I PXKCAT="VST",'$D(PXKBV),$D(PXKVST) S PXKFGED=0
"RTN","PXKMAIN",100,0)
 ..I 'PXKFGAD,'PXKFGDE,'PXKFGED,PXKCAT["VST" D EN1^PXKMASC
"RTN","PXKMAIN",101,0)
 ..I PXKFGAD=1 D  Q:PXFG
"RTN","PXKMAIN",102,0)
 ...D ERROR^PXKMAIN1
"RTN","PXKMAIN",103,0)
 ...I $D(PXKERROR(PXKCAT,PXKSEQ)) S PXFG=1
"RTN","PXKMAIN",104,0)
 ...D:'PXFG DUP^PXKMAIN1
"RTN","PXKMAIN",105,0)
 ...I PXFG=1 D  Q
"RTN","PXKMAIN",106,0)
 ....Q:PXKCAT'="CPT"
"RTN","PXKMAIN",107,0)
 ....I $G(@PXKREF@(PXKCAT,PXKSEQ,"IEN"))]"" D REMOVE^PXCEVFIL(@PXKREF@(PXKCAT,PXKSEQ,"IEN"))
"RTN","PXKMAIN",108,0)
 ...D:'PXKPIEN FILE^PXKMAIN1
"RTN","PXKMAIN",109,0)
 ...S:'$G(DA) DA=PXKPIEN
"RTN","PXKMAIN",110,0)
 ...D AUD2^PXKMAIN1,DRDIE^PXKMAIN1,EN1^PXKMASC
"RTN","PXKMAIN",111,0)
 ..I PXKFGED=1,PXKCAT'="VST" S PXKRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_")" Q:'$D(@PXKRT)  S DA=PXKPIEN D DUP^PXKMAIN1 Q:PXFG=1  D AUD12^PXKMAIN1,DRDIE^PXKMAIN1,EN1^PXKMASC
"RTN","PXKMAIN",112,0)
 ..I PXKFGED=1,PXKCAT="VST" S PXKRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_")" Q:'$D(@PXKRT)  S DA=PXKPIEN D DUP^PXKMAIN1 Q:PXFG=1  D DRDIE^PXKMAIN1,EN1^PXKMASC
"RTN","PXKMAIN",113,0)
 ..D SPEC^PXKMAIN2
"RTN","PXKMAIN",114,0)
 ..K PXKAFT,PXKBEF
"RTN","PXKMAIN",115,0)
 I $D(^TMP("PXKSAVE",$J)) D RECALL^PXKMAIN2
"RTN","PXKMAIN",116,0)
 ;PX*1*124  AUTO-POPULATE THE ENCOUNTER SC/EI BASED ON THE ENCOUNTER DX'S
"RTN","PXKMAIN",117,0)
 I $G(PXKPIEN)]"" D VST^PXCECCLS(PXKPIEN) ;PX*1.0*174
"RTN","PXKMAIN",118,0)
 D EXIT
"RTN","PXKMAIN",119,0)
 Q
"RTN","PXKMAIN",120,0)
EXIT ;--EXIT
"RTN","PXKMAIN",121,0)
 I $D(PXKFVDLM) D MODIFIED^VSIT(PXKVST)
"RTN","PXKMAIN",122,0)
 K PXKPXD,TMPPX
"RTN","PXKMAIN",123,0)
 K DA,DR,PXKI,PXKJ,PXKLAYGO,PXKDUZ,PXKAFT8,PXKAFTR,VSIT("IEN") Q
"RTN","PXKMAIN",124,0)
EVENT ;--ENTRY POINT TO POST EXECUTE PCE'S EVENT
"RTN","PXKMAIN",125,0)
 ;Setting the variable PXKNOEVT=1 will stop the event from being
"RTN","PXKMAIN",126,0)
 ;fired off whenever any data is sent into PCE
"RTN","PXKMAIN",127,0)
 ;
"RTN","PXKMAIN",128,0)
 I $G(PXKNOEVT) K ^TMP("PXKCO",$J) Q
"RTN","PXKMAIN",129,0)
 N PXP59LOC
"RTN","PXKMAIN",130,0)
 D LOCK
"RTN","PXKMAIN",131,0)
 D EVENT^PXKMASC
"RTN","PXKMAIN",132,0)
 I $D(PXP59LOC) D UNLOCK
"RTN","PXKMAIN",133,0)
 Q
"RTN","PXKMAIN",134,0)
LOCK ; Lock (results in PXP59LOC)--Patch PX*1.0*59.
"RTN","PXKMAIN",135,0)
 N PX0,PXWHO,PXWHERE,PXWHEN,PXEXIT,PXVISIT
"RTN","PXKMAIN",136,0)
 S PXEXIT=1,(PXWHO,PXWHERE,PXWHEN)=""
"RTN","PXKMAIN",137,0)
 ;First case: new visit data being saved.
"RTN","PXKMAIN",138,0)
 I 11[$D(^TMP("PXK",$J,"VST",1,0,"AFTER")) D
"RTN","PXKMAIN",139,0)
 . S PX0=^TMP("PXK",$J,"VST",1,0,"AFTER")
"RTN","PXKMAIN",140,0)
 . D L2
"RTN","PXKMAIN",141,0)
 ;Second case: use existing visit data.
"RTN","PXKMAIN",142,0)
 I 11[$D(^TMP("PXK",$J,"VST",1,"IEN")) D
"RTN","PXKMAIN",143,0)
 . S PXVISIT=+^TMP("PXK",$J,"VST",1,"IEN")
"RTN","PXKMAIN",144,0)
 . Q:'PXVISIT
"RTN","PXKMAIN",145,0)
 . Q:$D(^AUPNVSIT(PXVISIT,0))[0
"RTN","PXKMAIN",146,0)
 . S PX0=^AUPNVSIT(PXVISIT,0)
"RTN","PXKMAIN",147,0)
 . D L2
"RTN","PXKMAIN",148,0)
 ;Third case: Uses "PXKCO" instead of "PXK".
"RTN","PXKMAIN",149,0)
 I PXEXIT,$D(^TMP("PXKCO",$J)) D
"RTN","PXKMAIN",150,0)
 . S PXVISIT=$O(^TMP("PXKCO",$J,0))
"RTN","PXKMAIN",151,0)
 . Q:'PXVISIT
"RTN","PXKMAIN",152,0)
 . S PX0=$G(^TMP("PXKCO",$J,PXVISIT,"VST",PXVISIT,0,"AFTER"))
"RTN","PXKMAIN",153,0)
 . Q:PX0=""
"RTN","PXKMAIN",154,0)
 . D L2
"RTN","PXKMAIN",155,0)
 ;Fourth case: Uses "PXKENC" instead of "PXK".
"RTN","PXKMAIN",156,0)
 I PXEXIT,$D(^TMP("PXKENC",$J)) D
"RTN","PXKMAIN",157,0)
 . S PXVISIT=$O(^TMP("PXKENC",$J,0))
"RTN","PXKMAIN",158,0)
 . Q:'PXVISIT
"RTN","PXKMAIN",159,0)
 . S PX0=$G(^TMP("PXKENC",$J,PXVISIT,"VST",PXVISIT,0)) ; Look at ^TMP("PXKENC",$J
"RTN","PXKMAIN",160,0)
 . Q:PX0=""
"RTN","PXKMAIN",161,0)
 . D L2
"RTN","PXKMAIN",162,0)
 I PXEXIT Q  ; Unable to obtain non-null subscripts.
"RTN","PXKMAIN",163,0)
 S PXP59LOC=$NA(^PXLOCK(PXWHO,PXWHERE,PXWHEN))
"RTN","PXKMAIN",164,0)
 L +@PXP59LOC:300
"RTN","PXKMAIN",165,0)
 E  K PXP59LOC ; Lock was unsuccessful.
"RTN","PXKMAIN",166,0)
 Q
"RTN","PXKMAIN",167,0)
L2 ; Get values from visit 0 node (PX0).
"RTN","PXKMAIN",168,0)
 I 'PXWHO S PXWHO=$P(PX0,U,5)
"RTN","PXKMAIN",169,0)
 I 'PXWHEN S PXWHEN=$P(PX0,U,1)
"RTN","PXKMAIN",170,0)
 I 'PXWHERE S PXWHERE=+$P(PX0,U,22)
"RTN","PXKMAIN",171,0)
 I PXWHO,PXWHEN S PXEXIT=0
"RTN","PXKMAIN",172,0)
 Q
"RTN","PXKMAIN",173,0)
UNLOCK ; Unlock (use info in PXP59LOC)--Patch PX*1.0*59.
"RTN","PXKMAIN",174,0)
 L -@PXP59LOC
"RTN","PXKMAIN",175,0)
 Q
"RTN","PXKMAIN",176,0)
 ;
"RTN","PXKMAIN",177,0)
CQDEL ;Classification question deletion check
"RTN","PXKMAIN",178,0)
 I PXKCAT'="VST" Q
"RTN","PXKMAIN",179,0)
 S PXJ="" F  S PXJ=$O(PXKBV(800,PXJ)) Q:'PXJ  I PXKBV(800,PXJ)'="" I '$D(PXKAV(800,PXJ)) S PXKAV(800,PXJ)="@"
"RTN","PXKMAIN",180,0)
 K PXJ Q
"RTN","PXRRMDR")
0^2^B78875508
"RTN","PXRRMDR",1,0)
PXRRMDR ;BP/WLC - PCE Missing Data Report ;11 Feb 04  10:10 AM
"RTN","PXRRMDR",2,0)
 ;;1.0;PCE;**124,174**;FEB 11, 2004
"RTN","PXRRMDR",3,0)
 ; 04/11/05 WLC changed to check for AO, IR and EC, only if SC'=YES
"RTN","PXRRMDR",4,0)
 Q
"RTN","PXRRMDR",5,0)
 ;
"RTN","PXRRMDR",6,0)
EN N PX,PXPAGE,PXLOC,PXPROV,SDDIV,ZTSAVE,%DT,DIR,DTOUT,DUOUT,X,Y,POP,PXDT,PXDS,RPTYP,EDT,PAT,SSN,DT,TY,CBU,VDT,LOC,PROV,SORT,SORTHDR,CNT,PRIO
"RTN","PXRRMDR",7,0)
 S (POP,PXPAGE)=0
"RTN","PXRRMDR",8,0)
 K PXDS
"RTN","PXRRMDR",9,0)
 D HOME^%ZIS S:'$D(IOF) IOF=FF W @IOF,!!
"RTN","PXRRMDR",10,0)
 S X=$$CTR("PCE Missing Data Report")
"RTN","PXRRMDR",11,0)
 W !! D DATASRC^PXRRMDR1 G:POP EXIT   ; sets PXDS() PX*1.0*174
"RTN","PXRRMDR",12,0)
 W @IOF,!! S X=$$CTR("**** Date Range Selection ****")
"RTN","PXRRMDR",13,0)
 W !!! S %DT="AEPX",%DT("A")="Beginning date: " D ^%DT G:Y<1 EXIT S PX("BDT")=Y
"RTN","PXRRMDR",14,0)
EDT S %DT("A")="   Ending date: " W ! D ^%DT G:Y<1 EXIT
"RTN","PXRRMDR",15,0)
 I Y<PX("BDT") W !!,$C(7),"End date cannot be before begin date!",! G EDT
"RTN","PXRRMDR",16,0)
 S PX("EDT")=Y_.999999
"RTN","PXRRMDR",17,0)
 W @IOF,!! S X=$$CTR("*** Report Sort Selection ***")
"RTN","PXRRMDR",18,0)
 W !!! K DIR S SORTHDR="DATA SOURCE^CPT^ICD9^PATIENT^ELIGIBILITY"
"RTN","PXRRMDR",19,0)
 F LOOP=1:1:$L(SORTHDR,U) S DESC=$P(SORTHDR,U,LOOP) W !,"("_LOOP_")  "_DESC
"RTN","PXRRMDR",20,0)
 W ! S DIR(0)="N^^I X<1!(X>5) K X",DIR("A")="Enter number between 1 and 5" D ^DIR Q:$D(DIRUT)  S PXSRT=+X
"RTN","PXRRMDR",21,0)
 S DIR(0)="S^D:DETAILED REPORT;S:STATISTICS ONLY",DIR("A")="Select report type",DIR("B")="DETAILED REPORT" D ^DIR Q:$D(DIRUT)
"RTN","PXRRMDR",22,0)
 S RPTYP=Y
"RTN","PXRRMDR",23,0)
 W !!,"This report requires 132 column output.",!
"RTN","PXRRMDR",24,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","PXRRMDR",25,0)
 I $D(IO("Q")) D  G EXIT
"RTN","PXRRMDR",26,0)
 . S ZTRTN="RUN^PXRRMDR",ZTDESC="PCE MISSING DATA REPORT"
"RTN","PXRRMDR",27,0)
 . S ZTSAVE("PX*")=""
"RTN","PXRRMDR",28,0)
 . S ZTSAVE("RPTYP")="",ZTSAVE("SORTHDR")=""
"RTN","PXRRMDR",29,0)
 . D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","PXRRMDR",30,0)
 .K ZTSK,IO("Q"),ZTSAVE D HOME^%ZIS
"RTN","PXRRMDR",31,0)
 ;
"RTN","PXRRMDR",32,0)
RUN ;
"RTN","PXRRMDR",33,0)
 U IO
"RTN","PXRRMDR",34,0)
 K ^TMP("PXCRPW",$J),DIR S (PXOUT)=""
"RTN","PXRRMDR",35,0)
 N LOOP,PXDT,I,VSN,VISITS,CLASSIF
"RTN","PXRRMDR",36,0)
 S PXDT=(PX("BDT")-1)_.99999 K ^TMP("PXCRPW",$J)
"RTN","PXRRMDR",37,0)
 F  S PXDT=$O(^AUPNVSIT("ADEL",PXDT)) Q:PXDT>PX("EDT")!('PXDT)  D
"RTN","PXRRMDR",38,0)
 . S VSN=0 F  S VSN=$O(^AUPNVSIT("ADEL",PXDT,VSN)) Q:'VSN  D
"RTN","PXRRMDR",39,0)
 . . S VISITS=$P($G(^AUPNVSIT(VSN,812)),U,3) S:VISITS="" VISITS="Unknown"
"RTN","PXRRMDR",40,0)
 . . Q:'$D(PXDS(VISITS))
"RTN","PXRRMDR",41,0)
 . . D ENCEVENT^PXKENC(VSN,0)
"RTN","PXRRMDR",42,0)
 . . Q:$P($G(^TMP("PXKENC",$J,VSN,"VST",VSN,0)),U,7)="E"  ;Historic encounter PX*1.0*174
"RTN","PXRRMDR",43,0)
 . . Q:$$TESTPAT^VADPT($P($G(^TMP("PXKENC",$J,VSN,"VST",VSN,0)),U,5))  ;Test patient PX*1.0*174
"RTN","PXRRMDR",44,0)
 . . N OE S OE=$O(^SCE("AVSIT",VSN,0)) Q:'OE  Q:$P(^SCE(OE,0),U,6)]""  Q:$P(^SCE(OE,0),U,12)=12  ;Check if a child encounter, non-count  PX*1.0*174
"RTN","PXRRMDR",45,0)
 . . I '$D(^TMP("PXKENC",$J,VSN,"CPT")) D SET("Visit is missing a Procedure Code",1) Q
"RTN","PXRRMDR",46,0)
 . . I $$EXOE^SDCOU2(OE) Q  ;Determine if Encounter is Exempt from Outpatient Classifications and Diagnoses PX*1.0*174
"RTN","PXRRMDR",47,0)
 . . N I,J S (I,CNT)=0 F  S I=$O(^TMP("PXKENC",$J,VSN,"CPT",I)) Q:'I  D
"RTN","PXRRMDR",48,0)
 . . . S CNT=0 F J=5,9,10,11,12,13,14,15 I $P(^TMP("PXKENC",$J,VSN,"CPT",I,0),U,J) S CNT=CNT+1
"RTN","PXRRMDR",49,0)
 . . . I CNT=0 D SET("Procedure: "_$$DISPLYP($P(^TMP("PXKENC",$J,VSN,"CPT",I,0),U))_" missing assoc. DXs",1)
"RTN","PXRRMDR",50,0)
 . . S (I,J)=0 F  S I=$O(^TMP("PXKENC",$J,VSN,"POV",I)) Q:'I  D
"RTN","PXRRMDR",51,0)
 . . . K CLASSIF S DFN=$$GET1^DIQ(9000010,VSN_",",.05,"I")
"RTN","PXRRMDR",52,0)
 . . . I $$AO^SDCO22(DFN) S CLASSIF(1)=""
"RTN","PXRRMDR",53,0)
 . . . I $$IR^SDCO22(DFN) S CLASSIF(2)=""
"RTN","PXRRMDR",54,0)
 . . . I $$SC^SDCO22(DFN) S CLASSIF(3)=""
"RTN","PXRRMDR",55,0)
 . . . I $$EC^SDCO22(DFN) S CLASSIF(4)=""
"RTN","PXRRMDR",56,0)
 . . . I $$MST^SDCO22(DFN) S CLASSIF(5)=""
"RTN","PXRRMDR",57,0)
 . . . I $$HNC^SDCO22(DFN) S CLASSIF(6)=""
"RTN","PXRRMDR",58,0)
 . . . I +$P($$CVEDT^DGCV(DFN,PXDT),"^",3) S CLASSIF(7)=""
"RTN","PXRRMDR",59,0)
 . . . I $D(CLASSIF),'$D(^TMP("PXKENC",$J,VSN,"POV",I,800)) D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing SC/EI",1) Q
"RTN","PXRRMDR",60,0)
 . . . S J="" F  S J=$O(CLASSIF(J)) Q:'J  D
"RTN","PXRRMDR",61,0)
 . . . . N SCEIREC S SCEIREC=$G(^TMP("PXKENC",$J,VSN,"POV",I,800))
"RTN","PXRRMDR",62,0)
 . . . . I J=3&($P(SCEIREC,U,1)="") D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Service Connect.",1)
"RTN","PXRRMDR",63,0)
 . . . . I J=1&($P(SCEIREC,U,2)="")&($P(SCEIREC,U,1)'=1) D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Agent Orange",3)
"RTN","PXRRMDR",64,0)
 . . . . I J=2&($P(SCEIREC,U,3)="")&($P(SCEIREC,U,1)'=1) D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Ion. Rad.",4)
"RTN","PXRRMDR",65,0)
 . . . . I J=4&($P(SCEIREC,U,4)="")&($P(SCEIREC,U,1)'=1) D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Env. Contam.",5)
"RTN","PXRRMDR",66,0)
 . . . . I J=5&($P(SCEIREC,U,5)="") D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing MST",6)
"RTN","PXRRMDR",67,0)
 . . . . I J=6&($P(SCEIREC,U,6)="") D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Head/Neck Cancer",6)
"RTN","PXRRMDR",68,0)
 . . . . I J=7&($P(SCEIREC,U,7)="") D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Combat Vet",2)
"RTN","PXRRMDR",69,0)
 U IO D PRINT,^%ZISC
"RTN","PXRRMDR",70,0)
 K ^TMP("PXCRPW",$J)
"RTN","PXRRMDR",71,0)
EXIT Q
"RTN","PXRRMDR",72,0)
 ;
"RTN","PXRRMDR",73,0)
STOP ;Check for stop task request
"RTN","PXRRMDR",74,0)
 S:$G(ZTQUEUED) (PXOUT,ZTSTOP)=$S($$S^%ZTLOAD:1,1:0)
"RTN","PXRRMDR",75,0)
 Q
"RTN","PXRRMDR",76,0)
 ;
"RTN","PXRRMDR",77,0)
EVAL ;
"RTN","PXRRMDR",78,0)
 S PXLOC=$$GET1^DIQ(9000010,VSN_",",.22)
"RTN","PXRRMDR",79,0)
 S:$G(PXLOC)="" PXLOC="Unknown"
"RTN","PXRRMDR",80,0)
 N PXPTR S PXPTR=$O(^AUPNVPRV("AD",VSN,""))
"RTN","PXRRMDR",81,0)
 S PXPRV=$$GET1^DIQ(9000010.06,PXPTR_",",.01)
"RTN","PXRRMDR",82,0)
 S:$G(PRPRV)="" PXPRV="Unknown"
"RTN","PXRRMDR",83,0)
 Q
"RTN","PXRRMDR",84,0)
 ;
"RTN","PXRRMDR",85,0)
DISPLYDX(PXCEPOV)       ;
"RTN","PXRRMDR",86,0)
 N ICDSTR
"RTN","PXRRMDR",87,0)
 S ICDSTR=$$ICDDX^ICDCODE($P(PXCEPOV,"^"),$P(^AUPNVSIT(VSN,0),"^"))
"RTN","PXRRMDR",88,0)
 Q $P(ICDSTR,"^",2) ;code
"RTN","PXRRMDR",89,0)
 ;
"RTN","PXRRMDR",90,0)
DISPLYP(PXCECPT) ;
"RTN","PXRRMDR",91,0)
 N CPTSTR
"RTN","PXRRMDR",92,0)
 S CPTSTR=$$CPT^ICPTCOD($P(PXCECPT,U),$P(^AUPNVSIT(VSN,0),"^"))
"RTN","PXRRMDR",93,0)
 Q $P(CPTSTR,U,2) ;code
"RTN","PXRRMDR",94,0)
 ;
"RTN","PXRRMDR",95,0)
SET(SDX,PRIO) ;
"RTN","PXRRMDR",96,0)
 N A1
"RTN","PXRRMDR",97,0)
 S PRIO=$G(PRIO)
"RTN","PXRRMDR",98,0)
 D EVAL
"RTN","PXRRMDR",99,0)
 I PXSRT="" S A1="Unknown" D SET1(PRIO) Q
"RTN","PXRRMDR",100,0)
 D @PXSRT
"RTN","PXRRMDR",101,0)
 Q
"RTN","PXRRMDR",102,0)
 ;
"RTN","PXRRMDR",103,0)
1 ; Data Source
"RTN","PXRRMDR",104,0)
 S A1=$$GET1^DIQ(9000010,VSN_",",81203)
"RTN","PXRRMDR",105,0)
 S:A1="" A1=" "
"RTN","PXRRMDR",106,0)
 D SET1(PRIO)
"RTN","PXRRMDR",107,0)
 Q
"RTN","PXRRMDR",108,0)
 ;
"RTN","PXRRMDR",109,0)
2 ; CPT
"RTN","PXRRMDR",110,0)
 N CPT,CPT1
"RTN","PXRRMDR",111,0)
 S CPT=$O(^AUPNVCPT("AD",VSN,""))
"RTN","PXRRMDR",112,0)
 S:CPT'="" CPT1=$$GET1^DIQ(9000010.18,CPT_",",.01)
"RTN","PXRRMDR",113,0)
 S A1=$G(CPT1) D SET1(PRIO)
"RTN","PXRRMDR",114,0)
 Q
"RTN","PXRRMDR",115,0)
 ;
"RTN","PXRRMDR",116,0)
3 ; ICD-9
"RTN","PXRRMDR",117,0)
 N ICD,ICD9 S ICD="",ICD9="Unknown"
"RTN","PXRRMDR",118,0)
 F  S ICD=$O(^AUPNVPOV("AD",VSN,ICD)) Q:'ICD  D
"RTN","PXRRMDR",119,0)
 . S ICD9=$$GET1^DIQ(9000010.07,ICD,.01)
"RTN","PXRRMDR",120,0)
 S A1=ICD9 D SET1(PRIO)
"RTN","PXRRMDR",121,0)
 Q
"RTN","PXRRMDR",122,0)
 ;
"RTN","PXRRMDR",123,0)
4 S A1=$$GET1^DIQ(9000010,VSN_",",.05)
"RTN","PXRRMDR",124,0)
 S:A1="" A1="Unknown"
"RTN","PXRRMDR",125,0)
 D SET1(PRIO)
"RTN","PXRRMDR",126,0)
 Q
"RTN","PXRRMDR",127,0)
 ;
"RTN","PXRRMDR",128,0)
5 ; Eligibility
"RTN","PXRRMDR",129,0)
 S A1=$$GET1^DIQ(9000010,VSN_",",.21)
"RTN","PXRRMDR",130,0)
 S:A1="" A1="Unknown"
"RTN","PXRRMDR",131,0)
 D SET1(PRIO)
"RTN","PXRRMDR",132,0)
 Q
"RTN","PXRRMDR",133,0)
 ;
"RTN","PXRRMDR",134,0)
6 ; Default Sort
"RTN","PXRRMDR",135,0)
 S A1="Default" D SET1(PRIO)
"RTN","PXRRMDR",136,0)
 Q
"RTN","PXRRMDR",137,0)
 ;
"RTN","PXRRMDR",138,0)
SET1(PR) ; set temp global
"RTN","PXRRMDR",139,0)
 I A1="" S A1="Unknown"
"RTN","PXRRMDR",140,0)
 S Y=$$GET1^DIQ(9000010,VSN_",",.01) X ^DD("DD") S VDT=Y
"RTN","PXRRMDR",141,0)
 S:VDT="" VDT="Unknown" S VDT=$P(VDT,"@",1)
"RTN","PXRRMDR",142,0)
 S ^TMP("PXCRPW",$J,PXLOC,PXPRV,A1,VDT,VSN,PR,SDX)=VSN
"RTN","PXRRMDR",143,0)
 Q
"RTN","PXRRMDR",144,0)
PRINT ; Print Report
"RTN","PXRRMDR",145,0)
 N A,I,REC,TOT,TOTE,Y,SHDR
"RTN","PXRRMDR",146,0)
 N PAT,SSN,SSND,TYP,VIN,DEFD,ENCD
"RTN","PXRRMDR",147,0)
 K TOT,TOTE
"RTN","PXRRMDR",148,0)
 S DEFD="TOTAL DEFECTS FOR ",ENCD="TOTAL ENCOUNTERS FOR "
"RTN","PXRRMDR",149,0)
 S (TOT(1),TOTE(1))=0
"RTN","PXRRMDR",150,0)
 S LOC="" F  S LOC=$O(^TMP("PXCRPW",$J,LOC)),HDR=0 Q:LOC=""!(POP)  D
"RTN","PXRRMDR",151,0)
 . S (TOT(2),TOTE(2))=0
"RTN","PXRRMDR",152,0)
 . S PROV="" F  S PROV=$O(^TMP("PXCRPW",$J,LOC,PROV)) Q:PROV=""!(POP)  D
"RTN","PXRRMDR",153,0)
 . . S (TOT(3),TOTE(3))=0
"RTN","PXRRMDR",154,0)
 . . S SORT="" F  S SORT=$O(^TMP("PXCRPW",$J,LOC,PROV,SORT)) Q:SORT=""!(POP)  D
"RTN","PXRRMDR",155,0)
 . . . S (TOT(4),TOTE(4))=0
"RTN","PXRRMDR",156,0)
 . . . S VDT="" F  S VDT=$O(^TMP("PXCRPW",$J,LOC,PROV,SORT,VDT)) Q:VDT=""!(POP)  D
"RTN","PXRRMDR",157,0)
 . . . . S (TOT(5),TOTE(5))=0
"RTN","PXRRMDR",158,0)
 . . . . S VIN="" F  S VIN=$O(^TMP("PXCRPW",$J,LOC,PROV,SORT,VDT,VIN)),HDR1=0 Q:VIN=""!(POP)  D
"RTN","PXRRMDR",159,0)
 . . . . . S TOT(6)=0
"RTN","PXRRMDR",160,0)
 . . . . . S TOTE(5)=TOTE(5)+1
"RTN","PXRRMDR",161,0)
 . . . . . S PR="" F  S PR=$O(^TMP("PXCRPW",$J,LOC,PROV,SORT,VDT,VIN,PR)) Q:PR=""  D
"RTN","PXRRMDR",162,0)
 . . . . . . S SHDR=0
"RTN","PXRRMDR",163,0)
 . . . . . . S SDX="" F  S SDX=$O(^TMP("PXCRPW",$J,LOC,PROV,SORT,VDT,VIN,PR,SDX)) Q:SDX=""!(POP)  D
"RTN","PXRRMDR",164,0)
 . . . . . . . S REC=^TMP("PXCRPW",$J,LOC,PROV,SORT,VDT,VIN,PR,SDX)
"RTN","PXRRMDR",165,0)
 . . . . . . . S PAT=$$GET1^DIQ(9000010,REC_",",.05)
"RTN","PXRRMDR",166,0)
 . . . . . . . S SSN=$$GET1^DIQ(2,$$GET1^DIQ(9000010,REC_",",.05,"I"),.09)
"RTN","PXRRMDR",167,0)
 . . . . . . . S SSND=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,9)
"RTN","PXRRMDR",168,0)
 . . . . . . . S EDT=$$GET1^DIQ(9000010,REC_",",.01)
"RTN","PXRRMDR",169,0)
 . . . . . . . S TYP=$$GET1^DIQ(9000010,REC_",",15001)
"RTN","PXRRMDR",170,0)
 . . . . . . . S USR=$$GET1^DIQ(9000010,REC_",",.23)
"RTN","PXRRMDR",171,0)
 . . . . . . . D:HDR=0 HEADER Q:POP
"RTN","PXRRMDR",172,0)
 . . . . . . . I RPTYP="D" D
"RTN","PXRRMDR",173,0)
 . . . . . . . . I HDR1=0 D
"RTN","PXRRMDR",174,0)
 . . . . . . . . . W ! S $P(HLINE,"-",132)="" W HLINE
"RTN","PXRRMDR",175,0)
 . . . . . . . . . W !,$E(PAT,1,25),?26,SSND,?39,EDT,?59,$E(TYP,1,15),?75,$E(USR,1,15) S HDR1=1
"RTN","PXRRMDR",176,0)
 . . . . . . . . W ?94,$E(SDX,1,37),!
"RTN","PXRRMDR",177,0)
 . . . . . . . S TOT(6)=TOT(6)+1
"RTN","PXRRMDR",178,0)
 . . . . . . . I $Y>(IOSL-4) S HDR=0
"RTN","PXRRMDR",179,0)
 . . . . . . Q:POP
"RTN","PXRRMDR",180,0)
 . . . . . Q:POP
"RTN","PXRRMDR",181,0)
 . . . . . I $Y>(IOSL-4) D HEADER Q:POP
"RTN","PXRRMDR",182,0)
 . . . . . S SHDR=1
"RTN","PXRRMDR",183,0)
 . . . . . W:RPTYP="D" !?94,DEFD_TYP_":  ",TOT(6),!
"RTN","PXRRMDR",184,0)
 . . . . . S TOT(5)=TOT(5)+TOT(6)
"RTN","PXRRMDR",185,0)
 . . . . Q:POP
"RTN","PXRRMDR",186,0)
 . . . . W !?6,DEFD_VDT_":  ",TOT(5)
"RTN","PXRRMDR",187,0)
 . . . . W !?6,ENCD_VDT_":  ",TOTE(5)
"RTN","PXRRMDR",188,0)
 . . . . S TOT(4)=TOT(4)+TOT(5)
"RTN","PXRRMDR",189,0)
 . . . . S TOTE(4)=TOTE(4)+TOTE(5)
"RTN","PXRRMDR",190,0)
 . . . Q:POP
"RTN","PXRRMDR",191,0)
 . . . W !?4,DEFD_"SORT VALUE - "_SORT_": ",TOT(4)
"RTN","PXRRMDR",192,0)
 . . . W !?4,ENCD_"SORT VALUE - "_SORT_": ",TOTE(4)
"RTN","PXRRMDR",193,0)
 . . . S TOT(3)=TOT(3)+TOT(4)
"RTN","PXRRMDR",194,0)
 . . . S TOTE(3)=TOTE(3)+TOTE(4)
"RTN","PXRRMDR",195,0)
 . . Q:POP
"RTN","PXRRMDR",196,0)
 . . W !?2,DEFD_PROV_": ",TOT(3)
"RTN","PXRRMDR",197,0)
 . . W !?2,ENCD_PROV_": ",TOTE(3)
"RTN","PXRRMDR",198,0)
 . . S TOT(2)=TOT(2)+TOT(3)
"RTN","PXRRMDR",199,0)
 . . S TOTE(2)=TOTE(2)+TOTE(3)
"RTN","PXRRMDR",200,0)
 . Q:POP
"RTN","PXRRMDR",201,0)
 . W !,DEFD_LOC_":  ",TOT(2)
"RTN","PXRRMDR",202,0)
 . W !,ENCD_LOC_": ",TOTE(2)
"RTN","PXRRMDR",203,0)
 . S TOT(1)=TOT(1)+TOT(2)
"RTN","PXRRMDR",204,0)
 . S TOTE(1)=TOTE(1)+TOTE(2)
"RTN","PXRRMDR",205,0)
 Q:POP
"RTN","PXRRMDR",206,0)
 I TOT(1)+TOTE(1)=0 W !!,"No Data to print",! Q
"RTN","PXRRMDR",207,0)
 W !!,"GRAND TOTAL NUMBER OF DEFECTS:  ",TOT(1)
"RTN","PXRRMDR",208,0)
 W !,"GRAND TOTAL NUMBER OF ENCOUNTERS = ",TOTE(1)
"RTN","PXRRMDR",209,0)
 Q
"RTN","PXRRMDR",210,0)
 ;
"RTN","PXRRMDR",211,0)
HEADER ;print header
"RTN","PXRRMDR",212,0)
 N %,X,Y,MSG,HLINE,DLINE
"RTN","PXRRMDR",213,0)
 I (PXPAGE>0)&(($E(IOST)="C")&(IO=IO(0))) D
"RTN","PXRRMDR",214,0)
 . S DIR(0)="E"
"RTN","PXRRMDR",215,0)
 . W !
"RTN","PXRRMDR",216,0)
 . D ^DIR K DIR
"RTN","PXRRMDR",217,0)
 I $D(DUOUT)!($D(DTOUT)) D  Q
"RTN","PXRRMDR",218,0)
 . S POP=1
"RTN","PXRRMDR",219,0)
 I PXPAGE>0 W:$D(IOF) @IOF
"RTN","PXRRMDR",220,0)
 S PXPAGE=PXPAGE+1
"RTN","PXRRMDR",221,0)
 W !
"RTN","PXRRMDR",222,0)
 S X=$$CTR132("PCE MISSING DATA REPORT") W !
"RTN","PXRRMDR",223,0)
 D NOW^%DTC S Y=% X ^DD("DD") S X=$$CTR(Y) W !
"RTN","PXRRMDR",224,0)
 S X=$$CTR132("By Clinic, Provider, and Date") W !
"RTN","PXRRMDR",225,0)
 S Y=PX("BDT") X ^DD("DD") S STDT=$P(Y,"@",1)
"RTN","PXRRMDR",226,0)
 S Y=PX("EDT") X ^DD("DD") S ENDT=$P(Y,"@",1)
"RTN","PXRRMDR",227,0)
 S MSG=STDT_" through "_ENDT
"RTN","PXRRMDR",228,0)
 S X=$$CTR(MSG) W !
"RTN","PXRRMDR",229,0)
 S X=$$CTR132("Page "_PXPAGE) W !
"RTN","PXRRMDR",230,0)
 W !!,"Patient",?26,"SSN",?39,"Date/Time",?59,"Enc. ID",?75,"Created by User",?94,"Defect",!
"RTN","PXRRMDR",231,0)
 S $P(HLINE,"=",132)="" W HLINE,!
"RTN","PXRRMDR",232,0)
 Q:SHDR
"RTN","PXRRMDR",233,0)
 W !,LOC
"RTN","PXRRMDR",234,0)
 W !?2,PROV
"RTN","PXRRMDR",235,0)
 N SORTD S SORTD=SORT
"RTN","PXRRMDR",236,0)
 S:SORTD=" " SORTD="Unknown"
"RTN","PXRRMDR",237,0)
 W !?4,"SORT VALUE:  ",$P(SORTHDR,U,PXSRT),"= ",SORTD
"RTN","PXRRMDR",238,0)
 S:VDT="" VDT="Unknown"
"RTN","PXRRMDR",239,0)
 W !?6,$P(VDT,"@",1),":"
"RTN","PXRRMDR",240,0)
 S HDR=1
"RTN","PXRRMDR",241,0)
 Q
"RTN","PXRRMDR",242,0)
 ;
"RTN","PXRRMDR",243,0)
CTR(X) ;
"RTN","PXRRMDR",244,0)
 W ?(IOM-$L(X))\2,X
"RTN","PXRRMDR",245,0)
 Q 1
"RTN","PXRRMDR",246,0)
 ;
"RTN","PXRRMDR",247,0)
CTR132(X) ;
"RTN","PXRRMDR",248,0)
 W ?(132-$L(X))\2,X
"RTN","PXRRMDR",249,0)
 Q 1
"RTN","PXRRMDR",250,0)
 ;
"RTN","PXRRMDR1")
0^6^B1090646
"RTN","PXRRMDR1",1,0)
PXRRMDR1 ;HERN/BDB - PCE Missing Data Report ;11 Feb 04  10:10 AM
"RTN","PXRRMDR1",2,0)
 ;;1.0;PCE;**174**;AUG 12, 1996
"RTN","PXRRMDR1",3,0)
 ;
"RTN","PXRRMDR1",4,0)
DATASRC ; get Data Sources to print
"RTN","PXRRMDR1",5,0)
 N ID,REC
"RTN","PXRRMDR1",6,0)
 K PXDS
"RTN","PXRRMDR1",7,0)
 K DIR,DIC
"RTN","PXRRMDR1",8,0)
 S DIR(0)="Y",DIR("A")="Would you like to include ALL Data Sources"
"RTN","PXRRMDR1",9,0)
 S DIR("B")="YES" D ^DIR
"RTN","PXRRMDR1",10,0)
 I $D(DIRUT) S POP=1 Q
"RTN","PXRRMDR1",11,0)
 I Y D
"RTN","PXRRMDR1",12,0)
 . S ID="" F  S ID=$O(^PX(839.7,"B",ID)) Q:ID=""  D
"RTN","PXRRMDR1",13,0)
 . . S REC="" F  S REC=$O(^PX(839.7,"B",ID,REC)) Q:REC=""  D
"RTN","PXRRMDR1",14,0)
 . . . S PXDS(REC)=ID
"RTN","PXRRMDR1",15,0)
 . S PXDS("Unknown")=0
"RTN","PXRRMDR1",16,0)
 E  D
"RTN","PXRRMDR1",17,0)
 . S DIC=839.7,DIC(0)="QEAMZ",DIC("A")="Enter Data Source:  "
"RTN","PXRRMDR1",18,0)
 . F  D ^DIC Q:$D(DTOUT)!($D(DUOUT))!(Y=-1)  S:+Y PXDS(+Y)=""
"RTN","PXRRMDR1",19,0)
 I $D(DTOUT)!($D(DUOUT)) S POP=1
"RTN","PXRRMDR1",20,0)
 Q
"VER")
8.0^22.0
"BLD",5764,6)
^131
**END**
**END**
