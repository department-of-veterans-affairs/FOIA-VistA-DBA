Released OR*3*132 SEQ #132
Extracted from mail message
**KIDS**:OR*3.0*132^

**INSTALL NAME**
OR*3.0*132
"BLD",15167,0)
OR*3.0*132^ORDER ENTRY/RESULTS REPORTING^0^3020516^y
"BLD",15167,4,0)
^9.64PA^101.24^3
"BLD",15167,4,100,0)
100
"BLD",15167,4,100,2,0)
^9.641^100.008^1
"BLD",15167,4,100,2,100.008,0)
ORDER ACTIONS  (sub-file)
"BLD",15167,4,100,2,100.008,1,0)
^9.6411^24^5
"BLD",15167,4,100,2,100.008,1,.2,0)
EXTERNAL TEXT
"BLD",15167,4,100,2,100.008,1,4,0)
SIGNATURE STATUS
"BLD",15167,4,100,2,100.008,1,23,0)
DIGITAL SIGNATURE
"BLD",15167,4,100,2,100.008,1,24,0)
DRUG SCHEDULE
"BLD",15167,4,100,2,100.008,1,25,0)
DIGITAL SIGNATURE REQUIRED
"BLD",15167,4,100,222)
y^n^p^^^^n
"BLD",15167,4,101.24,0)
101.24
"BLD",15167,4,101.24,222)
y^y^f^^^^n
"BLD",15167,4,8989.51,0)
8989.51
"BLD",15167,4,8989.51,222)
n^n^f^^y^^y^r^n
"BLD",15167,4,8989.51,224)
I $$SENDPAR^ORY132($P(^(0),U))
"BLD",15167,4,"APDD",100,100.008)

"BLD",15167,4,"APDD",100,100.008,.2)

"BLD",15167,4,"APDD",100,100.008,4)

"BLD",15167,4,"APDD",100,100.008,23)

"BLD",15167,4,"APDD",100,100.008,24)

"BLD",15167,4,"APDD",100,100.008,25)

"BLD",15167,4,"B",100,100)

"BLD",15167,4,"B",101.24,101.24)

"BLD",15167,4,"B",8989.51,8989.51)

"BLD",15167,"INID")
^
"BLD",15167,"INIT")
POST^ORY132
"BLD",15167,"KRN",0)
^9.67PA^8989.52^19
"BLD",15167,"KRN",.4,0)
.4
"BLD",15167,"KRN",.401,0)
.401
"BLD",15167,"KRN",.402,0)
.402
"BLD",15167,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",15167,"KRN",.403,0)
.403
"BLD",15167,"KRN",.5,0)
.5
"BLD",15167,"KRN",.84,0)
.84
"BLD",15167,"KRN",3.6,0)
3.6
"BLD",15167,"KRN",3.8,0)
3.8
"BLD",15167,"KRN",9.2,0)
9.2
"BLD",15167,"KRN",9.8,0)
9.8
"BLD",15167,"KRN",9.8,"NM",0)
^9.68A^33^30
"BLD",15167,"KRN",9.8,"NM",1,0)
ORWDXA^^0^B48933880
"BLD",15167,"KRN",9.8,"NM",2,0)
ORWSR^^0^B27504484
"BLD",15167,"KRN",9.8,"NM",3,0)
ORY132^^0^B15476204
"BLD",15167,"KRN",9.8,"NM",4,0)
ORWTIU^^0^B9189581
"BLD",15167,"KRN",9.8,"NM",5,0)
ORWRP^^0^B73930017
"BLD",15167,"KRN",9.8,"NM",6,0)
ORWRP3^^0^B8400062
"BLD",15167,"KRN",9.8,"NM",7,0)
ORWCIRN^^0^B3743419
"BLD",15167,"KRN",9.8,"NM",8,0)
ORWPCE1^^0^B55747636
"BLD",15167,"KRN",9.8,"NM",9,0)
ORWPS^^0^B13369184
"BLD",15167,"KRN",9.8,"NM",10,0)
ORWDPS1^^0^B17337728
"BLD",15167,"KRN",9.8,"NM",11,0)
ORWU^^0^B55063694
"BLD",15167,"KRN",9.8,"NM",12,0)
ORQPTQ11^^0^B56187636
"BLD",15167,"KRN",9.8,"NM",13,0)
ORUPREF1^^0^B12497628
"BLD",15167,"KRN",9.8,"NM",14,0)
ORWCV^^0^B63937259
"BLD",15167,"KRN",9.8,"NM",15,0)
ORPR08^^0^B3076807
"BLD",15167,"KRN",9.8,"NM",18,0)
ORWORR^^0^B57607470
"BLD",15167,"KRN",9.8,"NM",19,0)
ORWOR^^0^B22813019
"BLD",15167,"KRN",9.8,"NM",20,0)
ORWPT^^0^B53687520
"BLD",15167,"KRN",9.8,"NM",21,0)
ORWDPS2^^0^B52768904
"BLD",15167,"KRN",9.8,"NM",22,0)
ORWDX^^0^B70370156
"BLD",15167,"KRN",9.8,"NM",24,0)
ORCSAVE1^^0^B25872998
"BLD",15167,"KRN",9.8,"NM",25,0)
ORWRA^^0^B5834923
"BLD",15167,"KRN",9.8,"NM",26,0)
ORWDXM^^0^B33569381
"BLD",15167,"KRN",9.8,"NM",27,0)
ORWDXM2^^0^B54925348
"BLD",15167,"KRN",9.8,"NM",28,0)
ORWDPS3^^0^B18170049
"BLD",15167,"KRN",9.8,"NM",29,0)
ORWDXM1^^0^B62733393
"BLD",15167,"KRN",9.8,"NM",30,0)
ORWDXM3^^0^B21604835
"BLD",15167,"KRN",9.8,"NM",31,0)
ORWOR1^^0^B6077117
"BLD",15167,"KRN",9.8,"NM",32,0)
ORWUL^^0^B45117098
"BLD",15167,"KRN",9.8,"NM",33,0)
ORWTPD^^0^B17395751
"BLD",15167,"KRN",9.8,"NM","B","ORCSAVE1",24)

"BLD",15167,"KRN",9.8,"NM","B","ORPR08",15)

"BLD",15167,"KRN",9.8,"NM","B","ORQPTQ11",12)

"BLD",15167,"KRN",9.8,"NM","B","ORUPREF1",13)

"BLD",15167,"KRN",9.8,"NM","B","ORWCIRN",7)

"BLD",15167,"KRN",9.8,"NM","B","ORWCV",14)

"BLD",15167,"KRN",9.8,"NM","B","ORWDPS1",10)

"BLD",15167,"KRN",9.8,"NM","B","ORWDPS2",21)

"BLD",15167,"KRN",9.8,"NM","B","ORWDPS3",28)

"BLD",15167,"KRN",9.8,"NM","B","ORWDX",22)

"BLD",15167,"KRN",9.8,"NM","B","ORWDXA",1)

"BLD",15167,"KRN",9.8,"NM","B","ORWDXM",26)

"BLD",15167,"KRN",9.8,"NM","B","ORWDXM1",29)

"BLD",15167,"KRN",9.8,"NM","B","ORWDXM2",27)

"BLD",15167,"KRN",9.8,"NM","B","ORWDXM3",30)

"BLD",15167,"KRN",9.8,"NM","B","ORWOR",19)

"BLD",15167,"KRN",9.8,"NM","B","ORWOR1",31)

"BLD",15167,"KRN",9.8,"NM","B","ORWORR",18)

"BLD",15167,"KRN",9.8,"NM","B","ORWPCE1",8)

"BLD",15167,"KRN",9.8,"NM","B","ORWPS",9)

"BLD",15167,"KRN",9.8,"NM","B","ORWPT",20)

"BLD",15167,"KRN",9.8,"NM","B","ORWRA",25)

"BLD",15167,"KRN",9.8,"NM","B","ORWRP",5)

"BLD",15167,"KRN",9.8,"NM","B","ORWRP3",6)

"BLD",15167,"KRN",9.8,"NM","B","ORWSR",2)

"BLD",15167,"KRN",9.8,"NM","B","ORWTIU",4)

"BLD",15167,"KRN",9.8,"NM","B","ORWTPD",33)

"BLD",15167,"KRN",9.8,"NM","B","ORWU",11)

"BLD",15167,"KRN",9.8,"NM","B","ORWUL",32)

"BLD",15167,"KRN",9.8,"NM","B","ORY132",3)

"BLD",15167,"KRN",19,0)
19
"BLD",15167,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",15167,"KRN",19,"NM",1,0)
OR CPRS GUI CHART^^0
"BLD",15167,"KRN",19,"NM","B","OR CPRS GUI CHART",1)

"BLD",15167,"KRN",19.1,0)
19.1
"BLD",15167,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",15167,"KRN",101,0)
101
"BLD",15167,"KRN",409.61,0)
409.61
"BLD",15167,"KRN",771,0)
771
"BLD",15167,"KRN",870,0)
870
"BLD",15167,"KRN",8989.51,0)
8989.51
"BLD",15167,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",15167,"KRN",8989.51,"NM",1,0)
ORWOR PKI USE^^0
"BLD",15167,"KRN",8989.51,"NM","B","ORWOR PKI USE",1)

"BLD",15167,"KRN",8989.52,0)
8989.52
"BLD",15167,"KRN",8994,0)
8994
"BLD",15167,"KRN",8994,"NM",0)
^9.68A^15^14
"BLD",15167,"KRN",8994,"NM",1,0)
ORWTIU GET SAVED CP FIELDS^^0
"BLD",15167,"KRN",8994,"NM",2,0)
ORWDPS1 LOCPICK^^0
"BLD",15167,"KRN",8994,"NM",3,0)
ORQPT MAKE RPL^^0
"BLD",15167,"KRN",8994,"NM",4,0)
ORQPT READ RPL^^0
"BLD",15167,"KRN",8994,"NM",5,0)
ORQPT KILL RPL^^0
"BLD",15167,"KRN",8994,"NM",6,0)
ORWOR PKIUSE^^0
"BLD",15167,"KRN",8994,"NM",7,0)
ORWPT LAST5 RPL^^0
"BLD",15167,"KRN",8994,"NM",8,0)
ORWPT FULLSSN RPL^^0
"BLD",15167,"KRN",8994,"NM",9,0)
ORWOR1 SIG^^0
"BLD",15167,"KRN",8994,"NM",11,0)
ORWOR1 CHKDIG^^0
"BLD",15167,"KRN",8994,"NM",12,0)
ORWOR1 GETDTEXT^^0
"BLD",15167,"KRN",8994,"NM",13,0)
ORWOR1 GETDSIG^^0
"BLD",15167,"KRN",8994,"NM",14,0)
ORWCIRN RESTRICT^^0
"BLD",15167,"KRN",8994,"NM",15,0)
ORWTPD GETIMG^^0
"BLD",15167,"KRN",8994,"NM","B","ORQPT KILL RPL",5)

"BLD",15167,"KRN",8994,"NM","B","ORQPT MAKE RPL",3)

"BLD",15167,"KRN",8994,"NM","B","ORQPT READ RPL",4)

"BLD",15167,"KRN",8994,"NM","B","ORWCIRN RESTRICT",14)

"BLD",15167,"KRN",8994,"NM","B","ORWDPS1 LOCPICK",2)

"BLD",15167,"KRN",8994,"NM","B","ORWOR PKIUSE",6)

"BLD",15167,"KRN",8994,"NM","B","ORWOR1 CHKDIG",11)

"BLD",15167,"KRN",8994,"NM","B","ORWOR1 GETDSIG",13)

"BLD",15167,"KRN",8994,"NM","B","ORWOR1 GETDTEXT",12)

"BLD",15167,"KRN",8994,"NM","B","ORWOR1 SIG",9)

"BLD",15167,"KRN",8994,"NM","B","ORWPT FULLSSN RPL",8)

"BLD",15167,"KRN",8994,"NM","B","ORWPT LAST5 RPL",7)

"BLD",15167,"KRN",8994,"NM","B","ORWTIU GET SAVED CP FIELDS",1)

"BLD",15167,"KRN",8994,"NM","B","ORWTPD GETIMG",15)

"BLD",15167,"KRN","B",.4,.4)

"BLD",15167,"KRN","B",.401,.401)

"BLD",15167,"KRN","B",.402,.402)

"BLD",15167,"KRN","B",.403,.403)

"BLD",15167,"KRN","B",.5,.5)

"BLD",15167,"KRN","B",.84,.84)

"BLD",15167,"KRN","B",3.6,3.6)

"BLD",15167,"KRN","B",3.8,3.8)

"BLD",15167,"KRN","B",9.2,9.2)

"BLD",15167,"KRN","B",9.8,9.8)

"BLD",15167,"KRN","B",19,19)

"BLD",15167,"KRN","B",19.1,19.1)

"BLD",15167,"KRN","B",101,101)

"BLD",15167,"KRN","B",409.61,409.61)

"BLD",15167,"KRN","B",771,771)

"BLD",15167,"KRN","B",870,870)

"BLD",15167,"KRN","B",8989.51,8989.51)

"BLD",15167,"KRN","B",8989.52,8989.52)

"BLD",15167,"KRN","B",8994,8994)

"BLD",15167,"QUES",0)
^9.62^^
"BLD",15167,"REQB",0)
^9.611^7^4
"BLD",15167,"REQB",1,0)
OR*3.0*131^2
"BLD",15167,"REQB",4,0)
OR*3.0*120^2
"BLD",15167,"REQB",5,0)
OR*3.0*69^2
"BLD",15167,"REQB",7,0)
OR*3.0*135^2
"BLD",15167,"REQB","B","OR*3.0*120",4)

"BLD",15167,"REQB","B","OR*3.0*131",1)

"BLD",15167,"REQB","B","OR*3.0*135",7)

"BLD",15167,"REQB","B","OR*3.0*69",5)

"DATA",8989.51,4672,0)
ORCH INITIAL TAB^Initial Tab when CPRS Starts^^^Initial Chart Tab
"DATA",8989.51,4672,1)
S^1:Cover;2:Problems;3:Meds;4:Orders;6:Notes;7:Consults;8:DCSumm;9:Labs;10:Reports;11:Surgery^Enter the tab that CPRS should open to when it first starts.
"DATA",8989.51,4672,20,0)
^^3^3^3000304^
"DATA",8989.51,4672,20,1,0)
This parameter identifies the tab that should be initially displayed when
"DATA",8989.51,4672,20,2,0)
CPRS first starts.  If ORCH USE LAST TAB is 'no', this tab is also used
"DATA",8989.51,4672,20,3,0)
whenever a new patient is selected.
"DATA",8989.51,4672,30,0)
^8989.513I^4^4
"DATA",8989.51,4672,30,1,0)
10^9.4
"DATA",8989.51,4672,30,2,0)
5^4.2
"DATA",8989.51,4672,30,3,0)
4^4
"DATA",8989.51,4672,30,4,0)
2^200
"DATA",8989.51,4724,0)
ORWOR PKI USE^Allow PKI Functionality^^^Yes/No
"DATA",8989.51,4724,1)
Y^Y:yes;N:no^Enter 'yes' to allow PKI Digital Signature functionality.
"DATA",8989.51,4724,20,0)
^8989.512^1^1^3020320^^^
"DATA",8989.51,4724,20,1,0)
'Yes' indicates the user can Digitally Sign Schedule II Medication orders.
"DATA",8989.51,4724,30,0)
^8989.513I^4^4
"DATA",8989.51,4724,30,1,0)
1^200
"DATA",8989.51,4724,30,2,0)
2^4
"DATA",8989.51,4724,30,3,0)
3^4.2
"DATA",8989.51,4724,30,4,0)
4^9.4
"DATA",8989.51,4734,0)
ORWOR SHOW SURGERY TAB^Show Surgery Tab in GUI^0^^SHOW SURGERY TAB
"DATA",8989.51,4734,1)
S^0:NO;1:YES^Should the Surgery tab be shown in the GUI? ((0=No, 1=Yes)
"DATA",8989.51,4734,20,0)
^8989.512^1^1^3020214^^
"DATA",8989.51,4734,20,1,0)
Should the Surgery tab be shown in the GUI? ((0=No, 1=Yes)
"DATA",8989.51,4734,30,0)
^8989.513I^5^5
"DATA",8989.51,4734,30,1,0)
1^200
"DATA",8989.51,4734,30,2,0)
3^4
"DATA",8989.51,4734,30,3,0)
5^4.2
"DATA",8989.51,4734,30,4,0)
7^9.4
"DATA",8989.51,4734,30,5,0)
2^49
"FIA",100)
ORDER
"FIA",100,0)
^OR(100,
"FIA",100,0,0)
100I
"FIA",100,0,1)
y^n^p^^^^n
"FIA",100,0,10)

"FIA",100,0,11)

"FIA",100,0,"RLRO")

"FIA",100,0,"VR")
3.0^OR
"FIA",100,100)
1
"FIA",100,100.008)
1
"FIA",100,100.008,.2)

"FIA",100,100.008,4)

"FIA",100,100.008,23)

"FIA",100,100.008,24)

"FIA",100,100.008,25)

"FIA",100,100.0082)
0
"FIA",101.24)
OE/RR REPORT
"FIA",101.24,0)
^ORD(101.24,
"FIA",101.24,0,0)
101.24I
"FIA",101.24,0,1)
y^y^f^^^^n
"FIA",101.24,0,10)

"FIA",101.24,0,11)

"FIA",101.24,0,"RLRO")

"FIA",101.24,0,"VR")
3.0^OR
"FIA",101.24,101.24)
0
"FIA",101.24,101.241)
0
"FIA",101.24,101.243)
0
"FIA",8989.51)
PARAMETER DEFINITION
"FIA",8989.51,0)
^XTV(8989.51,
"FIA",8989.51,0,0)
8989.51I
"FIA",8989.51,0,1)
n^n^f^^y^^y^r^n
"FIA",8989.51,0,10)

"FIA",8989.51,0,11)
I $$SENDPAR^ORY132($P(^(0),U))
"FIA",8989.51,0,"RLRO")

"FIA",8989.51,0,"VR")
3.0^OR
"FIA",8989.51,8989.51)
0
"FIA",8989.51,8989.512)
0
"FIA",8989.51,8989.513)
0
"INIT")
POST^ORY132
"KRN",19,10082,-1)
0^1
"KRN",19,10082,0)
OR CPRS GUI CHART^CPRSChart version 1.0.19.7^^B^^^^^^^^
"KRN",19,10082,1,0)
^19.06^2^2^3020409^^^^
"KRN",19,10082,1,1,0)
This option is required by the Kernel Broker to give access to the
"KRN",19,10082,1,2,0)
RPCs used by the CPRS GUI (CPRSChart.EXE).
"KRN",19,10082,99.1)
58940,31774
"KRN",19,10082,"RPC",0)
^19.05P^1780^1779
"KRN",19,10082,"RPC",1,0)
GMRC LIST CONSULT REQUESTS
"KRN",19,10082,"RPC",218,0)
XWB GET VARIABLE VALUE
"KRN",19,10082,"RPC",219,0)
TIU AUTHORIZATION
"KRN",19,10082,"RPC",220,0)
TIU CAN CHANGE COSIGNER?
"KRN",19,10082,"RPC",221,0)
TIU CREATE ADDENDUM RECORD
"KRN",19,10082,"RPC",222,0)
TIU CREATE RECORD
"KRN",19,10082,"RPC",223,0)
TIU DELETE RECORD
"KRN",19,10082,"RPC",224,0)
TIU DETAILED DISPLAY
"KRN",19,10082,"RPC",225,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,10082,"RPC",226,0)
TIU GET ADDITIONAL SIGNERS
"KRN",19,10082,"RPC",227,0)
TIU GET ALERT INFO
"KRN",19,10082,"RPC",228,0)
TIU GET DOCUMENT PARAMETERS
"KRN",19,10082,"RPC",229,0)
TIU GET DS TITLES
"KRN",19,10082,"RPC",230,0)
TIU GET DS URGENCIES
"KRN",19,10082,"RPC",231,0)
TIU GET PERSONAL PREFERENCES
"KRN",19,10082,"RPC",232,0)
TIU GET PN TITLES
"KRN",19,10082,"RPC",233,0)
TIU GET RECORD TEXT
"KRN",19,10082,"RPC",234,0)
TIU IDENTIFY CONSULTS CLASS
"KRN",19,10082,"RPC",235,0)
TIU IS THIS A CONSULT?
"KRN",19,10082,"RPC",236,0)
TIU JUSTIFY DELETE?
"KRN",19,10082,"RPC",237,0)
TIU LOAD BOILERPLATE TEXT
"KRN",19,10082,"RPC",238,0)
TIU LOAD RECORD FOR EDIT
"KRN",19,10082,"RPC",239,0)
TIU LOCK RECORD
"KRN",19,10082,"RPC",240,0)
TIU LONG LIST CONSULT TITLES
"KRN",19,10082,"RPC",241,0)
TIU LONG LIST OF TITLES
"KRN",19,10082,"RPC",242,0)
TIU NOTES
"KRN",19,10082,"RPC",243,0)
TIU NOTES 16 BIT
"KRN",19,10082,"RPC",244,0)
TIU NOTES BY VISIT
"KRN",19,10082,"RPC",245,0)
TIU PERSONAL TITLE LIST
"KRN",19,10082,"RPC",246,0)
TIU PRINT RECORD
"KRN",19,10082,"RPC",247,0)
TIU REQUIRES COSIGNATURE
"KRN",19,10082,"RPC",248,0)
TIU SIGN RECORD
"KRN",19,10082,"RPC",249,0)
TIU SUMMARIES
"KRN",19,10082,"RPC",250,0)
TIU SUMMARIES BY VISIT
"KRN",19,10082,"RPC",251,0)
TIU UNLOCK RECORD
"KRN",19,10082,"RPC",252,0)
TIU UPDATE ADDITIONAL SIGNERS
"KRN",19,10082,"RPC",253,0)
TIU UPDATE RECORD
"KRN",19,10082,"RPC",254,0)
TIU WHICH SIGNATURE ACTION
"KRN",19,10082,"RPC",1032,0)
ORB DELETE ALERT
"KRN",19,10082,"RPC",1033,0)
ORB FOLLOW-UP ARRAY
"KRN",19,10082,"RPC",1034,0)
ORB FOLLOW-UP STRING
"KRN",19,10082,"RPC",1035,0)
ORB FOLLOW-UP TYPE
"KRN",19,10082,"RPC",1036,0)
ORB SORT METHOD
"KRN",19,10082,"RPC",1037,0)
ORK TRIGGER
"KRN",19,10082,"RPC",1038,0)
ORQ NULL LIST
"KRN",19,10082,"RPC",1039,0)
ORQOR DETAIL
"KRN",19,10082,"RPC",1040,0)
TIU TEMPLATE CHECK BOILERPLATE
"KRN",19,10082,"RPC",1041,0)
TIU TEMPLATE CREATE/MODIFY
"KRN",19,10082,"RPC",1042,0)
TIU TEMPLATE DELETE
"KRN",19,10082,"RPC",1045,0)
TIU TEMPLATE GETPROOT
"KRN",19,10082,"RPC",1049,0)
TIU TEMPLATE LISTOWNR
"KRN",19,10082,"RPC",1050,0)
TIU TEMPLATE SET ITEMS
"KRN",19,10082,"RPC",1051,0)
TIU GET LIST OF OBJECTS
"KRN",19,10082,"RPC",1052,0)
ORQOR LIST
"KRN",19,10082,"RPC",1053,0)
ORQORB SORT
"KRN",19,10082,"RPC",1054,0)
ORQPT ATTENDING/PRIMARY
"KRN",19,10082,"RPC",1055,0)
ORQPT CLINIC PATIENTS
"KRN",19,10082,"RPC",1056,0)
ORQPT CLINICS
"KRN",19,10082,"RPC",1057,0)
ORQPT DEFAULT LIST SOURCE
"KRN",19,10082,"RPC",1058,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,10082,"RPC",1059,0)
ORQPT PATIENT TEAM PROVIDERS
"KRN",19,10082,"RPC",1060,0)
ORQPT PROVIDER PATIENTS
"KRN",19,10082,"RPC",1061,0)
ORQPT PROVIDERS
"KRN",19,10082,"RPC",1062,0)
ORQPT SPECIALTIES
"KRN",19,10082,"RPC",1063,0)
ORQPT SPECIALTY PATIENTS
"KRN",19,10082,"RPC",1064,0)
ORQPT TEAM PATIENTS
"KRN",19,10082,"RPC",1065,0)
ORQPT TEAMS
"KRN",19,10082,"RPC",1066,0)
ORQPT WARD PATIENTS
"KRN",19,10082,"RPC",1067,0)
ORQPT WARDRMBED
"KRN",19,10082,"RPC",1068,0)
ORQPT WARDS
"KRN",19,10082,"RPC",1069,0)
ORQQAL DETAIL
"KRN",19,10082,"RPC",1070,0)
ORQQAL LIST
"KRN",19,10082,"RPC",1071,0)
ORQQAL LIST REPORT
"KRN",19,10082,"RPC",1072,0)
ORQQCN ADDCMT
"KRN",19,10082,"RPC",1073,0)
ORQQCN ADMIN COMPLETE
"KRN",19,10082,"RPC",1074,0)
ORQQCN DETAIL
"KRN",19,10082,"RPC",1075,0)
ORQQCN DISCONTINUE
"KRN",19,10082,"RPC",1076,0)
ORQQCN FIND CONSULT
"KRN",19,10082,"RPC",1077,0)
ORQQCN FORWARD
"KRN",19,10082,"RPC",1078,0)
ORQQCN GET CONSULT
"KRN",19,10082,"RPC",1079,0)
ORQQCN GET ORDER NUMBER
"KRN",19,10082,"RPC",1080,0)
ORQQCN GET PROC SVCS
"KRN",19,10082,"RPC",1081,0)
ORQQCN LIST
"KRN",19,10082,"RPC",1082,0)
ORQQCN LOAD FOR EDIT
"KRN",19,10082,"RPC",1083,0)
ORQQCN MED RESULTS
"KRN",19,10082,"RPC",1084,0)
ORQQCN PRINT SF513
"KRN",19,10082,"RPC",1085,0)
ORQQCN RECEIVE
"KRN",19,10082,"RPC",1086,0)
ORQQCN RESUBMIT
"KRN",19,10082,"RPC",1087,0)
ORQQCN SET ACT MENUS
"KRN",19,10082,"RPC",1088,0)
ORQQCN SHOW SF513
"KRN",19,10082,"RPC",1089,0)
ORQQCN SIGFIND
"KRN",19,10082,"RPC",1090,0)
ORQQCN STATUS
"KRN",19,10082,"RPC",1091,0)
ORQQCN SVCLIST
"KRN",19,10082,"RPC",1092,0)
ORQQCN SVCTREE
"KRN",19,10082,"RPC",1093,0)
ORQQCN URGENCIES
"KRN",19,10082,"RPC",1094,0)
ORQQCN2 GET CONTEXT
"KRN",19,10082,"RPC",1095,0)
ORQQCN2 SAVE CONTEXT
"KRN",19,10082,"RPC",1096,0)
ORQQLR DETAIL
"KRN",19,10082,"RPC",1097,0)
ORQQLR SEARCH RANGE INPT
"KRN",19,10082,"RPC",1098,0)
ORQQLR SEARCH RANGE OUTPT
"KRN",19,10082,"RPC",1099,0)
ORQQPL ADD SAVE
"KRN",19,10082,"RPC",1100,0)
ORQQPL AUDIT HIST
"KRN",19,10082,"RPC",1101,0)
ORQQPL CHECK DUP
"KRN",19,10082,"RPC",1102,0)
ORQQPL CLIN FILTER LIST
"KRN",19,10082,"RPC",1103,0)
ORQQPL CLIN SRCH
"KRN",19,10082,"RPC",1104,0)
ORQQPL DELETE
"KRN",19,10082,"RPC",1105,0)
ORQQPL DETAIL
"KRN",19,10082,"RPC",1106,0)
ORQQPL EDIT LOAD
"KRN",19,10082,"RPC",1107,0)
ORQQPL EDIT SAVE
"KRN",19,10082,"RPC",1108,0)
ORQQPL INACTIVATE
"KRN",19,10082,"RPC",1109,0)
ORQQPL INIT PT
"KRN",19,10082,"RPC",1110,0)
ORQQPL INIT USER
"KRN",19,10082,"RPC",1111,0)
ORQQPL LIST
"KRN",19,10082,"RPC",1112,0)
ORQQPL PROB COMMENTS
"KRN",19,10082,"RPC",1113,0)
ORQQPL PROBLEM LEX SEARCH
"KRN",19,10082,"RPC",1114,0)
ORQQPL PROBLEM LIST
"KRN",19,10082,"RPC",1115,0)
ORQQPL PROV FILTER LIST
"KRN",19,10082,"RPC",1116,0)
ORQQPL PROVIDER LIST
"KRN",19,10082,"RPC",1117,0)
ORQQPL REPLACE
"KRN",19,10082,"RPC",1118,0)
ORQQPL SAVEVIEW
"KRN",19,10082,"RPC",1119,0)
ORQQPL SERV FILTER LIST
"KRN",19,10082,"RPC",1120,0)
ORQQPL SRVC SRCH
"KRN",19,10082,"RPC",1121,0)
ORQQPL UPDATE
"KRN",19,10082,"RPC",1122,0)
ORQQPL USER PROB CATS
"KRN",19,10082,"RPC",1123,0)
ORQQPL USER PROB LIST
"KRN",19,10082,"RPC",1124,0)
ORQQPL VERIFY
"KRN",19,10082,"RPC",1125,0)
ORQQPP LIST
"KRN",19,10082,"RPC",1126,0)
ORQQPS DETAIL
"KRN",19,10082,"RPC",1127,0)
ORQQPS LIST
"KRN",19,10082,"RPC",1133,0)
ORQQPX REMINDER DETAIL
"KRN",19,10082,"RPC",1135,0)
ORQQPX REMINDERS LIST
"KRN",19,10082,"RPC",1136,0)
ORQQVI NOTEVIT
"KRN",19,10082,"RPC",1137,0)
ORQQVI VITALS
"KRN",19,10082,"RPC",1138,0)
ORQQVI VITALS FOR DATE RANGE
"KRN",19,10082,"RPC",1139,0)
ORQQVI1 DETAIL
"KRN",19,10082,"RPC",1140,0)
ORQQVI1 GRID
"KRN",19,10082,"RPC",1141,0)
ORQQVI2 VITALS HELP
"KRN",19,10082,"RPC",1142,0)
ORQQVI2 VITALS RATE CHECK
"KRN",19,10082,"RPC",1144,0)
ORQQVI2 VITALS VAL & STORE
"KRN",19,10082,"RPC",1145,0)
ORQQVI2 VITALS VALIDATE
"KRN",19,10082,"RPC",1146,0)
ORQQVI2 VITALS VALIDATE TYPE
"KRN",19,10082,"RPC",1147,0)
ORQQVS DETAIL NOTES
"KRN",19,10082,"RPC",1148,0)
ORQQVS DETAIL SUMMARY
"KRN",19,10082,"RPC",1149,0)
ORQQVS VISITS/APPTS
"KRN",19,10082,"RPC",1150,0)
ORQQXMB MAIL GROUPS
"KRN",19,10082,"RPC",1151,0)
ORQQXQA PATIENT
"KRN",19,10082,"RPC",1152,0)
ORQQXQA USER
"KRN",19,10082,"RPC",1153,0)
ORWCH LOADALL
"KRN",19,10082,"RPC",1154,0)
ORWCH LOADSIZ
"KRN",19,10082,"RPC",1155,0)
ORWCH SAVEALL
"KRN",19,10082,"RPC",1156,0)
ORWCH SAVESIZ
"KRN",19,10082,"RPC",1157,0)
ORWCS LIST OF CONSULT REPORTS
"KRN",19,10082,"RPC",1158,0)
ORWCS PRINT REPORT
"KRN",19,10082,"RPC",1159,0)
ORWCS REPORT TEXT
"KRN",19,10082,"RPC",1160,0)
ORWCV DTLVST
"KRN",19,10082,"RPC",1161,0)
ORWCV LAB
"KRN",19,10082,"RPC",1162,0)
ORWCV POLL
"KRN",19,10082,"RPC",1163,0)
ORWCV START
"KRN",19,10082,"RPC",1164,0)
ORWCV STOP
"KRN",19,10082,"RPC",1165,0)
ORWCV VST
"KRN",19,10082,"RPC",1166,0)
ORWD DEF
"KRN",19,10082,"RPC",1167,0)
ORWD DT
"KRN",19,10082,"RPC",1168,0)
ORWD FORMID
"KRN",19,10082,"RPC",1169,0)
ORWD GET4EDIT
"KRN",19,10082,"RPC",1170,0)
ORWD KEY
"KRN",19,10082,"RPC",1171,0)
ORWD OI
"KRN",19,10082,"RPC",1172,0)
ORWD PROVKEY
"KRN",19,10082,"RPC",1173,0)
ORWD SAVE
"KRN",19,10082,"RPC",1174,0)
ORWD SAVEACT
"KRN",19,10082,"RPC",1175,0)
ORWD SIGN
"KRN",19,10082,"RPC",1176,0)
ORWD VALIDACT
"KRN",19,10082,"RPC",1177,0)
ORWD1 PARAM
"KRN",19,10082,"RPC",1178,0)
ORWD1 PRINTGUI
"KRN",19,10082,"RPC",1179,0)
ORWD1 RVPRINT
"KRN",19,10082,"RPC",1180,0)
ORWD2 DEVINFO
"KRN",19,10082,"RPC",1181,0)
ORWD2 MANUAL
"KRN",19,10082,"RPC",1182,0)
ORWDAL32 ALLERGY MATCH
"KRN",19,10082,"RPC",1183,0)
ORWDAL32 DEF
"KRN",19,10082,"RPC",1184,0)
ORWDAL32 SYMPTOMS
"KRN",19,10082,"RPC",1185,0)
ORWDCN32 DEF
"KRN",19,10082,"RPC",1186,0)
ORWDCN32 ORDRMSG
"KRN",19,10082,"RPC",1187,0)
ORWDCN32 PROCEDURES
"KRN",19,10082,"RPC",1188,0)
ORWDCSLT DEF
"KRN",19,10082,"RPC",1189,0)
ORWDCSLT LOOK200
"KRN",19,10082,"RPC",1190,0)
ORWDFH ADDLATE
"KRN",19,10082,"RPC",1191,0)
ORWDFH ATTR
"KRN",19,10082,"RPC",1192,0)
ORWDFH CURISO
"KRN",19,10082,"RPC",1193,0)
ORWDFH DIETS
"KRN",19,10082,"RPC",1194,0)
ORWDFH FINDTYP
"KRN",19,10082,"RPC",1195,0)
ORWDFH ISOIEN
"KRN",19,10082,"RPC",1196,0)
ORWDFH ISOLIST
"KRN",19,10082,"RPC",1197,0)
ORWDFH PARAM
"KRN",19,10082,"RPC",1198,0)
ORWDFH QTY2CC
"KRN",19,10082,"RPC",1199,0)
ORWDFH TFPROD
"KRN",19,10082,"RPC",1200,0)
ORWDFH TXT
"KRN",19,10082,"RPC",1201,0)
ORWDGX LOAD
"KRN",19,10082,"RPC",1202,0)
ORWDGX VMDEF
"KRN",19,10082,"RPC",1203,0)
ORWDLR ABBSPEC
"KRN",19,10082,"RPC",1204,0)
ORWDLR ALLSAMP
"KRN",19,10082,"RPC",1205,0)
ORWDLR DEF
"KRN",19,10082,"RPC",1206,0)
ORWDLR LOAD
"KRN",19,10082,"RPC",1207,0)
ORWDLR OIPARAM
"KRN",19,10082,"RPC",1208,0)
ORWDLR STOP
"KRN",19,10082,"RPC",1209,0)
ORWDLR32 ABBSPEC
"KRN",19,10082,"RPC",1210,0)
ORWDLR32 ALLSAMP
"KRN",19,10082,"RPC",1211,0)
ORWDLR32 ALLSPEC
"KRN",19,10082,"RPC",1212,0)
ORWDLR32 DEF
"KRN",19,10082,"RPC",1213,0)
ORWDLR32 IC DEFAULT
"KRN",19,10082,"RPC",1214,0)
ORWDLR32 IC VALID
"KRN",19,10082,"RPC",1215,0)
ORWDLR32 IMMED COLLECT
"KRN",19,10082,"RPC",1216,0)
ORWDLR32 LAB COLL TIME
"KRN",19,10082,"RPC",1217,0)
ORWDLR32 LOAD
"KRN",19,10082,"RPC",1218,0)
ORWDLR32 MAXDAYS
"KRN",19,10082,"RPC",1219,0)
ORWDLR32 ONE SAMPLE
"KRN",19,10082,"RPC",1220,0)
ORWDLR32 ONE SPECIMEN
"KRN",19,10082,"RPC",1221,0)
ORWDLR32 STOP
"KRN",19,10082,"RPC",1222,0)
ORWDOR VMSLCT
"KRN",19,10082,"RPC",1227,0)
ORWDPS32 ALLROUTE
"KRN",19,10082,"RPC",1228,0)
ORWDPS32 AUTH
"KRN",19,10082,"RPC",1229,0)
ORWDPS32 DLGSLCT
"KRN",19,10082,"RPC",1230,0)
ORWDPS32 DOSES
"KRN",19,10082,"RPC",1231,0)
ORWDPS32 DRUGMSG
"KRN",19,10082,"RPC",1232,0)
ORWDPS32 FORMALT
"KRN",19,10082,"RPC",1233,0)
ORWDPS32 ISSPLY
"KRN",19,10082,"RPC",1234,0)
ORWDPS32 IVAMT
"KRN",19,10082,"RPC",1235,0)
ORWDPS32 MEDISIV
"KRN",19,10082,"RPC",1236,0)
ORWDPS32 OISLCT
"KRN",19,10082,"RPC",1237,0)
ORWDPS32 SCSTS
"KRN",19,10082,"RPC",1238,0)
ORWDPS32 VALQTY
"KRN",19,10082,"RPC",1239,0)
ORWDPS32 VALRATE
"KRN",19,10082,"RPC",1240,0)
ORWDPS32 VALSCH
"KRN",19,10082,"RPC",1241,0)
ORWDRA DEF
"KRN",19,10082,"RPC",1242,0)
ORWDRA32 APPROVAL
"KRN",19,10082,"RPC",1243,0)
ORWDRA32 DEF
"KRN",19,10082,"RPC",1244,0)
ORWDRA32 IMTYPSEL
"KRN",19,10082,"RPC",1245,0)
ORWDRA32 ISOLATN
"KRN",19,10082,"RPC",1246,0)
ORWDRA32 LOCTYPE
"KRN",19,10082,"RPC",1247,0)
ORWDRA32 PROCMSG
"KRN",19,10082,"RPC",1248,0)
ORWDRA32 RADSRC
"KRN",19,10082,"RPC",1249,0)
ORWDRA32 RAORDITM
"KRN",19,10082,"RPC",1250,0)
ORWDX AGAIN
"KRN",19,10082,"RPC",1251,0)
ORWDX DGRP
"KRN",19,10082,"RPC",1252,0)
ORWDX DISMSG
"KRN",19,10082,"RPC",1253,0)
ORWDX DLGDEF
"KRN",19,10082,"RPC",1254,0)
ORWDX DLGID
"KRN",19,10082,"RPC",1255,0)
ORWDX DLGQUIK
"KRN",19,10082,"RPC",1256,0)
ORWDX FORMID
"KRN",19,10082,"RPC",1257,0)
ORWDX LOADRSP
"KRN",19,10082,"RPC",1258,0)
ORWDX LOCK
"KRN",19,10082,"RPC",1259,0)
ORWDX MSG
"KRN",19,10082,"RPC",1260,0)
ORWDX ORDITM
"KRN",19,10082,"RPC",1261,0)
ORWDX SAVE
"KRN",19,10082,"RPC",1262,0)
ORWDX SEND
"KRN",19,10082,"RPC",1263,0)
ORWDX SENDP
"KRN",19,10082,"RPC",1264,0)
ORWDX UNLOCK
"KRN",19,10082,"RPC",1265,0)
ORWDX WRLST
"KRN",19,10082,"RPC",1266,0)
ORWDXA ALERT
"KRN",19,10082,"RPC",1267,0)
ORWDXA COMPLETE
"KRN",19,10082,"RPC",1268,0)
ORWDXA DC
"KRN",19,10082,"RPC",1269,0)
ORWDXA DCREASON
"KRN",19,10082,"RPC",1270,0)
ORWDXA DCREQIEN
"KRN",19,10082,"RPC",1271,0)
ORWDXA FLAG
"KRN",19,10082,"RPC",1272,0)
ORWDXA FLAGTXT
"KRN",19,10082,"RPC",1273,0)
ORWDXA HOLD
"KRN",19,10082,"RPC",1274,0)
ORWDXA UNFLAG
"KRN",19,10082,"RPC",1275,0)
ORWDXA UNHOLD
"KRN",19,10082,"RPC",1276,0)
ORWDXA VALID
"KRN",19,10082,"RPC",1277,0)
ORWDXA VERIFY
"KRN",19,10082,"RPC",1278,0)
ORWDXA WCGET
"KRN",19,10082,"RPC",1279,0)
ORWDXA WCPUT
"KRN",19,10082,"RPC",1280,0)
ORWDXC ACCEPT
"KRN",19,10082,"RPC",1281,0)
ORWDXC DELAY
"KRN",19,10082,"RPC",1282,0)
ORWDXC DELORD
"KRN",19,10082,"RPC",1283,0)
ORWDXC DISPLAY
"KRN",19,10082,"RPC",1284,0)
ORWDXC FILLID
"KRN",19,10082,"RPC",1285,0)
ORWDXC ON
"KRN",19,10082,"RPC",1286,0)
ORWDXC SAVECHK
"KRN",19,10082,"RPC",1287,0)
ORWDXC SESSION
"KRN",19,10082,"RPC",1288,0)
ORWDXM AUTOACK
"KRN",19,10082,"RPC",1289,0)
ORWDXM DLGNAME
"KRN",19,10082,"RPC",1290,0)
ORWDXM FORMID
"KRN",19,10082,"RPC",1291,0)
ORWDXM LOADSET
"KRN",19,10082,"RPC",1292,0)
ORWDXM MENU
"KRN",19,10082,"RPC",1293,0)
ORWDXM MSTYLE
"KRN",19,10082,"RPC",1294,0)
ORWDXM PROMPTS
"KRN",19,10082,"RPC",1295,0)
ORWDXM1 BLDQRSP
"KRN",19,10082,"RPC",1296,0)
ORWDXM2 CLRRCL
"KRN",19,10082,"RPC",1297,0)
ORWDXQ DLGNAME
"KRN",19,10082,"RPC",1298,0)
ORWDXQ DLGSAVE
"KRN",19,10082,"RPC",1299,0)
ORWDXQ GETQLST
"KRN",19,10082,"RPC",1300,0)
ORWDXQ GETQNAM
"KRN",19,10082,"RPC",1301,0)
ORWDXQ PUTQLST
"KRN",19,10082,"RPC",1302,0)
ORWDXQ PUTQNAM
"KRN",19,10082,"RPC",1303,0)
ORWDXR ISREL
"KRN",19,10082,"RPC",1304,0)
ORWDXR RENEW
"KRN",19,10082,"RPC",1305,0)
ORWDXR RNWFLDS
"KRN",19,10082,"RPC",1306,0)
ORWGEPT CLINRNG
"KRN",19,10082,"RPC",1307,0)
ORWLR CUMULATIVE REPORT
"KRN",19,10082,"RPC",1308,0)
ORWLR CUMULATIVE SECTION
"KRN",19,10082,"RPC",1309,0)
ORWLR REPORT LISTS
"KRN",19,10082,"RPC",1310,0)
ORWLRR ALLTESTS
"KRN",19,10082,"RPC",1311,0)
ORWLRR ATESTS
"KRN",19,10082,"RPC",1312,0)
ORWLRR ATG
"KRN",19,10082,"RPC",1313,0)
ORWLRR ATOMICS
"KRN",19,10082,"RPC",1314,0)
ORWLRR CHART
"KRN",19,10082,"RPC",1315,0)
ORWLRR CHEMTEST
"KRN",19,10082,"RPC",1316,0)
ORWLRR GRID
"KRN",19,10082,"RPC",1317,0)
ORWLRR INTERIM
"KRN",19,10082,"RPC",1318,0)
ORWLRR INTERIMG
"KRN",19,10082,"RPC",1319,0)
ORWLRR INTERIMS
"KRN",19,10082,"RPC",1320,0)
ORWLRR MICRO
"KRN",19,10082,"RPC",1321,0)
ORWLRR NEWOLD
"KRN",19,10082,"RPC",1322,0)
ORWLRR PARAM
"KRN",19,10082,"RPC",1323,0)
ORWLRR SPEC
"KRN",19,10082,"RPC",1324,0)
ORWLRR TG
"KRN",19,10082,"RPC",1325,0)
ORWLRR USERS
"KRN",19,10082,"RPC",1326,0)
ORWLRR UTGA
"KRN",19,10082,"RPC",1327,0)
ORWLRR UTGD
"KRN",19,10082,"RPC",1328,0)
ORWLRR UTGR
"KRN",19,10082,"RPC",1329,0)
ORWMC PATIENT PROCEDURES
"KRN",19,10082,"RPC",1330,0)
ORWOR RESULT
"KRN",19,10082,"RPC",1331,0)
ORWOR SHEETS
"KRN",19,10082,"RPC",1332,0)
ORWOR TSALL
"KRN",19,10082,"RPC",1333,0)
ORWORB AUTOUNFLAG ORDERS
"KRN",19,10082,"RPC",1334,0)
ORWORB FASTUSER
"KRN",19,10082,"RPC",1335,0)
ORWORB GET TIU ALERT INFO
"KRN",19,10082,"RPC",1336,0)
ORWORB GETDATA
"KRN",19,10082,"RPC",1337,0)
ORWORB KILL UNSIG ORDERS ALERT
"KRN",19,10082,"RPC",1338,0)
ORWORB URGENLST
"KRN",19,10082,"RPC",1339,0)
ORWORDG ALLTREE
"KRN",19,10082,"RPC",1340,0)
ORWORDG GRPSEQB
"KRN",19,10082,"RPC",1341,0)
ORWORDG IEN
"KRN",19,10082,"RPC",1342,0)
ORWORDG MAPSEQ
"KRN",19,10082,"RPC",1343,0)
ORWORDG REVSTS
"KRN",19,10082,"RPC",1344,0)
ORWORR AGET
"KRN",19,10082,"RPC",1345,0)
ORWORR GET
"KRN",19,10082,"RPC",1346,0)
ORWORR GET4LST
"KRN",19,10082,"RPC",1347,0)
ORWORR GETBYIFN
"KRN",19,10082,"RPC",1348,0)
ORWORR GETTXT
"KRN",19,10082,"RPC",1349,0)
ORWPCE ACTIVE PROV
"KRN",19,10082,"RPC",1350,0)
ORWPCE ACTPROB
"KRN",19,10082,"RPC",1351,0)
ORWPCE CPTREQD
"KRN",19,10082,"RPC",1352,0)
ORWPCE DELETE
"KRN",19,10082,"RPC",1353,0)
ORWPCE DIAG
"KRN",19,10082,"RPC",1354,0)
ORWPCE GET EDUCATION TOPICS
"KRN",19,10082,"RPC",1355,0)
ORWPCE GET EXAM TYPE
"KRN",19,10082,"RPC",1356,0)
ORWPCE GET HEALTH FACTORS TY
"KRN",19,10082,"RPC",1357,0)
ORWPCE GET IMMUNIZATION TYPE
"KRN",19,10082,"RPC",1358,0)
ORWPCE GET SET OF CODES
"KRN",19,10082,"RPC",1359,0)
ORWPCE GET SKIN TEST TYPE
"KRN",19,10082,"RPC",1360,0)
ORWPCE GET TREATMENT TYPE
"KRN",19,10082,"RPC",1361,0)
ORWPCE HF
"KRN",19,10082,"RPC",1362,0)
ORWPCE IMM
"KRN",19,10082,"RPC",1363,0)
ORWPCE LEX
"KRN",19,10082,"RPC",1364,0)
ORWPCE LEXCODE
"KRN",19,10082,"RPC",1366,0)
ORWPCE NOTEVSTR
"KRN",19,10082,"RPC",1367,0)
ORWPCE PCE4NOTE
"KRN",19,10082,"RPC",1368,0)
ORWPCE PED
"KRN",19,10082,"RPC",1369,0)
ORWPCE PROC
"KRN",19,10082,"RPC",1370,0)
ORWPCE SAVE
"KRN",19,10082,"RPC",1371,0)
ORWPCE SCDIS
"KRN",19,10082,"RPC",1372,0)
ORWPCE SCSEL
"KRN",19,10082,"RPC",1373,0)
ORWPCE SK
"KRN",19,10082,"RPC",1374,0)
ORWPCE TRT
"KRN",19,10082,"RPC",1375,0)
ORWPCE VISIT
"KRN",19,10082,"RPC",1376,0)
ORWPCE XAM
"KRN",19,10082,"RPC",1377,0)
ORWPS ACTIVE
"KRN",19,10082,"RPC",1378,0)
ORWPS COVER
"KRN",19,10082,"RPC",1379,0)
ORWPS DETAIL
"KRN",19,10082,"RPC",1380,0)
ORWPS1 NEWDLG
"KRN",19,10082,"RPC",1381,0)
ORWPS1 PICKUP
"KRN",19,10082,"RPC",1382,0)
ORWPS1 REFILL
"KRN",19,10082,"RPC",1383,0)
ORWPT ADMITLST
"KRN",19,10082,"RPC",1384,0)
ORWPT APPTLST
"KRN",19,10082,"RPC",1385,0)
ORWPT CLINRNG
"KRN",19,10082,"RPC",1386,0)
ORWPT CWAD
"KRN",19,10082,"RPC",1387,0)
ORWPT DFLTSRC
"KRN",19,10082,"RPC",1388,0)
ORWPT DIEDON
"KRN",19,10082,"RPC",1389,0)
ORWPT DISCHARGE
"KRN",19,10082,"RPC",1390,0)
ORWPT ENCTITL
"KRN",19,10082,"RPC",1391,0)
ORWPT FULLSSN
"KRN",19,10082,"RPC",1392,0)
ORWPT ID INFO
"KRN",19,10082,"RPC",1393,0)
ORWPT LAST5
"KRN",19,10082,"RPC",1394,0)
ORWPT LIST ALL
"KRN",19,10082,"RPC",1395,0)
ORWPT PTINQ
"KRN",19,10082,"RPC",1396,0)
ORWPT SAVDFLT
"KRN",19,10082,"RPC",1397,0)
ORWPT SELCHK
"KRN",19,10082,"RPC",1398,0)
ORWPT SELECT
"KRN",19,10082,"RPC",1399,0)
ORWPT SHARE
"KRN",19,10082,"RPC",1400,0)
ORWPT TOP
"KRN",19,10082,"RPC",1401,0)
ORWPT1 PCDETAIL
"KRN",19,10082,"RPC",1402,0)
ORWPT1 PRCARE
"KRN",19,10082,"RPC",1403,0)
ORWPT16 ADMITLST
"KRN",19,10082,"RPC",1404,0)
ORWPT16 APPTLST
"KRN",19,10082,"RPC",1405,0)
ORWPT16 DEMOG
"KRN",19,10082,"RPC",1406,0)
ORWPT16 GETVSIT
"KRN",19,10082,"RPC",1407,0)
ORWPT16 ID INFO
"KRN",19,10082,"RPC",1408,0)
ORWPT16 LIST ALL
"KRN",19,10082,"RPC",1409,0)
ORWPT16 LOOKUP
"KRN",19,10082,"RPC",1410,0)
ORWPT16 PSCNVT
"KRN",19,10082,"RPC",1411,0)
ORWRA DEFAULT EXAM SETTINGS
"KRN",19,10082,"RPC",1412,0)
ORWRA IMAGING EXAMS
"KRN",19,10082,"RPC",1413,0)
ORWRA PRINT REPORT
"KRN",19,10082,"RPC",1414,0)
ORWRA REPORT TEXT
"KRN",19,10082,"RPC",1415,0)
ORWRP PRINT LAB REPORTS
"KRN",19,10082,"RPC",1416,0)
ORWRP PRINT REPORT
"KRN",19,10082,"RPC",1417,0)
ORWRP REPORT LISTS
"KRN",19,10082,"RPC",1418,0)
ORWRP REPORT TEXT
"KRN",19,10082,"RPC",1419,0)
ORWRP1 LISTNUTR
"KRN",19,10082,"RPC",1420,0)
ORWRP16 REPORT LISTS
"KRN",19,10082,"RPC",1421,0)
ORWRP16 REPORT TEXT
"KRN",19,10082,"RPC",1422,0)
ORWTIU GET DCSUMM CONTEXT
"KRN",19,10082,"RPC",1423,0)
ORWTIU GET TIU CONTEXT
"KRN",19,10082,"RPC",1424,0)
ORWTIU SAVE DCSUMM CONTEXT
"KRN",19,10082,"RPC",1425,0)
ORWTIU SAVE TIU CONTEXT
"KRN",19,10082,"RPC",1426,0)
ORWU CLINLOC
"KRN",19,10082,"RPC",1427,0)
ORWU DEVICE
"KRN",19,10082,"RPC",1428,0)
ORWU DT
"KRN",19,10082,"RPC",1429,0)
ORWU EXTNAME
"KRN",19,10082,"RPC",1430,0)
ORWU GBLREF
"KRN",19,10082,"RPC",1431,0)
ORWU GENERIC
"KRN",19,10082,"RPC",1432,0)
ORWU HASKEY
"KRN",19,10082,"RPC",1433,0)
ORWU HOSPLOC
"KRN",19,10082,"RPC",1434,0)
ORWU INPLOC
"KRN",19,10082,"RPC",1435,0)
ORWU NEWPERS
"KRN",19,10082,"RPC",1436,0)
ORWU NPHASKEY
"KRN",19,10082,"RPC",1437,0)
ORWU PATCH
"KRN",19,10082,"RPC",1438,0)
ORWU TOOLMENU
"KRN",19,10082,"RPC",1439,0)
ORWU USERINFO
"KRN",19,10082,"RPC",1440,0)
ORWU VALDT
"KRN",19,10082,"RPC",1441,0)
ORWU VALIDSIG
"KRN",19,10082,"RPC",1442,0)
ORWU VERSRV
"KRN",19,10082,"RPC",1443,0)
ORWU16 DEVICE
"KRN",19,10082,"RPC",1444,0)
ORWU16 HOSPLOC
"KRN",19,10082,"RPC",1445,0)
ORWU16 NEWPERS
"KRN",19,10082,"RPC",1446,0)
ORWU16 USERINFO
"KRN",19,10082,"RPC",1447,0)
ORWU16 VALDT
"KRN",19,10082,"RPC",1448,0)
ORWU16 VALIDSIG
"KRN",19,10082,"RPC",1449,0)
ORWUH POPUP
"KRN",19,10082,"RPC",1450,0)
ORWUX SYMTAB
"KRN",19,10082,"RPC",1451,0)
ORWUXT LST
"KRN",19,10082,"RPC",1452,0)
ORWUXT REF
"KRN",19,10082,"RPC",1453,0)
ORWUXT VAL
"KRN",19,10082,"RPC",1454,0)
ORQQCN DEFAULT REQUEST REASON
"KRN",19,10082,"RPC",1455,0)
ORWDX LOCK ORDER
"KRN",19,10082,"RPC",1456,0)
ORWDX UNLOCK ORDER
"KRN",19,10082,"RPC",1457,0)
ORWDCN32 NEWDLG
"KRN",19,10082,"RPC",1458,0)
ORQQCN GET SERVICE IEN
"KRN",19,10082,"RPC",1459,0)
ORQQCN PROVDX
"KRN",19,10082,"RPC",1460,0)
TIU TEMPLATE ACCESS LEVEL
"KRN",19,10082,"RPC",1461,0)
TIU GET DOCUMENT TITLE
"KRN",19,10082,"RPC",1462,0)
ORWPT BYWARD
"KRN",19,10082,"RPC",1463,0)
ORQQPX GET HIST LOCATIONS
"KRN",19,10082,"RPC",1464,0)
ORQQPX NEW REMINDERS ACTIVE
"KRN",19,10082,"RPC",1465,0)
ORWPCE GET VISIT
"KRN",19,10082,"RPC",1480,0)
TIU GET REQUEST
"KRN",19,10082,"RPC",1481,0)
ORWORB KILL EXPIR MED ALERT
"KRN",19,10082,"RPC",1482,0)
DG CHK BS5 XREF ARRAY
"KRN",19,10082,"RPC",1483,0)
DG CHK BS5 XREF Y/N
"KRN",19,10082,"RPC",1484,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,10082,"RPC",1485,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,10082,"RPC",1486,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,10082,"RPC",1487,0)
ORQQCN CANEDIT
"KRN",19,10082,"RPC",1488,0)
ORQQCN EDIT DEFAULT REASON
"KRN",19,10082,"RPC",1489,0)
ORQQCN SF513 WINDOWS PRINT
"KRN",19,10082,"RPC",1490,0)
ORWCIRN FACLIST
"KRN",19,10082,"RPC",1491,0)
ORWDLR32 GET LAB TIMES
"KRN",19,10082,"RPC",1492,0)
ORWPT LEGACY
"KRN",19,10082,"RPC",1493,0)
ORWRP GET DEFAULT PRINTER
"KRN",19,10082,"RPC",1494,0)
ORWRP PRINT WINDOWS REPORT
"KRN",19,10082,"RPC",1495,0)
ORWRP SAVE DEFAULT PRINTER
"KRN",19,10082,"RPC",1496,0)
ORWRP WINPRINT DEFAULT
"KRN",19,10082,"RPC",1497,0)
ORWRP WINPRINT LAB REPORTS
"KRN",19,10082,"RPC",1498,0)
ORWTIU WINPRINT NOTE
"KRN",19,10082,"RPC",1500,0)
ORWPCE GAFOK
"KRN",19,10082,"RPC",1501,0)
ORWPCE MHCLINIC
"KRN",19,10082,"RPC",1502,0)
ORWPCE LOADGAF
"KRN",19,10082,"RPC",1503,0)
ORWPCE SAVEGAF
"KRN",19,10082,"RPC",1504,0)
ORWPCE FORCE
"KRN",19,10082,"RPC",1505,0)
TIU GET DEFAULT PROVIDER
"KRN",19,10082,"RPC",1506,0)
TIU GET SITE PARAMETERS
"KRN",19,10082,"RPC",1507,0)
TIU IS USER A PROVIDER?
"KRN",19,10082,"RPC",1508,0)
ORWOR VWGET
"KRN",19,10082,"RPC",1509,0)
ORWOR VWSET
"KRN",19,10082,"RPC",1510,0)
ORWU PARAM
"KRN",19,10082,"RPC",1511,0)
ORWDOR LKSCRN
"KRN",19,10082,"RPC",1512,0)
ORWDOR VALNUM
"KRN",19,10082,"RPC",1513,0)
ORWDPS32 VALROUTE
"KRN",19,10082,"RPC",1515,0)
ORWORB UNSIG ORDERS FOLLOWUP
"KRN",19,10082,"RPC",1516,0)
ORWTIU GET LISTBOX ITEM
"KRN",19,10082,"RPC",1517,0)
ORWRP2 HS COMP FILES
"KRN",19,10082,"RPC",1518,0)
ORWRP2 HS COMPONENTS
"KRN",19,10082,"RPC",1519,0)
ORWRP2 HS FILE LOOKUP
"KRN",19,10082,"RPC",1520,0)
ORWRP2 HS REPORT TEXT
"KRN",19,10082,"RPC",1521,0)
ORWRP2 HS SUBITEMS
"KRN",19,10082,"RPC",1522,0)
ORWPCE HASCPT
"KRN",19,10082,"RPC",1523,0)
ORWPCE ASKPCE
"KRN",19,10082,"RPC",1524,0)
ORWPCE MHTESTOK
"KRN",19,10082,"RPC",1525,0)
ORWPCE GAFURL
"KRN",19,10082,"RPC",1526,0)
ORQQPXRM DIALOG PROMPTS
"KRN",19,10082,"RPC",1527,0)
ORQQPXRM EDUCATION SUBTOPICS
"KRN",19,10082,"RPC",1528,0)
ORQQPXRM EDUCATION SUMMARY
"KRN",19,10082,"RPC",1529,0)
ORQQPXRM EDUCATION TOPIC
"KRN",19,10082,"RPC",1530,0)
ORQQPXRM MENTAL HEALTH
"KRN",19,10082,"RPC",1531,0)
ORQQPXRM MENTAL HEALTH RESULTS
"KRN",19,10082,"RPC",1532,0)
ORQQPXRM MENTAL HEALTH SAVE
"KRN",19,10082,"RPC",1533,0)
ORQQPXRM PROGRESS NOTE HEADER
"KRN",19,10082,"RPC",1534,0)
ORQQPXRM REMINDER CATEGORIES
"KRN",19,10082,"RPC",1535,0)
ORQQPXRM REMINDER DETAIL
"KRN",19,10082,"RPC",1536,0)
ORQQPXRM REMINDER DIALOG
"KRN",19,10082,"RPC",1537,0)
ORQQPXRM REMINDER EVALUATION
"KRN",19,10082,"RPC",1538,0)
ORQQPXRM REMINDER INQUIRY
"KRN",19,10082,"RPC",1539,0)
ORQQPXRM REMINDER WEB
"KRN",19,10082,"RPC",1540,0)
ORQQPXRM REMINDERS APPLICABLE
"KRN",19,10082,"RPC",1541,0)
ORQQPXRM REMINDERS UNEVALUATED
"KRN",19,10082,"RPC",1542,0)
ORWLRR INFO
"KRN",19,10082,"RPC",1543,0)
TIU GET PRINT NAME
"KRN",19,10082,"RPC",1544,0)
TIU WAS THIS SAVED?
"KRN",19,10082,"RPC",1545,0)
ORWD1 COMLOC
"KRN",19,10082,"RPC",1546,0)
ORWD1 SIG4ANY
"KRN",19,10082,"RPC",1547,0)
ORWD1 SIG4ONE
"KRN",19,10082,"RPC",1548,0)
ORWOR UNSIGN
"KRN",19,10082,"RPC",1549,0)
ORWPT INPLOC
"KRN",19,10082,"RPC",1553,0)
ORQQCN2 GET PREREQUISITE
"KRN",19,10082,"RPC",1554,0)
ORQQCN2 SCHEDULE CONSULT
"KRN",19,10082,"RPC",1555,0)
YS GAF API
"KRN",19,10082,"RPC",1556,0)
TIU LONG LIST BOILERPLATED
"KRN",19,10082,"RPC",1557,0)
ORWDLR33 FUTURE LAB COLLECTS
"KRN",19,10082,"RPC",1558,0)
ORWRP PRINT REMOTE REPORT
"KRN",19,10082,"RPC",1559,0)
ORWRP PRINT WINDOWS REMOTE
"KRN",19,10082,"RPC",1560,0)
ORWRP PRINT LAB REMOTE
"KRN",19,10082,"RPC",1561,0)
ORWRP PRINT WINDOWS LAB REMOTE
"KRN",19,10082,"RPC",1562,0)
ORQQPXRM DIALOG ACTIVE
"KRN",19,10082,"RPC",1563,0)
ORWPCE MH TEST AUTHORIZED
"KRN",19,10082,"RPC",1564,0)
TIU GET BOILERPLATE
"KRN",19,10082,"RPC",1565,0)
ORWRP2 HS COMPONENT SUBS
"KRN",19,10082,"RPC",1566,0)
ORWCH SAVFONT
"KRN",19,10082,"RPC",1567,0)
ORWDLR33 LASTTIME
"KRN",19,10082,"RPC",1568,0)
ORWD1 SVONLY
"KRN",19,10082,"RPC",1569,0)
ORWPCE HASVISIT
"KRN",19,10082,"RPC",1570,0)
ORWPCE GETMOD
"KRN",19,10082,"RPC",1571,0)
ORWPCE CPTMODS
"KRN",19,10082,"RPC",1572,0)
XWB REMOTE CLEAR
"KRN",19,10082,"RPC",1573,0)
XWB REMOTE GETDATA
"KRN",19,10082,"RPC",1574,0)
XWB REMOTE RPC
"KRN",19,10082,"RPC",1575,0)
XWB REMOTE STATUS CHECK
"KRN",19,10082,"RPC",1576,0)
ORQQCN ASSIGNABLE MED RESULTS
"KRN",19,10082,"RPC",1577,0)
ORQQCN ATTACH MED RESULTS
"KRN",19,10082,"RPC",1578,0)
ORQQCN GET MED RESULT DETAILS
"KRN",19,10082,"RPC",1579,0)
ORQQCN REMOVABLE MED RESULTS
"KRN",19,10082,"RPC",1580,0)
ORQQCN REMOVE MED RESULTS
"KRN",19,10082,"RPC",1581,0)
ORQQCN SVC W/SYNONYMS
"KRN",19,10082,"RPC",1582,0)
ORWCV1 COVERSHEET LIST
"KRN",19,10082,"RPC",1583,0)
ORWORB KILL EXPIR OI ALERT
"KRN",19,10082,"RPC",1584,0)
ORWPCE GETSVC
"KRN",19,10082,"RPC",1585,0)
ORWRP LAB REPORT LISTS
"KRN",19,10082,"RPC",1586,0)
ORWTPL GETNSORT
"KRN",19,10082,"RPC",1587,0)
ORWTPN GETCLASS
"KRN",19,10082,"RPC",1588,0)
ORWTPN GETTC
"KRN",19,10082,"RPC",1589,0)
ORWTPO CSARNGD
"KRN",19,10082,"RPC",1590,0)
ORWTPO CSLABD
"KRN",19,10082,"RPC",1591,0)
ORWTPO GETTABS
"KRN",19,10082,"RPC",1592,0)
ORWTPP ADDLIST
"KRN",19,10082,"RPC",1593,0)
ORWTPP CHKSURR
"KRN",19,10082,"RPC",1594,0)
ORWTPP CLDAYS
"KRN",19,10082,"RPC",1595,0)
ORWTPP CLEARNOT
"KRN",19,10082,"RPC",1596,0)
ORWTPP CLRANGE
"KRN",19,10082,"RPC",1597,0)
ORWTPP CSARNG
"KRN",19,10082,"RPC",1598,0)
ORWTPP CSLAB
"KRN",19,10082,"RPC",1599,0)
ORWTPP DELLIST
"KRN",19,10082,"RPC",1600,0)
ORWTPP GETCOMBO
"KRN",19,10082,"RPC",1601,0)
ORWTPP GETCOS
"KRN",19,10082,"RPC",1602,0)
ORWTPP GETDCOS
"KRN",19,10082,"RPC",1603,0)
ORWTPP GETNOT
"KRN",19,10082,"RPC",1604,0)
ORWTPP GETNOTO
"KRN",19,10082,"RPC",1605,0)
ORWTPP GETOC
"KRN",19,10082,"RPC",1606,0)
ORWTPP GETOTHER
"KRN",19,10082,"RPC",1607,0)
ORWTPP GETREM
"KRN",19,10082,"RPC",1608,0)
ORWTPP GETSUB
"KRN",19,10082,"RPC",1609,0)
ORWTPP GETSURR
"KRN",19,10082,"RPC",1610,0)
ORWTPP GETTD
"KRN",19,10082,"RPC",1611,0)
ORWTPP GETTU
"KRN",19,10082,"RPC",1612,0)
ORWTPP LSDEF
"KRN",19,10082,"RPC",1613,0)
ORWTPP NEWLIST
"KRN",19,10082,"RPC",1614,0)
ORWTPP PLISTS
"KRN",19,10082,"RPC",1615,0)
ORWTPP PLTEAMS
"KRN",19,10082,"RPC",1616,0)
ORWTPP REMLIST
"KRN",19,10082,"RPC",1617,0)
ORWTPP SAVECD
"KRN",19,10082,"RPC",1618,0)
ORWTPP SAVECS
"KRN",19,10082,"RPC",1619,0)
ORWTPP SAVELIST
"KRN",19,10082,"RPC",1620,0)
ORWTPP SAVENOT
"KRN",19,10082,"RPC",1621,0)
ORWTPP SAVENOTO
"KRN",19,10082,"RPC",1622,0)
ORWTPP SAVEOC
"KRN",19,10082,"RPC",1623,0)
ORWTPP SAVEPLD
"KRN",19,10082,"RPC",1624,0)
ORWTPP SAVESURR
"KRN",19,10082,"RPC",1625,0)
ORWTPP SAVET
"KRN",19,10082,"RPC",1626,0)
ORWTPP SETCOMBO
"KRN",19,10082,"RPC",1627,0)
ORWTPP SETDCOS
"KRN",19,10082,"RPC",1628,0)
ORWTPP SETOTHER
"KRN",19,10082,"RPC",1629,0)
ORWTPP SETREM
"KRN",19,10082,"RPC",1630,0)
ORWTPP SETSUB
"KRN",19,10082,"RPC",1631,0)
ORWTPP SORTDEF
"KRN",19,10082,"RPC",1632,0)
ORWTPP TEAMS
"KRN",19,10082,"RPC",1633,0)
ORWTPT ATEAMS
"KRN",19,10082,"RPC",1634,0)
ORWTPT GETTEAM
"KRN",19,10082,"RPC",1635,0)
TIU TEMPLATE GET DEFAULTS
"KRN",19,10082,"RPC",1636,0)
TIU TEMPLATE GET DESCRIPTION
"KRN",19,10082,"RPC",1637,0)
TIU TEMPLATE SET DEFAULTS
"KRN",19,10082,"RPC",1638,0)
ORWTIU IDNOTES INSTALLED
"KRN",19,10082,"RPC",1639,0)
ORQQPX GET FOLDERS
"KRN",19,10082,"RPC",1640,0)
ORQQPX SET FOLDERS
"KRN",19,10082,"RPC",1641,0)
TIU FIELD CAN EDIT
"KRN",19,10082,"RPC",1642,0)
TIU FIELD DELETE
"KRN",19,10082,"RPC",1643,0)
TIU FIELD EXPORT
"KRN",19,10082,"RPC",1644,0)
TIU FIELD IMPORT
"KRN",19,10082,"RPC",1645,0)
TIU FIELD LIST
"KRN",19,10082,"RPC",1646,0)
TIU FIELD LOAD
"KRN",19,10082,"RPC",1647,0)
TIU FIELD LOAD BY IEN
"KRN",19,10082,"RPC",1648,0)
TIU FIELD LOCK
"KRN",19,10082,"RPC",1649,0)
TIU FIELD NAME IS UNIQUE
"KRN",19,10082,"RPC",1650,0)
TIU FIELD SAVE
"KRN",19,10082,"RPC",1651,0)
TIU FIELD UNLOCK
"KRN",19,10082,"RPC",1652,0)
ORWDPS1 CHK94
"KRN",19,10082,"RPC",1653,0)
ORWDPS1 ODSLCT
"KRN",19,10082,"RPC",1654,0)
ORWDPS1 SCHALL
"KRN",19,10082,"RPC",1655,0)
ORWDPS2 ADMIN
"KRN",19,10082,"RPC",1656,0)
ORWDPS2 DAY2QTY
"KRN",19,10082,"RPC",1657,0)
ORWDPS2 OISLCT
"KRN",19,10082,"RPC",1658,0)
ORWDPS2 REQST
"KRN",19,10082,"RPC",1659,0)
ORWDX DGNM
"KRN",19,10082,"RPC",1660,0)
ORWUL FV4DG
"KRN",19,10082,"RPC",1661,0)
ORWUL FVIDX
"KRN",19,10082,"RPC",1662,0)
ORWUL FVSUB
"KRN",19,10082,"RPC",1663,0)
ORWUL QV4DG
"KRN",19,10082,"RPC",1664,0)
ORWUL QVIDX
"KRN",19,10082,"RPC",1665,0)
ORWUL QVSUB
"KRN",19,10082,"RPC",1666,0)
ORWDPS1 DFLTSPLY
"KRN",19,10082,"RPC",1668,0)
PXRM REMINDER DIALOG (TIU)
"KRN",19,10082,"RPC",1669,0)
ORWPCE ANYTIME
"KRN",19,10082,"RPC",1670,0)
ORQQPX GET DEF LOCATIONS
"KRN",19,10082,"RPC",1671,0)
ORWTPP GETIMG
"KRN",19,10082,"RPC",1672,0)
ORWTPP SETIMG
"KRN",19,10082,"RPC",1673,0)
ORWTPO GETIMGD
"KRN",19,10082,"RPC",1674,0)
ORQQPX REM INSERT AT CURSOR
"KRN",19,10082,"RPC",1675,0)
TIU REMINDER DIALOGS
"KRN",19,10082,"RPC",1676,0)
TIU REM DLG OK AS TEMPLATE
"KRN",19,10082,"RPC",1677,0)
ORWDPS2 MAXREF
"KRN",19,10082,"RPC",1678,0)
ORWDPS2 SCHREQ
"KRN",19,10082,"RPC",1679,0)
ORWRP COLUMN HEADERS
"KRN",19,10082,"RPC",1680,0)
TIU FIELD DOLMTEXT
"KRN",19,10082,"RPC",1681,0)
TIU TEMPLATE PERSONAL OBJECTS
"KRN",19,10082,"RPC",1682,0)
ORWPCE AUTO VISIT TYPE SELECT
"KRN",19,10082,"RPC",1683,0)
ORWDPS2 QTY2DAY
"KRN",19,10082,"RPC",1684,0)
ORWU HAS OPTION ACCESS
"KRN",19,10082,"RPC",1685,0)
TIU TEMPLATE LOCK
"KRN",19,10082,"RPC",1686,0)
ORQQPX LVREMLST
"KRN",19,10082,"RPC",1687,0)
ORQQPX NEW COVER SHEET ACTIVE
"KRN",19,10082,"RPC",1688,0)
ORQQPX NEW COVER SHEET REMS
"KRN",19,10082,"RPC",1689,0)
ORQQPX SAVELVL
"KRN",19,10082,"RPC",1690,0)
PXRM REMINDER CATEGORY
"KRN",19,10082,"RPC",1691,0)
PXRM REMINDERS AND CATEGORIES
"KRN",19,10082,"RPC",1692,0)
TIU DIV AND CLASS INFO
"KRN",19,10082,"RPC",1693,0)
TIU TEMPLATE GETBOIL
"KRN",19,10082,"RPC",1694,0)
TIU TEMPLATE GETITEMS
"KRN",19,10082,"RPC",1695,0)
TIU TEMPLATE GETROOTS
"KRN",19,10082,"RPC",1696,0)
TIU TEMPLATE GETTEXT
"KRN",19,10082,"RPC",1697,0)
TIU TEMPLATE ISEDITOR
"KRN",19,10082,"RPC",1698,0)
TIU TEMPLATE UNLOCK
"KRN",19,10082,"RPC",1699,0)
TIU USER CLASS LONG LIST
"KRN",19,10082,"RPC",1700,0)
ORWPCE ALWAYS CHECKOUT
"KRN",19,10082,"RPC",1701,0)
ORWPCE GET EXCLUDED
"KRN",19,10082,"RPC",1702,0)
ORWDPS1 FORMALT
"KRN",19,10082,"RPC",1703,0)
ORQPT DEFAULT LIST SORT
"KRN",19,10082,"RPC",1704,0)
ORWDPS1 DOSEALT
"KRN",19,10082,"RPC",1705,0)
ORWTPR OCDESC
"KRN",19,10082,"RPC",1706,0)
ORWTPR NOTDESC
"KRN",19,10082,"RPC",1707,0)
ORWDPS1 FAILDEA
"KRN",19,10082,"RPC",1708,0)
ORQPT DEFAULT CLINIC DATE RANG
"KRN",19,10082,"RPC",1709,0)
ORWTIU CANLINK
"KRN",19,10082,"RPC",1710,0)
TIU ID ATTACH ENTRY
"KRN",19,10082,"RPC",1711,0)
TIU ID CAN ATTACH
"KRN",19,10082,"RPC",1712,0)
TIU ID CAN RECEIVE
"KRN",19,10082,"RPC",1713,0)
TIU ID DETACH ENTRY
"KRN",19,10082,"RPC",1714,0)
ORWCOM GETOBJS
"KRN",19,10082,"RPC",1715,0)
ORWCOM DETAILS
"KRN",19,10082,"RPC",1716,0)
ORWCOM PTOBJ
"KRN",19,10082,"RPC",1718,0)
TIU TEMPLATE GETLINK
"KRN",19,10082,"RPC",1719,0)
TIU TEMPLATE ALL TITLES
"KRN",19,10082,"RPC",1720,0)
ORWSR LIST
"KRN",19,10082,"RPC",1721,0)
ORWSR SHOW SURG TAB
"KRN",19,10082,"RPC",1722,0)
ORWSR GET SURG CONTEXT
"KRN",19,10082,"RPC",1723,0)
ORWSR SAVE SURG CONTEXT
"KRN",19,10082,"RPC",1724,0)
ORWSR ONECASE
"KRN",19,10082,"RPC",1725,0)
ORWSR OPTOP
"KRN",19,10082,"RPC",1726,0)
ORWSR OPTOP NON-OR
"KRN",19,10082,"RPC",1727,0)
ORWSR SHOW OPTOP WHEN SIGNING
"KRN",19,10082,"RPC",1728,0)
ORWSR IS NON-OR PROCEDURE
"KRN",19,10082,"RPC",1729,0)
ORWSR CASELIST
"KRN",19,10082,"RPC",1730,0)
ORQQCN GET PROC IEN
"KRN",19,10082,"RPC",1731,0)
ORWRP PRINT V REPORT
"KRN",19,10082,"RPC",1732,0)
ORWRP3 EXPAND COLUMNS
"KRN",19,10082,"RPC",1733,0)
ORWTPD ACTDF
"KRN",19,10082,"RPC",1734,0)
ORWTPD DELDFLT
"KRN",19,10082,"RPC",1735,0)
ORWTPD GETDFLT
"KRN",19,10082,"RPC",1736,0)
ORWTPD RSDFLT
"KRN",19,10082,"RPC",1737,0)
ORWTPD SUDF
"KRN",19,10082,"RPC",1738,0)
ORWTPD SUINDV
"KRN",19,10082,"RPC",1739,0)
ORWTPD GETSETS
"KRN",19,10082,"RPC",1740,0)
ORWCOM ORDEROBJ
"KRN",19,10082,"RPC",1741,0)
ORWRP2 COMPABV
"KRN",19,10082,"RPC",1742,0)
ORWRP2 GETLKUP
"KRN",19,10082,"RPC",1743,0)
ORWRP2 SAVLKUP
"KRN",19,10082,"RPC",1744,0)
ORWRP2 COMPDISP
"KRN",19,10082,"RPC",1745,0)
ORWPCE ISCLINIC
"KRN",19,10082,"RPC",1746,0)
ORWCH SAVECOL
"KRN",19,10082,"RPC",1747,0)
ORWSR RPTLIST
"KRN",19,10082,"RPC",1748,0)
ORQQPXRM MST UPDATE
"KRN",19,10082,"RPC",1749,0)
ORWMC PATIENT PROCEDURES1
"KRN",19,10082,"RPC",1750,0)
ORWRA IMAGING EXAMS1
"KRN",19,10082,"RPC",1751,0)
ORWRA REPORT TEXT1
"KRN",19,10082,"RPC",1752,0)
ORWDPS4 CPINFO
"KRN",19,10082,"RPC",1753,0)
ORWDPS4 CPLST
"KRN",19,10082,"RPC",1754,0)
ORWORB KILL UNVER MEDS ALERT
"KRN",19,10082,"RPC",1755,0)
ORWORB KILL UNVER ORDERS ALERT
"KRN",19,10082,"RPC",1756,0)
ORWPCE HNCOK
"KRN",19,10082,"RPC",1757,0)
ORWPS MEDHIST
"KRN",19,10082,"RPC",1758,0)
TIU FIELD CHECK
"KRN",19,10082,"RPC",1759,0)
TIU FIELD LIST ADD
"KRN",19,10082,"RPC",1760,0)
TIU FIELD LIST IMPORT
"KRN",19,10082,"RPC",1761,0)
TIU SET DOCUMENT TEXT
"KRN",19,10082,"RPC",1762,0)
ORWDPS2 CHKPI
"KRN",19,10082,"RPC",1763,0)
ORWDXR GTORITM
"KRN",19,10082,"RPC",1764,0)
ORWDPS2 CHKGRP
"KRN",19,10082,"RPC",1765,0)
ORWDPS2 QOGRP
"KRN",19,10082,"RPC",1766,0)
ORWDXR GETPKG
"KRN",19,10082,"RPC",1767,0)
ORQPT MAKE RPL
"KRN",19,10082,"RPC",1768,0)
ORQPT READ RPL
"KRN",19,10082,"RPC",1769,0)
ORQPT KILL RPL
"KRN",19,10082,"RPC",1770,0)
ORWTIU GET SAVED CP FIELDS
"KRN",19,10082,"RPC",1771,0)
ORWDPS1 LOCPICK
"KRN",19,10082,"RPC",1772,0)
ORWPT LAST5 RPL
"KRN",19,10082,"RPC",1773,0)
ORWPT FULLSSN RPL
"KRN",19,10082,"RPC",1774,0)
ORWOR PKIUSE
"KRN",19,10082,"RPC",1775,0)
ORWOR1 SIG
"KRN",19,10082,"RPC",1777,0)
ORWOR1 CHKDIG
"KRN",19,10082,"RPC",1778,0)
ORWOR1 GETDTEXT
"KRN",19,10082,"RPC",1779,0)
ORWOR1 GETDSIG
"KRN",19,10082,"RPC",1780,0)
ORWTPD GETIMG
"KRN",19,10082,"U")
CPRSCHART VERSION 1.0.19.7
"KRN",8989.51,4724,-1)
0^1
"KRN",8989.51,4724,0)
ORWOR PKI USE^Allow PKI Functionality^^^Yes/No
"KRN",8989.51,4724,1)
Y^Y:yes;N:no^Enter 'yes' to allow PKI Digital Signature functionality.
"KRN",8989.51,4724,20,0)
^8989.512^1^1^3020320^^^
"KRN",8989.51,4724,20,1,0)
'Yes' indicates the user can Digitally Sign Schedule II Medication orders.
"KRN",8989.51,4724,30,0)
^8989.513I^4^4
"KRN",8989.51,4724,30,1,0)
1^200
"KRN",8989.51,4724,30,2,0)
2^4
"KRN",8989.51,4724,30,3,0)
3^4.2
"KRN",8989.51,4724,30,4,0)
4^9.4
"KRN",8994,1119,-1)
0^3
"KRN",8994,1119,0)
ORQPT MAKE RPL^RPLMAKE^ORQPTQ11^1^S
"KRN",8994,1119,1,0)
^8994.01^2^2^3011126^^^^
"KRN",8994,1119,1,1,0)
Passes Team List IEN, creates a TMP file entry of patients based thereon, 
"KRN",8994,1119,1,2,0)
and receives a $J job number in return.
"KRN",8994,1119,2,0)
^8994.02A^^0
"KRN",8994,1119,3,0)
^8994.03^2^2^3011126^^^^
"KRN",8994,1119,3,1,0)
Job Number ($J) to assist in subsequent reading of TMP global that was 
"KRN",8994,1119,3,2,0)
created.
"KRN",8994,1120,-1)
0^4
"KRN",8994,1120,0)
ORQPT READ RPL^RPLREAD^ORQPTQ11^2^^^^
"KRN",8994,1120,1,0)
^8994.01^3^3^3011129^^^^
"KRN",8994,1120,1,1,0)
Passes global reference and other parameters, and receives a list of 
"KRN",8994,1120,1,2,0)
patients (up to 44 maximum) with IENs, for use in scrolling a Long List 
"KRN",8994,1120,1,3,0)
Box (LLB) componenet.
"KRN",8994,1120,2,0)
^8994.02A^^0
"KRN",8994,1120,3,0)
^8994.03^2^2^3011129^^^^
"KRN",8994,1120,3,1,0)
Array of patients with their IENs for populating Long List Box (LLB) 
"KRN",8994,1120,3,2,0)
component.
"KRN",8994,1121,-1)
0^5
"KRN",8994,1121,0)
ORQPT KILL RPL^RPLCLEAN^ORQPTQ11^1^S
"KRN",8994,1121,1,0)
^8994.01^3^3^3011126^^^^
"KRN",8994,1121,1,1,0)
This RPC is passed a ^TMP file root and $J
"KRN",8994,1121,1,2,0)
(job number) and kills the ^TMP("ORRPL",$J global
"KRN",8994,1121,1,3,0)
data based on the passed file root w/job number.
"KRN",8994,1121,2,0)
^8994.02A^^0
"KRN",8994,1122,-1)
0^2
"KRN",8994,1122,0)
ORWDPS1 LOCPICK^LOCPICK^ORWDPS1^1^^^^1
"KRN",8994,1123,-1)
0^1
"KRN",8994,1123,0)
ORWTIU GET SAVED CP FIELDS^GETCP^ORWTIU^1
"KRN",8994,1123,1,0)
^^3^3^3020213^
"KRN",8994,1123,1,1,0)
Given a TIU document of the clinical procedures class, return the author, 
"KRN",8994,1123,1,2,0)
title, cosigner, procedure summary code, and date/time of procedure, as 
"KRN",8994,1123,1,3,0)
stored on the server.
"KRN",8994,1123,2,0)
^8994.02A^1^1
"KRN",8994,1123,2,1,0)
TIUDA^1^32^1
"KRN",8994,1123,2,1,1,0)
^^1^1^3020213^
"KRN",8994,1123,2,1,1,1,0)
Pointer to file 8925 for the document.
"KRN",8994,1123,2,"B","TIUDA",1)

"KRN",8994,1123,3,0)
^^1^1^3020213^
"KRN",8994,1123,3,1,0)
AUTHOR^COSIGNER^PROCSUMMCODE^PROCDATE^DOCTITLE
"KRN",8994,1124,-1)
0^6
"KRN",8994,1124,0)
ORWOR PKIUSE^PKIUSE^ORWOR^1
"KRN",8994,1125,-1)
0^7
"KRN",8994,1125,0)
ORWPT LAST5 RPL^LAST5RPL^ORWPT^2
"KRN",8994,1125,1,0)
^^2^2^3020325^
"KRN",8994,1125,1,1,0)
Returns a list of patients matching the string of Last Name Initial_Last 
"KRN",8994,1125,1,2,0)
4 SSN (Initial/Last 4 look-up based on Restricted Patient List).
"KRN",8994,1126,-1)
0^8
"KRN",8994,1126,0)
ORWPT FULLSSN RPL^FSSNRPL^ORWPT^2
"KRN",8994,1126,1,0)
^^2^2^3020325^
"KRN",8994,1126,1,1,0)
Given an SSN in the format 999999999(P), return a list of matching 
"KRN",8994,1126,1,2,0)
patients based on Restricted Patient List.
"KRN",8994,1126,2,0)
^8994.02A^1^1
"KRN",8994,1126,2,1,0)
IEN^1^15^1
"KRN",8994,1126,2,1,1,0)
^^1^1^3020325^
"KRN",8994,1126,2,1,1,1,0)
SSN in the format '999999999(P)'.
"KRN",8994,1126,2,"B","IEN",1)

"KRN",8994,1127,-1)
0^11
"KRN",8994,1127,0)
ORWOR1 CHKDIG^CHKDIG^ORWOR1^1
"KRN",8994,1127,1,0)
^8994.01^1^1^3020403^^
"KRN",8994,1127,1,1,0)
Returns true if an order requires a digital signature.
"KRN",8994,1128,-1)
0^12
"KRN",8994,1128,0)
ORWOR1 GETDTEXT^GETDTEXT^ORWOR1^2
"KRN",8994,1128,1,0)
^8994.01^1^1^3020403^^^
"KRN",8994,1128,1,1,0)
Returns the external text of an existing order.
"KRN",8994,1129,-1)
0^13
"KRN",8994,1129,0)
ORWOR1 GETDSIG^GETDSIG^ORWOR1^1
"KRN",8994,1129,1,0)
^8994.01^1^1^3020403^^^^
"KRN",8994,1129,1,1,0)
Returns the digital signature of an existing order.
"KRN",8994,1130,-1)
0^9
"KRN",8994,1130,0)
ORWOR1 SIG^SIG^ORWOR1^1
"KRN",8994,1130,1,0)
^8994.01^1^1^3020404^^^^
"KRN",8994,1130,1,1,0)
Returns 1 if signature gets stored.
"KRN",8994,1133,-1)
0^14
"KRN",8994,1133,0)
ORWCIRN RESTRICT^RESTRICT^ORWCIRN^2
"KRN",8994,1133,1,0)
^^1^1^3020418^
"KRN",8994,1133,1,1,0)
This RPC checks for sensitive patients on a remote system.
"KRN",8994,1133,2,0)
^8994.02A^1^1
"KRN",8994,1133,2,1,0)
PATID^1^^1^1
"KRN",8994,1133,2,1,1,0)
^^1^1^3020418^
"KRN",8994,1133,2,1,1,1,0)
PATID = DFN;ICN
"KRN",8994,1133,2,"B","PATID",1)

"KRN",8994,1133,2,"PARAMSEQ",1,1)

"KRN",8994,1134,-1)
0^15
"KRN",8994,1134,0)
ORWTPD GETIMG^GETIMG^ORWTPD^1^^^^1
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",22,-1)
1^1
"PKG",22,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",22,20,0)
^9.402P^^
"PKG",22,22,0)
^9.49I^1^1
"PKG",22,22,1,0)
3.0^2971217^2980204^64
"PKG",22,22,1,"PAH",1,0)
132^3020516^1362
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
30
"RTN","ORCSAVE1")
0^24^B25872998
"RTN","ORCSAVE1",1,0)
ORCSAVE1 ; SLC/MKB - Save Order Text ;7/21/97  15:47
"RTN","ORCSAVE1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**92,132**;Dec 17, 1997
"RTN","ORCSAVE1",3,0)
 ;
"RTN","ORCSAVE1",4,0)
 ; ^ORD(101.41,+ORDIALOG,10,ITM,2)=Seq#^Format^Omit^Lead Text^Trail Text
"RTN","ORCSAVE1",5,0)
 ; ^ORD(101.41,+ORDIALOG,10,"ATXT",Seq#,ITM)=""
"RTN","ORCSAVE1",6,0)
 ;
"RTN","ORCSAVE1",7,0)
ORDTEXT(ORDER) ; -- Build and save order text from ORDIALOG() into ORDER
"RTN","ORCSAVE1",8,0)
 N ORTX,I,IFN,ACT,ORSET
"RTN","ORCSAVE1",9,0)
 D ORTX(240) Q:'$G(ORTX)
"RTN","ORCSAVE1",10,0)
 S IFN=+ORDER,ACT=+$P(ORDER,";",2) S:ACT'>0 ACT=1
"RTN","ORCSAVE1",11,0)
 F I=1:1:ORTX S ^OR(100,IFN,8,ACT,.1,I,0)=ORTX(I)
"RTN","ORCSAVE1",12,0)
 S ^OR(100,IFN,8,ACT,.1,0)=U_U_ORTX_U_ORTX_U_DT_U
"RTN","ORCSAVE1",13,0)
 I $G(ORDEA) D  ;PKI Digital Signature flag
"RTN","ORCSAVE1",14,0)
 . S ORSET=0
"RTN","ORCSAVE1",15,0)
 . D DIGTEXT(IFN)
"RTN","ORCSAVE1",16,0)
 . F I=1:1:ORSET S ^OR(100,IFN,8,ACT,.2,I,0)=ORSET(I)
"RTN","ORCSAVE1",17,0)
 . I ORSET>0 S ^OR(100,IFN,8,ACT,.2,0)=U_U_ORSET_U_ORSET_U_DT_U
"RTN","ORCSAVE1",18,0)
 Q
"RTN","ORCSAVE1",19,0)
 ;
"RTN","ORCSAVE1",20,0)
ORTX(WIDTH) ; -- May enter here to return order text in ORTX()
"RTN","ORCSAVE1",21,0)
 N ORP,SEQ,ITEM,ORMAX
"RTN","ORCSAVE1",22,0)
 K ORTX S ORMAX=$S(+$G(WIDTH):WIDTH,1:240)
"RTN","ORCSAVE1",23,0)
 D EXT ; get external form of values
"RTN","ORCSAVE1",24,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"ATXT",SEQ)) Q:SEQ'>0  S ITEM=$O(^(SEQ,0)) D TEXT(ITEM)
"RTN","ORCSAVE1",25,0)
 Q
"RTN","ORCSAVE1",26,0)
 ;
"RTN","ORCSAVE1",27,0)
TEXT(DA) ; -- Includes text of item DA
"RTN","ORCSAVE1",28,0)
 Q:$P(^ORD(101.41,ORDIALOG,10,DA,0),U,11)  Q:'$O(ORP(DA,0))
"RTN","ORCSAVE1",29,0)
 N NEWLN,INST,TYPE,PTR,CHSEQ,CHILD,ORI,X,Y
"RTN","ORCSAVE1",30,0)
 S:'$G(ORTX) ORTX=1,ORTX(1)=""
"RTN","ORCSAVE1",31,0)
 S NEWLN=+$P(ORP(DA),U,4),INST=$O(ORP(DA,0)),Y=""
"RTN","ORCSAVE1",32,0)
 I NEWLN,$L(ORTX(ORTX)) S ORTX=ORTX+1,ORTX(ORTX)="",Y=" "
"RTN","ORCSAVE1",33,0)
 S X=$$GETXT($P(ORP(DA),U,2)) I $L(X) S X=Y_X,Y="" D TXT^ORCHTAB ;lead tx
"RTN","ORCSAVE1",34,0)
 S PTR=+ORP(DA),TYPE=$E(ORDIALOG(PTR,0))
"RTN","ORCSAVE1",35,0)
TXT1 I TYPE'="W" S X=Y_ORP(DA,INST),Y="" D TXT^ORCHTAB
"RTN","ORCSAVE1",36,0)
 I TYPE="W" S ORI=0 F  S ORI=$O(ORP(DA,INST,ORI)) Q:ORI'>0  D  S Y=""
"RTN","ORCSAVE1",37,0)
 . S Y=$S(Y=" ":" ",$P(ORP(DA),U,5):" ",1:"") ;new line, or as stored
"RTN","ORCSAVE1",38,0)
 . S X=Y_ORP(DA,INST,ORI,0),Y="" I $E(X)'=" " D TXT^ORCHTAB Q  ; wrap
"RTN","ORCSAVE1",39,0)
 . S:$L(ORTX(ORTX)) ORTX=ORTX+1,ORTX(ORTX)="" ; force new line
"RTN","ORCSAVE1",40,0)
 . I X?1." " S ORTX(ORTX)=" ",ORTX=ORTX+1,ORTX(ORTX)="" ; blank line
"RTN","ORCSAVE1",41,0)
 . E  D TXT^ORCHTAB
"RTN","ORCSAVE1",42,0)
 D:$D(^ORD(101.41,+ORDIALOG,10,"DAD",PTR)) CHILD(PTR)
"RTN","ORCSAVE1",43,0)
 S INST=$O(ORP(DA,INST)) ; multiple?
"RTN","ORCSAVE1",44,0)
 I INST S ORTX(ORTX)=ORTX(ORTX)_",",Y="" S:NEWLN ORTX=ORTX+1,ORTX(ORTX)="",Y=" " G TXT1
"RTN","ORCSAVE1",45,0)
 S X=$$GETXT($P(ORP(DA),U,3)) D:$L(X) TXT^ORCHTAB ; trailing text
"RTN","ORCSAVE1",46,0)
 Q
"RTN","ORCSAVE1",47,0)
 ;
"RTN","ORCSAVE1",48,0)
CHILD(PARENT) ; -- add child values
"RTN","ORCSAVE1",49,0)
 N CHSEQ,CHILD S CHSEQ=0
"RTN","ORCSAVE1",50,0)
 F  S CHSEQ=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PARENT,CHSEQ)) Q:CHSEQ'>0  S CHILD=$O(^(CHSEQ,0)) D
"RTN","ORCSAVE1",51,0)
 . Q:'$L($G(ORP(CHILD,INST)))
"RTN","ORCSAVE1",52,0)
 . S X=$$GETXT($P(ORP(CHILD),U,2)) D:$L(X) TXT^ORCHTAB ; lead text
"RTN","ORCSAVE1",53,0)
 . S X=ORP(CHILD,INST) D TXT^ORCHTAB
"RTN","ORCSAVE1",54,0)
 . S X=$$GETXT($P(ORP(CHILD),U,3)) D:$L(X) TXT^ORCHTAB ; trail text
"RTN","ORCSAVE1",55,0)
 Q
"RTN","ORCSAVE1",56,0)
 ;
"RTN","ORCSAVE1",57,0)
GETXT(X) ; -- Returns text of X
"RTN","ORCSAVE1",58,0)
 I $E(X)="@" N VAR S VAR=$E(X,2,99),X=$G(@VAR) K @VAR ; variable w/text
"RTN","ORCSAVE1",59,0)
 Q X
"RTN","ORCSAVE1",60,0)
 ;
"RTN","ORCSAVE1",61,0)
EXT ; -- Build ORP(DA) array of external forms
"RTN","ORCSAVE1",62,0)
 N PROMPT,INST,DA,NODE,FORMAT,OMIT,X,Y,TYPE,PTR
"RTN","ORCSAVE1",63,0)
 S PROMPT=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:PROMPT'>0  D
"RTN","ORCSAVE1",64,0)
 . S DA=+$G(ORDIALOG(PROMPT)),TYPE=$E($G(ORDIALOG(PROMPT,0))) Q:'$L(TYPE)
"RTN","ORCSAVE1",65,0)
 . Q:'DA  S NODE=$G(^ORD(101.41,ORDIALOG,10,DA,2)),FORMAT=$P(NODE,U,2),OMIT=$P(NODE,U,3)
"RTN","ORCSAVE1",66,0)
 . S:$D(ORDIALOG(PROMPT,"FORMAT")) FORMAT=ORDIALOG(PROMPT,"FORMAT")
"RTN","ORCSAVE1",67,0)
 . I $E(FORMAT)="@" S PTR=+$E(FORMAT,2,99) Q:'PTR  ; Don't include
"RTN","ORCSAVE1",68,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  D
"RTN","ORCSAVE1",69,0)
 . . Q:ORDIALOG(PROMPT,INST)=""
"RTN","ORCSAVE1",70,0)
 . . I $E(FORMAT)="@",$L($G(ORDIALOG(PTR,INST))) Q  ; use PTR instead
"RTN","ORCSAVE1",71,0)
 . . I $E(FORMAT)="*" S PTR=+$E(FORMAT,2,99) I '$L($G(ORDIALOG(PTR,INST))) Q  ; must have PTR too
"RTN","ORCSAVE1",72,0)
 . . I $E(FORMAT)="=" S PTR=+$E(FORMAT,2,99) I PTR,$L($G(ORDIALOG(PTR,INST))) S Y=$$EXT^ORCD(PTR,INST),X=$$EXT^ORCD(PROMPT,INST) I (X=Y)!(X[Y)!(Y[X) Q
"RTN","ORCSAVE1",73,0)
 . . I TYPE="W" M ORP(DA,INST)=@ORDIALOG(PROMPT,INST)
"RTN","ORCSAVE1",74,0)
 . . E  S X=$$EXT^ORCD(PROMPT,INST,FORMAT) Q:X=""  Q:X=OMIT  S ORP(DA,INST)=X
"RTN","ORCSAVE1",75,0)
 . . S ORP(DA)=PROMPT_U_$P(NODE,U,4,7) ; ptr^lead^trail^new line^wrap
"RTN","ORCSAVE1",76,0)
 Q
"RTN","ORCSAVE1",77,0)
DIGTEXT(ORDER)  ;Build text used to create Digital Signature
"RTN","ORCSAVE1",78,0)
 ;ORSET(1)=1)Date of Prescription (RX) -Date Ordered HL7 format 2)Full Patient Name 3)Patient SSN 4)DFN
"RTN","ORCSAVE1",79,0)
 ;ORSET(2)=5)Full Patient Address
"RTN","ORCSAVE1",80,0)
 ;ORSET(3)=6)Drug name_strength_dosage form 7)Drug IEN (file 50) 8)Drug quantity prescribed 9)Schedule of medication 10)DEA Schedule
"RTN","ORCSAVE1",81,0)
 ;ORSET(4)=11)Direction for use
"RTN","ORCSAVE1",82,0)
 ;ORSET(5)=12)Practitioner's name 13)DUZ 14)Practitioner's (DEA) registration number 15) VA-DEA number
"RTN","ORCSAVE1",83,0)
 ;ORSET(6)=16)Practionioer's address
"RTN","ORCSAVE1",84,0)
 N I,DFN,OR80,ORPNM,ORSSN,ORXDT,VAERR,VAPA,X1,X4,X5,X6,X8,X9,X10,X11,X12,X13,X14,SIG
"RTN","ORCSAVE1",85,0)
 S OR80=$G(^OR(100,ORDER,8,1,0)) Q:'$L(OR80)  Q:'$P(OR80,"^",3)
"RTN","ORCSAVE1",86,0)
 S $P(^OR(100,ORDER,8,1,2),"^",5)=1 ;Flag to signing process to get digital signature
"RTN","ORCSAVE1",87,0)
 S ORXDT=$P(^OR(100,ORDER,8,1,0),"^"),X1=$$FMTHL7^XLFDT(ORXDT),X4="",X14="",X10="",DFN=+ORVP
"RTN","ORCSAVE1",88,0)
 D ADD^VADPT
"RTN","ORCSAVE1",89,0)
 S ORPNM=^DPT(+ORVP,0),ORSSN=$P(ORPNM,"^",9),ORPNM=$P(ORPNM,"^")
"RTN","ORCSAVE1",90,0)
 F I=1:1:6 S X4=X4_$S($L($G(VAPA(I))):$S((I=5):$P(VAPA(I),"^",2),1:VAPA(I))_" ",1:"")
"RTN","ORCSAVE1",91,0)
 S X11=$P($G(^VA(200,$P(OR80,"^",3),0)),"^") Q:'$L(X11)
"RTN","ORCSAVE1",92,0)
 S X12=$P($G(^VA(200,$P(OR80,"^",3),"PS")),"^",2),X13=$P($G(^("PS")),"^",3)
"RTN","ORCSAVE1",93,0)
 S X=$G(^VA(200,$P(OR80,"^",3),.11))
"RTN","ORCSAVE1",94,0)
 I X F I=1:1:6 S X14=X14_$S($L($P(X,"^",I)):$P(X,"^",I)_" ",1:"")
"RTN","ORCSAVE1",95,0)
 S X5=$$VALUE^ORX8(ORDER,"DRUG",,"E"),X6=$$VALUE^ORX8(ORDER,"DRUG"),X8=$$VALUE^ORX8(ORDER,"QTY",,"E"),X9=$$VALUE^ORX8(ORDER,"SCHEDULE",,"E")
"RTN","ORCSAVE1",96,0)
 S SIG=+$O(^OR(100,ORDER,4.5,"ID","SIG",0)) I SIG,$L($G(^OR(100,ORDER,4.5,SIG,2,1,0))) S X10=^(0)
"RTN","ORCSAVE1",97,0)
 S ORSET(1)=X1_"^"_ORPNM_"^"_ORSSN_"^"_+ORVP_"^"
"RTN","ORCSAVE1",98,0)
 S ORSET(2)=X4_"^"
"RTN","ORCSAVE1",99,0)
 S ORSET(3)=X5_"^"_X6_"^"_X8_"^"_X9_"^"_ORDEA_"^"
"RTN","ORCSAVE1",100,0)
 S ORSET(4)=X10_"^"
"RTN","ORCSAVE1",101,0)
 S ORSET(5)=X11_"^"_$P(OR80,"^",3)_"^"_X12_"^"_X13_"^"
"RTN","ORCSAVE1",102,0)
 S ORSET(6)=X14
"RTN","ORCSAVE1",103,0)
 S ORSET=6
"RTN","ORCSAVE1",104,0)
 Q
"RTN","ORPR08")
0^15^B3076807
"RTN","ORPR08",1,0)
ORPR08 ; slc/dcm - Work Copies ; 07 Dec 99  01:43PM
"RTN","ORPR08",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**69,132**;Dec 17, 1997
"RTN","ORPR08",3,0)
WRK ;
"RTN","ORPR08",4,0)
 I '$S($P($G(^OR(100,+ORIFN,3)),"^",3)'=11:1,1:0) Q
"RTN","ORPR08",5,0)
 N ORX,OR3,ORPK,ORTCNT,ORPKG
"RTN","ORPR08",6,0)
 D GET^ORPR01(ORIFN)
"RTN","ORPR08",7,0)
 Q:'$L(ORX)
"RTN","ORPR08",8,0)
 D CPRINT^ORPR01(ORIFN)
"RTN","ORPR08",9,0)
 Q
"RTN","ORPR08",10,0)
WRKSET ;Setup
"RTN","ORPR08",11,0)
 S ORXPND=$$GET^XPAR("ALL","ORPF EXPAND CONTINUOUS ORDERS",1,"I")
"RTN","ORPR08",12,0)
 S ORHEAD=$$GET^XPAR("ALL","ORPF WORK COPY HEADER",1,"I")
"RTN","ORPR08",13,0)
 S ORFOOT=$$GET^XPAR("ALL","ORPF WORK COPY FOOTER",1,"I")
"RTN","ORPR08",14,0)
 S (OROFMT,ORFMT)=$$GET^XPAR("ALL","ORPF WORK COPY FORMAT",1,"I")
"RTN","ORPR08",15,0)
 S ORIOSL=IOSL I +ORFOOT,$D(^ORD(100.23,ORFOOT,0)) S ORBOT=$P(^(0),"^",2),ORIOSL=IOSL-ORBOT
"RTN","ORPR08",16,0)
 S ORIOF=IOF I +ORHEAD D PRINT^ORPR00(ORHEAD,1)
"RTN","ORPR08",17,0)
 S IOF="!" I +OROFMT S ORFMT=OROFMT
"RTN","ORPR08",18,0)
 Q
"RTN","ORPR08",19,0)
WRKCLN ;Cleanup
"RTN","ORPR08",20,0)
 G:+$G(OREND) WKCX
"RTN","ORPR08",21,0)
 S ORFOOT=$$GET^XPAR("ALL","ORPF WORK COPY FOOTER",1,"I")
"RTN","ORPR08",22,0)
 I +ORFOOT S:IOF?1"!"."!" $P(IOF,"!",$S(ORIOSL>200:200,ORIOSL-$Y>1:ORIOSL-$Y,1:2))="" D PRINT^ORPR00(ORFOOT,1)
"RTN","ORPR08",23,0)
 I $E(IOST)="C" D
"RTN","ORPR08",24,0)
 . N DIR S DIR(0)="FO^1:1",DIR("A")="Press RETURN to continue or '^' to exit"
"RTN","ORPR08",25,0)
 . D ^DIR I $S($D(DIROUT):1,$D(DUOUT):1,$D(DTOUT):1,1:0) S OREND=1
"RTN","ORPR08",26,0)
WKCX S IOF=ORIOF K ORHEAD,ORFOOT,OROFMT,ORFMT,ORIOF,ORBOT,ORIOSL
"RTN","ORPR08",27,0)
 Q
"RTN","ORQPTQ11")
0^12^B56187636
"RTN","ORQPTQ11",1,0)
ORQPTQ11 ; SLC/CLA - Functs which return patient lists and sources pt 1B ;12/15/97 [ 08/04/97  3:32 PM ] [3/25/02 9:43am]
"RTN","ORQPTQ11",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**82,85,109,132**;Dec 17, 1997
"RTN","ORQPTQ11",3,0)
 ;
"RTN","ORQPTQ11",4,0)
 ; SLC/PKS - Modified to deal with "Combination" lists - 3/2000.
"RTN","ORQPTQ11",5,0)
 ; SLC/PKS - Additions for "Restricted Pt. Lists" - 11/2001.
"RTN","ORQPTQ11",6,0)
 ;
"RTN","ORQPTQ11",7,0)
DEFSRC(Y) ; return current user's default list source
"RTN","ORQPTQ11",8,0)
 Q:'$D(DUZ)
"RTN","ORQPTQ11",9,0)
 N FROM,API,ORSRV
"RTN","ORQPTQ11",10,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQPTQ11",11,0)
 S FROM=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT LIST SOURCE",1,"Q")
"RTN","ORQPTQ11",12,0)
 Q:'$L($G(FROM))
"RTN","ORQPTQ11",13,0)
 I FROM="T" S Y=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT TEAM",1,"B")_"^Team"
"RTN","ORQPTQ11",14,0)
 I FROM="W" S Y=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT WARD",1,"B")_"^Ward"
"RTN","ORQPTQ11",15,0)
 I FROM="P" S Y=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT PROVIDER",1,"B")_"^Primary Provider"
"RTN","ORQPTQ11",16,0)
 I FROM="S" S Y=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT SPECIALTY",1,"B")_"^Specialty"
"RTN","ORQPTQ11",17,0)
 I FROM="C" D
"RTN","ORQPTQ11",18,0)
 .S API="ORLP DEFAULT CLINIC "_$$UP^XLFSTR($$DOW^XLFDT(DT))
"RTN","ORQPTQ11",19,0)
 .S Y=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),API,1,"B")_"^"_$$DOW^XLFDT(DT)_" Clinic"
"RTN","ORQPTQ11",20,0)
 I FROM="M" S Y="^Combination"
"RTN","ORQPTQ11",21,0)
 Q
"RTN","ORQPTQ11",22,0)
FDEFSRC(ORDUZ) ; extrinsic function return user's (ORDUZ) default list source
"RTN","ORQPTQ11",23,0)
 Q:'$D(ORDUZ) "^^Error: No user identified"
"RTN","ORQPTQ11",24,0)
 N FROM,API,RESULT,ORSRV
"RTN","ORQPTQ11",25,0)
 S ORSRV=$G(^VA(200,ORDUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQPTQ11",26,0)
 S FROM=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT LIST SOURCE",1,"Q")
"RTN","ORQPTQ11",27,0)
 Q:'$L($G(FROM)) "^^No default list source specified"
"RTN","ORQPTQ11",28,0)
 I FROM="T" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT TEAM",1,"B")_"^Team"
"RTN","ORQPTQ11",29,0)
 I FROM="W" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT WARD",1,"B")_"^Ward"
"RTN","ORQPTQ11",30,0)
 I FROM="P" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT PROVIDER",1,"B")_"^Primary Provider"
"RTN","ORQPTQ11",31,0)
 I FROM="S" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT SPECIALTY",1,"B")_"^Specialty"
"RTN","ORQPTQ11",32,0)
 I FROM="C" D
"RTN","ORQPTQ11",33,0)
 .S API="ORLP DEFAULT CLINIC "_$$UP^XLFSTR($$DOW^XLFDT(DT))
"RTN","ORQPTQ11",34,0)
 .S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),API,1,"B")_"^"_$$DOW^XLFDT(DT)_" Clinic"
"RTN","ORQPTQ11",35,0)
 I FROM="M" S RESULT="^Combination"
"RTN","ORQPTQ11",36,0)
 Q RESULT
"RTN","ORQPTQ11",37,0)
LISTSRC(ORDUZ,TYPE) ; extrinsic function return user's (ORDUZ) list source
"RTN","ORQPTQ11",38,0)
 ; for list type team, ward, primary provider, specialty, clinic, combination (TYPE)
"RTN","ORQPTQ11",39,0)
 Q:'$D(ORDUZ) "^^Error: No user identified"
"RTN","ORQPTQ11",40,0)
 Q:'$D(TYPE) "^^Error: No list type identified"
"RTN","ORQPTQ11",41,0)
 N API,RESULT,ORSRV
"RTN","ORQPTQ11",42,0)
 S ORSRV=$G(^VA(200,ORDUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQPTQ11",43,0)
 I TYPE="T" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT TEAM",1,"B")_"^Team"
"RTN","ORQPTQ11",44,0)
 I TYPE="W" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT WARD",1,"B")_"^Ward"
"RTN","ORQPTQ11",45,0)
 I TYPE="P" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT PROVIDER",1,"B")_"^Primary Provider"
"RTN","ORQPTQ11",46,0)
 I TYPE="S" S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),"ORLP DEFAULT SPECIALTY",1,"B")_"^Specialty"
"RTN","ORQPTQ11",47,0)
 I TYPE="C" D
"RTN","ORQPTQ11",48,0)
 .S API="ORLP DEFAULT CLINIC "_$$UP^XLFSTR($$DOW^XLFDT(DT))
"RTN","ORQPTQ11",49,0)
 .S RESULT=$$GET^XPAR("USR.`"_ORDUZ_"^SRV.`"_+$G(ORSRV),API,1,"B")_"^"_$$DOW^XLFDT(DT)_" Clinic"
"RTN","ORQPTQ11",50,0)
 I TYPE="M" S RESULT="Combination"
"RTN","ORQPTQ11",51,0)
 I $P(RESULT,U)="" S RESULT=U_RESULT
"RTN","ORQPTQ11",52,0)
 Q RESULT
"RTN","ORQPTQ11",53,0)
DEFLIST(Y) ; return current user's default patient list
"RTN","ORQPTQ11",54,0)
 I $$BROKER^XWBLIB S Y=$NA(^TMP("OR",$J,"PATIENTS")) ; GUI = global.
"RTN","ORQPTQ11",55,0)
 I '$$BROKER^XWBLIB S ^TMP("OR",$J,"PATIENTS",0)=""
"RTN","ORQPTQ11",56,0)
 Q:'$D(DUZ)
"RTN","ORQPTQ11",57,0)
 N FROM,IEN,BEG,END,API,ORSRV,ORQDAT,ORQCNT,ORGUI
"RTN","ORQPTQ11",58,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U) ; Get S/S.
"RTN","ORQPTQ11",59,0)
 S FROM=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT LIST SOURCE",1,"Q")
"RTN","ORQPTQ11",60,0)
 Q:'$L($G(FROM))
"RTN","ORQPTQ11",61,0)
 I FROM="T" S IEN=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT TEAM",1,"Q") D:+$G(IEN)>0 TEAMPTS^ORQPTQ1(.Y,IEN)
"RTN","ORQPTQ11",62,0)
 I FROM="W" S IEN=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT WARD",1,"Q") D:+$G(IEN)>0 WARDPTS^ORQPTQ2(.Y,IEN)
"RTN","ORQPTQ11",63,0)
 I FROM="P" S IEN=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT PROVIDER",1,"Q") D:+$G(IEN)>0 PROVPTS^ORQPTQ2(.Y,IEN)
"RTN","ORQPTQ11",64,0)
 I FROM="S" S IEN=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),"ORLP DEFAULT SPECIALTY",1,"Q") D:+$G(IEN)>0 SPECPTS^ORQPTQ2(.Y,IEN)
"RTN","ORQPTQ11",65,0)
 I FROM="C" D
"RTN","ORQPTQ11",66,0)
 .S API="ORLP DEFAULT CLINIC "_$$UP^XLFSTR($$DOW^XLFDT(DT)),IEN=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),API,1,"Q") I +$G(IEN)>0 D
"RTN","ORQPTQ11",67,0)
 ..S BEG=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","ORQPTQ11",68,0)
 ..I BEG="T+0" S BEG=$$FMTE^XLFDT(DT,BEG)
"RTN","ORQPTQ11",69,0)
 ..S END=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","ORQPTQ11",70,0)
 ..I END="T+0" S END=$$FMTE^XLFDT(DT,END)
"RTN","ORQPTQ11",71,0)
 ..D CLINPTS^ORQPTQ2(.Y,+$G(IEN),BEG,END)
"RTN","ORQPTQ11",72,0)
 I FROM="M" D
"RTN","ORQPTQ11",73,0)
 .S IEN=$D(^OR(100.24,DUZ,0)) I +$G(IEN)>0 S IEN=DUZ D
"RTN","ORQPTQ11",74,0)
 ..S BEG=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","ORQPTQ11",75,0)
 ..I BEG="T+0" S BEG=$$FMTE^XLFDT(DT,BEG)
"RTN","ORQPTQ11",76,0)
 ..S END=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","ORQPTQ11",77,0)
 ..I END="T+0" S END=$$FMTE^XLFDT(DT,END)
"RTN","ORQPTQ11",78,0)
 ..D COMBPTS^ORQPTQ6(0,+$G(IEN),BEG,END) ; "0"= GUI RPC call.
"RTN","ORQPTQ11",79,0)
 I ($$BROKER^XWBLIB)&(FROM'="M") D  ; Combinations already written to global.
"RTN","ORQPTQ11",80,0)
 .S ORQDAT="",ORQCNT=1
"RTN","ORQPTQ11",81,0)
 .F  S ORQDAT=$G(Y(ORQCNT)) Q:ORQDAT=""  D
"RTN","ORQPTQ11",82,0)
 ..S ^TMP("OR",$J,"PATIENTS",ORQCNT,0)=ORQDAT
"RTN","ORQPTQ11",83,0)
 ..S ORQCNT=ORQCNT+1
"RTN","ORQPTQ11",84,0)
 I ('$$BROKER^XWBLIB) S Y=FROM_";"_+$G(IEN)_";"_$G(BEG)_";"_$G(END) ; MKB 10/13/95
"RTN","ORQPTQ11",85,0)
 Q
"RTN","ORQPTQ11",86,0)
DEFSORT(Y) ; Return user's default sort.
"RTN","ORQPTQ11",87,0)
 ; SLC/PKS - 4/6/2001
"RTN","ORQPTQ11",88,0)
 ;
"RTN","ORQPTQ11",89,0)
 N ORSORT,ORSECT,ORPARAM
"RTN","ORQPTQ11",90,0)
 ;
"RTN","ORQPTQ11",91,0)
 I ('$D(DUZ)) S Y="Unable to determine DUZ." Q
"RTN","ORQPTQ11",92,0)
 S ORSECT=$G(^VA(200,DUZ,5))
"RTN","ORQPTQ11",93,0)
 I +ORSECT>0 S ORSECT=$P(ORSECT,U)
"RTN","ORQPTQ11",94,0)
 S Y="A" ; Default of "Alpha" sort.
"RTN","ORQPTQ11",95,0)
 S ORPARAM="ORLP DEFAULT LIST ORDER"
"RTN","ORQPTQ11",96,0)
 S ORSORT=$$GET^XPAR("USR^SRV.`"_$G(ORSECT)_"^DIV^SYS^PKG",ORPARAM,1,"I")
"RTN","ORQPTQ11",97,0)
 I (ORSORT'="") S Y=ORSORT
"RTN","ORQPTQ11",98,0)
 ;
"RTN","ORQPTQ11",99,0)
 Q
"RTN","ORQPTQ11",100,0)
 ;
"RTN","ORQPTQ11",101,0)
PNAMWRIT(ORROOT,ORDFN) ; Write patient name to ^TMP global.
"RTN","ORQPTQ11",102,0)
 ;
"RTN","ORQPTQ11",103,0)
 ; Variables used:
"RTN","ORQPTQ11",104,0)
 ;
"RTN","ORQPTQ11",105,0)
 ;   ORDFN   = Passed patient DFN.
"RTN","ORQPTQ11",106,0)
 ;   ORNAME  = Patient name.
"RTN","ORQPTQ11",107,0)
 ;   ORROOT  = ^TMP root passed by calling code.
"RTN","ORQPTQ11",108,0)
 ;   ORWRITE = Holder for ^TMP node for writing.
"RTN","ORQPTQ11",109,0)
 ;
"RTN","ORQPTQ11",110,0)
 N ORNAME,ORWRITE
"RTN","ORQPTQ11",111,0)
 S ORROOT=ORROOT_","                       ; Add necessary comma.
"RTN","ORQPTQ11",112,0)
 ;
"RTN","ORQPTQ11",113,0)
 S ORNAME=""                               ; Initializae.
"RTN","ORQPTQ11",114,0)
 S ORNAME=$G(^DPT(ORDFN,0))                ; Get zero node pt. data.
"RTN","ORQPTQ11",115,0)
 S ORNAME=$P(ORNAME,U)                     ; Extract pt. name only.
"RTN","ORQPTQ11",116,0)
 I ORNAME="" Q 0                           ; Problem - punt.
"RTN","ORQPTQ11",117,0)
 ;
"RTN","ORQPTQ11",118,0)
 ; Create naked reference string for writing to ^TMP:
"RTN","ORQPTQ11",119,0)
 S ORWRITE=ORROOT_""""_ORNAME_""""_","_ORDFN_")"
"RTN","ORQPTQ11",120,0)
 S @ORWRITE=ORDFN_U_ORNAME                 ; Write to ^TMP.
"RTN","ORQPTQ11",121,0)
 ;
"RTN","ORQPTQ11",122,0)
 Q 1
"RTN","ORQPTQ11",123,0)
 ;
"RTN","ORQPTQ11",124,0)
RPLMAKE(Y,ORTL) ; Make global restricted pt. array from Team List.
"RTN","ORQPTQ11",125,0)
 ;
"RTN","ORQPTQ11",126,0)
 ; Variables used:
"RTN","ORQPTQ11",127,0)
 ;
"RTN","ORQPTQ11",128,0)
 ;   ORDFN   = Holder for patient DFN.
"RTN","ORQPTQ11",129,0)
 ;   ORJ     = Holds $J value.
"RTN","ORQPTQ11",130,0)
 ;   ORREAD  = Holder for ^TMP root to kill.
"RTN","ORQPTQ11",131,0)
 ;   ORRET   = Returned value from function call.
"RTN","ORQPTQ11",132,0)
 ;   ORROOT  = ^TMP root to pass.
"RTN","ORQPTQ11",133,0)
 ;   ORTL    = Team List IEN.
"RTN","ORQPTQ11",134,0)
 ;   ORX     = Working variable used in $ORDER statement.
"RTN","ORQPTQ11",135,0)
 ;   Y       = Returned value (same as ORJ).
"RTN","ORQPTQ11",136,0)
 ;
"RTN","ORQPTQ11",137,0)
 N ORDFN,ORJ,ORREAD,ORRET,ORROOT,ORX
"RTN","ORQPTQ11",138,0)
 ;
"RTN","ORQPTQ11",139,0)
 I ORTL="" S Y="" Q                        ; No Team List IEN passed.
"RTN","ORQPTQ11",140,0)
 I $G(^OR(100.21,ORTL,0))="" S Y="" Q      ; No such Team List.
"RTN","ORQPTQ11",141,0)
 ;
"RTN","ORQPTQ11",142,0)
 S (ORJ,Y)=$J                              ; Assign returned value.
"RTN","ORQPTQ11",143,0)
 S ORROOT="^TMP("_"""ORRPL"""_","          ; Initial setting.
"RTN","ORQPTQ11",144,0)
 S ORROOT=ORROOT_ORJ_","_"""B"""           ; Add job number, "B."
"RTN","ORQPTQ11",145,0)
 S ORREAD=ORROOT_")"                       ; Assign "kill" root.
"RTN","ORQPTQ11",146,0)
 K @ORREAD                                 ; Kill old, if any.
"RTN","ORQPTQ11",147,0)
 ;
"RTN","ORQPTQ11",148,0)
 ; From Team List B x-ref, obtain patients, create new ^TMP entries:
"RTN","ORQPTQ11",149,0)
 S ORX=""                                  ; Initialize.
"RTN","ORQPTQ11",150,0)
 F  S ORX=$O(^OR(100.21,ORTL,10,"B",ORX)) Q:ORX=""  D
"RTN","ORQPTQ11",151,0)
 .S ORDFN=$P(ORX,";")                      ; Extract patient DFN.
"RTN","ORQPTQ11",152,0)
 .S ORRET=$$PNAMWRIT(ORROOT,ORDFN)         ; Call that writes to ^TMP.
"RTN","ORQPTQ11",153,0)
 ;
"RTN","ORQPTQ11",154,0)
 Q
"RTN","ORQPTQ11",155,0)
 ;
"RTN","ORQPTQ11",156,0)
RPLREAD(Y,ORJ,ORFROM,ORDIR) ; Read disk-based patient array from TMP.
"RTN","ORQPTQ11",157,0)
 ;
"RTN","ORQPTQ11",158,0)
 ; Variables used:
"RTN","ORQPTQ11",159,0)
 ;
"RTN","ORQPTQ11",160,0)
 ;   ORCNT   = Counter variable.
"RTN","ORQPTQ11",161,0)
 ;   ORDIR   = Direction to move through list.
"RTN","ORQPTQ11",162,0)
 ;   ORFROM  = Starting point from which to move through list.
"RTN","ORQPTQ11",163,0)
 ;   ORI     = Counter variable.
"RTN","ORQPTQ11",164,0)
 ;   ORIEN   = Record IEN holder.
"RTN","ORQPTQ11",165,0)
 ;   ORJ     = Job number to use in ^TMP global root.
"RTN","ORQPTQ11",166,0)
 ;   ORROOT  = ^TMP global file root.
"RTN","ORQPTQ11",167,0)
 ;   ORZ     = Temporary value holder.
"RTN","ORQPTQ11",168,0)
 ;   Y       = Returned array.
"RTN","ORQPTQ11",169,0)
 ;
"RTN","ORQPTQ11",170,0)
 N ORCNT,ORI,ORIEN,ORROOT,ORZ
"RTN","ORQPTQ11",171,0)
 ;
"RTN","ORQPTQ11",172,0)
 S ORROOT="^TMP("_"""ORRPL"""_","_ORJ      ; Initial setting.
"RTN","ORQPTQ11",173,0)
 S ORROOT=ORROOT_","_"""B"""               ; Add final text.
"RTN","ORQPTQ11",174,0)
 ;
"RTN","ORQPTQ11",175,0)
 ; Check for existence of data:
"RTN","ORQPTQ11",176,0)
 I '$D(@(ORROOT_")")) S Y(0)="No data available." Q
"RTN","ORQPTQ11",177,0)
 ;
"RTN","ORQPTQ11",178,0)
 S ORROOT=ORROOT_","                       ; Add comma.
"RTN","ORQPTQ11",179,0)
 S ORCNT=44                                ; Initialize to maximum.
"RTN","ORQPTQ11",180,0)
 S ORI=0                                   ; Initialize.
"RTN","ORQPTQ11",181,0)
 ;
"RTN","ORQPTQ11",182,0)
 ; Loop through ^TMP entries for data to return:
"RTN","ORQPTQ11",183,0)
 F  S ORFROM=$O(@(ORROOT_""""_ORFROM_""""_")"),ORDIR) Q:ORFROM=""  D  Q:ORI=ORCNT
"RTN","ORQPTQ11",184,0)
 .;
"RTN","ORQPTQ11",185,0)
 .; Sub-loop for entries up to ORCNT maximum:
"RTN","ORQPTQ11",186,0)
 .S ORIEN=0                                ; Initialize.
"RTN","ORQPTQ11",187,0)
 .F  S ORIEN=$O(@(ORROOT_""""_ORFROM_""""_","_ORIEN_")")) Q:'ORIEN  D  Q:ORI=ORCNT
"RTN","ORQPTQ11",188,0)
 ..S ORI=ORI+1                             ; Increment counter.
"RTN","ORQPTQ11",189,0)
 ..;
"RTN","ORQPTQ11",190,0)
 ..; Assign return array:
"RTN","ORQPTQ11",191,0)
 ..S Y(ORI)=@(ORROOT_""""_ORFROM_""""_","_ORIEN_")")
"RTN","ORQPTQ11",192,0)
 ;
"RTN","ORQPTQ11",193,0)
 Q
"RTN","ORQPTQ11",194,0)
 ;
"RTN","ORQPTQ11",195,0)
RPLCLEAN(Y,ORJ) ; Kill global data using passed global root value.
"RTN","ORQPTQ11",196,0)
 ;
"RTN","ORQPTQ11",197,0)
 ; Variables used:
"RTN","ORQPTQ11",198,0)
 ;
"RTN","ORQPTQ11",199,0)
 ;    ORJ    = Job number to use in ^TMP global root.
"RTN","ORQPTQ11",200,0)
 ;    ORROOT = Root of ^TMP global to kill.
"RTN","ORQPTQ11",201,0)
 ;    Y      = Returned RPC value.
"RTN","ORQPTQ11",202,0)
 ;
"RTN","ORQPTQ11",203,0)
 N ORROOT
"RTN","ORQPTQ11",204,0)
 ;
"RTN","ORQPTQ11",205,0)
 S Y=1                                     ; Initialize.
"RTN","ORQPTQ11",206,0)
 S ORROOT="^TMP("_"""ORRPL"""_","          ; Initial setting.
"RTN","ORQPTQ11",207,0)
 S ORROOT=ORROOT_ORJ_","_"""B"""_")"       ; Add rest.
"RTN","ORQPTQ11",208,0)
 K @ORROOT                                 ; Kill global data.
"RTN","ORQPTQ11",209,0)
 ;
"RTN","ORQPTQ11",210,0)
 Q
"RTN","ORQPTQ11",211,0)
 ;
"RTN","ORUPREF1")
0^13^B12497628
"RTN","ORUPREF1",1,0)
ORUPREF1 ; slc/dcm - Key allocation ;12/11/91  08:12 [3/13/02 11:42am]
"RTN","ORUPREF1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**132**;Dec 17, 1997
"RTN","ORUPREF1",3,0)
EN ;
"RTN","ORUPREF1",4,0)
 K ORC W $C(27),"[44;37m"
"RTN","ORUPREF1",5,0)
 S ORC(1)="Black^0",ORC(2)="Red^1",ORC(3)="Green^2",ORC(4)="Yellow^3",ORC(5)="Blue^4",ORC(6)="Magenta^5",ORC(7)="Cyan^6",ORC(8)="White^7"
"RTN","ORUPREF1",6,0)
 S ORC("B","BLACK",1)="",ORC("B","RED",2)="",ORC("B","GREEN",3)="",ORC("B","YELLOW",4)="",ORC("B","BLUE",5)="",ORC("B","MAGENTA",6)="",ORC("B","CYAN",7)="",ORC("B","WHITE",8)=""
"RTN","ORUPREF1",7,0)
 K ORBACK D DISP,SEL S ORF=$S(Y'=-1:Y,1:37)
"RTN","ORUPREF1",8,0)
 S ORBACK=1 D DISP,SEL S ORB=$S(Y'=-1:Y,1:40)
"RTN","ORUPREF1",9,0)
 W !,$C(27),"["_(29+ORF)_";"_(39+ORB)_"m"
"RTN","ORUPREF1",10,0)
END K ORBACK,ORF,ORB,ORC,ORI
"RTN","ORUPREF1",11,0)
 Q
"RTN","ORUPREF1",12,0)
DISP F ORI=1:1:8 W !?10,$C(27),"["_($S($D(ORBACK):40+$P(ORC(ORI),"^",2),1:30+$P(ORC(ORI),"^",2))_"m"),ORI_"  ",$P(ORC(ORI),"^")_$E("       ",1,7-$L($P(ORC(ORI),"^"))) W $C(27),"["_($S($D(ORBACK):"44;37",1:"44;37")_"m")
"RTN","ORUPREF1",13,0)
 Q
"RTN","ORUPREF1",14,0)
SEL S Y=-1 W !!,"Select "_$S($D(ORBACK):"BACKGROUND",1:"FOREGROUND")_" COLOR: " R X:DTIME Q:'$T!(X["^")!(X="")  D UP
"RTN","ORUPREF1",15,0)
 I X="BL" W !,"Please be more specific" G SEL
"RTN","ORUPREF1",16,0)
 I $D(ORC("B",X)) S X=$O(ORC("B",X,0)) G S1
"RTN","ORUPREF1",17,0)
 I $E($O(ORC("B",X)),1,$L(X))=X,X'="BL" S X=$O(ORC("B",X)),X=$O(ORC("B",X,0)) G S1
"RTN","ORUPREF1",18,0)
 I X'?1N!('$D(ORC(X))) W !,"Select a number for one of the choices shown" G SEL
"RTN","ORUPREF1",19,0)
S1 W "   ",$C(27),"["_($S($D(ORBACK):40+$P(ORC(X),"^",2),1:30+$P(ORC(X),"^",2))_"m"),$P(ORC(X),"^") S Y=X
"RTN","ORUPREF1",20,0)
 W $C(27),"["_($S($D(ORBACK):"44;37",1:"44;37")_"m")
"RTN","ORUPREF1",21,0)
 Q
"RTN","ORUPREF1",22,0)
UP ;Upper case
"RTN","ORUPREF1",23,0)
 F %=1:1:$L(X) I $E(X,%)?1L S X=$E(X,1,%-1)_$C($A(X,%)-32)_$E(X,%+1,99)
"RTN","ORUPREF1",24,0)
 Q
"RTN","ORUPREF1",25,0)
KEY ;Edit user security keys
"RTN","ORUPREF1",26,0)
 S OREND=0,ORVER=+($G(^DD(200,0,"VR")))
"RTN","ORUPREF1",27,0)
 F ORKEY="ORES","ORELSE","OREMAS" D K1 Q:OREND  W ! F I=1:1:(IOM-1) W "="
"RTN","ORUPREF1",28,0)
 S OREND=0 K DLAYGO,DA,DR,DIE,DIC,OREND,ORK,ORKEY,ORHEAD,ORVER
"RTN","ORUPREF1",29,0)
 Q
"RTN","ORUPREF1",30,0)
K1 I '$D(^DIC(19.1,"B",ORKEY)) W !,ORKEY_" is not in the Security Key file" Q
"RTN","ORUPREF1",31,0)
 S ORK=$O(^DIC(19.1,"B",ORKEY,0)) I 'ORK!('$D(^DIC(19.1,ORK))) W !,ORKEY_" is not in the Security Key file" Q
"RTN","ORUPREF1",32,0)
 W !!,"KEY: "_ORKEY,! S I=0 F  S I=$O(^DIC(19.1,ORK,1,I)) Q:I<1  W !,^(I,0)
"RTN","ORUPREF1",33,0)
K2 W !!,"Edit Holders" S %=1 D YN^DICN S:%=-1 OREND=1
"RTN","ORUPREF1",34,0)
 I %=0 W !!,"Enter YES to edit holders of this key, NO to quit." G K2
"RTN","ORUPREF1",35,0)
 Q:%'=1
"RTN","ORUPREF1",36,0)
 W ! D K7
"RTN","ORUPREF1",37,0)
 Q
"RTN","ORUPREF1",38,0)
K7 ;edits holders for Kernel V7.0 in file #200
"RTN","ORUPREF1",39,0)
 S DIC=200,DIC(0)="AEQM",DIC("A")="Select HOLDER: "
"RTN","ORUPREF1",40,0)
 F  D ^DIC Q:Y<1  S ORDUZ=Y,ORHAVE=$D(^XUSEC(ORKEY,+ORDUZ)) D K7SET:'ORHAVE,K7DEL:ORHAVE Q:OREND
"RTN","ORUPREF1",41,0)
 K ORDUZ,ORHAVE Q
"RTN","ORUPREF1",42,0)
K7DEL ;deletes ORKEY from person
"RTN","ORUPREF1",43,0)
 N DA,DIC,DIK
"RTN","ORUPREF1",44,0)
 W !?10,"Delete key" S %=1 D YN^DICN I (%<0) S OREND=1 Q
"RTN","ORUPREF1",45,0)
 I %=2 W !?15,"Nothing changed!",! Q
"RTN","ORUPREF1",46,0)
 I %=0 D  G K7DEL
"RTN","ORUPREF1",47,0)
 .W !?7,"This person already holds the "_ORKEY_" key; answer YES"
"RTN","ORUPREF1",48,0)
 .W !?7,"to de-allocate this key from this user."
"RTN","ORUPREF1",49,0)
 .W !!?7,"HOLDER: "_$P(ORDUZ,"^",2)
"RTN","ORUPREF1",50,0)
 S DA=$O(^VA(200,+ORDUZ,51,"B",ORK,0)),DA(1)=+ORDUZ
"RTN","ORUPREF1",51,0)
 I DA S DIK="^VA(200,"_DA(1)_",51," D ^DIK
"RTN","ORUPREF1",52,0)
 W !?15,$S(DA:"DELETED!",1:"Error: ^XUSEC not consistent with keys in User file"),!
"RTN","ORUPREF1",53,0)
 Q
"RTN","ORUPREF1",54,0)
K7SET ;allocates ORKEY to person
"RTN","ORUPREF1",55,0)
 N DIC,DA
"RTN","ORUPREF1",56,0)
 I '$D(^VA(200,+ORDUZ,51,0)) S ^VA(200,+ORDUZ,51,0)="^200.051PA^^"
"RTN","ORUPREF1",57,0)
 S DA(1)=+ORDUZ,DIC="^VA(200,"_DA(1)_",51,",DIC(0)="L",(DINUM,X)=ORK
"RTN","ORUPREF1",58,0)
 D FILE^DICN W !?15,$S(Y>0:"Added.",1:"Error - not added."),!
"RTN","ORUPREF1",59,0)
 Q
"RTN","ORWCIRN")
0^7^B3743419
"RTN","ORWCIRN",1,0)
ORWCIRN ; slc/dcm,REV - Functions for GUI CIRN ACTIONS ;22-NOV-1999 07:27:24
"RTN","ORWCIRN",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,101,109,132**;October 28, 1997
"RTN","ORWCIRN",3,0)
 ;
"RTN","ORWCIRN",4,0)
FACLIST(ORY,ORDFN) ; Return list of remote facilities for patient
"RTN","ORWCIRN",5,0)
 ;Check to see if CIRN PD/MPI installed
"RTN","ORWCIRN",6,0)
 N X,ORSITES,I,IFN,LOCAL
"RTN","ORWCIRN",7,0)
 S X="MPIF001" X ^%ZOSF("TEST")
"RTN","ORWCIRN",8,0)
 I '$T S ORY(0)="-1^CIRN MPI not installed." Q
"RTN","ORWCIRN",9,0)
 S X="VAFCTFU1" X ^%ZOSF("TEST")
"RTN","ORWCIRN",10,0)
 I '$T S ORY(0)="-1^Remote data view not installed." Q
"RTN","ORWCIRN",11,0)
 S X=$$GET^XPAR("ALL","ORWRP CIRN REMOTE DATA ALLOW",1,"I")
"RTN","ORWCIRN",12,0)
 I 'X S ORY(0)="-1^Remote access not allowed" Q
"RTN","ORWCIRN",13,0)
 D TFL^VAFCTFU1(.ORY,ORDFN)
"RTN","ORWCIRN",14,0)
 I $$GET^XPAR("ALL","ORWRP CIRN SITES ALL",1,"I") D
"RTN","ORWCIRN",15,0)
 . S I=0
"RTN","ORWCIRN",16,0)
 . F  S I=$O(ORY(I)) Q:'I  S $P(ORY(I),"^",5)=1 I $P(ORY(I),"^")=776!($P(ORY(I),"^")=200) S $P(ORY(I),"^",2)="DEPT. OF DEFENSE"
"RTN","ORWCIRN",17,0)
 D GETLST^XPAR(.ORSITES,"ALL","ORWRP CIRN SITES","I")
"RTN","ORWCIRN",18,0)
 S I=0,LOCAL=$P($$SITE^VASITE,"^",3)
"RTN","ORWCIRN",19,0)
 F  S I=$O(ORY(I)) Q:'I  D
"RTN","ORWCIRN",20,0)
 . I +ORY(I)=+LOCAL K ORY(I) Q
"RTN","ORWCIRN",21,0)
 . S IFN=$O(^DIC(4,"D",+ORY(I),0)) I IFN,$G(ORSITES(IFN)) S $P(ORY(I),"^",5)=1
"RTN","ORWCIRN",22,0)
 I '$L($O(ORY(""))) S ORY(0)="-1^Only local data exists for this patient"
"RTN","ORWCIRN",23,0)
 Q
"RTN","ORWCIRN",24,0)
RESTRICT(ORY,PATID) ;Check for sensitive patient
"RTN","ORWCIRN",25,0)
 N DFN,ICN,SITE
"RTN","ORWCIRN",26,0)
 I '$G(PATID) S ORY(1)="-1",ORY(2)="Invalid Patient ID" Q
"RTN","ORWCIRN",27,0)
 S ICN=$P(PATID,";",2)
"RTN","ORWCIRN",28,0)
 I 'ICN S ORY(1)="-1",ORY(2)="Invalid ICN" Q
"RTN","ORWCIRN",29,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",2)_";"_$P(SITE,"^",3)
"RTN","ORWCIRN",30,0)
 S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","ORWCIRN",31,0)
 I DFN<0 S ORY(1)="-1",ORY(2)="Patient not found on remote system ("_SITE_")" Q
"RTN","ORWCIRN",32,0)
 D PTSEC^DGSEC4(.ORY,DFN)
"RTN","ORWCIRN",33,0)
 Q
"RTN","ORWCV")
0^14^B63937259
"RTN","ORWCV",1,0)
ORWCV ; SLC/KCM - Background Cover Sheet Load;1/5/2001
"RTN","ORWCV",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,132**;Dec 17, 1997
"RTN","ORWCV",3,0)
 ;
"RTN","ORWCV",4,0)
START(VAL,DFN,IP,HWND,LOC,NODO,NEWREM)  ; start cover sheet build in background
"RTN","ORWCV",5,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,SECT,BACK,X,I,LIST,STR,FILE,NODE
"RTN","ORWCV",6,0)
 S LOC=$G(LOC),NODO=";"_$G(NODO),NEWREM=+$G(NEWREM)
"RTN","ORWCV",7,0)
 D GETLST^XPAR(.X,"SYS^PKG","ORWOR COVER RETRIEVAL NEW","Q")
"RTN","ORWCV",8,0)
 S I=0 F  S I=$O(X(I)) Q:'I  I $D(^ORD(101.24,+X(I),0)) S SECT(+$P(^(0),"^",2))=$P(X(I),"^",2)
"RTN","ORWCV",9,0)
 D GETLST^XPAR(.LIST,"ALL","ORWCV1 COVERSHEET LIST")
"RTN","ORWCV",10,0)
 S (VAL,BACK,STR,FILE)=""
"RTN","ORWCV",11,0)
 F  S I=$O(LIST(I)) Q:'I  I $D(^ORD(101.24,$P(LIST(I),"^",2),0))  S X0=^(0) D
"RTN","ORWCV",12,0)
 . Q:$P(X0,"^",8)'="C"
"RTN","ORWCV",13,0)
 . S X=$P(X0,"^",2)
"RTN","ORWCV",14,0)
 . I NODO[(";"_X_";") Q                                  ; if in NODO, dont do section
"RTN","ORWCV",15,0)
 . S STR=STR_X_";"
"RTN","ORWCV",16,0)
 . I '$G(SECT(X)) S VAL=VAL_X_";"                        ; load section in foreground
"RTN","ORWCV",17,0)
 . E  S BACK=BACK_X_";",FILE=FILE_$P(LIST(I),"^",2)_";"  ; load section in background
"RTN","ORWCV",18,0)
 Q:BACK=""
"RTN","ORWCV",19,0)
 S ZTIO="ORW THREAD RESOURCE",ZTRTN="BUILD^ORWCV",ZTDTH=$H
"RTN","ORWCV",20,0)
 S (ZTSAVE("DFN"),ZTSAVE("IP"),ZTSAVE("HWND"),ZTSAVE("NEWREM"),ZTSAVE("LOC"),ZTSAVE("BACK"),ZTSAVE("FILE"))=""
"RTN","ORWCV",21,0)
 S ZTDESC="CPRS GUI Background Data Retrieval"
"RTN","ORWCV",22,0)
 D ^%ZTLOAD I '$D(ZTSK) S VAL=STR Q
"RTN","ORWCV",23,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN
"RTN","ORWCV",24,0)
 K ^XTMP(NODE)
"RTN","ORWCV",25,0)
 S ^XTMP(NODE,0)=$$FMADD^XLFDT(DT,1)_U_DT_U_"Background CPRS "_ZTSK
"RTN","ORWCV",26,0)
 Q
"RTN","ORWCV",27,0)
BUILD ; called in background by task manager, expects DFN, JobID
"RTN","ORWCV",28,0)
 N NODE,IFLE,ORFNUM,ID,ENT,RTN,INODE,PARAM1,PARAM2,DETAIL
"RTN","ORWCV",29,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN
"RTN","ORWCV",30,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWCV",31,0)
 I $G(^XTMP(NODE,"STOP")) K ^XTMP(NODE) Q  ; client no longer polling
"RTN","ORWCV",32,0)
 I '$D(^XTMP(NODE,0)) Q                    ; XTMP node has been purged
"RTN","ORWCV",33,0)
 L +^XTMP(NODE)
"RTN","ORWCV",34,0)
 S ^XTMP(NODE,"DFN")=DFN
"RTN","ORWCV",35,0)
 ;N $ETRAP,$ESTACK
"RTN","ORWCV",36,0)
 ;S $ETRAP="D ERR^ORWCV Q"
"RTN","ORWCV",37,0)
 I $L($G(FILE),";")>0 F IFLE=1:1:$L(FILE,";") S ORFNUM=$P(FILE,";",IFLE)  Q:'$D(^ORD(101.24,+ORFNUM,0))  S X0=^(0),X2=$G(^(2)) D
"RTN","ORWCV",38,0)
 . S ID=$P(X0,"^",2),ENT=$P(X0,"^",6),RTN=$P(X0,"^",5),PARAM1=$P(X2,"^"),PARAM2=$P(X2,"^",2),INODE=$P(X2,"^",5),DETAIL=""
"RTN","ORWCV",39,0)
 . I $P(X0,"^",18) S DETAIL=$P($G(^ORD(101.24,+$P(X0,"^",18),0)),"^",13),DETAIL=$P($G(^XWB(8994,+DETAIL,0)),"^")
"RTN","ORWCV",40,0)
 . I '$L(INODE) Q
"RTN","ORWCV",41,0)
 . I '$L(ENT) S LST(IFLE)="0^ERROR: Missing ENTRY POINT field in file 101.24 for "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",42,0)
 . I '$L(RTN) S LST(IFLE)="0^ERROR: Missing ROUTINE field in file 101.24 for "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",43,0)
 . I '$L($T(@(ENT_"^"_RTN))) S LST(IFLE)="0^ERROR: "_ENT_"~"_RTN_" does not exist. See file 101.24 entry: "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",44,0)
 . I ID=50 D  Q  ;Special case for reminders
"RTN","ORWCV",45,0)
 .. I $G(NEWREM) D APPL^ORQQPXRM(.LST,DFN,LOC) I 1
"RTN","ORWCV",46,0)
 .. E  D @(ENT_"^"_RTN_"(.LST,DFN)")
"RTN","ORWCV",47,0)
 .. D LST2XTMP(INODE)
"RTN","ORWCV",48,0)
 . I $L(PARAM1),$L(PARAM2) D @(ENT_"^"_RTN_"(.LST,DFN,PARAM1,PARAM2)"),LST2XTMP(INODE) Q
"RTN","ORWCV",49,0)
 . I $L(PARAM1) D @(ENT_"^"_RTN_"(.LST,DFN,PARAM1)"),LST2XTMP(INODE) Q
"RTN","ORWCV",50,0)
 . D @(ENT_"^"_RTN_"(.LST,DFN)"),LST2XTMP(INODE)
"RTN","ORWCV",51,0)
 S ^XTMP(NODE,"DONE")=1
"RTN","ORWCV",52,0)
 I $G(^XTMP(NODE,"STOP")) K ^XTMP(NODE)
"RTN","ORWCV",53,0)
 L -^XTMP(NODE)
"RTN","ORWCV",54,0)
 Q
"RTN","ORWCV",55,0)
ERR ;Error trap
"RTN","ORWCV",56,0)
 S $ETRAP="D UNWIND^ORWCV Q"
"RTN","ORWCV",57,0)
 I $D(NODE) D
"RTN","ORWCV",58,0)
 . I $D(INODE) S LST(0)="",LST(1)="0^ERROR DURING COVER SHEET BUILD:"_$ZERROR D LST2XTMP(INODE)
"RTN","ORWCV",59,0)
 . S ^XTMP(NODE,"DONE")=1
"RTN","ORWCV",60,0)
 . L -^XTMP(NODE)
"RTN","ORWCV",61,0)
 D @^%ZOSF("ERRTN") ;file error
"RTN","ORWCV",62,0)
 S $ECODE=",UOR70 error during Cover Sheet build,"
"RTN","ORWCV",63,0)
 Q
"RTN","ORWCV",64,0)
UNWIND ;Unwind Error stack
"RTN","ORWCV",65,0)
 Q:$ESTACK>1  ;pop the stack
"RTN","ORWCV",66,0)
 ;add additional code here, if needed
"RTN","ORWCV",67,0)
 Q
"RTN","ORWCV",68,0)
LST2XTMP(ID)     ; put the list in ^XTMP(NODE,ID)
"RTN","ORWCV",69,0)
 I $G(^XTMP(NODE,"STOP")) Q
"RTN","ORWCV",70,0)
 N I
"RTN","ORWCV",71,0)
 I $L($G(DETAIL)) S I=0 F  S I=$O(LST(I)) Q:'I  S $P(LST(I),"^",12)=DETAIL
"RTN","ORWCV",72,0)
 K ^XTMP(NODE,ID) M ^XTMP(NODE,ID)=LST S ^XTMP(NODE,ID)=1 K LST
"RTN","ORWCV",73,0)
 Q
"RTN","ORWCV",74,0)
POLL(LST,DFN,IP,HWND)       ; poll for completed cover sheet parts
"RTN","ORWCV",75,0)
 N I,ILST,ID,NODE,DONE
"RTN","ORWCV",76,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN,ILST=0,DONE=0
"RTN","ORWCV",77,0)
 I '$D(^XTMP(NODE,"DFN")) Q
"RTN","ORWCV",78,0)
 I ^XTMP(NODE,"DFN")'=DFN S LST(1)="~DONE=1" Q
"RTN","ORWCV",79,0)
 I $G(^XTMP(NODE,"DONE")) S ILST=ILST+1,LST(ILST)="~DONE=1",DONE=1
"RTN","ORWCV",80,0)
 F ID="PROB","CWAD","MEDS","RMND","LABS","VITL","VSIT" D
"RTN","ORWCV",81,0)
 . I '$G(^XTMP(NODE,ID)) Q
"RTN","ORWCV",82,0)
 . S ILST=ILST+1,LST(ILST)="~"_ID
"RTN","ORWCV",83,0)
 . S I=0 F  S I=$O(^XTMP(NODE,ID,I)) Q:'I  S ILST=ILST+1,LST(ILST)="i"_^(I)
"RTN","ORWCV",84,0)
 . K ^XTMP(NODE,ID)
"RTN","ORWCV",85,0)
 I DONE K ^XTMP(NODE)
"RTN","ORWCV",86,0)
 Q
"RTN","ORWCV",87,0)
STOP(OK,DFN,IP,HWND)    ; stop cover sheet data retrieval
"RTN","ORWCV",88,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN,ILST=0,DONE=0
"RTN","ORWCV",89,0)
 S ^XTMP(NODE,"STOP")=1,OK=1
"RTN","ORWCV",90,0)
 L +^XTMP(NODE)
"RTN","ORWCV",91,0)
 I $G(^XTMP(NODE,"DONE")) K ^XTMP(NODE)
"RTN","ORWCV",92,0)
 L -^XTMP(NODE)
"RTN","ORWCV",93,0)
 Q
"RTN","ORWCV",94,0)
CLEAN ; clean up ^XTMP nodes
"RTN","ORWCV",95,0)
 S X="ORWCV"
"RTN","ORWCV",96,0)
 F  S X=$O(^XTMP(X)) Q:$E(X,1,5)'="ORWCV"  W !,X K ^XTMP(X)
"RTN","ORWCV",97,0)
 Q
"RTN","ORWCV",98,0)
LAB(LST,DFN)    ; return labs for patient
"RTN","ORWCV",99,0)
 D LIST^ORQOR1(.LST,DFN,"LAB",4,"T-"_$$RNGLAB(DFN),"T","AW",1)
"RTN","ORWCV",100,0)
 Q
"RTN","ORWCV",101,0)
VST(ORVISIT,DFN,BEG,END,SKIP)    ; return appts/admissions for patient
"RTN","ORWCV",102,0)
 N VAERR,VASD,BDT,COUNT,DTM,EDT,LOC,NOW,ORQUERY,ORLST,STI,STS,TODAY,I,XI,XE,X
"RTN","ORWCV",103,0)
 S NOW=$$NOW^XLFDT(),TODAY=$P(NOW,".",1)
"RTN","ORWCV",104,0)
 I '$G(BEG) S BEG=$$X2FM($$RNGVBEG)
"RTN","ORWCV",105,0)
 I '$G(END) S END=$$X2FM($$RNGVEND)+0.2359
"RTN","ORWCV",106,0)
 S COUNT=0
"RTN","ORWCV",107,0)
 K ^TMP("ORVSTLIST",$J)
"RTN","ORWCV",108,0)
 I END>NOW D   ; get future encounters, past cancels/no-shows from VADPT
"RTN","ORWCV",109,0)
 . S VASD("F")=BEG
"RTN","ORWCV",110,0)
 . S VASD("T")=END
"RTN","ORWCV",111,0)
 . S VASD("W")="123456789"
"RTN","ORWCV",112,0)
 . D SDA^VADPT
"RTN","ORWCV",113,0)
 . S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","ORWCV",114,0)
 . . S XI=^UTILITY("VASD",$J,I,"I"),XE=^("E")
"RTN","ORWCV",115,0)
 . . S DTM=$P(XI,U),IEN=$P(XI,U,2),STI=$P(XI,U,3)
"RTN","ORWCV",116,0)
 . . S LOC=$P(XE,U,2),STS=$P(XE,U,3)
"RTN","ORWCV",117,0)
 . . I DTM<TODAY,(STI=""!(STI["I")!(STI="NT")) Q  ; no prior kept appts
"RTN","ORWCV",118,0)
 . . S ^TMP("ORVSTLIST",$J,DTM,"A",1)="A;"_DTM_";"_IEN_U_DTM_U_LOC_U_STS
"RTN","ORWCV",119,0)
 . K ^UTILITY("VASD",$J)
"RTN","ORWCV",120,0)
 I BEG'>NOW D  ;past encounters from ACRP Toolkit - set in CALLBACK
"RTN","ORWCV",121,0)
 . S BDT=BEG
"RTN","ORWCV",122,0)
 . S EDT=$S(END<NOW:END,1:NOW)
"RTN","ORWCV",123,0)
 . D OPEN^SDQ(.ORQUERY)
"RTN","ORWCV",124,0)
 . I '$$ERRCHK^SDQUT() D INDEX^SDQ(.ORQUERY,"PATIENT/DATE","SET")
"RTN","ORWCV",125,0)
 . I '$$ERRCHK^SDQUT() D PAT^SDQ(.ORQUERY,DFN,"SET")
"RTN","ORWCV",126,0)
 . I '$$ERRCHK^SDQUT() D DATE^SDQ(.ORQUERY,BDT,EDT,"SET")
"RTN","ORWCV",127,0)
 . I '$$ERRCHK^SDQUT() D
"RTN","ORWCV",128,0)
 . . S ORLST=$NA(^TMP("ORVSTLIST",$J))
"RTN","ORWCV",129,0)
 . . D SCANCB^SDQ(.ORQUERY,"D CALLBACK^ORWCV(Y,Y0,.ORLST,.ORSTOP)","SET")
"RTN","ORWCV",130,0)
 . I '$$ERRCHK^SDQUT() D ACTIVE^SDQ(.ORQUERY,"TRUE","SET")
"RTN","ORWCV",131,0)
 . I '$$ERRCHK^SDQUT() D SCAN^SDQ(.ORQUERY,"FORWARD")
"RTN","ORWCV",132,0)
 . D CLOSE^SDQ(.ORQUERY)
"RTN","ORWCV",133,0)
 ;
"RTN","ORWCV",134,0)
 I '$G(SKIP) D
"RTN","ORWCV",135,0)
 . N TIM,MOV,X0,Y,MTIM,XTYP,XLOC,HLOC,EARLY,DONE                ; admits
"RTN","ORWCV",136,0)
 . S EARLY=$$X2FM($$RNGVBEG),DONE=0
"RTN","ORWCV",137,0)
 . S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D  Q:DONE
"RTN","ORWCV",138,0)
 . . S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D  Q:DONE
"RTN","ORWCV",139,0)
 . . . S X0=^DGPM(MOV,0),MTIM=$P(X0,U)
"RTN","ORWCV",140,0)
 . . . I MTIM<EARLY S DONE=1 Q
"RTN","ORWCV",141,0)
 . . . S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","ORWCV",142,0)
 . . . S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","ORWCV",143,0)
 . . . S ^TMP("ORVSTLIST",$J,MTIM,"I",1)="I;"_MTIM_";"_HLOC_U_MTIM_U_"Inpatient Stay"_U_XLOC_U_XTYP
"RTN","ORWCV",144,0)
 ;
"RTN","ORWCV",145,0)
 S COUNT=0
"RTN","ORWCV",146,0)
 S I=0 F  S I=$O(^TMP("ORVSTLIST",$J,I)) Q:'I  D
"RTN","ORWCV",147,0)
 . S J="" F  S J=$O(^TMP("ORVSTLIST",$J,I,J)) Q:J=""  D
"RTN","ORWCV",148,0)
 . . S K=0 F  S K=$O(^TMP("ORVSTLIST",$J,I,J,K)) Q:'K  D
"RTN","ORWCV",149,0)
 . . . S COUNT=COUNT+1
"RTN","ORWCV",150,0)
 . . . S ORVISIT(COUNT)=^TMP("ORVSTLIST",$J,I,J,K)
"RTN","ORWCV",151,0)
 K ^TMP("ORVSTLIST",$J)
"RTN","ORWCV",152,0)
 Q
"RTN","ORWCV",153,0)
CALLBACK(IEN,NODE0,ARRAY,STOP) ; called back from ACRP Toolkit for encounters
"RTN","ORWCV",154,0)
 ;
"RTN","ORWCV",155,0)
 ; IEN and NODE0 relate to Outpatient Encounter File
"RTN","ORWCV",156,0)
 ; set STOP to 1 if need to quit
"RTN","ORWCV",157,0)
 ;
"RTN","ORWCV",158,0)
 N COUNT,DTM,LOC,OOS,TYPE,XSTAT,XLOC
"RTN","ORWCV",159,0)
 S DTM=+NODE0,COUNT=1
"RTN","ORWCV",160,0)
 S LOC=$P(NODE0,"^",4)
"RTN","ORWCV",161,0)
 S XLOC=$P($G(^SC(+LOC,0)),U),OOS=$G(^("OOS"))
"RTN","ORWCV",162,0)
 I OOS Q              ; ignore OOS locations
"RTN","ORWCV",163,0)
 I $P(NODE0,"^",6) Q  ; not parent encounter
"RTN","ORWCV",164,0)
 S XSTAT=$P($G(^SD(409.63,+$P(NODE0,"^",12),0)),"^")
"RTN","ORWCV",165,0)
 S TYPE=$S($P(NODE0,"^",8)=1:"A",1:"V")
"RTN","ORWCV",166,0)
 I TYPE="V",$D(@ARRAY@(DTM,"V")) S COUNT=$O(@ARRAY@(DTM,"V","A"),-1)+1 ; same d/t
"RTN","ORWCV",167,0)
 S @ARRAY@(DTM,TYPE,COUNT)=TYPE_";"_DTM_";"_LOC_U_DTM_U_XLOC_U_XSTAT
"RTN","ORWCV",168,0)
 Q
"RTN","ORWCV",169,0)
DTLVST(RPT,DFN,IEN,X)   ; return progress notes / discharge summary
"RTN","ORWCV",170,0)
 N VISIT
"RTN","ORWCV",171,0)
 I $P(X,";")="A" D
"RTN","ORWCV",172,0)
 . S VISIT=$$APPT2VST^PXAPI(DFN,$P(X,";",2),$P(X,";",3))
"RTN","ORWCV",173,0)
 . I VISIT=0 S VISIT=+$$GETENC^PXAPI(DFN,$P(X,";",2),$P(X,";",3))
"RTN","ORWCV",174,0)
 . D DETNOTE^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",175,0)
 I $P(X,";")="V" D
"RTN","ORWCV",176,0)
 . S VISIT=+$$GETENC^PXAPI(DFN,$P(X,";",2),$P(X,";",3))
"RTN","ORWCV",177,0)
 . D DETNOTE^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",178,0)
 I $P(X,";")="I" D
"RTN","ORWCV",179,0)
 . S VISIT=+$$GETENC^PXAPI(DFN,$P(X,";",2),$P(X,";",3))
"RTN","ORWCV",180,0)
 . D DETSUM^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",181,0)
 . K ^TMP("PXKENC",$J)
"RTN","ORWCV",182,0)
 Q
"RTN","ORWCV",183,0)
X2FM(X)       ; return FM date given relative date
"RTN","ORWCV",184,0)
 N %DT S %DT="TS" D ^%DT
"RTN","ORWCV",185,0)
 Q Y
"RTN","ORWCV",186,0)
RNGLAB(DFN)     ; return days back for patient
"RTN","ORWCV",187,0)
 N INPT,PAR
"RTN","ORWCV",188,0)
 S INPT=0 I $L($G(^DPT(DFN,.1))) S INPT=1
"RTN","ORWCV",189,0)
 S PAR="ORQQLR DATE RANGE "_$S(INPT:"INPT",1:"OUTPT")
"RTN","ORWCV",190,0)
 Q $$GET^XPAR("ALL",PAR,1,"I")
"RTN","ORWCV",191,0)
 ;
"RTN","ORWCV",192,0)
RNGVBEG()       ; return start date for encounters
"RTN","ORWCV",193,0)
 Q $$GET^XPAR("ALL","ORQQVS SEARCH RANGE START",1,"I")
"RTN","ORWCV",194,0)
 ;
"RTN","ORWCV",195,0)
RNGVEND()       ; return stop date for encounters
"RTN","ORWCV",196,0)
 Q $$GET^XPAR("ALL","ORQQAP SEARCH RANGE STOP",1,"I")
"RTN","ORWCV",197,0)
 ;
"RTN","ORWCV",198,0)
RANGES(REC,DFN) ; return ranges given a patient
"RTN","ORWCV",199,0)
 N REC
"RTN","ORWCV",200,0)
 S REC=$$RNGLAB(DFN)_U_$$RNGVBEG_U_$$RNGVEND
"RTN","ORWCV",201,0)
 Q
"RTN","ORWCV",202,0)
  
"RTN","ORWDPS1")
0^10^B17337728
"RTN","ORWDPS1",1,0)
ORWDPS1 ; SLC/KCM/JLI - Pharmacy Calls for Windows Dialog [ 08/04/96  6:57 PM ] 4/18/2002 5PM
"RTN","ORWDPS1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,132**;Dec 17, 1997
"RTN","ORWDPS1",3,0)
 ;
"RTN","ORWDPS1",4,0)
ODSLCT(LST,PSTYPE,DFN,LOC) ; return default lists for dialog
"RTN","ORWDPS1",5,0)
 ; PSTYPE: pharmacy type (U=unit dose, F=IV fluids, O=outpatient)
"RTN","ORWDPS1",6,0)
 N ILST S ILST=0
"RTN","ORWDPS1",7,0)
 S ILST=ILST+1,LST(ILST)="~Priority" D PRIOR
"RTN","ORWDPS1",8,0)
 S ILST=ILST+1,LST(ILST)="~DispMsg"
"RTN","ORWDPS1",9,0)
 S ILST=ILST+1,LST(ILST)="d"_$$DISPMSG
"RTN","ORWDPS1",10,0)
 ;
"RTN","ORWDPS1",11,0)
 ; I PSTYPE="F" D  Q                           ; IV Fluids
"RTN","ORWDPS1",12,0)
 ; . S ILST=ILST+1,LST(ILST)="~ShortList" D SHORT
"RTN","ORWDPS1",13,0)
 ;
"RTN","ORWDPS1",14,0)
 I PSTYPE="O" D                                ; Outpatient
"RTN","ORWDPS1",15,0)
 . S ILST=ILST+1,LST(ILST)="~Refills"
"RTN","ORWDPS1",16,0)
 . S ILST=ILST+1,LST(ILST)="d0^0"
"RTN","ORWDPS1",17,0)
 . S ILST=ILST+1,LST(ILST)="~Pickup"
"RTN","ORWDPS1",18,0)
 . S ILST=ILST+1,LST(ILST)="d"_$$DEFPICK($G(LOC))
"RTN","ORWDPS1",19,0)
 . ; S ILST=ILST+1,LST(ILST)="~Supply"
"RTN","ORWDPS1",20,0)
 . ; S ILST=ILST+1,LST(ILST)="d^"_$$DEFSPLY(DFN)
"RTN","ORWDPS1",21,0)
 Q
"RTN","ORWDPS1",22,0)
PRIOR ; from DLGSLCT, get list of allowed priorities
"RTN","ORWDPS1",23,0)
 N X,XREF
"RTN","ORWDPS1",24,0)
 S XREF=$S(PSTYPE="O":"S.PSO",1:"S.PSJ")
"RTN","ORWDPS1",25,0)
 S X="" F  S X=$O(^ORD(101.42,XREF,X)) Q:'$L(X)  D
"RTN","ORWDPS1",26,0)
 . S ILST=ILST+1,LST(ILST)="i"_$O(^ORD(101.42,XREF,X,0))_U_X
"RTN","ORWDPS1",27,0)
 S ILST=ILST+1,LST(ILST)="d"_$O(^ORD(101.42,"B","ROUTINE",0))_U_"ROUTINE"
"RTN","ORWDPS1",28,0)
 Q
"RTN","ORWDPS1",29,0)
DEFPICK(LOC)       ; return default routing
"RTN","ORWDPS1",30,0)
 N X,DLG,PRMT
"RTN","ORWDPS1",31,0)
 S DLG=$O(^ORD(101.41,"AB","PSO OERR",0)),X=""
"RTN","ORWDPS1",32,0)
 S PRMT=$O(^ORD(101.41,"AB","OR GTX ROUTING",0))
"RTN","ORWDPS1",33,0)
 I $D(^TMP("ORECALL",$J,+DLG,+PRMT,1)) S X=^(1)
"RTN","ORWDPS1",34,0)
 I X'="" S EDITONLY=1 Q X  ; EDITONLY used by default action
"RTN","ORWDPS1",35,0)
 ;
"RTN","ORWDPS1",36,0)
 ;S X=$$GET^XPAR("ALL^"_"LOC.`"_LOC,"ORWDPS ROUTING DEFAULT",1,"I")
"RTN","ORWDPS1",37,0)
 S X=$$GET^XPAR("LOC.`"_LOC_"^SYS","ORWDPS ROUTING DEFAULT",1,"I")
"RTN","ORWDPS1",38,0)
 I X="C" S X="C^in Clinic" G XPICK
"RTN","ORWDPS1",39,0)
 I X="M" S X="M^by Mail"   G XPICK
"RTN","ORWDPS1",40,0)
 I X="W" S X="W^at Window" G XPICK
"RTN","ORWDPS1",41,0)
 I X="N" S X=""            G XPICK
"RTN","ORWDPS1",42,0)
 I X=""  S X=$S($D(^PSX(550,"C")):"M^by Mail",1:"W^at Window")
"RTN","ORWDPS1",43,0)
XPICK Q X
"RTN","ORWDPS1",44,0)
 ;
"RTN","ORWDPS1",45,0)
DEFSPLY(DFN)    ; return default days supply for this patient
"RTN","ORWDPS1",46,0)
 N ORWX
"RTN","ORWDPS1",47,0)
 S ORWX("PATIENT")=DFN
"RTN","ORWDPS1",48,0)
 D DSUP^PSOSIGDS(.ORWX)
"RTN","ORWDPS1",49,0)
 Q $G(ORWX("DAYS SUPPLY"))
"RTN","ORWDPS1",50,0)
 ;
"RTN","ORWDPS1",51,0)
DFLTSPLY(VAL,UPD,SCH,PAT,DRG)        ; return days supply given quantity
"RTN","ORWDPS1",52,0)
 ; VAL: default days supply
"RTN","ORWDPS1",53,0)
 N ORWX,I
"RTN","ORWDPS1",54,0)
 S ORWX("PATIENT")=PAT
"RTN","ORWDPS1",55,0)
 I DRG S ORWX("DRUG")=DRG
"RTN","ORWDPS1",56,0)
 F I=1:1:$L(UPD,U)-1 D
"RTN","ORWDPS1",57,0)
 . S ORWX("DOSE ORDERED",I)=$P(UPD,U,I)
"RTN","ORWDPS1",58,0)
 . S ORWX("SCHEDULE",I)=$P(SCH,U,I)
"RTN","ORWDPS1",59,0)
 D DSUP^PSOSIGDS(.ORWX)
"RTN","ORWDPS1",60,0)
 S VAL=$G(ORWX("DAYS SUPPLY"))
"RTN","ORWDPS1",61,0)
 Q
"RTN","ORWDPS1",62,0)
DISPMSG()       ; return 1 to suppress dispense message
"RTN","ORWDPS1",63,0)
 Q +$$GET^XPAR("ALL","ORWDPS SUPPRESS DISPENSE MSG",1,"I")
"RTN","ORWDPS1",64,0)
 ;
"RTN","ORWDPS1",65,0)
SCHALL(LST)     ; return all schedules
"RTN","ORWDPS1",66,0)
 N ILST,SCH,IEN,EXP,TYP,X0
"RTN","ORWDPS1",67,0)
 S ILST=0,SCH=""
"RTN","ORWDPS1",68,0)
 F  S SCH=$O(^PS(51.1,"APPSJ",SCH)) Q:SCH=""  D
"RTN","ORWDPS1",69,0)
 . S IEN=0,EXP=""
"RTN","ORWDPS1",70,0)
 . F  S IEN=$O(^PS(51.1,"APPSJ",SCH,IEN)) Q:'IEN  D  Q:$L(EXP)
"RTN","ORWDPS1",71,0)
 . . S X0=$G(^PS(51.1,IEN,0)),EXP=$P(X0,U,8),TYP=$P(X0,U,5)
"RTN","ORWDPS1",72,0)
 . S ILST=ILST+1,LST(ILST)=SCH_U_EXP_U_TYP
"RTN","ORWDPS1",73,0)
 Q
"RTN","ORWDPS1",74,0)
FORMALT(ORLST,IEN,PSTYPE) ; return a list of formulary alternatives
"RTN","ORWDPS1",75,0)
 N PSID,I
"RTN","ORWDPS1",76,0)
 S IEN=+$P(^ORD(101.43,IEN,0),U,2)
"RTN","ORWDPS1",77,0)
 D EN1^PSSUTIL1(.IEN,PSTYPE)
"RTN","ORWDPS1",78,0)
 S PSID=0,I=0
"RTN","ORWDPS1",79,0)
 F  S PSID=$O(IEN(PSID)) Q:'PSID  D
"RTN","ORWDPS1",80,0)
 . S OI=+$O(^ORD(101.43,"ID",PSID_";99PSP",0))
"RTN","ORWDPS1",81,0)
 . I OI S I=I+1,ORLST(I)=OI,$P(ORLST(I),U,2)=$P(^ORD(101.43,OI,0),U)
"RTN","ORWDPS1",82,0)
 Q
"RTN","ORWDPS1",83,0)
DOSEALT(LST,DDRUG,CUROI,PSTYPE) ; return a list of formulary alternatives for dose
"RTN","ORWDPS1",84,0)
 N I,OI,ORWLST,ILST S ILST=0
"RTN","ORWDPS1",85,0)
 D ENRFA^PSJORUTL(DDRUG,PSTYPE,.ORWLST)
"RTN","ORWDPS1",86,0)
 S I=0 F  S I=$O(ORWLST(I)) Q:'I  D
"RTN","ORWDPS1",87,0)
 . S OI=+$O(^ORD(101.43,"ID",+$P(ORWLST(I),U,4)_";99PSP",0))
"RTN","ORWDPS1",88,0)
 . I OI,OI'=CUROI S ILST=ILST+1,LST(ILST)=OI_U_$P(^ORD(101.43,OI,0),U)
"RTN","ORWDPS1",89,0)
 Q
"RTN","ORWDPS1",90,0)
FAILDEA(FAIL,OI,ORNP,PSTYPE)    ; return 1 if DEA check fails for this provider
"RTN","ORWDPS1",91,0)
 N DEAFLG,PSOI,TPKG
"RTN","ORWDPS1",92,0)
 S FAIL=0,TPKG=$P($G(^ORD(101.43,+$G(OI),0)),U,2)
"RTN","ORWDPS1",93,0)
 Q:TPKG'["PS"
"RTN","ORWDPS1",94,0)
 S PSOI=+TPKG Q:PSOI'>0
"RTN","ORWDPS1",95,0)
 I '$L($T(OIDEA^PSSUTLA1)) Q
"RTN","ORWDPS1",96,0)
 S DEAFLG=$$OIDEA^PSSUTLA1(PSOI,PSTYPE) Q:DEAFLG'>0
"RTN","ORWDPS1",97,0)
 I '$L($P($G(^VA(200,+$G(ORNP),"PS")),U,2)),'$L($P($G(^("PS")),U,3)) S FAIL=1
"RTN","ORWDPS1",98,0)
 Q
"RTN","ORWDPS1",99,0)
CHK94(VAL)      ; return 1 if patch 94 has been installed
"RTN","ORWDPS1",100,0)
 S VAL=0
"RTN","ORWDPS1",101,0)
 I $O(^ORD(101.41,"B","PS MEDS",0)) S VAL=1
"RTN","ORWDPS1",102,0)
 Q
"RTN","ORWDPS1",103,0)
LOCPICK(Y,LOC) ; return default Location level routing
"RTN","ORWDPS1",104,0)
 S Y=""
"RTN","ORWDPS1",105,0)
 S Y=$$GET^XPAR("LOC.`"_LOC_"^SYS","ORWDPS ROUTING DEFAULT",1,"I")
"RTN","ORWDPS1",106,0)
 I Y="C" S Y="C^in Clinic"
"RTN","ORWDPS1",107,0)
 I Y="M" S Y="M^by Mail"
"RTN","ORWDPS1",108,0)
 I Y="W" S Y="W^at Window"
"RTN","ORWDPS1",109,0)
 I Y="N" S Y=""
"RTN","ORWDPS1",110,0)
 Q
"RTN","ORWDPS2")
0^21^B52768904
"RTN","ORWDPS2",1,0)
ORWDPS2 ; SLC/KCM/JLI - Pharmacy Calls for Windows Dialog ;3/26/02  8:41 4/10/02 11:20AM  4/15/02 3:15PM
"RTN","ORWDPS2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,116,125,131,132**;Dec 17, 1997
"RTN","ORWDPS2",3,0)
 ;
"RTN","ORWDPS2",4,0)
OISLCT(LST,OI,PSTYPE,ORVP) ; return for defaults for pharmacy orderable item
"RTN","ORWDPS2",5,0)
 N ILST,ORDOSE,ORWPSOI,ORWDOSES
"RTN","ORWDPS2",6,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J),^TMP("PSSDIN",$J)
"RTN","ORWDPS2",7,0)
 S ILST=0
"RTN","ORWDPS2",8,0)
 S ORWPSOI=0
"RTN","ORWDPS2",9,0)
 S:+OI ORWPSOI=+$P($G(^ORD(101.43,+OI,0)),U,2)
"RTN","ORWDPS2",10,0)
 D START^PSSJORDF(ORWPSOI,$S(PSTYPE="U":"I",1:"O")) ; dflt route, schedule, etc.
"RTN","ORWDPS2",11,0)
 D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,PSTYPE,ORVP)       ; dflt doses
"RTN","ORWDPS2",12,0)
 D EN^PSSDIN(ORWPSOI)                               ; nfi text
"RTN","ORWDPS2",13,0)
 S ILST=ILST+1,LST(ILST)="~Medication"
"RTN","ORWDPS2",14,0)
 S ILST=ILST+1,LST(ILST)="d"_OI_U_$S(+OI:$P(^ORD(101.43,OI,0),U),1:"")
"RTN","ORWDPS2",15,0)
 S ILST=ILST+1,LST(ILST)="~Verb"
"RTN","ORWDPS2",16,0)
 S ILST=ILST+1,LST(ILST)="d"_$P($G(ORDOSE("MISC")),U)
"RTN","ORWDPS2",17,0)
 S ILST=ILST+1,LST(ILST)="~Preposition"
"RTN","ORWDPS2",18,0)
 S ILST=ILST+1,LST(ILST)="d"_$P($G(ORDOSE("MISC")),U,2)
"RTN","ORWDPS2",19,0)
 S ILST=ILST+1,LST(ILST)="~PtInstr"   D PTINSTR
"RTN","ORWDPS2",20,0)
 S ILST=ILST+1,LST(ILST)="~AllDoses"  D ALLDOSE ; must do before DOSAGE
"RTN","ORWDPS2",21,0)
 S ILST=ILST+1,LST(ILST)="~Dosage"    D DOSAGE
"RTN","ORWDPS2",22,0)
 S ILST=ILST+1,LST(ILST)="~Dispense"  D DISPLST
"RTN","ORWDPS2",23,0)
 S ILST=ILST+1,LST(ILST)="~Route"     D ROUTE
"RTN","ORWDPS2",24,0)
 S ILST=ILST+1,LST(ILST)="~Schedule"  D SCHED
"RTN","ORWDPS2",25,0)
 S ILST=ILST+1,LST(ILST)="~Guideline" D GUIDE
"RTN","ORWDPS2",26,0)
 S ILST=ILST+1,LST(ILST)="~Message"   D OIMSG
"RTN","ORWDPS2",27,0)
 S ILST=ILST+1,LST(ILST)="~DEASchedule" ;PKI
"RTN","ORWDPS2",28,0)
 S ILST=ILST+1,LST(ILST)="d"_$P($G(ORDOSE("DEA")),U) ;PKI
"RTN","ORWDPS2",29,0)
 I PSTYPE="U" D
"RTN","ORWDPS2",30,0)
 . ; start, expires, next admin
"RTN","ORWDPS2",31,0)
 I PSTYPE="O" D
"RTN","ORWDPS2",32,0)
 . ; days supply, quantity, refills
"RTN","ORWDPS2",33,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J),^TMP("PSSDIN",$J)
"RTN","ORWDPS2",34,0)
 Q
"RTN","ORWDPS2",35,0)
 ;
"RTN","ORWDPS2",36,0)
PTINSTR ; from OISLCT, set up patient instructions
"RTN","ORWDPS2",37,0)
 N I
"RTN","ORWDPS2",38,0)
 S I=0 F  S I=$O(ORDOSE("PI",I)) Q:I'>0  S ILST=ILST+1,LST(ILST)="t"_ORDOSE("PI",I)
"RTN","ORWDPS2",39,0)
 Q
"RTN","ORWDPS2",40,0)
DOSAGE ; from OISLCT, set up the list of dosages
"RTN","ORWDPS2",41,0)
 ; LST(n)=iDrugName^Strength^NF^... (see BLDDOSE)
"RTN","ORWDPS2",42,0)
 ; must be called after ALLDOSE so ORWDOSES is set up
"RTN","ORWDPS2",43,0)
 N I
"RTN","ORWDPS2",44,0)
 S I=0 F  S I=$O(ORWDOSES(I)) Q:I'>0  S ILST=ILST+1,LST(ILST)=ORWDOSES(I)
"RTN","ORWDPS2",45,0)
 Q
"RTN","ORWDPS2",46,0)
DISPLST ; from OISLCT, set up list of dispense drugs
"RTN","ORWDPS2",47,0)
 ; DrugIEN^Strength^Units^Name^Split
"RTN","ORWDPS2",48,0)
 N DD
"RTN","ORWDPS2",49,0)
 S DD=0 F  S DD=$O(ORDOSE("DD",DD)) Q:'DD  D
"RTN","ORWDPS2",50,0)
 . S ILST=ILST+1
"RTN","ORWDPS2",51,0)
 . S LST(ILST)="i"_DD_U_$P(ORDOSE("DD",DD),U,5,6)_U_$P(ORDOSE("DD",DD),U)_U_$P(ORDOSE("DD",DD),U,11)
"RTN","ORWDPS2",52,0)
 Q
"RTN","ORWDPS2",53,0)
ALLDOSE ; from OISLCT, set up a list of all possible doses
"RTN","ORWDPS2",54,0)
 ; LST(n)=iDrugName^Strength^NF^... (see BLDDOSE)
"RTN","ORWDPS2",55,0)
 N I,J,CONJ,DD,DRUG,DDNM,LDOSE,TEXT,STREN,UD,COST,NF,ID,X
"RTN","ORWDPS2",56,0)
 S CONJ=$P($G(ORDOSE("MISC")),U,3),ORWDOSES=0
"RTN","ORWDPS2",57,0)
 S:$L(CONJ) CONJ=" "_CONJ_" " S:'$L(CONJ) CONJ=" "
"RTN","ORWDPS2",58,0)
 S I=0 F  S I=$O(ORDOSE(I)) Q:I'>0  D
"RTN","ORWDPS2",59,0)
 . S X=$$BLDDOSE(ORDOSE(I))
"RTN","ORWDPS2",60,0)
 . S ORWDOSES=ORWDOSES+1,ORWDOSES(ORWDOSES)=X
"RTN","ORWDPS2",61,0)
 . S ILST=ILST+1
"RTN","ORWDPS2",62,0)
 . S LST(ILST)="i"_$P(X,U,5)_U_$P($P(X,U,4),"&",6)_U_$P(X,U,4)
"RTN","ORWDPS2",63,0)
 . S J=0 F  S J=$O(ORDOSE(I,J)) Q:J'>0  D
"RTN","ORWDPS2",64,0)
 . . S X=$$BLDDOSE(ORDOSE(I,J))
"RTN","ORWDPS2",65,0)
 . . S ILST=ILST+1
"RTN","ORWDPS2",66,0)
 . . S LST(ILST)="i"_$P(X,U,5)_U_$P($P(X,U,4),"&",6)_U_$P(X,U,4)
"RTN","ORWDPS2",67,0)
 Q
"RTN","ORWDPS2",68,0)
BLDDOSE(X)  ; build dose info where X is ORDOSE node
"RTN","ORWDPS2",69,0)
 ; from ALLDOSE
"RTN","ORWDPS2",70,0)
 ;    X=TotalDose^Units^U/D^Noun^LocalDose^DispDrugIEN
"RTN","ORWDPS2",71,0)
 ;    Y=iDrugName^Strength^NF^TDose&Units&U/D&Noun&LDose&Drug&Stren&Units^
"RTN","ORWDPS2",72,0)
 ;      DoseText^CostText^MaxRefills^DispUnits^CanSplit
"RTN","ORWDPS2",73,0)
 ; DRUG=Name^Cost^NF^DispUnit^Strength^Units^DoseForm^MaxRefills^
"RTN","ORWDPS2",74,0)
 ; No TotalDose,           use LocalDose
"RTN","ORWDPS2",75,0)
 ; TotalDose & Strength,   use LocalDose+Conjunction+Strength+Units
"RTN","ORWDPS2",76,0)
 ; TotalDose, No Strength, use LocalDose+Conjunction+DispenseName
"RTN","ORWDPS2",77,0)
 S DD=+$P(X,U,6),DRUG=ORDOSE("DD",DD),DDNM=$P(DRUG,U),ID=$P(X,U,1,6)
"RTN","ORWDPS2",78,0)
 S LDOSE=$P(X,U,5),TEXT=LDOSE,STREN=$P(DRUG,U,5)_$P(DRUG,U,6)
"RTN","ORWDPS2",79,0)
 S $P(ID,U,7)=$P(DRUG,U,5) S $P(ID,U,8)=$P(DRUG,U,6) ; add strength
"RTN","ORWDPS2",80,0)
 I '$L($P(X,U)),$L($P(DRUG,U,5))  S TEXT=TEXT_CONJ_STREN
"RTN","ORWDPS2",81,0)
 I '$L($P(X,U)),'$L($P(DRUG,U,5)) S TEXT=TEXT_CONJ_$P(DRUG,U)
"RTN","ORWDPS2",82,0)
 S UD=$P(X,U,3),COST=$P(X,U,7),NF=$S($P(DRUG,U,3):"NF",1:"")
"RTN","ORWDPS2",83,0)
 ;I UD S COST="$"_$J(UD*$P(DRUG,U,2),1,3) ;_" per "_UD_" "_$P(X,U,4)
"RTN","ORWDPS2",84,0)
 S Y="i"_DDNM_U_STREN_U_NF_U_$TR(ID,U,"&")_U_TEXT_U_COST_U_$P(DRUG,U,8)_U_$P(DRUG,U,4)
"RTN","ORWDPS2",85,0)
 Q Y
"RTN","ORWDPS2",86,0)
ROUTE ; from OISLCT, get list of routes for the drug form
"RTN","ORWDPS2",87,0)
 ; ** NEED BOTH ABBREVIATION & NAME IN LIST BOX
"RTN","ORWDPS2",88,0)
 N I,CNT,ABBR,IEN,ROUT,EXP,X
"RTN","ORWDPS2",89,0)
 S I="" F  S I=$O(^TMP("PSJMR",$J,I)) Q:I=""  D
"RTN","ORWDPS2",90,0)
 . S X=^TMP("PSJMR",$J,I)
"RTN","ORWDPS2",91,0)
 . S ROUT=$P(X,U),ABBR=$P(X,U,2),IEN=$P(X,U,3),EXP=$P(X,U,4)
"RTN","ORWDPS2",92,0)
 . S ILST=ILST+1,LST(ILST)="i"_IEN_U_ROUT_U_ABBR_U_EXP_U_$P(X,U,5)
"RTN","ORWDPS2",93,0)
 . I I=1,IEN S ILST=ILST+1,LST(ILST)="d"_IEN_U_ROUT ;_U_ABBR ; assume first always default
"RTN","ORWDPS2",94,0)
 ; add abbreviations to list of routes, commented out for 15.5 on
"RTN","ORWDPS2",95,0)
 ; S I="" F  S I=$O(^TMP("PSJMR",$J,I)) Q:I=""  D
"RTN","ORWDPS2",96,0)
 ; . S X=^TMP("PSJMR",$J,I)
"RTN","ORWDPS2",97,0)
 ; . S ROUT=$P(X,U),ABBR=$P(X,U,2),IEN=$P(X,U,3),EXP=$P(X,U,4)
"RTN","ORWDPS2",98,0)
 ; . I $L(ABBR),(ABBR'=ROUT) S ILST=ILST+1,LST(ILST)="i"_IEN_U_ABBR_" ("_ROUT_")"_U_ABBR_U_EXP
"RTN","ORWDPS2",99,0)
 Q
"RTN","ORWDPS2",100,0)
SCHED ; from OISLCT, get default schedule for this medication
"RTN","ORWDPS2",101,0)
 I $L($G(^TMP("PSJSCH",$J))) S ILST=ILST+1,LST(ILST)="d"_^($J)
"RTN","ORWDPS2",102,0)
 Q
"RTN","ORWDPS2",103,0)
GUIDE ; from OISLCT, get guidelines associated with this medication
"RTN","ORWDPS2",104,0)
 N IEN,I
"RTN","ORWDPS2",105,0)
 S IEN=0 F  S IEN=$O(^TMP("PSSDIN",$J,"OI",ORWPSOI,IEN)) Q:'IEN  D
"RTN","ORWDPS2",106,0)
 . S I=0 F  S I=$O(^TMP("PSSDIN",$J,"OI",ORWPSOI,IEN,I)) Q:'I  D
"RTN","ORWDPS2",107,0)
 . . S ILST=ILST+1,LST(ILST)="t"_^TMP("PSSDIN",$J,"OI",ORWPSOI,IEN,I)
"RTN","ORWDPS2",108,0)
 Q
"RTN","ORWDPS2",109,0)
OIMSG ; from OISLCT, get the orderable item message for this medication
"RTN","ORWDPS2",110,0)
 S I=0 F  S I=$O(^ORD(101.43,OI,8,I)) Q:I'>0  S ILST=ILST+1,LST(ILST)="t"_^(I,0)
"RTN","ORWDPS2",111,0)
 Q
"RTN","ORWDPS2",112,0)
ADMIN(REC,DFN,SCH,OI,LOC)       ; return administration time info
"RTN","ORWDPS2",113,0)
 ; REC: StartText^StartTime^Duration^FirstAdmin
"RTN","ORWDPS2",114,0)
 S OI=+$P($G(^ORD(101.43,+OI,0)),U,2)
"RTN","ORWDPS2",115,0)
 S LOC=+$G(^SC(LOC,42)),REC=""
"RTN","ORWDPS2",116,0)
 I $L($G(^DPT(DFN,.1))) S REC=$$FIRST^ORCDPS3(DFN,LOC,OI,SCH)
"RTN","ORWDPS2",117,0)
 Q
"RTN","ORWDPS2",118,0)
REQST(VAL,DFN,SCH,OI,LOC,TXT)   ; return requested start time
"RTN","ORWDPS2",119,0)
 ; VAL: FirstAdmin time
"RTN","ORWDPS2",120,0)
 S VAL=""
"RTN","ORWDPS2",121,0)
 Q:'$L($G(SCH))  Q:'$G(OI)
"RTN","ORWDPS2",122,0)
 S OI=+$P($G(^ORD(101.43,+OI,0)),U,2)
"RTN","ORWDPS2",123,0)
 S LOC=+$G(^SC(LOC,42))
"RTN","ORWDPS2",124,0)
 S VAL=$P($$RESOLVE^PSJORPOE(DFN,SCH,OI,TXT,LOC),U,2)
"RTN","ORWDPS2",125,0)
 Q
"RTN","ORWDPS2",126,0)
DAY2QTY(VAL,DAY,UPD,SCH,DUR,PAT,DRG)        ; return qty for days supply
"RTN","ORWDPS2",127,0)
 ; VAL: quantity
"RTN","ORWDPS2",128,0)
 N ORWX,I,X,ADUR,ADURNM
"RTN","ORWDPS2",129,0)
 S ORWX("DAYS SUPPLY")=DAY
"RTN","ORWDPS2",130,0)
 S ORWX("PATIENT")=PAT
"RTN","ORWDPS2",131,0)
 I DRG S ORWX("DRUG")=DRG
"RTN","ORWDPS2",132,0)
 F I=1:1:$L(UPD,U)-1 D
"RTN","ORWDPS2",133,0)
 . S ORWX("DOSE ORDERED",I)=$P(UPD,U,I)
"RTN","ORWDPS2",134,0)
 . S ORWX("SCHEDULE",I)=$P(SCH,U,I)
"RTN","ORWDPS2",135,0)
 . S ADUR=$P(DUR,U,I),ADURNM=$P($P(ADUR," ",2),"~")
"RTN","ORWDPS2",136,0)
 . S:ADURNM="MONTHS" X=+ADUR_"L"
"RTN","ORWDPS2",137,0)
 . S:ADURNM'="MONTHS" X=+ADUR_$E($P(ADUR," ",2))
"RTN","ORWDPS2",138,0)
 . I $L(X) S ORWX("DURATION",I)=X
"RTN","ORWDPS2",139,0)
 . S X=$E($P(ADUR,"~",2))
"RTN","ORWDPS2",140,0)
 . I $L(X) S ORWX("CONJUNCTION",I)=X
"RTN","ORWDPS2",141,0)
 D QTYX^PSOSIG(.ORWX)
"RTN","ORWDPS2",142,0)
 S VAL=$G(ORWX("QTY"))
"RTN","ORWDPS2",143,0)
 Q
"RTN","ORWDPS2",144,0)
QTY2DAY(VAL,QTY,UPD,SCH,DUR,PAT,DRG)        ; return days supply given quantity
"RTN","ORWDPS2",145,0)
 ; VAL: days supply
"RTN","ORWDPS2",146,0)
 N ORWX,I,X,ADUR
"RTN","ORWDPS2",147,0)
 S ORWX("QTY")=QTY
"RTN","ORWDPS2",148,0)
 S ORWX("PATIENT")=PAT
"RTN","ORWDPS2",149,0)
 I DRG S ORWX("DRUG")=DRG
"RTN","ORWDPS2",150,0)
 F I=1:1:$L(UPD,U)-1 D
"RTN","ORWDPS2",151,0)
 . S ORWX("DOSE ORDERED",I)=$P(UPD,U,I)
"RTN","ORWDPS2",152,0)
 . S ORWX("SCHEDULE",I)=$P(SCH,U,I)
"RTN","ORWDPS2",153,0)
 . S ADUR=$P(DUR,U,I),X=+ADUR_$E($P(ADUR," ",2))
"RTN","ORWDPS2",154,0)
 . I $L(X) S ORWX("DURATION",I)=X
"RTN","ORWDPS2",155,0)
 . S X=$E($P(ADUR,"~",2))
"RTN","ORWDPS2",156,0)
 . I $L(X) S ORWX("CONJUNCTION",I)=X
"RTN","ORWDPS2",157,0)
 D QTYX^PSOSIG(.ORWX)
"RTN","ORWDPS2",158,0)
 S VAL=$G(ORWX("DAYS SUPPLY"))
"RTN","ORWDPS2",159,0)
 Q
"RTN","ORWDPS2",160,0)
MAXREF(VAL,PAT,DRG,SUP,OI,OUT)      ; return the maximum number of refills
"RTN","ORWDPS2",161,0)
 ; PAT=Patient DFN, DRG=ptr50, SUP=days supply, OI=orderable item
"RTN","ORWDPS2",162,0)
 ; VAL: maximum refills allowed
"RTN","ORWDPS2",163,0)
 N ORWX
"RTN","ORWDPS2",164,0)
 S ORWX("PATIENT")=PAT
"RTN","ORWDPS2",165,0)
 I $G(DRG) S ORWX("DRUG")=+DRG
"RTN","ORWDPS2",166,0)
 I $G(SUP) S ORWX("DAYS SUPPLY")=SUP
"RTN","ORWDPS2",167,0)
 I $G(OI)  S ORWX("ITEM")=OI
"RTN","ORWDPS2",168,0)
 I $G(OUT) S ORWX("DISCHARGE")=1
"RTN","ORWDPS2",169,0)
 D MAX^PSOSIGDS(.ORWX)
"RTN","ORWDPS2",170,0)
 S VAL=$G(ORWX("MAX"))
"RTN","ORWDPS2",171,0)
 Q
"RTN","ORWDPS2",172,0)
SCHREQ(VAL,OI,RTE,DRG)  ; return 1 if schedule is required
"RTN","ORWDPS2",173,0)
 ; OI=orderable item, RTE=ptr route, DRG=ptr dispense drug
"RTN","ORWDPS2",174,0)
 S VAL=1
"RTN","ORWDPS2",175,0)
 Q:'$G(OI)  Q:'$G(RTE)
"RTN","ORWDPS2",176,0)
 S VAL=$$SCHREQ^PSJORPOE(RTE,OI,+$G(DRG))
"RTN","ORWDPS2",177,0)
 Q
"RTN","ORWDPS2",178,0)
CHKPI(VAL,ODIFN) ; return pre-existing patient instruct
"RTN","ORWDPS2",179,0)
 N IDNUM,IDPI
"RTN","ORWDPS2",180,0)
 S (IDNUM,IDPI)=0,VAL=""
"RTN","ORWDPS2",181,0)
 I '$D(^OR(100,ODIFN,4.5,"ID","PI")) S VAL="" Q
"RTN","ORWDPS2",182,0)
 F  S IDNUM=$O(^OR(100,ODIFN,4.5,"ID","PI",IDNUM)) Q:'IDNUM  D
"RTN","ORWDPS2",183,0)
 . F  S IDPI=$O(^OR(100,ODIFN,4.5,IDNUM,2,IDPI)) Q:'IDPI  D
"RTN","ORWDPS2",184,0)
 .. S VAL=VAL_^OR(100,ODIFN,4.5,IDNUM,2,IDPI,0)
"RTN","ORWDPS2",185,0)
 K IDNUM,IDPI
"RTN","ORWDPS2",186,0)
 Q
"RTN","ORWDPS2",187,0)
CHKGRP(VAL,ORIFN) ;
"RTN","ORWDPS2",188,0)
 ;If order belong to Inpatient Med Order Group: return 1
"RTN","ORWDPS2",189,0)
 ;Otherwise, return 0
"RTN","ORWDPS2",190,0)
 S VAL=0
"RTN","ORWDPS2",191,0)
 I '$L(ORIFN) Q
"RTN","ORWDPS2",192,0)
 N UDGRP,IPGRP,ODGRP,ODID
"RTN","ORWDPS2",193,0)
 S ODID=+ORIFN
"RTN","ORWDPS2",194,0)
 Q:ODID<1
"RTN","ORWDPS2",195,0)
 S (UDGRP,IPGRP,ODGRP)=0
"RTN","ORWDPS2",196,0)
 S UDGRP=$O(^ORD(100.98,"B","UD RX",UDGRP))
"RTN","ORWDPS2",197,0)
 S IPGRP=$O(^ORD(100.98,"B","INPATIENT MEDICATIONS",IPGRP))
"RTN","ORWDPS2",198,0)
 S:IPGRP=0 IPGRP=$O(^ORD(100.98,"B","I RX",IPGRP))
"RTN","ORWDPS2",199,0)
 I $L($G(^OR(100,ODID,0)))<1 Q
"RTN","ORWDPS2",200,0)
 S ODGRP=$P(^OR(100,ODID,0),U,11)
"RTN","ORWDPS2",201,0)
 I UDGRP=ODGRP S VAL=1
"RTN","ORWDPS2",202,0)
 I IPGRP=ODGRP S VAL=1
"RTN","ORWDPS2",203,0)
 K UDGRP,ODGRP,IPGRP,ODID
"RTN","ORWDPS2",204,0)
 Q
"RTN","ORWDPS2",205,0)
QOGRP(VAL,QOIFN) ;
"RTN","ORWDPS2",206,0)
 ;If quick order belong to Inpatient Med Order Group: return 1
"RTN","ORWDPS2",207,0)
 ;Otherwise, return 0
"RTN","ORWDPS2",208,0)
 S VAL=0
"RTN","ORWDPS2",209,0)
 I '$L(QOIFN) Q
"RTN","ORWDPS2",210,0)
 N UDGRP,IPGRP,QOGRP,QOID
"RTN","ORWDPS2",211,0)
 S QOID=+QOIFN
"RTN","ORWDPS2",212,0)
 Q:QOID<1
"RTN","ORWDPS2",213,0)
 S (UDGRP,IPGRP,QOGRP)=0
"RTN","ORWDPS2",214,0)
 S UDGRP=$O(^ORD(100.98,"B","UD RX",UDGRP))
"RTN","ORWDPS2",215,0)
 S IPGRP=$O(^ORD(100.98,"B","INPATIENT MEDICATIONS",IPGRP))
"RTN","ORWDPS2",216,0)
 S:IPGRP=0 IPGRP=$O(^ORD(100.98,"B","I RX",IPGRP))
"RTN","ORWDPS2",217,0)
 I $L($G(^ORD(101.41,QOID,0)))<1 Q
"RTN","ORWDPS2",218,0)
 S QOGRP=$P(^ORD(101.41,QOID,0),U,5)
"RTN","ORWDPS2",219,0)
 I UDGRP=QOGRP S VAL=1
"RTN","ORWDPS2",220,0)
 I IPGRP=QOGRP S VAL=1
"RTN","ORWDPS2",221,0)
 K UDGRP,QOGRP,QOID,IPGRP
"RTN","ORWDPS2",222,0)
 Q
"RTN","ORWDPS3")
0^28^B18170049
"RTN","ORWDPS3",1,0)
ORWDPS3 ; SLC/KCM/JLI - Order Dialogs, Menus;10:42 AM  3/29/2002 4/10/02 11:00AM
"RTN","ORWDPS3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,94,116,132**;Dec 17, 1997
"RTN","ORWDPS3",3,0)
MEDXFER ; -- setup ORDIALOG for a med that is transferred (from SETUP^ORWDXM4)
"RTN","ORWDPS3",4,0)
 N IVDIALOG,OI K ^TMP("PS",$J)
"RTN","ORWDPS3",5,0)
 S IVDIALOG=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWDPS3",6,0)
 S ORDIALOG=$O(^ORD(101.41,"AB","PS MEDS",0))
"RTN","ORWDPS3",7,0)
 I $P($G(^OR(100,+ORIT,0)),U,5)=IVDIALOG S ORDIALOG=IVDIALOG
"RTN","ORWDPS3",8,0)
 S ORDG=+$P(^ORD(101.41,ORDIALOG,0),U,5)
"RTN","ORWDPS3",9,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDPS3",10,0)
 D GETORDER^ORCD("^OR(100,"_+ORIT_",4.5)")
"RTN","ORWDPS3",11,0)
 S OI=$$VAL^ORCD("MEDICATION")
"RTN","ORWDPS3",12,0)
 I '$$MEDOK(OI,ORCAT) D SETERR(ORIT,"This may not be ordered as an "_$S(ORCAT="I":"in",1:"out")_"patient drug.") Q
"RTN","ORWDPS3",13,0)
 I $G(^ORD(101.43,OI,.1)),(^(.1)<$$NOW^XLFDT) D SETERR(ORIT,"This may no longer be ordered.") Q
"RTN","ORWDPS3",14,0)
 I (ORDIALOG'=IVDIALOG),(ORCAT="I") D OUT^ORCMED
"RTN","ORWDPS3",15,0)
 I (ORDIALOG'=IVDIALOG),(ORCAT="O") D IN^ORCMED
"RTN","ORWDPS3",16,0)
 S ORWPSWRG="" ; force interactive dialog for transfers
"RTN","ORWDPS3",17,0)
 Q
"RTN","ORWDPS3",18,0)
MEDOK(OI,CAT)   ; return 1 if med may be ordered for this patient category
"RTN","ORWDPS3",19,0)
 N P S P=$S(CAT="I":1,1:2)
"RTN","ORWDPS3",20,0)
 Q $P($G(^ORD(101.43,+OI,"PS")),U,P)
"RTN","ORWDPS3",21,0)
 ;
"RTN","ORWDPS3",22,0)
SETERR(ID,X)       ; sets LST to rejection with error message
"RTN","ORWDPS3",23,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDPS3",24,0)
 S LST(0)="8^0",LST(.5)=X,LST(.6)=""
"RTN","ORWDPS3",25,0)
 Q
"RTN","ORWDPS3",26,0)
 ;
"RTN","ORWDPS3",27,0)
PS ; setup environment for medications
"RTN","ORWDPS3",28,0)
 D AUTHMED Q:$G(ORQUIT)  ; checks authorized to write meds
"RTN","ORWDPS3",29,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORWDPS3",30,0)
 N PROMPT,OI
"RTN","ORWDPS3",31,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDPS3",32,0)
 S OI=""
"RTN","ORWDPS3",33,0)
 I $D(ORDIALOG(PROMPT,1)) S OI=ORDIALOG(PROMPT,1) D MEDACTV Q:$G(ORQUIT)
"RTN","ORWDPS3",34,0)
 N PSOI
"RTN","ORWDPS3",35,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2) D START^PSSJORDF(PSOI,ORCAT)
"RTN","ORWDPS3",36,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX SCHEDULE",0))
"RTN","ORWDPS3",37,0)
 I $D(ORDIALOG(PROMPT,1)) S ORSCH=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",38,0)
 I (ORCAT="I"),$L($G(ORSCH)) D
"RTN","ORWDPS3",39,0)
 . S ORSD=""
"RTN","ORWDPS3",40,0)
 . I $L($G(^DPT(+ORVP,.1))) S ORSD=$$STARTSTP^PSJORPOE(+ORVP,ORSCH,PSOI,+$G(ORWARD),"")
"RTN","ORWDPS3",41,0)
 . I $P(ORSD,U)="NEXT" S $P(ORSD,U)="NEXTA"
"RTN","ORWDPS3",42,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX DAYS SUPPLY",0))
"RTN","ORWDPS3",43,0)
 I $D(ORDIALOG(PROMPT,1)) S ORDSUP=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",44,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX DISPENSE DRUG",0))
"RTN","ORWDPS3",45,0)
 I $D(ORDIALOG(PROMPT,1)) S ORDRUG=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",46,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX REFILLS",0))
"RTN","ORWDPS3",47,0)
 I $D(ORDIALOG(PROMPT,1)) S OREFILLS=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",48,0)
 I ORCAT="O" S ORCOPAY=$$ASKSC^ORCDPS1
"RTN","ORWDPS3",49,0)
 I ORCAT="I" S PROMPT=$O(^ORD(101.41,"AB","OR GTX START DATE/TIME",0)) D
"RTN","ORWDPS3",50,0)
 . I $L($P($G(ORSD),U)),'$D(ORDIALOG(PROMPT,1)) S ORDIALOG(PROMPT,1)=$P(ORSD,U)
"RTN","ORWDPS3",51,0)
 ; create a SIG if none exists (i.e., when copying pre-POE orders)
"RTN","ORWDPS3",52,0)
 I '$L($G(ORDIALOG($$PTR^ORCD("OR GTX SIG"),1))) D
"RTN","ORWDPS3",53,0)
 . N ORDOSE,ORDRUG,ORWPSOI,PROMPT,DRUG
"RTN","ORWDPS3",54,0)
 . S PROMPT=$$PTR^ORCD("OR GTX INSTRUCTIONS")
"RTN","ORWDPS3",55,0)
 . S ORDRUG=$G(ORDIALOG($$PTR^ORCD("OR GTX DISPENSE DRUG"),1))
"RTN","ORWDPS3",56,0)
 . S ORWPSOI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDPS3",57,0)
 . I ORWPSOI S ORWPSOI=+$P($G(^ORD(101.43,+ORWPSOI,0)),U,2)
"RTN","ORWDPS3",58,0)
 . D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,$S(ORCAT="I":"U",1:"O"),ORVP)       ; dflt doses
"RTN","ORWDPS3",59,0)
 . D D1^ORCDPS2  ; set up ORDOSE & xrefs in ORDIALOG
"RTN","ORWDPS3",60,0)
 . S DRUG=$G(ORDOSE("DD",+ORDRUG))
"RTN","ORWDPS3",61,0)
 . I DRUG,ORCAT="O" D RESETID^ORCDPS
"RTN","ORWDPS3",62,0)
 . D SIG^ORCDPS2
"RTN","ORWDPS3",63,0)
 Q
"RTN","ORWDPS3",64,0)
AUTHMED ; sets ORQUIT if not authorized to write meds
"RTN","ORWDPS3",65,0)
 N NOAUTH,NAME
"RTN","ORWDPS3",66,0)
 D AUTH^ORWDPS32(.NOAUTH,ORNP)
"RTN","ORWDPS3",67,0)
 I +NOAUTH D
"RTN","ORWDPS3",68,0)
 . S ORQUIT=1
"RTN","ORWDPS3",69,0)
 . S LST(0)="8^0"
"RTN","ORWDPS3",70,0)
 . S NAME=$P($G(^VA(200,+ORNP,20)),U,2)
"RTN","ORWDPS3",71,0)
 . I '$L(NAME) S NAME=$P($G(^VA(200,+ORNP,0)),U,1)
"RTN","ORWDPS3",72,0)
 . S LST(.5)=NAME_" is not authorized to write med orders."
"RTN","ORWDPS3",73,0)
 Q
"RTN","ORWDPS3",74,0)
MEDACTV ; sets ORQUIT if the orderable item is not active for a med
"RTN","ORWDPS3",75,0)
 Q:'$G(OI)
"RTN","ORWDPS3",76,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDPS3",77,0)
 . S ORQUIT=1
"RTN","ORWDPS3",78,0)
 . S LST(0)="8^0"
"RTN","ORWDPS3",79,0)
 . S LST(.5)=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDPS3",80,0)
 I $D(ORQUIT) Q:ORQUIT
"RTN","ORWDPS3",81,0)
 ; copied from ORDITM^ORCDPS1 to make sure quick order if for right dialog
"RTN","ORWDPS3",82,0)
 N ORPS,PSOI,ORIV,ORINPT
"RTN","ORWDPS3",83,0)
 S ORINPT=$$INPT^ORCD
"RTN","ORWDPS3",84,0)
 S ORPS=$G(^ORD(101.43,+OI,"PS")),PSOI=+$P($G(^(0)),U,2)
"RTN","ORWDPS3",85,0)
 S ORIV=$S($P(ORPS,U)=2:1,1:0)
"RTN","ORWDPS3",86,0)
 I $G(ORCAT)="O",'$P(ORPS,U,2) S LST(.5)="This drug may not be used in an outpatient order."
"RTN","ORWDPS3",87,0)
 I $G(ORCAT)="I" D
"RTN","ORWDPS3",88,0)
 . I $G(ORINPT),'$P(ORPS,U) S LST(.5)="This drug may not be used in an inpatient order."
"RTN","ORWDPS3",89,0)
 . I '$G(ORINPT),'ORIV S LST(.5)="This drug may not be ordered for an outpatient."
"RTN","ORWDPS3",90,0)
 I $L($G(LST(.5))) S ORQUIT=1,LST(0)="8^0"
"RTN","ORWDPS3",91,0)
 Q
"RTN","ORWDX")
0^22^B70370156
"RTN","ORWDX",1,0)
ORWDX ; SLC/KCM/REV/JLI - Utilities for Order Dialogs ;12/14/01  15:06
"RTN","ORWDX",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,132**;Dec 17, 1997
"RTN","ORWDX",3,0)
 ;
"RTN","ORWDX",4,0)
NXT() ; -- returns next available index in return data array
"RTN","ORWDX",5,0)
 S ILST=ILST+1
"RTN","ORWDX",6,0)
 Q ILST
"RTN","ORWDX",7,0)
 ;
"RTN","ORWDX",8,0)
ORDITM(Y,FROM,DIR,XREF) ; Return a subset of orderable items
"RTN","ORWDX",9,0)
 ; .Return Array, Starting Text, Direction, Cross Reference (S.xxx)
"RTN","ORWDX",10,0)
 ; ^ORD(101.43,"S.xxx",UpperCase,DA)=Mne^MixedCase^InactvDt^.01IfMne
"RTN","ORWDX",11,0)
 ; Y(n)=IEN^.01 Name^.01 Name  -or-  IEN^Synonym <.01 Name>^.01 Name
"RTN","ORWDX",12,0)
 N I,IEN,CNT,X,DTXT,CURTM
"RTN","ORWDX",13,0)
 S I=0,CNT=44,CURTM=$$NOW^XLFDT
"RTN","ORWDX",14,0)
 F  Q:I'<CNT  S FROM=$O(^ORD(101.43,XREF,FROM),DIR) Q:FROM=""  D
"RTN","ORWDX",15,0)
 . S IEN="" F  S IEN=$O(^ORD(101.43,XREF,FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWDX",16,0)
 . . S X=^ORD(101.43,XREF,FROM,IEN)
"RTN","ORWDX",17,0)
 . . I +$P(X,U,3),$P(X,U,3)<CURTM Q
"RTN","ORWDX",18,0)
 . . S I=I+1
"RTN","ORWDX",19,0)
 . . I 'X S Y(I)=IEN_U_$P(X,U,2)_U_$P(X,U,2)
"RTN","ORWDX",20,0)
 . . E  S Y(I)=IEN_U_$P(X,U,2)_$C(9)_"<"_$P(X,U,4)_">"_U_$P(X,U,4)
"RTN","ORWDX",21,0)
 Q
"RTN","ORWDX",22,0)
ODITMBC(Y,XREF,ODLST) ; --Return orderable items info based on ItemIen
"RTN","ORWDX",23,0)
 N CNT,NM,XRF
"RTN","ORWDX",24,0)
 S CNT=0,NM=0,XRF=XREF
"RTN","ORWDX",25,0)
 F  S CNT=$O(ODLST(CNT)) Q:'CNT  D FNDINFO(.Y,ODLST(CNT))
"RTN","ORWDX",26,0)
 Q
"RTN","ORWDX",27,0)
FNDINFO(Y,ODIEN) ;
"RTN","ORWDX",28,0)
 N ODI,CRTM,FRM,XX
"RTN","ORWDX",29,0)
 S FRM="",CRTM=$$NOW^XLFDT
"RTN","ORWDX",30,0)
 F  S FRM=$O(^ORD(101.43,XRF,FRM)) Q:FRM=""  D
"RTN","ORWDX",31,0)
 . S ODI=0 F  S ODI=$O(^ORD(101.43,XRF,FRM,ODI)) Q:'ODI  D
"RTN","ORWDX",32,0)
 .. S XX=^ORD(101.43,XRF,FRM,ODI)
"RTN","ORWDX",33,0)
 .. I +$P(XX,U,3),$P(XX,U,3)<CRTM Q
"RTN","ORWDX",34,0)
 .. I ODI=ODIEN D
"RTN","ORWDX",35,0)
 ... S NM=NM+1
"RTN","ORWDX",36,0)
 ... I 'XX S Y(NM)=ODIEN_U_$P(XX,U,2)_U_$P(XX,U,2)
"RTN","ORWDX",37,0)
 ... E  S Y(NM)=ODIEN_U_$P(XX,U,2)_$C(9)_"<"_$P(XX,U,4)_">"_U_$P(XX,U,4)
"RTN","ORWDX",38,0)
 Q
"RTN","ORWDX",39,0)
DLGDEF(LST,DLG) ; Return format mapping for a dialog
"RTN","ORWDX",40,0)
 ; LST(n): PrmtID^PrmtIEN^FmtSeq^Fmt^Omit^Lead^Trail^NwLn^Wrap^Chld^IsChld
"RTN","ORWDX",41,0)
 N I,IEN,ILST,X0,X2,XW  S ILST=0
"RTN","ORWDX",42,0)
 I $O(^ORD(101.41,"AB",DLG,0))>0 S DLG=$O(^ORD(101.41,"AB",DLG,0))  ;kcm
"RTN","ORWDX",43,0)
 E  S DLG=$O(^ORD(101.41,"B",DLG,0))                                ;kcm
"RTN","ORWDX",44,0)
 Q:'DLG                                                             ;kcm
"RTN","ORWDX",45,0)
 S I=0 F  S I=$O(^ORD(101.41,DLG,10,I)) Q:I'>0  D
"RTN","ORWDX",46,0)
 . S X0=$G(^ORD(101.41,DLG,10,I,0)),X2=$G(^(2)),IEN=+$P(X0,U,2)
"RTN","ORWDX",47,0)
 . S ILST=ILST+1,LST(ILST)=U_IEN_U_$P(X2,U,1,7)
"RTN","ORWDX",48,0)
 . I $P(X0,U,11) S $P(LST(ILST),U,11)=1
"RTN","ORWDX",49,0)
 . S $P(LST(ILST),U)=$P($G(^ORD(101.41,IEN,1)),U,3)
"RTN","ORWDX",50,0)
 . I $P($G(^ORD(101.41,IEN,0)),U)="OR GTX ADDITIVE" S $P(LST(ILST),U)="ADDITIVE"
"RTN","ORWDX",51,0)
 . I $L($P(LST(ILST),U))=0 S $P(LST(ILST),U)="ID"_IEN
"RTN","ORWDX",52,0)
 . I $D(^ORD(101.41,DLG,10,"DAD",IEN)) D
"RTN","ORWDX",53,0)
 . . N SEQ,DA,CHILD S CHILD=""
"RTN","ORWDX",54,0)
 . . S SEQ=0 F  S SEQ=$O(^ORD(101.41,DLG,10,"DAD",IEN,SEQ)) Q:'SEQ  D
"RTN","ORWDX",55,0)
 . . . S DA=0 F  S DA=$O(^ORD(101.41,DLG,10,"DAD",IEN,SEQ,DA)) Q:'DA  D
"RTN","ORWDX",56,0)
 . . . . S CHILD=CHILD_+$P($G(^ORD(101.41,DLG,10,DA,0)),U,2)_"~"
"RTN","ORWDX",57,0)
 . . S $P(LST(ILST),U,10)=CHILD
"RTN","ORWDX",58,0)
 Q
"RTN","ORWDX",59,0)
DLGQUIK(LST,QO) ; return responses for a quick order  (NO LONGER USED)
"RTN","ORWDX",60,0)
 D LOADRSP(.LST,QO)
"RTN","ORWDX",61,0)
 Q
"RTN","ORWDX",62,0)
LOADRSP(LST,RSPID)      ; Load responses from 101.41 or 100
"RTN","ORWDX",63,0)
 ; RSPID:  C123456;1-3243 = cached copy,   134-3234 = cached quick
"RTN","ORWDX",64,0)
 ;         X123456;1      = change order,  134      = quick dialog
"RTN","ORWDX",65,0)
 ; LST(n): ~DlgIEN^Instance^ID
"RTN","ORWDX",66,0)
 ;         iinternal
"RTN","ORWDX",67,0)
 ;         eexternal  or  twp text
"RTN","ORWDX",68,0)
 N I,J,DLG,INST,ID,VAL,ILST,ROOT S ROOT=""
"RTN","ORWDX",69,0)
 I RSPID["-"     S ROOT="^TMP(""ORWDXMQ"",$J,"""_RSPID_""")" G XROOT
"RTN","ORWDX",70,0)
 I $E(RSPID)="X" S ROOT="^OR(100,"_+$P(RSPID,"X",2)_",4.5)"  G XROOT
"RTN","ORWDX",71,0)
 I +RSPID=RSPID  S ROOT="^ORD(101.41,"_+RSPID_",6)"          G XROOT
"RTN","ORWDX",72,0)
 Q:ROOT=""
"RTN","ORWDX",73,0)
XROOT S (ILST,I)=0 F  S I=$O(@ROOT@(I)) Q:I'>0  D
"RTN","ORWDX",74,0)
 . S DLG=$P(@ROOT@(I,0),U,2),INST=$P(^(0),U,3)
"RTN","ORWDX",75,0)
 . S ID=$P($G(^ORD(101.41,DLG,1)),U,3)
"RTN","ORWDX",76,0)
 . I '$L(ID) S ID="ID"_DLG
"RTN","ORWDX",77,0)
 . S VAL=$G(@ROOT@(I,1))
"RTN","ORWDX",78,0)
 . I $P($G(^ORD(101.41,DLG,0)),U)="OR GTX ADDITIVE" S ID="ADDITIVE"
"RTN","ORWDX",79,0)
 . I $E(RSPID)="C",(ID="START"),VAL Q  ; skip literal start time on copy
"RTN","ORWDX",80,0)
 . S LST($$NXT)="~"_DLG_U_INST_U_ID
"RTN","ORWDX",81,0)
 . I $L(VAL) D
"RTN","ORWDX",82,0)
 . . S LST($$NXT)="i"_VAL,LST($$NXT)="e"_$$EXTVAL(VAL,DLG)
"RTN","ORWDX",83,0)
 . I $D(@ROOT@(I,2))>1 D
"RTN","ORWDX",84,0)
 . . S J=0 F  S J=$O(@ROOT@(I,2,J)) Q:J'>0  D
"RTN","ORWDX",85,0)
 . . . S LST($$NXT)="t"_$G(@ROOT@(I,2,J,0))
"RTN","ORWDX",86,0)
 I $E(ROOT,1,4)="^TMP" K ^TMP("ORWDXMQ",$J)
"RTN","ORWDX",87,0)
 Q
"RTN","ORWDX",88,0)
SAVE(REC,ORVP,ORNP,ORL,DLG,ORDG,ORIT,ORIFN,ORDIALOG,ORDEA) ; Save order *PKI CHANGE* ADDED ORDEA
"RTN","ORWDX",89,0)
 ; ORVP=DFN, ORNP=Provider, ORL=Location, DLG=Order Dialog,
"RTN","ORWDX",90,0)
 ; ORDG=Display Group, ORIT=Quick Order Dialog,
"RTN","ORWDX",91,0)
 ; ORIFN=null if new order, ORDIALOG=Response List
"RTN","ORWDX",92,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORLEAD,ORTRAIL,ORPKG,ORWP94,ORCATFN
"RTN","ORWDX",93,0)
 S ORCATFN=""
"RTN","ORWDX",94,0)
 I $L($P(DLG,U,2)) S ORCATFN=$P(DLG,U,2),DLG=$P(DLG,U,1)
"RTN","ORWDX",95,0)
 I $G(ORDIALOG("ORTS")) S ORTS=ORDIALOG("ORTS") K ORDIALOG("ORTS")
"RTN","ORWDX",96,0)
 I $G(ORDIALOG("ORSLOG")) S ORLOG=ORDIALOG("ORSLOG") K ORDIALOG("ORSLOG")
"RTN","ORWDX",97,0)
 I $D(ORDIALOG("OREVENT")) M OREVENT=ORDIALOG("OREVENT") K ORDIALOG("OREVENT")
"RTN","ORWDX",98,0)
 I $L($G(OREVENT)) S ORCAT=$S(OREVENT="A":"I",OREVENT="T":"I",1:"O")
"RTN","ORWDX",99,0)
 E  S ORCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDX",100,0)
 I DLG="PS MEDS" S ORWP94=1 D
"RTN","ORWDX",101,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO SUPPLY",0)) S DLG="PSO SUPPLY"
"RTN","ORWDX",102,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO OERR",0)) S DLG="PSO OERR"
"RTN","ORWDX",103,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSJ OR PAT OE",0)) S DLG="PSJ OR PAT OE"
"RTN","ORWDX",104,0)
 I DLG="PSO OERR" S ORCAT="O" I $G(OREVENT("EFFECTIVE")) D
"RTN","ORWDX",105,0)
 . S ORDIALOG($O(^ORD(101.41,"B","OR GTX START DATE"_$S($G(ORWP94):"/TIME",1:""),0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDX",106,0)
 I DLG="PSJ OR PAT OE" S ORCAT="I"
"RTN","ORWDX",107,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDX",108,0)
 K:'ORDG ORDG K:'ORIT ORIT          ; Dgrp & Quick must be non-zero
"RTN","ORWDX",109,0)
 M ORCHECK=ORDIALOG("ORCHECK") K ORDIALOG("ORCHECK")
"RTN","ORWDX",110,0)
 S ORDIALOG=$O(^ORD(101.41,"AB",DLG,0))
"RTN","ORWDX",111,0)
 I 'ORDIALOG S ORDIALOG=$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWDX",112,0)
 I $D(ORDIALOG("ORLEAD")) S ORLEAD=ORDIALOG("ORLEAD")
"RTN","ORWDX",113,0)
 I $D(ORDIALOG("ORTRAIL")) S ORTRAIL=ORDIALOG("ORTRAIL")
"RTN","ORWDX",114,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORWDX",115,0)
 I $L(ORCATFN) S ORCAT=ORCATFN
"RTN","ORWDX",116,0)
 I $G(ORWP94) D
"RTN","ORWDX",117,0)
 . N SIGPRMT S SIGPRMT=$O(^ORD(101.41,"B","OR GTX SIG",0))
"RTN","ORWDX",118,0)
 . N INSPRMT S INSPRMT=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDX",119,0)
 . I $L($G(ORDIALOG(SIGPRMT,1))) S ORDIALOG(INSPRMT,"FORMAT")="@"
"RTN","ORWDX",120,0)
 . I ORCAT="O" S ORPKG=$O(^DIC(9.4,"C","PSO",0))
"RTN","ORWDX",121,0)
 . I ORCAT="I" S ORPKG=$O(^DIC(9.4,"C","PSJ",0))
"RTN","ORWDX",122,0)
 I $G(ORIFN)="" D                   ; new order
"RTN","ORWDX",123,0)
 . D EN^ORCSAVE
"RTN","ORWDX",124,0)
 . S REC="" I ORIFN D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",125,0)
 . I '$D(^TMP("ORECALL",$J,ORDIALOG)) M ^TMP("ORECALL",$J,ORDIALOG)=ORDIALOG
"RTN","ORWDX",126,0)
 . ; check ORDIALOG("WP" & change ref to ^TMP(....
"RTN","ORWDX",127,0)
 E  D
"RTN","ORWDX",128,0)
 . N OR0
"RTN","ORWDX",129,0)
 . S OR0=$G(^OR(100,+ORIFN,0)),ORSTS=$P($G(^(3)),U,3),ORDG=$P(OR0,U,11)
"RTN","ORWDX",130,0)
 . I $L($P(OR0,U,17)),ORSTS=10 S OREVENT=$P(OR0,U,17),OREVENT("TS")=$P(OR0,U,13)
"RTN","ORWDX",131,0)
 . D XX^ORCSAVE                                ; edit order
"RTN","ORWDX",132,0)
 . S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",133,0)
 Q
"RTN","ORWDX",134,0)
SEND(ORWLST,DFN,ORNP,ORL,ES,ORWREC) ; Sign orders
"RTN","ORWDX",135,0)
 ; DFN=Patient, ORNP=Provider, ORL=Location, ES=Encrypted ES code 
"RTN","ORWDX",136,0)
 ; ORWREC(n)=ORIFN;Action^Signature Sts^Release Sts^Nature of Order
"RTN","ORWDX",137,0)
SEND1 N ORVP,ORWI,ORWERR,ORWREL,ORWSIG,ORWNATR,ORDERID,ORBEF,ORLR,ORLAB,X
"RTN","ORWDX",138,0)
 S ORVP=DFN_";DPT(",ORL=ORL_";SC(",ORL(2)=ORL,ORWLST=0
"RTN","ORWDX",139,0)
 S ORLR=+$O(^DIC(9.4,"C","LR",0))
"RTN","ORWDX",140,0)
 ; ** validate ES code, quit with error if not valid
"RTN","ORWDX",141,0)
 S ORWI=0 F  S ORWI=$O(ORWREC(ORWI)) Q:'ORWI  D
"RTN","ORWDX",142,0)
 . S X=ORWREC(ORWI),ORWERR=""
"RTN","ORWDX",143,0)
 . S ORDERID=$P(X,U),ORWSIG=$P(X,U,2),ORWREL=$P(X,U,3),ORWNATR=$P(X,U,4)
"RTN","ORWDX",144,0)
 . S ORBEF=$P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),U,15)
"RTN","ORWDX",145,0)
 . S ORWNATR=$S($P(^(0),"^",4)=3:"",1:ORWNATR) ;If order doesn't require signature leave nature at electronic --added with patch 110
"RTN","ORWDX",146,0)
 . S ORWERR=$$CHKACT^ORWDXR(ORDERID,ORWSIG,ORWREL,ORWNATR)
"RTN","ORWDX",147,0)
 . I $L(ORWERR) S ORWERR="1^"_ORWERR
"RTN","ORWDX",148,0)
 . I '$L(ORWERR) D
"RTN","ORWDX",149,0)
 . . I $P(^OR(100,+ORDERID,0),U,14)=ORLR,'$G(ORLAB) D  ; lab batch start
"RTN","ORWDX",150,0)
 . . . I $L($T(BHS^ORMBLD)) D BHS^ORMBLD(ORVP) S ORLAB=1
"RTN","ORWDX",151,0)
 . . N OK S OK=$$LOCK1^ORX2(ORDERID) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",152,0)
 . . I OK D EN^ORCSEND(ORDERID,"",ORWSIG,ORWREL,ORWNATR,"",.ORWERR),UNLK1^ORX2(ORDERID)
"RTN","ORWDX",153,0)
 . S ORWLST(ORWI)=ORDERID,X=""
"RTN","ORWDX",154,0)
 . ; return error message if there was an error trying to send
"RTN","ORWDX",155,0)
 . I $L(ORWERR) S ORWLST(ORWI)=ORWLST(ORWI)_"^E^"_ORWERR Q
"RTN","ORWDX",156,0)
 . ; if previously unreleased, now releasing, & not delayed
"RTN","ORWDX",157,0)
 . I ORWREL,((ORBEF=10)!(ORBEF=11)),($P(^OR(100,+ORDERID,3),U,3)'=10) S X="R"
"RTN","ORWDX",158,0)
 . ; if order was signed
"RTN","ORWDX",159,0)
 . I ORWSIG'=2 S X=X_"S"
"RTN","ORWDX",160,0)
 . S $P(ORWLST(ORWI),U,2)=X
"RTN","ORWDX",161,0)
 I $G(ORLAB) D BTS^ORMBLD(ORVP)
"RTN","ORWDX",162,0)
 Q
"RTN","ORWDX",163,0)
EXTVAL(IVAL,DLG) ; return an external value given a dialog pointer
"RTN","ORWDX",164,0)
 N ORDIALOG
"RTN","ORWDX",165,0)
 S ORDIALOG(DLG,0)=$P($G(^ORD(101.41,DLG,1)),U,1,2)
"RTN","ORWDX",166,0)
 S ORDIALOG(DLG,1)=IVAL
"RTN","ORWDX",167,0)
 I $E(ORDIALOG(DLG,0))="R",(+IVAL'=IVAL) Q IVAL  ; free text date/time
"RTN","ORWDX",168,0)
 Q $$EXT^ORCD(DLG,1)                             ; all others
"RTN","ORWDX",169,0)
 ;
"RTN","ORWDX",170,0)
DLGID(VAL,ORIFN)        ; return dialog IEN for an order
"RTN","ORWDX",171,0)
 S VAL=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",172,0)
 S VAL=$S($P(VAL,";",2)="ORD(101.41,":+VAL,1:0)
"RTN","ORWDX",173,0)
 Q
"RTN","ORWDX",174,0)
FORMID(VAL,ORIFN)  ; return the base dialog FormID for an order
"RTN","ORWDX",175,0)
 N DLG
"RTN","ORWDX",176,0)
 S VAL=0,DLG=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",177,0)
 Q:$P(DLG,";",2)'="ORD(101.41,"
"RTN","ORWDX",178,0)
 D FORMID^ORWDXM(.VAL,+DLG)
"RTN","ORWDX",179,0)
 Q
"RTN","ORWDX",180,0)
AGAIN(VAL,DLG)  ; return true to keep dialog for another order
"RTN","ORWDX",181,0)
 S VAL=''$P($G(^ORD(101.41,DLG,0)),U,9)
"RTN","ORWDX",182,0)
 Q
"RTN","ORWDX",183,0)
DGRP(VAL,DLG)   ; return the display group pointer for a dialog
"RTN","ORWDX",184,0)
 S DLG=$S($E(DLG)="`":+$P(DLG,"`",2),1:$O(^ORD(101.41,"AB",DLG,0))) ;kcm
"RTN","ORWDX",185,0)
 S VAL=$P($G(^ORD(101.41,DLG,0)),U,5)
"RTN","ORWDX",186,0)
 Q
"RTN","ORWDX",187,0)
DGNM(VAL,NM)    ; return the display group pointer for a name
"RTN","ORWDX",188,0)
 S VAL=$O(^ORD(100.98,"B",NM,0))
"RTN","ORWDX",189,0)
 Q
"RTN","ORWDX",190,0)
WRLST(LST,LOC) ; Return list of dialogs for writing orders
"RTN","ORWDX",191,0)
 ; .Y(n): DlgName^ListBox Text
"RTN","ORWDX",192,0)
 G WRLST1^ORWDX1  ; moved to new routine
"RTN","ORWDX",193,0)
 ;
"RTN","ORWDX",194,0)
MSG(LST,IEN)     ; Return message text for an orderable item
"RTN","ORWDX",195,0)
 N I
"RTN","ORWDX",196,0)
 S I=0 F  S I=$O(^ORD(101.43,IEN,8,I)) Q:I'>0  S LST(I)=^(I,0)
"RTN","ORWDX",197,0)
 Q
"RTN","ORWDX",198,0)
DISMSG(VAL,IEN) ; return disabled message for an ordering dialog
"RTN","ORWDX",199,0)
 S VAL=$P($G(^ORD(101.41,+IEN,0)),U,3)
"RTN","ORWDX",200,0)
 Q
"RTN","ORWDX",201,0)
LOCK(OK,DFN)    ; attempt to lock the patient for ordering
"RTN","ORWDX",202,0)
 S OK=$$LOCK^ORX2(DFN)
"RTN","ORWDX",203,0)
 Q
"RTN","ORWDX",204,0)
UNLOCK(OK,DFN)     ; unlock the patient for ordering
"RTN","ORWDX",205,0)
 D UNLOCK^ORX2(DFN) S OK=1
"RTN","ORWDX",206,0)
 Q
"RTN","ORWDX",207,0)
LOCKORD(OK,ORIFN)       ; Attempt to lock the order
"RTN","ORWDX",208,0)
 S OK=$$LOCK1^ORX2(ORIFN)
"RTN","ORWDX",209,0)
 Q
"RTN","ORWDX",210,0)
UNLKORD(OK,ORIFN)       ; Unlock the order
"RTN","ORWDX",211,0)
 D UNLK1^ORX2(ORIFN) S OK=1
"RTN","ORWDX",212,0)
 Q
"RTN","ORWDXA")
0^1^B48933880
"RTN","ORWDXA",1,0)
ORWDXA ; SLC/KCM - Utilites for Order Actions;06:22 PM  2 Sep 1998;2/23/98  16:18 [3/12/02 3:29pm]
"RTN","ORWDXA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132**;Dec 17, 1997
"RTN","ORWDXA",3,0)
 ;
"RTN","ORWDXA",4,0)
VALID(VAL,ORID,ACTION,ORNP,ORWNAT) ; Return error message if not valid action for order
"RTN","ORWDXA",5,0)
 N ORACT,ORVP,ORVER S VAL=""
"RTN","ORWDXA",6,0)
 I +ORID=0 S VAL="This order has been deleted." Q
"RTN","ORWDXA",7,0)
 I '$D(^OR(100,+ORID,0)) S VAL="This order has been deleted!" Q
"RTN","ORWDXA",8,0)
 I ACTION="XFR",'$L($T(XFR^ORCACT01)) S ACTION="RW" ; for pre-POE
"RTN","ORWDXA",9,0)
 S ORIFN=ORID,ORVP=$P(^OR(100,+ORID,0),U,2)  ; ORCACT0 expects defined
"RTN","ORWDXA",10,0)
 I (ACTION="RN") D  Q:$L(VAL)  ; ** There's got to be a better way!
"RTN","ORWDXA",11,0)
 . N DLG S DLG=$P(^OR(100,+ORID,0),U,5) Q:DLG'[";ORD(101.41,"
"RTN","ORWDXA",12,0)
 . I $G(^ORD(101.41,+DLG,3))'["PROVIDER^ORCDPSIV" Q
"RTN","ORWDXA",13,0)
 . D AUTH^ORWDPS32(.VAL,ORNP)
"RTN","ORWDXA",14,0)
 . I VAL S VAL=$P(VAL,U,2)
"RTN","ORWDXA",15,0)
 . E  S VAL=""
"RTN","ORWDXA",16,0)
 S ORVER=$S(ACTION="CR":"R",$D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:"^")
"RTN","ORWDXA",17,0)
 I ACTION="CR" S ACTION="VR"
"RTN","ORWDXA",18,0)
 I (ACTION="ES")!(ACTION="OC")!(ACTION="RS") S ORACT=ACTION ; why not defined???
"RTN","ORWDXA",19,0)
 I (ACTION="VR"),'($D(^XUSEC("ORELSE",DUZ))!$D(^XUSEC("OREMAS",DUZ))) D  Q
"RTN","ORWDXA",20,0)
 . S VAL="You are not authorized to verify these orders."
"RTN","ORWDXA",21,0)
 I (ACTION="RW")!(ACTION="XX")!(ACTION="XFR") D  Q:$L(VAL)
"RTN","ORWDXA",22,0)
 . N DLG,FRM
"RTN","ORWDXA",23,0)
 . S DLG=$P(^OR(100,+ORID,0),U,5),FRM=0
"RTN","ORWDXA",24,0)
 . I $P(DLG,";",2)'="ORD(101.41," S DLG=0
"RTN","ORWDXA",25,0)
 . I DLG D FORMID^ORWDXM(.FRM,+DLG)
"RTN","ORWDXA",26,0)
 . I '(DLG&FRM) D
"RTN","ORWDXA",27,0)
 . . S VAL="Copy & Change are not implemented for this order that predates CPRS."
"RTN","ORWDXA",28,0)
 N OREBUILD  ; sometimes left defined by $$VALID
"RTN","ORWDXA",29,0)
 I $$VALID^ORCACT0(ORID,ACTION,.VAL,$G(ORWNAT)) S VAL="" ; VAL=error
"RTN","ORWDXA",30,0)
 Q
"RTN","ORWDXA",31,0)
HOLD(REC,ORID,ORNP)  ; Place an order on hold
"RTN","ORWDXA",32,0)
 N ACTDA
"RTN","ORWDXA",33,0)
 S ACTDA=$$ACTION^ORCSAVE("HD",+ORID,ORNP)
"RTN","ORWDXA",34,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",35,0)
 Q
"RTN","ORWDXA",36,0)
UNHOLD(REC,ORID,ORNP)  ; Release an order from hold
"RTN","ORWDXA",37,0)
 N ACTDA
"RTN","ORWDXA",38,0)
 S ACTDA=$$ACTION^ORCSAVE("RL",+ORID,ORNP)
"RTN","ORWDXA",39,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",40,0)
 Q
"RTN","ORWDXA",41,0)
DC(REC,ORID,ORNP,ORL,REASON)   ; Discontinue/Cancel/Delete an order
"RTN","ORWDXA",42,0)
 N NATURE,CREATE,PRINT,STATUS,ACTDA
"RTN","ORWDXA",43,0)
 S ORL(2)=ORL_";SC(",ORL=ORL(2),NATURE=""
"RTN","ORWDXA",44,0)
 I REASON S NATURE=$P(^ORD(100.02,$P(^ORD(100.03,REASON,0),U,7),0),U,2)
"RTN","ORWDXA",45,0)
 S:NATURE="" NATURE="W"  ; S:ORNP=DUZ NATURE="E" 
"RTN","ORWDXA",46,0)
 S CREATE=$$CREATE^ORX1(NATURE),PRINT=$$PRINT^ORCACT2(NATURE)
"RTN","ORWDXA",47,0)
 S STATUS=$P(^OR(100,+ORID,8,+$P(ORID,";",2),0),U,15)
"RTN","ORWDXA",48,0)
 I (STATUS=10)!(STATUS=11) D  Q   ; delete/cancel unreleased order
"RTN","ORWDXA",49,0)
 . N X8,RPLORD
"RTN","ORWDXA",50,0)
 . S X8=^OR(100,+ORID,8,+$P(ORID,";",2),0)  ; action entry
"RTN","ORWDXA",51,0)
 . S RPLORD=$P($G(^OR(100,+ORID,3)),U,5)    ; replaced order
"RTN","ORWDXA",52,0)
 . D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",53,0)
 . I STATUS=10,($P(X8,U,4)'=2) D  ; CANCEL signed, delayed, unreleased
"RTN","ORWDXA",54,0)
 . . ; taken from CLRDLY^ORCACT2
"RTN","ORWDXA",55,0)
 . . N EVT,ORVP
"RTN","ORWDXA",56,0)
 . . S EVT=$P(^OR(100,+ORID,0),U,17),ORVP=$P(^(0),U,2)
"RTN","ORWDXA",57,0)
 . . S $P(^OR(100,+ORID,0),U,17)="",$P(^(3),U,7)=0,$P(^(8,1,0),U,15)=""
"RTN","ORWDXA",58,0)
 . . K:$L(EVT) ^OR(100,"AEVNT",ORVP,EVT,+ORID)
"RTN","ORWDXA",59,0)
 . . S ^OR(100,+ORID,6)=$O(^ORD(100.02,"C","M",0))_U_DUZ_U_+$E($$NOW^XLFDT,1,12)_"^^Delayed Order Cancelled"
"RTN","ORWDXA",60,0)
 . . D STATUS^ORCSAVE2(+ORID,13)
"RTN","ORWDXA",61,0)
 . E  D                           ; DELETE unsigned, unreleased
"RTN","ORWDXA",62,0)
 . . ; delete fwd ptr to order about to be deleted
"RTN","ORWDXA",63,0)
 . . I RPLORD,$P(X8,U,2)="NW" S $P(^OR(100,RPLORD,3),U,6)=""
"RTN","ORWDXA",64,0)
 . . D DELETE^ORCSAVE2(ORID)
"RTN","ORWDXA",65,0)
 . I RPLORD S ORID=RPLORD  ; for Renews & Changes, show replaced order
"RTN","ORWDXA",66,0)
 . I '$D(^OR(100,+ORID)) D
"RTN","ORWDXA",67,0)
 . . S $P(REC(1),U)="~0",REC(2)="tDELETED: "_$E(REC(2),2,245)
"RTN","ORWDXA",68,0)
 . E  D
"RTN","ORWDXA",69,0)
 . . K REC
"RTN","ORWDXA",70,0)
 . . D GETBYIFN^ORWORR(.REC,+ORID_";"_$P($G(^OR(100,+ORID,3)),U,7))
"RTN","ORWDXA",71,0)
 . S $P(REC(1),U,14)=2 ; DCType = deletion
"RTN","ORWDXA",72,0)
 I CREATE D
"RTN","ORWDXA",73,0)
 . S ACTDA=$$ACTION^ORCSAVE("DC",+ORID,ORNP)
"RTN","ORWDXA",74,0)
 E  D 
"RTN","ORWDXA",75,0)
 . D EN^ORCSEND(+ORID,"DC",3,1,NATURE,REASON)
"RTN","ORWDXA",76,0)
 . S ACTDA=$P(ORID,";",2)
"RTN","ORWDXA",77,0)
 . I PRINT ; do something to print this
"RTN","ORWDXA",78,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",79,0)
 S $P(REC(1),U,14)=$S(CREATE:1,1:3)  ;DCType - 1=NewOrder, 3=NewStatus
"RTN","ORWDXA",80,0)
 Q
"RTN","ORWDXA",81,0)
DCREASON(LST)   ; Return a list of DC reasons
"RTN","ORWDXA",82,0)
 N IEN,ILST,X
"RTN","ORWDXA",83,0)
 S ILST=1,LST(ILST)="~DCReason"
"RTN","ORWDXA",84,0)
 S IEN=0 F  S IEN=$O(^ORD(100.03,IEN)) Q:'IEN  S X=^(IEN,0) D
"RTN","ORWDXA",85,0)
 . I $P(X,U,4) Q                              ; inactive
"RTN","ORWDXA",86,0)
 . I $P(X,U,5)'=+$O(^DIC(9.4,"C","OR",0)) Q   ; not OR pkg
"RTN","ORWDXA",87,0)
 . I $P(X,U,7)=+$O(^ORD(100.02,"C","A",0)) Q  ; nature=auto
"RTN","ORWDXA",88,0)
 . S ILST=ILST+1,LST(ILST)="i"_IEN_U_$P(X,U)
"RTN","ORWDXA",89,0)
 S IEN=$O(^ORD(100.03,"C","ORREQ",0))
"RTN","ORWDXA",90,0)
 I IEN S ILST=ILST+1,LST(ILST)="d"_IEN_U_$P(^ORD(100.03,IEN,0),U)
"RTN","ORWDXA",91,0)
 Q
"RTN","ORWDXA",92,0)
DCREQIEN(VAL)   ; Return the IEN for Requesting Physician Cancelled reason
"RTN","ORWDXA",93,0)
 S VAL=$O(^ORD(100.03,"S","REQ",0))
"RTN","ORWDXA",94,0)
 Q
"RTN","ORWDXA",95,0)
COMPLETE(REC,ORID,ESCODE)      ; Complete an order (generic orders)
"RTN","ORWDXA",96,0)
 ;N X S X=+$E($$NOW^XLFDT,1,12)
"RTN","ORWDXA",97,0)
 ;D DATES^ORCSAVE2(+ORID,,X)
"RTN","ORWDXA",98,0)
 ;D STATUS^ORCSAVE2(+ORID,2)
"RTN","ORWDXA",99,0)
 ; validate ESCode
"RTN","ORWDXA",100,0)
 D COMP^ORCSAVE2(ORID)
"RTN","ORWDXA",101,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",102,0)
 Q
"RTN","ORWDXA",103,0)
VERIFY(REC,ORID,ESCODE,ORVER) ; Verify an order
"RTN","ORWDXA",104,0)
 ; validate ESCode
"RTN","ORWDXA",105,0)
 S ORVER=$G(ORVER,$S($D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:U))
"RTN","ORWDXA",106,0)
 I ORVER'=U D EN^ORCSEND(ORID,"VR","","")
"RTN","ORWDXA",107,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",108,0)
 ; !! to match 56, need to VERIFY any replaced orders
"RTN","ORWDXA",109,0)
 Q
"RTN","ORWDXA",110,0)
ALERT(DUMMY,ORID,ORDUZ) ;send alert to user (ORDUZ) when order (ORID) resulted
"RTN","ORWDXA",111,0)
 ;if no user passed from GUI, use ordering provider:
"RTN","ORWDXA",112,0)
 I $G(ORDUZ)<1 S ORDUZ=+$$ORDERER^ORQOR2(+ORID)
"RTN","ORWDXA",113,0)
 I $L($G(ORDUZ))<1 S ORDUZ=DUZ
"RTN","ORWDXA",114,0)
 S DUMMY=1,$P(^OR(100,+ORID,3),U,10)=ORDUZ
"RTN","ORWDXA",115,0)
 Q
"RTN","ORWDXA",116,0)
FLAG(REC,ORIFN,OREASON,ORNP)   ; Flag an order
"RTN","ORWDXA",117,0)
 N ORB,ORVP,DA
"RTN","ORWDXA",118,0)
 D BULLETIN
"RTN","ORWDXA",119,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",120,0)
 K ^OR(100,+ORIFN,8,DA,3) S ^(3)="1^"_$G(XMZ)_U_+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON
"RTN","ORWDXA",121,0)
 D KILL^XM
"RTN","ORWDXA",122,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ; Last Activity
"RTN","ORWDXA",123,0)
 I +$G(ORNP)<1 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",124,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^1" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",125,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",126,0)
 Q
"RTN","ORWDXA",127,0)
BULLETIN        ; Send flagged order bulletin (USED BY FLAG)
"RTN","ORWDXA",128,0)
 N OR0,OR3,ORDTXT,XMB,XMY,XMDUZ,ORENT,BULL,ORSRV,ORUSR
"RTN","ORWDXA",129,0)
 S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3))
"RTN","ORWDXA",130,0)
 ;CLA - 3/21/96:
"RTN","ORWDXA",131,0)
 S ORUSR=+$P(OR0,U,4)
"RTN","ORWDXA",132,0)
 S ORSRV=$G(^VA(200,ORUSR,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORWDXA",133,0)
 S ORENT="USR.`"_ORUSR_"^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","ORWDXA",134,0)
 S BULL=$$GET^XPAR(ORENT,"ORB FLAGGED ORDERS BULLETIN",1,"Q")
"RTN","ORWDXA",135,0)
 Q:$G(BULL)'="Y"   ;quit if parameter value is not 'Y'es
"RTN","ORWDXA",136,0)
 ;
"RTN","ORWDXA",137,0)
 S XMB="OR FLAGGED ORDER",XMDUZ=DUZ,XMY(+$P(OR0,U,4))=""
"RTN","ORWDXA",138,0)
 S XMB(1)=$P(^DPT(+$P(OR0,U,2),0),U),XMB(2)=$P(^(0),U,9),XMB(3)="" ;sb AGE
"RTN","ORWDXA",139,0)
 S XMB(4)=$$FMTE^XLFDT($P(OR0,U,7))
"RTN","ORWDXA",140,0)
 D TEXT^ORQ12(.ORDTXT,+ORIFN,80)
"RTN","ORWDXA",141,0)
 S XMB(5)=$G(ORDTXT(1)),XMB(6)=$G(ORDTXT(2)),XMB(7)=$G(ORDTXT(3))
"RTN","ORWDXA",142,0)
 S XMB(8)=$$FMTE^XLFDT($P(OR0,U,8)),XMB(9)=$$FMTE^XLFDT($P(OR0,U,9)),XMB(10)=OREASON
"RTN","ORWDXA",143,0)
 S XMB(11)=$P($G(^ORD(100.01,+$P(OR3,U,3),0)),U)
"RTN","ORWDXA",144,0)
 D EN^XMB
"RTN","ORWDXA",145,0)
 Q
"RTN","ORWDXA",146,0)
UNFLAG(REC,ORIFN,OREASON)       ; Unflag an order
"RTN","ORWDXA",147,0)
 N DA,ORB,ORNP,ORVP
"RTN","ORWDXA",148,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",149,0)
 S $P(^OR(100,+ORIFN,8,DA,3),U)=0,$P(^(3),U,6,8)=+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON
"RTN","ORWDXA",150,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT  ; Last Activity
"RTN","ORWDXA",151,0)
 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",152,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^0" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",153,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",154,0)
 Q
"RTN","ORWDXA",155,0)
FLAGTXT(LST,ORID)      ; Return flag reason
"RTN","ORWDXA",156,0)
 N FLAG
"RTN","ORWDXA",157,0)
 S FLAG=$G(^OR(100,+ORID,8,$P(ORID,";",2),3))
"RTN","ORWDXA",158,0)
 S LST(1)="FLAGGED: "_$$FMTE^XLFDT($P(FLAG,U,3))_" by "_$P($G(^VA(200,+$P(FLAG,U,4),0)),U)
"RTN","ORWDXA",159,0)
 S LST(2)=$P(FLAG,U,5) ; reason
"RTN","ORWDXA",160,0)
 Q
"RTN","ORWDXA",161,0)
WCGET(LST,ORID) ; Return ward comments
"RTN","ORWDXA",162,0)
 N I,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",163,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,8,ACT,5,I)) Q:'I  S LST(I)=$G(^(I,0))
"RTN","ORWDXA",164,0)
 Q
"RTN","ORWDXA",165,0)
WCPUT(ERR,ORID,WCLST) ; Set ward comments for order
"RTN","ORWDXA",166,0)
 N DIERR,ERRLST,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",167,0)
 D WP^DIE(100.008,ACT_","_ORIFN_",",50,"","WCLST","ERRLST")
"RTN","ORWDXA",168,0)
 S ERR="" I $D(DIERR) S ERR="An error occurred while saving comments."
"RTN","ORWDXA",169,0)
 Q
"RTN","ORWDXM")
0^26^B33569381
"RTN","ORWDXM",1,0)
ORWDXM  ; SLC/KCM/JLI - Order Dialogs, Menus;10:42 AM  3/29/02 10:47AM  4/3/2002 11AM  4/5/2002 4:30PM
"RTN","ORWDXM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,132**;Dec 17, 1997
"RTN","ORWDXM",3,0)
 ;
"RTN","ORWDXM",4,0)
MENU(LST,DLG)   ; Return menu contents for an order dialog
"RTN","ORWDXM",5,0)
 ; LST(0)=name^# cols^path switch^^^ Key Variables (pieces 6-20)
"RTN","ORWDXM",6,0)
 ; LST(n)=col^row^type^ien^formid^autoaccept^display text^mnemonic
"RTN","ORWDXM",7,0)
 ;        ^displayonly
"RTN","ORWDXM",8,0)
 N ILST,I,COL,ROW,IEN,TYP,FID,AUT,MNE,DON,X,X0,X5,NUMCOL
"RTN","ORWDXM",9,0)
 S X0=$G(^ORD(101.41,DLG,0)),X5=$G(^(5)),ILST=0,NUMCOL=1
"RTN","ORWDXM",10,0)
 ;S COL=$P(X5,U) S:'COL COL=80 S COL=80\COL
"RTN","ORWDXM",11,0)
 S LST(0)=$P(X0,U,2)_U_NUMCOL_U_$P(X5,U,3)
"RTN","ORWDXM",12,0)
 S $P(LST(0),U,6)=$$KEYVAR^ORWDXM3(DLG) ; key vars start at 6th piece
"RTN","ORWDXM",13,0)
 S I=0 F  S I=$O(^ORD(101.41,DLG,10,I)) Q:'I  D
"RTN","ORWDXM",14,0)
 . S X=$G(^ORD(101.41,DLG,10,I,0))
"RTN","ORWDXM",15,0)
 . S ROW=$P(X,U),COL=$P(ROW,".",2),ROW=$P(ROW,".",1)
"RTN","ORWDXM",16,0)
 . I COL>NUMCOL S NUMCOL=COL
"RTN","ORWDXM",17,0)
 . S IEN=+$P(X,U,2),MNE=$P(X,U,3),DON=$P(X,U,5),X=$P(X,U,4)
"RTN","ORWDXM",18,0)
 . S X0=$G(^ORD(101.41,IEN,0)),X5=$G(^(5))
"RTN","ORWDXM",19,0)
 . S TYP=$P(X0,U,4),FID=+$P(X5,U,5),AUT=$P(X5,U,8)
"RTN","ORWDXM",20,0)
 . I '$L(X) S X=$P($G(^ORD(101.41,IEN,0)),U,2)
"RTN","ORWDXM",21,0)
 . S ILST=ILST+1,LST(ILST)=COL_U_ROW_U_TYP_U_IEN_U_FID_U_AUT_U_X_U_MNE_U_DON
"RTN","ORWDXM",22,0)
 S $P(LST(0),U,2)=NUMCOL
"RTN","ORWDXM",23,0)
 Q
"RTN","ORWDXM",24,0)
PROMPTS(LST,DLG)        ; Return prompting info for generic dialog
"RTN","ORWDXM",25,0)
 ; LST(n)=ID^REQ^HID^PROMPT^TYPE^DOMAIN^DEFAULT^IDFLT^HELP^XREF^SCR
"RTN","ORWDXM",26,0)
 N I,X,ILST,SEQ,REQ,HID,ITM,IDX,PRMT,HLP,DFLT,IDFLT,TYP,DOM,ID,WP,SCR
"RTN","ORWDXM",27,0)
 S ILST=0
"RTN","ORWDXM",28,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,DLG,10,"B",SEQ)) Q:'SEQ  D
"RTN","ORWDXM",29,0)
 . S I=0 F  S I=$O(^ORD(101.41,DLG,10,"B",SEQ,I)) Q:'I  D
"RTN","ORWDXM",30,0)
 . . S X=$G(^ORD(101.41,DLG,10,I,0))
"RTN","ORWDXM",31,0)
 . . S ITM=$P(X,U,2),REQ=+$P(X,U,6),IDX=$P(X,U,10),PRMT=$P(X,U,14)
"RTN","ORWDXM",32,0)
 . . I '$L(PRMT) S PRMT=$P(X,U,4)
"RTN","ORWDXM",33,0)
 . . S HLP=$P($G(^ORD(101.41,DLG,10,I,1)),U,1)
"RTN","ORWDXM",34,0)
 . . S HID=$E($G(^ORD(101.41,DLG,10,I,3)),1,3)="I 0"
"RTN","ORWDXM",35,0)
 . . S SCR="" I $L($G(^ORD(101.41,DLG,10,I,4))) S SCR=DLG_":"_I
"RTN","ORWDXM",36,0)
 . . S X=$G(^ORD(101.41,ITM,0)) I '$L(PRMT) S PRMT=$P(X,U,2)
"RTN","ORWDXM",37,0)
 . . S X=$G(^ORD(101.41,ITM,1)),TYP=$P(X,U),DOM=$P(X,U,2),ID=$P(X,U,3)
"RTN","ORWDXM",38,0)
 . . S X=$G(^ORD(101.41,DLG,10,I,7)) D XDFLT(X,TYP,DOM,.IDFLT,.DFLT)
"RTN","ORWDXM",39,0)
 . . I '$L(ID) S ID="ID"_ITM
"RTN","ORWDXM",40,0)
 . . S ILST=ILST+1
"RTN","ORWDXM",41,0)
 . . S LST(ILST)="~"_ID_U_REQ_U_HID_U_PRMT_U_TYP_U_DOM_U_DFLT_U_IDFLT_U_HLP_U_IDX_U_SCR
"RTN","ORWDXM",42,0)
 . . ; loop here to append any default word processing
"RTN","ORWDXM",43,0)
 . . S WP=0 F  S WP=$O(^ORD(101.41,DLG,10,I,8,WP)) Q:'WP  D
"RTN","ORWDXM",44,0)
 . . . S ILST=ILST+1,LST(ILST)="t"_$G(^ORD(101.41,DLG,10,I,8,WP,0))
"RTN","ORWDXM",45,0)
 Q
"RTN","ORWDXM",46,0)
XDFLT(CODE,TYPE,DOMAIN,IVAL,EVAL) ; return internal, external default values
"RTN","ORWDXM",47,0)
 S (IVAL,EVAL)="" Q:'$L(CODE)
"RTN","ORWDXM",48,0)
 ; set err trap here?
"RTN","ORWDXM",49,0)
 N ID,REQ,HID,PRMT,TYP,DOM,DFLT,IDFLT,HLP,Y  ; to protect PROMPTS
"RTN","ORWDXM",50,0)
 X CODE
"RTN","ORWDXM",51,0)
 S IVAL=$G(Y),EVAL=IVAL
"RTN","ORWDXM",52,0)
 I TYPE="D",IVAL S EVAL=$$FMTE^XLFDT(IVAL)
"RTN","ORWDXM",53,0)
 I TYPE="P",IVAL,DOMAIN S EVAL=$$GET1^DIQ(+DOMAIN,IVAL_",",.01)
"RTN","ORWDXM",54,0)
 I TYPE="S",$L(IVAL) S EVAL=$P($P(DOMAIN,IVAL_":",2),";",1)
"RTN","ORWDXM",55,0)
 I TYPE="Y",$L(IVAL) S EVAL=$S(IVAL=1:"YES",1:"NO")
"RTN","ORWDXM",56,0)
 Q
"RTN","ORWDXM",57,0)
DLGNAME(VAL,DLG)        ; Return name(s) of dialog & base dialog given IEN
"RTN","ORWDXM",58,0)
 ; VAL=InternalName^DisplayName^BaseDialogIEN^BaseDialogName
"RTN","ORWDXM",59,0)
 N INT,EXT,BIEN,BNAM
"RTN","ORWDXM",60,0)
 S INT=$P($G(^ORD(101.41,DLG,0)),U),EXT=$P($G(^(0)),U,2)
"RTN","ORWDXM",61,0)
 S BNAM=INT,BIEN=DLG
"RTN","ORWDXM",62,0)
 I $P(^ORD(101.41,DLG,0),U,4)="Q" D
"RTN","ORWDXM",63,0)
 . N DGRP S DGRP=$P($G(^ORD(101.41,DLG,0)),U,5) Q:'DGRP
"RTN","ORWDXM",64,0)
 . S BIEN=$$DEFDLG^ORWDXQ(DGRP),BNAM=$P(^ORD(101.41,BIEN,0),U)
"RTN","ORWDXM",65,0)
 S VAL=INT_U_EXT_U_BIEN_U_BNAM
"RTN","ORWDXM",66,0)
 Q
"RTN","ORWDXM",67,0)
FORMID(VAL,DLG) ; Return the FormID for a dialog
"RTN","ORWDXM",68,0)
 S VAL=+$P($G(^ORD(101.41,DLG,5)),U,5) Q:VAL
"RTN","ORWDXM",69,0)
 I $P($G(^ORD(101.41,DLG,0)),U,4)="Q" D
"RTN","ORWDXM",70,0)
 . N DGRP S DGRP=$P($G(^ORD(101.41,DLG,0)),U,5) Q:'DGRP
"RTN","ORWDXM",71,0)
 . S DLG=$$DEFDLG^ORWDXQ(DGRP) Q:'DLG
"RTN","ORWDXM",72,0)
 . S VAL=+$P($G(^ORD(101.41,DLG,5)),U,5)
"RTN","ORWDXM",73,0)
 I 'VAL,$P($G(^ORD(101.41,DLG,0)),U,7)=$O(^DIC(9.4,"C","OR",0)) D
"RTN","ORWDXM",74,0)
 . S VAL=152  ; use generic "on the fly" form
"RTN","ORWDXM",75,0)
 Q
"RTN","ORWDXM",76,0)
MSTYLE(VAL)     ; Return the menu style for the system
"RTN","ORWDXM",77,0)
 S VAL=+$$GET^XPAR("SYS","ORWDXM ORDER MENU STYLE",1,"I")
"RTN","ORWDXM",78,0)
 Q
"RTN","ORWDXM",79,0)
LOADSET(LST,DLG)        ; Return the contents of an order set
"RTN","ORWDXM",80,0)
 ; LST(0): SetDisplayText^Key Variables
"RTN","ORWDXM",81,0)
 ; LST(n): DlgIEN^DlgType^DisplayText^OrderableItemIENs(OIIEN;OIIEN;..)
"RTN","ORWDXM",82,0)
 N SEQ,DA,ITM,TYP,ILST,X,OIENS,PKGINFO
"RTN","ORWDXM",83,0)
 S LST(0)=$P(^ORD(101.41,DLG,0),U,2)_U_$$KEYVAR^ORWDXM3(DLG),ILST=0
"RTN","ORWDXM",84,0)
 S SEQ="" F  S SEQ=$O(^ORD(101.41,DLG,10,"B",SEQ)) Q:SEQ=""  D
"RTN","ORWDXM",85,0)
 . S DA=0 F  S DA=$O(^ORD(101.41,DLG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORWDXM",86,0)
 . . S X=$G(^ORD(101.41,DLG,10,DA,0)),ITM=$P(X,U,2),X=$P(X,U,4)
"RTN","ORWDXM",87,0)
 . . Q:'ITM  Q:'$D(^ORD(101.41,+ITM,0))
"RTN","ORWDXM",88,0)
 . . S (OIENS,PKGINFO)=""
"RTN","ORWDXM",89,0)
 . . S TYP=$P(^ORD(101.41,ITM,0),U,4)
"RTN","ORWDXM",90,0)
 . . S OIENS=$$OIIFN(+ITM)
"RTN","ORWDXM",91,0)
 . . S PKGINFO=$$PKGINF(+ITM)
"RTN","ORWDXM",92,0)
 . . I '$L(X) S X=$P($G(^ORD(101.41,ITM,5)),U,4)
"RTN","ORWDXM",93,0)
 . . I '$L(X) S X=$P($G(^ORD(101.41,ITM,0)),U,2)
"RTN","ORWDXM",94,0)
 . . I '$L(X) S X="Display Name Missing"
"RTN","ORWDXM",95,0)
 . . S ILST=ILST+1,LST(ILST)=ITM_U_TYP_U_X_U_OIENS_U_PKGINFO
"RTN","ORWDXM",96,0)
 Q
"RTN","ORWDXM",97,0)
PKGINF(DLG) ; Get Package based on the DLG ID
"RTN","ORWDXM",98,0)
 N PKGID,PKGNM
"RTN","ORWDXM",99,0)
 S PKGID="",PKGNM=""
"RTN","ORWDXM",100,0)
 S:$D(^ORD(101.41,DLG,0)) PKGID=$P(^(0),U,7)
"RTN","ORWDXM",101,0)
 I PKGID D
"RTN","ORWDXM",102,0)
 . S:$D(^DIC(9.4,PKGID,0)) PKGNM=$P(^(0),U,2)
"RTN","ORWDXM",103,0)
 Q PKGNM
"RTN","ORWDXM",104,0)
OIIFN(DLG) ; Get Orderable Item IENs based on the DLG
"RTN","ORWDXM",105,0)
 N OIDX,OINODE,OINUM,OIIENS,OI0
"RTN","ORWDXM",106,0)
 S (OIIENS,OINODE,OIIENS)=""
"RTN","ORWDXM",107,0)
 S OINUM=0
"RTN","ORWDXM",108,0)
 S OIDX=$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM",109,0)
 S:$D(^ORD(101.41,DLG,6,"D",OIDX)) OINODE=$O(^(OIDX,0))
"RTN","ORWDXM",110,0)
 S:OINODE OINUM=$P(^ORD(101.41,DLG,6,OINODE,0),U,3)
"RTN","ORWDXM",111,0)
 I OINUM  F OI0=1:1:OINUM  S OIIENS=OIIENS_^(OI0)_";"
"RTN","ORWDXM",112,0)
 Q OIIENS
"RTN","ORWDXM",113,0)
AUTOACK(REC,ORVP,ORNP,ORL,ORIT)       ; Place a quick order without verify step
"RTN","ORWDXM",114,0)
 N ORDG,ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG
"RTN","ORWDXM",115,0)
 N ORDIALOG,ORIFN,ORLEAD,ORTRAIL
"RTN","ORWDXM",116,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDXM",117,0)
 S DGRP=$P($G(^ORD(101.41,ORIT,0)),U,5) Q:'DGRP
"RTN","ORWDXM",118,0)
 S ORDIALOG=$$DEFDLG^ORWDXQ(DGRP)
"RTN","ORWDXM",119,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0)) S ORCAT="O"      ; temp
"RTN","ORWDXM",120,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) S ORCAT="I" ; temp
"RTN","ORWDXM",121,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORWDXM",122,0)
 D GETORDER^ORCD("^ORD(101.41,"_ORIT_",6)")
"RTN","ORWDXM",123,0)
 ; check required fields?
"RTN","ORWDXM",124,0)
 D EN^ORCSAVE
"RTN","ORWDXM",125,0)
 S REC="" I ORIFN D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXM",126,0)
 Q
"RTN","ORWDXM",127,0)
ALLRSP(QUIK)    ; Return 1 if quick order has values for all responses
"RTN","ORWDXM",128,0)
 N ALLOK,DLG,ITM,PRMT
"RTN","ORWDXM",129,0)
 S ALLOK=1,DLG=+$$DEFDLG^ORWDXQ(+$P($G(^ORD(101.41,QUIK,0)),U,5))
"RTN","ORWDXM",130,0)
 S ITM=0 F  S ITM=$O(^ORD(101.41,DLG,10,ITM)) Q:'ITM  D  Q:'ALLOK
"RTN","ORWDXM",131,0)
 . Q:$P($G(^ORD(101.41,DLG,10,ITM,0)),U,8)=1
"RTN","ORWDXM",132,0)
 . S PRMT=$P(^ORD(101.41,DLG,10,ITM,0),U,2)
"RTN","ORWDXM",133,0)
 . I '$$HASRSP(QUIK,PRMT) S ALLOK=0
"RTN","ORWDXM",134,0)
 Q ALLOK
"RTN","ORWDXM",135,0)
HASRSP(QUIK,PRMT)    ; Return 1 if quick order has response for prompt
"RTN","ORWDXM",136,0)
 N FND,RSP S FND=0
"RTN","ORWDXM",137,0)
 S RSP=0 F  S RSP=$O(^ORD(101.41,QUIK,6,RSP)) Q:'RSP  D  Q:FND
"RTN","ORWDXM",138,0)
 . I $P(^ORD(101.41,QUIK,6,RSP,0),U,2)=PRMT S FND=1
"RTN","ORWDXM",139,0)
 Q FND
"RTN","ORWDXM",140,0)
  
"RTN","ORWDXM1")
0^29^B62733393
"RTN","ORWDXM1",1,0)
ORWDXM1 ; SLC/KCM/JLI - Order Dialogs, Menus;11:19 AM  7 Jan 2000  10AM 3/4/2002
"RTN","ORWDXM1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,131,132**;Dec 17, 1997
"RTN","ORWDXM1",3,0)
 ;
"RTN","ORWDXM1",4,0)
BLDQRSP(LST,ORIT,FLDS)     ; Build responses for an order
"RTN","ORWDXM1",5,0)
 ; LST=QuickLevel^ResponseID(ORIT;$H)^Dialog^Type^FormID^DGrp
"RTN","ORWDXM1",6,0)
 ; LST(n)=verify text or rejection text
"RTN","ORWDXM1",7,0)
 ; ORIT= ptr to 101.41 for quick order, 100 for copy
"RTN","ORWDXM1",8,0)
 ;       1   2    3    4   5   6    7    8        11-20
"RTN","ORWDXM1",9,0)
 ; FLDS=DFN^LOC^ORNP^INPT^SEX^AGE^EVENT^SC%^^^Key Variables...
"RTN","ORWDXM1",10,0)
 ; ORIT=+ORIT: ptr to 101.41, $E(ORIT)=C: copy $E(ORIT)=X: change
"RTN","ORWDXM1",11,0)
 ;
"RTN","ORWDXM1",12,0)
 ; !! SHOULD ALSO CHECK for PRE-CPRS ORDERS (treat as text?)
"RTN","ORWDXM1",13,0)
 ;
"RTN","ORWDXM1",14,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","ORWDXM1",15,0)
 N ORWMODE   ; 0:Dialog,Quick 1:copy order 2:change order
"RTN","ORWDXM1",16,0)
 N ISXFER    ; If it is transfer order   
"RTN","ORWDXM1",17,0)
 S ORWMODE=0,ISXFER=""
"RTN","ORWDXM1",18,0)
 S:$E(ORIT)="C" ORWMODE=1 S:$E(ORIT)="T" ORWMODE=1,ISXFER=";T" ; treat xfer as copy for now
"RTN","ORWDXM1",19,0)
 S:$E(ORIT)="X" ORWMODE=2
"RTN","ORWDXM1",20,0)
 I ORWMODE S ORIT=$E(ORIT,2,999)
"RTN","ORWDXM1",21,0)
 S LST(0)=""
"RTN","ORWDXM1",22,0)
 D CHKDSBL^ORWDXM3(.LST,ORIT,ORWMODE) Q:+LST(0)=8               ;disable
"RTN","ORWDXM1",23,0)
 D CHKVACT^ORWDXM3(.LST,ORIT,ORWMODE,$P(FLDS,U,3)) Q:+LST(0)=8  ;action
"RTN","ORWDXM1",24,0)
 I ORWMODE=1 D CHKCOPY^ORWDXM3(.LST,ORIT,FLDS) Q:+LST(0)=8      ;no copy
"RTN","ORWDXM1",25,0)
 I ORWMODE=2 D BLD4CHG^ORWDXM3(.LST,ORIT,FLDS) Q                ;change
"RTN","ORWDXM1",26,0)
 ; only continue past here if copy, quick order, or generic order
"RTN","ORWDXM1",27,0)
 I 'ORWMODE,($P(^ORD(101.41,+ORIT,0),U,4)="D"),'($O(^DIC(9.4,"C","OR",0))[$P(^ORD(101.41,+ORIT,0),U,7)) S LST(0)="0^0^"_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER) Q
"RTN","ORWDXM1",28,0)
 ;
"RTN","ORWDXM1",29,0)
 ; radilogy specific variables
"RTN","ORWDXM1",30,0)
 N ORIMTYPE
"RTN","ORWDXM1",31,0)
 ; lab specific variables
"RTN","ORWDXM1",32,0)
 N LRFZX,LRFSAMP,LRFSPEC,LRFDATE,LRFURG,LRFSCH
"RTN","ORWDXM1",33,0)
 N ORTIME,ORCOLLCT,ORMAX,ORTEST,ORIMTIME,ORSMAX,ORSTMS,ORSCH
"RTN","ORWDXM1",34,0)
 ; pharmacy specific variables
"RTN","ORWDXM1",35,0)
 N PSJNOPC,ORMORE,ORINPT,ORXNP,ORSCHED,ORQTY,ORNOUNS,ORXNP,OREFILLS
"RTN","ORWDXM1",36,0)
 N ORCOMPLX,ORQTY,ORCOPAY,ORDRUG,ORWPSPIK,ORWPSWRG,ORSD,ORDSUP,ORWP94
"RTN","ORWDXM1",37,0)
 ; dietetics specific variables
"RTN","ORWDXM1",38,0)
 N ORPARAM,ORNPO,ORTIME,ORMEAL,ORTRAY,ORDATE
"RTN","ORWDXM1",39,0)
 ; consults specific variables
"RTN","ORWDXM1",40,0)
 N GMRCNOPD,GMRCNOAT,GMRCREAF
"RTN","ORWDXM1",41,0)
 ;
"RTN","ORWDXM1",42,0)
 ; -- setup general environment
"RTN","ORWDXM1",43,0)
 N ORTYPE,ORVP,ORL,ORNP,ORSEX,ORAGE,ORWARD,OREVENT,ORDIV,ORSC,KEYVAR
"RTN","ORWDXM1",44,0)
 N ORDG,ORDIALOG,ORCAT,FIRST,ORQUIT,X,ORTRAIL,ORLEAD,RSPREF,AUTOACK
"RTN","ORWDXM1",45,0)
 S ORWP94=$O(^ORD(101.41,"AB","PS MEDS",0))>0
"RTN","ORWDXM1",46,0)
 S ORVP=$P(FLDS,U,1)_";DPT(",ORNP=+$P(FLDS,U,3),ORSC=$P(FLDS,U,8)
"RTN","ORWDXM1",47,0)
 S ORL=$P(FLDS,U,2)_";SC(",ORL(2)=ORL
"RTN","ORWDXM1",48,0)
 S ORSEX=$P(FLDS,U,5),ORAGE=$P(FLDS,U,6),ORTYPE="Q",FIRST=1
"RTN","ORWDXM1",49,0)
 I $P(FLDS,U,4),$G(^SC(+ORL,42)) S ORWARD=+^SC(+ORL,42)
"RTN","ORWDXM1",50,0)
 I $L($P(FLDS,U,7))  D
"RTN","ORWDXM1",51,0)
 . S OREVENT=$P(FLDS,U,7)
"RTN","ORWDXM1",52,0)
 . S OREVENT("TS")=$P(OREVENT,";",2)
"RTN","ORWDXM1",53,0)
 . S OREVENT("EFFECTIVE")=$P(OREVENT,";",3)
"RTN","ORWDXM1",54,0)
 . S OREVENT=$P(OREVENT,";")
"RTN","ORWDXM1",55,0)
 I 'ORWMODE D
"RTN","ORWDXM1",56,0)
 . D SETKEYV^ORWDXM3($P(FLDS,U,11,20))             ; from menu path
"RTN","ORWDXM1",57,0)
 . S KEYVAR=$$KEYVAR^ORWDXM3(ORIT)                 ; from entry action
"RTN","ORWDXM1",58,0)
 . D SETKEYV^ORWDXM3(KEYVAR)
"RTN","ORWDXM1",59,0)
 K ^TMP("ORWORD",$J)
"RTN","ORWDXM1",60,0)
 ;
"RTN","ORWDXM1",61,0)
 ; -- initialize return record based on auto-accept
"RTN","ORWDXM1",62,0)
 I ORWMODE S LST(0)="2^"_ORIT  ; verify on copy
"RTN","ORWDXM1",63,0)
 E  S LST(0)=+$P($G(^ORD(101.41,ORIT,5)),U,8)_U_ORIT
"RTN","ORWDXM1",64,0)
 ;    setup ORCAT based on OREVENT
"RTN","ORWDXM1",65,0)
 I $L($G(OREVENT)) S ORCAT=$S(OREVENT="A":"I",OREVENT="T":"I",1:"O")
"RTN","ORWDXM1",66,0)
 E  S ORCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDXM1",67,0)
 ;    get ORDIALOG definition, then responses for order
"RTN","ORWDXM1",68,0)
 D SETUP^ORWDXM4 Q:+LST(0)=8
"RTN","ORWDXM1",69,0)
 ;    use DATE pre-OR*3*94, DATE/TIME after
"RTN","ORWDXM1",70,0)
 S X=$S($G(ORWP94):"OR GTX START DATE/TIME",1:"OR GTX START DATE")
"RTN","ORWDXM1",71,0)
 ;    kill effective date for rewrite of outpt meds (JUST FOR XFER?)
"RTN","ORWDXM1",72,0)
 I ORWMODE,(ORDG=+$O(^ORD(100.98,"B","O RX",0))) K ORDIALOG($$PTR^ORCD(X),1)
"RTN","ORWDXM1",73,0)
 ;    pharmacy uses ORCAT to know which package the order goes to
"RTN","ORWDXM1",74,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0)) S ORCAT="O"
"RTN","ORWDXM1",75,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) D
"RTN","ORWDXM1",76,0)
 . I ORCAT="O" S ORWPSWRG="" ; not auto-ack, pt not inpt
"RTN","ORWDXM1",77,0)
 . S ORCAT="I"
"RTN","ORWDXM1",78,0)
 ;    set effective date for outpt meds only
"RTN","ORWDXM1",79,0)
 I ORCAT="O",$D(OREVENT("EFFECTIVE")),(ORDG=+$O(^ORD(100.98,"B","O RX",0))) D
"RTN","ORWDXM1",80,0)
 . S ORDIALOG($O(^ORD(101.41,"B",X,0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDXM1",81,0)
 ;
"RTN","ORWDXM1",82,0)
 ; -- setup environment specific to a dialog
"RTN","ORWDXM1",83,0)
 ;    begin case
"RTN","ORWDXM1",84,0)
 I ORDIALOG=$O(^ORD(101.41,"B","RA OERR EXAM",0))         D RA^ORWDXM2 G XENV
"RTN","ORWDXM1",85,0)
 I ORDIALOG=$O(^ORD(101.41,"B","LR OTHER LAB TESTS",0))   D LR^ORWDXM2 G XENV
"RTN","ORWDXM1",86,0)
 I ORDIALOG=$O(^ORD(101.41,"B","FHW1",0))                 D DO^ORWDXM2 G XENV
"RTN","ORWDXM1",87,0)
 I ORDIALOG=$O(^ORD(101.41,"B","FHW2",0))                 D EL^ORWDXM2 G XENV
"RTN","ORWDXM1",88,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0))        D UD^ORWDXM2 G XENV
"RTN","ORWDXM1",89,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0)) D IV^ORWDXM2 G XENV
"RTN","ORWDXM1",90,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0))             D OP^ORWDXM2 G XENV
"RTN","ORWDXM1",91,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO SUPPLY",0))           D OP^ORWDXM2 G XENV
"RTN","ORWDXM1",92,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PS MEDS",0))              D PS^ORWDPS3 G XENV
"RTN","ORWDXM1",93,0)
 I ORDIALOG=$O(^ORD(101.41,"B","GMRAOR ALLERGY ENTER/EDIT",0)) S ORQUIT=1
"RTN","ORWDXM1",94,0)
XENV ;    end case
"RTN","ORWDXM1",95,0)
 ;
"RTN","ORWDXM1",96,0)
 Q:+LST(0)=8
"RTN","ORWDXM1",97,0)
 I $G(ORQUIT) S LST(0)="0^0^"_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER)_"^"_$G(KEYVAR) Q
"RTN","ORWDXM1",98,0)
 ; -- loop thru items in dialog, setting defaults & checking conditions
"RTN","ORWDXM1",99,0)
 N SEQ,DA,XCODE,MUSTASK,PROMPT,INST,KEY,IVFID
"RTN","ORWDXM1",100,0)
 S IVFID=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM1",101,0)
 S AUTOACK=$S($D(ORWPSWRG):0,1:1)
"RTN","ORWDXM1",102,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ)) Q:'SEQ  D
"RTN","ORWDXM1",103,0)
 . S DA=0 F  S DA=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORWDXM1",104,0)
 . . ; -- skip if this is a child prompt
"RTN","ORWDXM1",105,0)
 . . I $P(^ORD(101.41,+ORDIALOG,10,DA,0),U,11) Q
"RTN","ORWDXM1",106,0)
 . . ; -- set default for prompt, see if needs to be interactive
"RTN","ORWDXM1",107,0)
 . . S PROMPT=$P(^ORD(101.41,+ORDIALOG,10,DA,0),U,2)
"RTN","ORWDXM1",108,0)
 . . D SETITEM(DA,PROMPT,1,.MUSTASK)
"RTN","ORWDXM1",109,0)
 . . I MUSTASK S AUTOACK=0 Q
"RTN","ORWDXM1",110,0)
 . . ; -- iterate through the child items if parent and editonly
"RTN","ORWDXM1",111,0)
 . . Q:'$D(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT))
"RTN","ORWDXM1",112,0)
 . . N CSEQ,CDA,CPROMPT,INST,ORQUIT
"RTN","ORWDXM1",113,0)
 . . S CSEQ=0 F  S CSEQ=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT,CSEQ)) Q:'CSEQ  D  Q:$G(ORQUIT)
"RTN","ORWDXM1",114,0)
 . . . S CDA=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT,CSEQ,0))
"RTN","ORWDXM1",115,0)
 . . . S CPROMPT=$P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,2)
"RTN","ORWDXM1",116,0)
 . . . ; -- if required and no instances then need interaction
"RTN","ORWDXM1",117,0)
 . . . I $P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,6),ORDIALOG'=IVFID,'$O(ORDIALOG(CPROMPT,0)) S AUTOACK=0
"RTN","ORWDXM1",118,0)
 . . . S INST=0 F  S INST=$O(ORDIALOG(CPROMPT,INST)) Q:'INST  D
"RTN","ORWDXM1",119,0)
 . . . . ; -- set default for each child prompt, if necessary
"RTN","ORWDXM1",120,0)
 . . . . D SETITEM(CDA,CPROMPT,INST,.MUSTASK)
"RTN","ORWDXM1",121,0)
 . . . . ; -- if no val and child prmpt required then need interaction
"RTN","ORWDXM1",122,0)
 . . . . I MUSTASK,$P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,6) S AUTOACK=0
"RTN","ORWDXM1",123,0)
 ;
"RTN","ORWDXM1",124,0)
 ; -- loop thru prompts to create responses in ^TMP
"RTN","ORWDXM1",125,0)
 S KEY=$S(ORWMODE:"C",1:"")_ORIT_"-"_$P($H,",",2),SEQ=0
"RTN","ORWDXM1",126,0)
 S PROMPT=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:'PROMPT  D
"RTN","ORWDXM1",127,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  D
"RTN","ORWDXM1",128,0)
 . . S SEQ=SEQ+1,^TMP("ORWDXMQ",$J,KEY,SEQ,0)=U_PROMPT_U_INST
"RTN","ORWDXM1",129,0)
 . . ; -- save word processing value
"RTN","ORWDXM1",130,0)
 . . I $E(ORDIALOG(PROMPT,0))="W",$L(ORDIALOG(PROMPT,INST)) D
"RTN","ORWDXM1",131,0)
 . . .  M ^TMP("ORWDXMQ",$J,KEY,SEQ,2)=@ORDIALOG(PROMPT,INST)
"RTN","ORWDXM1",132,0)
 . . ; -- save other types of values
"RTN","ORWDXM1",133,0)
 . . E  S ^TMP("ORWDXMQ",$J,KEY,SEQ,1)=ORDIALOG(PROMPT,INST)
"RTN","ORWDXM1",134,0)
 ;
"RTN","ORWDXM1",135,0)
 ; -- return whether the order can be auto-accepted & key to values
"RTN","ORWDXM1",136,0)
 I AUTOACK D
"RTN","ORWDXM1",137,0)
 . I ORWMODE S AUTOACK=2
"RTN","ORWDXM1",138,0)
 . I 'ORWMODE,($P(^ORD(101.41,ORIT,0),U,8)!'LST(0)) S AUTOACK=2
"RTN","ORWDXM1",139,0)
 I AUTOACK=2 D VERTXT^ORWDXM2
"RTN","ORWDXM1",140,0)
 S LST(0)=AUTOACK_U_KEY_U_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER)_"^"_$G(KEYVAR)
"RTN","ORWDXM1",141,0)
 ; D becomes Q if got this far (must be generic dialog)
"RTN","ORWDXM1",142,0)
 I $P(LST(0),U,4)="D" S $P(LST(0),U,4)="Q"
"RTN","ORWDXM1",143,0)
 ; if doing copy, set dialog type to "C" (sets up dialog in copy mode)
"RTN","ORWDXM1",144,0)
 I ORWMODE=1 S $P(LST(0),U,4)="C"
"RTN","ORWDXM1",145,0)
 ;
"RTN","ORWDXM1",146,0)
 K ^TMP("ORWORD",$J)
"RTN","ORWDXM1",147,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J)
"RTN","ORWDXM1",148,0)
 Q
"RTN","ORWDXM1",149,0)
SETITEM(DA,PROMPT,INST,MUSTASK) ; set default value & return if must prompt
"RTN","ORWDXM1",150,0)
 N EDITONLY,Y,XCODE
"RTN","ORWDXM1",151,0)
 S MUSTASK=0,EDITONLY=0 ;,PROMPT=$P(^ORD(101.41,+ORDIALOG,10,DA,0),U,2)
"RTN","ORWDXM1",152,0)
 ;
"RTN","ORWDXM1",153,0)
 ; load value into this prompt if passed from HTML dialog
"RTN","ORWDXM1",154,0)
 I $D(^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)) D
"RTN","ORWDXM1",155,0)
 . I $E(ORDIALOG(PROMPT,0))="W" D
"RTN","ORWDXM1",156,0)
 . . S ^TMP("ORWORD",$J,PROMPT,INST,1,0)=^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)
"RTN","ORWDXM1",157,0)
 . . S ORDIALOG(PROMPT,INST)="^TMP(""ORWORD"","_$J_","_PROMPT_","_INST_")"
"RTN","ORWDXM1",158,0)
 . E  S ORDIALOG(PROMPT,INST)=^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)
"RTN","ORWDXM1",159,0)
 I $D(^TMP("ORWDHTM",$J,ORIT,PROMPT)) D
"RTN","ORWDXM1",160,0)
 . S ORDIALOG(PROMPT,INST)=^TMP("ORWDHTM",$J,ORIT,PROMPT)
"RTN","ORWDXM1",161,0)
 . ; NEED TO CLEAN UP ^TMP("ORWDHTM") after processing order set!!!
"RTN","ORWDXM1",162,0)
 ;
"RTN","ORWDXM1",163,0)
 ; skip if a value already exists for this prompt and not WP
"RTN","ORWDXM1",164,0)
 Q:$D(ORDIALOG(PROMPT,INST))&($E(ORDIALOG(PROMPT,0))'="W")
"RTN","ORWDXM1",165,0)
 ; execute default action if no value in QO, checking EDITONLY afterwards
"RTN","ORWDXM1",166,0)
 I '$D(ORDIALOG(PROMPT,INST)) D
"RTN","ORWDXM1",167,0)
 . I $E(ORDIALOG(PROMPT,0))="W",$D(^ORD(101.41,+ORDIALOG,10,DA,8))>9 D
"RTN","ORWDXM1",168,0)
 . . M ^TMP("ORWORD",$J,PROMPT,INST)=^ORD(101.41,+ORDIALOG,10,DA,8)
"RTN","ORWDXM1",169,0)
 . . S ORDIALOG(PROMPT,INST)="^TMP(""ORWORD"","_$J_","_PROMPT_","_INST_")"
"RTN","ORWDXM1",170,0)
 . E  D
"RTN","ORWDXM1",171,0)
 . . S XCODE=$$SUBCODE($G(^ORD(101.41,+ORDIALOG,10,DA,7)))
"RTN","ORWDXM1",172,0)
 . . I $L(XCODE) X XCODE S:$D(Y) ORDIALOG(PROMPT,INST)=Y
"RTN","ORWDXM1",173,0)
 Q:$G(EDITONLY)
"RTN","ORWDXM1",174,0)
 ; if this is ASK ON EDIT ONLY prompt, go to next one
"RTN","ORWDXM1",175,0)
 I 'ORWMODE,$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,8) Q
"RTN","ORWDXM1",176,0)
 ; if this is not ASK ON COPY or REQUIRED, go to next one
"RTN","ORWDXM1",177,0)
 I ORWMODE,($P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,9)'["W"),'$P($G(^(0)),U,6)!$D(ORDIALOG(PROMPT,INST)) Q
"RTN","ORWDXM1",178,0)
 ; if auto-accept and now have value for WP field, don't ask it
"RTN","ORWDXM1",179,0)
 I 'ORWMODE,LST(0),$D(ORDIALOG(PROMPT,INST)),($E(ORDIALOG(PROMPT,0))="W") Q
"RTN","ORWDXM1",180,0)
 ; if auto-accept and field not required, don't ask it
"RTN","ORWDXM1",181,0)
 I 'ORWMODE,LST(0),'$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,6) Q
"RTN","ORWDXM1",182,0)
 ; execute the condition action, $T determines if editonly
"RTN","ORWDXM1",183,0)
 S XCODE=$$SUBCODE($G(^ORD(101.41,+ORDIALOG,10,DA,3)))
"RTN","ORWDXM1",184,0)
 I $L(XCODE) X XCODE Q:'$T
"RTN","ORWDXM1",185,0)
 ; if we got this far, we need to ask something
"RTN","ORWDXM1",186,0)
 S MUSTASK=1
"RTN","ORWDXM1",187,0)
 Q
"RTN","ORWDXM1",188,0)
SUBCODE(X)      ; substitute code
"RTN","ORWDXM1",189,0)
 I X["$$REQDCOMM^ORCDLR" Q "I $$LRRQCM^ORWDXM2"
"RTN","ORWDXM1",190,0)
 I X["$$ASKSAMP^ORCDLR" Q "I $$LRASMP^ORWDXM2"
"RTN","ORWDXM1",191,0)
 I X["$$SCHEDULD^ORCDRA1" Q "I $$SCHEDULD^ORWDXM2"
"RTN","ORWDXM1",192,0)
 I X["(^PSX(550,""C"")" Q "S Y=$E($$DEFPICK^ORWDPS32) K:'$L(Y) Y"
"RTN","ORWDXM1",193,0)
 Q X
"RTN","ORWDXM2")
0^27^B54925348
"RTN","ORWDXM2",1,0)
ORWDXM2 ; SLC/KCM - Quick Orders ;10:42 AM  6 Sep 1998 [3/20/02 10:37am]
"RTN","ORWDXM2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,116,132**;Dec 17, 1997
"RTN","ORWDXM2",3,0)
 ;
"RTN","ORWDXM2",4,0)
CLRRCL(OK)      ; clear ORECALL
"RTN","ORWDXM2",5,0)
 S OK=1
"RTN","ORWDXM2",6,0)
 K ^TMP("ORECALL",$J),^TMP("ORWDXMQ",$J)
"RTN","ORWDXM2",7,0)
 Q
"RTN","ORWDXM2",8,0)
VERTXT ; set verify text for order
"RTN","ORWDXM2",9,0)
 N SEQ,DA,X,PROMPT,MULT,CHILD,INST,TITLE,ILST,SPACES
"RTN","ORWDXM2",10,0)
 S ILST=0,$P(SPACES," ",31)=""
"RTN","ORWDXM2",11,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ)) Q:SEQ'>0  D
"RTN","ORWDXM2",12,0)
 . S DA=0 F  S DA=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORWDXM2",13,0)
 . . S X0=$G(^ORD(101.41,+ORDIALOG,10,DA,0))
"RTN","ORWDXM2",14,0)
 . . Q:$P(X0,U,9)["*"  ; hidden prompt
"RTN","ORWDXM2",15,0)
 . . S PROMPT=$P(X0,U,2),MULT=$P(X0,U,7),CHILD=$P(X0,U,11) Q:CHILD
"RTN","ORWDXM2",16,0)
 . . Q:'PROMPT  S INST=$O(ORDIALOG(PROMPT,0)) Q:'INST  ; no values
"RTN","ORWDXM2",17,0)
 . . S TITLE=$S($L($G(ORDIALOG(PROMPT,"TTL"))):ORDIALOG(PROMPT,"TTL"),1:ORDIALOG(PROMPT,"A"))
"RTN","ORWDXM2",18,0)
 . . I $E(ORDIALOG(PROMPT,0))="W" D
"RTN","ORWDXM2",19,0)
 . . . N IWP,WP,CNT
"RTN","ORWDXM2",20,0)
 . . . S IWP=0,CNT=0
"RTN","ORWDXM2",21,0)
 . . . F  S IWP=$O(^TMP("ORWORD",$J,PROMPT,INST,IWP)) Q:'IWP  D
"RTN","ORWDXM2",22,0)
 . . . . S CNT=CNT+1,WP(CNT)=^TMP("ORWORD",$J,PROMPT,INST,IWP,0)
"RTN","ORWDXM2",23,0)
 . . . I CNT=1,($L(WP(1))'>40) S ILST=ILST+1,LST(ILST)=$J(TITLE,30)_WP(1)
"RTN","ORWDXM2",24,0)
 . . . I CNT>1 D 
"RTN","ORWDXM2",25,0)
 . . . . S ILST=ILST+1,LST(ILST)=TITLE,IWP=0
"RTN","ORWDXM2",26,0)
 . . . . F  S IWP=$O(WP(IWP)) Q:'IWP  S ILST=ILST+1,LST(ILST)=WP(IWP)
"RTN","ORWDXM2",27,0)
 . . E  D
"RTN","ORWDXM2",28,0)
 . . . S ILST=ILST+1,LST(ILST)=$J(TITLE,30)
"RTN","ORWDXM2",29,0)
 . . . S LST(ILST)=LST(ILST)_$$ITEM^ORCDLG(PROMPT,INST)
"RTN","ORWDXM2",30,0)
 . . Q:'MULT  Q:'$O(ORDIALOG(PROMPT,INST))  ; done
"RTN","ORWDXM2",31,0)
 . . F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  S ILST=ILST+1,LST(ILST)=SPACES_$$ITEM^ORCDLG(PROMPT,INST)
"RTN","ORWDXM2",32,0)
 Q
"RTN","ORWDXM2",33,0)
RA ; setup environment for radiology
"RTN","ORWDXM2",34,0)
 ; -- get imaging types based on display group of quick order and
"RTN","ORWDXM2",35,0)
 ;    setup list of imaging locations based on imaging type
"RTN","ORWDXM2",36,0)
 N ORY,ITYPE,IFN,CNT,ORIMLOC,PROMPT
"RTN","ORWDXM2",37,0)
 S ORDIV=$$DIV^ORCDRA1,ITYPE=$P($G(^ORD(100.98,+ORDG,0)),U,3)
"RTN","ORWDXM2",38,0)
 S ORIMTYPE=$O(^RA(79.2,"C",ITYPE,0))
"RTN","ORWDXM2",39,0)
 D EN4^RAO7PC1(ITYPE,"ORY")
"RTN","ORWDXM2",40,0)
 S (IFN,CNT)=0 F  S IFN=$O(ORY(IFN)) Q:IFN'>0  D
"RTN","ORWDXM2",41,0)
 . S CNT=CNT+1,ORIMLOC(CNT)=ORY(IFN),ORIMLOC("B",$P(ORY(IFN),U,2))=IFN
"RTN","ORWDXM2",42,0)
 I '$$GET^XPAR("ALL","RA SUBMIT PROMPT",1,"Q"),CNT>1 K ORIMLOC
"RTN","ORWDXM2",43,0)
 E  S ORIMLOC=CNT_"^1"
"RTN","ORWDXM2",44,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX IMAGING LOCATION",0))
"RTN","ORWDXM2",45,0)
 I $G(ORIMLOC) M ORDIALOG(PROMPT,"LIST")=ORIMLOC
"RTN","ORWDXM2",46,0)
 Q
"RTN","ORWDXM2",47,0)
LR ; setup environment for lab
"RTN","ORWDXM2",48,0)
 ; -- setup ORTIME, ORIMTIME & ORTEST arrays
"RTN","ORWDXM2",49,0)
 ;    setup ORMAX, ORDG, & ORCOLLCT variables
"RTN","ORWDXM2",50,0)
 N PROMPT,INST,EDITONLY
"RTN","ORWDXM2",51,0)
 D GETIMES^ORCDLR1  ; sets up ORTIME and ORIMTIME arrays
"RTN","ORWDXM2",52,0)
 S ORMAX=$$GET^XPAR("ALL^LOC.`"_+ORL,"LR MAX DAYS CONTINUOUS",1,"Q")
"RTN","ORWDXM2",53,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0)),INST=1
"RTN","ORWDXM2",54,0)
 D LRTEST           ; sets up ORTEST array and ORDG
"RTN","ORWDXM2",55,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX COLLECTION TYPE",0))
"RTN","ORWDXM2",56,0)
 I $D(ORDIALOG(PROMPT,1)) S ORCOLLCT=ORDIALOG(PROMPT,1) I 1
"RTN","ORWDXM2",57,0)
 E  S EDITONLY=0,ORCOLLCT=$$COLLTYPE^ORCDLR1
"RTN","ORWDXM2",58,0)
 I ORCOLLCT="I" D
"RTN","ORWDXM2",59,0)
 . S PROMPT=$O(^ORD(101.41,"AB","OR GTX START DATE/TIME",0))
"RTN","ORWDXM2",60,0)
 . D LRICTMOK
"RTN","ORWDXM2",61,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ADMIN SCHEDULE",0))
"RTN","ORWDXM2",62,0)
 I $D(ORDIALOG(PROMPT,1)) S ORSCH=ORDIALOG(PROMPT,1)
"RTN","ORWDXM2",63,0)
 Q
"RTN","ORWDXM2",64,0)
LRTEST ; -- Setup ORTEST() array of ordering parameters (copied from ORCDLR)
"RTN","ORWDXM2",65,0)
 N OI,TST,DG
"RTN","ORWDXM2",66,0)
 S OI=+$G(ORDIALOG(PROMPT,INST)) Q:'OI
"RTN","ORWDXM2",67,0)
 I '$D(ORTEST) S TST=+$P($G(^ORD(101.43,OI,0)),U,2) D TEST^LR7OR3(TST,.ORTEST) S ORTEST=TST
"RTN","ORWDXM2",68,0)
 S DG=$P($G(^ORD(101.43,+OI,"LR")),U,6) S:'$L(DG) DG="LAB"
"RTN","ORWDXM2",69,0)
 S DG=$O(^ORD(100.98,"B",DG,0)) S:DG ORDG=DG
"RTN","ORWDXM2",70,0)
 Q
"RTN","ORWDXM2",71,0)
LRRQCM()        ; return true if lab test has required comments
"RTN","ORWDXM2",72,0)
 I $O(^TMP("ORWORD",$J,PROMPT,INST,0)) Q 1 ; edit via WP
"RTN","ORWDXM2",73,0)
 N LRTEST,LRSAMP,LRSPEC,LRTSTN,LRTCOM,LRCCOM,DA,CNT,I,REQDCOMM,OI,TST
"RTN","ORWDXM2",74,0)
 S LRSAMP=$$VAL^ORCD("COLLECTION SAMPLE"),LRSPEC=$$VAL^ORCD("SPECIMEN")
"RTN","ORWDXM2",75,0)
 S OI=+$G(ORDIALOG(PROMPT,INST)) Q:'OI 0
"RTN","ORWDXM2",76,0)
 I '$D(ORTEST) S TST=+$P($G(^ORD(101.43,OI,0)),U,2) D TEST^LR7OR3(TST,.ORTEST) S ORTEST=TST
"RTN","ORWDXM2",77,0)
 S LRTSTN=1,LRTEST(1)=+ORTEST,DA=$O(^LAB(60,LRTEST(1),3,"B",+LRSAMP,0))
"RTN","ORWDXM2",78,0)
 S REQDCOMM=$P($G(^LAB(60,LRTEST(1),3,+DA,0)),U,6)
"RTN","ORWDXM2",79,0)
 S:'REQDCOMM REQDCOMM=+$P($G(^LAB(60,LRTEST(1),0)),U,19)
"RTN","ORWDXM2",80,0)
 Q REQDCOMM
"RTN","ORWDXM2",81,0)
LRASMP()       ; return true to ask collection sample (from ASKSAMP^ORCDLR)
"RTN","ORWDXM2",82,0)
 N DEFSAMP,SAMP0
"RTN","ORWDXM2",83,0)
 S DEFSAMP=$G(ORDIALOG(PROMPT,INST)),SAMP0=$G(^LAB(62,+DEFSAMP,0))
"RTN","ORWDXM2",84,0)
 I (ORCOLLCT="LC")!(ORCOLLCT="I"),$G(ORTEST("Lab CollSamp")) Q 0
"RTN","ORWDXM2",85,0)
 I $G(ORTEST("Unique CollSamp")),DEFSAMP Q 0 ; unique -> don't ask
"RTN","ORWDXM2",86,0)
 I 'DEFSAMP!('FIRST) Q 1 ; no default or edit -> ask
"RTN","ORWDXM2",87,0)
 I $G(ORDIALOG(PROMPT,"LIST"))="1^1" Q 0 ; only one choice
"RTN","ORWDXM2",88,0)
 Q 1
"RTN","ORWDXM2",89,0)
LRICTMOK        ;
"RTN","ORWDXM2",90,0)
 Q:'$D(ORDIALOG(PROMPT,1))
"RTN","ORWDXM2",91,0)
 N ORY
"RTN","ORWDXM2",92,0)
 D VALDT^ORWU(.ORY,ORDIALOG(PROMPT,1))
"RTN","ORWDXM2",93,0)
 I +$$VALID^LR7OV4(DUZ(2),ORY)=0 S ORDIALOG(PROMPT,1)=""
"RTN","ORWDXM2",94,0)
 Q
"RTN","ORWDXM2",95,0)
DO ; setup environment for diet order
"RTN","ORWDXM2",96,0)
 ; partially copied from EN^ORCDFH
"RTN","ORWDXM2",97,0)
 I ORCAT'="I" D  Q
"RTN","ORWDXM2",98,0)
 . S ORQUIT=1
"RTN","ORWDXM2",99,0)
 . S LST(0)="8^0"
"RTN","ORWDXM2",100,0)
 . S LST(.5)="Diet orders allowed for inpatients only."
"RTN","ORWDXM2",101,0)
 D EN^FHWOR8(+ORVP,.ORPARAM)          ; set FH ordering parameters
"RTN","ORWDXM2",102,0)
 S:'$L($G(ORPARAM(3))) ORPARAM(3)="T" ; for now
"RTN","ORWDXM2",103,0)
 N PROMPT,OI                          ; set NPO flag if NPO diet
"RTN","ORWDXM2",104,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",105,0)
 S OI=+$G(ORDIALOG(PROMPT,1))
"RTN","ORWDXM2",106,0)
 S ORNPO=($P($G(^ORD(101.43,OI,0)),U)="NPO")
"RTN","ORWDXM2",107,0)
 Q
"RTN","ORWDXM2",108,0)
EL ; setup environment for early/late tray
"RTN","ORWDXM2",109,0)
 D EN^FHWOR8(+ORVP,.ORPARAM)          ; set FH ordering parameters
"RTN","ORWDXM2",110,0)
 S:'$L($G(ORPARAM(3))) ORPARAM(3)="T" ; for now
"RTN","ORWDXM2",111,0)
 D EN2^ORCDFH                         ; setup ORTIME array
"RTN","ORWDXM2",112,0)
 N PROMPT                             ; set ORMEAL,ORTRAY
"RTN","ORWDXM2",113,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX MEAL",0))
"RTN","ORWDXM2",114,0)
 I $D(ORDIALOG(PROMPT,1)) S ORMEAL=ORDIALOG(PROMPT,1)
"RTN","ORWDXM2",115,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",116,0)
 I $D(ORDIALOG(PROMPT,1)) S ORTRAY=ORDIALOG(PROMPT,1)
"RTN","ORWDXM2",117,0)
 Q
"RTN","ORWDXM2",118,0)
UD ; setup environment for unit dose med
"RTN","ORWDXM2",119,0)
 I $G(ORWP94) G PS^ORWDPS3  ; if patch 94 installed
"RTN","ORWDXM2",120,0)
 ;
"RTN","ORWDXM2",121,0)
 D AUTHMED Q:$G(ORQUIT)  ; checks authorized to write meds
"RTN","ORWDXM2",122,0)
 N PROMPT,OI
"RTN","ORWDXM2",123,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",124,0)
 I $D(ORDIALOG(PROMPT,1)) S OI=ORDIALOG(PROMPT,1) D MEDACTV Q:$G(ORQUIT)
"RTN","ORWDXM2",125,0)
 D INSTR^ORCDPS(OI)      ; sets up instructions, routes, etc.
"RTN","ORWDXM2",126,0)
 D CHOICES^ORCDPS("U")   ; gets list of dispense drugs       
"RTN","ORWDXM2",127,0)
 Q
"RTN","ORWDXM2",128,0)
IV ; setup environment for IV fluid
"RTN","ORWDXM2",129,0)
 D AUTHMED Q:$G(ORQUIT)  ; checks authorized to write meds
"RTN","ORWDXM2",130,0)
 ; sets up list of volumes if only one solution
"RTN","ORWDXM2",131,0)
 ; otherwise, let the dialog go interactive
"RTN","ORWDXM2",132,0)
 N PROMPT,INST,CNT,OI
"RTN","ORWDXM2",133,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",134,0)
 S (CNT,INST)=0
"RTN","ORWDXM2",135,0)
 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  D  Q:$G(ORQUIT)
"RTN","ORWDXM2",136,0)
 . S CNT=CNT+1
"RTN","ORWDXM2",137,0)
 . S OI=ORDIALOG(PROMPT,INST) D MEDACTV  ; check active solutions
"RTN","ORWDXM2",138,0)
 I CNT=1 S INST=1 D VOLUME^ORCDPSIV
"RTN","ORWDXM2",139,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ADDITIVE",0))
"RTN","ORWDXM2",140,0)
 S INST=0
"RTN","ORWDXM2",141,0)
 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  D  Q:$G(ORQUIT)
"RTN","ORWDXM2",142,0)
 . S OI=ORDIALOG(PROMPT,INST) D MEDACTV  ; check active additives
"RTN","ORWDXM2",143,0)
 Q
"RTN","ORWDXM2",144,0)
OP ; setup environment for outpatient pharmacy
"RTN","ORWDXM2",145,0)
 I $G(ORWP94) G PS^ORWDPS3  ; if patch 94 installed
"RTN","ORWDXM2",146,0)
 ;
"RTN","ORWDXM2",147,0)
 D AUTHMED Q:$G(ORQUIT)       ; checks authorized to write meds
"RTN","ORWDXM2",148,0)
 N PROMPT,INST,CNT,OI
"RTN","ORWDXM2",149,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",150,0)
 I $D(ORDIALOG(PROMPT,1)) S OI=ORDIALOG(PROMPT,1) D MEDACTV Q:$G(ORQUIT)
"RTN","ORWDXM2",151,0)
 D INSTR^ORCDPS(OI)           ; sets up instructions, routes, etc.
"RTN","ORWDXM2",152,0)
 D CHOICES^ORCDPS("O")        ; gets list of dispense drugs      
"RTN","ORWDXM2",153,0)
 ; get defaults for drug, refills if only one dispense drug
"RTN","ORWDXM2",154,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX DISPENSE DRUG",0))
"RTN","ORWDXM2",155,0)
 S (CNT,INST)=0
"RTN","ORWDXM2",156,0)
 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  S CNT=CNT+1
"RTN","ORWDXM2",157,0)
 I CNT=1 D
"RTN","ORWDXM2",158,0)
 . S ORDRUG=+$G(ORDIALOG(PROMPT,1)),ORCOMPLX=0
"RTN","ORWDXM2",159,0)
 . S OREFILLS=$P($G(ORDIALOG(PROMPT,"LIST","D",ORDRUG)),U,3)
"RTN","ORWDXM2",160,0)
 . S:'$L(OREFILLS) OREFILLS=11
"RTN","ORWDXM2",161,0)
 E  S ORCOMPLX=1,OREFILLS=11  ; force interactive on complex order
"RTN","ORWDXM2",162,0)
 S ORCOPAY=1                  ; ask SC if can't determine copay
"RTN","ORWDXM2",163,0)
 I $G(ORDRUG),$L($T(ASKSC^ORCDPS)) S ORCOPAY=$$ASKSC^ORCDPS
"RTN","ORWDXM2",164,0)
 Q
"RTN","ORWDXM2",165,0)
AUTHMED ; sets ORQUIT if not authorized to write meds
"RTN","ORWDXM2",166,0)
 N NOAUTH,NAME
"RTN","ORWDXM2",167,0)
 D AUTH^ORWDPS32(.NOAUTH,ORNP)
"RTN","ORWDXM2",168,0)
 I +NOAUTH D
"RTN","ORWDXM2",169,0)
 . S ORQUIT=1
"RTN","ORWDXM2",170,0)
 . S LST(0)="8^0"
"RTN","ORWDXM2",171,0)
 . S NAME=$P($G(^VA(200,+ORNP,20)),U,2)
"RTN","ORWDXM2",172,0)
 . I '$L(NAME) S NAME=$P($G(^VA(200,+ORNP,0)),U,1)
"RTN","ORWDXM2",173,0)
 . S LST(.5)=NAME_" is not authorized to write med orders."
"RTN","ORWDXM2",174,0)
 Q
"RTN","ORWDXM2",175,0)
MEDACTV ; sets ORQUIT if the orderable item is not active for a med
"RTN","ORWDXM2",176,0)
 Q:'$G(OI)
"RTN","ORWDXM2",177,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXM2",178,0)
 . S ORQUIT=1
"RTN","ORWDXM2",179,0)
 . S LST(0)="8^0"
"RTN","ORWDXM2",180,0)
 . S LST(.5)=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDXM2",181,0)
 Q
"RTN","ORWDXM2",182,0)
SCHEDULD() ; Is patient scheduled for PREOP (Imaging)
"RTN","ORWDXM2",183,0)
 I $G(ORDIALOG(PROMPT,1)) Q 1 ; don't ask - already have date
"RTN","ORWDXM2",184,0)
 E  Q 0
"RTN","ORWDXM2",185,0)
 Q
"RTN","ORWDXM3")
0^30^B21604835
"RTN","ORWDXM3",1,0)
ORWDXM3 ; SLC/KCM/JLI - Quick Orders ;10:42 AM 4/2/2002
"RTN","ORWDXM3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,131,132**;Dec 17, 1997
"RTN","ORWDXM3",3,0)
 ;
"RTN","ORWDXM3",4,0)
KEYVAR(DLG)  ; Parse entry action for key variables & return in string
"RTN","ORWDXM3",5,0)
 ; RV=CollTp^Samp^Spec^CollDt^Urg^Sched^NoComm^NoDiag^NoProv^NoRsn
"RTN","ORWDXM3",6,0)
 N XCODE,RV,POS,Z
"RTN","ORWDXM3",7,0)
 S XCODE=$G(^ORD(101.41,DLG,3)),RV=""
"RTN","ORWDXM3",8,0)
 I '$L(XCODE) Q ""
"RTN","ORWDXM3",9,0)
 S POS=$F(XCODE,"LRFZX=")    I POS S $P(RV,U,1)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",10,0)
 S POS=$F(XCODE,"LRFSAMP=")  I POS S $P(RV,U,2)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",11,0)
 S POS=$F(XCODE,"LRFSPEC=")  I POS S $P(RV,U,3)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",12,0)
 S POS=$F(XCODE,"LRFDATE=")  I POS S $P(RV,U,4)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",13,0)
 S POS=$F(XCODE,"LRFURG=")   I POS S $P(RV,U,5)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",14,0)
 S POS=$F(XCODE,"LRFSCH=")   I POS S $P(RV,U,6)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",15,0)
 S POS=$F(XCODE,"PSJNOPC=")  I POS S $P(RV,U,7)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",16,0)
 S POS=$F(XCODE,"GMRCNOPD=") I POS S $P(RV,U,8)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",17,0)
 S POS=$F(XCODE,"GMRCNOAT=") I POS S $P(RV,U,9)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",18,0)
 S POS=$F(XCODE,"GMRCREAF=") I POS S $P(RV,U,10)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",19,0)
 S POS=$F(XCODE,"ORFORGET=") I POS D
"RTN","ORWDXM3",20,0)
 . ; need to change this so that it is executed in SETKEYV so
"RTN","ORWDXM3",21,0)
 . ; that it is executed each time menu is revisited
"RTN","ORWDXM3",22,0)
 . N ORFORGET S ORFORGET=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",23,0)
 . I ORFORGET K ^TMP("ORECALL",$J,+ORFORGET)
"RTN","ORWDXM3",24,0)
 . E  K ^TMP("ORECALL",$J)
"RTN","ORWDXM3",25,0)
 Q RV
"RTN","ORWDXM3",26,0)
VALUE(STR,BEG) ; Return value of "var=" (copied from ORCONVRT)
"RTN","ORWDXM3",27,0)
 N X,Y,I S X=$E(STR,BEG,999),Y=""
"RTN","ORWDXM3",28,0)
 S:$E(X)="""" X=$E(X,2,999) ; strip leading "
"RTN","ORWDXM3",29,0)
 F I=1:1:$L(X) S Z=$E(X,I) Q:(Z=",")!(Z=" ")!(Z="""")  S Y=Y_Z
"RTN","ORWDXM3",30,0)
 Q $TR(Y,U,"")
"RTN","ORWDXM3",31,0)
 ;
"RTN","ORWDXM3",32,0)
SETKEYV(X)      ; Set the key variables based on contents of X
"RTN","ORWDXM3",33,0)
 I $L($P(X,U,1))  S LRFZX=$P(X,U,1)
"RTN","ORWDXM3",34,0)
 I $L($P(X,U,2))  S LRFSAMP=$P(X,U,2)
"RTN","ORWDXM3",35,0)
 I $L($P(X,U,3))  S LRFSPEC=$P(X,U,3)
"RTN","ORWDXM3",36,0)
 I $L($P(X,U,4))  S LRFDATE=$P(X,U,4)
"RTN","ORWDXM3",37,0)
 I $L($P(X,U,5))  S LRFURG=$P(X,U,5)
"RTN","ORWDXM3",38,0)
 I $L($P(X,U,6))  S LRFSCH=$P(X,U,6)
"RTN","ORWDXM3",39,0)
 I $L($P(X,U,7))  S PSJNOPC=$P(X,U,7)
"RTN","ORWDXM3",40,0)
 I $L($P(X,U,8))  S GMRCNOPD=$P(X,U,8)
"RTN","ORWDXM3",41,0)
 I $L($P(X,U,9))  S GMRCNOAT=$P(X,U,9)
"RTN","ORWDXM3",42,0)
 I $L($P(X,U,10)) S GMRCREAF=$P(X,U,10)
"RTN","ORWDXM3",43,0)
 Q
"RTN","ORWDXM3",44,0)
DLGINFO(IEN,MODE)    ; return information about a dialog
"RTN","ORWDXM3",45,0)
 ; IEN=DlgIEN or ORIFN, MODE=0:Dlg,1:Copy,2:Change
"RTN","ORWDXM3",46,0)
 ; RESULT=DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",47,0)
 ; If MODE="1;T",don't check "PS MEDS" for transfer order
"RTN","ORWDXM3",48,0)
 ; PSMDGP=1: Unit/Dose  Group
"RTN","ORWDXM3",49,0)
 ; PSMDGP=2: OutPatient Group
"RTN","ORWDXM3",50,0)
 N X0,DLGIEN,TYP,FID,DGRP,PSMDGP,ISXF
"RTN","ORWDXM3",51,0)
 S PSMDGP=0,ISXF=""
"RTN","ORWDXM3",52,0)
 S ISXF=$P(MODE,";",2)
"RTN","ORWDXM3",53,0)
 S MODE=+MODE
"RTN","ORWDXM3",54,0)
 S DLGIEN=IEN I MODE,(ISXF'="T") D
"RTN","ORWDXM3",55,0)
 . S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",56,0)
 . I $P(^ORD(101.41,DLGIEN,0),U)="PS MEDS" D
"RTN","ORWDXM3",57,0)
 . . N PTCAT S PTCAT=$P($G(^OR(100,+IEN,0)),U,12)
"RTN","ORWDXM3",58,0)
 . . I PTCAT="I" S DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)),PSMDGP=1
"RTN","ORWDXM3",59,0)
 . . I PTCAT="O" S DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)),PSMDGP=2
"RTN","ORWDXM3",60,0)
 I MODE,(ISXF="T") S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",61,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),TYP=$P(X0,U,4),DGRP=$P(X0,U,5)
"RTN","ORWDXM3",62,0)
 I MODE S DGRP=+$P($G(^OR(100,+IEN,0)),U,11)
"RTN","ORWDXM3",63,0)
 ; for copy or change, if the base dialog has changed, use it's info 
"RTN","ORWDXM3",64,0)
 I MODE,$G(ORDIALOG),(+DLGIEN'=+ORDIALOG),(PSMDGP=0) D
"RTN","ORWDXM3",65,0)
 . S DLGIEN=+ORDIALOG,DGRP=$P(^ORD(101.41,+ORDIALOG,0),U,5)
"RTN","ORWDXM3",66,0)
 D FORMID^ORWDXM(.FID,DLGIEN)
"RTN","ORWDXM3",67,0)
 Q DLGIEN_U_TYP_U_FID_U_DGRP
"RTN","ORWDXM3",68,0)
 ;
"RTN","ORWDXM3",69,0)
CHKDSBL(LST,ID,MODE)  ; return message if dialog disabled
"RTN","ORWDXM3",70,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",71,0)
 ; LST=QL_REJECT + disabled message or unchanged
"RTN","ORWDXM3",72,0)
 S DLGIEN=+ID I MODE S DLGIEN=+$P($G(^OR(100,+ID,0)),U,5)
"RTN","ORWDXM3",73,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),X=$P(X0,U,3)
"RTN","ORWDXM3",74,0)
 I '$L(X),($P(X0,U,4)="Q") D  ; check default dialog
"RTN","ORWDXM3",75,0)
 . S DLGIEN=+$$DEFDLG^ORWDXQ($P(X0,U,5))
"RTN","ORWDXM3",76,0)
 . S X=$P($G(^ORD(101.41,DLGIEN,0)),U,3)
"RTN","ORWDXM3",77,0)
 I $L(X) D
"RTN","ORWDXM3",78,0)
 . I MODE D GETTXT^ORWORR(.LST,ID) S LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",79,0)
 . S LST(0)="8^0",LST(.5)="Dialog Disabled:  "_X
"RTN","ORWDXM3",80,0)
 Q
"RTN","ORWDXM3",81,0)
CHKVACT(LST,ID,MODE,ORNP)  ; return message if action not valid
"RTN","ORWDXM3",82,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",83,0)
 ; LST=QL_REJECT + invalid action message or unchanged
"RTN","ORWDXM3",84,0)
 Q:'MODE  ; not an action on an order
"RTN","ORWDXM3",85,0)
 N X,ACT S ACT=$S(MODE=1:"RW",MODE=2:"XX",1:"")
"RTN","ORWDXM3",86,0)
 D VALID^ORWDXA(.X,ID,ACT,ORNP)
"RTN","ORWDXM3",87,0)
 I $L(X) D GETTXT^ORWORR(.LST,ID) D
"RTN","ORWDXM3",88,0)
 . S LST(0)="8^0",LST(.5)=X,LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",89,0)
 Q
"RTN","ORWDXM3",90,0)
CHKCOPY(LST,ID,FLDS)  ; return message if can't copy this order
"RTN","ORWDXM3",91,0)
 ; ID=ORIFN;ACT FLDS=EventType in 7th piece
"RTN","ORWDXM3",92,0)
 ; LST=QL_REJECT + cannot copy message or unchanged
"RTN","ORWDXM3",93,0)
 I "^A^D^T^"'[(U_$E($P(FLDS,U,7))_U) Q             ; not event delayed
"RTN","ORWDXM3",94,0)
 N PKG S PKG=$P($G(^OR(100,+ID,0)),U,14)
"RTN","ORWDXM3",95,0)
 S PKG=$$NMSP^ORCD(PKG) I PKG="OR"!(PKG="PS") Q    ; xfer meds, generics
"RTN","ORWDXM3",96,0)
 N ORWCAT S ORWCAT=$P($G(^OR(100,+ID,0)),U,12)
"RTN","ORWDXM3",97,0)
 I ORWCAT="I",("^A^T^"[(U_$E($P(FLDS,U,7))_U)) Q   ; admit, xfer inpt
"RTN","ORWDXM3",98,0)
 I ORWCAT="O",$E($P(FLDS,U,7))="D" Q               ; discharge outpt
"RTN","ORWDXM3",99,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDXM3",100,0)
 I ORWCAT="I" S LST(.5)="inpatient order to outpatient -"
"RTN","ORWDXM3",101,0)
 I ORWCAT="O" S LST(.5)="outpatient order to inpatient -"
"RTN","ORWDXM3",102,0)
 S LST(.5)="Cannot copy the following "_LST(.5)
"RTN","ORWDXM3",103,0)
 S LST(0)="8^0",LST(.7)=""
"RTN","ORWDXM3",104,0)
 Q
"RTN","ORWDXM3",105,0)
BLD4CHG(LST,ID,FLDS)  ; build responses for an edit
"RTN","ORWDXM3",106,0)
 ; ID=ORIFN;ACT FLDS=unused right now
"RTN","ORWDXM3",107,0)
 ; LST(0)=Qlvl^RespID(XOrderID)^DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",108,0)
 S LST(0)="0^X"_ID_U_$$DLGINFO(+ID,2)
"RTN","ORWDXM3",109,0)
 S $P(LST(0),U,4)="X"
"RTN","ORWDXM3",110,0)
 Q
"RTN","ORWOR")
0^19^B22813019
"RTN","ORWOR",1,0)
ORWOR ; SLC/KCM - Orders Calls;10:54 PM  26 Feb 1998
"RTN","ORWOR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132**;Dec 17, 1997
"RTN","ORWOR",3,0)
 ;
"RTN","ORWOR",4,0)
CURRENT(LST,DFN) ; Get Current Orders for a Patient
"RTN","ORWOR",5,0)
 ; Returns two lists in ^TMP("ORW",$J), fields and text
"RTN","ORWOR",6,0)
 N TM,IEN,X,X0,X3,CTR,IDX,I
"RTN","ORWOR",7,0)
 K ^TMP("ORW",$J)
"RTN","ORWOR",8,0)
 S IDX=0,DFN=DFN_";DPT("
"RTN","ORWOR",9,0)
 S TM=0 F  S TM=$O(^OR(100,"AC",DFN,TM)) Q:TM<1  D
"RTN","ORWOR",10,0)
 . S IEN=0 F  S IEN=$O(^OR(100,"AC",DFN,TM,IEN)) Q:IEN<1  D
"RTN","ORWOR",11,0)
 . . S X0=^OR(100,IEN,0),X3=^(3)
"RTN","ORWOR",12,0)
 . . S X=IEN_U_$P(X0,U,7)_U_$P(X0,U,11)_U_$P(X3,U,6)_U_$P(X3,U,3)
"RTN","ORWOR",13,0)
 . . S ^TMP("ORW",$J,IDX+1)=X
"RTN","ORWOR",14,0)
 . . S (CTR,I)=0,X=""
"RTN","ORWOR",15,0)
 . . F  S I=$O(^OR(100,IEN,1,I)) Q:I<1  D  Q:CTR>244
"RTN","ORWOR",16,0)
 . . . S X=X_$E(^OR(100,IEN,1,I,0),1,(245-CTR)),CTR=$L(X)
"RTN","ORWOR",17,0)
 . . S ^TMP("ORW",$J,IDX+2)=X,IDX=IDX+2
"RTN","ORWOR",18,0)
 ; S LST=$NA(^TMP("ORW",$J))
"RTN","ORWOR",19,0)
 M LST=^TMP("ORW",$J)
"RTN","ORWOR",20,0)
 Q
"RTN","ORWOR",21,0)
DETAIL(LST,ORID,DFN)    ; Return details of ORID (shell to kill VIDEO subs)
"RTN","ORWOR",22,0)
 I $G(DFN) N ORVP S ORVP=DFN_";DPT("
"RTN","ORWOR",23,0)
 D DETAIL^ORQ2(.LST,ORID)
"RTN","ORWOR",24,0)
 K LST("VIDEO")
"RTN","ORWOR",25,0)
 Q
"RTN","ORWOR",26,0)
RESULT(REF,DFN,ORID,ID)      ; Return results of order identified by ID
"RTN","ORWOR",27,0)
 K ^TMP("ORXPND",$J)
"RTN","ORWOR",28,0)
 N ORESULTS,ORVP,LCNT S ORESULTS=1,LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWOR",29,0)
 D ORDERS^ORCXPND1
"RTN","ORWOR",30,0)
 K ^TMP("ORXPND",$J,"VIDEO")
"RTN","ORWOR",31,0)
 S REF=$NA(^TMP("ORXPND",$J))
"RTN","ORWOR",32,0)
 Q
"RTN","ORWOR",33,0)
TSALL(LST)      ; Return list of treating specialties
"RTN","ORWOR",34,0)
 N Y S Y=0
"RTN","ORWOR",35,0)
 F  S Y=$O(^DIC(45.7,Y)) Q:'Y  I $$ACTIVE^DGACT(45.7,Y) S LST(Y)=Y_U_$P(^DIC(45.7,Y,0),U)
"RTN","ORWOR",36,0)
 Q
"RTN","ORWOR",37,0)
DT(X) ; -- Returns FM date for X (SEE ORCHTAB1)
"RTN","ORWOR",38,0)
 N Y,%DT S %DT="T",Y="" D:X'="" ^%DT
"RTN","ORWOR",39,0)
 Q +Y
"RTN","ORWOR",40,0)
VWSET(ANERR,VIEW)       ; Set the preferred view for orders
"RTN","ORWOR",41,0)
 ; VIEW:  semi-colon delimited record
"RTN","ORWOR",42,0)
 ;        1 - Relative From Date/Time or ""
"RTN","ORWOR",43,0)
 ;        2 - Relative Thru Date/Time or ""
"RTN","ORWOR",44,0)
 ;        3 - Filter
"RTN","ORWOR",45,0)
 ;        4 - Display Group Pointer
"RTN","ORWOR",46,0)
 ;        5 - Format (preserve for list manager)
"RTN","ORWOR",47,0)
 ;        6 - chronological display (R or F)
"RTN","ORWOR",48,0)
 ;        7 - sort by display group
"RTN","ORWOR",49,0)
 N FMT
"RTN","ORWOR",50,0)
 ; use short name for display group instead of pointer
"RTN","ORWOR",51,0)
 S $P(VIEW,";",4)=$P($G(^ORD(100.98,+$P(VIEW,";",4),0)),U,3)
"RTN","ORWOR",52,0)
 ; use last saved format, since this is used only by LM
"RTN","ORWOR",53,0)
 S FMT=$P($$GET^XPAR("ALL","ORCH CONTEXT ORDERS",1,"I"),";",5)
"RTN","ORWOR",54,0)
 S:'$L(FMT) FMT="L" S $P(VIEW,";",5)=FMT
"RTN","ORWOR",55,0)
 ; and save the parameter
"RTN","ORWOR",56,0)
 D EN^XPAR(DUZ_";VA(200,","ORCH CONTEXT ORDERS",1,VIEW,.ANERR)
"RTN","ORWOR",57,0)
 Q
"RTN","ORWOR",58,0)
VWGET(REC)      ; Get the preferred view for orders
"RTN","ORWOR",59,0)
 N FROM,THRU,FILTER,DGRP,FRMT,CHRN,BYGRP,S,VNAME,FL
"RTN","ORWOR",60,0)
 S REC=$$GET^XPAR("ALL","ORCH CONTEXT ORDERS",1,"I"),S=";"
"RTN","ORWOR",61,0)
 S FROM=$$DT($P(REC,S)),THRU=$$DT($P(REC,S,2)),FILTER=$P(REC,S,3)
"RTN","ORWOR",62,0)
 S DGRP=$P(REC,S,4),FRMT=$P(REC,S,5),CHRN=$P(REC,S,6),BYGRP=$P(REC,S,7)
"RTN","ORWOR",63,0)
 S:'$L(DGRP) DGRP="ALL" S DGRP=+$O(^ORD(100.98,"B",DGRP,0))
"RTN","ORWOR",64,0)
 I FILTER="" S FILTER=2  ; active orders
"RTN","ORWOR",65,0)
 I CHRN="" S CHRN="R"    ; reverse chronological
"RTN","ORWOR",66,0)
 I BYGRP="" S BYGRP=1    ; sort by display group
"RTN","ORWOR",67,0)
 ; set up view name
"RTN","ORWOR",68,0)
 D REVSTS^ORWORDG(.FL)
"RTN","ORWOR",69,0)
 S I=0 F  S I=$O(FL(I)) Q:'I  Q:+FL(I)=FILTER
"RTN","ORWOR",70,0)
 S VNAME=$P($G(FL(+I)),U,2)
"RTN","ORWOR",71,0)
 I '("^6^8^9^10^19^20^"[(U_FILTER_U)) S VNAME=VNAME_" Orders"
"RTN","ORWOR",72,0)
 I FILTER=2 S VNAME="Active Orders (includes Pending & Recent Activity)"
"RTN","ORWOR",73,0)
 I FILTER=23 S VNAME="Current Orders (Active & Pending Status Only)"
"RTN","ORWOR",74,0)
 S VNAME=VNAME_" - "_$P($G(^ORD(100.98,DGRP,0)),U)
"RTN","ORWOR",75,0)
 I (FROM>0)!(THRU>0) D
"RTN","ORWOR",76,0)
 . S VNAME=VNAME_" ("_$$FMTE^XLFDT(FROM,"2D")_" thru "
"RTN","ORWOR",77,0)
 . S VNAME=VNAME_$S(THRU>0:$$FMTE^XLFDT(THRU,"2D"),1:"")_")"
"RTN","ORWOR",78,0)
 S REC=FROM_S_THRU_S_FILTER_S_DGRP_S_FRMT_S_CHRN_S_BYGRP_S_VNAME
"RTN","ORWOR",79,0)
 Q
"RTN","ORWOR",80,0)
SHEETS(LST,ORVP) ; Return Order Sheets for a patient
"RTN","ORWOR",81,0)
 N ELST,ETYP,ORIFN,TS,I
"RTN","ORWOR",82,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWOR",83,0)
 S ETYP="" F  S ETYP=$O(^OR(100,"AEVNT",ORVP,ETYP)) Q:ETYP=""  D
"RTN","ORWOR",84,0)
 . S ORIFN=0 F  S ORIFN=$O(^OR(100,"AEVNT",ORVP,ETYP,ORIFN)) Q:'ORIFN  D
"RTN","ORWOR",85,0)
 . . I (ETYP="A")!(ETYP="T") S ELST(ETYP,$P($G(^OR(100,+ORIFN,0)),U,13))=""
"RTN","ORWOR",86,0)
 S LST(1)="C;O^Current View",I=1
"RTN","ORWOR",87,0)
 S TS="" F  S TS=$O(ELST("A",TS)) Q:TS=""  D
"RTN","ORWOR",88,0)
 . S I=I+1,LST(I)="A;"_TS_U_"Admit to "_$P($G(^DIC(45.7,TS,0)),U)
"RTN","ORWOR",89,0)
 S I=I+1,LST(I)="A;-1^Admit..."
"RTN","ORWOR",90,0)
 S TS="" F  S TS=$O(ELST("T",TS)) Q:TS=""  D
"RTN","ORWOR",91,0)
 . S I=I+1,LST(I)="T;"_TS_U_"Transfer to "_$P($G(^DIC(45.7,TS,0)),U)
"RTN","ORWOR",92,0)
 I $L($G(^DPT(+ORVP,.1))) D
"RTN","ORWOR",93,0)
 . S I=I+1,LST(I)="T;-1^Transfer..."
"RTN","ORWOR",94,0)
 . S I=I+1,LST(I)="D;0^Discharge"
"RTN","ORWOR",95,0)
 Q
"RTN","ORWOR",96,0)
UNSIGN(LST,ORVP,HAVE)   ; Return Unsigned Orders that are not on client
"RTN","ORWOR",97,0)
 N IFN,ACT,X8,ENT,LVL,TM,ILST S ILST=0
"RTN","ORWOR",98,0)
 Q:'$D(^XUSEC("ORES",DUZ))
"RTN","ORWOR",99,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWOR",100,0)
 S ENT="ALL"_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+^(5),1:"")
"RTN","ORWOR",101,0)
 S LVL=$$GET^XPAR(ENT,"OR UNSIGNED ORDERS ON EXIT")
"RTN","ORWOR",102,0)
 Q:'LVL
"RTN","ORWOR",103,0)
 S TM=0 F  S TM=$O(^OR(100,"AS",ORVP,TM)) Q:TM<1  D
"RTN","ORWOR",104,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AS",ORVP,TM,IFN)) Q:IFN<1  D
"RTN","ORWOR",105,0)
 . . S ACT=0 F  S ACT=$O(^OR(100,"AS",ORVP,TM,IFN,ACT)) Q:ACT<1  D
"RTN","ORWOR",106,0)
 . . . Q:$D(HAVE(IFN_";"_ACT))                        ;in Changes
"RTN","ORWOR",107,0)
 . . . S X8=$G(^OR(100,IFN,8,ACT,0))
"RTN","ORWOR",108,0)
 . . . I '$S(LVL=1&($P(X8,U,3)=DUZ):1,LVL=2:1,1:0) Q  ;chk user
"RTN","ORWOR",109,0)
 . . . S ILST=ILST+1,LST(ILST)=IFN_";"_ACT
"RTN","ORWOR",110,0)
 Q
"RTN","ORWOR",111,0)
PKIUSE(RETURN) ; RPC determines user can use PKI Digital Signature
"RTN","ORWOR",112,0)
 S RETURN=0
"RTN","ORWOR",113,0)
 Q:'$L($T(STORESIG^XUSSPKI))
"RTN","ORWOR",114,0)
 I $$GET^XPAR("ALL^USR.`"_DUZ,"ORWOR PKI USE",1,"Q") S RETURN=1
"RTN","ORWOR",115,0)
 Q
"RTN","ORWOR1")
0^31^B6077117
"RTN","ORWOR1",1,0)
ORWOR1 ; slc/dcm - PKI RPC functions
"RTN","ORWOR1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**132**;Dec 17, 1997
"RTN","ORWOR1",3,0)
SIG(RET,ID,X1,X2,X3,X4,ORX5,X6) ;Store the signature.
"RTN","ORWOR1",4,0)
 ;ID = orifn;action
"RTN","ORWOR1",5,0)
 ;X1 = Hash
"RTN","ORWOR1",6,0)
 ;X2 = Length of the array
"RTN","ORWOR1",7,0)
 ;X3 = Datafile (100)
"RTN","ORWOR1",8,0)
 ;X4 = Provider DUZ
"RTN","ORWOR1",9,0)
 ;ORX5 = Array for the sig
"RTN","ORWOR1",10,0)
 ;X6 = CRLURL
"RTN","ORWOR1",11,0)
 N Y1,ORIFN,ACT
"RTN","ORWOR1",12,0)
 S Y1=$$STORESIG^XUSSPKI(X1,X2,.ORX5,X4,X3)
"RTN","ORWOR1",13,0)
 I +Y1>0,$L($G(X6)) S Y1=$$CRLURL^XUSSPKI(X6)
"RTN","ORWOR1",14,0)
 I +Y1>0 D
"RTN","ORWOR1",15,0)
 . S ORIFN=+ID,ACT=$P(ID,";",2)
"RTN","ORWOR1",16,0)
 . S $P(^OR(100,ORIFN,8,+ACT,2),"^",3)=X1
"RTN","ORWOR1",17,0)
 S RET=Y1
"RTN","ORWOR1",18,0)
 Q
"RTN","ORWOR1",19,0)
CRLURL(RET,X1) ;Store the URL's
"RTN","ORWOR1",20,0)
 S RET=$$CRLURL^XUSSPKI(X1)
"RTN","ORWOR1",21,0)
 Q
"RTN","ORWOR1",22,0)
VERIFY(RET,ORDER)       ;Verify PKI Data
"RTN","ORWOR1",23,0)
 ;ORDER = ORIFN;ACTION - NOTE: if no ACTION then 1 (new order) is assumed
"RTN","ORWOR1",24,0)
 N ORIFN,ORACTION,HASH,DATE
"RTN","ORWOR1",25,0)
 K ^TMP("ORPKIDATA",$J)
"RTN","ORWOR1",26,0)
 I '$G(ORDER) S RET="-1_^No order number passed" Q
"RTN","ORWOR1",27,0)
 S ORIFN=$P(ORDER,";"),ORACTION=$P(ORDER,";",2)
"RTN","ORWOR1",28,0)
 I 'ORACTION S ORACTION=1
"RTN","ORWOR1",29,0)
 I '$D(^OR(100,ORIFN,0)) S RET="-1_^Invalid order number" Q
"RTN","ORWOR1",30,0)
 I '$D(^OR(100,ORIFN,8,ORACTION)) S RET="-1^Invalid order action passed" Q
"RTN","ORWOR1",31,0)
 S HASH=$P($G(^OR(100,ORIFN,8,ORACTION,2)),"^",3)
"RTN","ORWOR1",32,0)
 I '$L(HASH) S RET="-1^Order has no PKI Hash" Q
"RTN","ORWOR1",33,0)
 I '$O(^OR(100,ORIFN,8,ORACTION,.2,0)) S RET="-1^Order has no PKI Data" Q
"RTN","ORWOR1",34,0)
 S DATE=$P($G(^OR(100,ORIFN,8,ORACTION,.2,1,0)),"^")
"RTN","ORWOR1",35,0)
 I '$L(DATE) S RET="-1^No date associated with PKI Data" Q
"RTN","ORWOR1",36,0)
 S DATE=$$HL7TFM^XLFDT(DATE),I=0
"RTN","ORWOR1",37,0)
 F  S I=$O(^OR(100,ORIFN,8,ORACTION,.2,I)) Q:'I  S ^TMP("ORPKIDATA",$J,I)=^(I,0)
"RTN","ORWOR1",38,0)
 S RET=$$VERIFY^XUSSPKI(HASH,$NA(^TMP("ORPKIDATA",$J)),DATE)
"RTN","ORWOR1",39,0)
 Q
"RTN","ORWOR1",40,0)
CHKDIG(REQ,ORDER)       ;Check if Digital Signature is required
"RTN","ORWOR1",41,0)
 N IFN,ACTION
"RTN","ORWOR1",42,0)
 S REQ=0,IFN=+ORDER,ACTION=$P(ORDER,";",2)
"RTN","ORWOR1",43,0)
 I +$P($G(^OR(100,+IFN,8,+ACTION,2)),U,5) S REQ=1
"RTN","ORWOR1",44,0)
 Q
"RTN","ORWOR1",45,0)
GETDTEXT(TEXT,ORDER)    ;Get External Text
"RTN","ORWOR1",46,0)
 N IFN,ACTION
"RTN","ORWOR1",47,0)
 S IFN=+ORDER,ACTION=$P(ORDER,";",2),I=0
"RTN","ORWOR1",48,0)
 F  S I=$O(^OR(100,+IFN,8,+ACTION,.2,I)) Q:'I  S TEXT(I)=^(I,0)
"RTN","ORWOR1",49,0)
 Q
"RTN","ORWOR1",50,0)
GETDSIG(SIG,ORDER)      ;Get Digital Signature
"RTN","ORWOR1",51,0)
 N IFN,ACTION
"RTN","ORWOR1",52,0)
 S SIG=0,IFN=+ORDER,ACTION=$P(ORDER,";",2)
"RTN","ORWOR1",53,0)
 I +$P($G(^OR(100,+IFN,8,+ACTION,2)),U,3) S SIG=$P(^(2),"^",3)
"RTN","ORWOR1",54,0)
 Q
"RTN","ORWORR")
0^18^B57607470
"RTN","ORWORR",1,0)
ORWORR ; SLC/KCM - Retrieve Orders for Broker ;12/11/01  11:15
"RTN","ORWORR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,92,116,110,132**;Dec 17, 1997
"RTN","ORWORR",3,0)
 ;
"RTN","ORWORR",4,0)
 ;
"RTN","ORWORR",5,0)
GET(LST,DFN,FILTER,GROUPS) ; procedure
"RTN","ORWORR",6,0)
 Q  ; don't call until using same treating specialty logic as AGET
"RTN","ORWORR",7,0)
 ;    also until MULT, ORWARD, & ORIGVIEW implemented
"RTN","ORWORR",8,0)
 ;    also until the date ranges are implemented
"RTN","ORWORR",9,0)
 ;
"RTN","ORWORR",10,0)
 ; Get orders for a patient
"RTN","ORWORR",11,0)
 ;        1   2    3     4      5     6   7   8   9   10     11    12    13    14     15     16  17    18
"RTN","ORWORR",12,0)
 ; .LST=~IFN^Grp^ActTm^StrtTm^StopTm^Sts^Sig^Nrs^Clk^PrvID^PrvNam^ActDA^Flag^DCType^ChrtRev^DEA#^VA#^DigSig
"RTN","ORWORR",13,0)
 ; .LST=tOrder Text (repeating as necessary)
"RTN","ORWORR",14,0)
 ;     DFN=Patient ID
"RTN","ORWORR",15,0)
 ;  FILTER=number indicates which orders to return, default=2 (current)
"RTN","ORWORR",16,0)
 ;  GROUPS=display group of orders to show (default=ALL)
"RTN","ORWORR",17,0)
 ;
"RTN","ORWORR",18,0)
 ; -- this section uses ORQ1 to get the orders list rather than XGET --
"RTN","ORWORR",19,0)
 N ORLIST,ORIFN,X0,X3,X8,IDX,IFN,ACT,PRV,LN,TXT,STRT,STOP,CSTS,EYE,DEA ;PKI
"RTN","ORWORR",20,0)
 K ^TMP("ORR",$J)
"RTN","ORWORR",21,0)
 S (IDX,LST)=0 S:'$D(GROUPS) GROUPS=1 S:'$D(FILTER) FILTER=2
"RTN","ORWORR",22,0)
 D EN^ORQ1(DFN_";DPT(",GROUPS,FILTER,"","","",0,1)
"RTN","ORWORR",23,0)
 S EYE=0 F  S EYE=$O(^TMP("ORR",$J,ORLIST,EYE)) Q:'EYE  S IFN=^(EYE) D
"RTN","ORWORR",24,0)
 . S ACT=$P(IFN,";",2),IFN=+IFN,X0=^OR(100,IFN,0),X3=^(3),X8=^(8,ACT,0)
"RTN","ORWORR",25,0)
 . D GETFLDS
"RTN","ORWORR",26,0)
 K ^TMP("ORR",$J)
"RTN","ORWORR",27,0)
 G EXIT
"RTN","ORWORR",28,0)
 ;
"RTN","ORWORR",29,0)
AGET(REF,DFN,FILTER,GROUPS,DTFROM,DTTHRU) ; Get an abbreviated order list for a patient
"RTN","ORWORR",30,0)
 ; returns ^TMP("ORR",$J,ORLIST,n)=IFN^DGrp^ActTm
"RTN","ORWORR",31,0)
 ; see above for input parameters
"RTN","ORWORR",32,0)
 ;
"RTN","ORWORR",33,0)
 ; -- this section uses ORQ1 to get the orders list rather than XGET --
"RTN","ORWORR",34,0)
 N ORLIST,ORIFN,IFN,I,ORWTS,TOT,MULT,ORWARD,TXTVW,ORYD
"RTN","ORWORR",35,0)
 K ^TMP("ORR",$J)
"RTN","ORWORR",36,0)
 S:'$D(GROUPS) GROUPS=1 S:'$D(FILTER) FILTER=2
"RTN","ORWORR",37,0)
 S ORWTS=+$P(FILTER,U,2),FILTER=+FILTER
"RTN","ORWORR",38,0)
 S MULT=$S("^1^6^8^9^10^11^13^14^20^22^"[(U_FILTER_U):1,1:0)
"RTN","ORWORR",39,0)
 I $L($G(^DPT(DFN,.1))) S ORWARD=1 ; should normally be ptr to 42
"RTN","ORWORR",40,0)
 D EN^ORQ1(DFN_";DPT(",GROUPS,FILTER,"",$G(DTFROM),$G(DTTHRU),0,MULT)
"RTN","ORWORR",41,0)
 S TOT=^TMP("ORR",$J,ORLIST,"TOT") K ^TMP("ORR",$J,ORLIST,"TOT")
"RTN","ORWORR",42,0)
 S I=.1 F  S I=$O(^TMP("ORR",$J,ORLIST,I)) Q:'I  S IFN=^(I) D
"RTN","ORWORR",43,0)
 . I ORWTS,(+$P($G(^OR(100,+IFN,0)),U,13)'=ORWTS) K ^TMP("ORR",$J,ORLIST,I) S TOT=TOT-1 Q
"RTN","ORWORR",44,0)
 . S ^TMP("ORR",$J,ORLIST,I)=IFN_U_$P($G(^OR(100,+IFN,0)),U,11)_U_$P($G(^(8,+$P(IFN,";",2),0)),U)
"RTN","ORWORR",45,0)
 S TXTVW=$S(MULT:0,FILTER=2:2,1:1) D:FILTER=2 ORYD^ORDD100
"RTN","ORWORR",46,0)
 S ^TMP("ORR",$J,ORLIST,.1)=TOT_U_TXTVW_U_$G(ORYD,0)
"RTN","ORWORR",47,0)
 S REF=$NA(^TMP("ORR",$J,ORLIST))
"RTN","ORWORR",48,0)
 Q
"RTN","ORWORR",49,0)
 ;
"RTN","ORWORR",50,0)
XGET ; -- this was the retrieval algorithm before all the AC xref changes
"RTN","ORWORR",51,0)
 N X,X0,X3,IDX,IFN,LN,TIME,DGRP,MASK,TXT,ACT,PRV,ID,DEA ;PKI
"RTN","ORWORR",52,0)
 S DFN=DFN_";DPT(",IDX=0,LST=0
"RTN","ORWORR",53,0)
 I '$G(FILTER) S FILTER=2                    ; Default: Current/Active
"RTN","ORWORR",54,0)
 I $D(GROUPS)=1 D
"RTN","ORWORR",55,0)
 . S:'GROUPS GROUPS=$O(^ORD(100.98,"B",GROUPS,0))
"RTN","ORWORR",56,0)
 . D XPND(GROUPS)
"RTN","ORWORR",57,0)
 ;
"RTN","ORWORR",58,0)
 I FILTER=1  D DOALL G EXIT                  ; All
"RTN","ORWORR",59,0)
 I FILTER=2  D DOCUR G EXIT                  ; Current
"RTN","ORWORR",60,0)
 I FILTER=3  S PASS=";1;"                    ; Discontinued
"RTN","ORWORR",61,0)
 I FILTER=4  S PASS=";2;7;"                  ; Comp/Expired
"RTN","ORWORR",62,0)
 I FILTER=5  S PASS=";3;4;5;6;8;9;"          ; Expiring
"RTN","ORWORR",63,0)
 I FILTER=6  S PASS=";1;2;3;4;5;6;7;8;9;11;" ; New Activity
"RTN","ORWORR",64,0)
 I FILTER=7  S PASS=";5;"                    ; Pending
"RTN","ORWORR",65,0)
 I FILTER=8  Q                               ; Expanded
"RTN","ORWORR",66,0)
 I FILTER=9  S PASS=";3;4;5;6;8;9;11;"       ; Unverified by Nurse
"RTN","ORWORR",67,0)
 I FILTER=10 S PASS=";3;4;5;6;8;9;11;"       ; Unverified by Clerk
"RTN","ORWORR",68,0)
 I FILTER=11 S PASS=";3;4;5;6;7;8;11;"       ; Unsigned
"RTN","ORWORR",69,0)
 I FILTER=12 S PASS=";4;"                    ; Flagged
"RTN","ORWORR",70,0)
 I FILTER=13 S PASS=""                       ; Verbal/Phone
"RTN","ORWORR",71,0)
 I FILTER=14 S PASS=""                       ; Verbal/Phone Unsigned
"RTN","ORWORR",72,0)
 D DOGET
"RTN","ORWORR",73,0)
EXIT I LST=0 D
"RTN","ORWORR",74,0)
 . N %,X,%I D NOW^%DTC
"RTN","ORWORR",75,0)
 . S LST(1)="~0^0^"_%_"^^^97",LST(2)="tNo Orders Found."
"RTN","ORWORR",76,0)
 Q
"RTN","ORWORR",77,0)
 ;
"RTN","ORWORR",78,0)
DOGET ; Come here if need to filter the orders 
"RTN","ORWORR",79,0)
 S TIME=0 F  S TIME=$O(^OR(100,"AO",DFN,TIME)) Q:'TIME  D
"RTN","ORWORR",80,0)
 . S DGRP=0 F  S DGRP=$O(^OR(100,"AO",DFN,TIME,DGRP)) Q:'DGRP  D
"RTN","ORWORR",81,0)
 . . I $D(GROUPS)>1 Q:'$D(GROUPS(DGRP))           ;filter by display grp
"RTN","ORWORR",82,0)
 . . S IFN=0 F  S IFN=$O(^OR(100,"AO",DFN,TIME,DGRP,IFN)) Q:'IFN  D
"RTN","ORWORR",83,0)
 . . . S X0=^OR(100,IFN,0),X3=^(3)                ;get main nodes
"RTN","ORWORR",84,0)
 . . . I $P(X3,U,8)!$P(X3,U,9)!($P(X3,U,3)=99) Q  ;skip veil,chld,sts=99
"RTN","ORWORR",85,0)
 . . . I $L(PASS),(PASS'[(";"_$P(X3,U,3)_";")) Q  ;filter by status
"RTN","ORWORR",86,0)
 . . . ; do any other filtering
"RTN","ORWORR",87,0)
 . . . D GETFLDS
"RTN","ORWORR",88,0)
 Q
"RTN","ORWORR",89,0)
DOALL ; Come here if retrieve all orders (no filter by status)
"RTN","ORWORR",90,0)
 S TIME=0 F  S TIME=$O(^OR(100,"AO",DFN,TIME)) Q:'TIME  D
"RTN","ORWORR",91,0)
 . S DGRP=0 F  S DGRP=$O(^OR(100,"AO",DFN,TIME,DGRP)) Q:'DGRP  D
"RTN","ORWORR",92,0)
 . . I $D(GROUPS)>1 Q:'$D(GROUPS(DGRP))           ;filter by display grp
"RTN","ORWORR",93,0)
 . . S IFN=0 F  S IFN=$O(^OR(100,"AO",DFN,TIME,DGRP,IFN)) Q:'IFN  D
"RTN","ORWORR",94,0)
 . . . S X0=^OR(100,IFN,0),X3=^(3)                ;get main nodes
"RTN","ORWORR",95,0)
 . . . I $P(X3,U,8)!$P(X3,U,9)!($P(X3,U,3)=99) Q  ;skip veil,chld,sts=99
"RTN","ORWORR",96,0)
 . . . D GETFLDS
"RTN","ORWORR",97,0)
 Q
"RTN","ORWORR",98,0)
DOCUR ; Come here to retrieve all current orders
"RTN","ORWORR",99,0)
 N AOCTXT,STS,STOP,%
"RTN","ORWORR",100,0)
 S X=-$$GET^XPAR("ALL","ORPF ACTIVE ORDERS CONTEXT HRS")
"RTN","ORWORR",101,0)
 S %H=$H,X=(%H*86400+$P(%H,",",2))+(X*3600),%H=(X\86400)_","_(X#86400)
"RTN","ORWORR",102,0)
 D YMD^%DTC S AOCTXT=X_%
"RTN","ORWORR",103,0)
 S MASK="110000100101110"   ; mask out STS=1,2,7,10,12,13,14
"RTN","ORWORR",104,0)
 S TIME=0 F  S TIME=$O(^OR(100,"AC",DFN,TIME)) Q:'TIME  D
"RTN","ORWORR",105,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AC",DFN,TIME,IFN)) Q:'IFN  D
"RTN","ORWORR",106,0)
 . . ; filter out display groups here
"RTN","ORWORR",107,0)
 . . S ACT=0 F  S ACT=$O(^OR(100,"AC",DFN,TIME,IFN,ACT)) Q:'ACT  D
"RTN","ORWORR",108,0)
 . . . S X0=^OR(100,IFN,0),X3=^(3),X8=^(8,ACT,0)
"RTN","ORWORR",109,0)
 . . . S STS=$P(X3,U,3),STOP=$P(X0,U,9)
"RTN","ORWORR",110,0)
 . . . I $P(X3,U,8)!$P(X3,U,9)!(STS=99) Q
"RTN","ORWORR",111,0)
 . . . I $P(X8,U,15)=13,($P(X8,U)<AOCTXT) D ACKILL Q
"RTN","ORWORR",112,0)
 . . . I $P(X8,U,15)=13!($P(X8,U,15)=""),("RN^XX"[$P(X8,U,2)) D ACKILL Q
"RTN","ORWORR",113,0)
 . . . I $E(MASK,STS),STOP<AOCTXT D ACKILL Q
"RTN","ORWORR",114,0)
 . . . D GETFLDS
"RTN","ORWORR",115,0)
 Q
"RTN","ORWORR",116,0)
ACKILL ; called only from DOCUR - kill AC xref
"RTN","ORWORR",117,0)
 ; K ^OR(100,"AC",DFN,TIME,IFN,ACT)  ; let ORQ1 kill if for now
"RTN","ORWORR",118,0)
 Q
"RTN","ORWORR",119,0)
GET4V11(LST,TXTVW,ORYD,IFNLST) ; get the order fields TEMPORARY
"RTN","ORWORR",120,0)
 G GET41
"RTN","ORWORR",121,0)
GET4LST(LST,IFNLST)     ; get the order fields for a list of orders
"RTN","ORWORR",122,0)
GET41 N ACT,ACTID,IDX,X0,X3,X8,PRV,ID,LN,TXT,STRT,STOP,CSTS,IFN,IFNIDX,ORIGVIEW,DEA ;PKI
"RTN","ORWORR",123,0)
 S (IDX,LST,IFNIDX)=0
"RTN","ORWORR",124,0)
 F  S IFNIDX=$O(IFNLST(IFNIDX)) Q:'IFNIDX  S IFN=IFNLST(IFNIDX) D
"RTN","ORWORR",125,0)
 . S ACT=$S($P(IFN,";",2):$P(IFN,";",2),1:1),IFN=+IFN
"RTN","ORWORR",126,0)
 . S X0=$G(^OR(100,IFN,0)),X3=$G(^(3)),X8=$G(^(8,ACT,0))
"RTN","ORWORR",127,0)
 . D GETFLDS
"RTN","ORWORR",128,0)
 Q
"RTN","ORWORR",129,0)
GETBYIFN(LST,IFN) ; procedure
"RTN","ORWORR",130,0)
 ; get the fields for a single order
"RTN","ORWORR",131,0)
 ; .LST(n)=as described above in GET
"RTN","ORWORR",132,0)
 ;     IFN=internal entry number for order
"RTN","ORWORR",133,0)
 ;
"RTN","ORWORR",134,0)
 I 'IFN Q
"RTN","ORWORR",135,0)
 N ACT,IDX,X0,X3,X8,PRV,ID,LN,TXT,STRT,STOP,CSTS,ACTID,ORIGVIEW,ORYD,TXTVW,DEA ;PKI
"RTN","ORWORR",136,0)
 S IDX=0,LST=0,ORYD=0
"RTN","ORWORR",137,0)
 S X0=$G(^OR(100,+IFN,0)),X3=$G(^(3))
"RTN","ORWORR",138,0)
 S ACT=$S($P(IFN,";",2):$P(IFN,";",2),$P(X3,U,7):$P(X3,U,7),1:1)
"RTN","ORWORR",139,0)
 S IFN=+IFN,X8=$G(^OR(100,IFN,8,ACT,0))
"RTN","ORWORR",140,0)
 ;
"RTN","ORWORR",141,0)
GETFLDS ; used by entry points to place order fields into list
"RTN","ORWORR",142,0)
 ; expects IDX=sequence #, IFN=order, X0=node 0, X3=node 3, LST=results
"RTN","ORWORR",143,0)
 ; LST(IDX)=~IFN^Grp^OrdTm^StrtTm^StopTm^Sts^Sig^Nrs^Clk^PrvID^PrvNam^Act^Flagged[^DCType]^ChartRev^DEA#^VA#^DigSig
"RTN","ORWORR",144,0)
 S PRV=$P(X8,U,5) S:'PRV PRV=$P(X8,U,3) S PRV=PRV_U
"RTN","ORWORR",145,0)
 I PRV S PRV=PRV_$P(^VA(200,+PRV,0),U) S DEA=$S($D(^("PS")):$P(^("PS"),U,2)_U_$P(^("PS"),U,3),1:"")  ; get provider info PKI
"RTN","ORWORR",146,0)
 S IDX=IDX+1,LST=LST+1,ID=IFN_";"_ACT,ACTID=$P(X8,U,2)
"RTN","ORWORR",147,0)
 S CSTS=$S($P(X8,U,15):$P(X8,U,15),1:$P(X3,U,3))
"RTN","ORWORR",148,0)
 I $P(X8,U,15)=10,$P(X3,U,3)=14 S CSTS=14 ;delayed-lapsed order
"RTN","ORWORR",149,0)
 S STRT=$S($P(X3,U,3)=11:$$RSTRT,ACTID="NW"!(ACTID="XX")!(ACTID="RL"):$P(X0,U,8),ACTID="DC":"",1:$P(X8,U)) ;110
"RTN","ORWORR",150,0)
 S STOP=$S($P(X3,U,3)=11:$$RSTOP,ACTID="HD":$P($G(^OR(100,+IFN,8,ACT,2)),U),1:$P(X0,U,9))
"RTN","ORWORR",151,0)
 S LST(IDX)="~"_ID_U_$P(X0,U,11)_U_$P(X8,U)_U_STRT_U_STOP_U_CSTS_U_$P(X8,U,4)_U_$P(X8,U,8)_U_$P(X8,U,10)_U_PRV
"RTN","ORWORR",152,0)
 S $P(LST(IDX),U,13)=+$G(^OR(100,IFN,8,ACT,3))    ; flagged
"RTN","ORWORR",153,0)
 I +$P(X8,U,8) S $P(LST(IDX),U,8)=$$INITIALS^ORCHTAB2(+$P(X8,U,8))    ;nurse
"RTN","ORWORR",154,0)
 I +$P(X8,U,10) S $P(LST(IDX),U,9)=$$INITIALS^ORCHTAB2(+$P(X8,U,10))  ;clerk
"RTN","ORWORR",155,0)
 I +$P(X8,U,18) S $P(LST(IDX),U,15)=$$INITIALS^ORCHTAB2(+$P(X8,U,18)) ;chart review
"RTN","ORWORR",156,0)
 I $L($G(DEA)) S $P(LST(IDX),U,16)=DEA ;PKI- DEA has 2 pieces (DEA#^VA#)
"RTN","ORWORR",157,0)
 I $P($G(^OR(100,IFN,8,ACT,2)),"^",5) S $P(LST(IDX),U,18)=$P(^(2),"^",5)
"RTN","ORWORR",158,0)
 S ORIGVIEW=$S($G(TXTVW)=0:0,$G(TXTVW)=1:1,ORYD=-1:1,'ORYD:1,$P(X8,U)'<ORYD:0,1:1)
"RTN","ORWORR",159,0)
 K TXT D TEXT^ORQ12(.TXT,ID,255)                  ; optimize this later
"RTN","ORWORR",160,0)
 I $O(^OR(100,+IFN,2,0)) S LN=$O(TXT(0)),TXT(LN)="+"_TXT(LN)
"RTN","ORWORR",161,0)
 I $O(^OR(100,+IFN,8,"C","XX",0)) S LN=$O(TXT(0)),TXT(LN)="*"_TXT(LN)
"RTN","ORWORR",162,0)
 S LN=0 F  S LN=$O(TXT(LN)) Q:'LN  S IDX=IDX+1,LST(IDX)="t"_TXT(LN)
"RTN","ORWORR",163,0)
 I $O(^OR(100,+IFN,8,1,.2,0)) S IDX=IDX+1,LST(IDX)="|" D  ;PKI XMLText
"RTN","ORWORR",164,0)
 . S I=0 F  S I=$O(^OR(100,+IFN,8,1,.2,I)) Q:'I  S IDX=IDX+1,LST(IDX)="x"_^(I,0)
"RTN","ORWORR",165,0)
 Q
"RTN","ORWORR",166,0)
RSTRT() ; return start date from responses
"RTN","ORWORR",167,0)
 Q $G(^OR(100,IFN,4.5,+$O(^OR(100,IFN,4.5,"ID","START",0)),1))
"RTN","ORWORR",168,0)
 ;
"RTN","ORWORR",169,0)
RSTOP() ; return stop date from responses
"RTN","ORWORR",170,0)
 Q $G(^OR(100,IFN,4.5,+$O(^OR(100,IFN,4.5,"ID","STOP",0)),1))
"RTN","ORWORR",171,0)
 ;
"RTN","ORWORR",172,0)
GETTXT(LST,IFN)     ; get the text of an order
"RTN","ORWORR",173,0)
 I $L(IFN,";")=1 S IFN=IFN_";1"
"RTN","ORWORR",174,0)
 D TEXT^ORQ12(.LST,IFN,255)
"RTN","ORWORR",175,0)
 Q
"RTN","ORWORR",176,0)
XPND(AGRP) ; procedure
"RTN","ORWORR",177,0)
 ; Expand a display group (GROUPS must be defined outside of call)
"RTN","ORWORR",178,0)
 N I,CHLD
"RTN","ORWORR",179,0)
 S GROUPS(AGRP)=^ORD(100.98,AGRP,0),I=0
"RTN","ORWORR",180,0)
 F  S I=$O(^ORD(100.98,AGRP,1,I)) Q:'I  S CHLD=$P(^(I,0),U) D XPND(CHLD)
"RTN","ORWORR",181,0)
 Q
"RTN","ORWORR",182,0)
GETPKG(Y,IFN) ; get package for an order
"RTN","ORWORR",183,0)
 N ORDERID,PKGID
"RTN","ORWORR",184,0)
 Q:+IFN<1
"RTN","ORWORR",185,0)
 S ORDERID=+IFN,Y=""
"RTN","ORWORR",186,0)
 S PKGID=$P(OR(100,ORDERID,0),U,14)
"RTN","ORWORR",187,0)
 S:PKGID>0 Y=$P(^DIC(9.4,PKGID,0),U,2)
"RTN","ORWORR",188,0)
 Q
"RTN","ORWPCE1")
0^8^B55747636
"RTN","ORWPCE1",1,0)
ORWPCE1 ;SLC/KCM - PCE Calls from CPRS GUI;Feb 04, 2002
"RTN","ORWPCE1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132**;Dec 17, 1997
"RTN","ORWPCE1",3,0)
GETVSIT(VSTR,DFN) ; lookup a visit
"RTN","ORWPCE1",4,0)
 N PKG,SRC,ORPXAPI,OK,ORVISIT
"RTN","ORWPCE1",5,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",6,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",7,0)
 S ORPXAPI("ENCOUNTER",1,"ENC D/T")=$P(VSTR,";",2)
"RTN","ORWPCE1",8,0)
 S ORPXAPI("ENCOUNTER",1,"PATIENT")=DFN
"RTN","ORWPCE1",9,0)
 S ORPXAPI("ENCOUNTER",1,"HOS LOC")=+VSTR
"RTN","ORWPCE1",10,0)
 S ORPXAPI("ENCOUNTER",1,"SERVICE CATEGORY")=$P(VSTR,";",3)
"RTN","ORWPCE1",11,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",12,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORVISIT)
"RTN","ORWPCE1",13,0)
 Q ORVISIT
"RTN","ORWPCE1",14,0)
DQDEL ; background call to DATA2PCE and DELVFILE
"RTN","ORWPCE1",15,0)
 N VISIT,VAL
"RTN","ORWPCE1",16,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",17,0)
 S VISIT=$$GETVSIT(VSTR,DFN)
"RTN","ORWPCE1",18,0)
 S VAL=$$DELVFILE^PXAPI("ALL",VISIT,"","TEXT INTEGRATION UTILITIES")
"RTN","ORWPCE1",19,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",20,0)
 Q
"RTN","ORWPCE1",21,0)
DQSAVE ; Background Call to DATA2PCE
"RTN","ORWPCE1",22,0)
 N PKG,SRC,TYP,CODE,IEN,OK,I,X,ORPXAPI,ORPXDEL
"RTN","ORWPCE1",23,0)
 N CAT,NARR,ROOT,ROOT2,ORAVST
"RTN","ORWPCE1",24,0)
 N PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT,MOD,MODCNT,MODIDX,MODS
"RTN","ORWPCE1",25,0)
 N COM,COMMENT,COMMENTS
"RTN","ORWPCE1",26,0)
 N DFN,PROBLEMS,PXAPREDT
"RTN","ORWPCE1",27,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",28,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",29,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",30,0)
 S (PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT)=0
"RTN","ORWPCE1",31,0)
 S I="" F  S I=$O(PCELIST(I)) Q:'I  S X=PCELIST(I) D
"RTN","ORWPCE1",32,0)
 . S X=PCELIST(I),TYP=$P(X,U),CODE=$P(X,U,2),CAT=$P(X,U,3),NARR=$P(X,U,4)
"RTN","ORWPCE1",33,0)
 . I $E(TYP,1,3)="PRV" D  Q
"RTN","ORWPCE1",34,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",35,0)
 . . S PRV=PRV+1
"RTN","ORWPCE1",36,0)
 . . S ROOT="ORPXAPI(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",37,0)
 . . S ROOT2="ORPXDEL(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",38,0)
 . . I $E(TYP,4)'="-" D
"RTN","ORWPCE1",39,0)
 . . . S @ROOT@("NAME")=CODE
"RTN","ORWPCE1",40,0)
 . . . S @ROOT@("PRIMARY")=$P(X,U,6)
"RTN","ORWPCE1",41,0)
 . . S @ROOT2@("NAME")=CODE
"RTN","ORWPCE1",42,0)
 . . S @ROOT2@("DELETE")=1
"RTN","ORWPCE1",43,0)
 . . S PXAPREDT=1 ;Allow edit of primary flag
"RTN","ORWPCE1",44,0)
 . I TYP="VST" D  Q
"RTN","ORWPCE1",45,0)
 . . S ROOT="ORPXAPI(""ENCOUNTER"",1)"
"RTN","ORWPCE1",46,0)
 . . I CODE="DT" S @ROOT@("ENC D/T")=$P(X,U,3) Q
"RTN","ORWPCE1",47,0)
 . . I CODE="PT" S @ROOT@("PATIENT")=$P(X,U,3),DFN=$P(X,U,3) Q
"RTN","ORWPCE1",48,0)
 . . I CODE="HL" S @ROOT@("HOS LOC")=$P(X,U,3) Q
"RTN","ORWPCE1",49,0)
 . . ;I CODE="PR" S @ROOT@("PARENT")=$P(X,U,3) Q prevents checkout! 
"RTN","ORWPCE1",50,0)
 . . I CODE="VC" S @ROOT@("SERVICE CATEGORY")=$P(X,U,3) Q
"RTN","ORWPCE1",51,0)
 . . I CODE="SC" S @ROOT@("SC")=$P(X,U,3) Q
"RTN","ORWPCE1",52,0)
 . . I CODE="AO" S @ROOT@("AO")=$P(X,U,3) Q
"RTN","ORWPCE1",53,0)
 . . I CODE="IR" S @ROOT@("IR")=$P(X,U,3) Q
"RTN","ORWPCE1",54,0)
 . . I CODE="EC" S @ROOT@("EC")=$P(X,U,3) Q
"RTN","ORWPCE1",55,0)
 . . I CODE="MST" S @ROOT@("MST")=$P(X,U,3) Q
"RTN","ORWPCE1",56,0)
 . . I CODE="HNC" S @ROOT@("HNC")=$P(X,U,3) Q
"RTN","ORWPCE1",57,0)
 . . I CODE="OL" D  Q
"RTN","ORWPCE1",58,0)
 . . . I +$P(X,U,3) S @ROOT@("INSTITUTION")=$P(X,U,3)
"RTN","ORWPCE1",59,0)
 . . . E  I $P(X,U,4)'="",$P(X,U,4)'="0" D
"RTN","ORWPCE1",60,0)
 . . . . I $$PATCH^XPDUTL("PX*1.0*96") S @ROOT@("OUTSIDE LOCATION")=$P(X,U,4)
"RTN","ORWPCE1",61,0)
 . . . . E  S @ROOT@("COMMENT")="OUTSIDE LOCATION:  "_$P(X,U,4)
"RTN","ORWPCE1",62,0)
 . I $E(TYP,1,3)="CPT" D  Q
"RTN","ORWPCE1",63,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",64,0)
 . . S CPT=CPT+1,ROOT="ORPXAPI(""PROCEDURE"","_CPT_")"
"RTN","ORWPCE1",65,0)
 . . S IEN=+$O(^ICPT("B",CODE,0))
"RTN","ORWPCE1",66,0)
 . . S @ROOT@("PROCEDURE")=IEN
"RTN","ORWPCE1",67,0)
 . . I +$P(X,U,9) D
"RTN","ORWPCE1",68,0)
 . . . S MODS=$P(X,U,9),MODCNT=+MODS
"RTN","ORWPCE1",69,0)
 . . . F MODIDX=1:1:MODCNT D
"RTN","ORWPCE1",70,0)
 . . . . S MOD=$P($P(MODS,";",MODIDX+1),"/")
"RTN","ORWPCE1",71,0)
 . . . . S @ROOT@("MODIFIERS",MOD)=""
"RTN","ORWPCE1",72,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",73,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",74,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",75,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",76,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PROCEDURE^"_CPT
"RTN","ORWPCE1",77,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0
"RTN","ORWPCE1",78,0)
 . I $E(TYP,1,3)="POV" D  Q
"RTN","ORWPCE1",79,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",80,0)
 . . S ICD=ICD+1,ROOT="ORPXAPI(""DX/PL"","_ICD_")"
"RTN","ORWPCE1",81,0)
 . . S IEN=+$O(^ICD9("AB",CODE_" ",0))
"RTN","ORWPCE1",82,0)
 . . S @ROOT@("DIAGNOSIS")=IEN
"RTN","ORWPCE1",83,0)
 . . S @ROOT@("PRIMARY")=$P(X,U,5)
"RTN","ORWPCE1",84,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",85,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",86,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",87,0)
 . . I $L($P(X,U,7)),$P(X,U,7)=1 S @ROOT@("PL ADD")=$P(X,U,7),PROBLEMS(ICD)=NARR_U_CODE
"RTN","ORWPCE1",88,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="DX/PL^"_ICD
"RTN","ORWPCE1",89,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",90,0)
 . I $E(TYP,1,3)="IMM" D  Q
"RTN","ORWPCE1",91,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",92,0)
 . . S IMM=IMM+1,ROOT="ORPXAPI(""IMMUNIZATION"","_IMM_")"
"RTN","ORWPCE1",93,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",94,0)
 . . S:$L($P(X,U,5)) @ROOT@("SERIES")=$P(X,U,5)
"RTN","ORWPCE1",95,0)
 . . S:$L($P(X,U,5)) @ROOT@("REACTION")=$P(X,U,7)
"RTN","ORWPCE1",96,0)
 . . S:$L($P(X,U,8)) @ROOT@("CONTRAINDICATED")=$P(X,U,8)
"RTN","ORWPCE1",97,0)
 . . S:$L($P(X,U,9)) @ROOT@("REFUSED")=$P(X,U,9)
"RTN","ORWPCE1",98,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",99,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="IMMUNIZATION^"_IMM
"RTN","ORWPCE1",100,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",101,0)
 . I $E(TYP,1,2)="SK" D  Q
"RTN","ORWPCE1",102,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",103,0)
 . . S SK=SK+1,ROOT="ORPXAPI(""SKIN TEST"","_SK_")"
"RTN","ORWPCE1",104,0)
 . . S @ROOT@("TEST")=CODE
"RTN","ORWPCE1",105,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",106,0)
 . . S:$L($P(X,U,7)) @ROOT@("READING")=$P(X,U,7)
"RTN","ORWPCE1",107,0)
 . . S:$L($P(X,U,8)) @ROOT@("D/T READ")=$P(X,U,8)
"RTN","ORWPCE1",108,0)
 . . S:$L($P(X,U,9)) @ROOT@("EVENT D/T")=$P(X,U,9)
"RTN","ORWPCE1",109,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",110,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="SKIN TEST^"_SK
"RTN","ORWPCE1",111,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",112,0)
 . I $E(TYP,1,3)="PED" D  Q
"RTN","ORWPCE1",113,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",114,0)
 . . S PED=PED+1,ROOT="ORPXAPI(""PATIENT ED"","_PED_")"
"RTN","ORWPCE1",115,0)
 . . S @ROOT@("TOPIC")=CODE
"RTN","ORWPCE1",116,0)
 . . S:$L($P(X,U,5)) @ROOT@("UNDERSTANDING")=$P(X,U,5)
"RTN","ORWPCE1",117,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",118,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PATIENT ED^"_PED
"RTN","ORWPCE1",119,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",120,0)
 . I $E(TYP,1,2)="HF" D  Q
"RTN","ORWPCE1",121,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",122,0)
 . . S HF=HF+1,ROOT="ORPXAPI(""HEALTH FACTOR"","_HF_")"
"RTN","ORWPCE1",123,0)
 . . S @ROOT@("HEALTH FACTOR")=CODE
"RTN","ORWPCE1",124,0)
 . . S:$L($P(X,U,5)) @ROOT@("LEVEL/SEVERITY")=$P(X,U,5)
"RTN","ORWPCE1",125,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",126,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="HEALTH FACTOR^"_HF
"RTN","ORWPCE1",127,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",128,0)
 . I $E(TYP,1,3)="XAM" D  Q
"RTN","ORWPCE1",129,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",130,0)
 . . S XAM=XAM+1,ROOT="ORPXAPI(""EXAM"","_XAM_")"
"RTN","ORWPCE1",131,0)
 . . S @ROOT@("EXAM")=CODE
"RTN","ORWPCE1",132,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",133,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",134,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="EXAM^"_XAM
"RTN","ORWPCE1",135,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",136,0)
 . I $E(TYP,1,3)="TRT" D  Q
"RTN","ORWPCE1",137,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",138,0)
 . . S TRT=TRT+1,ROOT="ORPXAPI(""TREATMENT"","_TRT_")"
"RTN","ORWPCE1",139,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",140,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",141,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",142,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",143,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",144,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="TREATMENT^"_TRT
"RTN","ORWPCE1",145,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0
"RTN","ORWPCE1",146,0)
 . I $E(TYP,1,3)="COM" D  Q
"RTN","ORWPCE1",147,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",148,0)
 . . Q:'$L(CAT)
"RTN","ORWPCE1",149,0)
 . . S COMMENTS(CODE)=$P(X,U,3,999)
"RTN","ORWPCE1",150,0)
 ;Store the comments
"RTN","ORWPCE1",151,0)
 S COM=""
"RTN","ORWPCE1",152,0)
 F  S COM=$O(COMMENT(COM)) Q:COM=""  S:$D(COMMENTS(COM)) ORPXAPI($P(COMMENT(COM),"^",1),$P(COMMENT(COM),"^",2),"COMMENT")=COMMENTS(COM)
"RTN","ORWPCE1",153,0)
 ;
"RTN","ORWPCE1",154,0)
 ;Remove any problems to add that the patient already has as active problems
"RTN","ORWPCE1",155,0)
 I $D(PROBLEMS),$D(DFN) D
"RTN","ORWPCE1",156,0)
 . N ORWPROB,ORPROBIX
"RTN","ORWPCE1",157,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",158,0)
 . D DSELECT^GMPLENFM
"RTN","ORWPCE1",159,0)
 . S ORPROBIX=0
"RTN","ORWPCE1",160,0)
 . F  S ORPROBIX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE1",161,0)
 .. S ORWPROB=$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)
"RTN","ORWPCE1",162,0)
 .. S ORWPROB($S($E(ORWPROB,1)="$":$E(ORWPROB,2,255),1:ORWPROB))=""
"RTN","ORWPCE1",163,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",164,0)
 . Q:'$D(ORWPROB)
"RTN","ORWPCE1",165,0)
 . S ORPROBIX=""
"RTN","ORWPCE1",166,0)
 . F  S ORPROBIX=$O(PROBLEMS(ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE1",167,0)
 .. S:$D(ORWPROB(PROBLEMS(ORPROBIX))) ORPXAPI("DX/PL",ORPROBIX,"PL ADD")=0
"RTN","ORWPCE1",168,0)
 ;
"RTN","ORWPCE1",169,0)
 I $$MDS(.ORPXAPI,$G(ORLOC)) S ORPXAPI("ENCOUNTER",1,"CHECKOUT D/T")=$$NOW^XLFDT
"RTN","ORWPCE1",170,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",171,0)
DATA2PCE ;
"RTN","ORWPCE1",172,0)
 I $G(PXAPREDT) D
"RTN","ORWPCE1",173,0)
 . M ORPXDEL("ENCOUNTER")=ORPXAPI("ENCOUNTER")
"RTN","ORWPCE1",174,0)
 . S OK=$$DATA2PCE^PXAPI("ORPXDEL",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",175,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",176,0)
 I OK>0,+NOTEIEN,+ORAVST D  ; NOTEIEN only set on inpatient encounters
"RTN","ORWPCE1",177,0)
 .N OROK,ORX
"RTN","ORWPCE1",178,0)
 .S ORX(1207)=ORAVST
"RTN","ORWPCE1",179,0)
 .D FILE^TIUSRVP(.OROK,NOTEIEN,.ORX,1)
"RTN","ORWPCE1",180,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",181,0)
 Q
"RTN","ORWPCE1",182,0)
 ;
"RTN","ORWPCE1",183,0)
MDS(X,ORLOC) ; return TRUE if checkout is needed 
"RTN","ORWPCE1",184,0)
 I $$CHKOUT^ORWPCE2(ORLOC) Q 1
"RTN","ORWPCE1",185,0)
 N I,ORAUTO,OROK
"RTN","ORWPCE1",186,0)
 S (OROK,I)=0
"RTN","ORWPCE1",187,0)
 F  S I=$O(X("DX/PL",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",188,0)
 . I $G(X("DX/PL",I,"DIAGNOSIS")) S OROK=1
"RTN","ORWPCE1",189,0)
 I 'OROK D
"RTN","ORWPCE1",190,0)
 .S I=0 F  S I=$O(X("PROCEDURE",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",191,0)
 .. I $G(X("PROCEDURE",I,"PROCEDURE")) S OROK=1
"RTN","ORWPCE1",192,0)
 I $D(X("PROVIDER",1,"NAME")) S OROK=1
"RTN","ORWPCE1",193,0)
 Q OROK
"RTN","ORWPS")
0^9^B13369184
"RTN","ORWPS",1,0)
ORWPS ; SLC/KCM/JLI - Meds Tab;03:34 AM  9 May 1998 ;2/13/02  08:49
"RTN","ORWPS",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132**;Dec 17, 1997
"RTN","ORWPS",3,0)
COVER(LST,DFN)  ; retrieve meds for cover sheet
"RTN","ORWPS",4,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",5,0)
 D OCL^PSOORRL(DFN,"","")
"RTN","ORWPS",6,0)
 N ILST,ITMP,X S ILST=0
"RTN","ORWPS",7,0)
 S ITMP="" F  S ITMP=$O(^TMP("PS",$J,ITMP)) Q:'ITMP  D
"RTN","ORWPS",8,0)
 . S X=^TMP("PS",$J,ITMP,0)
"RTN","ORWPS",9,0)
 . I '$L($P(X,U,2)) S X="??"  ; show something if drug empty
"RTN","ORWPS",10,0)
 . S LST($$NXT)=$P(X,U,1,2)_U_$P(X,U,8,9)
"RTN","ORWPS",11,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",12,0)
 Q
"RTN","ORWPS",13,0)
ACTIVE(LST,DFN) ; retrieve active inpatient & outpatient meds
"RTN","ORWPS",14,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",15,0)
 D OCL^PSOORRL(DFN,"","")
"RTN","ORWPS",16,0)
 N ITMP,FIELDS,INSTRUCT,COMMENTS,TYPE,ILST,J S ILST=0
"RTN","ORWPS",17,0)
 S ITMP="" F  S ITMP=$O(^TMP("PS",$J,ITMP),-1) Q:'ITMP  D
"RTN","ORWPS",18,0)
 . K INSTRUCT,COMMENTS
"RTN","ORWPS",19,0)
 . S (INSTRUCT,COMMENTS)="",FIELDS=^TMP("PS",$J,ITMP,0)
"RTN","ORWPS",20,0)
 . I +$P(FIELDS,"^",8),$D(^OR(100,+$P(FIELDS,"^",8),8,"C","XX")) D
"RTN","ORWPS",21,0)
 . . S $P(^TMP("PS",$J,ITMP,0),"^",2)="*"_$P(^TMP("PS",$J,ITMP,0),"^",2) ;dan testing
"RTN","ORWPS",22,0)
 . S TYPE=$S($P($P(FIELDS,U),";",2)="O":"OP",1:"UD")
"RTN","ORWPS",23,0)
 . I $O(^TMP("PS",$J,ITMP,"A",0))>0 S TYPE="IV"
"RTN","ORWPS",24,0)
 . I $O(^TMP("PS",$J,ITMP,"B",0))>0 S TYPE="IV"
"RTN","ORWPS",25,0)
 . I TYPE="UD" D UDINST(.INSTRUCT,ITMP)
"RTN","ORWPS",26,0)
 . I TYPE="OP" D OPINST(.INSTRUCT,ITMP)
"RTN","ORWPS",27,0)
 . I TYPE="IV" D IVINST(.INSTRUCT,ITMP)
"RTN","ORWPS",28,0)
 . I (TYPE="UD")!(TYPE="IV") D SETMULT(.COMMENTS,ITMP,"SIO")
"RTN","ORWPS",29,0)
 . I $D(COMMENTS(1)) S COMMENTS(1)="\"_COMMENTS(1)
"RTN","ORWPS",30,0)
 . S LST($$NXT)="~"_TYPE_U_FIELDS
"RTN","ORWPS",31,0)
 . S J=0 F  S J=$O(INSTRUCT(J)) Q:'J  S LST($$NXT)=INSTRUCT(J)
"RTN","ORWPS",32,0)
 . S J=0 F  S J=$O(COMMENTS(J)) Q:'J  S LST($$NXT)="t"_COMMENTS(J)
"RTN","ORWPS",33,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",34,0)
 Q
"RTN","ORWPS",35,0)
NXT() ; increment ILST
"RTN","ORWPS",36,0)
 S ILST=ILST+1
"RTN","ORWPS",37,0)
 Q ILST
"RTN","ORWPS",38,0)
 ;
"RTN","ORWPS",39,0)
UDINST(Y,INDEX) ; assembles instructions for a unit dose order
"RTN","ORWPS",40,0)
 N I,X
"RTN","ORWPS",41,0)
 S X=^TMP("PS",$J,INDEX,0)
"RTN","ORWPS",42,0)
 S Y(1)=" "_$P(X,U,2),Y=1
"RTN","ORWPS",43,0)
 S X=$S($L($P(X,U,6)):$P(X,U,6),1:$P(X,U,7))
"RTN","ORWPS",44,0)
 I $L(X) S Y=2,Y(2)=X
"RTN","ORWPS",45,0)
 E  S Y=1 D SETMULT(.Y,INDEX,"SIG")
"RTN","ORWPS",46,0)
 S Y(2)="\Give: "_$G(Y(2)),Y=$G(Y,2)
"RTN","ORWPS",47,0)
 D SETMULT(.Y,INDEX,"MDR"),SETMULT(.Y,INDEX,"SCH")
"RTN","ORWPS",48,0)
 F I=3:1:Y S Y(I)=" "_Y(I)
"RTN","ORWPS",49,0)
 Q
"RTN","ORWPS",50,0)
OPINST(Y,INDEX) ; assembles instructions for an outpatient prescription
"RTN","ORWPS",51,0)
 N I,X
"RTN","ORWPS",52,0)
 S X=^TMP("PS",$J,INDEX,0)
"RTN","ORWPS",53,0)
 S Y(1)=" "_$P(X,U,2),Y=1
"RTN","ORWPS",54,0)
 I $L($P(X,U,12)) S Y(1)=Y(1)_"  Qty: "_$P(X,U,12)
"RTN","ORWPS",55,0)
 I $L($P(X,U,11)) S Y(1)=Y(1)_" for "_$P(X,U,11)_" days"
"RTN","ORWPS",56,0)
 D SETMULT(.Y,INDEX,"SIG")
"RTN","ORWPS",57,0)
 I Y=1 D
"RTN","ORWPS",58,0)
 . D SETMULT(.Y,INDEX,"SIO")
"RTN","ORWPS",59,0)
 . D SETMULT(.Y,INDEX,"MDR")
"RTN","ORWPS",60,0)
 . D SETMULT(.Y,INDEX,"SCH")
"RTN","ORWPS",61,0)
 S Y(2)="\ Sig: "_$G(Y(2))
"RTN","ORWPS",62,0)
 F I=3:1:Y S Y(I)=" "_Y(I)
"RTN","ORWPS",63,0)
 Q
"RTN","ORWPS",64,0)
IVINST(Y,INDEX) ; assembles instructions for an IV order
"RTN","ORWPS",65,0)
 N SOLN1,I
"RTN","ORWPS",66,0)
 S Y=0 D SETMULT(.Y,INDEX,"A") S SOLN1=Y+1
"RTN","ORWPS",67,0)
 D SETMULT(.Y,INDEX,"B") S:$D(Y(SOLN1)) Y(SOLN1)="in "_Y(SOLN1)
"RTN","ORWPS",68,0)
 S SOLN1=Y+1
"RTN","ORWPS",69,0)
 D SETMULT(.Y,INDEX,"SCH") S:$D(Y(SOLN1)) Y(SOLN1)=" "_Y(SOLN1)
"RTN","ORWPS",70,0)
 F I=1:1:Y S Y(I)="\"_$TR(Y(I),U," ")
"RTN","ORWPS",71,0)
 I $D(Y(1)) S Y(1)=" "_$E(Y(1),2,999)
"RTN","ORWPS",72,0)
 S Y(Y)=Y(Y)_" "_$P(^TMP("PS",$J,INDEX,0),U,3)
"RTN","ORWPS",73,0)
 Q
"RTN","ORWPS",74,0)
SETMULT(Y,INDEX,SUB) ; appends the multiple at the subscript to Y
"RTN","ORWPS",75,0)
 N I S I=0 F  S I=$O(^TMP("PS",$J,INDEX,SUB,I)) Q:'I  D
"RTN","ORWPS",76,0)
 . S Y=Y+1,Y(Y)=^TMP("PS",$J,INDEX,SUB,I,0)
"RTN","ORWPS",77,0)
 Q
"RTN","ORWPS",78,0)
COMPRESS(Y) ; concatenate Y subscripts into smallest possible number
"RTN","ORWPS",79,0)
 N I,J,X S J=1,X(J)=""
"RTN","ORWPS",80,0)
 S I=0 F  S I=$O(Y(I)) Q:'I  D
"RTN","ORWPS",81,0)
 . I ($L(Y(I))+$L(X(J)))>245 S J=J+1,X(J)=""
"RTN","ORWPS",82,0)
 . S X(J)=X(J)_$S($L(X(J)):" ",1:"")_Y(I)
"RTN","ORWPS",83,0)
 K Y M Y=X
"RTN","ORWPS",84,0)
 Q
"RTN","ORWPS",85,0)
DETAIL(ROOT,DFN,ID) ; -- show details for a med order
"RTN","ORWPS",86,0)
 N LCNT,ORVP
"RTN","ORWPS",87,0)
 S LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWPS",88,0)
 D MEDS^ORCXPND1
"RTN","ORWPS",89,0)
 S ROOT=$NA(^TMP("ORXPND",$J))
"RTN","ORWPS",90,0)
 Q
"RTN","ORWPS",91,0)
MEDHIST(ORROOT,DFN,ORIFN)       ; -- show admin history for a med  (RV)
"RTN","ORWPS",92,0)
 N ORPSID
"RTN","ORWPS",93,0)
 S ORPSID=+$P($$OI^ORX8(ORIFN),U,3)
"RTN","ORWPS",94,0)
 S ORROOT=$NA(^TMP("ORHIST",$J)) K @ORROOT
"RTN","ORWPS",95,0)
 I $L($T(HISTORY^PSBMLHS)) D HISTORY^PSBMLHS(.ORROOT,DFN,ORPSID)  ; DBIA #3459 for BCMA v2.0
"RTN","ORWPS",96,0)
 I '$L($T(HISTORY^PSBMLHS)) D HISTORY^PSBML(.ORROOT,DFN,ORPSID)   ; DBIA #3448,  for BCMA v1.0
"RTN","ORWPS",97,0)
 Q
"RTN","ORWPT")
0^20^B53687520
"RTN","ORWPT",1,0)
ORWPT ; SLC/KCM/REV - Patient Lookup Functions ;25-JAN-1999 11:26:58 [3/28/02 11:39am]
"RTN","ORWPT",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132**;Dec 17, 1997
"RTN","ORWPT",3,0)
 ;
"RTN","ORWPT",4,0)
IDINFO(REC,DFN) ; Return identifying information for a patient
"RTN","ORWPT",5,0)
 ; PID^DOB^SEX^VET^SC%^WARD^RM-BED^NAME
"RTN","ORWPT",6,0)
 N X0,X1,X101,X3,XV  ; name/dob/sex/ssn, ward, room-bed, sc%, vet
"RTN","ORWPT",7,0)
 S X0=$G(^DPT(DFN,0)),X1=$G(^(.1)),X101=$G(^(.101)),X3=$G(^(.3)),XV=$G(^("VET"))
"RTN","ORWPT",8,0)
 S REC=$$SSN^DPTLK1(DFN)_U_$$DOB^DPTLK1(DFN,2)_U_$P(X0,U,2)_U_$P(XV,U)_U_$P(X3,U,2)_U_$P(X1,U)_U_$P(X101,U)_U_$P(X0,U) ;DG249
"RTN","ORWPT",9,0)
 Q
"RTN","ORWPT",10,0)
PTINQ(REF,DFN) ; Return formatted pt inquiry report
"RTN","ORWPT",11,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",12,0)
 D DGINQ^ORCXPND1(DFN)
"RTN","ORWPT",13,0)
 S REF=$NA(^TMP("ORDATA",$J,1))
"RTN","ORWPT",14,0)
 Q
"RTN","ORWPT",15,0)
SCDIS(LST,DFN) ; Return service connected % and rated disabilities
"RTN","ORWPT",16,0)
 N VAEL,VAERR,I,ILST,DIS,SC,X
"RTN","ORWPT",17,0)
 D ELIG^VADPT
"RTN","ORWPT",18,0)
 S LST(1)="Service Connected: "_$S(+VAEL(3):$P(VAEL(3),U,2)_"%",1:"NO")
"RTN","ORWPT",19,0)
 I 'VAEL(4),'$P($G(^DG(391,+VAEL(6),0)),U,2) S LST(2)="NOT A VETERAN." Q
"RTN","ORWPT",20,0)
 S I=0,ILST=1 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X=^(I,0) D
"RTN","ORWPT",21,0)
 . S DIS=$P($G(^DIC(31,+X,0)),U) Q:DIS=""
"RTN","ORWPT",22,0)
 . S SC=$S($P(X,U,3):"SC",$P(X,U,3)']"":"not specified",1:"NSC")
"RTN","ORWPT",23,0)
 . S ILST=ILST+1,LST(ILST)=DIS_" ("_$P(X,U,2)_"% "_SC_")"
"RTN","ORWPT",24,0)
 I ILST=1 S LST(2)="Rated Disabilities: NONE STATED"
"RTN","ORWPT",25,0)
 Q
"RTN","ORWPT",26,0)
SHOW ; temporary - show patient inquiry screen
"RTN","ORWPT",27,0)
 N I,Y,DIC S DIC=2,DIC(0)="AEMQ" D ^DIC Q:'Y
"RTN","ORWPT",28,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",29,0)
 D DGINQ^ORCXPND1(+Y)
"RTN","ORWPT",30,0)
 S I=0 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:'I  W !,^(I)
"RTN","ORWPT",31,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",32,0)
 Q
"RTN","ORWPT",33,0)
SELCHK(REC,DFN) ; Check for sensitive pt
"RTN","ORWPT",34,0)
 ; SENSITIVE
"RTN","ORWPT",35,0)
 S REC=$$EN1^ORQPT2(DFN)
"RTN","ORWPT",36,0)
 Q
"RTN","ORWPT",37,0)
DIEDON(VAL,DFN) ; Check for a date of death
"RTN","ORWPT",38,0)
 S VAL=+$G(^DPT(DFN,.35))
"RTN","ORWPT",39,0)
 Q
"RTN","ORWPT",40,0)
SELECT(REC,DFN) ; Selects patient & returns key information
"RTN","ORWPT",41,0)
 ;  1    2   3   4    5      6    7    8       9       10      11  12
"RTN","ORWPT",42,0)
 ; NAME^SEX^DOB^SSN^LOCIEN^LOCNM^RMBD^CWAD^SENSITIVE^ADMITTED^CONV^SC^
"RTN","ORWPT",43,0)
 ; 13  14  15  16
"RTN","ORWPT",44,0)
 ; SC%^ICN^AGE^TS
"RTN","ORWPT",45,0)
 N X
"RTN","ORWPT",46,0)
 K ^TMP("ORWPCE",$J) ; delete PCE 'cache' when switching patients
"RTN","ORWPT",47,0)
 S X=^DPT(DFN,0),REC=$P(X,U,1,3)_U_$P(X,U,9)_U_U_$G(^(.1))_U_$G(^(.101))
"RTN","ORWPT",48,0)
 S X=$P(REC,U,6) I $L(X) S $P(REC,U,5)=+$G(^DIC(42,+$O(^DIC(42,"B",X,0)),44))
"RTN","ORWPT",49,0)
 S $P(REC,U,8)=$$CWAD^ORQPT2(DFN)_U_$$EN1^ORQPT2(DFN)
"RTN","ORWPT",50,0)
 ; I $P(REC,U,9) D EN2^ORQPT2(DFN)  ;update DG security log ; DG249
"RTN","ORWPT",51,0)
 S X=$G(^DPT(DFN,.105)) I X S $P(REC,U,10)=$P($G(^DGPM(X,0)),U)
"RTN","ORWPT",52,0)
 S:'$D(IOST) IOST="P-OTHER"
"RTN","ORWPT",53,0)
 S $P(REC,U,11)=$$OTF^OR3CONV(DFN,1)
"RTN","ORWPT",54,0)
 D ELIG^VADPT S $P(REC,U,12)=$G(VAEL(3)) ;two pieces: SC^SC%
"RTN","ORWPT",55,0)
 I $L($T(GETICN^MPIF001)) S X=+$$GETICN^MPIF001(DFN) S:X>0 $P(REC,U,14)=X
"RTN","ORWPT",56,0)
 S $P(REC,U,15)=$$AGE(DFN,$P(REC,U,3))
"RTN","ORWPT",57,0)
 S $P(REC,U,16)=+$G(^DPT(DFN,.103)) ; treating specialty
"RTN","ORWPT",58,0)
 K VAEL,VAERR ;VADPT call to kill?
"RTN","ORWPT",59,0)
 S ^DISV(DUZ,"^DPT(")=DFN
"RTN","ORWPT",60,0)
 Q
"RTN","ORWPT",61,0)
SHARE(VAL,IP,HWND,DFN)   ; Set global to share DFN with other applications
"RTN","ORWPT",62,0)
 K ^TMP("ORWCHART",$J),^TMP("ORECALL",$J),^TMP("ORWORD",$J)
"RTN","ORWPT",63,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","ORWPT",64,0)
 S ^TMP("ORWCHART",$J,IP,HWND)=DFN
"RTN","ORWPT",65,0)
 Q
"RTN","ORWPT",66,0)
BYWARD(LST,WARD)        ; Return a list of patients in a ward
"RTN","ORWPT",67,0)
 N ILST,DFN
"RTN","ORWPT",68,0)
 I +$G(WARD)<1 S LST(1)="^No ward identified" Q
"RTN","ORWPT",69,0)
 S (ILST,DFN)=0
"RTN","ORWPT",70,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;DBIA #36
"RTN","ORWPT",71,0)
 F  S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0  D
"RTN","ORWPT",72,0)
 . S ILST=ILST+1,LST(ILST)=+DFN_U_$P(^DPT(+DFN,0),U)_U_$G(^DPT(+DFN,.101))
"RTN","ORWPT",73,0)
 I ILST<1 S LST(1)="^No patients found."
"RTN","ORWPT",74,0)
 Q
"RTN","ORWPT",75,0)
LAST5(LST,ID) ; Return a list of patients matching A9999 identifiers
"RTN","ORWPT",76,0)
 N I,IEN,XREF
"RTN","ORWPT",77,0)
 S (I,IEN)=0,XREF=$S($L(ID)=5:"BS5",1:"BS")
"RTN","ORWPT",78,0)
 F  S IEN=$O(^DPT(XREF,ID,IEN)) Q:'IEN  D
"RTN","ORWPT",79,0)
 . S I=I+1,LST(I)=IEN_U_$P(^DPT(IEN,0),U)_U_$$DOB^DPTLK1(IEN,2)_U_$$SSN^DPTLK1(IEN)  ; DG249
"RTN","ORWPT",80,0)
 Q
"RTN","ORWPT",81,0)
 ;
"RTN","ORWPT",82,0)
LAST5RPL(LST,ID) ; ; Return list matching A9999 id's, but from RPL only.
"RTN","ORWPT",83,0)
 N ORRPL,ORCNT,ORPT,ORPIEN,ORXREF
"RTN","ORWPT",84,0)
 ; IA ____ allows read access to NEW PERSON file node 101:
"RTN","ORWPT",85,0)
 S ORRPL=$G(^VA(200,DUZ,101))
"RTN","ORWPT",86,0)
 S ORRPL=$P(ORRPL,U,2)
"RTN","ORWPT",87,0)
 I (('ORRPL)!(ORRPL="")) S LST(0)="" Q
"RTN","ORWPT",88,0)
 ;
"RTN","ORWPT",89,0)
 S ORXREF=$S($L(ID)=5:"BS5",1:"BS")
"RTN","ORWPT",90,0)
 S (ORCNT,ORPIEN)=0
"RTN","ORWPT",91,0)
 F  S ORPIEN=$O(^DPT(ORXREF,ID,ORPIEN)) Q:'ORPIEN  D
"RTN","ORWPT",92,0)
 .S ORPT=0
"RTN","ORWPT",93,0)
 .F  S ORPT=$O(^OR(100.21,ORRPL,10,ORPT)) Q:'ORPT  D
"RTN","ORWPT",94,0)
 ..I ORPIEN=+$G(^OR(100.21,ORRPL,10,ORPT,0)) D
"RTN","ORWPT",95,0)
 ...S ORCNT=ORCNT+1
"RTN","ORWPT",96,0)
 ...S LST(ORCNT)=ORPIEN_U_$P(^DPT(ORPIEN,0),U)_U_$$DOB^DPTLK1(ORPIEN,2)_U_$$SSN^DPTLK1(ORPIEN) ; DG249.
"RTN","ORWPT",97,0)
 ;
"RTN","ORWPT",98,0)
 Q
"RTN","ORWPT",99,0)
 ;
"RTN","ORWPT",100,0)
FULLSSN(LST,ID) ; Return a list of patients matching Full SSN entered
"RTN","ORWPT",101,0)
 N I,IEN
"RTN","ORWPT",102,0)
 S (I,IEN)=0
"RTN","ORWPT",103,0)
 F  S IEN=$O(^DPT("SSN",ID,IEN)) Q:'IEN  D
"RTN","ORWPT",104,0)
 . S I=I+1,LST(I)=IEN_U_$P(^DPT(IEN,0),U)_U_$$DOB^DPTLK1(IEN,2)_U_$$SSN^DPTLK1(IEN)  ; DG249
"RTN","ORWPT",105,0)
 Q
"RTN","ORWPT",106,0)
 ;
"RTN","ORWPT",107,0)
FSSNRPL(LST,ID) ; Return list matching Full SSN, but from RPL only.
"RTN","ORWPT",108,0)
 N ORRPL,ORCNT,ORPT,ORLPT,ORPIEN
"RTN","ORWPT",109,0)
 ; IA ____ allows read access to NEW PERSON file node 101:
"RTN","ORWPT",110,0)
 S ORRPL=$G(^VA(200,DUZ,101))
"RTN","ORWPT",111,0)
 S ORRPL=$P(ORRPL,U,2)
"RTN","ORWPT",112,0)
 I (('ORRPL)!(ORRPL="")) S LST(0)="" Q
"RTN","ORWPT",113,0)
 ;
"RTN","ORWPT",114,0)
 S (ORCNT,ORPT)=0
"RTN","ORWPT",115,0)
 F  S ORPT=$O(^DPT("SSN",ID,ORPT)) Q:'ORPT  D
"RTN","ORWPT",116,0)
 .S ORLPT=0
"RTN","ORWPT",117,0)
 .F  S ORLPT=$O(^OR(100.21,ORRPL,10,ORLPT)) Q:'ORLPT  D
"RTN","ORWPT",118,0)
 ..S ORPIEN=+$G(^OR(100.21,ORRPL,10,ORLPT,0))
"RTN","ORWPT",119,0)
 ..I ((ORPIEN<0)!(ORPIEN="")) Q
"RTN","ORWPT",120,0)
 ..I (ORPIEN'=ORPT) Q
"RTN","ORWPT",121,0)
 ..S ORCNT=ORCNT+1
"RTN","ORWPT",122,0)
 ..S LST(ORCNT)=ORPIEN_U_$P(^DPT(ORPIEN,0),U)_U_$$DOB^DPTLK1(ORPIEN,2)_U_$$SSN^DPTLK1(ORPIEN) ; DG249.
"RTN","ORWPT",123,0)
 ;
"RTN","ORWPT",124,0)
 Q
"RTN","ORWPT",125,0)
 ;
"RTN","ORWPT",126,0)
TOP(LST) ; Return top for all patients list (last selected for now)
"RTN","ORWPT",127,0)
 N IEN
"RTN","ORWPT",128,0)
 S IEN=$G(^DISV(DUZ,"^DPT("))
"RTN","ORWPT",129,0)
 I IEN S LST(1)=IEN_U_$P($G(^DPT(IEN,0)),U)
"RTN","ORWPT",130,0)
 Q
"RTN","ORWPT",131,0)
ENCTITL(REC,DFN,LOC,PROV) ; Return external values for encounter
"RTN","ORWPT",132,0)
 ; LOCNAME^LOCABBR^ROOMBED^PROVNAME
"RTN","ORWPT",133,0)
 S $P(REC,U,1)=$P($G(^SC(+LOC,0)),U,1,2)
"RTN","ORWPT",134,0)
 S $P(REC,U,3)=$P($G(^DPT(DFN,.101)),U)
"RTN","ORWPT",135,0)
 S $P(REC,U,4)=$P($G(^VA(200,+PROV,0)),U)
"RTN","ORWPT",136,0)
 Q
"RTN","ORWPT",137,0)
LISTALL(Y,FROM,DIR) ; Return a bolus of patient names
"RTN","ORWPT",138,0)
 N I,IEN,CNT S CNT=44,I=0
"RTN","ORWPT",139,0)
 F  S FROM=$O(^DPT("B",FROM),DIR) Q:FROM=""  D  Q:I=CNT
"RTN","ORWPT",140,0)
 . S IEN=0 F  S IEN=$O(^DPT("B",FROM,IEN)) Q:'IEN  D  Q:I=CNT
"RTN","ORWPT",141,0)
 . . ; S X1=$G(^DPT(IEN,.1))_" "_$G(^DPT(IEN,.101))
"RTN","ORWPT",142,0)
 . . S I=I+1 S Y(I)=IEN_"^"_FROM ;_"^"_X ; _"^"_X1  ;"   ("_X_")"
"RTN","ORWPT",143,0)
 Q
"RTN","ORWPT",144,0)
APPTLST(LST,DFN) ; return a list of appointments
"RTN","ORWPT",145,0)
 ; APPTTIME^LOCIEN^LOCNAME^EXTSTATUS
"RTN","ORWPT",146,0)
 N VASD
"RTN","ORWPT",147,0)
 S VASD("F")=$$HTFM^XLFDT($H-30,1)
"RTN","ORWPT",148,0)
 S VASD("T")=$$HTFM^XLFDT($H+1,1)_".2359"
"RTN","ORWPT",149,0)
 S VASD("W")="123456789"
"RTN","ORWPT",150,0)
 D SDA^VADPT
"RTN","ORWPT",151,0)
 S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","ORWPT",152,0)
 . S LST(I)=$P(^UTILITY("VASD",$J,I,"I"),U,1,2)_U_$P(^("E"),U,2,3)
"RTN","ORWPT",153,0)
 K ^UTILITY("VASD",$J)
"RTN","ORWPT",154,0)
 Q
"RTN","ORWPT",155,0)
ADMITLST(LST,DFN) ; return a list of admissions
"RTN","ORWPT",156,0)
 ; MOVETIME^LOCIEN^LOCNAME^TYPE
"RTN","ORWPT",157,0)
 N TIM,MOV,X0,Y,MTIM,XTYP,XLOC,HLOC,ILST S ILST=0
"RTN","ORWPT",158,0)
 S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D
"RTN","ORWPT",159,0)
 . S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D
"RTN","ORWPT",160,0)
 . . N VSTR,TIUDA
"RTN","ORWPT",161,0)
 . . S X0=$G(^DGPM(MOV,0)) I X0']"" Q
"RTN","ORWPT",162,0)
 . . S MTIM=$P(X0,U)
"RTN","ORWPT",163,0)
 . . S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","ORWPT",164,0)
 . . S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","ORWPT",165,0)
 . . S VSTR=HLOC_";"_MTIM_";H",TIUDA=$$HASDS^TIULX(DFN,VSTR)
"RTN","ORWPT",166,0)
 . . S ILST=ILST+1,LST(ILST)=MTIM_U_HLOC_U_XLOC_U_XTYP_U_MOV_U_TIUDA
"RTN","ORWPT",167,0)
 Q
"RTN","ORWPT",168,0)
CLINRNG(LST) ; return date ranges for clinic appointments
"RTN","ORWPT",169,0)
 S LST(1)="T;T^Today"
"RTN","ORWPT",170,0)
 S LST(2)="T+1;T+1^Tomorrow"
"RTN","ORWPT",171,0)
 S LST(3)="T-1;T-1^Yesterday"
"RTN","ORWPT",172,0)
 S LST(4)="T-7;T^Past Week"
"RTN","ORWPT",173,0)
 S LST(5)="T-31;T^Past Month"
"RTN","ORWPT",174,0)
 S LST(6)="S^Specify Date Range..."
"RTN","ORWPT",175,0)
 Q
"RTN","ORWPT",176,0)
 ;
"RTN","ORWPT",177,0)
 N %,%H,X,SUNDAY,START
"RTN","ORWPT",178,0)
 S LST(1)=DT_";"_DT_"^Today",X=$$HTFM^XLFDT($H+1,1)
"RTN","ORWPT",179,0)
 S LST(2)=X_";"_X_"^Tomorrow"
"RTN","ORWPT",180,0)
 S X=+$H F  Q:X#7=3  S X=X-1                        ; $H#7=3 is Sunday
"RTN","ORWPT",181,0)
 S LST(3)=$$HTFM^XLFDT(X)_";"_$$HTFM^XLFDT(X+6)_"^This Week"
"RTN","ORWPT",182,0)
 S LST(4)=$$HTFM^XLFDT(X+7)_";"_$$HTFM^XLFDT(X+13)_"^Next Week"
"RTN","ORWPT",183,0)
 S LST(5)=$E(DT,1,5)_"01;"_$E(DT,1,5)_"31^This Month"
"RTN","ORWPT",184,0)
 S X=$E(DT,4,5)+1 S:X=13 X=1 S X=$E(DT,1,3)_$TR($J(X,2)," ",0)
"RTN","ORWPT",185,0)
 S LST(6)=X_"01;"_X_"31^Next Month"
"RTN","ORWPT",186,0)
 S LST(7)="^Specify Dates"
"RTN","ORWPT",187,0)
 Q
"RTN","ORWPT",188,0)
DFLTSRC(VAL) ; return default patient list source (T, W, C, P, S)
"RTN","ORWPT",189,0)
 N SRV S SRV=+$G(^VA(200,DUZ,5))
"RTN","ORWPT",190,0)
 S VAL=$$GET^XPAR("ALL^SRV.`"_SRV,"ORLP DEFAULT LIST SOURCE")
"RTN","ORWPT",191,0)
 Q
"RTN","ORWPT",192,0)
SAVDFLT(OK,X) ; save new default patient list settings (X=type^ien^sdt;edt)
"RTN","ORWPT",193,0)
 G SAVDFLT^ORWPT1
"RTN","ORWPT",194,0)
 ;
"RTN","ORWPT",195,0)
DISCHRG(Y,DFN,ADMITDT) ; Get discharge movement information
"RTN","ORWPT",196,0)
 N VAIP
"RTN","ORWPT",197,0)
 I +$G(ADMITDT)=0 S Y=DT Q
"RTN","ORWPT",198,0)
 S VAIP("D")=ADMITDT D 52^VADPT
"RTN","ORWPT",199,0)
 I +VAIP(17)=0 S Y=DT Q
"RTN","ORWPT",200,0)
 S Y=+VAIP(17,1)
"RTN","ORWPT",201,0)
 Q
"RTN","ORWPT",202,0)
CWAD(Y,DFN) ;  returns CWAD flags for a patient
"RTN","ORWPT",203,0)
 S Y=$$CWAD^ORQPT2(DFN)
"RTN","ORWPT",204,0)
 Q
"RTN","ORWPT",205,0)
LEGACY(ORLST,DFN) ; return message if data on the legacy system
"RTN","ORWPT",206,0)
 ; ORLST(0)=1 if data,  ORLST(n)=display message if data
"RTN","ORWPT",207,0)
 S ORLST(0)=0
"RTN","ORWPT",208,0)
 I $L($T(HXDATA^A7RDPAGU)) D
"RTN","ORWPT",209,0)
 . D HXDATA^A7RDPAGU(.ORLST,DFN)
"RTN","ORWPT",210,0)
 . I $O(ORLST(0)) S ORLST(0)=1
"RTN","ORWPT",211,0)
 Q
"RTN","ORWPT",212,0)
INPLOC(REC,DFN) ; Return a patient's current location
"RTN","ORWPT",213,0)
 N X
"RTN","ORWPT",214,0)
 S X=$G(^DPT(DFN,.102)),REC=0
"RTN","ORWPT",215,0)
 I X S X=$P($G(^DGPM(X,0)),U,6)
"RTN","ORWPT",216,0)
 I X S REC=+$G(^DIC(42,X,44))
"RTN","ORWPT",217,0)
 I X S $P(REC,U,2)=$P($G(^DIC(42,X,0)),U,1)
"RTN","ORWPT",218,0)
 I X S X=$P($G(^DIC(42,X,0)),U,3)
"RTN","ORWPT",219,0)
 S $P(REC,U,3)=X
"RTN","ORWPT",220,0)
 Q
"RTN","ORWPT",221,0)
AGE(DFN,BEG) ; returns age based on date of birth and date of death (or DT)
"RTN","ORWPT",222,0)
 N END,X
"RTN","ORWPT",223,0)
 S END=+$G(^DPT(DFN,.35)),END=$S(END:END,1:DT)
"RTN","ORWPT",224,0)
 S X=$E(END,1,3)-$E(BEG,1,3)-($E(END,4,7)<$E(BEG,4,7))
"RTN","ORWPT",225,0)
 Q X
"RTN","ORWRA")
0^25^B5834923
"RTN","ORWRA",1,0)
ORWRA ; ALB/MJK/REV -Imaging Calls ;2/1/02  12:20
"RTN","ORWRA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,135,132**;Dec 17, 1997
"RTN","ORWRA",3,0)
EXAMS(ROOT,DFN) ; Return imaging exams
"RTN","ORWRA",4,0)
 ; RPC: ORWRA IMAGING EXAMS
"RTN","ORWRA",5,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRA",6,0)
 D GET(0)
"RTN","ORWRA",7,0)
 Q
"RTN","ORWRA",8,0)
EXAMS1(ROOT,DFN) ; Return imaging exams
"RTN","ORWRA",9,0)
 ; RPC: ORWRA IMAGING EXAMS
"RTN","ORWRA",10,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRA",11,0)
 D GET(1)
"RTN","ORWRA",12,0)
 Q
"RTN","ORWRA",13,0)
GET(GSITE)      ;Get the data
"RTN","ORWRA",14,0)
 N I,ID,RADATA,STRING,SITE
"RTN","ORWRA",15,0)
 S RADATA=$NA(^TMP($J,"RAE1",DFN))
"RTN","ORWRA",16,0)
 S ROOT=$NA(^TMP($J,"ORAEXAMS"))
"RTN","ORWRA",17,0)
 K @RADATA,@ROOT
"RTN","ORWRA",18,0)
 ;
"RTN","ORWRA",19,0)
 ; -- set date range
"RTN","ORWRA",20,0)
 D GETDEF(.STRING)
"RTN","ORWRA",21,0)
 D EN1^RAO7PC1(DFN,$P(STRING,U),$P(STRING,"^",2),$P(STRING,"^",3))
"RTN","ORWRA",22,0)
 ;
"RTN","ORWRA",23,0)
 ; -- reformat data array for rpc
"RTN","ORWRA",24,0)
 S I=0,ID="",SITE=""
"RTN","ORWRA",25,0)
 I $G(GSITE) S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",2)_";"_$P(SITE,"^",3)_U
"RTN","ORWRA",26,0)
 F  S ID=$O(@RADATA@(ID)) Q:ID=""  D
"RTN","ORWRA",27,0)
 . S I=I+1
"RTN","ORWRA",28,0)
 . S @ROOT@(I)=SITE_ID_U_(9999999.9999-ID)_U_@RADATA@(ID)
"RTN","ORWRA",29,0)
 K @RADATA
"RTN","ORWRA",30,0)
 Q
"RTN","ORWRA",31,0)
 ;
"RTN","ORWRA",32,0)
GETDEF(Y) ; -- get default context settings for LM imaging reports
"RTN","ORWRA",33,0)
 N BEG,CONTEXT,END,MAX
"RTN","ORWRA",34,0)
 S CONTEXT=$$GET^XPAR("ALL","ORCH CONTEXT REPORTS")
"RTN","ORWRA",35,0)
 S BEG=$$DT^ORCHTAB1($P(CONTEXT,";"))
"RTN","ORWRA",36,0)
 S END=$$DT^ORCHTAB1($P(CONTEXT,";",2))
"RTN","ORWRA",37,0)
 S MAX=$P(CONTEXT,";",5)
"RTN","ORWRA",38,0)
 D OP^XQCHK
"RTN","ORWRA",39,0)
 I $P($G(XQCY0),"^",1)="DVBA CAPRI GUI" D
"RTN","ORWRA",40,0)
 .S BEG=$$DT^ORCHTAB1("T-36500")
"RTN","ORWRA",41,0)
 .S END=$$DT^ORCHTAB1("T")
"RTN","ORWRA",42,0)
 .S MAX="9999"
"RTN","ORWRA",43,0)
 S Y=BEG_"^"_END_"^"_MAX
"RTN","ORWRA",44,0)
 Q
"RTN","ORWRA",45,0)
 ;
"RTN","ORWRA",46,0)
RPT1(ROOT,DFN,ORID,ALPHA,OMEGA,DTRANGE,REMOTE,ORMAX) ; -- return imaging report
"RTN","ORWRA",47,0)
 D RPT(.ROOT,.DFN,.ORID,.ALPHA,.OMEGA,.DTRANGE,.REMOTE)
"RTN","ORWRA",48,0)
 Q
"RTN","ORWRA",49,0)
RPT(ROOT,DFN,ORID,ALPHA,OMEGA,DTRANGE,REMOTE) ; -- return imaging report
"RTN","ORWRA",50,0)
 ;  RPC: ORWRA REPORT TEXT
"RTN","ORWRA",51,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRA",52,0)
 ; -- init locals and globals
"RTN","ORWRA",53,0)
 N ID,LCNT,ORVP,EXAMDATE,CASENMBR
"RTN","ORWRA",54,0)
 S RADATA=$NA(^TMP($J,"RAE3"))
"RTN","ORWRA",55,0)
 S ROOT=$NA(^TMP("ORXPND",$J))
"RTN","ORWRA",56,0)
 K @RADATA,@ROOT
"RTN","ORWRA",57,0)
 ; 
"RTN","ORWRA",58,0)
 ; -- set up exam id and call to get report text
"RTN","ORWRA",59,0)
 S ID=$TR(ORID,"-",U)
"RTN","ORWRA",60,0)
 ;
"RTN","ORWRA",61,0)
 ; -- set up counter and vp local for dfn for formating call
"RTN","ORWRA",62,0)
 S LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWRA",63,0)
 D XRAYS^ORCXPND1
"RTN","ORWRA",64,0)
 K @RADATA
"RTN","ORWRA",65,0)
 Q
"RTN","ORWRA",66,0)
 ;
"RTN","ORWRA",67,0)
TEST ; -- test to get exam list
"RTN","ORWRA",68,0)
 N I,ROOT,DFN
"RTN","ORWRA",69,0)
 S DFN=16
"RTN","ORWRA",70,0)
 D EXAMS1(.ROOT,DFN)
"RTN","ORWRA",71,0)
 W !,"Root: ",ROOT
"RTN","ORWRA",72,0)
 S I=0 F  S I=$O(@ROOT@(I)) Q:'I  W !,@ROOT@(I)
"RTN","ORWRA",73,0)
 Q
"RTN","ORWRA",74,0)
 ;
"RTN","ORWRA",75,0)
TEST1 ; -- test to print reprt for first 3 exams
"RTN","ORWRA",76,0)
 N ORI,ROOT,ROOT1,L,X,DFN
"RTN","ORWRA",77,0)
 S DFN=16
"RTN","ORWRA",78,0)
 D EXAMS1(.ROOT,DFN)
"RTN","ORWRA",79,0)
 S ORI=0 F  S ORI=$O(@ROOT@(ORI)) Q:'ORI  D  Q:ORI=3
"RTN","ORWRA",80,0)
 . S X=@ROOT@(ORI)
"RTN","ORWRA",81,0)
 . D RPT1(.ROOT1,DFN,$P(X,U))
"RTN","ORWRA",82,0)
 . S L=0 F  S L=$O(@ROOT1@(L)) Q:'L  W !,@ROOT1@(L,0)
"RTN","ORWRA",83,0)
 Q
"RTN","ORWRP")
0^5^B73930017
"RTN","ORWRP",1,0)
ORWRP ; ALB/MJK,dcm Report Calls ; 08 Feb 2001  09:02AM
"RTN","ORWRP",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**1,10,85,109,132**;Dec 17, 1997
"RTN","ORWRP",3,0)
 ;
"RTN","ORWRP",4,0)
LABLIST(LST) ; -- return report lists for labs tab
"RTN","ORWRP",5,0)
 ;  RPC: ORWRP LAB REPORT LIST
"RTN","ORWRP",6,0)
 N I,J,X,X0,X2,CNT,EOF,IFN,ROOT,RPC,LIST,HEAD
"RTN","ORWRP",7,0)
 S EOF="$$END",ROOT=$NA(LST),(CNT,I)=0
"RTN","ORWRP",8,0)
 D SETITEM(ROOT,"[LAB REPORT LIST]")
"RTN","ORWRP",9,0)
 D GETLST^XPAR(.LIST,"ALL","ORWRP REPORT LAB LIST")
"RTN","ORWRP",10,0)
 F  S I=$O(LIST(I)) Q:'I  Q:'$D(^ORD(101.24,$P(LIST(I),"^",2),0))  S X0=^(0),X2=$G(^(2)) D
"RTN","ORWRP",11,0)
 . Q:$P(X0,"^",12)="L"
"RTN","ORWRP",12,0)
 . S RPC=$P($G(^XWB(8994,+$P(X0,"^",13),0)),"^"),IFN=LIST(I)
"RTN","ORWRP",13,0)
 . S HEAD=$P(X0,"^") I $L($P(X2,"^",3)) S HEAD=$P(X2,"^",3)
"RTN","ORWRP",14,0)
 . S X=$P(X0,"^",2)_"^"_HEAD_"^"_$P(X0,"^",3)_"^"_$P(X0,"^",12)_"^"_$P(X0,"^",7)_"^"_RPC_"^"_IFN
"RTN","ORWRP",15,0)
 . D SETITEM(.ROOT,X)
"RTN","ORWRP",16,0)
 D SETITEM(.ROOT,"$$END")
"RTN","ORWRP",17,0)
 Q
"RTN","ORWRP",18,0)
LIST(LST) ; -- return report lists for reports tab
"RTN","ORWRP",19,0)
 ;  RPC: ORWRP REPORT LIST
"RTN","ORWRP",20,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRP",21,0)
 N EOF,ROOT
"RTN","ORWRP",22,0)
 S EOF="$$END",ROOT=$NA(LST)   ;,ROOT=$NA(^TMP($J,"ORPTLIST"))
"RTN","ORWRP",23,0)
 K @ROOT
"RTN","ORWRP",24,0)
 D GETRPTS(.ROOT,.EOF) ; -- get list of reports
"RTN","ORWRP",25,0)
 D GETHS(.ROOT,.EOF) ; -- get list of health summary types
"RTN","ORWRP",26,0)
 D GETDT(.ROOT,.EOF) ; -- get list of date ranges
"RTN","ORWRP",27,0)
 Q
"RTN","ORWRP",28,0)
GETCOL(ROOT,IFN) ; -- get Column headers for ListView
"RTN","ORWRP",29,0)
 N I,J,X,VAL
"RTN","ORWRP",30,0)
 Q:'$G(IFN)
"RTN","ORWRP",31,0)
 S I=0,ROOT=$NA(ROOT)
"RTN","ORWRP",32,0)
 F  S I=$O(^ORD(101.24,IFN,3,"C",I)) Q:'I  D
"RTN","ORWRP",33,0)
 . S VAL=$$GET^XPAR(DUZ_";VA(200,","ORWCH COLUMNS REPORTS",IFN,"I")
"RTN","ORWRP",34,0)
 . S J=0 F  S J=$O(^ORD(101.24,IFN,3,"C",I,J)) Q:'J  I $D(^ORD(101.24,IFN,3,J)) S X=^(J,0) D
"RTN","ORWRP",35,0)
 .. I $L(VAL),$P(VAL,",",I) S $P(X,"^",10)=$P(VAL,",",I) ;Column width value
"RTN","ORWRP",36,0)
 .. D SETITEM(.ROOT,X)
"RTN","ORWRP",37,0)
 Q
"RTN","ORWRP",38,0)
GETRPTS(ROOT,EOF) ;  -- get list of reports
"RTN","ORWRP",39,0)
 N I,J,X,X0,X2,CNT,IFN,LIST,HEAD
"RTN","ORWRP",40,0)
 D SETITEM(.ROOT,"[REPORT LIST]")
"RTN","ORWRP",41,0)
 D GETLST^XPAR(.LIST,"ALL","ORWRP REPORT LIST")
"RTN","ORWRP",42,0)
 S (CNT,I)=0
"RTN","ORWRP",43,0)
 F  S I=$O(LIST(I)) Q:'I  Q:'$D(^ORD(101.24,$P(LIST(I),"^",2),0))  S X0=^(0),X2=$G(^(2)) D
"RTN","ORWRP",44,0)
 . Q:$P(X0,"^",12)="L"
"RTN","ORWRP",45,0)
 . S RPC=$P($G(^XWB(8994,+$P(X0,"^",13),0)),"^"),IFN=LIST(I)
"RTN","ORWRP",46,0)
 . S HEAD=$P(X0,"^") I $L($P(X2,"^",3)) S HEAD=$P(X2,"^",3)
"RTN","ORWRP",47,0)
 . S X=$P(X0,"^",2)_"^"_HEAD_"^"_$P(X0,"^",4)_"^"_$P(X0,"^",19)_";"_$P(X0,"^",20)_"^"_$P(X0,"^",6)_"^"_$P(X0,"^",5)_"^"_$P(X0,"^",3)_"^"_$P(X0,"^",12)_"^"_$P(X0,"^",7)_"^"_RPC_"^"_IFN
"RTN","ORWRP",48,0)
 . D SETITEM(.ROOT,X)
"RTN","ORWRP",49,0)
 D SETITEM(.ROOT,"$$END")
"RTN","ORWRP",50,0)
 Q
"RTN","ORWRP",51,0)
GETHS(ROOT,EOF) ; --get list of health summary types
"RTN","ORWRP",52,0)
 N C,I,ORHSPARM
"RTN","ORWRP",53,0)
 I $$GET^XPAR("ALL","ORWRP HEALTH SUMMARY LIST ALL",1) S I="",C=0 D
"RTN","ORWRP",54,0)
 . F  S I=$O(^GMT(142,"B",I)) Q:I=""  S C=C+1,ORHSPARM(C)=$O(^(I,0))_"^"_I_"^^^^^1" I I="GMTS HS ADHOC OPTION" S ORHSPARM(C)="0^GMTS Adhoc Report"
"RTN","ORWRP",55,0)
 I '$$GET^XPAR("ALL","ORWRP HEALTH SUMMARY LIST ALL",1) D
"RTN","ORWRP",56,0)
 . D:$L($T(GETLIST^GMTSXAL)) GETLIST^GMTSXAL(.ORHSPARM,$G(DUZ))
"RTN","ORWRP",57,0)
 . D:'$L($T(GETLIST^GMTSXAL)) GETLST^XPAR(.ORHSPARM,"ALL","ORWRP HEALTH SUMMARY TYPE LIST","N")
"RTN","ORWRP",58,0)
 . S I=0 F  S I=$O(ORHSPARM(I)) Q:'I  S ORHSPARM(I)=ORHSPARM(I)_"^^^^^1" I $P(ORHSPARM(I),"^",2)="GMTS HS ADHOC OPTION" S ORHSPARM(I)="0^Adhoc Report"
"RTN","ORWRP",59,0)
 D SETITEM(.ROOT,"[HEALTH SUMMARY TYPES]")
"RTN","ORWRP",60,0)
 S I=0  F  S I=$O(ORHSPARM(I)) Q:'I  D SETITEM(.ROOT,"h"_ORHSPARM(I))
"RTN","ORWRP",61,0)
 D SETITEM(.ROOT,EOF)
"RTN","ORWRP",62,0)
 Q
"RTN","ORWRP",63,0)
GETDT(ROOT,EOF) ; -- get date range choices
"RTN","ORWRP",64,0)
 N I,X
"RTN","ORWRP",65,0)
 D SETITEM(.ROOT,"[DATE RANGES]")
"RTN","ORWRP",66,0)
 F I=2:1 S X=$P($T(DTLIST+I),";",3) Q:X=EOF  D SETITEM(.ROOT,"d"_X)
"RTN","ORWRP",67,0)
 Q
"RTN","ORWRP",68,0)
DTLIST ; -- list of date ranges
"RTN","ORWRP",69,0)
 ;<number of days>^ <display text>
"RTN","ORWRP",70,0)
 ;;S^Date Range...
"RTN","ORWRP",71,0)
 ;;0^Today
"RTN","ORWRP",72,0)
 ;;7^One Week Back
"RTN","ORWRP",73,0)
 ;;14^Two Weeks Back
"RTN","ORWRP",74,0)
 ;;30^One Month Back
"RTN","ORWRP",75,0)
 ;;180^Six Months Back
"RTN","ORWRP",76,0)
 ;;365^One Year Back
"RTN","ORWRP",77,0)
 ;;$$END
"RTN","ORWRP",78,0)
 ;
"RTN","ORWRP",79,0)
SETITEM(ROOT,X) ; -- set item in list
"RTN","ORWRP",80,0)
 S @ROOT@($O(@ROOT@(9999),-1)+1)=X
"RTN","ORWRP",81,0)
 Q
"RTN","ORWRP",82,0)
RPT(ROOT,DFN,RPTID,HSTYPE,DTRANGE,EXAMID,ALPHA,OMEGA) ; -- return report text
"RTN","ORWRP",83,0)
 ;ROOT=Output is found in ^TMP("ORDATA",$J)
"RTN","ORWRP",84,0)
 ;DFN=Patient DFN ; ICN for foriegn sites
"RTN","ORWRP",85,0)
 ;RPTID=Unique identifier for the report_";"_Remote Identifier_"~"_HSComponent for listview (ent;rtn;0;MaxOcc) or text (ent;rtn;#component;MaxOcc)
"RTN","ORWRP",86,0)
 ;HSTYPE=Health Summary Type
"RTN","ORWRP",87,0)
 ;DTRANGE=# of days to go back from today
"RTN","ORWRP",88,0)
 ;EXAMID=Radiology exam ID
"RTN","ORWRP",89,0)
 ;ALPHA=Start date for report (used in lieu of DTRANGE)
"RTN","ORWRP",90,0)
 ;OMEGA=End date for report (used in lieu of DTRANGE)
"RTN","ORWRP",91,0)
 ;  RPC: ORWRP REPORT TEXT
"RTN","ORWRP",92,0)
 ;
"RTN","ORWRP",93,0)
 N X,X0,X2,X4,I,J,ENT,RTN,ID,REMOTE,GO,OUT,MAX,SITE
"RTN","ORWRP",94,0)
 K ^TMP("ORDATA",$J)
"RTN","ORWRP",95,0)
 S HSTAG=$P($G(RPTID),"~",2),RPTID=$P($G(RPTID),"~")
"RTN","ORWRP",96,0)
 S RPTID=$P($G(RPTID),"~")
"RTN","ORWRP",97,0)
 S ROOT=$NA(^TMP("ORDATA",$J,1)),REMOTE=+$P(RPTID,";",2),RPTID=$P($P(RPTID,";"),":")
"RTN","ORWRP",98,0)
 I 'REMOTE S DFN=+DFN ;DFN = DFN;ICN for remote calls
"RTN","ORWRP",99,0)
 S I=0,X0="",X2="",X4="",SITE=$$SITE^VASITE,SITE=$P(SITE,"^",2)_";"_$P(SITE,"^",3)
"RTN","ORWRP",100,0)
 F  S I=$O(^ORD(101.24,"AC",I)) Q:I=""  S J=0 F  S J=$O(^ORD(101.24,"AC",I,J)) Q:'J  D
"RTN","ORWRP",101,0)
 . I $P($G(^ORD(101.24,J,0)),"^",2)=RPTID,$P(^(0),"^",8)="R" S X0=^(0),X2=$G(^(2)),X4=$P($G(^(4)),"^",2)
"RTN","ORWRP",102,0)
 I '$L(X0) D NOTYET(.ROOT) Q
"RTN","ORWRP",103,0)
 S RTN=$P(X0,"^",5),ENT=$P(X0,"^",6)
"RTN","ORWRP",104,0)
 I '$L(RTN)!'$L(ENT) D NOTYET(.ROOT) Q
"RTN","ORWRP",105,0)
 I '$L($T(@(ENT_"^"_RTN))) D NOTYET(.ROOT) Q
"RTN","ORWRP",106,0)
 I $G(ALPHA) S X=ALPHA-$G(OMEGA) D
"RTN","ORWRP",107,0)
 . I X<0 S X=X*(-1)
"RTN","ORWRP",108,0)
 . I X4,X>X4 S:ALPHA>OMEGA OMEGA=$$FMADD^XLFDT(ALPHA,-X4) S:ALPHA'>OMEGA ALPHA=$$FMADD^XLFDT(OMEGA,-X4) S DTRANGE=""
"RTN","ORWRP",109,0)
 I X4,$G(DTRANGE)>X4 S DTRANGE=X4,ALPHA=""
"RTN","ORWRP",110,0)
 I $L($G(DTRANGE)),'$G(ALPHA) S ALPHA=$$FMADD^XLFDT(DT,-DTRANGE),OMEGA=DT_".235959"
"RTN","ORWRP",111,0)
 I $G(OMEGA),$E(OMEGA,8)'="." S OMEGA=OMEGA_".235959"
"RTN","ORWRP",112,0)
 S ID=$G(HSTAG),$P(ID,";",5,8)=SITE_";"_$P(X2,"^",8)_";"_$P(X2,"^",9)
"RTN","ORWRP",113,0)
 I $L($P($G(HSTAG),";",4)) S MAX=$P(HSTAG,";",4)
"RTN","ORWRP",114,0)
 I $L($G(HSTYPE)) M ID=HSTYPE
"RTN","ORWRP",115,0)
 I $L($G(EXAMID)) M ID=EXAMID
"RTN","ORWRP",116,0)
 S OUT=ENT_"^"_RTN_"(.ROOT,DFN,.ID,.ALPHA,.OMEGA,.DTRANGE,.REMOTE,.MAX)"
"RTN","ORWRP",117,0)
 I REMOTE S GO=0 D  Q:'GO
"RTN","ORWRP",118,0)
 . I '$L($T(GETDFN^MPIF001)) D SETITEM(.ROOT,"MPI routines missing on remote system ("_SITE_")") S GO=0 Q
"RTN","ORWRP",119,0)
 . S ICN=+$P(DFN,";",2),DFN=+$$GETDFN^MPIF001(ICN)
"RTN","ORWRP",120,0)
 . I DFN<0 D SETITEM(.ROOT,"Patient not found on remote system ("_SITE_")") S GO=0 Q
"RTN","ORWRP",121,0)
 . S GO=+$P(X0,"^",3)
"RTN","ORWRP",122,0)
 . I 'GO D SETITEM(.ROOT,"Remote access not available for this report ("_SITE_")")
"RTN","ORWRP",123,0)
 . S:'$D(DUZ("AG")) DUZ("AG")="" ;Broker not currently setting agency for remote sites
"RTN","ORWRP",124,0)
 . S:'$D(DUZ(2)) DUZ(2)=$P($$SITE^VASITE,"^",3) ;Broker not setting DUZ(2) for remote sites
"RTN","ORWRP",125,0)
 N %ZIS
"RTN","ORWRP",126,0)
 S %ZIS="0N"
"RTN","ORWRP",127,0)
 D @OUT
"RTN","ORWRP",128,0)
 Q
"RTN","ORWRP",129,0)
NOTYET(ROOT) ; -- standard not available display text
"RTN","ORWRP",130,0)
 D SETITEM(.ROOT,"Report not available at this time.")
"RTN","ORWRP",131,0)
 Q
"RTN","ORWRP",132,0)
START(RM,GOTO,ORIOSL) ;
"RTN","ORWRP",133,0)
 ;RM=Right margin
"RTN","ORWRP",134,0)
 N ZTQUEUED,ORHFS,ORSUB,ORIO,ORHANDLE
"RTN","ORWRP",135,0)
 N IOM,IOSL,IOST,IOF,IOT,IOS
"RTN","ORWRP",136,0)
 S ORHFS=$$HFS(),ORSUB="ORDATA",ORHANDLE="ORWRP"
"RTN","ORWRP",137,0)
 D HFSOPEN(ORHANDLE,ORHFS,"W")
"RTN","ORWRP",138,0)
 I POP D  Q
"RTN","ORWRP",139,0)
 . I $D(ROOT) D SETITEM(.ROOT,"ERROR: Unable to open HFS file")
"RTN","ORWRP",140,0)
 D IOVAR(.ORIO,.RM,.ORIOSL)
"RTN","ORWRP",141,0)
 N $ETRAP,$ESTACK
"RTN","ORWRP",142,0)
 S $ETRAP="D ERR^ORWRP Q"
"RTN","ORWRP",143,0)
 U IO
"RTN","ORWRP",144,0)
 D @GOTO
"RTN","ORWRP",145,0)
 D HFSCLOSE(ORHANDLE,ORHFS)
"RTN","ORWRP",146,0)
 Q
"RTN","ORWRP",147,0)
ERR ;Error trap
"RTN","ORWRP",148,0)
 S $ETRAP="D UNWIND^ORWRP Q"
"RTN","ORWRP",149,0)
 N %ZIS
"RTN","ORWRP",150,0)
 S %ZIS="0N"
"RTN","ORWRP",151,0)
 D @^%ZOSF("ERRTN") ;file error
"RTN","ORWRP",152,0)
 I $D(ORHANDLE) D CLOSE^%ZISH(ORHANDLE)
"RTN","ORWRP",153,0)
 I $D(ORHFS) D
"RTN","ORWRP",154,0)
 . N ORARR,OROK
"RTN","ORWRP",155,0)
 . S ORARR(ORHFS)="",OROK=$$DEL^%ZISH("",$NA(ORARR)) ;delete HFS file
"RTN","ORWRP",156,0)
 S $ECODE=",UOR69 error during CPRS report build,"
"RTN","ORWRP",157,0)
 Q
"RTN","ORWRP",158,0)
UNWIND ;Unwind Error stack
"RTN","ORWRP",159,0)
 Q:$ESTACK>1  ;pop the stack
"RTN","ORWRP",160,0)
 ;add additional code here, if needed
"RTN","ORWRP",161,0)
 Q
"RTN","ORWRP",162,0)
HFS() ; -- get hfs file name
"RTN","ORWRP",163,0)
 N H
"RTN","ORWRP",164,0)
 S H=$H
"RTN","ORWRP",165,0)
 Q "ORU_"_$J_"_"_$P(H,",")_"_"_$P(H,",",2)_".DAT"
"RTN","ORWRP",166,0)
HFSOPEN(HANDLE,ORHFS,ORMODE) ;
"RTN","ORWRP",167,0)
 D OPEN^%ZISH(HANDLE,,ORHFS,$G(ORMODE,"W")) Q:POP
"RTN","ORWRP",168,0)
 Q
"RTN","ORWRP",169,0)
IOVAR(ORIO,ORRM,ORIOSL,ORIOST,ORIOF,ORIOT) ;Setup IO variables based on IO Device
"RTN","ORWRP",170,0)
 N IFN,IFN1
"RTN","ORWRP",171,0)
 S ORIO=$G(ORIO,"OR WORKSTATION"),ION=ORIO,IOM=$G(ORRM,80),IOSL=$G(ORIOSL,62),IOST=$G(ORIOST,"P-OTHER"),IOF=$G(ORIOF,""""""),IOT=$G(ORIOT,"HFS")
"RTN","ORWRP",172,0)
 I $O(^%ZIS(1,"B",ORIO,0)) S IFN=$O(^(0)),IOS=IFN
"RTN","ORWRP",173,0)
 I $D(^%ZIS(1,IFN,0)) S IOST(0)=+$G(^("SUBTYPE")),IOT=$G(ORIOT,^("TYPE")),IOST=$G(ORIOST,$P($G(^%ZIS(2,IOST(0),0),IOST),"^"))
"RTN","ORWRP",174,0)
 I $O(^%ZIS(2,"B",IOST,0)) S IFN=$O(^(0)) I IFN S IOST(0)=IFN,IFN1=$G(^%ZIS(2,IFN,1)),IOM=$G(ORRM,$P(IFN1,"^")),IOF=$G(ORIOF,$P(IFN1,"^",2)),IOSL=$G(ORIOSL,$P(IFN1,"^",3))
"RTN","ORWRP",175,0)
 Q
"RTN","ORWRP",176,0)
HFSCLOSE(HANDLE,ORHFS) ;Close HFS and unload data
"RTN","ORWRP",177,0)
 N ORDEL,X,%ZIS
"RTN","ORWRP",178,0)
 S %ZIS="0N"
"RTN","ORWRP",179,0)
 I IO[ORHFS D CLOSE^%ZISH(HANDLE)
"RTN","ORWRP",180,0)
 S ROOT=$NA(^TMP(ORSUB,$J,1)),ORDEL(ORHFS)=""
"RTN","ORWRP",181,0)
 K @ROOT
"RTN","ORWRP",182,0)
 S X=$$FTG^%ZISH(,ORHFS,$NA(@ROOT@(1)),4)
"RTN","ORWRP",183,0)
 D STRIP
"RTN","ORWRP",184,0)
 S X=$$DEL^%ZISH(,$NA(ORDEL))
"RTN","ORWRP",185,0)
 Q
"RTN","ORWRP",186,0)
USEHFS ; -- use host file to build global array
"RTN","ORWRP",187,0)
 N OROK,SECTION
"RTN","ORWRP",188,0)
 S SECTION=0
"RTN","ORWRP",189,0)
 D INIT
"RTN","ORWRP",190,0)
 S OROK=$$FTG^%ZISH(,ORHFS,$NA(@ROOT@(1)),4) I 'OROK Q
"RTN","ORWRP",191,0)
 D STRIP
"RTN","ORWRP",192,0)
 N ORARR S ORARR(ORHFS)=""
"RTN","ORWRP",193,0)
 S OROK=$$DEL^%ZISH("",$NA(ORARR))
"RTN","ORWRP",194,0)
 Q
"RTN","ORWRP",195,0)
INIT ; -- initialize counts and global section
"RTN","ORWRP",196,0)
 S (INC,CNT)=0,SECTION=SECTION+1
"RTN","ORWRP",197,0)
 S ROOT=$NA(^TMP(ORSUB,$J,SECTION))
"RTN","ORWRP",198,0)
 K @ROOT
"RTN","ORWRP",199,0)
 Q
"RTN","ORWRP",200,0)
FINAL ; -- set 'x of y' for each section CALLED FROM ^ORWLR
"RTN","ORWRP",201,0)
 N I
"RTN","ORWRP",202,0)
 F I=1:1:SECTION S ^TMP(ORSUB,$J,I,.1)=I_U_SECTION
"RTN","ORWRP",203,0)
 Q
"RTN","ORWRP",204,0)
STRIP ; -- strip off control chars
"RTN","ORWRP",205,0)
 N I,X
"RTN","ORWRP",206,0)
 S I=0 F  S I=$O(@ROOT@(I)) Q:'I  S X=^(I) D
"RTN","ORWRP",207,0)
 . I X[$C(8) D  ;BS
"RTN","ORWRP",208,0)
 .. I $L(X,$C(8))=$L(X,$C(95)) S (X,@ROOT@(I))=$TR(X,$C(8,95),"") Q  ;BS & _
"RTN","ORWRP",209,0)
 .. S (X,@ROOT@(I))=$TR(X,$C(8),"")
"RTN","ORWRP",210,0)
 . I X[$C(7)!(X[$C(12)) S @ROOT@(I)=$TR(X,$C(7,12),"") ;BEL or FF
"RTN","ORWRP",211,0)
 Q
"RTN","ORWRP",212,0)
WINDFLT(ORY) ;Windows printer as default?
"RTN","ORWRP",213,0)
 S ORY=+$$GET^XPAR("ALL","ORWDP WINPRINT DEFAULT")
"RTN","ORWRP",214,0)
 Q
"RTN","ORWRP",215,0)
GETDFPRT(Y,ORUSER,ORLOC) ; Returns current default printer for user
"RTN","ORWRP",216,0)
 N IEN,X0,ENT
"RTN","ORWRP",217,0)
 S ENT="ALL"
"RTN","ORWRP",218,0)
 I $G(ORLOC) S ORLOC=+ORLOC_";SC(",ENT=ENT_"^"_ORLOC
"RTN","ORWRP",219,0)
 I +$$GET^XPAR(ENT,"ORWDP WINPRINT DEFAULT") S Y="WIN;Windows Printer" Q
"RTN","ORWRP",220,0)
 S IEN=$$GET^XPAR(ENT,"ORWDP DEFAULT PRINTER",1) Q:+IEN=0
"RTN","ORWRP",221,0)
 Q:'$D(^%ZIS(1,IEN,0))  S X0=^(0)
"RTN","ORWRP",222,0)
 S Y=IEN_";"_$P(X0,U)
"RTN","ORWRP",223,0)
 Q
"RTN","ORWRP",224,0)
SAVDFPRT(Y,ORDEV) ; Save new default printer for user
"RTN","ORWRP",225,0)
 N ORPAR,ORERR,ORWINDEF
"RTN","ORWRP",226,0)
 Q:$L(ORDEV)=0
"RTN","ORWRP",227,0)
 ; Reset Windows printer default to True/False
"RTN","ORWRP",228,0)
 S ORPAR="ORWDP WINPRINT DEFAULT"
"RTN","ORWRP",229,0)
 I ORDEV="WIN" S ORWINDEF="Y"
"RTN","ORWRP",230,0)
 E  S ORWINDEF="N"
"RTN","ORWRP",231,0)
 I $$GET^XPAR(DUZ_";VA(200,",ORPAR,1)'="" D CHG^XPAR(DUZ_";VA(200,",ORPAR,1,ORWINDEF,.ORERR)
"RTN","ORWRP",232,0)
 E  D ADD^XPAR(DUZ_";VA(200,",ORPAR,1,ORWINDEF,.ORERR)
"RTN","ORWRP",233,0)
 Q:ORDEV="WIN"
"RTN","ORWRP",234,0)
 ; If not Windows printer selected, save VistA default printer
"RTN","ORWRP",235,0)
 S ORPAR="ORWDP DEFAULT PRINTER",ORDEV="`"_ORDEV
"RTN","ORWRP",236,0)
 I $$GET^XPAR(DUZ_";VA(200,",ORPAR,1)'="" D CHG^XPAR(DUZ_";VA(200,",ORPAR,1,ORDEV,.ORERR)
"RTN","ORWRP",237,0)
 E  D ADD^XPAR(DUZ_";VA(200,",ORPAR,1,ORDEV,.ORERR)
"RTN","ORWRP",238,0)
 Q
"RTN","ORWRP3")
0^6^B8400062
"RTN","ORWRP3",1,0)
ORWRP3 ; slc/dcm - OE/RR Report Extract RPC's ; 08 May 2001  13:32PM [3/12/02 3:29pm]
"RTN","ORWRP3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**109,120,132**;Dec 17, 1997
"RTN","ORWRP3",3,0)
EX(ROOT,TST) ;Expand columns
"RTN","ORWRP3",4,0)
  ;TST=ptr to file 101.24
"RTN","ORWRP3",5,0)
  ;Y(i)=id^Name^Qualifier^IOM^Entry^Routine^Remote^Type^Category^RPC^ifn
"RTN","ORWRP3",6,0)
  Q:'$G(TST)
"RTN","ORWRP3",7,0)
  N J,X,X0,X2,X4,RPC,HEAD,ORX0,ORX2,ORX4,ORX,ORTIMOCC,MAX
"RTN","ORWRP3",8,0)
  I '$L($G(C)) S C=0
"RTN","ORWRP3",9,0)
  S ORTIMOCC=$$GET^XPAR("USR.`"_DUZ_"^SYS^PKG","ORWRP TIME/OCC LIMITS INDV",+TST,"I")
"RTN","ORWRP3",10,0)
  I '$L(ORTIMOCC) S ORTIMOCC=$$GET^XPAR("USR.`"_DUZ_"^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWRP3",11,0)
  S X0=$G(^ORD(101.24,+TST,0)),X2=$G(^(2)),X4=$G(^(4)),MAX=$P(X4,"^",2),X=$P($P(ORTIMOCC,";"),"-",2)
"RTN","ORWRP3",12,0)
  I X,MAX,X>MAX S ORTIMOCC="T-"_MAX_";"_$P(ORTIMOCC,";",2,99)
"RTN","ORWRP3",13,0)
  I '$O(^ORD(101.24,+TST,10,0)) D  Q
"RTN","ORWRP3",14,0)
  . Q:$P(X0,"^",12)="L"
"RTN","ORWRP3",15,0)
  . S RPC=$P($G(^XWB(8994,+$P(X0,"^",13),0)),"^")
"RTN","ORWRP3",16,0)
  . S HEAD=$P(X0,"^") I $L($P(X2,"^",3)) S HEAD=$P(X2,"^",3)
"RTN","ORWRP3",17,0)
  . S X=$P(X0,U,2)_U_HEAD_U_ORTIMOCC_";"_$P(X0,U,4)_U_$P(X0,U,19)_";"_$P(X0,U,20)_";"_+$P(X0,U,21)_U_$P(X0,U,6)_U_$P(X0,U,5)_U_$P(X0,U,3)_U_$P(X0,U,12)_U_$P(X0,U,7)_U_RPC_U_+TST_U_$P(X4,U)_U_$P(X4,U,2)
"RTN","ORWRP3",18,0)
  . D SETITEM(.ROOT,X)
"RTN","ORWRP3",19,0)
  I $O(^ORD(101.24,+TST,10,0)) S ORX0=^ORD(101.24,+TST,0),ORX2=$G(^(2)),ORX4=$G(^(4)) D
"RTN","ORWRP3",20,0)
  . S HEAD=$P(ORX0,"^") I $L($P(ORX2,"^",3)) S HEAD=$P(ORX2,"^",3)
"RTN","ORWRP3",21,0)
  . S ORX=$P(ORX0,U,2)_U_HEAD_U_ORTIMOCC_";"_$P(ORX0,U,4)_U_$P(ORX0,U,19)_";"_$P(ORX0,U,20)_";"_+$P(ORX0,U,21)_U_$P(ORX0,U,6)_U_$P(ORX0,U,5)_U_$P(ORX0,U,3)_U_$P(ORX0,U,12)_U_$P(ORX0,U,7)_"^^"_+TST_U_$P(ORX4,U)_U_$P(ORX4,U,2)
"RTN","ORWRP3",22,0)
  . D SETITEM(.ROOT,"[PARENT START]^"_ORX)
"RTN","ORWRP3",23,0)
  . S J=0 F  S J=$O(^ORD(101.24,+TST,10,J)) Q:J<1  S X=^(J,0) D EX(.ROOT,+X)
"RTN","ORWRP3",24,0)
  . D SETITEM(.ROOT,"[PARENT END]^"_ORX)
"RTN","ORWRP3",25,0)
  Q
"RTN","ORWRP3",26,0)
LIST(LST)       ;Get list for Treeview
"RTN","ORWRP3",27,0)
 N ROOT
"RTN","ORWRP3",28,0)
 S ROOT=$NA(LST)
"RTN","ORWRP3",29,0)
 K @ROOT
"RTN","ORWRP3",30,0)
 D TRY1(.ROOT)
"RTN","ORWRP3",31,0)
 Q
"RTN","ORWRP3",32,0)
TRY1(ROOT)    ;Test expanding reports using established parameters
"RTN","ORWRP3",33,0)
 N I,ORLIST
"RTN","ORWRP3",34,0)
 D SETITEM(.ROOT,"[REPORT LIST]")
"RTN","ORWRP3",35,0)
 D GETLST^XPAR(.ORLIST,"ALL","ORWRP REPORT LIST")
"RTN","ORWRP3",36,0)
 S I=0
"RTN","ORWRP3",37,0)
 F  S I=$O(ORLIST(I)) Q:'I  Q:'$D(^ORD(101.24,$P(ORLIST(I),"^",2),0))  D EX(.ROOT,$P(ORLIST(I),"^",2))
"RTN","ORWRP3",38,0)
 D SETITEM(.ROOT,"$$END")
"RTN","ORWRP3",39,0)
 Q
"RTN","ORWRP3",40,0)
SETITEM(ROOT,X) ; -- set item in list
"RTN","ORWRP3",41,0)
 S @ROOT@($O(@ROOT@(9999),-1)+1)=X
"RTN","ORWRP3",42,0)
 Q
"RTN","ORWSR")
0^2^B27504484
"RTN","ORWSR",1,0)
ORWSR ;SLC/REV-Surgery RPCs ;4/2/01  10:18 [3/12/02 3:42pm]
"RTN","ORWSR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**109,116,132**;Dec 17, 1997
"RTN","ORWSR",3,0)
 ;
"RTN","ORWSR",4,0)
SHOWSURG(ORY)     ;is Surgery ES patch installed?
"RTN","ORWSR",5,0)
 S ORY=$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",6,0)
 Q:+ORY=0
"RTN","ORWSR",7,0)
 S ORY=$$GET^XPAR("ALL","ORWOR SHOW SURGERY TAB",1)
"RTN","ORWSR",8,0)
 Q
"RTN","ORWSR",9,0)
LIST(ORY,ORDFN,ORBDT,OREDT,ORCTXT,ORMAX)        ;RETURN LIST OF SURGERY CASES FOR A PATIENT
"RTN","ORWSR",10,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",11,0)
 N I,J,X,SHOWADD,SHOWDOCS
"RTN","ORWSR",12,0)
 S ORY=$NA(^TMP("ORLIST",$J))
"RTN","ORWSR",13,0)
 Q:'+ORDFN
"RTN","ORWSR",14,0)
 S:'$G(ORCTXT) ORCTXT=1
"RTN","ORWSR",15,0)
 S:'$G(ORBDT) ORBDT=""
"RTN","ORWSR",16,0)
 S:'$G(OREDT) OREDT=""
"RTN","ORWSR",17,0)
 S:'$G(ORMAX) ORMAX=""
"RTN","ORWSR",18,0)
 S (SHOWDOCS,SHOWADD)=1
"RTN","ORWSR",19,0)
 D LIST^SROESTV(.ORY,ORDFN,ORBDT,OREDT,ORMAX,SHOWDOCS)
"RTN","ORWSR",20,0)
 S I=0
"RTN","ORWSR",21,0)
 F  S I=$O(@ORY@(I)) Q:+I=0  D
"RTN","ORWSR",22,0)
 . S X=@ORY@(I),J=0
"RTN","ORWSR",23,0)
 . S $P(X,U,6)=$$NON^SROESTV(+X)
"RTN","ORWSR",24,0)
 . S $P(X,U,14)=ORCTXT
"RTN","ORWSR",25,0)
 . S $P(X,U,13)=$P(X,U,5),$P(X,U,5)=""
"RTN","ORWSR",26,0)
 . S @ORY@(I)=X
"RTN","ORWSR",27,0)
 . F  S J=$O(@ORY@(I,J)) Q:+J=0  D
"RTN","ORWSR",28,0)
 . . S X=@ORY@(I,J)
"RTN","ORWSR",29,0)
 . . S:(($P(X,U,14)=ORCTXT)!($P(X,U,14)="")) $P(X,U,14)=+$P(X,U,10)
"RTN","ORWSR",30,0)
 . . S @ORY@(I,J)=X
"RTN","ORWSR",31,0)
 Q
"RTN","ORWSR",32,0)
CASELIST(ORY,ORDFN) ; retrieve list of cases, but no documents
"RTN","ORWSR",33,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",34,0)
 Q:'+ORDFN
"RTN","ORWSR",35,0)
 N ORBDT,OREDT,ORMAX,I,SHOWDOCS S (ORBDT,OREDT,ORMAX)="",SHOWDOCS=0
"RTN","ORWSR",36,0)
 S ORY=$NA(^TMP("ORLIST",$J))
"RTN","ORWSR",37,0)
 D LIST^SROESTV(.ORY,ORDFN,ORBDT,OREDT,ORMAX,SHOWDOCS)
"RTN","ORWSR",38,0)
 S I=0
"RTN","ORWSR",39,0)
 F  S I=$O(@ORY@(I)) Q:+I=0  D
"RTN","ORWSR",40,0)
  . S $P(@ORY@(I),U,4)=$P($P(@ORY@(I),U,4),";",2)
"RTN","ORWSR",41,0)
 Q
"RTN","ORWSR",42,0)
GTSURCTX(Y,ORUSER) ; Returns current Notes view context for user
"RTN","ORWSR",43,0)
 N OCCLIM,SHOWSUB
"RTN","ORWSR",44,0)
 S Y=$$GET^XPAR("ALL","ORCH CONTEXT SURGERY",1)
"RTN","ORWSR",45,0)
 Q
"RTN","ORWSR",46,0)
SVSURCTX(Y,ORCTXT) ; Save new Notes view preferences for user
"RTN","ORWSR",47,0)
 N TMP
"RTN","ORWSR",48,0)
 S TMP=$$GET^XPAR(DUZ_";VA(200,","ORCH CONTEXT SURGERY",1)
"RTN","ORWSR",49,0)
 I TMP'="" D  Q
"RTN","ORWSR",50,0)
 . D CHG^XPAR(DUZ_";VA(200,","ORCH CONTEXT SURGERY",1,ORCTXT)
"RTN","ORWSR",51,0)
 D ADD^XPAR(DUZ_";VA(200,","ORCH CONTEXT SURGERY",1,ORCTXT)
"RTN","ORWSR",52,0)
 Q
"RTN","ORWSR",53,0)
 ;
"RTN","ORWSR",54,0)
OPTOP(ORY,ORCASE,ORSHWRPT)       ; Return OpTop for a surgical case, without summary statement
"RTN","ORWSR",55,0)
 ; IF ORSHWRPT INCLUDE OPERATIVE SUMMARY AFTER OPTOP
"RTN","ORWSR",56,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",57,0)
 Q:+$G(ORCASE)=0
"RTN","ORWSR",58,0)
 N ORFLAG
"RTN","ORWSR",59,0)
 S ORFLAG=$S(+$G(ORSHWRPT):2,1:1)
"RTN","ORWSR",60,0)
 S ORY=$NA(^TMP("OROP",$J))
"RTN","ORWSR",61,0)
 D OPTOP^SROSRPT(+ORCASE,ORFLAG,ORY)
"RTN","ORWSR",62,0)
 Q
"RTN","ORWSR",63,0)
OPTOPNOR(ORY,ORCASE,ORSHWRPT)       ; Return OpTop for a NON-OR surgical case, without summary statement
"RTN","ORWSR",64,0)
 ; IF SHOWRPT, INCLUDE OPERATIVE SUMMARY AFTER OPTOP
"RTN","ORWSR",65,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",66,0)
 Q:+$G(ORCASE)=0
"RTN","ORWSR",67,0)
 N ORFLAG
"RTN","ORWSR",68,0)
 S ORFLAG=$S(+$G(ORSHWRPT):2,1:1)
"RTN","ORWSR",69,0)
 S ORY=$NA(^TMP("ORNOR",$J))
"RTN","ORWSR",70,0)
 D OPTOP^SRONP(+ORCASE,ORFLAG,ORY)
"RTN","ORWSR",71,0)
 Q
"RTN","ORWSR",72,0)
ONECASE(ORY,ORTIUDA) ;Given a TIU document, return the case and related documents
"RTN","ORWSR",73,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")!(+$G(ORTIUDA)=0)
"RTN","ORWSR",74,0)
 N ORCASE
"RTN","ORWSR",75,0)
 D GET1405^TIUSRVR(.ORCASE,ORTIUDA) Q:+ORCASE=0
"RTN","ORWSR",76,0)
 D GETONE(.ORY,+ORCASE)
"RTN","ORWSR",77,0)
 Q
"RTN","ORWSR",78,0)
GETONE(ORY,ORCASE)      ; called by ONECASE and RPTTEXT 
"RTN","ORWSR",79,0)
 ;Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",80,0)
 N ORTMP,J,SHOWADD,ORCTXT
"RTN","ORWSR",81,0)
 S SHOWADD=1,ORCTXT=1
"RTN","ORWSR",82,0)
 D ONE^SROESTV("ORY",+ORCASE)
"RTN","ORWSR",83,0)
 S X=ORY(+ORCASE),J=0
"RTN","ORWSR",84,0)
 S $P(X,U,6)=$$NON^SROESTV(+X)
"RTN","ORWSR",85,0)
 S $P(X,U,14)=ORCTXT
"RTN","ORWSR",86,0)
 S $P(X,U,13)=$P(X,U,5),$P(X,U,5)=""
"RTN","ORWSR",87,0)
 S ORTMP(0)=X
"RTN","ORWSR",88,0)
 F  S J=$O(ORY(+ORCASE,J)) Q:+J=0  D
"RTN","ORWSR",89,0)
 . S X=ORY(+ORCASE,J)
"RTN","ORWSR",90,0)
 . S:(($P(X,U,14)=ORCTXT)!($P(X,U,14)="")) $P(X,U,14)=+$P(X,U,10)
"RTN","ORWSR",91,0)
 . S ORTMP(J)=X
"RTN","ORWSR",92,0)
 K ORY M ORY=ORTMP
"RTN","ORWSR",93,0)
 Q
"RTN","ORWSR",94,0)
SHOWOPTP(ORY,ORCASE)    ;Should OpTop be displayed on signature?
"RTN","ORWSR",95,0)
 I '$$PATCH^XPDUTL("SR*3.0*100") S ORY=0 Q
"RTN","ORWSR",96,0)
 S ORY=$$OPTOP^SROESTV(+ORCASE)
"RTN","ORWSR",97,0)
 Q
"RTN","ORWSR",98,0)
ISNONOR(ORY,ORCASE)     ;Is the procedure a non-OR procedure?
"RTN","ORWSR",99,0)
 I '$$PATCH^XPDUTL("SR*3.0*100") S ORY=0 Q
"RTN","ORWSR",100,0)
 S ORY=$$NON^SROESTV(+ORCASE)
"RTN","ORWSR",101,0)
 Q
"RTN","ORWSR",102,0)
RPTLIST(ORY,ORDFN) ;Return list of surgery reports for reports tab
"RTN","ORWSR",103,0)
 ;I '$$PATCH^XPDUTL("SR*3.0*100") D NOTYET(.ORY)  Q
"RTN","ORWSR",104,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",105,0)
 Q:'+ORDFN
"RTN","ORWSR",106,0)
 N ORBDT,OREDT,ORMAX,I,SHOWDOCS,X,SITE
"RTN","ORWSR",107,0)
 S (ORBDT,OREDT,ORMAX)="",SHOWDOCS=0
"RTN","ORWSR",108,0)
 S ORY=$NA(^TMP("ORLIST",$J))
"RTN","ORWSR",109,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",2)_";"_$P(SITE,"^",3)
"RTN","ORWSR",110,0)
 D LIST^SROESTV(.ORY,ORDFN,ORBDT,OREDT,ORMAX,SHOWDOCS)
"RTN","ORWSR",111,0)
 S I=0
"RTN","ORWSR",112,0)
 F  S I=$O(@ORY@(I)) Q:+I=0  D
"RTN","ORWSR",113,0)
 . S X=$P(@ORY@(I),U,2),$P(@ORY@(I),U,2)=$P(@ORY@(I),U,3),$P(@ORY@(I),U,3)=X
"RTN","ORWSR",114,0)
 . S $P(@ORY@(I),U,4)=$P($P(@ORY@(I),U,4),";",2)
"RTN","ORWSR",115,0)
 . S @ORY@(I)=SITE_U_@ORY@(I)
"RTN","ORWSR",116,0)
 Q
"RTN","ORWSR",117,0)
RPTTEXT(ROOT,DFN,ORID,ALPHA,OMEGA,DTRANGE,REMOTE,ORMAX) ; -- return surgery report
"RTN","ORWSR",118,0)
 ;I '$$PATCH^XPDUTL("SR*3.0*100") D NOTYET(.ROOT)  Q
"RTN","ORWSR",119,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",120,0)
 Q:+ORID=0
"RTN","ORWSR",121,0)
 N X,ORI,J,ORDOC,ORCASE,CNT,LINES,ORSEP,ORTMP
"RTN","ORWSR",122,0)
 S (X,ORI)="",$P(ORSEP,"=",74)=""
"RTN","ORWSR",123,0)
 S ROOT=$NA(^TMP("ORXPND",$J))
"RTN","ORWSR",124,0)
 K @ROOT
"RTN","ORWSR",125,0)
 S CNT=0
"RTN","ORWSR",126,0)
 D GETONE(.ORCASE,ORID)
"RTN","ORWSR",127,0)
 S (ORI,J)=""
"RTN","ORWSR",128,0)
 F  S ORI=$O(ORCASE(ORI)) Q:ORI=""  D
"RTN","ORWSR",129,0)
 . S ORTMP(ORID,ORI)=ORCASE(ORI)
"RTN","ORWSR",130,0)
 K ORCASE M ORCASE=ORTMP
"RTN","ORWSR",131,0)
 S ORI=""
"RTN","ORWSR",132,0)
 F  S ORI=$O(ORCASE(ORID,ORI)) Q:ORI=""  D
"RTN","ORWSR",133,0)
 . Q:'$L($P(ORCASE(ORID,ORI),U,10))
"RTN","ORWSR",134,0)
 . Q:$E($P(ORCASE(ORID,ORI),U,2),1,8)="Addendum"
"RTN","ORWSR",135,0)
 . D TGET^TIUSRVR1(.ORDOC,+ORCASE(ORID,ORI),"VIEW")
"RTN","ORWSR",136,0)
 . S J="",LINES=0
"RTN","ORWSR",137,0)
 . F  S J=$O(@ORDOC@(J)) Q:J=""  D
"RTN","ORWSR",138,0)
 . . I $D(@ORDOC@(J))=10 D
"RTN","ORWSR",139,0)
 . . . S @ROOT@(J+CNT,0)=@ORDOC@(J,0),LINES=LINES+1
"RTN","ORWSR",140,0)
 . . E  S @ROOT@(J+CNT,0)=@ORDOC@(J),LINES=LINES+1
"RTN","ORWSR",141,0)
 . K ORDOC,ORY(ORID) S CNT=CNT+LINES+1
"RTN","ORWSR",142,0)
 . S @ROOT@(CNT,0)=ORSEP,CNT=CNT+1
"RTN","ORWSR",143,0)
 I CNT=0 S @ROOT@(CNT,0)="No reports are available for this case."
"RTN","ORWSR",144,0)
 Q
"RTN","ORWSR",145,0)
NOTYET(ROOT) ; -- standard not available display text
"RTN","ORWSR",146,0)
 D SETITEM(.ROOT,"Report not available at this time.")
"RTN","ORWSR",147,0)
 Q
"RTN","ORWSR",148,0)
SETITEM(ROOT,X) ; -- set item in list
"RTN","ORWSR",149,0)
 S @ROOT@($O(@ROOT@(9999),-1)+1)=X
"RTN","ORWSR",150,0)
 Q
"RTN","ORWTIU")
0^4^B9189581
"RTN","ORWTIU",1,0)
ORWTIU ; slc/REV - Functions for GUI PARAMETER ACTIONS ; 08 Feb 2001  09:02AM
"RTN","ORWTIU",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,132**;Dec 17, 1997
"RTN","ORWTIU",3,0)
 ;
"RTN","ORWTIU",4,0)
GTTIUCTX(Y,ORUSER) ; Returns current Notes view context for user
"RTN","ORWTIU",5,0)
 N OCCLIM,SHOWSUB
"RTN","ORWTIU",6,0)
 S Y=$$GET^XPAR("ALL","ORCH CONTEXT NOTES",1)
"RTN","ORWTIU",7,0)
 I +$P(Y,";",5)=0 D
"RTN","ORWTIU",8,0)
 . S OCCLIM=$P($$PERSPRF^TIULE(DUZ),U,10)
"RTN","ORWTIU",9,0)
 . S:+OCCLIM>0 $P(Y,";",5)=OCCLIM
"RTN","ORWTIU",10,0)
 S SHOWSUB=$P(Y,";",6)
"RTN","ORWTIU",11,0)
 S $P(Y,";",6)=$S(SHOWSUB'="":SHOWSUB,1:0)
"RTN","ORWTIU",12,0)
 Q
"RTN","ORWTIU",13,0)
SVTIUCTX(Y,ORCTXT) ; Save new Notes view preferences for user
"RTN","ORWTIU",14,0)
 N TMP
"RTN","ORWTIU",15,0)
 S TMP=$$GET^XPAR(DUZ_";VA(200,","ORCH CONTEXT NOTES",1)
"RTN","ORWTIU",16,0)
 I TMP'="" D  Q
"RTN","ORWTIU",17,0)
 . D CHG^XPAR(DUZ_";VA(200,","ORCH CONTEXT NOTES",1,ORCTXT)
"RTN","ORWTIU",18,0)
 D ADD^XPAR(DUZ_";VA(200,","ORCH CONTEXT NOTES",1,ORCTXT)
"RTN","ORWTIU",19,0)
 Q
"RTN","ORWTIU",20,0)
 ;
"RTN","ORWTIU",21,0)
GTDCCTX(Y,ORUSER) ; Returns current DC Summary view context for user
"RTN","ORWTIU",22,0)
 N OCCLIM,SHOWSUB
"RTN","ORWTIU",23,0)
 S Y=$$GET^XPAR("ALL","ORCH CONTEXT SUMMRIES",1)
"RTN","ORWTIU",24,0)
 I +$P(Y,";",5)=0 D
"RTN","ORWTIU",25,0)
 . S OCCLIM=$P($$PERSPRF^TIULE(DUZ),U,10)
"RTN","ORWTIU",26,0)
 . S:+OCCLIM>0 $P(Y,";",5)=OCCLIM
"RTN","ORWTIU",27,0)
 S SHOWSUB=$P(Y,";",6)
"RTN","ORWTIU",28,0)
 S $P(Y,";",6)=$S(SHOWSUB'="":SHOWSUB,1:0)
"RTN","ORWTIU",29,0)
 Q
"RTN","ORWTIU",30,0)
SVDCCTX(Y,ORCTXT) ; Save new DC Summary view preferences for user
"RTN","ORWTIU",31,0)
 N TMP
"RTN","ORWTIU",32,0)
 S TMP=$$GET^XPAR(DUZ_";VA(200,","ORCH CONTEXT SUMMRIES",1)
"RTN","ORWTIU",33,0)
 I TMP'="" D  Q
"RTN","ORWTIU",34,0)
 . D CHG^XPAR(DUZ_";VA(200,","ORCH CONTEXT SUMMRIES",1,ORCTXT)
"RTN","ORWTIU",35,0)
 D ADD^XPAR(DUZ_";VA(200,","ORCH CONTEXT SUMMRIES",1,ORCTXT)
"RTN","ORWTIU",36,0)
 Q
"RTN","ORWTIU",37,0)
 ;
"RTN","ORWTIU",38,0)
PRINTW(ORY,ORDA,ORFLG) ;TIU print to windows printer
"RTN","ORWTIU",39,0)
 N ZTQUEUED,ORHFS,ORSUB,ORIO,ORSTATUS,ROOT,ORERR,ORWIN,ORHANDLE
"RTN","ORWTIU",40,0)
 N IOM,IOSL,IOST,IOF,IOT,IOS
"RTN","ORWTIU",41,0)
 S (ORSUB,ROOT)="ORDATA",ORIO="OR WINDOWS HFS",ORWIN=1,ORHANDLE="ORWTIU"
"RTN","ORWTIU",42,0)
 S ORY=$NA(^TMP(ORSUB,$J,1))
"RTN","ORWTIU",43,0)
 S ORHFS=$$HFS^ORWRP()
"RTN","ORWTIU",44,0)
 D HFSOPEN^ORWRP(ORHANDLE,ORHFS,"W")
"RTN","ORWTIU",45,0)
 I POP D  Q
"RTN","ORWTIU",46,0)
 . I $D(ROOT) D SETITEM^ORWRP(.ROOT,"ERROR: Unable to open HFS file for TIU print")
"RTN","ORWTIU",47,0)
 D IOVAR^ORWRP(.ORIO,,,"P-WINHFS80")
"RTN","ORWTIU",48,0)
 N $ETRAP,$ESTACK
"RTN","ORWTIU",49,0)
 S $ETRAP="D ERR^ORWRP Q"
"RTN","ORWTIU",50,0)
 U IO
"RTN","ORWTIU",51,0)
 D RPC^TIUPD(.ORERR,ORDA,ORIO,ORFLG,ORWIN)
"RTN","ORWTIU",52,0)
 D HFSCLOSE^ORWRP(ORHANDLE,ORHFS)
"RTN","ORWTIU",53,0)
 Q
"RTN","ORWTIU",54,0)
GTLSTITM(ORY,ORTIUDA) ; Return single listbox item for document
"RTN","ORWTIU",55,0)
 Q:+$G(ORTIUDA)=0
"RTN","ORWTIU",56,0)
 S ORY=ORTIUDA_U_$$RESOLVE^TIUSRVLO(ORTIUDA)
"RTN","ORWTIU",57,0)
 Q
"RTN","ORWTIU",58,0)
IDNOTES(ORY)    ; Is ID Notes installed?
"RTN","ORWTIU",59,0)
 S ORY=$$PATCH^XPDUTL("TIU*1.0*100")
"RTN","ORWTIU",60,0)
 Q
"RTN","ORWTIU",61,0)
CANLINK(ORY,ORTITLE)    ;Can the title be an ID child?
"RTN","ORWTIU",62,0)
 ; DBIA #2322
"RTN","ORWTIU",63,0)
 S ORY=$$CANLINK^TIULP(ORTITLE)
"RTN","ORWTIU",64,0)
 Q
"RTN","ORWTIU",65,0)
GETCP(ORY,ORTIUDA) ; Checks required CP fields before signature
"RTN","ORWTIU",66,0)
 S ORY=""
"RTN","ORWTIU",67,0)
 N ORTITLE,ORAUTH,ORCOS,ORPSUMCD,ORPROCDT,ORROOT,ORERR
"RTN","ORWTIU",68,0)
 S ORERR="",ORROOT=$NA(^TMP("ORTIU",$J))
"RTN","ORWTIU",69,0)
 D EXTRACT^TIULQ(ORTIUDA,.ORROOT,.ORERR,".01;1202;1208;70201;70202",,,"I")
"RTN","ORWTIU",70,0)
 S ORTITLE=@ORROOT@(ORTIUDA,".01","I")
"RTN","ORWTIU",71,0)
 S ORAUTH=@ORROOT@(ORTIUDA,"1202","I")
"RTN","ORWTIU",72,0)
 S ORCOS=@ORROOT@(ORTIUDA,"1208","I")
"RTN","ORWTIU",73,0)
 S ORPSUMCD=@ORROOT@(ORTIUDA,"70201","I")
"RTN","ORWTIU",74,0)
 S ORPROCDT=@ORROOT@(ORTIUDA,"70202","I")
"RTN","ORWTIU",75,0)
 S ORY=ORAUTH_U_ORCOS_U_ORPSUMCD_U_ORPROCDT_U_ORTITLE
"RTN","ORWTIU",76,0)
 K @ORROOT
"RTN","ORWTIU",77,0)
 Q
"RTN","ORWTPD")
0^33^B17395751
"RTN","ORWTPD",1,0)
ORWTPD ; slc/jdl - Personal Reference Tool ;5/12/2001 11:59  4/17/2002 5:20 [4/29/02 9:40am]
"RTN","ORWTPD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**109,120,132**;Dec 17,1997
"RTN","ORWTPD",3,0)
 ;; Allow user to customize the CPRS reports date/time
"RTN","ORWTPD",4,0)
 ;; and max occurences setting
"RTN","ORWTPD",5,0)
 ;
"RTN","ORWTPD",6,0)
SUDF(Y,VALUE) ;----Set user default for all CPRS reports
"RTN","ORWTPD",7,0)
 N ERR,VALUE1 S ERR=""
"RTN","ORWTPD",8,0)
 S VALUE1=$P(VALUE,";")_";"_$P(VALUE,";",2)_";;;"_$P(VALUE,";",3)
"RTN","ORWTPD",9,0)
 I VALUE=$$GET^XPAR("DIV^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I") D DEL^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS ALL",1,ERR) K ERR Q
"RTN","ORWTPD",10,0)
 E  D EN^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS ALL",1,VALUE,ERR)
"RTN","ORWTPD",11,0)
 D EN^XPAR(DUZ_";VA(200,","ORCH CONTEXT REPORTS",1,VALUE1,ERR)
"RTN","ORWTPD",12,0)
 S Y=1
"RTN","ORWTPD",13,0)
 K ERR,VALUES1
"RTN","ORWTPD",14,0)
 Q
"RTN","ORWTPD",15,0)
 ;
"RTN","ORWTPD",16,0)
 ;
"RTN","ORWTPD",17,0)
SUINDV(Y,RPTS,VALUE) ;----Set user individual time/occ setting
"RTN","ORWTPD",18,0)
 ; RPTS format: RPTIen^RPTIen^RPTIen such as 1^2^3
"RTN","ORWTPD",19,0)
 I $L(RPTS)=0 Q
"RTN","ORWTPD",20,0)
 N ERR,RPTID,P1,P7 S ERR=0
"RTN","ORWTPD",21,0)
 S (P1,P7)=""
"RTN","ORWTPD",22,0)
 F I=1:1:$L(RPTS,"^") S RPTID=$P(RPTS,U,I) D
"RTN","ORWTPD",23,0)
 . S P1=$P($G(^ORD(101.24,RPTID,0)),U),P7=$P($G(^(0)),U,7)
"RTN","ORWTPD",24,0)
 . I "02345"[P7,(P1'="ORRP IMAGING") D DEL^XPAR("USR.`"_DUZ,"ORWRP TIME/OCC LIMITS INDV",RPTID,ERR) Q
"RTN","ORWTPD",25,0)
 . D EN^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS INDV",RPTID,VALUE,ERR)
"RTN","ORWTPD",26,0)
 Q
"RTN","ORWTPD",27,0)
 ;
"RTN","ORWTPD",28,0)
 ;
"RTN","ORWTPD",29,0)
GETIMG(Y,RPT) ; ----Get Image (local only) Time/Occ
"RTN","ORWTPD",30,0)
 N IMGID,BEG,END,MAX
"RTN","ORWTPD",31,0)
 S IMGID=0,Y=""
"RTN","ORWTPD",32,0)
 S IMGID=$O(^ORD(101.24,"B","ORRP IMAGING",0))
"RTN","ORWTPD",33,0)
 D GETINDV(.Y,IMGID)
"RTN","ORWTPD",34,0)
 I $L(Y) D
"RTN","ORWTPD",35,0)
 . S BEG=$$DT^ORCHTAB1($P(Y,";"))
"RTN","ORWTPD",36,0)
 . S END=$$DT^ORCHTAB1($P(Y,";",2))
"RTN","ORWTPD",37,0)
 . S MAX=$P(Y,";",3)
"RTN","ORWTPD",38,0)
 . S Y=BEG_"^"_END_"^"_MAX
"RTN","ORWTPD",39,0)
 I Y="" D GETDEF^ORWRA(.Y)
"RTN","ORWTPD",40,0)
 Q
"RTN","ORWTPD",41,0)
 ;
"RTN","ORWTPD",42,0)
 ;
"RTN","ORWTPD",43,0)
GETINDV(Y,RPT) ;----Get time/occ limits for this report
"RTN","ORWTPD",44,0)
 ;RPT:  Report IEN of 101.24
"RTN","ORWTPD",45,0)
 N CTX,X0,X4,X,IMGCTX
"RTN","ORWTPD",46,0)
 S X0=$G(^ORD(101.24,RPT,0)),X4=$G(^(4))
"RTN","ORWTPD",47,0)
 I "02345"[($P(X0,U,7)),($P(X0,U)'="ORRP IMAGING") Q
"RTN","ORWTPD",48,0)
 S CTX="^DIV^SYS^PKG"
"RTN","ORWTPD",49,0)
 S Y=$$GET^XPAR("USR.`"_DUZ_CTX,"ORWRP TIME/OCC LIMITS INDV",RPT,"I")
"RTN","ORWTPD",50,0)
 S:'$L(Y) Y=$$GET^XPAR("USR.`"_DUZ_CTX,"ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWTPD",51,0)
 I $P(^ORD(101.24,RPT,0),U,7)=1 S $P(Y,";",3)=""
"RTN","ORWTPD",52,0)
 I $P(X4,"^",2) S X=$P($P(Y,";"),"-",2) I X,X>$P(X4,"^",2) S Y="T-"_$P(X4,"^",2)_";"_$P(Y,";",2,99)
"RTN","ORWTPD",53,0)
 Q
"RTN","ORWTPD",54,0)
 ;
"RTN","ORWTPD",55,0)
 ;
"RTN","ORWTPD",56,0)
GETSETS(Y) ;----Get time/occ limit set for each report
"RTN","ORWTPD",57,0)
 N I,CNT,CAT S I=0,CNT=1,RST=""
"RTN","ORWTPD",58,0)
 F  S I=$O(^ORD(101.24,I)) Q:'I   D
"RTN","ORWTPD",59,0)
 .I $P($G(^ORD(101.24,I,0)),U,8)="R",$P($G(^ORD(101.24,I,0)),U,12)'="M" D
"RTN","ORWTPD",60,0)
 ..S CAT=$P(^ORD(101.24,I,0),U,7) I $S(CAT=1:1,CAT=6:1,CAT=4:1,1:0) D
"RTN","ORWTPD",61,0)
 ...D GETINDV(.RST,I)
"RTN","ORWTPD",62,0)
 ...I $L($P(^ORD(101.24,I,2),U,4))>0 S Y(CNT)=I_U_$P(^ORD(101.24,I,2),U,4)_U_RST
"RTN","ORWTPD",63,0)
 ...E  S Y(CNT)=I_U_$P(^ORD(101.24,I,2),U,3)_U_RST
"RTN","ORWTPD",64,0)
 ... S CNT=CNT+1
"RTN","ORWTPD",65,0)
 K I,CNT,RST,CAT
"RTN","ORWTPD",66,0)
 Q
"RTN","ORWTPD",67,0)
 ;
"RTN","ORWTPD",68,0)
GETDFLT(Y) ;----Get default time/occ limits for all reports
"RTN","ORWTPD",69,0)
 N VALUE
"RTN","ORWTPD",70,0)
 S Y=$$GET^XPAR("USR.`"_DUZ_"^DIV^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWTPD",71,0)
 ; make sure imaging report has same default setting
"RTN","ORWTPD",72,0)
 S VALUE=$P(Y,";")_";"_$P(Y,";",2)_";;;"_$P(Y,";",3)
"RTN","ORWTPD",73,0)
 D EN^XPAR(DUZ_";VA(200,","ORCH CONTEXT REPORTS",1,VALUE)
"RTN","ORWTPD",74,0)
 K VALUE
"RTN","ORWTPD",75,0)
 Q
"RTN","ORWTPD",76,0)
 ;
"RTN","ORWTPD",77,0)
 ;
"RTN","ORWTPD",78,0)
RSDFLT(Y) ;----Retrieve sys/pkg level default time/occ setting
"RTN","ORWTPD",79,0)
 N VALUE
"RTN","ORWTPD",80,0)
 S Y=$$GET^XPAR("DIV^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWTPD",81,0)
 ; make sure the imaging report parameter (ORCH CONTEXT REPORTS)
"RTN","ORWTPD",82,0)
 ; has same package level setting as "ORWRP TIME/OCC LIMITS ALL"
"RTN","ORWTPD",83,0)
 ;
"RTN","ORWTPD",84,0)
 S VALUE=$P(Y,";")_";"_$P(Y,";",2)_";;;"_$P(Y,";",3)
"RTN","ORWTPD",85,0)
 D EN^XPAR("PKG","ORCH CONTEXT REPORTS",1,VALUE,ERR)
"RTN","ORWTPD",86,0)
 Q
"RTN","ORWTPD",87,0)
 ;
"RTN","ORWTPD",88,0)
 ;
"RTN","ORWTPD",89,0)
DELDFLT(Y) ;----Delete user's default setting 
"RTN","ORWTPD",90,0)
 N ERR S ERR=""
"RTN","ORWTPD",91,0)
 D NDEL^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS INDV",.ERR)
"RTN","ORWTPD",92,0)
 ; make sure the div/sys/pkg level parameter doesn't exist
"RTN","ORWTPD",93,0)
 D NDEL^XPAR("DIV","ORWRP TIME/OCC LIMITS INDV",.ERR)
"RTN","ORWTPD",94,0)
 D NDEL^XPAR("SYS","ORWRP TIME/OCC LIMITS INDV",.ERR)
"RTN","ORWTPD",95,0)
 D NDEL^XPAR("PKG","ORWRP TIME/OCC LIMITS INDV",.ERR)
"RTN","ORWTPD",96,0)
 D DEL^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS ALL",1,.ERR)
"RTN","ORWTPD",97,0)
 ; imaging setting
"RTN","ORWTPD",98,0)
 D DEL^XPAR(DUZ_";VA(200,","ORCH CONTEXT REPORTS",1,.ERR)
"RTN","ORWTPD",99,0)
 K ERR
"RTN","ORWTPD",100,0)
 Q
"RTN","ORWTPD",101,0)
 ;
"RTN","ORWTPD",102,0)
 ;
"RTN","ORWTPD",103,0)
ACTDF(Y) ;----Make default setting take action for each report
"RTN","ORWTPD",104,0)
 N IND,DFLT,VALUE,X,X0,X4,MAX,DFLT1
"RTN","ORWTPD",105,0)
 S DFLT=$$GET^XPAR("USR.`"_DUZ_"^DIV^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWTPD",106,0)
 S IND=0,X=$P($P(DFLT,";"),"-",2)
"RTN","ORWTPD",107,0)
 F  S IND=$O(^ORD(101.24,IND)) Q:'IND  S X0=$G(^(IND,0)),X4=$G(^(4)) D
"RTN","ORWTPD",108,0)
 . I $P(X0,"^",8)="R",$P(X0,"^",12)'="M" D
"RTN","ORWTPD",109,0)
 .. S MAX=$P(X4,"^",2),DFLT1=DFLT
"RTN","ORWTPD",110,0)
 .. I MAX,X,X>MAX S DFLT1="T-"_MAX_";"_$P(DFLT,";",2,99)
"RTN","ORWTPD",111,0)
 .. D SUINDV(.Y,IND,DFLT1)
"RTN","ORWTPD",112,0)
 ; make sure imaging report has same default setting
"RTN","ORWTPD",113,0)
 S VALUE=$P(DFLT,";")_";"_$P(DFLT,";",2)_";;;"_$P(DFLT,";",3)
"RTN","ORWTPD",114,0)
 D EN^XPAR(DUZ_";VA(200,","ORCH CONTEXT REPORTS",1,VALUE)
"RTN","ORWTPD",115,0)
 Q
"RTN","ORWU")
0^11^B55063694
"RTN","ORWU",1,0)
ORWU ; SLC/KCM - General Utilites for Windows Calls; 2/28/01 [4/4/02 2:07pm]
"RTN","ORWU",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132**;Dec 17, 1997
"RTN","ORWU",3,0)
 ;
"RTN","ORWU",4,0)
DT(Y,X,%DT) ; Returns internal Fileman Date/Time
"RTN","ORWU",5,0)
 ; change the '00:00' that could be passed so Fileman doesn't reject
"RTN","ORWU",6,0)
 I $L($P(X,"@",2)),("00000000"[$TR($P(X,"@",2),":","")) S $P(X,"@",2)="00:00:01"
"RTN","ORWU",7,0)
 S %DT=$G(%DT,"TS") D ^%DT K %DT
"RTN","ORWU",8,0)
 Q
"RTN","ORWU",9,0)
VALDT(Y,X,%DT) ; Validate date/time entry
"RTN","ORWU",10,0)
 S:'$D(%DT) %DT="TX" D ^%DT
"RTN","ORWU",11,0)
 Q
"RTN","ORWU",12,0)
USERINFO(REC) ; return relevant info for current user
"RTN","ORWU",13,0)
 ; return DUZ^NAME^USRCLS^CANSIGN^ISPROVIDER^ORDERROLE^NOORDER^DTIME^
"RTN","ORWU",14,0)
 ;        COUNTDOWN^ENABLEVERIFY^NOTIFYAPPS^MSGHANG^DOMAIN^SERVICE^
"RTN","ORWU",15,0)
 ;        AUTOSAVE^INITTAB^LASTTAB^WEBACCESS^ALLOWHOLD^ISRPL^RPLLIST^
"RTN","ORWU",16,0)
 ;        CORTABS^RPTTAB
"RTN","ORWU",17,0)
 N X,ORRPL,ORRPL1,ORRPL2,ORTAB,CORTABS,RPTTAB,ORDT,OREFF,OREXP,ORDATEOK
"RTN","ORWU",18,0)
 S REC=DUZ_U_$P(^VA(200,DUZ,0),U)
"RTN","ORWU",19,0)
 S $P(REC,U,3)=$S($D(^XUSEC("ORES",DUZ)):3,$D(^XUSEC("ORELSE",DUZ)):2,$D(^XUSEC("OREMAS",DUZ)):1,1:0)
"RTN","ORWU",20,0)
 S $P(REC,U,4)=$D(^XUSEC("ORES",DUZ))&$D(^XUSEC("PROVIDER",DUZ))
"RTN","ORWU",21,0)
 S $P(REC,U,5)=$D(^XUSEC("PROVIDER",DUZ))
"RTN","ORWU",22,0)
 S $P(REC,U,6)=$$ORDROLE
"RTN","ORWU",23,0)
 S $P(REC,U,7)=$$GET^XPAR("USR^SYS^PKG","ORWOR DISABLE ORDERING",1,"I")
"RTN","ORWU",24,0)
 S $P(REC,U,8)=$$GET^XPAR("USR^SYS","ORWOR TIMEOUT CHART",1,"I")
"RTN","ORWU",25,0)
 I '$P(REC,U,8),$G(DTIME) S $P(REC,U,8)=DTIME
"RTN","ORWU",26,0)
 S $P(REC,U,9)=$$GET^XPAR("USR^SYS^PKG","ORWOR TIMEOUT COUNTDOWN",1,"I")
"RTN","ORWU",27,0)
 S X=$$GET^XPAR("USR^SYS^PKG","ORWOR ENABLE VERIFY",1,"I")
"RTN","ORWU",28,0)
 S $P(REC,U,10)=$S(X=1:1,X=2:0,1:'$P(REC,U,7))
"RTN","ORWU",29,0)
 S $P(REC,U,11)=$$GET^XPAR("USR^SYS^PKG","ORWOR BROADCAST MESSAGES",1,"I")
"RTN","ORWU",30,0)
 S $P(REC,U,12)=$$GET^XPAR("USR^SYS^PKG","ORWOR AUTO CLOSE PT MSG",1,"I")
"RTN","ORWU",31,0)
 S $P(REC,U,13)=$$KSP^XUPARAM("WHERE")  ; domain
"RTN","ORWU",32,0)
 S $P(REC,U,14)=+$G(^VA(200,DUZ,5))     ; service/section
"RTN","ORWU",33,0)
 S $P(REC,U,15)=$$GET^XPAR("USR^SYS^PKG","ORWOR AUTOSAVE NOTE",1,"I")
"RTN","ORWU",34,0)
 S $P(REC,U,16)=$$GET^XPAR("USR^DIV^SYS^PKG","ORCH INITIAL TAB",1,"I")
"RTN","ORWU",35,0)
 S $P(REC,U,17)=$$GET^XPAR("USR^DIV^SYS^PKG","ORCH USE LAST TAB",1,"I")
"RTN","ORWU",36,0)
 S $P(REC,U,18)=$$GET^XPAR("USR^DIV^SYS^PKG","ORWOR DISABLE WEB ACCESS",1,"I")
"RTN","ORWU",37,0)
 S $P(REC,U,19)=$$GET^XPAR("SYS^PKG","ORWOR DISABLE HOLD ORDERS",1,"I")
"RTN","ORWU",38,0)
 ; Two pieces added by PKS on 11/5/2001 for "Reports Only" functions:
"RTN","ORWU",39,0)
 S ORRPL=$G(^VA(200,DUZ,101))           ; RPL node.
"RTN","ORWU",40,0)
 S ORRPL1=$P(ORRPL,U)
"RTN","ORWU",41,0)
 S $P(REC,U,20)=ORRPL1                  ; ISRPL piece.
"RTN","ORWU",42,0)
 S ORRPL2=$P(ORRPL,U,2)
"RTN","ORWU",43,0)
 S $P(REC,U,21)=ORRPL2                  ; RPLLIST piece.
"RTN","ORWU",44,0)
 ;
"RTN","ORWU",45,0)
 ; Additional pieces added for CPRS tabs access:
"RTN","ORWU",46,0)
 ; ** Remove semicolon and "**" chars when ready for RO stuff:
"RTN","ORWU",47,0)
 ; IA #___ allows read access to ^VA(200.01013 multiple.
"RTN","ORWU",48,0)
 S ORDT=DT                              ; Today.
"RTN","ORWU",49,0)
 S (CORTABS,RPTTAB)=0
"RTN","ORWU",50,0)
 S ORRPL=0
"RTN","ORWU",51,0)
 ;**F  S ORRPL=$O(^VA(200,DUZ,"ORD",ORRPL)) Q:ORRPL<1  D
"RTN","ORWU",52,0)
 ;**.S ORTAB=$G(^VA(200,DUZ,"ORD",ORRPL,0))
"RTN","ORWU",53,0)
 ;**.I ORTAB="" Q
"RTN","ORWU",54,0)
 ;**.S OREFF=$P(ORTAB,U,2)
"RTN","ORWU",55,0)
 ;**.S OREXP=$P(ORTAB,U,3)
"RTN","ORWU",56,0)
 ;**.S ORTAB=$P(ORTAB,U)
"RTN","ORWU",57,0)
 ;**.I ORTAB="" Q
"RTN","ORWU",58,0)
 ;**.S ORTAB=$G(^ORD(101.13,ORTAB,0))
"RTN","ORWU",59,0)
 ;**.I ORTAB="" Q
"RTN","ORWU",60,0)
 ;**.S ORTAB=$P(ORTAB,U)
"RTN","ORWU",61,0)
 ;**.I ORTAB="" Q
"RTN","ORWU",62,0)
 ;**.S ORTAB=$$UP^XLFSTR(ORTAB)
"RTN","ORWU",63,0)
 ;**.S ORDATEOK=1                             ; Default.
"RTN","ORWU",64,0)
 ;**.I ((OREFF="")!(OREFF>ORDT)) S ORDATEOK=0 ; Eff. date NG.
"RTN","ORWU",65,0)
 ;**.I ORDATEOK  D
"RTN","ORWU",66,0)
 ;**..I OREXP="" Q                            ; No exp. date.
"RTN","ORWU",67,0)
 ;**..I (OREXP<ORDT) S ORDATEOK=0             ; Exp. date NG.
"RTN","ORWU",68,0)
 ;**..I (OREXP=ORDT) S ORDATEOK=0             ; Exp. date NG.
"RTN","ORWU",69,0)
 ;**.;
"RTN","ORWU",70,0)
 ;**.; Set TRUE if OK:
"RTN","ORWU",71,0)
 ;**.I ((ORTAB="COR")&(ORDATEOK)) S CORTABS=1
"RTN","ORWU",72,0)
 ;**.I ((ORTAB="RPT")&(ORDATEOK)) S RPTTAB=1
"RTN","ORWU",73,0)
 ;
"RTN","ORWU",74,0)
 ; When done, set all valid tabs for access:
"RTN","ORWU",75,0)
 S $P(REC,U,22)=CORTABS                 ; "Core" tabs.
"RTN","ORWU",76,0)
 S $P(REC,U,23)=RPTTAB                  ; "Reports" tab.
"RTN","ORWU",77,0)
 ;
"RTN","ORWU",78,0)
 Q
"RTN","ORWU",79,0)
 ;
"RTN","ORWU",80,0)
HASKEY(VAL,KEY) ; returns TRUE if the user possesses the security key
"RTN","ORWU",81,0)
 S VAL=''$D(^XUSEC(KEY,DUZ))
"RTN","ORWU",82,0)
 Q
"RTN","ORWU",83,0)
HASOPTN(VAL,OPTION) ; returns TRUE if the user has access to a menu option
"RTN","ORWU",84,0)
 S VAL=+$$ACCESS^XQCHK(DUZ,OPTION)
"RTN","ORWU",85,0)
 I VAL'>0 S VAL=0
"RTN","ORWU",86,0)
 E  S VAL=1
"RTN","ORWU",87,0)
 Q
"RTN","ORWU",88,0)
NPHASKEY(VAL,NP,KEY)    ; returns TRUE if the person has the security key
"RTN","ORWU",89,0)
 S VAL=''$D(^XUSEC(KEY,NP))
"RTN","ORWU",90,0)
 Q
"RTN","ORWU",91,0)
ORDROLE()    ; returns the role a person takes in ordering
"RTN","ORWU",92,0)
 ; VAL: 0=nokey, 1=clerk, 2=nurse, 3=physician, 4=student, 5=bad keys
"RTN","ORWU",93,0)
 ;I '$G(ORWCLVER) Q 0  ; version of client is to old for ordering
"RTN","ORWU",94,0)
 I ($D(^XUSEC("OREMAS",DUZ))+$D(^XUSEC("ORELSE",DUZ))+$D(^XUSEC("ORES",DUZ)))>1 Q 5
"RTN","ORWU",95,0)
 I $D(^XUSEC("OREMAS",DUZ)) Q 1                           ; clerk
"RTN","ORWU",96,0)
 I $D(^XUSEC("ORELSE",DUZ)) Q 2                           ; nurse
"RTN","ORWU",97,0)
 I $D(^XUSEC("ORES",DUZ)),$D(^XUSEC("PROVIDER",DUZ)) Q 3  ; doctor
"RTN","ORWU",98,0)
 I $D(^XUSEC("PROVIDER",DUZ)) Q 4                         ; student
"RTN","ORWU",99,0)
 Q 0
"RTN","ORWU",100,0)
VALIDSIG(ESOK,X) ; returns TRUE if valid electronic signature
"RTN","ORWU",101,0)
 S X=$$DECRYP^XUSRB1(X),ESOK=0                   ; network encrypted
"RTN","ORWU",102,0)
 D HASH^XUSHSHP
"RTN","ORWU",103,0)
 I X=$P($G(^VA(200,+DUZ,20)),U,4) S ESOK=1
"RTN","ORWU",104,0)
 Q
"RTN","ORWU",105,0)
TOOLMENU(ORLST) ; returns a list of items for the Tools menu
"RTN","ORWU",106,0)
 N ANENT
"RTN","ORWU",107,0)
 S ANENT="ALL^"_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+$G(^(5)),1:"")
"RTN","ORWU",108,0)
 D GETLST^XPAR(.ORLST,ANENT,"ORWT TOOLS MENU","N")
"RTN","ORWU",109,0)
 Q
"RTN","ORWU",110,0)
ACTLOC(LOC) ; Function: returns TRUE if active hospital location
"RTN","ORWU",111,0)
 N D0,X I +$G(^SC(LOC,"OOS")) Q 0                ; screen out OOS entry
"RTN","ORWU",112,0)
 S D0=+$G(^SC(LOC,42)) I D0 D WIN^DGPMDDCF Q 'X  ; chk out of svc wards
"RTN","ORWU",113,0)
 S X=$G(^SC(LOC,"I")) I +X=0 Q 1                 ; no inactivate date
"RTN","ORWU",114,0)
 I DT>$P(X,U)&($P(X,U,2)=""!(DT<$P(X,U,2))) Q 0  ; chk reactivate date
"RTN","ORWU",115,0)
 Q 1                                             ; must still be active
"RTN","ORWU",116,0)
 ;
"RTN","ORWU",117,0)
CLINLOC(Y,FROM,DIR) ; Return a set of clinics from HOSPITAL LOCATION
"RTN","ORWU",118,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",119,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",120,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",121,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",122,0)
 . . I ($P($G(^SC(IEN,0)),U,3)'="C")!('$$ACTLOC(IEN)) Q
"RTN","ORWU",123,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",124,0)
 Q
"RTN","ORWU",125,0)
INPLOC(Y,FROM,DIR) ;Return a set of wards from HOSPITAL LOCATION
"RTN","ORWU",126,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",127,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",128,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",129,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",130,0)
 . . I ($P($G(^SC(IEN,0)),U,3)'="W")!('$$ACTLOC(IEN)) Q
"RTN","ORWU",131,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",132,0)
 Q
"RTN","ORWU",133,0)
HOSPLOC(Y,FROM,DIR) ; Return a set of locations from HOSPITAL LOCATION
"RTN","ORWU",134,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",135,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",136,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",137,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",138,0)
 . . I '$$ACTLOC(IEN) Q
"RTN","ORWU",139,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",140,0)
 Q
"RTN","ORWU",141,0)
NEWPERS(Y,FROM,DIR,KEY,DATE,ALLUSERS) ; Return a set of names from the NEW PERSON file
"RTN","ORWU",142,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",143,0)
 ;  KEY=screen users by security key (optional)
"RTN","ORWU",144,0)
 ;  DATE=checks for an active person class on this date (optional)
"RTN","ORWU",145,0)
 N I,IEN,CNT S I=0,CNT=44,KEY=$G(KEY),DATE=$G(DATE)
"RTN","ORWU",146,0)
 F  Q:I'<CNT  S FROM=$O(^VA(200,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",147,0)
 . S IEN="" F  S IEN=$O(^VA(200,"B",FROM,IEN),DIR) Q:'IEN  D 
"RTN","ORWU",148,0)
 . . I $L(KEY),'$D(^XUSEC(KEY,+IEN)) Q
"RTN","ORWU",149,0)
 . . I +$G(ALLUSERS)=0,'$$PROVIDER^XUSER(IEN) Q  ; terminated user
"RTN","ORWU",150,0)
 . . I DATE>0,$$GET^XUA4A72(IEN,DATE)<1 Q
"RTN","ORWU",151,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",152,0)
 Q
"RTN","ORWU",153,0)
GBLREF(VAL,FN) ; return global reference for file number
"RTN","ORWU",154,0)
 S VAL="" Q:'FN
"RTN","ORWU",155,0)
 S VAL=$$ROOT^DILFD(+FN)
"RTN","ORWU",156,0)
 ; I $E($RE(VAL))="," S VAL=$E(VAL,1,$L(VAL)-1)_")"
"RTN","ORWU",157,0)
 ; I $E($RE(VAL))="(" S VAL=$P(VAL,"(",1) 
"RTN","ORWU",158,0)
 Q
"RTN","ORWU",159,0)
GENERIC(Y,FROM,DIR,REF) ; Return a set of entries from xref in REF
"RTN","ORWU",160,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",161,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",162,0)
 F  Q:I'<CNT  S FROM=$O(@REF@(FROM),DIR) Q:FROM=""  D
"RTN","ORWU",163,0)
 . S IEN="" F  S IEN=$O(@REF@(FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",164,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",165,0)
 Q
"RTN","ORWU",166,0)
EXTNAME(VAL,IEN,FN) ; return external form of pointer
"RTN","ORWU",167,0)
 ; IEN=internal number, FN=file number
"RTN","ORWU",168,0)
 N REF S REF=$G(^DIC(FN,0,"GL")),VAL=""
"RTN","ORWU",169,0)
 I $L(REF),+IEN S VAL=$P($G(@(REF_IEN_",0)")),U)
"RTN","ORWU",170,0)
 Q
"RTN","ORWU",171,0)
PARAM(VAL,APARAM)       ; return a parameter value for a user
"RTN","ORWU",172,0)
 ; call assumes current user, default entities, single instance
"RTN","ORWU",173,0)
 S VAL=$$GET^XPAR("ALL",APARAM,1,"I")
"RTN","ORWU",174,0)
 Q
"RTN","ORWU",175,0)
DEVICE(Y,FROM,DIR) ; Return a subset of entries from the Device file
"RTN","ORWU",176,0)
 ; .LST(n)=IEN;Name^DisplayName^Location^RMar^PLen
"RTN","ORWU",177,0)
 ; FROM=text to $O from, DIR=$O direction
"RTN","ORWU",178,0)
 N I,IEN,CNT,SHOW,X S I=0,CNT=20
"RTN","ORWU",179,0)
 I FROM["<" S FROM=$RE($P($RE(FROM),"<  ",2))
"RTN","ORWU",180,0)
 F  Q:I'<CNT  S FROM=$O(^%ZIS(1,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",181,0)
 . S IEN=0 F  S IEN=$O(^%ZIS(1,"B",FROM,IEN)) Q:'IEN  D
"RTN","ORWU",182,0)
 .. N X0,X1,X90,X91,X95,XTYPE,XSTYPE,XTIME,%A,%X,POP
"RTN","ORWU",183,0)
 .. Q:'$D(^%ZIS(1,IEN,0))  S X0=^(0),X1=$G(^(1)),X90=$G(^(90)),X91=$G(^(91)),X95=$G(^(95)),XSTYPE=$G(^("SUBTYPE")),XTIME=$G(^("TIME")),XTYPE=$G(^("TYPE"))
"RTN","ORWU",184,0)
 .. I $E($G(^%ZIS(2,+XSTYPE,0)))'="P" Q  ;Printers only
"RTN","ORWU",185,0)
 .. S X=$P(XTYPE,"^") I X'="TRM",X'="HG",X'="HFS",X'="CHAN" Q  ;Device Types
"RTN","ORWU",186,0)
 .. S X=X0 I ($P(X,U,2)="0")!($P(X,U,12)=2) Q  ;Queuing allowed
"RTN","ORWU",187,0)
 .. S X=+X90 I X,(X'>DT) Q  ;Out of Service
"RTN","ORWU",188,0)
 .. I XTIME]"" S %A=$P(XTIME,"^"),%X=$P($H,",",2),%=%X\60#60+(%X\3600*100),%X=$P(%A,"-",2) I %X'<%A&(%'>%X&(%'<%A))!(%X<%A&(%'<%A!(%'>%X))) Q  ;Prohibited Times
"RTN","ORWU",189,0)
 .. S POP=0
"RTN","ORWU",190,0)
 .. I X95]"" S %X=$G(DUZ(0)) I %X'="@" S POP=1 F %A=1:1:$L(%X) I X95[$E(%X,%A) S POP=0 Q
"RTN","ORWU",191,0)
 .. Q:POP  ;Security check
"RTN","ORWU",192,0)
 .. S SHOW=$P(X0,U) I SHOW'=FROM S SHOW=FROM_"  <"_SHOW_">"
"RTN","ORWU",193,0)
 .. S I=I+1,Y(I)=IEN_";"_$P(X0,U)_U_SHOW_U_$P(X1,U)_U_$P(X91,U)_U_$P(X91,U,3)
"RTN","ORWU",194,0)
 Q
"RTN","ORWU",195,0)
URGENCY(Y) ; -- retrieve set values from dd for discharge summary urgency
"RTN","ORWU",196,0)
 N ORDD,I,X
"RTN","ORWU",197,0)
 D FIELD^DID(8925,.09,"","POINTER","ORDD")
"RTN","ORWU",198,0)
 F I=1:1 S X=$P(ORDD("POINTER"),";",I) Q:X=""   S Y(I)=$TR(X,":","^")
"RTN","ORWU",199,0)
 Q
"RTN","ORWU",200,0)
PATCH(VAL,X) ; Return 1 if patch X is installed
"RTN","ORWU",201,0)
 S VAL=$$PATCH^XPDUTL(X)
"RTN","ORWU",202,0)
 Q
"RTN","ORWU",203,0)
VERSRV(VAL,X,CLVER)   ; Return server version of option name
"RTN","ORWU",204,0)
 S ORWCLVER=$G(CLVER)  ; leave in partition for session
"RTN","ORWU",205,0)
 N ORLST
"RTN","ORWU",206,0)
 D FIND^DIC(19,"",1,"X",X,1,,,,"ORLST")
"RTN","ORWU",207,0)
 I 'ORLST("DILIST",0) S VAL="" Q
"RTN","ORWU",208,0)
 S VAL=ORLST("DILIST","ID",1,1)
"RTN","ORWU",209,0)
 S VAL=$P(VAL,"version ",2)
"RTN","ORWU",210,0)
 ;N IEN S VAL="",IEN=$O(^DIC(19,"B",X,0)) Q:'IEN
"RTN","ORWU",211,0)
 ;S VAL=$P($P($G(^DIC(19,IEN,0)),U,2),"version ",2)
"RTN","ORWU",212,0)
 Q
"RTN","ORWU",213,0)
  
"RTN","ORWUL")
0^32^B45117098
"RTN","ORWUL",1,0)
ORWUL ; SLC/KCM/JLI - Listview Selection ;1/25/02  14:09 [2/4/02 12:23pm] 4/9/02 4:15PM
"RTN","ORWUL",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,117,131,132**;Dec 17, 1997
"RTN","ORWUL",3,0)
 ;
"RTN","ORWUL",4,0)
QV4DG(VAL,DGRP) ; return the quick order list, given a display group name
"RTN","ORWUL",5,0)
 N NM
"RTN","ORWUL",6,0)
 S VAL="0^0"
"RTN","ORWUL",7,0)
 I 'DGRP S DGRP=+$O(^ORD(100.98,"B",DGRP,0))
"RTN","ORWUL",8,0)
 S NM=$$GET^XPAR("ALL","ORWDQ QUICK VIEW",DGRP,"I")
"RTN","ORWUL",9,0)
 Q:'$L(NM)
"RTN","ORWUL",10,0)
 D QV4NM(.VAL,NM)
"RTN","ORWUL",11,0)
 Q
"RTN","ORWUL",12,0)
QV4NM(VAL,QVNAM)       ; return the current quick list and item count
"RTN","ORWUL",13,0)
 ; VAL: ListIEN^ItemCount
"RTN","ORWUL",14,0)
 N J,CNT ;117
"RTN","ORWUL",15,0)
 S VAL=+$O(^ORD(101.44,"B",QVNAM,0))
"RTN","ORWUL",16,0)
 S (J,CNT)=0 F  S J=$O(^ORD(101.44,VAL,10,J)) Q:'+J  I '$$QODIS(VAL,J) S CNT=CNT+1 ;117
"RTN","ORWUL",17,0)
 S $P(VAL,U,2)=CNT ;117
"RTN","ORWUL",18,0)
 Q
"RTN","ORWUL",19,0)
QVSUB(LST,IEN,FIRST,LAST)       ; return subset of orders in view
"RTN","ORWUL",20,0)
 N I,J,ID ;117
"RTN","ORWUL",21,0)
 I $L(FIRST),$L(LAST) D
"RTN","ORWUL",22,0)
 . F I=+FIRST:1:+LAST D
"RTN","ORWUL",23,0)
 .. I $D(^ORD(101.44,IEN,10,I,0))>0 D
"RTN","ORWUL",24,0)
 ... I '$$QODIS(IEN,I) S LST(I)=^ORD(101.44,IEN,10,I,0)
"RTN","ORWUL",25,0)
 E  D
"RTN","ORWUL",26,0)
 . S (I,J)=0 F  S I=$O(^ORD(101.44,IEN,10,I)) Q:'+I  I '$$QODIS(IEN,I) S J=J+1,LST(J)=^ORD(101.44,IEN,10,I,0) ;117
"RTN","ORWUL",27,0)
 Q
"RTN","ORWUL",28,0)
QODIS(IEN,SUB) ;Determines if personal quick order is disabled
"RTN","ORWUL",29,0)
 ;returns 1 if it is else 0.  This section added with patch 117
"RTN","ORWUL",30,0)
 I $P($G(^ORD(101.41,+$P($G(^ORD(101.44,IEN,10,SUB,0)),"^"),0)),"^",3)'="" Q 1
"RTN","ORWUL",31,0)
 Q 0
"RTN","ORWUL",32,0)
QVIDX(VAL,IEN,FROM)     ; return index of item beginning with FROM
"RTN","ORWUL",33,0)
 N I,X
"RTN","ORWUL",34,0)
 S VAL=0
"RTN","ORWUL",35,0)
 S X=$O(^ORD(101.44,IEN,10,"C",FROM))
"RTN","ORWUL",36,0)
 I '$L(X) Q
"RTN","ORWUL",37,0)
 S I=$O(^ORD(101.44,IEN,10,"C",X,0))
"RTN","ORWUL",38,0)
 Q:'I
"RTN","ORWUL",39,0)
 S:'$$QODIS(IEN,I) VAL=+I_U_X
"RTN","ORWUL",40,0)
 Q
"RTN","ORWUL",41,0)
FV4DG(VAL,DGNM)       ; return the current full list & item count
"RTN","ORWUL",42,0)
 S VAL=$O(^ORD(101.44,"B","ORWDSET "_DGNM,0))
"RTN","ORWUL",43,0)
 I 'VAL D
"RTN","ORWUL",44,0)
 . N UPDTIME,ATTEMPT
"RTN","ORWUL",45,0)
 . S UPDTIME=$G(^ORD(101.43,"AH","S."_DGNM)),ATTEMPT=0
"RTN","ORWUL",46,0)
 . I UPDTIME="" S UPDTIME=$H,^ORD(101.43,"AH","S."_DGNM)=UPDTIME
"RTN","ORWUL",47,0)
 . D FVBLD
"RTN","ORWUL",48,0)
 . S VAL=$O(^ORD(101.44,"B","ORWDSET "_DGNM,0))
"RTN","ORWUL",49,0)
 I ($P(^ORD(101.44,+VAL,0),U,6)'=$G(^ORD(101.43,"AH","S."_DGNM))) D
"RTN","ORWUL",50,0)
 . ; -- see if a task is already queued to rebuild this
"RTN","ORWUL",51,0)
 . L +^XTMP("ORWDSET "_DGNM):2 E  Q
"RTN","ORWUL",52,0)
 . N ZTSK S ZTSK=+$G(^XTMP("ORWDSET "_DGNM,"TASK"))
"RTN","ORWUL",53,0)
 . I ZTSK D ISQED^%ZTLOAD S ZTSK=+ZTSK(0)
"RTN","ORWUL",54,0)
 . I ZTSK L -^XTMP("ORWDSET "_DGNM) Q
"RTN","ORWUL",55,0)
 . ; -- create a task to rebuild the list
"RTN","ORWUL",56,0)
 . D FVBLDQ(DGNM)
"RTN","ORWUL",57,0)
 . L -^TMP("ORWDSET "_DGNM)
"RTN","ORWUL",58,0)
 S $P(VAL,U,2)=$P($G(^ORD(101.44,+VAL,20,0)),U,4)
"RTN","ORWUL",59,0)
 Q
"RTN","ORWUL",60,0)
FVSUB(LST,IEN,FIRST,LAST)       ; return subset of orders in view
"RTN","ORWUL",61,0)
 N I
"RTN","ORWUL",62,0)
 F I=FIRST:1:LAST S LST(I)=^ORD(101.44,IEN,20,I,0)
"RTN","ORWUL",63,0)
 Q
"RTN","ORWUL",64,0)
FVIDX(VAL,IEN,FROM)     ; return index of item beginning with FROM
"RTN","ORWUL",65,0)
 N I,X
"RTN","ORWUL",66,0)
 S VAL=0
"RTN","ORWUL",67,0)
 S X=$O(^ORD(101.44,IEN,20,"C",FROM))
"RTN","ORWUL",68,0)
 I '$L(X) Q
"RTN","ORWUL",69,0)
 S I=$O(^ORD(101.44,IEN,20,"C",X,0))
"RTN","ORWUL",70,0)
 Q:'I
"RTN","ORWUL",71,0)
 S VAL=+I_U_X
"RTN","ORWUL",72,0)
 Q
"RTN","ORWUL",73,0)
FVBLDQ(DGNM,ATTEMPT)    ; queue rebuild of set
"RTN","ORWUL",74,0)
 N ZTRTN,ZTIO,ZTDTH,ZTSAVE,ZTDESC,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC,ZTSK
"RTN","ORWUL",75,0)
 N UPDTIME S UPDTIME=$G(^ORD(101.43,"AH","S."_DGNM))
"RTN","ORWUL",76,0)
 I '$G(UPDTIME) S UPDTIME=$H,^ORD(101.43,"AH","S."_DGNM)=UPDTIME
"RTN","ORWUL",77,0)
 S ATTEMPT=$G(ATTEMPT)+1
"RTN","ORWUL",78,0)
 S ZTRTN="FVBLD^ORWUL",ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,2)
"RTN","ORWUL",79,0)
 S ZTSAVE("ATTEMPT")="",ZTSAVE("UPDTIME")="",ZTSAVE("DGNM")=""
"RTN","ORWUL",80,0)
 S ZTDESC="Rebuild quick view for "_DGNM
"RTN","ORWUL",81,0)
 D ^%ZTLOAD
"RTN","ORWUL",82,0)
 S ^XTMP("ORWDSET "_DGNM,0)=$$FMADD^XLFDT($$NOW^XLFDT,2)
"RTN","ORWUL",83,0)
 S ^XTMP("ORWDSET "_DGNM,"TASK")=ZTSK
"RTN","ORWUL",84,0)
 Q
"RTN","ORWUL",85,0)
FVBLD ; rebuild an ORWSET entry
"RTN","ORWUL",86,0)
 ; ATTEMPT, UPDTIME, DGNM expected in environment
"RTN","ORWUL",87,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWUL",88,0)
 I $D(ZTQUEUED),(ATTEMPT<20),(UPDTIME'=$G(^ORD(101.43,"AH","S."_DGNM))) D FVBLDQ(DGNM,ATTEMPT) Q 
"RTN","ORWUL",89,0)
 ; -- create new entry in 101.44 for the set
"RTN","ORWUL",90,0)
 N FDA,FDAIEN,LVW,ADDL
"RTN","ORWUL",91,0)
 S FDA(101.44,"+1,",.01)="ORWDNEW "_DGNM
"RTN","ORWUL",92,0)
 S FDA(101.44,"+1,",6)=UPDTIME
"RTN","ORWUL",93,0)
 D UPDATE^DIE("","FDA","FDAIEN")
"RTN","ORWUL",94,0)
 S LVW=+FDAIEN(1) I 'LVW G FVBLDX
"RTN","ORWUL",95,0)
 ; -- copy all the active items into the list multiple
"RTN","ORWUL",96,0)
 N ASET,SEQ,NM,OI,INACT,CURTM,NMLST,X,Y
"RTN","ORWUL",97,0)
 S ASET="S."_DGNM,SEQ=0,CURTM=$$NOW^XLFDT
"RTN","ORWUL",98,0)
 K ^ORD(101.44,LVW,20)
"RTN","ORWUL",99,0)
 S ^ORD(101.44,LVW,20,0)="^101.442PA"
"RTN","ORWUL",100,0)
 S NM="" F  S NM=$O(^ORD(101.43,ASET,NM)) Q:NM=""  D
"RTN","ORWUL",101,0)
 . K NMLST
"RTN","ORWUL",102,0)
 . S OI=0 F  S OI=$O(^ORD(101.43,ASET,NM,OI)) Q:'OI  D
"RTN","ORWUL",103,0)
 . . S X=^ORD(101.43,ASET,NM,OI),INACT=$P(X,U,3)
"RTN","ORWUL",104,0)
 . . I INACT,CURTM>INACT Q
"RTN","ORWUL",105,0)
 . . I 'X S ADDL=""
"RTN","ORWUL",106,0)
 . . E    S ADDL="     <"_$P(X,U,4)_">"
"RTN","ORWUL",107,0)
 . . I $P($G(^ORD(101.43,OI,"PS")),U,6) S ADDL=ADDL_"     NF"
"RTN","ORWUL",108,0)
 . . S NMLST($P(X,U,2)_ADDL,OI)=""
"RTN","ORWUL",109,0)
 . I '$D(NMLST) Q
"RTN","ORWUL",110,0)
 . S X="" F  S X=$O(NMLST(X)) Q:X=""  D
"RTN","ORWUL",111,0)
 . . S Y=0 F  S Y=$O(NMLST(X,Y)) Q:'Y  D
"RTN","ORWUL",112,0)
 . . . S SEQ=SEQ+1
"RTN","ORWUL",113,0)
 . . . S ^ORD(101.44,LVW,20,SEQ,0)=Y_U_X
"RTN","ORWUL",114,0)
 . . . S ^ORD(101.44,LVW,20,"C",$$UP^XLFSTR(X),SEQ)=""
"RTN","ORWUL",115,0)
 S ^ORD(101.44,LVW,20,0)="^101.442PA^"_SEQ_U_SEQ
"RTN","ORWUL",116,0)
 ; -- switch the names of the entries (SET->OLD, NEW->SET)
"RTN","ORWUL",117,0)
 L +^ORD(101.44,"ORWDSET "_DGNM):60
"RTN","ORWUL",118,0)
 S IEN=$O(^ORD(101.44,"B","ORWDSET "_DGNM,0))
"RTN","ORWUL",119,0)
 I IEN K FDA S FDA(101.44,IEN_",",.01)="ORWDOLD "_$H
"RTN","ORWUL",120,0)
 D FILE^DIE("","FDA")
"RTN","ORWUL",121,0)
 K FDA S FDA(101.44,LVW_",",.01)="ORWDSET "_DGNM
"RTN","ORWUL",122,0)
 D FILE^DIE("","FDA")
"RTN","ORWUL",123,0)
 L -^ORD(101.44,"ORWDSET "_DGNM)
"RTN","ORWUL",124,0)
FVBLDX ; -- clean up ^XTMP node
"RTN","ORWUL",125,0)
 K ^XTMP("ORWDSET "_DGNM)
"RTN","ORWUL",126,0)
 D FVCLN
"RTN","ORWUL",127,0)
 Q
"RTN","ORWUL",128,0)
FVCLN ; clean up old set-type entries in the 101.44
"RTN","ORWUL",129,0)
 N LNM,DIK,DA
"RTN","ORWUL",130,0)
 S LNM="ORWDOLD",DIK="^ORD(101.44,"
"RTN","ORWUL",131,0)
 F  S LNM=$O(^ORD(101.44,"B",LNM)) Q:$E(LNM,1,7)'="ORWDOLD"  D
"RTN","ORWUL",132,0)
 . I ($H-$P(LNM," ",2))<2 Q  ; wait until entry is 2 days old
"RTN","ORWUL",133,0)
 . S DA=0 F  S DA=$O(^ORD(101.44,"B",LNM,DA)) Q:'DA  D ^DIK
"RTN","ORWUL",134,0)
 Q
"RTN","ORWUL",135,0)
QVSAVE(LVW,X,QLST)       ; Save a quick order list
"RTN","ORWUL",136,0)
 ;    X:  Name of List
"RTN","ORWUL",137,0)
 ; QLST: Ptr101.41^DisplayName
"RTN","ORWUL",138,0)
 N DIC,DA,DLAYGO,Y,LVW,SEQ,I
"RTN","ORWUL",139,0)
 S DIC="^ORD(101.44,",DIC(0)="L",DLAYGO=101.44,LVW=0
"RTN","ORWUL",140,0)
 D ^DIC Q:'Y
"RTN","ORWUL",141,0)
 S LVW=+Y,SEQ=0
"RTN","ORWUL",142,0)
 K ^ORD(101.44,LVW,10)
"RTN","ORWUL",143,0)
 S ^ORD(101.44,LVW,10,0)="^101.441PA"
"RTN","ORWUL",144,0)
 S I=0  F  S I=$O(QLST(I)) Q:'I  D
"RTN","ORWUL",145,0)
 . S SEQ=SEQ+1,^ORD(101.44,LVW,10,SEQ,0)=QLST(I)
"RTN","ORWUL",146,0)
 . S ^ORD(101.44,LVW,10,"C",$$UP^XLFSTR($P(QLST(I),U,2)),SEQ)=""
"RTN","ORWUL",147,0)
 S ^ORD(101.44,LVW,10,0)="^101.441PA^"_SEQ_U_SEQ
"RTN","ORWUL",148,0)
 Q
"RTN","ORWUL",149,0)
MVRX ; move pharmacy quick orders into 101.44
"RTN","ORWUL",150,0)
 D MVQO("O RX")
"RTN","ORWUL",151,0)
 D MVQO("UD RX")
"RTN","ORWUL",152,0)
 Q
"RTN","ORWUL",153,0)
MVALL ; move all quick order lists into 101.44
"RTN","ORWUL",154,0)
 Q:$E($O(^ORD(101.44,"B","ORWDQ")),1,5)="ORWDQ"
"RTN","ORWUL",155,0)
 N SNM
"RTN","ORWUL",156,0)
 D BMES^XPDUTL("Moving personal quick orders into 101.44")
"RTN","ORWUL",157,0)
 F SNM="ANI","CARD","CSLT","CT","DO","IV RX","LAB","MAM","MRI","NM","O RX","PROC","RAD","TF","UD RX","US","VAS","XRAY" D
"RTN","ORWUL",158,0)
 . D MES^XPDUTL("-- moving: "_SNM)
"RTN","ORWUL",159,0)
 . D MVQO(SNM)
"RTN","ORWUL",160,0)
 Q
"RTN","ORWUL",161,0)
MVQO(DGNM)      ; move quick orders
"RTN","ORWUL",162,0)
 N ENT,PAR,TLST,QLST,DLG,X,X0,I,NOP,DNM
"RTN","ORWUL",163,0)
 S PAR=$O(^XTV(8989.51,"B","ORWDQ "_DGNM,0))
"RTN","ORWUL",164,0)
 S ENT="" F  S ENT=$O(^XTV(8989.5,"AC",PAR,ENT)) Q:'ENT  D
"RTN","ORWUL",165,0)
 . K TLST,QLST D GETLST^XPAR(.TLST,ENT,PAR,"I")
"RTN","ORWUL",166,0)
 . S I=0 F  S I=$O(TLST(I)) Q:'I  D
"RTN","ORWUL",167,0)
 . . S DLG=+TLST(I) Q:'DLG
"RTN","ORWUL",168,0)
 . . S X0=$G(^ORD(101.41,DLG,0)) Q:'$L(X0)
"RTN","ORWUL",169,0)
 . . S DNM=$$GET^XPAR(ENT,"ORWDQ DISPLAY NAME",DLG,"I")
"RTN","ORWUL",170,0)
 . . I '$L(DNM) S DNM=$P(^ORD(101.41,DLG,0),U,2)
"RTN","ORWUL",171,0)
 . . S QLST(I)=DLG_U_DNM
"RTN","ORWUL",172,0)
 . S X=$O(^XTV(8989.51,PAR,30,"AG",$P(ENT,";",2),0))
"RTN","ORWUL",173,0)
 . S X=$P(^XTV(8989.51,PAR,30,X,0),U,2)
"RTN","ORWUL",174,0)
 . S X=$P(^XTV(8989.518,X,0),U,2)
"RTN","ORWUL",175,0)
 . S X="ORWDQ "_X_$P(ENT,";")_" "_DGNM
"RTN","ORWUL",176,0)
 . D QVSAVE(.NOP,X,.QLST)
"RTN","ORWUL",177,0)
 . D EN^XPAR(ENT,"ORWDQ QUICK VIEW",DGNM,X)
"RTN","ORWUL",178,0)
 . ; D NDEL^XPAR(ENT,PAR) ; -- add later, after sure about conversion
"RTN","ORWUL",179,0)
 Q
"RTN","ORWUL",180,0)
ZCLEAN ; cleanup ORWDQ entries in Quick View file
"RTN","ORWUL",181,0)
 N ANAM,ANIEN,DIK,DA
"RTN","ORWUL",182,0)
 S ANAM="ORWDQ",DIK="^ORD(101.44,"
"RTN","ORWUL",183,0)
 F  S ANAM=$O(^ORD(101.44,"B",ANAM)) Q:$E(ANAM,1,5)'="ORWDQ"  D
"RTN","ORWUL",184,0)
 . W !,"deleting "_ANAM
"RTN","ORWUL",185,0)
 . S ANIEN=$O(^ORD(101.44,"B",ANAM,0))
"RTN","ORWUL",186,0)
 . S DA=ANIEN D ^DIK
"RTN","ORWUL",187,0)
 W !,"rebuilding entries"
"RTN","ORWUL",188,0)
 D MVALL
"RTN","ORWUL",189,0)
 Q
"RTN","ORY132")
0^3^B15476204
"RTN","ORY132",1,0)
ORY132 ;SLC/REV -- postinit rtn for OR*3*132 ;12/13/01  06:25 [4/29/02 4:53pm]
"RTN","ORY132",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**132**;Dec 17, 1997
"RTN","ORY132",3,0)
 ;
"RTN","ORY132",4,0)
 Q
"RTN","ORY132",5,0)
 ;
"RTN","ORY132",6,0)
PRE ; -- preinit
"RTN","ORY132",7,0)
 Q
"RTN","ORY132",8,0)
 ;
"RTN","ORY132",9,0)
POST ; -- postinit
"RTN","ORY132",10,0)
 N VER
"RTN","ORY132",11,0)
 S VER=$P($T(VERSION^ORY132),";",3)
"RTN","ORY132",12,0)
 I +$$PATCH^XPDUTL("TIU*1.0*109") D CPREG
"RTN","ORY132",13,0)
 I +$$PATCH^XPDUTL("TIU*1.0*112") D SURGREG
"RTN","ORY132",14,0)
 D SURGRPT
"RTN","ORY132",15,0)
 D SETVAL
"RTN","ORY132",16,0)
 D TASKJOB
"RTN","ORY132",17,0)
 D MAIL
"RTN","ORY132",18,0)
 ;
"RTN","ORY132",19,0)
 Q
"RTN","ORY132",20,0)
 ;
"RTN","ORY132",21,0)
TASKJOB ; Queue background task to update Order file for Alert Results field.
"RTN","ORY132",22,0)
 ;
"RTN","ORY132",23,0)
 N ZTRTN,ZTDESC,ZTIO,ZTSAVE,ZTDTH,ZTSK
"RTN","ORY132",24,0)
 ;
"RTN","ORY132",25,0)
 S ZTRTN="FIXALERT^ORY132",ZTDESC="OR*3*132 Post Install",ZTIO="",ZTSAVE("DUZ")="",ZTDTH=$H
"RTN","ORY132",26,0)
 D ^%ZTLOAD
"RTN","ORY132",27,0)
 I $G(ZTSK) D MES^XPDUTL("Order file update for OR*3*132 queued as task number "_ZTSK_".")
"RTN","ORY132",28,0)
 I '$G(ZTSK) D MES^XPDUTL("Order file update task did not queue")
"RTN","ORY132",29,0)
 ;
"RTN","ORY132",30,0)
 Q
"RTN","ORY132",31,0)
 ;
"RTN","ORY132",32,0)
SETVAL ;
"RTN","ORY132",33,0)
 N ORP,ORT
"RTN","ORY132",34,0)
 S ORP="ORWRP REPORT LIST",ORT=$O(^ORD(101.24,"B","ORRPW DOD",0))
"RTN","ORY132",35,0)
 I ORT D PUT^XPAR("PKG",ORP,8,ORT)
"RTN","ORY132",36,0)
 Q
"RTN","ORY132",37,0)
CPREG ; Register TIU Clinical Procedures RPCs if TIU*1.0*109 present
"RTN","ORY132",38,0)
 N MENU,RPC
"RTN","ORY132",39,0)
 S MENU="OR CPRS GUI CHART"
"RTN","ORY132",40,0)
 F RPC="TIU IS THIS A CLINPROC?","TIU IDENTIFY CLINPROC CLASS","TIU LONG LIST CLINPROC TITLES" D INSERT(MENU,RPC)
"RTN","ORY132",41,0)
 Q
"RTN","ORY132",42,0)
 ;
"RTN","ORY132",43,0)
SURGREG ; Register TIU SURGERY RPCs if TIU*1.0*112 present
"RTN","ORY132",44,0)
 N MENU,RPC
"RTN","ORY132",45,0)
 S MENU="OR CPRS GUI CHART"
"RTN","ORY132",46,0)
 F RPC="TIU IS THIS A SURGERY?","TIU IDENTIFY SURGERY CLASS","TIU LONG LIST SURGERY TITLES" D INSERT(MENU,RPC)
"RTN","ORY132",47,0)
 Q
"RTN","ORY132",48,0)
 ;
"RTN","ORY132",49,0)
INSERT(OPTION,RPC)      ; Call FM Updater with each RPC
"RTN","ORY132",50,0)
 ; Input  -- OPTION   Option file (#19) Name field (#.01)
"RTN","ORY132",51,0)
 ;           RPC      RPC sub-file (#19.05) RPC field (#.01)
"RTN","ORY132",52,0)
 ; Output -- None
"RTN","ORY132",53,0)
 N FDA,FDAIEN,ERR,DIERR
"RTN","ORY132",54,0)
 S FDA(19,"?1,",.01)=OPTION
"RTN","ORY132",55,0)
 S FDA(19.05,"?+2,?1,",.01)=RPC
"RTN","ORY132",56,0)
 D UPDATE^DIE("E","FDA","FDAIEN","ERR")
"RTN","ORY132",57,0)
 Q
"RTN","ORY132",58,0)
 ;
"RTN","ORY132",59,0)
SURGRPT ; Add Surgery report to Reports tab
"RTN","ORY132",60,0)
 N ORSURG,ORI,ORP,ORT,ORS,ORLST,ORERR,FOUND
"RTN","ORY132",61,0)
 S ORP="ORWRP REPORT LIST",ORT=$O(^ORD(101.24,"B","ORRP SURGERIES",0))
"RTN","ORY132",62,0)
 S ORSURG=$O(^ORD(101.24,"B","ORRP SURGERIES",0)),ORI=0,FOUND=0
"RTN","ORY132",63,0)
 D GETLST^XPAR(.ORLST,"PKG","ORWRP REPORT LIST","Q",.ORERR)
"RTN","ORY132",64,0)
 F  S ORI=$O(ORLST(ORI)) Q:+ORI=0!(FOUND)  D
"RTN","ORY132",65,0)
 . I $P(ORLST(ORI),U,2)=ORSURG S FOUND=1
"RTN","ORY132",66,0)
 Q:+FOUND
"RTN","ORY132",67,0)
 S ORS=+ORLST(ORLST)+5
"RTN","ORY132",68,0)
 D PUT^XPAR("PKG",ORP,ORS,ORT)
"RTN","ORY132",69,0)
 Q
"RTN","ORY132",70,0)
 ;
"RTN","ORY132",71,0)
FIXALERT ; convert "1" in ALERT ON RESULTS field to Ordering Provider
"RTN","ORY132",72,0)
 N ORX,ORDUZ,ORTEXT
"RTN","ORY132",73,0)
 S ORX=0 F  S ORX=$O(^OR(100,ORX)) Q:+$G(ORX)<1  D
"RTN","ORY132",74,0)
 .I $P($G(^OR(100,ORX,3)),U,10)=1 D
"RTN","ORY132",75,0)
 ..S ORDUZ=$$ORDERER^ORQOR2(ORX)
"RTN","ORY132",76,0)
 ..I +$G(ORDUZ)>1 S $P(^OR(100,ORX,3),U,10)=+$G(ORDUZ)
"RTN","ORY132",77,0)
 S TEXT(1)="Background task for OR*3*132 has completed."
"RTN","ORY132",78,0)
 ;
"RTN","ORY132",79,0)
 ; Send message to user, postmaster:
"RTN","ORY132",80,0)
 N XMSUB,XMTEXT,SMDUZ,SMY
"RTN","ORY132",81,0)
 S XMSUB="Patch OR*3*132 Tasked Post-Install Complete"  ; Msg subject.
"RTN","ORY132",82,0)
 S XMDUZ="Patch OR*3*132 Tasked Post Install"           ; Message "from."
"RTN","ORY132",83,0)
 S XMY(.5)="" S:$G(DUZ) XMY(DUZ)=""              ; To user,postmaster.
"RTN","ORY132",84,0)
 S XMTEXT="TEXT("
"RTN","ORY132",85,0)
 D ^XMD
"RTN","ORY132",86,0)
 ;
"RTN","ORY132",87,0)
 Q
"RTN","ORY132",88,0)
 ;
"RTN","ORY132",89,0)
SENDPAR(ANAME) ; Return true if the current parameter should be sent
"RTN","ORY132",90,0)
 I ANAME="ORCH INITIAL TAB" Q 1
"RTN","ORY132",91,0)
 I ANAME="ORWOR SHOW SURGERY TAB" Q 1
"RTN","ORY132",92,0)
 I ANAME="ORWOR PKI USE" Q 1
"RTN","ORY132",93,0)
 Q 0
"RTN","ORY132",94,0)
MAIL ; send bulletin of installation time
"RTN","ORY132",95,0)
 N COUNT,DIFROM,I,START,TEXT,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","ORY132",96,0)
 S COUNT=0
"RTN","ORY132",97,0)
 S XMSUB="Version "_$P($T(VERSION),";;",2)_" Installed"
"RTN","ORY132",98,0)
 S XMDUZ="CPRS PACKAGE"
"RTN","ORY132",99,0)
 F I="G.CPRS GUI INSTALL@ISC-SLC.VA.GOV",DUZ S XMY(I)=""
"RTN","ORY132",100,0)
 S XMTEXT="TEXT("
"RTN","ORY132",101,0)
 ;
"RTN","ORY132",102,0)
 S X=$P($T(VERSION),";;",2)
"RTN","ORY132",103,0)
 D LINE("Version "_X_" has been installed.")
"RTN","ORY132",104,0)
 D LINE(" ")
"RTN","ORY132",105,0)
 D LINE("Install complete:  "_$$FMTE^XLFDT($$NOW^XLFDT()))
"RTN","ORY132",106,0)
 ;
"RTN","ORY132",107,0)
 D ^XMD
"RTN","ORY132",108,0)
 Q
"RTN","ORY132",109,0)
 ;
"RTN","ORY132",110,0)
LINE(DATA)      ; set text into array
"RTN","ORY132",111,0)
 S COUNT=COUNT+1
"RTN","ORY132",112,0)
 S TEXT(COUNT)=DATA
"RTN","ORY132",113,0)
 Q
"RTN","ORY132",114,0)
 ;
"RTN","ORY132",115,0)
VERSION ;;19.7
"SEC","^DIC",101.24,101.24,0,"AUDIT")
@
"SEC","^DIC",101.24,101.24,0,"DD")
@
"SEC","^DIC",101.24,101.24,0,"DEL")
@
"SEC","^DIC",101.24,101.24,0,"LAYGO")
@
"SEC","^DIC",101.24,101.24,0,"RD")
 
"SEC","^DIC",101.24,101.24,0,"WR")
@
"UP",100,100.008,-1)
100^8
"UP",100,100.008,0)
100.008
"UP",100,100.0082,-2)
100^8
"UP",100,100.0082,-1)
100.008^.2
"UP",100,100.0082,0)
100.0082
"VER")
8.0^22.0
"^DD",100,100.008,.2,0)
EXTERNAL TEXT^100.0082^^.2;0
"^DD",100,100.008,.2,9)
@
"^DD",100,100.008,.2,21,0)
^.001^4^4^3020326^^^^
"^DD",100,100.008,.2,21,1,0)
This is the text of the order stored in external format.
"^DD",100,100.008,.2,21,2,0)
DO NOT EDIT THIS FIELD!  This field is used to create a Digital Signature.
"^DD",100,100.008,.2,21,3,0)
Editing this field will render the Digital Signature invalid and prevent
"^DD",100,100.008,.2,21,4,0)
the order from being processed.
"^DD",100,100.008,.2,"DT")
3020326
"^DD",100,100.008,4,0)
SIGNATURE STATUS^S^0:ON CHART w/written orders;1:ELECTRONIC;2:NOT SIGNED;3:NOT REQUIRED;4:ON CHART w/printed orders;5:NOT REQUIRED due to cancel;6:SERVICE CORRECTION to signed order;7:DIGITALLY SIGNED;^0;4^Q
"^DD",100,100.008,4,1,0)
^.1
"^DD",100,100.008,4,1,1,0)
100^AS2^MUMPS
"^DD",100,100.008,4,1,1,1)
N ORDA S ORDA=DA(1) D S1^ORDD100(ORDA,DA)
"^DD",100,100.008,4,1,1,2)
N ORDA S ORDA=DA(1) D S2^ORDD100(ORDA,DA)
"^DD",100,100.008,4,1,1,"%D",0)
^^2^2^2971028^^
"^DD",100,100.008,4,1,1,"%D",1,0)
^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,DA)
"^DD",100,100.008,4,1,1,"%D",2,0)
Allows retrieval of unsigned orders.
"^DD",100,100.008,4,1,1,"DT")
2961224
"^DD",100,100.008,4,3)
Select 0=On chart-written, 1=Electronic, 2=Not Signed, 3=Not Required, 4=On chart-printed, 5=Not Required-cancelled, 6=Service Correction, 7=Digitally Signed
"^DD",100,100.008,4,21,0)
^^4^4^2970228^^^
"^DD",100,100.008,4,21,1,0)
This is the signature status of the order.  Entries with a null value
"^DD",100,100.008,4,21,2,0)
in this field are assumed to have been entered through the back door
"^DD",100,100.008,4,21,3,0)
via specific package order entry options and do not require signature
"^DD",100,100.008,4,21,4,0)
unless so specified by the package.
"^DD",100,100.008,4,"DT")
3020314
"^DD",100,100.008,23,0)
DIGITAL SIGNATURE^FI^^2;3^K:$L(X)>100!($L(X)<1) X
"^DD",100,100.008,23,3)
Answer must be 1-100 characters in length.
"^DD",100,100.008,23,8.5)
^
"^DD",100,100.008,23,9)
^
"^DD",100,100.008,23,21,0)
^.001^1^1^3020314^^^
"^DD",100,100.008,23,21,1,0)
This is the digital signature of the order.
"^DD",100,100.008,23,"DT")
3020314
"^DD",100,100.008,24,0)
DRUG SCHEDULE^F^^2;4^K:$L(X)>3!($L(X)<1) X
"^DD",100,100.008,24,3)
Answer must be 1-3 characters in length.
"^DD",100,100.008,24,21,0)
^^11^11^3020425^
"^DD",100,100.008,24,21,1,0)
 This is the CS FEDERAL SCHEDULE of the drug as defined in the National
"^DD",100,100.008,24,21,2,0)
 Drug file (VA PRODUCT #50.68).  Pharmacy package further refines the
"^DD",100,100.008,24,21,3,0)
 schedule to:
"^DD",100,100.008,24,21,4,0)
   1    Sch. I Nar.
"^DD",100,100.008,24,21,5,0)
   2    II
"^DD",100,100.008,24,21,6,0)
   2n   II Non-Nar.
"^DD",100,100.008,24,21,7,0)
   3    III
"^DD",100,100.008,24,21,8,0)
   3n   III Non-Nar.
"^DD",100,100.008,24,21,9,0)
   4    IV
"^DD",100,100.008,24,21,10,0)
   5    V
"^DD",100,100.008,24,21,11,0)
   0    other active drugs
"^DD",100,100.008,24,"DT")
3020425
"^DD",100,100.008,25,0)
DIGITAL SIGNATURE REQUIRED^S^0:NO;1:YES;^2;5^Q
"^DD",100,100.008,25,3)

"^DD",100,100.008,25,21,0)
^^1^1^3020322^
"^DD",100,100.008,25,21,1,0)
This field is set if a Digital Signature is required.
"^DD",100,100.008,25,"DT")
3020322
"^DD",100,100.0082,0)
EXTERNAL TEXT SUB-FIELD^^.01^1
"^DD",100,100.0082,0,"DT")
3020312
"^DD",100,100.0082,0,"NM","EXTERNAL TEXT")

"^DD",100,100.0082,0,"UP")
100.008
"^DD",100,100.0082,.01,0)
EXTERNAL TEXT^WL^^0;1^Q
"^DD",100,100.0082,.01,8.5)
^
"^DD",100,100.0082,.01,9)
^
"^DD",100,100.0082,.01,21,0)
^.001^4^4^3020326^^^^
"^DD",100,100.0082,.01,21,1,0)
This is the text of the order stored in external format.  This field is used
"^DD",100,100.0082,.01,21,2,0)
along with the Digital Signature to validate the integrity of the order.
"^DD",100,100.0082,.01,21,3,0)
DO NOT MODIFY THE DATA IN THIS FIELD!  Changing anything in this field
"^DD",100,100.0082,.01,21,4,0)
will invalidate the order.
"^DD",100,100.0082,.01,"DT")
3020326
"^DD",101.24,101.24,0)
FIELD^^10^35
"^DD",101.24,101.24,0,"DDA")
N
"^DD",101.24,101.24,0,"DT")
3011004
"^DD",101.24,101.24,0,"ID",.23)
W:$D(^(2)) "   ",$P(^(2),U,3)
"^DD",101.24,101.24,0,"ID",.24)
W:$D(^(2)) "   ",$P(^(2),U,4)
"^DD",101.24,101.24,0,"IX","AC",101.24,.02)

"^DD",101.24,101.24,0,"IX","B",101.24,.01)

"^DD",101.24,101.24,0,"NM","OE/RR REPORT")

"^DD",101.24,101.24,0,"PT",101.24,.18)

"^DD",101.24,101.24,0,"PT",101.241,.01)

"^DD",101.24,101.24,0,"VRPK")
OR
"^DD",101.24,101.24,.001,0)
NUMBER^NJ5,0^^ ^K:+X'=X!(X>10000)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.24,.001,3)
Type a Number between 1 and 10000, 0 Decimal Digits
"^DD",101.24,101.24,.001,21,0)
^^1^1^3000921^
"^DD",101.24,101.24,.001,21,1,0)
This is the Number field for the file.
"^DD",101.24,101.24,.001,"DT")
3000920
"^DD",101.24,101.24,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",101.24,101.24,.01,1,0)
^.1^^-1
"^DD",101.24,101.24,.01,1,1,0)
101.24^B
"^DD",101.24,101.24,.01,1,1,1)
S ^ORD(101.24,"B",$E(X,1,30),DA)=""
"^DD",101.24,101.24,.01,1,1,2)
K ^ORD(101.24,"B",$E(X,1,30),DA)
"^DD",101.24,101.24,.01,3)
Answer must be 3-30 characters in length.
"^DD",101.24,101.24,.01,21,0)
^^1^1^3000921^
"^DD",101.24,101.24,.01,21,1,0)
This is the Name of the report.
"^DD",101.24,101.24,.01,"DT")
3010510
"^DD",101.24,101.24,.02,0)
ID^RF^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",101.24,101.24,.02,1,0)
^.1
"^DD",101.24,101.24,.02,1,1,0)
101.24^AC
"^DD",101.24,101.24,.02,1,1,1)
S ^ORD(101.24,"AC",$E(X,1,30),DA)=""
"^DD",101.24,101.24,.02,1,1,2)
K ^ORD(101.24,"AC",$E(X,1,30),DA)
"^DD",101.24,101.24,.02,1,1,"DT")
3001005
"^DD",101.24,101.24,.02,3)
Answer must be 1-10 characters in length.
"^DD",101.24,101.24,.02,21,0)
^^4^4^3000921^
"^DD",101.24,101.24,.02,21,1,0)
This is the code that identifies the report.  Each tab in CPRS that
"^DD",101.24,101.24,.02,21,2,0)
uses reports looks for this ID in order to process the report.
"^DD",101.24,101.24,.02,21,3,0)
Each tab also uses a unique set of ID's.  An ID of 5 on the Reports
"^DD",101.24,101.24,.02,21,4,0)
Tab may not identify the same report on a different tab.
"^DD",101.24,101.24,.02,"DT")
3001005
"^DD",101.24,101.24,.03,0)
REMOTE^S^1:YES;^0;3^Q
"^DD",101.24,101.24,.03,21,0)
^^2^2^3000921^
"^DD",101.24,101.24,.03,21,1,0)
This field is used to identify which reports allow remote access through
"^DD",101.24,101.24,.03,21,2,0)
Remote Data Views.
"^DD",101.24,101.24,.03,"DT")
3000907
"^DD",101.24,101.24,.04,0)
QUALIFIER^S^1:HSType;2:DateTime;3:Imaging;4:NutrAssess;19:MedicineProcedure;39:ListView;5:HSComponent;6:HSWPComponent;28:Surgery;^0;4^Q
"^DD",101.24,101.24,.04,21,0)
^.001^2^2^3010531^^^
"^DD",101.24,101.24,.04,21,1,0)
This field identifies which qualifier to use when processing the report.
"^DD",101.24,101.24,.04,21,2,0)
Examples of qualifiers are HSType, DateTime, Imaging and NutrAssess.
"^DD",101.24,101.24,.04,"DT")
3011004
"^DD",101.24,101.24,.05,0)
ROUTINE^FI^^0;5^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.05,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.05,8.5)
@
"^DD",101.24,101.24,.05,9)
@
"^DD",101.24,101.24,.05,21,0)
^.001^1^1^3001026^^^
"^DD",101.24,101.24,.05,21,1,0)
This is the routine that is invoked to produce the report.
"^DD",101.24,101.24,.05,23,0)
^.001^2^2^3001026^^
"^DD",101.24,101.24,.05,23,1,0)
The Labs Tab does not have a value for this field.  The CPRS executable
"^DD",101.24,101.24,.05,23,2,0)
calls separate RPC's for each report.
"^DD",101.24,101.24,.05,"DT")
3011004
"^DD",101.24,101.24,.06,0)
ENTRY POINT^FI^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.06,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.06,8.5)
@
"^DD",101.24,101.24,.06,9)
@
"^DD",101.24,101.24,.06,21,0)
^.001^2^2^3001026^^
"^DD",101.24,101.24,.06,21,1,0)
This is the entry point for the ROUTINE that is invoked to produce the
"^DD",101.24,101.24,.06,21,2,0)
report.
"^DD",101.24,101.24,.06,23,0)
^.001^2^2^3001026^^
"^DD",101.24,101.24,.06,23,1,0)
The Labs Tab does not have a value for this field.  The CPRS executable
"^DD",101.24,101.24,.06,23,2,0)
calls separate RPC's for each report.
"^DD",101.24,101.24,.06,"DT")
3011004
"^DD",101.24,101.24,.07,0)
CATEGORY^S^0:FIXED;1:FIXED W/DATE;2:FIXED W/HEADER;3:FIXED W/DATE&HEADER;4:SPECIALIZED;5:GRAPHIC;6:LISTVIEW;^0;7^Q
"^DD",101.24,101.24,.07,3)
Enter a category for this report
"^DD",101.24,101.24,.07,21,0)
^^2^2^3001004^
"^DD",101.24,101.24,.07,21,1,0)
This field puts reports into a category that is evaluated by the GUI
"^DD",101.24,101.24,.07,21,2,0)
when the report is processed.
"^DD",101.24,101.24,.07,"DT")
3010215
"^DD",101.24,101.24,.08,0)
TAB^S^R:REPORTS TAB;L:LABS TAB;C:COVER SHEET;CD:COVER SHEET DETAILS;^0;8^Q
"^DD",101.24,101.24,.08,3)
Enter the appropriate code for this report.
"^DD",101.24,101.24,.08,21,0)
^.001^1^1^3001003^^
"^DD",101.24,101.24,.08,21,1,0)
This fields identifies the appropriate tab for a report in CPRS.
"^DD",101.24,101.24,.08,"DT")
3001011
"^DD",101.24,101.24,.09,0)
MIXEDCASE^S^1:YES;^0;9^Q
"^DD",101.24,101.24,.09,3)
Enter YES to display the list in mixed case
"^DD",101.24,101.24,.09,21,0)
^^2^2^3001004^
"^DD",101.24,101.24,.09,21,1,0)
This is used in the cover sheet and is used to display the returned
"^DD",101.24,101.24,.09,21,2,0)
list in mixed case.
"^DD",101.24,101.24,.09,"DT")
3001004
"^DD",101.24,101.24,.1,0)
INVERT^S^1:YES;^0;10^Q
"^DD",101.24,101.24,.1,3)
Enter YES to have the returned list inverted.
"^DD",101.24,101.24,.1,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.1,21,1,0)
This field is used to invert a list of data returned in the Cover sheet
"^DD",101.24,101.24,.1,"DT")
3001004
"^DD",101.24,101.24,.11,0)
TEXT COLOR^S^Black:BLACK;Maroon:MAROON;Green:GREEN;Olive:OLIVE;Purple:PURPLE;Teal:TEAL;Red:RED;Lime:LIME;Yellow:YELLOW;Blue:BLUE;Fuchsia:FUCHSIA;Aqua:AQUA;^0;11^Q
"^DD",101.24,101.24,.11,3)
Enter the color for the text
"^DD",101.24,101.24,.11,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.11,21,1,0)
This field determines the text color for the returned data.
"^DD",101.24,101.24,.11,"DT")
3001004
"^DD",101.24,101.24,.12,0)
TYPE^S^R:REPORT;H:HTML;L:LISTMAN ONLY;S:SELECTION LIST;V:LISTVIEW;M:MENU;^0;12^Q
"^DD",101.24,101.24,.12,3)
Enter the type for this entry.
"^DD",101.24,101.24,.12,21,0)
^.001^1^1^3001017^^
"^DD",101.24,101.24,.12,21,1,0)
This field identifies the type for an entry.
"^DD",101.24,101.24,.12,"DT")
3010315
"^DD",101.24,101.24,.13,0)
RPC^P8994'^XWB(8994,^0;13^Q
"^DD",101.24,101.24,.13,3)
Select the RPC that produces this report.
"^DD",101.24,101.24,.13,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.13,21,1,0)
This is the RPC that is called inside the GUI to produce the report.
"^DD",101.24,101.24,.13,"DT")
3001004
"^DD",101.24,101.24,.14,0)
DATE FORMAT^S^D:DATE ONLY;T:DATE WITH TIME;^0;14^Q
"^DD",101.24,101.24,.14,3)
Enter the code for the desired date format.
"^DD",101.24,101.24,.14,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.14,21,1,0)
This field determines what kind of format to display date/time fields.
"^DD",101.24,101.24,.14,"DT")
3001004
"^DD",101.24,101.24,.15,0)
DATE PIECE^NJ2,0^^0;15^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.24,.15,3)
Type a Number between 1 and 15, 0 Decimal Digits
"^DD",101.24,101.24,.15,21,0)
^^2^2^3001004^
"^DD",101.24,101.24,.15,21,1,0)
This is used on the Cover Sheet to determine which piece the date field
"^DD",101.24,101.24,.15,21,2,0)
occupies.
"^DD",101.24,101.24,.15,"DT")
3001004
"^DD",101.24,101.24,.16,0)
TAB POSITIONS^F^^0;16^K:$L(X)>15!($L(X)<1) X
"^DD",101.24,101.24,.16,3)
Answer must be 1-15 characters in length.
"^DD",101.24,101.24,.16,21,0)
^^2^2^3001005^
"^DD",101.24,101.24,.16,21,1,0)
This is the value that will be used for the Tab property for the listbox
"^DD",101.24,101.24,.16,21,2,0)
associated with this report on the Cover Sheet.
"^DD",101.24,101.24,.16,"DT")
3001005
"^DD",101.24,101.24,.17,0)
PIECES^F^^0;17^K:$L(X)>20!($L(X)<1) X
"^DD",101.24,101.24,.17,3)
Answer must be 1-20 characters in length.
"^DD",101.24,101.24,.17,21,0)
^^2^2^3001011^
"^DD",101.24,101.24,.17,21,1,0)
This field is used by the Cover Sheet to determine what pieces of data
"^DD",101.24,101.24,.17,21,2,0)
to display in the listbox.
"^DD",101.24,101.24,.17,"DT")
3001011
"^DD",101.24,101.24,.18,0)
DETAIL REPORT^*P101.24'^ORD(101.24,^0;18^S DIC("S")="I $P(^(0),""^"",8)=""CD""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",101.24,101.24,.18,3)
Enter the report to get the details for this report.
"^DD",101.24,101.24,.18,12)
Allow only Cover sheet detail type reports
"^DD",101.24,101.24,.18,12.1)
S DIC("S")="I $P(^(0),""^"",8)=""CD"""
"^DD",101.24,101.24,.18,21,0)
^^1^1^3001011^
"^DD",101.24,101.24,.18,21,1,0)
This field is used to get the details of an item on the cover sheet.
"^DD",101.24,101.24,.18,"DT")
3001011
"^DD",101.24,101.24,.19,0)
REPORT TAG^FI^^0;19^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.19,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.19,21,0)
^.001^1^1^3010503^^
"^DD",101.24,101.24,.19,21,1,0)
This is the entry point tag for a report extract.
"^DD",101.24,101.24,.19,"DT")
3011004
"^DD",101.24,101.24,.191,0)
REPORT ROUTINE^FI^^0;20^K:$L(X)>8!($L(X)<3) X
"^DD",101.24,101.24,.191,3)
Answer must be 3-8 characters in length.
"^DD",101.24,101.24,.191,21,0)
^.001^1^1^3010503^^
"^DD",101.24,101.24,.191,21,1,0)
This is the routine associated with the REPORT TAG for report extracts.
"^DD",101.24,101.24,.191,"DT")
3011004
"^DD",101.24,101.24,.192,0)
REPORT COMPONENT^P142.1'^GMT(142.1,^0;21^Q
"^DD",101.24,101.24,.192,21,0)
^.001^1^1^3010503^^
"^DD",101.24,101.24,.192,21,1,0)
This is the report component associated with this report.
"^DD",101.24,101.24,.192,"DT")
3010503
"^DD",101.24,101.24,.21,0)
PARAM 1^F^^2;1^K:$L(X)>30!($L(X)<1) X
"^DD",101.24,101.24,.21,3)
Answer must be 1-30 characters in length.
"^DD",101.24,101.24,.21,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.21,21,1,0)
This is the 1st parameter passed to the RPC, if needed.
"^DD",101.24,101.24,.21,"DT")
3001004
"^DD",101.24,101.24,.22,0)
PARAM 2^F^^2;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.24,101.24,.22,3)
Answer must be 1-30 characters in length.
"^DD",101.24,101.24,.22,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.22,21,1,0)
This is the 2nd parameter passed to the RPC, if needed.
"^DD",101.24,101.24,.22,"DT")
3001004
"^DD",101.24,101.24,.23,0)
HEADING^F^^2;3^K:$L(X)>75!($L(X)<1) X
"^DD",101.24,101.24,.23,1,0)
^.1^^0
"^DD",101.24,101.24,.23,3)
Answer must be 1-75 characters in length.
"^DD",101.24,101.24,.23,21,0)
^^1^1^3001031^
"^DD",101.24,101.24,.23,21,1,0)
This is the heading used on the Cover sheet for the list of items.
"^DD",101.24,101.24,.23,"DT")
3010510
"^DD",101.24,101.24,.24,0)
DESCRIPTIVE TEXT^RF^^2;4^K:$L(X)>55!($L(X)<2) X
"^DD",101.24,101.24,.24,3)
Answer must be 2-55 characters in length.
"^DD",101.24,101.24,.24,21,0)
^.001^2^2^3010510^^
"^DD",101.24,101.24,.24,21,1,0)
This is a more descriptive name than what might be included in the 
"^DD",101.24,101.24,.24,21,2,0)
NAME field.
"^DD",101.24,101.24,.24,"DT")
3010510
"^DD",101.24,101.24,.25,0)
NODE^F^^2;5^K:$L(X)>10!($L(X)<1) X
"^DD",101.24,101.24,.25,3)
Answer must be 1-10 characters in length.
"^DD",101.24,101.24,.25,21,0)
^^2^2^3001005^
"^DD",101.24,101.24,.25,21,1,0)
This is used by the Cover Sheet routines to define the node in the ^XTMP
"^DD",101.24,101.24,.25,21,2,0)
global to store the data.
"^DD",101.24,101.24,.25,"DT")
3001005
"^DD",101.24,101.24,.26,0)
PRINT TAG^FI^^2;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.26,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.26,21,0)
^^2^2^3010614^
"^DD",101.24,101.24,.26,21,1,0)
This is the entry point tag used when printing reports that do their own
"^DD",101.24,101.24,.26,21,2,0)
Write statements.
"^DD",101.24,101.24,.26,"DT")
3010814
"^DD",101.24,101.24,.27,0)
PRINT ROUTINE^FI^^2;7^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.27,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.27,21,0)
^^2^2^3010614^
"^DD",101.24,101.24,.27,21,1,0)
This is the entry point routine used when printing reports that do their own
"^DD",101.24,101.24,.27,21,2,0)
Write statements.
"^DD",101.24,101.24,.27,"DT")
3010814
"^DD",101.24,101.24,.28,0)
EXTRACT TAG^FI^^2;8^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.28,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.28,21,0)
^^2^2^3010711^
"^DD",101.24,101.24,.28,21,1,0)
This is the entry point for the extract routine that pulls the data from
"^DD",101.24,101.24,.28,21,2,0)
package API's and/or package files.
"^DD",101.24,101.24,.28,"DT")
3011004
"^DD",101.24,101.24,.29,0)
EXTRACT ROUTINE^FI^^2;9^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.29,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.29,21,0)
^^2^2^3010711^
"^DD",101.24,101.24,.29,21,1,0)
This is the extract routine that pulls data from package API's and/or
"^DD",101.24,101.24,.29,21,2,0)
package files.
"^DD",101.24,101.24,.29,"DT")
3011004
"^DD",101.24,101.24,.41,0)
SORT ORDER^F^^4;1^K:$L(X)>15!($L(X)<3)!'(X?1N1":"1N) X
"^DD",101.24,101.24,.41,3)
Answer must be 3-15 characters in length.
"^DD",101.24,101.24,.41,21,0)
^^6^6^3010717^
"^DD",101.24,101.24,.41,21,1,0)
This field is used when sorting columns of data on at grid within CPRS.
"^DD",101.24,101.24,.41,21,2,0)
It determines the sort order to be used in a multi-column sort.  The
"^DD",101.24,101.24,.41,21,3,0)
primary sort column is always the column header clicked on by the user.
"^DD",101.24,101.24,.41,21,4,0)
If this field has values in the form #:#, then a multi-column sort is
"^DD",101.24,101.24,.41,21,5,0)
done, using the column numbers identified in this field for the second
"^DD",101.24,101.24,.41,21,6,0)
and third level sorting.
"^DD",101.24,101.24,.41,"DT")
3010717
"^DD",101.24,101.24,.42,0)
MAXIMUM DAYS BACK^NJ4,0^^4;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.24,.42,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",101.24,101.24,.42,21,0)
^^1^1^3011004^
"^DD",101.24,101.24,.42,21,1,0)
This field restricts the report date range to the maximum value specified.
"^DD",101.24,101.24,.42,"DT")
3011004
"^DD",101.24,101.24,3,0)
COLUMN HEADERS^101.243^^3;0
"^DD",101.24,101.24,10,0)
ITEM^101.241P^^10;0
"^DD",101.24,101.241,0)
ITEM SUB-FIELD^^.03^3
"^DD",101.24,101.241,0,"DT")
3010215
"^DD",101.24,101.241,0,"IX","B",101.241,.01)

"^DD",101.24,101.241,0,"NM","ITEM")

"^DD",101.24,101.241,0,"UP")
101.24
"^DD",101.24,101.241,.01,0)
ITEM^MP101.24^ORD(101.24,^0;1^Q
"^DD",101.24,101.241,.01,1,0)
^.1
"^DD",101.24,101.241,.01,1,1,0)
101.241^B
"^DD",101.24,101.241,.01,1,1,1)
S ^ORD(101.24,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",101.24,101.241,.01,1,1,2)
K ^ORD(101.24,DA(1),10,"B",$E(X,1,30),DA)
"^DD",101.24,101.241,.01,3)

"^DD",101.24,101.241,.01,21,0)
^^1^1^3010215^
"^DD",101.24,101.241,.01,21,1,0)
This is used in building a treeview of reports for CPRS GUI.
"^DD",101.24,101.241,.01,"DT")
3010215
"^DD",101.24,101.241,.02,0)
HEADER TEXT^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.24,101.241,.02,3)
Answer must be 1-30 characters in length.
"^DD",101.24,101.241,.02,21,0)
^^1^1^3010215^
"^DD",101.24,101.241,.02,21,1,0)
This is the header to be used.
"^DD",101.24,101.241,.02,"DT")
3010215
"^DD",101.24,101.241,.03,0)
SEQUENCE^NJ7,1^^0;3^K:+X'=X!(X>99999)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.24,101.241,.03,3)
Type a Number between .1 and 99999, 1 Decimal Digit
"^DD",101.24,101.241,.03,21,0)
^^1^1^3010215^
"^DD",101.24,101.241,.03,21,1,0)
This is the sequence number for this report.
"^DD",101.24,101.241,.03,"DT")
3010215
"^DD",101.24,101.243,0)
COLUMN HEADERS SUB-FIELD^^.1^10
"^DD",101.24,101.243,0,"DT")
3010727
"^DD",101.24,101.243,0,"IX","B",101.243,.01)

"^DD",101.24,101.243,0,"IX","C",101.243,.03)

"^DD",101.24,101.243,0,"NM","COLUMN HEADERS")

"^DD",101.24,101.243,0,"UP")
101.24
"^DD",101.24,101.243,.01,0)
COLUMN HEADERS^MF^^0;1^K:$L(X)>60!($L(X)<1) X
"^DD",101.24,101.243,.01,1,0)
^.1
"^DD",101.24,101.243,.01,1,1,0)
101.243^B
"^DD",101.24,101.243,.01,1,1,1)
S ^ORD(101.24,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",101.24,101.243,.01,1,1,2)
K ^ORD(101.24,DA(1),3,"B",$E(X,1,30),DA)
"^DD",101.24,101.243,.01,3)
Answer must be 1-60 characters in length.
"^DD",101.24,101.243,.01,21,0)
^.001^1^1^3010709^^^^
"^DD",101.24,101.243,.01,21,1,0)
These are the column headings used on a report in ListView format.
"^DD",101.24,101.243,.01,"DT")
3010709
"^DD",101.24,101.243,.02,0)
VISIBLE^S^0:YES;1:NO;^0;2^Q
"^DD",101.24,101.243,.02,3)
Set this field to NO to hide the column.
"^DD",101.24,101.243,.02,21,0)
^^1^1^3010420^
"^DD",101.24,101.243,.02,21,1,0)
This field determines the visible property of the column.
"^DD",101.24,101.243,.02,"DT")
3010420
"^DD",101.24,101.243,.03,0)
SEQUENCE^NJ6,1^^0;3^K:+X'=X!(X>9999)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.24,101.243,.03,1,0)
^.1
"^DD",101.24,101.243,.03,1,1,0)
101.243^C
"^DD",101.24,101.243,.03,1,1,1)
S ^ORD(101.24,DA(1),3,"C",$E(X,1,30),DA)=""
"^DD",101.24,101.243,.03,1,1,2)
K ^ORD(101.24,DA(1),3,"C",$E(X,1,30),DA)
"^DD",101.24,101.243,.03,1,1,"DT")
3010321
"^DD",101.24,101.243,.03,3)
Type a Number between .1 and 9999, 1 Decimal Digit
"^DD",101.24,101.243,.03,21,0)
^^1^1^3010215^
"^DD",101.24,101.243,.03,21,1,0)
This is the sequence for the column header.
"^DD",101.24,101.243,.03,"DT")
3010321
"^DD",101.24,101.243,.04,0)
TYPE^S^0:SINGLE PIECE VALUE;1:WORD PROCESSING;^0;4^Q
"^DD",101.24,101.243,.04,3)
Enter '1' if the value of this column contains multiple lines of text.
"^DD",101.24,101.243,.04,21,0)
^^1^1^3010420^
"^DD",101.24,101.243,.04,21,1,0)
This field identifies columns that contain multiple lines of text.
"^DD",101.24,101.243,.04,"DT")
3010420
"^DD",101.24,101.243,.05,0)
INCLUDE ON DETAIL^S^0:NO;1:YES;^0;5^Q
"^DD",101.24,101.243,.05,3)
Enter YES to include this field in detailed report
"^DD",101.24,101.243,.05,21,0)
^.001^2^2^3010628^^^^
"^DD",101.24,101.243,.05,21,1,0)
This field is used to determine what data to include in the details of
"^DD",101.24,101.243,.05,21,2,0)
a report.
"^DD",101.24,101.243,.05,"DT")
3010628
"^DD",101.24,101.243,.06,0)
PRINT LENGTH^NJ2,0^^0;6^K:+X'=X!(X>20)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.243,.06,3)
Type a Number between 1 and 20, 0 Decimal Digits
"^DD",101.24,101.243,.06,21,0)
^^1^1^3010628^
"^DD",101.24,101.243,.06,21,1,0)
This is the field length used when printing this column on a report.
"^DD",101.24,101.243,.06,"DT")
3010628
"^DD",101.24,101.243,.07,0)
INCLUDE ON PRINT^S^0:NO;1:YES;^0;7^Q
"^DD",101.24,101.243,.07,21,0)
^^2^2^3010628^
"^DD",101.24,101.243,.07,21,1,0)
This field determines which columns are included when a printout is
"^DD",101.24,101.243,.07,21,2,0)
requested.
"^DD",101.24,101.243,.07,"DT")
3010628
"^DD",101.24,101.243,.08,0)
PRINT TITLE^F^^0;8^K:$L(X)>20!($L(X)<1) X
"^DD",101.24,101.243,.08,3)
Answer must be 1-20 characters in length.
"^DD",101.24,101.243,.08,21,0)
^^1^1^3010628^
"^DD",101.24,101.243,.08,21,1,0)
This field is used when printing this field in lieu of the Column Header.
"^DD",101.24,101.243,.08,"DT")
3010628
"^DD",101.24,101.243,.09,0)
DATA TYPE^S^0:FREE TEXT;1:NUMERIC;2:DATE/TIME;^0;9^Q
"^DD",101.24,101.243,.09,3)
Enter the type of data that is in this column.
"^DD",101.24,101.243,.09,21,0)
^.001^3^3^3010718^^
"^DD",101.24,101.243,.09,21,1,0)
This is the data type of the column.  It is used when sorting columns.
"^DD",101.24,101.243,.09,21,2,0)
The default data type is 0 - FREE TEXT.  If no value is entered, it is
"^DD",101.24,101.243,.09,21,3,0)
assumed to be FREE TEXT.
"^DD",101.24,101.243,.09,"DT")
3010718
"^DD",101.24,101.243,.1,0)
WIDTH^NJ4,0^^0;10^K:+X'=X!(X>4000)!(X<-2)!(X?.E1"."1N.N) X
"^DD",101.24,101.243,.1,3)
Type a Number between -2 and 4000, 0 Decimal Digits
"^DD",101.24,101.243,.1,21,0)
^^5^5^3010727^
"^DD",101.24,101.243,.1,21,1,0)
This field is for the column width.  No value needs to be entered because
"^DD",101.24,101.243,.1,21,2,0)
the value is actually obtained from a User level parameter.  The field
"^DD",101.24,101.243,.1,21,3,0)
is defined here to reserve the 10 piece of this node so that future
"^DD",101.24,101.243,.1,21,4,0)
field definitions won't break the RPC used in CPRS to get column properties
"^DD",101.24,101.243,.1,21,5,0)
where the width is stored in the 10 piece.
"^DD",101.24,101.243,.1,"DT")
3010727
"^DD",8989.51,8989.51,0)
FIELD^^30^18
"^DD",8989.51,8989.51,0,"DDA")
N
"^DD",8989.51,8989.51,0,"DT")
2970621
"^DD",8989.51,8989.51,0,"ID","WRITE")
N X S X=^(0) D EN^DDIOL($P(X,U,2),"","?36")
"^DD",8989.51,8989.51,0,"IX","AG",8989.513,.02)

"^DD",8989.51,8989.51,0,"IX","B",8989.51,.01)

"^DD",8989.51,8989.51,0,"IX","C",8989.51,.02)

"^DD",8989.51,8989.51,0,"IX","D",8989.51,.01)

"^DD",8989.51,8989.51,0,"NM","PARAMETER DEFINITION")

"^DD",8989.51,8989.51,0,"PT",8989.5,.02)

"^DD",8989.51,8989.51,0,"PT",8989.52,.04)

"^DD",8989.51,8989.51,0,"PT",8989.521,.02)

"^DD",8989.51,8989.51,0,"VRPK")
OR
"^DD",8989.51,8989.51,.01,0)
NAME^RFX^^0;1^D VALID01^XPARDD1
"^DD",8989.51,8989.51,.01,1,0)
^.1
"^DD",8989.51,8989.51,.01,1,1,0)
8989.51^B
"^DD",8989.51,8989.51,.01,1,1,1)
S ^XTV(8989.51,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.51,.01,1,1,2)
K ^XTV(8989.51,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.51,.01,1,2,0)
8989.51^D^KWIC
"^DD",8989.51,8989.51,.01,1,2,1)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^XTV(8989.51,"D",I,DA)=""
"^DD",8989.51,8989.51,.01,1,2,2)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^XTV(8989.51,"D",I,DA)
"^DD",8989.51,8989.51,.01,1,2,"DT")
3000225
"^DD",8989.51,8989.51,.01,3)
Answer must be 3-30 characters in length.  Name must be unique.
"^DD",8989.51,8989.51,.01,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,.01,21,1,0)
This is the name of the parameter.  It should be namespaced according to the 
"^DD",8989.51,8989.51,.01,21,2,0)
package from which the parameter originated.
"^DD",8989.51,8989.51,.01,"DT")
2960207
"^DD",8989.51,8989.51,.02,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.02,1,0)
^.1
"^DD",8989.51,8989.51,.02,1,1,0)
8989.51^C^MUMPS
"^DD",8989.51,8989.51,.02,1,1,1)
S ^XTV(8989.51,"C",$$UPPER^XPARDD1(X),DA)=""
"^DD",8989.51,8989.51,.02,1,1,2)
K ^XTV(8989.51,"C",$$UPPER^XPARDD1(X),DA)
"^DD",8989.51,8989.51,.02,1,1,"%D",0)
^^2^2^2970606^
"^DD",8989.51,8989.51,.02,1,1,"%D",1,0)
Cross references display text for lookup.  Display text is put in upper
"^DD",8989.51,8989.51,.02,1,1,"%D",2,0)
case so lookup will be case insensitive.
"^DD",8989.51,8989.51,.02,1,1,"DT")
2960409
"^DD",8989.51,8989.51,.02,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.02,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,.02,21,1,0)
This is the displayable name for the parameter (allows mixed case, 
"^DD",8989.51,8989.51,.02,21,2,0)
non-namespaced names).
"^DD",8989.51,8989.51,.02,"DT")
2960409
"^DD",8989.51,8989.51,.03,0)
MULTIPLE VALUED^S^1:Yes;0:No;^0;3^Q
"^DD",8989.51,8989.51,.03,3)
Enter 'Yes' if multiple instances of the parameter are allowed for any single entity.
"^DD",8989.51,8989.51,.03,21,0)
^^3^3^2980705^
"^DD",8989.51,8989.51,.03,21,1,0)
If this field is set to 'Yes', multiple instances of the parameter will be 
"^DD",8989.51,8989.51,.03,21,2,0)
allowed for a single entity.  Otherwise, the value of the instance field
"^DD",8989.51,8989.51,.03,21,3,0)
for a given Entity-Parameter combination will always be '1'.
"^DD",8989.51,8989.51,.03,"DT")
2960207
"^DD",8989.51,8989.51,.04,0)
INSTANCE TERM^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.04,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.04,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,.04,21,1,0)
This is a free text term that can be used when prompting for a new instance of 
"^DD",8989.51,8989.51,.04,21,2,0)
the parameter (in the case where the parameter in multiple valued).  If not 
"^DD",8989.51,8989.51,.04,21,3,0)
entered, the word "Instance" will be used.
"^DD",8989.51,8989.51,.04,"DT")
2960207
"^DD",8989.51,8989.51,.05,0)
VALUE TERM^F^^0;5^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.05,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.05,21,0)
^^2^2^2970626^
"^DD",8989.51,8989.51,.05,21,1,0)
This contains text that is issued as a prompt for the value.  If nothing
"^DD",8989.51,8989.51,.05,21,2,0)
is here, the prompt will be the word 'Value:'.
"^DD",8989.51,8989.51,.05,"DT")
2960612
"^DD",8989.51,8989.51,.06,0)
PROHIBIT EDITING^S^1:Yes;0:No;^0;6^Q
"^DD",8989.51,8989.51,.06,3)
Choose 'Disallow Editing' if editing of this field should not be allowed.
"^DD",8989.51,8989.51,.06,21,0)
^^2^2^2970306^
"^DD",8989.51,8989.51,.06,21,1,0)
This field prevents the parameter value from being edited with Fileman or
"^DD",8989.51,8989.51,.06,21,2,0)
any Parameters tools.
"^DD",8989.51,8989.51,.06,"DT")
2970317
"^DD",8989.51,8989.51,1.1,0)
VALUE DATA TYPE^S^D:date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;W:word processing;M:M code;C:constant;^1;1^Q
"^DD",8989.51,8989.51,1.1,3)
Enter the type of data this parameter will contain.
"^DD",8989.51,8989.51,1.1,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,1.1,21,1,0)
This is the type of data this parameter will contain.  This field is used to 
"^DD",8989.51,8989.51,1.1,21,2,0)
define a call to the reader (^DIR) in most cases.
"^DD",8989.51,8989.51,1.1,"DT")
2960528
"^DD",8989.51,8989.51,1.2,0)
VALUE DOMAIN^F^^1;2^K:$L(X)>100!($L(X)<1) X
"^DD",8989.51,8989.51,1.2,3)
Enter up to 100 characters to further define the data type (used by ^DIR).
"^DD",8989.51,8989.51,1.2,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,1.2,21,1,0)
This is a string that may be used to further specify the data type.  The 
"^DD",8989.51,8989.51,1.2,21,2,0)
string stored here should be appropriate for the second ^-piece of DIR(0) 
"^DD",8989.51,8989.51,1.2,21,3,0)
when used with the data type field.
"^DD",8989.51,8989.51,1.2,"DT")
2960207
"^DD",8989.51,8989.51,1.3,0)
VALUE HELP^F^^1;3^K:$L(X)>80!($L(X)<1) X
"^DD",8989.51,8989.51,1.3,3)
Enter a line of help text to be displayed when entering a parameter value.
"^DD",8989.51,8989.51,1.3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,1.3,21,1,0)
This field contains a line of help text that is displayed when the user 
"^DD",8989.51,8989.51,1.3,21,2,0)
requests help or encounters an error while entering the VALUE field in the 
"^DD",8989.51,8989.51,1.3,21,3,0)
PARAMETERS file.
"^DD",8989.51,8989.51,1.3,"DT")
2960207
"^DD",8989.51,8989.51,2,0)
VALUE VALIDATION CODE^K^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,2,3)
This is M code used by DIR (3rd piece of DIR(0)).
"^DD",8989.51,8989.51,2,9)
@
"^DD",8989.51,8989.51,2,21,0)
^^2^2^2980705^
"^DD",8989.51,8989.51,2,21,1,0)
This field contains the M code that is placed in the third piece of DIR(0)
"^DD",8989.51,8989.51,2,21,2,0)
when validating a value in the PARAMETERS file.
"^DD",8989.51,8989.51,2,"DT")
2960207
"^DD",8989.51,8989.51,3,0)
VALUE SCREEN CODE^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,3,3)
This is M code placed in DIR("S").
"^DD",8989.51,8989.51,3,9)
@
"^DD",8989.51,8989.51,3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,3,21,1,0)
This field contains M code that is used to screen allowable entries for the 
"^DD",8989.51,8989.51,3,21,2,0)
VALUE field in the PARAMETERS file.  The code is placed in DIR("S") when 
"^DD",8989.51,8989.51,3,21,3,0)
validating the entry.
"^DD",8989.51,8989.51,3,"DT")
2960207
"^DD",8989.51,8989.51,6.1,0)
INSTANCE DATA TYPE^S^D:date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;^6;1^Q
"^DD",8989.51,8989.51,6.1,3)
Enter the type of data allowed for the INSTANCE field of the parameter.
"^DD",8989.51,8989.51,6.1,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.1,21,1,0)
This is the type of data that is contained in the INSTANCE field of the 
"^DD",8989.51,8989.51,6.1,21,2,0)
PARAMETERS file, if multiple parameter instances per entity are allowed.  
"^DD",8989.51,8989.51,6.1,21,3,0)
This field is used to define a call to the reader.
"^DD",8989.51,8989.51,6.1,"DT")
2960207
"^DD",8989.51,8989.51,6.2,0)
INSTANCE DOMAIN^F^^6;2^K:$L(X)>100!($L(X)<1) X
"^DD",8989.51,8989.51,6.2,3)
Enter up to 100 characters to further define the data type (used by ^DIR).
"^DD",8989.51,8989.51,6.2,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.2,21,1,0)
This may be used to further define the data type for the INSTANCE field of 
"^DD",8989.51,8989.51,6.2,21,2,0)
the parameter.  The string stored here should be appropriate for the second 
"^DD",8989.51,8989.51,6.2,21,3,0)
^-piece of DIR(0) when used with the data type field.
"^DD",8989.51,8989.51,6.2,"DT")
2960207
"^DD",8989.51,8989.51,6.3,0)
INSTANCE HELP^F^^6;3^K:$L(X)>80!($L(X)<1) X
"^DD",8989.51,8989.51,6.3,3)
Enter a line of help text to be displayed when entering the parameter instance.
"^DD",8989.51,8989.51,6.3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.3,21,1,0)
This field contains a line of help text that is displayed when the user 
"^DD",8989.51,8989.51,6.3,21,2,0)
requests help or encounters an error while entering the INSTANCE field of 
"^DD",8989.51,8989.51,6.3,21,3,0)
the PARAMETERS file.
"^DD",8989.51,8989.51,6.3,"DT")
2960207
"^DD",8989.51,8989.51,7,0)
INSTANCE VALIDATION CODE^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,7,3)
This is M code used by DIR (3rd piece of DIR(0)).
"^DD",8989.51,8989.51,7,9)
@
"^DD",8989.51,8989.51,7,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,7,21,1,0)
This field contains M code that is placed in the third piece of DIR(0) when 
"^DD",8989.51,8989.51,7,21,2,0)
validating the INSTANCE field in the PARAMETERS file.
"^DD",8989.51,8989.51,7,"DT")
2960207
"^DD",8989.51,8989.51,8,0)
INSTANCE SCREEN CODE^K^^8;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,8,3)
This is M code placed in DIR("S").
"^DD",8989.51,8989.51,8,9)
@
"^DD",8989.51,8989.51,8,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,8,21,1,0)
This field contains M code that is used to screen allowable entries for the 
"^DD",8989.51,8989.51,8,21,2,0)
INSTANCE field in the PARAMETERS file.  The code is placed in DIR("S") when 
"^DD",8989.51,8989.51,8,21,3,0)
validating the entry.
"^DD",8989.51,8989.51,8,"DT")
2960207
"^DD",8989.51,8989.51,20,0)
DESCRIPTION^8989.512^^20;0
"^DD",8989.51,8989.51,20,21,0)
^^1^1^2970626^
"^DD",8989.51,8989.51,20,21,1,0)
A description of the parameter may be entered here.
"^DD",8989.51,8989.51,30,0)
ALLOWABLE ENTITIES^8989.513I^^30;0
"^DD",8989.51,8989.51,30,21,0)
^^2^2^2960213^^
"^DD",8989.51,8989.51,30,21,1,0)
This multiple contains a list of entities (pointers to files) for which the 
"^DD",8989.51,8989.51,30,21,2,0)
parameter may be validly set.
"^DD",8989.51,8989.512,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",8989.51,8989.512,0,"DT")
2960207
"^DD",8989.51,8989.512,0,"NM","DESCRIPTION")

"^DD",8989.51,8989.512,0,"UP")
8989.51
"^DD",8989.51,8989.512,.01,0)
DESCRIPTION^WL^^0;1^Q
"^DD",8989.51,8989.512,.01,3)
Enter a description of the parameter and how it is used.
"^DD",8989.51,8989.512,.01,21,0)
^^1^1^2960207^
"^DD",8989.51,8989.512,.01,21,1,0)
This is text that describes the purpose and use of the parameter.
"^DD",8989.51,8989.512,.01,"DT")
2960207
"^DD",8989.51,8989.513,0)
ALLOWABLE ENTITIES SUB-FIELD^^.02^2
"^DD",8989.51,8989.513,0,"DT")
2970621
"^DD",8989.51,8989.513,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",8989.51,8989.513,0,"IX","B",8989.513,.01)

"^DD",8989.51,8989.513,0,"NM","ALLOWABLE ENTITIES")

"^DD",8989.51,8989.513,0,"UP")
8989.51
"^DD",8989.51,8989.513,.01,0)
PRECEDENCE^MRNJ6,2^^0;1^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X
"^DD",8989.51,8989.513,.01,1,0)
^.1
"^DD",8989.51,8989.513,.01,1,1,0)
8989.513^B
"^DD",8989.51,8989.513,.01,1,1,1)
S ^XTV(8989.51,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.513,.01,1,1,2)
K ^XTV(8989.51,DA(1),30,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.513,.01,3)
Type a Number between 0 and 999.99, 2 Decimal Digits
"^DD",8989.51,8989.513,.01,21,0)
^^6^6^2960213^^^
"^DD",8989.51,8989.513,.01,21,1,0)
A single parameter may be set for several different types of entities.  This 
"^DD",8989.51,8989.513,.01,21,2,0)
lists the order in which entities are searched for a defined value.  For 
"^DD",8989.51,8989.513,.01,21,3,0)
example, if a parameter may be set for a package, a location, and a user, 
"^DD",8989.51,8989.513,.01,21,4,0)
and the respective precedents are 3, 2, 1, the value of the user parameter 
"^DD",8989.51,8989.513,.01,21,5,0)
would be returned.  If it did not exist, the value of the location 
"^DD",8989.51,8989.513,.01,21,6,0)
parameter.  If that did not exist, then the value of the package parameter.
"^DD",8989.51,8989.513,.01,"DT")
2960213
"^DD",8989.51,8989.513,.02,0)
ENTITY FILE^RP8989.518'^XTV(8989.518,^0;2^Q
"^DD",8989.51,8989.513,.02,1,0)
^.1
"^DD",8989.51,8989.513,.02,1,1,0)
8989.51^AG^MUMPS
"^DD",8989.51,8989.513,.02,1,1,1)
D AGS^XPARDD1
"^DD",8989.51,8989.513,.02,1,1,2)
D AGK^XPARDD1
"^DD",8989.51,8989.513,.02,1,1,"%D",0)
^^5^5^2980422^
"^DD",8989.51,8989.513,.02,1,1,"%D",1,0)
The AG x-ref has the format ^XTV(8989.51,PARAM,30,"AG",GLOBAL REF,DA)="".
"^DD",8989.51,8989.513,.02,1,1,"%D",2,0)
 
"^DD",8989.51,8989.513,.02,1,1,"%D",3,0)
It is used to screen the parameters that may be selected for a given entity 
"^DD",8989.51,8989.513,.02,1,1,"%D",4,0)
in the PARAMETERS file.  The global root is used because the entity is a 
"^DD",8989.51,8989.513,.02,1,1,"%D",5,0)
variable pointer.
"^DD",8989.51,8989.513,.02,1,1,"DT")
2960207
"^DD",8989.51,8989.513,.02,3)
Choose a file from which entities for this parameter are identified.
"^DD",8989.51,8989.513,.02,21,0)
^^3^3^2980422^
"^DD",8989.51,8989.513,.02,21,1,0)
This identifies an entity for which the parameter can be legally entered.  
"^DD",8989.51,8989.513,.02,21,2,0)
Entities are simply variable pointers.  The files which are eligible to be
"^DD",8989.51,8989.513,.02,21,3,0)
entities are listed in the PARAMETER ENTITY file.
"^DD",8989.51,8989.513,.02,"DT")
2970621
"^DIC",101.24,101.24,0)
OE/RR REPORT^101.24
"^DIC",101.24,101.24,0,"GL")
^ORD(101.24,
"^DIC",101.24,101.24,"%",0)
^1.005^^0
"^DIC",101.24,101.24,"%D",0)
^^2^2^3000921^
"^DIC",101.24,101.24,"%D",1,0)
This file contains definitions and parameters used in various reports
"^DIC",101.24,101.24,"%D",2,0)
within CPRS.
"^DIC",101.24,"B","OE/RR REPORT",101.24)

"^DIC",8989.51,8989.51,0)
PARAMETER DEFINITION^8989.51
"^DIC",8989.51,8989.51,0,"GL")
^XTV(8989.51,
"^DIC",8989.51,8989.51,"%D",0)
^^3^3^2980920^
"^DIC",8989.51,8989.51,"%D",1,0)
This file contains the characteristics of parameters.  Entries in this
"^DIC",8989.51,8989.51,"%D",2,0)
file must be namespaced and they are exported by the package which owns
"^DIC",8989.51,8989.51,"%D",3,0)
them.
"^DIC",8989.51,"B","PARAMETER DEFINITION",8989.51)

**END**
**END**
