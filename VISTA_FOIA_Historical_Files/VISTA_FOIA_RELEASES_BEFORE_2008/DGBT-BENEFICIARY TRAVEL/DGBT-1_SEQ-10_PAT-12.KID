EMERGENCY Released DGBT*1*12 SEQ #10
Extracted from mail message
**KIDS**:DGBT*1.0*12^

**INSTALL NAME**
DGBT*1.0*12
"BLD",5990,0)
DGBT*1.0*12^BENEFICIARY TRAVEL^0^3050128^y
"BLD",5990,4,0)
^9.64PA^^
"BLD",5990,"ABPKG")
n
"BLD",5990,"KRN",0)
^9.67PA^8989.52^19
"BLD",5990,"KRN",.4,0)
.4
"BLD",5990,"KRN",.401,0)
.401
"BLD",5990,"KRN",.402,0)
.402
"BLD",5990,"KRN",.403,0)
.403
"BLD",5990,"KRN",.5,0)
.5
"BLD",5990,"KRN",.84,0)
.84
"BLD",5990,"KRN",3.6,0)
3.6
"BLD",5990,"KRN",3.8,0)
3.8
"BLD",5990,"KRN",9.2,0)
9.2
"BLD",5990,"KRN",9.8,0)
9.8
"BLD",5990,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5990,"KRN",9.8,"NM",1,0)
DGBTE1^^0^B22539383
"BLD",5990,"KRN",9.8,"NM","B","DGBTE1",1)

"BLD",5990,"KRN",19,0)
19
"BLD",5990,"KRN",19.1,0)
19.1
"BLD",5990,"KRN",101,0)
101
"BLD",5990,"KRN",409.61,0)
409.61
"BLD",5990,"KRN",771,0)
771
"BLD",5990,"KRN",870,0)
870
"BLD",5990,"KRN",8989.51,0)
8989.51
"BLD",5990,"KRN",8989.52,0)
8989.52
"BLD",5990,"KRN",8994,0)
8994
"BLD",5990,"KRN","B",.4,.4)

"BLD",5990,"KRN","B",.401,.401)

"BLD",5990,"KRN","B",.402,.402)

"BLD",5990,"KRN","B",.403,.403)

"BLD",5990,"KRN","B",.5,.5)

"BLD",5990,"KRN","B",.84,.84)

"BLD",5990,"KRN","B",3.6,3.6)

"BLD",5990,"KRN","B",3.8,3.8)

"BLD",5990,"KRN","B",9.2,9.2)

"BLD",5990,"KRN","B",9.8,9.8)

"BLD",5990,"KRN","B",19,19)

"BLD",5990,"KRN","B",19.1,19.1)

"BLD",5990,"KRN","B",101,101)

"BLD",5990,"KRN","B",409.61,409.61)

"BLD",5990,"KRN","B",771,771)

"BLD",5990,"KRN","B",870,870)

"BLD",5990,"KRN","B",8989.51,8989.51)

"BLD",5990,"KRN","B",8989.52,8989.52)

"BLD",5990,"KRN","B",8994,8994)

"BLD",5990,"QUES",0)
^9.62^^
"BLD",5990,"REQB",0)
^9.611^1^1
"BLD",5990,"REQB",1,0)
DGBT*1.0*8^2
"BLD",5990,"REQB","B","DGBT*1.0*8",1)

"MBREQ")
0
"PKG",154,-1)
1^1
"PKG",154,0)
BENEFICIARY TRAVEL^DGBT^Beneficiary Travel
"PKG",154,20,0)
^9.402P^^
"PKG",154,22,0)
^9.49I^1^1
"PKG",154,22,1,0)
1.0^3030731^3020423^66481
"PKG",154,22,1,"PAH",1,0)
12^3050128
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","DGBTE1")
0^1^B22539383
"RTN","DGBTE1",1,0)
DGBTE1 ;ALB/SCK/EG - BENEFICIARY TRAVEL FIND OLD CLAIM DATES  ; 1/28/05 11:17am
"RTN","DGBTE1",2,0)
 ;;1.0;Beneficiary Travel;**8,12**;September 25, 2001
"RTN","DGBTE1",3,0)
DATE ;  get date for claim, either new or past date
"RTN","DGBTE1",4,0)
 K ^TMP("DGBT",$J),^TMP("DGBTARA",$J),DIR
"RTN","DGBTE1",5,0)
 I 'DGBTNEW S DIR("A",2)="Enter a 'P' to display Past CLAIM dates for editing."
"RTN","DGBTE1",6,0)
 S DIR("A",3)="Time is required when adding a new CLAIM.",DIR("A",4)="",DIR("A",1)="",DIR("A")="Select TRAVEL CLAIM DATE/TIME",DIR("?")="^D HELP^DGBTE1A"
"RTN","DGBTE1",7,0)
 S DIR(0)="F",DIR("B")="NOW" D ^DIR K DIR G ERR1:$D(DIRUT)
"RTN","DGBTE1",8,0)
 S CHZFLG=0,%DT="EXR",DTSUB=$S(Y="N":"NOW",Y="P":"OLD",Y="p":"OLD",1:"OTHR")_"^DGBTE1A" D @DTSUB K DTSUB
"RTN","DGBTE1",9,0)
 G ERR1:$D(DTOUT),DATE:Y1<0 S DGBTA=Y1 G SET:CHZFLG
"RTN","DGBTE1",10,0)
DATE1 ;  for past claims, set DGBTDT to inverse date of claim date
"RTN","DGBTE1",11,0)
 I $D(^DGBT(392,"C",DFN)) D
"RTN","DGBTE1",12,0)
 . S DGBTC=0,DGBTDT=9999999-$E(DGBTA,1,7) ; set past claims counter=0
"RTN","DGBTE1",13,0)
 . ; for latest date (topmost) search for past claims
"RTN","DGBTE1",14,0)
 . F I=DGBTDT:0 S I=$O(^DGBT(392,"AI",DFN,I)) Q:'I!(I>(DGBTDT_.99999))  S DGBTC=DGBTC+1,DGBT(DGBTC)=9999999.99999-I
"RTN","DGBTE1",15,0)
 I '$D(DGBT) G LOCK
"RTN","DGBTE1",16,0)
 W !!,"There are other claims on this date.",!,"Select by number to edit or <RETURN> to add a new CLAIM.",!
"RTN","DGBTE1",17,0)
 ; convert inverse claim date to external format through VADATE conversion routine
"RTN","DGBTE1",18,0)
 F I=0:0 S I=$O(DGBT(I)) Q:'I  S VADAT("W")=DGBT(I) D ^VADATE W !?5,I,".",?10,VADATE("E")
"RTN","DGBTE1",19,0)
 K DIR S DIR("A")="Select 1"_$S(DGBTC=1:"",1:"-"_DGBTC)_", or <RETURN> to add a new claim: ",DIR(0)="NOA^1:"_DGBTC,DIR("?")="Select, by number, one of the displayed claim dates: "
"RTN","DGBTE1",20,0)
 D ^DIR K DIR G QUIT^DGBTEND:$D(DTOUT)!($D(DUOUT))
"RTN","DGBTE1",21,0)
 G LOCK:Y="" G DATE:'$D(DGBT(Y))
"RTN","DGBTE1",22,0)
 S DGBTA=DGBT(Y) G SET
"RTN","DGBTE1",23,0)
LOCK ;
"RTN","DGBTE1",24,0)
 L ^DGBT(392,DGBTA):1
"RTN","DGBTE1",25,0)
 I '$T!$D(^DGBT(392,DGBTA)) L  S DGBTA=DGBTA+.00001 G LOCK
"RTN","DGBTE1",26,0)
 S VADAT("W")=DGBTA D ^VADATE W VADATE("E")
"RTN","DGBTE1",27,0)
ASKADD ;
"RTN","DGBTE1",28,0)
 W !!,"Are you sure you want to add a new claim"
"RTN","DGBTE1",29,0)
 S %=1 D YN^DICN G PATIENT^DGBTE:%<0!(%=2)
"RTN","DGBTE1",30,0)
 I '% W !!,"Enter 'YES' to add a new claim, or 'NO' not to add the claim." G ASKADD
"RTN","DGBTE1",31,0)
 K DD,DO
"RTN","DGBTE1",32,0)
 ; create new file entry, stuff patient DFN into name field(pointer)
"RTN","DGBTE1",33,0)
 S (X,DINUM)=DGBTA,DIC="^DGBT(392,",DIC(0)="L",DIC("DR")="2////"_DFN
"RTN","DGBTE1",34,0)
 D FILE^DICN K DIC L
"RTN","DGBTE1",35,0)
 ; go back to patient if no file entry
"RTN","DGBTE1",36,0)
 G:Y'>0 PATIENT^DGBTE
"RTN","DGBTE1",37,0)
SET ; call inhouse generic date routine
"RTN","DGBTE1",38,0)
 S (DA,DGBTDT,VADAT("W"))=DGBTA D ^VADATE
"RTN","DGBTE1",39,0)
 ; get internal and external formats of converted inverse dates
"RTN","DGBTE1",40,0)
 S DGBTDTI=VADATE("I"),DGBTDTE=VADATE("E") K VADAT,VADATE,DIC,Y
"RTN","DGBTE1",41,0)
 S DGBTDIVN=$P(^DG(40.8,DGBTDIVI,0),"^",7)
"RTN","DGBTE1",42,0)
STUFF ;  stuff departure with address data from patient file, dest from institution file
"RTN","DGBTE1",43,0)
 S:'$D(^DGBT(392,DGBTDT,"D")) ^DGBT(392,DGBTDT,"D")=VAPA(1)_"^"_VAPA(2)_"^"_VAPA(3)_"^"_VAPA(4)_"^"_$S(VAPA(5)]"":+VAPA(5),1:"")_"^"_$P(VAPA(11),U,1)
"RTN","DGBTE1",44,0)
 I '$D(^DGBT(392,DGBTDT,"T")) D
"RTN","DGBTE1",45,0)
 . S X=$S($D(^DIC(4,DGBTDIVN,1)):^(1),1:"")
"RTN","DGBTE1",46,0)
 . S ^DGBT(392,DGBTDT,"T")=($P(^DG(40.8,DGBTDIVI,0),U)_"^"_$P(X,U)_"^"_$P(X,U,2)_"^"_$P(X,U,3)_"^"_$P(^DIC(4,DGBTDIVN,0),U,2)_"^"_$P(X,U,4))
"RTN","DGBTE1",47,0)
CHKFILES ; section removed, dependents picked up below in MEANS ; abr 10/94
"RTN","DGBTE1",48,0)
MEANS ;  find corres. means test entry, gets MT income, status, no. of dependents
"RTN","DGBTE1",49,0)
 ;DGBTMTS= MT Status;  DGBTCSC= claim Service Connected indicator & %;  DGBTELG=Eligibility status
"RTN","DGBTE1",50,0)
 N X,X2,X3,Y,DGBTIFL
"RTN","DGBTE1",51,0)
 S X=$$LST^DGMTU(DFN,DGBTA),DGBTMTS=$P(X,U,4)_U_$P(X,U,3) ; returns corres. MT info,X=IEN of last MT
"RTN","DGBTE1",52,0)
 ; get income, # dependents
"RTN","DGBTE1",53,0)
 S Y=$$INCOME^VAFMON(DFN,DGBTA,1)
"RTN","DGBTE1",54,0)
 S X=$P(Y,U),DGBTIFL=$P(Y,U,2) ; returns income & source.
"RTN","DGBTE1",55,0)
 I X?1N.E!(X<0) D
"RTN","DGBTE1",56,0)
 .I X<0 S X=0
"RTN","DGBTE1",57,0)
 .S X2="0$",X3=8 D COMMA^%DTC
"RTN","DGBTE1",58,0)
 S DGBTINC=X_U_$G(DGBTIFL) K X,X2
"RTN","DGBTE1",59,0)
 S DGBTDEP=$$DEP^VAFMON(DFN,DGBTA) ; finds depedents Vet, Spouse, Children
"RTN","DGBTE1",60,0)
 ;
"RTN","DGBTE1",61,0)
PREV ; if past claim get SC%, elig.
"RTN","DGBTE1",62,0)
 I CHZFLG S X=^DGBT(392,DGBTA,0),DGBTELG=$P(X,U,3),DGBTCSC=$P(X,U,4) D
"RTN","DGBTE1",63,0)
 . S:DGBTCSC DGBTCSC=1_U_DGBTCSC S:'DGBTCSC DGBTCSC=0
"RTN","DGBTE1",64,0)
 . S:DGBTELG DGBTELG=DGBTELG_U_$P(^DIC(8,DGBTELG,0),U)
"RTN","DGBTE1",65,0)
CERT ;  get last BT certification,  get date, then get eligibility
"RTN","DGBTE1",66,0)
 I $D(^DGBT(392.2,"C",DFN)) D
"RTN","DGBTE1",67,0)
 .;cd=cert date in inverse then external format, ce= eligibility, ca* = amt certified
"RTN","DGBTE1",68,0)
 . S DGBTCD=$O(^DGBT(392.2,"C",DFN,0)),DGBTCE=$P(^DGBT(392.2,DGBTCD,0),"^",3)
"RTN","DGBTE1",69,0)
 . S DGBTCA=$P(^DGBT(392.2,DGBTCD,0),"^",4),Y=9999999-$P(DGBTCD,".")
"RTN","DGBTE1",70,0)
 . X ^DD("DD") ; date conversion, y=cert date (internal)
"RTN","DGBTE1",71,0)
 . S DGBTCD=Y,X=DGBTCA,X2="0$",X3=8 K Y D COMMA^%DTC S DGBTCA=X K X,X2,X3
"RTN","DGBTE1",72,0)
APPTS ;  search patient file for appointments through claim date (DTI+1),  adddates to array DGBTCL 
"RTN","DGBTE1",73,0)
 N DGARRAY,CLIEN,APTDT S DGARRAY("FLDS")="2;3;10;18"
"RTN","DGBTE1",74,0)
 S DGARRAY(4)=DFN,I=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGBTE1",75,0)
 ;if dfn = 101, e.g., it's not clear if it is an error or clinic or patient
"RTN","DGBTE1",76,0)
 ;if an error, there will be no lower subscripts eg 01/20/2005
"RTN","DGBTE1",77,0)
 I $D(^TMP($J,"SDAMA301",101))=1 S I1=1,DGBTCL(101)="** Appointment Database Unavailable **"
"RTN","DGBTE1",78,0)
 I $D(^TMP($J,"SDAMA301",101))'=1 D
"RTN","DGBTE1",79,0)
 .S CLIEN="" F  S CLIEN=$O(^TMP($J,"SDAMA301",DFN,CLIEN)) Q:'CLIEN  D
"RTN","DGBTE1",80,0)
 ..S APTDT=DGBTDTI\1 F  S APTDT=$O(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT)) Q:'APTDT!(APTDT>(DGBTDTI+1))  D
"RTN","DGBTE1",81,0)
 ...S DGBTCL(APTDT)=$P($P(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),U,2),";",2)_U_$P($P(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),U,3),";")_U_$P($P(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),U,18),";")_U_$P($P(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),U,10),";")
"RTN","DGBTE1",82,0)
 K ^TMP($J,"SDAMA301"),DGARRAY,CLIEN,APTDT
"RTN","DGBTE1",83,0)
EXIT ; exit routine
"RTN","DGBTE1",84,0)
 Q
"RTN","DGBTE1",85,0)
ERR1 ;  error condition
"RTN","DGBTE1",86,0)
 G QUIT^DGBTEND Q
"VER")
8.0^22.0
**END**
**END**
