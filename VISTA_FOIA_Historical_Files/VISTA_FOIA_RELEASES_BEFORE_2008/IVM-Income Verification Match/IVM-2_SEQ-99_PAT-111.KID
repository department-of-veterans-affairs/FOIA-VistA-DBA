Released IVM*2*111 SEQ #99
Extracted from mail message
**KIDS**:IVM*2.0*111^

**INSTALL NAME**
IVM*2.0*111
"BLD",6015,0)
IVM*2.0*111^INCOME VERIFICATION MATCH^0^3060215^y
"BLD",6015,1,0)
^^1^1^3060213^^
"BLD",6015,1,1,0)
AUTO-FILE INSURANCE DATA INTO THE INSURANCE BUFFER FILE.
"BLD",6015,4,0)
^9.64PA^^0
"BLD",6015,"INIT")
EN^IVM2111
"BLD",6015,"KRN",0)
^9.67PA^8989.52^19
"BLD",6015,"KRN",.4,0)
.4
"BLD",6015,"KRN",.401,0)
.401
"BLD",6015,"KRN",.402,0)
.402
"BLD",6015,"KRN",.403,0)
.403
"BLD",6015,"KRN",.5,0)
.5
"BLD",6015,"KRN",.84,0)
.84
"BLD",6015,"KRN",3.6,0)
3.6
"BLD",6015,"KRN",3.8,0)
3.8
"BLD",6015,"KRN",9.2,0)
9.2
"BLD",6015,"KRN",9.8,0)
9.8
"BLD",6015,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",6015,"KRN",9.8,"NM",1,0)
IVMLINS1^^0^B28699759
"BLD",6015,"KRN",9.8,"NM",2,0)
IVMLINS2^^0^B25189104
"BLD",6015,"KRN",9.8,"NM",3,0)
IVMLINS3^^0^B11827505
"BLD",6015,"KRN",9.8,"NM",4,0)
IVMPREC3^^0^B14818913
"BLD",6015,"KRN",9.8,"NM",5,0)
IVMUPAR^^0^B1326072
"BLD",6015,"KRN",9.8,"NM","B","IVMLINS1",1)

"BLD",6015,"KRN",9.8,"NM","B","IVMLINS2",2)

"BLD",6015,"KRN",9.8,"NM","B","IVMLINS3",3)

"BLD",6015,"KRN",9.8,"NM","B","IVMPREC3",4)

"BLD",6015,"KRN",9.8,"NM","B","IVMUPAR",5)

"BLD",6015,"KRN",19,0)
19
"BLD",6015,"KRN",19.1,0)
19.1
"BLD",6015,"KRN",101,0)
101
"BLD",6015,"KRN",409.61,0)
409.61
"BLD",6015,"KRN",771,0)
771
"BLD",6015,"KRN",870,0)
870
"BLD",6015,"KRN",8989.51,0)
8989.51
"BLD",6015,"KRN",8989.52,0)
8989.52
"BLD",6015,"KRN",8994,0)
8994
"BLD",6015,"KRN","B",.4,.4)

"BLD",6015,"KRN","B",.401,.401)

"BLD",6015,"KRN","B",.402,.402)

"BLD",6015,"KRN","B",.403,.403)

"BLD",6015,"KRN","B",.5,.5)

"BLD",6015,"KRN","B",.84,.84)

"BLD",6015,"KRN","B",3.6,3.6)

"BLD",6015,"KRN","B",3.8,3.8)

"BLD",6015,"KRN","B",9.2,9.2)

"BLD",6015,"KRN","B",9.8,9.8)

"BLD",6015,"KRN","B",19,19)

"BLD",6015,"KRN","B",19.1,19.1)

"BLD",6015,"KRN","B",101,101)

"BLD",6015,"KRN","B",409.61,409.61)

"BLD",6015,"KRN","B",771,771)

"BLD",6015,"KRN","B",870,870)

"BLD",6015,"KRN","B",8989.51,8989.51)

"BLD",6015,"KRN","B",8989.52,8989.52)

"BLD",6015,"KRN","B",8994,8994)

"BLD",6015,"QUES",0)
^9.62^^
"BLD",6015,"REQB",0)
^9.611^2^2
"BLD",6015,"REQB",1,0)
IVM*2.0*34^2
"BLD",6015,"REQB",2,0)
IVM*2.0*94^2
"BLD",6015,"REQB","B","IVM*2.0*34",1)

"BLD",6015,"REQB","B","IVM*2.0*94",2)

"INIT")
EN^IVM2111
"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
111^3060215
"PKG",220,22,1,"PAH",1,1,0)
^^1^1^3060215
"PKG",220,22,1,"PAH",1,1,1,0)
AUTO-FILE INSURANCE DATA INTO THE INSURANCE BUFFER FILE.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","IVM2111")
0^^B2820002^n/a
"RTN","IVM2111",1,0)
IVM2111 ;ALB/TMK - POST INSTALL FOR PATCH IVM*2*111 ; 10-FEB-2006
"RTN","IVM2111",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**111**; 21-OCT-94
"RTN","IVM2111",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVM2111",4,0)
 ;
"RTN","IVM2111",5,0)
EN ;
"RTN","IVM2111",6,0)
 D BMES^XPDUTL("Deleting IVM PARAMETER field #.04 SUPPRESS INSURANCE MESSAGE")
"RTN","IVM2111",7,0)
 S DIE="^IVM(301.9,",DR=".04///@",DA=1 D ^DIE ; Delete data
"RTN","IVM2111",8,0)
 S DIK="^DD(301.9,",DA=.04,DA(1)=301.9 D ^DIK ; Delete field
"RTN","IVM2111",9,0)
 D BMES^XPDUTL("Step complete")
"RTN","IVM2111",10,0)
 ;
"RTN","IVM2111",11,0)
 D BMES^XPDUTL("Queueing job to auto-upload existing HL7 Z04 messages to the buffer file")
"RTN","IVM2111",12,0)
 S ZTIO="",ZTDESC="Uploads existing insurance messages to buffer file"
"RTN","IVM2111",13,0)
 S ZTRTN="AUTO^IVMLINS3",ZTDTH=$$NOW^XLFDT()
"RTN","IVM2111",14,0)
 D ^%ZTLOAD
"RTN","IVM2111",15,0)
 D BMES^XPDUTL($S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK,1:"This job could not be queued"))
"RTN","IVM2111",16,0)
 D BMES^XPDUTL("To restart this job, use 'D AUTO^IVMLINS3'")
"RTN","IVM2111",17,0)
 D BMES^XPDUTL("Step complete")
"RTN","IVM2111",18,0)
 D BMES^XPDUTL("End of post-install")
"RTN","IVM2111",19,0)
 Q
"RTN","IVM2111",20,0)
 ;
"RTN","IVMLINS1")
0^1^B28699759^B27648745
"RTN","IVMLINS1",1,0)
IVMLINS1 ;ALB/KCL - IVM INSURANCE DISPLAY POLICY ; 01-FEB-94
"RTN","IVMLINS1",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**14,94,111**; 21-OCT-94
"RTN","IVMLINS1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMLINS1",4,0)
 ;
"RTN","IVMLINS1",5,0)
 ;
"RTN","IVMLINS1",6,0)
DE ; - select patient for insurance information upload/purge
"RTN","IVMLINS1",7,0)
 ;
"RTN","IVMLINS1",8,0)
 ;  Input:   - ^TMP("IVMLST",$J,"IDX",CTR,CTR)=pat name_pat ssn_ivm ien_ivm sub ien
"RTN","IVMLINS1",9,0)
 ;
"RTN","IVMLINS1",10,0)
 ;
"RTN","IVMLINS1",11,0)
 ;
"RTN","IVMLINS1",12,0)
 S IVMDONE=0
"RTN","IVMLINS1",13,0)
 ;
"RTN","IVMLINS1",14,0)
 ; - generic seletor used within a list manager action call
"RTN","IVMLINS1",15,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IVMLINS1",16,0)
 Q:'$D(VALMY)
"RTN","IVMLINS1",17,0)
 S IVMENT=0 F  S IVMENT=$O(VALMY(IVMENT)) Q:'IVMENT  D
"RTN","IVMLINS1",18,0)
 .;
"RTN","IVMLINS1",19,0)
 .; - get index for look-up
"RTN","IVMLINS1",20,0)
 .S IVMIDX=$G(^TMP("IVMLST",$J,"IDX",IVMENT,IVMENT)) I IVMIDX']"" Q
"RTN","IVMLINS1",21,0)
 .;
"RTN","IVMLINS1",22,0)
 .; - change if HL7 segment sep ever changes!
"RTN","IVMLINS1",23,0)
 .S HLFS="^",HLECH="~"
"RTN","IVMLINS1",24,0)
 .;
"RTN","IVMLINS1",25,0)
 .; - get patient name, ssn, da(1), da
"RTN","IVMLINS1",26,0)
 .S IVMNAME=$P(IVMIDX,"^",1),IVMSSN=$P(IVMIDX,"^",2),IVMI=$P(IVMIDX,"^",3),IVMJ=$P(IVMIDX,"^",4)
"RTN","IVMLINS1",27,0)
 .;
"RTN","IVMLINS1",28,0)
 .; - get data node from list manager storage array
"RTN","IVMLINS1",29,0)
 .S IVMDND=$G(^TMP("IVMIUPL",$J,IVMNAME,IVMI,IVMJ)),DFN=$P(IVMDND,"^",1)
"RTN","IVMLINS1",30,0)
 .;
"RTN","IVMLINS1",31,0)
 . S IVMIN1=$$GETIN1(IVMI,IVMJ)
"RTN","IVMLINS1",32,0)
 .;
"RTN","IVMLINS1",33,0)
 .; - alert user if date of death
"RTN","IVMLINS1",34,0)
 .I $P(IVMDND,"^",6)]""!($P($G(^DPT(+DFN,.35)),"^")]"") D DOD^IVMLINS2
"RTN","IVMLINS1",35,0)
 .;
"RTN","IVMLINS1",36,0)
 .; - display all insurance currently on file in DHCP
"RTN","IVMLINS1",37,0)
 .D CLEAR^VALM1,ALL
"RTN","IVMLINS1",38,0)
 .; - display insurance information received from IVM IN1 segment
"RTN","IVMLINS1",39,0)
 .D HDR,DISP1
"RTN","IVMLINS1",40,0)
 .S DIR(0)="E",DIR("A")="Press RETURN to continue or '^' to return to display screen" D ^DIR K DIR Q:'Y
"RTN","IVMLINS1",41,0)
 .;
"RTN","IVMLINS1",42,0)
 .; - ask user to add or purge
"RTN","IVMLINS1",43,0)
 .D ASK^IVMLINS2
"RTN","IVMLINS1",44,0)
 ;
"RTN","IVMLINS1",45,0)
DEQ ; - clean up variables
"RTN","IVMLINS1",46,0)
 D IVMQ
"RTN","IVMLINS1",47,0)
 Q
"RTN","IVMLINS1",48,0)
 ;
"RTN","IVMLINS1",49,0)
 ;
"RTN","IVMLINS1",50,0)
GETIN1(IVMI,IVMJ) ; get IN1 segment from (#301.5) file containing ins data
"RTN","IVMLINS1",51,0)
 S IVMIN1=$G(^IVM(301.5,IVMI,"IN",IVMJ,"ST"))
"RTN","IVMLINS1",52,0)
 ; - set if IN1 segment exceeds 245 chars
"RTN","IVMLINS1",53,0)
 S:$D(^IVM(301.5,IVMI,"IN",IVMJ,"ST1")) IVMIN1=IVMIN1_(^("ST1"))
"RTN","IVMLINS1",54,0)
 ;
"RTN","IVMLINS1",55,0)
 Q IVMIN1
"RTN","IVMLINS1",56,0)
 ;
"RTN","IVMLINS1",57,0)
ALL ; - display all insurance company information for patient in DHCP
"RTN","IVMLINS1",58,0)
 ;
"RTN","IVMLINS1",59,0)
 W !,?22,"INSURANCE POLICIES CURRENTLY ON FILE"
"RTN","IVMLINS1",60,0)
 ; - write dashed line
"RTN","IVMLINS1",61,0)
 W !,?7,$TR($J("",66)," ","*")
"RTN","IVMLINS1",62,0)
 ;
"RTN","IVMLINS1",63,0)
 ; - IB call to display all DHCP ins co. information
"RTN","IVMLINS1",64,0)
 D DISP^DGIBDSP
"RTN","IVMLINS1",65,0)
 W !
"RTN","IVMLINS1",66,0)
 Q
"RTN","IVMLINS1",67,0)
 ;
"RTN","IVMLINS1",68,0)
 ;
"RTN","IVMLINS1",69,0)
HDR ; - header for insurance data received from HEC
"RTN","IVMLINS1",70,0)
 W !,?23,"INSURANCE POLICY RECEIVED FROM HEC"
"RTN","IVMLINS1",71,0)
 ; - write dashed line
"RTN","IVMLINS1",72,0)
 W !,?7,$TR($J("",66)," ","*")
"RTN","IVMLINS1",73,0)
 Q
"RTN","IVMLINS1",74,0)
 ;
"RTN","IVMLINS1",75,0)
 ;
"RTN","IVMLINS1",76,0)
DISP1 ; - display insurance fields from IN1 segment
"RTN","IVMLINS1",77,0)
 ;
"RTN","IVMLINS1",78,0)
 ; - ins effec and exp dates in FM format
"RTN","IVMLINS1",79,0)
 S IVMEFF=$$FMDATE^HLFNC($P(IVMIN1,HLFS,12)),IVMEXP=$$FMDATE^HLFNC($P(IVMIN1,HLFS,13))
"RTN","IVMLINS1",80,0)
 ;
"RTN","IVMLINS1",81,0)
 S IVMADD=$P(IVMIN1,"^",5)
"RTN","IVMLINS1",82,0)
 S IVMPLAN=$P(IVMIN1,HLFS,15),IVMPLAN=$P($G(^IBE(355.1,+IVMPLAN,0)),"^")
"RTN","IVMLINS1",83,0)
 ;
"RTN","IVMLINS1",84,0)
 ; - display insurance policy fields from IVM
"RTN","IVMLINS1",85,0)
 W !,?2,"Company: ",?9,$E($P(IVMIN1,HLFS,4),1,32),?45,"Effective Date: ",?62,$$DAT2^IVMUFNC4(IVMEFF)
"RTN","IVMLINS1",86,0)
 W !,?2,"Phone #: ",?9,$E($P(IVMIN1,HLFS,7),1,25),?45,"Expiration Date: ",?62,$$DAT2^IVMUFNC4(IVMEXP)
"RTN","IVMLINS1",87,0)
 W !,?2,"Address: ",?45,"Subscriber ID: " W:$P(IVMIN1,HLFS,36)]"" ?59,$E($P(IVMIN1,HLFS,36),1,20) W !
"RTN","IVMLINS1",88,0)
 W:$P(IVMADD,HLECH,1)]"" ?4,$E($P(IVMADD,HLECH,1),1,35) W ?45,"Policy Holder: " W:$P(IVMIN1,HLFS,17)]"" ?59,$S($P(IVMIN1,HLFS,17)="v":"SELF",$P(IVMIN1,HLFS,17)="s":"SPOUSE",1:"OTHER")
"RTN","IVMLINS1",89,0)
 W:$P(IVMADD,HLECH,1)']"" !
"RTN","IVMLINS1",90,0)
 W:$P(IVMADD,HLECH,2)]"" !,?4,$E($P(IVMADD,HLECH,2),1,35)
"RTN","IVMLINS1",91,0)
 W:$P(IVMADD,HLECH,3)]""!($P(IVMADD,HLECH,4)]"")!($P(IVMADD,HLECH,5)]"") !,?4,$P(IVMADD,HLECH,3) W:$P(IVMADD,HLECH,3)]""&($P(IVMADD,HLECH,4)]"") ", ",$E($P(IVMADD,HLECH,4),1,2)
"RTN","IVMLINS1",92,0)
 W:$P(IVMADD,HLECH,5)]""&($P(IVMADD,HLECH,3)]""!($P(IVMADD,HLECH,4)]"")) " "
"RTN","IVMLINS1",93,0)
 W $P(IVMADD,HLECH,5)
"RTN","IVMLINS1",94,0)
 I $P(IVMADD,HLECH,2)']"" D
"RTN","IVMLINS1",95,0)
 .W !,?45,"Group Name: " W:$P(IVMIN1,HLFS,9)]"" ?59,$E($P(IVMIN1,HLFS,9),1,20)
"RTN","IVMLINS1",96,0)
 W:$P(IVMADD,HLECH,2)]"" ?45,"Group Name: " W:$P(IVMADD,HLECH,2)]""&($P(IVMIN1,HLFS,9)]"") ?59,$E($P(IVMIN1,HLFS,9),1,20)
"RTN","IVMLINS1",97,0)
 W !,?45,"Group Number: " W:$P(IVMIN1,HLFS,8)]"" ?59,$E($P(IVMIN1,HLFS,8),1,20)
"RTN","IVMLINS1",98,0)
 W !,?2,"Name of Insured: " W:$P(IVMIN1,HLFS,16)]"" ?9,$E($$FMNAME^HLFNC($P(IVMIN1,HLFS,16)),1,23) W:$P(IVMIN1,HLFS,16)']"" ?9,$E(IVMNAME,1,23)
"RTN","IVMLINS1",99,0)
 W ?45,"Pre-Cert. Req?: " W:$P(IVMIN1,HLFS,28)]"" ?60,$S($P(IVMIN1,HLFS,28)=1:"YES",$P(IVMIN1,HLFS,28)=0:"NO",1:"")
"RTN","IVMLINS1",100,0)
 I $P(IVMIN1,HLFS,16)]"" S $P(IVMIN1,HLFS,16)=$$FMNAME^HLFNC($P(IVMIN1,HLFS,16))
"RTN","IVMLINS1",101,0)
 W !,?45,"Plan Type: ",?55,$E(IVMPLAN,1,23) W !
"RTN","IVMLINS1",102,0)
 Q
"RTN","IVMLINS1",103,0)
 ;
"RTN","IVMLINS1",104,0)
 ;
"RTN","IVMLINS1",105,0)
DISP2 ; - display ins co. name and address
"RTN","IVMLINS1",106,0)
 W !,?4,"Insurance Company: ",$E($P(IVMIN1,HLFS,4),1,45),!
"RTN","IVMLINS1",107,0)
 W !,?4,"Company Address:   " W:$P(IVMADD,HLECH,1)]"" ?23,$E($P(IVMADD,HLECH,1),1,35) ; address line1
"RTN","IVMLINS1",108,0)
 W:$P(IVMADD,HLECH,2)]"" !?23,$E($P(IVMADD,HLECH,2),1,35) ; address line2
"RTN","IVMLINS1",109,0)
 W:$P(IVMADD,HLECH,3)]""!($P(IVMADD,HLECH,4)]"")!($P(IVMADD,HLECH,5)]"") !?23
"RTN","IVMLINS1",110,0)
 W $P(IVMADD,HLECH,3) W:$P(IVMADD,HLECH,3)]""&($P(IVMADD,HLECH,4)]"") ", " ; city
"RTN","IVMLINS1",111,0)
 W $E($P(IVMADD,HLECH,4),1,2) ; state
"RTN","IVMLINS1",112,0)
 W:$P(IVMADD,HLECH,5)]""&($P(IVMADD,HLECH,3)]""!($P(IVMADD,HLECH,4)]"")) " "
"RTN","IVMLINS1",113,0)
 W $P(IVMADD,HLECH,5) ; zip
"RTN","IVMLINS1",114,0)
 Q
"RTN","IVMLINS1",115,0)
 ;
"RTN","IVMLINS1",116,0)
 ;
"RTN","IVMLINS1",117,0)
IVMQ ; - kill variables used from all protocols
"RTN","IVMLINS1",118,0)
 ;
"RTN","IVMLINS1",119,0)
 ; - if action completed reset List Man array for display
"RTN","IVMLINS1",120,0)
 I $D(^TMP("IVMLST",$J)) D  ; Only if list manager array exists
"RTN","IVMLINS1",121,0)
 . I IVMDONE D INIT^IVMLINS
"RTN","IVMLINS1",122,0)
 . ;
"RTN","IVMLINS1",123,0)
 . S VALMBCK="R"
"RTN","IVMLINS1",124,0)
 K DA,DFN,IVM0NOD,IVMADD,IVMDND,IVMDONE,IVMEFF,IVMENT,IVMEXP
"RTN","IVMLINS1",125,0)
 K IVMI,IVMIDX,IVMIN1,IVMJ,IVMNAME,IVMPLAN,IVMSSN,Y
"RTN","IVMLINS1",126,0)
 Q
"RTN","IVMLINS2")
0^2^B25189104^B25183217
"RTN","IVMLINS2",1,0)
IVMLINS2 ;ALB/KCL - IVM INSURANCE POLICY PURGE ; 3/23/01 4:36pm
"RTN","IVMLINS2",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**14,34,111**; 21-OCT-94
"RTN","IVMLINS2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMLINS2",4,0)
 ;
"RTN","IVMLINS2",5,0)
 ;
"RTN","IVMLINS2",6,0)
ASK ; - ask user to 'T'ransfer or 'P'urge IVM insurance policy
"RTN","IVMLINS2",7,0)
 S DIR(0)="S^1:Transfer IVM Insurance Policy to insurance module;2:Purge IVM Insurance Policy;3:Return to Display Screen"
"RTN","IVMLINS2",8,0)
 S DIR("A")="Select Action",DIR("?")="^D HLP1^IVMLINS2"
"RTN","IVMLINS2",9,0)
 D ^DIR K DIR S IVMACT=Y G:$D(DIRUT)!($D(DUOUT))!(IVMACT=3) IVMQ^IVMLINS3
"RTN","IVMLINS2",10,0)
 I IVMACT[1 D TRANSFER^IVMLINS3(0) Q
"RTN","IVMLINS2",11,0)
 ;
"RTN","IVMLINS2",12,0)
 ;
"RTN","IVMLINS2",13,0)
PURGE ; - purge IVM insurance information - ask for reason why
"RTN","IVMLINS2",14,0)
 ;
"RTN","IVMLINS2",15,0)
 W !!,"The 'Purge IVM Insurance Policy' action has been selected."
"RTN","IVMLINS2",16,0)
 ;
"RTN","IVMLINS2",17,0)
 W !!,"This action will cause the insurance information which has been"
"RTN","IVMLINS2",18,0)
 W !,"received from HEC to be deleted from the system!",!,*7
"RTN","IVMLINS2",19,0)
 ;
"RTN","IVMLINS2",20,0)
 W !,"Please select a reason for purging the IVM insurance information."
"RTN","IVMLINS2",21,0)
 S DIC="^IVM(301.91,",DIC("A")="Select reason for purging: ",DIC(0)="QEAMZ"
"RTN","IVMLINS2",22,0)
 D ^DIC K DIC G:Y<0!($D(DTOUT))!($D(DUOUT)) ASK
"RTN","IVMLINS2",23,0)
 S IVMREPTR=+Y
"RTN","IVMLINS2",24,0)
 ;
"RTN","IVMLINS2",25,0)
 ; - ask user 'are you sure you want to purge'
"RTN","IVMLINS2",26,0)
 W ! S DIR(0)="Y",DIR("A")="Are you sure that you want to purge IVM insurance policy"
"RTN","IVMLINS2",27,0)
 ;
"RTN","IVMLINS2",28,0)
 ; - set default = 'NO'
"RTN","IVMLINS2",29,0)
 S DIR("B")="NO"
"RTN","IVMLINS2",30,0)
 ;
"RTN","IVMLINS2",31,0)
 ; - user help
"RTN","IVMLINS2",32,0)
 S DIR("?")="Answer 'Y'ES to go ahead with this action or 'N'O to abort"
"RTN","IVMLINS2",33,0)
 D ^DIR K DIR G:'Y ASK
"RTN","IVMLINS2",34,0)
 ;
"RTN","IVMLINS2",35,0)
 ; - update the INSURANCE SEGMENT multiple stored in (#301.5) file 
"RTN","IVMLINS2",36,0)
 W !!,"Purging the 'Insurance Policy' received from IVM... "
"RTN","IVMLINS2",37,0)
 N DA,DR,DIE,IVMINSST
"RTN","IVMLINS2",38,0)
 ;
"RTN","IVMLINS2",39,0)
 ; stuff UPLOAD INSURANCE DATA(.04) and REASON NOT UPLOADING INSURANCE
"RTN","IVMLINS2",40,0)
 ; (.08)
"RTN","IVMLINS2",41,0)
 S DA=IVMJ,DA(1)=IVMI
"RTN","IVMLINS2",42,0)
 S DIE="^IVM(301.5,"_DA(1)_",""IN"","
"RTN","IVMLINS2",43,0)
 S DR=".04////0;.08////^S X=IVMREPTR" D ^DIE
"RTN","IVMLINS2",44,0)
 ;
"RTN","IVMLINS2",45,0)
 S IVMINSST=0
"RTN","IVMLINS2",46,0)
 D HL7 ;send HL7 message to HEC
"RTN","IVMLINS2",47,0)
 ;
"RTN","IVMLINS2",48,0)
DELETE ; - delete segment name (.02 field of 301.501 multiple) from IVM PATIENT
"RTN","IVMLINS2",49,0)
 ;   file to remove from ASEG cross-reference
"RTN","IVMLINS2",50,0)
 ;
"RTN","IVMLINS2",51,0)
 S DA=IVMJ,DA(1)=IVMI
"RTN","IVMLINS2",52,0)
 S DIE="^IVM(301.5,"_DA(1)_",""IN"",",DR=".02////@" D ^DIE
"RTN","IVMLINS2",53,0)
 ;
"RTN","IVMLINS2",54,0)
 ; - delete incoming segments strings
"RTN","IVMLINS2",55,0)
 K ^IVM(301.5,DA(1),"IN",DA,"ST"),^("ST1")
"RTN","IVMLINS2",56,0)
 W "completed.",!
"RTN","IVMLINS2",57,0)
 ;
"RTN","IVMLINS2",58,0)
 S DIR(0)="E",DIR("A")="Press RETURN to continue" D ^DIR K DIR
"RTN","IVMLINS2",59,0)
 ;
"RTN","IVMLINS2",60,0)
 ; - delete entry from the List Manager display once purged
"RTN","IVMLINS2",61,0)
 K ^TMP("IVMIUPL",$J,IVMNAME,IVMI,IVMJ)
"RTN","IVMLINS2",62,0)
 ;
"RTN","IVMLINS2",63,0)
 ; - action completed
"RTN","IVMLINS2",64,0)
 S IVMDONE=1
"RTN","IVMLINS2",65,0)
 D IVMQ^IVMLINS3
"RTN","IVMLINS2",66,0)
 Q
"RTN","IVMLINS2",67,0)
 ;
"RTN","IVMLINS2",68,0)
HL7 ; - send HL7 message to HEC
"RTN","IVMLINS2",69,0)
 ;
"RTN","IVMLINS2",70,0)
 N IVMIN1,IVMIN2,IVMZIV
"RTN","IVMLINS2",71,0)
 N HLEID,HL,HLRESLT
"RTN","IVMLINS2",72,0)
 ;
"RTN","IVMLINS2",73,0)
 ; MESSAGE PROTOCOL
"RTN","IVMLINS2",74,0)
 S HLEID="VAMC "_$P($$SITE^VASITE,"^",3)_" ORU-Z04 SERVER V"
"RTN","IVMLINS2",75,0)
 S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","IVMLINS2",76,0)
 ;
"RTN","IVMLINS2",77,0)
 ; - initialize variables for HL7/IVM
"RTN","IVMLINS2",78,0)
 D INIT^IVMUFNC(HLEID,.HL) S HLMTN="ORU"
"RTN","IVMLINS2",79,0)
 ;
"RTN","IVMLINS2",80,0)
 ;
"RTN","IVMLINS2",81,0)
 ; - create PID,IN1,ZIV segments
"RTN","IVMLINS2",82,0)
 ;
"RTN","IVMLINS2",83,0)
 ; - PID segment
"RTN","IVMLINS2",84,0)
 K IVMPID,VAFPID
"RTN","IVMLINS2",85,0)
 S IVMPID=$$EN^VAFHLPID(DFN,"1,3,5,7,19")
"RTN","IVMLINS2",86,0)
 I $P(IVMPID,HLFS,20)["P" D PSEUDO^IVMPTRN1
"RTN","IVMLINS2",87,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID
"RTN","IVMLINS2",88,0)
 K IVMPID,VAFPID
"RTN","IVMLINS2",89,0)
 ;
"RTN","IVMLINS2",90,0)
 ; - IN1 segment
"RTN","IVMLINS2",91,0)
 S IVMIN1="IN1^1"
"RTN","IVMLINS2",92,0)
 S IVMIN2=$G(^IVM(301.5,IVMI,"IN",IVMJ,"ST"))_$G(^("ST1"))
"RTN","IVMLINS2",93,0)
 S $P(IVMIN1,"^",5)=$P(IVMIN2,"^",4)
"RTN","IVMLINS2",94,0)
 S $P(IVMIN1,"^",37)=$P(IVMIN2,"^",36)
"RTN","IVMLINS2",95,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMIN1
"RTN","IVMLINS2",96,0)
 ;
"RTN","IVMLINS2",97,0)
 ; - ZIV segment
"RTN","IVMLINS2",98,0)
 S IVMZIV="ZIV^1"
"RTN","IVMLINS2",99,0)
 ; - get ivm ien, strip off date of death
"RTN","IVMLINS2",100,0)
 S $P(IVMZIV,"^",10)=$P($P($G(^IVM(301.5,IVMI,"IN",IVMJ,0)),"^",7),"/")
"RTN","IVMLINS2",101,0)
 S $P(IVMZIV,"^",11)=IVMINSST
"RTN","IVMLINS2",102,0)
 S:IVMINSST=0 $P(IVMZIV,"^",12)=IVMREPTR
"RTN","IVMLINS2",103,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMZIV
"RTN","IVMLINS2",104,0)
 ;
"RTN","IVMLINS2",105,0)
 D GENERATE^HLMA(HLEID,"GM",1,.HLRESLT)  ; - create mail message
"RTN","IVMLINS2",106,0)
 K ^TMP("HLS",$J)
"RTN","IVMLINS2",107,0)
 D CLEAN^IVMUFNC
"RTN","IVMLINS2",108,0)
 Q
"RTN","IVMLINS2",109,0)
 ;
"RTN","IVMLINS2",110,0)
DOD ; - Alert user if date of death reported in DHCP or from HEC
"RTN","IVMLINS2",111,0)
 ;
"RTN","IVMLINS2",112,0)
 W !!,*7,"'Date of Death' reported for this patient "
"RTN","IVMLINS2",113,0)
 W $S($P($G(^DPT(+DFN,.35)),"^")]"":"in DHCP as "_$$DAT2^IVMUFNC4($P($G(^DPT(+DFN,.35)),"^")),$P(IVMDND,"^",6)]"":"by HEC as "_$$DAT2^IVMUFNC4($P(IVMDND,"^",6)))_".",!
"RTN","IVMLINS2",114,0)
 S DIR(0)="E",DIR("A")="Press RETURN to continue" D ^DIR K DIR
"RTN","IVMLINS2",115,0)
 Q
"RTN","IVMLINS2",116,0)
 ;
"RTN","IVMLINS2",117,0)
 ;
"RTN","IVMLINS2",118,0)
HLP1 ; - help for ASK  Transfer or Purge
"RTN","IVMLINS2",119,0)
 ;
"RTN","IVMLINS2",120,0)
 ; - if user enters single '?'
"RTN","IVMLINS2",121,0)
 I X="?" D
"RTN","IVMLINS2",122,0)
 .W !!,"Enter one of the following responses:"
"RTN","IVMLINS2",123,0)
 .W !,"    1   -  to transfer the Insurance Policy that was received from HEC to the insurance module"
"RTN","IVMLINS2",124,0)
 .W !,"    2   -  to delete the Insurance Policy that was received from HEC"
"RTN","IVMLINS2",125,0)
 .W !,"    3   -  to return to the previous display screen"
"RTN","IVMLINS2",126,0)
 .W !,"   '^'  -  to return to the previous display screen"
"RTN","IVMLINS2",127,0)
 ;
"RTN","IVMLINS2",128,0)
 ; - if user enters double '??'
"RTN","IVMLINS2",129,0)
 I X="??" D
"RTN","IVMLINS2",130,0)
 .W !!,"Entering '1' at this prompt will allow the user to transfer the Insurance Policy"
"RTN","IVMLINS2",131,0)
 .W !,"that was received from HEC to the insurance module.  Entering '2' at this prompt"
"RTN","IVMLINS2",132,0)
 .W !,"will allow the user to delete the Insurance Policy that was received from HEC."
"RTN","IVMLINS2",133,0)
 .W !,"Entering '3' or '^' will abort this action."
"RTN","IVMLINS2",134,0)
 Q
"RTN","IVMLINS3")
0^3^B11827505^B8038647
"RTN","IVMLINS3",1,0)
IVMLINS3 ;ALB/KCL - IVM INSURANCE POLICY TRANSFER ; 01-FEB-94
"RTN","IVMLINS3",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**14,111**; 21-OCT-94
"RTN","IVMLINS3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMLINS3",4,0)
 ;
"RTN","IVMLINS3",5,0)
 ;
"RTN","IVMLINS3",6,0)
TRANSFER(IVMAUTO) ; user has chosen to transfer insurance information,
"RTN","IVMLINS3",7,0)
 ; received from HEC, to the MCCR insurance buffer.  this routine
"RTN","IVMLINS3",8,0)
 ; will call $$ADDSTF^IBCNBES(3,DFN,IVMIBDAT) to place HEC's insurance
"RTN","IVMLINS3",9,0)
 ; information in the MCCR insurance buffer where authorized insurance
"RTN","IVMLINS3",10,0)
 ; personnel will either upload or reject the data.
"RTN","IVMLINS3",11,0)
 ;      3 indicates that source of information is IVM
"RTN","IVMLINS3",12,0)
 ;      IVMIBDAT = data, to be filed in the MCCR buffer, in an array
"RTN","IVMLINS3",13,0)
 ;                 subscripted by field number of the data field in
"RTN","IVMLINS3",14,0)
 ;                 the INSURANCE BUFFER file (#355.33) 
"RTN","IVMLINS3",15,0)
 ; INPUT: IVMAUTO = 1 if auto-filing directly from upload
"RTN","IVMLINS3",16,0)
 ;                  0 if using list manager interface to file
"RTN","IVMLINS3",17,0)
 ;        THE FOLLOWING ARE ASSUMED TO BE DEFINED:
"RTN","IVMLINS3",18,0)
 ;          IVMIN1 (ST/ST1 segment string nodes of file 301.5)
"RTN","IVMLINS3",19,0)
 ;          IVMADD (5th "^" piece of IVMIN1 for ins co address data)
"RTN","IVMLINS3",20,0)
 ;
"RTN","IVMLINS3",21,0)
 N IVMIB,IVMIBDAT,IVMNOI,IVMPRTI
"RTN","IVMLINS3",22,0)
 ;
"RTN","IVMLINS3",23,0)
 I '$G(IVMAUTO) W !!,"Transferring HEC'S insurance data to the MCCR insurance buffer",!
"RTN","IVMLINS3",24,0)
 S IVMNOI=$S($P(IVMIN1,HLFS,17)="v":$P($$PT^IVMUFNC4(DFN),"^"),1:$P(IVMIN1,HLFS,16))
"RTN","IVMLINS3",25,0)
 S IVMPRTI=$S($P(IVMIN1,HLFS,17)="v":"01",1:"02")
"RTN","IVMLINS3",26,0)
 ;
"RTN","IVMLINS3",27,0)
 S IVMIBDAT(20.01)=$E($P(IVMIN1,HLFS,4),1,30) ;ins co name
"RTN","IVMLINS3",28,0)
 S IVMIBDAT(20.02)=$E($P(IVMIN1,HLFS,7),1,20) ;phone number
"RTN","IVMLINS3",29,0)
 S IVMIBDAT(21.01)=$E($P(IVMADD,"~",1),1,35) ;street add [line 1]
"RTN","IVMLINS3",30,0)
 S IVMIBDAT(21.02)=$E($P(IVMADD,"~",2),1,30) ;street add [line 2]
"RTN","IVMLINS3",31,0)
 S IVMIBDAT(21.04)=$E($P(IVMADD,"~",3),1,25) ;city
"RTN","IVMLINS3",32,0)
 S IVMIBDAT(21.05)=$$STATE1^IVMUFNC4($P(IVMADD,"~",4)) ;state
"RTN","IVMLINS3",33,0)
 S IVMIBDAT(21.06)=$E($P(IVMADD,"~",5),1,20) ;zip
"RTN","IVMLINS3",34,0)
 S IVMIBDAT(40.02)=$E($P(IVMIN1,HLFS,9),1,20) ;group name
"RTN","IVMLINS3",35,0)
 S IVMIBDAT(40.03)=$E($P(IVMIN1,HLFS,8),1,17) ;group number
"RTN","IVMLINS3",36,0)
 S IVMIBDAT(40.05)=$S($P(IVMIN1,HLFS,28)=1:1,1:0) ;precertification required
"RTN","IVMLINS3",37,0)
 S IVMIBDAT(40.09)=$P(IVMIN1,HLFS,15) ;type of plan
"RTN","IVMLINS3",38,0)
 S IVMIBDAT(60.01)=DFN ;patient name
"RTN","IVMLINS3",39,0)
 S IVMIBDAT(60.02)=$$FMDATE^HLFNC($P(IVMIN1,HLFS,12)) ;effective date
"RTN","IVMLINS3",40,0)
 S IVMIBDAT(60.03)=$$FMDATE^HLFNC($P(IVMIN1,HLFS,13)) ;expiration date
"RTN","IVMLINS3",41,0)
 S IVMIBDAT(60.04)=$E($P(IVMIN1,HLFS,36),1,20) ;subcriber id
"RTN","IVMLINS3",42,0)
 S IVMIBDAT(60.05)=$P(IVMIN1,HLFS,17) ;whose insurance
"RTN","IVMLINS3",43,0)
 S IVMIBDAT(60.06)=IVMPRTI ;pt relationship to insured
"RTN","IVMLINS3",44,0)
 S IVMIBDAT(60.07)=IVMNOI ;name of insured
"RTN","IVMLINS3",45,0)
 ;
"RTN","IVMLINS3",46,0)
 S IVMIB=$$ADDSTF^IBCNBES(3,DFN,.IVMIBDAT)
"RTN","IVMLINS3",47,0)
 I 'IVMIB D  Q
"RTN","IVMLINS3",48,0)
 .Q:$G(IVMAUTO)
"RTN","IVMLINS3",49,0)
 .W !,"The following error occurred when transferring data:"
"RTN","IVMLINS3",50,0)
 .W !,$P(IVMIB,"^",2)
"RTN","IVMLINS3",51,0)
 .W !,"Please contact your IRM staff for help"
"RTN","IVMLINS3",52,0)
 ;
"RTN","IVMLINS3",53,0)
 N DA,DIE,DR
"RTN","IVMLINS3",54,0)
 S DA=IVMJ,DA(1)=IVMI
"RTN","IVMLINS3",55,0)
 ;
"RTN","IVMLINS3",56,0)
 ; - delete segment name (.02 field of 301.501 multiple) from IVM PATIENT
"RTN","IVMLINS3",57,0)
 ;   file to remove from ASEG cross-reference
"RTN","IVMLINS3",58,0)
 S DIE="^IVM(301.5,"_DA(1)_",""IN"",",DR=".02////@" D ^DIE
"RTN","IVMLINS3",59,0)
 ;
"RTN","IVMLINS3",60,0)
 I $G(IVMAUTO) G IVMQ
"RTN","IVMLINS3",61,0)
 ;
"RTN","IVMLINS3",62,0)
 W "completed.",!
"RTN","IVMLINS3",63,0)
 ;
"RTN","IVMLINS3",64,0)
 S DIR(0)="E",DIR("A")="Press RETURN to continue" D ^DIR K DIR
"RTN","IVMLINS3",65,0)
 ;
"RTN","IVMLINS3",66,0)
REMOVE ; - remove entry from the List Manager display after transferring
"RTN","IVMLINS3",67,0)
 K ^TMP("IVMIUPL",$J,IVMNAME,IVMI,IVMJ)
"RTN","IVMLINS3",68,0)
 ;
"RTN","IVMLINS3",69,0)
 ; - action completed
"RTN","IVMLINS3",70,0)
 S IVMDONE=1
"RTN","IVMLINS3",71,0)
 ;
"RTN","IVMLINS3",72,0)
IVMQ K DIRUT,DTOUT,DUOUT,IVMACT,IVMDA,IVMFLAG,IVMREPTR,X,Y
"RTN","IVMLINS3",73,0)
 Q
"RTN","IVMLINS3",74,0)
 ;
"RTN","IVMLINS3",75,0)
AUTO ; Auto-upload all Z04 entries pending in file 301.501
"RTN","IVMLINS3",76,0)
 ; Called by the patch IVM*2*111 post-install
"RTN","IVMLINS3",77,0)
 N DFN,IVMI,IVMJ,IVMIN1,IVMADD,IVM0NOD,HLFS
"RTN","IVMLINS3",78,0)
 S HLFS=U
"RTN","IVMLINS3",79,0)
 ;
"RTN","IVMLINS3",80,0)
 S IVMI=0 F  S IVMI=$O(^IVM(301.5,"ASEG","IN1",IVMI)) Q:'IVMI  D
"RTN","IVMLINS3",81,0)
 . S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,"ASEG","IN1",IVMI,IVMJ)) Q:'IVMJ  D
"RTN","IVMLINS3",82,0)
 .. S IVM0NOD=$G(^IVM(301.5,IVMI,0)) I IVM0NOD']"" Q
"RTN","IVMLINS3",83,0)
 .. S DFN=+IVM0NOD
"RTN","IVMLINS3",84,0)
 .. I $G(^DPT(+DFN,0))']"" Q
"RTN","IVMLINS3",85,0)
 .. Q:$P($G(^IVM(301.5,IVMI,"IN",IVMJ,0)),U,2)'="IN1"
"RTN","IVMLINS3",86,0)
 .. S IVMIN1=$$GETIN1^IVMLINS1(IVMI,IVMJ)
"RTN","IVMLINS3",87,0)
 .. Q:IVMIN1=""
"RTN","IVMLINS3",88,0)
 .. S IVMADD=$P(IVMIN1,U,5)
"RTN","IVMLINS3",89,0)
 .. D TRANSFER(1)
"RTN","IVMLINS3",90,0)
 ;
"RTN","IVMLINS3",91,0)
 Q
"RTN","IVMLINS3",92,0)
 ;
"RTN","IVMPREC3")
0^4^B14818913^B24098186
"RTN","IVMPREC3",1,0)
IVMPREC3 ;ALB/KCL - PROCESS INCOMING (Z04 EVENT TYPE) HL7 MESSAGES ; 3/6/01 4:33pm
"RTN","IVMPREC3",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**3,17,34,111**;21-OCT-94
"RTN","IVMPREC3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPREC3",4,0)
 ;
"RTN","IVMPREC3",5,0)
 ; This routine will process batch ORU insurance(event type Z04) HL7
"RTN","IVMPREC3",6,0)
 ; messages received from the IVM center.  Format of batch:
"RTN","IVMPREC3",7,0)
 ;       BHS
"RTN","IVMPREC3",8,0)
 ;       {MSH
"RTN","IVMPREC3",9,0)
 ;        PID
"RTN","IVMPREC3",10,0)
 ;        IN1    could be a continuation of IN1
"RTN","IVMPREC3",11,0)
 ;        ZIV
"RTN","IVMPREC3",12,0)
 ;       }
"RTN","IVMPREC3",13,0)
 ;       BTS
"RTN","IVMPREC3",14,0)
 ;
"RTN","IVMPREC3",15,0)
EN ; - entry point to process insurance messages
"RTN","IVMPREC3",16,0)
 ;
"RTN","IVMPREC3",17,0)
 F IVMDA=1:0 S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)) Q:'IVMDA  S IVMSEG=$G(^(IVMDA,0)) I $E(IVMSEG,1,3)="MSH" D
"RTN","IVMPREC3",18,0)
 .K HLERR
"RTN","IVMPREC3",19,0)
 .;
"RTN","IVMPREC3",20,0)
 .; - message control id from MSH segment
"RTN","IVMPREC3",21,0)
 .S MSGID=$P(IVMSEG,HLFS,10)
"RTN","IVMPREC3",22,0)
 .;
"RTN","IVMPREC3",23,0)
 .; - get message segments from (#772) file
"RTN","IVMPREC3",24,0)
 .S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)),IVMSEG=$G(^(+IVMDA,0)) I $E(IVMSEG,1,3)'="PID" D  Q
"RTN","IVMPREC3",25,0)
 ..S HLERR="Missing PID segment" D ACK^IVMPREC
"RTN","IVMPREC3",26,0)
 .S DFN=$P($P(IVMSEG,HLFS,4),$E(HLECH),1)
"RTN","IVMPREC3",27,0)
 .I ('DFN!(DFN'=+DFN)!('$D(^DPT(+DFN,0)))) D  Q
"RTN","IVMPREC3",28,0)
 ..S HLERR="Invalid DFN" D ACK^IVMPREC
"RTN","IVMPREC3",29,0)
 .I $P(IVMSEG,HLFS,20)'=$P(^DPT(DFN,0),"^",9) D  Q
"RTN","IVMPREC3",30,0)
 ..S HLERR="Couldn't match IVM SSN with DHCP SSN" D ACK^IVMPREC
"RTN","IVMPREC3",31,0)
 .S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)),IVMSEG=$G(^(+IVMDA,0)) I $E(IVMSEG,1,3)'="IN1" D  Q
"RTN","IVMPREC3",32,0)
 ..S HLERR="Missing IN1 segment" D ACK^IVMPREC
"RTN","IVMPREC3",33,0)
 .S IVMSEG1=$P(IVMSEG,HLFS,2,999)
"RTN","IVMPREC3",34,0)
 .I $P(IVMSEG1,HLFS,4)']"" D  Q
"RTN","IVMPREC3",35,0)
 ..S HLERR="Missing insurance company name" D ACK^IVMPREC
"RTN","IVMPREC3",36,0)
 .I $P(IVMSEG1,HLFS,8)']"",($P(IVMSEG1,HLFS,9)']"") D  Q
"RTN","IVMPREC3",37,0)
 ..S HLERR=$S($P(IVMSEG1,HLFS,7)']"":"Missing group number",1:"Missing group name") D ACK^IVMPREC
"RTN","IVMPREC3",38,0)
 .I $P(IVMSEG1,HLFS,17)']"" D  Q
"RTN","IVMPREC3",39,0)
 ..S HLERR="Missing insured's relation to patient" D ACK^IVMPREC
"RTN","IVMPREC3",40,0)
 .I $P(IVMSEG1,HLFS,17)'="v",($P(IVMSEG1,HLFS,16)']"") D  Q
"RTN","IVMPREC3",41,0)
 ..S HLERR="Missing name of insured" D ACK^IVMPREC
"RTN","IVMPREC3",42,0)
 .S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)),IVMSEG=$G(^(+IVMDA,0)) I $E(IVMSEG,1,3)'="ZIV",$L(IVMSEG1)'=241 D  Q
"RTN","IVMPREC3",43,0)
 ..S HLERR="Missing ZIV segment" D ACK^IVMPREC
"RTN","IVMPREC3",44,0)
 .I $P(IVMSEG,HLFS,10)']"" D  Q
"RTN","IVMPREC3",45,0)
 ..S HLERR="Missing IVM internal entry number" D ACK^IVMPREC
"RTN","IVMPREC3",46,0)
 .I $L(IVMSEG1)=241 D  Q:$D(IVMERR)
"RTN","IVMPREC3",47,0)
 ..K IVMERR
"RTN","IVMPREC3",48,0)
 ..S IVMSEG3=IVMSEG
"RTN","IVMPREC3",49,0)
 ..S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)),IVMSEG=$G(^(+IVMDA,0))
"RTN","IVMPREC3",50,0)
 ..I $E(IVMSEG,1,3)'="ZIV" S HLERR="Missing ZIV segment",IVMERR="" D ACK^IVMPREC
"RTN","IVMPREC3",51,0)
 .;S IVMSEG2=$P(IVMSEG,"^",10)
"RTN","IVMPREC3",52,0)
 .;
"RTN","IVMPREC3",53,0)
 .; - check for date of death from IVM
"RTN","IVMPREC3",54,0)
 .I $P(IVMSEG,"^",13)]"" S $P(IVMSEG,"^",13)=$$FMDATE^HLFNC($P(IVMSEG,"^",13))
"RTN","IVMPREC3",55,0)
 .;
"RTN","IVMPREC3",56,0)
 .; - ivm ien/fm date of death
"RTN","IVMPREC3",57,0)
 .S IVMSEG2=$S($P(IVMSEG,"^",13)']"":$P(IVMSEG,"^",10),1:$P(IVMSEG,"^",10)_"/"_$P(IVMSEG,"^",13))
"RTN","IVMPREC3",58,0)
 .S IVMDOD=IVMSEG2
"RTN","IVMPREC3",59,0)
 .;
"RTN","IVMPREC3",60,0)
 .; - if no error encountered - store insurance fields in VistA
"RTN","IVMPREC3",61,0)
 .I '$D(HLERR) D
"RTN","IVMPREC3",62,0)
 ..N IVMRTN,IVMDA
"RTN","IVMPREC3",63,0)
 ..D STORE
"RTN","IVMPREC3",64,0)
 ;
"RTN","IVMPREC3",65,0)
 Q
"RTN","IVMPREC3",66,0)
 ;
"RTN","IVMPREC3",67,0)
 ;
"RTN","IVMPREC3",68,0)
STORE ; - store IN1 segment fields in (#301.5) file and in buffer file
"RTN","IVMPREC3",69,0)
 ;  (remove data from 301.5 'ASEG' xref on successful buffer file filing)
"RTN","IVMPREC3",70,0)
 ;
"RTN","IVMPREC3",71,0)
 N IVMI,IVMJ,IVMIN1,IVMADD
"RTN","IVMPREC3",72,0)
 S DA(1)=$O(^IVM(301.5,"B",DFN,0)),X=$$IEN^IVMUFNC4("IN1")
"RTN","IVMPREC3",73,0)
 I DA(1)']"" S HLERR="patient missing from IVM PATIENT file" D ACK^IVMPREC Q
"RTN","IVMPREC3",74,0)
 I X<0 S HLERR="IN1 segment not in HL7 SEGMENT NAME file" D ACK^IVMPREC Q
"RTN","IVMPREC3",75,0)
 I $G(^IVM(301.5,DA(1),"IN",0))']"" S ^(0)="^301.501PA^^"
"RTN","IVMPREC3",76,0)
 S DIC="^IVM(301.5,"_DA(1)_",""IN"",",DIC(0)="L"
"RTN","IVMPREC3",77,0)
 S DIC("DR")=".03///NOW;.07////^S X=IVMSEG2;10////^S X=IVMSEG1",DLAYGO=301.501
"RTN","IVMPREC3",78,0)
 S:$D(IVMSEG3) DIC("DR")=".03///NOW;.07////^S X=IVMSEG2;10////^S X=IVMSEG1;11////^S X=IVMSEG3"
"RTN","IVMPREC3",79,0)
 K DD,DO D FILE^DICN K DIC,DLAYGO
"RTN","IVMPREC3",80,0)
 Q:Y'>0
"RTN","IVMPREC3",81,0)
 S IVMI=DA(1),IVMJ=+Y
"RTN","IVMPREC3",82,0)
 ; Patch IVMB*2*111 automatically files the record into the buffer file
"RTN","IVMPREC3",83,0)
 ; and removes the notification bulletin to IVM and the segment from
"RTN","IVMPREC3",84,0)
 ; file 301.501
"RTN","IVMPREC3",85,0)
 K DA,X,Y
"RTN","IVMPREC3",86,0)
 S IVMIN1=$$GETIN1^IVMLINS1(IVMI,IVMJ),IVMADD=$P(IVMIN1,U,5)
"RTN","IVMPREC3",87,0)
 D TRANSFER^IVMLINS3(1),IVMQ^IVMLINS1
"RTN","IVMPREC3",88,0)
 Q
"RTN","IVMPREC3",89,0)
 ;
"RTN","IVMUPAR")
0^5^B1326072^B1191768
"RTN","IVMUPAR",1,0)
IVMUPAR ;ALB/CPM - IVM PARAMETER ENTER/EDIT ; 14-JUN-94
"RTN","IVMUPAR",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**111**; 21-OCT-94
"RTN","IVMUPAR",3,0)
 ;;Version 2.0 ; INCOME VERIFICATION MATCH ;**111**; 21-OCT-94
"RTN","IVMUPAR",4,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMUPAR",5,0)
 ;
"RTN","IVMUPAR",6,0)
EN ; Entry point for IVM Parameter Enter/Edit
"RTN","IVMUPAR",7,0)
 ;
"RTN","IVMUPAR",8,0)
 W !!,"IVM Parameter Enter/Edit",!
"RTN","IVMUPAR",9,0)
 ;
"RTN","IVMUPAR",10,0)
 I '$D(^IVM(301.9,1,0)) D
"RTN","IVMUPAR",11,0)
 .W !,"You do not have an entry in your parameter file!!"
"RTN","IVMUPAR",12,0)
 .W !,"Creating a new entry in the IVM SITE PARAMETER (#301.9) file... ",!
"RTN","IVMUPAR",13,0)
 .S DIC="^IVM(301.9,",DIC(0)="",X=$P($$SITE^VASITE,"^",3),DINUM=1
"RTN","IVMUPAR",14,0)
 .K DD,DO D FILE^DICN W " done."
"RTN","IVMUPAR",15,0)
 .K %,DA,DIC,DIE,X,Y
"RTN","IVMUPAR",16,0)
 ;
"RTN","IVMUPAR",17,0)
 ;
"RTN","IVMUPAR",18,0)
 S DIE="^IVM(301.9,",DA=1,DR=".03//0;.05//0" D ^DIE
"RTN","IVMUPAR",19,0)
 K DIE,DR,DA
"RTN","IVMUPAR",20,0)
 Q
"VER")
8.0^22.0
"BLD",6015,6)
^99
**END**
**END**
