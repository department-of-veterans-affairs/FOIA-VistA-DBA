Released VALM*1*8 SEQ #8
Extracted from mail message
**KIDS**:VALM*1.0*8^

**INSTALL NAME**
VALM*1.0*8
"BLD",954,0)
VALM*1.0*8^LIST MANAGER^0^3060703^y
"BLD",954,1,0)
^^2^2^3060703^^^^
"BLD",954,1,1,0)
See patch VALM*1*8 in the National Patch Module for complete
"BLD",954,1,2,0)
information on this patch.
"BLD",954,4,0)
^9.64PA^^
"BLD",954,6.3)
1
"BLD",954,"KRN",0)
^9.67PA^8989.52^19
"BLD",954,"KRN",.4,0)
.4
"BLD",954,"KRN",.401,0)
.401
"BLD",954,"KRN",.402,0)
.402
"BLD",954,"KRN",.403,0)
.403
"BLD",954,"KRN",.5,0)
.5
"BLD",954,"KRN",.84,0)
.84
"BLD",954,"KRN",3.6,0)
3.6
"BLD",954,"KRN",3.8,0)
3.8
"BLD",954,"KRN",9.2,0)
9.2
"BLD",954,"KRN",9.8,0)
9.8
"BLD",954,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",954,"KRN",9.8,"NM",1,0)
VALM1^^0^B26058095
"BLD",954,"KRN",9.8,"NM",2,0)
VALMD^^0^B16458760
"BLD",954,"KRN",9.8,"NM","B","VALM1",1)

"BLD",954,"KRN",9.8,"NM","B","VALMD",2)

"BLD",954,"KRN",19,0)
19
"BLD",954,"KRN",19.1,0)
19.1
"BLD",954,"KRN",101,0)
101
"BLD",954,"KRN",409.61,0)
409.61
"BLD",954,"KRN",771,0)
771
"BLD",954,"KRN",870,0)
870
"BLD",954,"KRN",8989.51,0)
8989.51
"BLD",954,"KRN",8989.52,0)
8989.52
"BLD",954,"KRN",8994,0)
8994
"BLD",954,"KRN","B",.4,.4)

"BLD",954,"KRN","B",.401,.401)

"BLD",954,"KRN","B",.402,.402)

"BLD",954,"KRN","B",.403,.403)

"BLD",954,"KRN","B",.5,.5)

"BLD",954,"KRN","B",.84,.84)

"BLD",954,"KRN","B",3.6,3.6)

"BLD",954,"KRN","B",3.8,3.8)

"BLD",954,"KRN","B",9.2,9.2)

"BLD",954,"KRN","B",9.8,9.8)

"BLD",954,"KRN","B",19,19)

"BLD",954,"KRN","B",19.1,19.1)

"BLD",954,"KRN","B",101,101)

"BLD",954,"KRN","B",409.61,409.61)

"BLD",954,"KRN","B",771,771)

"BLD",954,"KRN","B",870,870)

"BLD",954,"KRN","B",8989.51,8989.51)

"BLD",954,"KRN","B",8989.52,8989.52)

"BLD",954,"KRN","B",8994,8994)

"BLD",954,"QUES",0)
^9.62^^
"BLD",954,"REQB",0)
^9.611^1^1
"BLD",954,"REQB",1,0)
VALM*1.0*6^1
"BLD",954,"REQB","B","VALM*1.0*6",1)

"MBREQ")
0
"PKG",58,-1)
1^1
"PKG",58,0)
LIST MANAGER^VALM^^
"PKG",58,22,0)
^9.49I^1^1
"PKG",58,22,1,0)
1.0
"PKG",58,22,1,"PAH",1,0)
8^3060703
"PKG",58,22,1,"PAH",1,1,0)
^^2^2^3060703
"PKG",58,22,1,"PAH",1,1,1,0)
See patch VALM*1*8 in the National Patch Module for complete
"PKG",58,22,1,"PAH",1,1,2,0)
information on this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","VALM1")
0^1^B26058095^B25912107
"RTN","VALM1",1,0)
VALM1 ;ALB/MJK - Screen Manipulation Utilities ;06/27/2006
"RTN","VALM1",2,0)
 ;;1.0;List Manager;**5,6,8**;Aug 13, 1993;Build 1
"RTN","VALM1",3,0)
INSTR(STR,X,Y,LENGTH,ERASE) ; -- insert text
"RTN","VALM1",4,0)
 ;    STR := string to insert
"RTN","VALM1",5,0)
 ;      X := X coordinate
"RTN","VALM1",6,0)
 ;      Y := Y coordinate
"RTN","VALM1",7,0)
 ; LENGTH := clear # of characters
"RTN","VALM1",8,0)
 ;  ERASE := erase chars first
"RTN","VALM1",9,0)
 W IOSC
"RTN","VALM1",10,0)
 I $G(ERASE) S DY=Y-1,DX=X-1 X IOXY W $J("",LENGTH)
"RTN","VALM1",11,0)
 S DY=Y-1,DX=X-1 X IOXY W STR
"RTN","VALM1",12,0)
 W IORC
"RTN","VALM1",13,0)
 Q
"RTN","VALM1",14,0)
FLDUPD(STR,FLD,LINE,CON,COFF) ; -- update entry and field on screen
"RTN","VALM1",15,0)
 ;    STR := string to insert
"RTN","VALM1",16,0)
 ;    FLD := col name
"RTN","VALM1",17,0)
 ;  LINE := entry # in list
"RTN","VALM1",18,0)
 D INSTR(.STR,+$P(VALMDDF(FLD),U,2),LINE-VALMBG+VALM("TM"),$P(VALMDDF(FLD),U,3),1)
"RTN","VALM1",19,0)
 Q
"RTN","VALM1",20,0)
SETFLD(STR,VAR,FLD) ; -- set field in var
"RTN","VALM1",21,0)
 ; input: STR := string to insert
"RTN","VALM1",22,0)
 ;        VAR := destination string
"RTN","VALM1",23,0)
 ;        FLD := col name
"RTN","VALM1",24,0)
 Q $$SETSTR(STR,VAR,+$P(VALMDDF(FLD),U,2),+$P(VALMDDF(FLD),U,3))
"RTN","VALM1",25,0)
SETSTR(S,V,X,L) ; -- insert text(S) into variable(V)
"RTN","VALM1",26,0)
 ;    S := string to insert
"RTN","VALM1",27,0)
 ;    V := destination string
"RTN","VALM1",28,0)
 ;    X := insert @ col X
"RTN","VALM1",29,0)
 ;    L := clear # of chars (length)
"RTN","VALM1",30,0)
 Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
"RTN","VALM1",31,0)
FULL ; set full scrolling region
"RTN","VALM1",32,0)
 I '$D(IOSTBM) D TERM^VALM0
"RTN","VALM1",33,0)
 I IOSTBM]"" S IOTM=1,IOBM=IOSL W IOSC W @IOSTBM W IORC
"RTN","VALM1",34,0)
 S X=VALMWD X ^%ZOSF("RM")
"RTN","VALM1",35,0)
 Q
"RTN","VALM1",36,0)
CLEAR ; -- clear screen
"RTN","VALM1",37,0)
 D FULL,ERASE W @IOF
"RTN","VALM1",38,0)
 Q
"RTN","VALM1",39,0)
ERASE ;
"RTN","VALM1",40,0)
 W $G(VALMSGR),$G(IOSGR0)
"RTN","VALM1",41,0)
 Q
"RTN","VALM1",42,0)
FDATE(Y) ; -- return formatted date
"RTN","VALM1",43,0)
 ;   input:          Y := field name
"RTN","VALM1",44,0)
 ;  output: [returned] := formatted date only
"RTN","VALM1",45,0)
 Q $E(Y,4,5)_"/"_$E(Y,6,7)_"/"_$E(Y,2,3)
"RTN","VALM1",46,0)
FTIME(Y) ; -- return formatted date/time
"RTN","VALM1",47,0)
 ;   input:          Y := internal date/time
"RTN","VALM1",48,0)
 ;  output: [returned] := formatted date and time
"RTN","VALM1",49,0)
 D DD^%DT
"RTN","VALM1",50,0)
 Q Y
"RTN","VALM1",51,0)
FDTTM(Y) ; -- return formatted date/time
"RTN","VALM1",52,0)
 ;   input:          Y := internal date/time
"RTN","VALM1",53,0)
 ;  output: [returned] := formatted date and time
"RTN","VALM1",54,0)
 N VALMY
"RTN","VALM1",55,0)
 S VALMY=$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_$E(Y,2,3)
"RTN","VALM1",56,0)
 D DD^%DT
"RTN","VALM1",57,0)
 Q VALMY_$S($P(Y,"@",2)]"":"@"_$P(Y,"@",2),1:"")
"RTN","VALM1",58,0)
NOW() ; -- return now
"RTN","VALM1",59,0)
 D NOW^%DTC
"RTN","VALM1",60,0)
 Q $$FTIME(%)
"RTN","VALM1",61,0)
RANGE ; -- change date range
"RTN","VALM1",62,0)
 G RANGE^VALM11
"RTN","VALM1",63,0)
WAIT ; "Enter RETURN to continue"
"RTN","VALM1",64,0)
 N DIR,X,Y,DIRUT,DUOUT,DTOUT,DIROUT
"RTN","VALM1",65,0)
 W ! S DIR(0)="E" S DIR("A")="Enter RETURN to continue" D ^DIR W !
"RTN","VALM1",66,0)
 Q
"RTN","VALM1",67,0)
GOON() ; "Enter RETURN to continue or '^' to exit"
"RTN","VALM1",68,0)
 N DIR,X,Y,DIRUT,DUOUT,DTOUT,DIROUT
"RTN","VALM1",69,0)
 W ! S DIR(0)="E" D ^DIR W !
"RTN","VALM1",70,0)
 Q +Y
"RTN","VALM1",71,0)
PAUSE ;
"RTN","VALM1",72,0)
 W ! S DIR(0)="E" D ^DIR K DIR W !
"RTN","VALM1",73,0)
 Q
"RTN","VALM1",74,0)
PRT ; -- prt screen (PS)
"RTN","VALM1",75,0)
 N VALMESC
"RTN","VALM1",76,0)
 S VALMBCK="R"
"RTN","VALM1",77,0)
 D:VALMCC FULL
"RTN","VALM1",78,0)
 S %ZIS="Q" D ^%ZIS G PRTQ:POP
"RTN","VALM1",79,0)
 I $D(IO("Q")) D  G PRTQ
"RTN","VALM1",80,0)
 . S ZTRTN="PRTS^VALM1",ZTDESC="List Manager: Print Screen"
"RTN","VALM1",81,0)
 . D SAVE,^%ZTLOAD
"RTN","VALM1",82,0)
 I IO=IO(0) D CLEAR S X=0 X ^%ZOSF("RM")
"RTN","VALM1",83,0)
 ; fall through
"RTN","VALM1",84,0)
PRTS ;
"RTN","VALM1",85,0)
 N VALMCC,VALMCAP
"RTN","VALM1",86,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","VALM1",87,0)
 S VALMCC=0,VALMCAP=$$CAPTION^VALM,VALMPG1=1
"RTN","VALM1",88,0)
 U IO D HDR^VALM,TBAR^VALM,LIST^VALM,LBAR^VALM,FTR
"RTN","VALM1",89,0)
 ; fall through
"RTN","VALM1",90,0)
PRTQ ;
"RTN","VALM1",91,0)
 D CHKLONG
"RTN","VALM1",92,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","VALM1",93,0)
 D TERM^VALM0 S X=0 X ^%ZOSF("RM")
"RTN","VALM1",94,0)
 Q
"RTN","VALM1",95,0)
SAVE ; -- save to queue
"RTN","VALM1",96,0)
 F X="VALMIOXY","VALMEVL","VALMLFT","VALMPGE","VALMWD","VALMCNT","VALMBG","VALMDDF(","VALMHDR(","VALM(" S ZTSAVE(X)=""
"RTN","VALM1",97,0)
 F X="VALMAR",$S($E(VALMAR,$L(VALMAR))=")":$E(VALMAR,1,$L(VALMAR)-1)_",",1:VALMAR_"(") S ZTSAVE(X)=""
"RTN","VALM1",98,0)
 Q
"RTN","VALM1",99,0)
FTR ; -- footer to print
"RTN","VALM1",100,0)
 S VALMESC=""
"RTN","VALM1",101,0)
 I $E(IOST,1,2)="C-" S VALMESC='$$GOON
"RTN","VALM1",102,0)
 Q
"RTN","VALM1",103,0)
PRTL ; -- prt list (PL)
"RTN","VALM1",104,0)
 I $G(VALM("PRT"))]"",$O(^ORD(101,"B",VALM("PRT"),0)) S X=$O(^(0))_";ORD(101," D EN^XQOR G PRTQ
"RTN","VALM1",105,0)
 N VALMESC
"RTN","VALM1",106,0)
 S VALMBCK="R"
"RTN","VALM1",107,0)
 D:VALMCC FULL
"RTN","VALM1",108,0)
 S %ZIS="Q" D ^%ZIS G PRTQ:POP
"RTN","VALM1",109,0)
 I $D(IO("Q")) D  G PRTLQ
"RTN","VALM1",110,0)
 . S ZTRTN="PRTLS^VALM1",ZTDESC="List Manager: Print List"
"RTN","VALM1",111,0)
 . D SAVE,^%ZTLOAD
"RTN","VALM1",112,0)
 I IO=IO(0) D CLEAR S X=0 X ^%ZOSF("RM")
"RTN","VALM1",113,0)
 ; fall through
"RTN","VALM1",114,0)
PRTLS ;
"RTN","VALM1",115,0)
 N VALMPGE,VALMESC,VALMCC,VALMI,VALMLNS,VALMCAP,VALMWD
"RTN","VALM1",116,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","VALM1",117,0)
 S VALMWD=IOM,VALMLNS=VALM("LINES"),VALMPG1=1
"RTN","VALM1",118,0)
 S VALM("LINES")=IOSL-(VALM("TM")+3),VALMCC=0,VALMPGE=1,VALMCAP=$$CAPTION^VALM
"RTN","VALM1",119,0)
 U IO D HDR^VALM,TBAR^VALM
"RTN","VALM1",120,0)
 F VALMI=1:1:VALMCNT S X=$G(@VALMAR@($$GET^VALM4(VALMI),0)) W !,X I IOSL<($Y+6) D FTR G PRTLQ:VALMESC S VALMPGE=VALMPGE+1 D HDR^VALM,TBAR^VALM
"RTN","VALM1",121,0)
 D FTR
"RTN","VALM1",122,0)
 ; fall through
"RTN","VALM1",123,0)
PRTLQ ;
"RTN","VALM1",124,0)
 D CHKLONG
"RTN","VALM1",125,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","VALM1",126,0)
 D TERM^VALM0 S X=0 X ^%ZOSF("RM")
"RTN","VALM1",127,0)
 S:$D(VALMLNS) VALM("LINES")=VALMLNS
"RTN","VALM1",128,0)
 Q
"RTN","VALM1",129,0)
CHKLONG ;
"RTN","VALM1",130,0)
 Q:'$$TOOLONG
"RTN","VALM1",131,0)
 I '$D(ZTQUEUED) S VALMSG="Some printed item lines may have been truncated." Q:IO(0)=IO!$D(IO("Q"))
"RTN","VALM1",132,0)
 Q:$E(IOST,1,2)="C-"
"RTN","VALM1",133,0)
 I $Y+4>IOSL W @IOF
"RTN","VALM1",134,0)
 E  W !
"RTN","VALM1",135,0)
 W !,">>> Warning: Some list items lines may have been truncated."
"RTN","VALM1",136,0)
 W !,">>> This list requires ",VALM("RM")," characters/line."
"RTN","VALM1",137,0)
 W !,">>> This device supports ",IOM," characters/line."
"RTN","VALM1",138,0)
 Q
"RTN","VALM1",139,0)
TOOLONG() ; Is the line length too long for the device?
"RTN","VALM1",140,0)
 Q:'$D(VALM("RM")) 0
"RTN","VALM1",141,0)
 Q:'$D(IOM) 0
"RTN","VALM1",142,0)
 Q $S(VALM("RM")>IOM:1,1:0)
"RTN","VALM1",143,0)
UPPER(X) ; -- convert to uppercase
"RTN","VALM1",144,0)
 Q $$UP^XLFSTR(X)
"RTN","VALM1",145,0)
LOWER(X) ;
"RTN","VALM1",146,0)
 N Y,C,Z,I
"RTN","VALM1",147,0)
 S Y=$E(X)_$TR($E(X,2,999),"ABCDEFGHIJKLMNOPQRSTUVWXYZ@","abcdefghijklmnopqrstuvwxyz ")
"RTN","VALM1",148,0)
 F C=" ",",","/" S I=0 F  S I=$F(Y,C,I) Q:'I  S Y=$E(Y,1,I-1)_$TR($E(Y,I),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(Y,I+1,999)
"RTN","VALM1",149,0)
 Q Y
"RTN","VALMD")
0^2^B16458760^B16497952
"RTN","VALMD",1,0)
VALMD ;MJK/ALB - List Manager Demo Routine; APR 2, 1992 ;06/26/2006
"RTN","VALMD",2,0)
 ;;1.0;List Manager;**8**;Aug 13, 1993;Build 1
"RTN","VALMD",3,0)
 ;
"RTN","VALMD",4,0)
EN ; -- option entry point
"RTN","VALMD",5,0)
 K XQORS,VALMEVL
"RTN","VALMD",6,0)
 D EN^VALM("VALM DEMO APPLICATION")
"RTN","VALMD",7,0)
ENQ Q
"RTN","VALMD",8,0)
 ;
"RTN","VALMD",9,0)
 ;
"RTN","VALMD",10,0)
INIT ; -- build array
"RTN","VALMD",11,0)
 W ! S DIC("A")="Select Package: ",DIC="^DIC(9.4,",DIC(0)="AEMQ" D ^DIC K DIC
"RTN","VALMD",12,0)
 I Y<0 S VALMQUIT="" G INITQ
"RTN","VALMD",13,0)
PKG ; -- entry pt if package known
"RTN","VALMD",14,0)
 N VALMX,VALMCNTI,VALMPRO,VALMIFN,X,VALMPRE,Z
"RTN","VALMD",15,0)
 S VALMPKG=+Y
"RTN","VALMD",16,0)
 D CLEAN^VALM10
"RTN","VALMD",17,0)
 S (VALMCNTI,VALMCNT)=0,(VALMPRE,VALMPRO)=$P($G(^DIC(9.4,VALMPKG,0)),U,2)
"RTN","VALMD",18,0)
 F  S VALMPRO=$O(^ORD(101,"B",VALMPRO)) Q:$E(VALMPRO,1,$L(VALMPRE))'=VALMPRE  S VALMIFN=0 F  S VALMIFN=$O(^ORD(101,"B",VALMPRO,VALMIFN)) Q:'VALMIFN  I $D(^ORD(101,VALMIFN,0)) S VALMX=^(0) D
"RTN","VALMD",19,0)
 .S VALMCNTI=VALMCNTI+1 W:(VALMCNTI#10)=0 "."
"RTN","VALMD",20,0)
 .S X=$$SETFLD^VALM1(VALMCNTI,"","NUMBER")
"RTN","VALMD",21,0)
 .S X=$$SETFLD^VALM1($P(VALMX,U),X,"NAME")
"RTN","VALMD",22,0)
 .S X=$$SETFLD^VALM1($P(VALMX,U,2),X,"TEXT") K Z S $E(Z,$L(X)+1,240)=""
"RTN","VALMD",23,0)
 .S VALMCNT=VALMCNT+1
"RTN","VALMD",24,0)
 .D SET^VALM10(VALMCNT,$E(X_Z,1,240),VALMCNTI) ; set text
"RTN","VALMD",25,0)
 .S ^TMP("VALMZIDX",$J,VALMCNTI)=VALMCNT_U_VALMIFN
"RTN","VALMD",26,0)
 .D:'(VALMCNT#9) FLDCTRL^VALM10(VALMCNT)     ; defaults for all fields
"RTN","VALMD",27,0)
 .D FLDCTRL^VALM10(VALMCNT,"NUMBER")       ; default for 1 field
"RTN","VALMD",28,0)
 .D:'(VALMCNT#5) FLDCTRL^VALM10(VALMCNT,"NAME",IOUON,IOUOFF) ; adhoc
"RTN","VALMD",29,0)
 D NUL:'VALMCNT
"RTN","VALMD",30,0)
INITQ Q
"RTN","VALMD",31,0)
 ;
"RTN","VALMD",32,0)
HDR ; -- demo header
"RTN","VALMD",33,0)
 N VALMX
"RTN","VALMD",34,0)
 S VALMX=$G(^DIC(9.4,VALMPKG,0)),X="    Package: "_$P(VALMX,U)
"RTN","VALMD",35,0)
 S VALMHDR(1)=$$SETSTR^VALM1("Prefix: "_$P(VALMX,U,2),X,63,15)
"RTN","VALMD",36,0)
 S VALMHDR(2)="Description: "_$E($P(VALMX,U,3),1,65)
"RTN","VALMD",37,0)
 Q
"RTN","VALMD",38,0)
 ;
"RTN","VALMD",39,0)
NUL ; -- set nul message
"RTN","VALMD",40,0)
 I 'VALMCNT D
"RTN","VALMD",41,0)
 .F X=" ","    No protocols to list." S VALMCNT=VALMCNT+1 D SET^VALM10(VALMCNT,X)
"RTN","VALMD",42,0)
 .S ^TMP("VALMZIDX",$J,1)=1,^(2)=2
"RTN","VALMD",43,0)
 Q
"RTN","VALMD",44,0)
 ;
"RTN","VALMD",45,0)
FNL ; -- clean up
"RTN","VALMD",46,0)
 K DIE,DIC,DR,DA,DE,DQ,VALMY,VALMPKG,^TMP("VALMZIDX",$J)
"RTN","VALMD",47,0)
 D CLEAN^VALM10
"RTN","VALMD",48,0)
 Q
"RTN","VALMD",49,0)
 ;
"RTN","VALMD",50,0)
EXP ; -- expand action
"RTN","VALMD",51,0)
 D FULL^VALM1
"RTN","VALMD",52,0)
 N VALMI,VALMAT,VALMY
"RTN","VALMD",53,0)
 D EN^VALM2(XQORNOD(0),"O") S VALMI=0
"RTN","VALMD",54,0)
 F  S VALMI=$O(VALMY(VALMI)) Q:'VALMI  D
"RTN","VALMD",55,0)
 .S VALMAT=$G(^TMP("VALMZIDX",$J,VALMI))
"RTN","VALMD",56,0)
 .W !!,@VALMAR@(+VALMAT,0),!
"RTN","VALMD",57,0)
 .S DA=+$P(VALMAT,U,2),DIC="^ORD(101,",DR="0" D EN^DIQ,PAUSE^VALM1
"RTN","VALMD",58,0)
 S VALMBCK="R",VALMSG="'Expand' was last action picked."
"RTN","VALMD",59,0)
 Q
"RTN","VALMD",60,0)
 ;
"RTN","VALMD",61,0)
EDIT ; -- edit action
"RTN","VALMD",62,0)
 N VALMA,VALMP,VALMI,VALMAT,VALMY
"RTN","VALMD",63,0)
 D MSG^VALM10("'Edit' action...")
"RTN","VALMD",64,0)
 D EN^VALM2(XQORNOD(0),"O") S VALMI=0 ; all the user to "O"ptionally answer
"RTN","VALMD",65,0)
 F  S VALMI=$O(VALMY(VALMI)) Q:'VALMI  D
"RTN","VALMD",66,0)
 .D SELECT^VALM10(VALMI,1) ; -- 'select' line
"RTN","VALMD",67,0)
 .S VALMAT=$G(^TMP("VALMZIDX",$J,VALMI))
"RTN","VALMD",68,0)
 .W !!,@VALMAR@(+VALMAT,0)
"RTN","VALMD",69,0)
 .S DA=+$P(VALMAT,U,2),VALMP=$G(^ORD(101,DA,0)),DIE=101,DR="1" D ^DIE K DIE,DR
"RTN","VALMD",70,0)
 .S VALMA=$G(^ORD(101,DA,0))
"RTN","VALMD",71,0)
 .I $P(VALMP,U,2)'=$P(VALMA,U,2) D UPD($P(VALMA,U,2),"TEXT",.VALMAT)
"RTN","VALMD",72,0)
 .D SELECT^VALM10(VALMI,0) ; -- 'de-select' line
"RTN","VALMD",73,0)
 D MSG^VALM10("")
"RTN","VALMD",74,0)
 S VALMBCK=$S(VALMCC:"",1:"R")
"RTN","VALMD",75,0)
 Q
"RTN","VALMD",76,0)
 ;
"RTN","VALMD",77,0)
DESC ; -- display description action
"RTN","VALMD",78,0)
 N VALMI,VALMY,VALMAT
"RTN","VALMD",79,0)
 D EN^VALM2(XQORNOD(0),"OS") S VALMI=0 ; select only a "S"ingle protocol
"RTN","VALMD",80,0)
 F  S VALMI=$O(VALMY(VALMI)) Q:'VALMI  D
"RTN","VALMD",81,0)
 .S VALMAT=+$P($G(^TMP("VALMZIDX",$J,VALMI)),U,2)
"RTN","VALMD",82,0)
 .I '$D(^ORD(101,VALMAT,1)) W !!,"No Description entered." D PAUSE^VALM1 Q
"RTN","VALMD",83,0)
 .D WP^VALM("^ORD(101,"_VALMAT_",1)",$P($G(^ORD(101,VALMAT,0)),U))
"RTN","VALMD",84,0)
 S VALMBCK="R"
"RTN","VALMD",85,0)
 Q
"RTN","VALMD",86,0)
 ;
"RTN","VALMD",87,0)
UPD(TEXT,FLD,VALMAT) ; -- update data for screen
"RTN","VALMD",88,0)
 D:VALMCC FLDCTRL^VALM10(+VALMAT,.FLD,.IOINHI,.IOINORM,1)
"RTN","VALMD",89,0)
 D FLDTEXT^VALM10(+VALMAT,.FLD,.TEXT)
"RTN","VALMD",90,0)
 Q
"RTN","VALMD",91,0)
 ;
"RTN","VALMD",92,0)
CHG ; -- change package action
"RTN","VALMD",93,0)
 K X I $D(XQORNOD(0)) S X=$P($P(XQORNOD(0),U,4),"=",2)
"RTN","VALMD",94,0)
 I X="" R !!,"Select Package: ",X:DTIME
"RTN","VALMD",95,0)
 S DIC="^DIC(9.4,",DIC(0)="EMQ" D ^DIC K DIC G CHG:X["?"
"RTN","VALMD",96,0)
 I Y<0 D  G CHGQ
"RTN","VALMD",97,0)
 .W !!,*7,"Package has not been changed."
"RTN","VALMD",98,0)
 .W ! S DIR(0)="E" D ^DIR K DIR
"RTN","VALMD",99,0)
 .S VALMBCK=""
"RTN","VALMD",100,0)
 D PKG,HDR S VALMBCK="R" S VALMBG=1
"RTN","VALMD",101,0)
CHGQ Q
"VER")
8.0^22.0
"BLD",954,6)
^8
**END**
**END**
