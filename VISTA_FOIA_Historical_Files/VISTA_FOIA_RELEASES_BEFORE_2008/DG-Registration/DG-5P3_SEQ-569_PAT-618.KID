Released DG*5.3*618 SEQ #569
Extracted from mail message
**KIDS**:DG*5.3*618^

**INSTALL NAME**
DG*5.3*618
"BLD",5724,0)
DG*5.3*618^REGISTRATION^0^3050427^y
"BLD",5724,1,0)
^^2^2^3050321^^^^
"BLD",5724,1,1,0)
Cleans up dangling PATIENT RELATIONS file # 408.12 that have a bad
"BLD",5724,1,2,0)
pointer to a bad patient or person record (field #.01 or #.03 or both)
"BLD",5724,4,0)
^9.64PA^^
"BLD",5724,"ABPKG")
n
"BLD",5724,"INID")
n^n^n
"BLD",5724,"INIT")
POST^DG53618
"BLD",5724,"KRN",0)
^9.67PA^8989.52^19
"BLD",5724,"KRN",.4,0)
.4
"BLD",5724,"KRN",.4,"NM",0)
^9.68A^^
"BLD",5724,"KRN",.401,0)
.401
"BLD",5724,"KRN",.402,0)
.402
"BLD",5724,"KRN",.403,0)
.403
"BLD",5724,"KRN",.5,0)
.5
"BLD",5724,"KRN",.84,0)
.84
"BLD",5724,"KRN",3.6,0)
3.6
"BLD",5724,"KRN",3.8,0)
3.8
"BLD",5724,"KRN",9.2,0)
9.2
"BLD",5724,"KRN",9.8,0)
9.8
"BLD",5724,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",5724,"KRN",9.8,"NM",1,0)
DG53618^^0^B85509254
"BLD",5724,"KRN",9.8,"NM",2,0)
DG53618M^^0^B20082802
"BLD",5724,"KRN",9.8,"NM",3,0)
DGMTDD^^0^B16846869
"BLD",5724,"KRN",9.8,"NM","B","DG53618",1)
 
"BLD",5724,"KRN",9.8,"NM","B","DG53618M",2)
 
"BLD",5724,"KRN",9.8,"NM","B","DGMTDD",3)
 
"BLD",5724,"KRN",19,0)
19
"BLD",5724,"KRN",19.1,0)
19.1
"BLD",5724,"KRN",101,0)
101
"BLD",5724,"KRN",409.61,0)
409.61
"BLD",5724,"KRN",771,0)
771
"BLD",5724,"KRN",870,0)
870
"BLD",5724,"KRN",8989.51,0)
8989.51
"BLD",5724,"KRN",8989.52,0)
8989.52
"BLD",5724,"KRN",8994,0)
8994
"BLD",5724,"KRN","B",.4,.4)
 
"BLD",5724,"KRN","B",.401,.401)
 
"BLD",5724,"KRN","B",.402,.402)
 
"BLD",5724,"KRN","B",.403,.403)
 
"BLD",5724,"KRN","B",.5,.5)
 
"BLD",5724,"KRN","B",.84,.84)
 
"BLD",5724,"KRN","B",3.6,3.6)
 
"BLD",5724,"KRN","B",3.8,3.8)
 
"BLD",5724,"KRN","B",9.2,9.2)
 
"BLD",5724,"KRN","B",9.8,9.8)
 
"BLD",5724,"KRN","B",19,19)
 
"BLD",5724,"KRN","B",19.1,19.1)
 
"BLD",5724,"KRN","B",101,101)
 
"BLD",5724,"KRN","B",409.61,409.61)
 
"BLD",5724,"KRN","B",771,771)
 
"BLD",5724,"KRN","B",870,870)
 
"BLD",5724,"KRN","B",8989.51,8989.51)
 
"BLD",5724,"KRN","B",8989.52,8989.52)
 
"BLD",5724,"KRN","B",8994,8994)
 
"BLD",5724,"QUES",0)
^9.62^^0
"BLD",5724,"REQB",0)
^9.611^1^1
"BLD",5724,"REQB",1,0)
DG*5.3*456^2
"BLD",5724,"REQB","B","DG*5.3*456",1)
 
"INIT")
POST^DG53618
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
618^3050427^123456813
"PKG",5,22,1,"PAH",1,1,0)
^^2^2^3050427
"PKG",5,22,1,"PAH",1,1,1,0)
Cleans up dangling PATIENT RELATIONS file # 408.12 that have a bad
"PKG",5,22,1,"PAH",1,1,2,0)
pointer to a bad patient or person record (field #.01 or #.03 or both)
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","DG53618")
0^1^B85509254
"RTN","DG53618",1,0)
DG53618 ;ALB/GN/PHH,EG - DG*5.3*618 CLEANUP DANGLING RECS; 04/27/2005
"RTN","DG53618",2,0)
 ;;5.3;Registration;**618**;Aug 13, 1993
"RTN","DG53618",3,0)
 ;
"RTN","DG53618",4,0)
 ; Cleans up dangling file Income Relation file #408.12 records where
"RTN","DG53618",5,0)
 ; it points to bad or non-existent Income Person file #408.13 and
"RTN","DG53618",6,0)
 ; Patient file #2 records.
"RTN","DG53618",7,0)
 ;
"RTN","DG53618",8,0)
 ; 1. If it points to file 2, that doesn't exist or has a bad 0 node,
"RTN","DG53618",9,0)
 ;     delete the 408.12 rec that points to the bad 2 rec, then
"RTN","DG53618",10,0)
 ;     delete the 408.21 that points to 408.12 rec, then
"RTN","DG53618",11,0)
 ;     delete the 408.22 rec that points to the 408.21.
"RTN","DG53618",12,0)
 ; 2. Same logic will be used if points to bad 408.13 recs
"RTN","DG53618",13,0)
 ;
"RTN","DG53618",14,0)
 Q
"RTN","DG53618",15,0)
 ;
"RTN","DG53618",16,0)
POST ;post install entry tag call.  processes entire file in live mode
"RTN","DG53618",17,0)
 N ZTDTH,ZTDESC,ZTIO,ZTRTN,ZTSK,ZTQUEUED,ZTSAVE,CHKPNT
"RTN","DG53618",18,0)
 D MES^XPDUTL("")
"RTN","DG53618",19,0)
 D MES^XPDUTL("=====================================================")
"RTN","DG53618",20,0)
 D MES^XPDUTL("Queuing Bad Patient Relation Pointers cleanup process.....")
"RTN","DG53618",21,0)
 I $$CHKSTAT(1) D  Q
"RTN","DG53618",22,0)
 . D BMES^XPDUTL("ABORTING  Post Install Cleanup Queuing")
"RTN","DG53618",23,0)
 . D MES^XPDUTL("=====================================================")
"RTN","DG53618",24,0)
 . Q
"RTN","DG53618",25,0)
 S ZTRTN="QUE^DG53618"
"RTN","DG53618",26,0)
 S ZTDESC="Cleanup Bad Pointers In Patient Relation File"
"RTN","DG53618",27,0)
 S ZTIO="",ZTDTH=$H
"RTN","DG53618",28,0)
 S CHKPNT=0,ZTSAVE("CHKPNT")=""
"RTN","DG53618",29,0)
 D ^%ZTLOAD
"RTN","DG53618",30,0)
 D MES^XPDUTL("This request queued as Task # "_ZTSK)
"RTN","DG53618",31,0)
 D MES^XPDUTL("=====================================================")
"RTN","DG53618",32,0)
 D MES^XPDUTL("")
"RTN","DG53618",33,0)
 Q
"RTN","DG53618",34,0)
 ;
"RTN","DG53618",35,0)
TEST ; Entry point for taskman (testing mode)
"RTN","DG53618",36,0)
 N TESTING,ZTQUEUED
"RTN","DG53618",37,0)
 S TESTING=1,ZTQUEUED=0
"RTN","DG53618",38,0)
 ;if running again, check to see if complete
"RTN","DG53618",39,0)
 ;if so, ask user to rerun
"RTN","DG53618",40,0)
 I $$CHKSTAT(0) D  Q
"RTN","DG53618",41,0)
 . U 0 W !,"Task is already running or user opted to not restart"
"RTN","DG53618",42,0)
 . Q
"RTN","DG53618",43,0)
 D QUE
"RTN","DG53618",44,0)
 Q
"RTN","DG53618",45,0)
QUE ; Entry point for taskman (live mode)
"RTN","DG53618",46,0)
 N NAMSPC S NAMSPC=$$NAMSPC^DG53618
"RTN","DG53618",47,0)
 N QQ,ZTSTOP,XREC,MTIEN,DIK,DA,DGTOT,DGDEL12,BEGTIME,PURGDT,DGDEL21
"RTN","DG53618",48,0)
 N TMP,ICDT,COUNT,TYPE,TYPNAM,DGDEL22,REC12,REC21,REC22
"RTN","DG53618",49,0)
 N DGBAD03,DGBADPAT,DGBADPER
"RTN","DG53618",50,0)
 N R12,PT,DFN,X,U
"RTN","DG53618",51,0)
 S U="^"
"RTN","DG53618",52,0)
 I '$D(TESTING) N TESTING S TESTING=0
"RTN","DG53618",53,0)
 I '$D(ZTQUEUED) N ZTQUEUED S ZTQUEUED=1
"RTN","DG53618",54,0)
 ;
"RTN","DG53618",55,0)
 ;get last run info if exists
"RTN","DG53618",56,0)
 S XREC=$G(^XTMP(NAMSPC,0,0))
"RTN","DG53618",57,0)
 S R12=+$P(XREC,U,1)              ;last REC processed
"RTN","DG53618",58,0)
 S DGTOT=+$P(XREC,U,2)            ;total records processed
"RTN","DG53618",59,0)
 S DGDEL12=+$P(XREC,U,3)          ;total bad 408.12 records purged
"RTN","DG53618",60,0)
 S DGDEL21=+$P(XREC,U,7)          ;total bad 408.21 records found
"RTN","DG53618",61,0)
 S DGDEL22=+$P(XREC,U,8)          ;total bad 408.22 records found
"RTN","DG53618",62,0)
 S DGBADPAT=+$P(XREC,U,9)         ;total bad pointer to file #2
"RTN","DG53618",63,0)
 S DGBADPER=+$P(XREC,U,10)        ;total bad pointer to file #408.13
"RTN","DG53618",64,0)
 S DGBAD03=+$P(XREC,U,11)         ;null or bad field # 03
"RTN","DG53618",65,0)
 ;
"RTN","DG53618",66,0)
 ;setup XTMP according to stds.
"RTN","DG53618",67,0)
 D SETUPX(90)
"RTN","DG53618",68,0)
 ;
"RTN","DG53618",69,0)
 ;init status field and start date & time if null
"RTN","DG53618",70,0)
 S $P(^XTMP(NAMSPC,0,0),U,5,6)="RUNNING^"
"RTN","DG53618",71,0)
 S:$P(^XTMP(NAMSPC,0,0),U,4)="" $P(^XTMP(NAMSPC,0,0),U,4)=$$NOW^XLFDT
"RTN","DG53618",72,0)
 ;
"RTN","DG53618",73,0)
 ;drive through 408.12 looking for bad variable pointers
"RTN","DG53618",74,0)
 S ZTSTOP=0
"RTN","DG53618",75,0)
 F QQ=1:1 S R12=$O(^DGPR(408.12,R12)) Q:(R12'>0)!ZTSTOP  D
"RTN","DG53618",76,0)
 . ;check for stop request after every 20 processed DFN recs
"RTN","DG53618",77,0)
 . I QQ#20=0 D
"RTN","DG53618",78,0)
 . . S:$$S^%ZTLOAD ZTSTOP=1
"RTN","DG53618",79,0)
 . . I $D(^XTMP(NAMSPC,0,"STOP")) S ZTSTOP=1 K ^XTMP(NAMSPC,0,"STOP")
"RTN","DG53618",80,0)
 . . Q
"RTN","DG53618",81,0)
 . I ZTSTOP Q
"RTN","DG53618",82,0)
 . S DGTOT=DGTOT+1
"RTN","DG53618",83,0)
 . S $P(^XTMP(NAMSPC,0,0),U,1,2)=R12_U_DGTOT
"RTN","DG53618",84,0)
 . ;
"RTN","DG53618",85,0)
 . S DFN=$$GET1^DIQ(408.12,R12_",",.01,"I")
"RTN","DG53618",86,0)
 . S PT=$$GET1^DIQ(408.12,R12_",",.03,"I")
"RTN","DG53618",87,0)
 . ;
"RTN","DG53618",88,0)
 . ;good patient (#.01),good variable pointer (#.03)...quit
"RTN","DG53618",89,0)
 . I $$GOODPAT(DFN)="Y",$$GOODPTR(PT)="Y" Q
"RTN","DG53618",90,0)
 . ;
"RTN","DG53618",91,0)
 . ; cleanup Income Relation file #408.12 & the bad pointed to file
"RTN","DG53618",92,0)
 . ; either Patient file #2 or Income Person file #408.13
"RTN","DG53618",93,0)
 . I 'ZTQUEUED W !!,"File #408.12, ien ",R12," has a bad pointer to "
"RTN","DG53618",94,0)
 . ;if patient (#.01) is null
"RTN","DG53618",95,0)
 . I DFN="" D
"RTN","DG53618",96,0)
 . . S X="null patient (field #.01)"
"RTN","DG53618",97,0)
 . . I 'ZTQUEUED W X
"RTN","DG53618",98,0)
 . . S ^XTMP(NAMSPC,"BADPR",R12,"ERR",1)=X
"RTN","DG53618",99,0)
 . . S DGBADPAT=DGBADPAT+1
"RTN","DG53618",100,0)
 . . D ACHK03(R12,PT,ZTQUEUED,TESTING,.DGBADPAT,.DGBADPER,.DGBAD03)
"RTN","DG53618",101,0)
 . . Q
"RTN","DG53618",102,0)
 . ;patient #.01 not found
"RTN","DG53618",103,0)
 . I DFN'="",$$GOODPAT(DFN)="N" D
"RTN","DG53618",104,0)
 . . S X="patient "_DFN_" (field #.01)"
"RTN","DG53618",105,0)
 . . I 'ZTQUEUED W X
"RTN","DG53618",106,0)
 . . S ^XTMP(NAMSPC,"BADPR",R12,"ERR",1)=X
"RTN","DG53618",107,0)
 . . S DGBADPAT=DGBADPAT+1
"RTN","DG53618",108,0)
 . . ;I 'TESTING S DA=DFN,DIK="^DPT(" D ^DIK
"RTN","DG53618",109,0)
 . . D ACHK03(R12,PT,ZTQUEUED,TESTING,.DGBADPAT,.DGBADPER,.DGBAD03)
"RTN","DG53618",110,0)
 . . Q
"RTN","DG53618",111,0)
 . ;patient (#.03) is also a patient, is bad, but patient (# .01) is ok
"RTN","DG53618",112,0)
 . I $$GOODPAT(DFN)="Y",PT["DPT",$$GOODPTR(PT)="N" D
"RTN","DG53618",113,0)
 . . S X="patient "_$P(PT,";",1)_" (field #.03)"
"RTN","DG53618",114,0)
 . . I 'ZTQUEUED W X
"RTN","DG53618",115,0)
 . . S ^XTMP(NAMSPC,"BADPR",R12,"ERR",1)=X
"RTN","DG53618",116,0)
 . . S DGBADPAT=DGBADPAT+1
"RTN","DG53618",117,0)
 . . ;I 'TESTING S DA=$P(PT,";",1),DIK="^DPT(" D ^DIK
"RTN","DG53618",118,0)
 . . Q
"RTN","DG53618",119,0)
 . ;patient (#.01) is good, but income person is bad
"RTN","DG53618",120,0)
 . I $$GOODPAT(DFN)="Y",PT["DGPR",$$GOODPTR(PT)="N" D
"RTN","DG53618",121,0)
 . . S X="income person "_$P(PT,";",1)_" (field #.03)"
"RTN","DG53618",122,0)
 . . I 'ZTQUEUED W X
"RTN","DG53618",123,0)
 . . S ^XTMP(NAMSPC,"BADPR",R12,"ERR",1)=X
"RTN","DG53618",124,0)
 . . S DGBADPER=DGBADPER+1
"RTN","DG53618",125,0)
 . . I 'TESTING S DA=$P(PT,";",1),DIK="^DGPR(408.13," D ^DIK
"RTN","DG53618",126,0)
 . . Q
"RTN","DG53618",127,0)
 . ;patient #.01 is good, but #.03 is null
"RTN","DG53618",128,0)
 . I $$GOODPAT(DFN)="Y",PT="" D
"RTN","DG53618",129,0)
 . . S X="null field #.03"
"RTN","DG53618",130,0)
 . . I 'ZTQUEUED W X
"RTN","DG53618",131,0)
 . . S ^XTMP(NAMSPC,"BADPR",R12,"ERR",1)=X
"RTN","DG53618",132,0)
 . . S DGBAD03=DGBAD03+1
"RTN","DG53618",133,0)
 . . Q
"RTN","DG53618",134,0)
 . ;patient #.01 is good, but #.03 is not null
"RTN","DG53618",135,0)
 . ;and is bad
"RTN","DG53618",136,0)
 . I $$GOODPAT(DFN)="Y",PT'["DGPR",PT'["DPT",PT'="",$$GOODPTR(PT)="N" D
"RTN","DG53618",137,0)
 . . S X="variable pointer "_$P(PT,";",1)_" (field #.03)"
"RTN","DG53618",138,0)
 . . I 'ZTQUEUED W X
"RTN","DG53618",139,0)
 . . S ^XTMP(NAMSPC,"BADPR",R12,"ERR",1)=X
"RTN","DG53618",140,0)
 . . S DGBAD03=DGBAD03+1
"RTN","DG53618",141,0)
 . . Q
"RTN","DG53618",142,0)
 . D DEL40812(R12,.DGDEL12,.DGDEL21,.DGDEL22,ZTQUEUED,TESTING,NAMSPC)
"RTN","DG53618",143,0)
 . Q
"RTN","DG53618",144,0)
 ;
"RTN","DG53618",145,0)
 ;update last processed info
"RTN","DG53618",146,0)
 S X=$G(^XTMP(NAMSPC,0,0))
"RTN","DG53618",147,0)
 S $P(X,U,3)=DGDEL12,$P(X,U,7)=DGDEL21
"RTN","DG53618",148,0)
 S $P(X,U,8)=DGDEL22,$P(X,U,9)=DGBADPAT
"RTN","DG53618",149,0)
 S $P(X,U,10)=DGBADPER,$P(X,U,11)=DGBAD03
"RTN","DG53618",150,0)
 S ^XTMP(NAMSPC,0,0)=X
"RTN","DG53618",151,0)
 ;set status and mail stats
"RTN","DG53618",152,0)
 I ZTSTOP S $P(^XTMP(NAMSPC,0,0),U,5,6)="STOPPED"_U_$$NOW^XLFDT
"RTN","DG53618",153,0)
 E  S $P(^XTMP(NAMSPC,0,0),U,5,6)="COMPLETED"_U_$$NOW^XLFDT
"RTN","DG53618",154,0)
 S X=$$MAIL^DG53618M(TESTING)
"RTN","DG53618",155,0)
 K TESTING
"RTN","DG53618",156,0)
 L -^XTMP($$NAMSPC)
"RTN","DG53618",157,0)
 Q
"RTN","DG53618",158,0)
 ;
"RTN","DG53618",159,0)
GOODPAT(DFN) ;determine if patient is there
"RTN","DG53618",160,0)
 N X,U
"RTN","DG53618",161,0)
 S U="^"
"RTN","DG53618",162,0)
 I DFN="" Q "N"
"RTN","DG53618",163,0)
 I '$D(^DPT(DFN,0)) Q "N"
"RTN","DG53618",164,0)
 S X=$G(^DPT(DFN,0)) I X="" Q "N"
"RTN","DG53618",165,0)
 I X?13"^".E Q "N"
"RTN","DG53618",166,0)
 Q "Y"
"RTN","DG53618",167,0)
 ;
"RTN","DG53618",168,0)
GOODPTR(PT) ;determine if reference is there
"RTN","DG53618",169,0)
 N X,U,SUB,GL,REF
"RTN","DG53618",170,0)
 S U="^"
"RTN","DG53618",171,0)
 I PT'["DPT",PT'["DGPR" Q "N"
"RTN","DG53618",172,0)
 S SUB=$P(PT,";",1),GL=$P(PT,";",2)
"RTN","DG53618",173,0)
 I SUB="" Q "N"
"RTN","DG53618",174,0)
 I SUB'=+SUB S SUB=$C(34)_SUB_$C(34)
"RTN","DG53618",175,0)
 I GL'="DPT(",GL'="DGPR(408.13," Q "N"
"RTN","DG53618",176,0)
 S REF="^"_GL_SUB_",0)"
"RTN","DG53618",177,0)
 S X=$G(@REF)
"RTN","DG53618",178,0)
 I '$D(@REF) Q "N"
"RTN","DG53618",179,0)
 I $G(GL)["DPT",X?13"^".E Q "N"
"RTN","DG53618",180,0)
 I $G(GL)["DGPR",$P(X,U,1)="" Q "N"
"RTN","DG53618",181,0)
 Q "Y"
"RTN","DG53618",182,0)
 ;
"RTN","DG53618",183,0)
 ;at this point, you have a bad .01 field, but want
"RTN","DG53618",184,0)
 ;to check .03 also
"RTN","DG53618",185,0)
ACHK03(R12,PT,ZTQUEUED,TESTING,DGBADPAT,DGBADPER,DGBAD03) ;
"RTN","DG53618",186,0)
 ;update counters to include bad variable pointers
"RTN","DG53618",187,0)
 ;bad pointer to patient
"RTN","DG53618",188,0)
 I PT["DPT",$$GOODPTR(PT)="N" D  Q
"RTN","DG53618",189,0)
 . S DGBADPAT=DGBADPAT+1
"RTN","DG53618",190,0)
 . S X="and bad patient pointer "_$P(PT,";",1)_" (field #.03)"
"RTN","DG53618",191,0)
 . I 'ZTQUEUED W !,"     ",X
"RTN","DG53618",192,0)
 . S ^XTMP(NAMSPC,"BADPR",R12,"ERR",2)=X
"RTN","DG53618",193,0)
 . ;I 'TESTING S DA=$P(PT,";",1),DIK="^DPT(" D ^DIK
"RTN","DG53618",194,0)
 . Q
"RTN","DG53618",195,0)
 ;bad pointer to income person
"RTN","DG53618",196,0)
 I PT["DGPR",$$GOODPTR(PT)="N" D  Q
"RTN","DG53618",197,0)
 . S DGBADPER=DGBADPER+1
"RTN","DG53618",198,0)
 . S X="and bad income person pointer "_$P(PT,";",1)_" (field #.03)"
"RTN","DG53618",199,0)
 . I 'ZTQUEUED W !,"    ",X
"RTN","DG53618",200,0)
 . S ^XTMP(NAMSPC,"BADPR",R12,"ERR",2)=X
"RTN","DG53618",201,0)
 . I 'TESTING S DA=$P(PT,";",1),DIK="^DGPR(408.13," D ^DIK
"RTN","DG53618",202,0)
 . Q
"RTN","DG53618",203,0)
 ;null variable pointer
"RTN","DG53618",204,0)
 I PT="" D  Q
"RTN","DG53618",205,0)
 . S X="and null pointer (field #.03)"
"RTN","DG53618",206,0)
 . I 'ZTQUEUED W !,"     ",X
"RTN","DG53618",207,0)
 . S DGBAD03=DGBAD03+1
"RTN","DG53618",208,0)
 . S ^XTMP(NAMSPC,"BADPR",R12,"ERR",2)=X
"RTN","DG53618",209,0)
 . Q
"RTN","DG53618",210,0)
 ;bad variable pointer
"RTN","DG53618",211,0)
 I $$GOODPTR(PT)="N" D
"RTN","DG53618",212,0)
 . S X="and bad variable pointer "_$P(PT,";",1)_" (field #.03)"
"RTN","DG53618",213,0)
 . I 'ZTQUEUED W !,"     ",X
"RTN","DG53618",214,0)
 . S DGBAD03=DGBAD03+1
"RTN","DG53618",215,0)
 . S ^XTMP(NAMSPC,"BADPR",R12,"ERR",2)=X
"RTN","DG53618",216,0)
 . Q
"RTN","DG53618",217,0)
 Q
"RTN","DG53618",218,0)
 ;
"RTN","DG53618",219,0)
DEL40812(R12,DGDEL12,DGDEL21,DGDEL22,ZTQUEUED,TESTING,NAMSPC) ;
"RTN","DG53618",220,0)
 ; Kill bad #408.12 file rec and files that point to it
"RTN","DG53618",221,0)
 N DA,DIK,R21,R22,X
"RTN","DG53618",222,0)
 S DA=R12,DIK="^DGPR(408.12," D ^DIK:'TESTING
"RTN","DG53618",223,0)
 S DGDEL12=DGDEL12+1
"RTN","DG53618",224,0)
 I 'ZTQUEUED W !,?2,"Deleting 408.12 ien > ",R12
"RTN","DG53618",225,0)
 ;
"RTN","DG53618",226,0)
 ;kill all 408.21's that point to the bad 408.12
"RTN","DG53618",227,0)
 S R21=0
"RTN","DG53618",228,0)
 F  S R21=$O(^DGMT(408.21,"C",R12,R21)) Q:'R21  D
"RTN","DG53618",229,0)
 . I 'TESTING S DA=R21,DIK="^DGMT(408.21," D ^DIK
"RTN","DG53618",230,0)
 . S DGDEL21=DGDEL21+1
"RTN","DG53618",231,0)
 . S X="Deleting related ien "_R21_" in file #408.21"
"RTN","DG53618",232,0)
 . I 'ZTQUEUED W !,?4,X
"RTN","DG53618",233,0)
 . S ^XTMP(NAMSPC,"BADPR",R12,"REL",R21)=X
"RTN","DG53618",234,0)
 . ;
"RTN","DG53618",235,0)
 . ;kill all 408.22's that point to the bad 408.21
"RTN","DG53618",236,0)
 . S R22=0
"RTN","DG53618",237,0)
 . F  S R22=$O(^DGMT(408.22,"AIND",R21,R22)) Q:'R22  D
"RTN","DG53618",238,0)
 . . I 'TESTING S DA=R22,DIK="^DGMT(408.22," D ^DIK
"RTN","DG53618",239,0)
 . . S DGDEL22=DGDEL22+1
"RTN","DG53618",240,0)
 . . S X="Deleting related ien "_R22_" in file # 408.22"
"RTN","DG53618",241,0)
 . . I 'ZTQUEUED W !,?6,X
"RTN","DG53618",242,0)
 . . S ^XTMP(NAMSPC,"BADPR",R12,"REL",R21,R22)=X
"RTN","DG53618",243,0)
 . . Q
"RTN","DG53618",244,0)
 . Q
"RTN","DG53618",245,0)
 Q
"RTN","DG53618",246,0)
 ;
"RTN","DG53618",247,0)
CHKSTAT(POST) ;
"RTN","DG53618",248,0)
 N Y,DUOUT,DTOUT,QUIT,STAT,STIME,NAMSPC
"RTN","DG53618",249,0)
 S QUIT=0
"RTN","DG53618",250,0)
 S NAMSPC=$$NAMSPC
"RTN","DG53618",251,0)
 L +^XTMP(NAMSPC):1
"RTN","DG53618",252,0)
 I '$T D BMES^XPDUTL("*** ALREADY RUNNING ***") Q 1
"RTN","DG53618",253,0)
 ;
"RTN","DG53618",254,0)
 ; get job status
"RTN","DG53618",255,0)
 S STAT=$P($G(^XTMP(NAMSPC,0,0)),U,5)
"RTN","DG53618",256,0)
 S STIME=$P($G(^XTMP(NAMSPC,0,0)),U,6)
"RTN","DG53618",257,0)
 ;
"RTN","DG53618",258,0)
 I POST D KILIT Q 0
"RTN","DG53618",259,0)
 ;
"RTN","DG53618",260,0)
 ;if job Completed and run from menu opt, ask to Re-Run
"RTN","DG53618",261,0)
 I STAT="COMPLETED" D
"RTN","DG53618",262,0)
 . W " was Completed on "_$$FMTE^XLFDT(STIME)
"RTN","DG53618",263,0)
 . W !,"  Do you want to Re-Run again?"
"RTN","DG53618",264,0)
 . K DIR
"RTN","DG53618",265,0)
 . S DIR("?",1)="  Entering Y, will delete the XTMP global where theprevious cleanup"
"RTN","DG53618",266,0)
 . S DIR("?")="  information was stored and begin a new job, or N to cancel request"
"RTN","DG53618",267,0)
 . S DIR(0)="Y" D ^DIR
"RTN","DG53618",268,0)
 . I 'Y S QUIT=1 Q
"RTN","DG53618",269,0)
 . W !," ARE YOU SURE?"
"RTN","DG53618",270,0)
 . K DIR
"RTN","DG53618",271,0)
 . S DIR("?")="Enter Y to begin a new Job or N to cancel request"
"RTN","DG53618",272,0)
 . S DIR(0)="Y" D ^DIR
"RTN","DG53618",273,0)
 . I 'Y S QUIT=1 Q
"RTN","DG53618",274,0)
 . ;fall thru to re-run mode, kill ^XTMPs
"RTN","DG53618",275,0)
 . D KILIT
"RTN","DG53618",276,0)
 . Q
"RTN","DG53618",277,0)
 Q QUIT
"RTN","DG53618",278,0)
 ;
"RTN","DG53618",279,0)
KILIT ; kill Xtmp work file for a re-run
"RTN","DG53618",280,0)
 S:'$D(NAMSPC) NAMSPC=$$NAMSPC^DG53618
"RTN","DG53618",281,0)
 K ^XTMP(NAMSPC)
"RTN","DG53618",282,0)
 Q
"RTN","DG53618",283,0)
 ;
"RTN","DG53618",284,0)
STOP ; alternate stop method
"RTN","DG53618",285,0)
 S ^XTMP($$NAMSPC,0,"STOP")=""
"RTN","DG53618",286,0)
 Q
"RTN","DG53618",287,0)
 ;
"RTN","DG53618",288,0)
SETUPX(EXPDAY) ;Setup XTMP
"RTN","DG53618",289,0)
 N BEGTIME,PURGDT,NAMSPC,U
"RTN","DG53618",290,0)
 S U="^"
"RTN","DG53618",291,0)
 S NAMSPC=$$NAMSPC^DG53618
"RTN","DG53618",292,0)
 S BEGTIME=$$NOW^XLFDT()
"RTN","DG53618",293,0)
 S PURGDT=$$FMADD^XLFDT(BEGTIME,EXPDAY)
"RTN","DG53618",294,0)
 S ^XTMP(NAMSPC,0)=PURGDT_U_BEGTIME
"RTN","DG53618",295,0)
 S $P(^XTMP(NAMSPC,0),U,3)="Cleanup Bad Pointers In PATIENT RELATION File"
"RTN","DG53618",296,0)
 Q
"RTN","DG53618",297,0)
 ;
"RTN","DG53618",298,0)
NAMSPC() ; Return a consistent name space variable
"RTN","DG53618",299,0)
 Q $T(+0)
"RTN","DG53618M")
0^2^B20082802
"RTN","DG53618M",1,0)
DG53618M ;ALB/GN/PHH - DG*5.3*618 CLEANUP UTILITES ;03/22/2005 10:39 AM
"RTN","DG53618M",2,0)
 ;;5.3;Registration;**618**;Aug 13, 1993
"RTN","DG53618M",3,0)
 ;
"RTN","DG53618M",4,0)
 ; Misc cleanup utilities
"RTN","DG53618M",5,0)
 ;
"RTN","DG53618M",6,0)
MAIL(TESTING) ; mail stats
"RTN","DG53618M",7,0)
 N ACT,LACT,DFN,BTIME,HTEXT,TEXT,NAMSPC,LIN,MSGNO,DGDEL21,DGDEL12,DGTOT
"RTN","DG53618M",8,0)
 N LSSN,R40831,STS,STSNAM,STAT,MTIEN,STIME
"RTN","DG53618M",9,0)
 N TYPE,TYPNAM,DGDEL22,DGBADPAT,DGBADPER
"RTN","DG53618M",10,0)
 N DGBAD03,X
"RTN","DG53618M",11,0)
 S MSGNO=1
"RTN","DG53618M",12,0)
 S NAMSPC=$$NAMSPC^DG53618,X=$G(^XTMP(NAMSPC,0,0))
"RTN","DG53618M",13,0)
 S DGTOT=$P(X,U,2)
"RTN","DG53618M",14,0)
 S DGDEL12=$P(X,U,3)
"RTN","DG53618M",15,0)
 S BTIME=$P(X,U,4)
"RTN","DG53618M",16,0)
 S STAT=$P(X,U,5)
"RTN","DG53618M",17,0)
 S STIME=$P(X,U,6)
"RTN","DG53618M",18,0)
 S DGDEL21=$P(X,U,7)
"RTN","DG53618M",19,0)
 S DGDEL22=$P(X,U,8)
"RTN","DG53618M",20,0)
 S DGBADPAT=$P(X,U,9)
"RTN","DG53618M",21,0)
 S DGBADPER=$P(X,U,10)
"RTN","DG53618M",22,0)
 S DGBAD03=$P(X,U,11)
"RTN","DG53618M",23,0)
 ;
"RTN","DG53618M",24,0)
 D HDNG(.HTEXT,.MSGNO,.LIN,"S",STAT,STIME,DGDEL12,TESTING)
"RTN","DG53618M",25,0)
 D SUMRY(.LIN)
"RTN","DG53618M",26,0)
 D MAILIT(HTEXT)
"RTN","DG53618M",27,0)
 ;
"RTN","DG53618M",28,0)
 D SNDDET
"RTN","DG53618M",29,0)
 Q 1
"RTN","DG53618M",30,0)
 ;
"RTN","DG53618M",31,0)
 ;build heading lines for mail message
"RTN","DG53618M",32,0)
HDNG(HTEXT,MSGNO,LIN,DOS,STAT,STIME,DGDEL12,TESTING) ;
"RTN","DG53618M",33,0)
 K ^TMP(NAMSPC,$J,"MSG")
"RTN","DG53618M",34,0)
 S LIN=0
"RTN","DG53618M",35,0)
 S HTEXT="Cleanup Dangling 408.12 records process "_STAT_" on "
"RTN","DG53618M",36,0)
 S HTEXT=HTEXT_$$FMTE^XLFDT(STIME)
"RTN","DG53618M",37,0)
 D BLDLINE(HTEXT,.LIN)
"RTN","DG53618M",38,0)
 S TEXT=$S(DOS="S":"Summary",1:"Detail")_" Information"
"RTN","DG53618M",39,0)
 S TEXT=$J("",60-$L(TEXT)\2)_TEXT
"RTN","DG53618M",40,0)
 D BLDLINE(TEXT,.LIN)
"RTN","DG53618M",41,0)
 S TEXT="CLEANUP OF FILE #408.12 RECORDS "_STAT_" WITH "_DGDEL12_" RECORDS DELETED!!"
"RTN","DG53618M",42,0)
 S TEXT=$J("",60-$L(TEXT)\2)_TEXT
"RTN","DG53618M",43,0)
 D BLDLINE(TEXT,.LIN)
"RTN","DG53618M",44,0)
 D BLDLINE("",.LIN)
"RTN","DG53618M",45,0)
 I TESTING D
"RTN","DG53618M",46,0)
 . S TEXT="** TESTING - NO CHANGES TO DATABASE WILL BE MADE**"
"RTN","DG53618M",47,0)
 . D BLDLINE(TEXT,.LIN)
"RTN","DG53618M",48,0)
 . Q
"RTN","DG53618M",49,0)
 I MSGNO S TEXT="Message number: "_MSGNO D BLDLINE(TEXT,.LIN)
"RTN","DG53618M",50,0)
 D BLDLINE("",.LIN)
"RTN","DG53618M",51,0)
 S MSGNO=MSGNO+1
"RTN","DG53618M",52,0)
 Q
"RTN","DG53618M",53,0)
 ;
"RTN","DG53618M",54,0)
SUMRY(LIN) ;build summary lines for mail message
"RTN","DG53618M",55,0)
 S TEXT="Total 408.12 Records Processed: " D BLDLINE2(TEXT,.LIN,DGTOT)
"RTN","DG53618M",56,0)
 S TEXT="  Purged file #408.12 records: "
"RTN","DG53618M",57,0)
 D BLDLINE2(TEXT,.LIN,DGDEL12)
"RTN","DG53618M",58,0)
 S TEXT="    Bad or missing file #2 pointer (field #.01 or #.03): "
"RTN","DG53618M",59,0)
 D BLDLINE2(TEXT,.LIN,DGBADPAT)
"RTN","DG53618M",60,0)
 S TEXT="    Bad or missing file #408.13 pointer (field #.03): "
"RTN","DG53618M",61,0)
 D BLDLINE2(TEXT,.LIN,DGBADPER)
"RTN","DG53618M",62,0)
 S TEXT="    Null or bad variable pointer (field #.03): "
"RTN","DG53618M",63,0)
 D BLDLINE2(TEXT,.LIN,DGBAD03)
"RTN","DG53618M",64,0)
 S TEXT="  Purged file #408.21 records: "
"RTN","DG53618M",65,0)
 D BLDLINE2(TEXT,.LIN,DGDEL21)
"RTN","DG53618M",66,0)
 S TEXT="  Purged file #408.22 records: "
"RTN","DG53618M",67,0)
 D BLDLINE2(TEXT,.LIN,DGDEL22)
"RTN","DG53618M",68,0)
 D BLDLINE("",.LIN)
"RTN","DG53618M",69,0)
 D BLDLINE("",.LIN)
"RTN","DG53618M",70,0)
 D BLDLINE("",.LIN)
"RTN","DG53618M",71,0)
 ;
"RTN","DG53618M",72,0)
 I DGDEL12 D
"RTN","DG53618M",73,0)
 . D BLDLINE("Detail changes to follow in subsequent mail messages.",.LIN)
"RTN","DG53618M",74,0)
 Q
"RTN","DG53618M",75,0)
 ;
"RTN","DG53618M",76,0)
BLDLINE2(TEXT,LIN,VAL) ;
"RTN","DG53618M",77,0)
 N X
"RTN","DG53618M",78,0)
 S X=TEXT_$J("",60-$L(TEXT))_$J($FN(VAL,","),11)
"RTN","DG53618M",79,0)
 D BLDLINE(X,.LIN)
"RTN","DG53618M",80,0)
 Q
"RTN","DG53618M",81,0)
SNDDET ;build and send detail messages limit under 2000 lines each
"RTN","DG53618M",82,0)
 N DATE,ERR,MAXLIN,MORE,R12,R21,R22
"RTN","DG53618M",83,0)
 S MAXLIN=1995,MORE=0
"RTN","DG53618M",84,0)
 D HDNG(.HTEXT,.MSGNO,.LIN,"D",STAT,STIME,DGDEL12,TESTING)
"RTN","DG53618M",85,0)
 ;
"RTN","DG53618M",86,0)
 S R12=""
"RTN","DG53618M",87,0)
 F  S R12=$O(^XTMP(NAMSPC,"BADPR",R12)) Q:R12=""  D ERR
"RTN","DG53618M",88,0)
 ;
"RTN","DG53618M",89,0)
 ;print final message if any to print
"RTN","DG53618M",90,0)
 D MAILIT(HTEXT):MORE
"RTN","DG53618M",91,0)
 Q
"RTN","DG53618M",92,0)
 ;
"RTN","DG53618M",93,0)
ERR S ERR="",MORE=1
"RTN","DG53618M",94,0)
 F  S ERR=$O(^XTMP(NAMSPC,"BADPR",R12,"ERR",ERR)) Q:ERR=""  D
"RTN","DG53618M",95,0)
 . S TEXT=^XTMP(NAMSPC,"BADPR",R12,"ERR",ERR)
"RTN","DG53618M",96,0)
 . I ERR=1 S TEXT="File 408.12, record "_R12_" had a bad pointer to "_TEXT
"RTN","DG53618M",97,0)
 . I ERR=2 S TEXT="  "_TEXT
"RTN","DG53618M",98,0)
 . D BLDLINE(TEXT,.LIN)
"RTN","DG53618M",99,0)
 . ;max lines reached, print a msg
"RTN","DG53618M",100,0)
 . I LIN>MAXLIN D  S MORE=0
"RTN","DG53618M",101,0)
 . . D MAILIT(HTEXT)
"RTN","DG53618M",102,0)
 . . D HDNG(.HTEXT,.MSGNO,.LIN,"D",STAT,STIME,DGDEL12,TESTING)
"RTN","DG53618M",103,0)
 . . Q
"RTN","DG53618M",104,0)
 . Q
"RTN","DG53618M",105,0)
 S R21=""
"RTN","DG53618M",106,0)
 F  S R21=$O(^XTMP(NAMSPC,"BADPR",R12,"REL",R21)) Q:R21=""  D R22
"RTN","DG53618M",107,0)
 Q
"RTN","DG53618M",108,0)
R22 S TEXT="    "_^XTMP(NAMSPC,"BADPR",R12,"REL",R21)
"RTN","DG53618M",109,0)
 D BLDLINE(TEXT,.LIN)
"RTN","DG53618M",110,0)
 I LIN>MAXLIN D  S MORE=0
"RTN","DG53618M",111,0)
 . D MAILIT(HTEXT)
"RTN","DG53618M",112,0)
 . D HDNG(.HTEXT,.MSGNO,.LIN,"D",STAT,STIME,DGDEL12,TESTING)
"RTN","DG53618M",113,0)
 . Q
"RTN","DG53618M",114,0)
 S R22=""
"RTN","DG53618M",115,0)
 F  S R22=$O(^XTMP(NAMSPC,"BADPR",R12,"REL",R21,R22)) Q:R22=""  D
"RTN","DG53618M",116,0)
 . S TEXT="      "_^XTMP(NAMSPC,"BADPR",R12,"REL",R21,R22)
"RTN","DG53618M",117,0)
 . D BLDLINE(TEXT,.LIN)
"RTN","DG53618M",118,0)
 . I LIN>MAXLIN D  S MORE=0
"RTN","DG53618M",119,0)
 . . D MAILIT(HTEXT)
"RTN","DG53618M",120,0)
 . . D HDNG(.HTEXT,.MSGNO,.LIN,"D",STAT,STIME,DGDEL12,TESTING)
"RTN","DG53618M",121,0)
 . . Q
"RTN","DG53618M",122,0)
 . Q
"RTN","DG53618M",123,0)
 Q
"RTN","DG53618M",124,0)
BLDLINE(TEXT,LIN) ;build a single line into TMP message global
"RTN","DG53618M",125,0)
 S LIN=LIN+1
"RTN","DG53618M",126,0)
 S ^TMP(NAMSPC,$J,"MSG",LIN)=TEXT
"RTN","DG53618M",127,0)
 Q
"RTN","DG53618M",128,0)
MAILIT(HTEXT) ; send the mail message
"RTN","DG53618M",129,0)
 N XMY,XMDUZ,XMSUB,XMTEXT
"RTN","DG53618M",130,0)
 S XMY(DUZ)="",XMDUZ=.5
"RTN","DG53618M",131,0)
 S XMSUB=HTEXT
"RTN","DG53618M",132,0)
 S XMTEXT="^TMP(NAMSPC,$J,""MSG"","
"RTN","DG53618M",133,0)
 D ^XMD K ^TMP(NAMSPC,$J,"MSG")
"RTN","DG53618M",134,0)
 Q
"RTN","DGMTDD")
0^3^B16846869
"RTN","DGMTDD",1,0)
DGMTDD ;ALB/RMO,CAW,CJM,LBD,PHH - Annual Means Test file (#408.31) Data Dictionary Calls ; 2/10/2005 9:12am
"RTN","DGMTDD",2,0)
 ;;5.3;Registration;**33,182,411,456,618**;Aug 13, 1993
"RTN","DGMTDD",3,0)
 ;
"RTN","DGMTDD",4,0)
CUR ;Cross-reference on the Status field (#.03) 
"RTN","DGMTDD",5,0)
 ;to update the Current Means Test Status field (#.14)
"RTN","DGMTDD",6,0)
 ;in the Patient file (#2)
"RTN","DGMTDD",7,0)
 N DFN,DGCS,DGDT,DGIX,DGMTI,DGMTS,DGNAM
"RTN","DGMTDD",8,0)
 S DFN=$P($G(^DGMT(408.31,DA,0)),U,2),DGCS=$P($G(^DPT(DFN,0)),U,14),(DGDT,DGMTS)=""
"RTN","DGMTDD",9,0)
 ;
"RTN","DGMTDD",10,0)
 S DGNAM=$P($G(^DPT(DFN,0)),"^",1)
"RTN","DGMTDD",11,0)
 Q:DGNAM=""
"RTN","DGMTDD",12,0)
 Q:'$D(^DPT("B",DGNAM))
"RTN","DGMTDD",13,0)
 ;
"RTN","DGMTDD",14,0)
 S DGMTI=+$$MTIENLT^DGMTU3(1,DFN,"")
"RTN","DGMTDD",15,0)
 I $D(^DGMT(408.31,DGMTI,0)) S DGMTS=$P(^(0),U,3) G CURQ:DGCS=DGMTS
"RTN","DGMTDD",16,0)
 I DGCS]"" D
"RTN","DGMTDD",17,0)
 .N DA,X
"RTN","DGMTDD",18,0)
 .S DA=DFN,X=DGCS,DGIX=0
"RTN","DGMTDD",19,0)
 .F  S DGIX=$O(^DD(2,.14,1,DGIX)) Q:'DGIX  X ^(DGIX,2) S X=DGCS
"RTN","DGMTDD",20,0)
 S $P(^DPT(DFN,0),U,14)=DGMTS I DGMTS]"" D
"RTN","DGMTDD",21,0)
 .N DA,X
"RTN","DGMTDD",22,0)
 .S DA=DFN,X=DGMTS,DGIX=0
"RTN","DGMTDD",23,0)
 .F  S DGIX=$O(^DD(2,.14,1,DGIX)) Q:'DGIX  X ^(DGIX,1) S X=DGMTS
"RTN","DGMTDD",24,0)
CURQ Q
"RTN","DGMTDD",25,0)
 ;
"RTN","DGMTDD",26,0)
COM ;Input Transform check of the Completion date/time field (#.07)
"RTN","DGMTDD",27,0)
 N DGDT,DGMT0,XMB,XMDUZ
"RTN","DGMTDD",28,0)
 S DGMT0=$G(^DGMT(408.31,DA,0))
"RTN","DGMTDD",29,0)
 I X<+DGMT0 W !?5,"The completion date/time cannot be before the date of test." K X
"RTN","DGMTDD",30,0)
 I $D(X) S DGDT=+$O(^DGMT(408.31,"AD",$P(DGMT0,U,19),$P(DGMT0,U,2),+DGMT0)) I DGDT,X'<DGDT W !?5,"The completion date/time cannot be after the next date of test." K X
"RTN","DGMTDD",31,0)
 ; DG*5.3*411 - MT Completion Bulletin
"RTN","DGMTDD",32,0)
 ;
"RTN","DGMTDD",33,0)
 I $D(X) D
"RTN","DGMTDD",34,0)
 . N EASDT S EASDT=X
"RTN","DGMTDD",35,0)
 . Q:'$$GET1^DIQ(713,1,7,"I")
"RTN","DGMTDD",36,0)
 . Q:$P(DGMT0,U,19)'=1
"RTN","DGMTDD",37,0)
 . S XMB="EAS MTCOMPLETION"
"RTN","DGMTDD",38,0)
 . S XMB(1)=$$GET1^DIQ(2,$P(DGMT0,U,2),.01)
"RTN","DGMTDD",39,0)
 . S XMB(2)=$E($$GET1^DIQ(2,$P(DGMT0,U,2),.09),6,10)
"RTN","DGMTDD",40,0)
 . S XMB(3)=$$FMTE^XLFDT(EASDT)
"RTN","DGMTDD",41,0)
 . S XMB(4)=$$GET1^DIQ(200,DUZ,.01)
"RTN","DGMTDD",42,0)
 . S XMDUZ="EAS MT Completion"
"RTN","DGMTDD",43,0)
 . D ^XMB
"RTN","DGMTDD",44,0)
COMQ Q
"RTN","DGMTDD",45,0)
 ;
"RTN","DGMTDD",46,0)
SCR(DGMTS,DGMTI,DGMTYPT,DGMTACT) ;Screen for the Status field (#.03)
"RTN","DGMTDD",47,0)
 ;                         Input  -- DGMTS    Means Test Status IEN
"RTN","DGMTDD",48,0)
 ;                                   DGMTI    Annual Means Test IEN
"RTN","DGMTDD",49,0)
 ;                                   DGMTYPT  Type of Test 1=MT 2=COPAY
"RTN","DGMTDD",50,0)
 ;                                   DGMTACT  Means Test Action (Opt)
"RTN","DGMTDD",51,0)
 ;                         Output -- 1=SELECTABLE and 0=NOT SELECTABLE
"RTN","DGMTDD",52,0)
 N DA,DGMT0,DGMTDT,Y
"RTN","DGMTDD",53,0)
 S DGMT0=$G(^DGMT(408.31,DGMTI,0)),DGMTDT=+DGMT0
"RTN","DGMTDD",54,0)
 I DGMTYPT=1,$$ACT(DGMTS,DGMTDT),$$MTS(DGMTS,DGMTDT,DGMT0,$G(DGMTACT),DGMTYPT) S Y=1
"RTN","DGMTDD",55,0)
 I DGMTYPT=2,$$ACT(DGMTS,DGMTDT),$P(^DG(408.32,DGMTS,0),U,19)=2,$$MTS(DGMTS,DGMTDT,DGMT0,$G(DGMTACT),DGMTYPT) S Y=1
"RTN","DGMTDD",56,0)
 Q +$G(Y)
"RTN","DGMTDD",57,0)
 ;
"RTN","DGMTDD",58,0)
ACT(DGMTS,DGMTDT) ;Determine if means test status is active
"RTN","DGMTDD",59,0)
 ;                 Input  -- DGMTS   Means Test Status IEN
"RTN","DGMTDD",60,0)
 ;                           DGMTDT  Date of Test
"RTN","DGMTDD",61,0)
 ;                 Output -- 1=ACTIVE and 0=INACTIVE
"RTN","DGMTDD",62,0)
 N Y
"RTN","DGMTDD",63,0)
 S:'$P(DGMTDT,".",2) DGMTDT=DGMTDT_.2359
"RTN","DGMTDD",64,0)
 I $D(^DG(408.32,DGMTS,"E",+$O(^(+$O(^DG(408.32,DGMTS,"E","AID",-DGMTDT)),0)),0)),$P($G(^(0)),U,2) S Y=1
"RTN","DGMTDD",65,0)
 Q +$G(Y)
"RTN","DGMTDD",66,0)
 ;
"RTN","DGMTDD",67,0)
MTS(DGMTS,DGMTDT,DGMT0,DGMTACT,DGMTYPT) ;Determine if means test status is selectable
"RTN","DGMTDD",68,0)
 ;                      Input  -- DGMTS    Means Test Status IEN
"RTN","DGMTDD",69,0)
 ;                                DGMTDT   Date of Test
"RTN","DGMTDD",70,0)
 ;                                DGMT0    Annual Means Test 0th node
"RTN","DGMTDD",71,0)
 ;                                DGMTACT  Means Test Action  (Opt)
"RTN","DGMTDD",72,0)
 ;                                DGMTYPT  Type of Test 1=MT 2=COPAY
"RTN","DGMTDD",73,0)
 ;                      Output -- 1=SELECTABLE and 0=NOT SELECTABLE
"RTN","DGMTDD",74,0)
 N DGDET,DGINT,DGLY,DGMTPAR,DGNWT,DGOMTS,DGTHA,DGTHB,DGTHPF,DGTSRC
"RTN","DGMTDD",75,0)
 N DGMTNWC,DGNW,DGTHG
"RTN","DGMTDD",76,0)
 S Y=0
"RTN","DGMTDD",77,0)
 I DGMTYPT=1 D
"RTN","DGMTDD",78,0)
 .S DGOMTS=$P(DGMT0,U,3),DGINT=$P(DGMT0,U,4),DGNWT=$P(DGMT0,U,5),DGDET=$P(DGMT0,U,15),DGLY=$E(DGMTDT,1,3)-1_"0000"
"RTN","DGMTDD",79,0)
 .S:$$ACT(4,DGMTDT) DGTHA=$P(DGMT0,U,12) S:$$ACT(5,DGMTDT) DGTHB=$P(DGMT0,U,13) S:$$ACT(16,DGMTDT) DGTHG=$P(DGMT0,U,27)
"RTN","DGMTDD",80,0)
 .S DGMTPAR=$G(^DG(43,1,"MT",$S($P(DGMT0,U,16):DGLY,1:DGLY+10000),0))
"RTN","DGMTDD",81,0)
 .S DGMTNWC=+$G(^DG(43,1,"GMT"))
"RTN","DGMTDD",82,0)
 .S DGNW=DGNWT-DGDET+$S(DGMTNWC:0,1:DGINT)
"RTN","DGMTDD",83,0)
 .S DGTHPF=$S(DGNW'<$P(DGMTPAR,U,8):1,1:0)
"RTN","DGMTDD",84,0)
 .S DGTSRC=$P($G(^DG(408.34,+$P(DGMT0,U,23),0)),U)
"RTN","DGMTDD",85,0)
 .I DGMTS=2,$G(DGMTACT)="CAT" D
"RTN","DGMTDD",86,0)
 ..S:DGTHPF Y=1
"RTN","DGMTDD",87,0)
 ..S:((DGTSRC="VAMC")&(DGOMTS=4)) Y=0
"RTN","DGMTDD",88,0)
 .I DGMTS=4 S Y=1
"RTN","DGMTDD",89,0)
 .I DGMTS=5 D
"RTN","DGMTDD",90,0)
 ..S:DGTHPF!(DGINT>$G(DGTHA)) Y=1
"RTN","DGMTDD",91,0)
 ..S:((DGTSRC="VAMC")&(DGOMTS=4)) Y=0
"RTN","DGMTDD",92,0)
 .I DGMTS=6 D
"RTN","DGMTDD",93,0)
 ..S:DGTHPF!(DGINT>$G(DGTHA)&(DGINT>$G(DGTHG))) Y=1
"RTN","DGMTDD",94,0)
 ..S:(DGOMTS=2)&($G(DGTHG)>$G(DGTHA)) Y=0
"RTN","DGMTDD",95,0)
 ..S:((DGTSRC="VAMC")&(DGOMTS=4)) Y=0
"RTN","DGMTDD",96,0)
 .I DGMTS=16 D
"RTN","DGMTDD",97,0)
 ..S:$G(DGTHG)>$G(DGTHA)&(DGTHPF!(DGINT>$G(DGTHA))) Y=1
"RTN","DGMTDD",98,0)
 ..S:((DGTSRC="VAMC")&(DGOMTS=4)) Y=0
"RTN","DGMTDD",99,0)
 I DGMTYPT=2 D
"RTN","DGMTDD",100,0)
 .I DGMTS=7 S Y=1
"RTN","DGMTDD",101,0)
 .I DGMTS=8 S Y=1
"RTN","DGMTDD",102,0)
 .I DGMTS=9 S Y=1
"RTN","DGMTDD",103,0)
 .I DGMTS=10 S Y=0
"RTN","DGMTDD",104,0)
 .I DGMTS=11 S Y=0
"RTN","DGMTDD",105,0)
 Q +$G(Y)
"RTN","DGMTDD",106,0)
 ;
"RTN","DGMTDD",107,0)
STOPAUTO(DA) ;
"RTN","DGMTDD",108,0)
 ;This is the kill logic for an xref on the Test Determined Status field.
"RTN","DGMTDD",109,0)
 ;If the status changes, and there is a linked test via the Linked
"RTN","DGMTDD",110,0)
 ;Rx Copay/Means Test field, the Test Determined Status of the linked
"RTN","DGMTDD",111,0)
 ;test should be deleted.
"RTN","DGMTDD",112,0)
 ;
"RTN","DGMTDD",113,0)
 ;Input - DA is the ien of a test in the Annual Means Test file
"RTN","DGMTDD",114,0)
 ;Output - none
"RTN","DGMTDD",115,0)
 ;
"RTN","DGMTDD",116,0)
 N LINKEDMT
"RTN","DGMTDD",117,0)
 Q:'$G(DA)
"RTN","DGMTDD",118,0)
 S LINKEDMT=$P($G(^DGMT(408.31,DA,2)),"^",6)
"RTN","DGMTDD",119,0)
 I LINKEDMT D
"RTN","DGMTDD",120,0)
 .S $P(^DGMT(408.31,LINKEDMT,2),"^",2)=$$NOW^XLFDT
"RTN","DGMTDD",121,0)
 .S $P(^DGMT(408.31,LINKEDMT,2),"^",3)=""
"RTN","DGMTDD",122,0)
 Q
"VER")
8.0^22.0
**END**
**END**
