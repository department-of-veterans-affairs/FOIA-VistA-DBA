Released IB*2*339 SEQ #333
Extracted from mail message
**KIDS**:IB*2.0*339^

**INSTALL NAME**
IB*2.0*339
"BLD",6013,0)
IB*2.0*339^INTEGRATED BILLING^0^3070425^y
"BLD",6013,1,0)
^^1^1^3060322^
"BLD",6013,1,1,0)
IB implementation of Project 112/SHAD Classification.
"BLD",6013,4,0)
^9.64PA^366.14^2
"BLD",6013,4,351.2,0)
351.2
"BLD",6013,4,351.2,2,0)
^9.641^351.2^1
"BLD",6013,4,351.2,2,351.2,0)
SPECIAL INPATIENT BILLING CASES  (File-top level)
"BLD",6013,4,351.2,2,351.2,1,0)
^9.6411^.03^1
"BLD",6013,4,351.2,2,351.2,1,.03,0)
PATIENT TYPE
"BLD",6013,4,351.2,222)
y^n^p^^^^n^^n
"BLD",6013,4,351.2,224)

"BLD",6013,4,366.14,0)
366.14
"BLD",6013,4,366.14,2,0)
^9.641^366.141^1
"BLD",6013,4,366.14,2,366.141,0)
EVENT  (sub-file)
"BLD",6013,4,366.14,2,366.141,1,0)
^9.6411^.408^2
"BLD",6013,4,366.14,2,366.141,1,.403,0)
SWA
"BLD",6013,4,366.14,2,366.141,1,.408,0)
SHAD
"BLD",6013,4,366.14,222)
y^n^p^^^^n^^n
"BLD",6013,4,366.14,224)

"BLD",6013,4,"APDD",351.2,351.2)

"BLD",6013,4,"APDD",351.2,351.2,.03)

"BLD",6013,4,"APDD",366.14,366.141)

"BLD",6013,4,"APDD",366.14,366.141,.403)

"BLD",6013,4,"APDD",366.14,366.141,.408)

"BLD",6013,4,"B",351.2,351.2)

"BLD",6013,4,"B",366.14,366.14)

"BLD",6013,6.3)
2
"BLD",6013,"ABPKG")
n
"BLD",6013,"INID")
^n
"BLD",6013,"INIT")
POST^IB20P339
"BLD",6013,"KRN",0)
^9.67PA^8989.52^19
"BLD",6013,"KRN",.4,0)
.4
"BLD",6013,"KRN",.401,0)
.401
"BLD",6013,"KRN",.402,0)
.402
"BLD",6013,"KRN",.403,0)
.403
"BLD",6013,"KRN",.5,0)
.5
"BLD",6013,"KRN",.84,0)
.84
"BLD",6013,"KRN",3.6,0)
3.6
"BLD",6013,"KRN",3.8,0)
3.8
"BLD",6013,"KRN",9.2,0)
9.2
"BLD",6013,"KRN",9.8,0)
9.8
"BLD",6013,"KRN",9.8,"NM",0)
^9.68A^26^25
"BLD",6013,"KRN",9.8,"NM",1,0)
IBACV^^0^B35472344
"BLD",6013,"KRN",9.8,"NM",2,0)
IBAMTD^^0^B19206296
"BLD",6013,"KRN",9.8,"NM",3,0)
IBAMTI^^0^B27252728
"BLD",6013,"KRN",9.8,"NM",4,0)
IBAMTI1^^0^B17944489
"BLD",6013,"KRN",9.8,"NM",5,0)
IBAMTS^^0^B18456624
"BLD",6013,"KRN",9.8,"NM",6,0)
IBAMTS1^^0^B22328511
"BLD",6013,"KRN",9.8,"NM",7,0)
IBAMTS2^^0^B9767783
"BLD",6013,"KRN",9.8,"NM",8,0)
IBCSC4A^^0^B31509518
"BLD",6013,"KRN",9.8,"NM",9,0)
IBCSC5B^^0^B22247597
"BLD",6013,"KRN",9.8,"NM",10,0)
IBCSC5C^^0^B37694343
"BLD",6013,"KRN",9.8,"NM",11,0)
IBCU74^^0^B34341645
"BLD",6013,"KRN",9.8,"NM",12,0)
IBJDI7^^0^B51362696
"BLD",6013,"KRN",9.8,"NM",14,0)
IBNCPDP1^^0^B66261404
"BLD",6013,"KRN",9.8,"NM",15,0)
IBOVOP1^^0^B14775024
"BLD",6013,"KRN",9.8,"NM",16,0)
IBOVOP2^^0^B13818826
"BLD",6013,"KRN",9.8,"NM",17,0)
IBTRED^^0^B22563966
"BLD",6013,"KRN",9.8,"NM",18,0)
IBTRKR3^^0^B44657681
"BLD",6013,"KRN",9.8,"NM",19,0)
IBTRKR41^^0^B32576267
"BLD",6013,"KRN",9.8,"NM",20,0)
IBTRKR5^^0^B32493921
"BLD",6013,"KRN",9.8,"NM",21,0)
IBTUBO1^^0^B45713033
"BLD",6013,"KRN",9.8,"NM",22,0)
IB20P339^^0^B20765882
"BLD",6013,"KRN",9.8,"NM",23,0)
IBNCPDPC^^0^B34403987
"BLD",6013,"KRN",9.8,"NM",24,0)
IBNCPLOG^^0^B49957906
"BLD",6013,"KRN",9.8,"NM",25,0)
IBNCPEV1^^0^B21049389
"BLD",6013,"KRN",9.8,"NM",26,0)
IBCCPT^^0^B67101074
"BLD",6013,"KRN",9.8,"NM","B","IB20P339",22)

"BLD",6013,"KRN",9.8,"NM","B","IBACV",1)

"BLD",6013,"KRN",9.8,"NM","B","IBAMTD",2)

"BLD",6013,"KRN",9.8,"NM","B","IBAMTI",3)

"BLD",6013,"KRN",9.8,"NM","B","IBAMTI1",4)

"BLD",6013,"KRN",9.8,"NM","B","IBAMTS",5)

"BLD",6013,"KRN",9.8,"NM","B","IBAMTS1",6)

"BLD",6013,"KRN",9.8,"NM","B","IBAMTS2",7)

"BLD",6013,"KRN",9.8,"NM","B","IBCCPT",26)

"BLD",6013,"KRN",9.8,"NM","B","IBCSC4A",8)

"BLD",6013,"KRN",9.8,"NM","B","IBCSC5B",9)

"BLD",6013,"KRN",9.8,"NM","B","IBCSC5C",10)

"BLD",6013,"KRN",9.8,"NM","B","IBCU74",11)

"BLD",6013,"KRN",9.8,"NM","B","IBJDI7",12)

"BLD",6013,"KRN",9.8,"NM","B","IBNCPDP1",14)

"BLD",6013,"KRN",9.8,"NM","B","IBNCPDPC",23)

"BLD",6013,"KRN",9.8,"NM","B","IBNCPEV1",25)

"BLD",6013,"KRN",9.8,"NM","B","IBNCPLOG",24)

"BLD",6013,"KRN",9.8,"NM","B","IBOVOP1",15)

"BLD",6013,"KRN",9.8,"NM","B","IBOVOP2",16)

"BLD",6013,"KRN",9.8,"NM","B","IBTRED",17)

"BLD",6013,"KRN",9.8,"NM","B","IBTRKR3",18)

"BLD",6013,"KRN",9.8,"NM","B","IBTRKR41",19)

"BLD",6013,"KRN",9.8,"NM","B","IBTRKR5",20)

"BLD",6013,"KRN",9.8,"NM","B","IBTUBO1",21)

"BLD",6013,"KRN",19,0)
19
"BLD",6013,"KRN",19.1,0)
19.1
"BLD",6013,"KRN",101,0)
101
"BLD",6013,"KRN",409.61,0)
409.61
"BLD",6013,"KRN",771,0)
771
"BLD",6013,"KRN",870,0)
870
"BLD",6013,"KRN",8989.51,0)
8989.51
"BLD",6013,"KRN",8989.52,0)
8989.52
"BLD",6013,"KRN",8994,0)
8994
"BLD",6013,"KRN","B",.4,.4)

"BLD",6013,"KRN","B",.401,.401)

"BLD",6013,"KRN","B",.402,.402)

"BLD",6013,"KRN","B",.403,.403)

"BLD",6013,"KRN","B",.5,.5)

"BLD",6013,"KRN","B",.84,.84)

"BLD",6013,"KRN","B",3.6,3.6)

"BLD",6013,"KRN","B",3.8,3.8)

"BLD",6013,"KRN","B",9.2,9.2)

"BLD",6013,"KRN","B",9.8,9.8)

"BLD",6013,"KRN","B",19,19)

"BLD",6013,"KRN","B",19.1,19.1)

"BLD",6013,"KRN","B",101,101)

"BLD",6013,"KRN","B",409.61,409.61)

"BLD",6013,"KRN","B",771,771)

"BLD",6013,"KRN","B",870,870)

"BLD",6013,"KRN","B",8989.51,8989.51)

"BLD",6013,"KRN","B",8989.52,8989.52)

"BLD",6013,"KRN","B",8994,8994)

"BLD",6013,"QUES",0)
^9.62^^
"BLD",6013,"REQB",0)
^9.611^3^3
"BLD",6013,"REQB",1,0)
IB*2.0*277^1
"BLD",6013,"REQB",2,0)
IB*2.0*341^1
"BLD",6013,"REQB",3,0)
IB*2.0*342^1
"BLD",6013,"REQB","B","IB*2.0*277",1)

"BLD",6013,"REQB","B","IB*2.0*341",2)

"BLD",6013,"REQB","B","IB*2.0*342",3)

"FIA",351.2)
SPECIAL INPATIENT BILLING CASES
"FIA",351.2,0)
^IBE(351.2,
"FIA",351.2,0,0)
351.2PI
"FIA",351.2,0,1)
y^n^p^^^^n^^n
"FIA",351.2,0,10)

"FIA",351.2,0,11)

"FIA",351.2,0,"RLRO")

"FIA",351.2,0,"VR")
2.0^IB
"FIA",351.2,351.2)
1
"FIA",351.2,351.2,.03)

"FIA",366.14)
IB NCPDP EVENT LOG
"FIA",366.14,0)
^IBCNR(366.14,
"FIA",366.14,0,0)
366.14D
"FIA",366.14,0,1)
y^n^p^^^^n^^n
"FIA",366.14,0,10)

"FIA",366.14,0,11)

"FIA",366.14,0,"RLRO")

"FIA",366.14,0,"VR")
2.0^IB
"FIA",366.14,366.14)
1
"FIA",366.14,366.141)
1
"FIA",366.14,366.141,.403)

"FIA",366.14,366.141,.408)

"INIT")
POST^IB20P339
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
339^3070425
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3070425
"PKG",200,22,1,"PAH",1,1,1,0)
IB implementation of Project 112/SHAD Classification.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
25
"RTN","IB20P339")
0^22^B20765882^n/a
"RTN","IB20P339",1,0)
IB20P339 ;ALB/ARH - IB*2.0*339 POST INIT: IB SHAD/SWA SUPPORT ; 02-JAN-2006
"RTN","IB20P339",2,0)
 ;;2.0;INTEGRATED BILLING;**339**;21-MAR-94;Build 2
"RTN","IB20P339",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IB20P339",4,0)
 ;
"RTN","IB20P339",5,0)
 Q
"RTN","IB20P339",6,0)
POST ;
"RTN","IB20P339",7,0)
 N IBA S IBA(1)="",IBA(2)="    IB Support for SHAD/SWA Post-Install .....",IBA(3)="" D MES^XPDUTL(.IBA) K IBA
"RTN","IB20P339",8,0)
 ;
"RTN","IB20P339",9,0)
 D ADDRNB ; Add PROJECT 112/SHAD Reason Not Billable (#356.8)
"RTN","IB20P339",10,0)
 D ADDCRR ; Add PROJECT 112/SHAD Charge Removal Reason (#350.3)
"RTN","IB20P339",11,0)
 ;
"RTN","IB20P339",12,0)
 D UPDRNB ; Replace ENV. CONTAM. with SOUTHWEST ASIA Reason Not Billable (#356.8)
"RTN","IB20P339",13,0)
 D UPDCRR ; Replace ENV CONTAMINANT RELATED with SOUTHWEST ASIA RELATED Charge Removal Reason (#350.3)
"RTN","IB20P339",14,0)
 ;
"RTN","IB20P339",15,0)
 S IBA(1)="",IBA(2)="    IB Support for SHAD/SWA Post-Install Complete",IBA(3)="" D MES^XPDUTL(.IBA) K IBA
"RTN","IB20P339",16,0)
 Q
"RTN","IB20P339",17,0)
 ;
"RTN","IB20P339",18,0)
 ;
"RTN","IB20P339",19,0)
ADDRNB ; Add Reason Not Billable of PROJECT 112/SHAD (#356.8)
"RTN","IB20P339",20,0)
 N IBA,IBJ,IBNX,IBRNB,DD,DO,DINUM,DLAYGO,DIC,DIE,DA,DR,X,Y
"RTN","IB20P339",21,0)
 ;
"RTN","IB20P339",22,0)
 S IBRNB="PROJECT 112/SHAD"
"RTN","IB20P339",23,0)
 ;
"RTN","IB20P339",24,0)
 I $O(^IBE(356.8,"B",IBRNB,0)) S IBA(1)="    >>> "_IBRNB_" Reason Not Billable (#356.8) exists, not re-added." G ADDRNBQ
"RTN","IB20P339",25,0)
 ;
"RTN","IB20P339",26,0)
 F IBJ=32:1 S IBNX=$G(^IBE(356.8,IBJ,0)) I IBNX="" S DINUM=IBJ Q  ; find next available ien, before 999
"RTN","IB20P339",27,0)
 ;
"RTN","IB20P339",28,0)
 K DD,DO S DLAYGO=356.8,DIC="^IBE(356.8,",DIC(0)="L",X=IBRNB D FILE^DICN K DIC
"RTN","IB20P339",29,0)
 I Y<1 S IBA(1)="    >>> Unable to add "_IBRNB_" Reason Not Billable (#356.8), contact Support." G ADDRNBQ
"RTN","IB20P339",30,0)
 ;
"RTN","IB20P339",31,0)
 S IBA(1)="    >>> "_IBRNB_" Reason Not Billable (#356.8) Added."
"RTN","IB20P339",32,0)
 ;
"RTN","IB20P339",33,0)
ADDRNBQ D MES^XPDUTL(.IBA)
"RTN","IB20P339",34,0)
 Q
"RTN","IB20P339",35,0)
 ;
"RTN","IB20P339",36,0)
 ;
"RTN","IB20P339",37,0)
ADDCRR ; Add Charge Removal Reason of PROJECT 112/SHAD (#350.3)
"RTN","IB20P339",38,0)
 N IBA,IBJ,IBNX,IBCRR,IBABBR,IBLMT,IBFN,DD,DO,DINUM,DLAYGO,DIC,DIE,DA,DR,X,Y
"RTN","IB20P339",39,0)
 ;
"RTN","IB20P339",40,0)
 S IBCRR="PROJECT 112/SHAD",IBABBR="SHAD",IBLMT="GENERIC"
"RTN","IB20P339",41,0)
 ;
"RTN","IB20P339",42,0)
 I $O(^IBE(350.3,"B",IBCRR,0)) S IBA(1)="    >>> "_IBCRR_" Charge Removal Reason (#350.3) exists, not re-added." G ADDCRRQ
"RTN","IB20P339",43,0)
 ;
"RTN","IB20P339",44,0)
 F IBJ=46:1 S IBNX=$G(^IBE(350.3,IBJ,0)) I IBNX="" S DINUM=IBJ Q  ; find next available ien
"RTN","IB20P339",45,0)
 ;
"RTN","IB20P339",46,0)
 K DD,DO S DLAYGO=350.3,DIC="^IBE(350.3,",DIC(0)="L",X=IBCRR D FILE^DICN S IBFN=+Y
"RTN","IB20P339",47,0)
 I Y<1 S IBA(1)="    >>> Unable to add "_IBCRR_" Charge Removal Reason (#350.3), contact Support." G ADDCRRQ
"RTN","IB20P339",48,0)
 ;
"RTN","IB20P339",49,0)
 S DIE="^IBE(350.3,",DA=+IBFN,DR=".02///"_IBABBR_";.03///"_IBLMT D ^DIE
"RTN","IB20P339",50,0)
 ;
"RTN","IB20P339",51,0)
 S IBA(1)="    >>> "_IBCRR_" Charge Removal Reason (#350.3) Added."
"RTN","IB20P339",52,0)
 ;
"RTN","IB20P339",53,0)
ADDCRRQ D MES^XPDUTL(.IBA)
"RTN","IB20P339",54,0)
 Q
"RTN","IB20P339",55,0)
 ;
"RTN","IB20P339",56,0)
 ;
"RTN","IB20P339",57,0)
UPDRNB ; Update Reason Not Billable of ENV. CONTAM. with SOUTHWEST ASIA (#356.8)
"RTN","IB20P339",58,0)
 N IBA,IBFN,IBRNBO,IBRNBN,DD,DO,DINUM,DLAYGO,DIC,DIE,DA,DR,X,Y
"RTN","IB20P339",59,0)
 ;
"RTN","IB20P339",60,0)
 S IBRNBO="ENV. CONTAM."
"RTN","IB20P339",61,0)
 S IBRNBN="SOUTHWEST ASIA"
"RTN","IB20P339",62,0)
 ;
"RTN","IB20P339",63,0)
 I $O(^IBE(356.8,"B",IBRNBN,0)) S IBA(1)="    >>> "_IBRNBN_" Reason Not Billable (#356.8) exists, not re-added." G UPDRNBQ
"RTN","IB20P339",64,0)
 ;
"RTN","IB20P339",65,0)
 S IBFN=$O(^IBE(356.8,"B",IBRNBO,0)) I 'IBFN S IBA(1)="    >>> ERROR: "_IBRNBO_" Reason Not Billable (#356.8) not found, could not be replaced, contact support." G UPDRNBQ
"RTN","IB20P339",66,0)
 ;
"RTN","IB20P339",67,0)
 S DIE="^IBE(356.8,",DA=+IBFN,DR=".01///"_IBRNBN D ^DIE
"RTN","IB20P339",68,0)
 ;
"RTN","IB20P339",69,0)
 S IBA(1)="    >>> "_IBRNBO_" Reason Not Billable (#356.8) Replaced with "_IBRNBN
"RTN","IB20P339",70,0)
 ;
"RTN","IB20P339",71,0)
UPDRNBQ D MES^XPDUTL(.IBA)
"RTN","IB20P339",72,0)
 Q
"RTN","IB20P339",73,0)
 ;
"RTN","IB20P339",74,0)
 ;
"RTN","IB20P339",75,0)
UPDCRR ; Update Charge Removal Reason of ENV CONTAMINANT RELATED with SOUTHWEST ASIA RELATED (#350.3)
"RTN","IB20P339",76,0)
 N IBA,IBFN,IBCRRO,IBCRRN,DD,DO,DINUM,DLAYGO,DIC,DIE,DA,DR,X,Y
"RTN","IB20P339",77,0)
 ;
"RTN","IB20P339",78,0)
 S IBCRRO="ENV CONTAMINANT RELATED"
"RTN","IB20P339",79,0)
 S IBCRRN="SOUTHWEST ASIA RELATED"
"RTN","IB20P339",80,0)
 ;
"RTN","IB20P339",81,0)
 I $O(^IBE(350.3,"B",IBCRRN,0)) S IBA(1)="    >>> "_IBCRRN_" Charge Removal Reason (#350.3) exists, not re-added." G UPDCRRQ
"RTN","IB20P339",82,0)
 ;
"RTN","IB20P339",83,0)
 S IBFN=$O(^IBE(350.3,"B",IBCRRO,0)) I 'IBFN S IBA(1)="    >>> ERROR: "_IBCRRO_" Charge Removal Reason (#350.3) not found, could not be replaced, contact support." G UPDCRRQ
"RTN","IB20P339",84,0)
 ;
"RTN","IB20P339",85,0)
 S DIE="^IBE(350.3,",DA=+IBFN,DR=".01///"_IBCRRN_";.02///SWA" D ^DIE
"RTN","IB20P339",86,0)
 ;
"RTN","IB20P339",87,0)
 S IBA(1)="    >>> "_IBCRRO_" Charge Removal Reason (#350.3) Replaced with "_IBCRRN
"RTN","IB20P339",88,0)
 ;
"RTN","IB20P339",89,0)
UPDCRRQ D MES^XPDUTL(.IBA)
"RTN","IB20P339",90,0)
 Q
"RTN","IB20P339",91,0)
 ;
"RTN","IB20P339",92,0)
 ;
"RTN","IB20P339",93,0)
MSG(X) ;
"RTN","IB20P339",94,0)
 N IBX S IBX=$O(IBA(999999),-1) S:'IBX IBX=1 S IBX=IBX+1
"RTN","IB20P339",95,0)
 S IBA(IBX)=$G(X)
"RTN","IB20P339",96,0)
 Q
"RTN","IBACV")
0^1^B35472344^B33359562
"RTN","IBACV",1,0)
IBACV ;WOIFO/SS-COMBAT VET UTILITIES ;7-AUG-03
"RTN","IBACV",2,0)
 ;;2.0;INTEGRATED BILLING;**234,247,275,339**;21-MAR-94;Build 2
"RTN","IBACV",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBACV",4,0)
 ;
"RTN","IBACV",5,0)
 ;To replace CL^SDCO21 with CL^IBACV that wraps out both CL^SDCO21 and $$CVEDT^DGCV
"RTN","IBACV",6,0)
CL(IBDFN,IBSDDT,IBSDOE,IBSDCLY) ;Build Classification Array
"RTN","IBACV",7,0)
 ; Input  -- DFN      Patient file IEN  
"RTN","IBACV",8,0)
 ;   SDDT     Date/Time [Optional]
"RTN","IBACV",9,0)
 ;   SDOE     Outpatient Encounter file IEN  [Optional]
"RTN","IBACV",10,0)
 ; Output -- SDCLY    Classification Array
"RTN","IBACV",11,0)
 ;    Subscripted by Class. Type file (#409.41) IEN
"RTN","IBACV",12,0)
 ;
"RTN","IBACV",13,0)
 D CL^SDCO21(IBDFN,$G(IBSDDT),$G(IBSDOE),.IBSDCLY)
"RTN","IBACV",14,0)
 Q
"RTN","IBACV",15,0)
 ;
"RTN","IBACV",16,0)
 ;returns CV status as:
"RTN","IBACV",17,0)
 ; current_CV_status^end_date^if_ever_had_CV_status
"RTN","IBACV",18,0)
CVEDT(IBDFN,IBDT) ;
"RTN","IBACV",19,0)
 N IBRET S IBRET=$$CVEDT^DGCV($G(IBDFN),$G(IBDT))
"RTN","IBACV",20,0)
 Q (+$P(IBRET,"^",3))_"^"_(+$P(IBRET,"^",2))_"^"_(+$P(IBRET,"^",1))  ;swop
"RTN","IBACV",21,0)
 ;
"RTN","IBACV",22,0)
 ;/**
"RTN","IBACV",23,0)
 ;Return the classification description of code sets for #.03 in #351.2.
"RTN","IBACV",24,0)
 ;  Input:
"RTN","IBACV",25,0)
 ; X  --  Patient class [1-ao|2-ir|3-swa|4-sc|5-mst|6-hnc|7-cv|8-shad]
"RTN","IBACV",26,0)
 ; IBCASE -- "M" - mixed case (the first letter is uppercase and others-lowercase)
"RTN","IBACV",27,0)
PATTYPE(X,IBCASE) ; */
"RTN","IBACV",28,0)
 N IBZ
"RTN","IBACV",29,0)
 S IBZ=$S(X=1:"AGENT ORANGE",X=2:"IONIZING RADIATION",X=3:"SOUTHWEST ASIA",X=4:"SERVICE CONNECTED",X=5:"MILITARY SEXUAL TRAUMA",X=6:"HEAD/NECK CANCER",X=7:"COMBAT VETERAN",X=8:"PROJECT 112/SHAD",1:"SPECIAL")
"RTN","IBACV",30,0)
 Q:$G(IBCASE)="M" $$LOWER^VALM1(IBZ)
"RTN","IBACV",31,0)
 Q IBZ
"RTN","IBACV",32,0)
 ;
"RTN","IBACV",33,0)
PATTYAB(X) ; Return External Abbreviation of Special Inpatient Billing Case Patient Type (#351.2,.03)
"RTN","IBACV",34,0)
 ; Input: 351.2, .03 internal value
"RTN","IBACV",35,0)
 N IBZ S X=$G(X)
"RTN","IBACV",36,0)
 S IBZ=$S(X=1:"AO",X=2:"IR",X=3:"SWA",X=4:"SC",X=5:"MST",X=6:"HNC",X=7:"CV",X=8:"SHAD",1:"UNK")
"RTN","IBACV",37,0)
 Q IBZ
"RTN","IBACV",38,0)
 ;
"RTN","IBACV",39,0)
 ;if Combat Vet sends e-mail to mailgroup "IB COMBAT VET RX COPAY"
"RTN","IBACV",40,0)
 ;IBDFN-patient IEN, IBDT - date, IBRXPTR - pointer to #52 file to get prescription #
"RTN","IBACV",41,0)
RXALRT(IBDFN,IBDT,IBRXPTR) ;
"RTN","IBACV",42,0)
 N IB1
"RTN","IBACV",43,0)
 S IB1=$$CVEDT(IBDFN,$G(IBDT))
"RTN","IBACV",44,0)
 I +IB1 D EMAIL(IBDFN,$G(IBDT),$P(IB1,"^",2),$G(IBRXPTR))
"RTN","IBACV",45,0)
 Q
"RTN","IBACV",46,0)
 ;sends e-mail to mail group IB COMBAT VET RX COPAY
"RTN","IBACV",47,0)
EMAIL(DFN,IBEFDT,IBEXPDT,IBRX) ;
"RTN","IBACV",48,0)
 N IBTODAY,IBPAT,IBT,IBSSN
"RTN","IBACV",49,0)
 N XMSUB,XMY,XMTEXT,XMDUZ
"RTN","IBACV",50,0)
 N Y D NOW^%DTC S Y=%\1 X ^DD("DD") S IBTODAY=Y
"RTN","IBACV",51,0)
 I +$G(DFN)>0 D
"RTN","IBACV",52,0)
 . N VADM,VA,VAERR
"RTN","IBACV",53,0)
 . D DEM^VADPT
"RTN","IBACV",54,0)
 . S IBPAT=$G(VADM(1))
"RTN","IBACV",55,0)
 . S IBSSN=$P($G(VADM(2)),"^",2)
"RTN","IBACV",56,0)
 S IBRX=$P($G(^PSRX(+$G(IBRX),0)),"^",1) ;get RX number
"RTN","IBACV",57,0)
 S:IBPAT="" IBPAT="Unknown"
"RTN","IBACV",58,0)
 S XMSUB="COMBAT VET RX COPAY REVIEW NEEDED"
"RTN","IBACV",59,0)
 S XMY("G.IB COMBAT VET RX COPAY")=""
"RTN","IBACV",60,0)
 S XMTEXT="IBT(",XMDUZ="INTEGRATED BILLING PACKAGE"
"RTN","IBACV",61,0)
 S IBT(1,0)="PATIENT: "_IBPAT
"RTN","IBACV",62,0)
 I $G(IBEXPDT)>0 S Y=IBEXPDT X ^DD("DD") S IBT(1,0)=IBT(1,0)_"  COMBAT VET until: "_Y
"RTN","IBACV",63,0)
 S IBT(2,0)="SSN: "_IBSSN
"RTN","IBACV",64,0)
 S IBT(3,0)=""
"RTN","IBACV",65,0)
 S IBT(4,0)=$S(IBRX'="":"RX#: "_IBRX,1:"")
"RTN","IBACV",66,0)
 S IBT(5,0)="RX RELEASE DATE: "_IBTODAY
"RTN","IBACV",67,0)
 S IBT(6,0)=""
"RTN","IBACV",68,0)
 S IBT(7,0)="The above patient has a Combat Veteran status. Please review this"
"RTN","IBACV",69,0)
 S IBT(8,0)="prescription to determine if the RX Copay charge should be cancelled."
"RTN","IBACV",70,0)
 S IBT(9,0)=""
"RTN","IBACV",71,0)
 D ^XMD
"RTN","IBACV",72,0)
 Q
"RTN","IBACV",73,0)
 ;
"RTN","IBACV",74,0)
 ;--------------------------------------------------------------------
"RTN","IBACV",75,0)
 ;is called from PROC^IBAMTC for each active inpatient
"RTN","IBACV",76,0)
IFCVEXP(IBDFN,IBNJDT,IB405) ;
"RTN","IBACV",77,0)
 ;Input:IBDFN1 - patient's ien in PATIENT file
"RTN","IBACV",78,0)
 ;      IBNJDT  - Nightly Job date 
"RTN","IBACV",79,0)
 ;      IB405 - ptr to #405
"RTN","IBACV",80,0)
 N IBTSTDT,IBPAT,IBZ,IBEXPIR,IBADM
"RTN","IBACV",81,0)
 S IBPAT=$$PT^IBEFUNC(IBDFN)
"RTN","IBACV",82,0)
 S (IBZ,IBEXPIR)=0
"RTN","IBACV",83,0)
 S IBZ=$$CVEDT^IBACV(IBDFN,IBNJDT)
"RTN","IBACV",84,0)
 I $P(IBZ,"^",3)=0 Q  ;patient has never been CV
"RTN","IBACV",85,0)
 S IBEXPIR=+$P(IBZ,"^",2)\1
"RTN","IBACV",86,0)
 I IBEXPIR>IBNJDT Q  ;expires in the future
"RTN","IBACV",87,0)
 ;get last date when Nightly job checked CV status for inpatients
"RTN","IBACV",88,0)
 S IBTSTDT=$$XTMPLST()
"RTN","IBACV",89,0)
 ;if ^XTMP is not there then make the last CV check date as TODAY-7
"RTN","IBACV",90,0)
 I IBTSTDT=0 S IBTSTDT=$$CHNGDATE^IBAHVE3(IBNJDT,-7) D SETXTMP0(IBTSTDT)
"RTN","IBACV",91,0)
 S IBADM=+$G(^DGPM(IB405,0))\1 ;admission/movement date
"RTN","IBACV",92,0)
 I IBTSTDT'<IBNJDT Q
"RTN","IBACV",93,0)
 ;check for all the days since the last check date thru today
"RTN","IBACV",94,0)
 F  D  Q:(IBTSTDT'<IBNJDT)!(IBTSTDT=IBEXPIR)
"RTN","IBACV",95,0)
 . S IBTSTDT=$$CHNGDATE^IBAHVE3(IBTSTDT,+1) ;next date
"RTN","IBACV",96,0)
 . ;quit if the date is before the admission
"RTN","IBACV",97,0)
 . I IBTSTDT<IBADM Q
"RTN","IBACV",98,0)
 . ;send alert if CV expires this day
"RTN","IBACV",99,0)
 . I IBEXPIR=IBTSTDT D SETXTPM(IBDFN,IBTSTDT,IBEXPIR,IBADM,IBPAT)
"RTN","IBACV",100,0)
 Q
"RTN","IBACV",101,0)
 ;
"RTN","IBACV",102,0)
XTMPLST() ;get the last CV check date in ^XTMP
"RTN","IBACV",103,0)
 Q +$P($G(^XTMP("IBCVEXPDT",0)),"^",2)
"RTN","IBACV",104,0)
 ;
"RTN","IBACV",105,0)
SETXTPM(IBDFN,IBCHKDT,IBEXP,IBADMIS,IBPT) ;save info in ^XTMP
"RTN","IBACV",106,0)
 ;Input:IBDFN - patient's ien in PATIENT file
"RTN","IBACV",107,0)
 ;  IBCHKDT - check date
"RTN","IBACV",108,0)
 ;  IBEXP - CV expiration date
"RTN","IBACV",109,0)
 ;  IBADMIS - admission/movement date
"RTN","IBACV",110,0)
 ;  IBPT - patient's info
"RTN","IBACV",111,0)
 S ^XTMP("IBCVEXPDT",IBDFN)=IBDFN_"^"_IBCHKDT_"^"_IBEXP_"^"_IBADMIS_"^"_$P(IBPT,"^",1,2)
"RTN","IBACV",112,0)
 Q
"RTN","IBACV",113,0)
 ;
"RTN","IBACV",114,0)
 ;is called from IBAMTC after PROC^IBAMTC and sends e-mail alert 
"RTN","IBACV",115,0)
 ;with the list of inpatient's with CV expired
"RTN","IBACV",116,0)
CVEXMAIL(IBDT) ;send all e-mails
"RTN","IBACV",117,0)
 N Y,IBT,IBZ1,IBZ2,IBC,IBT,IBTOTAL
"RTN","IBACV",118,0)
 S IBC=0,IBTOTAL=0
"RTN","IBACV",119,0)
 ;loop thru ^XTMP
"RTN","IBACV",120,0)
 S IBZ1=0 F  S IBZ1=$O(^XTMP("IBCVEXPDT",IBZ1)) Q:+IBZ1=0  D
"RTN","IBACV",121,0)
 . D HEADER
"RTN","IBACV",122,0)
 . S IBZ2=$G(^XTMP("IBCVEXPDT",IBZ1))
"RTN","IBACV",123,0)
 . I IBZ2'="" S IBTOTAL=IBTOTAL+1 D MKEMAIL($P(IBZ2,U,3),$P(IBZ2,U,4),$P(IBZ2,U,5),$P(IBZ2,U,6))
"RTN","IBACV",124,0)
 I IBC>0 D
"RTN","IBACV",125,0)
 . D FOOTER(IBTOTAL)
"RTN","IBACV",126,0)
 . D SEND^IBACVA2
"RTN","IBACV",127,0)
 D SETXTMP0(IBDT)
"RTN","IBACV",128,0)
 Q
"RTN","IBACV",129,0)
 ;
"RTN","IBACV",130,0)
HEADER ;prints a header for the e-mail
"RTN","IBACV",131,0)
 I IBC>0 Q
"RTN","IBACV",132,0)
 S XMSUB="INPATIENTS' COMBAT VET STATUS EXPIRED"
"RTN","IBACV",133,0)
 N IBX S IBX="",$P(IBX,"=",70)=""
"RTN","IBACV",134,0)
 S IBC=IBC+1,IBT(IBC)="The following patients whose records indicate that they had CV status, were"
"RTN","IBACV",135,0)
 S IBC=IBC+1,IBT(IBC)="admitted for inpatient care with CV status, and their CV status has expired"
"RTN","IBACV",136,0)
 S IBC=IBC+1,IBT(IBC)="during their stays. Please check their CV exp date again before adjusting"
"RTN","IBACV",137,0)
 S IBC=IBC+1,IBT(IBC)="their billings accordingly."
"RTN","IBACV",138,0)
 S IBC=IBC+1,IBT(IBC)=""
"RTN","IBACV",139,0)
 S IBC=IBC+1,IBT(IBC)=$$LRJ("Patient NAME",23)_$$LRJ("SSN",14)_$$LRJ("CV exp. date",20)_$$LRJ("Date of admission",20)
"RTN","IBACV",140,0)
 S IBC=IBC+1,IBT(IBC)=IBX
"RTN","IBACV",141,0)
 Q
"RTN","IBACV",142,0)
FOOTER(IBTOTAL) ;
"RTN","IBACV",143,0)
 S IBC=IBC+1,IBT(IBC)=""
"RTN","IBACV",144,0)
 S IBC=IBC+1,IBT(IBC)="Total: "_IBTOTAL_" patient(s)"
"RTN","IBACV",145,0)
 Q
"RTN","IBACV",146,0)
 ;
"RTN","IBACV",147,0)
MKEMAIL(IBEXP,IBADM,IBNAME,IBSSN) ;
"RTN","IBACV",148,0)
 ;send e-mail alert if CV does expire today
"RTN","IBACV",149,0)
 N Y
"RTN","IBACV",150,0)
 S Y=IBEXP D DD^%DT S IBEXP=Y
"RTN","IBACV",151,0)
 S Y=IBADM D DD^%DT S IBADM=Y
"RTN","IBACV",152,0)
 S IBC=IBC+1,IBT(IBC)=$$LRJ($E(IBNAME,1,21),23)_$$LRJ(IBSSN,14)_$$LRJ(IBEXP,20)_$$LRJ(IBADM,20)
"RTN","IBACV",153,0)
 Q
"RTN","IBACV",154,0)
 ;
"RTN","IBACV",155,0)
SETXTMP0(IBDT) ;set the new "last CV check date" in ^XTMP
"RTN","IBACV",156,0)
 N IBPURGDT S IBPURGDT=+$$CHNGDATE^IBAHVE3(IBDT,+7)
"RTN","IBACV",157,0)
 K ^XTMP("IBCVEXPDT")
"RTN","IBACV",158,0)
 S ^XTMP("IBCVEXPDT",0)=IBPURGDT_"^"_IBDT_"^LAST DATE NIGHTLY JOB CHECKED COMBAT VET EXPIRATION FOR INPATIENTS"
"RTN","IBACV",159,0)
 Q
"RTN","IBACV",160,0)
 ;
"RTN","IBACV",161,0)
 ;---
"RTN","IBACV",162,0)
 ;adds spaces on right/left or truncates to make return string IBLEN characters long
"RTN","IBACV",163,0)
 ;IBST- original string
"RTN","IBACV",164,0)
 ;IBLEN - desired length
"RTN","IBACV",165,0)
 ;IBCHR -character (default = SPACE)
"RTN","IBACV",166,0)
 ;IBSIDE - on which side to add characters (default = RIGHT)
"RTN","IBACV",167,0)
LRJ(IBST,IBLEN,IBCHR,IBSIDE) ;
"RTN","IBACV",168,0)
 N Y S $P(Y,$S($L($G(IBCHR)):IBCHR,1:" "),$S(IBLEN-$L(IBST)<0:1,1:IBLEN-$L(IBST)+1))=""
"RTN","IBACV",169,0)
 Q $E($S($G(IBSIDE)="L":Y_IBST,1:IBST_Y),1,IBLEN)
"RTN","IBACV",170,0)
 ;---
"RTN","IBACV",171,0)
 ;
"RTN","IBAMTD")
0^2^B19206296^B18809071
"RTN","IBAMTD",1,0)
IBAMTD ;ALB/CPM - MOVEMENT EVENT DRIVER INTERFACE ;21-OCT-91
"RTN","IBAMTD",2,0)
V ;;2.0;INTEGRATED BILLING;**45,52,93,115,132,153,164,156,234,312,339**;21-MAR-94;Build 2
"RTN","IBAMTD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBAMTD",4,0)
 ;
"RTN","IBAMTD",5,0)
 I $G(DGPMA)="",$G(DGPMP)="" Q
"RTN","IBAMTD",6,0)
 ;
"RTN","IBAMTD",7,0)
EN ; Process events from the Movement Event Driver.
"RTN","IBAMTD",8,0)
 ;
"RTN","IBAMTD",9,0)
 ;S XRTL=$ZU(0),XRTN="IBAMTD-1" D T0^%ZOSV ;start rt clock
"RTN","IBAMTD",10,0)
 ;
"RTN","IBAMTD",11,0)
 Q:+$$SWSTAT^IBBAPI()                                      ;IB*2.0*312
"RTN","IBAMTD",12,0)
 ;
"RTN","IBAMTD",13,0)
 ; -- add admissions to claims tracking
"RTN","IBAMTD",14,0)
 D INP^IBTRKR
"RTN","IBAMTD",15,0)
 ;
"RTN","IBAMTD",16,0)
 ; -- update Transfer Pricing
"RTN","IBAMTD",17,0)
 D ^IBATEI
"RTN","IBAMTD",18,0)
 ;
"RTN","IBAMTD",19,0)
 ; -- check for Long Term Care
"RTN","IBAMTD",20,0)
 N IBALTC D EN^IBAECI Q:IBALTC
"RTN","IBAMTD",21,0)
 ;
"RTN","IBAMTD",22,0)
 ; - process billing for CHAMPVA patients
"RTN","IBAMTD",23,0)
 I $$CVA^IBAUTL5(DFN) D PROC^IBACVA G END
"RTN","IBAMTD",24,0)
 ;
"RTN","IBAMTD",25,0)
 ; - unflag continuous patients
"RTN","IBAMTD",26,0)
 S IBASIH=$$ASIH^IBAUTL5(DGPMA)
"RTN","IBAMTD",27,0)
 I DGPMP="",($P(DGPMA,"^",2)=3!(IBASIH)),$O(^IBE(351.1,"B",DFN,0)),$D(^IBE(351.1,+$O(^(0)),0)),'$P(^(0),"^",2) D UNFLAG^IBAMTD1
"RTN","IBAMTD",28,0)
 ;
"RTN","IBAMTD",29,0)
 ; - update case record on discharge for special inpatient episodes
"RTN","IBAMTD",30,0)
 S IBA=$P($S(DGPMA="":DGPMP,1:DGPMA),"^",14)
"RTN","IBAMTD",31,0)
 I $O(^IBE(351.2,"AC",IBA,0)),DGPMP="",($P(DGPMA,"^",2)=3!(IBASIH)) D DIS^IBAMTI(IBA) G END
"RTN","IBAMTD",32,0)
 ;
"RTN","IBAMTD",33,0)
 ; - quit if patient was last Means Test copay patient before adm. date
"RTN","IBAMTD",34,0)
 S IBLC=$$BILST^DGMTUB(DFN) G:'IBLC END I DGPMA="",$P(DGPMP,"^",2)=1,IBLC<$P(+DGPMP,".") G END
"RTN","IBAMTD",35,0)
 D ORIG^IBAMTC I IBLC<$P(IBADMDT,".") G END
"RTN","IBAMTD",36,0)
 ;
"RTN","IBAMTD",37,0)
 ; - if editing or deleting a movement, send bulletin; delete
"RTN","IBAMTD",38,0)
 ;   case record in #351.2 for deleted admissions
"RTN","IBAMTD",39,0)
 I DGPMP]"" S IBJOB=3 D  G END
"RTN","IBAMTD",40,0)
 .D ^IBAMTBU
"RTN","IBAMTD",41,0)
 .I DGPMA="",$P(DGPMP,"^",2)=1,$O(^IBE(351.2,"AC",IBA,0)) S DA=$O(^(0)),DIK="^IBE(351.2," D ^DIK K DA,DIK
"RTN","IBAMTD",42,0)
 ;
"RTN","IBAMTD",43,0)
 ; - add a case record for admission of special (ao/ir/swa/mst/hnc/shad/cv) inpatients
"RTN","IBAMTD",44,0)
 I $P(DGPMA,"^",2)=1 D  G END
"RTN","IBAMTD",45,0)
 .N IBCLSF D CL^IBACV(DFN,IBADMDT,"",.IBCLSF)
"RTN","IBAMTD",46,0)
 .S IBCLSF=$O(IBCLSF(0)) I IBCLSF,(IBCLSF<5) D ADM^IBAMTI(DFN,IBA,IBCLSF) Q
"RTN","IBAMTD",47,0)
 .I $P($$GETSTAT^DGMSTAPI(DFN,IBADMDT),U,2)="Y" S IBCLSF=5,IBCLSF(5)="" D ADM^IBAMTI(DFN,IBA,IBCLSF) Q
"RTN","IBAMTD",48,0)
 .I IBCLSF=6 D ADM^IBAMTI(DFN,IBA,IBCLSF) ; hnc
"RTN","IBAMTD",49,0)
 .I IBCLSF=8 D ADM^IBAMTI(DFN,IBA,IBCLSF) ; shad
"RTN","IBAMTD",50,0)
 .I IBCLSF=7 D ADM^IBAMTI(DFN,IBA,IBCLSF) ; CV has the lowest priority
"RTN","IBAMTD",51,0)
 ;
"RTN","IBAMTD",52,0)
 ; - if adding a retro-active transfer or spec. transfer, send bulletin
"RTN","IBAMTD",53,0)
 I ($P(DGPMA,"^",2)=2!($P(DGPMA,"^",2)=6)),+DGPMA<DT S IBJOB=6 D ^IBAMTBU
"RTN","IBAMTD",54,0)
 ;
"RTN","IBAMTD",55,0)
 ; - process discharges and ASIH movements only
"RTN","IBAMTD",56,0)
 I $P(DGPMA,"^",2)'=3,'IBASIH G END
"RTN","IBAMTD",57,0)
 ;
"RTN","IBAMTD",58,0)
 W:'$G(DGQUIET) !,"Billing Means Test charges...."
"RTN","IBAMTD",59,0)
 S (IBY,Y)=1,IBEVOLD=0,IBJOB=2,IBWHER=1,IBDISDT=+DGPMA\1,IBAFY=$$FY^IBOUTL(DT)
"RTN","IBAMTD",60,0)
 D SITE^IBAUTL I Y<1 S IBY=Y G END1
"RTN","IBAMTD",61,0)
 D SERV^IBAUTL2 G:IBY<1 END1
"RTN","IBAMTD",62,0)
 S IBWHER=24 D CLOCK^IBAUTL3 G:IBY<1 END1
"RTN","IBAMTD",63,0)
 ;
"RTN","IBAMTD",64,0)
 ; - Create an Outpat Copay for discharge with Observation Speciality
"RTN","IBAMTD",65,0)
 I $$MVT^DGPMOBS(IBA) D OBS^IBECEAU5 G:IBY<1 END1 G END
"RTN","IBAMTD",66,0)
 ;
"RTN","IBAMTD",67,0)
 ; - handle the variations on the basis of the event record
"RTN","IBAMTD",68,0)
 D EVFIND^IBAUTL3 ; sets IBEVDA to IEN of event record, or to 0 if none
"RTN","IBAMTD",69,0)
 S IBWHER=25 D @$S(IBEVDA:"EVT",1:"NOEVT")
"RTN","IBAMTD",70,0)
 ;
"RTN","IBAMTD",71,0)
 ; - kill variables and close
"RTN","IBAMTD",72,0)
END1 I IBY<1 S IBDUZ=DUZ D ^IBAERR1 K IBDUZ
"RTN","IBAMTD",73,0)
 W:'$G(DGQUIET) "completed."
"RTN","IBAMTD",74,0)
END D KILL1^IBAMTC
"RTN","IBAMTD",75,0)
 ;
"RTN","IBAMTD",76,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBAMTD" D T1^%ZOSV ;stop rt clock
"RTN","IBAMTD",77,0)
 ;
"RTN","IBAMTD",78,0)
 Q
"RTN","IBAMTD",79,0)
 ;
"RTN","IBAMTD",80,0)
EVT ; Billable admission event on record.
"RTN","IBAMTD",81,0)
 ; I +$$MVT^DGPMOBS(IBA) S IBDT=IBDISDT D OE^IBAMTBU1,CLOSE1 G EVTQ
"RTN","IBAMTD",82,0)
 I IBEVCAL'<IBDISDT S IBY="-1^IB033" G EVTQ
"RTN","IBAMTD",83,0)
 I IBEVCAL S X1=IBEVCAL,X2=1 D C^%DTC S IBBDT=%H I X=IBDISDT S IBDT=IBEVCAL D PASS^IBAUTL5,CLOSE1:IBY>0 G EVTQ
"RTN","IBAMTD",84,0)
 I 'IBEVCAL S X=IBEVDT D H^%DTC S IBBDT=%H
"RTN","IBAMTD",85,0)
 S X=IBDISDT D H^%DTC S IBEDT=%H-1
"RTN","IBAMTD",86,0)
 I IBCLDA S %H=IBBDT D YMD^%DTC S IBDT=X D COUNT
"RTN","IBAMTD",87,0)
 D ^IBAUTL4,CLOSE:IBY>0
"RTN","IBAMTD",88,0)
EVTQ Q
"RTN","IBAMTD",89,0)
 ;
"RTN","IBAMTD",90,0)
NOEVT ; No billable event on record since admission date.
"RTN","IBAMTD",91,0)
 ; I +$$MVT^DGPMOBS(IBA) W:'$G(DGQUIET) " patient not billed (adm. for O&E)... " G NOEVTQ ; admitted for Observation & Examination
"RTN","IBAMTD",92,0)
 S (IBCUR,VAIP("D"))=+$G(^DGPM(IBA,0)) D IN5^VADPT S IBBS=$$SECT^IBAUTL5(+VAIP(8))
"RTN","IBAMTD",93,0)
 I 'IBASIH,'IBBS G NOEVTQ ; not in billable bedsection
"RTN","IBAMTD",94,0)
 I 'IBASIH,IBCUR\1=IBDISDT S IBDT=IBDISDT D:IBBS ^IBAMTD1 G NOEVTQ
"RTN","IBAMTD",95,0)
 S X=IBADMDT\1 D H^%DTC S IBBDT=%H
"RTN","IBAMTD",96,0)
 I IBASIH S VAIP("D")=IBADMDT,IBSAVBS=IBBS D IN5^VADPT S IBBS=$$SECT^IBAUTL5(+VAIP(8)) I 'IBBS S X=IBCUR D H^%DTC S IBBDT=%H I IBCUR\1=IBDISDT S IBDT=IBDISDT,IBBS=IBSAVBS D:IBBS ^IBAMTD1 G NOEVTQ
"RTN","IBAMTD",97,0)
 D LAST^IBAUTL5
"RTN","IBAMTD",98,0)
 S X=IBDISDT D H^%DTC S IBEDT=%H-1
"RTN","IBAMTD",99,0)
 I IBCLDA S %H=IBBDT D YMD^%DTC S IBDT=X D COUNT
"RTN","IBAMTD",100,0)
 D ^IBAUTL4,CLOSE:IBY>0
"RTN","IBAMTD",101,0)
NOEVTQ Q
"RTN","IBAMTD",102,0)
 ;
"RTN","IBAMTD",103,0)
COUNT ; Find number of days on clock.    Input:  IBDT
"RTN","IBAMTD",104,0)
 S X1=IBDT,X2=IBCLDT D ^%DTC S IBCLCT=X Q
"RTN","IBAMTD",105,0)
 ;
"RTN","IBAMTD",106,0)
CLOSE ; Close out charges, events; update clocks (at discharge: tag CLOSE1)
"RTN","IBAMTD",107,0)
 I $G(IBCHPDA) S IBNOS=IBCHPDA D FILER^IBAUTL5 G:IBY<1 CLOSEQ
"RTN","IBAMTD",108,0)
 I $G(IBCHCDA) S IBNOS=IBCHCDA D FILER^IBAUTL5 G:IBY<1 CLOSEQ
"RTN","IBAMTD",109,0)
 I IBCLDA D CLUPD^IBAUTL3
"RTN","IBAMTD",110,0)
CLOSE1 I IBEVDA,$D(IBDT) S IBEVCLD=IBDT D EVCLOSE^IBAUTL3
"RTN","IBAMTD",111,0)
CLOSEQ Q
"RTN","IBAMTI")
0^3^B27252728^B27257826
"RTN","IBAMTI",1,0)
IBAMTI ;ALB/CPM - SPECIAL INPATIENT BILLING CASES ; 11-AUG-93
"RTN","IBAMTI",2,0)
 ;;2.0;INTEGRATED BILLING;**52,132,153,156,234,247,339**;21-MAR-94;Build 2
"RTN","IBAMTI",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBAMTI",4,0)
 ;
"RTN","IBAMTI",5,0)
ADM(DFN,IBPM,IBCL) ; Create a new case record upon admission
"RTN","IBAMTI",6,0)
 ;  Input:     DFN  --  Pointer to the patient in file #2
"RTN","IBAMTI",7,0)
 ;            IBPM  --  Pointer to the adm movement in file #405
"RTN","IBAMTI",8,0)
 ;            IBCL  --  Patient class [1-ao|2-ir|3-sc|4-swa|5-mst|6-hnc|7-cv|8-shad]
"RTN","IBAMTI",9,0)
 I '$G(DFN)!'$G(IBPM)!'$G(IBCL) G ADMQ
"RTN","IBAMTI",10,0)
 N DA,DIC,DIE,DR,IBC,X,Y
"RTN","IBAMTI",11,0)
 ;
"RTN","IBAMTI",12,0)
 ; - need to swap the input of 3 (SC) to 4, and 4 (EC) to 3
"RTN","IBAMTI",13,0)
 S IBCL=$S(IBCL=3:4,IBCL=4:3,IBCL=5:5,1:IBCL)
"RTN","IBAMTI",14,0)
 ;
"RTN","IBAMTI",15,0)
 K DD,DO S DIC="^IBE(351.2,",DIC(0)="",X=DFN D FILE^DICN S IBC=+Y
"RTN","IBAMTI",16,0)
 S DR=".02////"_IBPM_";.03////"_IBCL_";.05////1;2.01////"_DUZ_";2.02///NOW;2.03////"_DUZ_";2.04///NOW"
"RTN","IBAMTI",17,0)
 S DA=IBC,DIE=DIC D ^DIE
"RTN","IBAMTI",18,0)
 D BULL(1,IBCL) ; send admission bulletin
"RTN","IBAMTI",19,0)
ADMQ Q
"RTN","IBAMTI",20,0)
 ;
"RTN","IBAMTI",21,0)
DIS(IBPM) ; Update the case record upon discharge
"RTN","IBAMTI",22,0)
 ;  Input:    IBPM  --  Pointer to the adm movement in file #405
"RTN","IBAMTI",23,0)
 N DA,DIE,DR,IBC
"RTN","IBAMTI",24,0)
 S IBC=$O(^IBE(351.2,"AC",+$G(IBPM),0)) I 'IBC G DISQ
"RTN","IBAMTI",25,0)
 S DR=".05////2;.06////"_DT_";2.03////"_DUZ_";2.04///NOW"
"RTN","IBAMTI",26,0)
 S DA=IBC,DIE="^IBE(351.2," D ^DIE
"RTN","IBAMTI",27,0)
 D BULL(2,+$P($G(^IBE(351.2,IBC,0)),"^",3)) ; send discharge bulletin
"RTN","IBAMTI",28,0)
DISQ Q
"RTN","IBAMTI",29,0)
 ;
"RTN","IBAMTI",30,0)
BGJ ; Perform nightly background monitoring of all case records.
"RTN","IBAMTI",31,0)
 N IBC,IBCD,IBNUM
"RTN","IBAMTI",32,0)
 S IBC=0 F  S IBC=$O(^IBE(351.2,IBC)) Q:'IBC  S IBCD=$G(^(IBC,0)) D
"RTN","IBAMTI",33,0)
 .Q:$P(IBCD,"^",8)  ; case has been dispositioned
"RTN","IBAMTI",34,0)
 .Q:$P(IBCD,"^",5)=1  ; patient still admitted
"RTN","IBAMTI",35,0)
 .I '$P(IBCD,"^",6) S $P(^IBE(351.2,IBC,0),"^",6)=DT Q  ; no disch date
"RTN","IBAMTI",36,0)
 .S IBNUM=$$FMDIFF^XLFDT(DT,$P(IBCD,"^",6))
"RTN","IBAMTI",37,0)
 .Q:IBNUM<45  ; still time to disposition the case
"RTN","IBAMTI",38,0)
 .D NOTICE(IBNUM,+IBCD,+$P(IBCD,"^",2),+$P(IBCD,"^",3)) ; send reminder to disposition
"RTN","IBAMTI",39,0)
 Q
"RTN","IBAMTI",40,0)
 ;
"RTN","IBAMTI",41,0)
BULL(IBEV,IBCL) ; Send a bulletin at admission and discharge.
"RTN","IBAMTI",42,0)
 ;  Input:    IBEV  --  Event [1:admission|2:discharge]
"RTN","IBAMTI",43,0)
 ;            IBCL  --  Patient class [1-ao|2-ir|3-swa|4-sc|5-mst|6-hnc|7-cv|8-shad]
"RTN","IBAMTI",44,0)
 K IBT S IBPT=$$PT^IBEFUNC(DFN)
"RTN","IBAMTI",45,0)
 S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - "_$$UCCL(IBCL)_$S($G(IBEV)=1:" ADM",1:" DISCH")
"RTN","IBAMTI",46,0)
 S IBT(1)="The following Means Test copay "_$$LCCL(IBCL)_" patient was just "_$S($G(IBEV)=1:"admitted:",1:"discharged:")
"RTN","IBAMTI",47,0)
 S IBT(2)=" " S IBC=2
"RTN","IBAMTI",48,0)
 S IBDUZ=DUZ D PAT^IBAERR1
"RTN","IBAMTI",49,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBAMTI",50,0)
 S IBC=IBC+1,IBT(IBC)=$S($G(IBEV)=1:"Please note that a special inpatient case record has been created for",1:"Please note that you have 45 days to determine if this episode of care")
"RTN","IBAMTI",51,0)
 S IBC=IBC+1,IBT(IBC)=$S($G(IBEV)=1:"this admission.",1:"should be billed.")
"RTN","IBAMTI",52,0)
 ;---CV
"RTN","IBAMTI",53,0)
 I IBCL=7,$G(IBEV)=2 D 
"RTN","IBAMTI",54,0)
 . N Y,X,IBZ,IBFL,IBEXP,IBTODAY,IBDIS
"RTN","IBAMTI",55,0)
 . S (Y,X,IBZ,IBFL,IBEXP,IBTODAY,IBDIS)=0
"RTN","IBAMTI",56,0)
 . D NOW^%DTC S IBTODAY=%\1
"RTN","IBAMTI",57,0)
 . S IBZ=$$CVEDT^IBACV(DFN,IBTODAY)
"RTN","IBAMTI",58,0)
 . I +IBZ=1 Q  ;patient is still CV
"RTN","IBAMTI",59,0)
 . S IBEXP=+$P(IBZ,"^",2)\1
"RTN","IBAMTI",60,0)
 . S IBDIS=+$G(^DGPM(+$P($G(^DGPM(+$G(IBPM),0)),"^",17),0))\1
"RTN","IBAMTI",61,0)
 . ; if CV expired during inpatient stay
"RTN","IBAMTI",62,0)
 . I IBDIS>0,IBEXP'>IBDIS D
"RTN","IBAMTI",63,0)
 . . S IBFL=1
"RTN","IBAMTI",64,0)
 . . S Y=IBEXP D DD^%DT S IBEXP=Y
"RTN","IBAMTI",65,0)
 . . S IBC=IBC+1,IBT(IBC)=""
"RTN","IBAMTI",66,0)
 . . S IBC=IBC+1,IBT(IBC)="WARNING: Patient's CV status has expired on "_IBEXP_" during the"
"RTN","IBAMTI",67,0)
 . . S IBC=IBC+1,IBT(IBC)="inpatient stay. Billing needs to be adjusted accordingly."
"RTN","IBAMTI",68,0)
 . ; if discharge move was entered after actual discharge date
"RTN","IBAMTI",69,0)
 . I IBFL=0 D
"RTN","IBAMTI",70,0)
 . . S Y=IBEXP D DD^%DT S IBEXP=Y
"RTN","IBAMTI",71,0)
 . . S IBC=IBC+1,IBT(IBC)=""
"RTN","IBAMTI",72,0)
 . . S IBC=IBC+1,IBT(IBC)="WARNING: Patient CV status has expired on "_IBEXP_""
"RTN","IBAMTI",73,0)
 ;---
"RTN","IBAMTI",74,0)
 I IBEV=2 D
"RTN","IBAMTI",75,0)
 .I '$$BIL^DGMTUB(DFN,DT) S IBC=IBC+1,IBT(IBC)=" ",IBC=IBC+1,IBT(IBC)="Note: This patient, who was MT copay at admission, is no longer MT billable."
"RTN","IBAMTI",76,0)
 .I $$BFO^IBECEAU(DFN,+$G(^DGPM(IBPM,0))\1) S IBC=IBC+1,IBT(IBC)=" ",IBC=IBC+1,IBT(IBC)="Note: This patient was billed the outpatient copayment at admission."
"RTN","IBAMTI",77,0)
 D SEND^IBACVA2
"RTN","IBAMTI",78,0)
 Q
"RTN","IBAMTI",79,0)
 ;
"RTN","IBAMTI",80,0)
NOTICE(IBNUM,DFN,IBPM,IBCL) ; Notice to disposition billing case
"RTN","IBAMTI",81,0)
 ;  Input:   IBNUM  --  Number of days since discharge
"RTN","IBAMTI",82,0)
 ;             DFN  --  Pointer to the patient in file #2
"RTN","IBAMTI",83,0)
 ;            IBPM  --  Pointer to the admission in file #405
"RTN","IBAMTI",84,0)
 ;            IBCL  --  Patient class [1-ao|2-ir|3-swa|4-sc|5-mst|6-hnc|7-cv|8-shad]
"RTN","IBAMTI",85,0)
 ;
"RTN","IBAMTI",86,0)
 Q:IBNUM#15  ; send notice every 15 days only
"RTN","IBAMTI",87,0)
 N IBC K IBT S IBPT=$$PT^IBEFUNC(DFN)
"RTN","IBAMTI",88,0)
 S XMSUB="NOTICE TO DISPOSITION SPECIAL INPATIENT BILLING CASE"
"RTN","IBAMTI",89,0)
 S IBT(1)="The case record for this Means Test copay "_$$LCCL(IBCL)_" patient"
"RTN","IBAMTI",90,0)
 S IBT(2)="is now "_IBNUM_" days old and should be dispositioned:"
"RTN","IBAMTI",91,0)
 S IBT(3)=" " S IBC=3
"RTN","IBAMTI",92,0)
 S IBDUZ=DUZ D PAT^IBAERR1
"RTN","IBAMTI",93,0)
 S Y=+$G(^DGPM(+$G(IBPM),0)) D DD^%DT
"RTN","IBAMTI",94,0)
 S IBC=IBC+1,IBT(IBC)=" Adm Date: "_Y
"RTN","IBAMTI",95,0)
 S Y=+$G(^DGPM(+$P($G(^DGPM(+$G(IBPM),0)),"^",17),0)) D DD^%DT
"RTN","IBAMTI",96,0)
 S IBC=IBC+1,IBT(IBC)="Disc Date: "_Y
"RTN","IBAMTI",97,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBAMTI",98,0)
 S IBC=IBC+1,IBT(IBC)="Please determine if this episode of care should be billed, and use"
"RTN","IBAMTI",99,0)
 S IBC=IBC+1,IBT(IBC)="the Cancel/Edit/Add Patient Charges option to add charges, or the"
"RTN","IBAMTI",100,0)
 S IBC=IBC+1,IBT(IBC)="Disposition Special Inpatient Billing Cases option to enter the reason"
"RTN","IBAMTI",101,0)
 S IBC=IBC+1,IBT(IBC)="for not billing."
"RTN","IBAMTI",102,0)
 D SEND^IBACVA2
"RTN","IBAMTI",103,0)
 Q
"RTN","IBAMTI",104,0)
 ;
"RTN","IBAMTI",105,0)
UCCL(X) ; Return the upper case classification description.
"RTN","IBAMTI",106,0)
 ;  Input:       X  --  Patient class [1-ao|2-ir|3-swa|4-sc|5-mst|6-hnc|7-cv|8-shad]
"RTN","IBAMTI",107,0)
 Q $S('$G(X):"SPECIAL",1:$$PATTYPE^IBACV(X))
"RTN","IBAMTI",108,0)
 ;
"RTN","IBAMTI",109,0)
LCCL(X) ; Return the lower case classification description.
"RTN","IBAMTI",110,0)
 ;  Input:       X  --  Patient class [1-ao|2-ir|3-swa|4-sc|5-mst|6-hnc|7-cv|8-shad]
"RTN","IBAMTI",111,0)
 Q $S('$G(X):"Special",1:$$PATTYPE^IBACV(X,"M"))
"RTN","IBAMTI",112,0)
 ;
"RTN","IBAMTI1")
0^4^B17944489^B18623119
"RTN","IBAMTI1",1,0)
IBAMTI1 ;ALB/CPM - SPECIAL INPATIENT BILLING CASES (CON'T.) ; 11-AUG-93
"RTN","IBAMTI1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,132,156,199,234,339**;21-MAR-94;Build 2
"RTN","IBAMTI1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBAMTI1",4,0)
 ;
"RTN","IBAMTI1",5,0)
DISP ; Manually disposition a case record.
"RTN","IBAMTI1",6,0)
 W !!,"This option is used to disposition case records for special inpatient"
"RTN","IBAMTI1",7,0)
 W !,"episodes of care which are not to be billed. (AO/IR/SWA/SC/MST/HNC/CV/SHAD)"
"RTN","IBAMTI1",8,0)
 W !,"After identifying the case, please enter the reason (up to 80 characters)"
"RTN","IBAMTI1",9,0)
 W !,"for non-billing."
"RTN","IBAMTI1",10,0)
 ;
"RTN","IBAMTI1",11,0)
 ; - main processing loop
"RTN","IBAMTI1",12,0)
 S IBQ=0 F  W ! D SEL Q:IBQ
"RTN","IBAMTI1",13,0)
 K IBQ
"RTN","IBAMTI1",14,0)
 Q
"RTN","IBAMTI1",15,0)
 ;
"RTN","IBAMTI1",16,0)
SEL ; Select an inpatient billing case and enter the reason for non-billing.
"RTN","IBAMTI1",17,0)
 S DIC="^IBE(351.2,",DIC(0)="QEAMZ",DIC("A")="Select PATIENT: "
"RTN","IBAMTI1",18,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBAMTI1",19,0)
 D ^DIC S IBC=+Y I Y<0 S IBQ=1 G SELQ
"RTN","IBAMTI1",20,0)
 I $P(Y(0),"^",5)=1 W !!,"You must wait until this patient has been discharged to disposition the case." G SELQ
"RTN","IBAMTI1",21,0)
 I $P(Y(0),"^",4) S IBBILLED=1 W !!,"Please note that it appears as if this case has been billed."
"RTN","IBAMTI1",22,0)
 I $P(Y(0),"^",8) W !!,"Please note that this case has already been dispositioned."
"RTN","IBAMTI1",23,0)
 ;
"RTN","IBAMTI1",24,0)
 ; - display case record
"RTN","IBAMTI1",25,0)
 W ! D DSPL(IBC)
"RTN","IBAMTI1",26,0)
 ;
"RTN","IBAMTI1",27,0)
 ; - allow user update of record
"RTN","IBAMTI1",28,0)
 S IBHC=$P(Y(0),"^",7),IBHR=$G(^IBE(351.2,IBC,1))
"RTN","IBAMTI1",29,0)
 S DIE="^IBE(351.2,",DA=IBC,DR=$S($G(IBBILLED):".07;",1:"")_1 D ^DIE
"RTN","IBAMTI1",30,0)
 ;
"RTN","IBAMTI1",31,0)
 S IBNC=$P(^IBE(351.2,IBC,0),"^",7),IBNR=$G(^IBE(351.2,IBC,1))
"RTN","IBAMTI1",32,0)
 I IBHC=IBNC,IBHR=IBNR W !!,"No changes made to the case record!" G SELQ
"RTN","IBAMTI1",33,0)
 I IBNR]"" W !!,"This case record will be dispositioned."
"RTN","IBAMTI1",34,0)
 S DR="2.03////"_DUZ_";2.04///NOW"
"RTN","IBAMTI1",35,0)
 I IBNR]"" S DR=".07////1;.08////1;"_DR
"RTN","IBAMTI1",36,0)
 S DIE="^IBE(351.2,",DA=IBC D ^DIE
"RTN","IBAMTI1",37,0)
SELQ K DA,DIC,DIE,DR,IBC,IBHC,IBHR,IBNC,IBNR,IBBILLED
"RTN","IBAMTI1",38,0)
 Q
"RTN","IBAMTI1",39,0)
 ;
"RTN","IBAMTI1",40,0)
CEA(IBPM,IBEVT) ; Automatically disposition the case from Cancel/Edit/Add.
"RTN","IBAMTI1",41,0)
 ;  Input:     IBPM  --  Pointer to the adm movement in file #405
"RTN","IBAMTI1",42,0)
 ;            IBEVT  --  Pointer to the billing event record in file #350
"RTN","IBAMTI1",43,0)
 I '$G(IBEVT) G CEAQ
"RTN","IBAMTI1",44,0)
 N DA,DIE,DR,IBC
"RTN","IBAMTI1",45,0)
 S IBC=$O(^IBE(351.2,"AC",+$G(IBPM),0)) I IBC D UPD(0)
"RTN","IBAMTI1",46,0)
CEAQ Q
"RTN","IBAMTI1",47,0)
 ;
"RTN","IBAMTI1",48,0)
CHK(IBC,IBEVT) ; Review the case after adding a charge from Cancel/Edit/Add.
"RTN","IBAMTI1",49,0)
 ;  Input:      IBC  --  Pointer to the case in file #351.2
"RTN","IBAMTI1",50,0)
 ;            IBEVT  --  Pointer to the billing event record in file #350
"RTN","IBAMTI1",51,0)
 I '$G(IBC)!'$G(IBEVT) G CHKQ
"RTN","IBAMTI1",52,0)
 N DA,DIE,DR,IBCD,IBCD1
"RTN","IBAMTI1",53,0)
 S IBCD=$G(^IBE(351.2,IBC,0)),IBCD1=$G(^(1))
"RTN","IBAMTI1",54,0)
 I $P(IBCD,"^",7)!'$P(IBCD,"^",8)!(IBCD1]"") D UPD(1)
"RTN","IBAMTI1",55,0)
CHKQ Q
"RTN","IBAMTI1",56,0)
 ;
"RTN","IBAMTI1",57,0)
UPD(IND) ; Disposition the case record.
"RTN","IBAMTI1",58,0)
 ;  Input:      IND  --  0 = dispositioning  |  1 = reviewing
"RTN","IBAMTI1",59,0)
 ;         variables --  IBC => ptr to case record
"RTN","IBAMTI1",60,0)
 ;                       IBEVT => ptr to event record in #350
"RTN","IBAMTI1",61,0)
 W !,"Dispositioning the special inpatient billing case record"
"RTN","IBAMTI1",62,0)
 W:$G(IND) " (as billable)" W "..."
"RTN","IBAMTI1",63,0)
 K ^IBE(351.2,IBC,1)
"RTN","IBAMTI1",64,0)
 S DR=".04////"_IBEVT_";.07////0;.08////1;2.03////"_DUZ_";2.04///NOW"
"RTN","IBAMTI1",65,0)
 S DIE="^IBE(351.2,",DA=IBC D ^DIE W "  done."
"RTN","IBAMTI1",66,0)
 Q
"RTN","IBAMTI1",67,0)
 ;
"RTN","IBAMTI1",68,0)
DSPL(IBC) ; Display a case record.
"RTN","IBAMTI1",69,0)
 ;  Input:      IBC  --  Pointer to the case record in file #351.2
"RTN","IBAMTI1",70,0)
 I '$G(IBC) G DSPLQ
"RTN","IBAMTI1",71,0)
 N DFN,IBCD,IBC1,IBC2,IBATYP,IBPT,IBDIS,IBCL,IBEVT,IBN,IBND,Y
"RTN","IBAMTI1",72,0)
 S IBCD=$G(^IBE(351.2,IBC,0)),IBC1=$G(^(1)),IBC2=$G(^(2))
"RTN","IBAMTI1",73,0)
 S DFN=+IBCD,IBPT=$$PT^IBEFUNC(DFN),IBCL=$P(IBCD,"^",3)
"RTN","IBAMTI1",74,0)
 W !,$$DASH(),!?1,"Pt. Name: ",$E($P(IBPT,"^"),1,17),"  (",$P(IBPT,"^",3),")"
"RTN","IBAMTI1",75,0)
 W ?38,"Care related to ",$$PATTYAB^IBACV(IBCL),": ",$S($P(IBCD,"^",7):"YES",$P(IBCD,"^",7)=0:"NO",1:"UNANSWERED")
"RTN","IBAMTI1",76,0)
 W !?5,"Type: ",$$UCCL^IBAMTI(IBCL),?39,"Case Dispositioned: ",$S($P(IBCD,"^",8):"YES",1:"NO")
"RTN","IBAMTI1",77,0)
 W !?1,"Adm Date: ",$$DAT1^IBOUTL(+$G(^DGPM(+$P(IBCD,"^",2),0)),1),?41,"Date Last Edited: ",$$DAT1^IBOUTL(+$P(IBC2,"^",4),1)
"RTN","IBAMTI1",78,0)
 S IBDIS=+$G(^DGPM(+$P($G(^DGPM(+$P(IBCD,"^",2),0)),"^",17),0))
"RTN","IBAMTI1",79,0)
 W !,"Disc Date: ",$S(IBDIS:$$DAT1^IBOUTL(IBDIS,1),1:"Still Admitted"),?43,"Last Edited By: ",$E($P($G(^VA(200,+$P(IBC2,"^",3),0)),"^"),1,20),!,$$DASH()
"RTN","IBAMTI1",80,0)
 ;
"RTN","IBAMTI1",81,0)
 S IBEVT=+$P(IBCD,"^",4)
"RTN","IBAMTI1",82,0)
 I $O(^IB("AF",IBEVT,IBEVT)) W !?1,"Charges Billed:" D
"RTN","IBAMTI1",83,0)
 .S IBN=0 F  S IBN=$O(^IB("AF",IBEVT,IBN)) Q:'IBN  I IBN'=IBEVT D
"RTN","IBAMTI1",84,0)
 ..S IBND=$G(^IB(IBN,0))
"RTN","IBAMTI1",85,0)
 ..S IBATYP=$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")
"RTN","IBAMTI1",86,0)
 ..S:$E(IBATYP,1,2)="DG" IBATYP=$E(IBATYP,4,99)
"RTN","IBAMTI1",87,0)
 ..W !?5,IBATYP,?35,$$DAT1^IBOUTL($P(IBND,"^",14)),?46,$$DAT1^IBOUTL($P(IBND,"^",15))
"RTN","IBAMTI1",88,0)
 ..W ?57,"$",$P(IBND,"^",7),?64,$P($G(^IBE(350.21,+$P(IBND,"^",5),0)),"^",2)
"RTN","IBAMTI1",89,0)
 .W !,$$DASH()
"RTN","IBAMTI1",90,0)
 ;
"RTN","IBAMTI1",91,0)
 I IBC1]"" W !?1,"Reason for Non-Billing:",!,IBC1,!,$$DASH(),!
"RTN","IBAMTI1",92,0)
DSPLQ Q
"RTN","IBAMTI1",93,0)
 ;
"RTN","IBAMTI1",94,0)
DASH() ; Return a dashed line.
"RTN","IBAMTI1",95,0)
 Q $TR($J("",80)," ","-")
"RTN","IBAMTS")
0^5^B18456624^B18301561
"RTN","IBAMTS",1,0)
IBAMTS ;ALB/CPM - APPOINTMENT EVENT DRIVER INTERFACE ;20-JUL-93
"RTN","IBAMTS",2,0)
 ;;2.0;INTEGRATED BILLING;**52,115,132,153,164,156,171,247,312,341,339**;21-MAR-94;Build 2
"RTN","IBAMTS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBAMTS",4,0)
 ;
"RTN","IBAMTS",5,0)
EN ; Main interface entry point.
"RTN","IBAMTS",6,0)
 ;
"RTN","IBAMTS",7,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBAMTS",8,0)
 I '$G(DUZ) D DUZ^XUP(.5)                                  ;IB*2.0*341 Setting of DUZ covered by IA 4129
"RTN","IBAMTS",9,0)
 ;
"RTN","IBAMTS",10,0)
 S IBJOB=5,IBWHER="",IBDUZ=DUZ,IBY=1
"RTN","IBAMTS",11,0)
 ; Do Transfer Pricing
"RTN","IBAMTS",12,0)
 I '+IBSWINFO D ^IBATEO                                    ;IB*2.0*312
"RTN","IBAMTS",13,0)
 ; Check Encounter Related to LTC
"RTN","IBAMTS",14,0)
 N IBALTC D EN^IBAECO
"RTN","IBAMTS",15,0)
 I '$$BILST^DGMTUB(DFN) G ENQ ; never Means Test billable
"RTN","IBAMTS",16,0)
 I '$$CHECK^IBECEAU(0) D ^IBAERR1 G ENQ ; can't set vital parameters
"RTN","IBAMTS",17,0)
 ;
"RTN","IBAMTS",18,0)
 ; - process all parent outpatient encounters
"RTN","IBAMTS",19,0)
 S IBORG=0 F  S IBORG=$O(^TMP("SDEVT",$J,SDHDL,IBORG)) Q:'IBORG  D
"RTN","IBAMTS",20,0)
 .S IBOE=0 F  S IBOE=$O(^TMP("SDEVT",$J,SDHDL,IBORG,"SDOE",IBOE)) Q:'IBOE  S IBEVT=$G(^(IBOE,0,"AFTER")),IBEV0=$G(^("BEFORE")) D
"RTN","IBAMTS",21,0)
 ..;
"RTN","IBAMTS",22,0)
 ..S IBDT=$S(IBEVT:+IBEVT,1:+IBEV0),IBDAT=$P(IBDT,".")
"RTN","IBAMTS",23,0)
 ..; Do NOT PROCESS on VistA if IBDAT>=Switch Eff Date    ;CCR-930
"RTN","IBAMTS",24,0)
 ..I +IBSWINFO,(IBDAT+1)>$P(IBSWINFO,"^",2) Q             ;IB*2.0*312
"RTN","IBAMTS",25,0)
 ..;
"RTN","IBAMTS",26,0)
 ..S IBAPTY=$S(IBEVT:$P(IBEVT,"^",10),1:$P(IBEV0,"^",10))
"RTN","IBAMTS",27,0)
 ..S IBBILLED=$$BFO^IBECEAU(DFN,IBDAT),IBY=1
"RTN","IBAMTS",28,0)
 ..;
"RTN","IBAMTS",29,0)
 ..; - if C&P encounter, cancel charges for the day and quit
"RTN","IBAMTS",30,0)
 ..I IBAPTY=1!(IBALTC) D:IBBILLED  Q
"RTN","IBAMTS",31,0)
 ...S IBCRES=+$O(^IBE(350.3,"B",$S(IBALTC:"BILLED LTC CHARGE",1:"COMP & PENSION VISIT RECORDED"),0))
"RTN","IBAMTS",32,0)
 ...S:'IBCRES IBCRES=23 S IBWHER=""
"RTN","IBAMTS",33,0)
 ...D CANCH^IBECEAU4(IBBILLED,IBCRES,0)
"RTN","IBAMTS",34,0)
 ..;
"RTN","IBAMTS",35,0)
 ..; - quit if there are any C&P encounters on the visit date
"RTN","IBAMTS",36,0)
 ..Q:$$CNP^IBECEAU(DFN,IBDAT)
"RTN","IBAMTS",37,0)
 ..;
"RTN","IBAMTS",38,0)
 ..; - quit if there are any LTC encounters on the visit date
"RTN","IBAMTS",39,0)
 ..Q:$$LTCENC^IBAECU(DFN,IBDAT)
"RTN","IBAMTS",40,0)
 ..;
"RTN","IBAMTS",41,0)
 ..; - don't process child events
"RTN","IBAMTS",42,0)
 ..I IBEVT]"" Q:$P(IBEVT,"^",6)
"RTN","IBAMTS",43,0)
 ..I IBEVT="",IBEV0]"" Q:$P(IBEV0,"^",6)
"RTN","IBAMTS",44,0)
 ..;
"RTN","IBAMTS",45,0)
 ..; - get statuses
"RTN","IBAMTS",46,0)
 ..S IBAST=+$P(IBEVT,"^",12),IBBST=+$P(IBEV0,"^",12)
"RTN","IBAMTS",47,0)
 ..;
"RTN","IBAMTS",48,0)
 ..; - do either NEW or UPDATED processing
"RTN","IBAMTS",49,0)
 ..I IBAST=2,IBBST'=2 D NEW^IBAMTS1 Q
"RTN","IBAMTS",50,0)
 ..D UPD^IBAMTS2
"RTN","IBAMTS",51,0)
 ;
"RTN","IBAMTS",52,0)
ENQ K IBJOB,IBWHER,IBORG,IBOE,IBEVT,IBEV0,IBAST,IBBST,IBDUZ,IBY
"RTN","IBAMTS",53,0)
 K IBDT,IBDAT,IBAPTY,IBBILLED,IBSERV,IBSITE,IBFAC,IBCRES,IBRTED
"RTN","IBAMTS",54,0)
 Q
"RTN","IBAMTS",55,0)
 ;
"RTN","IBAMTS",56,0)
BULL ; Send bulletin when classified patients are billed stops which
"RTN","IBAMTS",57,0)
 ; are exempt from the classification process.
"RTN","IBAMTS",58,0)
 N IBT,IBC,IBPT,IBDUZ,IBX S IBPT=$$PT^IBEFUNC(DFN),IBX=$$CLTY
"RTN","IBAMTS",59,0)
 S XMSUB="CHARGE FOR STOP CODE EXEMPT FROM CLASSIFICATION"
"RTN","IBAMTS",60,0)
 S IBT(1)="The following patient, who "_$S(IBX="SC":"has a service connected disability,",IBX="CV":"is Combat Veteran",1:"has claimed exposure to "_IBX_",")
"RTN","IBAMTS",61,0)
 S IBT(2)="was billed the Means Test outpatient copay for a stop code which is"
"RTN","IBAMTS",62,0)
 S IBT(3)="exempt from classification:"
"RTN","IBAMTS",63,0)
 S IBT(4)=" " S IBC=4
"RTN","IBAMTS",64,0)
 S IBDUZ=DUZ D PAT^IBAERR1
"RTN","IBAMTS",65,0)
 S Y=IBDAT D DD^%DT
"RTN","IBAMTS",66,0)
 S IBC=IBC+1,IBT(IBC)="Stop Date: "_Y
"RTN","IBAMTS",67,0)
 S IBC=IBC+1,IBT(IBC)="Stop Code: "_$P($G(^DIC(40.7,+$P(IBEVT,"^",3),0)),"^")
"RTN","IBAMTS",68,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBAMTS",69,0)
 S IBC=IBC+1,IBT(IBC)="Please check this patient's medical record to determine if the care provided"
"RTN","IBAMTS",70,0)
 S IBC=IBC+1,IBT(IBC)="was related to the "_$S(IBX="SC":"SC disability",IBX="CV":"Combat Veteran status",1:"claimed exposure")_", and, if related, cancel the charge."
"RTN","IBAMTS",71,0)
 D MAIL^IBAERR1
"RTN","IBAMTS",72,0)
 K X,Y,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","IBAMTS",73,0)
 Q
"RTN","IBAMTS",74,0)
 ;
"RTN","IBAMTS",75,0)
CLTY() ; Return the classification type
"RTN","IBAMTS",76,0)
 N IBARR,Y D CL^SDCO21(DFN,IBDAT,"",.IBARR) S Y=""
"RTN","IBAMTS",77,0)
 I $D(IBARR(3)) S Y="SC" G CLTYQ
"RTN","IBAMTS",78,0)
 I $D(IBARR(7)),+$$CVEDT^IBACV(DFN,IBDAT) S Y="CV" G CLTYQ
"RTN","IBAMTS",79,0)
 I $D(IBARR(1)) S Y="Agent Orange" G CLTYQ
"RTN","IBAMTS",80,0)
 I $D(IBARR(2)) S Y="Ionizing Radiation" G CLTYQ
"RTN","IBAMTS",81,0)
 I $D(IBARR(4)) S Y="Southwest Asia" G CLTYQ
"RTN","IBAMTS",82,0)
 I $D(IBARR(8)) S Y="Project 112/SHAD" G CLTYQ
"RTN","IBAMTS",83,0)
 I $D(IBARR(5)) S Y="Military Sexual Trauma" G CLTYQ
"RTN","IBAMTS",84,0)
 I $D(IBARR(6)) S Y="Head/Neck Cancer" G CLTYQ
"RTN","IBAMTS",85,0)
CLTYQ Q Y
"RTN","IBAMTS1")
0^6^B22328511^B22333609
"RTN","IBAMTS1",1,0)
IBAMTS1 ;ALB/CPM - PROCESS NEW OUTPATIENT ENCOUNTERS ; 22-JUL-93
"RTN","IBAMTS1",2,0)
 ;;2.0;INTEGRATED BILLING;**20,52,132,153,166,156,167,247,339**;21-MAR-94;Build 2
"RTN","IBAMTS1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBAMTS1",4,0)
 ;
"RTN","IBAMTS1",5,0)
NEW ; Appointment fully processed - prepare a new charge.
"RTN","IBAMTS1",6,0)
 ;
"RTN","IBAMTS1",7,0)
 ;  ibbilled is set to 1 if the patient has already been billed on this
"RTN","IBAMTS1",8,0)
 ;  date.  if the date is after 12/5/01, check the type of bill to see
"RTN","IBAMTS1",9,0)
 ;  if it is an upgrade from primary (1st bill) to specialty (new bill)
"RTN","IBAMTS1",10,0)
 I IBBILLED D:IBDAT'<3011206 CHKPRIM I IBBILLED G NEWQ
"RTN","IBAMTS1",11,0)
 ;
"RTN","IBAMTS1",12,0)
 ; - for registrations, get disposition, and use log-out date/time
"RTN","IBAMTS1",13,0)
 I IBORG=3 D  G:'IBDISP NEWQ
"RTN","IBAMTS1",14,0)
 .S IBDISP=+$P($G(^TMP("SDEVT",$J,SDHDL,IBORG,"DIS",0,"AFTER")),"^",7)
"RTN","IBAMTS1",15,0)
 .Q:'IBDISP
"RTN","IBAMTS1",16,0)
 .S IBTEMP=+$P($G(^TMP("SDEVT",$J,SDHDL,IBORG,"DIS",0,"AFTER")),"^",6)
"RTN","IBAMTS1",17,0)
 .S:IBTEMP IBDT=IBTEMP,IBDAT=$P(IBDT,".")
"RTN","IBAMTS1",18,0)
 ;
"RTN","IBAMTS1",19,0)
 I '$$BIL^DGMTUB(DFN,IBDT) G NEWQ ; patient is not Means Test billable
"RTN","IBAMTS1",20,0)
 ;
"RTN","IBAMTS1",21,0)
 ; - perform batch of edits
"RTN","IBAMTS1",22,0)
 I '$$CHKS G NEWQ
"RTN","IBAMTS1",23,0)
 ;
"RTN","IBAMTS1",24,0)
 ; - quit if AO/IR/SWA/MST/HNC/CV/SHAD exposure is indicated, or SC related
"RTN","IBAMTS1",25,0)
 D CLSF(0,.IBCLSF)
"RTN","IBAMTS1",26,0)
 I IBCLSF[1 G NEWQ
"RTN","IBAMTS1",27,0)
 ;
"RTN","IBAMTS1",28,0)
 S IBSL="409.68:"_IBOE
"RTN","IBAMTS1",29,0)
 ;
"RTN","IBAMTS1",30,0)
BLD ; - build the charge. May also enter from IBAMTS2 (requires IBSL)
"RTN","IBAMTS1",31,0)
 ;
"RTN","IBAMTS1",32,0)
 ;  find the clinic stop code in 409.68 (dbia402) and find the matching
"RTN","IBAMTS1",33,0)
 ;  entry in file 352.5.  the 352.5 entry is populated in the 350 field
"RTN","IBAMTS1",34,0)
 ;  for reference using the ibstopda variable
"RTN","IBAMTS1",35,0)
 N %,IBSTOPDA,IBTYPE
"RTN","IBAMTS1",36,0)
 S %=$$GETSC^IBEMTSCU(IBSL,IBDAT) I % S IBSTOPDA=%
"RTN","IBAMTS1",37,0)
 ;
"RTN","IBAMTS1",38,0)
 ;  get the rate, ibtype = primary or specialty
"RTN","IBAMTS1",39,0)
 S IBTYPE=$P($G(^IBE(352.5,+$G(IBSTOPDA),0)),"^",3) I IBTYPE=0 Q
"RTN","IBAMTS1",40,0)
 ;  if the type is not defined, must be a local created sc, set it to primary
"RTN","IBAMTS1",41,0)
 I 'IBTYPE S IBTYPE=1
"RTN","IBAMTS1",42,0)
 S IBX="O" D TYPE^IBAUTL2 G:IBY<0 NEWQ
"RTN","IBAMTS1",43,0)
 S IBUNIT=1,(IBFR,IBTO)=IBDAT,IBEVDA="*"
"RTN","IBAMTS1",44,0)
 D ADD^IBECEAU3 G:IBY<0 NEWQ
"RTN","IBAMTS1",45,0)
 ;
"RTN","IBAMTS1",46,0)
 ; - if enctr is exempt from classification, but patient isn't, send msg
"RTN","IBAMTS1",47,0)
 I $$EXOE^SDCOU2($S($G(IBOEN):IBOEN,1:IBOE)),$$CLPT(DFN,IBDAT) D BULL^IBAMTS
"RTN","IBAMTS1",48,0)
 ;
"RTN","IBAMTS1",49,0)
 ; - if the opt billing rate is over a year old, place the charge on hold
"RTN","IBAMTS1",50,0)
 ;I $$OLDRATE(IBRTED,IBFR) D  G CLOCK
"RTN","IBAMTS1",51,0)
 ;.S DIE="^IB(",DA=IBN,DR=".05////20" D ^DIE K DIE,DA,DR
"RTN","IBAMTS1",52,0)
 ;
"RTN","IBAMTS1",53,0)
 ; - drop the charge into the background filer
"RTN","IBAMTS1",54,0)
 D IBFLR G:IBY<0 NEWQ
"RTN","IBAMTS1",55,0)
 ;
"RTN","IBAMTS1",56,0)
 ; - if there is no active billing clock, add one
"RTN","IBAMTS1",57,0)
CLOCK I '$D(^IBE(351,"ACT",DFN)) S IBCLDT=IBDAT D CLADD^IBAUTL3
"RTN","IBAMTS1",58,0)
 ;
"RTN","IBAMTS1",59,0)
NEWQ I IBY<0 D ^IBAERR1
"RTN","IBAMTS1",60,0)
 K IBDISP,IBCLSF,IBCLDA,IBMED,IBCLDT,IBN,IBBS,IBTEMP
"RTN","IBAMTS1",61,0)
 K IBUNIT,IBFR,IBTO,IBSL,IBEVDA,IBX,IBDESC,IBATYP,IBCHG
"RTN","IBAMTS1",62,0)
 Q
"RTN","IBAMTS1",63,0)
 ;
"RTN","IBAMTS1",64,0)
CHKS() ; Perform a batch of edits to determine whether to bill.
"RTN","IBAMTS1",65,0)
 ;  Input variables required:   IBEVT  --  encounter
"RTN","IBAMTS1",66,0)
 ;                             IBAPTY  --  appt type
"RTN","IBAMTS1",67,0)
 ;                              IBDAT  --  appt date
"RTN","IBAMTS1",68,0)
 ;                               IBDT  --  appt date/time
"RTN","IBAMTS1",69,0)
 ;                              IBORG  --  originating process
"RTN","IBAMTS1",70,0)
 ;                             IBDISP  --  disposition (if registration)
"RTN","IBAMTS1",71,0)
 N IBRESULT
"RTN","IBAMTS1",72,0)
 ;
"RTN","IBAMTS1",73,0)
 ;  default is fail the checks
"RTN","IBAMTS1",74,0)
 S IBRESULT=0
"RTN","IBAMTS1",75,0)
 ;
"RTN","IBAMTS1",76,0)
 ;  for appts prior to 12/6/2001
"RTN","IBAMTS1",77,0)
 I IBDAT<3011206 D  Q IBRESULT
"RTN","IBAMTS1",78,0)
 .   ; - non-count clinic
"RTN","IBAMTS1",79,0)
 .   I $P($G(^SC(+$P(IBEVT,"^",4),0)),"^",17)="Y" Q
"RTN","IBAMTS1",80,0)
 .   ;
"RTN","IBAMTS1",81,0)
 .   ; - non-billable appointment type
"RTN","IBAMTS1",82,0)
 .   I $$IGN^IBEFUNC(IBAPTY,IBDAT) Q
"RTN","IBAMTS1",83,0)
 .   ;
"RTN","IBAMTS1",84,0)
 .   ; - non-billable disposition/stop code/clinic
"RTN","IBAMTS1",85,0)
 .   I IBORG=1!(IBORG=2),$$NBCL^IBEFUNC(+$P(IBEVT,"^",4),IBDT) Q
"RTN","IBAMTS1",86,0)
 .   I IBORG=1!(IBORG=2),$$NBCSC^IBEFUNC(+$P(IBEVT,"^",3),IBDT) Q
"RTN","IBAMTS1",87,0)
 .   I IBORG=3,$$NBDIS^IBEFUNC(IBDISP,IBDT) Q
"RTN","IBAMTS1",88,0)
 .   ;
"RTN","IBAMTS1",89,0)
 .   ; - ignore if checked out late and pt was an inpatient at midnight
"RTN","IBAMTS1",90,0)
 .   I DT>IBDAT,$$INPT(DFN,IBDAT_".2359") Q
"RTN","IBAMTS1",91,0)
 .   ;
"RTN","IBAMTS1",92,0)
 .   ;  pass the checks
"RTN","IBAMTS1",93,0)
 .   S IBRESULT=1
"RTN","IBAMTS1",94,0)
 ;
"RTN","IBAMTS1",95,0)
 ;  for appts on or after 12/6/2001
"RTN","IBAMTS1",96,0)
 ;
"RTN","IBAMTS1",97,0)
 ; - non-billable appointment type
"RTN","IBAMTS1",98,0)
 I $$IGN^IBEFUNC(IBAPTY,IBDAT) Q 0
"RTN","IBAMTS1",99,0)
 ;
"RTN","IBAMTS1",100,0)
 ; - non-count clinic
"RTN","IBAMTS1",101,0)
 I $P($G(^SC(+$P(IBEVT,"^",4),0)),"^",17)="Y" Q 0
"RTN","IBAMTS1",102,0)
 ;
"RTN","IBAMTS1",103,0)
 ; - ignore if checked out late and pt was an inpatient at midnight
"RTN","IBAMTS1",104,0)
 I DT>IBDAT,$$INPT(DFN,IBDAT_".2359") Q 0
"RTN","IBAMTS1",105,0)
 ;
"RTN","IBAMTS1",106,0)
 ;  pass the checks
"RTN","IBAMTS1",107,0)
 Q 1
"RTN","IBAMTS1",108,0)
 ;
"RTN","IBAMTS1",109,0)
 ;
"RTN","IBAMTS1",110,0)
IBFLR ; Drop the charge into the IB Background filer.
"RTN","IBAMTS1",111,0)
 N IBSEQNO,IBNOS,IBNOW,IBTOTL,IBSERV,IBWHER,IBFAC,IBSITE,IBAFY,IBARTYP,IBIL,IBTRAN
"RTN","IBAMTS1",112,0)
 D NOW^%DTC S IBNOW=%,IBNOS=IBN
"RTN","IBAMTS1",113,0)
 S IBSEQNO=$P($G(^IBE(350.1,+IBATYP,0)),"^",5) I 'IBSEQNO S IBY="-1^IB023"
"RTN","IBAMTS1",114,0)
 I IBY>0 D ^IBAFIL
"RTN","IBAMTS1",115,0)
 Q
"RTN","IBAMTS1",116,0)
 ;
"RTN","IBAMTS1",117,0)
CLPT(DFN,VDATE) ; Should the patient be asked the classification questions?
"RTN","IBAMTS1",118,0)
 ;  Input:     DFN  --  Pointer to the patient in file #2
"RTN","IBAMTS1",119,0)
 ;           VDATE  --  Visit date
"RTN","IBAMTS1",120,0)
 N IBARR D CL^SDCO21(DFN,VDATE,"",.IBARR)
"RTN","IBAMTS1",121,0)
 Q $D(IBARR)>0
"RTN","IBAMTS1",122,0)
 ;
"RTN","IBAMTS1",123,0)
INPT(DFN,VAINDT) ; Was the patient an inpatient at VAINDT?
"RTN","IBAMTS1",124,0)
 ;  Input:     DFN  --  Pointer to the patient in file #2
"RTN","IBAMTS1",125,0)
 ;          VAINDT  --  Date/time to check for inpatient status
"RTN","IBAMTS1",126,0)
 ; Output:       1 - inpatient | 0 - not an inpatient
"RTN","IBAMTS1",127,0)
 N VADMVT D ADM^VADPT2
"RTN","IBAMTS1",128,0)
 Q VADMVT>0
"RTN","IBAMTS1",129,0)
 ;
"RTN","IBAMTS1",130,0)
CLSF(IBUPD,Y) ; Examine classification questions.
"RTN","IBAMTS1",131,0)
 ;  Input:   IBUPD  --  0 if event just checked out
"RTN","IBAMTS1",132,0)
 ;                      1 if event is being updated
"RTN","IBAMTS1",133,0)
 ;               Y  --  array to place output
"RTN","IBAMTS1",134,0)
 ;  Output:  indicators returned as  ao^ir^sc^swa^mst^hnc^cv^shad [1|yes, 0|no]
"RTN","IBAMTS1",135,0)
 ;             if IBUPD=0, Y is returned as a single string
"RTN","IBAMTS1",136,0)
 ;             if IBUPD=1, Y("BEFORE"),Y("AFTER") are defined.
"RTN","IBAMTS1",137,0)
 N X,ZA,ZB S:'$G(IBUPD) Y="" S:$G(IBUPD) (Y("BEFORE"),Y("AFTER"))=""
"RTN","IBAMTS1",138,0)
 S X=0 F  S X=$O(^TMP("SDEVT",$J,SDHDL,IBORG,"SDOE",IBOE,"CL",X)) Q:'X  S ZB=$G(^(X,0,"BEFORE")),ZA=$G(^("AFTER")) D
"RTN","IBAMTS1",139,0)
 .I '$G(IBUPD) S:ZA $P(Y,"^",+ZA)=+$P(ZA,"^",3) Q
"RTN","IBAMTS1",140,0)
 .S $P(Y("BEFORE"),"^",+ZB)=+$P(ZB,"^",3),$P(Y("AFTER"),"^",+ZA)=+$P(ZA,"^",3)
"RTN","IBAMTS1",141,0)
 Q
"RTN","IBAMTS1",142,0)
 ;
"RTN","IBAMTS1",143,0)
OLDRATE(IBRTED,IBFR) ; See if the copay rate effective date is too old.
"RTN","IBAMTS1",144,0)
 ;  Input:   IBRTED  --  Charge Effective Date
"RTN","IBAMTS1",145,0)
 ;             IBFR  --  Visit Date
"RTN","IBAMTS1",146,0)
 ;  Output:       1  --  Effective Date is too old
"RTN","IBAMTS1",147,0)
 ;                0  --  Not
"RTN","IBAMTS1",148,0)
 ;
"RTN","IBAMTS1",149,0)
 N IBNUM,IBYR
"RTN","IBAMTS1",150,0)
 S IBNUM=$$FMDIFF^XLFDT(IBFR,IBRTED),IBYR=$E(IBFR,1,3)
"RTN","IBAMTS1",151,0)
 Q IBYR#4&(IBNUM>364)!(IBYR#4=0&(IBNUM>365))
"RTN","IBAMTS1",152,0)
 ;
"RTN","IBAMTS1",153,0)
 ;
"RTN","IBAMTS1",154,0)
CHKPRIM ;  check to see if patient has been billed for primary
"RTN","IBAMTS1",155,0)
 ;  and this is a specialty stop.  if so, cancel the primary
"RTN","IBAMTS1",156,0)
 ;  bill and let the software create the new specialty charge
"RTN","IBAMTS1",157,0)
 ;  input ibbilled  = last parent bill to check (ien 350)
"RTN","IBAMTS1",158,0)
 ;                    used to check the rate
"RTN","IBAMTS1",159,0)
 ;  output ibbilled = last parent bill number to prevent
"RTN","IBAMTS1",160,0)
 ;                    adding specialty charge
"RTN","IBAMTS1",161,0)
 N %,IBSTOPDA,IBTYPE,IBCRES,IBI,IBS
"RTN","IBAMTS1",162,0)
 ;
"RTN","IBAMTS1",163,0)
 ;  get the stop code for the 2nd visit on the same day
"RTN","IBAMTS1",164,0)
 S IBSTOPDA=$$GETSC^IBEMTSCU("409.68:"_IBOE,IBDAT) I 'IBSTOPDA Q
"RTN","IBAMTS1",165,0)
 ;
"RTN","IBAMTS1",166,0)
 ;  get the rate, ibtype = primary or specialty
"RTN","IBAMTS1",167,0)
 S IBTYPE=$P(^IBE(352.5,IBSTOPDA,0),"^",3)
"RTN","IBAMTS1",168,0)
 ;  if the new appt is not specialty, quit ... no need to create
"RTN","IBAMTS1",169,0)
 ;  a new charge
"RTN","IBAMTS1",170,0)
 I IBTYPE'=2 Q
"RTN","IBAMTS1",171,0)
 ;
"RTN","IBAMTS1",172,0)
 ;  if the last charge was billed at specialty, quit
"RTN","IBAMTS1",173,0)
 I $P($G(^IBE(352.5,+$P($G(^IB(+IBBILLED,0)),"^",20),0)),"^",3)=2 Q
"RTN","IBAMTS1",174,0)
 ;
"RTN","IBAMTS1",175,0)
 ;  cancel the charge
"RTN","IBAMTS1",176,0)
 ;  cancellation reason = billed at higher tier rate
"RTN","IBAMTS1",177,0)
 S IBCRES=6,IBS=$P($G(^IB(+IBBILLED,0)),"^",5)
"RTN","IBAMTS1",178,0)
 ;
"RTN","IBAMTS1",179,0)
 ; if not billed, on hold, or cacelled wait
"RTN","IBAMTS1",180,0)
 I IBS'=3!(IBS'=8)!(IBS'=10) F IBI=1:1:10 H 1 S IBS=$P($G(^IB(+IBBILLED,0)),"^",5) I IBS=3!(IBS=8)!(IBS=10) Q
"RTN","IBAMTS1",181,0)
 ;
"RTN","IBAMTS1",182,0)
 D CANC^IBAMTS2
"RTN","IBAMTS1",183,0)
 ;
"RTN","IBAMTS1",184,0)
 ;  set ibbilled = 0 to create the specialty charge
"RTN","IBAMTS1",185,0)
 S IBBILLED=0
"RTN","IBAMTS1",186,0)
 Q
"RTN","IBAMTS2")
0^7^B9767783^B9672528
"RTN","IBAMTS2",1,0)
IBAMTS2 ;ALB/CPM - PROCESS UPDATED OUTPATIENT ENCOUNTERS ; 25-AUG-93
"RTN","IBAMTS2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,91,117,132,153,156,167,247,339**;21-MAR-94;Build 2
"RTN","IBAMTS2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBAMTS2",4,0)
 ;
"RTN","IBAMTS2",5,0)
UPD ; Perform encounter update actions.
"RTN","IBAMTS2",6,0)
 N IBCBK,IBFILTER,IBVAL
"RTN","IBAMTS2",7,0)
 ;
"RTN","IBAMTS2",8,0)
 ; - was check out deleted?
"RTN","IBAMTS2",9,0)
 I IBAST'=2,IBBST=2 S IBCRES=$S(IBAST=8:5,1:1)
"RTN","IBAMTS2",10,0)
 ;
"RTN","IBAMTS2",11,0)
 ; - see if checked out appt classifications were changed
"RTN","IBAMTS2",12,0)
 I IBAST=2,IBBST=2 D CLSF^IBAMTS1(1,.IBCLSF) S IBACT=$$CLUPD() G:'IBACT UPDQ D  I IBACT'=1 G UPDQ
"RTN","IBAMTS2",13,0)
 .I IBACT=1 S IBCRES=2 Q
"RTN","IBAMTS2",14,0)
 .I IBACT=2 N IBCLSF D NEW^IBAMTS1
"RTN","IBAMTS2",15,0)
 ;
"RTN","IBAMTS2",16,0)
 ; - cancel charge if there is a cancellation reason, and the billed
"RTN","IBAMTS2",17,0)
 ; - charge was for the appointment that is no longer billable
"RTN","IBAMTS2",18,0)
 I '$G(IBCRES) G UPDQ
"RTN","IBAMTS2",19,0)
 I '$$LINK(IBOE,$S(IBEVT:IBEVT,1:IBEV0),IBBILLED) G UPDQ
"RTN","IBAMTS2",20,0)
 D CANC G:IBY<0 UPDQ
"RTN","IBAMTS2",21,0)
 ;
"RTN","IBAMTS2",22,0)
 ; - look for other billable visits if Means Test billable
"RTN","IBAMTS2",23,0)
 I '$$BIL^DGMTUB(DFN,IBDT) G UPDQ
"RTN","IBAMTS2",24,0)
 S IBBILLED=0
"RTN","IBAMTS2",25,0)
 ;
"RTN","IBAMTS2",26,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=IBDAT-.1,IBVAL("EDT")=IBDAT_.99
"RTN","IBAMTS2",27,0)
 S IBFILTER=""
"RTN","IBAMTS2",28,0)
 ; Skip encounter just cancelled,
"RTN","IBAMTS2",29,0)
 ;  consider only parent encounters, appts checked out
"RTN","IBAMTS2",30,0)
 S IBCBK="I Y'=IBOE,'$P(Y0,U,6),$P(Y0,U,12)=2 D BEDIT^IBAMTS2(Y,Y0) S:IBBILLED SDSTOP=1"
"RTN","IBAMTS2",31,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,IBFILTER,IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBAMTS2",32,0)
 ;
"RTN","IBAMTS2",33,0)
UPDQ K IBCLSF,IBACT,IBC,IBOEN,IBEVT
"RTN","IBAMTS2",34,0)
 Q
"RTN","IBAMTS2",35,0)
 ;
"RTN","IBAMTS2",36,0)
BEDIT(IBOEN,IBEVT) ; - perform batch edit
"RTN","IBAMTS2",37,0)
 I $P(IBEVT,U,10)=1 S UNBILLED=1 Q  ; C&P exam -- stop looking
"RTN","IBAMTS2",38,0)
 S IBORG=+$P(IBEVT,U,8),IBAPTY=+$P(IBEVT,U,10)
"RTN","IBAMTS2",39,0)
 I IBORG=3 S IBDISP=+$$DISND^IBSDU(IBOEN,IBEVT,7) Q:'IBDISP
"RTN","IBAMTS2",40,0)
 Q:'$$CHKS^IBAMTS1
"RTN","IBAMTS2",41,0)
 ;
"RTN","IBAMTS2",42,0)
 ; - check classifications
"RTN","IBAMTS2",43,0)
 S IBCLSF=$$ENCL(IBOEN)
"RTN","IBAMTS2",44,0)
 I IBCLSF[1 Q  ; care was related to ao/ir/swa/sc/mst/hnc/cv/shad
"RTN","IBAMTS2",45,0)
 S IBSL="409.68:"_IBOEN ; set softlink
"RTN","IBAMTS2",46,0)
 ;
"RTN","IBAMTS2",47,0)
 ; - ready to bill another encounter
"RTN","IBAMTS2",48,0)
 D BLD^IBAMTS1 S IBBILLED=1
"RTN","IBAMTS2",49,0)
 Q
"RTN","IBAMTS2",50,0)
 ;
"RTN","IBAMTS2",51,0)
CRES ; List of cancellation reasons
"RTN","IBAMTS2",52,0)
 ;;CHECK OUT DELETED
"RTN","IBAMTS2",53,0)
 ;;CLASSIFICATION CHANGED
"RTN","IBAMTS2",54,0)
 ;;MT OP APPT NO-SHOW
"RTN","IBAMTS2",55,0)
 ;;MT OP APPT CANCELLED
"RTN","IBAMTS2",56,0)
 ;;RECD INPATIENT CARE
"RTN","IBAMTS2",57,0)
 ;;BILLED AT HIGHER TIER RATE
"RTN","IBAMTS2",58,0)
 ;
"RTN","IBAMTS2",59,0)
LINK(IBOE,IBEVT,IBN) ; Was the billed charge for the current appointment?
"RTN","IBAMTS2",60,0)
 ;  Input:     IBOE  --  Pointer to outpatient encounter in file #409.68
"RTN","IBAMTS2",61,0)
 ;            IBEVT  --  Zeroth node of encounter in file #409.68
"RTN","IBAMTS2",62,0)
 ;              IBN  --  Pointer to charge in file #350
"RTN","IBAMTS2",63,0)
 ;  Output:       0  --  Charge was not for current appointment
"RTN","IBAMTS2",64,0)
 ;                1  --  Charge was for current appointment
"RTN","IBAMTS2",65,0)
 N IBSL,Y
"RTN","IBAMTS2",66,0)
 I '$G(IBOE)!'$G(IBEVT)!'$G(IBN) G LINKQ
"RTN","IBAMTS2",67,0)
 S IBSL=$P($G(^IB(IBN,0)),"^",4)
"RTN","IBAMTS2",68,0)
 I +IBSL=44 S Y=$P(IBSL,";",1,2)=("44:"_$P(IBEVT,"^",4)_";S:"_+IBEVT) G LINKQ
"RTN","IBAMTS2",69,0)
 I +IBSL=409.68 S Y=IBSL=("409.68:"_IBOE)
"RTN","IBAMTS2",70,0)
LINKQ Q +$G(Y)
"RTN","IBAMTS2",71,0)
 ;
"RTN","IBAMTS2",72,0)
CLUPD() ; Examine changes in the classification.
"RTN","IBAMTS2",73,0)
 ;  Output:    0  --  no changes
"RTN","IBAMTS2",74,0)
 ;             1  --  changes require charges to be cancelled
"RTN","IBAMTS2",75,0)
 ;             2  --  changes require appt to be billed
"RTN","IBAMTS2",76,0)
 ;             3  --  [ec/swa] cancel charge, create deferred charge
"RTN","IBAMTS2",77,0)
 ;             4  --  [ec/swa] pass deferred charge, disposition case
"RTN","IBAMTS2",78,0)
 N I,Y S Y=0
"RTN","IBAMTS2",79,0)
 I IBCLSF("BEFORE")=IBCLSF("AFTER") G CLUPDQ
"RTN","IBAMTS2",80,0)
 F I=1,2,3,4,5,6,7,8 I '$P(IBCLSF("BEFORE"),U,I),$P(IBCLSF("AFTER"),U,I) S Y=$S(I=4:3,1:1) G CLUPDQ
"RTN","IBAMTS2",81,0)
 F I=1,2,3,4,5,6,7,8 I $P(IBCLSF("BEFORE"),U,I),'$P(IBCLSF("AFTER"),U,I) S Y=$S(I=4:4,1:2) Q
"RTN","IBAMTS2",82,0)
CLUPDQ Q Y
"RTN","IBAMTS2",83,0)
 ;
"RTN","IBAMTS2",84,0)
CANC ; Determine cancellation reason and cancel charge
"RTN","IBAMTS2",85,0)
 ;  Input variables:   IBCRES  --  Code for reason to be determined
"RTN","IBAMTS2",86,0)
 ;                   IBBILLED  --  Charge to be cancelled
"RTN","IBAMTS2",87,0)
 S IBCRES=$P($T(CRES+IBCRES),";;",2),IBCRES=+$O(^IBE(350.3,"B",IBCRES,0))
"RTN","IBAMTS2",88,0)
 D CANCH^IBECEAU4(IBBILLED,IBCRES)
"RTN","IBAMTS2",89,0)
 Q
"RTN","IBAMTS2",90,0)
 ;
"RTN","IBAMTS2",91,0)
ENCL(IBOE) ; Return classification results for an encounter.
"RTN","IBAMTS2",92,0)
 ;  Input:    IBOE  --  Pointer to outpatient encounter in file #409.68
"RTN","IBAMTS2",93,0)
 ;  Output:   ao^ir^sc^swa^mst^hnc^cv^shad, where, for each piece,
"RTN","IBAMTS2",94,0)
 ;                      1 - care was related to condition, and
"RTN","IBAMTS2",95,0)
 ;                      0 (or null) - care not related to condition
"RTN","IBAMTS2",96,0)
 N CL,CLD,X,Y S Y=""
"RTN","IBAMTS2",97,0)
 S CL=0 F  S CL=$O(^SDD(409.42,"OE",+$G(IBOE),CL)) Q:'CL  S CLD=$G(^SDD(409.42,CL,0)) I CLD S $P(Y,U,+CLD)=+$P(CLD,U,3)
"RTN","IBAMTS2",98,0)
 Q Y
"RTN","IBCCPT")
0^26^B67101074^B67217421
"RTN","IBCCPT",1,0)
IBCCPT ;ALB/LDB - MCCR OUTPATIENT VISITS LISTING CONT. ;29 MAY 90
"RTN","IBCCPT",2,0)
 ;;2.0;INTEGRATED BILLING;**55,62,52,91,106,125,51,148,174,182,245,266,260,339**;21-MAR-94;Build 2
"RTN","IBCCPT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCCPT",4,0)
 ;
"RTN","IBCCPT",5,0)
 ;MAP TO DGCRCPT
"RTN","IBCCPT",6,0)
 ;
"RTN","IBCCPT",7,0)
EN1(IBQUERY,IBHLP) ;
"RTN","IBCCPT",8,0)
 K DIR
"RTN","IBCCPT",9,0)
EN D:$D(DIR) HLP W @IOF S DGU=0 K DGCPT,^UTILITY($J) D VST(.IBQUERY)
"RTN","IBCCPT",10,0)
 D CHDR,WRNO
"RTN","IBCCPT",11,0)
 N ICPTVDT S ICPTVDT=$$BDATE^IBACSV($G(IBIFN)) ; Code Text Version
"RTN","IBCCPT",12,0)
 S (DGCNT,DGCNT1)=0 F  S DGCNT=$O(^UTILITY($J,"CPT-CNT",DGCNT)) Q:'DGCNT  S DGNOD=^(DGCNT),DGCPT=+DGNOD,DGDAT=$P(DGNOD,"^",2),DGBIL=$P(DGNOD,"^",3),DGASC=$P(DGNOD,"^",4),DGDIV=$P(DGNOD,"^",5),DGCNT1=DGCNT1+1 D CPRT I DGU="^" S DGCNT=DGCNT-1 Q
"RTN","IBCCPT",13,0)
 I DGU'="^" F Y=$Y:1:IOSL-6 W !
"RTN","IBCCPT",14,0)
OK1 K Y Q:'$D(^UTILITY($J,"CPT-CNT"))!($D(DIR))!($G(IBHLP))
"RTN","IBCCPT",15,0)
OK S DIR(0)="LAO^1:"_DGCNT1_"^K:X[""."" X",DIR("?")="^N DIR D EN1^IBCCPT(.IBQUERY,1)",DIR("A")="SELECT CPT CODE(S) TO INCLUDE IN THIS BILL: "
"RTN","IBCCPT",16,0)
 D ^DIR K DIR I 'Y D Q1^IBCOPV1 Q
"RTN","IBCCPT",17,0)
 S IBFT=+$P(^DGCR(399,IBIFN,0),"^",19)
"RTN","IBCCPT",18,0)
OK2 W !,"YOU HAVE SELECTED CPT CODE(S) NUMBERED-",$E(Y,1,$L(Y)-1),!,"IS THIS CORRECT" S %=1 D YN^DICN I %=-1 S IBOUT=1 D Q^IBCOPV1 Q
"RTN","IBCCPT",19,0)
 I +Y,'% W !,"Respond 'Y'es to include these codes in the bill.",!,"Respond 'N'o to reselect." G OK2
"RTN","IBCCPT",20,0)
 I +Y,%=2 G OK
"RTN","IBCCPT",21,0)
 ;
"RTN","IBCCPT",22,0)
FILE S DGCPT1=Y,(DGCNT,DGCNT2)=0
"RTN","IBCCPT",23,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR=".09///5" D ^DIE K DR,DA,DIE
"RTN","IBCCPT",24,0)
 F I9=1:1 S I1=$P(DGCPT1,",",I9) Q:'I1  I $D(^UTILITY($J,"CPT-CNT",I1)) S DGNOD=^(I1),DGNOD("DX")=$G(^(I1,"DX")) D FILE1
"RTN","IBCCPT",25,0)
 D Q1^IBCOPV1 Q
"RTN","IBCCPT",26,0)
 ;
"RTN","IBCCPT",27,0)
FILE1 ;  file procedures, if BASC, only for 1 visit date
"RTN","IBCCPT",28,0)
 K DGNOADD S (X,DINUM)=$P(DGNOD,"^",2) D VFILE1^IBCOPV1 K DINUM,X
"RTN","IBCCPT",29,0)
 N IBCPTNM S IBCPTNM=$$CPT^ICPTCOD(+DGNOD,+$P(DGNOD,U,2))
"RTN","IBCCPT",30,0)
 I $D(DGNOADD) W !?10,"Can't add Amb. Surg. ",$P(IBCPTNM,U,2)," without visit date!" Q  ;don't add cpt for date that can't go on bill
"RTN","IBCCPT",31,0)
 I IBFT'=2,+$P(DGNOD,"^",4),$$TOMANY($P(DGNOD,"^",2)) W !?10,"Can't add Billable Amb. Surg. ",$P(IBCPTNM,U,2)," when more than one visit date!",*7 Q
"RTN","IBCCPT",32,0)
 D DSPPRC(IBCPTNM,DGNOD,$G(DGNOD("DX")))
"RTN","IBCCPT",33,0)
 ;
"RTN","IBCCPT",34,0)
 S:'$D(^DGCR(399,IBIFN,"CP",0)) DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCCPT",35,0)
 S DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP"",",DIC(0)="L",X=+DGNOD_";ICPT(" K DD,DO D FILE^DICN S (DA,IBPROCP)=+Y K DO,DD,DLAYGO,DIC("P")
"RTN","IBCCPT",36,0)
 ;
"RTN","IBCCPT",37,0)
 S DR="1///"_$P(DGNOD,"^",2)
"RTN","IBCCPT",38,0)
 I +$P(DGNOD,"^",8) S DR=DR_";18///`"_+$P(DGNOD,"^",8)
"RTN","IBCCPT",39,0)
 I +$P(DGNOD,"^",9) S DR=DR_";6///`"_+$P(DGNOD,"^",9)
"RTN","IBCCPT",40,0)
 I +$P(DGNOD,"^",5) S DR=DR_";5////"_+$P(DGNOD,"^",5)
"RTN","IBCCPT",41,0)
 I +$P(DGNOD,"^",11) S DR=DR_";20////"_+$P(DGNOD,"^",11)
"RTN","IBCCPT",42,0)
 ;
"RTN","IBCCPT",43,0)
 ; file assoc dx if exists from pce
"RTN","IBCCPT",44,0)
 D:$G(DGNOD("DX")) ADDDX^IBCCPT1(IBIFN,IBPROCP,DGNOD("DX"),.DR)
"RTN","IBCCPT",45,0)
 ;
"RTN","IBCCPT",46,0)
 S DIE=DIC D ^DIE
"RTN","IBCCPT",47,0)
 D:$P(DGNOD,U,10)'="" ADDMOD(IBIFN,IBPROCP,$P(DGNOD,U,10))
"RTN","IBCCPT",48,0)
 ;
"RTN","IBCCPT",49,0)
 S DR="16"
"RTN","IBCCPT",50,0)
 I '$P(DGNOD,"^",8) S DR=DR_";18"
"RTN","IBCCPT",51,0)
 I '$P(DGNOD,"^",9) S DR=DR_";6"
"RTN","IBCCPT",52,0)
 I '$P(DGNOD,"^",5) S DR=DR_";5"
"RTN","IBCCPT",53,0)
 S:IBFT=2 DR=DR_";8;9;17//NO"
"RTN","IBCCPT",54,0)
 S DIE=DIC D ^DIE
"RTN","IBCCPT",55,0)
 ;
"RTN","IBCCPT",56,0)
 S DR=$$SPCUNIT^IBCU7(IBIFN,IBPROCP) I DR'="" D ^DIE ; miles/minutes/hours
"RTN","IBCCPT",57,0)
 ;
"RTN","IBCCPT",58,0)
 ; DSS QuadraMed Interface: CPT Sequence and Diagnosis Linkage for Single CPT
"RTN","IBCCPT",59,0)
 I $$QMED^IBCU1("DX^VEJDIBE1",IBIFN) D DX^VEJDIBE1(IBIFN,IBPROCP)
"RTN","IBCCPT",60,0)
 ;
"RTN","IBCCPT",61,0)
 Q:$D(Y)
"RTN","IBCCPT",62,0)
 D DX^IBCU72(IBIFN,IBPROCP):IBFT=2
"RTN","IBCCPT",63,0)
 I IBFT=2 S X=$$ADDTNL^IBCU7(IBIFN,.DA)
"RTN","IBCCPT",64,0)
 L ^DGCR(399,IBIFN):1
"RTN","IBCCPT",65,0)
 K DIE,DIC,DR,DA,IBPROCP
"RTN","IBCCPT",66,0)
 Q
"RTN","IBCCPT",67,0)
 ;
"RTN","IBCCPT",68,0)
CPRT D:$Y+6>IOSL SCR Q:DGU="^"
"RTN","IBCCPT",69,0)
 N IBCPTNM,IBNBM,IBMODS,J,IBZ,IBDATE
"RTN","IBCCPT",70,0)
 S IBDATE=$$BDATE^IBACSV($G(IBIFN))
"RTN","IBCCPT",71,0)
 S IBNBM="",IBCPTNM=$$CPT^ICPTCOD(DGCPT,IBDATE) Q:IBCPTNM'>0
"RTN","IBCCPT",72,0)
 W !,DGCNT,")",?5,$P(IBCPTNM,U,2),?13,$E($P(IBCPTNM,U,3),1,24),?39,$E($P($G(^SC(+$P(DGNOD,U,9),0)),U,1),1,15),?56,$$FMTE^XLFDT(DGDAT,2)
"RTN","IBCCPT",73,0)
 I +DGBIL,+$P($G(DGNOD),U,6) S IBNBM="  *ON BILL/"_$E($P(DGNOD,U,7),1,4)_"*"
"RTN","IBCCPT",74,0)
 I IBNBM="",DGBIL S IBNBM="  *ON THIS BILL*"
"RTN","IBCCPT",75,0)
 I IBNBM="",+$P($G(DGNOD),U,6) S IBNBM="  "_$E($P(DGNOD,U,7),1,12)
"RTN","IBCCPT",76,0)
 W ?64,IBNBM
"RTN","IBCCPT",77,0)
 ;
"RTN","IBCCPT",78,0)
 S IBMODS=$P($G(DGNOD),U,10) F J=1:1 S IBZ=$P(IBMODS,",",J) Q:IBZ=""  S IBZ=$$MOD^ICPTMOD(IBZ,"I",IBDATE) W !,?13,$P(IBZ,U,2),?18,$P(IBZ,U,3)
"RTN","IBCCPT",79,0)
 Q
"RTN","IBCCPT",80,0)
CHDR W @IOF,!,?15,"<<CURRENT PROCEDURAL TERMINOLOGY CODES>>",!!,?10,"LISTING FROM VISIT DATES WITH ASSOCIATED CPT CODES",!,?22,"IN OUTPT ENCOUNTERS FILE",!
"RTN","IBCCPT",81,0)
 K ^TMP("IBVIS",$J)
"RTN","IBCCPT",82,0)
 S L="",$P(L,"=",80)="" W !,L,!,"NO.",?5,"CODE",?13,"SHORT NAME",?39,"CLINIC",?56,"DATE",!,L,! K L
"RTN","IBCCPT",83,0)
 Q
"RTN","IBCCPT",84,0)
ADDMOD(IBIFN,IBY,IBMOD) ; Add modifier(s) from PCE procedure to CPT code mult
"RTN","IBCCPT",85,0)
 N DIE,DR,DIC,DA,DO,DD,IBS,IBM
"RTN","IBCCPT",86,0)
 F IBS=1:1:$L(IBMOD,",") S DA(2)=IBIFN,DA(1)=IBY,X=$O(^DGCR(399,DA(2),"CP",DA(1),"MOD","B",""),-1)+1 S IBM=$P(IBMOD,",",IBS) I IBM'="" D
"RTN","IBCCPT",87,0)
 . S:'$D(^DGCR(399,DA(2),"CP",DA(1),"MOD")) DIC("P")=$$GETSPEC^IBEFUNC(399.0304,16)
"RTN","IBCCPT",88,0)
 . S DIC(0)="L",DIC="^DGCR(399,"_IBIFN_",""CP"","_IBY_",""MOD"",",DLAYGO=399.30416,DIC("DR")=".02////"_IBM
"RTN","IBCCPT",89,0)
 . D FILE^DICN K DIC,DO,DD
"RTN","IBCCPT",90,0)
 Q
"RTN","IBCCPT",91,0)
 ;
"RTN","IBCCPT",92,0)
DSPPRC(CPTNM,NOD,DX) ; display summary of procedure being added
"RTN","IBCCPT",93,0)
 N IBI,IBL,IBMODS,IBMOD,IBPRVTYP,IBPRV,IBDATE,IBP,IBDXT
"RTN","IBCCPT",94,0)
 I $G(CPTNM)=""!($G(NOD)="") Q
"RTN","IBCCPT",95,0)
 S IBMODS=$P(NOD,U,10),IBPRVTYP="",IBPRV=""
"RTN","IBCCPT",96,0)
 I +$P(NOD,U,8) S IBPRV=$P($G(^VA(200,+$P(NOD,U,8),0)),U,1),IBPRVTYP=$P($$PRVTYP^IBCRU6(+$P(NOD,U,8)),U,3) S IBL=$S(($L(IBPRVTYP)+$L(IBPRV))>32:"",1:" - ")
"RTN","IBCCPT",97,0)
 ;
"RTN","IBCCPT",98,0)
 W !!?4,"Adding CPT Procedure: ",$P(CPTNM,U,2),?34,$P(CPTNM,U,3)
"RTN","IBCCPT",99,0)
 S IBDATE=$$BDATE^IBACSV($G(IBIFN))
"RTN","IBCCPT",100,0)
 I IBMODS'="" F IBI=1:1 S IBMOD=$P(IBMODS,",",IBI) Q:'IBMOD  S IBMOD=$$MOD^ICPTMOD(IBMOD,"I",IBDATE) W !,?34,$P(IBMOD,U,2)," - ",$E($P(IBMOD,U,3),1,40)
"RTN","IBCCPT",101,0)
 W !,?34,"Visit: ",$$FMTE^XLFDT(+$P(NOD,U,2),2),", ",$E($P($G(^SC(+$P(NOD,U,9),0)),U,1),1,29)
"RTN","IBCCPT",102,0)
 I IBPRV'="" W !,?34,"Provider: ",$E(IBPRV,1,35) I IBPRVTYP'="" W:IBL="" !,?44 W IBL,IBPRVTYP
"RTN","IBCCPT",103,0)
 I DX F IBP=1:1 Q:'$P(DX,"^",IBP)  S IBDXT=$$ICD9^IBACSV($P(DX,"^",IBP),+$P(NOD,U,2)) W !,?34,"Assoc Dx: ",$E($P(IBDXT,"^")_" "_$P(IBDXT,"^",3),1,35)
"RTN","IBCCPT",104,0)
 W !
"RTN","IBCCPT",105,0)
 Q
"RTN","IBCCPT",106,0)
 ;
"RTN","IBCCPT",107,0)
VST(IBQUERY) ;Procedures for outpatient visits ... If IBQUERY is defined
"RTN","IBCCPT",108,0)
 ;  on entry, the QUERY OBJECT defined by this value will be used for
"RTN","IBCCPT",109,0)
 ;  loop to extract procedures for visits, otherwise, a new QUERY will be opened
"RTN","IBCCPT",110,0)
 ;  If passed by reference, IBQUERY will be ret'd as the new QUERY ref #
"RTN","IBCCPT",111,0)
 S DGCNT=0 I $O(^DGCR(399,IBIFN,"OP",0)) F V=0:0 S V=$O(^DGCR(399,IBIFN,"OP",V)) Q:'V  S (IBOPV1,IBOPV2)=V D PROC(.IBQUERY)
"RTN","IBCCPT",112,0)
 I $O(^DGCR(399,IBIFN,"OP",0)) K ^TMP("IBVIS",$J) G VSTQ
"RTN","IBCCPT",113,0)
 S IBOPV1=$P(^DGCR(399,IBIFN,"U"),"^"),IBOPV2=$P(^("U"),"^",2)
"RTN","IBCCPT",114,0)
 D PROC(.IBQUERY) K ^TMP("IBVIS",$J)
"RTN","IBCCPT",115,0)
VSTQ Q
"RTN","IBCCPT",116,0)
 ;
"RTN","IBCCPT",117,0)
WRNO W:'$O(^UTILITY($J,"CPT-CNT",0)) !,"NO CPT CODES ON FILE FOR THE ",$S($O(^DGCR(399,IBIFN,"OP",0)):"VISIT DATES ON THIS BILL",1:"PERIOD THAT THIS STATEMENT COVERS")
"RTN","IBCCPT",118,0)
 Q
"RTN","IBCCPT",119,0)
SCR Q:DGU="^"  I $E(IOST,1,2)["C-",$Y+6>IOSL F Y=$Y:1:IOSL-5 W !
"RTN","IBCCPT",120,0)
 I  R !,"Press return to continue or ""^"" to exit display ",DGU:DTIME D:DGU'="^" CHDR
"RTN","IBCCPT",121,0)
 Q
"RTN","IBCCPT",122,0)
HLP W !!,"Enter a number between 1 and ",DGCNT1," or a range of numbers separated with commas",!,"or dashes, e.g., 1,3,5 or 2-4,8"
"RTN","IBCCPT",123,0)
 W !,"The number(s) must appear as a selectable number in the sequential list." R H:5 K H Q
"RTN","IBCCPT",124,0)
CPT S DA(1)=IBIFN,IBCCPTZ=$P(^DGCR(399,DA(1),0),U,9),IBCCPTX=$S($D(^DGCR(399,DA(1),"C"))&IBCCPTZ:1,1:0)
"RTN","IBCCPT",125,0)
 K DIK,DGTE,I1 Q
"RTN","IBCCPT",126,0)
 ;
"RTN","IBCCPT",127,0)
PROC(IBQUERY) ;  -find outpatient procedures, flag if billable
"RTN","IBCCPT",128,0)
 ;  -  ^utility($j,cpt-cnt,count)=code^date^on bill^is BASC^divis^nb^nb mess^provider^clinic^mod,mod^Opt Enc Ptr
"RTN","IBCCPT",129,0)
 ;  -  ^utility($j,cpt-cnt,count,"dx")=assoc dx(1)^assoc dx(2)^assoc dx(3)^assoc dx(4)
"RTN","IBCCPT",130,0)
 N IBVAL,IBCBK,IBFILTER
"RTN","IBCCPT",131,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=IBOPV1,IBVAL("EDT")=(IBOPV2+.99)
"RTN","IBCCPT",132,0)
 ; Must be a billable appt type and outpt enctr status of CHECKED OUT
"RTN","IBCCPT",133,0)
 S IBFILTER=""
"RTN","IBCCPT",134,0)
 S IBCBK="I '$P(Y0,U,6),$P(Y0,U,7),$$DSP^IBEFUNC($P(Y0,U,10),+Y0),'$D(^TMP(""IBVIS"",$J,+$P(Y0,U,5))) S ^TMP(""IBVIS"",$J,+$P(Y0,U,5))="""" D EXTPROC^IBCCPT(IBIFN,Y,Y0,.DGCNT)"
"RTN","IBCCPT",135,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,IBFILTER,IBCBK,0,.IBQUERY) K ^TMP("DIERR",$J)
"RTN","IBCCPT",136,0)
 ;
"RTN","IBCCPT",137,0)
 Q
"RTN","IBCCPT",138,0)
EXTPROC(IBIFN,IBOE,IBOE0,IBCNT) ; Extract procedures for an encounter
"RTN","IBCCPT",139,0)
 ; IBIFN = the ien of the bill
"RTN","IBCCPT",140,0)
 ; IBOE0 = 0-node of the outpatient encounter file entry IBOE
"RTN","IBCCPT",141,0)
 ; IBCNT  extracted entry counter
"RTN","IBCCPT",142,0)
 N I2,I7,IBCPT,IBCPTS,IBDIV,IBOED,IBZERR,Z,IBCPTDAT,IBCPTPRV,IBCLINIC,IBZ,IBONBILL,IBMODS,IBARR,IBDT,DFN,IBEX,IBDX,IBOEDP
"RTN","IBCCPT",143,0)
 ; make sure i have this variable
"RTN","IBCCPT",144,0)
 S:$G(IBOE0)="" IBOE0=$$SCE^IBSDU(+IBOE)
"RTN","IBCCPT",145,0)
 D GETCPT^SDOE(IBOE,"IBCPTS","IBZERR")
"RTN","IBCCPT",146,0)
 Q:'$O(IBCPTS(0))  ;No procedures for this encounter
"RTN","IBCCPT",147,0)
 I '$$BDSRC^IBEFUNC3($P($G(IBOE0),U,5)) Q  ; non-billable visit data source
"RTN","IBCCPT",148,0)
 S IBOED=$$NBOE^IBCU81(IBOE,IBOE0)
"RTN","IBCCPT",149,0)
 S I7=IBOE0\1,IBDIV=$P(IBOE0,U,11)
"RTN","IBCCPT",150,0)
 S IBCLINIC="" I +$P(IBOE0,U,4),+$$CLNSCRN^IBCU(I7,+$P(IBOE0,U,4)) S IBCLINIC=+$P(IBOE0,U,4)
"RTN","IBCCPT",151,0)
 S I2=0 F  S I2=$O(IBCPTS(I2)) Q:'I2  D
"RTN","IBCCPT",152,0)
 . S IBCPT=$P(IBCPTS(I2),U)
"RTN","IBCCPT",153,0)
 . S IBCPTPRV=$P($G(IBCPTS(I2,12)),U,4)
"RTN","IBCCPT",154,0)
 . S IBONBILL=0 S IBZ=0 F  S IBZ=$O(^DGCR(399,IBIFN,"CP","B",IBCPT_";ICPT(",IBZ)) Q:'IBZ  I $P($G(^DGCR(399,IBIFN,"CP",IBZ,0)),U,2)=I7 S IBONBILL=1
"RTN","IBCCPT",155,0)
 . S IBMODS="",IBZ=0 F  S IBZ=$O(IBCPTS(I2,1,IBZ)) Q:'IBZ  S IBMODS=IBMODS_$S(IBMODS="":"",1:",")_+$G(IBCPTS(I2,1,IBZ,0))
"RTN","IBCCPT",156,0)
 . ;
"RTN","IBCCPT",157,0)
 . ; look up of a procedure is non-billable and get assoc dx
"RTN","IBCCPT",158,0)
 . S IBOEDP=IBOED I IBOEDP="" S IBOEDP=$$NBOEP^IBCCPT1(IBOE0,IBCPT,.IBDX) I IBOEDP'="" S IBOEDP=4_U_IBOEDP
"RTN","IBCCPT",159,0)
 . S IBCPTDAT=IBCPT_U_I7_U_IBONBILL_U_0_U_IBDIV_U_$P(IBOEDP,U,1)_U_$P(IBOEDP,U,2)_U_IBCPTPRV_U_IBCLINIC_U_IBMODS_U_IBOE
"RTN","IBCCPT",160,0)
 . F Z=1:1:$P(IBCPTS(I2),U,16) S IBCNT=IBCNT+1,^UTILITY($J,"CPT-CNT",IBCNT)=IBCPTDAT,^UTILITY($J,"CPT-CNT",IBCNT,"DX")=$G(IBDX)
"RTN","IBCCPT",161,0)
 . K IBDX
"RTN","IBCCPT",162,0)
 I $O(IBARR("CPT",0)),'$D(^UTILITY($J,"CPT",+IBOE0,0)) S ^(0)="Y"
"RTN","IBCCPT",163,0)
 Q
"RTN","IBCCPT",164,0)
 ;
"RTN","IBCCPT",165,0)
TOMANY(DATE) ;  - returns 1 if more than 1 visit date on bill (for basc)
"RTN","IBCCPT",166,0)
 G TOMANYQ:'$D(DATE)
"RTN","IBCCPT",167,0)
 S DGVCNT=+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4)
"RTN","IBCCPT",168,0)
 I DGVCNT>1!(DGVCNT=1&('$D(^DGCR(399,IBIFN,"OP",DATE)))) K DGVCNT Q 1
"RTN","IBCCPT",169,0)
TOMANYQ Q 0
"RTN","IBCCPT",170,0)
 ;
"RTN","IBCSC4A")
0^8^B31509518^B31464103
"RTN","IBCSC4A",1,0)
IBCSC4A ;ALB/MJB - MCCR PTF SCREEN  ;24 FEB 89 9:49
"RTN","IBCSC4A",2,0)
 ;;2.0;INTEGRATED BILLING;**106,228,339**;21-MAR-94;Build 2
"RTN","IBCSC4A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC4A",4,0)
 ;
"RTN","IBCSC4A",5,0)
 ;MAP TO DGCRSC4A
"RTN","IBCSC4A",6,0)
 ;
"RTN","IBCSC4A",7,0)
DX Q:'$D(^DGPT(+IBPTF,0))  S (IBDXC,IBOPC)=0,IBNC="NO DX CODES ENTERED FOR THIS DATE" K ^UTILITY($J,"IBDX")
"RTN","IBCSC4A",8,0)
 ;F I=0:0 S I=$O(^DGPT(IBPTF,"M","AM",I)) Q:I'>0  S X=$O(^DGPT(IBPTF,"M","AM",I,0)),IBDX((9999999-$P(I,".",1)),X)=""
"RTN","IBCSC4A",9,0)
 ;I '$D(^DGPT(IBPTF,"M","AM")) S IBDX(9999999-DT,1)=""
"RTN","IBCSC4A",10,0)
 ;S IBDIA=0 F I=1:1:26 S IBDIA=$O(IBDX(IBDIA)) Q:IBDIA=""  S X=$O(IBDX(IBDIA,0)),M=$S($D(^DGPT(IBPTF,"M",X,0)):^(0),1:"") I M]"" S IBCT=0 F J=5:1:9 S:$P(M,U,J)]"" IBCT=IBCT+1,^UTILITY($J,"IBDX",I,IBCT)=$P(M,U,J) D:J=5 T
"RTN","IBCSC4A",11,0)
 ;S IBDIA="" F I=1:1:13 S IBDIA=$O(^UTILITY($J,"IBDX",IBDIA)) Q:IBDIA=""  D ODD S IBDIA=$O(^UTILITY($J,"IBDX",IBDIA)) D:IBDIA]"" EVEN D SETD^IBCSC4C Q:IBDIA']""
"RTN","IBCSC4A",12,0)
 ;
"RTN","IBCSC4A",13,0)
PRO S IBNC="NO PRO CODES ENTERED FOR THIS DATE",IBOPC=0 K ^UTILITY($J,"IB"),^TMP("IBTYPE",$J)
"RTN","IBCSC4A",14,0)
 F I=0:0 S I=$O(^DGPT(IBPTF,"S",I)) Q:I'>0  S J=$S($D(^DGPT(IBPTF,"S",I,0)):^(0),1:"") I J]"" S X=+J,X=$S(X[".":9999999-X,1:(9999999_"."_I)-X),IBOP(X)=$P(J,U)_U_$P(J,U,8,12)
"RTN","IBCSC4A",15,0)
 F I=0:0 S I=$O(^DGPT(IBPTF,"P",I)) Q:I'>0  S J=$S($D(^DGPT(IBPTF,"P",I,0)):^(0),1:"") I J]"" S X=+J,X=$S(X[".":9999999-X,1:(9999999_"."_I)-X),IBSP(X)=$P(J,U)_U_$P(J,U,5,9)
"RTN","IBCSC4A",16,0)
 S IBP=0 F I=1:1:26 S IBP=$O(IBOP(IBP)) Q:IBP=""  S M=IBOP(IBP),IBCT=0 F J=2:1:6 Q:IBCT=3  S:$P(M,U,J)]"" IBCT=IBCT+1,^UTILITY($J,"IB",I,IBCT)=$P(M,U,J) D:J=2 TP
"RTN","IBCSC4A",17,0)
 I I<26 S IBP="" F I=I:1:26 S IBP=$O(IBSP(IBP)) Q:IBP=""  S M=IBSP(IBP),IBCT=0 F J=2:1:6 Q:IBCT=3  S:$P(M,U,J)]"" IBCT=IBCT+1 D:$P(M,U,J)]"" T1 D:J=2 T2
"RTN","IBCSC4A",18,0)
 D PTFPS(DFN,IBPTF,+IB("U"),$P(IB("U"),"^",2))
"RTN","IBCSC4A",19,0)
 S IBP="" F I=1:1:13 S IBP=$O(^UTILITY($J,"IB",IBP)) Q:IBP=""  D ODDP S IBP=$O(^UTILITY($J,"IB",IBP)) D:IBP]"" EVENP D SETP^IBCSC4C Q:IBP=""
"RTN","IBCSC4A",20,0)
 Q
"RTN","IBCSC4A",21,0)
 ;
"RTN","IBCSC4A",22,0)
T I IBCT>0 S IBDXC=IBDXC+1,^UTILITY($J,"IBDX",I,IBCT)=^UTILITY($J,"IBDX",I,IBCT)_U_$P($P(M,U,10),".",1)_U_$C(64+IBDXC)_U_$P(M,U,2)_"^"_$S(X'=1:"",'$D(^DGPT(IBPTF,70)):"",1:"D/C")_"^"_$$SC(M) Q
"RTN","IBCSC4A",23,0)
 S ^UTILITY($J,"IBDX",I,1)=IBNC_U_$P($P(M,U,10),".",1)_"^^"_$P(^DGPT(IBPTF,"M",X,0),U,2)_"^^"_$$SC(M) Q
"RTN","IBCSC4A",24,0)
 ;
"RTN","IBCSC4A",25,0)
ODD S X=^UTILITY($J,"IBDX",IBDIA,1),IBWO(0)=$P(X,U,3)_U_$P(X,U,2)_U_$P(X,U,4,6),IBWO(1)=$P(X,U,1) F M=2:1:5 S IBWO(M)=$S($D(^UTILITY($J,"IBDX",IBDIA,M)):^(M),1:"")
"RTN","IBCSC4A",26,0)
 Q
"RTN","IBCSC4A",27,0)
 ;
"RTN","IBCSC4A",28,0)
EVEN S X=^UTILITY($J,"IBDX",IBDIA,1),IBWE(0)=$P(X,U,3)_U_$P(X,U,2)_U_$P(X,U,4,6),IBWE(1)=$P(X,U,1) F M=2:1:5 S IBWE(M)=$S($D(^UTILITY($J,"IBDX",IBDIA,M)):^(M),1:"")
"RTN","IBCSC4A",29,0)
 I $P(IBWE(0),U,1)']"" F M=1:1:5 S IBWE(M)=""
"RTN","IBCSC4A",30,0)
 Q
"RTN","IBCSC4A",31,0)
 ;
"RTN","IBCSC4A",32,0)
TP I IBCT>0 S IBOPC=IBOPC+1,^UTILITY($J,"IB",I,IBCT)=^UTILITY($J,"IB",I,IBCT)_U_$P(+M,".",1)_U_$C(64+IBOPC) Q
"RTN","IBCSC4A",33,0)
 S ^UTILITY($J,"IB",I,1)=IBNC_U_$P(+M,".",1) Q
"RTN","IBCSC4A",34,0)
T1 S ^UTILITY($J,"IB",I,IBCT)=$P(M,U,J) Q
"RTN","IBCSC4A",35,0)
T2 I IBCT>0 S IBOPC=IBOPC+1,^UTILITY($J,"IB",I,IBCT)=^UTILITY($J,"IB",I,IBCT)_U_$P($P(M,U,1),".",1)_U_$C(64+IBOPC)_U_"*" Q
"RTN","IBCSC4A",36,0)
 S ^UTILITY($J,"IB",I,1)=IBNC_U_$P($P(M,U,1),".",1)_"^^*" Q
"RTN","IBCSC4A",37,0)
 ;
"RTN","IBCSC4A",38,0)
ODDP S X=^UTILITY($J,"IB",IBP,1),IBWO(0)=$P(X,U,3)_U_$P(X,U,2)_U_$S($P(X,U,4)="*":"*",$P(X,U,4)="+":"+",1:""),IBWO(1)=$P(X,U,1)_"^"_$P(X,"^",5,13) F M=2:1:5 S IBWO(M)=$S($D(^UTILITY($J,"IB",IBP,M)):^(M),1:"")
"RTN","IBCSC4A",39,0)
 Q
"RTN","IBCSC4A",40,0)
 ;
"RTN","IBCSC4A",41,0)
EVENP S X=^UTILITY($J,"IB",IBP,1),IBWE(0)=$P(X,U,3)_U_$P(X,U,2)_U_$S($P(X,U,4)="*":"*",$P(X,U,4)="+":"+",1:""),IBWE(1)=$P(X,U,1)_"^"_$P(X,"^",5,13) F M=2:1:5 S IBWE(M)=$S($D(^UTILITY($J,"IB",IBP,M)):^(M),1:"")
"RTN","IBCSC4A",42,0)
 Q
"RTN","IBCSC4A",43,0)
 ;
"RTN","IBCSC4A",44,0)
NUL F I=1:1:13 S $P(^DGCR(399,IBIFN,"C"),U,I)=""
"RTN","IBCSC4A",45,0)
 Q
"RTN","IBCSC4A",46,0)
 ;
"RTN","IBCSC4A",47,0)
P S M=($A($E(X,1))-64),S=$E(X,2),IB5=$S($D(^UTILITY($J,"IB",M,S)):^(S),1:"") I IB5]"" Q:$P(^UTILITY($J,"IB",M,1),U,3)=$E(X,1)
"RTN","IBCSC4A",48,0)
 F J=M:1:26 Q:'$D(^UTILITY($J,"IB",J))  I $P(^UTILITY($J,"IB",J,1),U,3)=$E(X,1) S M=J,IBA=1 Q
"RTN","IBCSC4A",49,0)
 S:'$D(IBA) M=0 K IBA Q
"RTN","IBCSC4A",50,0)
D S M=($A($E(X,1))-64),S=$E(X,2),IB4=$S($D(^UTILITY($J,"IBDX",M,S)):^(S),1:"") I IB4]"" Q:$P(^UTILITY($J,"IBDX",M,1),U,3)=$E(X,1)
"RTN","IBCSC4A",51,0)
 F J=M:1:26 Q:'$D(^UTILITY($J,"IBDX",J))  I $P(^UTILITY($J,"IBDX",J,1),U,3)=$E(X,1) S M=J,IBA=1 Q
"RTN","IBCSC4A",52,0)
 S:'$D(IBA) M=0 K IBA Q
"RTN","IBCSC4A",53,0)
 ;
"RTN","IBCSC4A",54,0)
SC(M) ;  - check SC flag of movement
"RTN","IBCSC4A",55,0)
 ;    input movement node
"RTN","IBCSC4A",56,0)
 ;    output flag as to whether sc or not
"RTN","IBCSC4A",57,0)
 I '$D(M) Q ""
"RTN","IBCSC4A",58,0)
 I M="" Q ""
"RTN","IBCSC4A",59,0)
 Q $S($P(M,"^",18)=1:"<SC>",1:"<NSC>")
"RTN","IBCSC4A",60,0)
 ;
"RTN","IBCSC4A",61,0)
PTFPS(DFN,IBPTF,IBFDT,IBTDT) ; this will return a list of professional
"RTN","IBCSC4A",62,0)
 ; services from the ptf records.  If no date range specified, then
"RTN","IBCSC4A",63,0)
 ; it will return all services for that ptf entry.
"RTN","IBCSC4A",64,0)
 ;  return:  ^utility($j,"IB",count for event,count for procedures) =
"RTN","IBCSC4A",65,0)
 ;           pices: 1 = procedure
"RTN","IBCSC4A",66,0)
 ;                  2 = date (only if new date)
"RTN","IBCSC4A",67,0)
 ;                  3 = sequentual grouping letter (only if new date) 
"RTN","IBCSC4A",68,0)
 ;                  4 = "+" to flag as CPT 4 procedure
"RTN","IBCSC4A",69,0)
 ;                  5 = if exemption applicable, info for that
"RTN","IBCSC4A",70,0)
 ;                6-9 = assoc dx in order
"RTN","IBCSC4A",71,0)
 ;                 10 = quantity
"RTN","IBCSC4A",72,0)
 ;              11-12 = modifiers
"RTN","IBCSC4A",73,0)
 ;                 13 = provider
"RTN","IBCSC4A",74,0)
 ;                 14 = location
"RTN","IBCSC4A",75,0)
 ;
"RTN","IBCSC4A",76,0)
 ; the exemption information returned will be first evaluated at the
"RTN","IBCSC4A",77,0)
 ; dx level and if nothing there to exempt, it will be at the procedure
"RTN","IBCSC4A",78,0)
 ; level.
"RTN","IBCSC4A",79,0)
 ;
"RTN","IBCSC4A",80,0)
 N IBX,IBY,IBDT,IBXX,IBP,IBC,IBRMARK,IBDX,IBDXX,IBPP,IB46
"RTN","IBCSC4A",81,0)
 K ^TMP("PTF",$J),^TMP("IBPTFPS",$J)
"RTN","IBCSC4A",82,0)
 S IBFDT=$G(IBFDT),IBTDT=$G(IBTDT,9999999)_".99999"
"RTN","IBCSC4A",83,0)
 ;
"RTN","IBCSC4A",84,0)
 ; get starting place for ^utility global
"RTN","IBCSC4A",85,0)
 S IBC=+$O(^UTILITY($J,"IB",":"),-1)
"RTN","IBCSC4A",86,0)
 ;
"RTN","IBCSC4A",87,0)
 D PTFINFOR^DGAPI(DFN,IBPTF) I '$D(^TMP("PTF",$J)) G PTFPSQ
"RTN","IBCSC4A",88,0)
 ;
"RTN","IBCSC4A",89,0)
 S IBX=0 F  S IBX=$O(^TMP("PTF",$J,IBX)) Q:IBX<1  S IBY=^TMP("PTF",$J,IBX) I $S(IBFDT<+IBY&(IBTDT>+IBY):1,1:0) S ^TMP("IBPTFPS",$J,+IBY)=""
"RTN","IBCSC4A",90,0)
 I '$D(^TMP("IBPTFPS",$J)) G PTFPSQ
"RTN","IBCSC4A",91,0)
 ;
"RTN","IBCSC4A",92,0)
 K ^TMP("PTF",$J)
"RTN","IBCSC4A",93,0)
 D ICDINFO^DGAPI(DFN,IBPTF) ;get the dx's for the ptf
"RTN","IBCSC4A",94,0)
 ;
"RTN","IBCSC4A",95,0)
 S IBDT=0 F  S:'IBC!($D(^UTILITY($J,"IB",IBC))) IBC=IBC+1 S IBDT=$O(^TMP("IBPTFPS",$J,IBDT)) Q:IBDT<1  D
"RTN","IBCSC4A",96,0)
 . ;
"RTN","IBCSC4A",97,0)
 . S IBD=0
"RTN","IBCSC4A",98,0)
 . D CPTINFO^DGAPI(DFN,,IBDT) I '$D(^TMP("PTF",$J,46)) Q
"RTN","IBCSC4A",99,0)
 . S IB46=$P($G(^TMP("PTF",$J,46,0)),"^",2)_"^"_$P($G(^(0)),"^",4)
"RTN","IBCSC4A",100,0)
 . ;
"RTN","IBCSC4A",101,0)
 . S IBX=0 F  S IBX=$O(^TMP("PTF",$J,46,IBX)) Q:IBX<1  S IBY=^TMP("PTF",$J,46,IBX) D
"RTN","IBCSC4A",102,0)
 .. S IBRMARK=""
"RTN","IBCSC4A",103,0)
 .. F IBP=5:1:8,16:1:19 S IBDX=$P(IBY,"^",IBP),IBDXX=0 F  S IBDXX=$O(^TMP("PTF",$J,46.1,IBDXX)) Q:IBDXX<1!(IBRMARK)  I $P(^TMP("PTF",$J,46.1,IBDXX),"^",2)=IBDX D
"RTN","IBCSC4A",104,0)
 ... F IBPP=3:1:10 I $P(^TMP("PTF",$J,46.1,IBDXX),"^",IBPP) S IBRMARK=IBPP Q
"RTN","IBCSC4A",105,0)
 .. S IBD=IBD+1,^UTILITY($J,"IB",IBC,IBD)=$P(IBY,"^",2)_"^"_$S(IBD=1:$P(IBDT,".")_"^"_$C(IBC+64)_"^+^",1:"^^^")_$S(IBRMARK:$P($T(EXEMPT+(IBRMARK-2)),";",3),1:"")_"^"_$P(IBY,"^",5,8)_"^"_$P(IBY,"^",15)_"^"_$P(IBY,"^",3,4)_"^"_IB46
"RTN","IBCSC4A",106,0)
 . S IBD=0
"RTN","IBCSC4A",107,0)
 . K ^TMP("PTF",$J,46)
"RTN","IBCSC4A",108,0)
 ;
"RTN","IBCSC4A",109,0)
 ;
"RTN","IBCSC4A",110,0)
PTFPSQ K ^TMP("PTF",$J),^TMP("IBPTFPS",$J),^TMP("CPT",$J)
"RTN","IBCSC4A",111,0)
 Q
"RTN","IBCSC4A",112,0)
 ;
"RTN","IBCSC4A",113,0)
EXEMPT ; exemption reasons
"RTN","IBCSC4A",114,0)
 ;;SC
"RTN","IBCSC4A",115,0)
 ;;AO
"RTN","IBCSC4A",116,0)
 ;;IR
"RTN","IBCSC4A",117,0)
 ;;SW
"RTN","IBCSC4A",118,0)
 ;;MT
"RTN","IBCSC4A",119,0)
 ;;HC
"RTN","IBCSC4A",120,0)
 ;;CV
"RTN","IBCSC4A",121,0)
 ;;SH
"RTN","IBCSC4A",122,0)
 ;
"RTN","IBCSC5B")
0^9^B22247597^B22166369
"RTN","IBCSC5B",1,0)
IBCSC5B ;ALB/ARH - ADD/ENTER PROSTHETIC ITEMS ;12/28/93
"RTN","IBCSC5B",2,0)
 ;;2.0;INTEGRATED BILLING;**4,52,260,339**;21-MAR-94;Build 2
"RTN","IBCSC5B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC5B",4,0)
 ;
"RTN","IBCSC5B",5,0)
 ;
"RTN","IBCSC5B",6,0)
EN ;add/edit prosthetic items for a bill, IBIFN required
"RTN","IBCSC5B",7,0)
 S IBX=$$BILL(IBIFN) Q:'IBIFN  S DFN=+IBX,IBDT1=$P(IBX,U,2),IBDT2=$P(IBX,U,3)
"RTN","IBCSC5B",8,0)
 D SET(IBIFN,.IBPDA),PIDISP(DFN,IBDT1,IBDT2,.IBPDE,.IBPDA),DISP(.IBPDA)
"RTN","IBCSC5B",9,0)
E1 S IBPIFN=0,IBDT=$$ASKDT(IBDT1,IBDT2) G:'IBDT EXIT
"RTN","IBCSC5B",10,0)
 S IBPD=$O(IBPDA(IBDT,0)) S:'IBPD IBPD=$O(IBPDE(IBDT,0)) S IBPD=$$ASKPD(IBPD) G:'IBPD E1
"RTN","IBCSC5B",11,0)
 S IBPIFN=$G(IBPDA(IBDT,+IBPD)) I 'IBPIFN S IBPIFN=$$ADD(IBDT,IBIFN,+IBPD,+$G(IBPDE(IBDT,+IBPD))) I 'IBPIFN W " ??" G E1
"RTN","IBCSC5B",12,0)
 I '$D(IBPDE(IBDT,+IBPD)) W !,"This prosthetic item does not exist in this patients prosthetics record.",!
"RTN","IBCSC5B",13,0)
 D EDIT(+IBPIFN) D SET(IBIFN,.IBPDA) W ! G E1
"RTN","IBCSC5B",14,0)
 ;
"RTN","IBCSC5B",15,0)
EXIT K IBPIFN,IBX,IBDT1,IBDT2,IBPDA,IBPDE,IBPD,IBDT
"RTN","IBCSC5B",16,0)
 Q
"RTN","IBCSC5B",17,0)
 ;
"RTN","IBCSC5B",18,0)
ASKDT(IBDT1,IBDT2,IBDT) ;
"RTN","IBCSC5B",19,0)
 I +$G(IBIFN) S DIR("?")="Enter the date the item was delivered to the patient",DIR("??")="^D HELP^IBCSC5B("_IBIFN_")"
"RTN","IBCSC5B",20,0)
 S DIR("A")="Select ITEM DELIVERY DATE",DIR(0)="DO^"_IBDT1_":"_IBDT2_":EX" D ^DIR K DIR,DTOUT,DIRUT
"RTN","IBCSC5B",21,0)
 Q $S(Y?7N:Y,1:0)
"RTN","IBCSC5B",22,0)
 ;
"RTN","IBCSC5B",23,0)
ASKPD(PD) ;
"RTN","IBCSC5B",24,0)
 N X,Y
"RTN","IBCSC5B",25,0)
 S DIR("A")="Select PROSTHETIC ITEM",DIR(0)="660,4O" S:+$G(PD) DIR("B")=+$G(^RMPR(661,+$G(PD),0)) D ^DIR S:$D(DIRUT)!(Y'>0) Y="" K DIR,DIRUT
"RTN","IBCSC5B",26,0)
 Q Y
"RTN","IBCSC5B",27,0)
 ;
"RTN","IBCSC5B",28,0)
ADD(IBDT,IFN,IBPD,PIFN) ;
"RTN","IBCSC5B",29,0)
 N IBX,IBY,IBDX,IBHCPCS S IBX=0,DIC="^IBA(362.5,",DIC(0)="AQL",X=IBDT K DA,DO D FILE^DICN K DA,DO,X
"RTN","IBCSC5B",30,0)
 I Y>0 S DIE=DIC,(IBX,DA)=+Y,DR=".02////"_IFN_";.03////"_IBPD_";.04////"_PIFN D ^DIE K DIE,DIC,DA,DR W "... ADDED"
"RTN","IBCSC5B",31,0)
 ;add dx if known
"RTN","IBCSC5B",32,0)
 F IBY=1:1:4 S IBDX=+$G(^RMPR(660,PIFN,"BA"_IBY)) I IBDX,'$O(^IBA(362.3,"AIFN"_IFN,IBDX)) D
"RTN","IBCSC5B",33,0)
 . S DIC="^IBA(362.3,",DIC(0)="L",DLAYGO=362.3,X=IBDX,DIC("DR")=".02////"_IFN K DD,DO D FILE^DICN S IBDX(+Y)=""
"RTN","IBCSC5B",34,0)
 ;add hcpcs if known
"RTN","IBCSC5B",35,0)
 ;S IBHCPCS=$P($G(^RMPR(660,PIEN,0)),"^",22) I IBHCPCS
"RTN","IBCSC5B",36,0)
 ;
"RTN","IBCSC5B",37,0)
 Q IBX
"RTN","IBCSC5B",38,0)
 ;
"RTN","IBCSC5B",39,0)
EDIT(PIFN) ;
"RTN","IBCSC5B",40,0)
 S DIDEL=362.5,DIE="^IBA(362.5,",DR=".01;.03",DA=PIFN D ^DIE K DIE,DR,DA,DIC,DIDEL
"RTN","IBCSC5B",41,0)
 Q
"RTN","IBCSC5B",42,0)
 ;
"RTN","IBCSC5B",43,0)
SET(IFN,PDARR) ;setup array of all prosthetic devices for bill, array name should be passed by reference
"RTN","IBCSC5B",44,0)
 ;returns: PDARR(PD DELIV DATE, PD ITEM (661 ptr))=PD IFN (362.5 ptr),  PDARR=BILL IFN ^ PD count
"RTN","IBCSC5B",45,0)
 N CNT,IBX,IBY,PIFN,IBC,IBRC K PDARR S IBC="AIFN"_$G(IFN)
"RTN","IBCSC5B",46,0)
 D RCITEM^IBCSC5A(IBIFN,"IBRC",5)
"RTN","IBCSC5B",47,0)
 S (CNT,IBX)=0 F  S IBX=$O(^IBA(362.5,IBC,IBX)) Q:'IBX  S PIFN=0 F  S PIFN=$O(^IBA(362.5,IBC,IBX,PIFN)) Q:'PIFN  D
"RTN","IBCSC5B",48,0)
 . S IBY=$G(^IBA(362.5,PIFN,0)) Q:IBY=""  S CNT=CNT+1,PDARR(+IBY,$P(IBY,U,3))=PIFN_U_$$CHG^IBCF4(PIFN,5,.IBRC)
"RTN","IBCSC5B",49,0)
 S PDARR=$G(IFN)_"^"_CNT
"RTN","IBCSC5B",50,0)
 Q
"RTN","IBCSC5B",51,0)
 ;
"RTN","IBCSC5B",52,0)
DISP(PDARR) ;screen display of existing prosthetic devices for a bill,
"RTN","IBCSC5B",53,0)
 ;input should be array returned by SET^IBCSC5B: PDARR(PD DT, PD ITEM)=PD IFN (362.5), pass by reference
"RTN","IBCSC5B",54,0)
 N IBX,IBY,IBZ
"RTN","IBCSC5B",55,0)
 W !!,?5,"-----------------  Existing Prosthetic Items for Bill  -----------------",!
"RTN","IBCSC5B",56,0)
 S IBX=0 F  S IBX=$O(PDARR(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(PDARR(IBX,IBY)) Q:'IBY  D
"RTN","IBCSC5B",57,0)
 . S IBZ=$$PIN(IBY) W !,$$DATE(IBX),?12,$P(IBZ,U,1),?20,$P(IBZ,U,2)
"RTN","IBCSC5B",58,0)
 W !
"RTN","IBCSC5B",59,0)
 Q
"RTN","IBCSC5B",60,0)
 ;
"RTN","IBCSC5B",61,0)
HELP(IFN) ;called for help from prosthetics enter to display existing devices, displays devices from 660 and 399
"RTN","IBCSC5B",62,0)
 I +$G(IFN) N IBX,IBPDA S IBX=$$BILL(IFN) I +IBX D SET(IFN,.IBPDA),PIDISP($P(IBX,U,1),$P(IBX,U,2),$P(IBX,U,3),"",.IBPDA),DISP(.IBPDA)
"RTN","IBCSC5B",63,0)
 Q
"RTN","IBCSC5B",64,0)
 ;
"RTN","IBCSC5B",65,0)
PIDISP(DFN,DT1,DT2,ARRAY,PDARR) ; display all prosthetic items (660) for a patient and date range
"RTN","IBCSC5B",66,0)
 ;PDARR (as defined by SET^IBCSC5B) passed by ref. only to check if pros. item is on the bill, not necessary, not changed
"RTN","IBCSC5B",67,0)
 ;returns ARRAY(PD DEL DATE (660,10), PD ITEM (660,4=661 ptr))=RECORD (660 ptr), should pass by ref. if desired
"RTN","IBCSC5B",68,0)
 N PIFN,IBX,IBY,PNAME,DDT,PI,IBICD,IBEX,IBP
"RTN","IBCSC5B",69,0)
 K ARRAY S DT1=$G(DT1)-.0001,DT2=$G(DT2) S:'DT2 DT2=9999999 Q:'$G(DFN)
"RTN","IBCSC5B",70,0)
 S PIFN=0 F  S PIFN=$O(^RMPR(660,"C",DFN,PIFN)) Q:'PIFN  D
"RTN","IBCSC5B",71,0)
 . S IBX=$G(^RMPR(660,PIFN,0)),DDT=+$P(IBX,U,12)\1 I (DDT<DT1)!(DDT>DT2) Q
"RTN","IBCSC5B",72,0)
 . S ARRAY(DDT,+$P(IBX,U,6))=PIFN
"RTN","IBCSC5B",73,0)
 ;
"RTN","IBCSC5B",74,0)
 W @IOF,?33,"PROSTHETICS SCREEN",!,"================================================================================",!
"RTN","IBCSC5B",75,0)
 S DDT=0 F  S DDT=$O(ARRAY(DDT)) Q:'DDT  S PI=0 F  S PI=$O(ARRAY(DDT,PI)) Q:'PI  D
"RTN","IBCSC5B",76,0)
 . S PIFN=ARRAY(DDT,PI),PNAME=$$PIN(PI),IBY=$G(^RMPR(660,PIFN,"AM")),IBX=$G(^RMPR(660,PIFN,0)) K IBEX
"RTN","IBCSC5B",77,0)
 . ; look for exemption info
"RTN","IBCSC5B",78,0)
 . F IBICD=1:1:4 Q:$D(IBEX)  I $D(^RMPR(660,PIFN,"BA"_IBICD)) F IBP=2:1:8 I $P(^RMPR(660,PIFN,"BA"_IBICD),"^",IBP) S IBEX="("_$P($T(EXEMPT+(IBP-1)),";",3)_")" Q
"RTN","IBCSC5B",79,0)
 . W !,$S($D(PDARR(+DDT,PI)):"*",1:"")
"RTN","IBCSC5B",80,0)
 . W ?2,$$DATE(DDT),?12,$P(PNAME,U,1),$G(IBEX),?20,$E($P(PNAME,U,2),1,30),?55,$E($$EXSET^IBEFUNC($P(IBX,U,14),660,12),1,4),?62,$$EXSET^IBEFUNC($P(IBY,U,3),660,62),?70,$J(+$P(IBX,U,16),9,2)
"RTN","IBCSC5B",81,0)
 Q
"RTN","IBCSC5B",82,0)
 ;
"RTN","IBCSC5B",83,0)
PIN(PITEM) ;given the pros item IFN (661 ptr) returns name for printing (661,.01^441,.05)
"RTN","IBCSC5B",84,0)
 N IBX,IBY S IBY="" I +$G(PITEM) S IBX=+$G(^RMPR(661,+PITEM,0)) I +IBX S IBY=IBX_U_$$DESCR^PRCPUX1(0,+IBX)
"RTN","IBCSC5B",85,0)
 Q IBY
"RTN","IBCSC5B",86,0)
 ;
"RTN","IBCSC5B",87,0)
BILL(IBIFN) ; display all existing prescription refills (52) for a patient and date range
"RTN","IBCSC5B",88,0)
 ; (call is a short cut to calling rxdisp if have bill number)
"RTN","IBCSC5B",89,0)
 N IBX,IBY S IBX=$G(^DGCR(399,+$G(IBIFN),0)),IBY=$P(IBX,U,2)
"RTN","IBCSC5B",90,0)
 S IBX=$G(^DGCR(399,+IBIFN,"U")),$P(IBY,U,2)=+IBX,$P(IBY,U,3)=+$P(IBX,U,2)
"RTN","IBCSC5B",91,0)
 Q IBY
"RTN","IBCSC5B",92,0)
 ;
"RTN","IBCSC5B",93,0)
DATE(X) ;
"RTN","IBCSC5B",94,0)
 Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCSC5B",95,0)
 ;
"RTN","IBCSC5B",96,0)
EXEMPT ; exemption reasons
"RTN","IBCSC5B",97,0)
 ;;AO
"RTN","IBCSC5B",98,0)
 ;;IR
"RTN","IBCSC5B",99,0)
 ;;SC
"RTN","IBCSC5B",100,0)
 ;;SWA
"RTN","IBCSC5B",101,0)
 ;;MST
"RTN","IBCSC5B",102,0)
 ;;HNC
"RTN","IBCSC5B",103,0)
 ;;CV
"RTN","IBCSC5B",104,0)
 ;
"RTN","IBCSC5C")
0^10^B37694343^B37628978
"RTN","IBCSC5C",1,0)
IBCSC5C ;ALB/ARH - ADD/EDIT PRESCRIPTION FILLS (CONTINUED) ;3/4/94
"RTN","IBCSC5C",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,130,51,160,260,309,315,339**;21-MAR-94;Build 2
"RTN","IBCSC5C",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC5C",4,0)
 ;
"RTN","IBCSC5C",5,0)
 ;
"RTN","IBCSC5C",6,0)
DEFAULT(IFN,IBRX) ; add default DX and CPT to a prescription bill
"RTN","IBCSC5C",7,0)
 ; if one is not in PSO.  If there is, use it instead.
"RTN","IBCSC5C",8,0)
 ; IFN = ien of bill entry
"RTN","IBCSC5C",9,0)
 N IBX,IBPAR1,IBDX,IBCPT,IBDT,IBBIL,IBDXIFN,IBCPTIFN,IBY,IB52,IBC
"RTN","IBCSC5C",10,0)
 S IBDXIFN=0
"RTN","IBCSC5C",11,0)
 S IBPAR1=$G(^IBE(350.9,1,1)),IBDX=$P(IBPAR1,U,29),IBCPT=$P(IBPAR1,U,30)
"RTN","IBCSC5C",12,0)
 S IBBIL=$G(^DGCR(399,+$G(IFN),0)) Q:IBBIL=""
"RTN","IBCSC5C",13,0)
 S IBX=$S($G(IBRX):$P($G(^DGCR(399,IFN,"RC",+IBRX,0)),U,11),1:$O(^IBA(362.4,"C",IFN,0))) Q:'IBX
"RTN","IBCSC5C",14,0)
 S IB52=+$P($G(^IBA(362.4,IBX,0)),"^",5),IBY=0 F  S IBY=$O(^PSRX(IB52,"ICD",IBY)) Q:'IBY  S IBDX(IBY)=$G(^PSRX(IB52,"ICD",IBY,0)) I 'IBDX(IBY) K IBDX(IBY)
"RTN","IBCSC5C",15,0)
 I 'IBDX,'IBCPT,$D(IBDX)<10 Q
"RTN","IBCSC5C",16,0)
 S IBDT=$P($G(^IBA(362.4,+IBX,0)),U,3) Q:'IBDT
"RTN","IBCSC5C",17,0)
 ; add dx associated with rx if they are there.
"RTN","IBCSC5C",18,0)
 I $D(IBDX)>9 S (IBC,IBDX,IBY)=0 F  S IBY=$O(IBDX(IBY)) Q:'IBY  D
"RTN","IBCSC5C",19,0)
 . I $D(^IBA(362.3,"AIFN"_IFN,+IBDX(IBY))) Q
"RTN","IBCSC5C",20,0)
 . S IBC=IBC+1
"RTN","IBCSC5C",21,0)
 . S DIC="^IBA(362.3,",DIC(0)="L",DIC("DR")=".02////"_IFN_";.03////"_IBC,X=+IBDX(IBY),DLAYGO=362.3
"RTN","IBCSC5C",22,0)
 . K DD,DO D FILE^DICN K DIC,DA,DR,DD,DO,DLAYGO
"RTN","IBCSC5C",23,0)
 . S IBDXIFN(IBC)=+Y
"RTN","IBCSC5C",24,0)
 ; add default dx if none found on actual rx.
"RTN","IBCSC5C",25,0)
 I +IBDX,'$D(^IBA(362.3,"AIFN"_IFN,+IBDX)) S DIC="^IBA(362.3,",DIC(0)="L",DIC("DR")=".02////"_IFN,X=IBDX,DLAYGO=362.3 K DD,DO D FILE^DICN K DIC,DA,DR,DD,DO,DLAYGO S IBDXIFN=+Y
"RTN","IBCSC5C",26,0)
 I +IBCPT D  ;Check if the procedure is already present for the Rx
"RTN","IBCSC5C",27,0)
 . N Z,Z0,DUP
"RTN","IBCSC5C",28,0)
 . S (DUP,Z)=0 F  S Z=$O(^DGCR(399,IFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) D  Q:DUP
"RTN","IBCSC5C",29,0)
 .. I $P(Z0,U,10)=3,$P(Z0,U,15),$P(Z0,U,11)=IBX S DUP=1
"RTN","IBCSC5C",30,0)
 . Q:DUP
"RTN","IBCSC5C",31,0)
 . I $P($G(^DGCR(399,IFN,0)),U,9)="" S DIE="^DGCR(399,",DA=IFN,DR=".09////5" D ^DIE K DIE,DIC,DA,DR
"RTN","IBCSC5C",32,0)
 . I '$D(^DGCR(399,IFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCSC5C",33,0)
 . S DLAYGO=399,DIC("DR")="1////"_IBDT D
"RTN","IBCSC5C",34,0)
 . . I +IBDXIFN>0 S DIC("DR")=DIC("DR")_";10////"_IBDXIFN Q
"RTN","IBCSC5C",35,0)
 . . I $D(IBDXIFN)>9 F IBY=1:1:4 I $D(IBDXIFN(IBY)) S DIC("DR")=DIC("DR")_";"_(IBY+9)_"////"_IBDXIFN(IBY)
"RTN","IBCSC5C",36,0)
 . S DIC="^DGCR(399,"_IFN_",""CP"",",DIC(0)="L",DA(1)=IFN,X=IBCPT_";ICPT(" K DD,DO D FILE^DICN K DIC,DA,DD,DO,DR,DLAYGO
"RTN","IBCSC5C",37,0)
 . I +Y D
"RTN","IBCSC5C",38,0)
 .. N Z,IBZ
"RTN","IBCSC5C",39,0)
 .. S IBZ=+Y,Z=$S($G(IBREV):IBREV,1:$$FINDREV^IBCSC5A(IFN,3,+IBX))
"RTN","IBCSC5C",40,0)
 .. I Z S DR=".15////"_IBZ_";.06////"_IBCPT,DA=+Z,DA(1)=IFN,DIE="^DGCR(399,"_DA(1)_",""RC""," D ^DIE
"RTN","IBCSC5C",41,0)
 Q
"RTN","IBCSC5C",42,0)
 ;
"RTN","IBCSC5C",43,0)
RXDISP(DFN,DT1,DT2,ARRAY,POARR,RXARR,IBRXALL,NODISP) ; display all rx fills for a patient and date range
"RTN","IBCSC5C",44,0)
 ;RXARR (as defined by SET^IBCSC5A) passed by ref. only to check if rx-fill is on the bill, not necessary not changed
"RTN","IBCSC5C",45,0)
 ;returns: ARRAY(RX #, FILL DT) = RX IFN (52) ^ FILL IFN ^ DRUG ^ DAYS SUPPLY ^ QTY ^ NDC, pass by reference if desired
"RTN","IBCSC5C",46,0)
 ;         POARR(CNT)=RX # ^ FILL DT
"RTN","IBCSC5C",47,0)
 N PIFN,RIFN,IBX,IBY,DTE,DTR,RX,IBCNT,IBRX0,IBRX2,IBS K ARRAY,POARR S POARR=0,NODISP=+$G(NODISP)
"RTN","IBCSC5C",48,0)
 S IBCNT=0,DT1=$G(DT1)-.0001,DT2=$G(DT2) S:'DT2 DT2=9999999 Q:'$G(DFN)
"RTN","IBCSC5C",49,0)
 ;^PS(55,DFN,"P","A",EXPIRATION DATE, RX) is the best xref available for finding patient fills in a date range
"RTN","IBCSC5C",50,0)
 ;if RX expires/cancelled before start of bill then should not be applicable to bill
"RTN","IBCSC5C",51,0)
 S DTE=DT1 F  S DTE=$O(^PS(55,DFN,"P","A",DTE)) Q:'DTE  D
"RTN","IBCSC5C",52,0)
 . S PIFN=0 F  S PIFN=$O(^PS(55,DFN,"P","A",DTE,PIFN)) Q:'PIFN  D
"RTN","IBCSC5C",53,0)
 .. S IBRX0=$G(^PSRX(PIFN,0)),IBRX2=$G(^PSRX(PIFN,2))
"RTN","IBCSC5C",54,0)
 .. ; original fill
"RTN","IBCSC5C",55,0)
 .. I +$G(IBRXALL) S DTR=$P(IBRX2,U,2) I DTR'<DT1,DTR'>DT2 D
"RTN","IBCSC5C",56,0)
 ... D DATA^IBRXUTL(+$P(IBRX0,U,6))
"RTN","IBCSC5C",57,0)
 ... S ARRAY($P(IBRX0,U,1),+DTR)=PIFN_U_0_U_$P(IBRX0,U,6)_U_$P(IBRX0,U,8)_U_$P(IBRX0,U,7)_U_$G(^TMP($J,"IBDRUG",+$P(IBRX0,U,6),31))
"RTN","IBCSC5C",58,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",59,0)
 ... Q
"RTN","IBCSC5C",60,0)
 .. ; refills
"RTN","IBCSC5C",61,0)
 .. S DTR=DT1 F  S DTR=$O(^PSRX(PIFN,1,"B",DTR)) Q:'DTR!(DTR>DT2)  D
"RTN","IBCSC5C",62,0)
 ... S RIFN=0 F  S RIFN=$O(^PSRX(PIFN,1,"B",DTR,RIFN)) Q:'RIFN  D
"RTN","IBCSC5C",63,0)
 .... S IBY=$G(^PSRX(PIFN,1,RIFN,0)) Q:IBY=""
"RTN","IBCSC5C",64,0)
 .... D DATA^IBRXUTL(+$P(IBRX0,U,6))
"RTN","IBCSC5C",65,0)
 .... S ARRAY($P(IBRX0,U,1),+IBY)=PIFN_U_RIFN_U_$P(IBRX0,U,6)_U_$P(IBRX0,U,8)_U_$P(IBY,U,4)_U_$G(^TMP($J,"IBDRUG",+$P(IBRX0,U,6),31))
"RTN","IBCSC5C",66,0)
 .... K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",67,0)
 .... Q
"RTN","IBCSC5C",68,0)
 ;
"RTN","IBCSC5C",69,0)
 S IBX="",IBS=0 F  S IBX=$O(ARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(ARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCSC5C",70,0)
 . S IBCNT=IBCNT+1,POARR(IBCNT)=$P(IBX,U,1)_"^"_+IBY,POARR=IBCNT I $D(RXARR(IBX,IBY)) S IBS=IBS+1
"RTN","IBCSC5C",71,0)
 S $P(POARR,U,2)=IBCNT-IBS
"RTN","IBCSC5C",72,0)
 ;
"RTN","IBCSC5C",73,0)
 Q:+NODISP
"RTN","IBCSC5C",74,0)
 W @IOF,?33,"PRESCRIPTIONS IN DATE RANGE",!,"===============================================================================",!
"RTN","IBCSC5C",75,0)
 S IBCNT=0 F  S IBCNT=$O(POARR(IBCNT)) Q:IBCNT=""  S RX=$P(POARR(IBCNT),U,1),DTR=$P(POARR(IBCNT),U,2) I RX'="",DTR'="" D
"RTN","IBCSC5C",76,0)
 . S IBS=$$RXSTAT^IBCU1($P(ARRAY(RX,DTR),U,3),$P(ARRAY(RX,DTR),U,1),DTR)
"RTN","IBCSC5C",77,0)
 . S IBY="" I $D(RXARR(RX,+DTR)) S IBY="*"
"RTN","IBCSC5C",78,0)
 . D ZERO^IBRXUTL(+$P(ARRAY(RX,DTR),U,3))
"RTN","IBCSC5C",79,0)
 . W !,$J(IBCNT,2),")",?5,IBY,?6,RX,?19,$E($G(^TMP($J,"IBDRUG",+$P(ARRAY(RX,DTR),U,3),.01)),1,25),?46,$$DATE(+DTR),?56,$P(IBS,U,1),?61,$P(IBS,U,2),?69,$P(IBS,U,3),?75,$$EXEMPT(+ARRAY(RX,DTR))
"RTN","IBCSC5C",80,0)
 . S IBY=$$RXDUP^IBCU3(RX,DTR,IBIFN) I +IBY W ?73,$P($G(^DGCR(399,+IBY,0)),U,1)
"RTN","IBCSC5C",81,0)
 . K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",82,0)
 Q
"RTN","IBCSC5C",83,0)
DATE(X) Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCSC5C",84,0)
 ;
"RTN","IBCSC5C",85,0)
NEWRX(IBX) ;
"RTN","IBCSC5C",86,0)
 Q:'$G(IBX)  N X,Y K IBLIST W !
"RTN","IBCSC5C",87,0)
NEWRX1 S DIR("?")="Enter the number preceding the RX Fills you want added to the bill.     "_$$HTEXT
"RTN","IBCSC5C",88,0)
 S DIR("A")="SELECT NEW RX FILLS TO ADD THE BILL"
"RTN","IBCSC5C",89,0)
 S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWRXE
"RTN","IBCSC5C",90,0)
 S IBLIST=Y
"RTN","IBCSC5C",91,0)
 ;
"RTN","IBCSC5C",92,0)
 S DIR("A")="YOU HAVE SELECTED "_IBLIST_" TO BE ADDED TO THE BILL IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC5C",93,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWRXE
"RTN","IBCSC5C",94,0)
 I 'Y K IBLIST G NEWRX1
"RTN","IBCSC5C",95,0)
NEWRXE Q
"RTN","IBCSC5C",96,0)
 ;
"RTN","IBCSC5C",97,0)
ADDNEW(IBIFN,LIST,IBPR,IBPRO) ;
"RTN","IBCSC5C",98,0)
 Q:'LIST  N IBI,IBX,IBRX,IBDT,IBQ,IBY,IBPIFN,IBZ
"RTN","IBCSC5C",99,0)
 F IBI=1:1 S IBX=$P(LIST,",",IBI) Q:'IBX  I $D(IBPRO(IBX)) D
"RTN","IBCSC5C",100,0)
 . S IBRX=$P(IBPRO(IBX),U,1),IBDT=$P(IBPRO(IBX),U,2) Q:IBRX=""
"RTN","IBCSC5C",101,0)
 . S IBQ=0,IBY=$G(IBPR(IBRX,+IBDT)) Q:'IBY
"RTN","IBCSC5C",102,0)
 . S IBPIFN=0 F  S IBPIFN=$O(^IBA(362.4,"AIFN"_IBIFN,IBRX,IBPIFN)) Q:'IBPIFN  I $P($G(^IBA(362.4,IBPIFN,0)),U,3)=IBDT S IBQ=1 Q
"RTN","IBCSC5C",103,0)
 . I 'IBQ S IBZ=$G(IBPR(IBRX,IBDT)) I $$ADD^IBCSC5A(IBRX,IBIFN,IBDT,$P(IBZ,U,3),$P(IBZ,U,1),$P(IBZ,U,4,6)) W "."
"RTN","IBCSC5C",104,0)
 Q
"RTN","IBCSC5C",105,0)
 ;
"RTN","IBCSC5C",106,0)
HTEXT() ;
"RTN","IBCSC5C",107,0)
 N X S X="If an Rx fill has been assigned to another bill it will be displayed in the last column.  [ORG=Original Fill, NR=Not Released, RTS=Returned to Stock, OTC=Over-the-Counter, INV=Investigational, SUP=Supply Item]"
"RTN","IBCSC5C",108,0)
 Q X
"RTN","IBCSC5C",109,0)
 ;
"RTN","IBCSC5C",110,0)
RXLINK(IBIFN,CPIEN) ; Function returns the ien of the Rx rev code the proc
"RTN","IBCSC5C",111,0)
 ; code is linked to or 0 if no link found.
"RTN","IBCSC5C",112,0)
 Q +$O(^DGCR(399,IBIFN,"RC","ACP",+CPIEN,0))
"RTN","IBCSC5C",113,0)
 ;
"RTN","IBCSC5C",114,0)
EXEMPT(RX) ; Used to look up exemption if any on rx, the return value
"RTN","IBCSC5C",115,0)
 ; will be only the first exemption reason found.
"RTN","IBCSC5C",116,0)
 N IBX,IBZ,IBS,IBR
"RTN","IBCSC5C",117,0)
 S IBR="",(IBS,IBX)=0 F  S IBX=$O(^PSRX(RX,"ICD",IBX)) Q:'IBX!(IBS)  S IBZ=$G(^PSRX(RX,"ICD",IBX,0)) F IBP=2:1:9 Q:IBS  I $P(IBZ,"^",IBP) S IBR=$P($T(EREASON+(IBP-1)),";",3),IBS=1
"RTN","IBCSC5C",118,0)
 Q IBR
"RTN","IBCSC5C",119,0)
EREASON ;
"RTN","IBCSC5C",120,0)
 ;;AO
"RTN","IBCSC5C",121,0)
 ;;IR
"RTN","IBCSC5C",122,0)
 ;;SC
"RTN","IBCSC5C",123,0)
 ;;SWA
"RTN","IBCSC5C",124,0)
 ;;MST
"RTN","IBCSC5C",125,0)
 ;;HNC
"RTN","IBCSC5C",126,0)
 ;;CV
"RTN","IBCSC5C",127,0)
 ;;SHAD
"RTN","IBCSC5C",128,0)
 ;
"RTN","IBCU74")
0^11^B34341645^B34281515
"RTN","IBCU74",1,0)
IBCU74 ;OAK/ELZ - INTERCEPT SCREEN INPUT OF PROCEDURE CODES (CONT) ;6-JAN-04
"RTN","IBCU74",2,0)
 ;;2.0;INTEGRATED BILLING;**228,260,339**;21-MAR-94;Build 2
"RTN","IBCU74",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU74",4,0)
 ;
"RTN","IBCU74",5,0)
 ;
"RTN","IBCU74",6,0)
DATA(IBP) ; this is used to add data when new procedures are added for
"RTN","IBCU74",7,0)
 ; inpatient cases
"RTN","IBCU74",8,0)
 N IBX,IBY,IB1,IB2,IBC,DO,X,DIC,DIE,DA,DR,IB9,Y,IBQ,IBDR,IBZ,IBS
"RTN","IBCU74",9,0)
 S DR="" I '$P(IBP,"^",2)!('DGPROCDT) Q
"RTN","IBCU74",10,0)
 S IB1=0 F  S IB1=$O(^UTILITY($J,"IB",IB1)) Q:IB1<1!(DR)  I $P($G(^UTILITY($J,"IB",IB1,1)),"^",2)=DGPROCDT D
"RTN","IBCU74",11,0)
 . S IB2=0 F  S IB2=$O(^UTILITY($J,"IB",IB1,IB2)) Q:IB2<1!(DR)  S IBY=$G(^UTILITY($J,"IB",IB1,IB2)) I +IBY=+$P(IBP,"^",2) D  Q
"RTN","IBCU74",12,0)
 .. F IBX=6:1:9 I $P(IBY,"^",IBX) D
"RTN","IBCU74",13,0)
 ... F IBC=1:1:4 Q:'$D(^IBA(362.3,"AO",IBIFN,IBC))
"RTN","IBCU74",14,0)
 ... I $D(^IBA(362.3,"AO",IBIFN,IBC)) Q
"RTN","IBCU74",15,0)
 ... S IB9=$$ICD9^IBACSV($P(IBY,"^",IBX),DGPROCDT)
"RTN","IBCU74",16,0)
 ... W !?10,"Adding associated dx: ",$P(IB9,"^"),"  ",$P(IB9,"^",3)
"RTN","IBCU74",17,0)
 ... ; first check to see if dx on bill already
"RTN","IBCU74",18,0)
 ... S Y=$O(^IBA(362.3,"AIFN"_IBIFN,$P(IBY,"^",IBX),0))
"RTN","IBCU74",19,0)
 ... I 'Y S DIC="^IBA(362.3,",DIC(0)="",X=$P(IBY,"^",IBX),DIC("DR")=".02////^S X=IBIFN;.03////^S X=IBC" D FILE^DICN Q:Y<1
"RTN","IBCU74",20,0)
 ... ;need to find what field is not occupied starting with 10
"RTN","IBCU74",21,0)
 ... S IBZ=10 F IBS=1:1 Q:$P(DR,";",IBS)=""  I $P(DR,";",IBS)[IBZ_"////" S IBZ=IBZ+1
"RTN","IBCU74",22,0)
 ... S DR=DR_IBZ_"////"_(+Y)_";"
"RTN","IBCU74",23,0)
 .. I $P(IBY,"^",13) W !!?10,"Associating Provider: ",$P($G(^VA(200,$P(IBY,"^",13),0)),"^") D  S DR=DR_"18////"_$P(IBY,"^",13)_";"
"RTN","IBCU74",24,0)
 ... ;
"RTN","IBCU74",25,0)
 ... ; as requested by users, need to update the last look up value for
"RTN","IBCU74",26,0)
 ... ; the provider
"RTN","IBCU74",27,0)
 ... N DIC,X,DR,Y S DIC="^VA(200,",DIC(0)="INOS",X="`"_$P(IBY,"^",13)
"RTN","IBCU74",28,0)
 ... D ^DIC
"RTN","IBCU74",29,0)
 ... ;
"RTN","IBCU74",30,0)
 .. I $P(IBY,"^",14) W !?10,"Assigning Location: ",$P($G(^SC($P(IBY,"^",14),0)),"^") S DR=DR_"6////"_$P(IBY,"^",14)_";"_$S($P($G(^SC($P(IBY,"^",14),0)),"^",15):"5////"_$P(^(0),"^",15)_";",1:"")
"RTN","IBCU74",31,0)
 .. I $L(DR) S DIE="^DGCR(399,"_IBIFN_",""CP"",",DA(1)=IBIFN,DA=+IBP,IBDR=DR D ^DIE
"RTN","IBCU74",32,0)
 .. S IBC=0 F IBX=11,12 I $P(IBY,"^",IBX) S IB9=$$MOD^ICPTMOD($P(IBY,"^",IBX),"I") W !?10,"Adding Modifier: ",$P(IB9,"^",2)," - ",$P(IB9,"^",3) D
"RTN","IBCU74",33,0)
 ... S IBC=IBC+1,DIC="^DGCR(399,"_IBIFN_",""CP"","_(+IBP)_",""MOD"",",DA(1)=+IBP,DA(2)=IBIFN,X=IBC,DIC("DR")=".02////"_$P(IBY,"^",IBX),DIC(0)="" D FILE^DICN
"RTN","IBCU74",34,0)
 .. ;
"RTN","IBCU74",35,0)
 .. ; need to check for quantity >1 then duplicate entry
"RTN","IBCU74",36,0)
 .. I $P(IBY,"^",10)>1 W !!?10,"Duplicating Procedure for Quantity of ",$P(IBY,"^",10) F IBQ=1:1:$P(IBY,"^",10)-1 D
"RTN","IBCU74",37,0)
 ... K DO S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="",X=(+IBY)_";ICPT(",DA(1)=IBIFN,DIC("DR")="1////"_DGPROCDT_";"_$G(IBDR) D FILE^DICN S IBCP=+Y
"RTN","IBCU74",38,0)
 ... S IBC=0 F IBX=11,12 I $P(IBY,"^",IBX) S IB9=$$MOD^ICPTMOD($P(IBY,"^",IBX),"I"),IBC=IBC+1,DIC="^DGCR(399,"_IBIFN_",""CP"","_IBCP_",""MOD"",",DA(1)=IBCP,DA(2)=IBIFN,X=IBC,DIC("DR")=".02////"_$P(IBY,"^",IBX),DIC(0)="" D FILE^DICN
"RTN","IBCU74",39,0)
 .. K IBDR
"RTN","IBCU74",40,0)
 Q
"RTN","IBCU74",41,0)
 ;
"RTN","IBCU74",42,0)
SROMIN(IBIFN,IBPROCP) ; will ask as user to select anesthesia to populate into
"RTN","IBCU74",43,0)
 ; the minutes of a bill
"RTN","IBCU74",44,0)
 N IBSR,DFN,IBFDT,IBTDT,IBSRC,IBSRSDT,IBSREDT,IBC,IBSRDAT,IBSRMIN,DR,DA
"RTN","IBCU74",45,0)
 N DIE,X,Y,IBP,DIR
"RTN","IBCU74",46,0)
 K ^TMP("SRANES",$J),^TMP("IBSRDAT",$J)
"RTN","IBCU74",47,0)
 ;
"RTN","IBCU74",48,0)
 S DFN=$P($G(^DGCR(399,+$G(IBIFN),0)),"^",2)
"RTN","IBCU74",49,0)
 S IBFDT=+$G(^DGCR(399,IBIFN,"U")),IBTDT=$P($G(^("U")),"^",2)
"RTN","IBCU74",50,0)
 I 'DFN!('IBFDT)!('IBTDT) G SROMINQ
"RTN","IBCU74",51,0)
 ;
"RTN","IBCU74",52,0)
 S IBSR=$$ANESTIME^SROANEST(DFN,IBFDT,IBTDT) I IBSR<1 G SROMINQ
"RTN","IBCU74",53,0)
 ;
"RTN","IBCU74",54,0)
 W !!,"The following surgical/anesthesia times were found:",!
"RTN","IBCU74",55,0)
 S (IBC,IBSRC)=0 F  S IBSRC=$O(^TMP("SRANES",$J,IBSRC)) Q:IBSRC<1  S IBSRSDT=0 F  S IBSRSDT=$O(^TMP("SRANES",$J,IBSRC,IBSRSDT)) Q:'IBSRSDT  S IBSREDT=0 F  S IBSREDT=$O(^TMP("SRANES",$J,IBSRC,IBSRSDT,IBSREDT)) Q:'IBSREDT  D
"RTN","IBCU74",56,0)
 . ;
"RTN","IBCU74",57,0)
 . S IBC=IBC+1
"RTN","IBCU74",58,0)
 . S IBSRDAT=^TMP("SRANES",$J,IBSRC,IBSRSDT,IBSREDT)
"RTN","IBCU74",59,0)
 . S ^TMP("IBSRDAT",$J,IBC)=IBSRDAT
"RTN","IBCU74",60,0)
 . W !,$J(IBC,4)," Case #",IBSRC,?20,$$FMTE^XLFDT(IBSRSDT,2),?35,$$FMTE^XLFDT(IBSREDT,2),?50,$P(IBSRDAT,"^",2),?60
"RTN","IBCU74",61,0)
 . F IBP=4:1:11 I $P(IBSRDAT,"^",IBP) W:$X>61 "," W $P($T(EXEMPT+(IBP-3)),";",3)
"RTN","IBCU74",62,0)
 ;
"RTN","IBCU74",63,0)
 S DIR(0)="LO^1:"_IBC_":0" D ^DIR G:'Y SROMINQ
"RTN","IBCU74",64,0)
 ;
"RTN","IBCU74",65,0)
 S IBSRMIN=0 F IBP=1:1 Q:'$P(Y,",",IBP)  S IBSRMIN=IBSRMIN+$P(^TMP("IBSRDAT",$J,$P(Y,",",IBP)),"^",2)
"RTN","IBCU74",66,0)
 S DIE="^DGCR(399,"_IBIFN_",""CP"",",DR="15///"_IBSRMIN,DA=IBPROCP,DA(1)=IBIFN D ^DIE
"RTN","IBCU74",67,0)
 ;
"RTN","IBCU74",68,0)
SROMINQ K ^TMP("SRANES",$J),^TMP("IBSRDAT",$J)
"RTN","IBCU74",69,0)
 Q
"RTN","IBCU74",70,0)
 ;
"RTN","IBCU74",71,0)
 ;
"RTN","IBCU74",72,0)
OBSHOUR(DFN,EVNTDT) ; Get Observation Hours (for Procedures whose charge requires Hours)
"RTN","IBCU74",73,0)
 ; display Observation Discharges 72 hours before date (procedure date)
"RTN","IBCU74",74,0)
 ; allow user to input exact observation date times, using the last observation admission/discharge as default
"RTN","IBCU74",75,0)
 ; based on the date/times entered by the user calculate the total hours
"RTN","IBCU74",76,0)
 ; Input:  DFN = Patient ifn,   EVNTDT = Procedure Date
"RTN","IBCU74",77,0)
 ; Output: returns total hours with 1 decimal digit selected/input or ""
"RTN","IBCU74",78,0)
 ;
"RTN","IBCU74",79,0)
 N IBBEG,IBEND,IBDATE,IBPTF,IBPTF0,IBPTF70,IBDSPLT,IBADMDT,IBDSCDT,IBDSH,DIR,X,Y,DIRUT,DTOUT,DUOUT,IBHOURS
"RTN","IBCU74",80,0)
 S (IBDSH,IBHOURS,IBADMDT,IBDSCDT)="" I '$G(DFN) G OBSHOURQ
"RTN","IBCU74",81,0)
 S EVNTDT=$S(+$G(EVNTDT):EVNTDT,1:DT)\1,IBBEG=$$FMADD^XLFDT(EVNTDT,-3)+.0001,IBEND=EVNTDT+.2359
"RTN","IBCU74",82,0)
 ;
"RTN","IBCU74",83,0)
 W !!,?6,"Inpatient Observation Discharges 72 hours before "_$$FMTE^XLFDT(EVNTDT,2),":"
"RTN","IBCU74",84,0)
 S IBDATE=IBBEG F  S IBDATE=$O(^DGPT("ADS",IBDATE)) Q:'IBDATE  Q:IBDATE>IBEND  D
"RTN","IBCU74",85,0)
 . S IBPTF=0 F  S IBPTF=$O(^DGPT("ADS",IBDATE,IBPTF)) Q:'IBPTF  D
"RTN","IBCU74",86,0)
 .. S IBPTF0=$G(^DGPT(IBPTF,0)) Q:+IBPTF0'=DFN  S IBPTF70=$G(^DGPT(IBPTF,70))
"RTN","IBCU74",87,0)
 .. ;
"RTN","IBCU74",88,0)
 .. S IBDSPLT=+$P(IBPTF70,U,2) I ",18,23,24,36,41,65,94,"'[(","_IBDSPLT_",") Q
"RTN","IBCU74",89,0)
 .. ;
"RTN","IBCU74",90,0)
 .. S IBDSPLT=$G(^DIC(42.4,IBDSPLT,0)),IBADMDT=$E(+$P(IBPTF0,U,2),1,12),IBDSCDT=$E(+IBPTF70,1,12)
"RTN","IBCU74",91,0)
 .. ;
"RTN","IBCU74",92,0)
 .. S IBDSH=$$FMDIFF^XLFDT(IBDSCDT,IBADMDT,2)/60/60
"RTN","IBCU74",93,0)
 .. ;
"RTN","IBCU74",94,0)
 .. W !,?6,$P(IBDSPLT,U,1),?39,$$FMTE^XLFDT(IBADMDT,2),?55,$$FMTE^XLFDT(IBDSCDT,2),?72,"(",$J(IBDSH,"",1),")"
"RTN","IBCU74",95,0)
 I 'IBDSH W " None found"
"RTN","IBCU74",96,0)
 ;
"RTN","IBCU74",97,0)
 W !!,?6,"Observation Start/Stop Times are optional, used only to calculate Hours:"
"RTN","IBCU74",98,0)
 S DIR("A")="      Enter Observation Start Date/Time: " I +IBADMDT S DIR("B")=$$FMTE^XLFDT(IBADMDT,2)
"RTN","IBCU74",99,0)
 S DIR(0)="DAO^::XR" D ^DIR S IBADMDT=+Y I ('Y)!($D(DIRUT)) G OBSHOURQ
"RTN","IBCU74",100,0)
 ;
"RTN","IBCU74",101,0)
 S DIR("A")="      Enter Observation Stop Date/Time: " I IBDSCDT>IBADMDT S DIR("B")=$$FMTE^XLFDT(IBDSCDT,2)
"RTN","IBCU74",102,0)
 S DIR(0)="DAO^"_IBADMDT_"::XR" D ^DIR S IBDSCDT=+Y I ('Y)!($D(DIRUT)) G OBSHOURQ
"RTN","IBCU74",103,0)
 ;
"RTN","IBCU74",104,0)
 S IBHOURS=$J($$FMDIFF^XLFDT(IBDSCDT,IBADMDT,2)/60/60,"",1) W "     (",IBHOURS,")",!
"RTN","IBCU74",105,0)
 ;
"RTN","IBCU74",106,0)
OBSHOURQ Q IBHOURS
"RTN","IBCU74",107,0)
 ;
"RTN","IBCU74",108,0)
 ;
"RTN","IBCU74",109,0)
EXEMPT ; exemption reasons to display
"RTN","IBCU74",110,0)
 ;;SC
"RTN","IBCU74",111,0)
 ;;CV
"RTN","IBCU74",112,0)
 ;;AO
"RTN","IBCU74",113,0)
 ;;IR
"RTN","IBCU74",114,0)
 ;;SWA
"RTN","IBCU74",115,0)
 ;;MST
"RTN","IBCU74",116,0)
 ;;HNC
"RTN","IBCU74",117,0)
 ;;SHAD
"RTN","IBJDI7")
0^12^B51362696^B51061469
"RTN","IBJDI7",1,0)
IBJDI7 ;ALB/CPM - OUTPATIENT WORKLOAD REPORT ; 19-DEC-96
"RTN","IBJDI7",2,0)
 ;;2.0;INTEGRATED BILLING;**69,91,98,100,118,133,339**;21-MAR-94;Build 2
"RTN","IBJDI7",3,0)
 ;
"RTN","IBJDI7",4,0)
EN ; - Option entry point.
"RTN","IBJDI7",5,0)
 ;
"RTN","IBJDI7",6,0)
 W !!,"This report provides a measure of the number and types of"
"RTN","IBJDI7",7,0)
 W !,"Outpatient Services that are provided in the Medical Center.",!
"RTN","IBJDI7",8,0)
 ;
"RTN","IBJDI7",9,0)
DATE D DATE^IBOUTL I IBBDT=""!(IBEDT="") G ENQ
"RTN","IBJDI7",10,0)
 ;
"RTN","IBJDI7",11,0)
 ; - Sort by division?
"RTN","IBJDI7",12,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBJDI7",13,0)
 S DIR("A")="Do you wish to sort this report by division"
"RTN","IBJDI7",14,0)
 S DIR("?")="^D DHLP^IBJDI7" W !
"RTN","IBJDI7",15,0)
 D ^DIR S IBSORT=+Y I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDI7",16,0)
 K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDI7",17,0)
 ;
"RTN","IBJDI7",18,0)
 ; - Select division(s).
"RTN","IBJDI7",19,0)
 I IBSORT D PSDR^IBODIV G:Y<0 ENQ
"RTN","IBJDI7",20,0)
 ;
"RTN","IBJDI7",21,0)
 W !!,"This report only requires an 80 column printer."
"RTN","IBJDI7",22,0)
 ;
"RTN","IBJDI7",23,0)
 W !!,"Note: This report may take a while to run."
"RTN","IBJDI7",24,0)
 W !?6,"You should queue this report to run after normal business hours.",!
"RTN","IBJDI7",25,0)
 ;
"RTN","IBJDI7",26,0)
 ; - Select a device.
"RTN","IBJDI7",27,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBJDI7",28,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBJDI7",29,0)
 .S ZTRTN="DQ^IBJDI7",ZTDESC="IB - OUTPATIENT WORKLOAD REPORT"
"RTN","IBJDI7",30,0)
 .F I="IBBDT","IBEDT","IBSORT","VAUTD","VAUTD(" S ZTSAVE(I)=""
"RTN","IBJDI7",31,0)
 .D ^%ZTLOAD
"RTN","IBJDI7",32,0)
 .W !!,$S($D(ZTSK):"This job has been queued. The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBJDI7",33,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBJDI7",34,0)
 ;
"RTN","IBJDI7",35,0)
 U IO
"RTN","IBJDI7",36,0)
 ;
"RTN","IBJDI7",37,0)
DQ ; - Tasked entry point.
"RTN","IBJDI7",38,0)
 ;
"RTN","IBJDI7",39,0)
 I $G(IBXTRACT) D E^IBJDE(7,1) ; Change extract status.
"RTN","IBJDI7",40,0)
 ;
"RTN","IBJDI7",41,0)
 N IBQUERY K IB
"RTN","IBJDI7",42,0)
 S IBC="TOT^NSC^SC^SCS^SCN",IBQ=0
"RTN","IBJDI7",43,0)
 I IBSORT D
"RTN","IBJDI7",44,0)
 .S I=0 F  S I=$S(VAUTD:$O(^DG(40.8,I)),1:$O(VAUTD(I))) Q:'I  D
"RTN","IBJDI7",45,0)
 ..S J=$P(^DG(40.8,I,0),U),IB(J,"GTOT")=0
"RTN","IBJDI7",46,0)
 ..F K=1:1:5 S IB(J,$P(IBC,U,K)_"-A")=0 S:K<4 IB(J,$P(IBC,U,K)_"-I")=0
"RTN","IBJDI7",47,0)
 S IB("ZZALL","GTOT")=0
"RTN","IBJDI7",48,0)
 F I=1:1:5 D
"RTN","IBJDI7",49,0)
 .S IB("ZZALL",$P(IBC,U,I)_"-A")=0 S:I<4 IB("ZZALL",$P(IBC,U,I)_"-I")=0
"RTN","IBJDI7",50,0)
 ;
"RTN","IBJDI7",51,0)
 ; - Find outpatient encounters within the user-specified date range.
"RTN","IBJDI7",52,0)
 D OUTPT^IBJDI21("",IBBDT,IBEDT,"S:IBQ SDSTOP=1 D:'IBQ ENC^IBJDI7(Y,Y0)","Outpatient Workload Report",.IBQ,"",.IBQUERY)
"RTN","IBJDI7",53,0)
 D CLOSE^IBSDU(.IBQUERY)
"RTN","IBJDI7",54,0)
 ;
"RTN","IBJDI7",55,0)
 I IBQ G ENQ
"RTN","IBJDI7",56,0)
 ;
"RTN","IBJDI7",57,0)
 I $G(IBXTRACT) D E^IBJDE(7,0) G ENQ ; Extract summary data.
"RTN","IBJDI7",58,0)
 ;
"RTN","IBJDI7",59,0)
 ; - Print the report.
"RTN","IBJDI7",60,0)
 S (IBPAG,IBQ)=0 D NOW^%DTC S IBRUN=$$DAT2^IBOUTL(%)
"RTN","IBJDI7",61,0)
 S IBDIV="" F  S IBDIV=$O(IB(IBDIV)) Q:IBDIV=""  D SUM Q:IBQ
"RTN","IBJDI7",62,0)
 ;
"RTN","IBJDI7",63,0)
ENQ I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDI7",64,0)
 ;
"RTN","IBJDI7",65,0)
 D ^%ZISC
"RTN","IBJDI7",66,0)
ENQ1 K IB,IBC,IBH,IBQ,IBBDT,IBEDT,IBD,IBDIV,IBOE,IBOED,IBPAG,IBRUN,IBSORT
"RTN","IBJDI7",67,0)
 K IBPER,IBINS,IBSC,%,%ZIS,DFN,POP,I,J,K,X,Y,VA,VAEL,VAERR,VAUTD
"RTN","IBJDI7",68,0)
 K ZTDESC,ZTRTN,ZTSAVE
"RTN","IBJDI7",69,0)
 Q
"RTN","IBJDI7",70,0)
 ;
"RTN","IBJDI7",71,0)
ENC(IBOE,IBOED) ; - Extract encounter - must be called from DQ above.
"RTN","IBJDI7",72,0)
 I $$TESTP^IBJDI1(+$P(IBOED,U,2)) G ENCQ  ; Test patient.
"RTN","IBJDI7",73,0)
 ;
"RTN","IBJDI7",74,0)
 I IBSORT D  G:'$D(IB(IBDIV,"TOT-A")) ENCQ
"RTN","IBJDI7",75,0)
 .S IBDIV=+$P(IBOED,U,11)
"RTN","IBJDI7",76,0)
 .S IBDIV=$P($G(^DG(40.8,$S('IBDIV:+$$PRIM^VASITE(),1:IBDIV),0)),U)
"RTN","IBJDI7",77,0)
 ;
"RTN","IBJDI7",78,0)
 S IBINS=$$INS(IBOE,IBOED) ; Check if insured encounter.
"RTN","IBJDI7",79,0)
 ;
"RTN","IBJDI7",80,0)
 ; - Set main totals.
"RTN","IBJDI7",81,0)
 S IB("ZZALL","GTOT")=IB("ZZALL","GTOT")+1
"RTN","IBJDI7",82,0)
 S IB("ZZALL","TOT-A")=IB("ZZALL","TOT-A")+1
"RTN","IBJDI7",83,0)
 I IBINS S IB("ZZALL","TOT-I")=IB("ZZALL","TOT-I")+1
"RTN","IBJDI7",84,0)
 I IBSORT D
"RTN","IBJDI7",85,0)
 .S IB(IBDIV,"GTOT")=IB(IBDIV,"GTOT")+1
"RTN","IBJDI7",86,0)
 .S IB(IBDIV,"TOT-A")=IB(IBDIV,"TOT-A")+1
"RTN","IBJDI7",87,0)
 .I IBINS S IB(IBDIV,"TOT-I")=IB(IBDIV,"TOT-I")+1
"RTN","IBJDI7",88,0)
 ;
"RTN","IBJDI7",89,0)
 ; - Set NSC totals.
"RTN","IBJDI7",90,0)
 S DFN=+$P(IBOED,U,2) D ELIG^VADPT S IBSC=+VAEL(3)
"RTN","IBJDI7",91,0)
 I 'IBSC D  G ENCQ
"RTN","IBJDI7",92,0)
 .S IB("ZZALL","NSC-A")=IB("ZZALL","NSC-A")+1
"RTN","IBJDI7",93,0)
 .I IBINS S IB("ZZALL","NSC-I")=IB("ZZALL","NSC-I")+1
"RTN","IBJDI7",94,0)
 .I IBSORT D
"RTN","IBJDI7",95,0)
 ..S IB(IBDIV,"NSC-A")=IB(IBDIV,"NSC-A")+1
"RTN","IBJDI7",96,0)
 ..I IBINS S IB(IBDIV,"NSC-I")=IB(IBDIV,"NSC-I")+1
"RTN","IBJDI7",97,0)
 ;
"RTN","IBJDI7",98,0)
 ; - Set SC totals.
"RTN","IBJDI7",99,0)
 S IB("ZZALL","SC-A")=IB("ZZALL","SC-A")+1
"RTN","IBJDI7",100,0)
 I IBINS S IB("ZZALL","SC-I")=IB("ZZALL","SC-I")+1
"RTN","IBJDI7",101,0)
 I IBSORT D
"RTN","IBJDI7",102,0)
 .S IB(IBDIV,"SC-A")=IB(IBDIV,"SC-A")+1
"RTN","IBJDI7",103,0)
 .I IBINS S IB(IBDIV,"SC-I")=IB(IBDIV,"SC-I")+1
"RTN","IBJDI7",104,0)
 ;
"RTN","IBJDI7",105,0)
 ; - If care related to an SC condition, set SCS totals.
"RTN","IBJDI7",106,0)
 I $$SC(IBOE) D  G ENCQ
"RTN","IBJDI7",107,0)
 .S IB("ZZALL","SCS-A")=IB("ZZALL","SCS-A")+1
"RTN","IBJDI7",108,0)
 .I IBSORT S IB(IBDIV,"SCS-A")=IB(IBDIV,"SCS-A")+1
"RTN","IBJDI7",109,0)
 ;
"RTN","IBJDI7",110,0)
 ; - Set SCN totals.
"RTN","IBJDI7",111,0)
 S IB("ZZALL","SCN-A")=IB("ZZALL","SCN-A")+1
"RTN","IBJDI7",112,0)
 I IBSORT S IB(IBDIV,"SCN-A")=IB(IBDIV,"SCN-A")+1
"RTN","IBJDI7",113,0)
 ;
"RTN","IBJDI7",114,0)
ENCQ Q
"RTN","IBJDI7",115,0)
 ;
"RTN","IBJDI7",116,0)
SUM ; - Print the summary report.
"RTN","IBJDI7",117,0)
 F X="-A","-I" D  Q:IBQ
"RTN","IBJDI7",118,0)
 .I X["A" W @IOF,*13
"RTN","IBJDI7",119,0)
 .I X["I",$E(IOST,1,2)="C-" W @IOF,*13
"RTN","IBJDI7",120,0)
 .E  W:X["I" !!
"RTN","IBJDI7",121,0)
 .;
"RTN","IBJDI7",122,0)
 .; - Print summary header.
"RTN","IBJDI7",123,0)
 .W !!?$S(X["A":17,1:12),"OUTPATIENT ENCOUNTER WORKLOAD - "
"RTN","IBJDI7",124,0)
 .W $S(X["A":"ALL ENCOUNTERS",1:"INSURED ENCOUNTERS ONLY")
"RTN","IBJDI7",125,0)
 .S IBH="SUMMARY REPORT FOR "_$S(IBDIV="ZZALL":"ALL DIVISIONS",1:IBDIV)
"RTN","IBJDI7",126,0)
 .S IBC=(80-$L(IBH)/2)\1 W !?IBC,IBH
"RTN","IBJDI7",127,0)
 .W !!?$S(X["A":15,1:11),"For ",$S(X["I":"Insured ",1:""),"Outpatient Encounters from ",$$DAT1^IBOUTL(IBBDT)," - ",$$DAT1^IBOUTL(IBEDT)
"RTN","IBJDI7",128,0)
 .I $E(IOST,1,2)="C-" W !!?24,"Run Date: ",IBRUN
"RTN","IBJDI7",129,0)
 .S IBC=$S(X["A":"17^46",1:"12^55") W !?+IBC,$$DASH($P(IBC,U,2)),!!
"RTN","IBJDI7",130,0)
 .;
"RTN","IBJDI7",131,0)
 .; - Print summary statistics.
"RTN","IBJDI7",132,0)
 .S IBPER(1)=$J($S('IB(IBDIV,"TOT"_X):0,1:IB(IBDIV,"NSC"_X)/IB(IBDIV,"TOT"_X)*100),0,2),IBPER(2)=$J($S('IB(IBDIV,"TOT"_X):0,1:100-IBPER(1)),0,2)
"RTN","IBJDI7",133,0)
 .W ?$S(X["A":27,1:21),"Number of Outpatient Encounters:",?$S(X["A":60,1:54),$J(IB(IBDIV,"TOT"_X),7)
"RTN","IBJDI7",134,0)
 .W !?$S(X["A":21,1:15),"Number of Encounters for NSC Veterans:",?$S(X["A":60,1:54),$J(IB(IBDIV,"NSC"_X),7),"  (",IBPER(1),"%)"
"RTN","IBJDI7",135,0)
 .W !?$S(X["A":22,1:16),"Number of Encounters for SC Veterans:",?$S(X["A":60,1:54),$J(IB(IBDIV,"SC"_X),7),"  (",IBPER(2),"%)"
"RTN","IBJDI7",136,0)
 .I X["A" D
"RTN","IBJDI7",137,0)
 ..S IBPER(3)=$J($S('IB(IBDIV,"SC-A"):0,1:IB(IBDIV,"SCS-A")/IB(IBDIV,"SC-A")*100),0,2),IBPER(4)=$J($S('IB(IBDIV,"SC-A"):0,1:100-IBPER(3)),0,2)
"RTN","IBJDI7",138,0)
 ..W !?4,"Number of Service Connected Encounters for SC Veterans:",?60,$J(IB(IBDIV,"SCS-A"),7),"  (",IBPER(3),"%)"
"RTN","IBJDI7",139,0)
 ..W !?3,"Number of Non-Svc. Connected Encounters for SC Veterans:",?60,$J(IB(IBDIV,"SCN-A"),7),"  (",IBPER(4),"%)"
"RTN","IBJDI7",140,0)
 .E  D
"RTN","IBJDI7",141,0)
 ..S IBPER(5)=$J($S('IB(IBDIV,"GTOT"):0,1:IB(IBDIV,"TOT-I")/IB(IBDIV,"GTOT")*100),0,2)
"RTN","IBJDI7",142,0)
 ..W !!?5,"Percentage of Insured Outpatient Encounters for ",$S(IBDIV="ZZALL":"All Divisions",1:"This Division"),": ",IBPER(5),"%"
"RTN","IBJDI7",143,0)
 .D PAUSE
"RTN","IBJDI7",144,0)
 Q
"RTN","IBJDI7",145,0)
 ;
"RTN","IBJDI7",146,0)
DASH(X) ; - Return a dashed line.
"RTN","IBJDI7",147,0)
 Q $TR($J("",X)," ","=")
"RTN","IBJDI7",148,0)
 ;
"RTN","IBJDI7",149,0)
PAUSE ; - Page break.
"RTN","IBJDI7",150,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBJDI7",151,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBJDI7",152,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBJDI7",153,0)
 S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S IBQ=1
"RTN","IBJDI7",154,0)
 Q
"RTN","IBJDI7",155,0)
 ;
"RTN","IBJDI7",156,0)
INS(IBOE,IBOED) ; - Is this an insured encounter?
"RTN","IBJDI7",157,0)
 ;  Input:  IBOE = IEN of outpatient encounter in file #409.68
"RTN","IBJDI7",158,0)
 ;         IBOED = Outpatient encounter in file #409.68
"RTN","IBJDI7",159,0)
 ; Output: 1 = Insured encounter
"RTN","IBJDI7",160,0)
 ;         0 = Not an insured encounter
"RTN","IBJDI7",161,0)
 ;
"RTN","IBJDI7",162,0)
 N DFN,IBCK,IBPB,VA,VAEL,VAERR,X0
"RTN","IBJDI7",163,0)
 S DFN=+$P(IBOED,U,2)
"RTN","IBJDI7",164,0)
 I $G(^DPT(DFN,"VET"))'="Y" G INSQ ;        Patient not a veteran.
"RTN","IBJDI7",165,0)
 I '$$INSURED^IBCNS1(DFN,+IBOED\1) G INSQ ; Patient not insured.
"RTN","IBJDI7",166,0)
 ;
"RTN","IBJDI7",167,0)
 ; - Check if encounter was made non-billable in Claims Tracking.
"RTN","IBJDI7",168,0)
 I $P($G(^IBT(356,+$O(^IBT(356,"ASCE",IBOE,0)),0)),U,19) G INSQ
"RTN","IBJDI7",169,0)
 ;
"RTN","IBJDI7",170,0)
 ; - Check encounter for non-billable appt. type (1), non-count
"RTN","IBJDI7",171,0)
 ;   clinic (2), non-billable clinic (3,12), admission by 11:59pm of
"RTN","IBJDI7",172,0)
 ;   encounter date (5), non-billable stop code (7,8), non-billable
"RTN","IBJDI7",173,0)
 ;   disposition (10), and parent encounter (11). If IBPB equals one
"RTN","IBJDI7",174,0)
 ;   of these numbers, Y will be set to 0 (Not an insured encounter).
"RTN","IBJDI7",175,0)
 F X0=1,2,3,5,7,8,10,11,12 S IBCK(X0)=""
"RTN","IBJDI7",176,0)
 S X0=$$BILLCK^IBAMTEDU(IBOE,IBOED,.IBCK,.IBPB)
"RTN","IBJDI7",177,0)
 I $G(IBPB) G INSQ
"RTN","IBJDI7",178,0)
 ;
"RTN","IBJDI7",179,0)
 I $$ENCL^IBAMTS2(IBOE)[1 G INSQ ; Care is related to AO/IR/SWA/SC/MST/HNC/CV/SHAD.
"RTN","IBJDI7",180,0)
 ;
"RTN","IBJDI7",181,0)
 S Y=1 Q Y
"RTN","IBJDI7",182,0)
INSQ S Y=0 Q Y
"RTN","IBJDI7",183,0)
 ;
"RTN","IBJDI7",184,0)
SC(OE) ; - Is the encounter related to the veteran's SC condition?
"RTN","IBJDI7",185,0)
 ;  Input: OE = IEN of outpatient encounter in file #409.68
"RTN","IBJDI7",186,0)
 ; Output: SC = 1 (Encounter related to SC condition)
"RTN","IBJDI7",187,0)
 ;              0 (Encounter NOT related to SC condition)
"RTN","IBJDI7",188,0)
 ;
"RTN","IBJDI7",189,0)
 N CL,CLD,SC
"RTN","IBJDI7",190,0)
 S (CL,SC)=0 F  S CL=$O(^SDD(409.42,"OE",+$G(OE),CL)) Q:'CL  D  Q:SC
"RTN","IBJDI7",191,0)
 .S CLD=$G(^SDD(409.42,CL,0)) I +CLD=3,$P(CLD,U,3) S SC=1
"RTN","IBJDI7",192,0)
 Q SC
"RTN","IBJDI7",193,0)
 ;
"RTN","IBJDI7",194,0)
DHLP ; - Display 'Sort by division' help.
"RTN","IBJDI7",195,0)
 W !,"Enter RETURN to summarize all outpt. encounters without regard to"
"RTN","IBJDI7",196,0)
 W !,"division, or 'Yes' to select those divisions for which a separate"
"RTN","IBJDI7",197,0)
 W !,"summary report should be created."
"RTN","IBJDI7",198,0)
 Q
"RTN","IBNCPDP1")
0^14^B66261404^B52180701
"RTN","IBNCPDP1",1,0)
IBNCPDP1 ;OAK/ELZ - PROCESSING FOR NEW RX REQUESTS ;20-JUN-2003
"RTN","IBNCPDP1",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,339**;21-MAR-94;Build 2
"RTN","IBNCPDP1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDP1",4,0)
 ;
"RTN","IBNCPDP1",5,0)
 ;NCPDP PHASE III
"RTN","IBNCPDP1",6,0)
 Q
"RTN","IBNCPDP1",7,0)
 ;
"RTN","IBNCPDP1",8,0)
RX(DFN,IBD) ; pharmacy package call, passing in IBD by ref
"RTN","IBNCPDP1",9,0)
 ; this is called by PSO for all prescriptions issued, return is
"RTN","IBNCPDP1",10,0)
 ; a response to bill ECME or not with array for billing data elements
"RTN","IBNCPDP1",11,0)
 ;
"RTN","IBNCPDP1",12,0)
 ;warning: back-billing flag:
"RTN","IBNCPDP1",13,0)
 ;if passed IBSCRES(IBRXN,IBFIL)=1 
"RTN","IBNCPDP1",14,0)
 ; - the the SC Determination is just done by the IB clerk (billable)
"RTN","IBNCPDP1",15,0)
 ;
"RTN","IBNCPDP1",16,0)
 ;retrieve indicators from file #52 and overwrite the indicators in IBD array 
"RTN","IBNCPDP1",17,0)
 D GETINDIC(+IBD("IEN"),.IBD)
"RTN","IBNCPDP1",18,0)
 ;
"RTN","IBNCPDP1",19,0)
 N IBTRKR,IBARR,IBADT,IBRXN,IBFIL,IBTRKRN,IBRMARK,IBANY,IBX,IBT,IBINS,IBSAVE,IBFEE,IBEABD,IBBI,IBIT,IBPRICE,IBRS,IBRT,IBTRN,IBCHG,IBERMSG,IBRES
"RTN","IBNCPDP1",20,0)
 S IBRES="0^Error"
"RTN","IBNCPDP1",21,0)
 K IBD("INS")
"RTN","IBNCPDP1",22,0)
 I '$G(DFN) S IBRES="0^No DFN" G RXQ
"RTN","IBNCPDP1",23,0)
 S (IBEABD,IBADT)=+$G(IBD("FILL DATE"),DT)
"RTN","IBNCPDP1",24,0)
 S IBRXN=+$G(IBD("IEN")) I 'IBRXN S IBRES="0^No Rx IEN" G RXQ
"RTN","IBNCPDP1",25,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G RXQ
"RTN","IBNCPDP1",26,0)
 S IBD("QTY")=+$G(IBD("QTY"))
"RTN","IBNCPDP1",27,0)
 I 'IBD("QTY") S IBRES="0^No Quantity" G RXQ
"RTN","IBNCPDP1",28,0)
 ;
"RTN","IBNCPDP1",29,0)
 ; -- claims tracking info
"RTN","IBNCPDP1",30,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBNCPDP1",31,0)
 ; date can't be before parameters
"RTN","IBNCPDP1",32,0)
 S $P(IBTRKR,U)=$S('$P(IBTRKR,U,4):0,+IBTRKR&(IBADT<+IBTRKR):0,1:IBADT)
"RTN","IBNCPDP1",33,0)
 ; already in claims tracking
"RTN","IBNCPDP1",34,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP1",35,0)
 I IBTRKRN,$$PAPERBIL(IBTRKRN) S IBRES="0^Existing IB Bill in CT" G RXQ
"RTN","IBNCPDP1",36,0)
 ;
"RTN","IBNCPDP1",37,0)
 I $G(IBD("DEA"))="" D CT S IBRES="0^Null DEA Special Handling field" G RXQ
"RTN","IBNCPDP1",38,0)
 ;
"RTN","IBNCPDP1",39,0)
 ; -- no pharmacy coverage, update ct if applicable, quit
"RTN","IBNCPDP1",40,0)
 I '$$PTCOV^IBCNSU3(DFN,IBADT,"PHARMACY",.IBANY) S IBRMARK=$S($G(IBANY):"SERVICE NOT COVERED",1:"NOT INSURED") D:$P(IBTRKR,U,4)=2 CT S IBRES="0^"_IBRMARK G RXQ
"RTN","IBNCPDP1",41,0)
 ;
"RTN","IBNCPDP1",42,0)
 ;
"RTN","IBNCPDP1",43,0)
 ;  -- check for compound,  NOT BILLABLE 
"RTN","IBNCPDP1",44,0)
 I IBD("DEA")["M"!(IBD("DEA")["0") S IBRMARK="DRUG NOT BILLABLE" D CT S IBRES="0^COMPOUND DRUG" G RXQ
"RTN","IBNCPDP1",45,0)
 ; -- check drug (not investigational, supply, or over the counter drug
"RTN","IBNCPDP1",46,0)
 ;  "E" means always ecme billable
"RTN","IBNCPDP1",47,0)
 I (IBD("DEA")["I"!(IBD("DEA")["S")!(IBD("DEA")["9")),IBD("DEA")'["E" S IBRMARK="DRUG NOT BILLABLE" D CT S IBRES="0^"_IBRMARK G RXQ
"RTN","IBNCPDP1",48,0)
 ;
"RTN","IBNCPDP1",49,0)
 ; -- process patient exemptions if any (if not already resolved)
"RTN","IBNCPDP1",50,0)
 D CL^SDCO21(DFN,IBADT,"",.IBARR)
"RTN","IBNCPDP1",51,0)
 ;
"RTN","IBNCPDP1",52,0)
 ; check out exemptions
"RTN","IBNCPDP1",53,0)
 I $D(IBARR)>9 F IBX=2:1 S IBT=$P($T(EXEMPT+IBX),";;",2) Q:IBT=""!($D(IBRMARK))  D:$D(IBARR(+IBT))
"RTN","IBNCPDP1",54,0)
 . I $G(IBD($P(IBT,U,2)))=0 Q
"RTN","IBNCPDP1",55,0)
 . I $G(IBD($P(IBT,U,2))) S IBRMARK=$P(IBT,U,3) Q
"RTN","IBNCPDP1",56,0)
 . I '$G(IBSCRES(IBRXN,IBFIL)) S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBNCPDP1",57,0)
 I $D(IBRMARK) D CT S IBRES="0^"_IBRMARK G RXQ
"RTN","IBNCPDP1",58,0)
 ; Clean-up the NEEDS SC DETERMINATION record if resolved
"RTN","IBNCPDP1",59,0)
 ; And check if it is non-billable in CT
"RTN","IBNCPDP1",60,0)
 I IBTRKRN D
"RTN","IBNCPDP1",61,0)
 . N IBNBR,IBNBRT
"RTN","IBNCPDP1",62,0)
 . S IBNBR=$P($G(^IBT(356,+IBTRKRN,0)),U,19) Q:'IBNBR
"RTN","IBNCPDP1",63,0)
 . S IBNBRT=$P($G(^IBE(356.8,IBNBR,0)),U) Q:IBNBRT=""
"RTN","IBNCPDP1",64,0)
 . ; if refill was deleted (not RX) and now the refill is re-entered
"RTN","IBNCPDP1",65,0)
 . ;use $$RXSTATUS^IBNCPRR insetad of $G(^PSRX(IBRXN,"STA"))
"RTN","IBNCPDP1",66,0)
 . I IBNBRT="PRESCRIPTION DELETED",$$RXSTATUS^IBNCPRR(DFN,IBRXN)'=13 D  Q
"RTN","IBNCPDP1",67,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",68,0)
 . . ; clean up REASON NOT BILLABLE and ADDITIONAL COMMENT
"RTN","IBNCPDP1",69,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@;1.08////@" D ^DIE
"RTN","IBNCPDP1",70,0)
 . ; Clean up NBR if released
"RTN","IBNCPDP1",71,0)
 . I IBNBRT="PRESCRIPTION NOT RELEASED" D:$G(IBD("RELEASE DATE"))  Q
"RTN","IBNCPDP1",72,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",73,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@" D ^DIE
"RTN","IBNCPDP1",74,0)
 . ; Clean up 'Needs SC determ'
"RTN","IBNCPDP1",75,0)
 . I IBNBRT="NEEDS SC DETERMINATION" D  Q
"RTN","IBNCPDP1",76,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",77,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@" D ^DIE
"RTN","IBNCPDP1",78,0)
 . S IBRMARK=IBNBRT
"RTN","IBNCPDP1",79,0)
 I $D(IBRMARK) S IBRES="0^Non-Billable in CT: "_IBRMARK G RXQ
"RTN","IBNCPDP1",80,0)
 ;
"RTN","IBNCPDP1",81,0)
 ; -- look up insurance for patient
"RTN","IBNCPDP1",82,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)
"RTN","IBNCPDP1",83,0)
 S IBERMSG="" ; Error message
"RTN","IBNCPDP1",84,0)
 S IBX=0 F  S IBX=$O(IBINS("S",IBX)) Q:'IBX  D
"RTN","IBNCPDP1",85,0)
 . S IBT=0 F  S IBT=$O(IBINS("S",IBX,IBT)) Q:'IBT  D
"RTN","IBNCPDP1",86,0)
 .. N IBDAT,IBPL,IBINSN,IBPIEN,IBY,IBZ
"RTN","IBNCPDP1",87,0)
 .. S IBZ=IBINS(IBT,0)
"RTN","IBNCPDP1",88,0)
 .. S IBPL=$P(IBZ,U,18) ; plan
"RTN","IBNCPDP1",89,0)
 .. Q:'IBPL
"RTN","IBNCPDP1",90,0)
 .. Q:'$$PLCOV^IBCNSU3(IBPL,IBADT,3)  ; not covered
"RTN","IBNCPDP1",91,0)
 .. S IBINSN=$P($G(^DIC(36,+$G(^IBA(355.3,+IBPL,0)),0)),U) ; ins name
"RTN","IBNCPDP1",92,0)
 .. S IBPIEN=+$G(^IBA(355.3,+IBPL,6))
"RTN","IBNCPDP1",93,0)
 .. I 'IBPIEN S IBERMSG="Plan not linked to the Payer" Q  ; Not linked
"RTN","IBNCPDP1",94,0)
 .. D STCHK^IBCNRU1(IBPIEN,.IBY)
"RTN","IBNCPDP1",95,0)
 .. I $E($G(IBY(1)))'="A" S IBERMSG=$$ERMSG($P($G(IBY(6)),",")) Q  ; not active
"RTN","IBNCPDP1",96,0)
 .. S IBDAT=IBPL ; Plan IEN
"RTN","IBNCPDP1",97,0)
 .. S $P(IBDAT,U,2)=$G(IBY(2)) ; BIN
"RTN","IBNCPDP1",98,0)
 .. S $P(IBDAT,U,3)=$G(IBY(3)) ; PCN
"RTN","IBNCPDP1",99,0)
 .. S $P(IBDAT,U,4)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",1),0)),U) ; Payer Sheet B1
"RTN","IBNCPDP1",100,0)
 .. S $P(IBDAT,U,5)=$P($G(IBINS(IBT,355.3)),U,4) ; Group ID
"RTN","IBNCPDP1",101,0)
 .. S $P(IBDAT,U,6)=$P(IBZ,U,2) ; Cardholder ID
"RTN","IBNCPDP1",102,0)
 .. S $P(IBDAT,U,7)=$P(IBZ,U,16) ; Patient Relationship Code
"RTN","IBNCPDP1",103,0)
 .. S $P(IBDAT,U,8)=$P($P($P(IBZ,U,17),",",2)," ") ; Cardholder First Name
"RTN","IBNCPDP1",104,0)
 .. S $P(IBDAT,U,9)=$P($P(IBZ,U,17),",") ; Cardholder Last Name
"RTN","IBNCPDP1",105,0)
 .. S $P(IBDAT,U,10)=$P($G(^DIC(36,+IBZ,.11)),U,5) ; State
"RTN","IBNCPDP1",106,0)
 .. S $P(IBDAT,U,11)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",2),0)),U) ; Payer Sheet B2
"RTN","IBNCPDP1",107,0)
 .. S $P(IBDAT,U,12)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",3),0)),U) ; Payer Sheet B3
"RTN","IBNCPDP1",108,0)
 .. S $P(IBDAT,U,13)=$G(IBY(4)) ; Software/Vendor Cert ID
"RTN","IBNCPDP1",109,0)
 .. S $P(IBDAT,U,14)=IBINSN ; Ins Name
"RTN","IBNCPDP1",110,0)
 .. S IBD("INS",IBX,1)=IBDAT
"RTN","IBNCPDP1",111,0)
 .. S IBD("INS",IBX,3)=$P($G(IBINS(IBT,355.3)),"^",3)_"^"_$$PHONE(+IBZ)_"^"_$$GET1^DIQ(366.03,IBPIEN_",",.01)   ;group name^ins co ph 3^plan ID
"RTN","IBNCPDP1",112,0)
 I '$D(IBD("INS")),IBERMSG'="" S IBRES="0^Not ECME billable: "_IBERMSG G RXQ
"RTN","IBNCPDP1",113,0)
 I '$D(IBD("INS")) S IBRES="0^No Insurance ECME billable" G RXQ
"RTN","IBNCPDP1",114,0)
 ;
"RTN","IBNCPDP1",115,0)
 ; determine rates/prices to use
"RTN","IBNCPDP1",116,0)
 S IBRT=$$RT^IBNCPDPU(DFN,.IBINS)
"RTN","IBNCPDP1",117,0)
 I 'IBRT D CT S IBRES="0^Cannot determine Rate type" G RXQ
"RTN","IBNCPDP1",118,0)
 S IBBI=$$EVNTITM^IBCRU3(+IBRT,3,"PRESCRIPTION FILL",IBADT,.IBRS)
"RTN","IBNCPDP1",119,0)
 I 'IBBI D CT S IBRES="0^Cannot find Billable Item" G RXQ
"RTN","IBNCPDP1",120,0)
 ;1;BEDSECTION;1^
"RTN","IBNCPDP1",121,0)
 ;IBRS(1,18,5)=
"RTN","IBNCPDP1",122,0)
 S IBRS=+$O(IBRS(+IBBI,0))
"RTN","IBNCPDP1",123,0)
 S IBIT=$$ITPTR^IBCRU2(+IBBI,$S($P(IBRT,U,2)="A":$$NDC^IBNCPDPU($G(IBD("NDC"))),1:"PRESCRIPTION"))
"RTN","IBNCPDP1",124,0)
 I 'IBIT,$P(IBRT,U,2)'="C" D CT S IBRES="0^Cannot find Item Pointer" G RXQ
"RTN","IBNCPDP1",125,0)
 ;8
"RTN","IBNCPDP1",126,0)
 S IBPRICE=+$$BICOST^IBCRCI(+IBRT,3,IBADT,"PRESCRIPTION FILL",+IBIT,,,$S($P(IBRT,U,2)="A":IBD("QTY"),1:1))
"RTN","IBNCPDP1",127,0)
 ;36^2991001
"RTN","IBNCPDP1",128,0)
 ;
"RTN","IBNCPDP1",129,0)
 ; get fees if any, ignore return, don't care about price, just need fees
"RTN","IBNCPDP1",130,0)
 S IBCHG=$$RATECHG^IBCRCC(+IBRS,$S($P(IBRT,U,2)'="C":1,1:IBD("QTY")*IBD("COST")),IBADT,.IBFEE)
"RTN","IBNCPDP1",131,0)
 I $P(IBRT,U,2)="C" S IBPRICE=+IBCHG
"RTN","IBNCPDP1",132,0)
 ;
"RTN","IBNCPDP1",133,0)
 I 'IBPRICE D CT S IBRES="0^Cannot find price for Item" G RXQ
"RTN","IBNCPDP1",134,0)
 ;
"RTN","IBNCPDP1",135,0)
 S IBPRICE=(+$G(IBFEE))_U_$S($P(IBRT,U,2)="A":"01",$P(IBRT,U,2)="C":"05",1:"07")_U_$S($P(IBRT,U,2)="C":IBD("QTY")*IBD("COST"),$P(IBRT,U,2)="A":IBPRICE-$G(IBFEE)-$P($G(IBFEE),U,2),1:IBPRICE)_U_IBPRICE_U_(+$P($G(IBFEE),U,2))
"RTN","IBNCPDP1",136,0)
 S IBX=0 F  S IBX=$O(IBD("INS",IBX)) Q:IBX<1  S IBD("INS",IBX,2)=IBPRICE ;_U_$P(IBPAYER,U,6)
"RTN","IBNCPDP1",137,0)
 ;
"RTN","IBNCPDP1",138,0)
 S IBRES=$S($D(IBRMARK):"0^"_IBRMARK,1:1)
"RTN","IBNCPDP1",139,0)
 I IBRES,'$G(IBD("RELEASE DATE")) S IBRMARK="PRESCRIPTION NOT RELEASED"
"RTN","IBNCPDP1",140,0)
 D CT
"RTN","IBNCPDP1",141,0)
 ;
"RTN","IBNCPDP1",142,0)
RXQ D LOG^IBNCPDP2("BILLABLE STATUS CHECK",IBRES)
"RTN","IBNCPDP1",143,0)
 Q IBRES
"RTN","IBNCPDP1",144,0)
 ;
"RTN","IBNCPDP1",145,0)
 ;
"RTN","IBNCPDP1",146,0)
CT ; files in claims tracking
"RTN","IBNCPDP1",147,0)
 I IBTRKR D CT^IBNCPDPU(DFN,IBRXN,IBFIL,IBADT,$G(IBRMARK))
"RTN","IBNCPDP1",148,0)
 Q
"RTN","IBNCPDP1",149,0)
 ;
"RTN","IBNCPDP1",150,0)
EXEMPT ; exemption reasons
"RTN","IBNCPDP1",151,0)
 ; variable from SD call ^ variable from PSO ^ reason not billable
"RTN","IBNCPDP1",152,0)
 ;;1^AO^AGENT ORANGE
"RTN","IBNCPDP1",153,0)
 ;;2^IR^IONIZING RADIATION
"RTN","IBNCPDP1",154,0)
 ;;3^SC^SC TREATMENT
"RTN","IBNCPDP1",155,0)
 ;;4^SWA^SOUTHWEST ASIA
"RTN","IBNCPDP1",156,0)
 ;;5^MST^MILITARY SEXUAL TRAUMA
"RTN","IBNCPDP1",157,0)
 ;;6^HNC^HEAD/NECK CANCER
"RTN","IBNCPDP1",158,0)
 ;;7^CV^COMBAT VETERAN
"RTN","IBNCPDP1",159,0)
 ;;8^SHAD^PROJECT 112/SHAD
"RTN","IBNCPDP1",160,0)
 ;;
"RTN","IBNCPDP1",161,0)
 ;
"RTN","IBNCPDP1",162,0)
ERMSG(IBSTL) ; Inactive status reason
"RTN","IBNCPDP1",163,0)
 N IBSTA,IBI,IBARR,IBTXT
"RTN","IBNCPDP1",164,0)
 D STATAR^IBCNRU1(.IBARR)
"RTN","IBNCPDP1",165,0)
 F IBI=1:1:$L(IBSTL,",")+1 S IBSTA=+$P(IBSTL,",",IBI) Q:"^100^200^300^400^"'[(U_IBSTA_U)
"RTN","IBNCPDP1",166,0)
 S IBTXT=$G(IBARR(+IBSTA),"Plan is not active.")
"RTN","IBNCPDP1",167,0)
 Q IBTXT
"RTN","IBNCPDP1",168,0)
 ;
"RTN","IBNCPDP1",169,0)
NEEDSC(IBTXT) ; is the CT NBR one of 'needs sc determination'?
"RTN","IBNCPDP1",170,0)
 I IBTXT="NEEDS SC DETERMINATION" Q 1
"RTN","IBNCPDP1",171,0)
 N I,RES,IBT
"RTN","IBNCPDP1",172,0)
 S RES=0
"RTN","IBNCPDP1",173,0)
 F I=2:1 S IBT=$P($P($T(EXEMPT+I),";;",2),U,3) Q:IBT=""  I IBT=IBTXT S RES=1 Q
"RTN","IBNCPDP1",174,0)
 Q RES
"RTN","IBNCPDP1",175,0)
 ;
"RTN","IBNCPDP1",176,0)
PAPERBIL(IBTRKRN) ; 'paper' bill in CT?
"RTN","IBNCPDP1",177,0)
 N IBZ,IBIFN
"RTN","IBNCPDP1",178,0)
 S IBZ=$G(^IBT(356,IBTRKRN,0)) I IBZ="" Q 0
"RTN","IBNCPDP1",179,0)
 S IBIFN=+$P(IBZ,U,11) I 'IBIFN Q 0
"RTN","IBNCPDP1",180,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=7 Q 0  ; cancelled
"RTN","IBNCPDP1",181,0)
 I $P($G(^DGCR(399,IBIFN,"M1")),U,8)'="" Q 0  ; ecme bill
"RTN","IBNCPDP1",182,0)
 Q 1
"RTN","IBNCPDP1",183,0)
 ;
"RTN","IBNCPDP1",184,0)
 ;gets the insurance phone
"RTN","IBNCPDP1",185,0)
 ;input:
"RTN","IBNCPDP1",186,0)
 ; IB36 - ptr to INSURANCE COMPANY File (#36)
"RTN","IBNCPDP1",187,0)
 ;output:
"RTN","IBNCPDP1",188,0)
 ; the phone number
"RTN","IBNCPDP1",189,0)
PHONE(IB36) ;
"RTN","IBNCPDP1",190,0)
 N IB1
"RTN","IBNCPDP1",191,0)
 ;check first CLAIMS (RX) PHONE NUMBER if empty
"RTN","IBNCPDP1",192,0)
 S IB1=$$GET1^DIQ(36,+IB36,.1311,"E")
"RTN","IBNCPDP1",193,0)
 Q:$L(IB1)>0 IB1
"RTN","IBNCPDP1",194,0)
 ;check BILLING PHONE NUMBER if empty - return nothing
"RTN","IBNCPDP1",195,0)
 S IB1=$$GET1^DIQ(36,+IB36,.132,"E")
"RTN","IBNCPDP1",196,0)
 Q IB1
"RTN","IBNCPDP1",197,0)
 ;
"RTN","IBNCPDP1",198,0)
 ;Retrieve indicators (AO,CV,etc) from the file #52 
"RTN","IBNCPDP1",199,0)
 ;input:
"RTN","IBNCPDP1",200,0)
 ; IBRXIEN - ien of file #52
"RTN","IBNCPDP1",201,0)
 ; .IBARRAY - local array passed by reference 
"RTN","IBNCPDP1",202,0)
 ;output:
"RTN","IBNCPDP1",203,0)
 ; .IBARRAY
"RTN","IBNCPDP1",204,0)
GETINDIC(IBRXIEN,IBARRAY) ;
"RTN","IBNCPDP1",205,0)
 ;set all indicators nodes to null before populating
"RTN","IBNCPDP1",206,0)
 S IBARRAY("AO")="",IBARRAY("EC")="",IBARRAY("HNC")="",IBARRAY("IR")=""
"RTN","IBNCPDP1",207,0)
 S IBARRAY("MST")="",IBARRAY("SC")="",IBARRAY("CV")="",IBARRAY("SWA")="",IBARRAY("SHAD")=""
"RTN","IBNCPDP1",208,0)
 N IBINDIC
"RTN","IBNCPDP1",209,0)
 ; New way of getting SC/EI (CIDC)
"RTN","IBNCPDP1",210,0)
 S IBINDIC=$G(^PSRX(IBRXIEN,"ICD",1,0))
"RTN","IBNCPDP1",211,0)
 I $G(IBINDIC)]"" D
"RTN","IBNCPDP1",212,0)
 . S IBARRAY("AO")=$P(IBINDIC,U,2)
"RTN","IBNCPDP1",213,0)
 . S IBARRAY("IR")=$P(IBINDIC,U,3)
"RTN","IBNCPDP1",214,0)
 . S IBARRAY("SC")=$P(IBINDIC,U,4)
"RTN","IBNCPDP1",215,0)
 . S IBARRAY("SWA")=$P(IBINDIC,U,5)
"RTN","IBNCPDP1",216,0)
 . S IBARRAY("MST")=$P(IBINDIC,U,6)
"RTN","IBNCPDP1",217,0)
 . S IBARRAY("HNC")=$P(IBINDIC,U,7)
"RTN","IBNCPDP1",218,0)
 . S IBARRAY("CV")=$P(IBINDIC,U,8)
"RTN","IBNCPDP1",219,0)
 . S IBARRAY("SHAD")=$P(IBINDIC,U,9)
"RTN","IBNCPDP1",220,0)
 ; If not available, pull from IBQ node (old way)
"RTN","IBNCPDP1",221,0)
 E  S IBINDIC=$G(^PSRX(IBRXIEN,"IBQ")) I IBINDIC'="" D
"RTN","IBNCPDP1",222,0)
 . S IBARRAY("SC")=$P(IBINDIC,U,1)
"RTN","IBNCPDP1",223,0)
 . S IBARRAY("MST")=$P(IBINDIC,U,2)
"RTN","IBNCPDP1",224,0)
 . S IBARRAY("AO")=$P(IBINDIC,U,3)
"RTN","IBNCPDP1",225,0)
 . S IBARRAY("IR")=$P(IBINDIC,U,4)
"RTN","IBNCPDP1",226,0)
 . S IBARRAY("SWA")=$P(IBINDIC,U,5)
"RTN","IBNCPDP1",227,0)
 . S IBARRAY("HNC")=$P(IBINDIC,U,6)
"RTN","IBNCPDP1",228,0)
 . S IBARRAY("CV")=$P(IBINDIC,U,7)
"RTN","IBNCPDP1",229,0)
 . S IBARRAY("SHAD")=$P(IBINDIC,U,8)
"RTN","IBNCPDP1",230,0)
 Q
"RTN","IBNCPDP1",231,0)
 ;IBNCPDP1
"RTN","IBNCPDPC")
0^23^B34403987^B34220485
"RTN","IBNCPDPC",1,0)
IBNCPDPC ;DALOI/SS - CLAIMS TRACKING EDITOR for ECME ;27-JUN-2005
"RTN","IBNCPDPC",2,0)
 ;;2.0;INTEGRATED BILLING;**276,339**;21-MAR-94;Build 2
"RTN","IBNCPDPC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDPC",4,0)
 ;This code supports DBIA4693
"RTN","IBNCPDPC",5,0)
 ;
"RTN","IBNCPDPC",6,0)
% ; -- main entry point for IBT CLAIMS TRACKING EDIT
"RTN","IBNCPDPC",7,0)
 ;DFN- patients IEN (file #2)
"RTN","IBNCPDPC",8,0)
 ;IBECMEN - NCPDP/ECME number (last 7 digits of the IEN of file #52)
"RTN","IBNCPDPC",9,0)
 ; that belong to this claim.
"RTN","IBNCPDPC",10,0)
 ;ien in CLAIMS TRACKING file #356  
"RTN","IBNCPDPC",11,0)
 ;
"RTN","IBNCPDPC",12,0)
CT(DFN,IBECMEN,IBREFNUM) ;
"RTN","IBNCPDPC",13,0)
 Q:$$PFSSON^IBNCPDPI()  ;quit if PFSS is ON
"RTN","IBNCPDPC",14,0)
 Q:'$G(DFN)
"RTN","IBNCPDPC",15,0)
 Q:'$G(IBECMEN)
"RTN","IBNCPDPC",16,0)
 N IBTRN
"RTN","IBNCPDPC",17,0)
 S IBTRN=+$$SELCT(IBECMEN,IBREFNUM)
"RTN","IBNCPDPC",18,0)
 I +IBTRN=0 D  Q
"RTN","IBNCPDPC",19,0)
 . W !,"There is no claims tracking record for this claim."
"RTN","IBNCPDPC",20,0)
 . D PAUSE^VALM1
"RTN","IBNCPDPC",21,0)
 D EN^VALM("IBNCPDP LSTMN CT")
"RTN","IBNCPDPC",22,0)
 Q
"RTN","IBNCPDPC",23,0)
 ;
"RTN","IBNCPDPC",24,0)
EN ; -- main entry point for IBT EXPAND/EDIT TRACKING
"RTN","IBNCPDPC",25,0)
 I '$D(DT) D DT^DICRW
"RTN","IBNCPDPC",26,0)
 K XQORS,VALMEVL,DFN,IBTRN,IBTRV,IBTRC,IBTRD
"RTN","IBNCPDPC",27,0)
 I '$G(IBTRN) G EN^IBTRE Q  ; entry from programmer mode
"RTN","IBNCPDPC",28,0)
 D EN^VALM("IBT EXPAND/EDIT TRACKING")
"RTN","IBNCPDPC",29,0)
 K IBFASTXT
"RTN","IBNCPDPC",30,0)
 Q
"RTN","IBNCPDPC",31,0)
 ;
"RTN","IBNCPDPC",32,0)
HDR ; -- header code
"RTN","IBNCPDPC",33,0)
 D PID^VADPT
"RTN","IBNCPDPC",34,0)
 S VALMHDR(1)="Expanded Claims Tracking Info for: "_$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")_"   ROI: "_$$EXPAND^IBTRE(356,.31,$P(^IBT(356,IBTRN,0),"^",31))
"RTN","IBNCPDPC",35,0)
 S VALMHDR(2)="                              For: "_$$ETYP(IBTRN)
"RTN","IBNCPDPC",36,0)
 Q
"RTN","IBNCPDPC",37,0)
 ;
"RTN","IBNCPDPC",38,0)
INIT ; -- init variables and list array
"RTN","IBNCPDPC",39,0)
 K VALMQUIT
"RTN","IBNCPDPC",40,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBNCPDPC",41,0)
 D BLD,HDR
"RTN","IBNCPDPC",42,0)
 Q
"RTN","IBNCPDPC",43,0)
 ;
"RTN","IBNCPDPC",44,0)
BLD ; -- list builder
"RTN","IBNCPDPC",45,0)
 N IBTRND,IBTRND1,IBTRND2,IBETYP
"RTN","IBNCPDPC",46,0)
 K ^TMP("IBTRED",$J)
"RTN","IBNCPDPC",47,0)
 F I=1:1:30 D BLANK(.I)
"RTN","IBNCPDPC",48,0)
 I '$G(IBTRPRF) S IBTRPRF=123
"RTN","IBNCPDPC",49,0)
 I IBTRPRF<10 S X=$S(IBTRPRF=1:"IBTRED  HR MENU",IBTRPRF=2:"IBTRED  IR MENU",IBTRPRF=3:"IBTRED  BI MENU",1:"IBTRED  MENU") D PROT^IBTRPR(X)
"RTN","IBNCPDPC",50,0)
 D KILL^VALM10()
"RTN","IBNCPDPC",51,0)
 S IBTRND=$G(^IBT(356,IBTRN,0)),IBTRND1=$G(^(1))
"RTN","IBNCPDPC",52,0)
 S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBNCPDPC",53,0)
 S VALMCNT=30
"RTN","IBNCPDPC",54,0)
 D VISIT D ^IBTRED0,^IBTRED01
"RTN","IBNCPDPC",55,0)
 Q
"RTN","IBNCPDPC",56,0)
 ;
"RTN","IBNCPDPC",57,0)
VISIT ; -- Visit info Region
"RTN","IBNCPDPC",58,0)
 N OFFSET,START,IBOE,IBOE0
"RTN","IBNCPDPC",59,0)
 S START=1,OFFSET=2
"RTN","IBNCPDPC",60,0)
 D SET^IBCNSP(START,OFFSET," Visit Information ",IORVON,IORVOFF)
"RTN","IBNCPDPC",61,0)
 D SET^IBCNSP(START+1,OFFSET,"    Visit Type: "_$P(IBETYP,"^"))
"RTN","IBNCPDPC",62,0)
 I '$D(IBETYP) N IBETYP S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBNCPDPC",63,0)
 S X=$P(IBETYP,"^",3) D @X
"RTN","IBNCPDPC",64,0)
 Q
"RTN","IBNCPDPC",65,0)
1 ; -- visit region for admission or scheduled admission
"RTN","IBNCPDPC",66,0)
 I $P($G(^DGPM(+$P(IBTRND,"^",5),0)),"^",17) S VAINDT=+$G(^DGPM(+$P(IBTRND,"^",5),0))
"RTN","IBNCPDPC",67,0)
 I '$D(VAIN) S VA200="" D INP^VADPT
"RTN","IBNCPDPC",68,0)
 I VAIN(7)="" S Y=$P(IBTRND,"^",6) D D^DIQ S $P(VAIN(7),"^",2)=Y
"RTN","IBNCPDPC",69,0)
 D SET^IBCNSP(START+2,OFFSET,"Admission Date: "_$P(VAIN(7),"^",2))
"RTN","IBNCPDPC",70,0)
 D SET^IBCNSP(START+3,OFFSET,"          Ward: "_$P(VAIN(4),"^",2))
"RTN","IBNCPDPC",71,0)
 D SET^IBCNSP(START+4,OFFSET,"     Specialty: "_$P(VAIN(3),"^",2))
"RTN","IBNCPDPC",72,0)
 Q
"RTN","IBNCPDPC",73,0)
2 ; -- visit region for  outpatient care
"RTN","IBNCPDPC",74,0)
 S IBOE=$P(IBTRND,"^",4),IBOE0=$$SCE^IBSDU(+IBOE)
"RTN","IBNCPDPC",75,0)
 D SET^IBCNSP(START+2,OFFSET,"    Visit Date: "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P"))
"RTN","IBNCPDPC",76,0)
 I +IBOE<1 D  Q
"RTN","IBNCPDPC",77,0)
 .D SET^IBCNSP(START+3,OFFSET,"  No Outpatient Encounter Found") Q
"RTN","IBNCPDPC",78,0)
 D SET^IBCNSP(START+3,OFFSET,"        Clinic: "_$P($G(^SC(+$P(IBOE0,"^",4),0)),"^"))
"RTN","IBNCPDPC",79,0)
 D SET^IBCNSP(START+4,OFFSET,"  Appt. Status: "_$$EXPAND^IBTRE(409.68,.12,$P(IBOE0,"^",12)))
"RTN","IBNCPDPC",80,0)
 D SET^IBCNSP(START+5,OFFSET,"    Appt. Type: "_$$EXPAND^IBTRE(409.68,.1,$P(IBOE0,"^",10)))
"RTN","IBNCPDPC",81,0)
 D SET^IBCNSP(START+6,OFFSET,"  Special Cond: "_$$ENCL(IBOE))
"RTN","IBNCPDPC",82,0)
 Q
"RTN","IBNCPDPC",83,0)
 ;
"RTN","IBNCPDPC",84,0)
3 ; -- visit region for rx refill
"RTN","IBNCPDPC",85,0)
 N PSONTALK,PSOTMP
"RTN","IBNCPDPC",86,0)
 S PSONTALK=1 ;PSORXN=+$P(IBTRND,"^",8),PSOFILL=+$P(IBTRND,"^",10)
"RTN","IBNCPDPC",87,0)
 S X=+$P(IBTRND,"^",8)_"^"_+$P(IBTRND,"^",10) D EN^PSOCPVW
"RTN","IBNCPDPC",88,0)
 I '$D(PSOTMP) D PSOCPVW(+$P(IBTRND,"^",2),+$P(IBTRND,"^",8),.PSOTMP)
"RTN","IBNCPDPC",89,0)
 D SET^IBCNSP(START+2,OFFSET,"Prescription #: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),.01,"E")))
"RTN","IBNCPDPC",90,0)
 I $P(IBTRND,"^",10)=0 D SET^IBCNSP(START+3,OFFSET,"     Fill Date: "_$$FMTE^XLFDT(+$P(IBTRND,"^",6)))
"RTN","IBNCPDPC",91,0)
 I +$P(IBTRND,"^",10) D SET^IBCNSP(START+3,OFFSET,"   Refill Date: "_$$FMTE^XLFDT(+$P(IBTRND,"^",6)))
"RTN","IBNCPDPC",92,0)
 D SET^IBCNSP(START+4,OFFSET,"          Drug: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),6,"E")))
"RTN","IBNCPDPC",93,0)
 D SET^IBCNSP(START+5,OFFSET,"      Quantity: "_$J($G(PSOTMP(52,+$P(IBTRND,"^",8),7,"E")),8))
"RTN","IBNCPDPC",94,0)
 D SET^IBCNSP(START+6,OFFSET,"   Days Supply: "_$J($G(PSOTMP(52,+$P(IBTRND,"^",8),8,"E")),8))
"RTN","IBNCPDPC",95,0)
 D SET^IBCNSP(START+7,OFFSET,"          NDC#: "_$$GETNDC^PSONDCUT(+$P(IBTRND,"^",8),$P(IBTRND,"^",10)),2)
"RTN","IBNCPDPC",96,0)
 D SET^IBCNSP(START+8,OFFSET,"     Physician: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),4,"E")))
"RTN","IBNCPDPC",97,0)
 Q
"RTN","IBNCPDPC",98,0)
 ;
"RTN","IBNCPDPC",99,0)
4 ; -- Visit region for prosthetics
"RTN","IBNCPDPC",100,0)
 D 4^IBTRED01
"RTN","IBNCPDPC",101,0)
 Q
"RTN","IBNCPDPC",102,0)
 ;
"RTN","IBNCPDPC",103,0)
HELP ; -- help code
"RTN","IBNCPDPC",104,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBNCPDPC",105,0)
 Q
"RTN","IBNCPDPC",106,0)
 ;
"RTN","IBNCPDPC",107,0)
EXIT ; -- exit code
"RTN","IBNCPDPC",108,0)
 K VALMQUIT,IBTRN
"RTN","IBNCPDPC",109,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","IBNCPDPC",110,0)
 Q
"RTN","IBNCPDPC",111,0)
 ;
"RTN","IBNCPDPC",112,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBNCPDPC",113,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBNCPDPC",114,0)
 Q
"RTN","IBNCPDPC",115,0)
 ;
"RTN","IBNCPDPC",116,0)
ETYP(IBTRN) ; -- Expand type of epidose and date
"RTN","IBNCPDPC",117,0)
 N IBY S IBY=""
"RTN","IBNCPDPC",118,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0)) I IBTRND="" G ETYPQ
"RTN","IBNCPDPC",119,0)
 S IBETYPD=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBNCPDPC",120,0)
 I IBETYPD="" G ETYPQ
"RTN","IBNCPDPC",121,0)
 S IBY=$P(IBETYPD,"^")_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
"RTN","IBNCPDPC",122,0)
ETYPQ Q IBY
"RTN","IBNCPDPC",123,0)
 ;
"RTN","IBNCPDPC",124,0)
ENCL(IBOE) ; -- output format of classifications
"RTN","IBNCPDPC",125,0)
 N I,X,IBCL,IBCL1 S IBCL=""
"RTN","IBNCPDPC",126,0)
 I '$G(IBOE) G ENCLQ
"RTN","IBNCPDPC",127,0)
 S IBCL1=$$ENCL^IBAMTS2(+IBOE)
"RTN","IBNCPDPC",128,0)
 F I=1:1:8 S X=$P(IBCL1,"^",I) S:X IBCL=IBCL_$S(I=1:"AO",I=2:"IR",I=3:"SC",I=4:"SWA",I=5:"MST",I=6:"HNC",I=7:"CV",I=8:"SHAD",1:"")_"  "
"RTN","IBNCPDPC",129,0)
ENCLQ Q IBCL
"RTN","IBNCPDPC",130,0)
 ;
"RTN","IBNCPDPC",131,0)
SELCT(IBECMEN,IBREFNUM) ;
"RTN","IBNCPDPC",132,0)
 N IBRET,IB356
"RTN","IBNCPDPC",133,0)
 S (IB356,IBRET)=0
"RTN","IBNCPDPC",134,0)
 F  S IB356=+$O(^IBT(356,"AE",IBECMEN,IB356)) Q:((IB356=0)!(IBRET'=0))  D
"RTN","IBNCPDPC",135,0)
 . I IBREFNUM=+$P($G(^IBT(356,IB356,0)),U,10) S IBRET=IB356
"RTN","IBNCPDPC",136,0)
 Q +IBRET
"RTN","IBNCPDPC",137,0)
 ;
"RTN","IBNCPDPC",138,0)
 ;return RX info 
"RTN","IBNCPDPC",139,0)
 ;IBDFN - patient's DFN
"RTN","IBNCPDPC",140,0)
 ;IBRX - ien in #52
"RTN","IBNCPDPC",141,0)
 ;output in .PSOTMP array
"RTN","IBNCPDPC",142,0)
PSOCPVW(IBDFN,IBRX,PSOTMP) ;
"RTN","IBNCPDPC",143,0)
 Q:($G(IBDFN)=0)!($G(IBRX)=0)
"RTN","IBNCPDPC",144,0)
 K ^TMP($J,"IBNCPDP-RXINFO")
"RTN","IBNCPDPC",145,0)
 D RX^PSO52API(IBDFN,"IBNCPDP-RXINFO",IBRX,"",0)
"RTN","IBNCPDPC",146,0)
 S PSOTMP(52,+$P(IBTRND,"^",8),.01,"E")=$G(^TMP($J,"IBNCPDP-RXINFO",IBDFN,IBRX,.01))
"RTN","IBNCPDPC",147,0)
 S PSOTMP(52,+$P(IBTRND,"^",8),7,"E")=$G(^TMP($J,"IBNCPDP-RXINFO",IBDFN,IBRX,7))
"RTN","IBNCPDPC",148,0)
 S PSOTMP(52,+$P(IBTRND,"^",8),8,"E")=$G(^TMP($J,"IBNCPDP-RXINFO",IBDFN,IBRX,8))
"RTN","IBNCPDPC",149,0)
 S PSOTMP(52,+$P(IBTRND,"^",8),6,"E")=$P($G(^TMP($J,"IBNCPDP-RXINFO",IBDFN,IBRX,6)),U,2)
"RTN","IBNCPDPC",150,0)
 K ^TMP($J,"IBNCPDP-RXINFO")
"RTN","IBNCPDPC",151,0)
 Q
"RTN","IBNCPDPC",152,0)
 ;
"RTN","IBNCPEV1")
0^25^B21049389^B20779583
"RTN","IBNCPEV1",1,0)
IBNCPEV1 ;DALOI/SS - NCPDP BILLING EVENTS REPORT ;21-MAR-2006
"RTN","IBNCPEV1",2,0)
 ;;2.0;INTEGRATED BILLING;**342,339**;21-MAR-94;Build 2
"RTN","IBNCPEV1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPEV1",4,0)
 ;
"RTN","IBNCPEV1",5,0)
 ;IA# 10155 is used to read ^DD(file,field,0) node
"RTN","IBNCPEV1",6,0)
 Q
"RTN","IBNCPEV1",7,0)
 ;
"RTN","IBNCPEV1",8,0)
SETVARS ;
"RTN","IBNCPEV1",9,0)
 S (IBECME,IBPAT,IBRX,IBQ,IBSCR,IBPAGE,IBDTL)=0
"RTN","IBNCPEV1",10,0)
 ;date
"RTN","IBNCPEV1",11,0)
 F  D DATE^IBNCPDPE Q:IBQ  Q:$$TESTDATA^IBNCPDPE
"RTN","IBNCPEV1",12,0)
 Q:IBQ
"RTN","IBNCPEV1",13,0)
 D MODE^IBNCPDPE Q:IBQ
"RTN","IBNCPEV1",14,0)
 D DEVICE^IBNCPDPE Q:IBQ
"RTN","IBNCPEV1",15,0)
 Q
"RTN","IBNCPEV1",16,0)
 ;
"RTN","IBNCPEV1",17,0)
 ;/**
"RTN","IBNCPEV1",18,0)
 ; input - 
"RTN","IBNCPEV1",19,0)
 ;   IBECMENO = ECME #
"RTN","IBNCPEV1",20,0)
 ;   IBST = start date (FM format)
"RTN","IBNCPEV1",21,0)
 ;   IBEND = end date (FM format)
"RTN","IBNCPEV1",22,0)
 ; output - returns internal entry number of file #52 for the earliest date within the date range
"RTN","IBNCPEV1",23,0)
GETRX(IBECMENO,IBST,IBEND) ; get ien of file 52 from #366.14
"RTN","IBNCPEV1",24,0)
 ; array from where the ECME BILLING EVENTS report gets its data
"RTN","IBNCPEV1",25,0)
 ;  This subroutine is called when the user enters an ECME# as
"RTN","IBNCPEV1",26,0)
 ;  part of the search criteria
"RTN","IBNCPEV1",27,0)
 N IBDATE,IBNO,IBIEN
"RTN","IBNCPEV1",28,0)
 S IBDATE=+$O(^IBCNR(366.14,"E",IBECMENO,IBST-1))
"RTN","IBNCPEV1",29,0)
 I IBDATE=0 Q 0
"RTN","IBNCPEV1",30,0)
 I IBDATE>IBEND Q 0
"RTN","IBNCPEV1",31,0)
 S IBNO=+$O(^IBCNR(366.14,"E",IBECMENO,IBDATE,0))
"RTN","IBNCPEV1",32,0)
 I IBNO=0 Q 0
"RTN","IBNCPEV1",33,0)
 S IBIEN=$O(^IBCNR(366.14,"B",IBDATE,0))
"RTN","IBNCPEV1",34,0)
 Q +$P($G(^IBCNR(366.14,IBIEN,1,IBNO,2)),U)
"RTN","IBNCPEV1",35,0)
 ;
"RTN","IBNCPEV1",36,0)
 ;/**
"RTN","IBNCPEV1",37,0)
 ;finish
"RTN","IBNCPEV1",38,0)
 ;input:
"RTN","IBNCPEV1",39,0)
 ;IBD2 - node ^IBCNR(366.14,D0,1,D1,2)
"RTN","IBNCPEV1",40,0)
 ;IBD3 - node ^IBCNR(366.14,D0,1,D1,3)
"RTN","IBNCPEV1",41,0)
 ;IBD4 - node ^IBCNR(366.14,D0,1,D1,4)
"RTN","IBNCPEV1",42,0)
 ;IBINS - multiple of ^IBCNR(366.14,D0,1,D1,5)
"RTN","IBNCPEV1",43,0)
DSTAT(IBD2,IBD3,IBD4,IBINS) ;
"RTN","IBNCPEV1",44,0)
 N IBX,IBT,IBSC,IB1ST,IBNXT,IBEXMPV
"RTN","IBNCPEV1",45,0)
 S IB1ST=1
"RTN","IBNCPEV1",46,0)
 D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",47,0)
 W !?10,"ELIGIBILITY: "
"RTN","IBNCPEV1",48,0)
 F IBX=2:1 S IBT=$P($T(EXEMPT+IBX^IBNCPDP1),";",3),IBSC=$P(IBT,U,2) Q:IBSC=""  S IBEXMPV=$$EXMPFLDS(IBSC,IBD4) D:IBEXMPV]""  Q:IBQ
"RTN","IBNCPEV1",49,0)
 . I 'IB1ST W "," I $X>70 D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",50,0)
 . W " ",IBSC,":",$S(IBEXMPV:"Yes",IBEXMPV=0:"No",1:"?") S IB1ST=0
"RTN","IBNCPEV1",51,0)
 Q:IBQ
"RTN","IBNCPEV1",52,0)
 I $P(IBD2,U,4) D CHKP^IBNCPEV Q:IBQ  W !?10,"DRUG:",$$DRUGNAM(+$P(IBD2,U,4))
"RTN","IBNCPEV1",53,0)
 D CHKP^IBNCPEV Q:IBQ  W !?10
"RTN","IBNCPEV1",54,0)
 W "NDC:",$S($P(IBD2,U,5):$P(IBD2,U,5),1:"No"),", QTY:",$S($P(IBD2,U,8):$P(IBD2,U,8),1:"No"),", COST:",$S($P(IBD3,U,4):$P(IBD3,U,4),1:"No")
"RTN","IBNCPEV1",55,0)
 I $P(IBD2,U,10)]"" W ", DEA:",$P(IBD2,U,10)
"RTN","IBNCPEV1",56,0)
 S IBX=0,IBNXT=0 F  S IBX=$O(IBINS(IBX)) Q:'IBX  D  Q:IBQ  S IBNXT=1
"RTN","IBNCPEV1",57,0)
 .N Y S Y=$P(IBINS(IBX,0),U,2,8) W:'Y "@@@@" Q:'Y
"RTN","IBNCPEV1",58,0)
 .I IBNXT D CHKP^IBNCPEV Q:IBQ  W !?10,"-----------"
"RTN","IBNCPEV1",59,0)
 .D CHKP^IBNCPEV Q:IBQ  W !?10
"RTN","IBNCPEV1",60,0)
 .W "PLAN:",$P($G(^IBA(355.3,+Y,0)),U,3),"  "
"RTN","IBNCPEV1",61,0)
 .W "INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+Y,0)),0)),U)
"RTN","IBNCPEV1",62,0)
 .D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",63,0)
 .I $P(Y,U,2)]"" W "BIN:",$P(Y,U,2) S IB1ST=0
"RTN","IBNCPEV1",64,0)
 .I $P(Y,U,3)]"" W:'IB1ST ", " W "PCN:",$P(Y,U,3) S IB1ST=0
"RTN","IBNCPEV1",65,0)
 .I $P(Y,U,4)]"" W:'IB1ST ", " W "PAYER SHEET B1:",$P(Y,U,4) S IB1ST=0
"RTN","IBNCPEV1",66,0)
 .D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",67,0)
 .S Y=IBINS(IBX,1)
"RTN","IBNCPEV1",68,0)
 .I $P(Y,U,4)]"" W "PAYER SHEET B2:",$P(Y,U,4) S IB1ST=0
"RTN","IBNCPEV1",69,0)
 .I $P(Y,U,5)]"" W:'IB1ST ", " W "PAYER SHEET B3:",$P(Y,U,5)
"RTN","IBNCPEV1",70,0)
 .;S Y=$G(Z1("INS",IBX,2)) Q:Y=""
"RTN","IBNCPEV1",71,0)
 .S Y=IBINS(IBX,2) Q:Y=""
"RTN","IBNCPEV1",72,0)
 .D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",73,0)
 .I $P(Y,U)]"" W "DISPENSING FEE:",$P(Y,U) S IB1ST=0
"RTN","IBNCPEV1",74,0)
 .I $P(Y,U,2)]"" W:'IB1ST ", " W "BASIS OF COST DETERM:",$$BOCD^IBNCPEV($P(Y,U,2)) S IB1ST=0
"RTN","IBNCPEV1",75,0)
 .D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",76,0)
 .I $P(Y,U,3)]"" W "COST:",$J($P(Y,U,3),0,2) S IB1ST=0
"RTN","IBNCPEV1",77,0)
 .I $P(Y,U,4)]"" W:'IB1ST ", " W "GROSS AMT DUE:",$J($P(Y,U,4),0,2) S IB1ST=0
"RTN","IBNCPEV1",78,0)
 .I $P(Y,U,5)]"" W:'IB1ST ", " W "ADMIN FEE:",$J($P(Y,U,5),0,2)
"RTN","IBNCPEV1",79,0)
 Q:IBQ
"RTN","IBNCPEV1",80,0)
 ;
"RTN","IBNCPEV1",81,0)
 D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",82,0)
 W !?10,"USER:",$$USR^IBNCPEV(+$P(IBD3,U,10))
"RTN","IBNCPEV1",83,0)
 Q
"RTN","IBNCPEV1",84,0)
 ;
"RTN","IBNCPEV1",85,0)
 ;get Exemption status by name
"RTN","IBNCPEV1",86,0)
 ;IBEXMP - exemption (like "AO","EC", etc)
"RTN","IBNCPEV1",87,0)
 ;IBNODE - node ^IBCNR(366.14,D0,1,D1,4)
"RTN","IBNCPEV1",88,0)
EXMPFLDS(IBEXMP,IBNODE) ;
"RTN","IBNCPEV1",89,0)
 Q:IBEXMP="AO" $P(IBNODE,U,1)
"RTN","IBNCPEV1",90,0)
 Q:IBEXMP="CV" $P(IBNODE,U,2)
"RTN","IBNCPEV1",91,0)
 Q:IBEXMP="SWA" $P(IBNODE,U,3)
"RTN","IBNCPEV1",92,0)
 Q:IBEXMP="IR" $P(IBNODE,U,4)
"RTN","IBNCPEV1",93,0)
 Q:IBEXMP="MST" $P(IBNODE,U,5)
"RTN","IBNCPEV1",94,0)
 Q:IBEXMP="HNC" $P(IBNODE,U,6)
"RTN","IBNCPEV1",95,0)
 Q:IBEXMP="SC" $P(IBNODE,U,7)
"RTN","IBNCPEV1",96,0)
 Q:IBEXMP="SHAD" $P(IBNODE,U,8)
"RTN","IBNCPEV1",97,0)
 Q ""
"RTN","IBNCPEV1",98,0)
 ;returns DFN from file #366.14 by prescription ien of file #50
"RTN","IBNCPEV1",99,0)
GETDFN(IBRX) ;
"RTN","IBNCPEV1",100,0)
 N IB1,IB2
"RTN","IBNCPEV1",101,0)
 S IB1=+$O(^IBCNR(366.14,"I",IBRX,0))
"RTN","IBNCPEV1",102,0)
 I IB1=0 Q 0
"RTN","IBNCPEV1",103,0)
 S IB2=+$O(^IBCNR(366.14,"I",IBRX,IB1,0))
"RTN","IBNCPEV1",104,0)
 I IB2=0 Q 0
"RTN","IBNCPEV1",105,0)
 Q +$P($G(^IBCNR(366.14,IB1,1,IB2,0)),U,3)
"RTN","IBNCPEV1",106,0)
 ;
"RTN","IBNCPEV1",107,0)
 ;return DRUG name (#50,.01)
"RTN","IBNCPEV1",108,0)
 ;IBX1 - ien in file #50
"RTN","IBNCPEV1",109,0)
DRUGNAM(IBX1) ;
"RTN","IBNCPEV1",110,0)
 ;Q $P($G(^PSDRUG(IBX1,0)),U)
"RTN","IBNCPEV1",111,0)
 N X
"RTN","IBNCPEV1",112,0)
 K ^TMP($J,"IBNCPDP50")
"RTN","IBNCPEV1",113,0)
 D DATA^PSS50(IBX1,"","","","","IBNCPDP50")
"RTN","IBNCPEV1",114,0)
 S X=$G(^TMP($J,"IBNCPDP50",IBX1,.01))
"RTN","IBNCPEV1",115,0)
 K ^TMP($J,"IBNCPDP50")
"RTN","IBNCPEV1",116,0)
 Q X
"RTN","IBNCPEV1",117,0)
 ;
"RTN","IBNCPEV1",118,0)
DRUGAPI(DRUGIEN,FLDNUM) ;
"RTN","IBNCPEV1",119,0)
 ;return a DRUG's field value
"RTN","IBNCPEV1",120,0)
 ;input:
"RTN","IBNCPEV1",121,0)
 ; DRUGIEN - ien #50
"RTN","IBNCPEV1",122,0)
 ; FLDNUM - field number (like .01)
"RTN","IBNCPEV1",123,0)
 ;output:
"RTN","IBNCPEV1",124,0)
 ; returned value that contains the external value of the specified field
"RTN","IBNCPEV1",125,0)
 N IBARR,DIQ,DIC
"RTN","IBNCPEV1",126,0)
 S DIQ="IBARR",DIQ(0)="E",DIC=50
"RTN","IBNCPEV1",127,0)
 D EN^PSSDI(50,"IB",DIC,.FLDNUM,.DRUGIEN,.DIQ)
"RTN","IBNCPEV1",128,0)
 Q $G(IBARR(50,DRUGIEN,FLDNUM,"E"))
"RTN","IBNCPEV1",129,0)
 ;
"RTN","IBNCPEV1",130,0)
 ;reopen
"RTN","IBNCPEV1",131,0)
REOPEN ;
"RTN","IBNCPEV1",132,0)
 D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",133,0)
 D SUBHDR^IBNCPEV
"RTN","IBNCPEV1",134,0)
 I +$P(IBD3,U,3) D CHKP^IBNCPEV Q:IBQ  W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+$P(IBD3,U,3),0)),0)),U)
"RTN","IBNCPEV1",135,0)
 I $L($P(IBD3,U,6))>2 D CHKP^IBNCPEV Q:IBQ  W !?10,"REOPEN COMMENTS:",$P(IBD3,U,6)
"RTN","IBNCPEV1",136,0)
 D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",137,0)
 D DISPUSR^IBNCPEV
"RTN","IBNCPEV1",138,0)
 Q
"RTN","IBNCPEV1",139,0)
 ;IBNCPEV1
"RTN","IBNCPLOG")
0^24^B49957906^B49413338
"RTN","IBNCPLOG",1,0)
IBNCPLOG ;BHAM ISC/SS - IB ECME EVNT REPORT ;22-MAR-2006
"RTN","IBNCPLOG",2,0)
 ;;2.0;INTEGRATED BILLING;**342,339**;21-MAR-94;Build 2
"RTN","IBNCPLOG",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPLOG",4,0)
 ;
"RTN","IBNCPLOG",5,0)
 ;store data related to the IB calls made by ECME package in the file #366.14
"RTN","IBNCPLOG",6,0)
 ;input:
"RTN","IBNCPLOG",7,0)
 ;.IBIBD - (by referrence) IBD array with parameter sent to IB by ECME
"RTN","IBNCPLOG",8,0)
 ;DFN patient's ien
"RTN","IBNCPLOG",9,0)
 ;IBPROC - type of event. i.e. content of CALL such as BILL, REJECT and so on
"RTN","IBNCPLOG",10,0)
 ;IBRESULT - (optional) result of the event processing, format: return_code^message
"RTN","IBNCPLOG",11,0)
 ;IBJOB - (optional) job, default = $J
"RTN","IBNCPLOG",12,0)
 ;IBDTTM - (optional) datetime, default = "NOW" 
"RTN","IBNCPLOG",13,0)
 ;IBUSR - (optional) user ID, default = DUZ
"RTN","IBNCPLOG",14,0)
 ;output:
"RTN","IBNCPLOG",15,0)
 ;none
"RTN","IBNCPLOG",16,0)
LOG(IBIBD,DFN,IBPROC,IBRESULT,IBJOB,IBDTTM,IBUSR) ;Store the data
"RTN","IBNCPLOG",17,0)
 N NDX,Z,REF,IBDATE,IBDTIEN,IBEVNIEN,IBIBDTYP,IBRETV
"RTN","IBNCPLOG",18,0)
 S IBRESULT=$G(IBRESULT)
"RTN","IBNCPLOG",19,0)
 ;
"RTN","IBNCPLOG",20,0)
 I '$G(IBJOB) S IBJOB=$J
"RTN","IBNCPLOG",21,0)
 I '$G(IBDTTM) S IBDTTM=$$NOW^XLFDT()
"RTN","IBNCPLOG",22,0)
 I '$G(IBUSR) S IBUSR=+DUZ
"RTN","IBNCPLOG",23,0)
 ;       
"RTN","IBNCPLOG",24,0)
 S IBDATE=DT
"RTN","IBNCPLOG",25,0)
 S IBDTIEN=+$O(^IBCNR(366.14,"B",IBDATE,0))
"RTN","IBNCPLOG",26,0)
 L +^IBCNR(366.14):30 E  Q
"RTN","IBNCPLOG",27,0)
 I IBDTIEN=0 S IBDTIEN=+$$ADDDATE(IBDATE)
"RTN","IBNCPLOG",28,0)
 ;create an event
"RTN","IBNCPLOG",29,0)
 S IBEVNIEN=$$NEWEVENT(IBDTIEN,IBPROC)
"RTN","IBNCPLOG",30,0)
 L -^IBCNR(366.14)
"RTN","IBNCPLOG",31,0)
 I IBEVNIEN=0 W !,"New event creation Error : LOG^IBNCPLOG",! Q
"RTN","IBNCPLOG",32,0)
 ;
"RTN","IBNCPLOG",33,0)
 I +$$FILLFLDS^IBNCPUT1(366.141,".03",IBEVNIEN_","_IBDTIEN,DFN) ;DFN
"RTN","IBNCPLOG",34,0)
 I +$$FILLFLDS^IBNCPUT1(366.141,".04",IBEVNIEN_","_IBDTIEN,IBJOB) ;JOB
"RTN","IBNCPLOG",35,0)
 I +$$FILLFLDS^IBNCPUT1(366.141,".05",IBEVNIEN_","_IBDTIEN,IBDTTM) ;DATETIME
"RTN","IBNCPLOG",36,0)
 I +$$FILLFLDS^IBNCPUT1(366.141,".06",IBEVNIEN_","_IBDTIEN,DUZ) ;USER
"RTN","IBNCPLOG",37,0)
 I IBRESULT'="" D
"RTN","IBNCPLOG",38,0)
 . S IBRETV=+$$FILLFLDS^IBNCPUT1(366.141,".07",IBEVNIEN_","_IBDTIEN,+IBRESULT) ;RESULT
"RTN","IBNCPLOG",39,0)
 . S IBRETV=+$$FILLFLDS^IBNCPUT1(366.141,".08",IBEVNIEN_","_IBDTIEN,$P(IBRESULT,U,2)) ;RESULT MESSAGE
"RTN","IBNCPLOG",40,0)
 ;store IBIBD array
"RTN","IBNCPLOG",41,0)
 S IBIBDTYP=""
"RTN","IBNCPLOG",42,0)
 F  S IBIBDTYP=$O(IBIBD(IBIBDTYP)) Q:IBIBDTYP=""  D
"RTN","IBNCPLOG",43,0)
 . D IBD(IBDTIEN,IBEVNIEN,IBIBDTYP,$G(IBIBD(IBIBDTYP)))
"RTN","IBNCPLOG",44,0)
 ;store "INS" node of IBIBD array
"RTN","IBNCPLOG",45,0)
 I $D(IBIBD("INS")) I $$INS(.IBIBD,IBDTIEN,IBEVNIEN)
"RTN","IBNCPLOG",46,0)
 Q
"RTN","IBNCPLOG",47,0)
 ;
"RTN","IBNCPLOG",48,0)
 ;store IBD array data 
"RTN","IBNCPLOG",49,0)
 ;IBDTIEN -  ien on top [DATE] level  
"RTN","IBNCPLOG",50,0)
 ;IBRECNO - ien in [EVENTS] multiple
"RTN","IBNCPLOG",51,0)
 ;IBIBDTYP - type subscript in IBD array (BILL, PAID, RESPONSE, etc)
"RTN","IBNCPLOG",52,0)
 ;IBVAL - value to store
"RTN","IBNCPLOG",53,0)
IBD(IBDTIEN,IBRECNO,IBIBDTYP,IBVAL) ;
"RTN","IBNCPLOG",54,0)
 N IBFLDNO
"RTN","IBNCPLOG",55,0)
 ;W !," - ",IBRECNO," ",IBIBDTYP," = ",IBVAL
"RTN","IBNCPLOG",56,0)
 ;free text like "WEBMD: PAID"
"RTN","IBNCPLOG",57,0)
 I IBIBDTYP="AUTH #" S IBFLDNO=".11",IBVAL=$E(IBVAL,1,30) G EDITIBD
"RTN","IBNCPLOG",58,0)
 ;free text like "0504597;3051229"
"RTN","IBNCPLOG",59,0)
 I IBIBDTYP="BCID" S IBFLDNO=".12" G EDITIBD
"RTN","IBNCPLOG",60,0)
 ;7 digits ECME number - identifier (stored as a text - might have leading zeroes)
"RTN","IBNCPLOG",61,0)
 I IBIBDTYP="CLAIMID" S IBFLDNO=".13" G EDITIBD
"RTN","IBNCPLOG",62,0)
 ;pointer to file #2
"RTN","IBNCPLOG",63,0)
 I IBIBDTYP="DFN" S IBFLDNO=".14" G EDITIBD
"RTN","IBNCPLOG",64,0)
 ;pointer to file #40.8
"RTN","IBNCPLOG",65,0)
 I IBIBDTYP="DIVISION" S IBFLDNO=".15" G EDITIBD
"RTN","IBNCPLOG",66,0)
 ;free text
"RTN","IBNCPLOG",67,0)
 I IBIBDTYP="RESPONSE" S IBFLDNO=".16",IBVAL=$E(IBVAL,1,20) G EDITIBD
"RTN","IBNCPLOG",68,0)
 ;free text
"RTN","IBNCPLOG",69,0)
 I IBIBDTYP="REVERSAL REASON" S IBFLDNO=".17",IBVAL=$E(IBVAL,1,40) G EDITIBD
"RTN","IBNCPLOG",70,0)
 ;1 digit number
"RTN","IBNCPLOG",71,0)
 I IBIBDTYP="RTS-DEL" S IBFLDNO=".18" G EDITIBD
"RTN","IBNCPLOG",72,0)
 ;free text 
"RTN","IBNCPLOG",73,0)
 I IBIBDTYP="STATUS" S IBFLDNO=".19",IBVAL=$E(IBVAL,1,20) G EDITIBD
"RTN","IBNCPLOG",74,0)
 ;Prescription number as a text, might have alpha characters (external value, this is not IEN)
"RTN","IBNCPLOG",75,0)
 I IBIBDTYP="RX NO" S IBFLDNO=".202",IBVAL=$E(IBVAL,1,20) G EDITIBD
"RTN","IBNCPLOG",76,0)
 ;0 - original, 1,2,3,... - refill number
"RTN","IBNCPLOG",77,0)
 I IBIBDTYP="FILL NUMBER" S IBFLDNO=".203" G EDITIBD
"RTN","IBNCPLOG",78,0)
 ;internal identifier number for a DRUG
"RTN","IBNCPLOG",79,0)
 I IBIBDTYP="DRUG" S IBFLDNO=".204" G EDITIBD
"RTN","IBNCPLOG",80,0)
 I IBIBDTYP="NDC" S IBFLDNO=".205" G EDITIBD
"RTN","IBNCPLOG",81,0)
 I IBIBDTYP="FILL DATE" S IBFLDNO=".206" G EDITIBD
"RTN","IBNCPLOG",82,0)
 I IBIBDTYP="RELEASE DATE" S IBFLDNO=".207" G EDITIBD
"RTN","IBNCPLOG",83,0)
 I IBIBDTYP="QTY" S IBFLDNO=".208" G EDITIBD
"RTN","IBNCPLOG",84,0)
 I IBIBDTYP="DAYS SUPPLY" S IBFLDNO=".209" G EDITIBD
"RTN","IBNCPLOG",85,0)
 I IBIBDTYP="DEA" S IBFLDNO=".21" G EDITIBD
"RTN","IBNCPLOG",86,0)
 I IBIBDTYP="FILLED BY" S IBFLDNO=".211" G EDITIBD
"RTN","IBNCPLOG",87,0)
 I IBIBDTYP="AO" S IBFLDNO=".401" G EDITIBD
"RTN","IBNCPLOG",88,0)
 I IBIBDTYP="CV" S IBFLDNO=".402" G EDITIBD
"RTN","IBNCPLOG",89,0)
 I IBIBDTYP="SWA" S IBFLDNO=".403" G EDITIBD
"RTN","IBNCPLOG",90,0)
 I IBIBDTYP="IR" S IBFLDNO=".404" G EDITIBD
"RTN","IBNCPLOG",91,0)
 I IBIBDTYP="MST" S IBFLDNO=".405" G EDITIBD
"RTN","IBNCPLOG",92,0)
 I IBIBDTYP="HNC" S IBFLDNO=".406" G EDITIBD
"RTN","IBNCPLOG",93,0)
 I IBIBDTYP="SC" S IBFLDNO=".407" G EDITIBD
"RTN","IBNCPLOG",94,0)
 I IBIBDTYP="SHAD" S IBFLDNO=".408" G EDITIBD
"RTN","IBNCPLOG",95,0)
 I IBIBDTYP="BILL" S IBFLDNO=".301" G EDITIBD
"RTN","IBNCPLOG",96,0)
 I IBIBDTYP="BILLED" S IBFLDNO=".302" G EDITIBD
"RTN","IBNCPLOG",97,0)
 I IBIBDTYP="PLAN" S IBFLDNO=".303" G EDITIBD
"RTN","IBNCPLOG",98,0)
 I IBIBDTYP="COST" S IBFLDNO=".304" G EDITIBD
"RTN","IBNCPLOG",99,0)
 I IBIBDTYP="PAID" S IBFLDNO=".305" G EDITIBD
"RTN","IBNCPLOG",100,0)
 I IBIBDTYP="CLOSE COMMENT" S IBFLDNO=".306" G EDITIBD
"RTN","IBNCPLOG",101,0)
 I IBIBDTYP="REOPEN COMMENT" S IBFLDNO=".306" G EDITIBD
"RTN","IBNCPLOG",102,0)
 I IBIBDTYP="CLOSE REASON" S IBFLDNO=".307" G EDITIBD
"RTN","IBNCPLOG",103,0)
 I IBIBDTYP="DROP TO PAPER" S IBFLDNO=".308" G EDITIBD
"RTN","IBNCPLOG",104,0)
 I IBIBDTYP="RELEASE COPAY" S IBFLDNO=".309" G EDITIBD
"RTN","IBNCPLOG",105,0)
 I IBIBDTYP="USER" S IBFLDNO=".31" G EDITIBD
"RTN","IBNCPLOG",106,0)
 I IBIBDTYP="PRESCRIPTION" S IBFLDNO=".201" G EDITIBD
"RTN","IBNCPLOG",107,0)
 I IBIBDTYP="IEN" S IBFLDNO=".212" G EDITIBD
"RTN","IBNCPLOG",108,0)
 Q 0
"RTN","IBNCPLOG",109,0)
EDITIBD ;
"RTN","IBNCPLOG",110,0)
 Q +$$FILLFLDS^IBNCPUT1(366.141,IBFLDNO,IBRECNO_","_IBDTIEN,IBVAL)
"RTN","IBNCPLOG",111,0)
 ;------
"RTN","IBNCPLOG",112,0)
 ;to store IBD("INS") array data
"RTN","IBNCPLOG",113,0)
 ;input:
"RTN","IBNCPLOG",114,0)
 ;IBDARR - IBD array by reference
"RTN","IBNCPLOG",115,0)
 ;IBDTIEN -  ien on top [DATE] level  
"RTN","IBNCPLOG",116,0)
 ;IBRECNO - ien in [EVENTS] multiple
"RTN","IBNCPLOG",117,0)
 ;output:
"RTN","IBNCPLOG",118,0)
 ; record number if success
"RTN","IBNCPLOG",119,0)
 ; 0 if failure
"RTN","IBNCPLOG",120,0)
INS(IBDARR,IBDTIEN,IBRECNO) ;
"RTN","IBNCPLOG",121,0)
 N IBSET1,IBSET2,IBSET3,IBFLDNO,IBINSNO,RECNO,IBVAL
"RTN","IBNCPLOG",122,0)
 S IBINSNO=0
"RTN","IBNCPLOG",123,0)
 F  S IBINSNO=$O(IBDARR("INS",IBINSNO)) Q:+IBINSNO=0  D
"RTN","IBNCPLOG",124,0)
 . S IBSET1=$G(IBDARR("INS",IBINSNO,1))
"RTN","IBNCPLOG",125,0)
 . S IBSET2=$G(IBDARR("INS",IBINSNO,2))
"RTN","IBNCPLOG",126,0)
 . S IBSET3=$G(IBDARR("INS",IBINSNO,3))
"RTN","IBNCPLOG",127,0)
 . S RECNO=$$ADDINS(IBDTIEN,IBRECNO)
"RTN","IBNCPLOG",128,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.02,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,1))
"RTN","IBNCPLOG",129,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.03,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,2))
"RTN","IBNCPLOG",130,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.04,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,3))
"RTN","IBNCPLOG",131,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.05,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,4))
"RTN","IBNCPLOG",132,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.06,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,5))
"RTN","IBNCPLOG",133,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.07,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,6))
"RTN","IBNCPLOG",134,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.08,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,7))
"RTN","IBNCPLOG",135,0)
 . ;
"RTN","IBNCPLOG",136,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.101,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,8))
"RTN","IBNCPLOG",137,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.102,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,9))
"RTN","IBNCPLOG",138,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.103,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,10))
"RTN","IBNCPLOG",139,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.104,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,11))
"RTN","IBNCPLOG",140,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.105,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,12))
"RTN","IBNCPLOG",141,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.106,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,13))
"RTN","IBNCPLOG",142,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.107,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,14))
"RTN","IBNCPLOG",143,0)
 . ;
"RTN","IBNCPLOG",144,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.201,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,1))
"RTN","IBNCPLOG",145,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.202,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,2))
"RTN","IBNCPLOG",146,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.203,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,3))
"RTN","IBNCPLOG",147,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.204,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,4))
"RTN","IBNCPLOG",148,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.205,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,5))
"RTN","IBNCPLOG",149,0)
 . ;
"RTN","IBNCPLOG",150,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.301,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET3,U,1))
"RTN","IBNCPLOG",151,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.302,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET3,U,2))
"RTN","IBNCPLOG",152,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.303,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET3,U,3))
"RTN","IBNCPLOG",153,0)
 Q RECNO
"RTN","IBNCPLOG",154,0)
 ;create top level entry in #366.14
"RTN","IBNCPLOG",155,0)
 ;input:
"RTN","IBNCPLOG",156,0)
 ; IBDATE - date in FileMan format
"RTN","IBNCPLOG",157,0)
 ;output
"RTN","IBNCPLOG",158,0)
 ; returns ien created
"RTN","IBNCPLOG",159,0)
ADDDATE(IBDATE) ;
"RTN","IBNCPLOG",160,0)
 N IBIEN
"RTN","IBNCPLOG",161,0)
 S IBIEN=+$O(^IBCNR(366.14,"B",IBDATE,0))
"RTN","IBNCPLOG",162,0)
 I IBIEN>0 Q IBIEN
"RTN","IBNCPLOG",163,0)
 I $$INSITEM^IBNCPUT1(366.14,"",IBDATE,"")
"RTN","IBNCPLOG",164,0)
 Q +$O(^IBCNR(366.14,"B",IBDATE,0))
"RTN","IBNCPLOG",165,0)
 ;
"RTN","IBNCPLOG",166,0)
 ;create EVENT entry in #366.14
"RTN","IBNCPLOG",167,0)
 ;input:
"RTN","IBNCPLOG",168,0)
 ;IBIEN - ien on top [DATE] level  
"RTN","IBNCPLOG",169,0)
 ;EVNTTYPE event type (value for .01)
"RTN","IBNCPLOG",170,0)
 ;returns ien for the event
"RTN","IBNCPLOG",171,0)
 ;or 0 if failed
"RTN","IBNCPLOG",172,0)
NEWEVENT(IBIEN,EVNTTYPE) ;
"RTN","IBNCPLOG",173,0)
 N EVNTRECN
"RTN","IBNCPLOG",174,0)
 S EVNTRECN=$$INSITEM^IBNCPUT1(366.141,IBIEN,$$EXT2INT^IBNCPUT1(EVNTTYPE),"","")
"RTN","IBNCPLOG",175,0)
 I EVNTRECN>0 Q EVNTRECN
"RTN","IBNCPLOG",176,0)
 Q 0
"RTN","IBNCPLOG",177,0)
 ;
"RTN","IBNCPLOG",178,0)
 ;add insurance node
"RTN","IBNCPLOG",179,0)
 ;IBDTIEN - ien on top [DATE] level 
"RTN","IBNCPLOG",180,0)
 ;IBEVIEN - ien in [EVENTS] multiple
"RTN","IBNCPLOG",181,0)
 ;returns : 
"RTN","IBNCPLOG",182,0)
 ; new ien in INSURANCE multiple 
"RTN","IBNCPLOG",183,0)
ADDINS(IBDTIEN,IBEVIEN) ;
"RTN","IBNCPLOG",184,0)
 N IBX,IBX2
"RTN","IBNCPLOG",185,0)
 F IBX=1:1:99999 I '$D(^IBCNR(366.14,IBDTIEN,1,IBEVIEN,5,IBX)) D  Q
"RTN","IBNCPLOG",186,0)
 . S IBX2=$$INSITEM^IBNCPUT1(366.1412,IBEVIEN_","_IBDTIEN,IBX,IBX)
"RTN","IBNCPLOG",187,0)
 Q +$O(^IBCNR(366.14,IBDTIEN,1,IBEVIEN,5,"B",IBX,0))
"RTN","IBNCPLOG",188,0)
 ;
"RTN","IBOVOP1")
0^15^B14775024^B14282604
"RTN","IBOVOP1",1,0)
IBOVOP1 ;ALB/RLW-Report of Visits for NSC Outpatients ;12-JUN-92
"RTN","IBOVOP1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,91,99,132,156,176,234,249,339**;21-MAR-94;Build 2
"RTN","IBOVOP1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBOVOP1",4,0)
 ;
"RTN","IBOVOP1",5,0)
MAIN(IBQUERY) ; perform report for day(s)
"RTN","IBOVOP1",6,0)
 ; IBQUERY = the query object to use to search for outpt encounters
"RTN","IBOVOP1",7,0)
 ;           if not a valid #, a new QUERY will be created
"RTN","IBOVOP1",8,0)
 D HDR^IBOVOP2
"RTN","IBOVOP1",9,0)
 I $$STOP^IBOUTL("Outpatient/Registration Events Report") S IBQUIT=1 G END
"RTN","IBOVOP1",10,0)
 ; scan visits for NSC patients
"RTN","IBOVOP1",11,0)
 N IBVAL,IBCBK,IBCK,IBFILTER,IBPB,IBOE,IBOE0,IBZ
"RTN","IBOVOP1",12,0)
 S IBVAL("BDT")=IBDATE,IBVAL("EDT")=IBDATE\1+.99
"RTN","IBOVOP1",13,0)
 S IBFILTER=""
"RTN","IBOVOP1",14,0)
 ; Look for hospital location is a clinic-type, valid Means-Test or LTC patient, and potentially billable events
"RTN","IBOVOP1",15,0)
 S IBCBK="I $D(^SC(""AC"",""C"",+$P(Y0,U,4))) D IBCBK^IBOVOP1(Y,Y0,.IBCK)" ; Action of scanning
"RTN","IBOVOP1",16,0)
 F IBZ=9,13.1 S IBCK(IBZ)=""
"RTN","IBOVOP1",17,0)
 D SCAN^IBSDU("DATE/TIME",.IBVAL,"",IBCBK,0,.IBQUERY) K ^TMP("DIERR",$J)
"RTN","IBOVOP1",18,0)
 ; Search for Inpatient Observations
"RTN","IBOVOP1",19,0)
 D IBOVOP^IBECEAU5(IBDATE)
"RTN","IBOVOP1",20,0)
 D PRINT^IBOVOP2
"RTN","IBOVOP1",21,0)
END K DFN,^TMP("IBOVOP",$J),IBAPPT,IBJ,IB
"RTN","IBOVOP1",22,0)
 Q
"RTN","IBOVOP1",23,0)
 ;
"RTN","IBOVOP1",24,0)
 ; To be executed only if the hospital location a clinic-type.
"RTN","IBOVOP1",25,0)
 ; Check the record, and add to the ^TMP if needed
"RTN","IBOVOP1",26,0)
 ; IBENC - encounter IEN
"RTN","IBOVOP1",27,0)
 ; IBENCZ - encounter zero-node
"RTN","IBOVOP1",28,0)
 ; IBCK - array of criteria flags for the $$BILLCK^IBAMTEDU() API call
"RTN","IBOVOP1",29,0)
IBCBK(IBENC,IBENCZ,IBCK) ;
"RTN","IBOVOP1",30,0)
 N IBPAT,IBDAT,Y,Y0,X
"RTN","IBOVOP1",31,0)
 ; Quit if not a billable event
"RTN","IBOVOP1",32,0)
 I '$$BILLCK^IBAMTEDU(IBENC,IBENCZ,.IBCK) Q
"RTN","IBOVOP1",33,0)
 S IBDAT=+IBENCZ ; Date of event
"RTN","IBOVOP1",34,0)
 S IBPAT=+$P(IBENCZ,U,2) Q:'IBPAT  ; Patient IEN
"RTN","IBOVOP1",35,0)
 ; Check for valid MT or LTC patient
"RTN","IBOVOP1",36,0)
 I '$$BIL^DGMTUB(IBPAT,IBDAT),+$$LTCST^IBAECU(IBPAT,IBDAT,1)'=2 Q
"RTN","IBOVOP1",37,0)
 D OPTENC(IBENC,IBENCZ) ; Extract Outpatient Encounter and add to the ^TMP global
"RTN","IBOVOP1",38,0)
 Q
"RTN","IBOVOP1",39,0)
 ;
"RTN","IBOVOP1",40,0)
 ;
"RTN","IBOVOP1",41,0)
OPTENC(IBOE,IBOE0) ; Extract outpatient encounter
"RTN","IBOVOP1",42,0)
 N IBCL,DFN,IBFLD4,IBJ,IBSEQ
"RTN","IBOVOP1",43,0)
 S DFN=+$P(IBOE0,U,2),IBJ=+IBOE0,IBCL=+$P(IBOE0,U,4),IBSEQ=0
"RTN","IBOVOP1",44,0)
 Q:'$$BIL^DGMTUB(DFN,IBJ)
"RTN","IBOVOP1",45,0)
 I $P(IBOE0,U,8)=1 D  ; - appt
"RTN","IBOVOP1",46,0)
 .;            field 4=clinic
"RTN","IBOVOP1",47,0)
 .;            field 5=appt type
"RTN","IBOVOP1",48,0)
 .;            field 6=status
"RTN","IBOVOP1",49,0)
 . S IBFLD4=$P($G(^SC(IBCL,0)),U)
"RTN","IBOVOP1",50,0)
 . I IBFLD4'="" S:+$G(^SC(IBCL,"AT"))=6 IBFLD4=$E(IBFLD4,1,13)_" [R]"
"RTN","IBOVOP1",51,0)
 . S ^TMP("IBOVOP",$J,$$FLD1(DFN),"CLINIC APPT",$$FLD3(IBJ),0)=$E(IBFLD4,1,17)_U_$$FLD5($P(IBOE0,U,10))_U_$E($$EXTERNAL^DILFD(409.68,.12,"",$P(IBOE0,"^",12)),1,17)_U_DFN_U_IBOE Q
"RTN","IBOVOP1",52,0)
 ;
"RTN","IBOVOP1",53,0)
 I $P(IBOE0,U,8)=2 D  ; - add/edit stop code
"RTN","IBOVOP1",54,0)
 .;           field 5=appt type
"RTN","IBOVOP1",55,0)
 . S ^TMP("IBOVOP",$J,$$FLD1(DFN),"STOP CODE",$$FLD3(IBJ),IBSEQ)=$E($P($G(^DIC(40.7,$P(IBOE0,U,3),0)),U),1,16)_U_$$FLD5($P(IBOE0,U,10))_"^^"_DFN_U_IBOE,IBSEQ=IBSEQ+1
"RTN","IBOVOP1",56,0)
 ;
"RTN","IBOVOP1",57,0)
 I $P(IBOE0,U,8)=3 D  ; - registration
"RTN","IBOVOP1",58,0)
 . Q:'$$DISCT^IBEFUNC(IBOE,IBOE0)
"RTN","IBOVOP1",59,0)
 . S IBDATA=$$DISND^IBSDU(IBOE,IBOE0)
"RTN","IBOVOP1",60,0)
 . S IBFLD4=$E($$EXTERNAL^DILFD(2.101,2,"",$P(IBDATA,U,3)),1,16)
"RTN","IBOVOP1",61,0)
 . S Y=$E($$EXTERNAL^DILFD(2.101,6,"",$P(IBDATA,U,7)),1,30)
"RTN","IBOVOP1",62,0)
 . S ^TMP("IBOVOP",$J,$$FLD1(DFN),"REGISTRATION",$$FLD3(IBJ),0)=IBFLD4_U_Y_"^^"_DFN_U_IBOE
"RTN","IBOVOP1",63,0)
 ;
"RTN","IBOVOP1",64,0)
 K IBB,IBE,IBX,IBY,IBCLN,IBXP,IBDFN,IBAPDT,IBAPTYP,X,Y
"RTN","IBOVOP1",65,0)
 Q
"RTN","IBOVOP1",66,0)
CKENC(IBOE,IBOE0,IBSEQ) ;
"RTN","IBOVOP1",67,0)
 S DFN=$P(IBOE0,U,2),IBJ=+IBOE0
"RTN","IBOVOP1",68,0)
 Q
"RTN","IBOVOP1",69,0)
 ;
"RTN","IBOVOP1",70,0)
FLD1(DFN) ; get patient name, l-4 ssn id, classification, insured?
"RTN","IBOVOP1",71,0)
 I '$G(DFN) Q ""
"RTN","IBOVOP1",72,0)
 N IBX,IBY,IBZ S IBX=$$PT^IBEFUNC(DFN),IBZ=""
"RTN","IBOVOP1",73,0)
 D CL^IBACV(DFN,IBDATE,"",.IBY)
"RTN","IBOVOP1",74,0)
 I $D(IBY(1)) S IBZ="AO"
"RTN","IBOVOP1",75,0)
 I $D(IBY(2)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"IR"
"RTN","IBOVOP1",76,0)
 I $D(IBY(3)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"SC"
"RTN","IBOVOP1",77,0)
 I $D(IBY(4)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"SWA"
"RTN","IBOVOP1",78,0)
 I $D(IBY(5)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"MST"
"RTN","IBOVOP1",79,0)
 I $D(IBY(6)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"HNC"
"RTN","IBOVOP1",80,0)
 I $D(IBY(7)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"CV"
"RTN","IBOVOP1",81,0)
 I $D(IBY(8)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"SHAD"
"RTN","IBOVOP1",82,0)
 Q $E($P(IBX,U),1,20)_" "_$E(IBX)_$P(IBX,U,3)_$S(IBZ]"":"    ["_IBZ_"]",1:"")_$S($$INSURED^IBCNS1(DFN,IBDATE):"    **Insured**",1:"")
"RTN","IBOVOP1",83,0)
 ;
"RTN","IBOVOP1",84,0)
FLD3(Y) ; time - convert date/time to time only, no seconds
"RTN","IBOVOP1",85,0)
 I '$G(Y) Q ""
"RTN","IBOVOP1",86,0)
 X ^DD("DD") Q $P($P(Y,"@",2),":",1,2)
"RTN","IBOVOP1",87,0)
 ;
"RTN","IBOVOP1",88,0)
FLD5(I) ; get appointment type name
"RTN","IBOVOP1",89,0)
 Q $E($P($G(^SD(409.1,+$G(I),0)),U,1),1,17)
"RTN","IBOVOP2")
0^16^B13818826^B13589783
"RTN","IBOVOP2",1,0)
IBOVOP2 ;ALB/CPM-Opt/Reg Events Report Print Utilities ; 30-AUG-93
"RTN","IBOVOP2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,132,153,156,167,176,234,247,339**;21-MAR-94;Build 2
"RTN","IBOVOP2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBOVOP2",4,0)
 ;
"RTN","IBOVOP2",5,0)
PRINT ; Retrieve data for printing.
"RTN","IBOVOP2",6,0)
 N IBCOMBAT
"RTN","IBOVOP2",7,0)
 S IBFLD1="" I '$D(^TMP("IBOVOP",$J)) W !!,"No Outpatient activity recorded for MT/LTC copay patients on ",$$DAT1^IBOUTL(IBDATE),"."
"RTN","IBOVOP2",8,0)
 F  S IBFLD1=$O(^TMP("IBOVOP",$J,IBFLD1)) Q:(IBFLD1="")!(IBQUIT)  W ! D:IBLINE>55 HDR W !,IBFLD1 D  D CHRGS Q:IBQUIT
"RTN","IBOVOP2",9,0)
 .S IBFLD2="" F  S IBFLD2=$O(^TMP("IBOVOP",$J,IBFLD1,IBFLD2)) Q:(IBFLD2="")!(IBQUIT)  D
"RTN","IBOVOP2",10,0)
 ..S IBFLD3="" F  S IBFLD3=$O(^TMP("IBOVOP",$J,IBFLD1,IBFLD2,IBFLD3)) Q:(IBFLD3="")!(IBQUIT)  D
"RTN","IBOVOP2",11,0)
 ...S IBSEQ="" F  S IBSEQ=$O(^TMP("IBOVOP",$J,IBFLD1,IBFLD2,IBFLD3,IBSEQ)) Q:(IBSEQ="")!(IBQUIT)  S IBDATA=$G(^(IBSEQ)) D
"RTN","IBOVOP2",12,0)
 ....S IBFLD4=$P(IBDATA,"^",1),IBFLD5=$P(IBDATA,"^",2),IBFLD6=$P(IBDATA,"^",3),DFN=$P(IBDATA,"^",4)
"RTN","IBOVOP2",13,0)
 ....S IBCOMBAT=$$CVEDT^IBACV(DFN,IBDATE) I +IBCOMBAT I $P(IBCOMBAT,"^",2)>0 W !,"Veteran has CV status until "_$$DAT1^IBOUTL($P(IBCOMBAT,"^",2))
"RTN","IBOVOP2",14,0)
 ....W !?5,IBFLD2
"RTN","IBOVOP2",15,0)
 ....W ?20,IBFLD3,?26,IBFLD4,?44,IBFLD5,?63,IBFLD6 D CLSF(+$P(IBDATA,"^",5)) D:IBFLD2="OBS ADMIS" CLSF^IBECEAU5(+$P(IBDATA,U,6)) W ! S IBLINE=IBLINE+1
"RTN","IBOVOP2",16,0)
 ....Q:$O(^TMP("IBOVOP",$J,IBFLD1))=""
"RTN","IBOVOP2",17,0)
 ....I IBLINE>55 D HDR W !,IBFLD1 I $D(^TMP("IBOVOP",$J,IBFLD1,IBFLD2,IBFLD3,IBSEQ+1)) W !?5,IBFLD2
"RTN","IBOVOP2",18,0)
 ....I $Y>(IOSL-5) D PAUSE^IBOUTL Q:IBQUIT  D HDR W !,IBFLD1,!?5,IBFLD2
"RTN","IBOVOP2",19,0)
 D:'IBQUIT PAUSE^IBOUTL
"RTN","IBOVOP2",20,0)
 Q
"RTN","IBOVOP2",21,0)
 ;
"RTN","IBOVOP2",22,0)
CHRGS ; Find OP charges for day, if any. Build string for print.
"RTN","IBOVOP2",23,0)
 Q:'$G(DFN)
"RTN","IBOVOP2",24,0)
 N IBSTDATA
"RTN","IBOVOP2",25,0)
 I $D(^IB("AFDT",DFN,-IBDATE))=10 D
"RTN","IBOVOP2",26,0)
 .S IBPRNT="" F  S IBPRNT=$O(^IB("AFDT",DFN,-IBDATE,IBPRNT)) Q:IBPRNT=""!(IBQUIT)  D
"RTN","IBOVOP2",27,0)
 ..S IBIEN="" F  S IBIEN=$O(^IB("AD",IBPRNT,IBIEN)) Q:IBIEN=""!(IBQUIT)  D
"RTN","IBOVOP2",28,0)
 ...S IBDATA=$G(^IB(IBIEN,0)) Q:IBDATA=""
"RTN","IBOVOP2",29,0)
 ...I $Y>(IOSL-5) D PAUSE^IBOUTL Q:IBQUIT  D HDR W !,IBFLD1
"RTN","IBOVOP2",30,0)
 ...S IBSTAT=$P($G(^IBE(350.21,+$P(IBDATA,"^",5),0)),"^",2)
"RTN","IBOVOP2",31,0)
 ...S IBACT=$S($P($G(^IBE(350.1,+$P(IBDATA,"^",3),0)),"^",8)'="":$P(^(0),"^",8),1:$P(^(0),"^",1))
"RTN","IBOVOP2",32,0)
 ...S IBAMT=$P(IBDATA,"^",7)
"RTN","IBOVOP2",33,0)
 ...S IBAMT=$S(IBAMT?1N.N1"."1N:IBAMT_"0 ",IBAMT?1N.N:IBAMT_".00 ",1:IBAMT)
"RTN","IBOVOP2",34,0)
 ...S IBAMT=$S(IBACT["CANCEL":"*($"_IBAMT_")",1:"* $"_IBAMT)
"RTN","IBOVOP2",35,0)
 ...S IBSTDATA=$G(^IBE(352.5,+$P(IBDATA,"^",20),0))
"RTN","IBOVOP2",36,0)
 ...I IBSTDATA'="" W !?26,"Stop Code: ",$P(IBSTDATA,"^",4),?58,"#",$P(IBSTDATA,"^"),?63,$$TYPE^IBEMTSCR(+$P(IBSTDATA,"^",3))
"RTN","IBOVOP2",37,0)
 ...W !?5,IBAMT,?13,IBACT,?63,IBSTAT S IBLINE=IBLINE+1
"RTN","IBOVOP2",38,0)
 Q
"RTN","IBOVOP2",39,0)
 ;
"RTN","IBOVOP2",40,0)
HDR ; Print header.
"RTN","IBOVOP2",41,0)
 S IBPAGE=IBPAGE+1,IBLINE=5,IBTITLE="Means Test/LTC Outpatient and Registration Activity for "_$$DAT1^IBOUTL(IBDATE)
"RTN","IBOVOP2",42,0)
 I $E(IOST,1,2)["C-"!(IBPAGE>1) W @IOF,*13
"RTN","IBOVOP2",43,0)
 W ?(80-$L(IBTITLE))\2,IBTITLE
"RTN","IBOVOP2",44,0)
 S IBTITLE="Printed: "_$$DAT1^IBOUTL(DT)
"RTN","IBOVOP2",45,0)
 W !?(80-$L(IBTITLE))\2,IBTITLE,?70,"Page: "_IBPAGE
"RTN","IBOVOP2",46,0)
 W !!,"Patient/Event",?20,"Time",?26,"Clinic/Stop",?44,"Appt.Type",?63,"(Status)",!
"RTN","IBOVOP2",47,0)
 Q
"RTN","IBOVOP2",48,0)
 ;
"RTN","IBOVOP2",49,0)
CLSF(IBOE) ; Display classification results.
"RTN","IBOVOP2",50,0)
 ;  Input:    IBOE  --  Pointer to Outpatient Encounter in file #409.68
"RTN","IBOVOP2",51,0)
 I '$G(IBOE) G CLSFQ
"RTN","IBOVOP2",52,0)
 N I,IBCLS,IBCLSD,IBF S IBF=0,IBCLSD=$$ENCL^IBAMTS2(IBOE)
"RTN","IBOVOP2",53,0)
 I IBCLSD]"" F I=1,2,3,4,5,6,7,8 S IBCLS=$P(IBCLSD,"^",I) I IBCLS]"" W:'IBF !?6 W:IBF "  " W "Care related to ",$S(I=1:"AO",I=2:"IR",I=3:"SC",I=4:"SWA",I=5:"MST",I=6:"HNC",I=7:"CV",I=8:"SHAD",1:"??"),"? ",$S(IBCLS:"YES",1:"NO") S IBF=1
"RTN","IBOVOP2",54,0)
CLSFQ Q
"RTN","IBTRED")
0^17^B22563966^B22391684
"RTN","IBTRED",1,0)
IBTRED ;ALB/AAS - EXPAND/EDIT CLAIMS TRACKING ENTRY ;01-JUL-1993
"RTN","IBTRED",2,0)
 ;;2.0;INTEGRATED BILLING;**71,91,160,247,309,276,339**;21-MAR-94;Build 2
"RTN","IBTRED",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRED",4,0)
 ;
"RTN","IBTRED",5,0)
% ;
"RTN","IBTRED",6,0)
EN ; -- main entry point for IBT EXPAND/EDIT TRACKING
"RTN","IBTRED",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRED",8,0)
 K XQORS,VALMEVL,DFN,IBTRN,IBTRV,IBTRC,IBTRD
"RTN","IBTRED",9,0)
 I '$G(IBTRN) G EN^IBTRE Q  ; entry from programmer mode
"RTN","IBTRED",10,0)
 D EN^VALM("IBT EXPAND/EDIT TRACKING")
"RTN","IBTRED",11,0)
 K IBFASTXT
"RTN","IBTRED",12,0)
 Q
"RTN","IBTRED",13,0)
 ;
"RTN","IBTRED",14,0)
HDR ; -- header code
"RTN","IBTRED",15,0)
 D PID^VADPT
"RTN","IBTRED",16,0)
 S VALMHDR(1)="Expanded Claims Tracking Info for: "_$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")_"   ROI: "_$$EXPAND^IBTRE(356,.31,$P(^IBT(356,IBTRN,0),"^",31))
"RTN","IBTRED",17,0)
 S VALMHDR(2)="                              For: "_$$ETYP(IBTRN)
"RTN","IBTRED",18,0)
 Q
"RTN","IBTRED",19,0)
 ;
"RTN","IBTRED",20,0)
INIT ; -- init variables and list array
"RTN","IBTRED",21,0)
 K VALMQUIT
"RTN","IBTRED",22,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBTRED",23,0)
 D BLD,HDR
"RTN","IBTRED",24,0)
 Q
"RTN","IBTRED",25,0)
 ;
"RTN","IBTRED",26,0)
BLD ; -- list builder
"RTN","IBTRED",27,0)
 N IBTRND,IBTRND1,IBTRND2,IBETYP
"RTN","IBTRED",28,0)
 K ^TMP("IBTRED",$J)
"RTN","IBTRED",29,0)
 F I=1:1:30 D BLANK(.I)
"RTN","IBTRED",30,0)
 I '$G(IBTRPRF) S IBTRPRF=123
"RTN","IBTRED",31,0)
 I IBTRPRF<10 S X=$S(IBTRPRF=1:"IBTRED  HR MENU",IBTRPRF=2:"IBTRED  IR MENU",IBTRPRF=3:"IBTRED  BI MENU",1:"IBTRED  MENU") D PROT^IBTRPR(X)
"RTN","IBTRED",32,0)
 D KILL^VALM10()
"RTN","IBTRED",33,0)
 S IBTRND=$G(^IBT(356,IBTRN,0)),IBTRND1=$G(^(1))
"RTN","IBTRED",34,0)
 S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBTRED",35,0)
 S VALMCNT=30
"RTN","IBTRED",36,0)
 D VISIT D ^IBTRED0,^IBTRED01
"RTN","IBTRED",37,0)
 Q
"RTN","IBTRED",38,0)
 ;
"RTN","IBTRED",39,0)
VISIT ; -- Visit info Region
"RTN","IBTRED",40,0)
 N OFFSET,START,IBOE,IBOE0
"RTN","IBTRED",41,0)
 S START=1,OFFSET=2
"RTN","IBTRED",42,0)
 D SET^IBCNSP(START,OFFSET," Visit Information ",IORVON,IORVOFF)
"RTN","IBTRED",43,0)
 D SET^IBCNSP(START+1,OFFSET,"    Visit Type: "_$P(IBETYP,"^"))
"RTN","IBTRED",44,0)
 I '$D(IBETYP) N IBETYP S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBTRED",45,0)
 S X=$P(IBETYP,"^",3) D @X
"RTN","IBTRED",46,0)
 Q
"RTN","IBTRED",47,0)
1 ; -- visit region for admission or scheduled admission
"RTN","IBTRED",48,0)
 I $P($G(^DGPM(+$P(IBTRND,"^",5),0)),"^",17) S VAINDT=+$G(^DGPM(+$P(IBTRND,"^",5),0))
"RTN","IBTRED",49,0)
 I '$D(VAIN) S VA200="" D INP^VADPT
"RTN","IBTRED",50,0)
 I VAIN(7)="" S Y=$P(IBTRND,"^",6) D D^DIQ S $P(VAIN(7),"^",2)=Y
"RTN","IBTRED",51,0)
 D SET^IBCNSP(START+2,OFFSET,"Admission Date: "_$P(VAIN(7),"^",2))
"RTN","IBTRED",52,0)
 D SET^IBCNSP(START+3,OFFSET,"          Ward: "_$P(VAIN(4),"^",2))
"RTN","IBTRED",53,0)
 D SET^IBCNSP(START+4,OFFSET,"     Specialty: "_$P(VAIN(3),"^",2))
"RTN","IBTRED",54,0)
 Q
"RTN","IBTRED",55,0)
2 ; -- visit region for  outpatient care
"RTN","IBTRED",56,0)
 S IBOE=$P(IBTRND,"^",4),IBOE0=$$SCE^IBSDU(+IBOE)
"RTN","IBTRED",57,0)
 D SET^IBCNSP(START+2,OFFSET,"    Visit Date: "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P"))
"RTN","IBTRED",58,0)
 I +IBOE<1 D  Q
"RTN","IBTRED",59,0)
 .D SET^IBCNSP(START+3,OFFSET,"  No Outpatient Encounter Found") Q
"RTN","IBTRED",60,0)
 D SET^IBCNSP(START+3,OFFSET,"        Clinic: "_$P($G(^SC(+$P(IBOE0,"^",4),0)),"^"))
"RTN","IBTRED",61,0)
 D SET^IBCNSP(START+4,OFFSET,"  Appt. Status: "_$$EXPAND^IBTRE(409.68,.12,$P(IBOE0,"^",12)))
"RTN","IBTRED",62,0)
 D SET^IBCNSP(START+5,OFFSET,"    Appt. Type: "_$$EXPAND^IBTRE(409.68,.1,$P(IBOE0,"^",10)))
"RTN","IBTRED",63,0)
 D SET^IBCNSP(START+6,OFFSET,"  Special Cond: "_$$ENCL(IBOE))
"RTN","IBTRED",64,0)
 Q
"RTN","IBTRED",65,0)
 ;
"RTN","IBTRED",66,0)
3 ; -- visit region for rx refill
"RTN","IBTRED",67,0)
 N PSONTALK,PSOTMP
"RTN","IBTRED",68,0)
 S PSONTALK=1 ;PSORXN=+$P(IBTRND,"^",8),PSOFILL=+$P(IBTRND,"^",10)
"RTN","IBTRED",69,0)
 S X=+$P(IBTRND,"^",8)_"^"_+$P(IBTRND,"^",10) D EN^PSOCPVW
"RTN","IBTRED",70,0)
 ;if refill was deleted and EN^PSOCPVW doesn't return any data use IB API
"RTN","IBTRED",71,0)
 I '$D(PSOTMP) D PSOCPVW^IBNCPDPC(+$P(IBTRND,"^",2),+$P(IBTRND,"^",8),.PSOTMP)
"RTN","IBTRED",72,0)
 D SET^IBCNSP(START+2,OFFSET,"Prescription #: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),.01,"E")))
"RTN","IBTRED",73,0)
 ;I $P(IBTRND,"^",10)=0 D SET^IBCNSP(START+3,OFFSET,"     Fill Date: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),22,"E")))
"RTN","IBTRED",74,0)
 ;I +$P(IBTRND,"^",10) D SET^IBCNSP(START+3,OFFSET,"   Refill Date: "_$G(PSOTMP(52.1,+$P(IBTRND,"^",10),.01,"E")))
"RTN","IBTRED",75,0)
 I $P(IBTRND,"^",10)=0 D SET^IBCNSP(START+3,OFFSET,"     Fill Date: "_$$FMTE^XLFDT(+$P(IBTRND,"^",6)))
"RTN","IBTRED",76,0)
 I +$P(IBTRND,"^",10) D SET^IBCNSP(START+3,OFFSET,"   Refill Date: "_$$FMTE^XLFDT(+$P(IBTRND,"^",6)))
"RTN","IBTRED",77,0)
 D SET^IBCNSP(START+4,OFFSET,"          Drug: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),6,"E")))
"RTN","IBTRED",78,0)
 D SET^IBCNSP(START+5,OFFSET,"      Quantity: "_$J($G(PSOTMP(52,+$P(IBTRND,"^",8),7,"E")),8))
"RTN","IBTRED",79,0)
 D SET^IBCNSP(START+6,OFFSET,"   Days Supply: "_$J($G(PSOTMP(52,+$P(IBTRND,"^",8),8,"E")),8))
"RTN","IBTRED",80,0)
 D SET^IBCNSP(START+7,OFFSET,"          NDC#: "_$$GETNDC^PSONDCUT(+$P(IBTRND,"^",8),$P(IBTRND,"^",10)),2)
"RTN","IBTRED",81,0)
 D SET^IBCNSP(START+8,OFFSET,"     Physician: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),4,"E")))
"RTN","IBTRED",82,0)
 Q
"RTN","IBTRED",83,0)
 ;
"RTN","IBTRED",84,0)
4 ; -- Visit region for prosthetics
"RTN","IBTRED",85,0)
 D 4^IBTRED01
"RTN","IBTRED",86,0)
 Q
"RTN","IBTRED",87,0)
 ;
"RTN","IBTRED",88,0)
HELP ; -- help code
"RTN","IBTRED",89,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRED",90,0)
 Q
"RTN","IBTRED",91,0)
 ;
"RTN","IBTRED",92,0)
EXIT ; -- exit code
"RTN","IBTRED",93,0)
 K VALMQUIT,IBTRN
"RTN","IBTRED",94,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","IBTRED",95,0)
 Q
"RTN","IBTRED",96,0)
 ;
"RTN","IBTRED",97,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBTRED",98,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBTRED",99,0)
 Q
"RTN","IBTRED",100,0)
 ;
"RTN","IBTRED",101,0)
ETYP(IBTRN) ; -- Expand type of epidose and date
"RTN","IBTRED",102,0)
 N IBY S IBY=""
"RTN","IBTRED",103,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0)) I IBTRND="" G ETYPQ
"RTN","IBTRED",104,0)
 S IBETYPD=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBTRED",105,0)
 I IBETYPD="" G ETYPQ
"RTN","IBTRED",106,0)
 S IBY=$P(IBETYPD,"^")_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
"RTN","IBTRED",107,0)
ETYPQ Q IBY
"RTN","IBTRED",108,0)
 ;
"RTN","IBTRED",109,0)
ENCL(IBOE) ; -- output format of classifications
"RTN","IBTRED",110,0)
 N I,X,IBCL,IBCL1 S IBCL=""
"RTN","IBTRED",111,0)
 I '$G(IBOE) G ENCLQ
"RTN","IBTRED",112,0)
 S IBCL1=$$ENCL^IBAMTS2(+IBOE)
"RTN","IBTRED",113,0)
 F I=1:1:8 S X=$P(IBCL1,"^",I) S:X IBCL=IBCL_$S(I=1:"AO",I=2:"IR",I=3:"SC",I=4:"SWA",I=5:"MST",I=6:"HNC",I=7:"CV",I=8:"SHAD",1:"")_"  "
"RTN","IBTRED",114,0)
ENCLQ Q IBCL
"RTN","IBTRED",115,0)
 ;
"RTN","IBTRKR3")
0^18^B44657681^B44426999
"RTN","IBTRKR3",1,0)
IBTRKR3 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK RX FILLS ;13-AUG-93
"RTN","IBTRKR3",2,0)
 ;;2.0;INTEGRATED BILLING;**13,43,121,160,247,275,260,309,336,312,339**;21-MAR-94;Build 2
"RTN","IBTRKR3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRKR3",4,0)
 ;
"RTN","IBTRKR3",5,0)
% ; -- entry point for nightly background job
"RTN","IBTRKR3",6,0)
 N IBTSBDT,IBTSEDT
"RTN","IBTRKR3",7,0)
 S IBTSBDT=$$FMADD^XLFDT(DT,-14)-.1
"RTN","IBTRKR3",8,0)
 S IBTSEDT=$$FMADD^XLFDT(DT,-7)+.9
"RTN","IBTRKR3",9,0)
 D EN1
"RTN","IBTRKR3",10,0)
 Q
"RTN","IBTRKR3",11,0)
 ;
"RTN","IBTRKR3",12,0)
EN ; -- entry point to ask date range
"RTN","IBTRKR3",13,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                     ;IB*2.0*312
"RTN","IBTRKR3",14,0)
 N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK,IBMESS
"RTN","IBTRKR3",15,0)
 S IBTALK=1
"RTN","IBTRKR3",16,0)
 I '$P($G(^IBE(350.9,1,6)),"^",4) W !!,"I'm sorry, Tracking of Prescription Refills is currently turned off." G ENQ
"RTN","IBTRKR3",17,0)
 W !!!,"Select the Date Range of Rx Refills to Add to Claims Tracking.",!
"RTN","IBTRKR3",18,0)
 D DATE^IBOUTL
"RTN","IBTRKR3",19,0)
 I IBBDT<1!(IBEDT<1) G ENQ
"RTN","IBTRKR3",20,0)
 S IBTSBDT=IBBDT,IBTSEDT=IBEDT
"RTN","IBTRKR3",21,0)
 ;
"RTN","IBTRKR3",22,0)
 ; Do NOT PROCESS on VistA if Start or End>=Switch Eff Date  ;IB*2.0*312
"RTN","IBTRKR3",23,0)
 I +IBSWINFO,((IBTSBDT+1)>$P(IBSWINFO,"^",2))!((IBTSEDT+1)>$P(IBSWINFO,"^",2)) D  G EN
"RTN","IBTRKR3",24,0)
   .W !!,"The Begin OR End Date CANNOT be on or after"
"RTN","IBTRKR3",25,0)
   .W !,"the PFSS Effective Date: ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBTRKR3",26,0)
 ;
"RTN","IBTRKR3",27,0)
 ; -- check selected dates
"RTN","IBTRKR3",28,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR3",29,0)
 ; start date can't be before parameters
"RTN","IBTRKR3",30,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR3",31,0)
 ; -- end date into future
"RTN","IBTRKR3",32,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) W !!,"I'll automatically change the end date to 3 days prior to the date queued to run."
"RTN","IBTRKR3",33,0)
 ;
"RTN","IBTRKR3",34,0)
 W !!!,"I'm going to automatically queue this off and send you a"
"RTN","IBTRKR3",35,0)
 W !,"mail message when complete.",!
"RTN","IBTRKR3",36,0)
 S ZTIO="",ZTRTN="EN1^IBTRKR3",ZTSAVE("IB*")="",ZTDESC="IB - Add Rx Refills to Claims Tracking"
"RTN","IBTRKR3",37,0)
 D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
"RTN","IBTRKR3",38,0)
ENQ K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
"RTN","IBTRKR3",39,0)
 D HOME^%ZIS
"RTN","IBTRKR3",40,0)
 Q
"RTN","IBTRKR3",41,0)
 ;
"RTN","IBTRKR3",42,0)
EN1 ; -- add rx refills to claims tracking file
"RTN","IBTRKR3",43,0)
 N I,J,X,Y,IBTRKR,IBDT,IBRXN,IBFILL,DFN,IBDATA,IBCNT,IBCNT1,IBCNT2
"RTN","IBTRKR3",44,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR3",45,0)
 ;
"RTN","IBTRKR3",46,0)
 ; -- check parameters
"RTN","IBTRKR3",47,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR3",48,0)
 G:'$P(IBTRKR,"^",4) EN1Q ; quit if rx tracking off
"RTN","IBTRKR3",49,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
"RTN","IBTRKR3",50,0)
 ;
"RTN","IBTRKR3",51,0)
 ; -- users can queue into future, make sure dates not after date run
"RTN","IBTRKR3",52,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-3))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-3)
"RTN","IBTRKR3",53,0)
 ;
"RTN","IBTRKR3",54,0)
 S IBRXTYP=$O(^IBE(356.6,"AC",4,0)) ; event type pointer for rx billing
"RTN","IBTRKR3",55,0)
 ;
"RTN","IBTRKR3",56,0)
 ; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
"RTN","IBTRKR3",57,0)
 S (IBCNT,IBCNT1,IBCNT2)=0
"RTN","IBTRKR3",58,0)
 S IBDT=IBTSBDT-.0001
"RTN","IBTRKR3",59,0)
 F  S IBDT=$O(^PSRX("AD",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR3",60,0)
   .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q              ;IB*2.0*312
"RTN","IBTRKR3",61,0)
   .S IBRXN=""
"RTN","IBTRKR3",62,0)
   .F  S IBRXN=$O(^PSRX("AD",IBDT,IBRXN)) Q:'IBRXN  S IBFILL="" D
"RTN","IBTRKR3",63,0)
     ..F  S IBFILL=$O(^PSRX("AD",IBDT,IBRXN,IBFILL)) Q:IBFILL=""  D RXCHK
"RTN","IBTRKR3",64,0)
 ;
"RTN","IBTRKR3",65,0)
 I $G(IBTALK) D BULL^IBTRKR31
"RTN","IBTRKR3",66,0)
EN1Q I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBTRKR3",67,0)
 Q
"RTN","IBTRKR3",68,0)
 ;
"RTN","IBTRKR3",69,0)
RXCHK ; -- check and add rx
"RTN","IBTRKR3",70,0)
 S IBCNT=IBCNT+1
"RTN","IBTRKR3",71,0)
 ;I IBFILL<1 G RXCHKQ ;       original fill
"RTN","IBTRKR3",72,0)
 I IBDT>(DT+.24) G RXCHKQ ;  future fill
"RTN","IBTRKR3",73,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR3",74,0)
 ;
"RTN","IBTRKR3",75,0)
 S IBRXDATA=$G(^PSRX(IBRXN,0)),IBRXSTAT=$P(IBRXDATA,"^",15)
"RTN","IBTRKR3",76,0)
 S DFN=$P(IBRXDATA,"^",2)
"RTN","IBTRKR3",77,0)
 ;I IBDT=$P($O(^DPT(DFN,"S",(IBDT-.00001))),".") G RXCHKQ ;scheduled appointment on same day as fill date
"RTN","IBTRKR3",78,0)
 ;I $$BABCSC^IBEFUNC(DFN,$P(IBDT,".",1)) G RXCHKQ ; is billable clinic stop in encounter file for data (allows telephone stops on same day, but not others) (P121 - RC, can now bill Rx if on same day as opt visit)
"RTN","IBTRKR3",79,0)
 ;
"RTN","IBTRKR3",80,0)
 ; -- not already in claims tracking
"RTN","IBTRKR3",81,0)
 I $O(^IBT(356,"ARXFL",IBRXN,IBFILL,0)) G RXCHKQ ; already in claims tracking
"RTN","IBTRKR3",82,0)
 ;
"RTN","IBTRKR3",83,0)
 ; -- see if tracking only insured and pt is insured
"RTN","IBTRKR3",84,0)
 I $P(IBTRKR,"^",4)=1,'$$INSURED^IBCNS1(DFN,IBDT) G RXCHKQ ; patient not insure
"RTN","IBTRKR3",85,0)
 ;
"RTN","IBTRKR3",86,0)
 ; -- check rx status (not deleted)
"RTN","IBTRKR3",87,0)
 I IBRXSTAT=13 G RXCHKQ
"RTN","IBTRKR3",88,0)
 ;
"RTN","IBTRKR3",89,0)
 ; -- Don't PROCESS IF there is already a PFSS ACCT REF# -- ;IB*2.0*312
"RTN","IBTRKR3",90,0)
 I 'IBFILL,+$P($G(^PSRX(IBRXN,"PFS")),"^") G RXCHKQ
"RTN","IBTRKR3",91,0)
 I +IBFILL,+$P($G(^PSRX(IBRXN,1,IBFILL,"PFS")),"^") G RXCHKQ
"RTN","IBTRKR3",92,0)
 ;
"RTN","IBTRKR3",93,0)
 ; -- original fill not released or returned to stock
"RTN","IBTRKR3",94,0)
 I 'IBFILL,'$P($G(^PSRX(IBRXN,2)),"^",13) G RXCHKQ
"RTN","IBTRKR3",95,0)
 I 'IBFILL,$P($G(^PSRX(IBRXN,2)),"^",15) G RXCHKQ
"RTN","IBTRKR3",96,0)
 ;
"RTN","IBTRKR3",97,0)
 ; -- refill not released or returned to stock
"RTN","IBTRKR3",98,0)
 I +IBFILL,'$P($G(^PSRX(IBRXN,1,IBFILL,0)),"^",18) G RXCHKQ
"RTN","IBTRKR3",99,0)
 I +IBFILL,$P($G(^PSRX(IBRXN,1,IBFILL,0)),"^",16) G RXCHKQ
"RTN","IBTRKR3",100,0)
 ;
"RTN","IBTRKR3",101,0)
 ; -- check drug (not investigational, supply, or over the counter drug
"RTN","IBTRKR3",102,0)
 S IBDRUG=$P(IBRXDATA,"^",6)
"RTN","IBTRKR3",103,0)
 D ZERO^IBRXUTL(IBDRUG)
"RTN","IBTRKR3",104,0)
 S IBDEA=$G(^TMP($J,"IBDRUG",+IBDRUG,3))
"RTN","IBTRKR3",105,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBTRKR3",106,0)
 I IBDEA["I"!(IBDEA["S")!(IBDEA["9") G RXCHKQ ; investigational drug, supply or otc
"RTN","IBTRKR3",107,0)
 ;
"RTN","IBTRKR3",108,0)
 ; -- see if insured for prescriptions
"RTN","IBTRKR3",109,0)
 I '$$PTCOV^IBCNSU3(DFN,IBDT,"PHARMACY",.IBANY) S IBRMARK=$S($G(IBANY):"SERVICE NOT COVERED",1:"NOT INSURED")
"RTN","IBTRKR3",110,0)
 ;
"RTN","IBTRKR3",111,0)
 ; -- check sc status and others
"RTN","IBTRKR3",112,0)
 ; -- new ICD node in PSO with CIDC, if it exists use this for determination
"RTN","IBTRKR3",113,0)
 I $G(IBRMARK)="",$D(^PSRX(IBRXN,"ICD")) D CL^SDCO21(DFN,IBDT,"",.IBARR) I $D(IBARR) D
"RTN","IBTRKR3",114,0)
 . S IBM=0 F  S IBM=$O(^PSRX(IBRXN,"ICD",IBM)) Q:'IBM!($G(IBRMARK)'="")  S IBZ=$G(^PSRX(IBRXN,"ICD",IBM,0)) F IBP=1:1:8 Q:$G(IBRMARK)'=""  I $D(IBARR(IBP)) D
"RTN","IBTRKR3",115,0)
 .. S IBRMARK=$S($P(IBZ,"^",IBP+1):$P($T(EXEMPT+IBP),";",3),$P(IBZ,"^",IBP+1)=0:"",1:"NEEDS SC DETERMINATION")
"RTN","IBTRKR3",116,0)
 ;
"RTN","IBTRKR3",117,0)
 ; -- no new ICD node in PSO, use old method of determining status
"RTN","IBTRKR3",118,0)
 I $G(IBRMARK)="",'$D(^PSRX(IBRXN,"ICD")) D
"RTN","IBTRKR3",119,0)
 . D ELIG^VADPT
"RTN","IBTRKR3",120,0)
 . ;if the patient is covered by insurance for pharmacy ($G(IBRMARK)="")
"RTN","IBTRKR3",121,0)
 . ;AND if no copay in #350
"RTN","IBTRKR3",122,0)
 . ;then we need to determine the non billable reason and set IBRMARK
"RTN","IBTRKR3",123,0)
 . ;
"RTN","IBTRKR3",124,0)
 . ;IF VAEL(3) -- if this is a veteran with SC(service connection) status
"RTN","IBTRKR3",125,0)
 . I VAEL(3),'$G(^PSRX(IBRXN,"IB")) D
"RTN","IBTRKR3",126,0)
 . . I $P(VAEL(3),"^",2)>49 S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBTRKR3",127,0)
 . . ;in case of POW and Unempl.vet we cannot decide if the 3rd party should be exempt
"RTN","IBTRKR3",128,0)
 . . N IBPOWUNV,IBAUTRET S IBAUTRET=$$AUTOINFO^DGMTCOU1(DFN),IBPOWUNV=$S($P(IBAUTRET,U,8):1,$P(IBAUTRET,U,9):1,1:0)
"RTN","IBTRKR3",129,0)
 . . I $P(VAEL(3),"^",2)<50 S IBRMARK=$S(IBPOWUNV:"NEEDS SC DETERMINATION",1:"SC TREATMENT")
"RTN","IBTRKR3",130,0)
 . . I $$RXST^IBARXEU(DFN,$P(IBRXDATA,U,13))>0 S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBTRKR3",131,0)
 . ;
"RTN","IBTRKR3",132,0)
 . ;IF +VAEL(3)=0 if the veteran doesn't have SC status, but
"RTN","IBTRKR3",133,0)
 . ;the veteran still may have CV status active
"RTN","IBTRKR3",134,0)
 . I $G(IBRMARK)="",+VAEL(3)=0,'$G(^PSRX(IBRXN,"IB")) D
"RTN","IBTRKR3",135,0)
 . . I $$CVEDT^IBACV(DFN,IBDT) S IBRMARK="NEEDS SC DETERMINATION" ;SC-because IB staff usually is using this reason to search for cases that need to be reviewed. COMBAT VETERAN reason will be used after review if this was a case
"RTN","IBTRKR3",136,0)
 ;
"RTN","IBTRKR3",137,0)
 ;
"RTN","IBTRKR3",138,0)
 ; -- ok to add to tracking module
"RTN","IBTRKR3",139,0)
 D REFILL^IBTUTL1(DFN,IBRXTYP,IBDT,IBRXN,IBFILL,$G(IBRMARK)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR3",140,0)
 I $G(IBRMARK)'="" S IBCNT2=IBCNT2+1
"RTN","IBTRKR3",141,0)
 I $G(IBRMARK)="" S IBCNT1=IBCNT1+1
"RTN","IBTRKR3",142,0)
 K IBANY,IBRMARK,VAEL,VA,IBDEA,IBDRUG,IBRXSTAT,IBRXDATA,DFN,X,Y
"RTN","IBTRKR3",143,0)
 K IBARR,IBM,IBZ,IBP
"RTN","IBTRKR3",144,0)
RXCHKQ Q
"RTN","IBTRKR3",145,0)
 ;
"RTN","IBTRKR3",146,0)
EXEMPT ; exemption reasons
"RTN","IBTRKR3",147,0)
 ;;AGENT ORANGE
"RTN","IBTRKR3",148,0)
 ;;IONIZING RADIATION
"RTN","IBTRKR3",149,0)
 ;;SC TREATMENT
"RTN","IBTRKR3",150,0)
 ;;SOUTHWEST ASIA
"RTN","IBTRKR3",151,0)
 ;;MILITARY SEXUAL TRAUMA
"RTN","IBTRKR3",152,0)
 ;;HEAD/NECK CANCER
"RTN","IBTRKR3",153,0)
 ;;COMBAT VETERAN
"RTN","IBTRKR3",154,0)
 ;;PROJECT 112/SHAD
"RTN","IBTRKR3",155,0)
 ;;
"RTN","IBTRKR41")
0^19^B32576267^B31657328
"RTN","IBTRKR41",1,0)
IBTRKR41 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK OUTPATIENT ENCOUNTERS ;13-AUG-93
"RTN","IBTRKR41",2,0)
 ;;2.0;INTEGRATED BILLING;**43,55,91,132,174,247,260,315,292,312,339**;21-MAR-94;Build 2
"RTN","IBTRKR41",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRKR41",4,0)
 ;
"RTN","IBTRKR41",5,0)
OPCHK ; -- check and add rx
"RTN","IBTRKR41",6,0)
 N Y,Y0
"RTN","IBTRKR41",7,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR41",8,0)
 ; IBDT is set from IBTRKR4
"RTN","IBTRKR41",9,0)
 ; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date        ;CCR-930
"RTN","IBTRKR41",10,0)
 I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q                 ;IB*2.0*312
"RTN","IBTRKR41",11,0)
 ;
"RTN","IBTRKR41",12,0)
 K IBRMARK
"RTN","IBTRKR41",13,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR41",14,0)
 ;
"RTN","IBTRKR41",15,0)
 S IBOEDATA=$$SCE^IBSDU(IBOE),IBOESTAT=$P(IBOEDATA,"^",15)
"RTN","IBTRKR41",16,0)
 S DFN=$P(IBOEDATA,"^",2)
"RTN","IBTRKR41",17,0)
 I 'DFN G OPCHKQ
"RTN","IBTRKR41",18,0)
 I $P(IBOEDATA,"^",5) S IBVSIT=$P(IBOEDATA,"^",5) I '$$BDSRC^IBEFUNC3(IBVSIT) G OPCHKQ ;non-billable data sources
"RTN","IBTRKR41",19,0)
 ; -- do not allow date/time duplicate claims before Jan. 1, 2006
"RTN","IBTRKR41",20,0)
 I $O(^IBT(356,"APTY",DFN,IBOETYP,IBDT,0)),IBDT<3060101 G OPCHKQ
"RTN","IBTRKR41",21,0)
 ;
"RTN","IBTRKR41",22,0)
 ; -- see if tracking only insured and pt is insured/insured for outpt visits
"RTN","IBTRKR41",23,0)
 I $P(IBTRKR,"^",3)=1,'$$INSURED^IBCNS1(DFN,IBDT) G OPCHKQ ; patient not insured
"RTN","IBTRKR41",24,0)
 ;
"RTN","IBTRKR41",25,0)
 ; -- see if outpatient services are covered
"RTN","IBTRKR41",26,0)
 I '$$PTCOV^IBCNSU3(DFN,IBDT,"OUTPATIENT",.IBANY) S IBRMARK=$S($G(IBANY):"SERVICE NOT COVERED",1:"NOT INSURED")
"RTN","IBTRKR41",27,0)
 ;
"RTN","IBTRKR41",28,0)
 ; -- see if appointment type is billable
"RTN","IBTRKR41",29,0)
 I '$$RPT^IBEFUNC($P(IBOEDATA,"^",10),+IBOEDATA) S IBRMARK="NON-BILLABLE APPOINTMENT TYPE"
"RTN","IBTRKR41",30,0)
 ;
"RTN","IBTRKR41",31,0)
 ; -- check sc status, special conditions etc.
"RTN","IBTRKR41",32,0)
 I $G(IBRMARK)="" S IBRMARK=$$CL(IBOEDATA)
"RTN","IBTRKR41",33,0)
 ;
"RTN","IBTRKR41",34,0)
 ; -- check for non-billable stops or clinic
"RTN","IBTRKR41",35,0)
 S X=$P(IBOEDATA,"^",4) I X,$$NBCT^IBEFUNC(X,+IBOEDATA) S IBRMARK="NON-BILLABLE CLINIC"
"RTN","IBTRKR41",36,0)
 S X=$P(IBOEDATA,"^",3) I X,$$NBST^IBEFUNC(X,+IBOEDATA) S IBRMARK="NON-BILLABLE STOP CODE"
"RTN","IBTRKR41",37,0)
 ;
"RTN","IBTRKR41",38,0)
 ; -- ok to add to tracking module
"RTN","IBTRKR41",39,0)
 D OPT^IBTUTL1(DFN,IBOETYP,IBDT,IBOE,IBRMARK,$G(IBVSIT)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR41",40,0)
 I IBRMARK'="" S IBCNT2=IBCNT2+1
"RTN","IBTRKR41",41,0)
 I IBRMARK="" S IBCNT1=IBCNT1+1
"RTN","IBTRKR41",42,0)
OPCHKQ K IBANY,IBRMARK,VAEL,VA,IBOEDATA,IBVSIT,DFN,X,Y
"RTN","IBTRKR41",43,0)
 Q
"RTN","IBTRKR41",44,0)
 ;
"RTN","IBTRKR41",45,0)
BULL ; -- send bulletin
"RTN","IBTRKR41",46,0)
 ;
"RTN","IBTRKR41",47,0)
 S XMSUB="Outpatient Encounters added to Claims Tracking Complete"
"RTN","IBTRKR41",48,0)
 S IBT(1)="The process to automatically add Opt Encounters has successfully completed."
"RTN","IBTRKR41",49,0)
 S IBT(1.1)=""
"RTN","IBTRKR41",50,0)
 S IBT(2)="              Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR41",51,0)
 S IBT(3)="                End Date: "_$$DAT1^IBOUTL(IBTSEDT)
"RTN","IBTRKR41",52,0)
 I $D(IBMESS) S IBT(3.1)=IBMESS
"RTN","IBTRKR41",53,0)
 S IBT(4)=""
"RTN","IBTRKR41",54,0)
 S IBT(5)="            Total Encounters Checked: "_$G(IBCNT)
"RTN","IBTRKR41",55,0)
 S IBT(6)="              Total Encounters Added: "_$G(IBCNT1)
"RTN","IBTRKR41",56,0)
 S IBT(7)=" Total Non-billable Encounters Added: "_$G(IBCNT2)
"RTN","IBTRKR41",57,0)
 S IBT(8)=""
"RTN","IBTRKR41",58,0)
 S IBT(9)="*The SC, Agent Orange, Southwest Asia, Ionizing Radiation,"
"RTN","IBTRKR41",59,0)
 S IBT(10)="Military Sexual Trauma, Head Neck Cancer, Combat Veteran and Project 112/SHAD"
"RTN","IBTRKR41",60,0)
 S IBT(11)="status visits have been added for insured patients but automatically"
"RTN","IBTRKR41",61,0)
 S IBT(12)="indicated as not billable."
"RTN","IBTRKR41",62,0)
 D SEND^IBTRKR31
"RTN","IBTRKR41",63,0)
BULLQ Q
"RTN","IBTRKR41",64,0)
 ;
"RTN","IBTRKR41",65,0)
CL(IBOEDATA,IBR) ; check out classification questions for encounter
"RTN","IBTRKR41",66,0)
 ; this new check will look at the V POV level then to the Visit level
"RTN","IBTRKR41",67,0)
 ; as necessary to determine if it relates or not.  This will indicate
"RTN","IBTRKR41",68,0)
 ; if the WHOLE visit is not billable, otherwise it will say it is
"RTN","IBTRKR41",69,0)
 ; (even if just part is billable).
"RTN","IBTRKR41",70,0)
 ; call with the zero node of 409.68 in IBOEDATA
"RTN","IBTRKR41",71,0)
 ; assumes DFN and IBDT defined
"RTN","IBTRKR41",72,0)
 ; pass in IBR by ref to get values back
"RTN","IBTRKR41",73,0)
 ;
"RTN","IBTRKR41",74,0)
 N IBRMARK,IBPCEX,IBCPT,IBARR,IBP,IBDX,IBVRNB,IBENCL
"RTN","IBTRKR41",75,0)
 S IBRMARK="",IBPCEX=$P(IBOEDATA,"^",5)
"RTN","IBTRKR41",76,0)
 ;
"RTN","IBTRKR41",77,0)
 ; look up classification info needed (if any)
"RTN","IBTRKR41",78,0)
 D CL^SDCO21(DFN,IBDT,"",.IBARR) I '$D(IBARR) G CLQ
"RTN","IBTRKR41",79,0)
 ;
"RTN","IBTRKR41",80,0)
 ; if no PCE event use old approach
"RTN","IBTRKR41",81,0)
 I 'IBPCEX D:$G(IBOE)  G CLQ
"RTN","IBTRKR41",82,0)
 . S IBENCL=$$ENCL^IBAMTS2(IBOE) I IBENCL["1" D  ; return 1 in string if true "ao^ir^sc^swa^mst^hnc^cv^shad"
"RTN","IBTRKR41",83,0)
 . I $P(IBENCL,"^",3) S IBRMARK="SC TREATMENT" Q
"RTN","IBTRKR41",84,0)
 . I $P(IBENCL,"^",1) S IBRMARK="AGENT ORANGE" Q
"RTN","IBTRKR41",85,0)
 . I $P(IBENCL,"^",2) S IBRMARK="IONIZING RADIATION" Q
"RTN","IBTRKR41",86,0)
 . I $P(IBENCL,"^",4) S IBRMARK="SOUTHWEST ASIA" Q
"RTN","IBTRKR41",87,0)
 . I $P(IBENCL,"^",5) S IBRMARK="MILITARY SEXUAL TRAUMA" Q
"RTN","IBTRKR41",88,0)
 . I $P(IBENCL,"^",6) S IBRMARK="HEAD/NECK CANCER" Q
"RTN","IBTRKR41",89,0)
 . I $P(IBENCL,"^",7) S IBRMARK="COMBAT VETERAN" Q
"RTN","IBTRKR41",90,0)
 . I $P(IBENCL,"^",8) S IBRMARK="PROJECT 112/SHAD" Q
"RTN","IBTRKR41",91,0)
 ;
"RTN","IBTRKR41",92,0)
 ; look up PCE info
"RTN","IBTRKR41",93,0)
 D ENCEVENT^PXKENC(IBPCEX)
"RTN","IBTRKR41",94,0)
 ;
"RTN","IBTRKR41",95,0)
 S IBVRNB=$$RNB($G(^TMP("PXKENC",$J,IBPCEX,"VST",IBPCEX,800)),.IBARR)
"RTN","IBTRKR41",96,0)
 ;
"RTN","IBTRKR41",97,0)
 ; find dx rnb's
"RTN","IBTRKR41",98,0)
 S IBDX=0 F  S IBDX=$O(^TMP("PXKENC",$J,IBPCEX,"POV",IBDX)) Q:'IBDX  S IBDX(+$G(^TMP("PXKENC",$J,IBPCEX,"POV",IBDX,0)))=$$RNB($G(^TMP("PXKENC",$J,IBPCEX,"POV",IBDX,800)),.IBARR)
"RTN","IBTRKR41",99,0)
 ;
"RTN","IBTRKR41",100,0)
 ; look for v cpt's with IBDX
"RTN","IBTRKR41",101,0)
 S IBCPT=0 F  S IBCPT=$O(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT)) Q:'IBCPT  F IBP=5,9,10,11 Q:'$D(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0))  D
"RTN","IBTRKR41",102,0)
 . ;
"RTN","IBTRKR41",103,0)
 . ; dx exists in v cpt but not v pov use visit level determination
"RTN","IBTRKR41",104,0)
 . I $P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP),'$D(IBDX($P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP))) D:IBVRNB REL(IBVRNB) Q
"RTN","IBTRKR41",105,0)
 . ;
"RTN","IBTRKR41",106,0)
 . ; use dx determination (where dx exists on v cpt)
"RTN","IBTRKR41",107,0)
 . I $P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP) D:$G(IBDX($P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP))) REL($G(IBDX($P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP)))) Q
"RTN","IBTRKR41",108,0)
 ;
"RTN","IBTRKR41",109,0)
 ; check for no assoc dx and apply visit level determination
"RTN","IBTRKR41",110,0)
 S IBCPT=0 F  S IBCPT=$O(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT)) Q:'IBCPT  D
"RTN","IBTRKR41",111,0)
 . S IBDX=0 F IBP=5,9,10,11 Q:IBDX  I +$P($G(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0)),"^",IBP) S IBDX=1
"RTN","IBTRKR41",112,0)
 . I 'IBDX,IBVRNB D REL(IBVRNB)
"RTN","IBTRKR41",113,0)
 ;
"RTN","IBTRKR41",114,0)
 ; if some procedures left, then we need to bill, set return array
"RTN","IBTRKR41",115,0)
 I $D(^TMP("PXKENC",$J,IBPCEX,"CPT")) S IBRMARK="" M IBR=^TMP("PXKENC",$J,IBPCEX)
"RTN","IBTRKR41",116,0)
 ;
"RTN","IBTRKR41",117,0)
CLQ K ^TMP("PXKENC",$J)
"RTN","IBTRKR41",118,0)
 Q IBRMARK
"RTN","IBTRKR41",119,0)
 ;
"RTN","IBTRKR41",120,0)
RNB(IBDATA,IBARR) ; find rnb's
"RTN","IBTRKR41",121,0)
 ; pass in PCE 800 data (visit or v pov) to find any reasons not billalbe
"RTN","IBTRKR41",122,0)
 ; IBARR = classifications that could apply to patient
"RTN","IBTRKR41",123,0)
 ; the RNB number returned is from the IBARR number (SDCO21 array)
"RTN","IBTRKR41",124,0)
 N IBX,IBR S IBR=""
"RTN","IBTRKR41",125,0)
 S IBX=0 F  S IBX=$O(IBARR(IBX)) Q:'IBX!(IBR)  I $P(IBDATA,"^",$P($T(CLDATA+(IBX+1)),"^",2)) S IBR=IBX
"RTN","IBTRKR41",126,0)
 Q IBR
"RTN","IBTRKR41",127,0)
 ;
"RTN","IBTRKR41",128,0)
REL(IBRNB) ; kills of tmp if related and set IBRMARK
"RTN","IBTRKR41",129,0)
 K ^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT)
"RTN","IBTRKR41",130,0)
 S IBRMARK=$P($T(CLDATA+(IBRNB+1)),"^",3)
"RTN","IBTRKR41",131,0)
 Q
"RTN","IBTRKR41",132,0)
 ;
"RTN","IBTRKR41",133,0)
CLDATA ; classification data
"RTN","IBTRKR41",134,0)
 ; format is:  SCDO21 array^vpov/vcpt/visit 800 piece^reason not billable
"RTN","IBTRKR41",135,0)
 ;;1^2^AGENT ORANGE
"RTN","IBTRKR41",136,0)
 ;;2^3^IONIZING RADIATION
"RTN","IBTRKR41",137,0)
 ;;3^1^SC TREATMENT
"RTN","IBTRKR41",138,0)
 ;;4^4^SOUTHWEST ASIA
"RTN","IBTRKR41",139,0)
 ;;5^5^MILITARY SEXUAL TRAUMA
"RTN","IBTRKR41",140,0)
 ;;6^6^HEAD/NECK CANCER
"RTN","IBTRKR41",141,0)
 ;;7^7^COMBAT VETERAN
"RTN","IBTRKR41",142,0)
 ;;8^8^PROJECT 112/SHAD
"RTN","IBTRKR41",143,0)
 ;
"RTN","IBTRKR5")
0^20^B32493921^B30688575
"RTN","IBTRKR5",1,0)
IBTRKR5 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK PROSTHETICS ;13-JAN-94
"RTN","IBTRKR5",2,0)
 ;;2.0;INTEGRATED BILLING;**13,260,312,339**;21-MAR-94;Build 2
"RTN","IBTRKR5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRKR5",4,0)
 ;
"RTN","IBTRKR5",5,0)
% ; -- entry point for nightly background job
"RTN","IBTRKR5",6,0)
 N IBTSBDT,IBTSEDT
"RTN","IBTRKR5",7,0)
 S IBTSBDT=$$FMADD^XLFDT(DT,-30)-.1
"RTN","IBTRKR5",8,0)
 S IBTSEDT=$$FMADD^XLFDT(DT,-3)+.9
"RTN","IBTRKR5",9,0)
 D EN1
"RTN","IBTRKR5",10,0)
 Q
"RTN","IBTRKR5",11,0)
 ;
"RTN","IBTRKR5",12,0)
EN ; -- entry point to ask date range
"RTN","IBTRKR5",13,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR5",14,0)
 N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK
"RTN","IBTRKR5",15,0)
 S IBTALK=1
"RTN","IBTRKR5",16,0)
 I '$P($G(^IBE(350.9,1,6)),"^",4) W !!,"I'm sorry, Tracking of Prosthetics is currently turned off." G ENQ
"RTN","IBTRKR5",17,0)
 W !!!,"Select the Date Range of Prosthetics to Add to Claims Tracking.",!
"RTN","IBTRKR5",18,0)
 D DATE^IBOUTL
"RTN","IBTRKR5",19,0)
 I IBBDT<1!(IBEDT<1) G ENQ
"RTN","IBTRKR5",20,0)
 S IBTSBDT=IBBDT,IBTSEDT=IBEDT
"RTN","IBTRKR5",21,0)
 ;
"RTN","IBTRKR5",22,0)
 ; -- check selected dates                                 ;IB*2.0*312
"RTN","IBTRKR5",23,0)
 ; Do NOT PROCESS on VistA if Start or End>=Switch Eff Dt  ;CCR-930
"RTN","IBTRKR5",24,0)
 I +IBSWINFO,((IBTSBDT+1)>$P(IBSWINFO,"^",2))!((IBTSEDT+1)>$P(IBSWINFO,"^",2)) D  G EN
"RTN","IBTRKR5",25,0)
  .W !!,"The Begin OR End Date CANNOT be on or after the PFSS Effective date"
"RTN","IBTRKR5",26,0)
  .W ": ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBTRKR5",27,0)
 ;
"RTN","IBTRKR5",28,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR5",29,0)
 ; start date can't be before parameters
"RTN","IBTRKR5",30,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR5",31,0)
 ; -- end date into future
"RTN","IBTRKR5",32,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) W !!,"I'll automatically change the end date to 3 days prior to the date queued to run."
"RTN","IBTRKR5",33,0)
 ;
"RTN","IBTRKR5",34,0)
 W !!!,"I'm going to automatically queue this off and send you a"
"RTN","IBTRKR5",35,0)
 W !,"mail message when complete.",!
"RTN","IBTRKR5",36,0)
 S ZTIO="",ZTRTN="EN1^IBTRKR5",ZTSAVE("IB*")="",ZTDESC="IB - Add Prosthetics to Claims Tracking"
"RTN","IBTRKR5",37,0)
 D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
"RTN","IBTRKR5",38,0)
ENQ K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
"RTN","IBTRKR5",39,0)
 D HOME^%ZIS
"RTN","IBTRKR5",40,0)
 Q
"RTN","IBTRKR5",41,0)
 ;
"RTN","IBTRKR5",42,0)
EN1 ; -- add prostethics to claims tracking file
"RTN","IBTRKR5",43,0)
 N I,J,X,Y,IBTRKR,IBDT,DFN,IBDATA,IBCNT,IBCNT1,IBCNT2,IBDTS
"RTN","IBTRKR5",44,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR5",45,0)
 ;
"RTN","IBTRKR5",46,0)
 ; -- check parameters
"RTN","IBTRKR5",47,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR5",48,0)
 G:'$P(IBTRKR,"^",5) EN1Q ; quit if prothetics tracking off
"RTN","IBTRKR5",49,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
"RTN","IBTRKR5",50,0)
 ;
"RTN","IBTRKR5",51,0)
 ; -- users can queue into future, make sure dates not after date run
"RTN","IBTRKR5",52,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-3))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-3)
"RTN","IBTRKR5",53,0)
 ;
"RTN","IBTRKR5",54,0)
 ;S IBPRTYP=$O(^IBE(356.6,"AC",3,0)) ; this is the event type pointer for prosthetics
"RTN","IBTRKR5",55,0)
 ;
"RTN","IBTRKR5",56,0)
 ; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
"RTN","IBTRKR5",57,0)
 S (IBCNT,IBCNT1,IBCNT2)=0
"RTN","IBTRKR5",58,0)
 S (IBDTS,IBDT)=IBTSBDT-.0001
"RTN","IBTRKR5",59,0)
 ;
"RTN","IBTRKR5",60,0)
 ; loop twice, once for shipmnet date (new search), and once for
"RTN","IBTRKR5",61,0)
 ; delivery date (old search) for backward compatibility.
"RTN","IBTRKR5",62,0)
 F  S IBDT=$O(^RMPR(660,"AF",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR5",63,0)
    .; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date    ;CCR-930
"RTN","IBTRKR5",64,0)
    .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q             ;IB*2.0*312
"RTN","IBTRKR5",65,0)
    .S IBDA=0 F  S IBDA=$O(^RMPR(660,"AF",IBDT,IBDA)) Q:'IBDA  D PRCHK
"RTN","IBTRKR5",66,0)
 ;
"RTN","IBTRKR5",67,0)
 ; reset date and do old check
"RTN","IBTRKR5",68,0)
 S IBDT=IBDTS
"RTN","IBTRKR5",69,0)
 F  S IBDT=$O(^RMPR(660,"CT",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR5",70,0)
    .; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date    ;CCR-930
"RTN","IBTRKR5",71,0)
    .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q             ;IB*2.0*312
"RTN","IBTRKR5",72,0)
    .S IBDA="" F  S IBDA=$O(^RMPR(660,"CT",IBDT,IBDA)) Q:'IBDA  D PRCHK
"RTN","IBTRKR5",73,0)
 ;
"RTN","IBTRKR5",74,0)
 I $G(IBTALK) D BULL ;^IBTRKR51
"RTN","IBTRKR5",75,0)
EN1Q I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBTRKR5",76,0)
 Q
"RTN","IBTRKR5",77,0)
 ;
"RTN","IBTRKR5",78,0)
PRCHK ; -- check and add item
"RTN","IBTRKR5",79,0)
 N IBE,IBP,IBDX,IBRMARK,IBARR,IBT
"RTN","IBTRKR5",80,0)
 S IBCNT=IBCNT+1,IBRMARK=""
"RTN","IBTRKR5",81,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR5",82,0)
 ;
"RTN","IBTRKR5",83,0)
 S IBDATA=$G(^RMPR(660,+IBDA,0)) Q:IBDATA=""
"RTN","IBTRKR5",84,0)
 S DFN=$P(IBDATA,"^",2)
"RTN","IBTRKR5",85,0)
 D CL^SDCO21(DFN,IBDT,"",.IBARR)
"RTN","IBTRKR5",86,0)
 ;
"RTN","IBTRKR5",87,0)
 ; -- checks copied from rmprbil v2.0 /feb 2, 1994
"RTN","IBTRKR5",88,0)
 Q:'$D(^RMPR(660,+IBDA,"AM"))
"RTN","IBTRKR5",89,0)
 Q:$P(^RMPR(660,+IBDA,0),U,9)=""!($P(^(0),U,12)="")!($P(^(0),U,6)="")!($P(^(0),U,14)="V")!($P(^(0),U,2)="")!($P(^(0),U,15)="*")
"RTN","IBTRKR5",90,0)
 ;Q:($P(^RMPR(660,+IBDA,"AM"),U,3)=2)!($P(^("AM"),U,3)=3)
"RTN","IBTRKR5",91,0)
 ;
"RTN","IBTRKR5",92,0)
 ;
"RTN","IBTRKR5",93,0)
 I $O(^IBT(356,"APRO",IBDA,0)) G PRCHKQ ; already in claims tracking
"RTN","IBTRKR5",94,0)
 ;
"RTN","IBTRKR5",95,0)
 ; -- see if tracking only insured and pt is insured
"RTN","IBTRKR5",96,0)
 I $P(IBTRKR,"^",5)=1,'$$INSURED^IBCNS1(DFN,IBDT) G PRCHKQ ; patient not insure
"RTN","IBTRKR5",97,0)
 ;
"RTN","IBTRKR5",98,0)
 ; -- if clasifications required, check exemptions
"RTN","IBTRKR5",99,0)
 I '$D(IBARR) G CLQ
"RTN","IBTRKR5",100,0)
 S IBE=0 F IBP=1:1:4 S IBDX(IBP)=$G(^RMPR(660,+IBDA,"BA"_IBP)) I IBDX(IBP) S IBE=1
"RTN","IBTRKR5",101,0)
 I 'IBE S IBRMARK="NEEDS SC DETERMINATION" G CLQ ; no ICD node in RMPR, use old method of determining status
"RTN","IBTRKR5",102,0)
 S IBE=0 F  S IBE=$O(IBARR(IBE)) Q:'IBE!($L($G(IBRMARK)))  F IBP=1:1:4 Q:$L($G(IBRMARK))  I IBDX(IBP) S IBRMARK=$S($P(IBDX(IBP),"^",IBE+1):$P($T(CLTXT+IBE),";",3),$P(IBDX(IBP),"^",IBE+1)=0:"",1:"NEEDS SC DETERMINATION")
"RTN","IBTRKR5",103,0)
 ;
"RTN","IBTRKR5",104,0)
 ;
"RTN","IBTRKR5",105,0)
CLQ ; -- ok to add to tracking module
"RTN","IBTRKR5",106,0)
 D PRO^IBTUTL1(DFN,IBDT,IBDA,$G(IBRMARK)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR5",107,0)
 I $G(IBRMARK)'="" S IBCNT2=IBCNT2+1
"RTN","IBTRKR5",108,0)
 I $G(IBRMARK)="" S IBCNT1=IBCNT1+1
"RTN","IBTRKR5",109,0)
 K VAEL,VA,IBDATA,DFN,X,Y
"RTN","IBTRKR5",110,0)
PRCHKQ Q
"RTN","IBTRKR5",111,0)
 ;
"RTN","IBTRKR5",112,0)
BULL ; -- send bulletin
"RTN","IBTRKR5",113,0)
 ;
"RTN","IBTRKR5",114,0)
 S XMSUB="Prosthetic Items added to Claims Tracking Complete"
"RTN","IBTRKR5",115,0)
 S IBT(1)="The process to automatically add Prosthetic Items has successfully completed."
"RTN","IBTRKR5",116,0)
 S IBT(1.1)=""
"RTN","IBTRKR5",117,0)
 S IBT(2)="                      Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR5",118,0)
 S IBT(3)="                        End Date: "_$$DAT1^IBOUTL(IBTSEDT)
"RTN","IBTRKR5",119,0)
 I $D(IBMESS) S IBT(3.1)=IBMESS
"RTN","IBTRKR5",120,0)
 S IBT(4)=""
"RTN","IBTRKR5",121,0)
 S IBT(5)=" Total Prosthetics Items checked: "_$G(IBCNT)
"RTN","IBTRKR5",122,0)
 S IBT(6)="Total NSC Prosthetic Items Added: "_$G(IBCNT1)
"RTN","IBTRKR5",123,0)
 S IBT(7)=" Total SC Prosthetic Items Added: "_$G(IBCNT2)
"RTN","IBTRKR5",124,0)
 S IBT(8)=""
"RTN","IBTRKR5",125,0)
 S IBT(9)="*The items added as SC require determination and editing to be billed"
"RTN","IBTRKR5",126,0)
 D SEND^IBTRKR31
"RTN","IBTRKR5",127,0)
BULLQ Q
"RTN","IBTRKR5",128,0)
 ;
"RTN","IBTRKR5",129,0)
CLTXT ; classification text for reason not billable
"RTN","IBTRKR5",130,0)
 ;;AGENT ORANGE
"RTN","IBTRKR5",131,0)
 ;;IONIZING RADIATION
"RTN","IBTRKR5",132,0)
 ;;SC TREATMENT
"RTN","IBTRKR5",133,0)
 ;;SOUTHWEST ASIA
"RTN","IBTRKR5",134,0)
 ;;MILITARY SEXUAL TRAUMA
"RTN","IBTRKR5",135,0)
 ;;HEAD/NECK CANCER
"RTN","IBTRKR5",136,0)
 ;;COMBAT VETERAN
"RTN","IBTUBO1")
0^21^B45713033^B45653349
"RTN","IBTUBO1",1,0)
IBTUBO1 ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;29-SEP-94
"RTN","IBTUBO1",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,247,155,277,339**;21-MAR-94;Build 2
"RTN","IBTUBO1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTUBO1",4,0)
 ;
"RTN","IBTUBO1",5,0)
OPT(IBOE,IBQUERY) ; - Has the outpatient encounter been billed?
"RTN","IBTUBO1",6,0)
 ;   Input: IBOE=pointer to outpatient encounter in file #409.68
"RTN","IBTUBO1",7,0)
 ;               (NOTE: this value may be null)
"RTN","IBTUBO1",8,0)
 ;          IBQUERY (Passed by reference)=flag that is incremented when
"RTN","IBTUBO1",9,0)
 ;                  the Scheduling query API is invoked
"RTN","IBTUBO1",10,0)
 ;  *Pre-set variables: DFN=patient IEN, IBDT=event date, IBRT=bill rate,
"RTN","IBTUBO1",11,0)
 ;                      IBEDT=End of reporting period date.
"RTN","IBTUBO1",12,0)
 ;                      IBX=ien of CLAIMS TRACKING entry file 356
"RTN","IBTUBO1",13,0)
 ;
"RTN","IBTUBO1",14,0)
 I '$G(DFN)!('$G(IBDT))!('$G(IBRT))!'$G(IBX) G OPTQ
"RTN","IBTUBO1",15,0)
 N IBCN,IBCPT,IBCT,IBDATA,IBDAY,IBDIV,IBFL,IBNAME,IBQUIT,IBNCF,IBXX,IBYD,IBYY,IBZ,IBMRA
"RTN","IBTUBO1",16,0)
 ;
"RTN","IBTUBO1",17,0)
 ; - Check to be sure the encounter is billable.
"RTN","IBTUBO1",18,0)
 I $$INPT^IBAMTS1(DFN,IBDT\1_.2359) G OPTQ ;  Became inpatient same day.
"RTN","IBTUBO1",19,0)
 I $G(IBOE),$$ENCL^IBAMTS2(IBOE)["1" G OPTQ ; "ao^ir^sc^swa^mst^hnc^cv^shad" encounter.
"RTN","IBTUBO1",20,0)
 S IBDAY=$E(IBDT,1,7),IBNAME=$P($G(^DPT(DFN,0)),U),IBQUIT="",IBNCF=0
"RTN","IBTUBO1",21,0)
 ;
"RTN","IBTUBO1",22,0)
 ; - If no encounter, see if add/edits or registrations are not billable.
"RTN","IBTUBO1",23,0)
 I '$G(IBOE) D NOOE G:IBQUIT OPTQ
"RTN","IBTUBO1",24,0)
 ;
"RTN","IBTUBO1",25,0)
 ; - If encounter was dated prior to Reasonable Charges (9/1/99) and
"RTN","IBTUBO1",26,0)
 ;   the claim was not authorized before end of reporting period, add
"RTN","IBTUBO1",27,0)
 ;   encounter Tort Rate to Unbilled Outpatient Amount
"RTN","IBTUBO1",28,0)
 I IBDAY<2990901 D PRERC,SETUB:'IBQUIT G OPTQ
"RTN","IBTUBO1",29,0)
 I '$G(IBOE) G OPTQ ; If still no encounter, quit.
"RTN","IBTUBO1",30,0)
 ;
"RTN","IBTUBO1",31,0)
 ; - If encounter was made after start of Reasonable Charges (9/1/99)
"RTN","IBTUBO1",32,0)
 ;   and any of the encounter's procedure codes have no corresponding
"RTN","IBTUBO1",33,0)
 ;   inst. or prof. claims that were not authorized before end of the
"RTN","IBTUBO1",34,0)
 ;   reporting period, add the charges for the procedures to the
"RTN","IBTUBO1",35,0)
 ;   Unbilled Outpatient Amount.
"RTN","IBTUBO1",36,0)
 ;
"RTN","IBTUBO1",37,0)
 ; - Gather all procedures associated with the encounter.
"RTN","IBTUBO1",38,0)
 D GETCPT^SDOE(IBOE,"IBYY") G:'$G(IBYY) OPTQ ; Check CPT qty.
"RTN","IBTUBO1",39,0)
 ;
"RTN","IBTUBO1",40,0)
 ; - Determine the encounter division.
"RTN","IBTUBO1",41,0)
 S IBDIV=+$P($$GETOE^SDOE(IBOE),U,11) S:'IBDIV IBDIV=+$$PRIM^VASITE()
"RTN","IBTUBO1",42,0)
 ;
"RTN","IBTUBO1",43,0)
 ; - Build array of all billable encounter procedures.
"RTN","IBTUBO1",44,0)
 S IBXX=0 F  S IBXX=$O(IBYY(IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",45,0)
 . ;
"RTN","IBTUBO1",46,0)
 . ; - Get procedure pointer and code.
"RTN","IBTUBO1",47,0)
 . S IBZ=+IBYY(IBXX),IBCN=$P($$CPT^ICPTCOD(IBZ),"^",2)
"RTN","IBTUBO1",48,0)
 . ;
"RTN","IBTUBO1",49,0)
 . ; - Ignore LAB services for vets with Medicare Supplemental coverage.
"RTN","IBTUBO1",50,0)
 . I IBCN>79999,IBCN<90000 Q
"RTN","IBTUBO1",51,0)
 . ;
"RTN","IBTUBO1",52,0)
 . ; - Get the institutional/professional charge components.
"RTN","IBTUBO1",53,0)
 . S IBCPT(IBZ,1)=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"PROCEDURE",IBZ,"",IBDIV,"",1)
"RTN","IBTUBO1",54,0)
 . S IBCPT(IBZ,2)=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"PROCEDURE",IBZ,"",IBDIV,"",2)
"RTN","IBTUBO1",55,0)
 . ;
"RTN","IBTUBO1",56,0)
 . ; - Eliminate components without a charge.
"RTN","IBTUBO1",57,0)
 . I 'IBCPT(IBZ,1) K IBCPT(IBZ,1)
"RTN","IBTUBO1",58,0)
 . I 'IBCPT(IBZ,2) K IBCPT(IBZ,2)
"RTN","IBTUBO1",59,0)
 ;
"RTN","IBTUBO1",60,0)
 I '$D(IBCPT) G OPTQ ; Quit if no billable procedures remain.
"RTN","IBTUBO1",61,0)
 ;
"RTN","IBTUBO1",62,0)
 ; - Look at all of the vet's bills for the day and eliminate
"RTN","IBTUBO1",63,0)
 ;   from the array those procedures that have been billed.
"RTN","IBTUBO1",64,0)
 S IBXX=0
"RTN","IBTUBO1",65,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",66,0)
 . ;
"RTN","IBTUBO1",67,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUBO1",68,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""
"RTN","IBTUBO1",69,0)
 . I $P(IBDATA,U,2)=2 S IBMRA(IBXX)=IBDATA ; MRA request
"RTN","IBTUBO1",70,0)
 . S IBNCF=IBNCF+1
"RTN","IBTUBO1",71,0)
 . ;
"RTN","IBTUBO1",72,0)
 . ; If Compile/Store & Not authorized/MRA requested before reporting period - Quit.
"RTN","IBTUBO1",73,0)
 . I $G(IBCOMP),$S('$G(IBMRA(IBXX)):$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT Q
"RTN","IBTUBO1",74,0)
 . ;
"RTN","IBTUBO1",75,0)
 . ; - The episode has been billed. Check the revenue code multiple for
"RTN","IBTUBO1",76,0)
 . ;   all procedures billed on the claim.
"RTN","IBTUBO1",77,0)
 . S IBYY=0
"RTN","IBTUBO1",78,0)
 . F  S IBYY=$O(^DGCR(399,IBXX,"RC",IBYY)) Q:'IBYY  S IBYD=^(IBYY,0) D
"RTN","IBTUBO1",79,0)
 . . ;
"RTN","IBTUBO1",80,0)
 . . ; - Get the procedure code and charge type for the revenue code.
"RTN","IBTUBO1",81,0)
 . . S IBZ=$P(IBYD,U,6)
"RTN","IBTUBO1",82,0)
 . . S IBCT=$S($P(IBYD,U,12):$P(IBYD,U,12),1:$P(IBDATA,U,4))
"RTN","IBTUBO1",83,0)
 . . I 'IBZ!('IBCT) Q  ; Can't determine code/charge type for procedure.
"RTN","IBTUBO1",84,0)
 . . I $G(IBMRA(IBXX))'="" S:$D(IBCPT(IBZ)) IBCPT("MRA",IBZ,IBCT)=1 Q
"RTN","IBTUBO1",85,0)
 . . ; Delete procedure from unbilled procedures array.
"RTN","IBTUBO1",86,0)
 . . I $D(IBCPT(IBZ,IBCT)) K IBCPT(IBZ,IBCT) Q
"RTN","IBTUBO1",87,0)
 . . K IBCPT(IBZ)
"RTN","IBTUBO1",88,0)
 ;
"RTN","IBTUBO1",89,0)
 ; - Again, quit if no billable procedures remain.
"RTN","IBTUBO1",90,0)
 I '$D(IBCPT) G OPTQ
"RTN","IBTUBO1",91,0)
 ;
"RTN","IBTUBO1",92,0)
 ; - The encounter has unbilled procedure codes. Increment the counters
"RTN","IBTUBO1",93,0)
 ;   as per the extract specification.
"RTN","IBTUBO1",94,0)
 ;
"RTN","IBTUBO1",95,0)
 ; - Count the encounter (element 37N).
"RTN","IBTUBO1",96,0)
 S IBMRA=$S($D(IBCPT("MRA")):1,1:0)
"RTN","IBTUBO1",97,0)
 S:'IBMRA IBUNB("ENCNTRS")=IBUNB("ENCNTRS")+1
"RTN","IBTUBO1",98,0)
 S:$G(IBXTRACT) IB(14)=IB(14)+1
"RTN","IBTUBO1",99,0)
 ;
"RTN","IBTUBO1",100,0)
 ; - Look at all the unbilled procedures.
"RTN","IBTUBO1",101,0)
 S IBZ=0 F  S IBZ=$O(IBCPT(IBZ)) Q:'IBZ  D
"RTN","IBTUBO1",102,0)
 . ;
"RTN","IBTUBO1",103,0)
 . S IBMRA=$S($D(IBCPT("MRA",IBZ)):1,1:0)
"RTN","IBTUBO1",104,0)
 . ; - Count the procedure (element 37M).
"RTN","IBTUBO1",105,0)
 . I $G(IBXTRACT) S IB(13)=IB(13)+1
"RTN","IBTUBO1",106,0)
 . ;
"RTN","IBTUBO1",107,0)
 . ; - Count the institutional component (element 37I) and its
"RTN","IBTUBO1",108,0)
 . ;   corresponding charge amount (element 37J).
"RTN","IBTUBO1",109,0)
 . I $G(IBCPT(IBZ,1)) D
"RTN","IBTUBO1",110,0)
 . . S:'IBMRA IBUNB("CPTMS-I")=IBUNB("CPTMS-I")+1
"RTN","IBTUBO1",111,0)
 . . S:'IBMRA IBUNB("UNBILOP")=IBUNB("UNBILOP")+IBCPT(IBZ,1)
"RTN","IBTUBO1",112,0)
 . . S:IBMRA IBUNB("CPTMS-I-MRA")=IBUNB("CPTMS-I-MRA")+1
"RTN","IBTUBO1",113,0)
 . . S:IBMRA IBUNB("UNBILOP-MRA")=IBUNB("UNBILOP-MRA")+IBCPT(IBZ,1)
"RTN","IBTUBO1",114,0)
 . . I $G(IBXTRACT) S IB(9)=IB(9)+1,IB(10)=IB(10)+IBCPT(IBZ,1)
"RTN","IBTUBO1",115,0)
 . ;
"RTN","IBTUBO1",116,0)
 . ; - Count the professional component (element 37K) and its
"RTN","IBTUBO1",117,0)
 . ;   corresponding charge amount (element 37L).
"RTN","IBTUBO1",118,0)
 . I $G(IBCPT(IBZ,2)) D
"RTN","IBTUBO1",119,0)
 . . S:'IBMRA IBUNB("CPTMS-P")=IBUNB("CPTMS-P")+1
"RTN","IBTUBO1",120,0)
 . . S:'IBMRA IBUNB("UNBILOP")=IBUNB("UNBILOP")+IBCPT(IBZ,2)
"RTN","IBTUBO1",121,0)
 . . S:IBMRA IBUNB("CPTMS-P-MRA")=IBUNB("CPTMS-P-MRA")+1
"RTN","IBTUBO1",122,0)
 . . S:IBMRA IBUNB("UNBILOP-MRA")=IBUNB("UNBILOP-MRA")+IBCPT(IBZ,2)
"RTN","IBTUBO1",123,0)
 . . I $G(IBXTRACT) S IB(11)=IB(11)+1,IB(12)=IB(12)+IBCPT(IBZ,2)
"RTN","IBTUBO1",124,0)
 ;
"RTN","IBTUBO1",125,0)
 D SETUB
"RTN","IBTUBO1",126,0)
 ;
"RTN","IBTUBO1",127,0)
OPTQ Q
"RTN","IBTUBO1",128,0)
 ;
"RTN","IBTUBO1",129,0)
PRERC ; - Determine if a pre-9/1/99 visit has been billed.
"RTN","IBTUBO1",130,0)
 ;   Output: IBQUIT will be set to 1 if the visit has been billed.
"RTN","IBTUBO1",131,0)
 ;   *Pre-set variables DFN,IBDAY,IBDET,IBNAME,IBNCF,IBQUIT,IBRT,IBEDT
"RTN","IBTUBO1",132,0)
 ;    and IB/IBUNB arrays required.
"RTN","IBTUBO1",133,0)
 ; NO MRA Extract code needed for pre-RC processes
"RTN","IBTUBO1",134,0)
 I $D(^TMP($J,"IBTUB-OPT",IBNAME_"@@"_DFN,IBDAY)) S IBQUIT=1 G PRCQ
"RTN","IBTUBO1",135,0)
 ;
"RTN","IBTUBO1",136,0)
 ; - Check all outpatient claims on event date.
"RTN","IBTUBO1",137,0)
 N IBXX S IBXX=0
"RTN","IBTUBO1",138,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D  Q:IBQUIT
"RTN","IBTUBO1",139,0)
 . ;
"RTN","IBTUBO1",140,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUBO1",141,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""  S IBNCF=IBNCF+1
"RTN","IBTUBO1",142,0)
 . ;
"RTN","IBTUBO1",143,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO1",144,0)
 . I $G(IBCOMP),$P(IBDATA,U,3)>IBEDT Q
"RTN","IBTUBO1",145,0)
 . ;
"RTN","IBTUBO1",146,0)
 . S IBQUIT=1 ; Episode has been billed-set flag.
"RTN","IBTUBO1",147,0)
 ;
"RTN","IBTUBO1",148,0)
 I IBQUIT G PRCQ ; Episode was billed.
"RTN","IBTUBO1",149,0)
 ;
"RTN","IBTUBO1",150,0)
 ; - The episode was not billed; determine the tort rate for a visit
"RTN","IBTUBO1",151,0)
 ;   and increment the number and amount of unbilled pre-9/1/99 visits.
"RTN","IBTUBO1",152,0)
 S IBXX=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"OUTPATIENT VISIT DATE")
"RTN","IBTUBO1",153,0)
 S IBUNB("UNBILOP")=IBUNB("UNBILOP")+IBXX
"RTN","IBTUBO1",154,0)
 S IBUNB("ENCNTRS")=IBUNB("ENCNTRS")+1
"RTN","IBTUBO1",155,0)
 ;
"RTN","IBTUBO1",156,0)
 I $G(IBXTRACT) S IB(7)=IB(7)+1,IB(8)=IB(8)+IBXX ; For DM extract.
"RTN","IBTUBO1",157,0)
 ;
"RTN","IBTUBO1",158,0)
PRCQ Q
"RTN","IBTUBO1",159,0)
 ;
"RTN","IBTUBO1",160,0)
NOOE ; - If there is no encounter, look for add/edits or registrations.
"RTN","IBTUBO1",161,0)
 ;   Output: IBQUIT will be set to 1 if the visit is non-billable.
"RTN","IBTUBO1",162,0)
 ;   *Pre-set variable IBQUIT required.
"RTN","IBTUBO1",163,0)
 N IBDATA,IBSC,IBSDV,IBXX,IBZERR
"RTN","IBTUBO1",164,0)
 ;
"RTN","IBTUBO1",165,0)
 ; - Check if for a visit at the visit date/time.
"RTN","IBTUBO1",166,0)
 S IBXX=$$EXOE^SDOE(DFN,IBDT,IBDT,"","IBZERR")
"RTN","IBTUBO1",167,0)
 I IBXX D CKENC^IBTUBOU(IBXX,"",.IBQUIT) G NOOEQ
"RTN","IBTUBO1",168,0)
 ;
"RTN","IBTUBO1",169,0)
 ; - Find next add/edit stop code encounter after IBDT.
"RTN","IBTUBO1",170,0)
 D SCAN^IBTUBOU(DFN,IBDT,.IBQUERY)
"RTN","IBTUBO1",171,0)
 ;
"RTN","IBTUBO1",172,0)
NOOEQ Q
"RTN","IBTUBO1",173,0)
 ;
"RTN","IBTUBO1",174,0)
SETUB ; Set array elements for the detail report.
"RTN","IBTUBO1",175,0)
 ; Array element format:
"RTN","IBTUBO1",176,0)
 ; NON-MRA:
"RTN","IBTUBO1",177,0)
 ;  ^TMP($J,"IBTUB-OPT",NAME@@DFN,DATE,IBX)=bill status^claim type
"RTN","IBTUBO1",178,0)
 ;  ^TMP($J,"IBTUB-OPT",NAME@@DFN,DATE,IBX,CPT no)=inst rate^prof rate
"RTN","IBTUBO1",179,0)
 ; MRA:
"RTN","IBTUBO1",180,0)
 ;  ^TMP($J,"IBTUB-OPT_MRA",NAME@@DFN,DATE,IBX,CPT no)=1 if MRA req
"RTN","IBTUBO1",181,0)
 ;
"RTN","IBTUBO1",182,0)
 N IBCTF,IBCPTNM
"RTN","IBTUBO1",183,0)
 I $S($G(IBINMRA):1,1:'$O(IBCPT("MRA",""))) S ^TMP($J,"IBTUB-OPT",IBNAME_"@@"_DFN,IBDAY,IBX)=IBNCF
"RTN","IBTUBO1",184,0)
 I $G(IBINMRA),$O(IBCPT("MRA","")) S ^TMP($J,"IBTUB-OPT_MRA",IBNAME_"@@"_DFN,IBDAY,IBX)=1
"RTN","IBTUBO1",185,0)
 G:'IBDET SETUBQ
"RTN","IBTUBO1",186,0)
 I $D(IBCPT) S IBXX=0 F  S IBXX=$O(IBCPT(IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",187,0)
 . S IBCPTNM=$$CODEC^ICPTCOD(IBXX) I IBCPTNM=-1 S IBCPTNM="UNK"
"RTN","IBTUBO1",188,0)
 . S IBCTF=$S($G(IBCPT(IBXX,1)):"I",1:"")
"RTN","IBTUBO1",189,0)
 . S IBCTF=$S($G(IBCPT(IBXX,2)):$S(IBCTF="I":"I,P",1:"P"),1:IBCTF)
"RTN","IBTUBO1",190,0)
 . I $S($G(IBINMRA):1,1:'$O(IBCPT("MRA",""))) S ^TMP($J,"IBTUB-OPT",IBNAME_"@@"_DFN,IBDAY,IBX,IBCPTNM)=+$G(IBCPT(IBXX,1))_U_+$G(IBCPT(IBXX,2))_U_IBCTF
"RTN","IBTUBO1",191,0)
 . I $G(IBINMRA) S:$G(IBCPT("MRA",IBXX)) ^TMP($J,"IBTUB-OPT_MRA",IBNAME_"@@"_DFN,IBDAY,IBX,IBCPTNM)=1
"RTN","IBTUBO1",192,0)
 ;
"RTN","IBTUBO1",193,0)
SETUBQ Q
"UP",366.14,366.141,-1)
366.14^1
"UP",366.14,366.141,0)
366.141
"VER")
8.0^22.0
"^DD",351.2,351.2,.03,0)
PATIENT TYPE^S^1:AGENT ORANGE;2:IONIZING RADIATION;3:SOUTHWEST ASIA;4:SERVICE CONNECTED;5:MILITARY SEXUAL TRAUMA;6:HEAD/NECK CANCER;7:COMBAT VETERAN;8:PROJECT 112/SHAD;^0;3^Q
"^DD",351.2,351.2,.03,3)
Please enter a number from 1 to 8 that best represents the exposure being claimed.
"^DD",351.2,351.2,.03,21,0)
^.001^3^3^3060818^^^^
"^DD",351.2,351.2,.03,21,1,0)
This field is used to determine whether the patient has claimed exposure
"^DD",351.2,351.2,.03,21,2,0)
to Agent Orange, Ionizing Radiation, Southwest Asia, Military
"^DD",351.2,351.2,.03,21,3,0)
Sexual Trauma, Head/Neck Cancer or Project 112/SHAD.
"^DD",351.2,351.2,.03,"DT")
3060802
"^DD",366.14,366.141,.403,0)
SWA^S^0:NO;1:YES;^4;3^Q
"^DD",366.14,366.141,.403,3)
Enter Southwest Asia indicator
"^DD",366.14,366.141,.403,21,0)
^.001^1^1^3060925^^
"^DD",366.14,366.141,.403,21,1,0)
Southwest Asia indicator.
"^DD",366.14,366.141,.403,"DT")
3060925
"^DD",366.14,366.141,.408,0)
SHAD^S^0:NO;1:YES;^4;8^Q
"^DD",366.14,366.141,.408,3)
Enter Project 112/SHAD indicator
"^DD",366.14,366.141,.408,21,0)
^^1^1^3060926^
"^DD",366.14,366.141,.408,21,1,0)
Project 112/SHAD indicator
"^DD",366.14,366.141,.408,"DT")
3060926
"BLD",6013,6)
^333
**END**
**END**
