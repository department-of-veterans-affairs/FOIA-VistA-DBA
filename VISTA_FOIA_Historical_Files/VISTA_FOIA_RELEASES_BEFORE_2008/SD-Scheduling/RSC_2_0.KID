KIDS Distribution saved on Mar 16, 2005@19:41:49
Restricting Stop Code II Build SD*5.3*380, PX*1*151, EC*2*65 & ECX*3*72
**KIDS**:RSC 2.0^SD*5.3*380^PX*1.0*151^EC*2.0*65^ECX*3.0*72^

**INSTALL NAME**
RSC 2.0
"BLD",5046,0)
RSC 2.0^^1^3050316^y
"BLD",5046,10,0)
^9.63^4^4
"BLD",5046,10,1,0)
SD*5.3*380^1
"BLD",5046,10,2,0)
PX*1.0*151^1
"BLD",5046,10,3,0)
EC*2.0*65^1
"BLD",5046,10,4,0)
ECX*3.0*72^1
"BLD",5046,10,"B","EC*2.0*65",3)

"BLD",5046,10,"B","ECX*3.0*72",4)

"BLD",5046,10,"B","PX*1.0*151",2)

"BLD",5046,10,"B","SD*5.3*380",1)

"BLD",5046,"KRN",0)
^9.67PA^8989.52^19
"BLD",5046,"KRN",.4,0)
.4
"BLD",5046,"KRN",.401,0)
.401
"BLD",5046,"KRN",.402,0)
.402
"BLD",5046,"KRN",.403,0)
.403
"BLD",5046,"KRN",.5,0)
.5
"BLD",5046,"KRN",.84,0)
.84
"BLD",5046,"KRN",3.6,0)
3.6
"BLD",5046,"KRN",3.8,0)
3.8
"BLD",5046,"KRN",9.2,0)
9.2
"BLD",5046,"KRN",9.8,0)
9.8
"BLD",5046,"KRN",19,0)
19
"BLD",5046,"KRN",19.1,0)
19.1
"BLD",5046,"KRN",101,0)
101
"BLD",5046,"KRN",409.61,0)
409.61
"BLD",5046,"KRN",771,0)
771
"BLD",5046,"KRN",870,0)
870
"BLD",5046,"KRN",8989.51,0)
8989.51
"BLD",5046,"KRN",8989.52,0)
8989.52
"BLD",5046,"KRN",8994,0)
8994
"BLD",5046,"KRN","B",.4,.4)

"BLD",5046,"KRN","B",.401,.401)

"BLD",5046,"KRN","B",.402,.402)

"BLD",5046,"KRN","B",.403,.403)

"BLD",5046,"KRN","B",.5,.5)

"BLD",5046,"KRN","B",.84,.84)

"BLD",5046,"KRN","B",3.6,3.6)

"BLD",5046,"KRN","B",3.8,3.8)

"BLD",5046,"KRN","B",9.2,9.2)

"BLD",5046,"KRN","B",9.8,9.8)

"BLD",5046,"KRN","B",19,19)

"BLD",5046,"KRN","B",19.1,19.1)

"BLD",5046,"KRN","B",101,101)

"BLD",5046,"KRN","B",409.61,409.61)

"BLD",5046,"KRN","B",771,771)

"BLD",5046,"KRN","B",870,870)

"BLD",5046,"KRN","B",8989.51,8989.51)

"BLD",5046,"KRN","B",8989.52,8989.52)

"BLD",5046,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
SD*5.3*380
"BLD",5042,0)
SD*5.3*380^SCHEDULING^0^3050316^y
"BLD",5042,4,0)
^9.64PA^44^1
"BLD",5042,4,44,0)
44
"BLD",5042,4,44,2,0)
^9.641^44^1
"BLD",5042,4,44,2,44,0)
HOSPITAL LOCATION  (File-top level)
"BLD",5042,4,44,2,44,1,0)
^9.6411^2503^2
"BLD",5042,4,44,2,44,1,8,0)
STOP CODE NUMBER
"BLD",5042,4,44,2,44,1,2503,0)
CREDIT STOP CODE
"BLD",5042,4,44,222)
y^y^p^^^^n^^n
"BLD",5042,4,44,224)

"BLD",5042,4,"APDD",44,44)

"BLD",5042,4,"APDD",44,44,8)

"BLD",5042,4,"APDD",44,44,2503)

"BLD",5042,4,"B",44,44)

"BLD",5042,"INIT")
SD53P380
"BLD",5042,"KRN",0)
^9.67PA^8989.52^19
"BLD",5042,"KRN",.4,0)
.4
"BLD",5042,"KRN",.4,"NM",0)
^9.68A^^
"BLD",5042,"KRN",.401,0)
.401
"BLD",5042,"KRN",.402,0)
.402
"BLD",5042,"KRN",.403,0)
.403
"BLD",5042,"KRN",.5,0)
.5
"BLD",5042,"KRN",.84,0)
.84
"BLD",5042,"KRN",3.6,0)
3.6
"BLD",5042,"KRN",3.8,0)
3.8
"BLD",5042,"KRN",9.2,0)
9.2
"BLD",5042,"KRN",9.8,0)
9.8
"BLD",5042,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",5042,"KRN",9.8,"NM",1,0)
SDREACT^^0^B19399143
"BLD",5042,"KRN",9.8,"NM",2,0)
SDUNC^^0^B22202942
"BLD",5042,"KRN",9.8,"NM",3,0)
SDNACT^^0^B18897332
"BLD",5042,"KRN",9.8,"NM",4,0)
SDUTL2^^0^B47873660
"BLD",5042,"KRN",9.8,"NM",5,0)
SDM^^0^B27204232
"BLD",5042,"KRN",9.8,"NM",6,0)
SDMULT^^0^B10120175
"BLD",5042,"KRN",9.8,"NM",7,0)
SDAMWI^^0^B13049316
"BLD",5042,"KRN",9.8,"NM",8,0)
SDAM^^0^B10009382
"BLD",5042,"KRN",9.8,"NM",9,0)
SDAM3^^0^B8187774
"BLD",5042,"KRN",9.8,"NM","B","SDAM",8)

"BLD",5042,"KRN",9.8,"NM","B","SDAM3",9)

"BLD",5042,"KRN",9.8,"NM","B","SDAMWI",7)

"BLD",5042,"KRN",9.8,"NM","B","SDM",5)

"BLD",5042,"KRN",9.8,"NM","B","SDMULT",6)

"BLD",5042,"KRN",9.8,"NM","B","SDNACT",3)

"BLD",5042,"KRN",9.8,"NM","B","SDREACT",1)

"BLD",5042,"KRN",9.8,"NM","B","SDUNC",2)

"BLD",5042,"KRN",9.8,"NM","B","SDUTL2",4)

"BLD",5042,"KRN",19,0)
19
"BLD",5042,"KRN",19.1,0)
19.1
"BLD",5042,"KRN",101,0)
101
"BLD",5042,"KRN",409.61,0)
409.61
"BLD",5042,"KRN",771,0)
771
"BLD",5042,"KRN",870,0)
870
"BLD",5042,"KRN",8989.51,0)
8989.51
"BLD",5042,"KRN",8989.52,0)
8989.52
"BLD",5042,"KRN",8994,0)
8994
"BLD",5042,"KRN","B",.4,.4)

"BLD",5042,"KRN","B",.401,.401)

"BLD",5042,"KRN","B",.402,.402)

"BLD",5042,"KRN","B",.403,.403)

"BLD",5042,"KRN","B",.5,.5)

"BLD",5042,"KRN","B",.84,.84)

"BLD",5042,"KRN","B",3.6,3.6)

"BLD",5042,"KRN","B",3.8,3.8)

"BLD",5042,"KRN","B",9.2,9.2)

"BLD",5042,"KRN","B",9.8,9.8)

"BLD",5042,"KRN","B",19,19)

"BLD",5042,"KRN","B",19.1,19.1)

"BLD",5042,"KRN","B",101,101)

"BLD",5042,"KRN","B",409.61,409.61)

"BLD",5042,"KRN","B",771,771)

"BLD",5042,"KRN","B",870,870)

"BLD",5042,"KRN","B",8989.51,8989.51)

"BLD",5042,"KRN","B",8989.52,8989.52)

"BLD",5042,"KRN","B",8994,8994)

"BLD",5042,"QUES",0)
^9.62^^
"BLD",5042,"REQB",0)
^9.611^2^2
"BLD",5042,"REQB",1,0)
SD*5.3*303^2
"BLD",5042,"REQB",2,0)
SD*5.3*168^2
"BLD",5042,"REQB","B","SD*5.3*168",2)

"BLD",5042,"REQB","B","SD*5.3*303",1)

"FIA",44)
HOSPITAL LOCATION
"FIA",44,0)
^SC(
"FIA",44,0,0)
44I
"FIA",44,0,1)
y^y^p^^^^n^^n
"FIA",44,0,10)

"FIA",44,0,11)

"FIA",44,0,"RLRO")

"FIA",44,0,"VR")
5.3^SD
"FIA",44,44)
1
"FIA",44,44,8)

"FIA",44,44,2503)

"INIT")
SD53P380
"MBREQ")
1
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930824
"PKG",16,22,1,"PAH",1,0)
380^3050316^100996
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","SD53P380")
0^^B1425524
"RTN","SD53P380",1,0)
SD53P380 ;ALB/JAM - Restricting Stop Code Phase II Post Install;12-Jan-05
"RTN","SD53P380",2,0)
 ;;5.3;Scheduling;**380**;Aug 13, 1993
"RTN","SD53P380",3,0)
 ;
"RTN","SD53P380",4,0)
 ;Routine adapted from routine IB20P210
"RTN","SD53P380",5,0)
 ;
"RTN","SD53P380",6,0)
EN ;Recompile Input Templates
"RTN","SD53P380",7,0)
 N SDC,DMAX,SDMAX,SDN
"RTN","SD53P380",8,0)
 ;
"RTN","SD53P380",9,0)
 S SDMAX=$$ROUSIZE^DILF
"RTN","SD53P380",10,0)
 D MES^XPDUTL("Recompiling affected input template ...")
"RTN","SD53P380",11,0)
 F SDC=1:1 S SDN=$P($T(TMPL+SDC),";;",2) Q:SDN=""  D COMP(SDN,SDMAX)
"RTN","SD53P380",12,0)
 D MES^XPDUTL("Completed compiling input template.")
"RTN","SD53P380",13,0)
 Q
"RTN","SD53P380",14,0)
 ;
"RTN","SD53P380",15,0)
COMP(TNAME,DMAX) ; Compile the Input Template
"RTN","SD53P380",16,0)
 N SDIEN,SDRTN,X,Y
"RTN","SD53P380",17,0)
 ;find the ien of the input template
"RTN","SD53P380",18,0)
 S SDIEN=$O(^DIE("B",TNAME,0)) Q:'SDIEN
"RTN","SD53P380",19,0)
 ;
"RTN","SD53P380",20,0)
 ;quit if input template not compiled
"RTN","SD53P380",21,0)
 S SDRTN=$P($G(^DIE(SDIEN,"ROUOLD")),U) Q:SDRTN=""
"RTN","SD53P380",22,0)
 ;
"RTN","SD53P380",23,0)
 D MES^XPDUTL("Compiling "_TNAME_" , compiled routine is "_SDRTN_" ...")
"RTN","SD53P380",24,0)
 S X=SDRTN,Y=SDIEN
"RTN","SD53P380",25,0)
 D EN^DIEZ
"RTN","SD53P380",26,0)
 D MES^XPDUTL("done")
"RTN","SD53P380",27,0)
 D MES^XPDUTL("")
"RTN","SD53P380",28,0)
 Q
"RTN","SD53P380",29,0)
 ;
"RTN","SD53P380",30,0)
TMPL ;
"RTN","SD53P380",31,0)
 ;;SDB
"RTN","SD53P380",32,0)
 ;;
"RTN","SDAM")
0^8^B10009382
"RTN","SDAM",1,0)
SDAM ;MJK/ALB - Appt Mgt ; 8/30/99 9:09am
"RTN","SDAM",2,0)
 ;;5.3;Scheduling;**149,177,76,242,380**;Aug 13, 1993
"RTN","SDAM",3,0)
 ;
"RTN","SDAM",4,0)
 D HDLKILL^SDAMEVT
"RTN","SDAM",5,0)
EN ; -- main entry point
"RTN","SDAM",6,0)
 N XQORS,VALMEVL D EN^VALM("SDAM APPT MGT")
"RTN","SDAM",7,0)
 Q
"RTN","SDAM",8,0)
 ;
"RTN","SDAM",9,0)
INIT ; -- set up appt man vars
"RTN","SDAM",10,0)
 K I,X,SDBEG,SDEND,SDB,XQORNOD,SDFN,SDCLN,DA,DR,DIE,DNM,DQ,%B,SDRES
"RTN","SDAM",11,0)
 S DIR(0)="43,213",DIR("A")="Select Patient name or Clinic name"
"RTN","SDAM",12,0)
 D ^DIR K DIR I $D(DIRUT) S VALMQUIT="" G INITQ
"RTN","SDAM",13,0)
 S SDY=Y
"RTN","SDAM",14,0)
 I SDY["DPT(" S DFN=+SDY D 2^VADPT I +VADM(6) D  G:SDUP="^" INIT
"RTN","SDAM",15,0)
 . W !!,"WARNING ",VADM(7),!!
"RTN","SDAM",16,0)
 . R "Press Return to Continue or ^ to Quit: ",SDUP:DTIME
"RTN","SDAM",17,0)
 I SDY["DPT(" S SDAMTYP="P",SDFN=+SDY D INIT^SDAM1
"RTN","SDAM",18,0)
 I SDY["SC(" S SDRES=$$CLNCK^SDUTL2(+SDY,1) I 'SDRES D  G INIT
"RTN","SDAM",19,0)
 . W !,?5,"Clinic MUST be corrected before continuing."
"RTN","SDAM",20,0)
 I SDY["SC(" S SDAMTYP="C",SDCLN=+SDY D INIT^SDAM3
"RTN","SDAM",21,0)
INITQ Q
"RTN","SDAM",22,0)
 ;
"RTN","SDAM",23,0)
HDR ; -- screen head
"RTN","SDAM",24,0)
 N X,SDX,SDLNX S SDLNX=2
"RTN","SDAM",25,0)
 ;I SDAMTYP="P" D HDR^SDAM10 S VALM("TM")=5 D
"RTN","SDAM",26,0)
 I SDAMTYP="P" D HDR^SDAM10 D
"RTN","SDAM",27,0)
 .S SDX=$$PCLINE^SDPPTEM(SDFN,DT) Q:'$L(SDX)
"RTN","SDAM",28,0)
 .S VALMHDR(SDLNX)=SDX,SDLNX=3
"RTN","SDAM",29,0)
 .;S VALMHDR(SDLNX)=SDX,SDLNX=3,VALM("TM")=6
"RTN","SDAM",30,0)
 .;Increment Top & Bottom margins to allow for additional line
"RTN","SDAM",31,0)
 .;S VALM("TM")=VALM("TM")+1
"RTN","SDAM",32,0)
 .;S VALM("BM")=VALM("BM")+1
"RTN","SDAM",33,0)
 .Q
"RTN","SDAM",34,0)
 I SDAMTYP="C" D HDR^SDAM3
"RTN","SDAM",35,0)
 S X=$P(SDAMLIST,"^",2)
"RTN","SDAM",36,0)
 S VALMHDR(SDLNX)=X
"RTN","SDAM",37,0)
 S X="* - New GAF Required",VALMHDR(SDLNX)=$$SETSTR^VALM1(X,VALMHDR(SDLNX),34,30)
"RTN","SDAM",38,0)
 S VALMHDR(SDLNX)=$$SETSTR^VALM1($$FDATE^VALM1(SDBEG)_" thru "_$$FDATE^VALM1(SDEND),VALMHDR(SDLNX),59,22)
"RTN","SDAM",39,0)
 Q
"RTN","SDAM",40,0)
 ;
"RTN","SDAM",41,0)
FNL ; -- what to do after action
"RTN","SDAM",42,0)
 K ^TMP("SDAM",$J),^TMP("SDAMIDX",$J),^TMP("VALMIDX",$J)
"RTN","SDAM",43,0)
 K SDAMCNT,SDFLDD,SDACNT,VALMHCNT,SDPRD,SDFN,SDCLN,SDAMLIST,SDT,SDATA,SDBEG,SDEND,DFN,Y,SDAMTYP,SDY,X,SDCL,Y,SDDA,VALMY
"RTN","SDAM",44,0)
 Q
"RTN","SDAM",45,0)
 ;
"RTN","SDAM",46,0)
BLD ; -- entry point to bld list
"RTN","SDAM",47,0)
 ; input:  SDAMLIST := list to build
"RTN","SDAM",48,0)
 D:'$D(SDAMLIST) GROUP("ALL",.SDAMLIST)
"RTN","SDAM",49,0)
 I SDAMTYP="P" D BLD^SDAM1
"RTN","SDAM",50,0)
 I SDAMTYP="C" D BLD^SDAM3
"RTN","SDAM",51,0)
BLDQ Q
"RTN","SDAM",52,0)
 ;
"RTN","SDAM",53,0)
LIST ; -- find and build
"RTN","SDAM",54,0)
 ;  input:        X := status group
"RTN","SDAM",55,0)
 ; output: SDAMLIST := array of status'
"RTN","SDAM",56,0)
 ;
"RTN","SDAM",57,0)
 I X["CANCELLED",$G(SDAMTYP)="C" S VALMBCK="" W !!,*7,"You must be viewing a patient to list cancelled appointments." D PAUSE^VALM1 G LISTQ
"RTN","SDAM",58,0)
 D GROUP(X,.SDAMLIST),BLD
"RTN","SDAM",59,0)
 S VALMBCK="R"
"RTN","SDAM",60,0)
LISTQ Q
"RTN","SDAM",61,0)
 ;
"RTN","SDAM",62,0)
GROUP(GROUP,SDAMLIST) ; -- find list
"RTN","SDAM",63,0)
 S (I,SDAMLIST)="" F  S I=$O(SDAMLIST(I)) Q:I=""  K SDAMLIST(I)
"RTN","SDAM",64,0)
 S GROUP=+$O(^SD(409.62,"B",GROUP,0))
"RTN","SDAM",65,0)
 G GROUPQ:'$D(^SD(409.62,GROUP,0)) S SDAMLIST=^(0)
"RTN","SDAM",66,0)
 S I=$G(^SD(409.62,GROUP,1)) S:I]"" SDAMLIST("SCR")=I
"RTN","SDAM",67,0)
 S I=0 F  S I=$O(^SD(409.63,"C",GROUP,I)) Q:'I  S SDAMLIST(I)=""
"RTN","SDAM",68,0)
GROUPQ Q
"RTN","SDAM",69,0)
 ;
"RTN","SDAM",70,0)
FUT ; -- change date range
"RTN","SDAM",71,0)
 S X1=DT,X2=999 D C^%DTC
"RTN","SDAM",72,0)
 S SDEBG=DT,SDEND=X,X="FUTURE" K VALMHDR
"RTN","SDAM",73,0)
 D LIST
"RTN","SDAM",74,0)
FUTQ Q
"RTN","SDAM",75,0)
 ;
"RTN","SDAM",76,0)
EXIT ; -- exit action for protocol
"RTN","SDAM",77,0)
 I $D(VALMBCK),VALMBCK="R" D REFRESH^VALM S VALMBCK=$P(VALMBCK,"R")_$P(VALMBCK,"R",2)
"RTN","SDAM",78,0)
 Q
"RTN","SDAM",79,0)
 ;
"RTN","SDAM3")
0^9^B8187774
"RTN","SDAM3",1,0)
SDAM3 ;MJK/ALB - Appt Mgt (Clinic) ; 12/1/91
"RTN","SDAM3",2,0)
 ;;5.3;Scheduling;**63,189,380**;Aug 13, 1993
"RTN","SDAM3",3,0)
 ;
"RTN","SDAM3",4,0)
INIT ; -- get init clinic appt data
"RTN","SDAM3",5,0)
 ;  input:        SDCLN := ifn of pat
"RTN","SDAM3",6,0)
 ; output:  ^TMP("SDAM" := appt array
"RTN","SDAM3",7,0)
 S X=$P($G(^DG(43,1,"SCLR")),U,12),SDPRD=$S(X:X,1:2)
"RTN","SDAM3",8,0)
 S X1=DT,X2=-SDPRD D C^%DTC S VALMB=X D RANGE^VALM11
"RTN","SDAM3",9,0)
 I '$D(VALMBEG) S VALMQUIT="" G INITQ
"RTN","SDAM3",10,0)
 S SDBEG=VALMBEG,SDEND=VALMEND
"RTN","SDAM3",11,0)
 D CHGCAP^VALM("NAME","Patient")
"RTN","SDAM3",12,0)
 S X="NO ACTION TAKEN" D LIST^SDAM
"RTN","SDAM3",13,0)
INITQ K VALMB,VALMBEG,VALMEND Q
"RTN","SDAM3",14,0)
 ;
"RTN","SDAM3",15,0)
BLD ; -- scan apts
"RTN","SDAM3",16,0)
 N VA,SDAMDD,SDNAME,SDMAX,SDLARGE,DFN,SDCL,BL,XC,XW,AC,AW,TC,TW,NC,NW,SC,SW,SDT,SDDA ; done for speed see INIT^SDAM10
"RTN","SDAM3",17,0)
 D INIT^SDAM10
"RTN","SDAM3",18,0)
 F SDT=SDBEG:0 S SDT=$O(^SC(SDCLN,"S",SDT)) Q:'SDT!($P(SDT,".",1)>SDEND)  D
"RTN","SDAM3",19,0)
 .F SDDA=0:0 S SDDA=$O(^SC(SDCLN,"S",SDT,1,SDDA)) Q:'SDDA  D
"RTN","SDAM3",20,0)
 ..I $D(^(SDDA,0)) S DFN=+^(0) D PID^VADPT I $D(^DPT(DFN,"S",SDT,0)),$$VALID^SDAM2(DFN,SDCLN,SDT,SDDA) S SDATA=^DPT(DFN,"S",SDT,0),SDCL=SDCLN,SDNAME=VA("BID")_" "_$P($G(^DPT(DFN,0)),U) D:SDCLN=+SDATA BLD1^SDAM1
"RTN","SDAM3",21,0)
 D NUL^SDAM10,LARGE^SDAM10:$D(SDLARGE)
"RTN","SDAM3",22,0)
 S $P(^TMP("SDAM",$J,0),U,4)=VALMCNT
"RTN","SDAM3",23,0)
 Q
"RTN","SDAM3",24,0)
 ;
"RTN","SDAM3",25,0)
HDR ; -- list screen header
"RTN","SDAM3",26,0)
 ;   input:      SDCLN := ifn of pat
"RTN","SDAM3",27,0)
 ;  output:  VALMHDR() := hdr array
"RTN","SDAM3",28,0)
 ;
"RTN","SDAM3",29,0)
 S VALMHDR(1)=$E($P("Clinic: "_$G(^SC(SDCLN,0)),"^",1),1,45)  ;for proper display of clinic name for SD*5.3*189
"RTN","SDAM3",30,0)
 Q
"RTN","SDAM3",31,0)
 ;
"RTN","SDAM3",32,0)
CLN ; -- change clinic
"RTN","SDAM3",33,0)
 I $G(SDAMLIST)["CANCELLED" S VALMBCK="" W !!,*7,"You must be viewing a patient to list cancelled appointments." D PAUSE^VALM1 G CLNQ
"RTN","SDAM3",34,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","SDAM3",35,0)
 S X="" I $D(XQORNOD(0)) S X=$P($P(XQORNOD(0),U,4),"=",2)
"RTN","SDAM3",36,0)
 W ! S DIC="^SC(",DIC(0)=$S(X]"":"",1:"A")_"EMQ",DIC("A")="Select Clinic: ",DIC("S")="I $P(^(0),U,3)=""C"",'$G(^(""OOS""))"
"RTN","SDAM3",37,0)
 D ^DIC K DIC
"RTN","SDAM3",38,0)
 I Y<0 D  G CLNQ
"RTN","SDAM3",39,0)
 .I SDAMTYP="C" S VALMSG=$C(7)_"Clinic has not been changed."
"RTN","SDAM3",40,0)
 .I SDAMTYP="P" S VALMSG=$C(7)_"View of patient remains in affect."
"RTN","SDAM3",41,0)
 I SDAMTYP'="C" D CHGCAP^VALM("NAME","Patient") S SDAMTYP="C"
"RTN","SDAM3",42,0)
 N SDRES I SDAMTYP="C" S SDRES=$$CLNCK^SDUTL2(+Y,1) I 'SDRES D  G CLNQ
"RTN","SDAM3",43,0)
 .W !,?5,"Clinic MUST be corrected before continuing." D PAUSE^VALM1
"RTN","SDAM3",44,0)
 S SDCLN=+Y K SDFN D BLD
"RTN","SDAM3",45,0)
CLNQ Q
"RTN","SDAM3",46,0)
 ;
"RTN","SDAMWI")
0^7^B13049316
"RTN","SDAMWI",1,0)
SDAMWI ;ALB/MJK - Unscheduled Appointments ; 13 Jun 2001  4:02 PM
"RTN","SDAMWI",2,0)
 ;;5.3;Scheduling;**63,94,241,250,296,380**;Aug 13, 1993
"RTN","SDAMWI",3,0)
 ;
"RTN","SDAMWI",4,0)
EN(DFN,SC) ; -- main entry point
"RTN","SDAMWI",5,0)
 ;    input: DFN ; SC := clinic#
"RTN","SDAMWI",6,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",7,0)
 ;
"RTN","SDAMWI",8,0)
 N SDY,SDAPTYP,SDRE,SDRE1,SDIN,SDSL,SDD,SDALLE,SDATD,SDDECOD,SDEC,SDEMP,SDOEL,SDPL,SDRT,SDSC,SDTTM,COLLAT,SDX,SDSTART,ORDER,SDREP,SDDA,SDCL
"RTN","SDAMWI",9,0)
 D 2^VADPT I +VADM(6) W !!?5,*7,"o  Patient has died!" D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",10,0)
 S SDCL=SC,SDSL=$S($D(^SC(SC,"SL")):+^("SL"),1:""),SDD=0
"RTN","SDAMWI",11,0)
 K SDRE,SDIN,SDRE1
"RTN","SDAMWI",12,0)
 I $D(^SC(SC,"I")) S Y=^("I"),SDIN=+Y,SDRE=+$P(Y,U,2),SDRE1=$$FDATE^VALM1(SDRE)
"RTN","SDAMWI",13,0)
 I $D(SDIN),SDIN,SDIN'>DT,SDRE,SDRE>DT W !!?5,*7,"o  Clinic is inactive from ",$$FTIME^VALM1(SDIN)," to "_SDRE1 D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",14,0)
 I $D(SDIN),SDIN,SDIN'>DT,'SDRE W !!?5,*7,"o  Clinic is inactive as of ",$$FTIME^VALM1(SDIN) D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",15,0)
 N SDRES S SDRES=$$CLNCK^SDUTL2(SC,1)
"RTN","SDAMWI",16,0)
 I 'SDRES W !,?5,*7,"o  Clinic MUST be corrected before continuing." D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",17,0)
 I '$$TIME(.DFN,.SC,.SDT) S SDY=0 G ENQ
"RTN","SDAMWI",18,0)
 S Y=SDT D ^SDM4 I X="^" S SDY=0 G ENQ
"RTN","SDAMWI",19,0)
 ; ** SD*5.3*250 MT Blocking check removed
"RTN","SDAMWI",20,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T N EASACT S EASACT="W" I $$MT^EASMTCHK(DFN,+$G(SDAPTYP),EASACT) D PAUSE^VALM1 S SDY=0 G ENQ
"RTN","SDAMWI",21,0)
 ;-- get sub-category for appointment type
"RTN","SDAMWI",22,0)
 S SDXSCAT=$$SUB^DGSAUTL(SDAPTYP,2,"")
"RTN","SDAMWI",23,0)
 S SDY=$$MAKE^SDAMWI1(DFN,SDCL,SDT)
"RTN","SDAMWI",24,0)
 K SDXSCAT
"RTN","SDAMWI",25,0)
ENQ D KVAR^VADPT
"RTN","SDAMWI",26,0)
 Q SDY
"RTN","SDAMWI",27,0)
 ;
"RTN","SDAMWI",28,0)
TIME(DFN,SC,SDT) ; -- get appt date/time
"RTN","SDAMWI",29,0)
 ;    input: DFN ; SC := clinic#
"RTN","SDAMWI",30,0)
 ;   output: SDT := date/time of wi appt
"RTN","SDAMWI",31,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",32,0)
 ;
"RTN","SDAMWI",33,0)
 N SDY,%DT
"RTN","SDAMWI",34,0)
ASK R !!,"APPOINTMENT TIME: NOW// ",X:DTIME S X=$$UPPER^VALM1(X)
"RTN","SDAMWI",35,0)
 I X["^"!('$T) S SDY=0 G TIMEQ
"RTN","SDAMWI",36,0)
 I X?.E1"?" D  G ASK
"RTN","SDAMWI",37,0)
 .W !,"  Enter a time or date@time for the appointment or return for 'NOW'."
"RTN","SDAMWI",38,0)
 .W !,"The date must be today or earlier."
"RTN","SDAMWI",39,0)
 S:X=""!(X="N")!(X="NO") X="NOW"
"RTN","SDAMWI",40,0)
 I X'="NOW",X'["@" S X="T@"_X
"RTN","SDAMWI",41,0)
 S %DT="TEP",%DT(0)=-(DT+1) D ^%DT G ASK:Y<0 S SDT=Y
"RTN","SDAMWI",42,0)
 G:'$$CANCHK(.SC,.SDT) ASK
"RTN","SDAMWI",43,0)
 I $D(^DPT(DFN,"S",SDT,0)) W !?5,*7,"o  Patient already has an appt on ",$$FTIME^VALM1(SDT) G ASK
"RTN","SDAMWI",44,0)
 S SDY=1
"RTN","SDAMWI",45,0)
TIMEQ Q SDY
"RTN","SDAMWI",46,0)
 ;
"RTN","SDAMWI",47,0)
CANCHK(SC,SDT) ; -- is clinic cancelled for date
"RTN","SDAMWI",48,0)
 ;    input: SC := clinic# ; SDT := date/time of wi appt
"RTN","SDAMWI",49,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",50,0)
 ;
"RTN","SDAMWI",51,0)
 N SDY
"RTN","SDAMWI",52,0)
 S SDY=1
"RTN","SDAMWI",53,0)
 I $D(^SC(SC,"ST",$P(SDT,"."))),'$D(^SC(SC,"ST",$P(SDT,"."),"CAN")) G CANCHKQ
"RTN","SDAMWI",54,0)
 I $D(^SC(SC,"ST",$P(SDT,"."),"CAN")),$G(^SC(SC,"ST",$P(SDT,"."),1))["CANCEL" W !?5,*7,"o  This date's clinic has been cancelled!" S SDY=0 G CANCHKQ
"RTN","SDAMWI",55,0)
 I $D(^SC(SC,"ST",$P(SDT,"."),"CAN")),$G(^SC(SC,"ST",$P(SDT,"."),1))'["CANCEL" W !?5,*7,"o  Warning: Part of this day's clinic has been cancelled!" G CANCHKQ
"RTN","SDAMWI",56,0)
 S SDY=$$AVAIL(.SC,.SDT)
"RTN","SDAMWI",57,0)
CANCHKQ Q SDY
"RTN","SDAMWI",58,0)
 ;
"RTN","SDAMWI",59,0)
AVAIL(SC,SDT) ; -- does clinic meet
"RTN","SDAMWI",60,0)
 ;    input: SC := clinic# ; SDT := date/time of wi appt
"RTN","SDAMWI",61,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",62,0)
 ;
"RTN","SDAMWI",63,0)
 N SDY
"RTN","SDAMWI",64,0)
 S X=$P(SDT,".") D DOW^SDM0
"RTN","SDAMWI",65,0)
 I $D(^SC(SC,"T"_Y)) S Z=$O(^SC(SC,"T"_Y,DT)) I Z'="",$D(^SC(SC,"T"_Y,Z,1)),^(1)]"" S SDY=1 G AVAILQ
"RTN","SDAMWI",66,0)
 W !?5,*7,"o  Clinic does not meet on this date!" S SDY=0
"RTN","SDAMWI",67,0)
AVAILQ Q SDY
"RTN","SDAMWI",68,0)
 ;
"RTN","SDAMWI",69,0)
CL(DFN) ; -- make wi appt
"RTN","SDAMWI",70,0)
 ;    input: DFN
"RTN","SDAMWI",71,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",72,0)
 ;
"RTN","SDAMWI",73,0)
 S DIC="^SC(",DIC(0)="AEMQ",DIC("A")="Select Clinic: ",DIC("S")="I $P(^(0),U,3)=""C"",'$G(^(""OOS""))"
"RTN","SDAMWI",74,0)
 D ^DIC K DIC
"RTN","SDAMWI",75,0)
 I Y<0 S SDY=0 G CLQ
"RTN","SDAMWI",76,0)
 S SC=+Y S SDY=$$EN(.DFN,.SC)
"RTN","SDAMWI",77,0)
CLQ Q SDY
"RTN","SDAMWI",78,0)
 ;
"RTN","SDAMWI",79,0)
PT(SC) ;
"RTN","SDAMWI",80,0)
 ;    input:  SC := clinic#
"RTN","SDAMWI",81,0)
 ; returned: success or fail := 1/0
"RTN","SDAMWI",82,0)
 ;
"RTN","SDAMWI",83,0)
 S DIC="^DPT(",DIC(0)="AEMQ",DIC("A")="Select Patient: "
"RTN","SDAMWI",84,0)
 D ^DIC K DIC
"RTN","SDAMWI",85,0)
 I Y<0 S SDY=0 G PTQ
"RTN","SDAMWI",86,0)
 S DFN=+Y S SDY=$$EN(.DFN,.SC)
"RTN","SDAMWI",87,0)
PTQ Q SDY
"RTN","SDAMWI",88,0)
 ;
"RTN","SDM")
0^5^B27204232
"RTN","SDM",1,0)
SDM ;SF/GFT,ALB/BOK - MAKE AN APPOINTMENT ; 08 Nov 2000  2:26 PM
"RTN","SDM",2,0)
 ;;5.3;Scheduling;**15,32,38,41,44,79,94,167,168,218,223,250,254,296,380**;AUG 13, 1993
"RTN","SDM",3,0)
 ;                                           If defined...
"RTN","SDM",4,0)
 ; appt mgt vars:  SDFN := DFN of patient....will not be asked
"RTN","SDM",5,0)
 ;                SDCLN := ifn of clinic.....will not be asked    
"RTN","SDM",6,0)
 ;              SDAMERR := returned if error occurs
"RTN","SDM",7,0)
 ; 
"RTN","SDM",8,0)
 S:'$D(SDMM) SDMM=0
"RTN","SDM",9,0)
EN1 L  W !! D I^SDUTL I '$D(SDCLN) S DIC="^SC(",DIC(0)="AEMZQ",DIC("A")="Select CLINIC: ",DIC("S")="I $P(^(0),U,3)=""C"",'$G(^(""OOS""))" D ^DIC K DIC G:Y<0!'$D(^("SL")) END
"RTN","SDM",10,0)
 N SDRES S:$D(SDCLN) Y=+SDCLN S SDRES=$$CLNCK^SDUTL2(+Y,1)
"RTN","SDM",11,0)
 I 'SDRES W !,?5,"Clinic MUST be corrected before continuing." G END:$D(SDCLN),SDM
"RTN","SDM",12,0)
 K SDAPTYP,SDIN,SDRE,SDXXX S:$D(SDCLN) Y=+SDCLN
"RTN","SDM",13,0)
 I $D(^SC(+Y,"I")) S SDIN=+^("I"),SDRE=+$P(^("I"),U,2)
"RTN","SDM",14,0)
 K SDINA I $D(SDIN),SDIN S SDINA=SDIN K SDIN
"RTN","SDM",15,0)
 I $D(SD),$D(SC),+Y'=+SC K SD
"RTN","SDM",16,0)
 S SL=$G(^SC(+Y,"SL")),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SC=Y,SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2) K Y
"RTN","SDM",17,0)
 I $D(^SC(+SC,"SDPROT")),$P(^("SDPROT"),U)="Y",'$D(^SC(+SC,"SDPRIV",DUZ)) W !,*7,"Access to ",$$CNAM(+SC)," is prohibited!",!,"Only users with a special code may access this clinic.",*7 S:$D(SDCLN) SDAMERR="" G END:$D(SDCLN),SDM
"RTN","SDM",18,0)
 D CS^SDM1A S SDW="",WY="Y"
"RTN","SDM",19,0)
 I '$D(ORACTION),'$D(SDFN) S (DIC,DIE)="^DPT(",DIC(0)="AQZME" D ^DIC S DFN=+Y G:Y<0 END:$D(SDCLN),^SDM0:X[U,SDM
"RTN","SDM",20,0)
 S:$D(SDFN) DFN=SDFN
"RTN","SDM",21,0)
 I $D(^DPT(DFN,.35)),$P(^(.35),U)]"" W !?10,*7,"PATIENT HAS DIED." S:$D(SDFN) SDAMERR="" G END:$D(SDFN),SDM
"RTN","SDM",22,0)
 D ^SDM4 I $S('$D(COLLAT):1,COLLAT=7:1,1:0) G:$D(SDCLN) END G SDM
"RTN","SDM",23,0)
 ;-- get sub-category for appointment type
"RTN","SDM",24,0)
 S SDXSCAT=$$SUB^DGSAUTL(SDAPTYP,2,"")
"RTN","SDM",25,0)
 K SDXXX D EN G END:$D(SDCLN),SDM
"RTN","SDM",26,0)
EN K SDMLT1 W:$P(VAEL(9),U,2)]"" !!,?15,"MEANS TEST STATUS: ",$P(VAEL(9),U,2),!
"RTN","SDM",27,0)
 ; *** sck, mt blocking removed
"RTN","SDM",28,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T,$$MT^EASMTCHK(DFN,+$G(SDAPTYP),"M") S SDAMERR="" Q
"RTN","SDM",29,0)
 S Y=DFN,Y(0)=^DPT(DFN,0) I VADM(7)]"" W !?3,*7,VADM(7)
"RTN","SDM",30,0)
 I $D(^DGS(41.1,"B",DFN)) F I=0:0 S I=$O(^DGS(41.1,"B",DFN,I)) Q:I'>0  I $P(^DGS(41.1,I,0),U,2)'<DT&('$P(^DGS(41.1,I,0),U,13)) W !,"SCHEDULED FOR ADMISSION ON " S Y=$P(^(0),U,2) D DT^SDM0
"RTN","SDM",31,0)
PEND S %="" W:$O(^DPT(DFN,"S",DT))'>DT !,"NO PENDING APPOINTMENTS"
"RTN","SDM",32,0)
 I $O(^DPT(DFN,"S",DT))>DT D  G END:%<0,HELP:'%
"RTN","SDM",33,0)
 .S %=2 W !,"DISPLAY PENDING APPOINTMENTS:"
"RTN","SDM",34,0)
 .D YN^DICN
"RTN","SDM",35,0)
 .I %Y["^" S SDMLT1=1
"RTN","SDM",36,0)
 D:%=1
"RTN","SDM",37,0)
 .N DX,DY,SDXY,SDEND S SDXY="S DX=$X,DY=0"_$S($L($G(^%ZOSF("XY"))):" "_^("XY"),1:"") X SDXY
"RTN","SDM",38,0)
 .F Y=DT:0 S Y=$O(^DPT(DFN,"S",Y)) Q:Y'>0  I "I"[$P(^(Y,0),U,2) X:(($Y+4)>IOSL) "D OUT^SDUTL X SDXY" Q:$G(SDEND)  D CHKSO W:$X>9 ! W ?11 D DT^SDM0 W ?32 S DA=+SSC W SDLN,$S($D(^SC(DA,0)):$P(^(0),U),1:"DELETED CLINIC "),COV,"  ",SDAT16
"RTN","SDM",39,0)
 ;Prompt for ETHNICITY if no value on file
"RTN","SDM",40,0)
 I '$O(^DPT(DFN,.06,0)) D
"RTN","SDM",41,0)
 .S DA=DFN,DR="6ETHNICITY",DIE="^DPT("
"RTN","SDM",42,0)
 .S DR(2,2.06)=".01ETHNICITY"
"RTN","SDM",43,0)
 .D ^DIE K DR
"RTN","SDM",44,0)
 ;Prompt for RACE if no value on file
"RTN","SDM",45,0)
 I '$O(^DPT(DFN,.02,0)) D
"RTN","SDM",46,0)
 .S DA=DFN,DR="2RACE",DIE="^DPT("
"RTN","SDM",47,0)
 .S DR(2,2.02)=".01RACE"
"RTN","SDM",48,0)
 .D ^DIE K DR
"RTN","SDM",49,0)
 S DA=DFN,DR=$S('$D(^DPT(DA,.11)):"[SDM1]",$P(^(.11),U)="":"[SDM1]",1:"")
"RTN","SDM",50,0)
 S DIE="^DPT(" D ^DIE:DR]"" K DR Q:$D(SDXXX)
"RTN","SDM",51,0)
E S Y=$P(SL,U,5)
"RTN","SDM",52,0)
 S SDW="" I $D(^DPT(DFN,.1)) S SDW=^(.1) W !,"NOTE - PATIENT IS NOW IN WARD "_SDW
"RTN","SDM",53,0)
 Q:$D(SDXXX)
"RTN","SDM",54,0)
EN2 F X=0:0 S X=$O(^DPT(DFN,"DE",X)) Q:'$D(^(+X,0))  I ^(0)-SC=0!'(^(0)-Y) F XX=0:0 S XX=$O(^DPT(DFN,"DE",X,1,XX)) Q:XX<1  S SDDIS=$P(^(XX,0),U,3) G ^SDM0:'SDDIS
"RTN","SDM",55,0)
 I '$D(^SC(+Y,0)) S Y=+SC
"RTN","SDM",56,0)
 S Y=$P(^SC(Y,0),U)
"RTN","SDM",57,0)
 ; SCRESTA = Array of pt's teams causing restricted consults
"RTN","SDM",58,0)
 N SCRESTA
"RTN","SDM",59,0)
 S SCREST=$$RESTPT^SCAPMCU4(DFN,DT,"SCRESTA")
"RTN","SDM",60,0)
 IF SCREST D
"RTN","SDM",61,0)
 .N SCTM
"RTN","SDM",62,0)
 . S SCCLNM=Y
"RTN","SDM",63,0)
 . W !,?5,"Patient has restricted consults due to team assignment(s):"
"RTN","SDM",64,0)
 .S SCTM=0
"RTN","SDM",65,0)
 .F  S SCTM=$O(SCRESTA(SCTM)) Q:'SCTM  W !,?10,SCRESTA(SCTM)
"RTN","SDM",66,0)
 IF SCREST&'$G(SCOKCONS) D  Q
"RTN","SDM",67,0)
 .W !,?5,"This patient may only be given appointments and enrolled in clinics via"
"RTN","SDM",68,0)
 .W !,?15,"Make Consult Appointment Option, and"
"RTN","SDM",69,0)
 .W !,?15,"Edit Clinic Enrollment Data option"
"RTN","SDM",70,0)
 D:$G(SCREST) MAIL^SCMCCON(DFN,.SCCLNM,2,DT,"SCRESTA")
"RTN","SDM",71,0)
 K DR,SCREST,SCCLNM
"RTN","SDM",72,0)
 G ^SDM0
"RTN","SDM",73,0)
 ;
"RTN","SDM",74,0)
CHKSO S COV=$S($P(^DPT(DFN,"S",Y,0),U,11)=1:" (COLLATERAL)",1:""),HY=Y,SSC=^(0),SDAT16=$S($D(^SD(409.1,+$P(SSC,U,16),0)):$P(^(0),U),1:"")
"RTN","SDM",75,0)
 F SDJ=3,4,5 I $P(^DPT(DFN,"S",HY,0),U,SDJ)]"" S Y=$P(^(0),U,SDJ) W:$X>9 ! W ?10,"*" D DT^SDM0 W ?32,$S(SDJ=3:"LAB",SDJ=4:"XRAY",1:"EKG")
"RTN","SDM",76,0)
 S SDLN="" F J=0:0 S J=$O(^SC(+SSC,"S",HY,1,J)) Q:'J  I $D(^(J,0)),+^(0)=DFN S SDLN="("_$P(^(0),U,2)_" MINUTES) " Q
"RTN","SDM",77,0)
 S Y=HY Q
"RTN","SDM",78,0)
 ;
"RTN","SDM",79,0)
END D KVAR^VADPT K SDAPTYP,SDSC,%,%DT,ASKC,COV,DA,DIC,DIE,DP,DR,HEY,HSI,HY,J,SB,SC,SDDIF,SDJ,SDLN,SD17,SDMAX,SDU,SDYC,SI,SL,SSC,STARTDAY,STR
"RTN","SDM",80,0)
 K WY,X,XX,Y,S,SD,SDAP16,SDEDT,SDTY,SM,SS,ST,ARG,CCX,CCXN,HX,I,PXR,SDINA,SDW,COLLAT,SDDIS I $D(SDMM) K:'SDMM SDMM
"RTN","SDM",81,0)
 I '$D(SDMLT) K SDMLT1
"RTN","SDM",82,0)
 Q
"RTN","SDM",83,0)
 ;
"RTN","SDM",84,0)
OERR S XQORQUIT=1 Q:'$D(ORVP)  S DFN=+ORVP G SDM
"RTN","SDM",85,0)
 ;
"RTN","SDM",86,0)
HELP W !,"YES - TO DISPLAY FUTURE APPOINTMENTS",!,"NO - FUTURE APPOINTMENTS NOT DISPLAYED" G PEND
"RTN","SDM",87,0)
 ;
"RTN","SDM",88,0)
CNAM(SDCL) ;Return clinic name
"RTN","SDM",89,0)
 ;Input: SDCL=clinic ien
"RTN","SDM",90,0)
 N SDX
"RTN","SDM",91,0)
 S SDX=$P($G(^SC(+SDCL,0)),U)
"RTN","SDM",92,0)
 Q $S($L(SDX):SDX,1:"this clinic")
"RTN","SDMULT")
0^6^B10120175
"RTN","SDMULT",1,0)
SDMULT ;ALB/TMP - MAKE MULTI-CLINIC APPOINTMENTS ; 02 Jan 2000  6:30 PM
"RTN","SDMULT",2,0)
 ;;5.3;Scheduling;**63,168,380**;Aug 13, 1993
"RTN","SDMULT",3,0)
 I '$D(DT) D DT^SDUTL
"RTN","SDMULT",4,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K SDNEXT,SDC1,IOP
"RTN","SDMULT",5,0)
1 K SDAPTYP S SDMLT="",DIC="^DPT(",DIC(0)="AQZME" D ^DIC S DFN=+Y I "^"[X K FND S SDNEXT="" K SDMLT,SDAPTYP G END^SDMULT0
"RTN","SDMULT",6,0)
 G:Y<0 1 D 2^VADPT I +VADM(6) W !?10,*7,"PATIENT HAS DIED." G 1
"RTN","SDMULT",7,0)
 S SDW=$S('$D(^DPT(DFN,.1)):"",^(.1)]"":^(.1),1:""),(SDMM,COLLAT)=0
"RTN","SDMULT",8,0)
 S SDXXX="" D EN^SDM I $D(SDMLT1) K FND G END^SDMULT0
"RTN","SDMULT",9,0)
 D:'$D(DT) DT^SDUTL S SDCT=0,SDMAX=DT K SDC W !!,"YOU MAY SELECT FROM 2-4 CLINICS",!
"RTN","SDMULT",10,0)
RD S DIC="^SC(",DIC(0)="AEMQZ",DIC("S")="I $P(^(0),""^"",3)=""C"",'$G(^(""OOS""))",DIC("A")="Select CLINIC: " D ^DIC K DIC("S"),DIC("A") I X="",SDCT>1 G START^SDMULT0
"RTN","SDMULT",11,0)
 I $S(X["^":1,'$D(DTOUT):0,$D(DTOUT)&DTOUT:1,1:0) K FND G END^SDMULT0
"RTN","SDMULT",12,0)
 I $D(SDNEXT) S SDMAX=DT G:X]"" C G END^SDMULT0
"RTN","SDMULT",13,0)
 I X']"" W !,*7,"MUST HAVE MORE THAN 1 CLINIC" G RD
"RTN","SDMULT",14,0)
 N SDRES S SDRES=$$CLNCK^SDUTL2(+Y,1)
"RTN","SDMULT",15,0)
 I 'SDRES W !,?5,"Clinic MUST be corrected before continuing." G RD
"RTN","SDMULT",16,0)
 G:Y'>0 RD I $D(SDC1(+Y)) W !,*7,"This clinic has already been selected" G RD
"RTN","SDMULT",17,0)
C I $D(^SC(+Y,"SDPROT")),$P(^("SDPROT"),"^",1)="Y",'$D(^SC(+Y,"SDPRIV",DUZ)) W !,*7,"Access to ",$$CNAM(+Y)," is prohibited!",!,"Only users with a special code may access this clinic.",*7 G RD
"RTN","SDMULT",18,0)
 I '$D(SDNEXT) S SDOK=0,SC=+Y,SDHY=Y,Y=$S($D(^SC(SC,"SL")):$P(^("SL"),"^",5),1:"") K SD D EN2^SDM S Y=SDHY K SDHY I 'SDOK W !,"CLINIC IGNORED!!" G RD
"RTN","SDMULT",19,0)
 K SDOK I '$D(^SC(+Y,"SL")) W !,"No appt length specified - cannot book appts" G RD
"RTN","SDMULT",20,0)
 S SL=^("SL"),SDL=+SL ;NAKED REFERENCE ^SC(IFN,"SL")
"RTN","SDMULT",21,0)
LEN I $P(SL,"^",2)]"" W !,"  APPOINTMENT LENGTH DESIRED: ",+SL R "// ",X:DTIME G:$L(X)>3 LEN G:X["^" END^SDMULT0 I X]"" S POP=0,S=X D L^SDM1 G:POP LEN S SDL=S
"RTN","SDMULT",22,0)
 S X2=$S($D(^SC(+Y,"SDP")):$P(^("SDP"),"^",2),1:0),X1=DT D C^%DTC S SDMAX=$S('(X-DT):SDMAX,'(SDMAX-DT):X,X<SDMAX:X,1:SDMAX)
"RTN","SDMULT",23,0)
 I SDMAX'>DT W !,*7,$P(Y,"^",2)," has max # of days for future booking undef or = 0" G RD
"RTN","SDMULT",24,0)
 S SDC1(+Y)=$P(Y,U,2)_"^"_SDL,SDCT=SDCT+1,SDC(SDCT)=Y,X2=$S($D(^SC(+Y,"SDP")):$P(^("SDP"),"^",2),1:0),X1=DT D C^%DTC S SDMAX=$S('(X-DT):SDMAX,'(SDMAX-DT):X,X<SDMAX:X,1:SDMAX)
"RTN","SDMULT",25,0)
 G DT^SDNEXT:$D(SDNEXT),START^SDMULT0:'(SDCT#4),RD
"RTN","SDMULT",26,0)
 ;
"RTN","SDMULT",27,0)
 ;
"RTN","SDMULT",28,0)
CNAM(SDCL) ;Return clinic name
"RTN","SDMULT",29,0)
 ;Input: SDCL=clinic ien
"RTN","SDMULT",30,0)
 N SDX
"RTN","SDMULT",31,0)
 S SDX=$P($G(^SC(+SDCL,0)),U)
"RTN","SDMULT",32,0)
 Q $S($L(SDX):SDX,1:"this clinic")
"RTN","SDNACT")
0^3^B18897332
"RTN","SDNACT",1,0)
SDNACT ;ALB/TMP - INACTIVATE A CLINIC ; 30 APR 85  9:02 am 
"RTN","SDNACT",2,0)
 ;;5.3;Scheduling;**63,380**;Aug 13, 1993
"RTN","SDNACT",3,0)
 S:'$D(DTIME) DTIME=300 I '$D(DT) D DT^SDUTL
"RTN","SDNACT",4,0)
 S SDAY="Sun^Mon^Tues^Wednes^Thurs^Fri^Satur",SDZQ=1
"RTN","SDNACT",5,0)
 D DT^DICRW S DIC="^SC(",DIC(0)="AEMZQ",DIC("A")="Select CLINIC NAME: ",DIC("S")="I $P(^(0),""^"",3)=""C"",'$G(^(""OOS""))"
"RTN","SDNACT",6,0)
 D ^DIC K DIC("A"),DIC("S") G:Y<0 END S SC=+Y,SDX="",SDX1=9999999
"RTN","SDNACT",7,0)
 N SDRES S SDRES=$$CLNCK^SDUTL2(SC,0)
"RTN","SDNACT",8,0)
 I 'SDRES D
"RTN","SDNACT",9,0)
 .W !,?5,"WARNING:     Clinic's Stop Code ",$P(SDRES,U,2)
"RTN","SDNACT",10,0)
 .W !,?5,"Recommend:   Clinic be corrected."
"RTN","SDNACT",11,0)
 I $D(^SC(SC,"I")),+^("I")'=0,+^("I")'>DT,+$P(^("I"),"^",2)'>0 W *7,!,"This clinic was inactivated effective: " S Y=+^("I") D DTS^SDUTL W Y G END
"RTN","SDNACT",12,0)
 I $D(^SC(SC,"I")),+^("I")>DT G CHECK
"RTN","SDNACT",13,0)
 I $D(^SC(SC,"I")),+^("I")'>DT,+$P(^("I"),"^",2)'<DT W !,*7,"Clinic is already inactive until " S Y=+$P(^("I"),"^",2) D DTS^SDUTL W Y G END
"RTN","SDNACT",14,0)
D S %DT="AEFX",%DT("A")="Enter Date Clinic is to be Inactivated: " D ^%DT K %DT G:Y'>0 END S SDDATE=Y I Y<DT W "??",!,*7,"Inactivate date must be greater than or equal to today's date" G D
"RTN","SDNACT",15,0)
 I SDX<9999999,Y>SDX1,SDX1 W "??",!,*7,"Inactivate date must be < reactivate date" G D
"RTN","SDNACT",16,0)
 S POP=0 F I=SDDATE-.0001:0 S I=$O(^SC(SC,"S",I)) Q:'I!(POP)!(SDDATE'<SDX1&(SDX1))  F I1=0:0 S I1=$O(^SC(SC,"S",I,1,I1)) Q:'I1  I $P(^(I1,0),"^",9)'="C" S POP=1 Q
"RTN","SDNACT",17,0)
 I POP W *7,!,"Can't inactivate the clinic - appointments exist beyond " S Y=SDDATE D DT^DIQ G END
"RTN","SDNACT",18,0)
 I SDX'="" D CHG1 G OVR
"RTN","SDNACT",19,0)
 K SDN S ^SC(SC,"I")="",X=SDDATE D DOW^SDM0 S SDN(Y)=SDDATE F I=1:1:6 S X2=1,X1=X D C^%DTC,DOW^SDM0 S SDN(Y)=X
"RTN","SDNACT",20,0)
 F I=0:1:6 S J=$O(^SC(SC,"T"_I,SDN(I))) D GOT
"RTN","SDNACT",21,0)
OVR F I=SDDATE-.0001:0 S I=$O(^SC(SC,"ST",I)) Q:'I!(I>SDX1)  K ^(I)
"RTN","SDNACT",22,0)
 F I=SDDATE-.0001:0 S I=$O(^SC(SC,"T",I)) Q:'I!(I>SDX1)  K ^(I)
"RTN","SDNACT",23,0)
 F I=SDDATE-.0001:0 S I=$O(^SC(SC,"OST",I)) Q:'I!(I>SDX1)  K ^(I)
"RTN","SDNACT",24,0)
 S ^SC(SC,"I")=SDDATE_"^"_$P(^SC(SC,"I"),"^",2)
"RTN","SDNACT",25,0)
 W !!,"Clinic will be inactivated effective " S Y=SDDATE D DTS^SDUTL W Y G END
"RTN","SDNACT",26,0)
 ;
"RTN","SDNACT",27,0)
CHECK W *7,!,"This clinic is to be inactivated as of " S SDX=+^("I"),Y=SDX D DTS^SDUTL W Y S SDX1=+$P(^("I"),"^",2),Y=SDX1 I Y D DTS^SDUTL W " and reactivated as of ",Y ;NAKED REFERENCE - ^SC(DFN,"I")
"RTN","SDNACT",28,0)
 S %=1 W !,"Do you want to change the inactivate date" D YN^DICN I '% W !,"RESPOND YES OR NO" G CHECK
"RTN","SDNACT",29,0)
 G D:'(%-1),END:(%<0),DEL
"RTN","SDNACT",30,0)
 ;
"RTN","SDNACT",31,0)
DEL S %=2 W !,"Do you want to delete the inactivate date" D YN^DICN I '% W !,"RESPOND YES (Y) OR NO (N)" G DEL
"RTN","SDNACT",32,0)
 G:(%-1) END
"RTN","SDNACT",33,0)
 I '$D(^SC(SC,"SL")) W !,*7,"Cannot Delete - 'SL' node doesn't exist" G END
"RTN","SDNACT",34,0)
 G ^SDNACT1
"RTN","SDNACT",35,0)
CHG1 K SDN S X1=SDDATE,X2=6 D C^%DTC S SDNL=X,X=SDDATE D DOW^SDM0 S SDN(Y)=X
"RTN","SDNACT",36,0)
 F I=1:1:6 S X1=X,X2=1 D C^%DTC,DOW^SDM0 S SDN(Y)=X
"RTN","SDNACT",37,0)
 S X1=SDX,X2=6 D C^%DTC S SDOL=X,X1=SDX,X2=-1 D C^%DTC
"RTN","SDNACT",38,0)
 F I=0:0 S X2=1,X1=X D C^%DTC Q:X>SDOL  D DOW^SDM0 S:$D(^SC(SC,"T"_Y))&($O(^SC(SC,"T"_Y,0))'=9999999) ^SC(SC,"T"_Y,SDN(Y),1)=$S($D(^SC(SC,"T"_Y,X,1)):^(1),1:""),^(0)=SDN(Y) D A1,A
"RTN","SDNACT",39,0)
 I SDDATE<SDX F I=0:1:6 F J=SDNL:0 S J=$O(^SC(SC,"T"_I,J)) Q:'J!(J'<SDX)  K ^SC(SC,"T"_I,J)
"RTN","SDNACT",40,0)
 Q
"RTN","SDNACT",41,0)
A1 S:'$D(^SC(SC,"T"_Y,9999999,1)) ^(1)="",^(0)=9999999 K:(SDN(Y)-X) ^SC(SC,"T"_Y,X)
"RTN","SDNACT",42,0)
 Q
"RTN","SDNACT",43,0)
A I $O(^SC(SC,"T"_Y,SDN(Y)))>0 S SD=$O(^SC(SC,"T"_Y,SDN(Y))) S:^SC(SC,"T"_Y,SD,1)]"" ^SC(SC,"T"_Y,SDN(Y),1)=^SC(SC,"T"_Y,SD,1),^(0)=SDN(Y),^SC(SC,"T"_Y,SD,1)=""
"RTN","SDNACT",44,0)
 I SDX'>SDDATE,$O(^SC(SC,"ST",SDX-.1))>0 F Z=SDX-.1:0 S Z=$O(^SC(SC,"ST",Z)) Q:'Z!(SDX1&(Z'<SDX1))  K ^SC(SC,"ST",Z)
"RTN","SDNACT",45,0)
 K SD,Z Q
"RTN","SDNACT",46,0)
GOT S SD=$O(^SC(SC,"T"_I,0))
"RTN","SDNACT",47,0)
 I J>0,SD'=9999999 S ^SC(SC,"T"_I,SDN(I),1)=^SC(SC,"T"_I,J,1),^(0)=SDN(I) K ^SC(SC,"T"_I,J) F J1=J:0 S J1=$O(^SC(SC,"T"_I,J1)) Q:'J1  K ^SC(SC,"T"_I,J1)
"RTN","SDNACT",48,0)
 S ^SC(SC,"T"_I,9999999,1)="",^(0)=9999999
"RTN","SDNACT",49,0)
 Q
"RTN","SDNACT",50,0)
END K A,DA,CNT,D0,DH,DO,DOW,I,I1,J,J1,POP,SC,SD,SD0,SDAY,SDEL,SDDATE,SDFSW,SDN,SDNL,SDOL,SDREACT,SI,SL,STARTDAY,SDX,SDX1,SDZQ,X,X1,X2,Y,Z Q
"RTN","SDREACT")
0^1^B19399143
"RTN","SDREACT",1,0)
SDREACT ;ALB/TMP - REACTIVATE A CLINIC ; 30 APR 85  9:02 am 
"RTN","SDREACT",2,0)
 ;;5.3;Scheduling;**63,167,380**;Aug 13, 1993
"RTN","SDREACT",3,0)
 S:'$D(DTIME) DTIME=300 I '$D(DT) D DT^SDUTL
"RTN","SDREACT",4,0)
 S DIC="^SC(",DIC(0)="AEMZQ",DIC("A")="Select CLINIC NAME: ",DIC("S")="I $P(^(0),""^"",3)=""C"",'$G(^(""OOS""))"
"RTN","SDREACT",5,0)
 D ^DIC K DIC G:Y<0 END S DA=+Y I $S('$D(^SC(DA,"I")):1,'$P(^("I"),"^",1):1,1:0) W *7,!,"NOT INACTIVE!!" G SDREACT
"RTN","SDREACT",6,0)
 S SDX=+^SC(DA,"I"),SDX1=+$P(^("I"),"^",2) G:'SDX1 PREACT
"RTN","SDREACT",7,0)
 I SDX1>DT W !,*7,"Clinic is inactive as of " S Y=SDX D DTS^SDUTL W Y S Y=SDX1 D DTS^SDUTL W !,?5,"and is already scheduled to be reactivated as of ",Y G CHG
"RTN","SDREACT",8,0)
 W *7,!,"Clinic cannot be reactivated - not inactive" G SDREACT
"RTN","SDREACT",9,0)
PREACT N SDRES S SDRES=$$CLNCK^SDUTL2(DA,1)
"RTN","SDREACT",10,0)
 I 'SDRES W !,?5,"Clinic MUST be corrected before continuing." G SDREACT
"RTN","SDREACT",11,0)
REACT S SDREACT="" S %DT("A")="Enter date clinic is to be reactivated: ",%DT="AEX" D ^%DT G:Y<0 SDREACT
"RTN","SDREACT",12,0)
 K %DT S (SD,SDH,SDRE)=Y,(SDINACT,SDIN)=SDX
"RTN","SDREACT",13,0)
 I SD'>SDINACT W !,*7,"Reactivate date must be later than inactivate date" G REACT
"RTN","SDREACT",14,0)
 G:'$D(^SC(DA,"SL")) SDREACT S SL=^("SL"),X=$P(^("SL"),"^",3),STARTDAY=$S($L(X):X,1:8),SI=$P(^("SL"),"^",6),SDFSW="",X=SD,SDRE1=SDRE D DOW^SDM0 S DOW=Y
"RTN","SDREACT",15,0)
 S Y=SD D DTS^SDUTL W !!,"AVAILABILITY DATE: ",Y,"  (" S Y=SD D DT^DIQ W ")" S (SDZQ,SDEL,POP)=0 D EN1^SDB0
"RTN","SDREACT",16,0)
 I '$D(SDREACT) W *7,!,"Clinic not reactivated!!!" G END
"RTN","SDREACT",17,0)
 F I=0:1:6 F I1=0:0 S I1=$O(^SC(DA,"T"_I,I1)),I2=$S(I1'>0:0,'$D(^(I1,1)):0,^(1)]"":1,1:0) Q:I2  I I1'>0 D CLEAN Q
"RTN","SDREACT",18,0)
 S $P(^SC(DA,"I"),"^",2)=SDH,Y=SDH D DTS^SDUTL W !,*7,"Clinic will be reactivated effective ",Y
"RTN","SDREACT",19,0)
MORE W !,"Do you want to set up additional availabilities for this clinic now" S %=1 D YN^DICN I '% W !,"ANSWER (Y)ES OR (N)O" G MORE
"RTN","SDREACT",20,0)
 G:(%-1)!(%<0) END S SDZQ=1 G EN^SDB
"RTN","SDREACT",21,0)
 ;
"RTN","SDREACT",22,0)
CHG W !,"Do you want to change the reactivate date" S %=1 D YN^DICN I '% W !,"RESPOND YES (Y) OR NO (N)" G CHG
"RTN","SDREACT",23,0)
 G END:(%<0),DEL:(%-1)
"RTN","SDREACT",24,0)
DT R !,"Enter new reactivate date: ",X:DTIME G:"^"[X END S %DT="EX" D ^%DT G:Y<0 DT
"RTN","SDREACT",25,0)
 I Y'>SDX W *7,!,"Must be > inactivate date" G DT
"RTN","SDREACT",26,0)
 I Y=SDX1 W *7,!,"That is the current reactivate date" G DT
"RTN","SDREACT",27,0)
 S SDRE=+Y
"RTN","SDREACT",28,0)
 S POP=0 I SDRE>SDX1 S K=SDRE_.9 F I=SDX1-.1:0 S I=$O(^SC(DA,"S",I)) Q:I'>0!(I>K)  F J=0:0 S J=$O(^SC(DA,"S",I,1,J)) Q:J'>0  I $P(^(J,0),"^",9)'["C" S POP=1 Q
"RTN","SDREACT",29,0)
 I POP W !,"Valid appointments exist before the new reactivate date ... must reactivate before " S Y=I D DTS^SDUTL W Y G REACT
"RTN","SDREACT",30,0)
 K SDN S X=SDRE D NEW
"RTN","SDREACT",31,0)
 K SDO S X=SDX1 D DOW^SDM0 S SDO(Y)=X F I=1:1:6 S X1=X,X2=1 D C^%DTC,DOW^SDM0 S SDO(Y)=X
"RTN","SDREACT",32,0)
 I SDRE>SDX1 D C1
"RTN","SDREACT",33,0)
 F I=0:1:6 I $D(^SC(DA,"T"_I,SDO(I),1)) S ^SC(DA,"T"_I,SDN(I),1)=^SC(DA,"T"_I,SDO(I),1),^(0)=SDN(I) I SDN(I)'=SDO(I) K ^SC(DA,"T"_I,SDO(I))
"RTN","SDREACT",34,0)
 S $P(^SC(DA,"I"),"^",2)=SDRE W !,"Clinic will now be reactivated effective " S Y=SDRE D DTS^SDUTL W Y G END
"RTN","SDREACT",35,0)
C1 F I=SDX-.1:0 S I=$O(^SC(DA,"ST",I)) Q:I'>0!(I'<SDRE)  K ^(I)
"RTN","SDREACT",36,0)
 F I=SDX-.1:0 S I=$O(^SC(DA,"T",I)) Q:I'>0!(I'<SDRE)  K ^(I)
"RTN","SDREACT",37,0)
 F I=SDX-.1:0 S I=$O(^SC(DA,"OST",I)) Q:I'>0!(I'<SDRE)  K ^(I)
"RTN","SDREACT",38,0)
 Q
"RTN","SDREACT",39,0)
DEL S POP=0 F I=SDX1-.1:0 S I=$O(^SC(DA,"S",I)) Q:I'>0  F J=0:0 S J=$O(^SC(DA,"S",I,1,J)) Q:J'>0  I $P(^(J,0),"^",9)'["C" S POP=1 Q
"RTN","SDREACT",40,0)
 G:POP END
"RTN","SDREACT",41,0)
D1 S %=2 W !,"Do you want to delete the reactivate date" D YN^DICN I '% W !,"RESPOND YES (Y) OR NO (N)" G D1
"RTN","SDREACT",42,0)
 G END:(%-1)
"RTN","SDREACT",43,0)
 F I=SDX1-.1:0 S I=$O(^SC(DA,"T",I)) Q:I'>0  K ^(I)
"RTN","SDREACT",44,0)
 K SDN S X=SDX D NEW
"RTN","SDREACT",45,0)
 F I=0:1:6 F J=SDN(I):0 S J=$O(^SC(DA,"T"_I,J)) S:J'>0 ^SC(DA,"T"_I,9999999,1)="",^(0)=9999999 Q:J'>0  K:J'=9999999 ^SC(DA,"T"_I,J) I J=9999999 S ^SC(DA,"T"_I,J,1)="",^(0)=J Q
"RTN","SDREACT",46,0)
 F I=SDX1-.1:0 S I=$O(^SC(DA,"OST",I)) Q:I'>0  K ^(I)
"RTN","SDREACT",47,0)
 F I=SDX1-.1:0 S I=$O(^SC(DA,"ST",I)) Q:I'>0  K ^(I)
"RTN","SDREACT",48,0)
 S ^SC(DA,"I")=SDX
"RTN","SDREACT",49,0)
 W !,*7,"Reactivation date DELETED!!" G END
"RTN","SDREACT",50,0)
 ;
"RTN","SDREACT",51,0)
NEW D DOW^SDM0 S SDN(Y)=X F I=1:1:6 S X1=X,X2=1 D C^%DTC,DOW^SDM0 S SDN(Y)=X
"RTN","SDREACT",52,0)
 Q
"RTN","SDREACT",53,0)
CLEAN F I2=0:0 S I2=$O(^SC(DA,"T"_I,I2)) Q:I2'>0  K ^(I2)
"RTN","SDREACT",54,0)
 Q
"RTN","SDREACT",55,0)
 ;
"RTN","SDREACT",56,0)
END K CNT,D0,DA,DIC,DH,DO,DOW,H1,H2,HSDX,SDX1,SDZQ,SI,I,I1,I2,J,K,LT,M1,M2,NSL,POP,SC,SD,SDH,SDFSW,SDIN,SDINACT,SDN,SDO,SDRE,SDRE1,SDREACT,SDTOP,SI,SL,SLT,STARTDAY,STIME,T1,T2,X,X1,X2,Y Q
"RTN","SDUNC")
0^2^B22202942
"RTN","SDUNC",1,0)
SDUNC ;MAN/GRR - RESTORE CLINIC AVAILABILITY ; 24 JUL 2003  10:08 am
"RTN","SDUNC",2,0)
 ;;5.3;Scheduling;**79,303,380**;Aug 13, 1993
"RTN","SDUNC",3,0)
 D DT^DICRW S DIC=44,DIC(0)="MEQA",DIC("S")="I $P(^(0),""^"",3)=""C"",'$G(^(""OOS""))",DIC("A")="Select CLINIC NAME: " D ^DIC K DIC("S"),DIC("A") Q:"^"[X  G:Y<0 SDUNC Q:'$D(^SC(+Y,"SL"))
"RTN","SDUNC",4,0)
 S SC=+Y,SL=^("SL") ;NAKED REFERENCE - ^SC(IFN,"SL")
"RTN","SDUNC",5,0)
 N SDRES S SDRES=$$CLNCK^SDUTL2(SC,1)
"RTN","SDUNC",6,0)
 I 'SDRES W !,?5,"Clinic MUST be corrected before continuing." G SDUNC
"RTN","SDUNC",7,0)
 S %DT="AEXF",%DT("A")="RESTORE '"_$P(Y,U,2)_"' FOR WHAT DATE: " D ^%DT K %DT Q:Y<0
"RTN","SDUNC",8,0)
 S (SD,CDATE)=Y,%=$P(SL,U,6),SI=$S(%="":4,%<3:4,%:%,1:4),%=$P(SL,U,3),STARTDAY=$S(%:%,1:8)
"RTN","SDUNC",9,0)
 K SDIN,SDIN1,SDRE,SDRE1 I $D(^SC(SC,"I")) S SDIN=+^("I"),SDRE=+$P(^("I"),"^",2),Y=SDIN D DTS^SDUTL S SDIN1=Y,Y=SDRE D DTS^SDUTL S SDRE1=Y
"RTN","SDUNC",10,0)
 I $S('$D(SDIN):0,'SDIN:0,SDIN>CDATE:0,SDRE'>CDATE&(SDRE):0,1:1) W !,*7,"Clinic is inactive ",$S(SDRE:"from ",1:"as of "),SDIN1,$S(SDRE:" to "_SDRE1,1:"") G SDUNC
"RTN","SDUNC",11,0)
 K SDIN,SDIN1,SDRE,SDRE1 G:'$D(^SC(SC,"ST",SD,1)) NOWAY
"RTN","SDUNC",12,0)
 I $D(^SC(SC,"ST",SD,1)),^(1)'["CANCELLED"&(^(1)'["X") G NOWAY
"RTN","SDUNC",13,0)
 I $D(^SC(SC,"ST",SD,9)) I $D(^SC(SC,"OST",SD,1)) D FIX Q:^SC(SC,"ST",SD,1)["X"&('$D(SDFR1))  S ^SC(SC,"ST",SD,1)=HOLD K:^(1)'["X" ^SC(SC,"ST",SD,"CAN") W !,"RESTORED!",*7 D CHK Q
"RTN","SDUNC",14,0)
 I $D(^SC(SC,"ST",SD,9)),'$D(^SC(SC,"OST",SD,1)) G ERRM^SDUNC1
"RTN","SDUNC",15,0)
 D B I '$D(DH) G NOPAT
"RTN","SDUNC",16,0)
 Q:^SC(SC,"ST",SD,1)["X"&('$D(SDFR1))  S ^SC(SC,"ST",SD,0)=SD,^SC(SC,"ST",SD,1)=DH G N
"RTN","SDUNC",17,0)
NOWAY W !,*7,"CLINIC HAS NOT BEEN CANCELLED FOR THAT DATE, SO IT CANNOT BE RESTORED",*7 G SDUNC
"RTN","SDUNC",18,0)
NOPAT W !,*7,"NO UPCOMING OR INDEFINITE APPOINTMENT PATTERN EXISTS FOR DAY OF WEEK,",!,"CREATE 'AVAILABILITY' PATTERN THRU 'CLINIC SETUP', THEN RESTORE AGAIN",*7 G SDUNC
"RTN","SDUNC",19,0)
B S X=SD D DOW^SDM0 S DOW=Y,SS=$O(^SC(SC,"T"_Y,X)) I SS'="",$D(^(SS,1)),^(1)]"" S DH=$P("SU^MO^TU^WE^TH^FR^SA","^",DOW+1)_" "_$E(SD,6,7)_$J("",SI+SI-6)_^(1),DO=X+1,DA(1)=SC,HOLD=DH D FIX2
"RTN","SDUNC",20,0)
 Q
"RTN","SDUNC",21,0)
N I '$F(^SC(SC,"ST",SD,1),"[") K ^SC(SC,"ST",SD) W !,*7,"CLINIC DOES NOT MEET ON THAT DAY" G SDUNC
"RTN","SDUNC",22,0)
 K:^SC(SC,"ST",SD,1)'["X" ^SC(SC,"ST",SD,"CAN") W !,"RESTORED!",*7 D CHK Q
"RTN","SDUNC",23,0)
FIX I ^SC(SC,"ST",SD,1)["X" S SDREST=^SC(SC,"OST",SD,1) D SEL Q
"RTN","SDUNC",24,0)
 S HOLD=^SC(SC,"OST",SD,1)
"RTN","SDUNC",25,0)
 Q
"RTN","SDUNC",26,0)
CHK F N1=SD:0 S N1=$O(^SC(SC,"S",N1)) Q:'N1!(N1\1-SD)  I $D(^SC(SC,"S",N1,"MES")) D KMES I $D(SDFR1),'$D(^("MES")) Q
"RTN","SDUNC",27,0)
 Q
"RTN","SDUNC",28,0)
FIX2 Q:^SC(SC,"ST",SD,1)'["X"
"RTN","SDUNC",29,0)
 S SDREST=DH D SEL Q:'$D(SDFR1)  S DH=HOLD
"RTN","SDUNC",30,0)
 Q
"RTN","SDUNC",31,0)
SEL K SDFR1 Q:'$D(^SC(SC,"SL"))  S SL=^("SL"),%=$P(SL,U,6),SI=$S(%="":4,%<3:4,%:%,1:4),%=$P(SL,U,3),STARTDAY=$S(%:%,1:8)
"RTN","SDUNC",32,0)
 W !,"Clinic has been cancelled for the following periods:",!
"RTN","SDUNC",33,0)
 K SDTEMP,SDZZ S SDZZ=0 F I=SD:0 S I=$O(^SC(SC,"SDCAN",I)) Q:'I!(I\1-SD)  S SDZZ=SDZZ+1,X=I D TM S SDFR=X,SDFRX=X1,X="."_$P(^(I,0),"^",2) D TM S SDTO=X,SDTEMP(SDFRX_"-"_X1)=SDFR_"^"_SDTO,SDZZ(SDZZ)=SDFRX_"-"_X1
"RTN","SDUNC",34,0)
 F I=SD:0 S I=$O(^SC(SC,"S",I)) Q:'I!(I\1-SD)  I $D(^SC(SC,"S",I,"MES")),'$D(^SC(SC,"SDCAN",I)) S X=I D TM S SDFRX=X1,SDFR=X,X="."_$E(^SC(SC,"S",I,"MES"),17,20) D TM S SDZZ=SDZZ+1,SDTEMP(SDFRX_"-"_X1)=SDFR_"^"_X,SDZZ(SDZZ)=SDFRX_"-"_X1
"RTN","SDUNC",35,0)
 F I1=0:0 S I1=$O(SDZZ(I1)) Q:'I1  S I=SDTEMP(SDZZ(I1)) W !,?9,"(",$J(I1,2),") ","From: ",$J($P(I,"^",1),8),"   To: ",$J($P(I,"^",2),8)
"RTN","SDUNC",36,0)
A K SDFRX,X1,SDFR,SDTO R !!,"RESTORE WHICH PERIOD?: ",X:DTIME Q:"^"[X
"RTN","SDUNC",37,0)
 I X?1"?".E W !,"Enter the # that precedes the time period you want to restore." G A
"RTN","SDUNC",38,0)
 S SDR=X I $D(SDZZ(SDR)),$D(SDTEMP(SDZZ(SDR))) W "      ",$P(SDTEMP(SDZZ(SDR)),"^",1)," - ",$P(SDTEMP(SDZZ(SDR)),"^",2) G ROK
"RTN","SDUNC",39,0)
 W !,*7,"INVALID CHOICE, TRY AGAIN" G A
"RTN","SDUNC",40,0)
ROK S X=$P(SDZZ(SDR),"-",1) D TC S FR=X,SDBEG=%+SI+SI,X=$P(SDZZ(SDR),"-",2) D TC S TO=X,SDEND=%+SI+SI
"RTN","SDUNC",41,0)
 S SDFR1=CDATE+(FR/10000) K SDTEMP,SDZZ,SDR
"RTN","SDUNC",42,0)
 S HOLD=^SC(SC,"ST",SD,1),HOLD=$E(HOLD,1,SDBEG-1)_$E(SDREST,SDBEG,SDEND)_$E(HOLD,SDEND+1,80) K ^SC(SC,"SDCAN",SDFR1) I $D(^SC(SC,"SDCAN",0)) S CNT=$P(^(0),U,4),CNT=$S(CNT>0:CNT-1,1:0),^(0)=$P(^(0),U,1,3)_U_CNT K CNT
"RTN","SDUNC",43,0)
 K SDBEG,SDEND,SDANS,SI,STARTDAY,FR,TO Q
"RTN","SDUNC",44,0)
KMES I '$D(SDFR1) K ^("MES") Q  ;NAKED REFERENCE - ^SC(IFN,"S",DATE,"MES")
"RTN","SDUNC",45,0)
 I $D(SDFR1),N1=SDFR1 K ^("MES") Q  ;NAKED REFERENCE - ^SC(IFN,"S",DATE,"MES")
"RTN","SDUNC",46,0)
 Q
"RTN","SDUNC",47,0)
TC S %=$E(X,3,4),%=X\100-STARTDAY*SI+(%*SI\60)*2
"RTN","SDUNC",48,0)
 Q
"RTN","SDUNC",49,0)
TM S X=$E($P(X,".",2)_"0000",1,4),X1=X,%=X>1159 S:X>1259 X=X-1200 S X=X\100_":"_$E(X#100+100,2,3)_" "_$E("AP",%+1)_"M" Q
"RTN","SDUTL2")
0^4^B47873660
"RTN","SDUTL2",1,0)
SDUTL2 ;ALB/CAW - Misc. utilities ; 7/12/00 1:05pm
"RTN","SDUTL2",2,0)
 ;;5.3;Scheduling;**20,71,132,149,175,193,220,258,380**;Aug 13, 1993
"RTN","SDUTL2",3,0)
 ;
"RTN","SDUTL2",4,0)
 ;
"RTN","SDUTL2",5,0)
FYNUNK(SD) ; return YES, NO, UNKNOWN
"RTN","SDUTL2",6,0)
 ;  input:               SD=internal piece
"RTN","SDUTL2",7,0)
 ; output:   [returned]  Y=YES, N=NO, U=UNKNOWN
"RTN","SDUTL2",8,0)
 Q $S(SD="Y":"YES",SD="N":"NO",SD="U":"UNKNOWN",1:"")
"RTN","SDUTL2",9,0)
 ;
"RTN","SDUTL2",10,0)
FMT(DFN) ; return current status of means test in external form
"RTN","SDUTL2",11,0)
 ; input:                DFN=ifn of patient
"RTN","SDUTL2",12,0)
 ; ouput:    [returned]  MT^SMT^LST
"RTN","SDUTL2",13,0)
 ;           MT=external format of current status
"RTN","SDUTL2",14,0)
 ;           SMT=shortened format of current staus
"RTN","SDUTL2",15,0)
 ;           LST=date of last test
"RTN","SDUTL2",16,0)
 ;
"RTN","SDUTL2",17,0)
 N X,Y
"RTN","SDUTL2",18,0)
 S X=$$LST^DGMTU(DFN)
"RTN","SDUTL2",19,0)
 S Y=$P(X,U,4),Y=$S(Y["B":"CAT "_Y,Y["A":"COPAY EX",Y["C":"COPAY REQ",Y["G":"GMT COPAY REQ",Y["R":"REQ",Y["P":"PEND ADJ",Y["N":"NOT REQ",1:"")
"RTN","SDUTL2",20,0)
 Q $P(X,U,3)_U_Y_U_$P(X,U,2)
"RTN","SDUTL2",21,0)
 ;
"RTN","SDUTL2",22,0)
FCO(DFN) ; return current status of copay test in external form
"RTN","SDUTL2",23,0)
 ; input:                DFN=ifn of patient
"RTN","SDUTL2",24,0)
 ; ouput:    [returned]  COT^SCOT^LST
"RTN","SDUTL2",25,0)
 ;           COT=external format of current status
"RTN","SDUTL2",26,0)
 ;           SCOT=shortened format of current staus
"RTN","SDUTL2",27,0)
 ;           LST=date of last test
"RTN","SDUTL2",28,0)
 ;
"RTN","SDUTL2",29,0)
 N X,Y
"RTN","SDUTL2",30,0)
 S X=$$LST^DGMTU(DFN,"",2)
"RTN","SDUTL2",31,0)
 S Y=$P(X,U,4),Y=$S(Y["E":"EXEMPT",Y["M":"NON-EXEMPT",Y["I":"INCOMPLETE",Y["L":"NO LONGER APPL.",1:"")
"RTN","SDUTL2",32,0)
 Q $P(X,U,3)_U_Y_U_$P(X,U,2)
"RTN","SDUTL2",33,0)
 ;
"RTN","SDUTL2",34,0)
XMY(GROUP,SDUZ,SDPOST) ; -- set up XMY for mail group members
"RTN","SDUTL2",35,0)
 ; input: GROUP := mail group efn [required]
"RTN","SDUTL2",36,0)
 ;         SDUZ := send to current user [ 0|no ; 1|yes] [optional]
"RTN","SDUTL2",37,0)
 ;       SDPOST := send to postmaster if XMY is undefined
"RTN","SDUTL2",38,0)
 ;                 [ 0|no ; 1|yes] [optional]
"RTN","SDUTL2",39,0)
 ; output:  XMY := array of users
"RTN","SDUTL2",40,0)
 ;        XMDUZ := message sender set postmaster
"RTN","SDUTL2",41,0)
 ;
"RTN","SDUTL2",42,0)
 N I K XMY
"RTN","SDUTL2",43,0)
 I '$D(SDUZ) N SDUZ S SDUZ=1
"RTN","SDUTL2",44,0)
 I '$D(SDPOST) N SDPOST S SDPOST=1
"RTN","SDUTL2",45,0)
 S XMY("G."_$P($G(^XMB(3.8,GROUP,0)),U))=""
"RTN","SDUTL2",46,0)
 I SDUZ,DUZ S XMY(DUZ)=""
"RTN","SDUTL2",47,0)
 ; makes sure it gets sent to someone
"RTN","SDUTL2",48,0)
 I '$D(XMY),SDPOST S XMY(.5)=""
"RTN","SDUTL2",49,0)
 ; make postmaster the sender so it will show up as new to DUZ
"RTN","SDUTL2",50,0)
 S XMDUZ=.5
"RTN","SDUTL2",51,0)
 Q
"RTN","SDUTL2",52,0)
 ;
"RTN","SDUTL2",53,0)
SCREEN(Y,SDDT) ; -- screen called when entering a provider in the
"RTN","SDUTL2",54,0)
 ; DEFAULT PROVIDER field (#16) or PROVIDER field (#.01) of the PROVIDER
"RTN","SDUTL2",55,0)
 ; multiple (#2600) in the HOSPITAL LOCATION file (#44).
"RTN","SDUTL2",56,0)
 ;
"RTN","SDUTL2",57,0)
 ; Selects active providers with an active entry in the NEW PERSON 
"RTN","SDUTL2",58,0)
 ; file (#200) for PERSON CLASS.
"RTN","SDUTL2",59,0)
 ;
"RTN","SDUTL2",60,0)
 ; INPUT:  Y = ien of file 200
"RTN","SDUTL2",61,0)
 ;         SDDT = today's date
"RTN","SDUTL2",62,0)
 ; OUTPUT: 1 to select; 0 to not select
"RTN","SDUTL2",63,0)
 ;
"RTN","SDUTL2",64,0)
 S:'+$G(SDDT) SDDT=DT I '+$G(Y) Q 0
"RTN","SDUTL2",65,0)
 N SDINACT,SDT,SDY S SDY=0
"RTN","SDUTL2",66,0)
 ; check if provider active
"RTN","SDUTL2",67,0)
 S SDINACT=$G(^VA(200,+Y,"PS"))
"RTN","SDUTL2",68,0)
 Q:'$S(SDINACT']"":1,'+$P(SDINACT,"^",4):1,DT<+$P(SDINACT,"^",4):1,1:0) SDY
"RTN","SDUTL2",69,0)
 S SDT=+$P($G(^VA(200,+Y,0)),U,11)
"RTN","SDUTL2",70,0)
 Q:$S('SDT:0,(SDT<DT):1,1:0) 0
"RTN","SDUTL2",71,0)
 I $$GET^XUA4A72(Y,SDDT)>0 S SDY=1
"RTN","SDUTL2",72,0)
 Q SDY
"RTN","SDUTL2",73,0)
 ;
"RTN","SDUTL2",74,0)
HELP(SDDT) ; -- executable help called when entering a provider in the
"RTN","SDUTL2",75,0)
 ; DEFAULT PROVIDER field (#16) or PROVIDER field (#.01) of the PROVIDER
"RTN","SDUTL2",76,0)
 ; multiple (#2600) in the HOSPITAL LOCATION file (#44), the PROVIDER
"RTN","SDUTL2",77,0)
 ; (#.01) field of the V PROVIDER file (#9000010.06), or in the
"RTN","SDUTL2",78,0)
 ; PROVIDER prompt of the Check-out screen.  display active providers
"RTN","SDUTL2",79,0)
 ; with an active entry in the NEW PERSON file (#200) for PERSON CLASS.
"RTN","SDUTL2",80,0)
 ;
"RTN","SDUTL2",81,0)
 ; INPUT:  SDDT = today's date
"RTN","SDUTL2",82,0)
 ; OUTPUT: display of active providers with an active entry in the NEW
"RTN","SDUTL2",83,0)
 ;         PERSON file (#200) for PERSON CLASS
"RTN","SDUTL2",84,0)
 ;
"RTN","SDUTL2",85,0)
 S:'+$G(SDDT) SDDT=DT
"RTN","SDUTL2",86,0)
 N D,DO,DIC,X
"RTN","SDUTL2",87,0)
 S X="??",DIC="^VA(200,",DIC(0)="EQ",D="B"
"RTN","SDUTL2",88,0)
 S DIC("S")="I $$SCREEN^SDUTL2(Y,SDDT)"
"RTN","SDUTL2",89,0)
 D IX^DIC
"RTN","SDUTL2",90,0)
 Q 
"RTN","SDUTL2",91,0)
 ;
"RTN","SDUTL2",92,0)
SCAN(SDINDEX,SDBEG,SDEND,SDCB,SDFN,SDIR) ; -- api to invoke scan
"RTN","SDUTL2",93,0)
 N SDQID
"RTN","SDUTL2",94,0)
 D OPEN^SDQ(.SDQID)
"RTN","SDUTL2",95,0)
 D INDEX^SDQ(.SDQID,SDINDEX,"SET")
"RTN","SDUTL2",96,0)
 IF SDINDEX="PATIENT/DATE"!(SDINDEX="PATIENT") D PAT^SDQ(.SDQID,SDFN,"SET")
"RTN","SDUTL2",97,0)
 IF SDINDEX="PATIENT/DATE"!(SDINDEX="DATE/TIME") D DATE^SDQ(.SDQID,SDBEG,SDEND,"SET")
"RTN","SDUTL2",98,0)
 D SCANCB^SDQ(.SDQID,SDCB,"SET")
"RTN","SDUTL2",99,0)
 D ACTIVE^SDQ(.SDQID,"TRUE","SET")
"RTN","SDUTL2",100,0)
 D SCAN^SDQ(.SDQID,SDIR)
"RTN","SDUTL2",101,0)
 D CLOSE^SDQ(.SDQID)
"RTN","SDUTL2",102,0)
SCANQ Q
"RTN","SDUTL2",103,0)
 ;
"RTN","SDUTL2",104,0)
MHCLIN(SDCL,SDSC) ;;Determines if Mental health Clinic requiring GAF
"RTN","SDUTL2",105,0)
 ;;This will be a supported call
"RTN","SDUTL2",106,0)
 ;;Determines whether the clinic passed is a Mental Health clinic that requires Gaf 
"RTN","SDUTL2",107,0)
 ;;Input - SDCL = Clinic IEN
"RTN","SDUTL2",108,0)
 ;;        SDSC = DSS Stop Code [Optional]
"RTN","SDUTL2",109,0)
 ;;               For Visit File entries where the Clinic IEN is not available
"RTN","SDUTL2",110,0)
 ;;               but the DSS identifier is.
"RTN","SDUTL2",111,0)
 ;;
"RTN","SDUTL2",112,0)
 ;;Output - 1 = Mental health clinic requiring a Gaf
"RTN","SDUTL2",113,0)
 ;;         0 = Not a clinic requiring a Gaf
"RTN","SDUTL2",114,0)
 N SDNOGAF,SDSTOP,SDCS,SDMH
"RTN","SDUTL2",115,0)
 S SDNOGAF="526,527,528,530,533,536,537,542,545,546,565,566,573,574,579"
"RTN","SDUTL2",116,0)
 ;; Get either the Clinic IEN or the Clinic Stop code
"RTN","SDUTL2",117,0)
 I $G(SDCL) D
"RTN","SDUTL2",118,0)
 . S SDSTOP=$P($G(^SC(SDCL,0)),"^",7)
"RTN","SDUTL2",119,0)
 E  D
"RTN","SDUTL2",120,0)
 . S SDSTOP=$G(SDSC)
"RTN","SDUTL2",121,0)
 ;
"RTN","SDUTL2",122,0)
 S SDCS=$P($G(^DIC(40.7,+SDSTOP,0)),"^",2),SDMH=$S(SDNOGAF[SDCS:0,$E(SDCS)=5:1,1:0)
"RTN","SDUTL2",123,0)
 Q SDMH
"RTN","SDUTL2",124,0)
 ;
"RTN","SDUTL2",125,0)
NEWGAF(DFN) ;;Determine if new GAF Score needed
"RTN","SDUTL2",126,0)
 ;;This will be a supported call
"RTN","SDUTL2",127,0)
 ;;Determines if a new Gaf is required for a patient and retrieves previous Gaf data
"RTN","SDUTL2",128,0)
 ;; If patient is deceased, returns a 0, no new GAF required
"RTN","SDUTL2",129,0)
 ;;
"RTN","SDUTL2",130,0)
 ;;Input - Patient IEN
"RTN","SDUTL2",131,0)
 ;;Output:
"RTN","SDUTL2",132,0)
 ;;       piece 1 = -1 if New Gaf needed and no previous data
"RTN","SDUTL2",133,0)
 ;;               = 1 if New Gaf needed and previous data exists
"RTN","SDUTL2",134,0)
 ;;               = 0 if no New Gaf needed and previous exists
"RTN","SDUTL2",135,0)
 ;;       piece 2 = previous Gaf score
"RTN","SDUTL2",136,0)
 ;;       piece 3 = previous Gaf date
"RTN","SDUTL2",137,0)
 ;;       piece 4 = previous Gaf Providers IEN
"RTN","SDUTL2",138,0)
 ;;
"RTN","SDUTL2",139,0)
 N SDGAF,SDGAFDT,VADM
"RTN","SDUTL2",140,0)
 ;
"RTN","SDUTL2",141,0)
 S SDGAF=$$RET^YSGAF(DFN)
"RTN","SDUTL2",142,0)
 ;; Check for deceased patient.
"RTN","SDUTL2",143,0)
 D DEM^VADPT
"RTN","SDUTL2",144,0)
 Q:+$G(VADM(6)) "0^"_SDGAF_"^1"
"RTN","SDUTL2",145,0)
 D KVAR^VADPT
"RTN","SDUTL2",146,0)
 ;
"RTN","SDUTL2",147,0)
 Q:SDGAF=-1 -1
"RTN","SDUTL2",148,0)
 S X1=$P(SDGAF,"^",2),X2=90 D C^%DTC
"RTN","SDUTL2",149,0)
 Q $S(DT>X:1,1:0)_"^"_SDGAF
"RTN","SDUTL2",150,0)
 ;
"RTN","SDUTL2",151,0)
GAFCM() ;;
"RTN","SDUTL2",152,0)
 N DIR,DIRUT
"RTN","SDUTL2",153,0)
 S DIR("A",1)="But a new GAF Score is needed for this patient!"
"RTN","SDUTL2",154,0)
 S DIR("A")="Are you sure you want to bypass the check out screen? "
"RTN","SDUTL2",155,0)
 S DIR("B")="No",DIR(0)="YA" W ! D ^DIR
"RTN","SDUTL2",156,0)
 Q +$G(Y)
"RTN","SDUTL2",157,0)
COLLAT(SDEC) ;Determines if patient has a collateral eligibility status
"RTN","SDUTL2",158,0)
 ;
"RTN","SDUTL2",159,0)
 ;  INPUT:  SDEC = patient eligibility status
"RTN","SDUTL2",160,0)
 ;
"RTN","SDUTL2",161,0)
 ; OUTPUT:  1 = collateral patient
"RTN","SDUTL2",162,0)
 ;          0 = non-collateral patient
"RTN","SDUTL2",163,0)
 ;
"RTN","SDUTL2",164,0)
 Q:$G(SDEC)="" 0
"RTN","SDUTL2",165,0)
 I $$GET1^DIQ(8,SDEC,8,"I")=13 Q 1
"RTN","SDUTL2",166,0)
 Q 0
"RTN","SDUTL2",167,0)
 ;
"RTN","SDUTL2",168,0)
ELSTAT(DA) ;Retrieve patient eligibility status
"RTN","SDUTL2",169,0)
 ;
"RTN","SDUTL2",170,0)
 ;  INPUT:  DA = patient IEN
"RTN","SDUTL2",171,0)
 ;
"RTN","SDUTL2",172,0)
 ; OUTPUT:  
"RTN","SDUTL2",173,0)
 ;    Function Value - returns the internal entry number for patient's
"RTN","SDUTL2",174,0)
 ;           eligibility status.
"RTN","SDUTL2",175,0)
 ;
"RTN","SDUTL2",176,0)
 Q:$G(DA)="" ""
"RTN","SDUTL2",177,0)
 Q $$GET1^DIQ(2,DA,.361,"I")
"RTN","SDUTL2",178,0)
SCREST(SCIEN,TYP,DIS) ;check stop code restriction in file 40.7 for a clinic. 
"RTN","SDUTL2",179,0)
 ;  INPUT:   SCIEN = IEN of Stop Code
"RTN","SDUTL2",180,0)
 ;           TYP   = Stop Code Type, Primary (P) or Secondary (S)
"RTN","SDUTL2",181,0)
 ;           DIS   = Message Display, 1 - Display or 0 No Display
"RTN","SDUTL2",182,0)
 ;
"RTN","SDUTL2",183,0)
 ;  OUTPUT:  1 if no error, or 0^error message
"RTN","SDUTL2",184,0)
 ;          
"RTN","SDUTL2",185,0)
 N SCN,RTY,CTY,RDT,STR,STYP
"RTN","SDUTL2",186,0)
 S DIS=$G(DIS,0),STYP="("_$S(TYP="P":"Prim",1:"Second")_"ary)"
"RTN","SDUTL2",187,0)
 I +SCIEN<1 S STR="Invalid Clinic Stop Code "_STYP_"." D MSG Q "0^"_STR
"RTN","SDUTL2",188,0)
 S CTY=$S(TYP="P":"^P^E^",1:"^S^E^")
"RTN","SDUTL2",189,0)
 S SCN=$G(^DIC(40.7,SCIEN,0)),RTY=$P(SCN,U,6),RDT=$P(SCN,U,7)
"RTN","SDUTL2",190,0)
 I RTY="" D  Q "0^"_STR
"RTN","SDUTL2",191,0)
 .S STR="Clinic's Stop Code "_$P(SCN,U,2)_" has no restriction type "_STYP_"." D MSG
"RTN","SDUTL2",192,0)
 I CTY'[("^"_RTY_"^") D  D MSG Q "0^"_STR
"RTN","SDUTL2",193,0)
 .S STR="Clinic's Stop Code "_$P(SCN,U,2)_" cannot be "_$S(TYP="P":"Prim",1:"Second")_"ary."
"RTN","SDUTL2",194,0)
 I RDT>DT D  D MSG Q "0^"_STR
"RTN","SDUTL2",195,0)
 .S STR="Clinic's Stop Code "_$P(SCN,U,2)_" cannot be used. Restriction date is "_$$FMTE^XLFDT(RDT,"1F")_" "_STYP_"."
"RTN","SDUTL2",196,0)
 Q 1
"RTN","SDUTL2",197,0)
MSG ;display error message to screen
"RTN","SDUTL2",198,0)
 I DIS,$E($G(IOST))="C" W !?5,STR
"RTN","SDUTL2",199,0)
 Q
"RTN","SDUTL2",200,0)
CLNCK(CLN,DSP) ;Check clinic for valid stop code restriction.
"RTN","SDUTL2",201,0)
 ;  INPUT:   CLN   = IEN of Clinic
"RTN","SDUTL2",202,0)
 ;           DSP   = Error Message Display, 1 - Display or 0 No Display
"RTN","SDUTL2",203,0)
 ;
"RTN","SDUTL2",204,0)
 ;  OUTPUT:  1 if no error or 0^error message
"RTN","SDUTL2",205,0)
 N PSC,SSC,ND0,VAL
"RTN","SDUTL2",206,0)
 S DSP=$G(DSP,0)
"RTN","SDUTL2",207,0)
 I CLN="" D  Q "0^"_"Invalid Clinic."
"RTN","SDUTL2",208,0)
 .I DSP,$E($G(IOST))="C" W !?5,"Invalid Clinic."
"RTN","SDUTL2",209,0)
 I $G(^SC(CLN,0))="" D  Q "0^"_"Clinic not define or has no zero node."
"RTN","SDUTL2",210,0)
 .I DSP,$E($G(IOST))="C" W !?5,"Clinic not define or has no zero node."
"RTN","SDUTL2",211,0)
 S ND0=^SC(CLN,0),PSC=$P(ND0,U,7),SSC=$P(ND0,U,18),DSP=$G(DSP,0)
"RTN","SDUTL2",212,0)
 I $P(ND0,U,3)'="C" Q 1     ;not a Clinic
"RTN","SDUTL2",213,0)
 S VAL=$$SCREST(PSC,"P",DSP)
"RTN","SDUTL2",214,0)
 Q:'VAL VAL  Q:SSC="" 1
"RTN","SDUTL2",215,0)
 S VAL=$$SCREST(SSC,"S",DSP)
"RTN","SDUTL2",216,0)
 Q VAL
"VER")
8.0^22.0
"^DD",44,44,8,0)
STOP CODE NUMBER^R*P40.7'X^DIC(40.7,^0;7^S DIC("S")="I $P(^(0),U,2)'=900&$S('$P(^(0),U,3):1,$P(^(0),U,3)>DT:1,1:0),""PE""[$P(^(0),U,6),$S('$P(^(0),U,7):1,$P(^(0),U,7)'>DT:1,1:0)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44,8,1,0)
^.1^^0
"^DD",44,44,8,3)

"^DD",44,44,8,12)
Inactive stop codes are invalid.  Stop code 900 can not be used for a clinic.  Stop code must have a restriction type of "Primary" or "Either" and not have a future restriction date.
"^DD",44,44,8,12.1)
S DIC("S")="I $P(^(0),U,2)'=900&$S('$P(^(0),U,3):1,$P(^(0),U,3)>DT:1,1:0),""PE""[$P(^(0),U,6),$S('$P(^(0),U,7):1,$P(^(0),U,7)'>DT:1,1:0)"
"^DD",44,44,8,21,0)
^.001^3^3^3040506^^^^
"^DD",44,44,8,21,1,0)
Three digit stop code number assigned to specific location.  Each
"^DD",44,44,8,21,2,0)
stop code number represents a type of care or Service/treating
"^DD",44,44,8,21,3,0)
specialty (clinics only).
"^DD",44,44,8,"DT")
3050112
"^DD",44,44,2503,0)
CREDIT STOP CODE^*P40.7'X^DIC(40.7,^0;18^S DIC("S")="I $P(^(0),U,2)'=900&$S('$P(^(0),U,3):1,$P(^(0),U,3)>DT:1,1:0),""SE""[$P(^(0),U,6),$S('$P(^(0),U,7):1,$P(^(0),U,7)'>DT:1,1:0)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44,2503,1,0)
^.1^^0
"^DD",44,44,2503,3)
Enter the Stop Code which should be credited for an appointment to this clinic (only if Code different than the one assigned to this clinic).
"^DD",44,44,2503,12)
Inactive stop codes are invalid.  Stop code 900 can not be used for a clinic.  Stop code must have a restriction type of "Secondary" or "Either" and not have a future restriction date.
"^DD",44,44,2503,12.1)
S DIC("S")="I $P(^(0),U,2)'=900&$S('$P(^(0),U,3):1,$P(^(0),U,3)>DT:1,1:0),""SE""[$P(^(0),U,6),$S('$P(^(0),U,7):1,$P(^(0),U,7)'>DT:1,1:0)"
"^DD",44,44,2503,21,0)
^^3^3^2860801^
"^DD",44,44,2503,21,1,0)
Appointments to this clinic will receive this stop code credit in addition
"^DD",44,44,2503,21,2,0)
to the 'normal' stop code credit if a stop code different from the 'normal'
"^DD",44,44,2503,21,3,0)
stop code for this clinic is entered here.
"^DD",44,44,2503,"DT")
3040506
**INSTALL NAME**
PX*1.0*151
"BLD",5043,0)
PX*1.0*151^PCE PATIENT CARE ENCOUNTER^0^3050316^y
"BLD",5043,4,0)
^9.64PA^^
"BLD",5043,"ABPKG")
n
"BLD",5043,"KRN",0)
^9.67PA^8989.52^19
"BLD",5043,"KRN",.4,0)
.4
"BLD",5043,"KRN",.401,0)
.401
"BLD",5043,"KRN",.402,0)
.402
"BLD",5043,"KRN",.403,0)
.403
"BLD",5043,"KRN",.5,0)
.5
"BLD",5043,"KRN",.84,0)
.84
"BLD",5043,"KRN",3.6,0)
3.6
"BLD",5043,"KRN",3.8,0)
3.8
"BLD",5043,"KRN",9.2,0)
9.2
"BLD",5043,"KRN",9.8,0)
9.8
"BLD",5043,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",5043,"KRN",9.8,"NM",1,0)
PXCEVSIT^^0^B26277562
"BLD",5043,"KRN",9.8,"NM",2,0)
PXCE^^0^B63472401
"BLD",5043,"KRN",9.8,"NM",3,0)
PXBAPI1^^0^B49298989
"BLD",5043,"KRN",9.8,"NM","B","PXBAPI1",3)

"BLD",5043,"KRN",9.8,"NM","B","PXCE",2)

"BLD",5043,"KRN",9.8,"NM","B","PXCEVSIT",1)

"BLD",5043,"KRN",19,0)
19
"BLD",5043,"KRN",19.1,0)
19.1
"BLD",5043,"KRN",101,0)
101
"BLD",5043,"KRN",409.61,0)
409.61
"BLD",5043,"KRN",771,0)
771
"BLD",5043,"KRN",870,0)
870
"BLD",5043,"KRN",8989.51,0)
8989.51
"BLD",5043,"KRN",8989.52,0)
8989.52
"BLD",5043,"KRN",8994,0)
8994
"BLD",5043,"KRN","B",.4,.4)

"BLD",5043,"KRN","B",.401,.401)

"BLD",5043,"KRN","B",.402,.402)

"BLD",5043,"KRN","B",.403,.403)

"BLD",5043,"KRN","B",.5,.5)

"BLD",5043,"KRN","B",.84,.84)

"BLD",5043,"KRN","B",3.6,3.6)

"BLD",5043,"KRN","B",3.8,3.8)

"BLD",5043,"KRN","B",9.2,9.2)

"BLD",5043,"KRN","B",9.8,9.8)

"BLD",5043,"KRN","B",19,19)

"BLD",5043,"KRN","B",19.1,19.1)

"BLD",5043,"KRN","B",101,101)

"BLD",5043,"KRN","B",409.61,409.61)

"BLD",5043,"KRN","B",771,771)

"BLD",5043,"KRN","B",870,870)

"BLD",5043,"KRN","B",8989.51,8989.51)

"BLD",5043,"KRN","B",8989.52,8989.52)

"BLD",5043,"KRN","B",8994,8994)

"BLD",5043,"QUES",0)
^9.62^^
"BLD",5043,"REQB",0)
^9.611^1^1
"BLD",5043,"REQB",1,0)
PX*1.0*147^2
"BLD",5043,"REQB","B","PX*1.0*147",1)

"MBREQ")
1
"PKG",507,-1)
1^1
"PKG",507,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter
"PKG",507,20,0)
^9.402P^^
"PKG",507,22,0)
^9.49I^1^1
"PKG",507,22,1,0)
1.0^2960812^2960912^10958
"PKG",507,22,1,"PAH",1,0)
151^3050316^100996
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PXBAPI1")
0^3^B49298989
"RTN","PXBAPI1",1,0)
PXBAPI1 ;ISL/JVS,dee - PCE's API - interview questions ;10/15/96
"RTN","PXBAPI1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**1,9,23,56,104,111,113,122,116,130,147,151**;Aug 12, 1996
"RTN","PXBAPI1",3,0)
 ;;
"RTN","PXBAPI1",4,0)
 Q
"RTN","PXBAPI1",5,0)
 ;
"RTN","PXBAPI1",6,0)
PROCESS(PXBEXIT) ;
"RTN","PXBAPI1",7,0)
 I WHAT="INTV" D
"RTN","PXBAPI1",8,0)
 . ;-- Interview is all of the questions
"RTN","PXBAPI1",9,0)
 . D ADQ(.PXBEXIT) I PXBEXIT<1 Q 
"RTN","PXBAPI1",10,0)
1 . D PRV(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",11,0)
3 . D POV(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",12,0)
2 . D CPT(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",13,0)
 . I $P($G(^AUPNVSIT($G(PXBVST),150)),"^",3)="O" S PXBEXIT=0 Q
"RTN","PXBAPI1",14,0)
 . I '$$DISPOSIT^PXUTL1($G(PXBPAT),$P($G(^AUPNVSIT(PXBVST,0)),"^",1),$G(PXBVST)) D STP(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",15,0)
 E  I WHAT="ADDEDIT" D
"RTN","PXBAPI1",16,0)
 . D ADDEDIT
"RTN","PXBAPI1",17,0)
 E  I WHAT="ADQ" D
"RTN","PXBAPI1",18,0)
 . ;-- Adminstrative questions
"RTN","PXBAPI1",19,0)
 . D ADQ(.PXBEXIT)
"RTN","PXBAPI1",20,0)
 E  I WHAT="CODT" D
"RTN","PXBAPI1",21,0)
 . ;-- Check out Date/Time
"RTN","PXBAPI1",22,0)
 . D CODT(.PXBEXIT)
"RTN","PXBAPI1",23,0)
 . Q:PXBEXIT<1
"RTN","PXBAPI1",24,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",25,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",26,0)
 E  I WHAT="SCC" D
"RTN","PXBAPI1",27,0)
 . ;-- Service connected conditions
"RTN","PXBAPI1",28,0)
 . D SCC(.PXBEXIT)
"RTN","PXBAPI1",29,0)
 . Q:PXBEXIT<1
"RTN","PXBAPI1",30,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",31,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",32,0)
 E  I WHAT="PRV" D
"RTN","PXBAPI1",33,0)
 . ;-- Providers
"RTN","PXBAPI1",34,0)
 . D PRV(.PXBEXIT)
"RTN","PXBAPI1",35,0)
 E  I WHAT="CPT" D
"RTN","PXBAPI1",36,0)
 . ;-- Providers and CPT codes
"RTN","PXBAPI1",37,0)
 . D CPT(.PXBEXIT)
"RTN","PXBAPI1",38,0)
 E  I WHAT="POV" D
"RTN","PXBAPI1",39,0)
 . ;-- Diagnoses
"RTN","PXBAPI1",40,0)
 . D POV(.PXBEXIT)
"RTN","PXBAPI1",41,0)
 E  I WHAT="STP" D
"RTN","PXBAPI1",42,0)
 . ;-- Stop Codes
"RTN","PXBAPI1",43,0)
 . D STP(.PXBEXIT)
"RTN","PXBAPI1",44,0)
 E  S PXBEXIT=-3 W !,"Procedure ""INTV^PXAPI"" was called incorrectly, contact IRM."
"RTN","PXBAPI1",45,0)
 Q
"RTN","PXBAPI1",46,0)
 ;
"RTN","PXBAPI1",47,0)
ADDEDIT ;
"RTN","PXBAPI1",48,0)
 N ANS
"RTN","PXBAPI1",49,0)
ADDEDIT1 ;
"RTN","PXBAPI1",50,0)
 D ADQ(.PXBEXIT)
"RTN","PXBAPI1",51,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",52,0)
 D PRV(.PXBEXIT)
"RTN","PXBAPI1",53,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",54,0)
 D POV(.PXBEXIT)
"RTN","PXBAPI1",55,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",56,0)
 ;
"RTN","PXBAPI1",57,0)
 ;Call to CPT is not determined by a credit stop code any more
"RTN","PXBAPI1",58,0)
 ;
"RTN","PXBAPI1",59,0)
 D CPT(.PXBEXIT)
"RTN","PXBAPI1",60,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",61,0)
ADDEDIT2 ;
"RTN","PXBAPI1",62,0)
 I PXBVST>0,'$D(^AUPNVCPT("AD",PXBVST)),'$D(^AUPNVSIT("AD",PXBVST)) D  I ANS'=1 S PXBEXIT=1 G ADDEDIT1
"RTN","PXBAPI1",63,0)
 . N DIR,X,Y
"RTN","PXBAPI1",64,0)
 . W !!
"RTN","PXBAPI1",65,0)
 . S DIR(0)="Y"
"RTN","PXBAPI1",66,0)
 . S DIR("A",1)="Must have a STOP CODE or a PROCEDURE to complete this action."
"RTN","PXBAPI1",67,0)
 . S DIR("A")="Do you want to delete this encounter"
"RTN","PXBAPI1",68,0)
 . S DIR("B")="NO"
"RTN","PXBAPI1",69,0)
 . D ^DIR
"RTN","PXBAPI1",70,0)
 . S ANS=Y
"RTN","PXBAPI1",71,0)
 . Q:ANS'=1
"RTN","PXBAPI1",72,0)
 . I $$DELVFILE^PXAPIDEL("ALL",PXBVST,"","","","","")=1 S PXBEXIT=-1
"RTN","PXBAPI1",73,0)
 I PXBVST>0,'$D(^AUPNVSIT(PXBVST,0)) S PXBVST=""
"RTN","PXBAPI1",74,0)
 Q
"RTN","PXBAPI1",75,0)
 ;
"RTN","PXBAPI1",76,0)
ADQ(PXBEXIT) ;Ask the Administration questions
"RTN","PXBAPI1",77,0)
 I PXBVST'>0 D
"RTN","PXBAPI1",78,0)
 . ;This is only done for new visits
"RTN","PXBAPI1",79,0)
 . I PXBPAT'>0 S PXBPAT=$$ASKPAT I PXBPAT'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",80,0)
 . S DFN=PXBPAT
"RTN","PXBAPI1",81,0)
 . I PXBHLOC'>0 S PXBHLOC=$$ASKHL I PXBHLOC'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",82,0)
 . S PXBVSTDT=$S(PXBAPPT>0:PXBAPPT,1:$$ASKDT) I PXBVSTDT'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",83,0)
 . I PXBAPPT'>0&PXBHLOC'=+$G(^DPT(PXBPAT,"S",PXBVSTDT,0)) D
"RTN","PXBAPI1",84,0)
 .. ;This is only done if there is no appointment.
"RTN","PXBAPI1",85,0)
 .. S PXELAP=$$ELAP^SDPCE(PXBPAT,PXBHLOC)
"RTN","PXBAPI1",86,0)
 I PXBEXIT'<1,PXBHLOC'>0 S PXBHLOC=$$ASKHL I PXBHLOC'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",87,0)
 I PXBEXIT'<1 D CODT(.PXBEXIT)
"RTN","PXBAPI1",88,0)
 I PXBEXIT'<1 D SCC(.PXBEXIT)
"RTN","PXBAPI1",89,0)
 I PXBEXIT'<1 D
"RTN","PXBAPI1",90,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",91,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",92,0)
 Q
"RTN","PXBAPI1",93,0)
 ;
"RTN","PXBAPI1",94,0)
ASKPAT() ;Ask user for a patient
"RTN","PXBAPI1",95,0)
 ;DIC on file 9000001
"RTN","PXBAPI1",96,0)
 N DIR,DIC,Y,X,DA
"RTN","PXBAPI1",97,0)
 S DIR(0)="P^9000001:AEMQ"
"RTN","PXBAPI1",98,0)
 S DIR("A")="Patient Name"
"RTN","PXBAPI1",99,0)
 D ^DIR
"RTN","PXBAPI1",100,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",101,0)
 ;
"RTN","PXBAPI1",102,0)
ASKHL() ;Ask user for a Hospital Location
"RTN","PXBAPI1",103,0)
ASKHL2 ;DIC on file 44
"RTN","PXBAPI1",104,0)
 N DIR,DIC,Y,X,DA,PXRES
"RTN","PXBAPI1",105,0)
 S DIR(0)="PA^44:AEMQ"
"RTN","PXBAPI1",106,0)
 S DIR("A")="Clinic: "
"RTN","PXBAPI1",107,0)
 ; not occasion of service and not dispositioning
"RTN","PXBAPI1",108,0)
 ;I PXALHLOC S DIR("S")="I '+$G(^(""OOS""))&'$O(^PX(815,1,""DHL"",""B"",Y,0))"
"RTN","PXBAPI1",109,0)
 ; not occasion of service only   ;PX*1.0*116
"RTN","PXBAPI1",110,0)
 I PXALHLOC S DIR("S")="I '+$G(^(""OOS""))"   ;PX*1.0*116
"RTN","PXBAPI1",111,0)
 ; only clinic that are not occasion of service and not dispositioning
"RTN","PXBAPI1",112,0)
 ;E  S DIR("S")="I $P(^(0),U,3)=""C""&'+$G(^(""OOS""))&'$O(^PX(815,1,""DHL"",""B"",Y,0))"
"RTN","PXBAPI1",113,0)
 E  S DIR("S")="I $P(^(0),U,3)=""C""&'+$G(^(""OOS""))"   ;PX*1.0*116
"RTN","PXBAPI1",114,0)
 D ^DIR
"RTN","PXBAPI1",115,0)
 ;enable to select a disposition clinic   ;PX*1.0*116
"RTN","PXBAPI1",116,0)
 ;I $D(^PX(815,1,"DHL","B",+Y)) D HELPDISP^PXCEVSIT W !,$C(7) G ASKHL2
"RTN","PXBAPI1",117,0)
 ; disallow selection of clinics with non conforming stop codes
"RTN","PXBAPI1",118,0)
 I +Y>0 S PXRES=$$CLNCK^SDUTL2(+Y,1) I 'PXRES D  G ASKHL2
"RTN","PXBAPI1",119,0)
 .W !,?5,"Clinic MUST be corrected before continuing."
"RTN","PXBAPI1",120,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",121,0)
 ;
"RTN","PXBAPI1",122,0)
ASKDT() ;Ask user for the encounter Date/Time
"RTN","PXBAPI1",123,0)
 N DIR,Y,X,DA
"RTN","PXBAPI1",124,0)
 S DIR(0)="D^"_$S(PXLIMDT>2960000:PXLIMDT,1:"")_":"_(DT+.24)_":AEPRSX"
"RTN","PXBAPI1",125,0)
 S DIR("A")="Encounter Date and Time"
"RTN","PXBAPI1",126,0)
 S DIR("?")="Enter the Date and Time of this encounter"
"RTN","PXBAPI1",127,0)
 D ^DIR
"RTN","PXBAPI1",128,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",129,0)
 ;
"RTN","PXBAPI1",130,0)
CODT(PXBEXIT) ;Ask the user the Check out Date/Time
"RTN","PXBAPI1",131,0)
 N PXCHKOUT
"RTN","PXBAPI1",132,0)
 D CHIKOUT^PXBAPI2("",PXBPAT,PXBHLOC,PXBVSTDT)
"RTN","PXBAPI1",133,0)
 S PXBCODT=PXCHKOUT
"RTN","PXBAPI1",134,0)
 S:PXCHKOUT=-1 PXBCODT=""
"RTN","PXBAPI1",135,0)
 ;; PX*1*113 - Change for EAS*1*3 Appointment processing removed
"RTN","PXBAPI1",136,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T D  Q:PXBEXIT<1
"RTN","PXBAPI1",137,0)
 ;. S:$G(EASACT)'="W" EASACT="C"
"RTN","PXBAPI1",138,0)
 ;. I $$MT^EASMTCHK(PXBPAT,"",EASACT,PXBVSTDT) D  S PXBEXIT=-1
"RTN","PXBAPI1",139,0)
 ;. . D PAUSE^VALM1
"RTN","PXBAPI1",140,0)
 I WHAT'["ADDEDIT",PXCHKOUT=-1 S PXBEXIT=-1
"RTN","PXBAPI1",141,0)
 I $G(PXBVST),$$DISPOSIT^PXUTL1(DFN,$P($G(^AUPNVSIT(PXBVST,0)),"^",1),PXBVST) S PXBEXIT=1
"RTN","PXBAPI1",142,0)
 Q
"RTN","PXBAPI1",143,0)
 ;
"RTN","PXBAPI1",144,0)
SCC(PXBEXIT) ;Ask the user the Service connected conditions
"RTN","PXBAPI1",145,0)
 N PXBDATA,PXBCLASS,PXBOUTEN,PXDOD
"RTN","PXBAPI1",146,0)
 S (PXBOUTEN,PXDOD)=""
"RTN","PXBAPI1",147,0)
 ;I $$APPOINT^PXUTL1(PXBPAT,PXBVSTDT,PXBHLOC) D
"RTN","PXBAPI1",148,0)
 ;. S PXBOUTEN=$P($G(^DPT(+PXBPAT,"S",+PXBVSTDT,0)),"^",20)
"RTN","PXBAPI1",149,0)
 ;E  I $$DISPOSIT^PXUTL1(PXBPAT,PXBVSTDT,PXBVST) D
"RTN","PXBAPI1",150,0)
 ;. S PXBOUTEN=+$P($G(^DPT(+PXBPAT,"DIS",9999999-PXBVSTDT,0)),"^",18)
"RTN","PXBAPI1",151,0)
 ;I 'PXBOUTEN,$G(PXBVST)>0 S PXBOUTEN=$O(^SCE("AVSIT",PXBVST,0))
"RTN","PXBAPI1",152,0)
 ;D CLASS^PXBAPI21(PXBOUTEN,PXBPAT,PXBVSTDT,PXBHLOC)
"RTN","PXBAPI1",153,0)
 D CLASS^PXBAPI21(PXBOUTEN,PXBPAT,PXBVSTDT,PXBHLOC,PXBVST)
"RTN","PXBAPI1",154,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",155,0)
 F PXBCLASS=1:1:7 I $G(PXBDATA("ERR",PXBCLASS))=4 S PXBEXIT=-1 Q  ; changed 6/17/98 for MST enhancement
"RTN","PXBAPI1",156,0)
 Q:PXBEXIT<1
"RTN","PXBAPI1",157,0)
 I $G(PXDOD) S PXBEXIT=-1 Q
"RTN","PXBAPI1",158,0)
 S PXB800(1)=$P($G(PXBDATA(3)),"^",2)
"RTN","PXBAPI1",159,0)
 S PXB800(2)=$P($G(PXBDATA(1)),"^",2)
"RTN","PXBAPI1",160,0)
 S PXB800(3)=$P($G(PXBDATA(2)),"^",2)
"RTN","PXBAPI1",161,0)
 S PXB800(4)=$P($G(PXBDATA(4)),"^",2)
"RTN","PXBAPI1",162,0)
 S PXB800(5)=$P($G(PXBDATA(5)),"^",2) ;added 6/17/98 for MST enhancement
"RTN","PXBAPI1",163,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",164,0)
 S PXB800(6)=$P($G(PXBDATA(6)),"^",2)
"RTN","PXBAPI1",165,0)
 S PXB800(7)=$P($G(PXBDATA(7)),"^",2)
"RTN","PXBAPI1",166,0)
 Q
"RTN","PXBAPI1",167,0)
 ;
"RTN","PXBAPI1",168,0)
VISIT(PXBEXIT) ;Creat or edit the Visit
"RTN","PXBAPI1",169,0)
 ;Set up ^TMP("PXK",$J and call PXK
"RTN","PXBAPI1",170,0)
 I PXBVST>0 L +^AUPNVSIT(PXBVST):10 E  W !!,$C(7),"Cannot edit at this time, try again later." D WAIT^PXCEHELP S PXBEXIT=-2 Q
"RTN","PXBAPI1",171,0)
 K ^TMP("PXK",$J)
"RTN","PXBAPI1",172,0)
 N PXBNODE,PXBAFTER,PXKERROR
"RTN","PXBAPI1",173,0)
 F PXBNODE=0,21,150,800,811,812 D
"RTN","PXBAPI1",174,0)
 . S PXBAFTER(PXBNODE)=$S(PXBVST>0:$G(^AUPNVSIT(PXBVST,PXBNODE)),1:"")
"RTN","PXBAPI1",175,0)
 . S ^TMP("PXK",$J,"VST",1,PXBNODE,"BEFORE")=PXBAFTER(PXBNODE)
"RTN","PXBAPI1",176,0)
 I PXBVST'>0 D
"RTN","PXBAPI1",177,0)
 . S $P(PXBAFTER(0),"^",1)=PXBVSTDT
"RTN","PXBAPI1",178,0)
 . S $P(PXBAFTER(0),"^",5)=PXBPAT
"RTN","PXBAPI1",179,0)
 . S $P(PXBAFTER(0),"^",8)=$P(^SC(PXBHLOC,0),"^",7)
"RTN","PXBAPI1",180,0)
 . S:PXBAPPT>0 $P(PXBAFTER(0),"^",16)="A"
"RTN","PXBAPI1",181,0)
 . S $P(PXBAFTER(150),"^",3)="P"
"RTN","PXBAPI1",182,0)
 . S $P(PXBAFTER(812),"^",2)=PXBPKG
"RTN","PXBAPI1",183,0)
 . S $P(PXBAFTER(812),"^",3)=PXBSOURC
"RTN","PXBAPI1",184,0)
 S $P(PXBAFTER(0),"^",18)=$G(PXBCODT)
"RTN","PXBAPI1",185,0)
 S:$P(PXBAFTER(0),"^",22)="" $P(PXBAFTER(0),"^",22)=PXBHLOC
"RTN","PXBAPI1",186,0)
 S $P(PXBAFTER(800),"^",1)=$G(PXB800(1))
"RTN","PXBAPI1",187,0)
 S $P(PXBAFTER(800),"^",2)=$G(PXB800(2))
"RTN","PXBAPI1",188,0)
 S $P(PXBAFTER(800),"^",3)=$G(PXB800(3))
"RTN","PXBAPI1",189,0)
 S $P(PXBAFTER(800),"^",4)=$G(PXB800(4))
"RTN","PXBAPI1",190,0)
 S $P(PXBAFTER(800),"^",5)=$G(PXB800(5)) ;added 6/17/98 for MST emhancement
"RTN","PXBAPI1",191,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",192,0)
 S $P(PXBAFTER(800),"^",6)=$G(PXB800(6))
"RTN","PXBAPI1",193,0)
 S $P(PXBAFTER(800),"^",7)=$G(PXB800(7))
"RTN","PXBAPI1",194,0)
 I $D(PXELAP)#2 D
"RTN","PXBAPI1",195,0)
 . S $P(PXBAFTER(0),"^",21)=+PXELAP
"RTN","PXBAPI1",196,0)
 F PXBNODE=0,21,150,800,811,812 D
"RTN","PXBAPI1",197,0)
 . S ^TMP("PXK",$J,"VST",1,PXBNODE,"AFTER")=PXBAFTER(PXBNODE)
"RTN","PXBAPI1",198,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=$S(PXBVST>0:PXBVST,1:"")
"RTN","PXBAPI1",199,0)
 S ^TMP("PXK",$J,"SOR")=PXBSOURC
"RTN","PXBAPI1",200,0)
 D EN1^PXKMAIN
"RTN","PXBAPI1",201,0)
 I PXBVST>0 L -^AUPNVSIT(PXBVST):5
"RTN","PXBAPI1",202,0)
 S PXBVST=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXBAPI1",203,0)
 Q
"RTN","PXBAPI1",204,0)
 ;
"RTN","PXBAPI1",205,0)
CPT(PXBEXIT) ;Ask the user Providers and CTPs
"RTN","PXBAPI1",206,0)
 D CPT^PXBMCPT(PXBVST) K PRVDR
"RTN","PXBAPI1",207,0)
 Q
"RTN","PXBAPI1",208,0)
 ;
"RTN","PXBAPI1",209,0)
POV(PXBEXIT) ;Ask the user Diagnoses
"RTN","PXBAPI1",210,0)
 D POV^PXBMPOV(PXBVST) K PRVDR
"RTN","PXBAPI1",211,0)
 Q
"RTN","PXBAPI1",212,0)
 ;
"RTN","PXBAPI1",213,0)
PRV(PXBEXIT) ;Ask the user Providers
"RTN","PXBAPI1",214,0)
 D PRV^PXBMPRV(PXBVST,"PRV") K PRVDR
"RTN","PXBAPI1",215,0)
 Q
"RTN","PXBAPI1",216,0)
 ;
"RTN","PXBAPI1",217,0)
STP(PXBEXIT) ;Ask the user Stop Codes
"RTN","PXBAPI1",218,0)
 I $L($T(DATE^SCDXUTL)),$$DATE^SCDXUTL(+$G(^AUPNVSIT(PXBVST,0))) Q
"RTN","PXBAPI1",219,0)
 D STP^PXBMSTP(PXBVST) K PRVDR
"RTN","PXBAPI1",220,0)
 Q
"RTN","PXBAPI1",221,0)
 ;
"RTN","PXCE")
0^2^B63472401
"RTN","PXCE",1,0)
PXCE ;ISL/dee - Main routine for PCE's user interface ; 3/27/01 12:17pm
"RTN","PXCE",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**25,47,52,64,75,78,147,151**;Aug 12, 1996
"RTN","PXCE",3,0)
 ;
"RTN","PXCE",4,0)
 ;PXCEKEYS is a set of letters that enable the user
"RTN","PXCE",5,0)
 ;  to enter certain fields
"RTN","PXCE",6,0)
 ;  "P" is included if the user holds the AK.PROVIDER key.
"RTN","PXCE",7,0)
 ;  "C" should be included by the option if the user should be
"RTN","PXCE",8,0)
 ;    asked for the Provider Narrative Categories on V CPT, V POV,
"RTN","PXCE",9,0)
 ;    and V TREATMENT files.  As well as for  other fields that are
"RTN","PXCE",10,0)
 ;    not ask of the normal user.
"RTN","PXCE",11,0)
 ;  "S" is for the superviser.  If they have "S" then they will be 
"RTN","PXCE",12,0)
 ;    given "C" and "D" by the program.
"RTN","PXCE",13,0)
 ;  "V" is for view only
"RTN","PXCE",14,0)
 ; And if it:
"RTN","PXCE",15,0)
 ;  includes "D" to delete any V-File
"RTN","PXCE",16,0)
 ;  includes "d" to only delete V-File entries this user created
"RTN","PXCE",17,0)
 ;
"RTN","PXCE",18,0)
 I '$D(PXCEKEYS)#2 N PXCEKEYS S PXCEKEYS=""
"RTN","PXCE",19,0)
 S:PXCEKEYS'["D" PXCEKEYS=PXCEKEYS_"D"
"RTN","PXCE",20,0)
 G START
"RTN","PXCE",21,0)
 ; -- main entry point for PCE's user interface
"RTN","PXCE",22,0)
EN1(PXCEKEYS) ;Does not checks for provider
"RTN","PXCE",23,0)
 G START1
"RTN","PXCE",24,0)
EN(PXCEKEYS) ;Checks for provider
"RTN","PXCE",25,0)
 ;
"RTN","PXCE",26,0)
START ;
"RTN","PXCE",27,0)
 ;Key for provider (P)
"RTN","PXCE",28,0)
 I PXCEKEYS'["P",$O(^VA(200,"AK.PROVIDER",$P(^VA(200,DUZ,0),"^"),""))=DUZ S PXCEKEYS=PXCEKEYS_"P"
"RTN","PXCE",29,0)
START1 ;
"RTN","PXCE",30,0)
 ;If they have the Key for superviser (S) make sure that they also
"RTN","PXCE",31,0)
 ;  have C and D.
"RTN","PXCE",32,0)
 I PXCEKEYS["S" S:PXCEKEYS'["C" PXCEKEYS=PXCEKEYS_"C" S:PXCEKEYS'["D" PXCEKEYS=PXCEKEYS_"D"
"RTN","PXCE",33,0)
 ;
"RTN","PXCE",34,0)
 K I,X,SDB,XQORNOD,SDFN,SDCLN,DA,DR,DIE,DNM,DQ,%B
"RTN","PXCE",35,0)
 N PXCEVIEW,SDAMTYP
"RTN","PXCE",36,0)
 N PXCEPAT,PXCEHLOC
"RTN","PXCE",37,0)
 N PXCEDBEG,PXCEDEND,PXCE9BEG,PXCE9END,SDBEG,SDEND
"RTN","PXCE",38,0)
 N PXCEDBP,PXCEDBHL,PXCEDEP,PXCEDEHL
"RTN","PXCE",39,0)
 N PXCECONT
"RTN","PXCE",40,0)
 N PXCESOR,PXCEPKG
"RTN","PXCE",41,0)
 I $G(DFN)'>0 N DFN
"RTN","PXCE",42,0)
 ;
"RTN","PXCE",43,0)
 S PXCEVIEW="^"_$S("~V~A~"["~"_$P(^PX(815,1,"LM"),"^",2)_"~":$P(^PX(815,1,"LM"),"^",2),1:"V")_"^"
"RTN","PXCE",44,0)
 S PXCESOR=$$SOURCE^PXAPIUTL("PXCE DATA ENTRY")
"RTN","PXCE",45,0)
 S PXCEPKG=$$PKG2IEN^VSIT("PX")
"RTN","PXCE",46,0)
 ;
"RTN","PXCE",47,0)
 K DIRUT
"RTN","PXCE",48,0)
 D SETUP Q:$D(DIRUT)
"RTN","PXCE",49,0)
 ;
"RTN","PXCE",50,0)
 F  D  Q:$D(PXCEVIEW)'=1!'$D(PXCECONT)
"RTN","PXCE",51,0)
 . K PXCECONT
"RTN","PXCE",52,0)
 . I PXCEKEYS["V" D
"RTN","PXCE",53,0)
 .. I PXCEVIEW["A" D
"RTN","PXCE",54,0)
 ... D EN^VALM("PXCE SDAM VIEW ONLY")
"RTN","PXCE",55,0)
 .. E  D EN^VALM("PXCE VIEW ONLY")
"RTN","PXCE",56,0)
 . E  I PXCEVIEW["A" D
"RTN","PXCE",57,0)
 .. D EN^VALM("PXCE SDAM MENU")
"RTN","PXCE",58,0)
 . E  D EN^VALM("PXCE MAIN MENU")
"RTN","PXCE",59,0)
 D FULL^VALM1
"RTN","PXCE",60,0)
 D EXITALL
"RTN","PXCE",61,0)
 Q
"RTN","PXCE",62,0)
 ;
"RTN","PXCE",63,0)
SETUP ;
"RTN","PXCE",64,0)
 N DIR,DA,X,Y,PXRES
"RTN","PXCE",65,0)
 N PXCEUSEL,X1,X2
"RTN","PXCE",66,0)
 I $G(DFN)>0 S PXCEUSEL=DFN_"^DPT("
"RTN","PXCE",67,0)
 E  S DIR(0)="815,201",DIR("A")="Select Patient or Clinic name" D ^DIR K DIR,DA Q:$D(DIRUT)  S PXCEUSEL=Y
"RTN","PXCE",68,0)
 S X1=DT,X2=$S($P(^PX(815,1,"LM"),"^",3)]"":$P(^PX(815,1,"LM"),"^",3),1:-30) D C^%DTC
"RTN","PXCE",69,0)
 S PXCEDBP=X
"RTN","PXCE",70,0)
 S X1=DT,X2=$S($P(^PX(815,1,"LM"),"^",4)]"":$P(^PX(815,1,"LM"),"^",4),1:0) D C^%DTC
"RTN","PXCE",71,0)
 S PXCEDEP=X
"RTN","PXCE",72,0)
 S X1=DT,X2=$S($P(^PX(815,1,"LM"),"^",5)]"":$P(^PX(815,1,"LM"),"^",5),1:-7) D C^%DTC
"RTN","PXCE",73,0)
 S PXCEDBHL=X
"RTN","PXCE",74,0)
 S X1=DT,X2=$S($P(^PX(815,1,"LM"),"^",6)]"":$P(^PX(815,1,"LM"),"^",6),1:0) D C^%DTC
"RTN","PXCE",75,0)
 S PXCEDEHL=X
"RTN","PXCE",76,0)
 I PXCEUSEL["DPT(" S $P(PXCEVIEW,"^",1)="P" S SDAMTYP="P"
"RTN","PXCE",77,0)
 I PXCEUSEL["SC(" S $P(PXCEVIEW,"^",1)="H" S SDAMTYP="C" D  I 'PXRES G SETUP
"RTN","PXCE",78,0)
 .S PXRES=$$CLNCK^SDUTL2(+PXCEUSEL,1)
"RTN","PXCE",79,0)
 .I 'PXRES W !,?5,"Clinic MUST be corrected before continuing."
"RTN","PXCE",80,0)
 D SETDATES
"RTN","PXCE",81,0)
 I PXCEUSEL["DPT(" S PXCEPAT=+PXCEUSEL D NEWPAT1^PXCEPAT G:$D(DIRUT) SETUP
"RTN","PXCE",82,0)
 I PXCEUSEL["SC(" S PXCEHLOC=+PXCEUSEL D NEWHOSL1^PXCENEW
"RTN","PXCE",83,0)
 Q
"RTN","PXCE",84,0)
 ;
"RTN","PXCE",85,0)
SETDATES ;
"RTN","PXCE",86,0)
 I PXCEVIEW["H" D
"RTN","PXCE",87,0)
 . S PXCEDBEG=PXCEDBHL
"RTN","PXCE",88,0)
 . S PXCEDEND=PXCEDEHL
"RTN","PXCE",89,0)
 E  D
"RTN","PXCE",90,0)
 . S PXCEDBEG=PXCEDBP
"RTN","PXCE",91,0)
 . S PXCEDEND=PXCEDEP
"RTN","PXCE",92,0)
 D DATE9S^PXCEDATE
"RTN","PXCE",93,0)
 Q
"RTN","PXCE",94,0)
 ;
"RTN","PXCE",95,0)
HDR ; -- header code
"RTN","PXCE",96,0)
 K VALMHDR,PXLNX,PXPCP
"RTN","PXCE",97,0)
 S PXLNX=1,PXPCP=""
"RTN","PXCE",98,0)
 ;
"RTN","PXCE",99,0)
 ;PATIENT
"RTN","PXCE",100,0)
 I PXCEVIEW["P" D
"RTN","PXCE",101,0)
 . S PXPCP=$$PCLINE^SDPPTEM(PXCEPAT,DT)
"RTN","PXCE",102,0)
 . S VALMHDR(PXLNX)=$E(PXCEPAT("NAME"),1,26)
"RTN","PXCE",103,0)
 . S VALMHDR(PXLNX)=$E(VALMHDR(PXLNX)_$E("    ",1,(27-$L(VALMHDR(PXLNX))))_PXCEPAT("SSN")_"                                           ",1,40)
"RTN","PXCE",104,0)
 E  S VALMHDR(PXLNX)="                                        "
"RTN","PXCE",105,0)
 ;LOCATION
"RTN","PXCE",106,0)
 S VALMHDR(PXLNX)=VALMHDR(PXLNX)_"Clinic:  "_$S($G(PXCEHLOC)&(PXCEVIEW'["P^A"):$P(^SC(PXCEHLOC,0),"^"),1:"All")
"RTN","PXCE",107,0)
 S PXLNX=PXLNX+1
"RTN","PXCE",108,0)
 I $L(PXPCP) S VALMHDR(PXLNX)=PXPCP,PXLNX=PXLNX+1
"RTN","PXCE",109,0)
 ;
"RTN","PXCE",110,0)
 ;DATE
"RTN","PXCE",111,0)
 S VALMHDR(PXLNX)=$E("Date range:  "_$$FMTE^XLFDT(PXCEDBEG,5)_" to "_$$FMTE^XLFDT(PXCEDEND,5)_$J("",40),1,40)
"RTN","PXCE",112,0)
 ;
"RTN","PXCE",113,0)
 ;Credit Stop
"RTN","PXCE",114,0)
 S:PXCEVIEW["A" VALMHDR(PXLNX)=VALMHDR(PXLNX)_$P($G(SDAMLIST),"^",2)
"RTN","PXCE",115,0)
 S PXLNX=PXLNX+1
"RTN","PXCE",116,0)
 ;
"RTN","PXCE",117,0)
 ;CHECK IF GAF NEEDED
"RTN","PXCE",118,0)
 I PXCEVIEW'["P",$$MHCLIN^SDUTL2(PXCEHLOC) S VALMHDR(PXLNX)=$$SETSTR^VALM1("* - New GAF Score Required","",25,80)
"RTN","PXCE",119,0)
 I PXCEVIEW["P" D
"RTN","PXCE",120,0)
 .S VALMHDR(PXLNX)=$$SETSTR^VALM1("* - New GAF Score Required","",25,80)
"RTN","PXCE",121,0)
 .N PXCEHLC,PXCESTA
"RTN","PXCE",122,0)
 .K PXCEHIT
"RTN","PXCE",123,0)
 .S PXCESTA=$$ELSTAT^SDUTL2(PXCEPAT)
"RTN","PXCE",124,0)
 .S PXCEZZ=0
"RTN","PXCE",125,0)
 .F  S PXCEZZ=$O(^TMP("PXCEIDX",$J,PXCEZZ)) Q:PXCEZZ'>0  D  Q:$D(PXCEHIT)
"RTN","PXCE",126,0)
 ..S PXCEHLC=+$P($G(^AUPNVSIT(^TMP("PXCEIDX",$J,PXCEZZ),0)),"^",22)
"RTN","PXCE",127,0)
 ..I $$MHCLIN^SDUTL2(PXCEHLC),'$$COLLAT^SDUTL2(PXCESTA) D
"RTN","PXCE",128,0)
 ...S PXCEGAF=$$NEWGAF^SDUTL2($S($D(SDFN):SDFN,$D(PXCEPAT):PXCEPAT,1:""))
"RTN","PXCE",129,0)
 ...S PXCEGST=$P(PXCEGAF,"^")
"RTN","PXCE",130,0)
 ...I PXCEGST D
"RTN","PXCE",131,0)
 ....S PXCEGDT=$$FMTE^XLFDT($P(PXCEGAF,"^",3),"5M"),PXCEGSC=$P(PXCEGAF,"^",2),PXCEGPR=$P(PXCEGAF,"^",4)
"RTN","PXCE",132,0)
 ....S VALMHDR(PXLNX)="GAF Date: "_PXCEGDT_"  GAF Score:"_PXCEGSC_"   NEW REQ",PXCEHIT=1
"RTN","PXCE",133,0)
 ;
"RTN","PXCE",134,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXCE",135,0)
 Q
"RTN","PXCE",136,0)
 ;
"RTN","PXCE",137,0)
INIT ; -- init variables and list array
"RTN","PXCE",138,0)
 D MAKELIST^PXCENEW
"RTN","PXCE",139,0)
 Q
"RTN","PXCE",140,0)
 ;
"RTN","PXCE",141,0)
EXIT ; -- exit code
"RTN","PXCE",142,0)
 D FULL^VALM1
"RTN","PXCE",143,0)
 D CLEAN^VALM10
"RTN","PXCE",144,0)
 K ^TMP("PXCE",$J)
"RTN","PXCE",145,0)
 K ^TMP("PXCEIDX",$J)
"RTN","PXCE",146,0)
 D FNL^PXCESDAM
"RTN","PXCE",147,0)
 Q
"RTN","PXCE",148,0)
 ;
"RTN","PXCE",149,0)
EXITALL ; Exit of whole program
"RTN","PXCE",150,0)
 D PATKILL^PXCEPAT
"RTN","PXCE",151,0)
 D KVA^VADPT
"RTN","PXCE",152,0)
 Q
"RTN","PXCE",153,0)
 ;
"RTN","PXCE",154,0)
DONE ; -- exit action for protocol
"RTN","PXCE",155,0)
 S:'$D(VALMBCK) VALMBCK="R"
"RTN","PXCE",156,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXCE",157,0)
 Q
"RTN","PXCE",158,0)
 ;
"RTN","PXCE",159,0)
EXPND ; -- expand code
"RTN","PXCE",160,0)
 D EN^PXCEEXP
"RTN","PXCE",161,0)
 Q
"RTN","PXCE",162,0)
 ;
"RTN","PXCE",163,0)
SEL1(HELP,PXCEADD) ; Select 1 visit
"RTN","PXCE",164,0)
 ; If the $GET(PXCEADD) is non zero then will 
"RTN","PXCE",165,0)
 ;   add to the prompt "add a new encounter"
"RTN","PXCE",166,0)
 N X,Y,MAX
"RTN","PXCE",167,0)
 S MAX=+$G(^TMP("PXCEIDX",$J,0)) I MAX'>0 Q "^"
"RTN","PXCE",168,0)
 S Y=$P($P(XQORNOD(0),"^",4),"=",2)
"RTN","PXCE",169,0)
 I Y]"" D
"RTN","PXCE",170,0)
 . I (+Y'=Y)!(+Y>MAX)!(+Y<1)!(Y#1'=0) D
"RTN","PXCE",171,0)
 .. W !,$C(7),"Selection '",Y,"' is not a valid choice."
"RTN","PXCE",172,0)
 .. D PAUSE^PXCEHELP
"RTN","PXCE",173,0)
 .. S Y="^"
"RTN","PXCE",174,0)
 E  I '$G(PXCEADD) D
"RTN","PXCE",175,0)
 . N DIR,DA
"RTN","PXCE",176,0)
 . S DIR(0)="NAO^1:"_MAX_":0",DIR("A")="Select Encounter"
"RTN","PXCE",177,0)
 . S:MAX>1 DIR("A")=DIR("A")_" (1-"_MAX_"): "
"RTN","PXCE",178,0)
 . S:MAX'>1 DIR("A")=DIR("A")_": ",DIR("B")=1
"RTN","PXCE",179,0)
 . S DIR("?")="Enter the number of the Encounter you wish to "
"RTN","PXCE",180,0)
 . S DIR("?")=DIR("?")_$S($L(HELP):HELP,1:"act on")
"RTN","PXCE",181,0)
 . D ^DIR I $D(DTOUT)!(X="") S Y="^"
"RTN","PXCE",182,0)
 E  D
"RTN","PXCE",183,0)
 . N DIR,DA
"RTN","PXCE",184,0)
ASKLOOP . S DIR(0)="FAO^1:"_$L(MAX)
"RTN","PXCE",185,0)
 . S DIR("A")="Enter 1-"_MAX_" to Edit, or 'A' to Add: "
"RTN","PXCE",186,0)
 . S DIR("?")="Enter the number of the Encounter you wish "
"RTN","PXCE",187,0)
 . S DIR("?")=DIR("?")_$S($L(HELP):HELP,1:"act on")_" or A to "
"RTN","PXCE",188,0)
 . S DIR("?")=DIR("?")_$S($L(HELP):HELP,1:"act on")_" add a new Encounter"
"RTN","PXCE",189,0)
 . D ^DIR
"RTN","PXCE",190,0)
 . K DIR,DA
"RTN","PXCE",191,0)
 . I $D(DIRUT)!(X="") S Y="^" Q
"RTN","PXCE",192,0)
 . I "Aa"[Y S Y="A" Q
"RTN","PXCE",193,0)
 . G:Y<1!(Y>MAX) ASKLOOP
"RTN","PXCE",194,0)
 Q Y
"RTN","PXCE",195,0)
 ;
"RTN","PXCE",196,0)
GAF ;;
"RTN","PXCE",197,0)
 N PXCEVIEN,PXDFN,PXDSS,PXELIG,PXDATA
"RTN","PXCE",198,0)
 I $G(PXCEHLOC),'$$MHCLIN^SDUTL2(PXCEHLOC) D  G SKIP
"RTN","PXCE",199,0)
 . S DIR(0)="FOA"
"RTN","PXCE",200,0)
 . S DIR("A",1)=" This is not a Mental Health Clinic, a GAF Score may not be entered."
"RTN","PXCE",201,0)
 . S DIR("A")=" Press any key to continue: "
"RTN","PXCE",202,0)
 . D ^DIR K DIR
"RTN","PXCE",203,0)
 ;
"RTN","PXCE",204,0)
 I $D(^TMP("PXCEIDX",$J)) D GETVIEN^PXCEAE
"RTN","PXCE",205,0)
 I $D(^TMP("SDAMIDX",$J)) S PXCEVIEN=$$SELAPPM^PXCESDAM
"RTN","PXCE",206,0)
 I '($G(PXCEVIEN)]"")!($G(PXCEVIEN)=-1) D  S VALMBCK="R" Q
"RTN","PXCE",207,0)
 . S DIR(0)="FAO"
"RTN","PXCE",208,0)
 . I '($G(PXCEVIEN)]"") S DIR("A",1)="Nothing to select."
"RTN","PXCE",209,0)
 . I $G(PXCEVIEN)=-1 S DIR("A",1)="No selections made."
"RTN","PXCE",210,0)
 . S DIR("A")="Press any key to continue."
"RTN","PXCE",211,0)
 . D ^DIR K DIR
"RTN","PXCE",212,0)
 S PXDFN=$P($G(^AUPNVSIT(PXCEVIEN,0)),"^",5)
"RTN","PXCE",213,0)
 S PXDSS=$P($G(^AUPNVSIT(PXCEVIEN,0)),"^",8)
"RTN","PXCE",214,0)
 S PXDATA=$G(^DPT(PXDFN,"S",$P(^AUPNVSIT(PXCEVIEN,0),U),0))
"RTN","PXCE",215,0)
 S PXELIG=$$ELSTAT^SDUTL2(PXDFN)
"RTN","PXCE",216,0)
 I $$MHCLIN^SDUTL2("",PXDSS),'($$COLLAT^SDUTL2(PXELIG)!$P(PXDATA,U,11)) D
"RTN","PXCE",217,0)
 . S PXGAF=$$NEWGAF^SDUTL2(PXDFN)
"RTN","PXCE",218,0)
 . D FULL^VALM1
"RTN","PXCE",219,0)
 . W !
"RTN","PXCE",220,0)
 . I +$P(PXGAF,U,5)>0 W !,"Warning: Patient is deceased."
"RTN","PXCE",221,0)
 . W !,"Current GAF: "_+$P(PXGAF,U,2)
"RTN","PXCE",222,0)
 . W $S($P(PXGAF,U,3)>0:", from "_$$FMTE^XLFDT($P(PXGAF,U,3),"D"),1:", Date Unavailable")
"RTN","PXCE",223,0)
 . D EN^SDGAF(PXDFN)
"RTN","PXCE",224,0)
 E  D
"RTN","PXCE",225,0)
 . S DIR(0)="FOA"
"RTN","PXCE",226,0)
 . S DIR("A",1)="A GAF Score is not required for this appointment!"
"RTN","PXCE",227,0)
 . S DIR("A")="Press any key to continue: "
"RTN","PXCE",228,0)
 . D ^DIR K DIR
"RTN","PXCE",229,0)
 ;
"RTN","PXCE",230,0)
SKIP S VALMBCK="R"
"RTN","PXCE",231,0)
GAFQ Q
"RTN","PXCE",232,0)
 ;
"RTN","PXCEVSIT")
0^1^B26277562
"RTN","PXCEVSIT",1,0)
PXCEVSIT ;slc/dee,ISA/KWP-Used in editing a visit ; 1/7/02 11:36am
"RTN","PXCEVSIT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**9,23,70,116,147,151**;Aug 12, 1996
"RTN","PXCEVSIT",3,0)
 Q
"RTN","PXCEVSIT",4,0)
 ;
"RTN","PXCEVSIT",5,0)
 ;********************************
"RTN","PXCEVSIT",6,0)
 ;
"RTN","PXCEVSIT",7,0)
 ;Functions
"RTN","PXCEVSIT",8,0)
 ;
"RTN","PXCEVSIT",9,0)
ELIGIBIL(PATIENT,HOSPLOC,DATETIME) ;+Eligibility from appointment if there is one.
"RTN","PXCEVSIT",10,0)
 Q:$G(PATIENT)'>0 -1
"RTN","PXCEVSIT",11,0)
 Q:$G(HOSPLOC)'>0 -1
"RTN","PXCEVSIT",12,0)
 Q:$G(DATETIME)'>1600000 -1
"RTN","PXCEVSIT",13,0)
 Q:'($D(^SC(HOSPLOC,"S",DATETIME,1))\10) -1
"RTN","PXCEVSIT",14,0)
 N PXCEELIG,PXCEINDX
"RTN","PXCEVSIT",15,0)
 S PXCEELIG=-1
"RTN","PXCEVSIT",16,0)
 S PXCEINDX=0
"RTN","PXCEVSIT",17,0)
 F  S PXCEINDX=$O(^SC(HOSPLOC,"S",DATETIME,1,PXCEINDX)) Q:PXCEINDX=""  I $P($G(^SC(HOSPLOC,"S",DATETIME,1,PXCEINDX,0)),"^",1)=PATIENT S PXCEELIG=$S($P(^(0),"^",10)>0:$P(^(0),"^",10),1:-1) Q
"RTN","PXCEVSIT",18,0)
 Q PXCEELIG
"RTN","PXCEVSIT",19,0)
 ;
"RTN","PXCEVSIT",20,0)
 ;********************************
"RTN","PXCEVSIT",21,0)
 ;Special cases for edit of the visit.
"RTN","PXCEVSIT",22,0)
 ;
"RTN","PXCEVSIT",23,0)
EVISITDT(REQTIME,DEFAULT) ;
"RTN","PXCEVSIT",24,0)
 ;+REQTIME is 1 if time is required,
"RTN","PXCEVSIT",25,0)
 ;+           0 if time is optional
"RTN","PXCEVSIT",26,0)
 ;+          -1 if the date can be imprecise
"RTN","PXCEVSIT",27,0)
 ;+DEFAULT is the default date/time is there is not one in the file.
"RTN","PXCEVSIT",28,0)
 ;+        If it is -1 then NOW will be used as the default.
"RTN","PXCEVSIT",29,0)
 ;+        If it is 0 then TODAY will be used as the default.
"RTN","PXCEVSIT",30,0)
 N PXLIMDT
"RTN","PXCEVSIT",31,0)
 S PXLIMDT=$S(PXCECAT="HIST":0,1:$$SWITCHD^PXAPI)
"RTN","PXCEVSIT",32,0)
 S DIR(0)="DO^"_$S(PXLIMDT>2960000:PXLIMDT,1:"")_":"_(DT+.24)_":ESP"
"RTN","PXCEVSIT",33,0)
 I $G(REQTIME)=1 S DIR(0)=DIR(0)_"RX"
"RTN","PXCEVSIT",34,0)
 E  I $G(REQTIME)=-1 S DIR(0)=DIR(0)_"T"
"RTN","PXCEVSIT",35,0)
 E  S DIR(0)=DIR(0)_"TX"
"RTN","PXCEVSIT",36,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" S DIR("B")=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEVSIT",37,0)
 E  I ($D(DEFAULT)#2) D
"RTN","PXCEVSIT",38,0)
 . N %H,%I,%
"RTN","PXCEVSIT",39,0)
 . I DEFAULT>0 S DIR("B")=DEFAULT
"RTN","PXCEVSIT",40,0)
 . E  I DEFAULT=0 S DIR("B")=DT
"RTN","PXCEVSIT",41,0)
 . E  I DEFAULT=-1 D NOW^%DTC S DIR("B")=%
"RTN","PXCEVSIT",42,0)
 I $D(DIR("B"))#2 S Y=DIR("B") D DD^%DT S DIR("B")=Y
"RTN","PXCEVSIT",43,0)
 S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEVSIT",44,0)
 S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEVSIT",45,0)
 D ^DIR
"RTN","PXCEVSIT",46,0)
 I '$D(DIRUT),'$D(DUOUT),+VADM(6),$P(Y,".")>+VADM(6) S (DIRUT,DUOUT)=1 W VADM(7) R Y:10
"RTN","PXCEVSIT",47,0)
 K DIR,DA
"RTN","PXCEVSIT",48,0)
 Q
"RTN","PXCEVSIT",49,0)
 ;
"RTN","PXCEVSIT",50,0)
 ;
"RTN","PXCEVSIT",51,0)
EHOSPLOC ;
"RTN","PXCEVSIT",52,0)
 N HLOC,PXRES
"RTN","PXCEVSIT",53,0)
 I $P(PXCEAFTR(0),"^",22)'="" D
"RTN","PXCEVSIT",54,0)
 . N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCEVSIT",55,0)
 . S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEVSIT",56,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCEVSIT",57,0)
 . S DIR("B")=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEVSIT",58,0)
 S DIR(0)="PA^44:AEMQ"
"RTN","PXCEVSIT",59,0)
 S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEVSIT",60,0)
 I $P(PXCETEXT,"~",8)]"" S DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEVSIT",61,0)
 ;Only clinics that are not occasion of service 
"RTN","PXCEVSIT",62,0)
 ; and are not dispositioning clinics
"RTN","PXCEVSIT",63,0)
 ;S DIR("S")="I $P(^(0),U,3)=""C""&'+$G(^(""OOS""))&'$O(^PX(815,1,""DHL"",""B"",Y,0))"
"RTN","PXCEVSIT",64,0)
 ;Only hospital locations that are not dispositioning clinics
"RTN","PXCEVSIT",65,0)
 ;
"RTN","PXCEVSIT",66,0)
 ;not occasion of service and not dispositioning clinics
"RTN","PXCEVSIT",67,0)
 ;S DIR("S")="I '+$G(^(""OOS""))&'$O(^PX(815,1,""DHL"",""B"",Y,0))"
"RTN","PXCEVSIT",68,0)
 ;Exclude disposition clinics from the above listed condition.
"RTN","PXCEVSIT",69,0)
 S DIR("S")="I '+$G(^(""OOS""))" ;PX*1*116
"RTN","PXCEVSIT",70,0)
 D ^DIR
"RTN","PXCEVSIT",71,0)
 K DIR,DA
"RTN","PXCEVSIT",72,0)
 I $D(DTOUT)!$D(DUOUT) S (PXCEEND,PXCEQUIT)=1 Q
"RTN","PXCEVSIT",73,0)
 I +Y'>0,PXCECAT'="HIST" D HELPHLOC W !,$C(7) G EHOSPLOC
"RTN","PXCEVSIT",74,0)
 S HLOC=$S(+Y>0:+Y,1:"")
"RTN","PXCEVSIT",75,0)
 I HLOC'="" S PXRES=$$CLNCK^SDUTL2(HLOC,1) I 'PXRES D  G EHOSPLOC
"RTN","PXCEVSIT",76,0)
 .W !,$C(7),?5,"Clinic MUST be corrected before continuing."
"RTN","PXCEVSIT",77,0)
 S $P(PXCEAFTR(0),"^",22)=HLOC
"RTN","PXCEVSIT",78,0)
 ;
"RTN","PXCEVSIT",79,0)
 ;Get the eligibility and appointment type
"RTN","PXCEVSIT",80,0)
 ;  if there is not already an appointment.
"RTN","PXCEVSIT",81,0)
 ;  Creating a new visit or will lookup and find an old visit.
"RTN","PXCEVSIT",82,0)
 I '$$APPOINT^PXUTL1(PXCEPAT,+PXCEAFTR(0),HLOC) D
"RTN","PXCEVSIT",83,0)
 . S PXELAP=$$ELAP^SDPCE($P(PXCEAFTR(0),"^",5),$P(PXCEAFTR(0),"^",22))
"RTN","PXCEVSIT",84,0)
 E  I HLOC>0 D
"RTN","PXCEVSIT",85,0)
 . ;Get the ELIGIBILITY for the appointment if there is one.
"RTN","PXCEVSIT",86,0)
 . N PXCEELIG
"RTN","PXCEVSIT",87,0)
 . S PXCEELIG=$$ELIGIBIL(PXCEPAT,HLOC,$P(PXCEAFTR(0),"^",1))
"RTN","PXCEVSIT",88,0)
 . S:PXCEELIG>0 $P(PXCEAFTR(0),"^",21)=PXCEELIG
"RTN","PXCEVSIT",89,0)
 Q
"RTN","PXCEVSIT",90,0)
 ;
"RTN","PXCEVSIT",91,0)
HELPDISP ;
"RTN","PXCEVSIT",92,0)
 W !,"You can not select a Dispositioning Clinic."
"RTN","PXCEVSIT",93,0)
 Q
"RTN","PXCEVSIT",94,0)
 ;
"RTN","PXCEVSIT",95,0)
HELPHLOC ;
"RTN","PXCEVSIT",96,0)
 W !!,"Enter the name of the Clinic for this Encounter."
"RTN","PXCEVSIT",97,0)
 W !,"Hospital Location is required."
"RTN","PXCEVSIT",98,0)
 Q
"RTN","PXCEVSIT",99,0)
 ;
"RTN","PXCEVSIT",100,0)
EWORKLOD(ASK) ;
"RTN","PXCEVSIT",101,0)
 ;+If ASK=0 do not ask default to the one for the Hospital Location
"RTN","PXCEVSIT",102,0)
 N DIC,DA
"RTN","PXCEVSIT",103,0)
EWORKLD2 ;
"RTN","PXCEVSIT",104,0)
 K DTOUT,DUOUT,DIC,DA
"RTN","PXCEVSIT",105,0)
 I $P(PXCEAFTR(0),"^",8)+$P(PXCEAFTR(0),"^",22) D
"RTN","PXCEVSIT",106,0)
 . N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCEVSIT",107,0)
 . I $P(PXCEAFTR(0),"^",8)'="" S PXCEINT=$P(PXCEAFTR(0),"^",8)
"RTN","PXCEVSIT",108,0)
 . E  S PXCEINT=$P(^SC($P(PXCEAFTR(0),"^",22),0),"^",7)
"RTN","PXCEVSIT",109,0)
 . S Y=+PXCEINT
"RTN","PXCEVSIT",110,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCEVSIT",111,0)
 . S DIC("B")=$S('$D(DIERR):PXCEEXT,1:$P(PXCEAFTR(0),"^",8))
"RTN","PXCEVSIT",112,0)
 S DIC="^DIC(40.7,"
"RTN","PXCEVSIT",113,0)
 S DIC(0)="AEM"
"RTN","PXCEVSIT",114,0)
 S DIC("S")="I $P(^(0),U,3)=""""!($P(^(0),U,3)'<$P(PXCEAFTR(0),U))"
"RTN","PXCEVSIT",115,0)
 S DIC("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEVSIT",116,0)
 I Y'>0!ASK D
"RTN","PXCEVSIT",117,0)
 . D ^DIC
"RTN","PXCEVSIT",118,0)
 K DIR,DA
"RTN","PXCEVSIT",119,0)
 I $D(DTOUT)!$D(DUOUT) S (PXCEEND,PXCEQUIT)=1 Q
"RTN","PXCEVSIT",120,0)
 I +Y'>0,PXCECAT'="HIST" G EWORKLD2
"RTN","PXCEVSIT",121,0)
 ;+set the stop code into the visit file
"RTN","PXCEVSIT",122,0)
 S $P(PXCEAFTR(0),"^",8)=$S(+Y>0:+Y,1:"")
"RTN","PXCEVSIT",123,0)
 N PXHLOC,PXSC
"RTN","PXCEVSIT",124,0)
 S PXHLOC=$P(PXCEAFTR(0),"^",22)
"RTN","PXCEVSIT",125,0)
 S PXSC=$P($G(^SC(+PXHLOC,0)),"^",7)
"RTN","PXCEVSIT",126,0)
 ;+if the hospital location is a ward then set the encounter type to a P for primary
"RTN","PXCEVSIT",127,0)
 I $P($G(^SC(+PXHLOC,0)),"^",3)["W" S $P(PXCEAFTR(150),"^",3)="P" Q
"RTN","PXCEVSIT",128,0)
 ;+if the stop code on file for the hospital location is the stop code entered or if the stop code in the hospital location file is null then set the encounter type to P for primary
"RTN","PXCEVSIT",129,0)
 I PXSC=+Y!(PXSC=""&PXHLOC) S $P(PXCEAFTR(150),"^",3)="P"
"RTN","PXCEVSIT",130,0)
 Q
"RTN","PXCEVSIT",131,0)
 ;
"RTN","PXCEVSIT",132,0)
ECODT ;Check out date time
"RTN","PXCEVSIT",133,0)
 N PXCHKOUT
"RTN","PXCEVSIT",134,0)
 D CHIKOUT^PXBAPI2("",PXCEPAT,+$P(PXCEAFTR(0),"^",22),$P(PXCEAFTR(0),"^",1))
"RTN","PXCEVSIT",135,0)
 S:PXCHKOUT>0 $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=PXCHKOUT
"RTN","PXCEVSIT",136,0)
 Q
"RTN","PXCEVSIT",137,0)
 ;
"RTN","PXCEVSIT",138,0)
EPAT ;
"RTN","PXCEVSIT",139,0)
 I $P(PXCEAFTR(0),"^",5)'="" Q
"RTN","PXCEVSIT",140,0)
 S DIR(0)="9000010,.05A"
"RTN","PXCEVSIT",141,0)
 S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEVSIT",142,0)
 S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEVSIT",143,0)
 D ^DIR
"RTN","PXCEVSIT",144,0)
 K DIR,DA
"RTN","PXCEVSIT",145,0)
 I X="@" S Y="@"
"RTN","PXCEVSIT",146,0)
 E  I $D(DTOUT)!$D(DUOUT) S (PXCEEND,PXCEQUIT)=1 Q  ;for visit
"RTN","PXCEVSIT",147,0)
 S $P(PXCEAFTR(0),"^",5)=$P(Y,"^")
"RTN","PXCEVSIT",148,0)
 S PXCEPAT=$P(Y,"^") D PATINFO^PXCEPAT(.PXCEPAT) I $D(DTOUT)!$D(DUOUT) S (PXCEEND,PXCEQUIT)=1  ;PX*1*147
"RTN","PXCEVSIT",149,0)
 Q
"RTN","PXCEVSIT",150,0)
 ;
"RTN","PXCEVSIT",151,0)
SKIP ;Just returns used when need a edit routine that does nothing.
"RTN","PXCEVSIT",152,0)
 Q
"RTN","PXCEVSIT",153,0)
 ;
"VER")
8.0^22.0
**INSTALL NAME**
EC*2.0*65
"BLD",5044,0)
EC*2.0*65^EVENT CAPTURE^0^3050316^y
"BLD",5044,4,0)
^9.64PA^720.3^2
"BLD",5044,4,720.3,0)
720.3
"BLD",5044,4,720.3,2,0)
^9.641^720.3^1
"BLD",5044,4,720.3,2,720.3,0)
EC EVENT CODE SCREENS  (File-top level)
"BLD",5044,4,720.3,2,720.3,1,0)
^9.6411^55^1
"BLD",5044,4,720.3,2,720.3,1,55,0)
ASSOCIATED CLINIC
"BLD",5044,4,720.3,222)
y^y^p^^^^n^^n
"BLD",5044,4,720.3,224)

"BLD",5044,4,721,0)
721
"BLD",5044,4,721,2,0)
^9.641^721^1
"BLD",5044,4,721,2,721,0)
EVENT CAPTURE PATIENT  (File-top level)
"BLD",5044,4,721,2,721,1,0)
^9.6411^26^1
"BLD",5044,4,721,2,721,1,26,0)
ASSOCIATED CLINIC
"BLD",5044,4,721,222)
y^y^p^^^^n^^n
"BLD",5044,4,721,224)

"BLD",5044,4,"APDD",720.3,720.3)

"BLD",5044,4,"APDD",720.3,720.3,55)

"BLD",5044,4,"APDD",721,721)

"BLD",5044,4,"APDD",721,721,26)

"BLD",5044,4,"B",720.3,720.3)

"BLD",5044,4,"B",721,721)

"BLD",5044,"ABPKG")
n
"BLD",5044,"KRN",0)
^9.67PA^8989.52^19
"BLD",5044,"KRN",.4,0)
.4
"BLD",5044,"KRN",.401,0)
.401
"BLD",5044,"KRN",.402,0)
.402
"BLD",5044,"KRN",.403,0)
.403
"BLD",5044,"KRN",.5,0)
.5
"BLD",5044,"KRN",.84,0)
.84
"BLD",5044,"KRN",3.6,0)
3.6
"BLD",5044,"KRN",3.8,0)
3.8
"BLD",5044,"KRN",9.2,0)
9.2
"BLD",5044,"KRN",9.8,0)
9.8
"BLD",5044,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",5044,"KRN",9.8,"NM",1,0)
ECEFPAT^^0^B55903915
"BLD",5044,"KRN",9.8,"NM",2,0)
ECMFECS^^0^B22381235
"BLD",5044,"KRN",9.8,"NM",3,0)
ECKILL^^0^B12208137
"BLD",5044,"KRN",9.8,"NM","B","ECEFPAT",1)

"BLD",5044,"KRN",9.8,"NM","B","ECKILL",3)

"BLD",5044,"KRN",9.8,"NM","B","ECMFECS",2)

"BLD",5044,"KRN",19,0)
19
"BLD",5044,"KRN",19.1,0)
19.1
"BLD",5044,"KRN",101,0)
101
"BLD",5044,"KRN",409.61,0)
409.61
"BLD",5044,"KRN",771,0)
771
"BLD",5044,"KRN",870,0)
870
"BLD",5044,"KRN",8989.51,0)
8989.51
"BLD",5044,"KRN",8989.52,0)
8989.52
"BLD",5044,"KRN",8994,0)
8994
"BLD",5044,"KRN","B",.4,.4)

"BLD",5044,"KRN","B",.401,.401)

"BLD",5044,"KRN","B",.402,.402)

"BLD",5044,"KRN","B",.403,.403)

"BLD",5044,"KRN","B",.5,.5)

"BLD",5044,"KRN","B",.84,.84)

"BLD",5044,"KRN","B",3.6,3.6)

"BLD",5044,"KRN","B",3.8,3.8)

"BLD",5044,"KRN","B",9.2,9.2)

"BLD",5044,"KRN","B",9.8,9.8)

"BLD",5044,"KRN","B",19,19)

"BLD",5044,"KRN","B",19.1,19.1)

"BLD",5044,"KRN","B",101,101)

"BLD",5044,"KRN","B",409.61,409.61)

"BLD",5044,"KRN","B",771,771)

"BLD",5044,"KRN","B",870,870)

"BLD",5044,"KRN","B",8989.51,8989.51)

"BLD",5044,"KRN","B",8989.52,8989.52)

"BLD",5044,"KRN","B",8994,8994)

"BLD",5044,"QUES",0)
^9.62^^
"BLD",5044,"REQB",0)
^9.611^2^2
"BLD",5044,"REQB",1,0)
EC*2.0*54^2
"BLD",5044,"REQB",2,0)
EC*2.0*55^2
"BLD",5044,"REQB","B","EC*2.0*54",1)

"BLD",5044,"REQB","B","EC*2.0*55",2)

"FIA",720.3)
EC EVENT CODE SCREENS
"FIA",720.3,0)
^ECJ(
"FIA",720.3,0,0)
720.3I
"FIA",720.3,0,1)
y^y^p^^^^n^^n
"FIA",720.3,0,10)

"FIA",720.3,0,11)

"FIA",720.3,0,"RLRO")

"FIA",720.3,0,"VR")
2.0^EC
"FIA",720.3,720.3)
1
"FIA",720.3,720.3,55)

"FIA",721)
EVENT CAPTURE PATIENT
"FIA",721,0)
^ECH(
"FIA",721,0,0)
721
"FIA",721,0,1)
y^y^p^^^^n^^n
"FIA",721,0,10)

"FIA",721,0,11)

"FIA",721,0,"RLRO")

"FIA",721,0,"VR")
2.0^EC
"FIA",721,721)
1
"FIA",721,721,26)

"MBREQ")
1
"PKG",499,-1)
1^1
"PKG",499,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",499,20,0)
^9.402P^^
"PKG",499,22,0)
^9.49I^1^1
"PKG",499,22,1,0)
2.0^2960508^2970410^11715
"PKG",499,22,1,"PAH",1,0)
65^3050316^100996
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ECEFPAT")
0^1^B55903915
"RTN","ECEFPAT",1,0)
ECEFPAT ;ALB/JAM-Enter Event Capture Data Patient Filer ;12 Oct 00
"RTN","ECEFPAT",2,0)
 ;;2.0; EVENT CAPTURE ;**25,32,39,42,47,49,54,65**;8 May 96
"RTN","ECEFPAT",3,0)
 ;
"RTN","ECEFPAT",4,0)
FILE ;Used by the RPC broker to file patient encounter in file #721
"RTN","ECEFPAT",5,0)
 ;     Variables passed in
"RTN","ECEFPAT",6,0)
 ;       ECIEN   - IEN of #721, if editing
"RTN","ECEFPAT",7,0)
 ;       ECDEL   - Delete record. 1- YES; 0- 0, null or undefine for NO.
"RTN","ECEFPAT",8,0)
 ;       ECDFN   - Patient IEN for file #2
"RTN","ECEFPAT",9,0)
 ;       ECDT    - Date and time of procedure
"RTN","ECEFPAT",10,0)
 ;       ECL     - Location
"RTN","ECEFPAT",11,0)
 ;       ECD     - DSS Unit
"RTN","ECEFPAT",12,0)
 ;       ECC     - Category
"RTN","ECEFPAT",13,0)
 ;       ECP     - Procedure
"RTN","ECEFPAT",14,0)
 ;       ECVOL   - Volume
"RTN","ECEFPAT",15,0)
 ;       ECU     - Provider
"RTN","ECEFPAT",16,0)
 ;       ECMN    - Ordering Section
"RTN","ECEFPAT",17,0)
 ;       ECDUZ   - Entered/Edited by, pointer to #200
"RTN","ECEFPAT",18,0)
 ;       ECU2    - Provider 2, optional
"RTN","ECEFPAT",19,0)
 ;       ECU3    - Provider 3, optional
"RTN","ECEFPAT",20,0)
 ;       ECDX    - Primary Diagnosis
"RTN","ECEFPAT",21,0)
 ;       ECDXS   - Seconday Diagnosis; multiple, optional
"RTN","ECEFPAT",22,0)
 ;       EC4     - Asssociated Clinic, required if sending data to PCE
"RTN","ECEFPAT",23,0)
 ;       ECPTSTAT- Patient Status
"RTN","ECEFPAT",24,0)
 ;       ECPXREAS- Procedure reason, optional
"RTN","ECEFPAT",25,0)
 ;       ECMOD   - CPT modifiers, optional
"RTN","ECEFPAT",26,0)
 ;       ECLASS  - Classification, optional
"RTN","ECEFPAT",27,0)
 ;       ECELIG  - Eligibility, optional
"RTN","ECEFPAT",28,0)
 ;
"RTN","ECEFPAT",29,0)
 ;     Variable return
"RTN","ECEFPAT",30,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #721^Message
"RTN","ECEFPAT",31,0)
 ;
"RTN","ECEFPAT",32,0)
 N NODE,ECS,ECM,ECID,ECCPT,ECINT,ECPCE,ECX,ECERR,ECOUT,ECFLG,ECRES
"RTN","ECEFPAT",33,0)
 S ECFLG=1,ECERR=0 D CHKDT(1) I ECERR Q
"RTN","ECEFPAT",34,0)
 F ECX="ECU","ECU2","ECU3" D  I ECERR Q
"RTN","ECEFPAT",35,0)
 .I $G(@ECX)="" Q
"RTN","ECEFPAT",36,0)
 .S NODE=$$GET^XUA4A72(@ECX,ECDT) I +NODE'>0 S ECERR=1 D  Q
"RTN","ECEFPAT",37,0)
 ..S ^TMP($J,"ECMSG",1)="0^Provider doesn't have an active Person class"
"RTN","ECEFPAT",38,0)
 I $G(ECIEN)'="" S ECFLG=0 D  I ECERR Q
"RTN","ECEFPAT",39,0)
 . I '$D(^ECH(ECIEN)) S ECERR=1,^TMP($J,"ECMSG",1)="0^Pat IEN Not Found"
"RTN","ECEFPAT",40,0)
 I $G(ECDEL) K ^TMP($J,"ECMSG") D  Q
"RTN","ECEFPAT",41,0)
 .S ECVST=$P($G(^ECH(ECIEN,0)),"^",21) I ECVST D
"RTN","ECEFPAT",42,0)
 ..;* Resend all EC records with same Visit file entry to PCE
"RTN","ECEFPAT",43,0)
 ..;* Remove Visit entry from ^ECH( so DELVFILE will complete cleanup
"RTN","ECEFPAT",44,0)
 ..S ECVAR1=$$FNDVST^ECUTL(ECVST) K ECVAR1
"RTN","ECEFPAT",45,0)
 ..;Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECEFPAT",46,0)
 ..S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST) K ECVST,VALQUIET
"RTN","ECEFPAT",47,0)
 .S DA=ECIEN,DIK="^ECH(" D ^DIK K DA,DIK,ECVV
"RTN","ECEFPAT",48,0)
 .S ^TMP($J,"ECMSG",1)="1^Procedure Deleted"
"RTN","ECEFPAT",49,0)
 S ECDT=+ECDT,NODE=$G(^ECD(ECD,0)) I NODE="" D MSG Q
"RTN","ECEFPAT",50,0)
 S ECFN=$G(ECIEN),ECVOL=$G(ECVOL,1),ECS=$P(NODE,U,2),ECM=$P(NODE,U,3)
"RTN","ECEFPAT",51,0)
 S ECPCE="U~"_$S($P(NODE,"^",14)]"":$P(NODE,"^",14),1:"N")
"RTN","ECEFPAT",52,0)
 ;S ECPTSTAT=$$INOUTPT^ECUTL0(ECDFN,+ECDT) ;pat stat may not need
"RTN","ECEFPAT",53,0)
 I $G(EC4)="" D GETCLN^ECEDF
"RTN","ECEFPAT",54,0)
 S ECID=$S(+EC4:$P($G(^SC(+EC4,0)),"^",7),1:""),ECINP=ECPTSTAT
"RTN","ECEFPAT",55,0)
 I $S($P(ECPCE,"~",2)="N":0,$P(ECPCE,"~",2)="O"&(ECINP'="O"):0,1:1) D
"RTN","ECEFPAT",56,0)
 .D CHKDT(2)
"RTN","ECEFPAT",57,0)
 I +EC4 S ECRES=$$CLNCK^SDUTL2(+EC4,0) I 'ECRES D  S ECERR=1
"RTN","ECEFPAT",58,0)
 .S ^TMP($J,"ECMSG",1)=ECRES_" Clinic MUST be corrected before filing."
"RTN","ECEFPAT",59,0)
 Q:ECERR  I ECFLG D NEWIEN
"RTN","ECEFPAT",60,0)
 S ECCPT=$S(ECP["ICPT":+ECP,1:$P($G(^EC(725,+ECP,0)),U,5))
"RTN","ECEFPAT",61,0)
 K DA,DR,DIE S DIE="^ECH(",(DA,ECFN)=ECIEN K ECIEN
"RTN","ECEFPAT",62,0)
 S DR=".01////"_ECFN_";1////"_ECDFN_";3////"_ECL_";4////"_ECS
"RTN","ECEFPAT",63,0)
 S DR=DR_";5////"_ECM_";6////"_ECD_";7////"_+ECC_";9////"_ECVOL
"RTN","ECEFPAT",64,0)
 S $P(^ECH(ECFN,0),"^",9)=ECP
"RTN","ECEFPAT",65,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",66,0)
 S DA=ECFN,DR="10////"_ECU_";11////"_ECMN_";13////"_ECDUZ_";2////"_ECDT
"RTN","ECEFPAT",67,0)
 S ECU2=$G(ECU2),ECU3=$G(ECU3),ECPXREAS=$G(ECPXREAS)
"RTN","ECEFPAT",68,0)
 S DR=DR_";15////"_$S(+ECU2:+ECU2,1:"@")_";17////"_$S(+ECU3:+ECU3,1:"@")
"RTN","ECEFPAT",69,0)
 S DR=DR_";19////"_$S(+ECCPT:ECCPT,1:"@")_";20////"_ECDX
"RTN","ECEFPAT",70,0)
 S DR=DR_";26////"_$G(EC4)_";27////"_$G(ECID)_";29////"_ECPTSTAT
"RTN","ECEFPAT",71,0)
 S DR=DR_";34////"_$S(ECPXREAS="":"@",1:ECPXREAS)
"RTN","ECEFPAT",72,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",73,0)
 S ^DISV(DUZ,"^VA(200,")=$S(+ECU3>0:ECU3,+ECU2>0:ECU2,1:ECU) ;5/30/03
"RTN","ECEFPAT",74,0)
 ;Remove Old CPT modifiers
"RTN","ECEFPAT",75,0)
 I 'ECFLG D
"RTN","ECEFPAT",76,0)
 . K OLDMOD S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""MOD"",",DA=0
"RTN","ECEFPAT",77,0)
 . F  S DA=$O(^ECH(ECDA,"MOD",DA)) Q:'DA  S OLDMOD(DA)="" D ^DIK
"RTN","ECEFPAT",78,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"MOD")
"RTN","ECEFPAT",79,0)
 .;Remove old secondary diagnosis codes
"RTN","ECEFPAT",80,0)
 . K OLDDXS S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""DX"",",DA=0
"RTN","ECEFPAT",81,0)
 . F  S DA=$O(^ECH(ECDA,"DX",DA)) Q:'DA  S OLDDXS(DA)="" D ^DIK
"RTN","ECEFPAT",82,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"DX")
"RTN","ECEFPAT",83,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",84,0)
 ;File CPT modifiers
"RTN","ECEFPAT",85,0)
 I $G(ECMOD)'="" D
"RTN","ECEFPAT",86,0)
 . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",87,0)
 . S DIC="^ECH("_DA(1)_","_"""MOD"""_","
"RTN","ECEFPAT",88,0)
 . F ECX=1:1:$L(ECMOD,"^") S MODIEN=$P(ECMOD,U,ECX) I +MODIEN>0 D
"RTN","ECEFPAT",89,0)
 . . K DD,DO S X=MODIEN D FILE^DICN
"RTN","ECEFPAT",90,0)
 . K MODIEN,DIC
"RTN","ECEFPAT",91,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",92,0)
 ; File multiple secondary diagnosis codes
"RTN","ECEFPAT",93,0)
 I $G(ECDXS)'="" D
"RTN","ECEFPAT",94,0)
 . S DXS="",DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",95,0)
 . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECDXY=ECDX K ECDXX
"RTN","ECEFPAT",96,0)
 . F ECX=1:1:$L(ECDXS,"^") S DXSIEN=$P(ECDXS,U,ECX) I +DXSIEN>0 D
"RTN","ECEFPAT",97,0)
 . . S DXCDE=$$ICDDX^ICDCODE(DXSIEN,ECDT) Q:+DXCDE<0  I '$P(DXCDE,U,10) Q
"RTN","ECEFPAT",98,0)
 . . K DD,DO S X=DXSIEN D FILE^DICN
"RTN","ECEFPAT",99,0)
 . . S DXCDE=$P(DXCDE,U,2),ECDXX(DXCDE)=DXSIEN
"RTN","ECEFPAT",100,0)
 . ; Update all procedures for an encounter with same primary & second dx
"RTN","ECEFPAT",101,0)
 . S PXUPD=$$PXUPD^ECUTL2(ECDFN,ECDT,ECL,EC4,ECDXY,.ECDXX,ECFN)
"RTN","ECEFPAT",102,0)
 . K PXUPD,ECDXY,ECDXX,DXS,DXSIEN,DIC,DXCDE,DA,DD,DO
"RTN","ECEFPAT",103,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",104,0)
 S DA=ECFN
"RTN","ECEFPAT",105,0)
 ;File classification AO^IR^SC^EC^MST^HNC^CV
"RTN","ECEFPAT",106,0)
 I $G(ECLASS)'="" D
"RTN","ECEFPAT",107,0)
 . S CLSTR="21^22^24^23^35^39^40",DR=""
"RTN","ECEFPAT",108,0)
 . F ECX=1:1:$L(CLSTR,"^") D
"RTN","ECEFPAT",109,0)
 . . S DR=DR_$P(CLSTR,U,ECX)_"////"_$P(ECLASS,U,ECX)_";"
"RTN","ECEFPAT",110,0)
 . S DR=$E(DR,1,($L(DR)-1)) D ^DIE
"RTN","ECEFPAT",111,0)
 . K CLSTR,DR,DIE
"RTN","ECEFPAT",112,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",113,0)
 ;
"RTN","ECEFPAT",114,0)
PCE ; format PCE data to send
"RTN","ECEFPAT",115,0)
 I ($P(ECPCE,"~",2)="N")!($P(ECPCE,"~",2)="O"&(ECINP'="O")) D  Q
"RTN","ECEFPAT",116,0)
 .S ^TMP($J,"ECMSG",1)="1^Record Filed"
"RTN","ECEFPAT",117,0)
 D:ECFLG PCE^ECBEN2U I 'ECFLG S EC(0)=^ECH(ECFN,0) D PCEE^ECBEN2U K EC
"RTN","ECEFPAT",118,0)
 I $G(ECOUT)!(ECERR) D  Q
"RTN","ECEFPAT",119,0)
 . D RECDEL S STR=$S($G(^ECH(ECFN,"R")):^("R"),1:" PCE Data Missing")
"RTN","ECEFPAT",120,0)
 . S ^TMP($J,"ECMSG",1)="0^Record Not Filed, "_STR K STR
"RTN","ECEFPAT",121,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_$G(ECIEN)
"RTN","ECEFPAT",122,0)
 Q
"RTN","ECEFPAT",123,0)
 ;
"RTN","ECEFPAT",124,0)
NEWIEN ;Create new IEN in file #721
"RTN","ECEFPAT",125,0)
 N DIC,DA,DD,DO,ECRN
"RTN","ECEFPAT",126,0)
RLCK L +^ECH(0) S ECRN=$P(^ECH(0),"^",3)+1
"RTN","ECEFPAT",127,0)
 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^(0),"^",3)+1 L -^ECH(0) G RLCK
"RTN","ECEFPAT",128,0)
 L -^ECH(0) S DIC(0)="L",DIC="^ECH(",X=ECRN
"RTN","ECEFPAT",129,0)
 D FILE^DICN S ECIEN=+Y
"RTN","ECEFPAT",130,0)
 Q
"RTN","ECEFPAT",131,0)
RECDEL ; Delete record
"RTN","ECEFPAT",132,0)
 ;restore old data
"RTN","ECEFPAT",133,0)
 I 'ECFLG D  Q
"RTN","ECEFPAT",134,0)
 . I $O(OLDMOD("")) D
"RTN","ECEFPAT",135,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",136,0)
 . . S DIC="^ECH("_DA(1)_","_"""MOD"""_",",ECX=0
"RTN","ECEFPAT",137,0)
 . . F  S ECX=$O(OLDMOD(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",138,0)
 . I $O(OLDDXS("")) D
"RTN","ECEFPAT",139,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",140,0)
 . . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECX=0
"RTN","ECEFPAT",141,0)
 . . F  S ECX=$O(OLDDXS(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",142,0)
 . K DIC,DA,DD,DO,OLDMOD,OLDDXS,ECX
"RTN","ECEFPAT",143,0)
 S DA=ECFN,DIK="^ECH(" D ^DIK K DA,DIK
"RTN","ECEFPAT",144,0)
 Q
"RTN","ECEFPAT",145,0)
MSG ;Record not filed
"RTN","ECEFPAT",146,0)
 S ^TMP($J,"ECMSG",1)="0^Record not Filed"
"RTN","ECEFPAT",147,0)
 Q
"RTN","ECEFPAT",148,0)
CHKDT(FLG) ;Required Data Check
"RTN","ECEFPAT",149,0)
 N I,C
"RTN","ECEFPAT",150,0)
 S C=1
"RTN","ECEFPAT",151,0)
 I FLG=1 D  Q
"RTN","ECEFPAT",152,0)
 .F I="ECD","ECC","ECL","ECDT","ECP","ECDFN","ECU","ECMN","ECDUZ","ECPTSTAT" D
"RTN","ECEFPAT",153,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",154,0)
 .I $G(ECDEL),$D(ECIEN) K ^TMP($J,"ECMSG") S ECERR=0
"RTN","ECEFPAT",155,0)
 ;check PCE data
"RTN","ECEFPAT",156,0)
 I FLG=2 D  Q
"RTN","ECEFPAT",157,0)
 .F I="EC4","ECDX" D  Q
"RTN","ECEFPAT",158,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key PCE data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",159,0)
 Q
"RTN","ECEFPAT",160,0)
VALDATA ;validate data
"RTN","ECEFPAT",161,0)
 N ECRRX
"RTN","ECEFPAT",162,0)
 D CHK^DIE(721,1,,"`"_ECDFN,.ECRRX) I ECRRX'=ECDFN D  Q
"RTN","ECEFPAT",163,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Patient"
"RTN","ECEFPAT",164,0)
 D CHK^DIE(721,2,,ECDT,.ECRRX) I ECRRX'=ECDT D  Q
"RTN","ECEFPAT",165,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure Date"
"RTN","ECEFPAT",166,0)
 D CHK^DIE(721,3,,"`"_ECL,.ECRRX) I ECRRX'=ECL D  Q
"RTN","ECEFPAT",167,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Location"
"RTN","ECEFPAT",168,0)
 D CHK^DIE(721,6,,"`"_ECD,.ECRRX) I ECRRX'=ECD D  Q
"RTN","ECEFPAT",169,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid DSS Unit"
"RTN","ECEFPAT",170,0)
 D CHK^DIE(721,7,,"`"_ECC,.ECRRX) I ECRRX'=ECC D  Q
"RTN","ECEFPAT",171,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Category"
"RTN","ECEFPAT",172,0)
 D  I ECERR Q
"RTN","ECEFPAT",173,0)
 .I ECP["ICPT" S ECRRX=$$CPT^ICPTCOD(+ECP,ECDT) I +ECRRX>0,$P(ECRRX,U,7) Q
"RTN","ECEFPAT",174,0)
 .I ECP["EC",$D(^EC(725,+ECP,0)) Q
"RTN","ECEFPAT",175,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure"
"RTN","ECEFPAT",176,0)
 D CHK^DIE(721,10,,"`"_ECU,.ECRRX) I ECRRX'=ECU D  Q
"RTN","ECEFPAT",177,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Provider"
"RTN","ECEFPAT",178,0)
 I $G(ECU2)'="" D CHK^DIE(721,15,,"`"_ECU2,.ECRRX) I ECRRX'=ECU2 D  Q
"RTN","ECEFPAT",179,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Provider #2"
"RTN","ECEFPAT",180,0)
 I $G(ECU3)'="" D CHK^DIE(721,10,,"`"_ECU3,.ECRRX) I ECRRX'=ECU3 D  Q
"RTN","ECEFPAT",181,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Provider #3"
"RTN","ECEFPAT",182,0)
 D CHK^DIE(721,11,,"`"_ECMN,.ECRRX) I ECRRX'=ECMN D  Q
"RTN","ECEFPAT",183,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Orddering Section"
"RTN","ECEFPAT",184,0)
 D CHK^DIE(721,20,,"`"_ECDX,.ECRRX) I ECRRX'=ECDX D  Q
"RTN","ECEFPAT",185,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Primary Diagnosis"
"RTN","ECEFPAT",186,0)
 I $G(EC4)'="" D CHK^DIE(721,26,,"`"_EC4,.ECRRX) I ECRRX'=EC4 D  Q
"RTN","ECEFPAT",187,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Associated Clinic"
"RTN","ECEFPAT",188,0)
 Q
"RTN","ECKILL")
0^3^B12208137
"RTN","ECKILL",1,0)
ECKILL ;BIR/MAM,RHK,JPW-Kill Local Variables ;13 Apr 95
"RTN","ECKILL",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,10,17,18,23,42,54,65**;8 May 96
"RTN","ECKILL",3,0)
 K %,%DT,%ZIS,A,AA,B,CNT,CNT1,COUNT,D,D0,D1,DA,DATA,DATA0,DATE,DFN,DHD,DIC,DIE,DINUM,DIOEND,DIR,DIROUT,DIRUT,DISYS,DTOUT,DUOUT,DLAYGO
"RTN","ECKILL",4,0)
 K EC,EC1,EC2,EC23,EC7,ECA,ECAC,ECACA,ECACC,ECAD,ECADD,ECALL,ECANE,ECAT,ECB,ECBDH,ECBSZ,ECC,ECC1,ECCAC,ECCAT,ECCC
"RTN","ECKILL",5,0)
 K ECCD,ECCH,ECCLC,ECCN,ECCS,ECCSC,ECCSN,ECD,ECD0,ECDA,ECDAT,ECDATA,ECDATA1,ECDATE,ECDFN,ECDI,ECDIA,ECDICA,ECDIV,ECDN,ECDOC,ECDR,ECDRG,ECDS1,ECDT,ECDT1,ECDU,ECDUZ
"RTN","ECKILL",6,0)
 K ECEC,ECED,ECED1,ECEDH,ECEDN,ECEXT,ECF,ECFCP,ECFD,ECFILE,ECFN,ECGRP,ECH
"RTN","ECKILL",7,0)
 K ECHD,ECHEAD,ECHOICE,ECI,ECID,ECINC,ECINST,ECINZ,ECIOP,ECITEM,ECJLP,ECL,ECL1,ECL2,ECL3,ECL4,ECL5,ECL6,ECLALL,ECLDT,ECLDT1,ECLL,ECLN,ECLOC,ECLR,ECLRO
"RTN","ECKILL",8,0)
 K ECM,ECMAX,ECMESG,ECMESS,ECMG,ECMIN,ECMN,ECMNTH,ECMOD,ECMODS,ECMODF,ECMORE,ECMS,ECMSG,ECMSN,ECMW,ECN,ECNEW,ECNO,ECNODE,ECNR,ECNT
"RTN","ECKILL",9,0)
 K PA,PR,V,ECPCNT,ECELPT,ECPNAME,ECPRSL,VOL,ECPROCED,ECDTM,ECDSSU,ECDXO,ECYCLN
"RTN","ECKILL",10,0)
 ;
"RTN","ECKILL",11,0)
 ;- Kill ordering section default variables (ECODFN,ECOM)
"RTN","ECKILL",12,0)
 K ECO,ECO0,ECO1,ECO2,ECOB,ECOD0,ECODE,ECODE0,ECODFN,ECOLD,ECOM,ECON,ECOST,ECOUT
"RTN","ECKILL",13,0)
 ;
"RTN","ECKILL",14,0)
 ;- Kill procedure reason variables (ECPRPTR,ECPRSN,ECREAS)
"RTN","ECKILL",15,0)
 K ECP,ECP1,ECP2,ECPACK,ECPAD,ECPAT,ECPG,ECPIECE,ECPN,ECPO,ECPR,ECPRC,ECPRO,ECPROC,ECPROF,ECPROS,ECPRPTR,ECPRSN,ECPS,ECPT,ECPTF
"RTN","ECKILL",16,0)
 K ECQ,ECQTY,ECRAD0,ECRD,ECREAS,ECREDO,ECREPL,ECRFL,ECRL,ECRN,ECRPL1,ECRTN,ECRX,ECS,ECSA,ECSD,ECSD1,ECSDN,ECSEC,ECSECS,ECSN,ECSSN,ECST,ECSTAT,ECSU
"RTN","ECKILL",17,0)
 K ECT,ECTEMP,ECTEST,ECTR,ECTREAT,ECTRN,ECTWO,ECU,ECU2,ECU2A,ECU3,ECU3A,ECUCNT,ECUN,ECUN1,ECUN2,ECUN3,ECUNIT
"RTN","ECKILL",18,0)
 K ECUNM,ECURG,ECUSER,ECUSR,ECUT,ECUT2,ECUT3,ECUTN,ECUTN2,ECUTN3,ECV,ECWORD,ECX,ECXID,ECXMDA,ECXMDT,ECY,ECYN,ECYNZ,ECRY
"RTN","ECKILL",19,0)
 K FAC,FLDS,FR,I,IOP,J,JJ,K,LINE,LIST,LOC,LOS,MM,MSG,MSG1,MSG2,NODE,NODE1,OK,P1,P11,P2,P3,POP,Q,SC,SDATE,SSN,STC,SU,TEST,TIME,TO,TOTD,UNIT,USER,USRCNT,W,X,XMDUZ
"RTN","ECKILL",20,0)
 K X,XMDUZ,XMSUB,XMTEST,XMTEXT,XMY,Y,ECCNTCHK,ECP1N,ECPI,RK,ECPSYN,C,DI,DQ,DR,ECLINE,ECPIEN,ECSYN,MINCNT,MAXCNT,ECFLG,ECZ,ECPATN,ECFILN,ECPC,ECPF,ECPP,ECR,ECSUB,ECV1,ECVOL,ECDIR,EZCNT,ECERR
"RTN","ECKILL",21,0)
 K ECCODE,ECDDT,ECNATN,ECDONE,NATN,ECPSY,ECRDT,ECPG1,ECNOPE,SYN,ECOLD,ECOLDN,RK,ECOS,ECOSN,PRO,SS,ECPA,ANS
"RTN","ECKILL",22,0)
PCE K ECAO,ECSC,ECZEC,ECIR,ECINP,ECID,EC4,EC4N,ECDX,ECDXN,ECVST,ECVV,ECZZ,LOCP,LOCPX,LOCX,PN,PNP,PNODE,ECMST,ECDXS,ECHNC,ECCV
"RTN","ECKILL",23,0)
 K ECPCL,ECPCID,ECPCRD,ECPKG,ECCPT,EC725,ECONE,ECNODE2,ECCLFLDS,ECELANS,ECELCOD,ECELDSP,ECELIG,ECIOFLG,ECNEWDT,ECPTSTAT,VAEL,ECPTCD
"RTN","ECKILL",24,0)
 K ECP10,ECP11,ECP15,ECP17,ECP19,ECP2,ECP20,ECP3,ECP4,ECPCE,ECPP1,ECPP1A,ECPP2,ECPP3,ECPP4,ECPP5,ECPP6,ECPP9
"RTN","ECKILL",25,0)
 K ^TMP($J)
"RTN","ECKILL",26,0)
 Q
"RTN","ECMFECS")
0^2^B22381235
"RTN","ECMFECS",1,0)
ECMFECS ;ALB/JAM-Event Capture Management - Event Code Screen Filer;27 Nov 00
"RTN","ECMFECS",2,0)
 ;;2.0; EVENT CAPTURE ;**25,33,47,55,65**;8 May 96
"RTN","ECMFECS",3,0)
 ;
"RTN","ECMFECS",4,0)
FILE ;Used by the RPC broker to file EC Code Screens in file #720.3
"RTN","ECMFECS",5,0)
 ;     Variables passed in
"RTN","ECMFECS",6,0)
 ;       ECIEN     - IEN of #720.3, if editing
"RTN","ECMFECS",7,0)
 ;       ECL       - Location
"RTN","ECMFECS",8,0)
 ;       ECD       - DSS Unit
"RTN","ECMFECS",9,0)
 ;       ECC       - Category
"RTN","ECMFECS",10,0)
 ;       ECP       - Procedure
"RTN","ECMFECS",11,0)
 ;       ECST      - Event code screen status
"RTN","ECMFECS",12,0)
 ;       ECSYN     - Synonym
"RTN","ECMFECS",13,0)
 ;       ECVOL     - Volume
"RTN","ECMFECS",14,0)
 ;       ECAC      - Associated Clinic
"RTN","ECMFECS",15,0)
 ;       ECREAS    - Reason indicator
"RTN","ECMFECS",16,0)
 ;       ECRES0..n - array of reasons
"RTN","ECMFECS",17,0)
 ;
"RTN","ECMFECS",18,0)
 ;     Variable return
"RTN","ECMFECS",19,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #720.3^Message
"RTN","ECMFECS",20,0)
 ;
"RTN","ECMFECS",21,0)
 N ECCH,ECERR,ECX,ECY,ECFLG,ECR,ECI,X,Y,DIK,DIE
"RTN","ECMFECS",22,0)
 S ECERR=0 D CHKDT I ECERR Q
"RTN","ECMFECS",23,0)
 D VALDATA I ECERR Q
"RTN","ECMFECS",24,0)
 I ECIEN'="" S ECFLG=0,ECX=$G(^ECJ(ECIEN,0)),ECY=$P(ECX,U) D  I ECERR Q
"RTN","ECMFECS",25,0)
 .I ECX="" D  Q
"RTN","ECMFECS",26,0)
 ..S ECERR=1,^TMP($J,"ECMSG",1)="0^Event Code Screen Not on File" Q
"RTN","ECMFECS",27,0)
 .S ECL=$P(ECY,"-"),ECD=$P(ECY,"-",2),ECC=$P(ECY,"-",3),ECP=$P(ECY,"-",4)
"RTN","ECMFECS",28,0)
 .I ECST="A",$P(ECX,U,2)'="" S DA=ECIEN,DIE="^ECJ(",DR="1///@" D ^DIE Q
"RTN","ECMFECS",29,0)
 .I ECST="I",$P(ECX,U,2)="" S $P(^ECJ(ECIEN,0),U,2)=DT
"RTN","ECMFECS",30,0)
 S ECC=$G(ECC,0),ECCH=ECL_"-"_ECD_"-"_ECC_"-"_ECP
"RTN","ECMFECS",31,0)
 I '$P($G(^ECD(ECD,0)),U,11),ECC D  Q
"RTN","ECMFECS",32,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^DSS Unit/Category inconsistency" Q
"RTN","ECMFECS",33,0)
 I ECIEN="" D  I ECERR Q
"RTN","ECMFECS",34,0)
 .I $D(^ECJ("B",ECCH)) D  Q
"RTN","ECMFECS",35,0)
 ..S ECERR=1,^TMP($J,"ECMSG",1)="0^EC Screen Exist" Q
"RTN","ECMFECS",36,0)
 .D NEWIEN
"RTN","ECMFECS",37,0)
 S DA=ECIEN,DIK="^ECJ(",ECREAS=$S(ECREAS="Y":1,1:0) D IX^DIK
"RTN","ECMFECS",38,0)
 S ^ECJ("AP",ECL,ECD,ECC,ECP,ECIEN)="",^ECJ("APP",ECL,ECD,ECP,ECIEN)=""
"RTN","ECMFECS",39,0)
 S $P(^ECJ(ECIEN,"PRO"),U)=ECP,ECAC=$S($G(ECAC)'="":ECAC,1:"@")
"RTN","ECMFECS",40,0)
 S DR="53////"_$S($G(ECSYN)'="":ECSYN,1:"@")_";54////"_$G(ECVOL,1)
"RTN","ECMFECS",41,0)
 S DR=DR_";55////"_$G(ECAC)_";56////"_ECREAS,DIE="^ECJ(",DA=ECIEN
"RTN","ECMFECS",42,0)
 D ^DIE K DA,DR,DIE
"RTN","ECMFECS",43,0)
 I $D(DTOUT) D RECDEL S ^TMP($J,"ECMSG",1)="0^Record not Filed" Q
"RTN","ECMFECS",44,0)
 I ECREAS D
"RTN","ECMFECS",45,0)
 .K DIC,DA,DR,ECX S DIC="^ECL(",DIC(0)="L",DLAYGO=720.5,ECR=0
"RTN","ECMFECS",46,0)
 .F ECI=0:1 S ECX="ECRES"_ECI Q:'$D(@ECX)  S ECR=(@ECX) D
"RTN","ECMFECS",47,0)
 ..Q:ECR=""  I '$D(^ECR(ECR,0)) Q
"RTN","ECMFECS",48,0)
 ..I '$D(^ECL("AD",ECIEN,ECR)) S X=ECR,DIC("DR")=".02////"_ECIEN
"RTN","ECMFECS",49,0)
 ..K DD,DO,DLAYGO D FILE^DICN
"RTN","ECMFECS",50,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_ECIEN
"RTN","ECMFECS",51,0)
 Q
"RTN","ECMFECS",52,0)
 ;
"RTN","ECMFECS",53,0)
VALDATA ;validate data
"RTN","ECMFECS",54,0)
 N ECRRX,ECRES
"RTN","ECMFECS",55,0)
 S DIC="^DIC(4,",DIC(0)="NX",X=ECL D ^DIC I Y=-1 D  Q
"RTN","ECMFECS",56,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Location"
"RTN","ECMFECS",57,0)
 S DIC="^ECD(",DIC(0)="NX",X=ECD D ^DIC I Y=-1 D  Q
"RTN","ECMFECS",58,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid DSS Unit"
"RTN","ECMFECS",59,0)
 I ECC S DIC="^EC(726,",DIC(0)="NX",X=ECC D ^DIC I Y=-1 D  Q
"RTN","ECMFECS",60,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Category"
"RTN","ECMFECS",61,0)
 I ECP'="" D  I ECERR Q
"RTN","ECMFECS",62,0)
 .; ATG-1003-32110 : by VMP
"RTN","ECMFECS",63,0)
 .I ECP["ICPT" S ECRRX=$$CPT^ICPTCOD(+ECP) I +ECRRX>0 Q:$G(ECIEN)  I $P(ECRRX,U,7) Q
"RTN","ECMFECS",64,0)
 .I ECP["EC",$D(^EC(725,+ECP,0)) Q
"RTN","ECMFECS",65,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure"
"RTN","ECMFECS",66,0)
 I $G(ECAC)'="" D  I ECERR Q
"RTN","ECMFECS",67,0)
 .D CHK^DIE(720.3,55,"E","`"_ECAC,.ECRRX) I ECRRX'=ECAC D  Q
"RTN","ECMFECS",68,0)
 ..S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Associated Clinic"
"RTN","ECMFECS",69,0)
 .S ECRES=$$CLNCK^SDUTL2(ECAC,0) I 'ECRES D  S ECERR=1
"RTN","ECMFECS",70,0)
 ..S ^TMP($J,"ECMSG",1)=ECRES_" Clinic MUST be corrected before filing."
"RTN","ECMFECS",71,0)
 I $G(ECSYN)'="" D CHK^DIE(720.3,53,"E",ECSYN,.ECRRX) I ECRRX'=ECSYN D  Q
"RTN","ECMFECS",72,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Synonym"
"RTN","ECMFECS",73,0)
 I "^N^Y^"'[U_ECREAS_U D  Q
"RTN","ECMFECS",74,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Reason Response"
"RTN","ECMFECS",75,0)
 Q
"RTN","ECMFECS",76,0)
RECDEL ; Delete record
"RTN","ECMFECS",77,0)
 I ECFLG S DA=ECIEN,DIK="^ECJ(" D ^DIK K DA,DIK
"RTN","ECMFECS",78,0)
 Q
"RTN","ECMFECS",79,0)
 ;
"RTN","ECMFECS",80,0)
NEWIEN ;Create new IEN in file #720.3
"RTN","ECMFECS",81,0)
 N DIC,DA,DD,DO
"RTN","ECMFECS",82,0)
 L +^ECJ(0)
"RTN","ECMFECS",83,0)
 S X=ECCH,DIC="^ECJ(",DIC(0)="L",DLAYGO=720.3 D FILE^DICN
"RTN","ECMFECS",84,0)
 L -^ECJ(0)
"RTN","ECMFECS",85,0)
 S ECIEN=+Y,$P(^ECJ(ECIEN,0),U,3)=DT,$P(^ECJ(ECIEN,"PRO"),U)=ECP
"RTN","ECMFECS",86,0)
 I ECST="I" S $P(^ECJ(ECIEN,0),U,2)=DT
"RTN","ECMFECS",87,0)
 Q
"RTN","ECMFECS",88,0)
CHKDT ;Required Data Check
"RTN","ECMFECS",89,0)
 N I,C
"RTN","ECMFECS",90,0)
 S C=1
"RTN","ECMFECS",91,0)
 F I="ECL","ECD","ECC","ECP","ECREAS" D
"RTN","ECMFECS",92,0)
 .I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECMFECS",93,0)
 Q
"RTN","ECMFECS",94,0)
REASON ;Used by the RPC broker to file EC Reasons in file #720.4
"RTN","ECMFECS",95,0)
 ;     Variables passed in
"RTN","ECMFECS",96,0)
 ;       ECIEN     - IEN of #720.4, if editing
"RTN","ECMFECS",97,0)
 ;       ECRES     - Reason
"RTN","ECMFECS",98,0)
 ;       ECST      - Reason status
"RTN","ECMFECS",99,0)
 ;
"RTN","ECMFECS",100,0)
 ;     Variable return
"RTN","ECMFECS",101,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #720.4^Message
"RTN","ECMFECS",102,0)
 ;
"RTN","ECMFECS",103,0)
 N ECOST,ECERR,ECFLG,X,Y,DIC,DIE
"RTN","ECMFECS",104,0)
 S ECERR=0 I $G(ECRES)="" D  I ECERR Q
"RTN","ECMFECS",105,0)
 .S ^TMP($J,"ECMSG",1)="0^Key data missing - Reason",ECERR=1
"RTN","ECMFECS",106,0)
 D CHK^DIE(720.4,.01,,ECRES,.ECRRX) I ECRRX="^" D  Q
"RTN","ECMFECS",107,0)
 .S ^TMP($J,"ECMSG",1)="0^Invalid Reason",ECERR=1
"RTN","ECMFECS",108,0)
 S ECST=$G(ECST,"A")
"RTN","ECMFECS",109,0)
 I "^I^A^"'[U_ECST_U S ^TMP($J,"ECMSG",1)="0^Invalid Reason Status" Q
"RTN","ECMFECS",110,0)
 S ECST=$S(ECST="I":0,1:1),ECIEN=$G(ECIEN),ECFLG=1
"RTN","ECMFECS",111,0)
 I ECIEN'="" S ECFLG=0 I $G(^ECR(ECIEN,0))="" D  I ECERR K ECST Q
"RTN","ECMFECS",112,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Reason Not on File" Q
"RTN","ECMFECS",113,0)
 I ECIEN="" D  I ECERR K ECST Q
"RTN","ECMFECS",114,0)
 .I $D(^ECR("B",ECRES)) S ECERR=1,^TMP($J,"ECMSG",1)="0^Reason Exist" Q
"RTN","ECMFECS",115,0)
 .K DIE,DR,DA
"RTN","ECMFECS",116,0)
 .L +^ECR(0)
"RTN","ECMFECS",117,0)
 .S X=ECRES,DIC="^ECR(",DIC(0)="L",DLAYGO=720.4 D FILE^DICN
"RTN","ECMFECS",118,0)
 .L -^ECR(0)
"RTN","ECMFECS",119,0)
 .S ECIEN=+Y
"RTN","ECMFECS",120,0)
 S ECOST=$P($G(^ECR(ECIEN,0)),U,2)
"RTN","ECMFECS",121,0)
 I ECST'=ECOST D
"RTN","ECMFECS",122,0)
 .S DIE=DIC,DA=ECIEN,DR=".02////"_ECST D ^DIE
"RTN","ECMFECS",123,0)
 S ^TMP($J,"ECMSG",1)="1^Reason Filed"_U_ECIEN K ECST
"RTN","ECMFECS",124,0)
 Q
"VER")
8.0^22.0
"^DD",720.3,720.3,55,0)
ASSOCIATED CLINIC^*P44'X^SC(^PRO;4^S DIC("S")="I $P(^(0),""^"",3)=""C""" D ^DIC K DIC S DIC=DIE,(X,ECYCLN)=+Y K:'+$$CLNCK^SDUTL2(+Y,0) X
"^DD",720.3,720.3,55,.1)
Associated Clinic
"^DD",720.3,720.3,55,3)
Enter the clinic associated with this event code screen.
"^DD",720.3,720.3,55,4)
I $G(ECYCLN)>0 D:'+$$CLNCK^SDUTL2(ECYCLN,1) EN^DDIOL("     Clinic MUST be corrected before selecting.") K ECYCLN
"^DD",720.3,720.3,55,12)
Allows selection of Clinic entries only.
"^DD",720.3,720.3,55,12.1)
S DIC("S")="I $P(^(0),""^"",3)=""C"""
"^DD",720.3,720.3,55,21,0)
^.001^1^1^3041015^^^
"^DD",720.3,720.3,55,21,1,0)
This is the clinic associated with this event code screen.
"^DD",720.3,720.3,55,23,0)
^.001^3^3^3041015^^
"^DD",720.3,720.3,55,23,1,0)
Pointer to the HOSPITAL LOCATION file (#44).  These entries  are
"^DD",720.3,720.3,55,23,2,0)
screened by TYPE field (2).  Only entries with a TYPE of C for
"^DD",720.3,720.3,55,23,3,0)
Clinic may be selected.
"^DD",720.3,720.3,55,"DT")
3040428
"^DD",721,721,26,0)
ASSOCIATED CLINIC^*P44'X^SC(^0;19^S DIC("S")="I $P(^(0),""^"",3)=""C""" D ^DIC K DIC S DIC=DIE,(X,ECYCLN)=+Y K:'+$$CLNCK^SDUTL2(+Y,0) X
"^DD",721,721,26,3)
Enter the clinic associated with this DSS Unit.
"^DD",721,721,26,4)
I $G(ECYCLN)>0 D:'+$$CLNCK^SDUTL2(ECYCLN,1) EN^DDIOL("     Clinic MUST be corrected before selecting.") K ECYCLN
"^DD",721,721,26,12)
Allows selection of Clinic entries only.
"^DD",721,721,26,12.1)
S DIC("S")="I $P(^(0),""^"",3)=""C"""
"^DD",721,721,26,21,0)
^.001^1^1^3041015^^^^
"^DD",721,721,26,21,1,0)
This is the clinic associated with this record.
"^DD",721,721,26,23,0)
^.001^3^3^3041015^^^^
"^DD",721,721,26,23,1,0)
Pointer to the HOSPITAL LOCATION file (#44).  These entries are
"^DD",721,721,26,23,2,0)
screened by TYPE field (2).  Only entries with a TYPE of C for
"^DD",721,721,26,23,3,0)
Clinic may be selected.
"^DD",721,721,26,"DT")
3040427
**INSTALL NAME**
ECX*3.0*72
"BLD",5045,0)
ECX*3.0*72^DSS EXTRACTS^0^3050316^y
"BLD",5045,4,0)
^9.64PA^728.44^1
"BLD",5045,4,728.44,0)
728.44
"BLD",5045,4,728.44,2,0)
^9.641^728.44^1
"BLD",5045,4,728.44,2,728.44,0)
CLINICS AND STOP CODES  (File-top level)
"BLD",5045,4,728.44,2,728.44,1,0)
^9.6411^4^2
"BLD",5045,4,728.44,2,728.44,1,3,0)
DSS STOP CODE
"BLD",5045,4,728.44,2,728.44,1,4,0)
DSS CREDIT STOP CODE
"BLD",5045,4,728.44,222)
y^y^p^^^^n^^n
"BLD",5045,4,728.44,224)

"BLD",5045,4,"APDD",728.44,728.44)

"BLD",5045,4,"APDD",728.44,728.44,3)

"BLD",5045,4,"APDD",728.44,728.44,4)

"BLD",5045,4,"B",728.44,728.44)

"BLD",5045,"ABPKG")
n
"BLD",5045,"KRN",0)
^9.67PA^8989.52^19
"BLD",5045,"KRN",.4,0)
.4
"BLD",5045,"KRN",.401,0)
.401
"BLD",5045,"KRN",.402,0)
.402
"BLD",5045,"KRN",.403,0)
.403
"BLD",5045,"KRN",.5,0)
.5
"BLD",5045,"KRN",.84,0)
.84
"BLD",5045,"KRN",3.6,0)
3.6
"BLD",5045,"KRN",3.8,0)
3.8
"BLD",5045,"KRN",9.2,0)
9.2
"BLD",5045,"KRN",9.8,0)
9.8
"BLD",5045,"KRN",19,0)
19
"BLD",5045,"KRN",19.1,0)
19.1
"BLD",5045,"KRN",101,0)
101
"BLD",5045,"KRN",409.61,0)
409.61
"BLD",5045,"KRN",771,0)
771
"BLD",5045,"KRN",870,0)
870
"BLD",5045,"KRN",8989.51,0)
8989.51
"BLD",5045,"KRN",8989.52,0)
8989.52
"BLD",5045,"KRN",8994,0)
8994
"BLD",5045,"KRN","B",.4,.4)

"BLD",5045,"KRN","B",.401,.401)

"BLD",5045,"KRN","B",.402,.402)

"BLD",5045,"KRN","B",.403,.403)

"BLD",5045,"KRN","B",.5,.5)

"BLD",5045,"KRN","B",.84,.84)

"BLD",5045,"KRN","B",3.6,3.6)

"BLD",5045,"KRN","B",3.8,3.8)

"BLD",5045,"KRN","B",9.2,9.2)

"BLD",5045,"KRN","B",9.8,9.8)

"BLD",5045,"KRN","B",19,19)

"BLD",5045,"KRN","B",19.1,19.1)

"BLD",5045,"KRN","B",101,101)

"BLD",5045,"KRN","B",409.61,409.61)

"BLD",5045,"KRN","B",771,771)

"BLD",5045,"KRN","B",870,870)

"BLD",5045,"KRN","B",8989.51,8989.51)

"BLD",5045,"KRN","B",8989.52,8989.52)

"BLD",5045,"KRN","B",8994,8994)

"BLD",5045,"QUES",0)
^9.62^^
"BLD",5045,"REQB",0)
^9.611^1^1
"BLD",5045,"REQB",1,0)
ECX*3.0*60^2
"BLD",5045,"REQB","B","ECX*3.0*60",1)

"FIA",728.44)
CLINICS AND STOP CODES
"FIA",728.44,0)
^ECX(728.44,
"FIA",728.44,0,0)
728.44P
"FIA",728.44,0,1)
y^y^p^^^^n^^n
"FIA",728.44,0,10)

"FIA",728.44,0,11)

"FIA",728.44,0,"RLRO")

"FIA",728.44,0,"VR")
3.0^ECX
"FIA",728.44,728.44)
1
"FIA",728.44,728.44,3)

"FIA",728.44,728.44,4)

"MBREQ")
1
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^2971222^2980112^11714
"PKG",513,22,1,"PAH",1,0)
72^3050316^100996
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
"^DD",728.44,728.44,3,0)
DSS STOP CODE^NJ3,0X^^0;4^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X Q:'$D(X)  N ECXSC S ECXSC=$O(^DIC(40.7,"C",X,"")) I ECXSC'="" K:("PE"'[$P(^DIC(40.7,ECXSC,0),U,6))!($P(^(0),U,7)>DT) X
"^DD",728.44,728.44,3,3)
Enter a valid Stop Code with restriction type of "Primary" or "Either".
"^DD",728.44,728.44,3,21,0)
^.001^5^5^3041015^^^^
"^DD",728.44,728.44,3,21,1,0)
Three digit Stop Code number assigned to 
"^DD",728.44,728.44,3,21,2,0)
specific location. Each Stop Code number
"^DD",728.44,728.44,3,21,3,0)
represents a type of care or Service/treating
"^DD",728.44,728.44,3,21,4,0)
specialty (clinics only). Stop code must have
"^DD",728.44,728.44,3,21,5,0)
a restriction type of Primary or Either.
"^DD",728.44,728.44,3,23,0)
^.001^2^2^3041015^^^^
"^DD",728.44,728.44,3,23,1,0)
Stop code is verified by existence in File# 40.7
"^DD",728.44,728.44,3,23,2,0)
Node ^DIC(40.7,"C",stop code,pointer) must exist.
"^DD",728.44,728.44,3,"DT")
3040506
"^DD",728.44,728.44,4,0)
DSS CREDIT STOP CODE^NJ3,0X^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X Q:'$D(X)  N ECXSC S ECXSC=$O(^DIC(40.7,"C",X,"")) I ECXSC'="" K:("SE"'[$P(^DIC(40.7,ECXSC,0),U,6))!($P(^(0),U,7)>DT) X
"^DD",728.44,728.44,4,3)
Enter a valid Stop Code with restriction type of "Secondary" or "Either".
"^DD",728.44,728.44,4,21,0)
^.001^6^6^3041015^^^
"^DD",728.44,728.44,4,21,1,0)
Appointments to this clinic will receive this
"^DD",728.44,728.44,4,21,2,0)
Stop Code credit in addition to the 'normal'
"^DD",728.44,728.44,4,21,3,0)
Stop Code credit if a Stop Code different from
"^DD",728.44,728.44,4,21,4,0)
the 'normal' Stop Code for this clinic is
"^DD",728.44,728.44,4,21,5,0)
entered here.  Credit Stop Code must have a
"^DD",728.44,728.44,4,21,6,0)
restriction type of Secondary or Either.
"^DD",728.44,728.44,4,23,0)
^.001^2^2^3041015^^^^
"^DD",728.44,728.44,4,23,1,0)
Credit Stop code is verified by existence in File# 40.7
"^DD",728.44,728.44,4,23,2,0)
Node ^DIC(40.7,"C",stop code,pointer) must exists.
"^DD",728.44,728.44,4,"DT")
3040506
**END**
**END**
