Released DG*5.3*740 SEQ #662
Extracted from mail message
**KIDS**:DG*5.3*740^

**INSTALL NAME**
DG*5.3*740
"BLD",6585,0)
DG*5.3*740^REGISTRATION^0^3070212^y
"BLD",6585,1,0)
^^1^1^3070103^
"BLD",6585,1,1,0)
Fix IN1 segment builder
"BLD",6585,4,0)
^9.64PA^^
"BLD",6585,6.3)
2
"BLD",6585,"KRN",0)
^9.67PA^8989.52^19
"BLD",6585,"KRN",.4,0)
.4
"BLD",6585,"KRN",.401,0)
.401
"BLD",6585,"KRN",.402,0)
.402
"BLD",6585,"KRN",.403,0)
.403
"BLD",6585,"KRN",.5,0)
.5
"BLD",6585,"KRN",.84,0)
.84
"BLD",6585,"KRN",3.6,0)
3.6
"BLD",6585,"KRN",3.8,0)
3.8
"BLD",6585,"KRN",9.2,0)
9.2
"BLD",6585,"KRN",9.8,0)
9.8
"BLD",6585,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",6585,"KRN",9.8,"NM",1,0)
VAFHLIN1^^0^B24342773
"BLD",6585,"KRN",9.8,"NM","B","VAFHLIN1",1)

"BLD",6585,"KRN",19,0)
19
"BLD",6585,"KRN",19.1,0)
19.1
"BLD",6585,"KRN",101,0)
101
"BLD",6585,"KRN",409.61,0)
409.61
"BLD",6585,"KRN",771,0)
771
"BLD",6585,"KRN",870,0)
870
"BLD",6585,"KRN",8989.51,0)
8989.51
"BLD",6585,"KRN",8989.52,0)
8989.52
"BLD",6585,"KRN",8994,0)
8994
"BLD",6585,"KRN","B",.4,.4)

"BLD",6585,"KRN","B",.401,.401)

"BLD",6585,"KRN","B",.402,.402)

"BLD",6585,"KRN","B",.403,.403)

"BLD",6585,"KRN","B",.5,.5)

"BLD",6585,"KRN","B",.84,.84)

"BLD",6585,"KRN","B",3.6,3.6)

"BLD",6585,"KRN","B",3.8,3.8)

"BLD",6585,"KRN","B",9.2,9.2)

"BLD",6585,"KRN","B",9.8,9.8)

"BLD",6585,"KRN","B",19,19)

"BLD",6585,"KRN","B",19.1,19.1)

"BLD",6585,"KRN","B",101,101)

"BLD",6585,"KRN","B",409.61,409.61)

"BLD",6585,"KRN","B",771,771)

"BLD",6585,"KRN","B",870,870)

"BLD",6585,"KRN","B",8989.51,8989.51)

"BLD",6585,"KRN","B",8989.52,8989.52)

"BLD",6585,"KRN","B",8994,8994)

"BLD",6585,"QUES",0)
^9.62^^
"BLD",6585,"REQB",0)
^9.611^1^1
"BLD",6585,"REQB",1,0)
DG*5.3*670^2
"BLD",6585,"REQB","B","DG*5.3*670",1)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
740^3070212
"PKG",5,22,1,"PAH",1,1,0)
^^1^1^3070212
"PKG",5,22,1,"PAH",1,1,1,0)
Fix IN1 segment builder
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","VAFHLIN1")
0^1^B24342773^B24336187
"RTN","VAFHLIN1",1,0)
VAFHLIN1 ;ALB/KCL/SCK/PHH - CREATE HL7 INSURANCE (IN1) SEGMENT ; 02/09/2007
"RTN","VAFHLIN1",2,0)
 ;;5.3;Registration;**122,190,670,740**;Aug 13, 1993;Build 2
"RTN","VAFHLIN1",3,0)
 ;
"RTN","VAFHLIN1",4,0)
 ;
"RTN","VAFHLIN1",5,0)
 ;  This generic function was designed to return the HL7 IN1 (Insurance)
"RTN","VAFHLIN1",6,0)
 ;  segment.  This segment contains VA-specific patient insurance
"RTN","VAFHLIN1",7,0)
 ;  information. (All active insurance data for a patient including
"RTN","VAFHLIN1",8,0)
 ;  those insurance carriers that do not reimburse the VA i.e Medicare)
"RTN","VAFHLIN1",9,0)
 ;
"RTN","VAFHLIN1",10,0)
 ;  SCK - modified for Insurance Encapsulation API
"RTN","VAFHLIN1",11,0)
 ;  1. The Insurance API does not currently support the Pre-Certification flag
"RTN","VAFHLIN1",12,0)
 ;  in the IN1 segment, Field 28.  No value will be returned for field 28.
"RTN","VAFHLIN1",13,0)
 ;  2.  The Insurance API does not support Line 2 or Line 3 of the address.
"RTN","VAFHLIN1",14,0)
 ;  The API returns a single address line.
"RTN","VAFHLIN1",15,0)
 ;
"RTN","VAFHLIN1",16,0)
EN(DFN,VAFSTR,VAFHLQ,VAFHLFS,VAFARRY) ; --
"RTN","VAFHLIN1",17,0)
 ; Entry point to return HL7 IN1 segments.
"RTN","VAFHLIN1",18,0)
 ;
"RTN","VAFHLIN1",19,0)
 ;  Input:
"RTN","VAFHLIN1",20,0)
 ;       DFN - internal entry number of the PATIENT (#2) file.
"RTN","VAFHLIN1",21,0)
 ;    VAFSTR - (optional) string of fields requested seperated
"RTN","VAFHLIN1",22,0)
 ;             by commas.  If not passed, return all data fields.
"RTN","VAFHLIN1",23,0)
 ;    VAFHLQ - (optional) HL7 null variable.
"RTN","VAFHLIN1",24,0)
 ;   VAFHLFS - (optional) HL7 field separator.
"RTN","VAFHLIN1",25,0)
 ;   VAFARRY - (optional) user-supplied array name which will hold
"RTN","VAFHLIN1",26,0)
 ;             HL7 IN1 segments.  Otherwise, ^TMP("VAFIN1",$J) will
"RTN","VAFHLIN1",27,0)
 ;             be used.
"RTN","VAFHLIN1",28,0)
 ;
"RTN","VAFHLIN1",29,0)
 ; Output:
"RTN","VAFHLIN1",30,0)
 ;      Array of HL7 IN1 segments
"RTN","VAFHLIN1",31,0)
 ;
"RTN","VAFHLIN1",32,0)
 N VAFGRP,VAFI,VAFIDX,VAFINS,VAFNODE,VAFPHN,VAFY,VAF36,X,VAFX,VAFTMP
"RTN","VAFHLIN1",33,0)
 S VAFARRY=$G(VAFARRY),VAFIDX=0
"RTN","VAFHLIN1",34,0)
 ;
"RTN","VAFHLIN1",35,0)
 ; if VAFARRY not defined, use ^TMP("VAFIN1",$J)
"RTN","VAFHLIN1",36,0)
 S:(VAFARRY="") VAFARRY="^TMP(""VAFIN1"",$J)"
"RTN","VAFHLIN1",37,0)
 ;
"RTN","VAFHLIN1",38,0)
 ; if VAFHLQ or VAFHLFS not passed, use default HL7 variables
"RTN","VAFHLIN1",39,0)
 S VAFHLQ=$S($D(VAFHLQ):VAFHLQ,1:$G(HLQ)),VAFHLFS=$S($D(VAFHLFS):VAFHLFS,1:$G(HLFS))
"RTN","VAFHLIN1",40,0)
 ;
"RTN","VAFHLIN1",41,0)
 ; if DFN not passed, exit
"RTN","VAFHLIN1",42,0)
 I '$G(DFN) S @VAFARRY@(1,0)="IN1"_VAFHLFS_1 G ENQ
"RTN","VAFHLIN1",43,0)
 ;
"RTN","VAFHLIN1",44,0)
 ; find all insurance data for a patient (IB SUPPORTED CALL)
"RTN","VAFHLIN1",45,0)
 ; This uses the Encapsulated Insurance API to retrieve data into an array
"RTN","VAFHLIN1",46,0)
 ; See IB*2*267 Release Notes v1.0 for flags and array ID's
"RTN","VAFHLIN1",47,0)
 S VAFX=$$INSUR^IBBAPI(DFN,,"R",.VAFTMP,"*")
"RTN","VAFHLIN1",48,0)
 ;
"RTN","VAFHLIN1",49,0)
 ; if no active insurance on file for patient, build IN1
"RTN","VAFHLIN1",50,0)
 I VAFX'=1 D
"RTN","VAFHLIN1",51,0)
 .; Build a null array if no insurance data returned
"RTN","VAFHLIN1",52,0)
 . F VAFI=1:1:22 S VAFINS(1,VAFI)=""
"RTN","VAFHLIN1",53,0)
 .; Merge array to remove first two nodes to simplify handling
"RTN","VAFHLIN1",54,0)
 E  M VAFINS=VAFTMP("IBBAPI","INSUR")
"RTN","VAFHLIN1",55,0)
 ;
"RTN","VAFHLIN1",56,0)
ALL ; get all active insurance for patient
"RTN","VAFHLIN1",57,0)
 F VAFI=0:0 S VAFI=$O(VAFINS(VAFI)) Q:'VAFI  D
"RTN","VAFHLIN1",58,0)
 .D BUILD
"RTN","VAFHLIN1",59,0)
 ;
"RTN","VAFHLIN1",60,0)
ENQ Q
"RTN","VAFHLIN1",61,0)
 ;
"RTN","VAFHLIN1",62,0)
 ;
"RTN","VAFHLIN1",63,0)
BUILD ; Build array of HL7 (IN1) segments
"RTN","VAFHLIN1",64,0)
 S $P(VAFY,VAFHLFS,36)="",VAFIDX=VAFIDX+1
"RTN","VAFHLIN1",65,0)
 ;
"RTN","VAFHLIN1",66,0)
 ; if VAFSTR not passed, return all data fields
"RTN","VAFHLIN1",67,0)
 I $G(VAFSTR)']"" S VAFSTR="4,5,7,8,9,12,13,15,16,17,28,36"
"RTN","VAFHLIN1",68,0)
 S VAFSTR=","_VAFSTR_","
"RTN","VAFHLIN1",69,0)
 ;
"RTN","VAFHLIN1",70,0)
 ; sequential number (required field)
"RTN","VAFHLIN1",71,0)
 S $P(VAFY,VAFHLFS,1)=VAFIDX
"RTN","VAFHLIN1",72,0)
 ;
"RTN","VAFHLIN1",73,0)
 ; build HL7 (IN1) segment fields
"RTN","VAFHLIN1",74,0)
 I VAFSTR[",3," S $P(VAFY,VAFHLFS,3)=+$P(VAFINS(VAFI,1),U) ;Insurance company IEN (P-190)
"RTN","VAFHLIN1",75,0)
 I VAFSTR[",4," S $P(VAFY,VAFHLFS,4)=$S($P(VAFINS(VAFI,1),U,2)]"":$P(VAFINS(VAFI,1),U,2),1:VAFHLQ) ; Insurance Carrier Name
"RTN","VAFHLIN1",76,0)
 I VAFSTR[",5," S X=$$ADDR1(VAFI) S $P(VAFY,VAFHLFS,5)=$S(+X>0:X,1:VAFHLQ)
"RTN","VAFHLIN1",77,0)
 I VAFSTR[",7," S X=$$HLPHONE^HLFNC(VAFINS(VAFI,6)) S $P(VAFY,VAFHLFS,7)=$S(X]"":X,1:VAFHLQ) ; Insurance Co. Phone Number
"RTN","VAFHLIN1",78,0)
 I VAFSTR[",8," S $P(VAFY,VAFHLFS,8)=$S(VAFINS(VAFI,18)]"":VAFINS(VAFI,18),1:VAFHLQ) ; Group Number
"RTN","VAFHLIN1",79,0)
 I VAFSTR[",9," S $P(VAFY,VAFHLFS,9)=$S($P(VAFINS(VAFI,8),U,2)]"":$P(VAFINS(VAFI,8),U,2),1:VAFHLQ) ; Group Name ** The Insurance Encapsulation API doesnot return a "Group" Name, this field will display the Policy Name returned by the API
"RTN","VAFHLIN1",80,0)
 I VAFSTR[",12," S X=$$HLDATE^HLFNC(VAFINS(VAFI,10)) S $P(VAFY,VAFHLFS,12)=$S(X]"":X,1:VAFHLQ) ; Policy Effective Date
"RTN","VAFHLIN1",81,0)
 I VAFSTR[",13," S X=$$HLDATE^HLFNC(VAFINS(VAFI,11)) S $P(VAFY,VAFHLFS,13)=$S(X]"":X,1:VAFHLQ) ; Policy Expiration Date
"RTN","VAFHLIN1",82,0)
 I VAFSTR[",15," S $P(VAFY,VAFHLFS,15)=$S(+$P($G(VAFINS(VAFI,21)),"^")>0:+$P(VAFINS(VAFI,21),"^"),1:VAFHLQ) ; Plan Type (ptr. to Type of Plan (#355.1) file)
"RTN","VAFHLIN1",83,0)
 I VAFSTR[",16," S $P(VAFY,VAFHLFS,16)=$S(VAFINS(VAFI,13)]"":VAFINS(VAFI,13),1:VAFHLQ) ; Name of Insured
"RTN","VAFHLIN1",84,0)
 I VAFSTR[",17," S X=$$WHOSE($P(VAFINS(VAFI,12),U)) S $P(VAFY,VAFHLFS,17)=$S(X]"":X,1:VAFHLQ) ; Whose Insurance
"RTN","VAFHLIN1",85,0)
 ;I VAFSTR[",28," S $P(VAFY,VAFHLFS,28)=VAFHLQ ; $S($P(VAFGRP,"^",6)]"":$P(VAFGRP,"^",6),1:VAFHLQ) ; Is Pre-Certification Required?
"RTN","VAFHLIN1",86,0)
 I VAFSTR[",36," S $P(VAFY,VAFHLFS,36)=$S(VAFINS(VAFI,14)]"":VAFINS(VAFI,14),1:VAFHLQ) ; Subscriber ID
"RTN","VAFHLIN1",87,0)
 ;
"RTN","VAFHLIN1",88,0)
 ; set all active insurance policies into array
"RTN","VAFHLIN1",89,0)
 S @VAFARRY@(VAFIDX,0)="IN1"_VAFHLFS_$G(VAFY)
"RTN","VAFHLIN1",90,0)
 Q
"RTN","VAFHLIN1",91,0)
 ;
"RTN","VAFHLIN1",92,0)
WHOSE(VAFWHO) ; Format Subscriber relationship for HL7 conversion
"RTN","VAFHLIN1",93,0)
 ;
"RTN","VAFHLIN1",94,0)
 ;  Input:  Subscriber relationship from Insurance API, ID=12
"RTN","VAFHLIN1",95,0)
 ;    P - Patient
"RTN","VAFHLIN1",96,0)
 ;    S - Spouse
"RTN","VAFHLIN1",97,0)
 ;    O - Other
"RTN","VAFHLIN1",98,0)
 ;
"RTN","VAFHLIN1",99,0)
 ;  Output:
"RTN","VAFHLIN1",100,0)
 ;    v - Veteran
"RTN","VAFHLIN1",101,0)
 ;    s - Spouse
"RTN","VAFHLIN1",102,0)
 ;    o - Other
"RTN","VAFHLIN1",103,0)
 ;
"RTN","VAFHLIN1",104,0)
 S:VAFWHO["P" VAFWHO="V"
"RTN","VAFHLIN1",105,0)
 Q $$LOW^XLFSTR(VAFWHO)
"RTN","VAFHLIN1",106,0)
 ;
"RTN","VAFHLIN1",107,0)
ADDR1(VAFI) ; Format insurance company address from Insurance API for HL7 conversion.
"RTN","VAFHLIN1",108,0)
 ;
"RTN","VAFHLIN1",109,0)
 ; Input:
"RTN","VAFHLIN1",110,0)
 ;   Index number for Insurance API array
"RTN","VAFHLIN1",111,0)
 ;
"RTN","VAFHLIN1",112,0)
 ; Output:
"RTN","VAFHLIN1",113,0)
 ;   String in the form of the HL7 address field
"RTN","VAFHLIN1",114,0)
 ;
"RTN","VAFHLIN1",115,0)
 N VAFAD,VAFGL
"RTN","VAFHLIN1",116,0)
 S VAFAD=VAFINS(VAFI,2)
"RTN","VAFHLIN1",117,0)
 S VAFGL=VAFINS(VAFI,3)_"^"_$P(VAFINS(VAFI,4),U)_"^"_VAFINS(VAFI,5)
"RTN","VAFHLIN1",118,0)
 ;
"RTN","VAFHLIN1",119,0)
 ; convert DHCP address to HL7 format using HL7 utility
"RTN","VAFHLIN1",120,0)
 Q $$HLADDR^HLFNC(VAFAD,VAFGL)
"RTN","VAFHLIN1",121,0)
 ;
"RTN","VAFHLIN1",122,0)
ADDR(VAFPTR) ; Format insurance company address for HL7 conversion
"RTN","VAFHLIN1",123,0)
 ; Retained for backword compatibility
"RTN","VAFHLIN1",124,0)
 ;
"RTN","VAFHLIN1",125,0)
 ;  Input:  
"RTN","VAFHLIN1",126,0)
 ;    VAFPTR - pointer to Insurance Co. (#36) file 
"RTN","VAFHLIN1",127,0)
 ;
"RTN","VAFHLIN1",128,0)
 ; Output:
"RTN","VAFHLIN1",129,0)
 ;    String in the form of the HL7 address field
"RTN","VAFHLIN1",130,0)
 ;
"RTN","VAFHLIN1",131,0)
 N VAFAD,VAFADDR,VAFGL,VAFST
"RTN","VAFHLIN1",132,0)
 S VAFAD=""
"RTN","VAFHLIN1",133,0)
 ;
"RTN","VAFHLIN1",134,0)
 ; get (.11) node of Insurance Co. (#36) file
"RTN","VAFHLIN1",135,0)
 S VAFADDR=$G(^DIC(36,+VAFPTR,.11))
"RTN","VAFHLIN1",136,0)
 ;
"RTN","VAFHLIN1",137,0)
 ; 1st & 2nd street address lines
"RTN","VAFHLIN1",138,0)
 F VAFST=1,2 S VAFAD=VAFAD_"^"_$P(VAFADDR,"^",VAFST)
"RTN","VAFHLIN1",139,0)
 S VAFAD=$P(VAFAD,"^",2,99)
"RTN","VAFHLIN1",140,0)
 S VAFGL=$P(VAFADDR,"^",4) ; city
"RTN","VAFHLIN1",141,0)
 S VAFGL=VAFGL_"^"_$P(VAFADDR,"^",5) ; state
"RTN","VAFHLIN1",142,0)
 S VAFGL=VAFGL_"^"_$P(VAFADDR,"^",6) ; zip
"RTN","VAFHLIN1",143,0)
 ;
"RTN","VAFHLIN1",144,0)
 ; convert DHCP address to HL7 format using HL7 utility
"RTN","VAFHLIN1",145,0)
 Q $$HLADDR^HLFNC(VAFAD,VAFGL)
"VER")
8.0^22.0
"BLD",6585,6)
^662
**END**
**END**
