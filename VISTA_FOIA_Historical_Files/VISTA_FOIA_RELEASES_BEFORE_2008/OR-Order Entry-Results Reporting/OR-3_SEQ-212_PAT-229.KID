Released OR*3*229 SEQ #212
Extracted from mail message
**KIDS**:OR*3.0*229^

**INSTALL NAME**
OR*3.0*229
"BLD",16999,0)
OR*3.0*229^ORDER ENTRY/RESULTS REPORTING^0^3050325^y
"BLD",16999,4,0)
^9.64PA^^
"BLD",16999,"KRN",0)
^9.67PA^8989.52^19
"BLD",16999,"KRN",.4,0)
.4
"BLD",16999,"KRN",.401,0)
.401
"BLD",16999,"KRN",.402,0)
.402
"BLD",16999,"KRN",.403,0)
.403
"BLD",16999,"KRN",.5,0)
.5
"BLD",16999,"KRN",.84,0)
.84
"BLD",16999,"KRN",3.6,0)
3.6
"BLD",16999,"KRN",3.8,0)
3.8
"BLD",16999,"KRN",9.2,0)
9.2
"BLD",16999,"KRN",9.8,0)
9.8
"BLD",16999,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",16999,"KRN",9.8,"NM",1,0)
ORWDBA1^^0^B53679335
"BLD",16999,"KRN",9.8,"NM","B","ORWDBA1",1)

"BLD",16999,"KRN",19,0)
19
"BLD",16999,"KRN",19,"NM",0)
^9.68A^^
"BLD",16999,"KRN",19.1,0)
19.1
"BLD",16999,"KRN",101,0)
101
"BLD",16999,"KRN",409.61,0)
409.61
"BLD",16999,"KRN",771,0)
771
"BLD",16999,"KRN",870,0)
870
"BLD",16999,"KRN",8989.51,0)
8989.51
"BLD",16999,"KRN",8989.52,0)
8989.52
"BLD",16999,"KRN",8994,0)
8994
"BLD",16999,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",16999,"KRN",8994,"NM",1,0)
ORWDBA7 ISWITCH^^0
"BLD",16999,"KRN",8994,"NM","B","ORWDBA7 ISWITCH",1)

"BLD",16999,"KRN","B",.4,.4)

"BLD",16999,"KRN","B",.401,.401)

"BLD",16999,"KRN","B",.402,.402)

"BLD",16999,"KRN","B",.403,.403)

"BLD",16999,"KRN","B",.5,.5)

"BLD",16999,"KRN","B",.84,.84)

"BLD",16999,"KRN","B",3.6,3.6)

"BLD",16999,"KRN","B",3.8,3.8)

"BLD",16999,"KRN","B",9.2,9.2)

"BLD",16999,"KRN","B",9.8,9.8)

"BLD",16999,"KRN","B",19,19)

"BLD",16999,"KRN","B",19.1,19.1)

"BLD",16999,"KRN","B",101,101)

"BLD",16999,"KRN","B",409.61,409.61)

"BLD",16999,"KRN","B",771,771)

"BLD",16999,"KRN","B",870,870)

"BLD",16999,"KRN","B",8989.51,8989.51)

"BLD",16999,"KRN","B",8989.52,8989.52)

"BLD",16999,"KRN","B",8994,8994)

"BLD",16999,"QUES",0)
^9.62^^
"BLD",16999,"REQB",0)
^9.611^1^1
"BLD",16999,"REQB",1,0)
OR*3.0*195^2
"BLD",16999,"REQB","B","OR*3.0*195",1)

"KRN",8994,2544,-1)
0^1
"KRN",8994,2544,0)
ORWDBA7 ISWITCH^ISWITCH^ORWDBA7^1^P
"KRN",8994,2544,1,0)
^8994.01^3^3^3050131^^^
"KRN",8994,2544,1,1,0)
CIDC RPC
"KRN",8994,2544,1,2,0)
RETURNS 1 IF PATIENT HAS BILLABLE INSURANCE
"KRN",8994,2544,1,3,0)
RETURNS 0 IF PATIENT DOES NOT HAVE BILLABLE INSURANCE
"KRN",8994,2544,2,0)
^8994.02A^1^1
"KRN",8994,2544,2,1,0)
DFN^1^14^1^1
"KRN",8994,2544,2,1,1,0)
^8994.021^1^1^3050131^^^
"KRN",8994,2544,2,1,1,1,0)
PATIENT'S IEN
"KRN",8994,2544,2,"B","DFN",1)

"KRN",8994,2544,2,"PARAMSEQ",1,1)

"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",22,-1)
1^1
"PKG",22,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",22,20,0)
^9.402P^^
"PKG",22,22,0)
^9.49I^1^1
"PKG",22,22,1,0)
3.0^2971217^2980204^64
"PKG",22,22,1,"PAH",1,0)
229^3050325
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","ORWDBA1")
0^1^B53679335
"RTN","ORWDBA1",1,0)
ORWDBA1 ;; SLC OIFO/DKK/GSS - Order Dialogs Billing Awareness;[10/21/03 3:16pm]
"RTN","ORWDBA1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**190,195,229**;Dec 17, 1997
"RTN","ORWDBA1",3,0)
 ;
"RTN","ORWDBA1",4,0)
 ; External References
"RTN","ORWDBA1",5,0)
 ;   DBIA    406  CL^SDCO21 - call to determine Treatment Factors
"RTN","ORWDBA1",6,0)
 ;
"RTN","ORWDBA1",7,0)
 ;Ref to ^DIC(9.4 - DBIA ___
"RTN","ORWDBA1",8,0)
 ;BA refers to Billing Awareness Project
"RTN","ORWDBA1",9,0)
 ;CIDC refers to Clinical Indicator Data Capture (same project 3/10/2004)
"RTN","ORWDBA1",10,0)
 ;Treatment Factors (TxF) refer to SC,AO,IR,EC,MST,HNC,CV
"RTN","ORWDBA1",11,0)
 ;
"RTN","ORWDBA1",12,0)
GETORDX(Y,ORIEN) ; Retrieve Diagnoses for an order - RPC
"RTN","ORWDBA1",13,0)
 ; Input:
"RTN","ORWDBA1",14,0)
 ;   ORIEN    Order Internal ID#
"RTN","ORWDBA1",15,0)
 ; Output:
"RTN","ORWDBA1",16,0)
 ;   Y        Array of Diagnoses (Dx) - Y(#)=#^DxInt#^ICD9^DxDesc^TxF
"RTN","ORWDBA1",17,0)
 ; Variables used:
"RTN","ORWDBA1",18,0)
 ;   CT       Counter for # of Dx related to order
"RTN","ORWDBA1",19,0)
 ;   DXIEN    Dx internal ID
"RTN","ORWDBA1",20,0)
 ;   DXN      Internal (to ^OR(100)) sequence # for Dx storage
"RTN","ORWDBA1",21,0)
 ;   DXREC    Dx record from Order file
"RTN","ORWDBA1",22,0)
 ;   DXV      Dx description
"RTN","ORWDBA1",23,0)
 ;   ICD9     External ICD9 #
"RTN","ORWDBA1",24,0)
 ;   TXFACTRS Treatment Factors (TxF)
"RTN","ORWDBA1",25,0)
 ;
"RTN","ORWDBA1",26,0)
 N CT,DXIEN,DXN,DXREC,DXV,ICD9,ICDR,ORFMDAT,TXFACTRS
"RTN","ORWDBA1",27,0)
 S (CT,DXN)=0
"RTN","ORWDBA1",28,0)
 I '$G(^OR(100,ORIEN,0)) S Y=-1
"RTN","ORWDBA1",29,0)
 I '$D(^OR(100,ORIEN,5.1,1,0)) S Y=0
"RTN","ORWDBA1",30,0)
 E  D  S Y=CT
"RTN","ORWDBA1",31,0)
 . ; Get order date for CSV/CTD/HIPAA usage
"RTN","ORWDBA1",32,0)
 . S ORFMDAT=$$ORFMDAT^ORWDBA3(ORIEN)
"RTN","ORWDBA1",33,0)
 . ; Go through all Dx's for an order
"RTN","ORWDBA1",34,0)
 . F  S DXN=$O(^OR(100,ORIEN,5.1,DXN)) Q:DXN'?1N.N  D
"RTN","ORWDBA1",35,0)
 .. ; Get diagnosis record and IEN
"RTN","ORWDBA1",36,0)
 .. S DXREC=$G(^OR(100,ORIEN,5.1,DXN,0)),DXIEN=$P(DXREC,U)
"RTN","ORWDBA1",37,0)
 .. S ICDR=$$ICDDX^ICDCODE($G(DXIEN),ORFMDAT)
"RTN","ORWDBA1",38,0)
 .. S DXV=$P(ICDR,U,4),ICD9=$P(ICDR,U,2)
"RTN","ORWDBA1",39,0)
 .. ; Convert internal to external Treatment Factors
"RTN","ORWDBA1",40,0)
 .. S TXFACTRS=$$TFGBLGUI(^OR(100,ORIEN,5.2))
"RTN","ORWDBA1",41,0)
 .. S CT=CT+1,Y(CT)=DXN_U_$G(DXIEN)_U_ICD9_U_DXV_U_TXFACTRS
"RTN","ORWDBA1",42,0)
 Q
"RTN","ORWDBA1",43,0)
 ;
"RTN","ORWDBA1",44,0)
SCLST(Y,DFN,ORLST) ; RPC for compiling appropriate TxF's
"RTN","ORWDBA1",45,0)
 ; RPC titled ORWDBA1 SCLST
"RTN","ORWDBA1",46,0)
 ;
"RTN","ORWDBA1",47,0)
 ;  Y       =    Returned value
"RTN","ORWDBA1",48,0)
 ;  DFN     =    Patient IEN
"RTN","ORWDBA1",49,0)
 ;  ORLST   =    List of orders
"RTN","ORWDBA1",50,0)
 ;
"RTN","ORWDBA1",51,0)
 ; call for BA/TF
"RTN","ORWDBA1",52,0)
 N GMRCPROS,ORD,ORI,ORPKG
"RTN","ORWDBA1",53,0)
 D CPLSTBA(.Y,DFN,.ORLST)
"RTN","ORWDBA1",54,0)
 Q
"RTN","ORWDBA1",55,0)
 ;
"RTN","ORWDBA1",56,0)
CPLSTBA(TEST,PTIFN,ORIFNS) ; set-up SC/TFs for BA
"RTN","ORWDBA1",57,0)
 ;
"RTN","ORWDBA1",58,0)
 ;  TEST    =  Returned value
"RTN","ORWDBA1",59,0)
 ;  PTIFN   =  Patient IEN
"RTN","ORWDBA1",60,0)
 ;  ORIFNS  =  List of orders
"RTN","ORWDBA1",61,0)
 ;
"RTN","ORWDBA1",62,0)
 S ORI=""
"RTN","ORWDBA1",63,0)
 ;
"RTN","ORWDBA1",64,0)
 ; define array of packages for which BA data collected (SC/CIs)
"RTN","ORWDBA1",65,0)
 ;  GMRC    =  Consult/Request Tracking (#128) - Prosthetics
"RTN","ORWDBA1",66,0)
 ;  LR      =  Lab Services (#26) - Lab
"RTN","ORWDBA1",67,0)
 ;  PSO     =  Outpt Pharmacy (#112) - Outpt Pharmacy (orig. Co-Pay)
"RTN","ORWDBA1",68,0)
 ;  RA      =  Radiology/Nuclear Medicine (#31) - Radiology
"RTN","ORWDBA1",69,0)
 ;
"RTN","ORWDBA1",70,0)
 F I=1:1 S ORPKG=$P("GMRC;LR;PSO;RA",";",I) Q:ORPKG=""  D
"RTN","ORWDBA1",71,0)
 . S ORPKG(+$O(^DIC(9.4,"C",ORPKG,0)))=1  ; ^DIC(9.4) is package file
"RTN","ORWDBA1",72,0)
 ;
"RTN","ORWDBA1",73,0)
 ; get Treatment Factors (TxF) for patient
"RTN","ORWDBA1",74,0)
 D SCPRE(.DR,DFN)
"RTN","ORWDBA1",75,0)
 ;
"RTN","ORWDBA1",76,0)
 ; set TxF's if order is for a package for which BA data is collected
"RTN","ORWDBA1",77,0)
 F  S ORI=$O(ORLST(ORI)) Q:'ORI  S ORD=+ORLST(ORI) D
"RTN","ORWDBA1",78,0)
 . I $G(^OR(100,ORD,0))="" Q
"RTN","ORWDBA1",79,0)
 . I $D(TEST(ORD))!'$D(ORPKG($P($G(^OR(100,ORD,0)),U,14))) Q
"RTN","ORWDBA1",80,0)
 . S TEST(ORD)=ORLST(ORI)_DR
"RTN","ORWDBA1",81,0)
 Q
"RTN","ORWDBA1",82,0)
 ;
"RTN","ORWDBA1",83,0)
SCPRE(DR,DFN) ; Dialog validation, to ask BA questions
"RTN","ORWDBA1",84,0)
 ;
"RTN","ORWDBA1",85,0)
 ;  DR    =  return value
"RTN","ORWDBA1",86,0)
 ;  DFN   =  input patient IEN
"RTN","ORWDBA1",87,0)
 ;
"RTN","ORWDBA1",88,0)
 Q:$G(DFN)=""
"RTN","ORWDBA1",89,0)
 N CPNODE,CT,I,ORX,ORSDCARY,TF,X
"RTN","ORWDBA1",90,0)
 K ORSDCARY
"RTN","ORWDBA1",91,0)
 S (CPNODE,DR,ORX,TF)="",CT=0,X="T"
"RTN","ORWDBA1",92,0)
 ; Call API to acquire Treatment Factors in force
"RTN","ORWDBA1",93,0)
 D NOW^%DTC,CL^SDCO21(DFN,%,"",.ORSDCARY)  ;DBIA 406
"RTN","ORWDBA1",94,0)
 ; Retrved array order: AO,IR,SC,EC,MST,HNC,CV, e.g., ORSDCARY(3) for SC
"RTN","ORWDBA1",95,0)
 ; Convert to ^OR/CPRS GUI order: SC,MST,AO,IR,EC,HNC,CV
"RTN","ORWDBA1",96,0)
 F I=3,5,1,2,4,6,7 S TF=0,CT=CT+1 S:$D(ORSDCARY(I)) TF=1 S $P(CPNODE,U,CT)=TF
"RTN","ORWDBA1",97,0)
 ;
"RTN","ORWDBA1",98,0)
 S X=$S($P(CPNODE,U)=1:"SC",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",99,0)
 S X=$S($P(CPNODE,U,2)=1:"MST",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",100,0)
 S X=$S($P(CPNODE,U,3)=1:"AO",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",101,0)
 S X=$S($P(CPNODE,U,4)=1:"IR",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",102,0)
 S X=$S($P(CPNODE,U,5)=1:"EC",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",103,0)
 S X=$S($P(CPNODE,U,6)=1:"HNC",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",104,0)
 S X=$S($P(CPNODE,U,7)=1:"CV",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",105,0)
 ;
"RTN","ORWDBA1",106,0)
 ; TxF's for patient (TxF's include SC,AO,IR,EC,MST,HNC,CV) where
"RTN","ORWDBA1",107,0)
 ;  SC      =  Service Connected
"RTN","ORWDBA1",108,0)
 ;  AO      =  Agent Orange
"RTN","ORWDBA1",109,0)
 ;  IR      =  Ionizing Radiation
"RTN","ORWDBA1",110,0)
 ;  EC      =  Environmental Contaminants
"RTN","ORWDBA1",111,0)
 ;  MST     =  Military Sexual Trauma
"RTN","ORWDBA1",112,0)
 ;  HNC     =  Head and Neck Cancer
"RTN","ORWDBA1",113,0)
 ;  CV      =  Combat Veteran
"RTN","ORWDBA1",114,0)
 F I="SC","AO","IR","EC","MST","HNC","CV" D
"RTN","ORWDBA1",115,0)
 . I $D(ORX(I)) S DR=DR_U_I_$S($L(ORX(I)):";"_ORX(I),1:"")
"RTN","ORWDBA1",116,0)
 Q
"RTN","ORWDBA1",117,0)
 ;
"RTN","ORWDBA1",118,0)
ORPKGTYP(Y,ORLST) ; Build BA supported packages array
"RTN","ORWDBA1",119,0)
 ; GMRC=Prosthetics, LR=Lab, PSO=Pharmacy, RA=Radiology
"RTN","ORWDBA1",120,0)
 N OIREC,OIV,OIVN
"RTN","ORWDBA1",121,0)
 F I=1:1 S ORPKG=$P("GMRC;LR;PSO;RA",";",I) Q:ORPKG=""  D
"RTN","ORWDBA1",122,0)
 . S ORPKG(+$O(^DIC(9.4,"C",ORPKG,0)))=ORPKG  ; ^DIC(9.4) is package file
"RTN","ORWDBA1",123,0)
 S GMRCPROS=+$O(^DIC(9.4,"C","GMRC",0))
"RTN","ORWDBA1",124,0)
 ; see if order is for a package which BA supports
"RTN","ORWDBA1",125,0)
 D ORPKG1(.Y,.ORLST)
"RTN","ORWDBA1",126,0)
 Q
"RTN","ORWDBA1",127,0)
 ;
"RTN","ORWDBA1",128,0)
ORPKG1(TEST,ORIFNS) ; Order for package BA supports?  TEST(ORI)=1 is YES
"RTN","ORWDBA1",129,0)
 S U="^",ORI=""
"RTN","ORWDBA1",130,0)
 F I=1:1:5 S OIV(I)=$P("PROSTHETICS REQUEST^EYEGLASS REQUEST^CONTACT LENS REQUEST^HOME OXYGEN REQUEST^AMPUTEE/PROSTHETICS CLINIC",U,I)
"RTN","ORWDBA1",131,0)
 F  S ORI=$O(ORIFNS(ORI)) Q:'ORI  S ORD=+ORIFNS(ORI),TEST(ORI)=0 D
"RTN","ORWDBA1",132,0)
 . I ORD=0 Q  ;document/note not an order
"RTN","ORWDBA1",133,0)
 . ;I ORD="CONSULT_DX" S TEST(ORI)=1 Q  ;consult dx prev entered
"RTN","ORWDBA1",134,0)
 . I '$D(^OR(100,ORD,0)) Q  ;invalid order #
"RTN","ORWDBA1",135,0)
 . I $D(^OR(100,ORD,5.1,1,0)) S TEST(ORI)=1 Q  ;
"RTN","ORWDBA1",136,0)
 . I $P(^OR(100,ORD,0),U,14)'?1N.N Q  ;invalid order # or entry
"RTN","ORWDBA1",137,0)
 . I $P(ORIFNS(ORI),";",2)=2 Q  ;canceled order
"RTN","ORWDBA1",138,0)
 . I '$D(ORPKG($P(^OR(100,ORD,0),U,14))) Q  ;pkg not supported
"RTN","ORWDBA1",139,0)
 . ;      IPt OPt (ask BA questions?)
"RTN","ORWDBA1",140,0)
 . ; Pros  Y   Y   GMRC
"RTN","ORWDBA1",141,0)
 . ; Rad   Y   Y   RA
"RTN","ORWDBA1",142,0)
 . ; Lab   N   Y   LR
"RTN","ORWDBA1",143,0)
 . ; Phrm  Y   Y   PSO
"RTN","ORWDBA1",144,0)
 . ; Pt Class = 'I' or 'O' in ^OR
"RTN","ORWDBA1",145,0)
 . I $P(^OR(100,ORD,0),U,12)="I"&(ORPKG($P(^OR(100,ORD,0),U,14))="LR") Q
"RTN","ORWDBA1",146,0)
 . I $P(^OR(100,ORD,0),U,14)=GMRCPROS D  Q  ;check for Pros consult order
"RTN","ORWDBA1",147,0)
 .. S OIREC=$G(^ORD(101.43,$G(^OR(100,ORD,4.5,1,1)),0)),OIVN=""
"RTN","ORWDBA1",148,0)
 .. F  S OIVN=$O(OIV(OIVN)) Q:OIVN=""  I OIV(OIVN)=$E($P(OIREC,U),1,$L(OIV(OIVN))) S TEST(ORI)=1 Q
"RTN","ORWDBA1",149,0)
 . S TEST(ORI)=1  ;order is for a supported pkg (also note Pros ck above)
"RTN","ORWDBA1",150,0)
 Q
"RTN","ORWDBA1",151,0)
 ;
"RTN","ORWDBA1",152,0)
BASTATUS(Y) ;RPC to retrieve the status of the Billing Awareness software
"RTN","ORWDBA1",153,0)
 ;   Y  =  Returned Value (1=BA usable, 0=BA not-usable)
"RTN","ORWDBA1",154,0)
 ; Check for installation of CIDC ancillary build
"RTN","ORWDBA1",155,0)
 S Y=$D(^XPD(9.7,"B","PX CLINICAL INDICATOR DATA CAPTURE 1.0"))
"RTN","ORWDBA1",156,0)
 Q:'Y
"RTN","ORWDBA1",157,0)
 ; Check if system parameter switch set
"RTN","ORWDBA1",158,0)
 S Y=$$CHKPS1^ORWDBA5
"RTN","ORWDBA1",159,0)
 Q
"RTN","ORWDBA1",160,0)
 ;
"RTN","ORWDBA1",161,0)
BASTAT() ; Internal version of BASTATUS
"RTN","ORWDBA1",162,0)
 ; Returns 0 if disabled or 1 if enabled
"RTN","ORWDBA1",163,0)
 Q $$CHKPS1^ORWDBA5
"RTN","ORWDBA1",164,0)
 ;
"RTN","ORWDBA1",165,0)
RCVORCI(Y,DIAG) ;Receive order related Clinical Indicators & Diagnoses from GUI
"RTN","ORWDBA1",166,0)
 ; Store data in ^OR(100,ODN,5.1) & ^OR(100,0DN,5.2)
"RTN","ORWDBA1",167,0)
 ;
"RTN","ORWDBA1",168,0)
 N DXIEN,ODN,ORIEN,SCI,OCDXCT,OCT
"RTN","ORWDBA1",169,0)
 S ODN="",OCDXCT=0,Y=""
"RTN","ORWDBA1",170,0)
 F  S ODN=$O(DIAG(ODN)) Q:ODN=""  D
"RTN","ORWDBA1",171,0)
 . S ORIEN=$P(DIAG(ODN),";",1)  ;Order IEN
"RTN","ORWDBA1",172,0)
 . I ORIEN'?1N.N S Y=0 Q
"RTN","ORWDBA1",173,0)
 . K ^OR(100,ORIEN,5.1) ;Clear currently stored diagnosis for rewrite
"RTN","ORWDBA1",174,0)
 . ; Data from Delphi format: ORIEN;11CNNNCNN^exDx1^exDx2^exDx3^exDx4
"RTN","ORWDBA1",175,0)
 . ; Convert 7 Tx Factors
"RTN","ORWDBA1",176,0)
 . S SCI=$$TFGUIGBL($RE($E($RE($P(DIAG(ODN),U)),1,7)))
"RTN","ORWDBA1",177,0)
 . S ^OR(100,ORIEN,5.2)=SCI  ;Store TFs (SC,MST,AO,IR,EC..)
"RTN","ORWDBA1",178,0)
 . ; Get order date for CSV/CTD/HIPAA
"RTN","ORWDBA1",179,0)
 . S ORFMDAT=$$ORFMDAT^ORWDBA3(ORIEN)
"RTN","ORWDBA1",180,0)
 . ; Go through the diagnoses entered
"RTN","ORWDBA1",181,0)
 . F OCT=2:1 Q:$P(DIAG(ODN),U,OCT)=""  D
"RTN","ORWDBA1",182,0)
 .. S DXIEN=$P($$ICDDX^ICDCODE($P(DIAG(ODN),U,OCT),ORFMDAT),U,1)  ;Dx IEN
"RTN","ORWDBA1",183,0)
 .. I DXIEN=-1!(DXIEN="") Q  ;No or invalid code passed in
"RTN","ORWDBA1",184,0)
 .. S OCDXCT=OCDXCT+1
"RTN","ORWDBA1",185,0)
 .. S ^OR(100,ORIEN,5.1,0)="^100.051PA^"_OCDXCT_U_OCDXCT ;Set 5.1 zero node
"RTN","ORWDBA1",186,0)
 .. S ^OR(100,ORIEN,5.1,OCDXCT,0)=DXIEN  ;Store a diagnosis for order
"RTN","ORWDBA1",187,0)
 .. S ^OR(100,ORIEN,5.1,"B",DXIEN,OCDXCT)="" ;Index diagnosis for order
"RTN","ORWDBA1",188,0)
 S:Y="" Y=1
"RTN","ORWDBA1",189,0)
 Q
"RTN","ORWDBA1",190,0)
 ;
"RTN","ORWDBA1",191,0)
TFSTGS ; Set Treatment Factor strings sequence order
"RTN","ORWDBA1",192,0)
 ; TFGBL is order of TxFs in ^OR(100,ORIEN,5) & ^OR(100,ORIEN,5.2)
"RTN","ORWDBA1",193,0)
 ; TFGUI is order of TxFs to/from GUI
"RTN","ORWDBA1",194,0)
 ; TFTBL is order of TxFs for table SD008 (used in ZCL segment)
"RTN","ORWDBA1",195,0)
 ; NOTE: change examples in TFGUIGBL and TFGBLGUI if order changed
"RTN","ORWDBA1",196,0)
 S TFGBL="SC^MST^AO^IR^EC^HNC^CV"
"RTN","ORWDBA1",197,0)
 S TFGUI="SC^AO^IR^EC^MST^HNC^CV"
"RTN","ORWDBA1",198,0)
 S TFTBL="AO^IR^SC^EC^MST^HNC^CV"
"RTN","ORWDBA1",199,0)
 Q
"RTN","ORWDBA1",200,0)
 ;
"RTN","ORWDBA1",201,0)
TFGUIGBL(GUI) ;Convert Treatment Factors from GUI to Global order & format
"RTN","ORWDBA1",202,0)
 ;
"RTN","ORWDBA1",203,0)
 ; Input:  GUI in CNU?NCU: C=checked, N=not checked, U=unchecked
"RTN","ORWDBA1",204,0)
 ; Output: GBL in 1^^^0^?^1^0 (global) format (reordered for storage)
"RTN","ORWDBA1",205,0)
 ;
"RTN","ORWDBA1",206,0)
 N GBL,J,NTF,TF,TFGBL,TFGUI,TFTBL
"RTN","ORWDBA1",207,0)
 S GBL="",NTF=7  ;NTF=# of Treatment Factors (TxF)
"RTN","ORWDBA1",208,0)
 ;I $L(GUI)'=NTF Q -1  ;invalid # of TxF
"RTN","ORWDBA1",209,0)
 ; Get Treatment Factor sequence order strings
"RTN","ORWDBA1",210,0)
 D TFSTGS
"RTN","ORWDBA1",211,0)
 ; Convert from GBL to GUI format and sequence
"RTN","ORWDBA1",212,0)
 F J=1:1:NTF S TF=$E(GUI,J) D
"RTN","ORWDBA1",213,0)
 . S TF($P(TFGUI,U,J))=$S(TF="C":1,TF="U":0,TF="?":"?",1:"")
"RTN","ORWDBA1",214,0)
 F J=1:1:NTF S GBL=GBL_U_TF($P(TFGBL,U,J))
"RTN","ORWDBA1",215,0)
 Q $P(GBL,U,2,NTF+1)
"RTN","ORWDBA1",216,0)
 ;
"RTN","ORWDBA1",217,0)
TFGBLGUI(GBL) ;Convert Treatment Factors from Global to GUI order & format
"RTN","ORWDBA1",218,0)
 ;
"RTN","ORWDBA1",219,0)
 ; Input:  GBL in 1^0^1^1^^0^? (global) format
"RTN","ORWDBA1",220,0)
 ; Output: GUI in CCCNUU? (GUI) format (also reordered)
"RTN","ORWDBA1",221,0)
 ;
"RTN","ORWDBA1",222,0)
 N GUI,J,NTF,TF,TFGBL,TFGUI,TFTBL
"RTN","ORWDBA1",223,0)
 S GUI="",NTF=7  ;NCI=# of TxF
"RTN","ORWDBA1",224,0)
 ; Get Treatment Factor sequence order strings
"RTN","ORWDBA1",225,0)
 D TFSTGS
"RTN","ORWDBA1",226,0)
 ; Convert from GUI to GBL format and sequence
"RTN","ORWDBA1",227,0)
 F J=1:1:NTF S TF=$P(GBL,U,J) D
"RTN","ORWDBA1",228,0)
 . S TF($P(TFGBL,U,J))=$S(TF=1:"C",TF=0:"U",TF="?":"?",1:"N")
"RTN","ORWDBA1",229,0)
 F J=1:1:NTF S GUI=GUI_TF($P(TFGUI,U,J))
"RTN","ORWDBA1",230,0)
 Q GUI
"RTN","ORWDBA1",231,0)
 ;
"RTN","ORWDBA1",232,0)
PRVKEY(X) ;Check for active & provider key - to be deleted in CPRS v26
"RTN","ORWDBA1",233,0)
 N PTD
"RTN","ORWDBA1",234,0)
 Q:'+$G(X) 0
"RTN","ORWDBA1",235,0)
 Q:$G(^VA(200,X,0))="" 0
"RTN","ORWDBA1",236,0)
 S PTD=+$P(^VA(200,X,0),"^",11)
"RTN","ORWDBA1",237,0)
 I $$DT^XLFDT'<PTD,PTD>0 Q 0
"RTN","ORWDBA1",238,0)
 Q:$D(^XUSEC("PROVIDER",X)) 1
"RTN","ORWDBA1",239,0)
 Q 0
"RTN","ORWDBA1",240,0)
 ;
"RTN","ORWDBA1",241,0)
ORESKEY(X) ;Does 'X' hold ORES key, returns: 1=true, 0=false
"RTN","ORWDBA1",242,0)
 Q:'+$G(X) 0
"RTN","ORWDBA1",243,0)
 Q:$D(^XUSEC("ORES",X)) 1
"RTN","ORWDBA1",244,0)
 Q 0
"VER")
8.0^22.0
**END**
**END**
