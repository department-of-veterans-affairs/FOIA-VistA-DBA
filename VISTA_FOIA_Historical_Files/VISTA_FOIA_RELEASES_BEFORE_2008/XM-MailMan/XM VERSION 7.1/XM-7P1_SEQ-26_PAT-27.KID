Released XM*7.1*27 SEQ #26
Extracted from mail message
**KIDS**:XM*7.1*27^

**INSTALL NAME**
XM*7.1*27
"BLD",7,0)
XM*7.1*27^MAILMAN^0^2961025^n
"BLD",7,1,0)
^^174^174^2961025^^^^
"BLD",7,1,1,0)
 This MailMan patch is dependent on Kernel patch XU*8*24, which should
"BLD",7,1,2,0)
 be installed before this patch.  This patch contains the following bug
"BLD",7,1,3,0)
 fixes and features:
"BLD",7,1,4,0)

"BLD",7,1,5,0)
-Sites getting errors with TCP/IP mail in ^XMC1A. Nois NCH-0696-41098,
"BLD",7,1,6,0)
 WNY-0696-10208, & BRX-0696-11028.
"BLD",7,1,7,0)
-The date/time of original message is added to a copied message.
"BLD",7,1,8,0)
-The 'TCP/IP POLLER RUN FLAG' in file 4.3 is cleared when poller is
"BLD",7,1,9,0)
 restarted.
"BLD",7,1,10,0)
-Transmission scripts were not switching over. Nois BRX-0496-10709 &
"BLD",7,1,11,0)
 ALB-0596-51476.
"BLD",7,1,12,0)
-XMDUZ is undefined when receiving mail. Nois IVM-0896-31669.
"BLD",7,1,13,0)
-Statistics was not collecting Response time. Nois DAY-0596-40308.
"BLD",7,1,14,0)
-XMB will now 'NEW X'. Nois MEM-0496-70250, MIN-0396-42065, &
"BLD",7,1,15,0)
 NAS-0496-30171.
"BLD",7,1,16,0)
-Change the header of the statistics report, 'Last Sign On' is now
"BLD",7,1,17,0)
 'Last Mail Use'. Nois DAY-0196-41801.
"BLD",7,1,18,0)
-Undefined error on Headerless print of messages. Nois BRX-0196-10570.
"BLD",7,1,19,0)
-Subscript errors from internet messages when the address is to long.
"BLD",7,1,20,0)
 Nois HIN-0296-41163.
"BLD",7,1,21,0)
-More information is being recorded in the MESSAGE STATISTICS file,
"BLD",7,1,22,0)
 # 4.2999. This will help with debugging transmission scripts.
"BLD",7,1,23,0)
-A new Option 'Toggle a script out of service' can be used to place a
"BLD",7,1,24,0)
 Transmission Script out of service and requeue the domain.
"BLD",7,1,25,0)
-MM now uses the new M95 Error trap in DSM. This change and the updating
"BLD",7,1,26,0)
 of the Taskman Error Screening should prevent numerous disconnect error from
"BLD",7,1,27,0)
 showing up in your error trap.
"BLD",7,1,28,0)
-Purge by date was not purging Internet messages. Nois HIN-0896-40170 and
"BLD",7,1,29,0)
 PHO-0796-60127
"BLD",7,1,30,0)
===========================================================================
"BLD",7,1,31,0)
 *** You MUST install Kernel patch XU*8*24 before installing this patch ***
"BLD",7,1,32,0)

"BLD",7,1,33,0)
 This patch should be installed after hours, when there is minimum users on
"BLD",7,1,34,0)
 the system.  You should put the XMUSER Option out of order.
"BLD",7,1,35,0)

"BLD",7,1,36,0)
 MSM Sites: The routine XMRTCP must be moved to your NT machine and then
"BLD",7,1,37,0)
 reboot MSM on the NT machine.  This will restart the TCP/IP poller.
"BLD",7,1,38,0)
===========================================================================
"BLD",7,1,39,0)

"BLD",7,1,40,0)
INSTALLATION:
"BLD",7,1,41,0)
  1.  These routines are usually mapped on systems that allow mapping,
"BLD",7,1,42,0)
      so you will need to disable mapping for the effected routines.
"BLD",7,1,43,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",7,1,44,0)
      option will load the KIDS package onto your system.
"BLD",7,1,45,0)
  3.  The patch has now been loaded into a Transport global on your
"BLD",7,1,46,0)
      system. You now need to use KIDS to install the Transport global.
"BLD",7,1,47,0)
  4.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",7,1,48,0)
      options:
"BLD",7,1,49,0)
         Verify Checksums in Transport Global
"BLD",7,1,50,0)
         Print Transport Global
"BLD",7,1,51,0)
         Compare Transport Global to Current System
"BLD",7,1,52,0)
         Backup a Transport Global
"BLD",7,1,53,0)
         Install Package(s)
"BLD",7,1,54,0)
  5.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"BLD",7,1,55,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"BLD",7,1,56,0)
  6.  AXP Sites, after patch has installed, rebuild your map set.
"BLD",7,1,57,0)
===========================================================================  
"BLD",7,1,58,0)
  
"BLD",7,1,59,0)
 ROUTINES:
"BLD",7,1,60,0)
   The second line of the routine now looks like:
"BLD",7,1,61,0)
       ;;7.1;MailMan;**[patch list]**;Jun 02, 1994
"BLD",7,1,62,0)
 
"BLD",7,1,63,0)
 Name          Checksum          Patch List
"BLD",7,1,64,0)
 ----------------------------------------------------------
"BLD",7,1,65,0)
 XMA2C0        9088344           24,27
"BLD",7,1,66,0)
 XMA2R         4793721           27
"BLD",7,1,67,0)
 XMA31         2140577           27
"BLD",7,1,68,0)
 XMA32A        11841830          27
"BLD",7,1,69,0)
 XMAD1         7205963           24,27
"BLD",7,1,70,0)
 XMADGO        2112000           5,27
"BLD",7,1,71,0)
 XMAFTP        3717135           27
"BLD",7,1,72,0)
 XMAP0         4991024           27
"BLD",7,1,73,0)
 XMAPHOST      6366459           7,14,27
"BLD",7,1,74,0)
 XMB           7258608           3,7,24,26,27
"BLD",7,1,75,0)
 XMBPOST       9662243           1,4,13,23,24,27
"BLD",7,1,76,0)
 XMC1          6875049           4,13,20,27
"BLD",7,1,77,0)
 XMC11A        3517372           27
"BLD",7,1,78,0)
 XMC1A         7333631           27
"BLD",7,1,79,0)
 XMC2          12142809          13,23,27
"BLD",7,1,80,0)
 XMCTLK        9708749           10,27
"BLD",7,1,81,0)
 XMCTRAP       144752            20,27
"BLD",7,1,82,0)
 XMDIR1        10096361          27
"BLD",7,1,83,0)
 XMDIR1A       4726311           27
"BLD",7,1,84,0)
 XMDIR1B       3077473           27
"BLD",7,1,85,0)
 XMLTCP        2446407           8,27
"BLD",7,1,86,0)
 XMR0          8606729           27
"BLD",7,1,87,0)
 XMR0A         3476739           27
"BLD",7,1,88,0)
 XMRFTP        3153916           27
"BLD",7,1,89,0)
 XMRFTPUX      3165955           27
"BLD",7,1,90,0)
 XMRTCP        4812676           8,25,27
"BLD",7,1,91,0)
 XMRUCX        338699            27
"BLD",7,1,92,0)
 XMS0          9449052           8,13,20,23,27
"BLD",7,1,93,0)
 XMS5          12968983          8,13,23,27
"BLD",7,1,94,0)
 XMUT5C        3064751           27
"BLD",7,1,95,0)
============================================================================
"BLD",7,1,96,0)
 DOCUMENTATION:
"BLD",7,1,97,0)

"BLD",7,1,98,0)
 In order to fully utilize the new Error Processing in MailMan, you should
"BLD",7,1,99,0)
 start screening the 'Disconnect Errors'. To do this, look at the following
"BLD",7,1,100,0)
 options:
"BLD",7,1,101,0)
 Taskman Management ...
"BLD",7,1,102,0)
   Taskman Management Utilities ...
"BLD",7,1,103,0)
     Taskman Error Log ...
"BLD",7,1,104,0)
        List Error Screens
"BLD",7,1,105,0)
        Add Error Screens
"BLD",7,1,106,0)

"BLD",7,1,107,0)
 Use the option 'List Error Screens' to see what errors you are currently
"BLD",7,1,108,0)
 screening.  Use the option 'Add Error Screens' to add the following errors:
"BLD",7,1,109,0)
               AXP sites                       486 sites
"BLD",7,1,110,0)
               ---------                       ---------
"BLD",7,1,111,0)
               DISCON                          DSCON
"BLD",7,1,112,0)
               HANGUP
"BLD",7,1,113,0)
               REJECT
"BLD",7,1,114,0)
               CONNECFAIL
"BLD",7,1,115,0)

"BLD",7,1,116,0)
 OPTION:
"BLD",7,1,117,0)

"BLD",7,1,118,0)
 Manage Mailman ...
"BLD",7,1,119,0)
   Network Management ...
"BLD",7,1,120,0)
     Transmission Management ...
"BLD",7,1,121,0)

"BLD",7,1,122,0)
 'Toggle a script out of service'     Option name: XMSCRIPTOUT
"BLD",7,1,123,0)
   This options lets you edit the OUT OF SERVICE field for a Transmission
"BLD",7,1,124,0)
   Script in the Domain file. You can also requeue the Domain for transmission
"BLD",7,1,125,0)
   from this option.
"BLD",7,1,126,0)

"BLD",7,1,127,0)

"BLD",7,1,128,0)
 DATA DICTIONARY:  Partial DD
"BLD",7,1,129,0)

"BLD",7,1,130,0)
  File:  DOMAIN #4.2
"BLD",7,1,131,0)

"BLD",7,1,132,0)
   Field:
"BLD",7,1,133,0)
    4      TRANSMISSION SCRIPT
"BLD",7,1,134,0)
    Subfield:
"BLD",7,1,135,0)
    1.5    OUT OF SERVICE
"BLD",7,1,136,0)
             This is the preferred field to set to take a script out of
"BLD",7,1,137,0)
             service,to prevent it from being used.
"BLD",7,1,138,0)

"BLD",7,1,139,0)
  File:  MESSAGE STATISTICS #4.2999
"BLD",7,1,140,0)

"BLD",7,1,141,0)
   Fields:
"BLD",7,1,142,0)
    41     XMIT START DATE/TIME
"BLD",7,1,143,0)
             This field helps MailMan determine, after a fatal error,
"BLD",7,1,144,0)
             whether to start the transmission process at script 1,
"BLD",7,1,145,0)
             try 1, or to start elsewhere.
"BLD",7,1,146,0)

"BLD",7,1,147,0)
    42     XMIT FINISH DATE/TIME
"BLD",7,1,148,0)
             This may be useful information for debugging purposes.
"BLD",7,1,149,0)

"BLD",7,1,150,0)
    43     XMIT SCRIPT
"BLD",7,1,151,0)
             This tells MailMan which script is/was being used.
"BLD",7,1,152,0)

"BLD",7,1,153,0)
    44     XMIT TRIES
"BLD",7,1,154,0)
             This tells MailMan how many tries have been made with
"BLD",7,1,155,0)
             the current script.
"BLD",7,1,156,0)

"BLD",7,1,157,0)
    45     XMIT LATEST TRY DATE/TIME
"BLD",7,1,158,0)
             This may be useful information for debugging purposes.
"BLD",7,1,159,0)

"BLD",7,1,160,0)
    46     XMIT SCRIPT CYCLE ITERATIONS
"BLD",7,1,161,0)
             This is the number of script cycles we have tried.  This
"BLD",7,1,162,0)
             field starts off at 0.  After we have tried all the scripts
"BLD",7,1,163,0)
             available, we bump up this field by 1.
"BLD",7,1,164,0)

"BLD",7,1,165,0)
    47     XMIT FIRST SCRIPT
"BLD",7,1,166,0)
             This field notes which script has the highest priority, that
"BLD",7,1,167,0)
             is, which script was tried first.
"BLD",7,1,168,0)

"BLD",7,1,169,0)
    51     XMIT SCRIPT RECORD
"BLD",7,1,170,0)
             This is a copy of the zero node of the latest script used.
"BLD",7,1,171,0)

"BLD",7,1,172,0)
    60     XMIT AUDIT
"BLD",7,1,173,0)
             This multiple contains an audit of the attempts that have
"BLD",7,1,174,0)
             been made during this transmission.
"BLD",7,4,0)
^9.64PA^4.2^2
"BLD",7,4,4.2,0)
4.2
"BLD",7,4,4.2,2,0)
^9.641^4.21^1
"BLD",7,4,4.2,2,4.21,0)
TRANSMISSION SCRIPT  (sub-file)
"BLD",7,4,4.2,2,4.21,1,0)
^9.6411^1.5^1
"BLD",7,4,4.2,2,4.21,1,1.5,0)
OUT OF SERVICE
"BLD",7,4,4.2,222)
y^y^p^^^^n
"BLD",7,4,4.2999,0)
4.2999
"BLD",7,4,4.2999,2,0)
^9.641^4.29992^2
"BLD",7,4,4.2999,2,4.2999,0)
MESSAGE STATISTICS  (File-top level)
"BLD",7,4,4.2999,2,4.2999,1,0)
^9.6411^47^8
"BLD",7,4,4.2999,2,4.2999,1,41,0)
XMIT START DATE/TIME
"BLD",7,4,4.2999,2,4.2999,1,42,0)
XMIT FINISH DATE/TIME
"BLD",7,4,4.2999,2,4.2999,1,43,0)
XMIT SCRIPT
"BLD",7,4,4.2999,2,4.2999,1,44,0)
XMIT TRIES
"BLD",7,4,4.2999,2,4.2999,1,45,0)
XMIT LATEST TRY DATE/TIME
"BLD",7,4,4.2999,2,4.2999,1,46,0)
XMIT SCRIPT CYCLE ITERATIONS
"BLD",7,4,4.2999,2,4.2999,1,47,0)
XMIT FIRST SCRIPT
"BLD",7,4,4.2999,2,4.2999,1,51,0)
XMIT SCRIPT RECORD
"BLD",7,4,4.2999,2,4.29992,0)
XMIT AUDIT  (sub-file)
"BLD",7,4,4.2999,2,4.29992,1,0)
^9.6411^^
"BLD",7,4,4.2999,222)
y^y^p^^^^n
"BLD",7,4,"APDD",4.2,4.21)

"BLD",7,4,"APDD",4.2,4.21,1.5)

"BLD",7,4,"APDD",4.2999,4.2999)

"BLD",7,4,"APDD",4.2999,4.2999,41)

"BLD",7,4,"APDD",4.2999,4.2999,42)

"BLD",7,4,"APDD",4.2999,4.2999,43)

"BLD",7,4,"APDD",4.2999,4.2999,44)

"BLD",7,4,"APDD",4.2999,4.2999,45)

"BLD",7,4,"APDD",4.2999,4.2999,46)

"BLD",7,4,"APDD",4.2999,4.2999,47)

"BLD",7,4,"APDD",4.2999,4.2999,51)

"BLD",7,4,"APDD",4.2999,4.29992)

"BLD",7,4,"B",4.2,4.2)

"BLD",7,4,"B",4.2999,4.2999)

"BLD",7,"KRN",0)
^9.67PA^.84^11
"BLD",7,"KRN",.4,0)
.4
"BLD",7,"KRN",.401,0)
.401
"BLD",7,"KRN",.402,0)
.402
"BLD",7,"KRN",.403,0)
.403
"BLD",7,"KRN",.5,0)
.5
"BLD",7,"KRN",.84,0)
.84
"BLD",7,"KRN",3.6,0)
3.6
"BLD",7,"KRN",9.2,0)
9.2
"BLD",7,"KRN",9.8,0)
9.8
"BLD",7,"KRN",9.8,"NM",0)
^9.68A^32^30
"BLD",7,"KRN",9.8,"NM",1,0)
XMB^^0^B17326075
"BLD",7,"KRN",9.8,"NM",2,0)
XMRTCP^^0^B14159770
"BLD",7,"KRN",9.8,"NM",3,0)
XMA2C0^^0^B17411747
"BLD",7,"KRN",9.8,"NM",4,0)
XMS0^^0^B23585924
"BLD",7,"KRN",9.8,"NM",5,0)
XMBPOST^^0^B36963711
"BLD",7,"KRN",9.8,"NM",6,0)
XMAP0^^0^B8502559
"BLD",7,"KRN",9.8,"NM",7,0)
XMA31^^0^B2481488
"BLD",7,"KRN",9.8,"NM",8,0)
XMC1A^^0^B14209637
"BLD",7,"KRN",9.8,"NM",9,0)
XMUT5C^^0^B5595905
"BLD",7,"KRN",9.8,"NM",10,0)
XMS5^^0^B28058971
"BLD",7,"KRN",9.8,"NM",13,0)
XMC11A^^0^B6222083
"BLD",7,"KRN",9.8,"NM",14,0)
XMR0A^^0^B5556636
"BLD",7,"KRN",9.8,"NM",15,0)
XMCTRAP^^0^B245736
"BLD",7,"KRN",9.8,"NM",16,0)
XMC1^^0^B12630244
"BLD",7,"KRN",9.8,"NM",17,0)
XMC2^^0^B26486455
"BLD",7,"KRN",9.8,"NM",18,0)
XMA32A^^0^B21052443
"BLD",7,"KRN",9.8,"NM",19,0)
XMADGO^^0^B4114025
"BLD",7,"KRN",9.8,"NM",20,0)
XMAPHOST^^0^B13238250
"BLD",7,"KRN",9.8,"NM",21,0)
XMCTLK^^0^B19626258
"BLD",7,"KRN",9.8,"NM",22,0)
XMDIR1^^0^B23913879
"BLD",7,"KRN",9.8,"NM",23,0)
XMDIR1A^^0^B8485924
"BLD",7,"KRN",9.8,"NM",24,0)
XMDIR1B^^0^B5106401
"BLD",7,"KRN",9.8,"NM",25,0)
XMLTCP^^0^B3961722
"BLD",7,"KRN",9.8,"NM",26,0)
XMR0^^0^B15021604
"BLD",7,"KRN",9.8,"NM",27,0)
XMRFTP^^0^B6643646
"BLD",7,"KRN",9.8,"NM",28,0)
XMRFTPUX^^0^B6748352
"BLD",7,"KRN",9.8,"NM",29,0)
XMRUCX^^0^B504411
"BLD",7,"KRN",9.8,"NM",30,0)
XMAFTP^^0^B7719837
"BLD",7,"KRN",9.8,"NM",31,0)
XMAD1^^0^B11337490
"BLD",7,"KRN",9.8,"NM",32,0)
XMA2R^^0^B9822573
"BLD",7,"KRN",9.8,"NM","B","XMA2C0",3)

"BLD",7,"KRN",9.8,"NM","B","XMA2R",32)

"BLD",7,"KRN",9.8,"NM","B","XMA31",7)

"BLD",7,"KRN",9.8,"NM","B","XMA32A",18)

"BLD",7,"KRN",9.8,"NM","B","XMAD1",31)

"BLD",7,"KRN",9.8,"NM","B","XMADGO",19)

"BLD",7,"KRN",9.8,"NM","B","XMAFTP",30)

"BLD",7,"KRN",9.8,"NM","B","XMAP0",6)

"BLD",7,"KRN",9.8,"NM","B","XMAPHOST",20)

"BLD",7,"KRN",9.8,"NM","B","XMB",1)

"BLD",7,"KRN",9.8,"NM","B","XMBPOST",5)

"BLD",7,"KRN",9.8,"NM","B","XMC1",16)

"BLD",7,"KRN",9.8,"NM","B","XMC11A",13)

"BLD",7,"KRN",9.8,"NM","B","XMC1A",8)

"BLD",7,"KRN",9.8,"NM","B","XMC2",17)

"BLD",7,"KRN",9.8,"NM","B","XMCTLK",21)

"BLD",7,"KRN",9.8,"NM","B","XMCTRAP",15)

"BLD",7,"KRN",9.8,"NM","B","XMDIR1",22)

"BLD",7,"KRN",9.8,"NM","B","XMDIR1A",23)

"BLD",7,"KRN",9.8,"NM","B","XMDIR1B",24)

"BLD",7,"KRN",9.8,"NM","B","XMLTCP",25)

"BLD",7,"KRN",9.8,"NM","B","XMR0",26)

"BLD",7,"KRN",9.8,"NM","B","XMR0A",14)

"BLD",7,"KRN",9.8,"NM","B","XMRFTP",27)

"BLD",7,"KRN",9.8,"NM","B","XMRFTPUX",28)

"BLD",7,"KRN",9.8,"NM","B","XMRTCP",2)

"BLD",7,"KRN",9.8,"NM","B","XMRUCX",29)

"BLD",7,"KRN",9.8,"NM","B","XMS0",4)

"BLD",7,"KRN",9.8,"NM","B","XMS5",10)

"BLD",7,"KRN",9.8,"NM","B","XMUT5C",9)

"BLD",7,"KRN",19,0)
19
"BLD",7,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",7,"KRN",19,"NM",1,0)
XMSCRIPTOUT^^0
"BLD",7,"KRN",19,"NM",2,0)
XMNET-TRANSMISSION-MANAGEMENT^^2
"BLD",7,"KRN",19,"NM","B","XMNET-TRANSMISSION-MANAGEMENT",2)

"BLD",7,"KRN",19,"NM","B","XMSCRIPTOUT",1)

"BLD",7,"KRN",19.1,0)
19.1
"BLD",7,"KRN","B",.4,.4)

"BLD",7,"KRN","B",.401,.401)

"BLD",7,"KRN","B",.402,.402)

"BLD",7,"KRN","B",.403,.403)

"BLD",7,"KRN","B",.5,.5)

"BLD",7,"KRN","B",.84,.84)

"BLD",7,"KRN","B",3.6,3.6)

"BLD",7,"KRN","B",9.2,9.2)

"BLD",7,"KRN","B",9.8,9.8)

"BLD",7,"KRN","B",19,19)

"BLD",7,"KRN","B",19.1,19.1)

"BLD",7,"QUES",0)
^9.62^^
"FIA",4.2)
DOMAIN
"FIA",4.2,0)
^DIC(4.2,
"FIA",4.2,0,0)
4.2I
"FIA",4.2,0,1)
y^y^p^^^^n
"FIA",4.2,0,10)

"FIA",4.2,0,11)

"FIA",4.2,0,"RLRO")

"FIA",4.2,0,"VR")
7.1^XM
"FIA",4.2,4.2)
1
"FIA",4.2,4.21)
1
"FIA",4.2,4.21,1.5)

"FIA",4.2999)
MESSAGE STATISTICS
"FIA",4.2999,0)
^XMBS(4.2999,
"FIA",4.2999,0,0)
4.2999IP
"FIA",4.2999,0,1)
y^y^p^^^^n
"FIA",4.2999,0,10)

"FIA",4.2999,0,11)

"FIA",4.2999,0,"RLRO")

"FIA",4.2999,0,"VR")
7.1^XM
"FIA",4.2999,4.2999)
1
"FIA",4.2999,4.2999,41)

"FIA",4.2999,4.2999,42)

"FIA",4.2999,4.2999,43)

"FIA",4.2999,4.2999,44)

"FIA",4.2999,4.2999,45)

"FIA",4.2999,4.2999,46)

"FIA",4.2999,4.2999,47)

"FIA",4.2999,4.2999,51)

"FIA",4.2999,4.2999,60)

"FIA",4.2999,4.29992)
0
"KRN",19,480,-1)
2^2
"KRN",19,480,0)
XMNET-TRANSMISSION-MANAGEMENT^Transmission Management^^M^^^^^^^^
"KRN",19,480,1,0)
^^1^1^2931206^
"KRN",19,480,1,1,0)
This is a menu with options having to do with network transmissions.
"KRN",19,480,10,0)
^19.01PI^9^9
"KRN",19,480,10,9,0)
520
"KRN",19,480,10,9,"^")
XMSCRIPTOUT
"KRN",19,480,99)
56853,50070
"KRN",19,480,"U")
TRANSMISSION MANAGEMENT
"KRN",19,520,-1)
0^1
"KRN",19,520,0)
XMSCRIPTOUT^Toggle a script out of service^^R^^^^^^^^MAILMAN
"KRN",19,520,1,0)
^^3^3^2960718^^^
"KRN",19,520,1,1,0)
This options lets you edit the OUT OF SERVICE field for a Transmission
"KRN",19,520,1,2,0)
Script in the Domain file. You can also requeue the Domain for transmission
"KRN",19,520,1,3,0)
from this option.
"KRN",19,520,25)
OUT^XMC2
"KRN",19,520,"U")
TOGGLE A SCRIPT OUT OF SERVICE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",6,-1)
1^1
"PKG",6,0)
MAILMAN^XM^Electronic Mail, both local and networked
"PKG",6,22,0)
^9.49I^1^1
"PKG",6,22,1,0)
7.1^2940602^2950925
"PKG",6,22,1,"PAH",1,0)
27^2961025^1
"PKG",6,22,1,"PAH",1,1,0)
^^174^174^2961025
"PKG",6,22,1,"PAH",1,1,1,0)
 This MailMan patch is dependent on Kernel patch XU*8*24, which should
"PKG",6,22,1,"PAH",1,1,2,0)
 be installed before this patch.  This patch contains the following bug
"PKG",6,22,1,"PAH",1,1,3,0)
 fixes and features:
"PKG",6,22,1,"PAH",1,1,4,0)

"PKG",6,22,1,"PAH",1,1,5,0)
-Sites getting errors with TCP/IP mail in ^XMC1A. Nois NCH-0696-41098,
"PKG",6,22,1,"PAH",1,1,6,0)
 WNY-0696-10208, & BRX-0696-11028.
"PKG",6,22,1,"PAH",1,1,7,0)
-The date/time of original message is added to a copied message.
"PKG",6,22,1,"PAH",1,1,8,0)
-The 'TCP/IP POLLER RUN FLAG' in file 4.3 is cleared when poller is
"PKG",6,22,1,"PAH",1,1,9,0)
 restarted.
"PKG",6,22,1,"PAH",1,1,10,0)
-Transmission scripts were not switching over. Nois BRX-0496-10709 &
"PKG",6,22,1,"PAH",1,1,11,0)
 ALB-0596-51476.
"PKG",6,22,1,"PAH",1,1,12,0)
-XMDUZ is undefined when receiving mail. Nois IVM-0896-31669.
"PKG",6,22,1,"PAH",1,1,13,0)
-Statistics was not collecting Response time. Nois DAY-0596-40308.
"PKG",6,22,1,"PAH",1,1,14,0)
-XMB will now 'NEW X'. Nois MEM-0496-70250, MIN-0396-42065, &
"PKG",6,22,1,"PAH",1,1,15,0)
 NAS-0496-30171.
"PKG",6,22,1,"PAH",1,1,16,0)
-Change the header of the statistics report, 'Last Sign On' is now
"PKG",6,22,1,"PAH",1,1,17,0)
 'Last Mail Use'. Nois DAY-0196-41801.
"PKG",6,22,1,"PAH",1,1,18,0)
-Undefined error on Headerless print of messages. Nois BRX-0196-10570.
"PKG",6,22,1,"PAH",1,1,19,0)
-Subscript errors from internet messages when the address is to long.
"PKG",6,22,1,"PAH",1,1,20,0)
 Nois HIN-0296-41163.
"PKG",6,22,1,"PAH",1,1,21,0)
-More information is being recorded in the MESSAGE STATISTICS file,
"PKG",6,22,1,"PAH",1,1,22,0)
 # 4.2999. This will help with debugging transmission scripts.
"PKG",6,22,1,"PAH",1,1,23,0)
-A new Option 'Toggle a script out of service' can be used to place a
"PKG",6,22,1,"PAH",1,1,24,0)
 Transmission Script out of service and requeue the domain.
"PKG",6,22,1,"PAH",1,1,25,0)
-MM now uses the new M95 Error trap in DSM. This change and the updating
"PKG",6,22,1,"PAH",1,1,26,0)
 of the Taskman Error Screening should prevent numerous disconnect error from
"PKG",6,22,1,"PAH",1,1,27,0)
 showing up in your error trap.
"PKG",6,22,1,"PAH",1,1,28,0)
-Purge by date was not purging Internet messages. Nois HIN-0896-40170 and
"PKG",6,22,1,"PAH",1,1,29,0)
 PHO-0796-60127
"PKG",6,22,1,"PAH",1,1,30,0)
===========================================================================
"PKG",6,22,1,"PAH",1,1,31,0)
 *** You MUST install Kernel patch XU*8*24 before installing this patch ***
"PKG",6,22,1,"PAH",1,1,32,0)

"PKG",6,22,1,"PAH",1,1,33,0)
 This patch should be installed after hours, when there is minimum users on
"PKG",6,22,1,"PAH",1,1,34,0)
 the system.  You should put the XMUSER Option out of order.
"PKG",6,22,1,"PAH",1,1,35,0)

"PKG",6,22,1,"PAH",1,1,36,0)
 MSM Sites: The routine XMRTCP must be moved to your NT machine and then
"PKG",6,22,1,"PAH",1,1,37,0)
 reboot MSM on the NT machine.  This will restart the TCP/IP poller.
"PKG",6,22,1,"PAH",1,1,38,0)
===========================================================================
"PKG",6,22,1,"PAH",1,1,39,0)

"PKG",6,22,1,"PAH",1,1,40,0)
INSTALLATION:
"PKG",6,22,1,"PAH",1,1,41,0)
  1.  These routines are usually mapped on systems that allow mapping,
"PKG",6,22,1,"PAH",1,1,42,0)
      so you will need to disable mapping for the effected routines.
"PKG",6,22,1,"PAH",1,1,43,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",6,22,1,"PAH",1,1,44,0)
      option will load the KIDS package onto your system.
"PKG",6,22,1,"PAH",1,1,45,0)
  3.  The patch has now been loaded into a Transport global on your
"PKG",6,22,1,"PAH",1,1,46,0)
      system. You now need to use KIDS to install the Transport global.
"PKG",6,22,1,"PAH",1,1,47,0)
  4.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",6,22,1,"PAH",1,1,48,0)
      options:
"PKG",6,22,1,"PAH",1,1,49,0)
         Verify Checksums in Transport Global
"PKG",6,22,1,"PAH",1,1,50,0)
         Print Transport Global
"PKG",6,22,1,"PAH",1,1,51,0)
         Compare Transport Global to Current System
"PKG",6,22,1,"PAH",1,1,52,0)
         Backup a Transport Global
"PKG",6,22,1,"PAH",1,1,53,0)
         Install Package(s)
"PKG",6,22,1,"PAH",1,1,54,0)
  5.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"PKG",6,22,1,"PAH",1,1,55,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"PKG",6,22,1,"PAH",1,1,56,0)
  6.  AXP Sites, after patch has installed, rebuild your map set.
"PKG",6,22,1,"PAH",1,1,57,0)
===========================================================================  
"PKG",6,22,1,"PAH",1,1,58,0)
  
"PKG",6,22,1,"PAH",1,1,59,0)
 ROUTINES:
"PKG",6,22,1,"PAH",1,1,60,0)
   The second line of the routine now looks like:
"PKG",6,22,1,"PAH",1,1,61,0)
       ;;7.1;MailMan;**[patch list]**;Jun 02, 1994
"PKG",6,22,1,"PAH",1,1,62,0)
 
"PKG",6,22,1,"PAH",1,1,63,0)
 Name          Checksum          Patch List
"PKG",6,22,1,"PAH",1,1,64,0)
 ----------------------------------------------------------
"PKG",6,22,1,"PAH",1,1,65,0)
 XMA2C0        9088344           24,27
"PKG",6,22,1,"PAH",1,1,66,0)
 XMA2R         4793721           27
"PKG",6,22,1,"PAH",1,1,67,0)
 XMA31         2140577           27
"PKG",6,22,1,"PAH",1,1,68,0)
 XMA32A        11841830          27
"PKG",6,22,1,"PAH",1,1,69,0)
 XMAD1         7205963           24,27
"PKG",6,22,1,"PAH",1,1,70,0)
 XMADGO        2112000           5,27
"PKG",6,22,1,"PAH",1,1,71,0)
 XMAFTP        3717135           27
"PKG",6,22,1,"PAH",1,1,72,0)
 XMAP0         4991024           27
"PKG",6,22,1,"PAH",1,1,73,0)
 XMAPHOST      6366459           7,14,27
"PKG",6,22,1,"PAH",1,1,74,0)
 XMB           7258608           3,7,24,26,27
"PKG",6,22,1,"PAH",1,1,75,0)
 XMBPOST       9662243           1,4,13,23,24,27
"PKG",6,22,1,"PAH",1,1,76,0)
 XMC1          6875049           4,13,20,27
"PKG",6,22,1,"PAH",1,1,77,0)
 XMC11A        3517372           27
"PKG",6,22,1,"PAH",1,1,78,0)
 XMC1A         7333631           27
"PKG",6,22,1,"PAH",1,1,79,0)
 XMC2          12142809          13,23,27
"PKG",6,22,1,"PAH",1,1,80,0)
 XMCTLK        9708749           10,27
"PKG",6,22,1,"PAH",1,1,81,0)
 XMCTRAP       144752            20,27
"PKG",6,22,1,"PAH",1,1,82,0)
 XMDIR1        10096361          27
"PKG",6,22,1,"PAH",1,1,83,0)
 XMDIR1A       4726311           27
"PKG",6,22,1,"PAH",1,1,84,0)
 XMDIR1B       3077473           27
"PKG",6,22,1,"PAH",1,1,85,0)
 XMLTCP        2446407           8,27
"PKG",6,22,1,"PAH",1,1,86,0)
 XMR0          8606729           27
"PKG",6,22,1,"PAH",1,1,87,0)
 XMR0A         3476739           27
"PKG",6,22,1,"PAH",1,1,88,0)
 XMRFTP        3153916           27
"PKG",6,22,1,"PAH",1,1,89,0)
 XMRFTPUX      3165955           27
"PKG",6,22,1,"PAH",1,1,90,0)
 XMRTCP        4812676           8,25,27
"PKG",6,22,1,"PAH",1,1,91,0)
 XMRUCX        338699            27
"PKG",6,22,1,"PAH",1,1,92,0)
 XMS0          9449052           8,13,20,23,27
"PKG",6,22,1,"PAH",1,1,93,0)
 XMS5          12968983          8,13,23,27
"PKG",6,22,1,"PAH",1,1,94,0)
 XMUT5C        3064751           27
"PKG",6,22,1,"PAH",1,1,95,0)
============================================================================
"PKG",6,22,1,"PAH",1,1,96,0)
 DOCUMENTATION:
"PKG",6,22,1,"PAH",1,1,97,0)

"PKG",6,22,1,"PAH",1,1,98,0)
 In order to fully utilize the new Error Processing in MailMan, you should
"PKG",6,22,1,"PAH",1,1,99,0)
 start screening the 'Disconnect Errors'. To do this, look at the following
"PKG",6,22,1,"PAH",1,1,100,0)
 options:
"PKG",6,22,1,"PAH",1,1,101,0)
 Taskman Management ...
"PKG",6,22,1,"PAH",1,1,102,0)
   Taskman Management Utilities ...
"PKG",6,22,1,"PAH",1,1,103,0)
     Taskman Error Log ...
"PKG",6,22,1,"PAH",1,1,104,0)
        List Error Screens
"PKG",6,22,1,"PAH",1,1,105,0)
        Add Error Screens
"PKG",6,22,1,"PAH",1,1,106,0)

"PKG",6,22,1,"PAH",1,1,107,0)
 Use the option 'List Error Screens' to see what errors you are currently
"PKG",6,22,1,"PAH",1,1,108,0)
 screening.  Use the option 'Add Error Screens' to add the following errors:
"PKG",6,22,1,"PAH",1,1,109,0)
               AXP sites                       486 sites
"PKG",6,22,1,"PAH",1,1,110,0)
               ---------                       ---------
"PKG",6,22,1,"PAH",1,1,111,0)
               DISCON                          DSCON
"PKG",6,22,1,"PAH",1,1,112,0)
               HANGUP
"PKG",6,22,1,"PAH",1,1,113,0)
               REJECT
"PKG",6,22,1,"PAH",1,1,114,0)
               CONNECFAIL
"PKG",6,22,1,"PAH",1,1,115,0)

"PKG",6,22,1,"PAH",1,1,116,0)
 OPTION:
"PKG",6,22,1,"PAH",1,1,117,0)

"PKG",6,22,1,"PAH",1,1,118,0)
 Manage Mailman ...
"PKG",6,22,1,"PAH",1,1,119,0)
   Network Management ...
"PKG",6,22,1,"PAH",1,1,120,0)
     Transmission Management ...
"PKG",6,22,1,"PAH",1,1,121,0)

"PKG",6,22,1,"PAH",1,1,122,0)
 'Toggle a script out of service'     Option name: XMSCRIPTOUT
"PKG",6,22,1,"PAH",1,1,123,0)
   This options lets you edit the OUT OF SERVICE field for a Transmission
"PKG",6,22,1,"PAH",1,1,124,0)
   Script in the Domain file. You can also requeue the Domain for transmission
"PKG",6,22,1,"PAH",1,1,125,0)
   from this option.
"PKG",6,22,1,"PAH",1,1,126,0)

"PKG",6,22,1,"PAH",1,1,127,0)

"PKG",6,22,1,"PAH",1,1,128,0)
 DATA DICTIONARY:  Partial DD
"PKG",6,22,1,"PAH",1,1,129,0)

"PKG",6,22,1,"PAH",1,1,130,0)
  File:  DOMAIN #4.2
"PKG",6,22,1,"PAH",1,1,131,0)

"PKG",6,22,1,"PAH",1,1,132,0)
   Field:
"PKG",6,22,1,"PAH",1,1,133,0)
    4      TRANSMISSION SCRIPT
"PKG",6,22,1,"PAH",1,1,134,0)
    Subfield:
"PKG",6,22,1,"PAH",1,1,135,0)
    1.5    OUT OF SERVICE
"PKG",6,22,1,"PAH",1,1,136,0)
             This is the preferred field to set to take a script out of
"PKG",6,22,1,"PAH",1,1,137,0)
             service,to prevent it from being used.
"PKG",6,22,1,"PAH",1,1,138,0)

"PKG",6,22,1,"PAH",1,1,139,0)
  File:  MESSAGE STATISTICS #4.2999
"PKG",6,22,1,"PAH",1,1,140,0)

"PKG",6,22,1,"PAH",1,1,141,0)
   Fields:
"PKG",6,22,1,"PAH",1,1,142,0)
    41     XMIT START DATE/TIME
"PKG",6,22,1,"PAH",1,1,143,0)
             This field helps MailMan determine, after a fatal error,
"PKG",6,22,1,"PAH",1,1,144,0)
             whether to start the transmission process at script 1,
"PKG",6,22,1,"PAH",1,1,145,0)
             try 1, or to start elsewhere.
"PKG",6,22,1,"PAH",1,1,146,0)

"PKG",6,22,1,"PAH",1,1,147,0)
    42     XMIT FINISH DATE/TIME
"PKG",6,22,1,"PAH",1,1,148,0)
             This may be useful information for debugging purposes.
"PKG",6,22,1,"PAH",1,1,149,0)

"PKG",6,22,1,"PAH",1,1,150,0)
    43     XMIT SCRIPT
"PKG",6,22,1,"PAH",1,1,151,0)
             This tells MailMan which script is/was being used.
"PKG",6,22,1,"PAH",1,1,152,0)

"PKG",6,22,1,"PAH",1,1,153,0)
    44     XMIT TRIES
"PKG",6,22,1,"PAH",1,1,154,0)
             This tells MailMan how many tries have been made with
"PKG",6,22,1,"PAH",1,1,155,0)
             the current script.
"PKG",6,22,1,"PAH",1,1,156,0)

"PKG",6,22,1,"PAH",1,1,157,0)
    45     XMIT LATEST TRY DATE/TIME
"PKG",6,22,1,"PAH",1,1,158,0)
             This may be useful information for debugging purposes.
"PKG",6,22,1,"PAH",1,1,159,0)

"PKG",6,22,1,"PAH",1,1,160,0)
    46     XMIT SCRIPT CYCLE ITERATIONS
"PKG",6,22,1,"PAH",1,1,161,0)
             This is the number of script cycles we have tried.  This
"PKG",6,22,1,"PAH",1,1,162,0)
             field starts off at 0.  After we have tried all the scripts
"PKG",6,22,1,"PAH",1,1,163,0)
             available, we bump up this field by 1.
"PKG",6,22,1,"PAH",1,1,164,0)

"PKG",6,22,1,"PAH",1,1,165,0)
    47     XMIT FIRST SCRIPT
"PKG",6,22,1,"PAH",1,1,166,0)
             This field notes which script has the highest priority, that
"PKG",6,22,1,"PAH",1,1,167,0)
             is, which script was tried first.
"PKG",6,22,1,"PAH",1,1,168,0)

"PKG",6,22,1,"PAH",1,1,169,0)
    51     XMIT SCRIPT RECORD
"PKG",6,22,1,"PAH",1,1,170,0)
             This is a copy of the zero node of the latest script used.
"PKG",6,22,1,"PAH",1,1,171,0)

"PKG",6,22,1,"PAH",1,1,172,0)
    60     XMIT AUDIT
"PKG",6,22,1,"PAH",1,1,173,0)
             This multiple contains an audit of the attempts that have
"PKG",6,22,1,"PAH",1,1,174,0)
             been made during this transmission.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
30
"RTN","XMA2C0")
0^3^B17411747
"RTN","XMA2C0",1,0)
XMA2C0 ;(WASH ISC)/CAP-MailMan COPY ;05/29/96  15:35
"RTN","XMA2C0",2,0)
 ;;7.1;MailMan;**24,27**;Jun 02, 1994
"RTN","XMA2C0",3,0)
A S DIR("A")="Copy the MESSAGE without RESPONSES"
"RTN","XMA2C0",4,0)
 S DIR("B")="YES",DIR(0)="Y",DIR("??")="XMR-ACT-COPYB"
"RTN","XMA2C0",5,0)
 D ^DIR K DIR,DIRUT G Q:X["^",A:"YyNn"'[$E(X_" ") S XMCOPY("RSP")="Nn"[$E(X)
"RTN","XMA2C0",6,0)
 ;
"RTN","XMA2C0",7,0)
A2 S DIR("A")="LIST ORIGINAL RECIPIENTS in TEXT"
"RTN","XMA2C0",8,0)
 S DIR("B")="NO",DIR(0)="Y",DIR("??")="XMR-ACT-COPYC"
"RTN","XMA2C0",9,0)
 D ^DIR K DIR,DIRUT G Q:X["^",A2:"YyNn"'[$E(X_" ") S XMCOPY("LST")="Nn"'[$E(X)
"RTN","XMA2C0",10,0)
 ;
"RTN","XMA2C0",11,0)
B S DIR("A")="DELIVER to the SAME RECIPIENTS"
"RTN","XMA2C0",12,0)
 S DIR("B")="NO",DIR(0)="Y",DIR("??")="XMR-ACT-COPYD"
"RTN","XMA2C0",13,0)
 D ^DIR K DIRUT G Q:X["^",B:"YyNn"'[$E(X_" ") S XMCOPY("RCP")="Nn"'[$E(X)
"RTN","XMA2C0",14,0)
 I XMCOPY("RCP") W !!,"LOCAL recipients (NOT Recipients on remote network nodes) will be copied !!!"
"RTN","XMA2C0",15,0)
 ;
"RTN","XMA2C0",16,0)
 ;
"RTN","XMA2C0",17,0)
M ;SUBJECT
"RTN","XMA2C0",18,0)
 ;
"RTN","XMA2C0",19,0)
 S XMSUB="Copy of: "_$E($P(XMZN,U,2),1,55) D ENTS^XMA20
"RTN","XMA2C0",20,0)
 G Q:Y=U S XMSUB=Y D GET^XMA2
"RTN","XMA2C0",21,0)
 ;
"RTN","XMA2C0",22,0)
 ;COPY TEXT
"RTN","XMA2C0",23,0)
 ;
"RTN","XMA2C0",24,0)
 S I=.9999,%="@"_^XMB("NETNAME"),X=$P(XMZN,U,3)
"RTN","XMA2C0",25,0)
 S ^XMB(3.9,XMZ,2,1,0)="Original message: """_$P(XMZN,U,2)_""" [#"_+XMZN_"]",^XMB(3.9,XMZ,2,2,0)="From: <"_$S(+X:$S('$D(^VA(200,+X,0)):+X_%,1:$P($P(^(0),U)," "))_%,1:X)_">",^XMB(3.9,XMZ,2,4,0)=" ",X=4 W !
"RTN","XMA2C0",26,0)
 S ^XMB(3.9,XMZ,2,3,0)="Sent: "_$$DTSTRING($P(^XMB(3.9,+XMZN,0),U,3))
"RTN","XMA2C0",27,0)
C S I=$O(^XMB(3.9,+XMZN,2,I)) I I W:X#10=0 "." S X=X+1,%=^(I,0),^XMB(3.9,XMZ,2,X,0)=% G C
"RTN","XMA2C0",28,0)
 W !,X," Original message Line",$S(X'=1:"s",1:"")," copied, copying responses",!!,*7 H 1
"RTN","XMA2C0",29,0)
 S XMCOPY=X,X=^XMB(3.9,+XMZN,2,0),$P(X,U,2,5)="3.92A^"_XMCOPY_U_XMCOPY_U_DT,^XMB(3.9,XMZ,2,0)=X
"RTN","XMA2C0",30,0)
 D NOW^%DTC S X=% K %
"RTN","XMA2C0",31,0)
 S Y=$E(X,6,7)_" "_$P("Jan^Feb^Mar^Apr^May^Jun^Jul^Aug^Sep^Oct^Nov^Dec",U,$E(X,4,5))_" "_$E(X,2,3) S:X\1'=X %=$P(X,".",2)_"0000",Y=Y_" "_$E(%,1,2)_":"_$E(%,3,4)
"RTN","XMA2C0",32,0)
 I $D(XMRC),XMRC>0 S ^XMB(3.9,+XMZN,1,XMRC,"C")=Y
"RTN","XMA2C0",33,0)
 ;
"RTN","XMA2C0",34,0)
O G P:'XMCOPY("RSP"),P:$O(^XMB(3.9,+XMZN,3,0))<1
"RTN","XMA2C0",35,0)
 ;
"RTN","XMA2C0",36,0)
 S I=0,X=XMCOPY
"RTN","XMA2C0",37,0)
S S I=$O(^XMB(3.9,+XMZN,3,I)) G SQ:I'=+I S Y=+^(I,0)
"RTN","XMA2C0",38,0)
 G S:'$D(^XMB(3.9,Y,0)) S J=$P(^(0),U,2),XMRDT=$$DTSTRING($P(^(0),U,3)),X=X+1 I +J=J,$D(^VA(200,J,0)) S J=$P(^(0),U)
"RTN","XMA2C0",39,0)
 S ^XMB(3.9,XMZ,2,X,0)=" ",X=X+1
"RTN","XMA2C0",40,0)
 S ^XMB(3.9,XMZ,2,X,0)="Response #"_I_":  "_J_"    "_XMRDT,J=.999
"RTN","XMA2C0",41,0)
SJ S J=$O(^XMB(3.9,Y,2,J)) G S:J="" S %=^(J,0)
"RTN","XMA2C0",42,0)
 S X=X+1,^XMB(3.9,XMZ,2,X,0)=% I X#10=0 W "."
"RTN","XMA2C0",43,0)
 G SJ
"RTN","XMA2C0",44,0)
DTSTRING(X) ;
"RTN","XMA2C0",45,0)
 N Y,%
"RTN","XMA2C0",46,0)
 Q:+X'=X X
"RTN","XMA2C0",47,0)
 S Y=$E(X,6,7)_" "_$P("Jan^Feb^Mar^Apr^May^Jun^Jul^Aug^Sep^Oct^Nov^Dec",U,$E(X,4,5))_" "_$E(X,2,3) S:X\1'=X %=$P(X,".",2)_"0000",Y=Y_" "_$E(%,1,2)_":"_$E(%,3,4)
"RTN","XMA2C0",48,0)
 Q Y
"RTN","XMA2C0",49,0)
SQ K %,XMRDT S $P(^XMB(3.9,XMZ,2,0),U,3,4)=X_U_X,XMCOPY=X
"RTN","XMA2C0",50,0)
 ;
"RTN","XMA2C0",51,0)
 ;***********************************************************
"RTN","XMA2C0",52,0)
 ;GO THRU MULTIPLE AT ^XMB(3.9,+XMZN,1,...
"RTN","XMA2C0",53,0)
 ;LOAD INTO TEXT OF MESSAGE / RECIPIENT CHAIN AS APPLIES
"RTN","XMA2C0",54,0)
 ;EITHER INTO THE MESSAGE TEXT [XMCOPY("LST")=1]
"RTN","XMA2C0",55,0)
 ;OR AS THE NEW (STARTING) RECIPIENT CHAIN [XMCOPY("RCP")=1].
"RTN","XMA2C0",56,0)
 ;***********************************************************
"RTN","XMA2C0",57,0)
 ;
"RTN","XMA2C0",58,0)
P I 'XMCOPY("RCP"),'XMCOPY("LST") G R
"RTN","XMA2C0",59,0)
 ;
"RTN","XMA2C0",60,0)
 S (%,Y,J,I)=0,X=XMCOPY
"RTN","XMA2C0",61,0)
 I XMCOPY("LST") F J=" ","ORIGINAL RECIPIENT LIST"," " S X=X+1,^XMB(3.9,XMZ,2,X-J,0)=J
"RTN","XMA2C0",62,0)
D S I=$O(^XMB(3.9,+XMZN,1,I)) G DQ:+I'=I S (Y,J)=$P(^(I,0),U)
"RTN","XMA2C0",63,0)
 I +J=J,$D(^VA(200,J,0)) S Y=$P(^(0),U)
"RTN","XMA2C0",64,0)
 I XMCOPY("RCP"),J=+J S ^TMP("XMY",$J,J)="" S:Y'="" ^TMP("XMY0",$J,Y)="" W !,*7,"RECIPIENT added: ",Y H 1
"RTN","XMA2C0",65,0)
 I XMCOPY("LST") S X=X+1,^XMB(3.9,XMZ,2,X,0)=$P("       :Sent to",":",I=1+1)_": "_Y
"RTN","XMA2C0",66,0)
 G D
"RTN","XMA2C0",67,0)
DQ S $P(^XMB(3.9,XMZ,2,0),U,3,4)=X_U_X
"RTN","XMA2C0",68,0)
 ;
"RTN","XMA2C0",69,0)
R ;EDIT TEXT
"RTN","XMA2C0",70,0)
 I XMCOPY("RCP") W !!,"DELETE RECIPIENTS listed above at the 'And send to:' prompt,",!,"if you do not want them to receive this message.",*7
"RTN","XMA2C0",71,0)
 W !! K DUOUT D ENTM^XMA0A,ENT1^XMA2 I $D(DUOUT) G AB
"RTN","XMA2C0",72,0)
 ;
"RTN","XMA2C0",73,0)
 ;GET ADDITIONAL RECIPIENTS / TRANSMIT MESSAGE / CONFIRM
"RTN","XMA2C0",74,0)
 ;
"RTN","XMA2C0",75,0)
 D DESTXM^XMA21 K XMLOAD,XMFG G AB:X[U
"RTN","XMA2C0",76,0)
 W ! D OK^XMA22 G AB:X[U
"RTN","XMA2C0",77,0)
 I '$O(^XMB(3.9,XMZ,2,.999)) W !,"*****  N O   T E X T  *****" G AB
"RTN","XMA2C0",78,0)
 I $P(XMZN,U,8)]"" S %=$P(XMZN,U,8),$P(^(0),U,7)=$P(^XMB(3.9,XMZ,0),U,7)_$S(%["X":"X",%["K":"K",1:"")
"RTN","XMA2C0",79,0)
 D ENT1^XMAD1 W !,"Message #"_XMZ_" sent"
"RTN","XMA2C0",80,0)
 S XMZO=XMZ,(X1,XMR)="" D ENTD^XMA0A,CONF^XMA1
"RTN","XMA2C0",81,0)
 G Q
"RTN","XMA2C0",82,0)
AB D ENTD^XMA0A W !!,"COPY ABORTED !",*7,! D KILL^XMA3 G Q
"RTN","XMA2C0",83,0)
Q G Q^XMA2C
"RTN","XMA2R")
0^32^B9822573
"RTN","XMA2R",1,0)
XMA2R ;(WASH ISC)/CAP- Response API ;10/17/96  08:32
"RTN","XMA2R",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMA2R",3,0)
 ;Put Response into delivery queue
"RTN","XMA2R",4,0)
QUE L +^XMB("POSTUP") I $L($G(XMREMID)) L +^XMBX(3.9,"AI",$E(XMREMID,1,64))
"RTN","XMA2R",5,0)
 S:$D(XMNETREC) XMNETREC=XMZ2 S X=$S($D(^XMBPOST("POST",0)):^(0)+1,1:1),^(0)=X
"RTN","XMA2R",6,0)
 L -^XMB("POSTUP") I $L($G(XMREMID)) L -^XMBX(3.9,"AI",$E(XMREMID,1,64))
"RTN","XMA2R",7,0)
 S Y="R"_XMZ,%="^RESPONSE^^^"_XMZ2,X=X_":"_$S('$D(XMCHAN):$S(XMDUZ=.6:DUZ,1:XMDUZ),1:"NR")
"RTN","XMA2R",8,0)
 I $O(^XMB(3.9,XMZ2,2,0)) S $P(%,U,7,8)=$H*86400+$P($H,",",2)_"^"_$P($G(^XMB(3.9,XMZ,1,0)),U,3),^XMBPOST("POST",Y,X)=% I XMZ2'=XMZ S $P(^XMB(3.9,XMZ2,0),U,8)=XMZ
"RTN","XMA2R",9,0)
 Q
"RTN","XMA2R",10,0)
 ;Answer (response only to the sender)
"RTN","XMA2R",11,0)
ANS S XMR=^XMB(3.9,XMZ,0),X=$P(XMR,U,2) Q:X'["@"
"RTN","XMA2R",12,0)
 S Y=XMZ2_"@"_^XMB("NETNAME"),%=$S($D(^XMB(3.9,XMZ,"K")):^("K"),1:""),^XMB(3.9,XMZ2,"IN")=Y I $L(%) S ^("K")=%
"RTN","XMA2R",13,0)
 D INSTXM^XMA21 I 'Y Q
"RTN","XMA2R",14,0)
 D ENT1^XMAD1
"RTN","XMA2R",15,0)
 Q
"RTN","XMA2R",16,0)
ENT(A,B,C,D,E) ;Make response to a message
"RTN","XMA2R",17,0)
 ;INPUTS
"RTN","XMA2R",18,0)
 ;Call as follows:  S var=$$ENT^XMA2R(a,b,.c,d,e)
"RTN","XMA2R",19,0)
 ;Where:  a  = Message being responded to
"RTN","XMA2R",20,0)
 ;        b  = Subject of the response
"RTN","XMA2R",21,0)
 ;        .c = Array containing text
"RTN","XMA2R",22,0)
 ;        d  = Characters to be stripped from text
"RTN","XMA2R",23,0)
 ;        e  = Sender of response (DUZ or free text)
"RTN","XMA2R",24,0)
 ;
"RTN","XMA2R",25,0)
 ;OUTPUT: If results okay = internal pointer to response in file 3.9
"RTN","XMA2R",26,0)
 ;        If bad result, the letter "E" followed by a number,
"RTN","XMA2R",27,0)
 ;         followed by a space, then a human readable explanation
"RTN","XMA2R",28,0)
 ;
"RTN","XMA2R",29,0)
 ;        If the sender was from as remote site, there will be a second
"RTN","XMA2R",30,0)
 ;        piece of the return value:
"RTN","XMA2R",31,0)
 ;
"RTN","XMA2R",32,0)
 ;        1=network response successful
"RTN","XMA2R",33,0)
 ;        0=network response not sent
"RTN","XMA2R",34,0)
 ;
"RTN","XMA2R",35,0)
 ;Initialize / Keep from colliding
"RTN","XMA2R",36,0)
 N XMR Q $$WORK(A,B,.C,D,E)
"RTN","XMA2R",37,0)
 ;
"RTN","XMA2R",38,0)
WORK(A,B,C,D,E) K XMY,XMY0,^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMA2R",39,0)
 N %X,%Y,J,X,XMDF,XMDUZ,XMN,XMNETREC,XMQF,XMSUB,XMZ,XMZO,XMSTRIP,Y
"RTN","XMA2R",40,0)
 S XMZO=A,XMSUB=B,X=0,I=0,Y="C(0)",XMSTRIP=D,XMDUZ=E,XMNETREC=1
"RTN","XMA2R",41,0)
 ;
"RTN","XMA2R",42,0)
 ;Give caller feedback on errors
"RTN","XMA2R",43,0)
 I '$D(XMSUB) Q "E1 No subject !"
"RTN","XMA2R",44,0)
 I $D(C)<9 Q "E2 No message text !"
"RTN","XMA2R",45,0)
 I $L(XMSUB)<3!($L(XMSUB)>65) Q "E3 Subject too long or short !"
"RTN","XMA2R",46,0)
 S J=$O(C(0)) I 'J Q "E4 No message text !"
"RTN","XMA2R",47,0)
 I '$L(E) Q "E5 No sender specified !"
"RTN","XMA2R",48,0)
 ;
"RTN","XMA2R",49,0)
 ;Get entry in message file
"RTN","XMA2R",50,0)
3 D GET^XMA2 I XMZ>0 S X=0 G 0
"RTN","XMA2R",51,0)
 I $D(ZTQUEUED) H 1 G 3
"RTN","XMA2R",52,0)
 W !!,"Waiting for access to the Message File",*7,! F %=1:1:10 H 1 W "."
"RTN","XMA2R",53,0)
 G 3
"RTN","XMA2R",54,0)
 ;Put text into response
"RTN","XMA2R",55,0)
0 S I=$O(@Y) G Q:'I S Y="C("_I_",0)" I '$D(@Y) S Y="C("_I_")" G 1:'$D(@Y)
"RTN","XMA2R",56,0)
 S Y=@Y I Y?.E1C.E F J=1:1:$L(Y) I $E(Y,J)?1C S Y=$E(Y,1,J-1)_$E(Y,J+1,$L(Y)),J=J-1 Q:Y'?.E1C.E
"RTN","XMA2R",57,0)
 I $D(XMSTRIP) S %=XMSTRIP F  Q:'$L(%)  S A=$E(%),%=$E(%,2,99) I $L(A) S Y=$TR(Y,A,"")
"RTN","XMA2R",58,0)
 S X=X+1,^XMB(3.9,XMZ,2,X,0)=Y
"RTN","XMA2R",59,0)
1 S Y="C("_I_")" G 0
"RTN","XMA2R",60,0)
 ;Create zero node for message text
"RTN","XMA2R",61,0)
Q S ^XMB(3.9,XMZ,2,0)="^3.92A^"_X_U_X K XMSTRIP
"RTN","XMA2R",62,0)
 ;
"RTN","XMA2R",63,0)
 ;Append to message / Add to delivery queues / End
"RTN","XMA2R",64,0)
 S X=XMZ,XMZ=XMZO,XMZ2=X,XMQF="",XMDF=1,XMN=0
"RTN","XMA2R",65,0)
 ;
"RTN","XMA2R",66,0)
 ;Send 'Answer' instead of adding to original message response chain
"RTN","XMA2R",67,0)
 I $G(XMA2R) S XMA2R("X")="N XMA11B,XMZ,Y S XMA11B=XMZO,XMZ=X D ^XMA11B" X XMA2R("X") S XMY("XMFROM")="",XMY(DUZ)="",XMDUZ=DUZ D ENT1^XMD I 1
"RTN","XMA2R",68,0)
 E  D QUE,ANS
"RTN","XMA2R",69,0)
 K XMY,XMY0,^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMA2R",70,0)
 Q XMZ2
"RTN","XMA2R",71,0)
ENTA(A,B,C,D,E) ;Send Response Only to Sender of Original Message
"RTN","XMA2R",72,0)
 ;
"RTN","XMA2R",73,0)
 ;See ENT for parameter definitions
"RTN","XMA2R",74,0)
 ;
"RTN","XMA2R",75,0)
 N XMA2R,XMFROM,XMR,XMCHAN
"RTN","XMA2R",76,0)
 S XMA2R=99,XMR=^XMB(3.9,A,0),XMFROM=$P(XMR,U,2),XMCHAN="ENTA^XMA2R"
"RTN","XMA2R",77,0)
 S XMZ=$$WORK(A,B,.C,D,E) I XMZ S XMY(XMFROM)="" D ENT1^XMD
"RTN","XMA2R",78,0)
 Q XMZ
"RTN","XMA31")
0^7^B2481488
"RTN","XMA31",1,0)
XMA31 ;(WASH ISC)/CAP-XMCLEAN, XMAUTOPURGE (MISC) ;05/31/96  15:10
"RTN","XMA31",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMA31",3,0)
DSP ;Display purge results / Set up variables for Purge
"RTN","XMA31",4,0)
 S %=$G(^XMB(1,1,.14)),X=^XMB(3.9,0),Y=$P(X,U,4)/500,XMA31=$P(X,U,3)-$S(+%:+%,Y:Y,1:9999)
"RTN","XMA31",5,0)
 S X="N",%DT="T" D ^%DT S XMDT=Y D P^XMA3 S X="N",%DT="T" D ^%DT S XMDT=Y
"RTN","XMA31",6,0)
 S X=$S($D(^XMB(1,1,.1,0)):^(0),1:"^4.302"),I=$P(X,U,3)+1,^(0)=$P(X,U,1,2)_U_I_U_($P(X,U,4)+1),^(I,0)=Y_U_XME0_U_XMF0,^XMB(1,1,.1,"B",Y,I)=""
"RTN","XMA31",7,0)
 I '$D(ZTQUEUED) W !!!,*7,XME0," messages kept, ",XMF0," messages purged"
"RTN","XMA31",8,0)
 K XMA31,XME0,XMF0,^XMB("NOP")
"RTN","XMA31",9,0)
 Q
"RTN","XMA31",10,0)
 ;Header for MailBox Statistics Report
"RTN","XMA31",11,0)
STAT N % I '$D(ZTQUEUED),XMB0>0,$E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR,DIRUT I $D(DTOUT)!$D(DUOUT) S XMOUT=1 Q
"RTN","XMA31",12,0)
 S XMD0=11,XMB0=XMB0+1
"RTN","XMA31",13,0)
 W @IOF,!?5,"PRINTED: ",XMA0,?65,"Page ",XMB0,!!,"User",?25,"# Baskets   # Msgs   IN Basket Size    Last Mail Use",!!
"RTN","XMA31",14,0)
 Q
"RTN","XMA32A")
0^18^B21052443
"RTN","XMA32A",1,0)
XMA32A ;(WASH ISC)/CAP - PURGE MESSAGES BY DATE ;09/03/96  11:40
"RTN","XMA32A",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMA32A",3,0)
 ;VARIABLES
"RTN","XMA32A",4,0)
 ;XMA32("C")=TOTAL MESSAGES PROCESSED
"RTN","XMA32A",5,0)
 ;XMA32("E")=LAST MESSAGE TOLD TO PROCESS
"RTN","XMA32A",6,0)
 ;XMA32("P")=MESSAGES PURGED
"RTN","XMA32A",7,0)
 ;XMA32("PDATE")=PURGE ALL MESSAGES OLDER THAN THIS DATE
"RTN","XMA32A",8,0)
 ;XMA32("Q")=CALCULATED ENDPOINT
"RTN","XMA32A",9,0)
 ;XMA32("R")=RESPONSES KILLED
"RTN","XMA32A",10,0)
 ;XMA32("S")=FIRST MESSAGE TO PROCESS
"RTN","XMA32A",11,0)
 ;XMDUZ=POINTER TO MAILBOX
"RTN","XMA32A",12,0)
 ;XMZTMP=HOLDER FOR XMZ WHEN INVOKING PROCESS THAT WOULD DESTROY IT
"RTN","XMA32A",13,0)
 ;XMZ=CURRENT MESSAGE BEING PROCESSED
"RTN","XMA32A",14,0)
 ;
"RTN","XMA32A",15,0)
ENT S (XMA32("C"),XMLINE,XMA32("P"),XMZ,XMA32("R"))=0,XMA32("PAGE")=1
"RTN","XMA32A",16,0)
 S XMA32("Q")=$P(^XMB(3.9,0),U,3)-1000,XMA32("Q")=$S('$D(XMA32("E")):XMA32("Q"),XMA32("Q")<XMA32("E"):XMA32("Q"),1:XMA32("E")),XMZ=XMA32("S")-1
"RTN","XMA32A",17,0)
 D NOW^%DTC S Y=$S($D(^XMB(1,1,.1,0)):^(0),1:"^4.302D"),X=$P(Y,U,3)+1,$P(^(0),U,3,4)=X_U_($P(Y,U,4)+1),^(X,0)=%_"^^^"_XMA32("S")_"^"_XMA32("E")_$S($G(XMTEST):"^1TEST^",1:"^1^")_XMA32("PDATE"),XMA32("NODE")=X,^XMB(1,1,.1,"B",%,X)=""
"RTN","XMA32A",18,0)
 K %,%H,%I U IO
"RTN","XMA32A",19,0)
XMZ S XMZ=$O(^XMB(3.9,XMZ)) G Q:XMZ'=+XMZ,Q:XMZ>XMA32("Q") S XMR=$S($D(^(XMZ,0)):^(0),1:"") I XMR="" G KILL
"RTN","XMA32A",20,0)
 S XMA32("C")=XMA32("C")+1,X=$P(XMR,U,3) I XMA32("C")#100=0 D CHK
"RTN","XMA32A",21,0)
 ;Do nothing if owned by SHARED,MAIL
"RTN","XMA32A",22,0)
 G XMZ:$D(^XMB(3.7,"M",XMZ,.6))
"RTN","XMA32A",23,0)
 I X'?7N,X'?7N1".".E S X=$$DT(X) I X<2000000 D HD G Q:$G(DIRUT) W !,XMZ,?16,$P(XMR,U,3)_"=BAD date." G XMZ
"RTN","XMA32A",24,0)
 S X=$P(X,".") I X'<XMA32("PDATE") G XMZ:'XMTEST D HD G Q:$G(DIRUT) W !,XMZ,?16,$P(XMR,U,3)_"=Date GREATER than " D DATE W "." G XMZ
"RTN","XMA32A",25,0)
 S X=$S($P(XMR,U,8):$P(XMR,U,8),$P(XMR,U)?1"R"1.N&(+$E(XMR,2,99)'=XMZ):+$E(XMR,2,99),1:"") I X G XMZ:$D(^XMB(3.9,X,0))
"RTN","XMA32A",26,0)
KILL S XMDUZ="",XMA32("P")=XMA32("P")+1
"RTN","XMA32A",27,0)
KA ;
"RTN","XMA32A",28,0)
 S XMDUZ=$O(^XMB(3.7,"M",XMZ,XMDUZ)) G KQ:XMDUZ'=+XMDUZ S XMK=$O(^(XMDUZ,0))
"RTN","XMA32A",29,0)
 S XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,0))
"RTN","XMA32A",30,0)
 I 'XMK G KA:'XMTEST D HD G Q:$G(DIRUT) W !?5,XMZ,?16,"SKIPPED / NOT IN BASKET FOR "_XMDUZ G KA
"RTN","XMA32A",31,0)
 I 'XMTEST G KA:'$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ)) D KL^XMA1B G KA
"RTN","XMA32A",32,0)
 D HD G Q:$G(DIRUT) W !?5,XMZ_"  **  DELETED for USER "_XMDUZ
"RTN","XMA32A",33,0)
 G KA
"RTN","XMA32A",34,0)
KQ I XMTEST D HD G Q:$G(DIRUT) S X=$P($P(XMR,U,3),".") W !?9,XMZ_"  ++  PURGED / DATE = ",$S(X?7N.E:$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3),1:X)
"RTN","XMA32A",35,0)
 S XMZTMP=XMZ,XMZO=0
"RTN","XMA32A",36,0)
XMR S XMZO=$O(^XMB(3.9,XMZTMP,3,XMZO)) G XMRQ:+XMZO'=XMZO S XMZ=$P(^(XMZO,0),U) I XMTEST D HD G Q:$G(DIRUT) W !?9,XMZ,?26,"RESPONSE TO ",XMZTMP," DELETED."
"RTN","XMA32A",37,0)
 I 'XMTEST K ^XMB(3.7,"M",XMZ) D KILL^XMA3
"RTN","XMA32A",38,0)
 S XMA32("R")=XMA32("R")+1 G XMR
"RTN","XMA32A",39,0)
XMRQ S XMZ=XMZTMP K XMZTMP I 'XMTEST K ^XMB(3.7,"M",XMZ)
"RTN","XMA32A",40,0)
 I 'XMTEST D KILL^XMA3
"RTN","XMA32A",41,0)
 G XMZ
"RTN","XMA32A",42,0)
DATE W $E(XMA32("PDATE"),4,5)_"/"_$E(XMA32("PDATE"),6,7)_"/"_$E(XMA32("PDATE"),2,3) Q
"RTN","XMA32A",43,0)
HD Q:'$D(XMLINE)!$G(DIRUT)  I XMLINE'=0,$Y+6<IOSL Q
"RTN","XMA32A",44,0)
 I '$D(XMA32("D")) D NOW^%DTC S XMA=%,X=% D DW^%DTC S XMA32("D")=X_"  ",Y=XMA D DD^%DT S XMA32("D")=XMA32("D")_Y K XMA
"RTN","XMA32A",45,0)
 I IOST?1"C-".E N DIR S DIR(0)="E" D ^DIR I $G(DIRUT) K DUOUT,DTOUT Q
"RTN","XMA32A",46,0)
 W @IOF,!,"MESSAGE PURGE BY ORIGINATION DATE = " D DATE W ?60,"FROM: ",XMA32("S")
"RTN","XMA32A",47,0)
 W !,"Printed: ",XMA32("D"),?62,"TO: ",XMA32("Q")
"RTN","XMA32A",48,0)
 W !!,?5,"Message#",?50,"Page: ",XMA32("PAGE") S XMLINE=1,XMA32("PAGE")=XMA32("PAGE")+1
"RTN","XMA32A",49,0)
 Q
"RTN","XMA32A",50,0)
Q D HD I $D(XMA32("C")),XMA32("C") W:$G(XMTEST) !!,"TEST DATA !!!" W !!,XMA32("C")," messages processed." W:XMA32("R") "  ",XMA32("R")," RESPONSES" I XMA32("P") W "  ",XMA32("P")," messages purged.",!!
"RTN","XMA32A",51,0)
 S Y=XMA32("P")+XMA32("R"),%1=$P(^XMB(3.9,0),U,4)-Y,$P(^(0),U,4)=%1
"RTN","XMA32A",52,0)
 K XMA32("Q") D CHK
"RTN","XMA32A",53,0)
QQ K DIR,DIRUT,XMA,XMLINE,XMTEST,ZTDTH,ZTSAVE,ZTRTN,ZTDESC,XMZ,XMR
"RTN","XMA32A",54,0)
 I $D(ZTSK),ZTSK S ZTREQ="Q" K XMA32 Q
"RTN","XMA32A",55,0)
 I $D(XMA32("P")) W !!,$S($D(XMA32("QUEUED")):"... Queuing completed.",1:"<<DONE>>")_"  "
"RTN","XMA32A",56,0)
 S %H=$H D YX^%DTC W !!,Y,! K XMA32,%,%H,X,Y D ^%ZISC
"RTN","XMA32A",57,0)
 Q
"RTN","XMA32A",58,0)
CHK N X D NOW^%DTC
"RTN","XMA32A",59,0)
 S Y=XMA32("P")+XMA32("R"),%1=$P(^XMB(3.9,0),U,4)-Y,%0=^XMB(1,1,.1,XMA32("NODE"),0),^(0)=+%0_U_%1_U_Y_U_XMA32("S")_U_XMA32("E")_$S($G(XMTEST):"^1TEST^",1:"^1^")_XMA32("PDATE")_U_%_U_(XMZ-1)
"RTN","XMA32A",60,0)
 K %,%I,%1 Q:IO'=IO(0)!'$D(XMA32("Q"))  W XMA32("C")," " W:$X>70 ! Q
"RTN","XMA32A",61,0)
DT(X) ;Convert Internet dates
"RTN","XMA32A",62,0)
 N XMA,%7 S XMA=X
"RTN","XMA32A",63,0)
 ;remove leading spaces or tabs
"RTN","XMA32A",64,0)
D I $E(X)=" "!($E(X)=$C(9)) S X=$E(X,2,99) G D
"RTN","XMA32A",65,0)
 ;remove leading day of week
"RTN","XMA32A",66,0)
 I X?3A1", ".E S X=$P(X,",",2) G D
"RTN","XMA32A",67,0)
 ;looking for 'Mon Sep 5 10:55:13 PDT 1994'
"RTN","XMA32A",68,0)
 ;sometime there is more than 1 space seperating the values
"RTN","XMA32A",69,0)
 I X?3A1." "3A1." "1.2N.E D
"RTN","XMA32A",70,0)
 .N %,%1 S %1=$L(X," ")
"RTN","XMA32A",71,0)
 .F %=1:1 Q:%=%1  S:$P(X," ",%+1)="" X=$P(X," ",1,%)_" "_$P(X," ",%+2,99),%=%-1,%1=%1-1
"RTN","XMA32A",72,0)
 .I $P(X," ",6)?4N S X=$P(X," ",3)_" "_$P(X," ",2)_" "_$P(X," ",6)_" "_$P(X," ",4)
"RTN","XMA32A",73,0)
 S %7=$P(X," ",4,99) I $E(%7)=" " S %7=$E(%7,2,99)
"RTN","XMA32A",74,0)
 S:$P(%7,":")=0 %7="00"_":"_$P(%7,":",2)
"RTN","XMA32A",75,0)
 ;if midnight, at a minute
"RTN","XMA32A",76,0)
 S:$E(%7,1,5)="00:00" %7="00:01"
"RTN","XMA32A",77,0)
 S X=$P(X," ")_$P(X," ",2)_$P(X," ",3) I %7'="" S X=X_"@"_$E(%7,1,5)
"RTN","XMA32A",78,0)
 S Y=$$DU(X) S:Y<0 Y=XMA K %7 Q Y
"RTN","XMA32A",79,0)
DU(X) N %DT S %DT="PT" D ^%DT Q Y
"RTN","XMAD1")
0^31^B11337490
"RTN","XMAD1",1,0)
XMAD1 ;(WASH ISC)/CAP-MailMan Deliver (3.9 File) ;10/17/96  08:29
"RTN","XMAD1",2,0)
 ;;7.1;MailMan;**24,27**;Jun 02, 1994
"RTN","XMAD1",3,0)
 ;
"RTN","XMAD1",4,0)
 ;XMAD1F = ARRAY OF RECIPIENTS IF FORWARDING MESSAGE
"RTN","XMAD1",5,0)
 ;XMCHAN= DEFINED ONLY IF COMING FROM NETWORKING
"RTN","XMAD1",6,0)
 ;XME0 = SPECIAL FLAG FOR FILER = BROADCASTING
"RTN","XMAD1",7,0)
 ;XMFF = DEFINED ONLY IF FORWARDING MESSAGE
"RTN","XMAD1",8,0)
 ;XMLOCK= LIST OF KEYS IF USER IS ALLOWED...
"RTN","XMAD1",9,0)
 ;^TMP("XMY",$J,duz) = Node set for each recipient
"RTN","XMAD1",10,0)
 ;^TMP("XMY",$J,XMDUZ,0) = Basket_Name will deliver the message to
"RTN","XMAD1",11,0)
 ;    a particular basket, but only for the sender
"RTN","XMAD1",12,0)
 ;
"RTN","XMAD1",13,0)
 ;FILE XMY ARRAY INTO RECIPIENT LIST
"RTN","XMAD1",14,0)
 ;
"RTN","XMAD1",15,0)
 ;SET UP XMBPOST("POST"... FOR FORWARDED MESSAGES
"RTN","XMAD1",16,0)
 ;
"RTN","XMAD1",17,0)
ENT ;FROM XMD - ^TMP("XMY",$J,) RECIPIENTS (XMFF IS NOT DEFINED)
"RTN","XMAD1",18,0)
 ;FROM XMA1 - FORWARD TO ^TMP("XMY",$J,) RECIPIENTS (XMFF IS DEFINED)
"RTN","XMAD1",19,0)
 ;
"RTN","XMAD1",20,0)
 D FINAL^XMAD1X
"RTN","XMAD1",21,0)
 ;
"RTN","XMAD1",22,0)
 Q:+XMZ=0  Q:'$D(^XMB(3.9,XMZ,0))  S XMR=^(0)
"RTN","XMAD1",23,0)
 I '$P(XMR,U,3),'$D(XMCHAN),'$D(XMFF) D T S ^XMB(3.9,XMZ,0)=XMR
"RTN","XMAD1",24,0)
 ;
"RTN","XMAD1",25,0)
 K XMQ,XMAD1F S I=0,Y=0,%=$E($G(XMDUZ),1,60),XME0=$S(%="":"",$D(^TMP("XMY",$J,%,0)):"^^"_^(0),1:""),XMLOCK=$S($D(^XMB(3.9,XMZ,4)):^(4),1:"")
"RTN","XMAD1",26,0)
L I '$D(XMREMID) L +^XMB(3.9,XMZ):0 E  H 1 G L:$D(XMCHAN),L:$D(ZTQUEUED) W:I=0 !,*7,"WAITING for another user to transmit this message.  Enter '^' to abort: " R X:0 Q:X?1"^".E  S I=1 G L
"RTN","XMAD1",27,0)
 K Y2 S XMF0=$S($D(^XMB(3.9,XMZ,1,0)):^(0),1:"")
"RTN","XMAD1",28,0)
 L +^XMB("POSTDONE",XMZ)
"RTN","XMAD1",29,0)
 F XMB0=0:0 S XMAD1Y=$O(^TMP("XMY",$J,"")) Q:XMAD1Y=""  S Y=XMAD1Y D ^XMAD1A K ^TMP("XMY",$J,XMAD1Y)
"RTN","XMAD1",30,0)
 S ^XMB(3.9,XMZ,1,0)="^3.91LA^"_($P(XMF0,U,3)+XMB0)_U_($P(XMF0,U,4)+XMB0)
"RTN","XMAD1",31,0)
 S Y=$S('$D(XMDUZ):DUZ,XMDUZ=.6:DUZ,1:XMDUZ),$P(XME0,U)=$S('$D(XMB("TYPE")):Y,XMB("TYPE")=2:"",1:Y)
"RTN","XMAD1",32,0)
 I $S($D(XMFF)&$O(XMAD1F(0)):1,'$D(XMFF):1,$P(XME0,U,2)="* LOCAL BROADCAST":1,1:0) S:'$D(XMNETREC) ^XMBPOST("POST",XMZ)=$S($D(XMFF):XME0,$D(XMAD1F(0)):XME0,1:$P(XME0_"^^^^^^^",U,1,8)_"^DONE") S Y2=$P($G(^XMB(3.9,XMZ,1,0)),U,3) G B:'Y2
"RTN","XMAD1",33,0)
 ;
"RTN","XMAD1",34,0)
 ;Force Broadcasts into delivery queue w/most rcpts.
"RTN","XMAD1",35,0)
 I $P(XME0,U,2)="* LOCAL BROADCAST" S Y=$G(^XMBPOST("POST",XMZ,0)),$P(Y,U,7,9)=$H*86400+$P($H,",",2)_"^9999999^DONE",^(0)=Y G B
"RTN","XMAD1",36,0)
 ;
"RTN","XMAD1",37,0)
 ;Done if this is not a forwarded message
"RTN","XMAD1",38,0)
 I '$D(XMFF)!'$O(XMAD1F(0)) G B:$D(XMNETREC),B:'$O(XMAD1F(0)),A
"RTN","XMAD1",39,0)
 S Y=0 F I=0:0 S I=$O(^XMBPOST("POST",XMZ,I)) Q:I=""  S Y=I
"RTN","XMAD1",40,0)
 S Y2=0 F I=0:0 S I=$O(XMAD1F(I)) Q:'I  S ^XMBPOST("POST",XMZ,I+Y)=XMAD1F(I),Y2=Y2+$L(XMAD1F(I),"^")
"RTN","XMAD1",41,0)
A S Y1=$G(^XMBPOST("POST",XMZ,0)),$P(Y1,U,7,9)=$H*86400+$P($H,",",2)_"^"_$S($D(Y2):Y2,1:$P($G(^XMB(3.9,XMZ,1,0)),U,3))_"^DONE",^XMBPOST("POST",XMZ,0)=Y1
"RTN","XMAD1",42,0)
B I '$D(XMREMID) L -^XMB(3.9,XMZ)
"RTN","XMAD1",43,0)
 L -^XMB("POSTDONE",XMZ)
"RTN","XMAD1",44,0)
 K XMA0,XMAD,XMAD1Y,XMB,XMB0,XMAD1F,XMD0,XME0,XMF0,XMLOCK,XMQ,XMINST,XMSITE,XMTSK
"RTN","XMAD1",45,0)
 K Y1,Y2,Y3
"RTN","XMAD1",46,0)
 ;
"RTN","XMAD1",47,0)
 ;START BACKGROUND FILER
"RTN","XMAD1",48,0)
C ;I $P($G(^XMB(1,1,0)),U,16) G OFF^XMAD2
"RTN","XMAD1",49,0)
 D ENTL^XMADGO1 Q
"RTN","XMAD1",50,0)
 ;
"RTN","XMAD1",51,0)
 ;ENTRY TO KILL XMY WHEN DONE
"RTN","XMAD1",52,0)
ENT1 ;FROM XMB,XMR1,XMD
"RTN","XMAD1",53,0)
 I $D(XMREMID),$L(XMREMID) L +(^XMBX(3.9,"AI",$E(XMREMID,1,64)),^XMB(3.9,XMZ)) D D L -(^XMBX(3.9,"AI",$E(XMREMID,1,64)),^XMB(3.9,XMZ)) Q
"RTN","XMAD1",54,0)
D D ENT K XMY,XMY0,^TMP("XMY",$J),^TMP("XMY0",$J) Q
"RTN","XMAD1",55,0)
 ;
"RTN","XMAD1",56,0)
T ;PUT INTO MESSAGE
"RTN","XMAD1",57,0)
 D NOW^%DTC S $P(XMR,U,3)=%
"RTN","XMAD1",58,0)
 Q
"RTN","XMADGO")
0^19^B4114025
"RTN","XMADGO",1,0)
XMADGO ;(WASH ISC)/CAP-MailMan START DELIVERY (3.7 File) ;08/05/96  13:52
"RTN","XMADGO",2,0)
 ;;7.1;MailMan;**5,27**;Jun 02, 1994
"RTN","XMADGO",3,0)
 ;
"RTN","XMADGO",4,0)
GO Q:$P($G(^XMB(1,1,0)),U,16)
"RTN","XMADGO",5,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D R^XMCTRAP"
"RTN","XMADGO",6,0)
 E  S X="R^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMADGO",7,0)
 I $D(XMDUZ) D KILL^XM I $D(XMCHAN) D KL^XMC I $D(XMBLOCK) D KILL^XML4CRC
"RTN","XMADGO",8,0)
 I $D(^%ZOSF("PRIORITY")) S X=$S(+$G(^XMB(1,1,.13)):+^(.13),1:5) X ^%ZOSF("PRIORITY")
"RTN","XMADGO",9,0)
 I $D(ZTQUEUED) D KILL^%ZTLOAD
"RTN","XMADGO",10,0)
 L +^XMBPOST("PGROUP"_$E(XMSTATT),$E(XMSTATT,2)):0 E  H 0 Q
"RTN","XMADGO",11,0)
 ;
"RTN","XMADGO",12,0)
 ;SET UP GENERAL VARIABLES
"RTN","XMADGO",13,0)
 S U="^",DTIME=999 D NOW^%DTC S DT=$P(%,"."),W=0,Z="Z" K %I,%H,%
"RTN","XMADGO",14,0)
 D HANG K XMADH G ^XMADJF1A
"RTN","XMADGO",15,0)
 ;
"RTN","XMADGO",16,0)
ZTSK ;START Delivery Background Processes
"RTN","XMADGO",17,0)
 ;
"RTN","XMADGO",18,0)
 ;Quit if Background Filer Stop Flag
"RTN","XMADGO",19,0)
 Q:$P(^XMB(1,1,0),U,16)
"RTN","XMADGO",20,0)
 ;
"RTN","XMADGO",21,0)
 ;Check each queue w/messages
"RTN","XMADGO",22,0)
 N %,X,Y,Z S X=""
"RTN","XMADGO",23,0)
X S X=$O(^XMBPOST(X)) Q:X=""  S Y=""
"RTN","XMADGO",24,0)
Y S Y=$O(^XMBPOST(X,Y)) G X:'Y,Y:$O(^(Y,""))=""
"RTN","XMADGO",25,0)
 ;
"RTN","XMADGO",26,0)
 ;If node locked, there is already one running
"RTN","XMADGO",27,0)
 L +^XMBPOST(X,Y):1 E  G Y
"RTN","XMADGO",28,0)
 ;
"RTN","XMADGO",29,0)
 S %=$E(X,$L(X)),XMSTATT=%_Y,ZTDESC="MailMan "_$S(%="M":"Message",1:"Response")_" Queue #"_Y
"RTN","XMADGO",30,0)
 ;
"RTN","XMADGO",31,0)
 S ZTRTN="^XMADGO",ZTSAVE("XMSTATT")=""
"RTN","XMADGO",32,0)
 ;
"RTN","XMADGO",33,0)
 ;Start a job, Give TaskMan a chance to start it (hang)
"RTN","XMADGO",34,0)
 D GOJOB H 0 L -^XMBPOST(X,Y) G Y
"RTN","XMADGO",35,0)
 ;
"RTN","XMADGO",36,0)
GOJOB N X,Y,ZTSK,ZTQUEUED,ZTCPU,ZTDTH,ZTIO
"RTN","XMADGO",37,0)
 I '$D(ZTCPU),$D(^XMB(1,1,0)) S X=$P(^(0),U,12) I X'="" S ZTCPU=$P(X,",",2)
"RTN","XMADGO",38,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD
"RTN","XMADGO",39,0)
 Q
"RTN","XMADGO",40,0)
JOB ;Start background filer when TaskMan can't
"RTN","XMADGO",41,0)
 ;J JOBGO^XMADGO Q
"RTN","XMADGO",42,0)
 ;
"RTN","XMADGO",43,0)
JOBGO S IO="",IO(0)="" D DT^DICRW G XMADGO
"RTN","XMADGO",44,0)
 ;
"RTN","XMADGO",45,0)
 ;Start Queue processors
"RTN","XMADGO",46,0)
QUEUE S ZTDESC="MailMan Delivery "_$P(XMADLOCK,"_",2),ZTSAVE("XMHANG")=""
"RTN","XMADGO",47,0)
 N XMHANG D HANG
"RTN","XMADGO",48,0)
 I XMADGO=1 S ZTRTN="^XMADJF0"
"RTN","XMADGO",49,0)
 I XMADGO=999 S ZTRTN="^XMADJ999"
"RTN","XMADGO",50,0)
 G GOJOB
"RTN","XMADGO",51,0)
 ;Set up variable to determine Hangtime of delivery modules
"RTN","XMADGO",52,0)
HANG N X
"RTN","XMADGO",53,0)
 S X=$S($D(^XMB(1,1,0)):^(0),1:""),XMHANG=$S($P(X,U,13):$P(X,U,13),1:5)
"RTN","XMADGO",54,0)
 Q
"RTN","XMAFTP")
0^30^B7719837
"RTN","XMAFTP",1,0)
XMAFTP ;(WASH ISC)/TCPIP-FTP     ;08/05/96  09:06
"RTN","XMAFTP",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMAFTP",3,0)
 Q
"RTN","XMAFTP",4,0)
GO ;Come here from GET or PUT (see tags below)
"RTN","XMAFTP",5,0)
 I ^%ZOSF("OS")'["VAX DSM" W !!,"Sorry...this option only works for VAX DSM" Q
"RTN","XMAFTP",6,0)
 N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMAFTP",7,0)
 S X="EXIT^XMAFTP",@^%ZOSF("TRAP")
"RTN","XMAFTP",8,0)
 N DIC,DIE,DIK,DD,DO,DTOUT,DUOUT,XMAFTP S XMAFTP=Z
"RTN","XMAFTP",9,0)
 S DIC="^XMBX(4.2995,",DIC(0)="AEQFZ",X="TMP"_$P($H,",",2)
"RTN","XMAFTP",10,0)
 S DIC("DR")="1///"_($H*86400+$P($H,",",2))_";2///"_$S($G(XMDUZ):XMDUZ,1:DUZ)_";4///"_Z
"RTN","XMAFTP",11,0)
 K DD,DO D FILE^DICN K DD,DO
"RTN","XMAFTP",12,0)
 Q:Y<0  S DIE=DIC,DA=+Y
"RTN","XMAFTP",13,0)
 S DIE("NO^")="BACKOUTOK"
"RTN","XMAFTP",14,0)
 ;
"RTN","XMAFTP",15,0)
 ;Ask data according to Get or Put option
"RTN","XMAFTP",16,0)
 S DR=$S(XMAFTP=1:"12;13;10;11;7;8;9",XMAFTP=2:"10;11;12;13;7;8;9",1:"")
"RTN","XMAFTP",17,0)
 G EXIT:DR=""
"RTN","XMAFTP",18,0)
 D ^DIE
"RTN","XMAFTP",19,0)
 G EXIT:$S(X="":1,$D(DTOUT):1,$D(DUOUT):1,1:0)
"RTN","XMAFTP",20,0)
 D SETXMF
"RTN","XMAFTP",21,0)
 W !!,"In process...it will take a little time to complete the transmission."
"RTN","XMAFTP",22,0)
 D FTP K XMSFTP
"RTN","XMAFTP",23,0)
 Q
"RTN","XMAFTP",24,0)
EXIT S DIK="^XMBX(4.2995," D ^DIK
"RTN","XMAFTP",25,0)
 I '$D(ZTQUEUED),'$D(XMCHAN) W !!,"Process Aborted !!!",*7
"RTN","XMAFTP",26,0)
 Q
"RTN","XMAFTP",27,0)
SETXMF ;Set up XMSFTP array to use when doing tag FTP
"RTN","XMAFTP",28,0)
 S %1=$G(^XMBX(4.2995,DA,1))
"RTN","XMAFTP",29,0)
 S XMSFTP(4)=$P(%1,U,4)
"RTN","XMAFTP",30,0)
 S XMSFTP(5)=$P(%1,U,5)
"RTN","XMAFTP",31,0)
 I XMAFTP=1 S XMSFTP(1)=$P(%1,U,6),XMSFTP(2)=$P(%1,U,10),XMSFTP(2,"F")=$P(%1,U,9),XMSFTP(9)=$P(%1,U,7),XMSFTP(10)=$P(%1,U,8)
"RTN","XMAFTP",32,0)
 I XMAFTP=2 S XMSFTP(3)=$P(%1,U,6),XMSFTP(2)=$P(%1,U,8),XMSFTP(2,"F")=$P(%1,U,7),XMSFTP(9)=$P(%1,U,9),XMSFTP(10)=$P(%1,U,10)
"RTN","XMAFTP",33,0)
 Q
"RTN","XMAFTP",34,0)
FTP ;Set up 4.2995 entry and XMnn.COM file
"RTN","XMAFTP",35,0)
 N XMIO S XMIO=$I
"RTN","XMAFTP",36,0)
 S (XMSFTP,X)=$G(^XMBX(4.2995,"F",0))+1,^(0)=X
"RTN","XMAFTP",37,0)
 S FILE="XM"_X_".COM" O FILE:NEW U FILE
"RTN","XMAFTP",38,0)
 W "$! FTP COM procedure for fetching file from server and sending it",!
"RTN","XMAFTP",39,0)
 W "$ set noon",!
"RTN","XMAFTP",40,0)
 W "$ assign/user nla0: sys$output",! ; Turn off echo
"RTN","XMAFTP",41,0)
 W "$ assign/user sys$input sys$command",!
"RTN","XMAFTP",42,0)
 I $L($G(XMSFTP(3))),$L($G(XMSFTP(2))) W "$ set def "_XMSFTP(2),!
"RTN","XMAFTP",43,0)
 I $L($G(XMSFTP(1))),$L($G(XMSFTP(10))) W "$ set def "_XMSFTP(10),!
"RTN","XMAFTP",44,0)
 W "$ FTP=""$TWG$TCP:[NETDIST.USER]FTP",!
"RTN","XMAFTP",45,0)
 W "$ FTP "
"RTN","XMAFTP",46,0)
 I $L($G(XMSFTP(1))) W XMSFTP(1),!
"RTN","XMAFTP",47,0)
 E  W XMSFTP(3),!
"RTN","XMAFTP",48,0)
 S %2=$G(XMSFTP(4)) W %2,!
"RTN","XMAFTP",49,0)
 S %2=$G(XMSFTP(5)) I $L(%2) W %2,!
"RTN","XMAFTP",50,0)
 W "bin",!
"RTN","XMAFTP",51,0)
TT I XMAFTP=1 D
"RTN","XMAFTP",52,0)
 .I $L($G(XMSFTP(2))) W "cd "_XMSFTP(2),!
"RTN","XMAFTP",53,0)
 .W "get "_XMSFTP(2,"F")_" "_$G(XMSFTP(9)),!
"RTN","XMAFTP",54,0)
 I XMAFTP=2 D
"RTN","XMAFTP",55,0)
 .I $L($G(XMSFTP(10))) W "cd "_XMSFTP(10),!
"RTN","XMAFTP",56,0)
 .W "put "_XMSFTP(2,"F")_" "_$G(XMSFTP(9)),!
"RTN","XMAFTP",57,0)
 W "quit",!
"RTN","XMAFTP",58,0)
 S DIE="^XMBX(4.2995,",DR=".01////"_FILE D ^DIE
"RTN","XMAFTP",59,0)
 C FILE
"RTN","XMAFTP",60,0)
 K FILE
"RTN","XMAFTP",61,0)
 U XMIO
"RTN","XMAFTP",62,0)
 Q
"RTN","XMAFTP",63,0)
GET ;Entry for GET option
"RTN","XMAFTP",64,0)
 N Z S Z=1 G GO
"RTN","XMAFTP",65,0)
PUT ;Entry for PUT option
"RTN","XMAFTP",66,0)
 N Z S Z=2 G GO
"RTN","XMAP0")
0^6^B8502559
"RTN","XMAP0",1,0)
XMAP0 ;(WASH ISC)/CAP-MESSAGE DISPLAY CONTINUED ;05/31/96  11:09
"RTN","XMAP0",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMAP0",3,0)
 ;
"RTN","XMAP0",4,0)
 ;XMP=0 for CRT display (interactive)
"RTN","XMAP0",5,0)
 ;XMP>0 for printing (1=PRINT,2=**UNUSED**,3=QUEUED PRINT)
"RTN","XMAP0",6,0)
 ;
"RTN","XMAP0",7,0)
END ;Consolidate with CONF^XMA1A (also marks last read date) ???
"RTN","XMAP0",8,0)
 S XMHOLD=$S('$D(X):"",1:X)
"RTN","XMAP0",9,0)
 ;
"RTN","XMAP0",10,0)
 ;mark read if it hasn't already been time stamped
"RTN","XMAP0",11,0)
 I $G(XMAP("ASKED")) K XMAP("ASKED") G G
"RTN","XMAP0",12,0)
 S X="N",%DT="T" D ^%DT
"RTN","XMAP0",13,0)
 S %=$O(^XMB(3.9,XMZ,1,"C",$S(XMDUZ=.6:DUZ,1:XMDUZ),0))
"RTN","XMAP0",14,0)
 I %,$S(XMDUZ=DUZ:1,"Yy"'[$E($P(XMR,U,11)_" "):1,1:0),$D(^XMB(3.9,XMZ,1,%,0)) S:$P(^(0),U,3)="" $P(^(0),U,10)=Y S $P(^(0),U,3)=Y
"RTN","XMAP0",15,0)
 ;
"RTN","XMAP0",16,0)
G I XMHOLD["^",$D(XMANEW) D NNEW^XMA
"RTN","XMAP0",17,0)
 S X=XMHOLD
"RTN","XMAP0",18,0)
Q K %,%1,%2,%3,DIR,DTOUT,DUOUT,XMA0,XMAP,XMB0,XMD0,XME0,XMF0,XMHOLD,XMJ,XMKEY,XMSEC
"RTN","XMAP0",19,0)
 I $D(XMAPLCNT) S %1="LINES_READ" L +^XMBPOST(%1) S %=$G(^XMBPOST(%1,0)),%=%+XMAPLCNT,^(0)=% L -^XMBPOST(%1) K %,%1,XMAPLCNT
"RTN","XMAP0",20,0)
 S XMS=0 Q
"RTN","XMAP0",21,0)
INIT ;FROM XMAP INITIALIZE FOR PRINTING
"RTN","XMAP0",22,0)
 ;
"RTN","XMAP0",23,0)
 ;Initialize for CRT display
"RTN","XMAP0",24,0)
1 I '$D(XMTYPE) S I=$O(^XMB(3.9,XMZ,1,"C",XMDUZ,0)),XMTYPE=$S('$D(XMANEW):"",I:";;;;;"_$P(^XMB(3.9,XMZ,1,I,0),U,2),1:"")
"RTN","XMAP0",25,0)
 K XMAPBLOB,DIR,XMAP0R ;XMAP0R is number of responses read
"RTN","XMAP0",26,0)
 S DIR(0)="E",XMB0=XMZ S:'$D(XMA0) XMA0=0
"RTN","XMAP0",27,0)
 S:'$D(XMP) XMP=0 I 'XMP,$S('$D(IO(0)):1,IO=IO(0):1,1:0) W *13 I $E(IOST,1,2)="C-" W @IOF
"RTN","XMAP0",28,0)
 S XMR=$S($D(^XMB(3.9,XMZ,0)):^(0),1:"") I XMR="" G KL^XMA1B:XMK'=.95 S XMR="***NO SUBJECT***^****UNKNOWN****"
"RTN","XMAP0",29,0)
 I '$D(XMS) S XMS=0
"RTN","XMAP0",30,0)
 I $D(^XMB(3.9,XMZ,4)) S XMLOCK=^(4)
"RTN","XMAP0",31,0)
 I XMDUZ=.5,XMK>999,'$D(XMINST) G U^XMAP:$D(XMQUE) D QUER^XMA5 W !! G END:XMP!$D(XMCOPY)!$D(XMF0) D CBASK^XMA1 G END
"RTN","XMAP0",32,0)
 D SCRM I $D(XMKEY),XMKEY=U S X="" G Q
"RTN","XMAP0",33,0)
 S I=XMZ,%=XMR,%1=$P(%,U) K XMAP I XMP=2 G 5^XMAP
"RTN","XMAP0",34,0)
 G U^XMAP
"RTN","XMAP0",35,0)
 ;
"RTN","XMAP0",36,0)
SCRM ;SECURED MESSAGE HANDLING
"RTN","XMAP0",37,0)
 ;
"RTN","XMAP0",38,0)
 S (XMS,I)=0,Y=$S($D(^XMB(3.9,XMZ,0)):^(0),1:"") Q:$P(Y,U,10)=""
"RTN","XMAP0",39,0)
 I '$D(ZTQUEUED),IO'=IO(0) U IO(0) W !!!,"Message Subject: ",$P(Y,U) S Y=$P(Y,U,2) W !,?11,"FROM: ",$S(+Y'=Y:Y,$D(^VA(200,Y,0)):$P(^(0),U),1:Y),!! U IO
"RTN","XMAP0",40,0)
 I '$D(ZTQUEUED) U IO(0) D UN^XME Q:XMKEY'="^"  G Z:IO=IO(0) U IO(0) W *7 D W U IO W ! D W
"RTN","XMAP0",41,0)
 S XMS=1,I=1 W !!,"<<< This message is secured. >>>"
"RTN","XMAP0",42,0)
 W !!,"Secured messages can not be 'QUEUED' for printing because no one"
"RTN","XMAP0",43,0)
 W !,"can enter the scramble password.",!!,"PRINT ABORTED !!!",!!!
"RTN","XMAP0",44,0)
Z S (X,XMKEY)="^"
"RTN","XMAP0",45,0)
 Q
"RTN","XMAP0",46,0)
SCRAM ;INTERACTIVE
"RTN","XMAP0",47,0)
 S I=0 I $P(^XMB(3.9,XMZ,0),U,10)'="" D UN^XME S I=1
"RTN","XMAP0",48,0)
 Q
"RTN","XMAP0",49,0)
W W !,"No 'scramble password' entered.  MESSAGE TEXT WILL NOT PRINT !!!",!
"RTN","XMAP0",50,0)
 Q
"RTN","XMAPHOST")
0^20^B13238250
"RTN","XMAPHOST",1,0)
XMAPHOST ;(WASH ISC)/KMB/CAP-PRINT TO MESSAGE (P-MESSAGE) ;08/05/96  09:16
"RTN","XMAPHOST",2,0)
 ;;7.1;MailMan;**7,14,27**;Sep 12, 1994
"RTN","XMAPHOST",3,0)
 ;
"RTN","XMAPHOST",4,0)
 ;This routine is called as a close execute for the P-Message device
"RTN","XMAPHOST",5,0)
 ;to put reports written to host files (DOS,VMS...) into mail messages.
"RTN","XMAPHOST",6,0)
 ;
"RTN","XMAPHOST",7,0)
 ;It has one idiosyncracy.  If the report contains one single line
"RTN","XMAPHOST",8,0)
 ;or two lines separated with only a $C(13) instead of a CR/LF that is
"RTN","XMAPHOST",9,0)
 ;more than 254 characters long, there will be unexpected results.
"RTN","XMAPHOST",10,0)
 ;
"RTN","XMAPHOST",11,0)
 ;
"RTN","XMAPHOST",12,0)
 K ^TMP("XMY",$J),^TMP("XMY0",$J) I '$D(ZTQUEUED) K XMY,XMY0
"RTN","XMAPHOST",13,0)
 S Y=0
"RTN","XMAPHOST",14,0)
 N XMDUZ S XMDUZ=DUZ I '$G(XMDUZ) S XMDUZ=.5 I '$D(ZTQUEUED) U IO(0) W !!,*7,"No user identity.  Using Postmaster as sender and receiver." U IO
"RTN","XMAPHOST",15,0)
 S %=$G(XMSUB) N XMXUSEC,XMSUB,XMR S XMSUB=%
"RTN","XMAPHOST",16,0)
 I '$D(^XMB(3.7,$S($D(XMDUZ):XMDUZ,1:DUZ))),'$D(ZTQUEUED) U IO(0) W !,*7,"You do not have a mail box.  MailMan will not deliver messages to you." U IO
"RTN","XMAPHOST",17,0)
 I '$D(ZTQUEUED) U IO(0) W !!,"Moving text to MailMan message... (Creating now) " U IO
"RTN","XMAPHOST",18,0)
 N XMZ D DUN S XMSUB=$S($L($G(XMSUB))>3:XMSUB,$D(ZTQUEUED):"QUEUED MAIL REPORT FROM "_%,1:"")
"RTN","XMAPHOST",19,0)
 I '$D(ZTQUEUED) D 0
"RTN","XMAPHOST",20,0)
 D GET^XMA2
"RTN","XMAPHOST",21,0)
 S XMAPHOST("XMZ")=XMZ,XMAPHOST("XMSUB")=XMSUB
"RTN","XMAPHOST",22,0)
 Q
"RTN","XMAPHOST",23,0)
 ;
"RTN","XMAPHOST",24,0)
 ;Read the host file into a message, send it, erase it
"RTN","XMAPHOST",25,0)
READ ;Read record from file
"RTN","XMAPHOST",26,0)
 ;Each time <CR> is found in record it ends a message line
"RTN","XMAPHOST",27,0)
 N %,XMA0,XMB0,XMR,XMZ,Y
"RTN","XMAPHOST",28,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMAPHOST",29,0)
 S X="EOF^XMAPHOST",@^%ZOSF("TRAP")
"RTN","XMAPHOST",30,0)
 S %=0,I=0,X="",XMZ=XMAPHOST("XMZ"),XMB0=^%ZOSF("OS")
"RTN","XMAPHOST",31,0)
 U IO F  D  G EOF:$G(XMAPHOST("EOF"))
"RTN","XMAPHOST",32,0)
 . S X=$$GET(),XMA0=$L(X) S:X="" %=%+1 Q:%>999!$G(XMAPHOST("EOF"))
"RTN","XMAPHOST",33,0)
 . I X[""!(%<9) F  D  Q:X=""!$G(XMAPHOST("EOF"))
"RTN","XMAPHOST",34,0)
 . . S I=$$PUT(XMZ,$P(X,$C(13)),I),X=$P(X,$C(13),2,999)
"RTN","XMAPHOST",35,0)
 . . I $L(X),XMA0>254 S X=X_$$GET(),XMA0=0
"RTN","XMAPHOST",36,0)
 . . Q
"RTN","XMAPHOST",37,0)
 . Q
"RTN","XMAPHOST",38,0)
 Q
"RTN","XMAPHOST",39,0)
PUT(XMZ,X,I) ;Put data into message.
"RTN","XMAPHOST",40,0)
 S I=I+1,^XMB(3.9,XMZ,2,I,0)=$$STRIP(X),%=0
"RTN","XMAPHOST",41,0)
 I '$D(ZTQUEUED),I#10=0 U IO(0) W "." U IO
"RTN","XMAPHOST",42,0)
 Q I
"RTN","XMAPHOST",43,0)
GET() ;Read a record from the file
"RTN","XMAPHOST",44,0)
 N Y,X
"RTN","XMAPHOST",45,0)
 G:$D(XMAPHOST("EOF")) GETR
"RTN","XMAPHOST",46,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMAPHOST",47,0)
 S X="GETQ^XMAPHOST",@^%ZOSF("TRAP")
"RTN","XMAPHOST",48,0)
GETR R Y#255:1
"RTN","XMAPHOST",49,0)
 I XMB0["MSM" G GETQ:$ZC'=0 Q Y
"RTN","XMAPHOST",50,0)
 Q Y
"RTN","XMAPHOST",51,0)
GETQ S XMAPHOST("EOF")=1
"RTN","XMAPHOST",52,0)
 Q ""
"RTN","XMAPHOST",53,0)
EOF ;
"RTN","XMAPHOST",54,0)
 I '$$NEWERR^%ZTER S X="ERR^ZU",@^%ZOSF("TRAP")
"RTN","XMAPHOST",55,0)
 I '$D(ZTQUEUED) U IO(0) W !,"END OF FILE",!
"RTN","XMAPHOST",56,0)
 S ^XMB(3.9,XMAPHOST("XMZ"),2,0)="^3.92A^"_I_"^"_I
"RTN","XMAPHOST",57,0)
 ;Here, send the message to recipient.
"RTN","XMAPHOST",58,0)
 N XMZ S XMZ=XMAPHOST("XMZ") I $D(ZTQUEUED) S XMY($S($G(XMDUZ):XMDUZ,$G(DUZ):DUZ,1:.5))="" D REDO^XMA21 G FINAL
"RTN","XMAPHOST",59,0)
 ;Here, we ask the user for recipients.
"RTN","XMAPHOST",60,0)
 I '$D(ZTQUEUED) U IO(0) D DUN N DIC,XMDUZ,XMDUN S XMDUZ=$S(DUZ:DUZ,1:.5),XMDUN=% D DESTXM^XMA21 G FINAL
"RTN","XMAPHOST",61,0)
FINAL I '$D(^TMP("XMY",$J)) S TMP("XMY",$J,.5)="",^TMP("XMY0",$J,.5)=""
"RTN","XMAPHOST",62,0)
 D ENT^XMAD1
"RTN","XMAPHOST",63,0)
 I '$D(ZTQUEUED) U IO(0) W !,"Message subject: ",XMAPHOST("XMSUB"),", Message number: ",XMZ,! H 3
"RTN","XMAPHOST",64,0)
Q1 S IONOFF=1 ;Prevent form feed during device close
"RTN","XMAPHOST",65,0)
 K %,X,XMAPHOST,XMY,^TMP("XMY",$J),^TMP("XMY0",$J),Y,I Q
"RTN","XMAPHOST",66,0)
STRIP(X) ;Remove Control Characters
"RTN","XMAPHOST",67,0)
 N % S %=0 I X'?.ANP N % F %=1:1:$L(X) I $E(X,%)?1C S X=$E(X,1,%-1)_$E(X,%+1,999) Q:X?.ANP  S %=%-1
"RTN","XMAPHOST",68,0)
 Q X
"RTN","XMAPHOST",69,0)
DUN ;GET NAME IN %
"RTN","XMAPHOST",70,0)
 S %=$S($D(^VA(200,DUZ,0))#2:$P(^(0),U),'$D(^DIC(3,DUZ,0)):"POSTMASTER",1:$P(^DIC(3,DUZ,0),U))
"RTN","XMAPHOST",71,0)
 Q
"RTN","XMAPHOST",72,0)
0 U IO(0) S XMAPHOST("XMSUB")=XMSUB D ENTS^XMA20
"RTN","XMAPHOST",73,0)
 I X'["^" S XMSUB=$S($L(X):X,1:XMAPHOST("XMSUB")) U IO Q
"RTN","XMAPHOST",74,0)
 W !!,"Sorry, I cannot stop the creation of this message at this point.",!,"You must enter a valid SUBJECT.",!
"RTN","XMAPHOST",75,0)
 G 0
"RTN","XMB")
0^1^B17326075
"RTN","XMB",1,0)
XMB ;(WASH ISC)/THM/RWF/CAP-Bulletins & TaskMan ;08/09/96  12:26
"RTN","XMB",2,0)
 ;;7.1;MailMan;**3,7,24,26,27**;Jun 02, 1994
"RTN","XMB",3,0)
 ; The entry point ^XMB delivers a bulletin in background.  The
"RTN","XMB",4,0)
 ; recipients of the message will include any entries in the XMY
"RTN","XMB",5,0)
 ; array that the caller has defined and the members of mail group
"RTN","XMB",6,0)
 ; that are included in the definition of the entry in the Bulletin
"RTN","XMB",7,0)
 ; file (#3.6) at the time of delivery.  There must be valid
"RTN","XMB",8,0)
 ; recipients or the message will not be delivered.
"RTN","XMB",9,0)
 ; Inputs:
"RTN","XMB",10,0)
 ;    XMB=The name of a bulletin (an entry in File #3.6)
"RTN","XMB",11,0)
 ;    XMB(parameter#)=The value to be stuffed into the bulletin for each
"RTN","XMB",12,0)
 ;       required parameter.  (eg. XMB(1)=data for parameter#1
"RTN","XMB",13,0)
 ;    XMTEXT=The text of the message (Optional)
"RTN","XMB",14,0)
 ;    XMY=An array of recipients of a bulletin (Optional)
"RTN","XMB",15,0)
 ;    XMDUZ=Sender #
"RTN","XMB",16,0)
 ;    XMDT=Current date/time
"RTN","XMB",17,0)
 ;
"RTN","XMB",18,0)
 ; Output:
"RTN","XMB",19,0)
 ;    XMZ=Message number if successful
"RTN","XMB",20,0)
 D SW^XMBPOST K XMTEXT
"RTN","XMB",21,0)
 N %,A,B,C,D,DA,DIC,DIE,DR,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,V,W,XMA0,XMB0,XMC0,XMCHAN,XMINST,XMM,XMMG,XMIO,XMJ,XMRDOM,XMSCR,XMSCRN,XMSDOM,XMSITE,X,Y,Z
"RTN","XMB",22,0)
 S XMCHAN=1
"RTN","XMB",23,0)
 ;XMBTMP is set in XMA1A - confirmation message
"RTN","XMB",24,0)
 I '$D(XMBTMP) K ^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMB",25,0)
 S XMB("TYPE")=2 S:'$D(XMDT) XMDT="N"
"RTN","XMB",26,0)
 D D
"RTN","XMB",27,0)
 G PK^XMBPOST:'$D(^TMP("XMY",$J))
"RTN","XMB",28,0)
 D ^XMBPOST
"RTN","XMB",29,0)
 K XMY,XMY0,^TMP("XMY",$J),^TMP("XMY0",$J),^TMP("XMBTEXT",$J)
"RTN","XMB",30,0)
 Q
"RTN","XMB",31,0)
EN ;Interactive Bulletin Entry Point
"RTN","XMB",32,0)
 D SW^XMBPOST K XMTEXT
"RTN","XMB",33,0)
 N %,A,B,C,D,DA,DIC,DIE,DR,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,V,W,XMA0,XMB0,XMC0,XMCHAN,XMINST,XMM,XMMG,XMIO,XMJ,XMRDOM,XMSCR,XMSCRN,XMSDOM,XMSITE,Y,Z
"RTN","XMB",34,0)
 S XMCHAN=1 I '$D(XMBTMP) K ^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMB",35,0)
 S XMBDUZ=$D(XMDUZ) S:'XMBDUZ XMDUZ=DUZ D D Q:XMM<0  I '$D(^TMP("XMY",$J)) Q
"RTN","XMB",36,0)
 S XMSUB=$P(^XMB(3.6,XMM,0),U,2)
"RTN","XMB",37,0)
 I XMSUB["|" S XMF=XMSUB D FILL S XMSUB=XMF
"RTN","XMB",38,0)
XMZ D XMZ^XMA2 G OK:XMZ>0 I $D(ZTQUEUED) S ZTREQ="900S" Q
"RTN","XMB",39,0)
 W !!,"Waiting for the Message File",*7,! F %=1:1:10 W "." H 1
"RTN","XMB",40,0)
 G XMZ
"RTN","XMB",41,0)
OK I $D(XMYBLOB)>9 S X=$$MULTI^XMBBLOB(XMZ)
"RTN","XMB",42,0)
 D MOVE I 'XMBDUZ S X=$S($D(XMDUN):XMDUN,$D(^VA(200,DUZ,0)):"<"_$P(^(0),U)_">",1:"<Postmaster>") S $P(^XMB(3.9,XMZ,0),U,2)=X
"RTN","XMB",43,0)
 D REDO^XMA21,ENT1^XMAD1 K:'XMBDUZ XMDUZ K XMBDUZ
"RTN","XMB",44,0)
 G KILL
"RTN","XMB",45,0)
MOVE N I,J,XMF,XMT,Y
"RTN","XMB",46,0)
 S XMT=^XMB(3.6,XMM,1,0)
"RTN","XMB",47,0)
 F I=1:1:$P(XMT,U,4) S XMF=^XMB(3.6,XMM,1,I,0) D FILL:XMF["|" S ^XMB(3.9,XMZ,2,I,0)=XMF
"RTN","XMB",48,0)
 I $O(^TMP("XMBTEXT",$J,0)) D
"RTN","XMB",49,0)
 .;J=0 if text is on node ^(Y,0), =1 if on ^(Y)
"RTN","XMB",50,0)
 .S J=$D(^($O(^TMP("XMBTEXT",$J,0))))#2,Y=0
"RTN","XMB",51,0)
 .F I=I+1:1 S Y=$O(^TMP("XMBTEXT",$J,Y)) Q:'Y  S X=$S(J:$G(^(Y)),1:$G(^(Y,0))),^XMB(3.9,XMZ,2,I,0)=X
"RTN","XMB",52,0)
 .S I=I-1
"RTN","XMB",53,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92A^"_I_U_I
"RTN","XMB",54,0)
 Q
"RTN","XMB",55,0)
FILL N I,K
"RTN","XMB",56,0)
 F I=1:1 Q:$P(XMF,"|",2,99)=""  S K=+$P(XMF,"|",2),XMF=$P(XMF,"|",1)_$S($D(XMB(K)):XMB(K),1:"")_$P(XMF,"|",3,999)
"RTN","XMB",57,0)
 Q
"RTN","XMB",58,0)
FAIL S XMB=-1
"RTN","XMB",59,0)
END K XMU,XMT Q
"RTN","XMB",60,0)
D S XMJ=0,XMM=$O(^XMB(3.6,"B",XMB,0)) G FAIL:'XMM S XMN=0 K XMFINAL
"RTN","XMB",61,0)
 I $D(XMY) S %X="XMY(",%Y="^TMP(""XMY"","_$J_"," D %XY^%RCR
"RTN","XMB",62,0)
D0 S XMJ=$O(^XMB(3.6,XMM,2,XMJ)) I XMJ S (I,Y)=+^(XMJ,0),%=$G(^XMB(3.8,Y,0)) G D0:%="" S Y=Y_U_$P(%,U),XME0=$P(%,U,6) D GO^XMA21G G D0
"RTN","XMB",63,0)
 K XMN,XMJ,XM1 Q
"RTN","XMB",64,0)
 ;
"RTN","XMB",65,0)
 ;
"RTN","XMB",66,0)
ZTSK ;ENTRY POINT FROM THE TASK MANAGER
"RTN","XMB",67,0)
 S XMTSK=ZTSK S:'$D(XMDT) XMDT="N"
"RTN","XMB",68,0)
 S:'$D(XMIO) XMIO="" D KILL:"236"'[XMB("TYPE")
"RTN","XMB",69,0)
 S:'$D(XMDUZ) XMDUZ=.5 G @(XMB("TYPE"))
"RTN","XMB",70,0)
1 G ZTSK^XMA1 ; TICKLER MESSAGES
"RTN","XMB",71,0)
2 K:'$G(XMBTMP) ^TMP("XMY",$J),^TMP("XMY0",$J) K XMDT S XMB=XMB("A") G EN ; BULLETIN
"RTN","XMB",72,0)
3 D XMTAUDIT^XMBPOST(.XMB)
"RTN","XMB",73,0)
 G ZTSK^XMS0 ; REMOTE TRANSMISSION
"RTN","XMB",74,0)
4 G ZDEV^XMS1 ; PRINT MESSAGE ON DEVICE
"RTN","XMB",75,0)
5 G ZSER^XMS1 ; PUMP INTO SERVER
"RTN","XMB",76,0)
6 G ZTSK^XMS1 ; POLLER
"RTN","XMB",77,0)
7 G TASKER^XMR ;INTER-UCI TRANSFER
"RTN","XMB",78,0)
 Q
"RTN","XMB",79,0)
BULL ;MANUALLY POST A BULLETIN
"RTN","XMB",80,0)
 S DIC(0)="AEQMZ",DIC="^XMB(3.6," D ^DIC
"RTN","XMB",81,0)
 I Y<0 K %H,%I,DIC,XM1,XMA,XMB,XMDT,XMM,XMT,Y Q
"RTN","XMB",82,0)
 S XMB=$P(Y(0),U,1),XMJ=0 F I=1:1 S XMJ=$O(^XMB(3.6,+Y,1,XMJ)) Q:'XMJ  W !,^(XMJ,0)
"RTN","XMB",83,0)
 F I=1:1 W !,"ENTER PARAMETER ",I,": " R XMB(I):$S($D(DTIME):DTIME,1:300) S:'$T XMB(I)=U Q:XMB(I)=""!(XMB(I)[U)
"RTN","XMB",84,0)
 R !,"ENTER POSTING DATE: NOW// ",XMDT:$S($D(DTIME):DTIME,1:300) S:'$T XMDT=U Q:XMDT[U  K:XMDT="" XMDT S XMT=0 K XMY,XMY0,^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMB",85,0)
 G XMB
"RTN","XMB",86,0)
KILL ;KILL TASK ZTSK
"RTN","XMB",87,0)
 S %=$S($D(XMINST):XMINST,$D(XMSCR):XMSCR,1:0)
"RTN","XMB",88,0)
 I % D
"RTN","XMB",89,0)
 . K ^XMBS(4.2999,%,3)
"RTN","XMB",90,0)
 . S $P(^XMBS(4.2999,%,4),U,2)=$$NOW^XLFDT
"RTN","XMB",91,0)
 S ZTREQ="@" Q
"RTN","XMB",92,0)
NEW ;this tag is no longer called, XM*7.1*24
"RTN","XMB",93,0)
 Q
"RTN","XMBPOST")
0^5^B36963711
"RTN","XMBPOST",1,0)
XMBPOST ;(WASH ISC)/THM/RWF/CAP-Create Task ;08/12/96  09:01
"RTN","XMBPOST",2,0)
 ;;7.1;MailMan;**4,13,23,24,27**;Jun 02, 1994
"RTN","XMBPOST",3,0)
 ;
"RTN","XMBPOST",4,0)
 ;*******XXX/KCMO - MODIFIED AT TIM
"RTN","XMBPOST",5,0)
 ;
"RTN","XMBPOST",6,0)
 ;XMB("SCRIPT")=Zero node of Script last run
"RTN","XMBPOST",7,0)
 ;XMB("SCRIPT",0)=Pointer to last script used
"RTN","XMBPOST",8,0)
 ;
"RTN","XMBPOST",9,0)
 ;Schedule a Task: 1=BASKET DROP,2=BULLETIN,3=MESSAGE TRANSMISSION
"RTN","XMBPOST",10,0)
 ;
"RTN","XMBPOST",11,0)
 ;Skip next logic if not network mail task
"RTN","XMBPOST",12,0)
 G 0:'$D(XMINST),0:XMB("TYPE")'=3
"RTN","XMBPOST",13,0)
 ;
"RTN","XMBPOST",14,0)
 ;No new task for Network Transmission if one already scheduled
"RTN","XMBPOST",15,0)
 S %=$P($G(^XMBS(4.2999,XMINST,0)),U,2) I % Q:$$CHK^XMS5(%,XMINST)
"RTN","XMBPOST",16,0)
 D XMTCHECK(XMINST,.XMB)
"RTN","XMBPOST",17,0)
 ;
"RTN","XMBPOST",18,0)
ZTSK ;Entry if Requeue from Task
"RTN","XMBPOST",19,0)
 ;No task if TCP Poll Flag set
"RTN","XMBPOST",20,0)
 ; Q:$D(^DIC(4.2,"ATCP",1,XMINST))
"RTN","XMBPOST",21,0)
 ;
"RTN","XMBPOST",22,0)
 ;Transmission Script zero node
"RTN","XMBPOST",23,0)
 S XMOKSCR("SMTP")="",XMOKSCR("NONE")=""
"RTN","XMBPOST",24,0)
 S %=$G(XMB("SCRIPT",0))
"RTN","XMBPOST",25,0)
 I %="" D
"RTN","XMBPOST",26,0)
 . S %=$$SCR(XMINST,.XMOKSCR,"") Q:%=""
"RTN","XMBPOST",27,0)
 . D XMB
"RTN","XMBPOST",28,0)
 . S XMB("ITERATIONS")=0
"RTN","XMBPOST",29,0)
 . S XMB("FIRST SCRIPT")=XMB("SCRIPT",0)
"RTN","XMBPOST",30,0)
 E  I XMB("TRIES")'<$P($G(XMB("SCRIPT")),U,3) D
"RTN","XMBPOST",31,0)
 . ; Use TRANSMISSION SCRIPT according to priority & number of attempts
"RTN","XMBPOST",32,0)
 . S %=$$SCR(XMINST,.XMOKSCR,%) Q:%=""
"RTN","XMBPOST",33,0)
 . D XMB
"RTN","XMBPOST",34,0)
 . S XMB("TRIES",0,"$H")=$H
"RTN","XMBPOST",35,0)
 . S:XMB("SCRIPT",0)=XMB("FIRST SCRIPT") XMB("ITERATIONS")=XMB("ITERATIONS")+1
"RTN","XMBPOST",36,0)
 Q:%=""
"RTN","XMBPOST",37,0)
 S %=$P(XMB("SCRIPT"),U,5),XMIO=$S($D(XMIO("DSERV")):XMIO("DSERV"),$L(%):%,1:$P(^DIC(4.2,XMINST,0),U,17)),XMB("TRIES")=XMB("TRIES")+1,$P(XMB("SCRIPT"),U,7)=$P(XMB("SCRIPT"),U,7)+1
"RTN","XMBPOST",38,0)
 S $P(XMB("SCRIPT"),U,8)=$P(XMB("SCRIPT"),U,8)+1
"RTN","XMBPOST",39,0)
 ;
"RTN","XMBPOST",40,0)
 ;Set-up
"RTN","XMBPOST",41,0)
0 I '$D(XMS5("RETURN_TASK#")) N ZTSK
"RTN","XMBPOST",42,0)
 N X,Y,XMJ,XMP,ZTDTH,ZTPAR,ZTUCI,ZTSAVE,ZTIO,ZTDESC,ZTRTN
"RTN","XMBPOST",43,0)
 ;
"RTN","XMBPOST",44,0)
 ;Preserve X and Y coming in
"RTN","XMBPOST",45,0)
 ;S:$D(X)#10 XMP=X S:$D(Y)#10 $P(XMP,U,2,3)=Y_U_"*"
"RTN","XMBPOST",46,0)
 ;
"RTN","XMBPOST",47,0)
 ;Device
"RTN","XMBPOST",48,0)
 I '$D(XMIO),XMB("TYPE")=3 S Y=$P($G(^DIC(4.2,XMINST,0)),U,17),XMIO=$S($L(Y):Y,1:"")
"RTN","XMBPOST",49,0)
 ;
"RTN","XMBPOST",50,0)
TIM ;Time
"RTN","XMBPOST",51,0)
 ;Pause if remote transmission
"RTN","XMBPOST",52,0)
 I $G(XMB("TYPE"))=3 D
"RTN","XMBPOST",53,0)
 . ; If we are about to start the cycle of scripts again, schedule the
"RTN","XMBPOST",54,0)
 . ; task for "iterations" number of hours from now.
"RTN","XMBPOST",55,0)
 . I XMB("ITERATIONS")>0,XMB("TRIES")=1,XMB("SCRIPT",0)=XMB("FIRST SCRIPT") S ZTDTH=$$HADD^XLFDT($H,"",XMB("ITERATIONS")) Q
"RTN","XMBPOST",56,0)
 . ; If we are about to retry, schedule the task for "tries" number of
"RTN","XMBPOST",57,0)
 . ; minutes from now.
"RTN","XMBPOST",58,0)
 . I $G(XMB("TRIES"))>1 S ZTDTH=$$HADD^XLFDT($H,"","",XMB("TRIES"))
"RTN","XMBPOST",59,0)
 S:'$D(ZTDTH) ZTDTH=$H
"RTN","XMBPOST",60,0)
 ;
"RTN","XMBPOST",61,0)
 ;Which UCI
"RTN","XMBPOST",62,0)
 X ^%ZOSF("UCI") S ZTUCI=Y
"RTN","XMBPOST",63,0)
 ;
"RTN","XMBPOST",64,0)
 ;Bulletin name
"RTN","XMBPOST",65,0)
 I $D(XMB)#2 S XMB("A")=XMB
"RTN","XMBPOST",66,0)
 ;
"RTN","XMBPOST",67,0)
 ;Defaults
"RTN","XMBPOST",68,0)
 D SW S X="MailMan",ZTRTN="ZTSK^XMB",ZTIO=$S($D(XMIO):XMIO,1:"")
"RTN","XMBPOST",69,0)
 F I="XMB*","XMIO","ION","XMY*","XMYBLOB","XMDUZ" S ZTSAVE(I)=""
"RTN","XMBPOST",70,0)
 I $D(^TMP("XMBTEXT",$J)) S ZTSAVE("^TMP(""XMBTEXT"",$J,")=""
"RTN","XMBPOST",71,0)
 I XMB("TYPE")=2 S X="Bulletin: "_XMB
"RTN","XMBPOST",72,0)
 I XMB("TYPE")=3 S X="Network Mail to "_XMB("XMSCRN"),ZTSAVE("DUZ")=.5
"RTN","XMBPOST",73,0)
 E  F I="^TMP(""XMY"",$J,","^TMP(""XMY0"",$J," S ZTSAVE(I)=""
"RTN","XMBPOST",74,0)
 S ZTDESC=X,ZTPAR=3
"RTN","XMBPOST",75,0)
 ;
"RTN","XMBPOST",76,0)
 ;Schedule Task
"RTN","XMBPOST",77,0)
 D ^%ZTLOAD
"RTN","XMBPOST",78,0)
 I $D(XMB("XMSCR")) S $P(^XMBS(4.2999,XMB("XMSCR"),3),U,7)=ZTSK,$P(^(0),U,2)=ZTSK
"RTN","XMBPOST",79,0)
 ;
"RTN","XMBPOST",80,0)
 ;Handle return for Device server (d.device_name addresses)
"RTN","XMBPOST",81,0)
 ;I $D(XMP) S X=$P(XMP,U) I $P(XMP,U,3)="*" S Y=$P(XMP,U,2)
"RTN","XMBPOST",82,0)
 ;
"RTN","XMBPOST",83,0)
 ;Clean up and Quit
"RTN","XMBPOST",84,0)
PK K XMJ,XMI,XMIO,XMKK,XMTEXT,XMTSK,%DT,XMOKSCR Q
"RTN","XMBPOST",85,0)
 ;
"RTN","XMBPOST",86,0)
 ;Move Text array input to alternative array
"RTN","XMBPOST",87,0)
SW Q:$G(XMTEXT)=""  K ^TMP("XMBTEXT",$J)
"RTN","XMBPOST",88,0)
 S %X=XMTEXT,%Y="^TMP(""XMBTEXT"",$J," D %XY^%RCR
"RTN","XMBPOST",89,0)
 Q
"RTN","XMBPOST",90,0)
 ;Get Transmission Script Data
"RTN","XMBPOST",91,0)
SCR(D,XMOKSCR,%) ;Parameter1=pointer to domain
"RTN","XMBPOST",92,0)
 ;Parameter2=list of acceptable script types
"RTN","XMBPOST",93,0)
 ;Parameter3=pointer to last script used
"RTN","XMBPOST",94,0)
 ;RETURNS  ptr to script ^ 0 node of script
"RTN","XMBPOST",95,0)
 ;If no transmission scripts are prioritized use old data/defaults
"RTN","XMBPOST",96,0)
 N I,J,K,X,Y,XER,XMREC
"RTN","XMBPOST",97,0)
 I $G(XM1Q) G PP
"RTN","XMBPOST",98,0)
 S XER=$P($G(XMB("SCRIPT")),U,8)
"RTN","XMBPOST",99,0)
 S J=0
"RTN","XMBPOST",100,0)
 F  S J=$O(^DIC(4.2,D,1,J)) Q:J'=+J  D
"RTN","XMBPOST",101,0)
 . S XMREC=$G(^DIC(4.2,D,1,J,0))
"RTN","XMBPOST",102,0)
 . Q:$P(XMREC,U,7)  ; Out of service
"RTN","XMBPOST",103,0)
 . S I=$P(XMREC,U,4)
"RTN","XMBPOST",104,0)
 . S:I="" I="NONE"
"RTN","XMBPOST",105,0)
 . Q:'$D(XMOKSCR(I))
"RTN","XMBPOST",106,0)
 . S Y($S(+$P(^DIC(4.2,D,1,J,0),"^",2):+$P(^DIC(4.2,D,1,J,0),"^",2),1:9999),J)=J
"RTN","XMBPOST",107,0)
 Q:'$D(Y) ""
"RTN","XMBPOST",108,0)
PL I '$D(^DIC(4.2,D,1,+%,0)) S (%,XMB("SCRIPT",0))=0
"RTN","XMBPOST",109,0)
 S REF="Y",REF=$Q(@REF) I +%<1 S XMB("SCRIPT",0)=@REF G PP
"RTN","XMBPOST",110,0)
 S K=$S(+$P(^DIC(4.2,D,1,%,0),"^",2):+$P(^DIC(4.2,D,1,%,0),"^",2),1:9999)
"RTN","XMBPOST",111,0)
 S REF2="Y(K,%)" F I=1:1:1 S REF2=$Q(@REF2) S XMB("SCRIPT",0)=$S(REF2'="":@REF2,1:@REF)
"RTN","XMBPOST",112,0)
PP S %=+$G(^XMB(1,1,"NETWORK")),X=^DIC(4.2,D,0),I=XMB("SCRIPT",0)
"RTN","XMBPOST",113,0)
 S X=I_U_$P(X,U)_"^0^"_$S(%:%,1:10)_"^SMTP^"_$P(X,U,17)_U_$P(X,U,12)_"^0^"_+$G(XER)
"RTN","XMBPOST",114,0)
 ;Pickup data from selected script
"RTN","XMBPOST",115,0)
GO S %=I_U_^DIC(4.2,D,1,I,0)
"RTN","XMBPOST",116,0)
 ;
"RTN","XMBPOST",117,0)
 ;Use defaults if no data in transmission script fields
"RTN","XMBPOST",118,0)
 F I=2:1 Q:$P(X,U,I,999)=""  I $P(%,U,I)="" S $P(%,U,I)=$P(X,U,I)
"RTN","XMBPOST",119,0)
 Q %
"RTN","XMBPOST",120,0)
XMB ;Set up XMB array
"RTN","XMBPOST",121,0)
 K XMB("TRIES")
"RTN","XMBPOST",122,0)
 S XMB("TRIES")=0,XMB("SCRIPT",0)=+%,%=$P(%,U,2,$L(%,U)),XMB("SCRIPT")=%
"RTN","XMBPOST",123,0)
 Q
"RTN","XMBPOST",124,0)
 ;Set up for Requeing netmail delivery task
"RTN","XMBPOST",125,0)
ZTSK0 S %=XMINST,XMB("TYPE")=3,(XMSCR,XMB("XMSCR"))=%,XMB("XMSCRN")=$S($D(XMB("XMSCRN")):XMB("XMSCRN"),$D(XMSITE):XMSITE,1:$P(^DIC(4.2,%,0),U)),XMQ(%)=""
"RTN","XMBPOST",126,0)
 G ZTSK
"RTN","XMBPOST",127,0)
DSERV ;Device Server comes in here
"RTN","XMBPOST",128,0)
 S XMIO("DSERV")=XMIO G XMBPOST
"RTN","XMBPOST",129,0)
XMTCHECK(XMINST,XMB) ;
"RTN","XMBPOST",130,0)
 N XMTREC
"RTN","XMBPOST",131,0)
 S XMTREC=$G(^XMBS(4.2999,XMINST,4))
"RTN","XMBPOST",132,0)
 I $P(XMTREC,U,1),$P(XMTREC,U,2)="" D  ; Start time, but no finish time
"RTN","XMBPOST",133,0)
 . ; Previous transmission attempt was aborted.
"RTN","XMBPOST",134,0)
 . ; Pick up where we left off.
"RTN","XMBPOST",135,0)
 . S XMB("SCRIPT",0)=$P(XMTREC,U,3)
"RTN","XMBPOST",136,0)
 . S XMB("TRIES")=$P(XMTREC,U,4)
"RTN","XMBPOST",137,0)
 . S XMB("LASTTRY")=$P(XMTREC,U,5)
"RTN","XMBPOST",138,0)
 . S XMB("ITERATIONS")=$P(XMTREC,U,6)
"RTN","XMBPOST",139,0)
 . S XMB("FIRST SCRIPT")=$P(XMTREC,U,7)
"RTN","XMBPOST",140,0)
 . S XMB("SCRIPT")=$G(^XMBS(4.2999,XMINST,5))
"RTN","XMBPOST",141,0)
 Q
"RTN","XMBPOST",142,0)
XMTAUDIT(XMB) ;
"RTN","XMBPOST",143,0)
 N XMTREC,XMFDA
"RTN","XMBPOST",144,0)
 S XMTREC=$G(^XMBS(4.2999,XMB("XMSCR"),4),"XXX^XXX")
"RTN","XMBPOST",145,0)
 S $P(XMTREC,U,5)=$$NOW^XLFDT    ; latest try date/time
"RTN","XMBPOST",146,0)
 I $P($G(XMTREC),U,2)'="" D
"RTN","XMBPOST",147,0)
 . S $P(XMTREC,U,1)=$P(XMTREC,U,5)    ; start time
"RTN","XMBPOST",148,0)
 . S $P(XMTREC,U,2)=""                ; finish time
"RTN","XMBPOST",149,0)
 . K ^XMBS(4.2999,XMB("XMSCR"),6)     ; Kill off the audit multiple
"RTN","XMBPOST",150,0)
 S $P(XMTREC,U,3)=XMB("SCRIPT",0)     ; script ien
"RTN","XMBPOST",151,0)
 S $P(XMTREC,U,4)=XMB("TRIES")        ; how many tries with this script
"RTN","XMBPOST",152,0)
 S $P(XMTREC,U,6)=XMB("ITERATIONS")   ; how many complete script cycles
"RTN","XMBPOST",153,0)
 S $P(XMTREC,U,7)=XMB("FIRST SCRIPT") ; ien of the first script used
"RTN","XMBPOST",154,0)
 S $P(^XMBS(4.2999,XMB("XMSCR"),4),U,1,7)=XMTREC
"RTN","XMBPOST",155,0)
 S ^XMBS(4.2999,XMB("XMSCR"),5)=XMB("SCRIPT")
"RTN","XMBPOST",156,0)
 S XMFDA(4.29992,"+1,"_XMB("XMSCR")_",",.01)=$P(XMTREC,U,5) ; try time
"RTN","XMBPOST",157,0)
 S XMFDA(4.29992,"+1,"_XMB("XMSCR")_",",1)=$P(XMB("SCRIPT"),U)  ; script name
"RTN","XMBPOST",158,0)
 D UPDATE^DIE("","XMFDA")
"RTN","XMBPOST",159,0)
 Q
"RTN","XMC1")
0^16^B12630244
"RTN","XMC1",1,0)
XMC1 ;(WASH ISC)/THM-SCRIPT INTERPRETER ;08/05/96  13:54
"RTN","XMC1",2,0)
 ;;7.1;MailMan;**4,13,20,27**;Jun 02, 1994
"RTN","XMC1",3,0)
 S XMINST=XMSCR
"RTN","XMC1",4,0)
ENT I '$D(XMSDOM) S (XMSDOM,XMRDOM)=XMINST
"RTN","XMC1",5,0)
 I '$D(XMR0) D ENT1^XMR0
"RTN","XMC1",6,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D C^XMCTRAP"
"RTN","XMC1",7,0)
 E  S X="C^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMC1",8,0)
 K ^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMC1",9,0)
 N XMHELO,XMTURN,XMLER,XMLIN,XMLINE,XMCNT
"RTN","XMC1",10,0)
 S XMBF=1,(ER,XMCI,XMSTK)=0,XMBUF="RT",XMERC=0,XMERMSG=""
"RTN","XMC1",11,0)
 I '$D(XMTALKER) L +^DIC(4.2,XMINST,"XMNETSEND"):0 E  S ER=1,XMTRAN="Netmail transmission in progress on another channel. (XMC1)" D TRAN Q
"RTN","XMC1",12,0)
 D IN I XMINST L -^DIC(4.2,XMINST,"XMNETSEND") Q
"RTN","XMC1",13,0)
 E  L  Q
"RTN","XMC1",14,0)
IN S %=$G(XMDUZ) N XMDUZ S XMDUZ=$S($G(%):%,1:.5)
"RTN","XMC1",15,0)
 S XMTRAN="Script: "_XMSCRN_" from "_^XMB("NAME")_" beginning "_$E(DT,4,5)_"-"_$E(DT,6,7)_"-"_$E(DT,2,3) D TRAN
"RTN","XMC1",16,0)
 D STAT(XMSCR):'$D(^XMBS(4.2999,XMSCR,0)) S %=$S($D(^XMBS(4.2999,XMSCR,3))#10:^(3),1:""),$P(%,U)=$H,^(3)=$P(%,U,1,20)
"RTN","XMC1",17,0)
 D EN Q:$D(XMTALKER)
"RTN","XMC1",18,0)
 I ER S XMB(4)=XMTRAN,XMTRAN=$G(XMERMSG) I XMTRAN'="" D TRAN
"RTN","XMC1",19,0)
 S XMTRAN="Script Complete !!" D TRAN S XMER=ER
"RTN","XMC1",20,0)
 G CLOSE^XMC3
"RTN","XMC1",21,0)
EN I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D C^XMCTRAP"
"RTN","XMC1",22,0)
 E  S X="C^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMC1",23,0)
 D NXT Q:+XMCI<1  D INT Q:ER  G EN
"RTN","XMC1",24,0)
INT S ER=0 S:$E(X)?1L X=$C($A(X)-32)_$E(X,2,999) I "EFCXOHMDLTSW"'[$E(X)!(X="") S ER=1,XMTRAN="Error-Invalid script command '"_X_"' at line "_XMCI_"." D TRAN Q
"RTN","XMC1",25,0)
 S XMC1=$P(X," ",2,999),ER=0 D @$E(X) S:'$D(ER) ER=0 Q
"RTN","XMC1",26,0)
L ;LOOK FOR STRING
"RTN","XMC1",27,0)
 G LOOK^XMC1A
"RTN","XMC1",28,0)
W ;WAIT FOR XMC1 SECONDS
"RTN","XMC1",29,0)
 S XMTRAN="Waiting "_XMC1_" seconds" D TRAN H +XMC1
"RTN","XMC1",30,0)
 Q
"RTN","XMC1",31,0)
M ;SEND MAIL
"RTN","XMC1",32,0)
 I '$G(XMRDOM) S (XMSDOM,XMRDOM)=XMINST
"RTN","XMC1",33,0)
 S XMSITE=$P(^DIC(4.2,XMINST,0),U),XMTRAN="Beginning sender-SMTP service"
"RTN","XMC1",34,0)
 D TRAN D ^XMS
"RTN","XMC1",35,0)
 I $G(ER) S XMTRAN="ER="_$G(ER)_" - Y="_$G(Y)
"RTN","XMC1",36,0)
 Q
"RTN","XMC1",37,0)
D G D^XMC11
"RTN","XMC1",38,0)
T I $D(XMTALKER) S XMCI=999999 S XMTRAN="Entering Talk mode" D TRAN Q
"RTN","XMC1",39,0)
 Q
"RTN","XMC1",40,0)
F S XMTRAN="Flushing buffer" D TRAN G BUFLUSH^XML ;FLUSH BUFFER
"RTN","XMC1",41,0)
E S XMERMSG=XMC1,XMTRAN="Error message set to '"_XMERMSG_"'" D TRAN Q  ; SET ERROR MESSAGE TO BE DISPLAYED.
"RTN","XMC1",42,0)
H G H^XMC11
"RTN","XMC1",43,0)
S ;SEND LINE
"RTN","XMC1",44,0)
 G SEND^XMC1A
"RTN","XMC1",45,0)
O ;OPEN DEVICE, PROTOCOL, AND HOST
"RTN","XMC1",46,0)
 G OPEN^XMC1A
"RTN","XMC1",47,0)
X S XMTRAN="Xecuting "_XMC1 D TRAN X XMC1 Q
"RTN","XMC1",48,0)
NXT S XMCI=$O(@(XMDIC_XMCI_")")) Q:+XMCI<1  S X=@(XMDIC_XMCI_",0)") Q
"RTN","XMC1",49,0)
TRAN D TIME S:'$D(XMBF) XMBF=0
"RTN","XMC1",50,0)
 S %=$E(XMC_" ",1,$L(XMTRAN)<245*99),%=%_$E(XMTRAN,1,245-$L(%)),XMBF=XMBF+1
"RTN","XMC1",51,0)
 ;TRACE / DEBUG TRANSMISSION PROBLEMS
"RTN","XMC1",52,0)
 I $D(XMS0C) S ^TMP("XMC",XMR0,XMBF,0)=%
"RTN","XMC1",53,0)
 I $G(XM)["D" U IO(0) W !,% W:$D(XMLER) $S('XMLER:"",1:"("_XMLER_")") I IO'="",IOT'="RES" U IO
"RTN","XMC1",54,0)
 K % Q
"RTN","XMC1",55,0)
TIME N %,I S %=$P($H,",",2),XMC=%\3600_":"_$J(%#3600\60,2)_":"_$J(%#60,2) F I=1:1 Q:XMC'[" "  S XMC=$P(XMC," ")_0_$P(XMC," ",2,4)
"RTN","XMC1",56,0)
 Q
"RTN","XMC1",57,0)
INDIR ;GET INDIRECT REFERENCE
"RTN","XMC1",58,0)
 S XMC2=$P(XMC1,"@",2,99) I '$D(@XMC2) S XMTRAN="Undefined reference to "_XMC2,ER=1 D TRAN Q
"RTN","XMC1",59,0)
 S XMC1=@XMC2 Q
"RTN","XMC1",60,0)
C ;CALL A SUBROUTINE
"RTN","XMC1",61,0)
 G CALL^XMC1A
"RTN","XMC1",62,0)
STAT(X) ;Set up zero node for 4.2999 file
"RTN","XMC1",63,0)
 I '$D(^XMBS(4.2999,X,0)) N % S ^(0)=X,^XMBS(4.2999,"B",X,X)="",%=^XMBS(4.2999,0),$P(^(0),U,3,4)=X_U_($P(%,U,4)+1) Q
"RTN","XMC1",64,0)
 Q
"RTN","XMC1",65,0)
SCRIPT ;API for script processing
"RTN","XMC1",66,0)
 I '$D(XMDUZ) S XMDUZ=$S($G(DUZ):DUZ,1:.5)
"RTN","XMC1",67,0)
 S Y=XMSCR,XMINST=XMSCR,XMSITE=XMSCRN D ENT,KL1^XMC
"RTN","XMC1",68,0)
 K DIC,X,Y,XMSCRN,XMSITE,XMINST,XMB,XMQ,XMUT,XMDIC,ZTPAR
"RTN","XMC1",69,0)
 Q
"RTN","XMC11A")
0^13^B6222083
"RTN","XMC11A",1,0)
XMC11A ;(WASH ISC)/THM- Ask Domain / Script  ;10/10/96  13:23
"RTN","XMC11A",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMC11A",3,0)
 ;
"RTN","XMC11A",4,0)
 ;Decide which Script to use
"RTN","XMC11A",5,0)
INST K XMB
"RTN","XMC11A",6,0)
 D LOOKUP Q:Y<0
"RTN","XMC11A",7,0)
 S XMSCR=+Y,XMSCRN=$P(Y(0),U),XMB("ZERO")=Y(0)
"RTN","XMC11A",8,0)
 ;
"RTN","XMC11A",9,0)
 ;Get Script info
"RTN","XMC11A",10,0)
 S (XMOKSCR("SMTP"),XMOKSCR("NONE"))=""
"RTN","XMC11A",11,0)
 S %=$$SCR^XMBPOST(XMSCR,.XMOKSCR,"") K XMOKSCR
"RTN","XMC11A",12,0)
 ;
"RTN","XMC11A",13,0)
 ;Default and do not ask if only one script on file
"RTN","XMC11A",14,0)
 D S(%) I $O(^DIC(4.2,XMSCR,1,0))=+%,+$O(^(+%))=0 G INSTQ
"RTN","XMC11A",15,0)
 ;
"RTN","XMC11A",16,0)
 ;If TalkMan default to highest priority (or 1st) script
"RTN","XMC11A",17,0)
 G GO:'$D(XMTALKER)
"RTN","XMC11A",18,0)
 ;
"RTN","XMC11A",19,0)
 S %=0
"RTN","XMC11A",20,0)
P S %=$O(^DIC(4.2,XMSCR,1,"AC",%))
"RTN","XMC11A",21,0)
 I '% S Y=-1,XMMG="Domain doesn't have an appropriate connection method -- see your manager." Q
"RTN","XMC11A",22,0)
 ;
"RTN","XMC11A",23,0)
 ;Check for proper protocol type
"RTN","XMC11A",24,0)
 S X=$O(^DIC(4.2,XMSCR,1,"AC",%,0)),Y=$P(^DIC(4.2,XMSCR,1,X,0),U,4) I Y'["SMTP",Y'["TELNET" G P
"RTN","XMC11A",25,0)
 ;
"RTN","XMC11A",26,0)
 ;Get Defaults... Quit
"RTN","XMC11A",27,0)
 D S(X_U_^DIC(4.2,XMSCR,1,X,0)) G INSTQ
"RTN","XMC11A",28,0)
 ;
"RTN","XMC11A",29,0)
 ;List valid entries
"RTN","XMC11A",30,0)
GO I '$O(^DIC(4.2,XMSCR,1,0)) W !!,"No Transmission Script on file for this domain !!"_$C(7),!! Q
"RTN","XMC11A",31,0)
L W !!,"  #  Script Name",?30,"Type",?40,"Priority",!
"RTN","XMC11A",32,0)
 S %=0 F  S %=$O(^DIC(4.2,XMSCR,1,%)) Q:'+%  S %0=^(%,0) W ?3-$L(%),%,?5,$P(%0,U),?30,$P(%0,U,4),?40,$P(%0,U,2),!
"RTN","XMC11A",33,0)
 ;
"RTN","XMC11A",34,0)
 ;Ask
"RTN","XMC11A",35,0)
R S X=$$READ^XMAREAD("Which Script ?","N",XMB("SCRIPT",0))
"RTN","XMC11A",36,0)
 I "^"[X K XMB Q
"RTN","XMC11A",37,0)
 S Y=$G(^DIC(4.2,XMSCR,1,X,0))
"RTN","XMC11A",38,0)
 I Y="" W !,"Please choose from the list given !",! G L
"RTN","XMC11A",39,0)
 D S(X_U_Y)
"RTN","XMC11A",40,0)
 ;
"RTN","XMC11A",41,0)
INSTQ S XMDIC="^DIC(4.2,"_XMSCR_",1,"_XMB("SCRIPT",0)_",1," Q
"RTN","XMC11A",42,0)
 ;
"RTN","XMC11A",43,0)
LOOKUP ;lookup domain with script
"RTN","XMC11A",44,0)
 N DIC
"RTN","XMC11A",45,0)
 S DIC=4.2,DIC(0)="AEQMZ"
"RTN","XMC11A",46,0)
 I $D(XMTALKER) S DIC("S")="I $P(^(0),U,2)[$C(84)"
"RTN","XMC11A",47,0)
 D ^DIC Q:Y<0
"RTN","XMC11A",48,0)
 I '$O(^DIC(4.2,+Y,1,0)) W !!,"No Transmission Script !!!",*7,!! S Y=-1
"RTN","XMC11A",49,0)
 Q
"RTN","XMC11A",50,0)
 ;
"RTN","XMC11A",51,0)
S(%) N I S I=$P(%,U,6),XMIO=$S($L(I):I,1:$P(XMB("ZERO"),U,17)),XMB("TRIES")=0,XMB("SCRIPT",0)=+%,XMB("SCRIPT")=$P(%,U,2,$L(%)),XMB("ITERATIONS")=0,XMB("FIRST SCRIPT")=XMB("SCRIPT",0)
"RTN","XMC11A",52,0)
 Q
"RTN","XMC1A")
0^8^B14209637
"RTN","XMC1A",1,0)
XMC1A ;(WASH ISC)/THM-SCRIPT INTERPRETER (C/L/O/S) ;06/17/96  10:44
"RTN","XMC1A",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMC1A",3,0)
LOOK ;For Text (See routine doc in XMC1A1)
"RTN","XMC1A",4,0)
 ; 
"RTN","XMC1A",5,0)
 K XMC1A S %=+$P($P(X," "),":",2),%=$S(%:%,1:45),XMC1A("TIMEOUT")=%,XMTIME=$H*86400+$P($H,",",2)+%,XMK=1,XMC1A(0)=X,Y=1 N %,I,J
"RTN","XMC1A",6,0)
 ;
"RTN","XMC1A",7,0)
 ;Recode encoded control characters
"RTN","XMC1A",8,0)
 S XMC1A=XMC1 I XMC1["~" S X=XMC1,XMC1=$$RTRAN^XMCU1(X)
"RTN","XMC1A",9,0)
 ;
"RTN","XMC1A",10,0)
 ;Parse to separate time-outs/success/error conditions
"RTN","XMC1A",11,0)
 ;'OLD' form
"RTN","XMC1A",12,0)
 I $E(XMC1)'="|",XMC1'?1.N1" |".E S XMC1A(1,1,1)=XMC1,XMC1A(1,1,2)="" G G
"RTN","XMC1A",13,0)
 ;
"RTN","XMC1A",14,0)
 ;'NEW' form
"RTN","XMC1A",15,0)
 S I=0
"RTN","XMC1A",16,0)
E S I=I+1 I Y=1,XMC1?1.N1" |".E D TIMOUT G F
"RTN","XMC1A",17,0)
 I Y=1,XMC1?1"  " S Y=2,XMC1=$E(XMC1,3,999) G F
"RTN","XMC1A",18,0)
 S %=Y,Y=$S(Y=3:Y,Y=2:3,XMC1?1.N1" |".E:2,$E(XMC1,1,2)="  ":3,XMC1?1" "1.N1" ":2,XMC1?1" "1.N:2,Y=1&(I>1)&(XMC1?1.N):2,XMC1?1" |".E:3,1:Y)
"RTN","XMC1A",19,0)
 I Y=2 S:$E(XMC1)=" " XMC1=$E(XMC1,2,999) D TIMOUT G F
"RTN","XMC1A",20,0)
 S:Y>% I=1 S X=$P(XMC1,"|",2),XMC1=$E(XMC1,$L($P(XMC1,"|",1,2))+1,999)
"RTN","XMC1A",21,0)
 S %="" I $E(XMC1,1,2)="|:" S %=$P($P(XMC1," "),":",2),XMC1=$P(XMC1,"|:",2,99) I %,$E(XMC1,1,2)'="  " S XMC1=$P(XMC1," ",2,99) G E1
"RTN","XMC1A",22,0)
 I $E(XMC1)="|" S XMC1=$E(XMC1,2,99)
"RTN","XMC1A",23,0)
E1 I $S($L(X):1,$L(%):1,1:0) S XMC1A(Y,I,1)=X,XMC1A(Y,I,2)=%
"RTN","XMC1A",24,0)
F G E:$L(XMC1)
"RTN","XMC1A",25,0)
 ;Save Timeout for efficient access
"RTN","XMC1A",26,0)
 I $D(XMC1A(2)) S XMC1A(2)=XMC1A(2,1,1)
"RTN","XMC1A",27,0)
 ;
"RTN","XMC1A",28,0)
G S XMTRAN="Look: Timeout="_XMC1A("TIMEOUT")_", Command String='"_XMC1A_"'" D TRAN
"RTN","XMC1A",29,0)
 U IO X ^%ZOSF("TRMON") S ER=0,Y=^%ZOSF("TRMRD"),XMC1A("TRMRD")="N Y "_Y_" S C=Y Q"
"RTN","XMC1A",30,0)
L1 S Y="" D L2 S XMCT=$T,XMTRAN="R: "_Y,XMK=XMK+1 D TRAN:XMBUF["R"
"RTN","XMC1A",31,0)
 G LQ:$D(XMC1A("OK"))
"RTN","XMC1A",32,0)
 I ER=1 S XMTRAN="Error-Timeout" D TRAN:XMBUF["R" S J=$G(XMC1A(2)) G LQ:'J S ER=0 G GO
"RTN","XMC1A",33,0)
 I XMK>199 S XMTRAN="Error-200 Reads !!!!" D TRAN S J=$G(XMC1A(2)) G GO:J,ER
"RTN","XMC1A",34,0)
 G L1
"RTN","XMC1A",35,0)
L2 N C,X
"RTN","XMC1A",36,0)
L3 X "R X#"_$S(XMC1A[220:3,220-$L(Y)>0:220-$L(Y),1:1)_$S($D(XMDECNET):"",1:":1") S Y=Y_X X XMC1A("TRMRD") I C>0 S Y=Y_"~"_$S(C+64<255:$C(C+64),1:"~")
"RTN","XMC1A",37,0)
 F I=1,3 F %=0:0 S %=$O(XMC1A(I,%)) Q:'%  I Y[XMC1A(I,%,1) S J=XMC1A(I,%,2) G GO:J'="",OK:I=1,ER
"RTN","XMC1A",38,0)
 I $S($L(Y)>220:1,C=13:1,1:0) Q
"RTN","XMC1A",39,0)
 G L3:$H*86400+$P($H,",",2)<XMTIME,ER
"RTN","XMC1A",40,0)
LQ K XMC1A X ^%ZOSF("TRMOFF") Q
"RTN","XMC1A",41,0)
GO S XMCI=J-.00001
"RTN","XMC1A",42,0)
OK S XMC1A("OK")=1 Q
"RTN","XMC1A",43,0)
ER S ER=1 Q
"RTN","XMC1A",44,0)
SEND ;SEND LINE
"RTN","XMC1A",45,0)
 I XMC1?1"@".E S XMC3=XMC1 D INDIR^XMC1 Q:ER  S XMTRAN="Transforming '"_XMC3_"' to '"_XMC1_"." D TRAN
"RTN","XMC1A",46,0)
 I XMBUF["T" S XMTRAN="S: "_XMC1 D TRAN
"RTN","XMC1A",47,0)
 I XMC1["~" S XMC1=$$RTRAN^XMCU1(XMC1)
"RTN","XMC1A",48,0)
 W XMC1,*13
"RTN","XMC1A",49,0)
 Q
"RTN","XMC1A",50,0)
OPEN ;OPEN DEVICE, PROTOCOL, AND HOST
"RTN","XMC1A",51,0)
 D ^XMC3 X:'ER XMOPEN S XMER=ER
"RTN","XMC1A",52,0)
 I XMER S XMTRAN="Open failed" D TRAN Q
"RTN","XMC1A",53,0)
 S XMTRAN="Channel opened to "_XMSITE D TRAN^XMC1
"RTN","XMC1A",54,0)
 S XMTRAN=" Device "_XMDEV_", Protocol "_XMPROT D FLUSH,TRAN
"RTN","XMC1A",55,0)
 I $D(^XMBS(4.2999,XMSCR,3)) S $P(^(3),U,6)=IO
"RTN","XMC1A",56,0)
 Q
"RTN","XMC1A",57,0)
TRAN G TRAN^XMC1
"RTN","XMC1A",58,0)
CALL ;a Subroutine
"RTN","XMC1A",59,0)
 S X=$P(XMC1,"("),DIC="^XMB(4.6,",DIC(0)="ZM" D ^DIC
"RTN","XMC1A",60,0)
 I Y<0 S XMTRAN="Script '"_X_"' cannot be found." D TRAN G ER
"RTN","XMC1A",61,0)
 D PUSH S XMSCR=+Y,XMSCRN=$P(Y(0),U,1),XMTRAN="Calling script '"_XMSCRN_"'.",XMCI=0,XMDIC="^XMB(4.6,XMSCR,1," D TRAN,EN^XMC1 Q:ER  D POP
"RTN","XMC1A",62,0)
 S XMTRAN="Returning to script '"_XMSCRN_"'." D TRAN Q
"RTN","XMC1A",63,0)
 Q
"RTN","XMC1A",64,0)
PUSH S:'$D(XMSTK) XMSTK=0 S XMSTK=XMSTK+1,XMSTK(XMSTK,1)=XMSCR,XMSTK(XMSTK,2)=XMSCRN,XMSTK(XMSTK,3)=XMCI,XMSTK(XMSTK,4)=XMDIC Q
"RTN","XMC1A",65,0)
POP S XMSCR=XMSTK(XMSTK,1),XMSCRN=XMSTK(XMSTK,2),XMCI=XMSTK(XMSTK,3),XMDIC=XMSTK(XMSTK,4),XMSTK=XMSTK-1 K XMSTK(XMSTK+1) Q
"RTN","XMC1A",66,0)
 ;
"RTN","XMC1A",67,0)
FLUSH ;FLUSH BUFFER
"RTN","XMC1A",68,0)
 Q:'$D(XMBFLUSH)  F Y1=1:1:10000 R XMLX:0 Q:'$T
"RTN","XMC1A",69,0)
 Q
"RTN","XMC1A",70,0)
TIMOUT S Y=2,XMC1A(2,1,1)=+XMC1,XMC1=$P(XMC1," ",2,99) Q
"RTN","XMC2")
0^17^B26486455
"RTN","XMC2",1,0)
XMC2 ;(WASH ISC)/THM-COMM FUNCTIONS ;10/15/96  10:54
"RTN","XMC2",2,0)
 ;;7.1;MailMan;**13,23,27**;Jun 02, 1994
"RTN","XMC2",3,0)
 Q
"RTN","XMC2",4,0)
INIT ;INITIALIZE COMMAND TABLE
"RTN","XMC2",5,0)
 K ^DOPT("XMC") S DIK="^DOPT(""XMC""," S ^DOPT("XMC",0)="Network TalkMan Option^1N^" F I=1:1 S X=$E($T(Z+I),4,99) Q:X=""  S ^DOPT("XMC",I,0)=X
"RTN","XMC2",6,0)
 D IXALL^DIK Q
"RTN","XMC2",7,0)
Z ;;
"RTN","XMC2",8,0)
 ;;ACTIVELY TRANSMITTING QUEUES REPORT^GO^XMS5
"RTN","XMC2",9,0)
 ;;BLOB SEND^BLOB^XMA2B
"RTN","XMC2",10,0)
 ;;DIAL PHONE^DI^XMC11
"RTN","XMC2",11,0)
 ;;EDIT A SCRIPT^EDIT^XMC11
"RTN","XMC2",12,0)
 ;;HANG UP PHONE^H^XMC11
"RTN","XMC2",13,0)
 ;;HISTORICAL QUEUE STATISTICS REPORT^^XMS4
"RTN","XMC2",14,0)
 ;;LIST TRANSCRIPT^LST^XMC2
"RTN","XMC2",15,0)
 ;;MAILMAN^^XM
"RTN","XMC2",16,0)
 ;;PLAY A SCRIPT^GO^XMC11
"RTN","XMC2",17,0)
 ;;QUEUES WITH MESSAGES TO GO OUT REPORT^ENT^XMS5
"RTN","XMC2",18,0)
 ;;RECEIVE MESSAGES FROM ANOTHER UCI VIA %ZISL GLOBAL^TASKER^XMR
"RTN","XMC2",19,0)
 ;;RESUME SCRIPT PROCESSING^RES^XMC11
"RTN","XMC2",20,0)
 ;;SCHEDULE TASKS FOR ALL QUEUED MESSAGES^REQUE^XMS5
"RTN","XMC2",21,0)
 ;;SEND MESSAGE TO OTHER XMB GLOBAL VIA %ZISL GLOBAL^TASKER^XMS
"RTN","XMC2",22,0)
 ;;SEQUENTIAL MEDIA QUEUE TRANSMISSION^BAT^XMS
"RTN","XMC2",23,0)
 ;;SEQUENTIAL MEDIA MESSAGE RECEPTION^BAT^XMR0
"RTN","XMC2",24,0)
 ;;SHOW A QUEUE^QUEUE^XMC4
"RTN","XMC2",25,0)
 ;;STATUSES REPORT^^XMS5A
"RTN","XMC2",26,0)
 ;;SUBROUTINE EDITOR^EDITSC^XMC11
"RTN","XMC2",27,0)
 ;;TOGGLE A SCRIPT OUT OF SERVICE^OUT^XMC2
"RTN","XMC2",28,0)
 ;;TRANSMIT QUEUED MESSAGES FOR ONE DOMAIN^Q^XMC2
"RTN","XMC2",29,0)
 ;;VALIDATION NUMBER EDIT^VAL^XMC2
"RTN","XMC2",30,0)
 ;;
"RTN","XMC2",31,0)
 ;;**OBSOLETE**
"RTN","XMC2",32,0)
 ;;IMMEDIATE SCRIPT MODE^IMM^XMC11
"RTN","XMC2",33,0)
 ;;
"RTN","XMC2",34,0)
LST S XMB=0,I=0
"RTN","XMC2",35,0)
C S XMB=$O(^TMP("XMC",XMB))
"RTN","XMC2",36,0)
D I XMB="" W !!,*7,"<< No ",$S(I:"more ",1:""),"Transcripts on File. >>",!
"RTN","XMC2",37,0)
 I  W "(This is controlled by whether or not line TRAN+3^XMC1 is commented out !",!,"Remember to put the ';' back in when done viewing transcripts.",!,"It is more efficient that way.)",!! G E
"RTN","XMC2",38,0)
 W !,"7 lines of the transcript will be displayed at a time." H 2
"RTN","XMC2",39,0)
 S K=0,I=XMB F J=0:0 S J=$O(^TMP("XMC",I,J)) Q:J=""  W !,^(J,0) S K=K+1 Q:K>7
"RTN","XMC2",40,0)
 S DIR(0)="E",XMB0=J_U_I W !! D ^DIR S J=+XMB0,I=$P(XMB0,U,2) K XMB0,DIRUT
"RTN","XMC2",41,0)
 I $D(DUOUT)!$D(DTOUT) K XMB0 G B
"RTN","XMC2",42,0)
 G K:J=0 S K=0
"RTN","XMC2",43,0)
L S J=$O(^TMP("XMC",I,J)) I J'="",$D(^(J,0)) S X=$G(^(J,0)) S:X?.E1C.E X=$$STRAN^XMCU1(X) W !,X S K=K+1 G L:K<8 S XMB0=I_U_J W ! D ^DIR S K=0,I=+XMB0,J=$P(XMB0,U,2) K XMB0,DIRUT W ! I '$D(DUOUT),'$D(DTOUT) G L
"RTN","XMC2",44,0)
K W *7,!!,"DELETE this Transcript ? N// " R J:DTIME Q:'$T
"RTN","XMC2",45,0)
 I J["?" D  G K
"RTN","XMC2",46,0)
 . W !!,"Enter 'Yes' to delete this transcript."
"RTN","XMC2",47,0)
 . W !,"Enter 'No' or <RETURN> to keep this transcript on file."
"RTN","XMC2",48,0)
 . W !,"Or enter '^' to abort."
"RTN","XMC2",49,0)
 . Q
"RTN","XMC2",50,0)
 S J=$TR("noyes","NOYES") W !,"Transcript "
"RTN","XMC2",51,0)
 I $E("YES",1,$L(J))=J K ^TMP("XMC",I) S BF=1 W *7,"DELETED !" G B
"RTN","XMC2",52,0)
 W "RETAINED",! I J["^" W !!,"Aborted by user request",! G E
"RTN","XMC2",53,0)
B I '$O(^TMP("XMC",XMB)) S XMB="" G D
"RTN","XMC2",54,0)
 W !!,"Do you wish to see the next transcript ? Y//",*7 R J:DTIME G E:'$T,E:"yY"'[$E(J) S I=1 G C
"RTN","XMC2",55,0)
E K DUOUT,DTOUT,DIR,XMB Q
"RTN","XMC2",56,0)
Q ;TRIGGER A QUEUE FOR TRANSMISSION
"RTN","XMC2",57,0)
 N XMQ1,XMB,ZTSK S XMQ1=1 D INST^XMC11A G QQ:'$G(XMB("SCRIPT",0))
"RTN","XMC2",58,0)
 S %=$P($G(^DIC(4.2,XMSCR,1,XMB("SCRIPT",0),0)),U,4) I $S(%="SMTP":0,%="":0,1:1) W !!,"MailMan does not allow tasking with TCP/IP transmission script." G QQ
"RTN","XMC2",59,0)
 S %=$S($P(^XMBS(4.2999,XMSCR,0),U,2):$P(^(0),U,2),1:0) I % S %1=$$CHK^XMS5(%,XMSCR)
"RTN","XMC2",60,0)
 I '$G(%1) D QTASK G QQ
"RTN","XMC2",61,0)
 I %1=1 W !!,*7,"Task #"_%_" is already running to transmit this domain's messages,",!,"so we won't queue up another one." G QQ
"RTN","XMC2",62,0)
 ; (%1=.5 means: Task is pending)
"RTN","XMC2",63,0)
 W !!,*7,"Task #"_%_" is already scheduled to transmit this domain's messages"
"RTN","XMC2",64,0)
 W !,"on ",$$HTE^XLFDT($P(^%ZTSK(%,0),U,6)),"."
"RTN","XMC2",65,0)
 N DIR
"RTN","XMC2",66,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","XMC2",67,0)
 S DIR("A")="Do you want to kill task "_%_" and queue up a new one"
"RTN","XMC2",68,0)
 D ^DIR
"RTN","XMC2",69,0)
 I Y=1 D KILL^XMS5(XMSCR,%),QTASK
"RTN","XMC2",70,0)
QQ K %H,XMDT,XMINST,XMIO,XMSITE,XMSCR,XMSCRN,ZTSK
"RTN","XMC2",71,0)
 Q
"RTN","XMC2",72,0)
QTASK ;
"RTN","XMC2",73,0)
 S XMSITE=XMSCRN,XMINST=XMSCR,XMS5("RETURN_TASK#")=1
"RTN","XMC2",74,0)
 D ENQ^XMS1
"RTN","XMC2",75,0)
 W:$G(ZTSK) !,"Task #"_ZTSK_" Queued for transmission"
"RTN","XMC2",76,0)
 Q
"RTN","XMC2",77,0)
OUT ;toggle script out of service
"RTN","XMC2",78,0)
 N %,D,D0,D1,DA,DI,DIC,DIE,DIR,DIRUT,DIOUT,DR,X,XMB,XMINST,XMOKSCR,XMS5,XMSCR,XMSCRN,XMSITE,XMTMP,Y,ZTSK
"RTN","XMC2",79,0)
 D LOOKUP^XMC11A Q:Y<0
"RTN","XMC2",80,0)
 S (DA,XMSCR)=+Y,XMSCRN=$P(Y(0),U),XMB("ZERO")=Y(0),DR="1;4",DR(2,4.21)=1.5,DIE="^DIC(4.2,"
"RTN","XMC2",81,0)
 D ^DIE
"RTN","XMC2",82,0)
 S DIR(0)="Y",DIR("A")="Do you want to requeue this domain",DIR("B")="YES",DIR("?")="Yes, will create a task to start transmitting this domain."
"RTN","XMC2",83,0)
 D ^DIR Q:'Y!$D(DIRUT)
"RTN","XMC2",84,0)
 S ZTSK=$P($G(^XMBS(4.2999,XMSCR,3)),U,7)
"RTN","XMC2",85,0)
 I ZTSK D KILL^%ZTLOAD S XMTMP(4.2999,XMSCR_",",25)="" D UPDATE^DIE("","XMTMP")
"RTN","XMC2",86,0)
 S (XMOKSCR("SMTP"),XMOKSCR("NONE"))=""
"RTN","XMC2",87,0)
 S Y=$$SCR^XMBPOST(XMSCR,.XMOKSCR,"")
"RTN","XMC2",88,0)
 I Y="" W !!,"No Transmission Script !!!",*7,!! Q
"RTN","XMC2",89,0)
 D S^XMC11A(Y)
"RTN","XMC2",90,0)
 S XMSITE=XMSCRN,XMINST=XMSCR,XMS5("RETURN_TASK#")=1
"RTN","XMC2",91,0)
 D ENQ^XMS1 I '$G(ZTSK) W !!,"Couldn't create task",! Q
"RTN","XMC2",92,0)
 W !,"Task #",ZTSK," Queued for transmission.",!
"RTN","XMC2",93,0)
 Q
"RTN","XMC2",94,0)
VAL S DR="1.6",DIC=4.2,DIC(0)="AEQMZ" D ^DIC Q:Y<0  S DIE=DIC,DA=+Y D ^DIE Q
"RTN","XMCTLK")
0^21^B19626258
"RTN","XMCTLK",1,0)
XMCTLK ;(WASH ISC)/CAP-TALKMAN TALK-MODE ;08/05/96  09:20
"RTN","XMCTLK",2,0)
 ;;7.1;MailMan;**10,27**;Jun 02, 1994
"RTN","XMCTLK",3,0)
 D ^XMCTLK0 I $S($D(DTOUT):1,$D(DUOUT):1,1:0) K DUOUT,DTOUT Q
"RTN","XMCTLK",4,0)
GO K XMG0
"RTN","XMCTLK",5,0)
GO1 K %ZIS S %ZIS="" D ^%ZIS Q:POP  I '$D(XMDUZ) Q:'$D(DUZ)  D INIT^XMCTLK0
"RTN","XMCTLK",6,0)
 I IO=IO(0) D ^%ZISC W !,"YOU MUST CHOOSE ANOTHER DEVICE" Q
"RTN","XMCTLK",7,0)
ENT N XMZ,XMSUB,TN,TL,TP,TK
"RTN","XMCTLK",8,0)
 W @IOF,"<<<< You are now talking through device ",IO," >>>>"
"RTN","XMCTLK",9,0)
 X ^%ZOSF("NBRK"),^("PRIINQ") S XMP=Y,X=Y+3,XME0(0)="S R=0,XME0=$H*86400+$P($H,$C(44),2)" S:X>10 X=10
"RTN","XMCTLK",10,0)
 X ^%ZOSF("PRIORITY")
"RTN","XMCTLK",11,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMCTLK",12,0)
 S X="ABEND^XMCTLK",@^%ZOSF("TRAP")
"RTN","XMCTLK",13,0)
 W !,"===== Enter <control>A to stop. =====",*7,!
"RTN","XMCTLK",14,0)
 S XM="",D="",XMB0=^%ZOSF("EOFF"),XMB0("RM")="S X=0 "_^("RM"),XMC0=^("EON"),XMD0=0,A="",XMF0=^("TYPE-AHEAD"),XMA=^("TRMRD") F I="TRMON","TRMOFF","NBRK" S XMG0(I)=^(I)
"RTN","XMCTLK",15,0)
 S TN=$P($H,",",2),TL=TN,(TP,TK)=0 ; Times & Timed reads Port/Keyboard
"RTN","XMCTLK",16,0)
 D T S D="" U IO G G
"RTN","XMCTLK",17,0)
 ;
"RTN","XMCTLK",18,0)
 ;MAIN LOOP / DIALOG OCCURS HERE
"RTN","XMCTLK",19,0)
 ;
"RTN","XMCTLK",20,0)
R W:$D(XMTALKER) *17 U IO R A#150:$S($G(R)>20:1,1:0) W:$D(XMTALKER) *19 S D=D_A X XMA
"RTN","XMCTLK",21,0)
 S TN=$P($H,",",2) S:(TN-TL>5) TP=1 ;ihs Time Now TP adjustment
"RTN","XMCTLK",22,0)
 S R=$G(R)+1 I Y>0 D T0 U IO(0) W A,*Y S TP=0,TL=TN X XME0(0) G R
"RTN","XMCTLK",23,0)
 D T0 U IO(0) W A I $L(A) S TP=0,TL=TN X XME0(0) D T0 G R
"RTN","XMCTLK",24,0)
S S Y=0 U IO(0) R A:TK S TK=0 E  U IO W A S:$L(A) TP=0,TL=TN G R:$L(A),Q:$H*86400+$P($H,",",2)-XME0>$S($D(DTIME):DTIME,1:300),R ;ihs timer adjustment
"RTN","XMCTLK",25,0)
 X XMA G Q:Y=1 S:Y=27 TK=1 S TP=0 I Y=13,$D(XMG0("EON")) S TP=0 U IO(0) W ! ;ihs timer adjustment
"RTN","XMCTLK",26,0)
 U IO W A,*Y W:$D(XMG0("EON"))&(Y=13) ! S:$L(A) TP=0 X XME0(0) G R
"RTN","XMCTLK",27,0)
 ;
"RTN","XMCTLK",28,0)
Q U IO(0) W *7 H 1 W *7 X XMC0,XMF0,XMG0("TRMOFF"),XMG0("NBRK")
"RTN","XMCTLK",29,0)
 K DIR S DIR("T")=9,DIR(0)="S^E:END TalkMan session;C:begin CAPTURE TalkMan dialog in message;N:do NOT end TalkMan session.;K:KERMIT Transfer Files",DIR("B")="N",DIR("??")="XMTALK"
"RTN","XMCTLK",30,0)
 I '$D(XMDUZ) S $P(DIR(0),";",2,3)=$P(DIR(0),";",3) G D
"RTN","XMCTLK",31,0)
 I $D(XMSUB) S $P(DIR(0),";",2)="S:STOP capture"
"RTN","XMCTLK",32,0)
D S XMA0=D D ^DIR S:$D(DTOUT) X="^" I '$D(X) W " ???? " G D
"RTN","XMCTLK",33,0)
 S D=XMA0 I "N"[X D T S A=" <Continue in TalkMan Mode >" D T0 W !,A,! G G
"RTN","XMCTLK",34,0)
 ;
"RTN","XMCTLK",35,0)
 ;Using Kermit !
"RTN","XMCTLK",36,0)
 I "K"=X D  G G
"RTN","XMCTLK",37,0)
 . N X I $G(^DIC(15,0,"VR"))'>7.1 W !," <No Kermit use yet. The correct Kernel tools version is not installed !>",! Q
"RTN","XMCTLK",38,0)
 . D KERM^XTKERMIT,T W !," <Continue in TalkMan Mode >",!
"RTN","XMCTLK",39,0)
 . D U S D="",Y=1
"RTN","XMCTLK",40,0)
 . Q
"RTN","XMCTLK",41,0)
 I "S"=X K XMSUB W ! G G
"RTN","XMCTLK",42,0)
 G DQ:"^E"[$E(X) I $D(XMZ) W ! S XMSUB=1 G G
"RTN","XMCTLK",43,0)
 D NOW^%DTC S X=%,XMD0=0 K %I,%H
"RTN","XMCTLK",44,0)
 S Y=$E(X,6,7)_" "_$P("Jan^Feb^Mar^Apr^May^Jun^Jul^Aug^Sep^Oct^Nov^Dec",U,$E(X,4,5))_" "_$E(X,2,3)
"RTN","XMCTLK",45,0)
 I X\1'=X S %=$P(X,".",2)_"0000",Y=Y_" "_$E(%,1,2)_":"_$E(%,3,4)
"RTN","XMCTLK",46,0)
 S XMSUB=XMDUN_" DIALOG CAPTURE "_Y
"RTN","XMCTLK",47,0)
 D GET^XMA2 W ! G G
"RTN","XMCTLK",48,0)
 ;
"RTN","XMCTLK",49,0)
 ;RETURN TO TALKMAN MODE
"RTN","XMCTLK",50,0)
G U IO
"RTN","XMCTLK",51,0)
 X XMB0("RM"),XMB0,XMF0,XMG0("NBRK"),XMG0("TRMON")
"RTN","XMCTLK",52,0)
 X:$D(XMG0("EON")) XMC0 D T X XME0(0) G R
"RTN","XMCTLK",53,0)
 ;
"RTN","XMCTLK",54,0)
ABEND ;Handle abnormal end
"RTN","XMCTLK",55,0)
 D ^%ZISC U IO(0) W *7 H 1 W *7 X XMC0,XMF0,XMG0("TRMOFF"),XMG0("NBRK") G DQ
"RTN","XMCTLK",56,0)
 ;
"RTN","XMCTLK",57,0)
 ;END TALKMAN SESSION
"RTN","XMCTLK",58,0)
 ;
"RTN","XMCTLK",59,0)
DQ W *7,!!,"End of Talkman session."
"RTN","XMCTLK",60,0)
 W !,"You are back at your starting place.",! H 1 W *7
"RTN","XMCTLK",61,0)
 W !! U IO W *17 X XMG0("TRMOFF") D ^%ZISC,HOME^%ZIS D N
"RTN","XMCTLK",62,0)
 G QQ:'$D(XMZ),QQ:'XMZ I 'XMD0 D KILL^XMA3 G QQ
"RTN","XMCTLK",63,0)
 I $P(XMD0,U,2,999)'="" S XMSUB=1,Y=999,D=$P(XMD0,U,2,999) D T0
"RTN","XMCTLK",64,0)
 S XMD0=+XMD0
"RTN","XMCTLK",65,0)
 I XMD0 D NOW^%DTC D  K %I,%H G QQ
"RTN","XMCTLK",66,0)
 . S ^XMB(3.9,XMZ,2,0)="^3.92A^"_XMD0_U_XMD0_U_%
"RTN","XMCTLK",67,0)
 . K XMY,^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","XMCTLK",68,0)
 . S XMY($S($G(XMDUZ):XMDUZ,1:DUZ))=""
"RTN","XMCTLK",69,0)
 . D ENT1^XMD W !,"TalkMan dialog capture being delivered now."
"RTN","XMCTLK",70,0)
 . Q
"RTN","XMCTLK",71,0)
 D KILL^XMA3
"RTN","XMCTLK",72,0)
QQ W ! D CHK^XM W ! S X=XMP X ^%ZOSF("PRIORITY")
"RTN","XMCTLK",73,0)
 K %,X1,X2,XMA0,XMB0,XMC0,XMD0,XME0,XMF0,XMG0,XMA,XMP,XMSUB,DIR
"RTN","XMCTLK",74,0)
 S XMZ=0 Q
"RTN","XMCTLK",75,0)
N U IO(0) X XMC0
"RTN","XMCTLK",76,0)
 I $D(DUZ) S X=$G(^VA(200,DUZ,200)) Q:X#10'=1  Q:$P(^(200),U,9)="Y"
"RTN","XMCTLK",77,0)
 S A="NO-TYPE-AHEAD" Q:'$D(^%ZOSF(A))  X ^(A)
"RTN","XMCTLK",78,0)
 Q
"RTN","XMCTLK",79,0)
T U IO(0) S X=0 X ^%ZOSF("RM"),XMF0,XMB0,XMG0("TRMON"),XMG0("NBRK")
"RTN","XMCTLK",80,0)
 I $D(XMG0("EON")) X XMC0
"RTN","XMCTLK",81,0)
 Q
"RTN","XMCTLK",82,0)
T0 I '$D(XMSUB)!(D=""&(Y'=9)) S D="" Q
"RTN","XMCTLK",83,0)
 I D'?.ANP F I=1:1 I $E(D,I)?1C S D=$E(D,1,I-1)_$S($A(D,I)=9:"",1:" ")_$E(D,I+1,999) Q:$E(D,I,999)?.ANP  S I=I-1
"RTN","XMCTLK",84,0)
T1 I Y'=13&($L(D)<81)!(Y>0&(D="")) S XMD0=+XMD0_U_D Q:Y'=9  S D=$E(D_"         ",1,$L(D)\9+1*9),$P(XMD0,U,2)=D Q
"RTN","XMCTLK",85,0)
 I D="" S D=" "
"RTN","XMCTLK",86,0)
 S XMD0=XMD0+1,^XMB(3.9,XMZ,2,XMD0,0)=$E(D,1,80),D=$E(D,81,999)
"RTN","XMCTLK",87,0)
 G T1
"RTN","XMCTLK",88,0)
U S XME0=$H*86400+$P($H,",",2) Q
"RTN","XMCTLK",89,0)
 ;
"RTN","XMCTLK",90,0)
 ;GET INITIAL VALUES
"RTN","XMCTLK",91,0)
ECHO ;ENTRY TO ECHO
"RTN","XMCTLK",92,0)
 K XMG0 S XMG0("EON")=1 G GO1
"RTN","XMCTRAP")
0^15^B245736
"RTN","XMCTRAP",1,0)
XMCTRAP ;(WASH ISC)/THM/CAP-ERROR TRAP ;08/05/96  10:06
"RTN","XMCTRAP",2,0)
 ;;7.1;MailMan;**20,27**;Jun 02, 1994
"RTN","XMCTRAP",3,0)
 ;Modified for TCP/IP under INET_SERVERS of Wollongong
"RTN","XMCTRAP",4,0)
 ;
"RTN","XMCTRAP",5,0)
C ;set in XMC1
"RTN","XMCTRAP",6,0)
 N XMCTRAP S XMCTRAP=1
"RTN","XMCTRAP",7,0)
R ;set in XMRUCX
"RTN","XMCTRAP",8,0)
TRP N %,%E,X S (%,X)=""
"RTN","XMCTRAP",9,0)
 S %E=$$EC^%ZOSV()
"RTN","XMCTRAP",10,0)
 I '$$SCREEN^%ZTER(%E) D ^%ZTER
"RTN","XMCTRAP",11,0)
 ;Error Trap for Script processing (remove back-up tasks)...
"RTN","XMCTRAP",12,0)
 I $G(ZTQUEUED),$G(XMCTRAP) D REQ^XMS0
"RTN","XMCTRAP",13,0)
 ;I $D(XMHANG),$L(XMHANG) X XMHANG
"RTN","XMCTRAP",14,0)
 ;D:IO'=IO(0) ^%ZISC
"RTN","XMCTRAP",15,0)
 S ER=1 G UNWIND^%ZTER
"RTN","XMDIR1")
0^22^B23913879
"RTN","XMDIR1",1,0)
XMDIR1 ;(WASH ISC)/CAP- LOAD... VACO DIRECTORIES ;08/05/96  09:33
"RTN","XMDIR1",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMDIR1",3,0)
 Q
"RTN","XMDIR1",4,0)
ENT ;Batch Entry point (TaskMan)
"RTN","XMDIR1",5,0)
 K ZTREQ,^TMP("XMDIR1",$J) S XMA=0
"RTN","XMDIR1",6,0)
 ;
"RTN","XMDIR1",7,0)
 ;LOCK to indicate to XMA5 that MailLink in being updated
"RTN","XMDIR1",8,0)
 L +^XMD("XMDIR1"):1 E  G RES:$D(ZTQUEUED) W !!,*7,"<<< This task seems to be running already !",!,"(It cannot be run multiple times concurrently.) >>>" G Q
"RTN","XMDIR1",9,0)
 ;
"RTN","XMDIR1",10,0)
 U IO(0) S XMDIR1A("CODE")=$S($G(XMDIR1A)=1:"1A",1:"1B")
"RTN","XMDIR1",11,0)
 I '$D(ZTQUEUED) W !!,"Killing off old AUTOMATIC entries for this code ("_XMDIR1A("CODE")_").",!!
"RTN","XMDIR1",12,0)
 N DIK
"RTN","XMDIR1",13,0)
 S DA=0,DIK="^XMD(4.2997,"
"RTN","XMDIR1",14,0)
 F XMA0=1:1 S DA=$O(^XMD(4.2997,"E",XMDIR1A("CODE"),DA)) Q:+DA'=DA  D ^DIK I '$D(ZTQUEUED),XMA0#10=0 W "."
"RTN","XMDIR1",15,0)
 ;
"RTN","XMDIR1",16,0)
 ;Kill off very old manual entries that haven't been used
"RTN","XMDIR1",17,0)
 S DA=0,XMDIR1=$E(DT,1,5)-200,XMDIR1("CNT")=0
"RTN","XMDIR1",18,0)
 F XMA0=XMA0:1 S DA=$O(^XMD(4.2997,"AC",DA)) Q:$S(DA>XMDIR1:1,DA="":1,1:0)  D ^DIK I '$D(ZTQUEUED),XMA0#10=0 W "."
"RTN","XMDIR1",19,0)
 ;
"RTN","XMDIR1",20,0)
 I '$D(ZTQUEUED) W !!,"Starting load",!!
"RTN","XMDIR1",21,0)
 U IO
"RTN","XMDIR1",22,0)
 ;Load WANG directory
"RTN","XMDIR1",23,0)
 I $G(XMDIR1A("CODE"))="1A" D ^XMDIR1A
"RTN","XMDIR1",24,0)
 ;
"RTN","XMDIR1",25,0)
 ;Load NOAVA directory
"RTN","XMDIR1",26,0)
 I $G(XMDIR1A("CODE"))="1B" D ^XMDIR1B
"RTN","XMDIR1",27,0)
 ;
"RTN","XMDIR1",28,0)
 K XMDIR1A,XMDIR1B
"RTN","XMDIR1",29,0)
 I '$D(ZTQUEUED) W !!!,"Task Completed"
"RTN","XMDIR1",30,0)
 ;
"RTN","XMDIR1",31,0)
 S ^TMP("XMDIR1",$J,.0001)="Remote Directories summary:"
"RTN","XMDIR1",32,0)
 S ^TMP("XMDIR1",$J,.0002)=""
"RTN","XMDIR1",33,0)
 I $D(XMDIR1("W")) S ^TMP("XMDIR1",$J,.0003)=XMDIR1("W")_" Wang system records processed."
"RTN","XMDIR1",34,0)
 I $D(XMDIR1("N")) S ^TMP("XMDIR1",$J,.0003)=XMDIR1("N")_" NOAVA system records processed."
"RTN","XMDIR1",35,0)
 S XMSUB="REMOTE DIRECTORY AUTOMATIC UPDATE",XMTEXT="^TMP(""XMDIR1"",$J,"
"RTN","XMDIR1",36,0)
 N XMDUZ S XMDUZ="|XMDIR1_REMOTE_DIRECTORY_UPDATE|",XMY("G.POSTMASTER@"_^XMB("NETNAME"))=""
"RTN","XMDIR1",37,0)
 I $D(DUZ) S XMY(DUZ)=""
"RTN","XMDIR1",38,0)
 I $O(XMY(0))="" S XMY(.5)=""
"RTN","XMDIR1",39,0)
 D ^XMD K A
"RTN","XMDIR1",40,0)
Q L -^XMD("XMDIR1") K ^TMP("XMDIR1",$J)
"RTN","XMDIR1",41,0)
 Q
"RTN","XMDIR1",42,0)
 ;
"RTN","XMDIR1",43,0)
 ;Menu option to schedule task
"RTN","XMDIR1",44,0)
OPTION G ENT:$D(ZTQUEUED)
"RTN","XMDIR1",45,0)
 N %,%0,%1,%6,D,DA,I,J,X,Y,XMA0,XMB0,XMC0,XMDUZ,XMDIR1,XMSUB,XMY,XMTEXT
"RTN","XMDIR1",46,0)
 W !!,"You are about to load a file containing a list of names and"
"RTN","XMDIR1",47,0)
 W !,"addresses into you Remote User Directory (file 4.2997).  This"
"RTN","XMDIR1",48,0)
 W !,"file originated either from a NOAVA system or a WANG system."
"RTN","XMDIR1",49,0)
 W !,"Choose the correct file.  We will check it some for format.",!!
"RTN","XMDIR1",50,0)
 S %ZIS("S")="I $P($G(^(""TYPE"")),U)[""HFS"""
"RTN","XMDIR1",51,0)
 S %ZIS("A")="Enter either HFS-WANG-DIR or HFS-NOAVA-DIR: "
"RTN","XMDIR1",52,0)
 S %ZIS("B")="HFS-NOAVA-DIR"
"RTN","XMDIR1",53,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","XMDIR1",54,0)
 S XMF=IO,XMDIR1A=$S(ION="HFS-NOAVA-DIR":2,1:1)
"RTN","XMDIR1",55,0)
 R !!,"Do you want your job queued? (Answer YES or NO)  NO// ",X:DTIME
"RTN","XMDIR1",56,0)
 K D S:X="" X="NO" S X=$TR(X,"noyes","NOYES") I $E("YES",1,$L(X))=X S D=1
"RTN","XMDIR1",57,0)
 W !!,"Before the update occurs entries older than 90 days in the directory"
"RTN","XMDIR1",58,0)
 W !,"are deleted if they were automatically filed by this procedure."
"RTN","XMDIR1",59,0)
 W !,"Manually entered entries are deleted if they haven't been used"
"RTN","XMDIR1",60,0)
 W !,"for at least 2 years."
"RTN","XMDIR1",61,0)
 W !!,"Users are informed that an update is occuring if they are using"
"RTN","XMDIR1",62,0)
 W !,"MailLink help options.  But are allowed to continue.",!!
"RTN","XMDIR1",63,0)
 R !!,"Are you sure you want to do this (Answer 'YES/NO'): NO//",X:DTIME
"RTN","XMDIR1",64,0)
 S:X="" X="NO" S X=$TR(X,"noyes","NOYES") I $E("YES",1,$L(X))'=X W !!,"Nothing done.",*7,!! Q
"RTN","XMDIR1",65,0)
 I '$G(D) G INT
"RTN","XMDIR1",66,0)
 D ZTSK W !!,*7,"Task #"_ZTSK_" scheduled.",!!
"RTN","XMDIR1",67,0)
 D ^%ZISC K ZTSK,ZTRTN,ZTDTH,XMDUZ,ZTDESC,IO("Q"),XMDIR1A,XMDIR1B
"RTN","XMDIR1",68,0)
 Q
"RTN","XMDIR1",69,0)
ER ;Display error
"RTN","XMDIR1",70,0)
 S XMDIR1("CNT")=XMDIR1("CNT")+1,^TMP("XMDIR1",$J,XMDIR1("CNT"))=XME_":"_XMY Q
"RTN","XMDIR1",71,0)
ZTSK ;Schedule to run in the evening
"RTN","XMDIR1",72,0)
 S XMDUZ="[XMDIR1_DIRECTORY_CONVERSION]",ZTRTN="ENT^XMDIR1",ZTDTH=+$H_",64800",ZTSAVE("*")="",ZTDESC="Convert MailLink list" I +$H=55099 S ZTDTH=$H
"RTN","XMDIR1",73,0)
 S ZTDTH="" D ^%ZTLOAD Q
"RTN","XMDIR1",74,0)
 ;Job out this process from here
"RTN","XMDIR1",75,0)
JOB S ZTQUEUED=1,U="^",(IO,IO(0))="" D DT^DICRW G XMDIR1
"RTN","XMDIR1",76,0)
 ;Reschedule job to run later
"RTN","XMDIR1",77,0)
RES S %=$H*86400+$P($H,",",2)+600,ZTREQ=%\86400_","_(%#86400)_"^^MailLink Conversion Restart @ "_$H_"^XMZWANG" Q
"RTN","XMDIR1",78,0)
HFSFILE S DIC="^%ZIS(1,",DIC(0)="AZQME",DIC("S")="I $P($G(^%ZIS(1,Y,""TYPE"")),U)[""HFS"""
"RTN","XMDIR1",79,0)
 D ^DIC Q:Y<0
"RTN","XMDIR1",80,0)
 S IOP=X D ^%ZIS Q:POP
"RTN","XMDIR1",81,0)
 S XMF=$P(^%ZIS(1,IOS,0),U,2) Q
"RTN","XMDIR1",82,0)
INT ;Interactive processing begins here
"RTN","XMDIR1",83,0)
 S XMF=$P(^%ZIS(1,IOS,0),U,2)
"RTN","XMDIR1",84,0)
 W !!,"Answer 'YES' if you mean 'YES'.  All other response mean 'NO'."
"RTN","XMDIR1",85,0)
 W !,"The first file to be processed is for the "_XMF_"."
"RTN","XMDIR1",86,0)
 W !,"Enter '^' to skip this portion of the process.",!!
"RTN","XMDIR1",87,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMDIR1",88,0)
 S X="NOWANG^XMDIR1B",@^%ZOSF("TRAP")
"RTN","XMDIR1",89,0)
 U IO R Y:1 U IO(0)
"RTN","XMDIR1",90,0)
 W !!,"The following string was read from the first line of "_XMF_"."
"RTN","XMDIR1",91,0)
 W !!,Y,!!,"Is this correct ? NO// " R %:DTIME
"RTN","XMDIR1",92,0)
 S:%="" %="NO" S %=$TR(%,"noyes","NOYES")
"RTN","XMDIR1",93,0)
 I $E("YES",1,$L(%))'=% D ^%ZISC Q
"RTN","XMDIR1",94,0)
 W ! G ENT
"RTN","XMDIR1A")
0^23^B8485924
"RTN","XMDIR1A",1,0)
XMDIR1A ;(WASH ISC)/CAP- LOAD... VACO DIRECTORIES - WANG ;08/05/96  09:35
"RTN","XMDIR1A",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMDIR1A",3,0)
 ;
"RTN","XMDIR1A",4,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMDIR1A",5,0)
 S X="EOF^XMDIR1A",@^%ZOSF("TRAP"),XMB0=^%ZOSF("UPPERCASE")
"RTN","XMDIR1A",6,0)
 G P:'$D(ZTQUEUED)
"RTN","XMDIR1A",7,0)
 ;Batch processing begins here
"RTN","XMDIR1A",8,0)
R1 U IO R Y:DTIME I '$D(ZTQUEUED) U IO(0)
"RTN","XMDIR1A",9,0)
 S XMA=XMA+1 I '$D(ZTQUEUED),XMA#10=0 W "."
"RTN","XMDIR1A",10,0)
P S X=Y X XMB0 F %=0:0 Q:$E(Y)'?1P  S Y=$E(Y,2,99)
"RTN","XMDIR1A",11,0)
 F %=$L(Y):-1:0 Q:$E(Y,%)?1A  S Y=$E(Y,1,%-1)
"RTN","XMDIR1A",12,0)
 K X S X=$P(Y,"*")
"RTN","XMDIR1A",13,0)
 G R1:X[" ",R1:X["@",R1:X["::",R1:X[".."
"RTN","XMDIR1A",14,0)
 S XMY=Y
"RTN","XMDIR1A",15,0)
 ;
"RTN","XMDIR1A",16,0)
1 ;Name
"RTN","XMDIR1A",17,0)
 S X("LN")=$P(X,".",$L(X,".")),X=$P(X,".",1,$L(X,".")-1)
"RTN","XMDIR1A",18,0)
 G R1:'$L(X("LN")),R1:X("LN")?1.N,R1:X("LN")?.E3N.E,R1:X("LN")["/"
"RTN","XMDIR1A",19,0)
 G R1:X("LN")?.E1C.E
"RTN","XMDIR1A",20,0)
 S X("FN")=$P(X,"."),X=$P(X,".",2,9),X("RN")=X
"RTN","XMDIR1A",21,0)
 ;
"RTN","XMDIR1A",22,0)
 ;Mail code
"RTN","XMDIR1A",23,0)
 S X=$P(Y,"*",2),X("MC")=$P(X," "),X("EMC")=X G R1:X("MC")?.E1C.E
"RTN","XMDIR1A",24,0)
 ;
"RTN","XMDIR1A",25,0)
 ;Location
"RTN","XMDIR1A",26,0)
 S X("L")=$P(Y,"*",3)
"RTN","XMDIR1A",27,0)
 ;
"RTN","XMDIR1A",28,0)
 ;Network address
"RTN","XMDIR1A",29,0)
 S Y=$P(XMY,"*") G R1:'$L(Y),R1:Y?.E1C.E S X("NET")=Y_"@VACOWMAIL.VA.GOV"
"RTN","XMDIR1A",30,0)
 I $D(^XMD(4.2997,"B",X("LN"))) S %="" F  S %=$O(^XMD(4.2997,"B",X("LN"),%)) Q:%=""  I $D(^XMD(4.2997,%,0)) S %6=^XMD(4.2997,%,0) I X("NET")=$P(%6,U,7) S XME="Already on file - not filed " D ER^XMDIR1 G R1
"RTN","XMDIR1A",31,0)
 ;
"RTN","XMDIR1A",32,0)
 D FILE(.X)
"RTN","XMDIR1A",33,0)
 G R1
"RTN","XMDIR1A",34,0)
FILE(X) ;HARD CODE
"RTN","XMDIR1A",35,0)
 ;
"RTN","XMDIR1A",36,0)
 ;X("EMC")=Extended Mail Code
"RTN","XMDIR1A",37,0)
 ;X("FN")=First name
"RTN","XMDIR1A",38,0)
 ;X("L")=Location
"RTN","XMDIR1A",39,0)
 ;X("LN")=Last name
"RTN","XMDIR1A",40,0)
 ;X("MC")=Mail Code
"RTN","XMDIR1A",41,0)
 ;X("NET")=full NETwork address
"RTN","XMDIR1A",42,0)
 ;X("PHONE")=Phone number
"RTN","XMDIR1A",43,0)
 ;X("PHONE/E")=Telephone Extension
"RTN","XMDIR1A",44,0)
 ;X("RN")=Restofname
"RTN","XMDIR1A",45,0)
 ;
"RTN","XMDIR1A",46,0)
 ;Get new entry number
"RTN","XMDIR1A",47,0)
 N %,N,Y L +^XMD(4.2997,0)
"RTN","XMDIR1A",48,0)
 S Y=^XMD(4.2997,0) F N=$P(Y,U,4)+1:1 Q:'$D(^(N))
"RTN","XMDIR1A",49,0)
 L +^XMD(4.2997,N) S $P(Y,U,4)=N,^XMD(4.2997,0)=Y
"RTN","XMDIR1A",50,0)
 ;File entry
"RTN","XMDIR1A",51,0)
 S ^XMD(4.2997,N,0)=X("LN")_U_X("FN")_U_X("RN")_U_X("MC")_U_X("EMC")_U_X("L")_U_X("NET")_U_+$H_U_XMDIR1,^("AUTO")=XMDIR1A("CODE")
"RTN","XMDIR1A",52,0)
 I $D(X("PHONE"))!$D(X("PHONE/X")) S %=$G(X("PHONE")) S:$L($G(X("PHONE/X"))) %=%_U_X("PHONE/X") S ^XMD(4.2997,N,1)=%
"RTN","XMDIR1A",53,0)
 ;Create cross references for one entry
"RTN","XMDIR1A",54,0)
 S DIK="^XMD(4.2997,",DA=N D IX^DIK L -^XMD(4.2997,0),-^XMD(4.2997,N)
"RTN","XMDIR1A",55,0)
 Q
"RTN","XMDIR1A",56,0)
EOF D ^%ZISC,END("WANG",90) Q
"RTN","XMDIR1A",57,0)
END(X,Y) ;END PROCESSING
"RTN","XMDIR1A",58,0)
 ;X=NAME OF FILE (WANG or NOAVA)
"RTN","XMDIR1A",59,0)
 ;Y=Subscript of text array
"RTN","XMDIR1A",60,0)
 N %,%I,%H,A S A=X,XMDIR1($E(X))=XMA D NOW^%DTC K %I,%H
"RTN","XMDIR1A",61,0)
 S ^TMP("XMDIR1",$J,.01)="Normal error reported here",^(.02)="("_$ZE_")",^(.03)="should be end of File."
"RTN","XMDIR1A",62,0)
 S ^TMP("XMDIR1",$J,.04)="Done processing "_A_" file on "_$E(%,4,5)_"/"_$E(%,6,7)_" @ "_$E($P(%,".",2)_"0000",1,4)_" military time."
"RTN","XMDIR1A",63,0)
 S ^TMP("XMDIR1",$J,.05)=""
"RTN","XMDIR1A",64,0)
 Q
"RTN","XMDIR1B")
0^24^B5106401
"RTN","XMDIR1B",1,0)
XMDIR1B ;(WASH ISC)/CAP- LOAD... VACO DIRECTORIES - NOAVA ;08/05/96  09:36
"RTN","XMDIR1B",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMDIR1B",3,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMDIR1B",4,0)
 S X="EOF^XMDIR1B",@^%ZOSF("TRAP"),XMB0=^%ZOSF("UPPERCASE")
"RTN","XMDIR1B",5,0)
GO G P:'$D(ZTQUEUED)
"RTN","XMDIR1B",6,0)
R1 U IO R Y:DTIME I '$D(ZTQUEUED) U IO(0)
"RTN","XMDIR1B",7,0)
 S XMA=XMA+1 I '$D(ZTQUEUED),XMA#10=0 W "."
"RTN","XMDIR1B",8,0)
P S X=Y X XMB0 F %=0:0 Q:$E(Y)'?1P  S Y=$E(Y,2,99)
"RTN","XMDIR1B",9,0)
 F %=$L(Y):-1:0 Q:$E(Y,%)?1A  S Y=$E(Y,1,%-1)
"RTN","XMDIR1B",10,0)
 K X S X=$$STRIP($P(Y,":"))
"RTN","XMDIR1B",11,0)
 G R1:X[" ",R1:X["@",R1:X["::",R1:X["..",R1:X="",R1:X?1.N,R1:X?.E3N.E,R1:X["/",R1:X?.E1C.E
"RTN","XMDIR1B",12,0)
 S XMY=Y
"RTN","XMDIR1B",13,0)
 ;
"RTN","XMDIR1B",14,0)
 ;Name
"RTN","XMDIR1B",15,0)
 S X("LN")=X
"RTN","XMDIR1B",16,0)
 S X=$$STRIP($P(XMY,":",2)),X("FN")=X,X("RN")=""
"RTN","XMDIR1B",17,0)
 ;
"RTN","XMDIR1B",18,0)
 ;Mail code
"RTN","XMDIR1B",19,0)
 S X=$$STRIP($P(XMY,":",6)),X("MC")=$P(X," "),X("EMC")=X G R1:X("MC")?.E1C.E
"RTN","XMDIR1B",20,0)
 ;
"RTN","XMDIR1B",21,0)
 ;Phone number / Extension
"RTN","XMDIR1B",22,0)
 S X("PHONE")=$$STRIP($P(XMY,":",5)),X("PHONE/E")=$$STRIP($P(XMY,":",7))
"RTN","XMDIR1B",23,0)
 ;
"RTN","XMDIR1B",24,0)
 ;Location
"RTN","XMDIR1B",25,0)
 S X("L")=$$STRIP($P(XMY,":",4))
"RTN","XMDIR1B",26,0)
 ;
"RTN","XMDIR1B",27,0)
 ;Network address
"RTN","XMDIR1B",28,0)
 S X=$$STRIP($P(XMY,":",9)),X=$P(X,"@")
"RTN","XMDIR1B",29,0)
 G R1:'$L(X),R1:X?.E1C.E S X("NET")=X_"@VACO.VA.GOV"
"RTN","XMDIR1B",30,0)
 I $D(^XMD(4.2997,"B",X("LN"))) S %="" F  S %=$O(^XMD(4.2997,"B",X("LN"),%)) Q:%=""  I $D(^XMD(4.2997,%,0)) S %6=^XMD(4.2997,%,0) I X("NET")=$P(%6,U,7) S XME="Already on file - not filed " D ER^XMDIR1 G R1
"RTN","XMDIR1B",31,0)
 ;
"RTN","XMDIR1B",32,0)
 D FILE^XMDIR1A(.X)
"RTN","XMDIR1B",33,0)
 G R1
"RTN","XMDIR1B",34,0)
EOF D ^%ZISC,END^XMDIR1A("NOAVA",90) Q
"RTN","XMDIR1B",35,0)
 ;
"RTN","XMDIR1B",36,0)
 ;Strip leading and trailing spaces
"RTN","XMDIR1B",37,0)
STRIP(X) F  Q:$E(X)'=" "  S X=$E(X,2,999)
"RTN","XMDIR1B",38,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,$L(X)-1)
"RTN","XMDIR1B",39,0)
 Q X
"RTN","XMDIR1B",40,0)
NOWANG D @^%ZOSF("ERRTN")
"RTN","XMDIR1B",41,0)
 I '$D(ZTQUEUED) W !!,"The error: "_$ZE_" occured !!!",!!
"RTN","XMDIR1B",42,0)
 G Q^XMDIR1
"RTN","XMDIR1B",43,0)
REMOTES ;Edit/Add Remote members
"RTN","XMDIR1B",44,0)
 N DA,DIE,DR,DIC,DLAYGO,X,Y,DUOUT,DTOUT
"RTN","XMDIR1B",45,0)
 S DIC=4.2997,DLAYGO=4.2997,DIC(0)="AELQMZ" D ^DIC
"RTN","XMDIR1B",46,0)
 Q:$S($D(DTOUT):1,$D(DUOUT):1,Y<1:1,1:0)
"RTN","XMDIR1B",47,0)
 S DA=+Y,DIE=4.2997,DR=".01:99999" D ^DIE
"RTN","XMDIR1B",48,0)
 Q
"RTN","XMLTCP")
0^25^B3961722
"RTN","XMLTCP",1,0)
XMLTCP ;(WASH ISC)/CAP - TCP/IP TO MAILMAN ;08/05/96  13:51
"RTN","XMLTCP",2,0)
 ;;7.1;MailMan;**8,27**;Jun 02, 1994
"RTN","XMLTCP",3,0)
 ; modified to run with MSM NT and Protocol TCP/IP-MAILMAN (file 3.4)
"RTN","XMLTCP",4,0)
 ;
"RTN","XMLTCP",5,0)
SEND ;returns ER(0 OR 1), XMLER=number of "soft" errors
"RTN","XMLTCP",6,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D C^XMCTRAP"
"RTN","XMLTCP",7,0)
 E  S X="C^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMLTCP",8,0)
 S %=XMSG I $L(%)>255 S ER=1,XMTRAN="Line too long" D TRAN Q
"RTN","XMLTCP",9,0)
 ;I %'?.ANP S %=$$STR^XMLUTL(%)
"RTN","XMLTCP",10,0)
 S XMSG=% I $G(XMINST) S Y=$$STAT^XMLSTAT(XMINST,1,XMSG,"TCP/IP-MailMan",1)
"RTN","XMLTCP",11,0)
 W XMSG,$C(13,10),!
"RTN","XMLTCP",12,0)
 Q
"RTN","XMLTCP",13,0)
 ;Receive a line (must keep buffer / lines divided by LF)
"RTN","XMLTCP",14,0)
REC N L
"RTN","XMLTCP",15,0)
 I $D(XMRG),$G(XMINST) S Y=$$STAT^XMLSTAT(XMINST,2,XMRG,"TCP/IP-MailMan",1)
"RTN","XMLTCP",16,0)
 I '$D(XMOS) S XMOS=^%ZOSF("OS") I XMOS["MSM" S XMOS("MSMVER")=$P($ZV," 4.0.",2) S:+XMOS("MSMVER")=0 XMOS("MSMVER")=8
"RTN","XMLTCP",17,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D C^XMCTRAP"
"RTN","XMLTCP",18,0)
 E  S X="C^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMLTCP",19,0)
 ;Return line if read last time
"RTN","XMLTCP",20,0)
RE G R:XMLTCP[$C(10) S %=255-$L(XMLTCP) G R:%<1
"RTN","XMLTCP",21,0)
 ;Insure can clean up if line dropped, etc.
"RTN","XMLTCP",22,0)
 I $S(XMOS["VAX":1,+$G(XMOS("MSMVER"))<8:1,1:0) R X#$S(%:%,1:1):$S($G(XMSTIME):XMSTIME,1:160) G RE2
"RTN","XMLTCP",23,0)
 ;Compliant with M standard
"RTN","XMLTCP",24,0)
 R X:$S($G(XMSTIME):XMSTIME,1:60)
"RTN","XMLTCP",25,0)
 ;
"RTN","XMLTCP",26,0)
RE2 I '$T,"."_$C(10)'=XMLTCP S ER=1,XMRG="",XMTRAN="Rcvr timed out" D TRAN Q
"RTN","XMLTCP",27,0)
 I X="" S ER=ER+.1 S:ER=1 XMRG="" Q:ER=1  H 1 G RE
"RTN","XMLTCP",28,0)
 S XMLTCP=XMLTCP_X I XMLTCP'[$C(10) G RE
"RTN","XMLTCP",29,0)
R S %=$F(XMLTCP,$C(10))
"RTN","XMLTCP",30,0)
 ;
"RTN","XMLTCP",31,0)
 ;Strip out LF (and CR, if present)
"RTN","XMLTCP",32,0)
 S L=$L(XMLTCP)
"RTN","XMLTCP",33,0)
 I %,%<256 S XMRG=$E(XMLTCP,1,%-3+($A(XMLTCP,%-2)'=13)),XMLTCP=$E(XMLTCP,%,L) G RQ
"RTN","XMLTCP",34,0)
 ;
"RTN","XMLTCP",35,0)
 ;Line too long or doesn't contain a Line Feed, return first 255 chars.
"RTN","XMLTCP",36,0)
 S XMRG=$E(XMLTCP,1,255),XMLTCP=$E(XMLTCP,256,L)
"RTN","XMLTCP",37,0)
 ;
"RTN","XMLTCP",38,0)
RQ I $L(XMRG),$C(13,10)[$E(XMRG) S XMRG=$E(XMRG,2,$L(XMRG)) G RQ
"RTN","XMLTCP",39,0)
 Q
"RTN","XMLTCP",40,0)
TRAN Q:XM'["D"  D TRAN^XMC1
"RTN","XMLTCP",41,0)
 Q
"RTN","XMR0")
0^26^B15021604
"RTN","XMR0",1,0)
XMR0 ;(WASH ISC)/CAP-SMTP RECEIVER (INITIALIZE) ;08/05/96  14:20
"RTN","XMR0",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMR0",3,0)
 I $T(@XMCMD)="" S XMSG="502 Command not implemented" X XMSEN Q
"RTN","XMR0",4,0)
 D @XMCMD Q
"RTN","XMR0",5,0)
EXPN ;;EXPAND MAILING LIST
"RTN","XMR0",6,0)
 S DIC="^XMB(3.8,",DIC(0)="MF",X=XMP I X["<" S X=$P($P(X,"<",2),">")
"RTN","XMR0",7,0)
 I $E(X,2)=".","Gg"[$E(X) S X=$E(X,3,999)
"RTN","XMR0",8,0)
 D ^DIC I Y<0 S XMSG="550 mail group not found" X XMSEN Q
"RTN","XMR0",9,0)
 S XMR0J=0,XMR0I=0 F  S XMR0J=$O(^XMB(3.8,+Y,1,XMR0J)) Q:+XMR0J'=XMR0J  S %=$O(^XMB(3.8,+Y,1,XMR0J,0)),XMR0I=XMR0I+1 I % S XMSG="250 <"_$P(^VA(200,XMR0JJ,0),U)_"@"_^XMB("NETNAME")_">" X XMSEN Q:ER
"RTN","XMR0",10,0)
 I 'XMR0I S XMSG="250 No LOCAL members in group" X XMSEN G Q:ER
"RTN","XMR0",11,0)
 S XMSG="250 List SHOWS local members only, not member groups, remote members or distribution lists." X XMSEN
"RTN","XMR0",12,0)
Q K XMR0J,XMR0I Q
"RTN","XMR0",13,0)
HELP ;;DISPLAY HELP MESSAGE
"RTN","XMR0",14,0)
 G HELP^XMR2
"RTN","XMR0",15,0)
NOOP ;;NO OPERATION FOR TESTING
"RTN","XMR0",16,0)
 S XMSG="250 OK" X XMSEN Q
"RTN","XMR0",17,0)
STAT G STAT^XMR1A
"RTN","XMR0",18,0)
RSET ;;RESET STATE TABLES
"RTN","XMR0",19,0)
R1 S XMLOCK="" K XMY,XMY0,^TMP("XMY",$J),^TMP("XMY0",$J) S XMSTATE="HELO^MAIL^"
"RTN","XMR0",20,0)
 I XMP="" G R3
"RTN","XMR0",21,0)
 S DIC="^DIC(3.4,",DIC(0)="Z" F J=1:1 S X=$P(XMP,",",J) Q:X=""  D ^DIC G:Y>0 R2
"RTN","XMR0",22,0)
R3 S XMSG="250 " X XMSEN
"RTN","XMR0",23,0)
 Q
"RTN","XMR0",24,0)
R2 S XMSG="250 "_$P(Y,U,2) X XMSEN S XMCHAN=+Y G G2^XML
"RTN","XMR0",25,0)
 Q
"RTN","XMR0",26,0)
MESS ;
"RTN","XMR0",27,0)
 G MESSID^XMR0A
"RTN","XMR0",28,0)
CHRS ;;Christen this domain syntax: CHRS <parent>,<child>
"RTN","XMR0",29,0)
 S XMPAR=$P(XMP,",",1),XMCHILD=$P(XMP,",",2)
"RTN","XMR0",30,0)
 S X=XMPAR,DIC=4.2,DIC(0)="MF" D ^DIC I +Y'=$P(^XMB(1,1,0),U,3) S XMSG="550 Parent name does not match locally initialized parent name" X XMSEN Q
"RTN","XMR0",31,0)
 S DIC=4.2,X=XMCHILD D ^DIC I +Y'=$P(^XMB(1,1,0),U,1) S XMSG="550 Child name does not match locally initialized domain name" X XMSEN Q
"RTN","XMR0",32,0)
 S ^XMB("NETNAME")=$P(Y,U,2),$P(^XMB(1,1,0),U,4)=DT,XMSG="250 Local domain "_$P(Y,U,2)_" successfully christened by parent "_XMPAR X XMSEN Q
"RTN","XMR0",33,0)
 Q
"RTN","XMR0",34,0)
ECHO ;;ECHO TEST
"RTN","XMR0",35,0)
 S XMSG="314 Echo mode. Received messages will be echoed until a single period is received" X XMSEN Q:ER
"RTN","XMR0",36,0)
E1 X XMREC Q:ER  G:XMRG="." E2 S XMSG=XMRG X XMSEN Q:ER  G E1
"RTN","XMR0",37,0)
E2 S XMSG="250 End of echo mode" X XMSEN Q
"RTN","XMR0",38,0)
 ;
"RTN","XMR0",39,0)
 ;INITIALIZE
"RTN","XMR0",40,0)
ENT ;FROM XMR
"RTN","XMR0",41,0)
 D ENT1
"RTN","XMR0",42,0)
 I '$D(XMDUZ) S XMDUZ=.5
"RTN","XMR0",43,0)
 ;DUZ USED TO BE SET HERE
"RTN","XMR0",44,0)
 I '$D(XMBT) S XMBT=0
"RTN","XMR0",45,0)
 I $S('$D(XMCHAN):1,XMCHAN="":1,1:0) S XMCHAN="SCP"
"RTN","XMR0",46,0)
 D OPEN^XML I $D(ER),ER=1 D ^%ZISC:IO'=$G(IO(0)) W !,"Open of device unsuccessful !",*7 Q
"RTN","XMR0",47,0)
 S:'$D(XM) XM="" I 'XMBT X ^%ZOSF("EOFF") S X=255 X ^%ZOSF("RM"),^%ZOSF("TYPE-AHEAD") G INT^XMR
"RTN","XMR0",48,0)
 ;FOR BATCH PROCESSING (To Tape or Host File)
"RTN","XMR0",49,0)
 U IO D INT^XMR U IO(0) D ^%ZISC Q
"RTN","XMR0",50,0)
 ;
"RTN","XMR0",51,0)
 ;SEND & RECEIVE: Get # to store script in ^UTILITY/^%ZOSF(NODES)
"RTN","XMR0",52,0)
ENT1 I '$D(XMR0) S X=$S($D(^TMP("XMC",0)):^(0),1:0)+1#100 S:X=0 X=1 S (XMR0,^(0))=X K ^(XMR0)
"RTN","XMR0",53,0)
 I '$D(XMS0C),$D(^XMB(1,1,0)),$P(^(0),U,14) S XMS0C=1
"RTN","XMR0",54,0)
 K XMDECNET
"RTN","XMR0",55,0)
 Q
"RTN","XMR0",56,0)
ENT2 ;
"RTN","XMR0",57,0)
 S XMEC=0,XMCONT="^HELP^NOOP^RSET^QUIT^VRFY^EXPN^STAT^CHRS^ECHO^",XMTRAN="Transcript Date: "_$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","XMR0",58,0)
 I '$D(XMS0C),$D(^XMB(1,1,0)),$P(^(0),U,14) S XMS0C=1
"RTN","XMR0",59,0)
 D TRAN^XMC1 Q
"RTN","XMR0",60,0)
DECNET ;TASK-TASK COMMUNICATIONS
"RTN","XMR0",61,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D R^XMCTRAP"
"RTN","XMR0",62,0)
 E  S X="R^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMR0",63,0)
 S (IO,I0(0))="SYS$NET",XMCHAN="DECNET" D DT^DICRW O IO U IO
"RTN","XMR0",64,0)
 K XMSDOM,XMRDOM
"RTN","XMR0",65,0)
 G ENT
"RTN","XMR0",66,0)
 ;
"RTN","XMR0",67,0)
BAT S ER=0,XMBT=1,XMTURN=1,XMCHAN=$S($G(XMCHAN)="":"T-IN",1:XMCHAN)
"RTN","XMR0",68,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D R^XMCTRAP"
"RTN","XMR0",69,0)
 E  S X="R^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMR0",70,0)
 K XMSDOM,XMRDOM
"RTN","XMR0",71,0)
 D ENT G KL1^XMC
"RTN","XMR0A")
0^14^B5556636
"RTN","XMR0A",1,0)
XMR0A ;(WASH ISC)/CAP-SMTP RECEIVER (SPECIAL) ;10/17/96  14:10
"RTN","XMR0A",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMR0A",3,0)
ENT S XMSG="500 Syntax error, command ("_XMCMD_") out of sequence, or unrecognized command"
"RTN","XMR0A",4,0)
 S XMEC=XMEC+1
"RTN","XMR0A",5,0)
 I XMEC>9 G I2^XMR
"RTN","XMR0A",6,0)
 D S Q:ER
"RTN","XMR0A",7,0)
 G I1^XMR
"RTN","XMR0A",8,0)
MESSID ;CHECK IF DUPLICATE MESSAGE / USERS...
"RTN","XMR0A",9,0)
 G ENT:XMP="" S Y=$P(XMP,":"),X=$P(XMP,":",2,99)
"RTN","XMR0A",10,0)
 I Y="CONFIRMATION" S Y=5 G Y
"RTN","XMR0A",11,0)
 I Y="PRIORITY" S Y=6 G Y
"RTN","XMR0A",12,0)
 I Y="TYPE" S Y=7 G Y
"RTN","XMR0A",13,0)
 I Y="CLOSED" S Y=9 G Y
"RTN","XMR0A",14,0)
 I Y="CONFIDENTIAL" S Y=11 G Y
"RTN","XMR0A",15,0)
 I Y="INFO" S Y=12 G Y
"RTN","XMR0A",16,0)
 I Y="BLOB" G BLOB^XMR0BLOB
"RTN","XMR0A",17,0)
 G ENT:Y'="ID"
"RTN","XMR0A",18,0)
 S X=$P(XMP,":",2),XMREMID=$S(+$E(X):$P(X,"@",2)_"@"_$P(X,"@"),1:X)
"RTN","XMR0A",19,0)
 I $P(XMREMID,"@")=^XMB("NETNAME") S X=$P(XMREMID,"@",2) G Q:'$D(^XMB(3.9,+X)) S XMTRAN="Message originated here." D TRAN^XMC1 G E
"RTN","XMR0A",20,0)
 G Q:'$D(^XMBX(3.9,"AI",$E(XMREMID,1,64))) S X=$O(^($E(XMREMID,1,64),0))
"RTN","XMR0A",21,0)
E S XMTRAN="Previously received message." D TRAN^XMC1
"RTN","XMR0A",22,0)
 S XMTRAN="Delivering to additional recipients !" D TRAN^XMC1
"RTN","XMR0A",23,0)
 S XMRXMZ=X,XMSG="RSET :"_XMRXMZ_"@"_^XMB("NETNAME")_":Previously received"
"RTN","XMR0A",24,0)
 G S
"RTN","XMR0A",25,0)
ENTQ I $D(^XMB(3.9,XMZ,2,XMLIN,0)) S ER=1,XMTRAN="500 Synchronization Lost" D TRAN^XMC1 Q
"RTN","XMR0A",26,0)
 S %=$P($G(^XMB(1,1,"NETWORK-LIMIT")),U,2)
"RTN","XMR0A",27,0)
 I %>1,XMLIN-1>% S ER=1,XMSG="551 Message Reject - Max # of lines per message received" X XMSEN K ^XMB(3.9,XMZ) G KL^XMR
"RTN","XMR0A",28,0)
 S XMCNT("R")=1+$S($D(XMCNT("R")):XMCNT("R"),1:0)
"RTN","XMR0A",29,0)
 S XMSTATE="^HELO^MAIL^",XMU=XMINST_U_XMSITE_U_XMZ
"RTN","XMR0A",30,0)
 I $D(XMRXMZ) S XMZ=XMRXMZ D PARSE^XMR1 S XMZ=$P(XMU,U,3) D SET^XMR1 G F
"RTN","XMR0A",31,0)
 D SCAN^XMR1
"RTN","XMR0A",32,0)
F S XMINST=+XMU,XMSITE=$P(XMU,U,2) K XMU,XMRXMZ
"RTN","XMR0A",33,0)
 D STAT^XMC1(XMINST):'$D(^XMBS(4.2999,XMINST,0))
"RTN","XMR0A",34,0)
 Q
"RTN","XMR0A",35,0)
 ;
"RTN","XMR0A",36,0)
Y S $P(^XMB(3.9,XMZ,0),U,Y)=X,XMR=^(0)
"RTN","XMR0A",37,0)
 ;
"RTN","XMR0A",38,0)
Q S XMSG="250 OK"
"RTN","XMR0A",39,0)
 ;
"RTN","XMR0A",40,0)
 ;SEND RESPONSE
"RTN","XMR0A",41,0)
S U IO X XMSEN Q
"RTN","XMRFTP")
0^27^B6643646
"RTN","XMRFTP",1,0)
XMRFTP ;(WASH ISC)/THM/CAP-SMTP RECEIVER [ARPANET RFC 821] ;08/05/96  14:24
"RTN","XMRFTP",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMRFTP",3,0)
 ;Modified for TCP/IP under INET_SERVERS of Wollongong
"RTN","XMRFTP",4,0)
 ;Send out FTP jobs that are due
"RTN","XMRFTP",5,0)
FTP N %,DA,DIK,XMA0,XMC0,XMSFTP,Y,Z,XMCOM S XMA0=$H*86400+$P($H,",",2)
"RTN","XMRFTP",6,0)
F1 S Z=0,Z=$O(^XMBX(4.2995,Z)) G FQ:+Z'=Z I '$D(^(Z,0)) G QQ^XMRTCP
"RTN","XMRFTP",7,0)
 S Y=^XMBX(4.2995,Z,0),XMSFTP=$P(Y,U,4),XMRTCPY="MM-FTP-"_$P(Y,U),XMCOM=$P(Y,U)
"RTN","XMRFTP",8,0)
 I XMCOM'?1"XM".E D RUNQ G QQ^XMRTCP
"RTN","XMRFTP",9,0)
F2 F  S %=$S($G(XMC0):XMC0,1:$$CK^XMRTCP(1)) G F3:%
"RTN","XMRFTP",10,0)
 ;Copy file to export directory
"RTN","XMRFTP",11,0)
F3 S XMC0=% I XMSFTP S %=$$FCHK(Z,XMA0,XMSFTP) G F1:%
"RTN","XMRFTP",12,0)
 S XMRTCP("NAME")=XMRTCPY D REN
"RTN","XMRFTP",13,0)
 G RUN
"RTN","XMRFTP",14,0)
FQ I $G(XMC0) L -^XMBX("TCPCHAN-COUNT",XMC0)
"RTN","XMRFTP",15,0)
 Q
"RTN","XMRFTP",16,0)
 ;Submit FTP process
"RTN","XMRFTP",17,0)
RUN I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMRFTP",18,0)
 S X="RUNQ^XMRFTP",@^%ZOSF("TRAP")
"RTN","XMRFTP",19,0)
 S %=$ZC(%SPAWN,"@"_XMCOM),%=$ZC(%SPAWN,"DELETE "_XMCOM_".*")
"RTN","XMRFTP",20,0)
RUNQ ;Remove from 4.2995
"RTN","XMRFTP",21,0)
 I $D(Z) N DIK,DA S DIK="^XMBX(4.2995,",DA=Z K XMRTCPY D ^DIK Q
"RTN","XMRFTP",22,0)
 Q
"RTN","XMRFTP",23,0)
REN I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMRFTP",24,0)
 S X="DUPNAME^XMRTCP",@^%ZOSF("TRAP")
"RTN","XMRFTP",25,0)
 I ^%ZOSF("OS")["VAX" S X=$ZC(%SETPRN,$E(XMRTCP("NAME"),1,13))
"RTN","XMRFTP",26,0)
 D START^XMRTCPGO
"RTN","XMRFTP",27,0)
 Q
"RTN","XMRFTP",28,0)
FCHK(Z,Y,F) ;Is file in export directory ?
"RTN","XMRFTP",29,0)
 N %,%0,%1,%2,I,X,XMIO
"RTN","XMRFTP",30,0)
 S XMIO=$I,%=^XMBX(4.2995,Z,0),%0=$P(%,U,5),%2=$P(%,U,4)
"RTN","XMRFTP",31,0)
 I '%0 S $P(^XMBX(4.2995,Z,0),U,5)=Y,%=$$EXPORT^MAGAPI("MAIL",F,"WAIT") Q %
"RTN","XMRFTP",32,0)
 S %=$P(^MAG(2005,%2,0),U,2)
"RTN","XMRFTP",33,0)
CONT S %0="XMS"_$E(Z,$L(Z)-4,$L(Z))_".LIS"
"RTN","XMRFTP",34,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMRFTP",35,0)
 S X="FPQ^XMRFTP",@^%ZOSF("TRAP"),X=$ZC(%SPAWN,"PURGE "_%0)
"RTN","XMRFTP",36,0)
FPQ I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMRFTP",37,0)
 S X="Q0^XMRFTP",@^%ZOSF("TRAP"),X=$ZC(%SPAWN,"DIR/OUTPUT="_%0_" NFA0:[EXPORT.MAIL]"_%)
"RTN","XMRFTP",38,0)
 O %0 U %0
"RTN","XMRFTP",39,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMRFTP",40,0)
 S X="FCHKQ^XMRFTP",@^%ZOSF("TRAP")
"RTN","XMRFTP",41,0)
 F  R X:9 Q:X[%
"RTN","XMRFTP",42,0)
FCHKQ C %0 U XMIO
"RTN","XMRFTP",43,0)
 I X'[% Q 1
"RTN","XMRFTP",44,0)
 Q 0
"RTN","XMRFTP",45,0)
Q0 Q 1
"RTN","XMRFTP",46,0)
FER N X S X=$P($G(^XMBX(4.2995,Z,0)),U,2)
"RTN","XMRFTP",47,0)
 I 'X S X=$H*86400+$P($H,",",2),$P(^(0),U,2)=X
"RTN","XMRFTP",48,0)
 Q:$H*86400+$P($H,",",2)-%>99
"RTN","XMRFTP",49,0)
 N Z S XMDUZ=.5,XMSUB="ERROR moving File from Image Server"
"RTN","XMRFTP",50,0)
 S XMTEXT="A(",A(1)="The error was: "_%_"."
"RTN","XMRFTP",51,0)
 S A(2)="The COM file being processed was: "_Y,XMY(.5)=""
"RTN","XMRFTP",52,0)
 D ^XMD Q
"RTN","XMRFTP",53,0)
IMAGENT(Y,F) ;
"RTN","XMRFTP",54,0)
 N %,%0,XMIO,X
"RTN","XMRFTP",55,0)
 I ^%ZOSF("OS")["MSM" S X=$ZOS(12,NEWPATH,"") I $P(X,U)=F QUIT "5 -IMAGE ALREADY THERE"
"RTN","XMRFTP",56,0)
 S Z=$P($H,",",2)#1000,XMIO=$I,%=F
"RTN","XMRFTP",57,0)
 G CONT
"RTN","XMRFTPUX")
0^28^B6748352
"RTN","XMRFTPUX",1,0)
XMRFTPUX ;(WASH ISC)/THM/CAP-SMTP RECEIVER [ARPANET RFC 821] ;08/05/96  14:30
"RTN","XMRFTPUX",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMRFTPUX",3,0)
 ;Modified for TCP/IP under INET_SERVERS of Wollongong
"RTN","XMRFTPUX",4,0)
 ;Send out FTP jobs that are due
"RTN","XMRFTPUX",5,0)
FTP N %,DA,DIK,XMA0,XMC0,XMSFTP,Y,Z,XMCOM S XMA0=$H*86400+$P($H,",",2)
"RTN","XMRFTPUX",6,0)
F1 S Z=0,Z=$O(^XMBX(4.2995,Z)) G FQ:+Z'=Z I '$D(^(Z,0)) G QQ^XMRTCP
"RTN","XMRFTPUX",7,0)
 S Y=^XMBX(4.2995,Z,0),XMSFTP=$P(Y,U,4),XMRTCPY="MM-FTP-"_$P(Y,U),XMCOM=$P(Y,U)
"RTN","XMRFTPUX",8,0)
 I XMCOM'?1"XM".E D RUNQ G QQ^XMRTCP
"RTN","XMRFTPUX",9,0)
F2 F  S %=$S($G(XMC0):XMC0,1:$$CK^XMRTCP(1)) G F3:%
"RTN","XMRFTPUX",10,0)
 ;Copy file to export directory
"RTN","XMRFTPUX",11,0)
F3 S XMC0=% I XMSFTP S %=$$FCHK(Z,XMA0,XMSFTP) G F1:%
"RTN","XMRFTPUX",12,0)
 S XMRTCP("NAME")=XMRTCPY D REN
"RTN","XMRFTPUX",13,0)
 G RUN
"RTN","XMRFTPUX",14,0)
FQ I $G(XMC0) L -^XMBX("TCPCHAN-COUNT",XMC0)
"RTN","XMRFTPUX",15,0)
 Q
"RTN","XMRFTPUX",16,0)
 ;Submit FTP process
"RTN","XMRFTPUX",17,0)
RUN I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMRFTPUX",18,0)
 S X="RUNQ^XMRFTP",@^%ZOSF("TRAP")
"RTN","XMRFTPUX",19,0)
 S %=$ZC(%SPAWN,"@"_XMCOM),%=$ZC(%SPAWN,"DELETE "_XMCOM_".*")
"RTN","XMRFTPUX",20,0)
RUNQ ;Remove from 4.2995
"RTN","XMRFTPUX",21,0)
 I $D(Z) N DIK,DA S DIK="^XMBX(4.2995,",DA=Z K XMRTCPY D ^DIK Q
"RTN","XMRFTPUX",22,0)
 Q
"RTN","XMRFTPUX",23,0)
REN I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMRFTPUX",24,0)
 S X="DUPNAME^XMRTCP",@^%ZOSF("TRAP")
"RTN","XMRFTPUX",25,0)
 I ^%ZOSF("OS")["VAX" S X=$ZC(%SETPRN,$E(XMRTCP("NAME"),1,13))
"RTN","XMRFTPUX",26,0)
 D START^XMRTCPGO
"RTN","XMRFTPUX",27,0)
 Q
"RTN","XMRFTPUX",28,0)
FCHK(Z,Y,F) ;Is file in export directory ?
"RTN","XMRFTPUX",29,0)
 Q 0 ;****************
"RTN","XMRFTPUX",30,0)
 N %,%0,%1,%2,I,X,XMIO
"RTN","XMRFTPUX",31,0)
 S XMIO=$I,%=^XMBX(4.2995,Z,0),%0=$P(%,U,5),%2=$P(%,U,4)
"RTN","XMRFTPUX",32,0)
 I '%0 S $P(^XMBX(4.2995,Z,0),U,5)=Y,%=$$EXPORT^MAGAPI("MAIL",F,"WAIT") Q %
"RTN","XMRFTPUX",33,0)
 S %=$P(^MAG(2005,%2,0),U,2)
"RTN","XMRFTPUX",34,0)
CONT S %0="XMS"_$E(Z,$L(Z)-4,$L(Z))_".LIS"
"RTN","XMRFTPUX",35,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMRFTPUX",36,0)
 S X="FPQ^XMRFTP",@^%ZOSF("TRAP"),X=$ZC(%SPAWN,"PURGE "_%0)
"RTN","XMRFTPUX",37,0)
FPQ I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMRFTPUX",38,0)
 S X="Q0^XMRFTP",@^%ZOSF("TRAP"),X=$ZC(%SPAWN,"DIR/OUTPUT="_%0_" NFA0:[EXPORT.MAIL]"_%)
"RTN","XMRFTPUX",39,0)
 O %0 U %0
"RTN","XMRFTPUX",40,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""
"RTN","XMRFTPUX",41,0)
 S X="FCHKQ^XMRFTP",@^%ZOSF("TRAP")
"RTN","XMRFTPUX",42,0)
 F  R X:9 Q:X[%
"RTN","XMRFTPUX",43,0)
FCHKQ C %0 U XMIO
"RTN","XMRFTPUX",44,0)
 I X'[% Q 1
"RTN","XMRFTPUX",45,0)
 Q 0
"RTN","XMRFTPUX",46,0)
Q0 Q 1
"RTN","XMRFTPUX",47,0)
FER N X S X=$P($G(^XMBX(4.2995,Z,0)),U,2)
"RTN","XMRFTPUX",48,0)
 I 'X S X=$H*86400+$P($H,",",2),$P(^(0),U,2)=X
"RTN","XMRFTPUX",49,0)
 Q:$H*86400+$P($H,",",2)-%>99
"RTN","XMRFTPUX",50,0)
 N Z S XMDUZ=.5,XMSUB="ERROR moving File from Image Server"
"RTN","XMRFTPUX",51,0)
 S XMTEXT="A(",A(1)="The error was: "_%_"."
"RTN","XMRFTPUX",52,0)
 S A(2)="The COM file being processed was: "_Y,XMY(.5)=""
"RTN","XMRFTPUX",53,0)
 D ^XMD Q
"RTN","XMRFTPUX",54,0)
IMAGENT(Y,F) ;
"RTN","XMRFTPUX",55,0)
 N %,%0,XMIO,X
"RTN","XMRFTPUX",56,0)
 I ^%ZOSF("OS")["MSM" S X=$ZOS(12,NEWPATH,"") I $P(X,U)=F QUIT "5 -IMAGE ALREADY THERE"
"RTN","XMRFTPUX",57,0)
 S Z=$P($H,",",2)#1000,XMIO=$I,%=F
"RTN","XMRFTPUX",58,0)
 G CONT
"RTN","XMRTCP")
0^2^B14159770
"RTN","XMRTCP",1,0)
XMRTCP ;(WASH ISC)/THM/CAP-SMTP RECEIVER ;08/14/96  08:32
"RTN","XMRTCP",2,0)
 ;;7.1;MailMan;**8,25,27**;Jun 02, 1994
"RTN","XMRTCP",3,0)
 ;Modified for TCP/IP under INET_SERVERS of Wollongong
"RTN","XMRTCP",4,0)
 ;
"RTN","XMRTCP",5,0)
POLL ;Poll all domains with flags set
"RTN","XMRTCP",6,0)
 ;Fake TaskMan Env.
"RTN","XMRTCP",7,0)
 S U="^",X="ERR^XMRTCP",@^%ZOSF("TRAP"),XMDUZ=.5
"RTN","XMRTCP",8,0)
 K XM S IOP="NULL",%IS=0 D ^%ZIS I '$D(IOT) S IOT=""
"RTN","XMRTCP",9,0)
HANG S IO(0)=IO,ZTQUEUED=$S($D(ZTQUEUED):ZTQUEUED,1:1),ZTSK=$S($D(ZTSK):ZTSK,1:"N/A"),XM="",XMLTCPT=""
"RTN","XMRTCP",10,0)
 I $G(^TMP("XMRTCP",0)) S XMLTCPT=^(0) K ^(0)
"RTN","XMRTCP",11,0)
L Q:$P(^XMB(1,1,0),U,18)=1
"RTN","XMRTCP",12,0)
 ;
"RTN","XMRTCP",13,0)
 ;Any queues flagged (x-ref is set by TCP/IP POLL FLAG in domain file)
"RTN","XMRTCP",14,0)
 S XMLTCPT=$O(^DIC(4.2,"ATCP",1,XMLTCPT)) G QQ:XMLTCPT=""
"RTN","XMRTCP",15,0)
 S (XMSCR,XMINST)=XMLTCPT
"RTN","XMRTCP",16,0)
 ;
"RTN","XMRTCP",17,0)
RQ ;Transmit messages / execute TURN command
"RTN","XMRTCP",18,0)
 ;Are there messages to send ?
"RTN","XMRTCP",19,0)
 I '$O(^XMB(3.7,.5,2,XMINST+1000,1,0)) G L
"RTN","XMRTCP",20,0)
 ;Job out, if all slots full wait and try again.
"RTN","XMRTCP",21,0)
 S %=$$CK(1) I '% S XMLTCPT=$O(^DIC(4.2,"ATCP",1,XMLTCPT),-1) H 60 G L
"RTN","XMRTCP",22,0)
 D SETUP L +^XMBX("TCPCHAN",XMINST):3 E  L -^XMBX("TCPCHAN-COUNT",%) G L
"RTN","XMRTCP",23,0)
 ;
"RTN","XMRTCP",24,0)
 S XMRTCP("CNT")=%
"RTN","XMRTCP",25,0)
 ;
"RTN","XMRTCP",26,0)
 ;Change name (prevent dupe error), then JOB myself
"RTN","XMRTCP",27,0)
 Q:$E($G(XMRTCP("NAME")),1,6)="MM-FTP"
"RTN","XMRTCP",28,0)
 S XMRTCP("NAME")="MM-TCP-"_XMINST D REN^XMRFTP
"RTN","XMRTCP",29,0)
 S X=^%ZOSF("ERRTN"),@^%ZOSF("TRAP")
"RTN","XMRTCP",30,0)
 ;
"RTN","XMRTCP",31,0)
 ;Deliver messages
"RTN","XMRTCP",32,0)
 ;
"RTN","XMRTCP",33,0)
 ;INIT
"RTN","XMRTCP",34,0)
 S (XMSITE,XMSCRN)=$P(^DIC(4.2,XMINST,0),"^")
"RTN","XMRTCP",35,0)
 D XMTCHECK^XMBPOST(XMINST,.XMB)
"RTN","XMRTCP",36,0)
 ;
"RTN","XMRTCP",37,0)
 ;Find and use TCP/IP channel script
"RTN","XMRTCP",38,0)
 S XMOKSCR("TCPCHAN")=""
"RTN","XMRTCP",39,0)
 S %=$G(XMB("SCRIPT",0))
"RTN","XMRTCP",40,0)
 I %="" D
"RTN","XMRTCP",41,0)
 . S %=$$SCR^XMBPOST(XMINST,.XMOKSCR,"") Q:%=""
"RTN","XMRTCP",42,0)
 . D XMB^XMBPOST
"RTN","XMRTCP",43,0)
 . S XMB("ITERATIONS")=0
"RTN","XMRTCP",44,0)
 . S XMB("FIRST SCRIPT")=XMB("SCRIPT",0)
"RTN","XMRTCP",45,0)
 E  I XMB("TRIES")'<$P($G(XMB("SCRIPT")),U,3) D
"RTN","XMRTCP",46,0)
 . S %=$$SCR^XMBPOST(XMINST,.XMOKSCR,%) Q:%=""
"RTN","XMRTCP",47,0)
 . D XMB^XMBPOST
"RTN","XMRTCP",48,0)
 . S XMB("TRIES",0,"$H")=$H
"RTN","XMRTCP",49,0)
 . S:XMB("SCRIPT",0)=XMB("FIRST SCRIPT") XMB("ITERATIONS")=XMB("ITERATIONS")+1
"RTN","XMRTCP",50,0)
 Q:%=""
"RTN","XMRTCP",51,0)
 ; If we've completed a cycle of scripts, wait until the "iterations"
"RTN","XMRTCP",52,0)
 ; number of hours has passed before we start the next cycle.
"RTN","XMRTCP",53,0)
 ; e.g. If we've completed 2 cycles, wait 2 hours before starting the
"RTN","XMRTCP",54,0)
 ; next cycle.
"RTN","XMRTCP",55,0)
 I XMB("ITERATIONS")>0,XMB("TRIES")=0,XMB("SCRIPT",0)=XMB("FIRST SCRIPT"),$$FMDIFF^XLFDT($$NOW^XLFDT,XMB("LASTTRY"),2)\60\60<XMB("ITERATIONS") G HALT
"RTN","XMRTCP",56,0)
 ; Check that last try is longer ago than number of tries in minutes.
"RTN","XMRTCP",57,0)
 ; e.g. If we've had 5 tries, wait 5 minutes before the next try.
"RTN","XMRTCP",58,0)
 E  I $G(XMB("LASTTRY")),$G(XMB("TRIES")),$$FMDIFF^XLFDT($$NOW^XLFDT,XMB("LASTTRY"),2)\60<XMB("TRIES") G HALT
"RTN","XMRTCP",59,0)
 S ZTIO=$P(XMB("SCRIPT"),U,5) ; $$SCR^XMBPOST makes sure piece 5 has data
"RTN","XMRTCP",60,0)
 S (%,Y)=XMB("SCRIPT",0)
"RTN","XMRTCP",61,0)
 S XMB("XMSCR")=XMSCR
"RTN","XMRTCP",62,0)
 S XMB("TRIES")=$G(XMB("TRIES"))+1
"RTN","XMRTCP",63,0)
 S $P(XMB("SCRIPT"),U,7)=$P(XMB("SCRIPT"),U,7)+1  ; Tries (again?)
"RTN","XMRTCP",64,0)
 S $P(XMB("SCRIPT"),U,8)=$P(XMB("SCRIPT"),U,8)+1  ; Errors
"RTN","XMRTCP",65,0)
 D XMTAUDIT^XMBPOST(.XMB)
"RTN","XMRTCP",66,0)
 S XMDIC="^DIC(4.2,"_XMSCR_",1,"_Y_",1,"
"RTN","XMRTCP",67,0)
 D ^XMC1
"RTN","XMRTCP",68,0)
 H 30
"RTN","XMRTCP",69,0)
 D KILL
"RTN","XMRTCP",70,0)
 G HALT
"RTN","XMRTCP",71,0)
 ;
"RTN","XMRTCP",72,0)
 ;Pause between POLLINGS
"RTN","XMRTCP",73,0)
QQ D KILL S X=$H*86400+$P($H,",",2) G:$O(^XMBX(4.2995,0)) FTP^XMRFTP
"RTN","XMRTCP",74,0)
 S X=22-($H*86400+$P($H,",",2)-X) I X>0 H X
"RTN","XMRTCP",75,0)
 G POLL
"RTN","XMRTCP",76,0)
 ;
"RTN","XMRTCP",77,0)
 ;Entry on dupe name
"RTN","XMRTCP",78,0)
DUPNAME S X="ERR^XMRTCP",@^%ZOSF("TRAP") H 15 G L
"RTN","XMRTCP",79,0)
 ;
"RTN","XMRTCP",80,0)
 ;Clean up before next transmission
"RTN","XMRTCP",81,0)
KILL D KL1^XMC K DIC,XMB,XMDT,ZTPAR
"RTN","XMRTCP",82,0)
 L  Q
"RTN","XMRTCP",83,0)
 ;
"RTN","XMRTCP",84,0)
SETUP ;Set up environment
"RTN","XMRTCP",85,0)
 N IO S IO="",IO(0)="" D DT^DICRW
"RTN","XMRTCP",86,0)
 Q
"RTN","XMRTCP",87,0)
ERR D @^%ZOSF("ERRTN") H 60
"RTN","XMRTCP",88,0)
 I '$F(":MM-TCP:MM-FTP:",":"_$E($G(XMRTCP("NAME")),1,6)_":") D KILL G POLL
"RTN","XMRTCP",89,0)
HALT L  ;Unlock all Locks
"RTN","XMRTCP",90,0)
 ;I ^%ZOSF("OS")["VAX" U IO:DISCONNECT
"RTN","XMRTCP",91,0)
 H
"RTN","XMRTCP",92,0)
 ;
"RTN","XMRTCP",93,0)
 ;Entry for Inet_servers interface RECEIVER
"RTN","XMRTCP",94,0)
 ;SMTP service request invokes MailMan
"RTN","XMRTCP",95,0)
 ;
"RTN","XMRTCP",96,0)
SOC25 S (XMRPORT,IO,IO(0))=%,X=$E(%_"-INETMM",1,15) D SETENV^%ZOSV
"RTN","XMRTCP",97,0)
 D DT^DICRW
"RTN","XMRTCP",98,0)
 S X="ERR^ZU",@^%ZOSF("TRAP"),ER=0
"RTN","XMRTCP",99,0)
 O IO:(SHARE,MAILBOX) U IO
"RTN","XMRTCP",100,0)
 S XMCHAN="TCP/IP-MAILMAN",XMNO220=""
"RTN","XMRTCP",101,0)
 D ENT^XMR0 G HALT
"RTN","XMRTCP",102,0)
 ;
"RTN","XMRTCP",103,0)
 ;Check if slot on TCP/IP to use
"RTN","XMRTCP",104,0)
CK(X) S I=$P(^XMB(1,1,0),"^",17)
"RTN","XMRTCP",105,0)
 F %=1:1 L +^XMBX("TCPCHAN-COUNT",%):1 Q:$T  Q:%=I
"RTN","XMRTCP",106,0)
 Q $S($T:%,1:0)
"RTN","XMRTCP",107,0)
JOB ;
"RTN","XMRTCP",108,0)
 H 90 ;wait for RVG mounts
"RTN","XMRTCP",109,0)
 S $P(^XMB(1,1,0),"^",18)="" ;Clear the TCP/IP poller run flag
"RTN","XMRTCP",110,0)
START G START^XMRTCPGO
"RTN","XMRTCP",111,0)
ERRSCRPT ;TRAP transmission errors
"RTN","XMRTCP",112,0)
 S ER=1
"RTN","XMRTCP",113,0)
 I ^%ZOSF("OS")["VAX DSM" S $ECODE=""
"RTN","XMRTCP",114,0)
 Q
"RTN","XMRUCX")
0^29^B504411
"RTN","XMRUCX",1,0)
XMRUCX ;(WASH ISC)/THM/CAP-SMTP REC'R [ARPANET RFC 821] for UCX ;08/05/96  14:46
"RTN","XMRUCX",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMRUCX",3,0)
 ;
"RTN","XMRUCX",4,0)
 ;Entry for Inet_servers interface RECEIVER
"RTN","XMRUCX",5,0)
 ;SMTP service request invokes MailMan
"RTN","XMRUCX",6,0)
 ;
"RTN","XMRUCX",7,0)
SOC25 S (XMRPORT,IO,IO(0))=%,X=$E(%_"-INETMM",1,15)
"RTN","XMRUCX",8,0)
 D SETENV^%ZOSV,DT^DICRW
"RTN","XMRUCX",9,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D R^XMCTRAP Q"
"RTN","XMRUCX",10,0)
 E  S X="R^XMCTRAP",@^%ZOSF("TRAP")
"RTN","XMRUCX",11,0)
 S ER=0
"RTN","XMRUCX",12,0)
 O IO:(SHARE) U IO
"RTN","XMRUCX",13,0)
 S XMCHAN="TCP/IP-MAILMAN",XMNO220=""
"RTN","XMRUCX",14,0)
 D ENT^XMR0 G HALT^XMRTCP
"RTN","XMS0")
0^4^B23585924
"RTN","XMS0",1,0)
XMS0 ;(WASH ISC)/THM/CAP-SEND DATA ;05/29/96  15:36
"RTN","XMS0",2,0)
 ;;7.1;MailMan;**13,8,20,23,27**;Jun 02, 1994
"RTN","XMS0",3,0)
GO ;
"RTN","XMS0",4,0)
 ;If VERSION 3.12 or later of VA MailMan:
"RTN","XMS0",5,0)
 ;  1. Send LOCAL ID of sender
"RTN","XMS0",6,0)
 ;  2. Process reply accordingly
"RTN","XMS0",7,0)
 ;
"RTN","XMS0",8,0)
 ;Send other Body parts
"RTN","XMS0",9,0)
 I $O(^XMB(3.9,XMZ,2005,0)) S XMBLOBER=0 D ^XMS0BLOB I XMBLOBER D RESET^XMS K XMBLOBER Q
"RTN","XMS0",10,0)
 ;
"RTN","XMS0",11,0)
 G Q:'$G(XMVA) I '$D(XMSLOCAL) G CHECK
"RTN","XMS0",12,0)
CONT G A:'$D(^XMB(3.9,XMZ,5)) S %=^(5) I %="" G ENTM^XMSM
"RTN","XMS0",13,0)
 G C:%?1.N.E,C:$P(%,"@")'?.E1".VA.GOV" S %=$P(%,"@",2)_"@"_$P(%,"@") G C
"RTN","XMS0",14,0)
A S %=$S($L($G(^XMB(3.9,XMZ,5))):^(5),1:XMZ_"@"_^XMB("NETNAME"))
"RTN","XMS0",15,0)
C S XMSG="MESS ID:"_% X XMSEN Q:ER  X XMREC Q:ER  G H:$E(XMRG,1,4)'="RSET"
"RTN","XMS0",16,0)
 S XMRZ=$P(XMRG,":",2),XMBT=0,XMSBT=$H*86400+$P($H,",",2),XMSG="DATA" X XMSEN Q:ER
"RTN","XMS0",17,0)
 I 'XMBT X XMREC Q:ER
"RTN","XMS0",18,0)
 S XMSG="" X XMSEN Q:ER
"RTN","XMS0",19,0)
 G D2^XMS0A
"RTN","XMS0",20,0)
 ;
"RTN","XMS0",21,0)
 ;SPECIAL MESSAGE CHARACTERISTICS
"RTN","XMS0",22,0)
H G Q:$G(XMR)="",Q:XMR=0
"RTN","XMS0",23,0)
 F J=6,7 D I:$P(XMR,U,J)'="" Q:ER
"RTN","XMS0",24,0)
 F J=5,9,11,12 D I:"Yy"[$E($P(XMR,U,J)_" ") Q:ER
"RTN","XMS0",25,0)
 Q:ER  G Q
"RTN","XMS0",26,0)
 ;
"RTN","XMS0",27,0)
I S ER=0,XMSG="MESS "_$P("^^^^CONFIRMATION^PRIORITY^TYPE^^CLOSED^^CONFIDENTIAL^INFO",U,J)_":"_$P(XMR,U,J)
"RTN","XMS0",28,0)
 X XMSEN Q:ER  X XMREC
"RTN","XMS0",29,0)
 Q
"RTN","XMS0",30,0)
Q G ^XMS0A
"RTN","XMS0",31,0)
 ;
"RTN","XMS0",32,0)
TURN ;TURN AROUND CHANNEL
"RTN","XMS0",33,0)
 K XMBLOCK,XMFROM,XMR,XMBCK
"RTN","XMS0",34,0)
 I $G(XMSDOM) S XMINST=XMSDOM
"RTN","XMS0",35,0)
 G Q:'$D(XMINST),Q:'$L(XMINST)
"RTN","XMS0",36,0)
 G QUIT:'($D(^XMBS(4.2999,XMINST,3))#10) S $P(^(3),U,1,6)="^^^^^"
"RTN","XMS0",37,0)
 S X=$P(^DIC(4.2,XMINST,0),U,16)
"RTN","XMS0",38,0)
 I $F("Yy",X)<2,'XMBT S XMSG="TURN" X XMSEN Q:ER  X XMREC Q:ER  I $E(XMRG)="2" S XMTRAN="Turning around receiver" D TRAN^XMC1 G INT^XMR
"RTN","XMS0",39,0)
 G QUIT
"RTN","XMS0",40,0)
ZTSK0 N XMDT,ZTSK S XMDT=ZTDTH D ZTSK0^XMBPOST
"RTN","XMS0",41,0)
 Q
"RTN","XMS0",42,0)
ZTSK ;TASK MANAGER COMES HERE TO SEND MESSAGE
"RTN","XMS0",43,0)
 K XMRDOM,XMSDOM
"RTN","XMS0",44,0)
 ;I $L(ION) S IOP=ION D ^%ZIS G REQ:POP S ZTIO(1)="D",ZTIO=ION D REQ^%ZTLOAD
"RTN","XMS0",45,0)
 S XM="",(XMINST,XMSCR)=XMB("XMSCR"),XMSCRN=XMB("XMSCRN"),XMZ=0
"RTN","XMS0",46,0)
 ;
"RTN","XMS0",47,0)
 ;Use correct script
"RTN","XMS0",48,0)
 S %=$G(XMB("SCRIPT",0))
"RTN","XMS0",49,0)
 S XMDIC="^DIC(4.2,XMSCR,1,"_$S(%:%,1:1)_",1,"
"RTN","XMS0",50,0)
 ;
"RTN","XMS0",51,0)
 S $P(^XMBS(4.2999,XMSCR,3),U,7)=ZTSK
"RTN","XMS0",52,0)
 I ZTSK'=$P(^XMBS(4.2999,XMSCR,0),U,2) N J S J=$P(^XMBS(4.2999,XMSCR,0),U,2) I J Q:$$CHK^XMS5(J,XMSCR)
"RTN","XMS0",53,0)
 I $D(XMB("XMIO")),XMIO="" S XMIO=XMB("XMIO")
"RTN","XMS0",54,0)
 D NEXT G:'$D(XMPOLL) KILL^XMB:XMZ'>0 ;DON'T PROCESS IF NOTHING IN QUEUE
"RTN","XMS0",55,0)
 I $D(XMB("SCRIPT")),$G(XMB("TRIES"))'<$P(XMB("SCRIPT"),U,3) S XMS0C=1
"RTN","XMS0",56,0)
 D ENT^XMC1 I $G(XMER) G REQ:'$D(XMPOLL),REQ:XMPOLL'="NOREQUE"
"RTN","XMS0",57,0)
 G KILL^XMB:'$O(^XMB(3.7,.5,2,XMINST+1000,1,0))
"RTN","XMS0",58,0)
 G REQ:'$D(XMPOLL),REQ:XMPOLL'="NOREQUE"
"RTN","XMS0",59,0)
 Q
"RTN","XMS0",60,0)
NEXT ;GET NEXT MESSAGE IN QUEUE
"RTN","XMS0",61,0)
 I $G(XMSDOM) S XMINST=XMSDOM
"RTN","XMS0",62,0)
 S I=$O(^XMB(3.7,.5,2,"AC",1,XMINST+1000,0))
"RTN","XMS0",63,0)
 I I,'$D(^XMB(3.7,.5,2,XMINST+1000,1,I)) K ^XMB(3.7,.5,2,"AC",1,XMINST+1000,I) S I="" G NEXT
"RTN","XMS0",64,0)
 S XMZ=$S(I:I,1:$O(^XMB(3.7,.5,2,XMINST+1000,1,XMZ))) G KILL^XMB:+XMZ=0
"RTN","XMS0",65,0)
 Q:$D(^XMB(3.9,XMZ,0))
"RTN","XMS0",66,0)
 S (XMKD,XMK)=XMINST+1000 D KLQ^XMA1B K XMKD G NEXT
"RTN","XMS0",67,0)
POST ;APPLY POSTAGE
"RTN","XMS0",68,0)
 Q:XMPOST=0
"RTN","XMS0",69,0)
 ;Set Postage here
"RTN","XMS0",70,0)
 Q
"RTN","XMS0",71,0)
REQ I '$D(ZTSK) G KILL^XMB
"RTN","XMS0",72,0)
 D KILL^%ZTLOAD
"RTN","XMS0",73,0)
 I '$D(XMB("TRIES")) S XMB("TRIES")=1
"RTN","XMS0",74,0)
 S XMB("TRIES",XMB("TRIES"))=$S($L($G(XMERMSG)):XMERMSG_" : ",1:"")_$S($D(XMB(4)):$E(XMB(4),1,245-$L($G(XMERMSG))),1:"UNKNOWN")
"RTN","XMS0",75,0)
 S Y=$P($H,",",2),X=Y+(300*$S($G(XMB("TRIES")):XMB("TRIES"),1:1)) I X-Y>999 S X=Y+600+$R(600)
"RTN","XMS0",76,0)
 S ZTDTH=$H+(X'<86400)_","_($P($H,",",2)+X#86400)
"RTN","XMS0",77,0)
 I $P($G(XMB("SCRIPT")),U,8)#$S($G(^XMB(1,1,"NETWORK")):^XMB(1,1,"NETWORK"),1:10)=0 D ENTE^XMSM
"RTN","XMS0",78,0)
 I $G(XMSDOM) S XMINST=XMSDOM K XMSDOM D ZTSK0 I $D(XMSITE) S XMTRAN=$S(XMSITE="":XMSCRN,1:XMSITE)_" Requeued" G TRAN^XMC1
"RTN","XMS0",79,0)
 S ZTREQ="" Q
"RTN","XMS0",80,0)
QUIT S XMSG="QUIT" X XMSEN Q:ER  X XMREC Q
"RTN","XMS0",81,0)
DATANO ;
"RTN","XMS0",82,0)
 I +XMRG=554 G R ;No Bulletin if 554 reject (duplicate)
"RTN","XMS0",83,0)
 I +XMRG=551 S XMRZ="Rejected - TOO LONG !" D ENT^XMSM1 G R
"RTN","XMS0",84,0)
 ;
"RTN","XMS0",85,0)
 ;BULLETIN - INTERFERES WITH PROPER SETTING OF RECIPIENT CHAIN STATUSES
"RTN","XMS0",86,0)
 ;
"RTN","XMS0",87,0)
ER S XMB="XMDATANO",XMB(1)=$P(^DIC(4.2,XMINST,0),U),XMB(2)=$P(^XMB(3.9,XMZ,0),U)_" ["_XMZ_"]"_$S($G(XMY)'="":"Recipient: "_XMY,1:""),XMB(3)=XMRG
"RTN","XMS0",88,0)
 S XMZHOLD=XMZ D TRASH^XMS,^XMB S XMZ=XMZHOLD K XMZHOLD
"RTN","XMS0",89,0)
R S XMTRAN=XMRG D TRAN^XMC1 G RESET^XMS
"RTN","XMS0",90,0)
 ;
"RTN","XMS0",91,0)
CHECK ;IF REMOTE SYSTEM CANNOT PASS MESSAGE QUALIFIERS
"RTN","XMS0",92,0)
 ;
"RTN","XMS0",93,0)
 I '$D(XMR) S XMR=^XMB(3.9,XMZ,0)
"RTN","XMS0",94,0)
 F I=5,9,11,12 I "Yy"[$E($P(XMR,U,I)_" ") G CQ
"RTN","XMS0",95,0)
 F I=6 I $P(XMR,U,I)'="" G CQ
"RTN","XMS0",96,0)
 G CONT:$D(XMSLOCAL),Q
"RTN","XMS0",97,0)
CQ S XMRG="Unable to accept messages with "_$P("^^^^CONFIRMATION REQUEST^PRIORITY^TYPE^^CLOSED status^^CONFIDENTIAL status^INFO status",U,I)_"."
"RTN","XMS0",98,0)
 S I=0 K XMY,XMY0,^TMP("XMY",$J),^TMP("XMY0",$J) D S G ER
"RTN","XMS0",99,0)
 ;
"RTN","XMS0",100,0)
S F I=0:0 S I=$O(XMJ(I)) Q:'I  D T K XMJ(I)
"RTN","XMS0",101,0)
 Q
"RTN","XMS0",102,0)
T Q:'$D(^XMB(3.9,XMZ,1,I,0))  N % S $P(^(0),U,6,7)=XMRG_U,%=$S('$D(^("F")):"",$L($P(^("F"),U,2)):$P(^("F"),U,2),1:"") I $L(%),%'["@",$O(^TMP("XMY",$J,""))="" S ^TMP("XMY",$J,%)=""
"RTN","XMS0",103,0)
 Q:$O(^TMP("XMY",$J,""))'=""  S X=$P(XMR,U,2) I +X=X S ^TMP("XMY",$J,X)=""
"RTN","XMS0",104,0)
 E  D WHOXM^XMA21
"RTN","XMS0",105,0)
 Q
"RTN","XMS5")
0^10^B28058971
"RTN","XMS5",1,0)
XMS5 ;(WASH ISC)/CAP/RM/AML-DISPLAY/TRANSMIT QUEUES ;10/17/96  06:43
"RTN","XMS5",2,0)
 ;;7.1;MailMan;**13,8,23,27**;Jun 02, 1994
"RTN","XMS5",3,0)
 ;ACTIVE
"RTN","XMS5",4,0)
ENT N XMDUZ K XMA
"RTN","XMS5",5,0)
 F Z=999:0 S Z=$O(^XMB(3.7,.5,2,Z)) Q:+Z'=Z  Q:Z>9999  I $P($G(^(Z,0)),U,5)>0  S XMK=Z,XMDUZ=.5 W:'$D(ZTQUEUED) "." S %=$$REN^XMA03(.5,Z)
"RTN","XMS5",6,0)
ENT1 S XMLROU="ZTSK^XMS5",ZTSAVE("XMA")=""
"RTN","XMS5",7,0)
 D ENT^XMA30 I POP K POP,ZTSAVE Q
"RTN","XMS5",8,0)
ZTSK K DIR S XMB0="",(XME0,XMD0)=0,DIR(0)="E",XM="D"
"RTN","XMS5",9,0)
 D NOW^%DTC K %I,%H S A=$E(%,6,7)_" "_$P("Jan^Feb^Mar^Apr^May^Jun^Jul^Aug^Sep^Oct^Nov^Dec",U,$E(%,4,5))_" "_$E(%,2,3)
"RTN","XMS5",10,0)
 I %\1'=% S %=$P(%,".",2)_"0000",A=A_" "_$E(%,1,2)_":"_$E(%,3,4)
"RTN","XMS5",11,0)
 S XMC0=A,XMC0("D")=0,XMC0("M")=0
"RTN","XMS5",12,0)
Q S XMB0=$O(^DIC(4.2,"B",$P(XMB0,U))) G END:XMB0="" S K=$O(^(XMB0,0))+1000 I $D(XMA) S XMB=$G(^XMBS(4.2999,K-1000,3)) G Q:XMB="" S X=$P(XMB,U),Y=$H-X*86400+$P($H,",",2)-$P(X,",",2) G Q:Y>599
"RTN","XMS5",13,0)
 S XMF0="",J=$S($D(^XMB(3.7,.5,2,K,0)):$P(^(0),U,5),1:0)
"RTN","XMS5",14,0)
 G:'$D(XMA) Q:J<1 S XMG0=J
"RTN","XMS5",15,0)
 I '$D(XMA) S $P(XMB,U,6)=$P(^DIC(4.2,K-1000,0),U,17) G W
"RTN","XMS5",16,0)
 G Q:$P(XMB,U,1,6)?.P S %H=$P(XMB,U) D YMD^%DTC
"RTN","XMS5",17,0)
 G W:$D(XMA) S %=$P(%H,",",2),%=%#3600\60/100+(%\3600)/100
"RTN","XMS5",18,0)
 S XMF0=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3) I % S XMF0=XMF0_" @ "_%
"RTN","XMS5",19,0)
W I XME0 G X:XMD0+5'>IOSL
"RTN","XMS5",20,0)
 I '$D(ZTQUEUED),IOST?1"C-".E I XME0 U IO(0) D ^DIR K DIRUT G END:X["^" U IO
"RTN","XMS5",21,0)
 D HD
"RTN","XMS5",22,0)
X S XMD0=XMD0+1,XMC0("D")=XMC0("D")+1 W !,$E($P(XMB0,U),1,18) G:$D(XMA) Q:'$D(XMB)
"RTN","XMS5",23,0)
 W ?19,$J(XMG0,4),?27,$P(XMB,U,6)
"RTN","XMS5",24,0)
 G M:'$D(XMA) I Y>180 S XMD0=XMD0+2 W ?42," == Appears Inactive - ",Y\60," Minutes",!,?42," == Analysis of device indicated." G M
"RTN","XMS5",25,0)
 I $P(XMB,U,4)<0 S $P(XMB,U,4)=""
"RTN","XMS5",26,0)
 I '$P(XMB,U,2) W ?44,"Connecting/Disconnecting"
"RTN","XMS5",27,0)
 E  W ?44,$P(XMB,U,2),?52," ",$P(XMB,U,3),?58," ",$P(XMB,U,7),?63,$J($P(XMB,U,4),6),?70,$J($P(XMB,U,5),8)
"RTN","XMS5",28,0)
M S XMC0("M")=XMC0("M")+XMG0 G Q
"RTN","XMS5",29,0)
HD S XMD0=5,XME0=XME0+1 W @IOF,!
"RTN","XMS5",30,0)
 I '$D(XMA) W "QUEUES WITH MESSAGES TO GO OUT"
"RTN","XMS5",31,0)
 E  W "QUEUES ACTIVELY TRANSMITTING MESSAGES"
"RTN","XMS5",32,0)
 W ?79-$L(XMC0),XMC0,!,"At "_^XMB("NETNAME"),?71,"Page: ",XME0,!
"RTN","XMS5",33,0)
 W !,"Domain",?16,"# Que'd" I '$D(XMA) W "    Physical Link"
"RTN","XMS5",34,0)
 I $D(XMA) W ?21,"  Device/Protocol",?44,"Msg #",?51,"Line  ZTSK  Errors  Rate C/S"
"RTN","XMS5",35,0)
 W ! Q
"RTN","XMS5",36,0)
END I 'XME0 D HD:IOST'?1"C".E W !,"No messages ",$P("queued^actively transmitting",U,$D(XMA)+1),!
"RTN","XMS5",37,0)
 E  W !!,"Total Domains: ",XMC0("D"),", Total Messages Queued: ",XMC0("M"),!!,"<<< END OF REPORT >>>"
"RTN","XMS5",38,0)
 K %,%H,%I,DIR,I,XMC0,K,XMB0,XMD0,XME0,XMF0,XMG0
"RTN","XMS5",39,0)
 I $D(IO(0)),IO(0)'=IO W @IOF
"RTN","XMS5",40,0)
 I $D(ZTQUEUED),$L(ZTSK) S ZTREQ="@" W @IOF Q
"RTN","XMS5",41,0)
 D ^%ZISC
"RTN","XMS5",42,0)
 Q
"RTN","XMS5",43,0)
GO ;DSP ALL
"RTN","XMS5",44,0)
 S XMA=1 G ENT1
"RTN","XMS5",45,0)
 ;;n/a;
"RTN","XMS5",46,0)
 ;
"RTN","XMS5",47,0)
TASK ;
"RTN","XMS5",48,0)
REQUE ;
"RTN","XMS5",49,0)
 K ^TMP($J,"ZTMKZ") S %=$G(XMDUZ)
"RTN","XMS5",50,0)
 N DIR,DIRUT,DTOUT,DUOUT,I,J,K,X,XMDUZ,Y,ZTD,ZTI,ZTQ,ZTS
"RTN","XMS5",51,0)
 S XMDUZ=$S($G(%):%,1:DUZ)
"RTN","XMS5",52,0)
 S I=999 F  D  Q:I=""
"RTN","XMS5",53,0)
 . S I=$O(^XMB(3.7,.5,2,I)) I $S(I'=+I:1,I>9999:1,I<1001:1,1:0) S I="" Q
"RTN","XMS5",54,0)
 . W:'$D(ZTQUEUED) "." I $O(^XMB(3.7,.5,2,I,1,0)) S K=I-1000 D
"RTN","XMS5",55,0)
 . . S J=$P($G(^XMBS(4.2999,K,0)),U,2) S:J J=$$CHK(J,K) I 'J S ^TMP($J,"ZTMKZ",$P(^DIC(4.2,K,0),U))=K
"RTN","XMS5",56,0)
 . Q
"RTN","XMS5",57,0)
 ;
"RTN","XMS5",58,0)
 ;W/Tasks
"RTN","XMS5",59,0)
 ;W:'$D(ZTQUEUED) !,"Wait for %ZTLOAD",!
"RTN","XMS5",60,0)
 ;D H F ZTS=0:0 S ZTS=$O(^%ZTSK(ZTS)) Q:'ZTS  S %=$S($D(^%ZTSK(ZTS,.1)):^(.1),1:"") I $S($L(%)'=1:1,"12345AG"[%:1,1:0),$D(^(.3,"XMB","XMSCRN"))#2 S ZTD=^("XMSCRN") K ^TMP($J,"ZTMKZ",ZTD)
"RTN","XMS5",61,0)
 ;
"RTN","XMS5",62,0)
 I '$D(ZTQUEUED) W !,"Some queues have no messages.",!
"RTN","XMS5",63,0)
 D H S ZTD="" F ZTI=2:1 S ZTD=$O(^TMP($J,"ZTMKZ",ZTD)) Q:ZTD=""  I '$O(^XMB(3.7,.5,2,^(ZTD)+1000,1,0)) K ^TMP($J,"ZTMKZ",ZTD)
"RTN","XMS5",64,0)
 I $O(^TMP($J,"ZTMKZ",""))="" W:'$D(ZTQUEUED) !!!,"<<<<  NO domains lack tasks !!! >>>",!!! Q
"RTN","XMS5",65,0)
 I '$D(ZTQUEUED) W !!,"These domains lack tasks."
"RTN","XMS5",66,0)
 I  S ZTD="" F ZTI=2:1 S ZTD=$O(^TMP($J,"ZTMKZ",ZTD)) Q:ZTD=""  S X=^(ZTD) W !?5,ZTD W:$P(^DIC(4.2,X,0),U,2)'["S" " << No Send Flag" I ZTI#20=0 S DIR(0)="E" D ^DIR K DIR,DIRUT
"RTN","XMS5",67,0)
 ;
"RTN","XMS5",68,0)
 ;
"RTN","XMS5",69,0)
 I '$D(ZTQUEUED) S DIR(0)="YO",DIR("A")="Requeue the missing tasks",DIR("B")="NO",DIR("?")="Answer YES to transmit these domains." D ^DIR K DIR,DIRUT I 'Y W !!,"Tasks not requeued." K ^TMP($J,"ZTMKZ") Q
"RTN","XMS5",70,0)
 ;
"RTN","XMS5",71,0)
 ;
"RTN","XMS5",72,0)
 S XMDUZ=$S($D(XMDUZ)[0:.5,'XMDUZ:.5,1:XMDUZ)
"RTN","XMS5",73,0)
 S XMS5="",XMS5("RETURN_TASK#")=1 F XMS5Z=0:0 S XMS5=$O(^TMP($J,"ZTMKZ",XMS5)) Q:XMS5=""  S XMSITE=XMS5,(XMINST,XMSCR)=^TMP($J,"ZTMKZ",XMS5) D Z
"RTN","XMS5",74,0)
 W:'$D(ZTQUEUED) !,"Done !" K XMS5,XMS5Z,^TMP($J,"ZTMKZ"),ZTD,ZTS Q
"RTN","XMS5",75,0)
H F I=1:1:9 H 1 W:'$D(ZTQUEUED) "."
"RTN","XMS5",76,0)
 Q
"RTN","XMS5",77,0)
CHK(ZTSK,XMINST) ;Is Task scheduled ? (0=no,.5=pending,1=running)
"RTN","XMS5",78,0)
 Q:'ZTSK 0
"RTN","XMS5",79,0)
 N % D STAT^%ZTLOAD
"RTN","XMS5",80,0)
 Q:ZTSK(1)=0 0  ; "Undefined"
"RTN","XMS5",81,0)
 Q:ZTSK(1)=1 .5  ; "Active: Pending"
"RTN","XMS5",82,0)
 I ZTSK(1)=2 N %1 D  L -^DIC(4.2,+$G(XMINST),"XMNETSEND") Q %1
"RTN","XMS5",83,0)
 . ; "Active: Running"
"RTN","XMS5",84,0)
 . L +^DIC(4.2,+$G(XMINST),"XMNETSEND"):2 ; Is it really running?
"RTN","XMS5",85,0)
 . I $T D KILL(XMINST,ZTSK) S %1=0 Q  ; Nope
"RTN","XMS5",86,0)
 . S %1=1  ; Yep
"RTN","XMS5",87,0)
 Q:ZTSK(1)=3 0  ; "Inactive: Finished"
"RTN","XMS5",88,0)
 I ZTSK(1)=4 D KILL(XMINST,ZTSK) Q 0  ; "Inactive: Available"
"RTN","XMS5",89,0)
 I ZTSK(1)=5 D KILL(XMINST,ZTSK) Q 0  ; "Interrupted"
"RTN","XMS5",90,0)
 Q
"RTN","XMS5",91,0)
KILL(XMINST,ZTSK) ;
"RTN","XMS5",92,0)
 D KILL^%ZTLOAD
"RTN","XMS5",93,0)
 S $P(^XMBS(4.2999,XMINST,0),U,2)=""  ; Task number
"RTN","XMS5",94,0)
 K ^XMBS(4.2999,XMINST,3)  ; Progress report
"RTN","XMS5",95,0)
 K ^XMBS(4.2999,XMINST,4)  ; Transmission data
"RTN","XMS5",96,0)
 K ^XMBS(4.2999,XMINST,5)  ; Transmission script
"RTN","XMS5",97,0)
 K ^XMBS(4.2999,XMINST,6)  ; Transmission audit
"RTN","XMS5",98,0)
 Q
"RTN","XMS5",99,0)
Z N % S %=$P(^DIC(4.2,XMINST,0),U,2)
"RTN","XMS5",100,0)
 I %["C"!(%["c")!(%["P")!(%["p") W:'$D(ZTQUEUED) !!,"Domain ",XMS5," has no send flag." Q
"RTN","XMS5",101,0)
 N XMB,ZTSK D ENQ^XMS1
"RTN","XMS5",102,0)
 I $G(ZTSK) W:'$D(ZTQUEUED) !!,"Task "_ZTSK_" queued for domain "_XMS5,! Q
"RTN","XMS5",103,0)
 I '$D(ZTQUEUED) W !!,"NO task queued for domain "_XMS5_"."
"RTN","XMS5",104,0)
 Q
"RTN","XMUT5C")
0^9^B5595905
"RTN","XMUT5C",1,0)
XMUT5C ;(WASH ISC)/CAP - RESPONSE TIME LOGGER/PURGE ;05/31/96  14:54
"RTN","XMUT5C",2,0)
 ;;7.1;MailMan;**27**;Jun 02, 1994
"RTN","XMUT5C",3,0)
 I '$D(ZTQUEUED) U IO(0) W !!,"Compiling Data..."
"RTN","XMUT5C",4,0)
 ;Entry for Tasked report
"RTN","XMUT5C",5,0)
 ;
"RTN","XMUT5C",6,0)
GO S XMV=^%ZOSF("PROD"),(D,Z)=0
"RTN","XMUT5C",7,0)
 ;
"RTN","XMUT5C",8,0)
 ;Are there statistics to gather ?  Only gather statistics till T-1.
"RTN","XMUT5C",9,0)
 ;
"RTN","XMUT5C",10,0)
 ;Is there a date ?
"RTN","XMUT5C",11,0)
Z S Z=$O(^%ZRTL(3,XMV,Z)) G Q:$H-Z'>0,Q:Z=""
"RTN","XMUT5C",12,0)
 ;Is there Response Time data for MailMan ?
"RTN","XMUT5C",13,0)
 S J=$O(^%ZRTL(3,XMV,Z,"XMA1-DEL/TERM",0)) D S:J
"RTN","XMUT5C",14,0)
 ;
"RTN","XMUT5C",15,0)
 ;Kill off Response time data for this date (stored in XMBX now)
"RTN","XMUT5C",16,0)
 K ^%ZRTL(3,XMV,Z,"XMA1-DEL/TERM") G Z
"RTN","XMUT5C",17,0)
 ;
"RTN","XMUT5C",18,0)
 ;Gather 1 days' statistics
"RTN","XMUT5C",19,0)
S S %H=Z D YMD^%DTC S (E,XMA)=X,S=0
"RTN","XMUT5C",20,0)
 I '$D(ZTQUEUED) W !,"DATE="_$E(XMA,4,5)_"/"_$E(XMA,6,7),! S D=D+1
"RTN","XMUT5C",21,0)
0 S XMA=$O(^XMBX(4.2998,"B",XMA)) I $S('XMA:1,XMA-E>.999:1,1:0) Q
"RTN","XMUT5C",22,0)
 S %=$P(XMA,".",2),L=$E(%,1,2)*3600+($E(%,3,4)*60)+$E(%,5,6),(C,T)=0 D G
"RTN","XMUT5C",23,0)
 S %=$O(^XMBX(4.2998,"B",XMA,0)),$P(^XMBX(4.2998,%,0),U,8)=$S(C>0:$FN(T/C,"",1),1:"")
"RTN","XMUT5C",24,0)
 G 0
"RTN","XMUT5C",25,0)
 ;
"RTN","XMUT5C",26,0)
 ;Get response time out of %ZRTL
"RTN","XMUT5C",27,0)
G S S=$O(^%ZRTL(3,XMV,Z,"XMA1-DEL/TERM",S)) Q:S=""  I S>L S S=L Q
"RTN","XMUT5C",28,0)
 S %=^(S),C=C+1,T=S-$P($P(%,"^"),",",2)+T I '$D(ZTQUEUED),C#100=0 W "."
"RTN","XMUT5C",29,0)
 G G
"RTN","XMUT5C",30,0)
 ;
"RTN","XMUT5C",31,0)
 ;Write totals and quit
"RTN","XMUT5C",32,0)
Q I '$D(ZTQUEUED) W !!,?2,$S(D:D_" Dates Processed and Purged",1:"<<<< Nothing to process >>>>"),!
"RTN","XMUT5C",33,0)
 K %,%H,%I,C,D,E,J,L,S,T,X,Y,Z,XMA,XMC,XMD,XMV
"RTN","XMUT5C",34,0)
 Q
"RTN","XMUT5C",35,0)
ZTSK S ZTRTN="GO^XMUT5C",ZTDTH=$S($D(ZTQUEUED):1,1:0)+$H_","_(3600*18),ZTDESC="Response Time accumulator for file 4.2998",ZTIO="" D ^%ZTLOAD
"RTN","XMUT5C",36,0)
 Q
"RTN","XMUT5C",37,0)
 ;Turn ON response time logging
"RTN","XMUT5C",38,0)
LOGON S X="y" D LOG
"RTN","XMUT5C",39,0)
 ;Schedule next task
"RTN","XMUT5C",40,0)
 K ZTREQ S ZTIO="",ZTRTN="LOGOFF^XMUT5C",X=$P($H,",",2),ZTDESC="Turn OFF response Time Logging"
"RTN","XMUT5C",41,0)
 K % I X<28800 S %=+$H_",29100"
"RTN","XMUT5C",42,0)
 I X>57600 S %=$H+1_",29100"
"RTN","XMUT5C",43,0)
 I $D(%) S ZTDTH=%
"RTN","XMUT5C",44,0)
 E  S %=$H*86400+X+300,ZTDTH=%\86400_","_(%#86400)
"RTN","XMUT5C",45,0)
 D ^%ZTLOAD S ZTREQ="@" Q
"RTN","XMUT5C",46,0)
 ;Turn OFF response time logging
"RTN","XMUT5C",47,0)
LOGOFF S X="n"
"RTN","XMUT5C",48,0)
 ;Update Kernel Site Parameters LOG RESPONSE TIME FIELD
"RTN","XMUT5C",49,0)
LOG L +^XTV(8989.3,1)
"RTN","XMUT5C",50,0)
 S %=^%ZOSF("VOL"),%=$O(^XTV(8989.3,1,4,"B",%,0)),$P(^XTV(8989.3,1,4,%,0),U,6)=X
"RTN","XMUT5C",51,0)
 L -^XTV(8989.3,1) K %,X S ZTREQ="@"
"RTN","XMUT5C",52,0)
 Q
"UP",4.2,4.21,-1)
4.2^1
"UP",4.2,4.21,0)
4.21
"UP",4.2999,4.29992,-1)
4.2999^6
"UP",4.2999,4.29992,0)
4.29992
"VER")
8.0^21.0
"^DD",4.2,4.21,1.5,0)
OUT OF SERVICE^S^0:in service;1:out of service;^0;7^Q
"^DD",4.2,4.21,1.5,3)
 If you don't want this script to be used, set this field to 1; otherwise leave it blank or set it to zero.
"^DD",4.2,4.21,1.5,21,0)
^^2^2^2960716^
"^DD",4.2,4.21,1.5,21,1,0)
This is the preferred field to set to take a script out of service,
"^DD",4.2,4.21,1.5,21,2,0)
to prevent it from being used.
"^DD",4.2,4.21,1.5,"DT")
2960718
"^DD",4.2999,4.2999,41,0)
XMIT START DATE/TIME^D^^4;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",4.2999,4.2999,41,3)
This is the date/time that the transmission process started.
"^DD",4.2999,4.2999,41,21,0)
^^2^2^2960529^^
"^DD",4.2999,4.2999,41,21,1,0)
This field helps MailMan determine, after a fatal error, whether to start the
"^DD",4.2999,4.2999,41,21,2,0)
transmission process at script 1, try 1, or to start it elsewhere.
"^DD",4.2999,4.2999,41,"DT")
2960529
"^DD",4.2999,4.2999,42,0)
XMIT FINISH DATE/TIME^D^^4;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",4.2999,4.2999,42,3)
Date/time transmission process started/ended
"^DD",4.2999,4.2999,42,21,0)
^^1^1^2960529^
"^DD",4.2999,4.2999,42,21,1,0)
This may be useful information for debugging purposes.
"^DD",4.2999,4.2999,42,"DT")
2960529
"^DD",4.2999,4.2999,43,0)
XMIT SCRIPT^NJ3,0^^4;3^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
"^DD",4.2999,4.2999,43,3)
IEN (0-100) of TRANSMISSION SCRIPT (4.21) record within DOMAIN file (4.2)
"^DD",4.2999,4.2999,43,21,0)
^^1^1^2960529^
"^DD",4.2999,4.2999,43,21,1,0)
This tells MailMan which script is/was being used.
"^DD",4.2999,4.2999,43,"DT")
2960529
"^DD",4.2999,4.2999,44,0)
XMIT TRIES^NJ3,0^^4;4^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
"^DD",4.2999,4.2999,44,3)
Type a Number between 0 and 100, 0 Decimal Digits
"^DD",4.2999,4.2999,44,21,0)
^^1^1^2960529^
"^DD",4.2999,4.2999,44,21,1,0)
This tells MailMan how many tries have been made with the current script.
"^DD",4.2999,4.2999,44,"DT")
2960529
"^DD",4.2999,4.2999,45,0)
XMIT LATEST TRY DATE/TIME^D^^4;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",4.2999,4.2999,45,3)
Enter date/time of latest transmission attempt
"^DD",4.2999,4.2999,45,21,0)
^^1^1^2960529^
"^DD",4.2999,4.2999,45,21,1,0)
This may be useful information for debugging purposes.
"^DD",4.2999,4.2999,45,"DT")
2960529
"^DD",4.2999,4.2999,46,0)
XMIT SCRIPT CYCLE ITERATIONS^NJ3,0^^4;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",4.2999,4.2999,46,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",4.2999,4.2999,46,21,0)
^^2^2^2960809^^
"^DD",4.2999,4.2999,46,21,1,0)
This is the number of script cycles we have tried.  This field starts off at 0.
"^DD",4.2999,4.2999,46,21,2,0)
After we have tried all the scripts available, we bump up this field by 1.
"^DD",4.2999,4.2999,46,"DT")
2960809
"^DD",4.2999,4.2999,47,0)
XMIT FIRST SCRIPT^NJ3,0^^4;7^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
"^DD",4.2999,4.2999,47,3)
Type a Number between 1 and 100, 0 Decimal Digits
"^DD",4.2999,4.2999,47,21,0)
^^2^2^2960809^
"^DD",4.2999,4.2999,47,21,1,0)
This field notes which script has the highest priority, that is, which script
"^DD",4.2999,4.2999,47,21,2,0)
was tried first.
"^DD",4.2999,4.2999,47,"DT")
2960809
"^DD",4.2999,4.2999,51,0)
XMIT SCRIPT RECORD^F^^5;E1,245^K:$L(X)>245!($L(X)<10) X
"^DD",4.2999,4.2999,51,3)
Answer must be 10-245 characters in length.
"^DD",4.2999,4.2999,51,21,0)
^^1^1^2960529^
"^DD",4.2999,4.2999,51,21,1,0)
This is a copy of the zeronode of the latest script used.
"^DD",4.2999,4.2999,51,"DT")
2960529
"^DD",4.2999,4.2999,60,0)
XMIT AUDIT^4.29992D^^6;0
"^DD",4.2999,4.2999,60,21,0)
^^2^2^2960614^^
"^DD",4.2999,4.2999,60,21,1,0)
This multiple contains an audit of the attempts that have been made during
"^DD",4.2999,4.2999,60,21,2,0)
this transmission.
"^DD",4.2999,4.29992,0)
XMIT AUDIT SUB-FIELD^^1^2
"^DD",4.2999,4.29992,0,"DT")
2960614
"^DD",4.2999,4.29992,0,"NM","XMIT AUDIT")

"^DD",4.2999,4.29992,0,"UP")
4.2999
"^DD",4.2999,4.29992,.01,0)
XMIT AUDIT DATE/TIME^MD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",4.2999,4.29992,.01,1,0)
^.1^^0
"^DD",4.2999,4.29992,.01,21,0)
^^1^1^2960614^^
"^DD",4.2999,4.29992,.01,21,1,0)
This is the date/time of the start of this attempt.
"^DD",4.2999,4.29992,.01,"DT")
2960614
"^DD",4.2999,4.29992,1,0)
XMIT AUDIT SCRIPT NAME^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",4.2999,4.29992,1,3)
Answer must be 1-10 characters in length.
"^DD",4.2999,4.29992,1,21,0)
^^1^1^2960614^
"^DD",4.2999,4.29992,1,21,1,0)
This is the name of the script being used for this attempt.
"^DD",4.2999,4.29992,1,"DT")
2960614
**END**
**END**
