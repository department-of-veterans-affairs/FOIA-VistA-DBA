Released XU*8*30 SEQ #22
Extracted from mail message
**KIDS**:XU*8.0*30^

**INSTALL NAME**
XU*8.0*30
"BLD",98,0)
XU*8.0*30^KERNEL^0^2960508^n
"BLD",98,1,0)
^^45^45^2960508^
"BLD",98,1,1,0)
 This Kernel patch  contains the following features:
"BLD",98,1,2,0)

"BLD",98,1,3,0)
-KIDS will now save Patch names that contain Sequence numbers in the
"BLD",98,1,4,0)
 Patch Application History field of the Package file.
"BLD",98,1,5,0)
-KIDS will now check for duplicate Version numbers and Patch names when
"BLD",98,1,6,0)
 updating the Package file.
"BLD",98,1,7,0)
-KIDS will now clean up missing Files in the Build file. This is done when
"BLD",98,1,8,0)
 using the 'Verify a Build' option.
"BLD",98,1,9,0)
-Fixes problem in NOIS ELP-0596-70080, couldn't restart install if install
"BLD",98,1,10,0)
 was queued and it got an error during install.
"BLD",98,1,11,0)
===========================================================================
"BLD",98,1,12,0)

"BLD",98,1,13,0)
This patch should be installed during off-peak hours. Users can be on the
"BLD",98,1,14,0)
system, but no user should be using KIDS during the install of this patch.
"BLD",98,1,15,0)
===========================================================================
"BLD",98,1,16,0)
  
"BLD",98,1,17,0)
INSTALLATION:
"BLD",98,1,18,0)
  1.  These routines are usually mapped on systems that allow mapping,
"BLD",98,1,19,0)
      so you will need to disable mapping for the effected routines.
"BLD",98,1,20,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",98,1,21,0)
      option will load the KIDS package onto your system.
"BLD",98,1,22,0)
  3.  The patch has now been loaded into a Transport global on your
"BLD",98,1,23,0)
      system. You now need to use KIDS to install the Transport global.
"BLD",98,1,24,0)
  4.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",98,1,25,0)
      options:
"BLD",98,1,26,0)
         Print Transport Global
"BLD",98,1,27,0)
         Compare Transport Global to Current System
"BLD",98,1,28,0)
         Verify Checksums in Transport Global
"BLD",98,1,29,0)
         Backup a Transport Global
"BLD",98,1,30,0)
         Install Package(s)
"BLD",98,1,31,0)
  5.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"BLD",98,1,32,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"BLD",98,1,33,0)
  6.  AXP Sites, after patch has installed, rebuild your map set.
"BLD",98,1,34,0)
 ====================================================================  
"BLD",98,1,35,0)
  
"BLD",98,1,36,0)
 ROUTINES:
"BLD",98,1,37,0)
   The second line of the routine now looks like:
"BLD",98,1,38,0)
       ;;8.0;KERNEL;**[patch list]**;Jul 10, 1995
"BLD",98,1,39,0)
 
"BLD",98,1,40,0)
 Name           Checksum        Patch List
"BLD",98,1,41,0)
 -----------------------------------------------------------
"BLD",98,1,42,0)
 XPDIP          9952535         15,21,28,30
"BLD",98,1,43,0)
 XPDIR          2689416         30
"BLD",98,1,44,0)
 XPDV           9093649         30
"BLD",98,1,45,0)
 ============================================================================
"BLD",98,4,0)
^9.64PA^^
"BLD",98,"KRN",0)
^9.67PA^8994^15
"BLD",98,"KRN",.4,0)
.4
"BLD",98,"KRN",.401,0)
.401
"BLD",98,"KRN",.402,0)
.402
"BLD",98,"KRN",.403,0)
.403
"BLD",98,"KRN",.5,0)
.5
"BLD",98,"KRN",.84,0)
.84
"BLD",98,"KRN",3.6,0)
3.6
"BLD",98,"KRN",9.2,0)
9.2
"BLD",98,"KRN",9.8,0)
9.8
"BLD",98,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",98,"KRN",9.8,"NM",1,0)
XPDIP^^0^B35172053
"BLD",98,"KRN",9.8,"NM",2,0)
XPDIR^^0^B3941294
"BLD",98,"KRN",9.8,"NM",3,0)
XPDV^^0^B22031045
"BLD",98,"KRN",9.8,"NM","B","XPDIP",1)

"BLD",98,"KRN",9.8,"NM","B","XPDIR",2)

"BLD",98,"KRN",9.8,"NM","B","XPDV",3)

"BLD",98,"KRN",19,0)
19
"BLD",98,"KRN",19.1,0)
19.1
"BLD",98,"KRN",101,0)
101
"BLD",98,"KRN",409.61,0)
409.61
"BLD",98,"KRN",8994,0)
8994
"BLD",98,"KRN",8995,0)
8995
"BLD",98,"KRN","B",.4,.4)

"BLD",98,"KRN","B",.401,.401)

"BLD",98,"KRN","B",.402,.402)

"BLD",98,"KRN","B",.403,.403)

"BLD",98,"KRN","B",.5,.5)

"BLD",98,"KRN","B",.84,.84)

"BLD",98,"KRN","B",3.6,3.6)

"BLD",98,"KRN","B",9.2,9.2)

"BLD",98,"KRN","B",9.8,9.8)

"BLD",98,"KRN","B",19,19)

"BLD",98,"KRN","B",19.1,19.1)

"BLD",98,"KRN","B",101,101)

"BLD",98,"KRN","B",409.61,409.61)

"BLD",98,"KRN","B",8994,8994)

"BLD",98,"KRN","B",8995,8995)

"PKG",283,-1)
1^1
"PKG",283,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",283,22,0)
^9.49I^1^1
"PKG",283,22,1,0)
8.0^2950729^2950729^6
"PKG",283,22,1,"PAH",1,0)
30^2960508
"PKG",283,22,1,"PAH",1,1,0)
^^45^45^2960508
"PKG",283,22,1,"PAH",1,1,1,0)
 This Kernel patch  contains the following features:
"PKG",283,22,1,"PAH",1,1,2,0)

"PKG",283,22,1,"PAH",1,1,3,0)
-KIDS will now save Patch names that contain Sequence numbers in the
"PKG",283,22,1,"PAH",1,1,4,0)
 Patch Application History field of the Package file.
"PKG",283,22,1,"PAH",1,1,5,0)
-KIDS will now check for duplicate Version numbers and Patch names when
"PKG",283,22,1,"PAH",1,1,6,0)
 updating the Package file.
"PKG",283,22,1,"PAH",1,1,7,0)
-KIDS will now clean up missing Files in the Build file. This is done when
"PKG",283,22,1,"PAH",1,1,8,0)
 using the 'Verify a Build' option.
"PKG",283,22,1,"PAH",1,1,9,0)
-Fixes problem in NOIS ELP-0596-70080, couldn't restart install if install
"PKG",283,22,1,"PAH",1,1,10,0)
 was queued and it got an error during install.
"PKG",283,22,1,"PAH",1,1,11,0)
===========================================================================
"PKG",283,22,1,"PAH",1,1,12,0)

"PKG",283,22,1,"PAH",1,1,13,0)
This patch should be installed during off-peak hours. Users can be on the
"PKG",283,22,1,"PAH",1,1,14,0)
system, but no user should be using KIDS during the install of this patch.
"PKG",283,22,1,"PAH",1,1,15,0)
===========================================================================
"PKG",283,22,1,"PAH",1,1,16,0)
  
"PKG",283,22,1,"PAH",1,1,17,0)
INSTALLATION:
"PKG",283,22,1,"PAH",1,1,18,0)
  1.  These routines are usually mapped on systems that allow mapping,
"PKG",283,22,1,"PAH",1,1,19,0)
      so you will need to disable mapping for the effected routines.
"PKG",283,22,1,"PAH",1,1,20,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",283,22,1,"PAH",1,1,21,0)
      option will load the KIDS package onto your system.
"PKG",283,22,1,"PAH",1,1,22,0)
  3.  The patch has now been loaded into a Transport global on your
"PKG",283,22,1,"PAH",1,1,23,0)
      system. You now need to use KIDS to install the Transport global.
"PKG",283,22,1,"PAH",1,1,24,0)
  4.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",283,22,1,"PAH",1,1,25,0)
      options:
"PKG",283,22,1,"PAH",1,1,26,0)
         Print Transport Global
"PKG",283,22,1,"PAH",1,1,27,0)
         Compare Transport Global to Current System
"PKG",283,22,1,"PAH",1,1,28,0)
         Verify Checksums in Transport Global
"PKG",283,22,1,"PAH",1,1,29,0)
         Backup a Transport Global
"PKG",283,22,1,"PAH",1,1,30,0)
         Install Package(s)
"PKG",283,22,1,"PAH",1,1,31,0)
  5.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"PKG",283,22,1,"PAH",1,1,32,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"PKG",283,22,1,"PAH",1,1,33,0)
  6.  AXP Sites, after patch has installed, rebuild your map set.
"PKG",283,22,1,"PAH",1,1,34,0)
 ====================================================================  
"PKG",283,22,1,"PAH",1,1,35,0)
  
"PKG",283,22,1,"PAH",1,1,36,0)
 ROUTINES:
"PKG",283,22,1,"PAH",1,1,37,0)
   The second line of the routine now looks like:
"PKG",283,22,1,"PAH",1,1,38,0)
       ;;8.0;KERNEL;**[patch list]**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,39,0)
 
"PKG",283,22,1,"PAH",1,1,40,0)
 Name           Checksum        Patch List
"PKG",283,22,1,"PAH",1,1,41,0)
 -----------------------------------------------------------
"PKG",283,22,1,"PAH",1,1,42,0)
 XPDIP          9952535         15,21,28,30
"PKG",283,22,1,"PAH",1,1,43,0)
 XPDIR          2689416         30
"PKG",283,22,1,"PAH",1,1,44,0)
 XPDV           9093649         30
"PKG",283,22,1,"PAH",1,1,45,0)
 ============================================================================
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","XPDIP")
0^1^B35172053
"RTN","XPDIP",1,0)
XPDIP ;SFISC/RSD - Install Package & Routine file ;05/07/96  15:03
"RTN","XPDIP",2,0)
 ;;8.0;KERNEL;**15,21,28,30**;Jul 10, 1995
"RTN","XPDIP",3,0)
 Q
"RTN","XPDIP",4,0)
PKG ;
"RTN","XPDIP",5,0)
 N %,OLDA,DA,DIK,XPD,XPDFIL,XPDPKG,XPDBLDA,Y
"RTN","XPDIP",6,0)
 ;update variable for graphic display
"RTN","XPDIP",7,0)
 I $D(XPDIDVT) S XPDIDTOT=10,XPDIDMOD=1,XPDIDCNT=0 D:XPDIDVT UPDATE^XPDID(0)
"RTN","XPDIP",8,0)
 ;XPDPKG=ien of Package file
"RTN","XPDIP",9,0)
 S XPDPKG=+$P(^XPD(9.7,XPDA,0),U,2),OLDA=+$O(^XTMP("XPDI",XPDA,"PKG",0)),Y=$G(^(OLDA,0))
"RTN","XPDIP",10,0)
 ;Package file entry not sent, XPDPKG=0
"RTN","XPDIP",11,0)
 G:'OLDA PKGEND
"RTN","XPDIP",12,0)
 ;if package already exist, then update version multiple
"RTN","XPDIP",13,0)
 I XPDPKG,$D(^DIC(9.4,XPDPKG,0)) S DA=XPDPKG D PKGV G PKGH
"RTN","XPDIP",14,0)
 ;PKGEND if Package entry wasn't added
"RTN","XPDIP",15,0)
 D  G:'XPDPKG PKGEND
"RTN","XPDIP",16,0)
 .Q:'$L(Y)
"RTN","XPDIP",17,0)
 .S Y=$P(Y,U),XPDFIL=9.4,Y=$$DIC^XPDIK(9.4,Y) Q:'Y
"RTN","XPDIP",18,0)
 .S (DA,XPDPKG)=+Y
"RTN","XPDIP",19,0)
 .;if new entry in package file, bring in everything
"RTN","XPDIP",20,0)
 .I $P(Y,U,3) D
"RTN","XPDIP",21,0)
 ..M ^DIC(9.4,XPDPKG)=^XTMP("XPDI",XPDA,"PKG",OLDA)
"RTN","XPDIP",22,0)
 ..;kill the -1 flag node first
"RTN","XPDIP",23,0)
 ..K ^DIC(9.4,XPDPKG,-1)
"RTN","XPDIP",24,0)
 ..;re-cross ref after adding a new package
"RTN","XPDIP",25,0)
 ..S DIK="^DIC(9.4," D IX1^DIK
"RTN","XPDIP",26,0)
 .;add package to file 9.7
"RTN","XPDIP",27,0)
 .K XPD S XPD(9.7,XPDA_",",1)=+XPDPKG D FILE^DIE("","XPD")
"RTN","XPDIP",28,0)
 .I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+2 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",29,0)
 .D PKGV
"RTN","XPDIP",30,0)
PKGH I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+2 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",31,0)
 S %=$P(^DIC(9.4,XPDPKG,0),U,4)
"RTN","XPDIP",32,0)
 ;repoint Help Frame (0;4)
"RTN","XPDIP",33,0)
 I $L(%),'% S $P(^DIC(9.4,XPDPKG,0),U,4)=$$LK^XPDIA("^DIC(9.2)",%),DIK="^DIC(9.4," D IX1^DIK
"RTN","XPDIP",34,0)
 ;OERR Package Parameter multiple in file 100.99
"RTN","XPDIP",35,0)
 D:$D(^ORD(100.99))&$D(^XTMP("XPDI",XPDA,"OER",OLDA))
"RTN","XPDIP",36,0)
 .S DA(1)=1,DIK="^ORD(100.99,1,5," D:$D(^ORD(100.99,1,5,DA)) ^DIK
"RTN","XPDIP",37,0)
 .S:'$D(^ORD(100.99,1,5,0)) ^ORD(100.99,1,5,0)=U_$P(^DD(100.99,5,0),U,2) S $P(^(0),U,3,4)=DA_U_($P(^(0),U,3)+1)
"RTN","XPDIP",38,0)
 .M ^ORD(100.99,1,5,DA)=^XTMP("XPDI",XPDA,"OER",OLDA) S $P(^(DA,0),U)=DA,%=$P(^(0),U,4)
"RTN","XPDIP",39,0)
 .S:$L(%) $P(^ORD(100.99,1,5,DA,0),U,4)=$$LK^XPDIA("^ORD(100.98)",%)
"RTN","XPDIP",40,0)
 .D IX1^DIK
"RTN","XPDIP",41,0)
PKGEND S XPDBLDA=$$BLD(XPDBLD) Q:'XPDBLDA
"RTN","XPDIP",42,0)
 ;move Alpha/Beta testing info to Kernel site para file
"RTN","XPDIP",43,0)
 I XPDPKG S %=$G(^XPD(9.6,XPDBLDA,"ABPKG")) D
"RTN","XPDIP",44,0)
 .;Install message and they have an address, set flag in XPDIST
"RTN","XPDIP",45,0)
 .I $P(%,U)="y",$P(%,U,2)="y",$L($P(%,U,3)) S $P(XPDIST,U,2)=$P(%,U,3)
"RTN","XPDIP",46,0)
 .D EN^XQABLOAD(XPDBLDA)
"RTN","XPDIP",47,0)
 Q
"RTN","XPDIP",48,0)
BLD(XPDBLD) ;add Build entry, XPDBLD=Build ien in ^XTMP("XPDI",XPDA,"BLD",
"RTN","XPDIP",49,0)
 N DA,DIK,XPDFIL,Y
"RTN","XPDIP",50,0)
 I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+4 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",51,0)
 ;XPDBLD=Build ien in ^XTMP, set in XPDIJ
"RTN","XPDIP",52,0)
 S XPDFIL=9.6,Y=$$DIC^XPDIK(9.6,XPDNM) Q:'Y ""
"RTN","XPDIP",53,0)
 S DA=+Y
"RTN","XPDIP",54,0)
 ;XPDPKG=Package file ien, could be 0 if no package file
"RTN","XPDIP",55,0)
 K:'$P(Y,U,3) ^XPD(9.6,DA),^XPD(9.6,"C",XPDPKG,DA)
"RTN","XPDIP",56,0)
 M ^XPD(9.6,DA)=^XTMP("XPDI",XPDA,"BLD",XPDBLD)
"RTN","XPDIP",57,0)
 ;reset Package File Link (0;2)
"RTN","XPDIP",58,0)
 ;XPDIST = national site tracking^A/B install message address
"RTN","XPDIP",59,0)
 S $P(^XPD(9.6,DA,0),U,2)=$S(XPDPKG:XPDPKG,1:"") S:$P(^(0),U,5)="y" XPDIST=1
"RTN","XPDIP",60,0)
 ;re-index cross-ref. on fields .01 and 1
"RTN","XPDIP",61,0)
 S DIK="^XPD(9.6," F Y=.01,1 S DIK(1)=Y D EN1^DIK
"RTN","XPDIP",62,0)
 I $D(XPDIDVT) D UPDATE^XPDID(XPDIDTOT)
"RTN","XPDIP",63,0)
 Q DA
"RTN","XPDIP",64,0)
 ;
"RTN","XPDIP",65,0)
 ;update the version multiple in the package file
"RTN","XPDIP",66,0)
PKGV N %
"RTN","XPDIP",67,0)
 I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+2 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",68,0)
 ;%=ien in the Version multiple_U_ien in Patch multiple in ^XTMP
"RTN","XPDIP",69,0)
 S %=$G(^XTMP("XPDI",XPDA,"PKG",OLDA,-1))
"RTN","XPDIP",70,0)
 I XPDNM'["*" D  Q
"RTN","XPDIP",71,0)
 .S %=+% Q:'$D(^XTMP("XPDI",XPDA,"PKG",OLDA,22,%,0))  S %=^(0) S:$D(^(1)) %(1)=$NA(^(1))
"RTN","XPDIP",72,0)
 .S $P(%,U,3,4)=DT_U_DUZ,%=$$PKGVER(DA,.%)
"RTN","XPDIP",73,0)
 ;update patch history multiple
"RTN","XPDIP",74,0)
 Q:'$D(^XTMP("XPDI",XPDA,"PKG",OLDA,22,+%,"PAH",+$P(%,U,2),0))  S %=$P(^(0),U) S:$D(^(1)) %(1)=$NA(^(1))
"RTN","XPDIP",75,0)
 S:$P(^XPD(9.7,XPDA,2),XPDNM,2)["SEQ #" %=%_$P(^(2),XPDNM,2)
"RTN","XPDIP",76,0)
 S $P(%,U,2,3)=DT_U_DUZ,%=$$PKGPAT(DA,$$VER^XPDUTL(XPDNM),.%)
"RTN","XPDIP",77,0)
 Q
"RTN","XPDIP",78,0)
 ;
"RTN","XPDIP",79,0)
PKGVER(XPDA,XPDI) ;update version in package file, XPDA=ien, return ien
"RTN","XPDIP",80,0)
 ;XPDI=version^date distr.^date installed^install by
"RTN","XPDIP",81,0)
 ;XPDI(1)=root of description field
"RTN","XPDIP",82,0)
 N I,X,XPD,XPDIEN,XPDJ,XPDV
"RTN","XPDIP",83,0)
 S XPDIEN=","_XPDA_",",XPDV=$$MDIC(9.49,XPDIEN,$P(XPDI,U)) Q:'XPDV 0
"RTN","XPDIP",84,0)
 S XPD(9.4,XPDA_",",13)=$P(XPDI,U),X="XPD(9.49,"""_XPDV_XPDIEN_""")"
"RTN","XPDIP",85,0)
 F I=1:1:3 S:$P(XPDI,U,I+1)]"" @X@(I)=$P(XPDI,U,I+1)
"RTN","XPDIP",86,0)
 S:$D(XPDI(1)) @X@(41)=XPDI(1)
"RTN","XPDIP",87,0)
 D FILE^DIE("","XPD")
"RTN","XPDIP",88,0)
 Q XPDV
"RTN","XPDIP",89,0)
 ;
"RTN","XPDIP",90,0)
PKGPAT(XPDA,XPDV,XPDI) ;update patch history, XPDA=ien, XPDV=version
"RTN","XPDIP",91,0)
 ;XPDI=patch^date installed^install by,   returns version ien^patch ien
"RTN","XPDIP",92,0)
 N I,X,XPD,XPDP
"RTN","XPDIP",93,0)
 ;quit if we can't find the version multiple, resets XPDV=ien of version
"RTN","XPDIP",94,0)
 S XPDIEN=","_XPDA_",",XPDV=$$MDIC(9.49,XPDIEN,XPDV) Q:'XPDV 0
"RTN","XPDIP",95,0)
 S XPDIEN=","_XPDV_XPDIEN,XPDP=$$MDIC(9.4901,XPDIEN,$P(XPDI,U)) Q:'XPDP 0
"RTN","XPDIP",96,0)
 S X="XPD(9.4901,"""_XPDP_XPDIEN_""")"
"RTN","XPDIP",97,0)
 F I=.02,.03 S:$P(XPDI,U,I*100)]"" @X@(I)=$P(XPDI,U,I*100)
"RTN","XPDIP",98,0)
 S:$D(XPDI(1)) @X@(1)=XPDI(1)
"RTN","XPDIP",99,0)
 D FILE^DIE("","XPD")
"RTN","XPDIP",100,0)
 Q XPDV_U_XPDP
"RTN","XPDIP",101,0)
 ;
"RTN","XPDIP",102,0)
 ;XPDF=subfile #,XPDIEN=ien string, X=input
"RTN","XPDIP",103,0)
MDIC(XPDF,XPDIEN,XPDX) ;
"RTN","XPDIP",104,0)
 N DIERR,XPD,XPDN
"RTN","XPDIP",105,0)
 D FIND^DIC(XPDF,XPDIEN,"","XQf",XPDX,5,"","","","XPD")
"RTN","XPDIP",106,0)
 ;one or more matches, just return first one
"RTN","XPDIP",107,0)
 I $G(XPD(0)) D:XPD(0)>1  Q XPD(1)
"RTN","XPDIP",108,0)
 .N %
"RTN","XPDIP",109,0)
 .S %(1)=$P(^DD(XPDF,.01,0),U)_"  "_XPDX_"  is Duplicated,",%(2)=" only ien #"_XPD(1)_" was updated."
"RTN","XPDIP",110,0)
 .D MES^XPDUTL(.%)
"RTN","XPDIP",111,0)
 ;add a new entry
"RTN","XPDIP",112,0)
 S XPDN(XPDF,"+1"_XPDIEN,.01)=XPDX K XPD
"RTN","XPDIP",113,0)
 D UPDATE^DIE("","XPDN","XPD")
"RTN","XPDIP",114,0)
 I '$G(XPD(1)) D BMES^XPDUTL(" "_$P(^DD(XPDF,.01,0),U)_" "_XPDX_" **Couldn't Add to file**") Q 0
"RTN","XPDIP",115,0)
 Q XPD(1)
"RTN","XPDIP",116,0)
 ;
"RTN","XPDIP",117,0)
RTN ;move rtns to install file
"RTN","XPDIP",118,0)
 N XPD,XPDC,XPDCR,XPDI,XPDJ,XPDK,XPDL,XPDM,XPDR,XPDRH,X
"RTN","XPDIP",119,0)
 K ^XPD(9.7,XPDA,"RTN"),^TMP($J)
"RTN","XPDIP",120,0)
 S (XPDC,XPDCR,XPDRH)=0,XPDJ=""
"RTN","XPDIP",121,0)
 ;get all routines that were loaded, XPDM=action
"RTN","XPDIP",122,0)
 ;actions are 0=load, 1=delete, 2=skip
"RTN","XPDIP",123,0)
 F  S XPDJ=$O(^XTMP("XPDI",XPDA,"RTN",XPDJ)) Q:XPDJ=""  S XPDM=^(XPDJ) D:'XPDM
"RTN","XPDIP",124,0)
 .;XPD, build array to update ROUTINE multiple in INSTALL file
"RTN","XPDIP",125,0)
 .S XPDC=XPDC+1,^TMP($J,"XPDL",XPDC)=XPDC,^TMP($J,"XPD",9.704,"+"_XPDC_","_XPDA_",",.01)=XPDJ
"RTN","XPDIP",126,0)
 .;XPDR, build array to update ROUTINE file
"RTN","XPDIP",127,0)
 .S:'$D(^DIC(9.8,"B",XPDJ)) XPDCR=XPDCR+1,^TMP($J,"XPDR",9.8,"?+"_XPDCR_",",.01)=XPDJ,^(1)="R"
"RTN","XPDIP",128,0)
 ;if we are doing VT graphic display, update only 40%
"RTN","XPDIP",129,0)
 I $D(XPDIDVT) S XPDIDCNT=XPDIDTOT*.4 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",130,0)
 F XPDK="DIKZ","DIEZ","DIPZ" D
"RTN","XPDIP",131,0)
 .S XPDI=0
"RTN","XPDIP",132,0)
 .;loop thru list of compile template routines
"RTN","XPDIP",133,0)
 .;XTMP("XPDI",XPDA,"DIKZ",ien,routine name)
"RTN","XPDIP",134,0)
 .F  S XPDI=$O(^XTMP("XPDI",XPDA,XPDK,XPDI)),XPDJ="" Q:'XPDI  D
"RTN","XPDIP",135,0)
 ..I 'XPDRH D BMES^XPDUTL(" The following Routines were created during this install:") S XPDRH=1
"RTN","XPDIP",136,0)
 ..F  S XPDJ=$O(^XTMP("XPDI",XPDA,XPDK,XPDI,XPDJ)) Q:XPDJ=""  D:'$D(^XTMP("XPDI",XPDA,"RTN",XPDJ))
"RTN","XPDIP",137,0)
 ...S XPDC=XPDC+1,^TMP($J,"XPDL",XPDC)=XPDC,^TMP($J,"XPD",9.704,"+"_XPDC_","_XPDA_",",.01)=XPDJ
"RTN","XPDIP",138,0)
 ...D MES^XPDUTL("     "_XPDJ)
"RTN","XPDIP",139,0)
 ;update routine multiple in Install file with routines and
"RTN","XPDIP",140,0)
 ;compile template routines
"RTN","XPDIP",141,0)
 I $D(^TMP($J,"XPD"))>9 D
"RTN","XPDIP",142,0)
 .D UPDATE^DIE("","^TMP($J,""XPD"")","^TMP($J,""XPDL"")")
"RTN","XPDIP",143,0)
 .;if we are doing VT graphic display, update only 40%
"RTN","XPDIP",144,0)
 .I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+(XPDIDTOT*.40) D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",145,0)
 ;update Routine file
"RTN","XPDIP",146,0)
 D:$D(^TMP($J,"XPDR"))>9 UPDATE^DIE("","^TMP($J,""XPDR"")")
"RTN","XPDIP",147,0)
 ;if we are doing VT graphic display, update 100%
"RTN","XPDIP",148,0)
 I $D(XPDIDVT) D UPDATE^XPDID(XPDIDTOT)
"RTN","XPDIP",149,0)
 Q
"RTN","XPDIR")
0^2^B3941294
"RTN","XPDIR",1,0)
XPDIR ;SFISC/RSD - Install Restart; 3 May 96 15:22 ;05/03/96  15:42
"RTN","XPDIR",2,0)
 ;;8.0;KERNEL;**30**;Jul 10, 1995
"RTN","XPDIR",3,0)
EN ;restart install
"RTN","XPDIR",4,0)
 N DIR,DIRUT,POP,XPD,XPDA,XPDD,XPDIJ,XPDDIQ,XPDNM,XPDNOQUE,XPDPKG,XPDST,XPDSET,XPDT,XPDQUIT,XPDQUES,Y,ZTSK,%
"RTN","XPDIR",5,0)
 S %="I $P(^(0),U,9)#3,$D(^XPD(9.7,""ASP"",Y,1,Y)),$D(^XTMP(""XPDI"",Y))",XPDST=$$LOOK^XPDI(%) Q:'XPDST!$D(XPDQUIT)
"RTN","XPDIR",6,0)
 S ZTSK=$P(^XPD(9.7,XPDST,0),U,6) D:ZTSK
"RTN","XPDIR",7,0)
 .;check if task exist or is queued
"RTN","XPDIR",8,0)
 .D ISQED^%ZTLOAD
"RTN","XPDIR",9,0)
 .;task is queued to run
"RTN","XPDIR",10,0)
 .Q:ZTSK(0)
"RTN","XPDIR",11,0)
 .;task doesn't exist, k ZTSK so it can be re-scheduled
"RTN","XPDIR",12,0)
 .I ZTSK(0)="" K ZTSK Q
"RTN","XPDIR",13,0)
 .D STAT^%ZTLOAD
"RTN","XPDIR",14,0)
 .;task is not define
"RTN","XPDIR",15,0)
 .I 'ZTSK(1) K ZTSK Q
"RTN","XPDIR",16,0)
 .;task is queued to run
"RTN","XPDIR",17,0)
 .Q:ZTSK(1)=1
"RTN","XPDIR",18,0)
 .;task is running, set quit flag
"RTN","XPDIR",19,0)
 .I ZTSK(1)=2 S XPDQUIT=1 W !,"Install is currently running, cannot re-install!" Q
"RTN","XPDIR",20,0)
 .;task finished or was interrupted, kill it so it can be rescheduled
"RTN","XPDIR",21,0)
 .D KILL^%ZTLOAD K ZTSK Q
"RTN","XPDIR",22,0)
 ;abort if there is nothing to install or they '^'
"RTN","XPDIR",23,0)
 G:'$O(XPDT(0))!$D(XPDQUIT) ABORT
"RTN","XPDIR",24,0)
 ;clean out old task, so they can reinstall
"RTN","XPDIR",25,0)
 I '$D(ZTSK) D
"RTN","XPDIR",26,0)
 .N XPD
"RTN","XPDIR",27,0)
 .S XPD(9.7,XPDST_",",5)=""  D FILE^DIE("","XPD")
"RTN","XPDIR",28,0)
 I $G(ZTSK) W !!,"This install is already queued as task #",ZTSK,!,"Please use the Taskman Menu if you want to reschedule." Q
"RTN","XPDIR",29,0)
 ;kill XPDT array so that while in XPDI and ABORT is called, nothing is deleted
"RTN","XPDIR",30,0)
 S XPDIJ=0,XPDA=XPDST K XPDT
"RTN","XPDIR",31,0)
 G DEV^XPDI
"RTN","XPDIR",32,0)
 Q
"RTN","XPDIR",33,0)
ABORT W !!,"**RESTART ABORTED**",!
"RTN","XPDIR",34,0)
 Q
"RTN","XPDV")
0^3^B22031045
"RTN","XPDV",1,0)
XPDV ;SFISC/RSD - Verify Build ;05/07/96  08:54
"RTN","XPDV",2,0)
 ;;8.0;KERNEL;**30**;Jul 10, 1995
"RTN","XPDV",3,0)
 ;checks that everything is ready to do a build
"RTN","XPDV",4,0)
 ;XPDA=build ien, loop thru all nodes in ^XPD(9.6,XPDA and verify data
"RTN","XPDV",5,0)
EN ;check a build
"RTN","XPDV",6,0)
 N DA,FGR,TYPE,XPDFILE,XPDOLDA,Y0,Y2 K ^TMP($J)
"RTN","XPDV",7,0)
 S Y0=$G(^XPD(9.6,XPDA,0)),TYPE=$P(Y0,U,3)
"RTN","XPDV",8,0)
 I $P(Y0,U,2),'$D(^DIC(9.4,$P(Y0,U,2),0)) W !,$P(Y0,U,2)," in PACKAGE File  ** NOT FOUND **",*7
"RTN","XPDV",9,0)
 ;type is global package goto CONT
"RTN","XPDV",10,0)
 G:TYPE=2 CONT
"RTN","XPDV",11,0)
 S XPDFILE=0
"RTN","XPDV",12,0)
 ;check DD being sent
"RTN","XPDV",13,0)
 F  S XPDFILE=$O(^XPD(9.6,XPDA,4,XPDFILE)) Q:'XPDFILE  D
"RTN","XPDV",14,0)
 .Q:$$FILE(XPDFILE)=""
"RTN","XPDV",15,0)
 .S Y0=0,Y2=$G(^XPD(9.6,XPDA,4,XPDFILE,222))
"RTN","XPDV",16,0)
 .Q:$$DATA(XPDFILE,Y2)
"RTN","XPDV",17,0)
 .F  S Y0=$O(^XPD(9.6,XPDA,4,XPDFILE,2,Y0)) Q:'Y0  D
"RTN","XPDV",18,0)
 ..I '$D(^DD(Y0)) W !," SubDD #",Y0," in File #",XPDFILE,"  ** NOT FOUND **" Q
"RTN","XPDV",19,0)
 ..S XPDOLDA=0
"RTN","XPDV",20,0)
 ..;check fields being sent for partial DD
"RTN","XPDV",21,0)
 ..F  S XPDOLDA=$O(^XPD(9.6,XPDA,4,XPDFILE,2,Y0,1,XPDOLDA)) Q:'XPDOLDA  D
"RTN","XPDV",22,0)
 ...I '$D(^DD(Y0,XPDOLDA)) W !,"Field #",XPDOLDA," in SubDD #",Y0," in File #",XPDFILE,"  ** NOT FOUND **" Q
"RTN","XPDV",23,0)
 ;
"RTN","XPDV",24,0)
 ;build components files
"RTN","XPDV",25,0)
 S XPDFILE=0
"RTN","XPDV",26,0)
 F  S XPDFILE=$O(^XPD(9.6,XPDA,"KRN",XPDFILE)) Q:'XPDFILE  D
"RTN","XPDV",27,0)
 .;if file doesn't exist, save in ^TMP and deleted at end
"RTN","XPDV",28,0)
 .S FGR=$$FILE(XPDFILE),XPDOLDA=0 I FGR="" S ^TMP($J,XPDFILE)="" Q
"RTN","XPDV",29,0)
 .F  S XPDOLDA=$O(^XPD(9.6,XPDA,"KRN",XPDFILE,"NM",XPDOLDA)) Q:'XPDOLDA  S Y0=$G(^(XPDOLDA,0)) D
"RTN","XPDV",30,0)
 ..;quit if deleting at site
"RTN","XPDV",31,0)
 ..Q:$P(Y0,U,3)=1
"RTN","XPDV",32,0)
 ..S:$P(Y0,U,2) $P(Y0,U)=$P(Y0,"    FILE #") S DA=$$ENTRY(Y0)
"RTN","XPDV",33,0)
 ;check Install Questions
"RTN","XPDV",34,0)
 S XPDOLDA=0
"RTN","XPDV",35,0)
 F  S XPDOLDA=$O(^XPD(9.6,XPDA,"QUES",XPDOLDA)) Q:'XPDOLDA  S Y0=$G(^(XPDOLDA,0)),Y2=$G(^(1)) D
"RTN","XPDV",36,0)
 .I $P(Y0,U)="" W !,"Zero node doesn't exist for INSTALL QUESTION #",XPDOLDA Q
"RTN","XPDV",37,0)
 .I Y2="" W !,"DIR(0) field is not defined for INSTALL QUESTION ",$P(Y0,U)
"RTN","XPDV",38,0)
 I $O(^XPD(9.6,XPDA,"GLO",0)) W !,"Package cannot contain Globals, Files, & Components."
"RTN","XPDV",39,0)
 ;check for PRE & POST routines
"RTN","XPDV",40,0)
 F DA="INI","INIT" S Y0=$G(^XPD(9.6,XPDA,DA)) I Y0]"",'$$RTN(Y0) W !,"Routine ",Y0," ** NOT FOUND **"
"RTN","XPDV",41,0)
CONT ;
"RTN","XPDV",42,0)
 ;check Environment Check routine
"RTN","XPDV",43,0)
 S Y0=$G(^XPD(9.6,XPDA,"PRE")) I Y0]"",'$$RTN(Y0) W !,"Routine ",Y0," ** NOT FOUND **"
"RTN","XPDV",44,0)
 I TYPE=2 S Y0=$$GLOPKG(XPDA)
"RTN","XPDV",45,0)
DONE I $O(^TMP($J,0)) D
"RTN","XPDV",46,0)
 .N DA,DIK,DIR,DIRUT,Y
"RTN","XPDV",47,0)
 .S DIR(0)="Y",DIR("A")="Do you want to remove the missing Files",DIR("B")="NO"
"RTN","XPDV",48,0)
 .S DIR("?")="Yes means that the missing Files will be removed and you can transport this Build"
"RTN","XPDV",49,0)
 .D ^DIR Q:'Y!$D(DIRUT)
"RTN","XPDV",50,0)
 .S DIK="^XPD(9.6,"_XPDA_",""KRN"",",DA(1)=XPDA,DA=0 F  S DA=$O(^TMP($J,DA)) Q:'DA  D ^DIK
"RTN","XPDV",51,0)
 W !!,"  ** DONE **"
"RTN","XPDV",52,0)
 Q
"RTN","XPDV",53,0)
GLOPKG(X) ;GLOBAL PACKAGE
"RTN","XPDV",54,0)
 N I,J,Y,Z S Z=1
"RTN","XPDV",55,0)
 I $O(^XPD(9.6,X,4,0)) W !,"GLOBAL PACKAGE cannot contain Files" S Z=0
"RTN","XPDV",56,0)
 S I=0 F  S I=$O(^XPD(9.6,X,"KRN",I)) Q:'I  D:$O(^(I,"NM",0))
"RTN","XPDV",57,0)
 .W !,"GLOBAL PACKAGE cannot contain ",$P(^DIC(I,0),U) S Z=0
"RTN","XPDV",58,0)
 I $O(^XPD(9.6,X,"QUES",0)) W !,"GLOBAL PACKAGE cannot contain Install Questions" S Z=0
"RTN","XPDV",59,0)
 I $G(^XPD(9.6,X,"INI"))]"" W !,"GLOBAL PACKAGE cannot have a Pre-Install Routine" S Z=0
"RTN","XPDV",60,0)
 ;I $G(^XPD(9.6,X,"INIT"))]"" W !,"GLOBAL PACKAGE cannot have a Post-Install Routine" S Z=0
"RTN","XPDV",61,0)
 S I=0 F J=0:1 S I=$O(^XPD(9.6,X,"GLO",I)) Q:'I  S Y=$G(^(I,0)) D
"RTN","XPDV",62,0)
 .I $P(Y,U)]"",'$D(@("^"_$P(Y,U))) W !,"Global ",Y," doesn't exist." S Z=0
"RTN","XPDV",63,0)
 I 'J W !,"No Globals to transport" S Z=0
"RTN","XPDV",64,0)
 Q Z
"RTN","XPDV",65,0)
 ;
"RTN","XPDV",66,0)
QUES(X) ;X=.01 of INSTALL QUESTION multiple
"RTN","XPDV",67,0)
 N Y
"RTN","XPDV",68,0)
 S Y=+$O(^XPD(9.6,XPDA,"QUES","B",X,0))
"RTN","XPDV",69,0)
 I '$D(^XPD(9.6,XPDA,"QUES",Y,0)) W !,"Zero node doesn't exist for INSTALL QUESTION ",X Q 0
"RTN","XPDV",70,0)
 I '$D(^XPD(9.6,XPDA,"QUES",Y,1)) W !,"DIR(0) field is not defined for INSTALL QUESTION ",X Q 0
"RTN","XPDV",71,0)
 Q Y
"RTN","XPDV",72,0)
 ;
"RTN","XPDV",73,0)
FILE(X) ;check file # X and returns global ref
"RTN","XPDV",74,0)
 N %,Y
"RTN","XPDV",75,0)
 S Y=$G(^DIC(X,0,"GL"))
"RTN","XPDV",76,0)
 I Y="" W !," File #",X,"  ** NOT FOUND **" Q ""
"RTN","XPDV",77,0)
 S %=$E(Y,$L(Y)),X=$E(Y,1,$L(Y)-1)_$S(%="(":"",1:")")
"RTN","XPDV",78,0)
 Q X
"RTN","XPDV",79,0)
 ;
"RTN","XPDV",80,0)
 ;Z only contains the file # for Fileman templates and forms
"RTN","XPDV",81,0)
 ;XPDFILE=file #,FGR=file global ref
"RTN","XPDV",82,0)
ENTRY(Z) ;check entry, Z=name^file
"RTN","XPDV",83,0)
 N F,X,Y
"RTN","XPDV",84,0)
 ;check for X, name, in "B" x-ref of file.
"RTN","XPDV",85,0)
 S X=$P(Z,U),Y=0 F  S Y=$O(@FGR@("B",X,Y)) D  Q:X=""
"RTN","XPDV",86,0)
 .I 'Y W !?3,X,"  in ",$P(^DIC(XPDFILE,0),U)," File   ** NOT FOUND **",*7 S X="" Q
"RTN","XPDV",87,0)
 .;if Y is in x-ref but node doesn't exist, quit and try another
"RTN","XPDV",88,0)
 .;if this is a fileman template, the file associated with it is piece 2 of Z
"RTN","XPDV",89,0)
 .;if Form file check piece 8 else 4
"RTN","XPDV",90,0)
 .Q:'$D(@FGR@(Y,0))  I $P(Z,U,2) S F=^(0) S:$P(Z,U,2)=$P(F,U,(4+(4*(FGR["DIST")))) X="" Q
"RTN","XPDV",91,0)
 .;if it is routine file,9.8, check that routine exist
"RTN","XPDV",92,0)
 .I XPDFILE=9.8 Q:'$$RTN(X)
"RTN","XPDV",93,0)
 .;if this is not a fileman template or routine we found Y
"RTN","XPDV",94,0)
 .S X="" Q
"RTN","XPDV",95,0)
 Q Y
"RTN","XPDV",96,0)
 ;
"RTN","XPDV",97,0)
DATA(F,Y) ;
"RTN","XPDV",98,0)
 I $P(Y,U,3)="p",$P(Y,U,7)="y" W !,"You can only send Data with a Full Data Dictionary,",!,"** File #",F," cannot be Sent **" Q 1
"RTN","XPDV",99,0)
 Q 0
"RTN","XPDV",100,0)
 ;
"RTN","XPDV",101,0)
RTN(X) ;verify tag^routine exist, 1=yes, 0=no
"RTN","XPDV",102,0)
 I X'[U Q $T(^@X)]""
"RTN","XPDV",103,0)
 Q $T(@$P(X,U)^@$P(X,U,2))]""
"VER")
8.0^21.0
**END**
**END**
