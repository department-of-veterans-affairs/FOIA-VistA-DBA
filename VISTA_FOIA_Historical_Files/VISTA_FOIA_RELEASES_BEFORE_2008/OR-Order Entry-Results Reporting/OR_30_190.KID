KIDS Distribution saved on Jun 21, 2004@08:18:59
GUI 24 Released
**KIDS**:OR*3.0*190^

**INSTALL NAME**
OR*3.0*190
"BLD",16446,0)
OR*3.0*190^ORDER ENTRY/RESULTS REPORTING^0^3040621^y
"BLD",16446,4,0)
^9.64PA^101.24^3
"BLD",16446,4,100,0)
100
"BLD",16446,4,100,2,0)
^9.641^100^1
"BLD",16446,4,100,2,100,0)
ORDER  (File-top level)
"BLD",16446,4,100,2,100,1,0)
^9.6411^57^2
"BLD",16446,4,100,2,100,1,8.1,0)
TYPE
"BLD",16446,4,100,2,100,1,57,0)
COMBAT VETERAN
"BLD",16446,4,100,222)
y^n^p^^^^n^^n
"BLD",16446,4,100,224)

"BLD",16446,4,101.24,0)
101.24
"BLD",16446,4,101.24,222)
n^n^f^^y^^y^r^n
"BLD",16446,4,101.24,224)
I $P(^ORD(101.24,+Y,0),"^")="ORCV APPOINTMENTS"
"BLD",16446,4,101.41,0)
101.41
"BLD",16446,4,101.41,222)
n^n^f^^y^^y^r^n
"BLD",16446,4,101.41,224)
I $P(^(0),"^")="PS MEDS"!($P(^(0),"^")="PSH OERR")
"BLD",16446,4,"APDD",100,100)

"BLD",16446,4,"APDD",100,100,8.1)

"BLD",16446,4,"APDD",100,100,57)

"BLD",16446,4,"B",100,100)

"BLD",16446,4,"B",101.24,101.24)

"BLD",16446,4,"B",101.41,101.41)

"BLD",16446,"ABPKG")
n
"BLD",16446,"INI")
PRE^ORY190
"BLD",16446,"INID")
^^n
"BLD",16446,"INIT")
POST^ORY190
"BLD",16446,"KRN",0)
^9.67PA^8989.52^19
"BLD",16446,"KRN",.4,0)
.4
"BLD",16446,"KRN",.4,"NM",0)
^9.68A^^
"BLD",16446,"KRN",.401,0)
.401
"BLD",16446,"KRN",.402,0)
.402
"BLD",16446,"KRN",.403,0)
.403
"BLD",16446,"KRN",.5,0)
.5
"BLD",16446,"KRN",.84,0)
.84
"BLD",16446,"KRN",.84,"NM",0)
^9.68A^^
"BLD",16446,"KRN",3.6,0)
3.6
"BLD",16446,"KRN",3.8,0)
3.8
"BLD",16446,"KRN",9.2,0)
9.2
"BLD",16446,"KRN",9.8,0)
9.8
"BLD",16446,"KRN",9.8,"NM",0)
^9.68A^77^62
"BLD",16446,"KRN",9.8,"NM",2,0)
ORWDPS5^^0^B3422338
"BLD",16446,"KRN",9.8,"NM",3,0)
ORCDPSH^^0^B15721733
"BLD",16446,"KRN",9.8,"NM",6,0)
ORMBLD^^0^B39557652
"BLD",16446,"KRN",9.8,"NM",7,0)
ORMBLDPS^^0^B58238373
"BLD",16446,"KRN",9.8,"NM",9,0)
ORWDAL32^^0^B16535139
"BLD",16446,"KRN",9.8,"NM",10,0)
ORWDBA1^^0^B59127892
"BLD",16446,"KRN",9.8,"NM",12,0)
ORQ21^^0^B22235244
"BLD",16446,"KRN",9.8,"NM",14,0)
ORCACT4^^0^B47676938
"BLD",16446,"KRN",9.8,"NM",15,0)
ORCMED^^0^B40461468
"BLD",16446,"KRN",9.8,"NM",16,0)
ORCSAVE^^0^B60436590
"BLD",16446,"KRN",9.8,"NM",20,0)
ORMPS2^^0^B33632444
"BLD",16446,"KRN",9.8,"NM",21,0)
ORMBLDGM^^0^B4563377
"BLD",16446,"KRN",9.8,"NM",22,0)
ORMBLDLR^^0^B19628908
"BLD",16446,"KRN",9.8,"NM",23,0)
ORMBLDRA^^0^B8026162
"BLD",16446,"KRN",9.8,"NM",24,0)
ORCACT0^^0^B47902492
"BLD",16446,"KRN",9.8,"NM",28,0)
ORWSR^^0^B21774260
"BLD",16446,"KRN",9.8,"NM",29,0)
ORWPT^^0^B59057766
"BLD",16446,"KRN",9.8,"NM",30,0)
ORWPS^^0^B35516120
"BLD",16446,"KRN",9.8,"NM",31,0)
ORDD43^^0^B35300161
"BLD",16446,"KRN",9.8,"NM",33,0)
ORWDX^^0^B71800907
"BLD",16446,"KRN",9.8,"NM",34,0)
ORWDXM3^^0^B34529571
"BLD",16446,"KRN",9.8,"NM",35,0)
ORWDXR^^0^B32338211
"BLD",16446,"KRN",9.8,"NM",36,0)
ORWDXR01^^0^B13737892
"BLD",16446,"KRN",9.8,"NM",37,0)
ORPRF^^0^B8382678
"BLD",16446,"KRN",9.8,"NM",38,0)
ORMPS1^^0^B61975902
"BLD",16446,"KRN",9.8,"NM",39,0)
ORCDPS3^^0^B35426713
"BLD",16446,"KRN",9.8,"NM",40,0)
ORCSAVE2^^0^B44373911
"BLD",16446,"KRN",9.8,"NM",41,0)
ORWDPS4^^0^B16415294
"BLD",16446,"KRN",9.8,"NM",42,0)
ORWPCE^^0^B75772132
"BLD",16446,"KRN",9.8,"NM",44,0)
ORWPCE3^^0^B43500279
"BLD",16446,"KRN",9.8,"NM",45,0)
ORWPCE1^^0^B60045966
"BLD",16446,"KRN",9.8,"NM",46,0)
ORWDBA3^^0^B10588553
"BLD",16446,"KRN",9.8,"NM",47,0)
ORWORB^^0^B56568783
"BLD",16446,"KRN",9.8,"NM",48,0)
ORWOR^^0^B34438722
"BLD",16446,"KRN",9.8,"NM",49,0)
ORQ1^^0^B9948654
"BLD",16446,"KRN",9.8,"NM",50,0)
ORQ11^^0^B58131139
"BLD",16446,"KRN",9.8,"NM",51,0)
ORQ12^^0^B28850030
"BLD",16446,"KRN",9.8,"NM",52,0)
ORQORB^^0^B3145696
"BLD",16446,"KRN",9.8,"NM",53,0)
ORQQPX^^0^B57398301
"BLD",16446,"KRN",9.8,"NM",54,0)
ORKCHK4^^0^B26734530
"BLD",16446,"KRN",9.8,"NM",55,0)
ORKCHK5^^0^B21617903
"BLD",16446,"KRN",9.8,"NM",56,0)
ORKPS^^0^B71672869
"BLD",16446,"KRN",9.8,"NM",57,0)
ORMTIM01^^0^B14361893
"BLD",16446,"KRN",9.8,"NM",59,0)
ORY190^^0^B14269927
"BLD",16446,"KRN",9.8,"NM",60,0)
ORQQPXRM^^0^B9875184
"BLD",16446,"KRN",9.8,"NM",61,0)
ORWRA^^0^B9699553
"BLD",16446,"KRN",9.8,"NM",62,0)
ORCACT01^^0^B73392861
"BLD",16446,"KRN",9.8,"NM",63,0)
ORB3^^0^B87153852
"BLD",16446,"KRN",9.8,"NM",64,0)
ORB3F1^^0^B8327377
"BLD",16446,"KRN",9.8,"NM",65,0)
ORKCHK6^^0^B27280482
"BLD",16446,"KRN",9.8,"NM",66,0)
ORIMO^^0^B746197
"BLD",16446,"KRN",9.8,"NM",67,0)
ORQQAL^^0^B22690568
"BLD",16446,"KRN",9.8,"NM",68,0)
ORWDPS32^^0^B79108191
"BLD",16446,"KRN",9.8,"NM",69,0)
ORX2^^0^B10820095
"BLD",16446,"KRN",9.8,"NM",70,0)
ORPRPM^^0^B60368587
"BLD",16446,"KRN",9.8,"NM",71,0)
ORQOR2^^0^B13586012
"BLD",16446,"KRN",9.8,"NM",72,0)
ORCMEDT0^^0^B16773395
"BLD",16446,"KRN",9.8,"NM",73,0)
ORQ20^^0^B47004491
"BLD",16446,"KRN",9.8,"NM",74,0)
ORSNAST1^^0^B26795016
"BLD",16446,"KRN",9.8,"NM",75,0)
ORSNAST2^^0^B24780861
"BLD",16446,"KRN",9.8,"NM",76,0)
ORQPTQ2^^0^B40001761
"BLD",16446,"KRN",9.8,"NM",77,0)
ORQPTQ5^^0^B61498504
"BLD",16446,"KRN",9.8,"NM","B","ORB3",63)

"BLD",16446,"KRN",9.8,"NM","B","ORB3F1",64)

"BLD",16446,"KRN",9.8,"NM","B","ORCACT0",24)

"BLD",16446,"KRN",9.8,"NM","B","ORCACT01",62)

"BLD",16446,"KRN",9.8,"NM","B","ORCACT4",14)

"BLD",16446,"KRN",9.8,"NM","B","ORCDPS3",39)

"BLD",16446,"KRN",9.8,"NM","B","ORCDPSH",3)

"BLD",16446,"KRN",9.8,"NM","B","ORCMED",15)

"BLD",16446,"KRN",9.8,"NM","B","ORCMEDT0",72)

"BLD",16446,"KRN",9.8,"NM","B","ORCSAVE",16)

"BLD",16446,"KRN",9.8,"NM","B","ORCSAVE2",40)

"BLD",16446,"KRN",9.8,"NM","B","ORDD43",31)

"BLD",16446,"KRN",9.8,"NM","B","ORIMO",66)

"BLD",16446,"KRN",9.8,"NM","B","ORKCHK4",54)

"BLD",16446,"KRN",9.8,"NM","B","ORKCHK5",55)

"BLD",16446,"KRN",9.8,"NM","B","ORKCHK6",65)

"BLD",16446,"KRN",9.8,"NM","B","ORKPS",56)

"BLD",16446,"KRN",9.8,"NM","B","ORMBLD",6)

"BLD",16446,"KRN",9.8,"NM","B","ORMBLDGM",21)

"BLD",16446,"KRN",9.8,"NM","B","ORMBLDLR",22)

"BLD",16446,"KRN",9.8,"NM","B","ORMBLDPS",7)

"BLD",16446,"KRN",9.8,"NM","B","ORMBLDRA",23)

"BLD",16446,"KRN",9.8,"NM","B","ORMPS1",38)

"BLD",16446,"KRN",9.8,"NM","B","ORMPS2",20)

"BLD",16446,"KRN",9.8,"NM","B","ORMTIM01",57)

"BLD",16446,"KRN",9.8,"NM","B","ORPRF",37)

"BLD",16446,"KRN",9.8,"NM","B","ORPRPM",70)

"BLD",16446,"KRN",9.8,"NM","B","ORQ1",49)

"BLD",16446,"KRN",9.8,"NM","B","ORQ11",50)

"BLD",16446,"KRN",9.8,"NM","B","ORQ12",51)

"BLD",16446,"KRN",9.8,"NM","B","ORQ20",73)

"BLD",16446,"KRN",9.8,"NM","B","ORQ21",12)

"BLD",16446,"KRN",9.8,"NM","B","ORQOR2",71)

"BLD",16446,"KRN",9.8,"NM","B","ORQORB",52)

"BLD",16446,"KRN",9.8,"NM","B","ORQPTQ2",76)

"BLD",16446,"KRN",9.8,"NM","B","ORQPTQ5",77)

"BLD",16446,"KRN",9.8,"NM","B","ORQQAL",67)

"BLD",16446,"KRN",9.8,"NM","B","ORQQPX",53)

"BLD",16446,"KRN",9.8,"NM","B","ORQQPXRM",60)

"BLD",16446,"KRN",9.8,"NM","B","ORSNAST1",74)

"BLD",16446,"KRN",9.8,"NM","B","ORSNAST2",75)

"BLD",16446,"KRN",9.8,"NM","B","ORWDAL32",9)

"BLD",16446,"KRN",9.8,"NM","B","ORWDBA1",10)

"BLD",16446,"KRN",9.8,"NM","B","ORWDBA3",46)

"BLD",16446,"KRN",9.8,"NM","B","ORWDPS32",68)

"BLD",16446,"KRN",9.8,"NM","B","ORWDPS4",41)

"BLD",16446,"KRN",9.8,"NM","B","ORWDPS5",2)

"BLD",16446,"KRN",9.8,"NM","B","ORWDX",33)

"BLD",16446,"KRN",9.8,"NM","B","ORWDXM3",34)

"BLD",16446,"KRN",9.8,"NM","B","ORWDXR",35)

"BLD",16446,"KRN",9.8,"NM","B","ORWDXR01",36)

"BLD",16446,"KRN",9.8,"NM","B","ORWOR",48)

"BLD",16446,"KRN",9.8,"NM","B","ORWORB",47)

"BLD",16446,"KRN",9.8,"NM","B","ORWPCE",42)

"BLD",16446,"KRN",9.8,"NM","B","ORWPCE1",45)

"BLD",16446,"KRN",9.8,"NM","B","ORWPCE3",44)

"BLD",16446,"KRN",9.8,"NM","B","ORWPS",30)

"BLD",16446,"KRN",9.8,"NM","B","ORWPT",29)

"BLD",16446,"KRN",9.8,"NM","B","ORWRA",61)

"BLD",16446,"KRN",9.8,"NM","B","ORWSR",28)

"BLD",16446,"KRN",9.8,"NM","B","ORX2",69)

"BLD",16446,"KRN",9.8,"NM","B","ORY190",59)

"BLD",16446,"KRN",19,0)
19
"BLD",16446,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",16446,"KRN",19,"NM",1,0)
ORW NONVA REASON^^0
"BLD",16446,"KRN",19,"NM",2,0)
ORW PARAM GUI^^2
"BLD",16446,"KRN",19,"NM",3,0)
OR CPRS GUI CHART^^0
"BLD",16446,"KRN",19,"NM",4,0)
ORWOR EXPIRED ORDERS^^0
"BLD",16446,"KRN",19,"NM",5,0)
ORWORB REMOVE^^0
"BLD",16446,"KRN",19,"NM","B","OR CPRS GUI CHART",3)

"BLD",16446,"KRN",19,"NM","B","ORW NONVA REASON",1)

"BLD",16446,"KRN",19,"NM","B","ORW PARAM GUI",2)

"BLD",16446,"KRN",19,"NM","B","ORWOR EXPIRED ORDERS",4)

"BLD",16446,"KRN",19,"NM","B","ORWORB REMOVE",5)

"BLD",16446,"KRN",19.1,0)
19.1
"BLD",16446,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",16446,"KRN",101,0)
101
"BLD",16446,"KRN",409.61,0)
409.61
"BLD",16446,"KRN",771,0)
771
"BLD",16446,"KRN",870,0)
870
"BLD",16446,"KRN",8989.51,0)
8989.51
"BLD",16446,"KRN",8989.51,"NM",0)
^9.68A^5^5
"BLD",16446,"KRN",8989.51,"NM",1,0)
ORWD NONVA REASON^^0
"BLD",16446,"KRN",8989.51,"NM",2,0)
ORB REMOVE^^0
"BLD",16446,"KRN",8989.51,"NM",3,0)
ORB SORT METHOD^^0
"BLD",16446,"KRN",8989.51,"NM",4,0)
ORWOR EXPIRED ORDERS^^0
"BLD",16446,"KRN",8989.51,"NM",5,0)
OR OREMAS NON-VA MED ORDERS^^0
"BLD",16446,"KRN",8989.51,"NM","B","OR OREMAS NON-VA MED ORDERS",5)

"BLD",16446,"KRN",8989.51,"NM","B","ORB REMOVE",2)

"BLD",16446,"KRN",8989.51,"NM","B","ORB SORT METHOD",3)

"BLD",16446,"KRN",8989.51,"NM","B","ORWD NONVA REASON",1)

"BLD",16446,"KRN",8989.51,"NM","B","ORWOR EXPIRED ORDERS",4)

"BLD",16446,"KRN",8989.52,0)
8989.52
"BLD",16446,"KRN",8989.52,"NM",0)
^9.68A^1^1
"BLD",16446,"KRN",8989.52,"NM",1,0)
ORP ORDER MISC^^0
"BLD",16446,"KRN",8989.52,"NM","B","ORP ORDER MISC",1)

"BLD",16446,"KRN",8994,0)
8994
"BLD",16446,"KRN",8994,"NM",0)
^9.68A^21^19
"BLD",16446,"KRN",8994,"NM",2,0)
ORWDPS5 ISVTP^^0
"BLD",16446,"KRN",8994,"NM",3,0)
ORWPS REASON^^0
"BLD",16446,"KRN",8994,"NM",4,0)
ORWDAL32 SEND BULLETIN^^0
"BLD",16446,"KRN",8994,"NM",5,0)
ORWDBA1 ORPKGTYP^^0
"BLD",16446,"KRN",8994,"NM",6,0)
ORWDBA1 RCVORCI^^0
"BLD",16446,"KRN",8994,"NM",7,0)
ORWDX SAVE^^0
"BLD",16446,"KRN",8994,"NM",8,0)
ORWDXR01 ISSPLY^^0
"BLD",16446,"KRN",8994,"NM",10,0)
ORWDXM3 ISUDQO^^0
"BLD",16446,"KRN",8994,"NM",11,0)
ORWSR OPTOP^^1^
"BLD",16446,"KRN",8994,"NM",12,0)
ORWSR OPTOP NON-OR^^1^
"BLD",16446,"KRN",8994,"NM",13,0)
ORWDBA1 SCLST^^0
"BLD",16446,"KRN",8994,"NM",14,0)
ORWDXR01 OXDATA^^0
"BLD",16446,"KRN",8994,"NM",15,0)
ORWDBA1 BASTATUS^^0
"BLD",16446,"KRN",8994,"NM",16,0)
ORPRF HASCAT1^^0
"BLD",16446,"KRN",8994,"NM",17,0)
ORWORB GETSORT^^0
"BLD",16446,"KRN",8994,"NM",18,0)
ORWORB SETSORT^^0
"BLD",16446,"KRN",8994,"NM",19,0)
ORWOR EXPIRED^^0
"BLD",16446,"KRN",8994,"NM",20,0)
ORQQPXRM GEC DIALOG^^0
"BLD",16446,"KRN",8994,"NM",21,0)
ORWDPS32 AUTHNVA^^0
"BLD",16446,"KRN",8994,"NM","B","ORPRF HASCAT1",16)

"BLD",16446,"KRN",8994,"NM","B","ORQQPXRM GEC DIALOG",20)

"BLD",16446,"KRN",8994,"NM","B","ORWDAL32 SEND BULLETIN",4)

"BLD",16446,"KRN",8994,"NM","B","ORWDBA1 BASTATUS",15)

"BLD",16446,"KRN",8994,"NM","B","ORWDBA1 ORPKGTYP",5)

"BLD",16446,"KRN",8994,"NM","B","ORWDBA1 RCVORCI",6)

"BLD",16446,"KRN",8994,"NM","B","ORWDBA1 SCLST",13)

"BLD",16446,"KRN",8994,"NM","B","ORWDPS32 AUTHNVA",21)

"BLD",16446,"KRN",8994,"NM","B","ORWDPS5 ISVTP",2)

"BLD",16446,"KRN",8994,"NM","B","ORWDX SAVE",7)

"BLD",16446,"KRN",8994,"NM","B","ORWDXM3 ISUDQO",10)

"BLD",16446,"KRN",8994,"NM","B","ORWDXR01 ISSPLY",8)

"BLD",16446,"KRN",8994,"NM","B","ORWDXR01 OXDATA",14)

"BLD",16446,"KRN",8994,"NM","B","ORWOR EXPIRED",19)

"BLD",16446,"KRN",8994,"NM","B","ORWORB GETSORT",17)

"BLD",16446,"KRN",8994,"NM","B","ORWORB SETSORT",18)

"BLD",16446,"KRN",8994,"NM","B","ORWPS REASON",3)

"BLD",16446,"KRN",8994,"NM","B","ORWSR OPTOP",11)

"BLD",16446,"KRN",8994,"NM","B","ORWSR OPTOP NON-OR",12)

"BLD",16446,"KRN","B",.4,.4)

"BLD",16446,"KRN","B",.401,.401)

"BLD",16446,"KRN","B",.402,.402)

"BLD",16446,"KRN","B",.403,.403)

"BLD",16446,"KRN","B",.5,.5)

"BLD",16446,"KRN","B",.84,.84)

"BLD",16446,"KRN","B",3.6,3.6)

"BLD",16446,"KRN","B",3.8,3.8)

"BLD",16446,"KRN","B",9.2,9.2)

"BLD",16446,"KRN","B",9.8,9.8)

"BLD",16446,"KRN","B",19,19)

"BLD",16446,"KRN","B",19.1,19.1)

"BLD",16446,"KRN","B",101,101)

"BLD",16446,"KRN","B",409.61,409.61)

"BLD",16446,"KRN","B",771,771)

"BLD",16446,"KRN","B",870,870)

"BLD",16446,"KRN","B",8989.51,8989.51)

"BLD",16446,"KRN","B",8989.52,8989.52)

"BLD",16446,"KRN","B",8994,8994)

"BLD",16446,"QUES",0)
^9.62^^
"BLD",16446,"REQB",0)
^9.611^15^11
"BLD",16446,"REQB",2,0)
OR*3.0*176^2
"BLD",16446,"REQB",4,0)
OR*3.0*178^2
"BLD",16446,"REQB",5,0)
PSS*1.0*69^2
"BLD",16446,"REQB",8,0)
OR*3.0*164^2
"BLD",16446,"REQB",9,0)
OR*3.0*187^2
"BLD",16446,"REQB",10,0)
OR*3.0*163^2
"BLD",16446,"REQB",11,0)
OR*3.0*127^2
"BLD",16446,"REQB",12,0)
GMTS*2.7*65^2
"BLD",16446,"REQB",13,0)
PSJ*5.0*107^2
"BLD",16446,"REQB",14,0)
TIU*1.0*183^2
"BLD",16446,"REQB",15,0)
OR*3.0*196^2
"BLD",16446,"REQB","B","GMTS*2.7*65",12)

"BLD",16446,"REQB","B","OR*3.0*127",11)

"BLD",16446,"REQB","B","OR*3.0*163",10)

"BLD",16446,"REQB","B","OR*3.0*164",8)

"BLD",16446,"REQB","B","OR*3.0*176",2)

"BLD",16446,"REQB","B","OR*3.0*178",4)

"BLD",16446,"REQB","B","OR*3.0*187",9)

"BLD",16446,"REQB","B","OR*3.0*196",15)

"BLD",16446,"REQB","B","PSJ*5.0*107",13)

"BLD",16446,"REQB","B","PSS*1.0*69",5)

"BLD",16446,"REQB","B","TIU*1.0*183",14)

"DATA",101.24,35,0)
ORCV APPOINTMENTS^80^^^ORWCV^VST^^C^1^1^^S^460^T^2^16,27^2,3,4^41
"DATA",101.24,35,2)
^^Appointments/Visits/Admissions^^VSIT
"DATA",101.41,612,0)
PS MEDS^Medications^^D^2^2^360^1^2
"DATA",101.41,612,3)
D PROVIDER^ORCDPSIV Q:$G(ORQUIT)  D EN^ORCDPS1("")
"DATA",101.41,612,3.1)
D EN1^ORCDPS1
"DATA",101.41,612,4)
D EXIT^ORCDPS1
"DATA",101.41,612,5)
^^^Medications^135
"DATA",101.41,612,7)
D SC^ORCDPS3
"DATA",101.41,612,10,0)
^101.412IA^22^22
"DATA",101.41,612,10,1,0)
1^4^^Medication: ^^1^^^^S.RX
"DATA",101.41,612,10,1,1)
Enter the medication you wish to order for this patient.
"DATA",101.41,612,10,1,2)
1^@1350
"DATA",101.41,612,10,1,4)
I $$ACTIVE^ORDD43(Y),$$ACTIVE^ORDD43(Y)
"DATA",101.41,612,10,1,5)
D DEA^ORCDPS1 Q:'$G(DONE)  I $G(ORESET)'=+Y D CHANGED^ORCDPS1("OI")
"DATA",101.41,612,10,1,6)
N IDX,SCR S IDX=$G(ORDIALOG(PROMPT,"D")),SCR=$G(ORDIALOG(PROMPT,"S")) D XHELP^ORDD43(IDX,SCR)
"DATA",101.41,612,10,1,9)
D ENOI^ORCDPS1
"DATA",101.41,612,10,1,10)
S OROI=+$G(ORDIALOG(PROMPT,INST)) D ORDITM^ORCDPS1(OROI),NFI^ORCDPS1(OROI) S ORPKG=+$O(^DIC(9.4,"C",$S(ORCAT="I":"PSJ",1:"PSO"),0))
"DATA",101.41,612,10,2,0)
2^136^^Dose: ^^1^1^^C^^^^Instructions: 
"DATA",101.41,612,10,2,1)
Enter the dosage instructions for this order, as an amount and units.
"DATA",101.41,612,10,2,5)
D CHDOSE^ORCDPS2 Q:'$G(DONE)  D DEFCONJ^ORCDPS1
"DATA",101.41,612,10,2,6)
D LIST^ORCD:$G(ORDIALOG(PROMPT,"LIST")),F^ORCDLGH:'$G(ORDIALOG(PROMPT,"LIST"))
"DATA",101.41,612,10,2,9)
D DOSES^ORCDPS2 I $G(ORDIALOG(PROMPT,"LIST")),'$O(ORDIALOG(PROMPT,0)),'$G(ORENEW) D LIST^ORCD
"DATA",101.41,612,10,2,10)
D EXDOSE^ORCDPS2
"DATA",101.41,612,10,3,0)
2.1^137^^^^1^^^C^^136
"DATA",101.41,612,10,3,1)
Enter the route of administration for this drug.
"DATA",101.41,612,10,3,2)
^1~3
"DATA",101.41,612,10,3,4)
I $P(^(0),U,4)
"DATA",101.41,612,10,3,6)
D LIST^ORCD:$G(ORDIALOG(PROMPT,"LIST"))&(X="?"),P^ORCDLGH:'$G(ORDIALOG(PROMPT,"LIST"))!(X'="?")
"DATA",101.41,612,10,3,7)
D DEFRTE^ORCDPS1
"DATA",101.41,612,10,3,9)
D ROUTES^ORCDPS1
"DATA",101.41,612,10,3,10)
S OROUTE=+$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,612,10,4,0)
2.2^170^^^^1^^^C^^136
"DATA",101.41,612,10,4,1)
Enter either a standard administration schedule or one of your own, up to 70 characters and no more than 2 spaces.
"DATA",101.41,612,10,4,5)
D CKSCH^ORCDPS1
"DATA",101.41,612,10,4,6)
N DIC,D,DZ S DIC="^PS(51.1,",DIC(0)="EQS",D="APPSJ",DZ="??" D DQ^DICQ
"DATA",101.41,612,10,4,7)
S:$L($G(^TMP("PSJSCH",$J))) Y=^($J)
"DATA",101.41,612,10,4,9)
S:ORCAT="I" REQD=$$SCHREQ^PSJORPOE(OROUTE,OROI,$G(ORDRUG))
"DATA",101.41,612,10,4,10)
S ORSCH=$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,612,10,5,0)
8^7^^Priority: ^^1^^^C^S.PSO
"DATA",101.41,612,10,5,1)
Enter the urgency of this order.
"DATA",101.41,612,10,5,2)
6^^ROUTINE DONE
"DATA",101.41,612,10,5,7)
S Y=+$$RECALL^ORCD(PROMPT) S:Y EDITONLY=1 S:'Y Y=9
"DATA",101.41,612,10,5,9)
S ORDIALOG(PROMPT,"D")=$S(ORCAT="I":"S.PSJ",1:"S.PSO")
"DATA",101.41,612,10,6,0)
10^15^^Comments: ^^^^^C
"DATA",101.41,612,10,6,1)
Enter any additional instructions for this order.
"DATA",101.41,612,10,6,2)
7
"DATA",101.41,612,10,6,3)
I '$G(PSJNOPC)!($G(ORTYPE)="Z")
"DATA",101.41,612,10,7,0)
1.1^613^^^^^^^^^4
"DATA",101.41,612,10,7,2)
^@1350
"DATA",101.41,612,10,7,3)
I 0 ;stuffed in via Instructions
"DATA",101.41,612,10,8,0)
5.5^149^^^^^^^C
"DATA",101.41,612,10,8,1)
Enter the amount (number of tablets, e.g.) to be dispensed.
"DATA",101.41,612,10,8,2)
8^^^Quantity:^^1
"DATA",101.41,612,10,8,3)
I ORCAT="O"
"DATA",101.41,612,10,8,7)
I $G(ORCAT)="O",$G(ORTYPE)'="Z" S Y=$$QTY^ORCDPS1 K:Y'>0 Y
"DATA",101.41,612,10,8,9)
I ORCAT="O" W:$L($G(ORQTY)) !,ORQTY S ORDIALOG(PROMPT,"A")="Quantity"_$S($L($G(ORQTYUNT)):" ("_ORQTYUNT_"): ",1:": ")
"DATA",101.41,612,10,9,0)
7^148^^Pick Up: ^^1^^^RC
"DATA",101.41,612,10,9,1)
Enter if the patient is to receive this medication by mail, at the window, or in the clinic.
"DATA",101.41,612,10,9,3)
I ORCAT="O"
"DATA",101.41,612,10,9,6)
D SETLIST^ORCD
"DATA",101.41,612,10,9,7)
I ORCAT="O",$G(ORTYPE)'="Z" S Y=$S($G(OREVENT):"W",$D(^PSX(550,"C")):"M",1:"W") I $D(^TMP("ORECALL",$J,ORDIALOG,PROMPT,INST)) S Y=^(INST),EDITONLY=1
"DATA",101.41,612,10,10,0)
6^150^^Refills: ^^1^^^RC
"DATA",101.41,612,10,10,1)
Enter the number of refills to allow for this order.
"DATA",101.41,612,10,10,2)
9^^^Refills:
"DATA",101.41,612,10,10,3)
I ORCAT="O",$G(OREFILLS)>0
"DATA",101.41,612,10,10,9)
I ORCAT="O",'$G(OREFILLS) D MAXREFS^ORCDPS1
"DATA",101.41,612,10,11,0)
9^151^^Is this medication for a SC condition? ^^^^^CW^^^^SC: 
"DATA",101.41,612,10,11,1)
If this medication is for treatment of a service-connected condition, enter YES.
"DATA",101.41,612,10,11,3)
I ORCAT="O",$G(ORCOPAY),$G(ORSC)
"DATA",101.41,612,10,11,6)
N DFN S DFN=+ORVP D DIS^DGRPDB
"DATA",101.41,612,10,11,7)
I $G(ORTYPE)'="Z",ORCAT="O",$G(ORCOPAY),$G(ORSC) S Y=$S($P(ORSC,U,2)>50:1,1:0)
"DATA",101.41,612,10,11,9)
I ORCAT="O" S ORCOPAY=$$ASKSC^ORCDPS1 I ORCOPAY,$G(ORSC),'$D(ORDIALOG(PROMPT,INST)) N DFN S DFN=+ORVP D:$P(ORSC,U,2)'>50 DIS^DGRPDB S:$P(ORSC,U,2)>50 $P(ORDIALOG(PROMPT,0),U)="YA",EDITONLY=1 ; Req'd
"DATA",101.41,612,10,12,0)
2.3^153^^How long: ^^^^^C^^136
"DATA",101.41,612,10,12,1)
Enter the length of time over which this dose is to be administered as '4 HOURS', '7 DAYS', '2 WEEKS', or '1 MONTH'.
"DATA",101.41,612,10,12,2)
^^^FOR
"DATA",101.41,612,10,12,3)
I $$ASKDUR^ORCDPS3
"DATA",101.41,612,10,12,5)
D DUR^ORCDPS3
"DATA",101.41,612,10,12,7)
Q  I $G(ORTYPE)'="Z",$G(ORCAT)="I",$G(ORCOMPLX),$P($G(ORSD),U,3) S Y=+$P(ORSD,U,3)_" DAYS"
"DATA",101.41,612,10,13,0)
4^6^^Start: ^^^^1^C
"DATA",101.41,612,10,13,1)
Enter the date this order should begin.
"DATA",101.41,612,10,13,3)
I $G(ORCAT)="O",$G(OREVENT) ;discharge orders only
"DATA",101.41,612,10,13,7)
Q  I $G(ORTYPE)'="Z",ORCAT'="O" S Y=$P($G(ORSD),U) K:'$L(Y) Y
"DATA",101.41,612,10,13,9)
D START^ORCDPS3 ;I 'FIRST,$G(ORDIALOG(PROMPT,"LIST")),'$O(ORDIALOG(PROMPT,0)) D LIST^ORCD ;editonly
"DATA",101.41,612,10,14,0)
3^614^^Text: 
"DATA",101.41,612,10,14,2)
2^^^^^1^0
"DATA",101.41,612,10,14,3)
I 0 ;created by Instructions, if Outpt order
"DATA",101.41,612,10,15,0)
2.5^615^^^^^^^*^^136
"DATA",101.41,612,10,15,2)
^@
"DATA",101.41,612,10,15,3)
I 0 ;created by Instructions
"DATA",101.41,612,10,15,7)
S Y=$$ID^ORCDPS K:'$L(Y) Y
"DATA",101.41,612,10,16,0)
2.6^138^^^^^^^*
"DATA",101.41,612,10,16,3)
I 0 ;created by Instructions
"DATA",101.41,612,10,17,0)
5^616^^^^1^^^C
"DATA",101.41,612,10,17,1)
Enter the number of days for which the patient needs this medication.
"DATA",101.41,612,10,17,3)
I $G(ORCAT)="O"
"DATA",101.41,612,10,17,5)
I $G(ORESET),+ORESET'=+Y D CHANGED^ORCDPS1("DS")
"DATA",101.41,612,10,17,9)
I $G(ORCAT)="O" D DSUP^ORCDPS1
"DATA",101.41,612,10,17,10)
S:$G(ORCAT)="O" ORDSUP=+$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,612,10,18,0)
1.5^618
"DATA",101.41,612,10,18,2)
1.5
"DATA",101.41,612,10,18,3)
I 0 ;stuffed in via Instructions
"DATA",101.41,612,10,19,0)
2.4^617^^^^^^^C^^136
"DATA",101.41,612,10,19,1)
Enter AND if the next dose is to be administered concurrently with this one, or THEN if it is to follow after.
"DATA",101.41,612,10,19,3)
I $G(ORCOMPLX)
"DATA",101.41,612,10,19,5)
I $G(ORESET)'=$P(Y,U) D CHANGED^ORCDPS1("QUANTITY")
"DATA",101.41,612,10,19,9)
D ENCONJ^ORCDPS1
"DATA",101.41,612,10,19,10)
I $G(ORCOMPLX),'$L($G(ORDIALOG(PROMPT,INST))),FIRST S MAX=1 ;stop prompting dose multiple
"DATA",101.41,612,10,20,0)
3.5^1358^^^^^^^C
"DATA",101.41,612,10,20,2)
3
"DATA",101.41,612,10,20,3)
I 0 ;text stuffed via Entry Action
"DATA",101.41,612,10,20,9)
D PI^ORCDPS2
"DATA",101.41,612,10,21,0)
4.5^1359
"DATA",101.41,612,10,21,2)
10^^^First Dose^^1
"DATA",101.41,612,10,21,3)
I 0 ;set via Entry Action
"DATA",101.41,612,10,21,9)
D NOW^ORCDPS3
"DATA",101.41,612,10,22,0)
11^1615
"DATA",101.41,612,10,22,2)
6.5
"DATA",101.41,612,99)
59595,54844
"DATA",101.41,621,0)
PSH OERR^Non VA Medications^^D^47^0^392^0^2
"DATA",101.41,621,3)
D EN^ORCDPSH("H")
"DATA",101.41,621,3.1)
D EN^ORCDPSH("H")
"DATA",101.41,621,4)
D EXIT^ORCDPSH
"DATA",101.41,621,5)
^^^Meds, Non-VA^145
"DATA",101.41,621,10,0)
^101.412IA^21^13
"DATA",101.41,621,10,1,0)
1^4^^Herbal/OTC/Non VA Medication:^^1^^^^S.NV RX
"DATA",101.41,621,10,1,1)
Enter the herbal/OTC/non-VA medication you wish to order for this patient.
"DATA",101.41,621,10,1,2)
1^@1350
"DATA",101.41,621,10,1,4)
I $$ACTIVE^ORDD43(Y)
"DATA",101.41,621,10,1,5)
Q:'$G(DONE)  I $G(ORESET)'=+Y D CHANGED^ORCDPSH("OI")
"DATA",101.41,621,10,1,6)
N IDX,SCR S IDX=$G(ORDIALOG(PROMPT,"D")),SCR=$G(ORDIALOG(PROMPT,"S")) D XHELP^ORDD43(IDX,SCR)
"DATA",101.41,621,10,1,9)
D ENOI^ORCDPSH
"DATA",101.41,621,10,1,10)
S OROI=+$G(ORDIALOG(PROMPT,INST)) D ORDITM^ORCDPSH(OROI),NFI^ORCDPSH(OROI)
"DATA",101.41,621,10,2,0)
2^136^^Dose: ^^0^1^^C^^^^Instructions: 
"DATA",101.41,621,10,2,1)
Enter the dosage instructions for this order, as an amount and units.
"DATA",101.41,621,10,2,5)
D CHDOSE^ORCDPS2 Q:'$G(DONE)
"DATA",101.41,621,10,2,6)
D LIST^ORCD:$G(ORDIALOG(PROMPT,"LIST")),F^ORCDLGH:'$G(ORDIALOG(PROMPT,"LIST"))
"DATA",101.41,621,10,2,9)
D DOSES^ORCDPS2 I $G(ORDIALOG(PROMPT,"LIST")),'$O(ORDIALOG(PROMPT,0)),'$G(ORENEW) D LIST^ORCD
"DATA",101.41,621,10,2,10)
D EXDOSE^ORCDPS2
"DATA",101.41,621,10,3,0)
2.1^137^^^^0^^^C^^136
"DATA",101.41,621,10,3,1)
Enter the route of administration for this drug.
"DATA",101.41,621,10,3,2)
^1~3
"DATA",101.41,621,10,3,4)
I $P(^(0),U,4)
"DATA",101.41,621,10,3,6)
D LIST^ORCD:$G(ORDIALOG(PROMPT,"LIST"))&(X="?"),P^ORCDLGH:'$G(ORDIALOG(PROMPT,"LIST"))!(X'="?")
"DATA",101.41,621,10,3,7)
D DEFRTE^ORCDPSH
"DATA",101.41,621,10,3,9)
D ROUTES^ORCDPSH
"DATA",101.41,621,10,3,10)
S OROUTE=+$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,621,10,4,0)
2.2^170^^^^0^^^C^^136
"DATA",101.41,621,10,4,1)
Enter either a standard administration schedule or one of your own, up to 70 characters and no more than 2 spaces.
"DATA",101.41,621,10,4,2)
2.3
"DATA",101.41,621,10,4,5)
D CKSCH^ORCDPSH
"DATA",101.41,621,10,4,6)
N DIC,D,DZ S DIC="^PS(51.1,",DIC(0)="EQS",D="APPSJ",DZ="??" D DQ^DICQ
"DATA",101.41,621,10,4,7)
S:$L($G(^TMP("PSJSCH",$J))) Y=^($J)
"DATA",101.41,621,10,4,9)
S:ORCAT="I" REQD=$$SCHREQ^PSJORPOE(OROUTE,OROI,$G(ORDRUG))
"DATA",101.41,621,10,4,10)
S ORSCH=$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,621,10,6,0)
10^15^^Comments: ^^^^^C
"DATA",101.41,621,10,6,1)
Enter any additional instructions for this order.
"DATA",101.41,621,10,6,2)
7
"DATA",101.41,621,10,6,3)
I '$G(PSJNOPC)!($G(ORTYPE)="Z")
"DATA",101.41,621,10,7,0)
1.1^613^^^^^^^^^4
"DATA",101.41,621,10,7,2)
^@1350
"DATA",101.41,621,10,7,3)
I 0 ;stuffed in via Instructions
"DATA",101.41,621,10,13,0)
4^6^^^^^^^RCW
"DATA",101.41,621,10,13,1)
Enter the date the patient began using this herbal/OTC/Non-VA medication.
"DATA",101.41,621,10,13,2)
2.5
"DATA",101.41,621,10,13,9)
S $P(ORDIALOG(PROMPT,0),U,2)="::ET" ;allow imprecise, past dates
"DATA",101.41,621,10,14,0)
3^614
"DATA",101.41,621,10,14,2)
2^^^^^1^0
"DATA",101.41,621,10,14,3)
I 0 ;created by Instructions, if Outpt order
"DATA",101.41,621,10,15,0)
2.5^615^^^^^^^*^^136
"DATA",101.41,621,10,15,2)
^@
"DATA",101.41,621,10,15,3)
I 0 ;created by Instructions
"DATA",101.41,621,10,15,7)
S Y=$$ID^ORCDPS K:'$L(Y) Y
"DATA",101.41,621,10,16,0)
2.6^138^^^^^^^*
"DATA",101.41,621,10,16,3)
I 0 ;created by Instructions
"DATA",101.41,621,10,18,0)
1.5^618
"DATA",101.41,621,10,18,2)
1.5
"DATA",101.41,621,10,18,3)
I 0 ;stuffed in via Instructions
"DATA",101.41,621,10,20,0)
3.5^1358^^^^^^^C
"DATA",101.41,621,10,20,2)
3
"DATA",101.41,621,10,20,3)
I 0 ;text stuffed via Entry Action
"DATA",101.41,621,10,20,9)
D PI^ORCDPS2
"DATA",101.41,621,10,21,0)
11^1615
"DATA",101.41,621,10,21,2)
6.5
"DATA",101.41,621,99)
59595,54844
"FIA",100)
ORDER
"FIA",100,0)
^OR(100,
"FIA",100,0,0)
100I
"FIA",100,0,1)
y^n^p^^^^n^^n
"FIA",100,0,10)

"FIA",100,0,11)

"FIA",100,0,"RLRO")

"FIA",100,0,"VR")
3.0^OR
"FIA",100,100)
1
"FIA",100,100,8.1)

"FIA",100,100,57)

"FIA",101.24)
OE/RR REPORT
"FIA",101.24,0)
^ORD(101.24,
"FIA",101.24,0,0)
101.24I
"FIA",101.24,0,1)
n^n^f^^y^^y^r^n
"FIA",101.24,0,10)

"FIA",101.24,0,11)
I $P(^ORD(101.24,+Y,0),"^")="ORCV APPOINTMENTS"
"FIA",101.24,0,"RLRO")

"FIA",101.24,0,"VR")
3.0^OR
"FIA",101.24,101.24)
0
"FIA",101.24,101.241)
0
"FIA",101.24,101.243)
0
"FIA",101.41)
ORDER DIALOG
"FIA",101.41,0)
^ORD(101.41,
"FIA",101.41,0,0)
101.41I
"FIA",101.41,0,1)
n^n^f^^y^^y^r^n
"FIA",101.41,0,10)

"FIA",101.41,0,11)
I $P(^(0),"^")="PS MEDS"!($P(^(0),"^")="PSH OERR")
"FIA",101.41,0,"RLRO")

"FIA",101.41,0,"VR")
3.0^OR
"FIA",101.41,101.41)
0
"FIA",101.41,101.411)
0
"FIA",101.41,101.412)
0
"FIA",101.41,101.41218)
0
"FIA",101.41,101.415)
0
"FIA",101.41,101.416)
0
"FIA",101.41,101.4162)
0
"FRV1",101.24,"35,0",13)
ORWCV VST
"FRV1",101.24,"35,0",13,"F")
;XWB(8994,
"FRV1",101.24,"35,0",18)
ORCV VISIT DETAILS
"FRV1",101.24,"35,0",18,"F")
;ORD(101.24,
"FRV1",101.41,"612,0",5)
PHARMACY
"FRV1",101.41,"612,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"612,0",7)
PHARMACY DATA MANAGEMENT
"FRV1",101.41,"612,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"612,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"612,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,10,0",2)
OR GTX REFILLS
"FRV1",101.41,"612,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,11,0",2)
OR GTX SERVICE CONNECTED
"FRV1",101.41,"612,10,11,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,12,0",2)
OR GTX DURATION
"FRV1",101.41,"612,10,12,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,12,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"612,10,12,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,13,0",2)
OR GTX START DATE/TIME
"FRV1",101.41,"612,10,13,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,14,0",2)
OR GTX SIG
"FRV1",101.41,"612,10,14,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,15,0",2)
OR GTX DOSE
"FRV1",101.41,"612,10,15,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,15,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"612,10,15,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,16,0",2)
OR GTX DISPENSE DRUG
"FRV1",101.41,"612,10,16,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,17,0",2)
OR GTX DAYS SUPPLY
"FRV1",101.41,"612,10,17,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,18,0",2)
OR GTX DRUG NAME
"FRV1",101.41,"612,10,18,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,19,0",2)
OR GTX AND/THEN
"FRV1",101.41,"612,10,19,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,19,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"612,10,19,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,2,0",2)
OR GTX INSTRUCTIONS
"FRV1",101.41,"612,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,20,0",2)
OR GTX PATIENT INSTRUCTIONS
"FRV1",101.41,"612,10,20,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,21,0",2)
OR GTX NOW
"FRV1",101.41,"612,10,21,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,22,0",2)
OR GTX STATEMENTS
"FRV1",101.41,"612,10,22,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,3,0",2)
OR GTX ROUTE
"FRV1",101.41,"612,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,3,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"612,10,3,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,4,0",2)
OR GTX SCHEDULE
"FRV1",101.41,"612,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,4,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"612,10,4,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,5,0",2)
OR GTX URGENCY
"FRV1",101.41,"612,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,6,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"612,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,7,0",2)
OR GTX STRENGTH
"FRV1",101.41,"612,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,7,0",11)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"612,10,7,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,8,0",2)
OR GTX QUANTITY
"FRV1",101.41,"612,10,8,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"612,10,9,0",2)
OR GTX ROUTING
"FRV1",101.41,"612,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,0",5)
NON-VA MEDICATIONS
"FRV1",101.41,"621,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"621,0",7)
HERBAL/OTC/NON-VA MEDS
"FRV1",101.41,"621,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"621,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"621,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,13,0",2)
OR GTX START DATE/TIME
"FRV1",101.41,"621,10,13,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,14,0",2)
OR GTX SIG
"FRV1",101.41,"621,10,14,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,15,0",2)
OR GTX DOSE
"FRV1",101.41,"621,10,15,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,15,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"621,10,15,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,16,0",2)
OR GTX DISPENSE DRUG
"FRV1",101.41,"621,10,16,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,18,0",2)
OR GTX DRUG NAME
"FRV1",101.41,"621,10,18,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,2,0",2)
OR GTX INSTRUCTIONS
"FRV1",101.41,"621,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,20,0",2)
OR GTX PATIENT INSTRUCTIONS
"FRV1",101.41,"621,10,20,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,21,0",2)
OR GTX STATEMENTS
"FRV1",101.41,"621,10,21,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,3,0",2)
OR GTX ROUTE
"FRV1",101.41,"621,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,3,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"621,10,3,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,4,0",2)
OR GTX SCHEDULE
"FRV1",101.41,"621,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,4,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"621,10,4,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,6,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"621,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,7,0",2)
OR GTX STRENGTH
"FRV1",101.41,"621,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"621,10,7,0",11)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"621,10,7,0",11,"F")
;ORD(101.41,
"INI")
PRE^ORY190
"INIT")
POST^ORY190
"KRN",19,10082,-1)
0^3
"KRN",19,10082,0)
OR CPRS GUI CHART^CPRSChart version 1.0.24.26^^B^^^^^^^^
"KRN",19,10082,1,0)
^19.06^2^2^3040607^^^^
"KRN",19,10082,1,1,0)
This option is required by the Kernel Broker to give access to the
"KRN",19,10082,1,2,0)
RPCs used by the CPRS GUI (CPRSChart.EXE).
"KRN",19,10082,99.1)
59690,37792
"KRN",19,10082,"RPC",0)
^19.05P^1939^1926
"KRN",19,10082,"RPC",1,0)
GMRC LIST CONSULT REQUESTS
"KRN",19,10082,"RPC",218,0)
XWB GET VARIABLE VALUE
"KRN",19,10082,"RPC",219,0)
TIU AUTHORIZATION
"KRN",19,10082,"RPC",220,0)
TIU CAN CHANGE COSIGNER?
"KRN",19,10082,"RPC",221,0)
TIU CREATE ADDENDUM RECORD
"KRN",19,10082,"RPC",222,0)
TIU CREATE RECORD
"KRN",19,10082,"RPC",223,0)
TIU DELETE RECORD
"KRN",19,10082,"RPC",224,0)
TIU DETAILED DISPLAY
"KRN",19,10082,"RPC",225,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,10082,"RPC",226,0)
TIU GET ADDITIONAL SIGNERS
"KRN",19,10082,"RPC",227,0)
TIU GET ALERT INFO
"KRN",19,10082,"RPC",228,0)
TIU GET DOCUMENT PARAMETERS
"KRN",19,10082,"RPC",229,0)
TIU GET DS TITLES
"KRN",19,10082,"RPC",230,0)
TIU GET DS URGENCIES
"KRN",19,10082,"RPC",231,0)
TIU GET PERSONAL PREFERENCES
"KRN",19,10082,"RPC",232,0)
TIU GET PN TITLES
"KRN",19,10082,"RPC",233,0)
TIU GET RECORD TEXT
"KRN",19,10082,"RPC",234,0)
TIU IDENTIFY CONSULTS CLASS
"KRN",19,10082,"RPC",235,0)
TIU IS THIS A CONSULT?
"KRN",19,10082,"RPC",236,0)
TIU JUSTIFY DELETE?
"KRN",19,10082,"RPC",237,0)
TIU LOAD BOILERPLATE TEXT
"KRN",19,10082,"RPC",238,0)
TIU LOAD RECORD FOR EDIT
"KRN",19,10082,"RPC",239,0)
TIU LOCK RECORD
"KRN",19,10082,"RPC",242,0)
TIU NOTES
"KRN",19,10082,"RPC",243,0)
TIU NOTES 16 BIT
"KRN",19,10082,"RPC",244,0)
TIU NOTES BY VISIT
"KRN",19,10082,"RPC",245,0)
TIU PERSONAL TITLE LIST
"KRN",19,10082,"RPC",246,0)
TIU PRINT RECORD
"KRN",19,10082,"RPC",247,0)
TIU REQUIRES COSIGNATURE
"KRN",19,10082,"RPC",248,0)
TIU SIGN RECORD
"KRN",19,10082,"RPC",249,0)
TIU SUMMARIES
"KRN",19,10082,"RPC",250,0)
TIU SUMMARIES BY VISIT
"KRN",19,10082,"RPC",251,0)
TIU UNLOCK RECORD
"KRN",19,10082,"RPC",252,0)
TIU UPDATE ADDITIONAL SIGNERS
"KRN",19,10082,"RPC",253,0)
TIU UPDATE RECORD
"KRN",19,10082,"RPC",254,0)
TIU WHICH SIGNATURE ACTION
"KRN",19,10082,"RPC",1032,0)
ORB DELETE ALERT
"KRN",19,10082,"RPC",1033,0)
ORB FOLLOW-UP ARRAY
"KRN",19,10082,"RPC",1034,0)
ORB FOLLOW-UP STRING
"KRN",19,10082,"RPC",1035,0)
ORB FOLLOW-UP TYPE
"KRN",19,10082,"RPC",1036,0)
ORB SORT METHOD
"KRN",19,10082,"RPC",1037,0)
ORK TRIGGER
"KRN",19,10082,"RPC",1038,0)
ORQ NULL LIST
"KRN",19,10082,"RPC",1039,0)
ORQOR DETAIL
"KRN",19,10082,"RPC",1040,0)
TIU TEMPLATE CHECK BOILERPLATE
"KRN",19,10082,"RPC",1041,0)
TIU TEMPLATE CREATE/MODIFY
"KRN",19,10082,"RPC",1042,0)
TIU TEMPLATE DELETE
"KRN",19,10082,"RPC",1045,0)
TIU TEMPLATE GETPROOT
"KRN",19,10082,"RPC",1049,0)
TIU TEMPLATE LISTOWNR
"KRN",19,10082,"RPC",1050,0)
TIU TEMPLATE SET ITEMS
"KRN",19,10082,"RPC",1051,0)
TIU GET LIST OF OBJECTS
"KRN",19,10082,"RPC",1052,0)
ORQOR LIST
"KRN",19,10082,"RPC",1053,0)
ORQORB SORT
"KRN",19,10082,"RPC",1054,0)
ORQPT ATTENDING/PRIMARY
"KRN",19,10082,"RPC",1055,0)
ORQPT CLINIC PATIENTS
"KRN",19,10082,"RPC",1056,0)
ORQPT CLINICS
"KRN",19,10082,"RPC",1057,0)
ORQPT DEFAULT LIST SOURCE
"KRN",19,10082,"RPC",1058,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,10082,"RPC",1059,0)
ORQPT PATIENT TEAM PROVIDERS
"KRN",19,10082,"RPC",1060,0)
ORQPT PROVIDER PATIENTS
"KRN",19,10082,"RPC",1061,0)
ORQPT PROVIDERS
"KRN",19,10082,"RPC",1062,0)
ORQPT SPECIALTIES
"KRN",19,10082,"RPC",1063,0)
ORQPT SPECIALTY PATIENTS
"KRN",19,10082,"RPC",1064,0)
ORQPT TEAM PATIENTS
"KRN",19,10082,"RPC",1065,0)
ORQPT TEAMS
"KRN",19,10082,"RPC",1066,0)
ORQPT WARD PATIENTS
"KRN",19,10082,"RPC",1067,0)
ORQPT WARDRMBED
"KRN",19,10082,"RPC",1068,0)
ORQPT WARDS
"KRN",19,10082,"RPC",1069,0)
ORQQAL DETAIL
"KRN",19,10082,"RPC",1070,0)
ORQQAL LIST
"KRN",19,10082,"RPC",1071,0)
ORQQAL LIST REPORT
"KRN",19,10082,"RPC",1072,0)
ORQQCN ADDCMT
"KRN",19,10082,"RPC",1073,0)
ORQQCN ADMIN COMPLETE
"KRN",19,10082,"RPC",1074,0)
ORQQCN DETAIL
"KRN",19,10082,"RPC",1075,0)
ORQQCN DISCONTINUE
"KRN",19,10082,"RPC",1076,0)
ORQQCN FIND CONSULT
"KRN",19,10082,"RPC",1077,0)
ORQQCN FORWARD
"KRN",19,10082,"RPC",1078,0)
ORQQCN GET CONSULT
"KRN",19,10082,"RPC",1079,0)
ORQQCN GET ORDER NUMBER
"KRN",19,10082,"RPC",1080,0)
ORQQCN GET PROC SVCS
"KRN",19,10082,"RPC",1081,0)
ORQQCN LIST
"KRN",19,10082,"RPC",1082,0)
ORQQCN LOAD FOR EDIT
"KRN",19,10082,"RPC",1083,0)
ORQQCN MED RESULTS
"KRN",19,10082,"RPC",1084,0)
ORQQCN PRINT SF513
"KRN",19,10082,"RPC",1085,0)
ORQQCN RECEIVE
"KRN",19,10082,"RPC",1086,0)
ORQQCN RESUBMIT
"KRN",19,10082,"RPC",1087,0)
ORQQCN SET ACT MENUS
"KRN",19,10082,"RPC",1088,0)
ORQQCN SHOW SF513
"KRN",19,10082,"RPC",1089,0)
ORQQCN SIGFIND
"KRN",19,10082,"RPC",1090,0)
ORQQCN STATUS
"KRN",19,10082,"RPC",1091,0)
ORQQCN SVCLIST
"KRN",19,10082,"RPC",1092,0)
ORQQCN SVCTREE
"KRN",19,10082,"RPC",1093,0)
ORQQCN URGENCIES
"KRN",19,10082,"RPC",1094,0)
ORQQCN2 GET CONTEXT
"KRN",19,10082,"RPC",1095,0)
ORQQCN2 SAVE CONTEXT
"KRN",19,10082,"RPC",1096,0)
ORQQLR DETAIL
"KRN",19,10082,"RPC",1097,0)
ORQQLR SEARCH RANGE INPT
"KRN",19,10082,"RPC",1098,0)
ORQQLR SEARCH RANGE OUTPT
"KRN",19,10082,"RPC",1099,0)
ORQQPL ADD SAVE
"KRN",19,10082,"RPC",1100,0)
ORQQPL AUDIT HIST
"KRN",19,10082,"RPC",1101,0)
ORQQPL CHECK DUP
"KRN",19,10082,"RPC",1102,0)
ORQQPL CLIN FILTER LIST
"KRN",19,10082,"RPC",1103,0)
ORQQPL CLIN SRCH
"KRN",19,10082,"RPC",1104,0)
ORQQPL DELETE
"KRN",19,10082,"RPC",1105,0)
ORQQPL DETAIL
"KRN",19,10082,"RPC",1106,0)
ORQQPL EDIT LOAD
"KRN",19,10082,"RPC",1107,0)
ORQQPL EDIT SAVE
"KRN",19,10082,"RPC",1108,0)
ORQQPL INACTIVATE
"KRN",19,10082,"RPC",1109,0)
ORQQPL INIT PT
"KRN",19,10082,"RPC",1110,0)
ORQQPL INIT USER
"KRN",19,10082,"RPC",1111,0)
ORQQPL LIST
"KRN",19,10082,"RPC",1112,0)
ORQQPL PROB COMMENTS
"KRN",19,10082,"RPC",1113,0)
ORQQPL PROBLEM LEX SEARCH
"KRN",19,10082,"RPC",1114,0)
ORQQPL PROBLEM LIST
"KRN",19,10082,"RPC",1115,0)
ORQQPL PROV FILTER LIST
"KRN",19,10082,"RPC",1116,0)
ORQQPL PROVIDER LIST
"KRN",19,10082,"RPC",1117,0)
ORQQPL REPLACE
"KRN",19,10082,"RPC",1118,0)
ORQQPL SAVEVIEW
"KRN",19,10082,"RPC",1119,0)
ORQQPL SERV FILTER LIST
"KRN",19,10082,"RPC",1120,0)
ORQQPL SRVC SRCH
"KRN",19,10082,"RPC",1121,0)
ORQQPL UPDATE
"KRN",19,10082,"RPC",1122,0)
ORQQPL USER PROB CATS
"KRN",19,10082,"RPC",1123,0)
ORQQPL USER PROB LIST
"KRN",19,10082,"RPC",1124,0)
ORQQPL VERIFY
"KRN",19,10082,"RPC",1125,0)
ORQQPP LIST
"KRN",19,10082,"RPC",1126,0)
ORQQPS DETAIL
"KRN",19,10082,"RPC",1127,0)
ORQQPS LIST
"KRN",19,10082,"RPC",1133,0)
ORQQPX REMINDER DETAIL
"KRN",19,10082,"RPC",1135,0)
ORQQPX REMINDERS LIST
"KRN",19,10082,"RPC",1136,0)
ORQQVI NOTEVIT
"KRN",19,10082,"RPC",1137,0)
ORQQVI VITALS
"KRN",19,10082,"RPC",1138,0)
ORQQVI VITALS FOR DATE RANGE
"KRN",19,10082,"RPC",1139,0)
ORQQVI1 DETAIL
"KRN",19,10082,"RPC",1140,0)
ORQQVI1 GRID
"KRN",19,10082,"RPC",1141,0)
ORQQVI2 VITALS HELP
"KRN",19,10082,"RPC",1142,0)
ORQQVI2 VITALS RATE CHECK
"KRN",19,10082,"RPC",1144,0)
ORQQVI2 VITALS VAL & STORE
"KRN",19,10082,"RPC",1145,0)
ORQQVI2 VITALS VALIDATE
"KRN",19,10082,"RPC",1146,0)
ORQQVI2 VITALS VALIDATE TYPE
"KRN",19,10082,"RPC",1147,0)
ORQQVS DETAIL NOTES
"KRN",19,10082,"RPC",1148,0)
ORQQVS DETAIL SUMMARY
"KRN",19,10082,"RPC",1149,0)
ORQQVS VISITS/APPTS
"KRN",19,10082,"RPC",1150,0)
ORQQXMB MAIL GROUPS
"KRN",19,10082,"RPC",1151,0)
ORQQXQA PATIENT
"KRN",19,10082,"RPC",1152,0)
ORQQXQA USER
"KRN",19,10082,"RPC",1153,0)
ORWCH LOADALL
"KRN",19,10082,"RPC",1154,0)
ORWCH LOADSIZ
"KRN",19,10082,"RPC",1155,0)
ORWCH SAVEALL
"KRN",19,10082,"RPC",1156,0)
ORWCH SAVESIZ
"KRN",19,10082,"RPC",1157,0)
ORWCS LIST OF CONSULT REPORTS
"KRN",19,10082,"RPC",1158,0)
ORWCS PRINT REPORT
"KRN",19,10082,"RPC",1159,0)
ORWCS REPORT TEXT
"KRN",19,10082,"RPC",1160,0)
ORWCV DTLVST
"KRN",19,10082,"RPC",1161,0)
ORWCV LAB
"KRN",19,10082,"RPC",1162,0)
ORWCV POLL
"KRN",19,10082,"RPC",1163,0)
ORWCV START
"KRN",19,10082,"RPC",1164,0)
ORWCV STOP
"KRN",19,10082,"RPC",1165,0)
ORWCV VST
"KRN",19,10082,"RPC",1166,0)
ORWD DEF
"KRN",19,10082,"RPC",1167,0)
ORWD DT
"KRN",19,10082,"RPC",1168,0)
ORWD FORMID
"KRN",19,10082,"RPC",1169,0)
ORWD GET4EDIT
"KRN",19,10082,"RPC",1170,0)
ORWD KEY
"KRN",19,10082,"RPC",1171,0)
ORWD OI
"KRN",19,10082,"RPC",1172,0)
ORWD PROVKEY
"KRN",19,10082,"RPC",1173,0)
ORWD SAVE
"KRN",19,10082,"RPC",1174,0)
ORWD SAVEACT
"KRN",19,10082,"RPC",1175,0)
ORWD SIGN
"KRN",19,10082,"RPC",1176,0)
ORWD VALIDACT
"KRN",19,10082,"RPC",1177,0)
ORWD1 PARAM
"KRN",19,10082,"RPC",1178,0)
ORWD1 PRINTGUI
"KRN",19,10082,"RPC",1179,0)
ORWD1 RVPRINT
"KRN",19,10082,"RPC",1180,0)
ORWD2 DEVINFO
"KRN",19,10082,"RPC",1181,0)
ORWD2 MANUAL
"KRN",19,10082,"RPC",1182,0)
ORWDAL32 ALLERGY MATCH
"KRN",19,10082,"RPC",1183,0)
ORWDAL32 DEF
"KRN",19,10082,"RPC",1184,0)
ORWDAL32 SYMPTOMS
"KRN",19,10082,"RPC",1185,0)
ORWDCN32 DEF
"KRN",19,10082,"RPC",1186,0)
ORWDCN32 ORDRMSG
"KRN",19,10082,"RPC",1187,0)
ORWDCN32 PROCEDURES
"KRN",19,10082,"RPC",1188,0)
ORWDCSLT DEF
"KRN",19,10082,"RPC",1189,0)
ORWDCSLT LOOK200
"KRN",19,10082,"RPC",1190,0)
ORWDFH ADDLATE
"KRN",19,10082,"RPC",1191,0)
ORWDFH ATTR
"KRN",19,10082,"RPC",1192,0)
ORWDFH CURISO
"KRN",19,10082,"RPC",1193,0)
ORWDFH DIETS
"KRN",19,10082,"RPC",1194,0)
ORWDFH FINDTYP
"KRN",19,10082,"RPC",1195,0)
ORWDFH ISOIEN
"KRN",19,10082,"RPC",1196,0)
ORWDFH ISOLIST
"KRN",19,10082,"RPC",1197,0)
ORWDFH PARAM
"KRN",19,10082,"RPC",1198,0)
ORWDFH QTY2CC
"KRN",19,10082,"RPC",1199,0)
ORWDFH TFPROD
"KRN",19,10082,"RPC",1200,0)
ORWDFH TXT
"KRN",19,10082,"RPC",1201,0)
ORWDGX LOAD
"KRN",19,10082,"RPC",1202,0)
ORWDGX VMDEF
"KRN",19,10082,"RPC",1203,0)
ORWDLR ABBSPEC
"KRN",19,10082,"RPC",1204,0)
ORWDLR ALLSAMP
"KRN",19,10082,"RPC",1205,0)
ORWDLR DEF
"KRN",19,10082,"RPC",1206,0)
ORWDLR LOAD
"KRN",19,10082,"RPC",1207,0)
ORWDLR OIPARAM
"KRN",19,10082,"RPC",1208,0)
ORWDLR STOP
"KRN",19,10082,"RPC",1209,0)
ORWDLR32 ABBSPEC
"KRN",19,10082,"RPC",1210,0)
ORWDLR32 ALLSAMP
"KRN",19,10082,"RPC",1211,0)
ORWDLR32 ALLSPEC
"KRN",19,10082,"RPC",1212,0)
ORWDLR32 DEF
"KRN",19,10082,"RPC",1213,0)
ORWDLR32 IC DEFAULT
"KRN",19,10082,"RPC",1214,0)
ORWDLR32 IC VALID
"KRN",19,10082,"RPC",1215,0)
ORWDLR32 IMMED COLLECT
"KRN",19,10082,"RPC",1216,0)
ORWDLR32 LAB COLL TIME
"KRN",19,10082,"RPC",1217,0)
ORWDLR32 LOAD
"KRN",19,10082,"RPC",1218,0)
ORWDLR32 MAXDAYS
"KRN",19,10082,"RPC",1219,0)
ORWDLR32 ONE SAMPLE
"KRN",19,10082,"RPC",1220,0)
ORWDLR32 ONE SPECIMEN
"KRN",19,10082,"RPC",1221,0)
ORWDLR32 STOP
"KRN",19,10082,"RPC",1222,0)
ORWDOR VMSLCT
"KRN",19,10082,"RPC",1227,0)
ORWDPS32 ALLROUTE
"KRN",19,10082,"RPC",1228,0)
ORWDPS32 AUTH
"KRN",19,10082,"RPC",1229,0)
ORWDPS32 DLGSLCT
"KRN",19,10082,"RPC",1230,0)
ORWDPS32 DOSES
"KRN",19,10082,"RPC",1231,0)
ORWDPS32 DRUGMSG
"KRN",19,10082,"RPC",1232,0)
ORWDPS32 FORMALT
"KRN",19,10082,"RPC",1233,0)
ORWDPS32 ISSPLY
"KRN",19,10082,"RPC",1234,0)
ORWDPS32 IVAMT
"KRN",19,10082,"RPC",1235,0)
ORWDPS32 MEDISIV
"KRN",19,10082,"RPC",1236,0)
ORWDPS32 OISLCT
"KRN",19,10082,"RPC",1237,0)
ORWDPS32 SCSTS
"KRN",19,10082,"RPC",1238,0)
ORWDPS32 VALQTY
"KRN",19,10082,"RPC",1239,0)
ORWDPS32 VALRATE
"KRN",19,10082,"RPC",1240,0)
ORWDPS32 VALSCH
"KRN",19,10082,"RPC",1241,0)
ORWDRA DEF
"KRN",19,10082,"RPC",1242,0)
ORWDRA32 APPROVAL
"KRN",19,10082,"RPC",1243,0)
ORWDRA32 DEF
"KRN",19,10082,"RPC",1244,0)
ORWDRA32 IMTYPSEL
"KRN",19,10082,"RPC",1245,0)
ORWDRA32 ISOLATN
"KRN",19,10082,"RPC",1246,0)
ORWDRA32 LOCTYPE
"KRN",19,10082,"RPC",1247,0)
ORWDRA32 PROCMSG
"KRN",19,10082,"RPC",1248,0)
ORWDRA32 RADSRC
"KRN",19,10082,"RPC",1249,0)
ORWDRA32 RAORDITM
"KRN",19,10082,"RPC",1250,0)
ORWDX AGAIN
"KRN",19,10082,"RPC",1251,0)
ORWDX DGRP
"KRN",19,10082,"RPC",1252,0)
ORWDX DISMSG
"KRN",19,10082,"RPC",1253,0)
ORWDX DLGDEF
"KRN",19,10082,"RPC",1254,0)
ORWDX DLGID
"KRN",19,10082,"RPC",1255,0)
ORWDX DLGQUIK
"KRN",19,10082,"RPC",1256,0)
ORWDX FORMID
"KRN",19,10082,"RPC",1257,0)
ORWDX LOADRSP
"KRN",19,10082,"RPC",1258,0)
ORWDX LOCK
"KRN",19,10082,"RPC",1259,0)
ORWDX MSG
"KRN",19,10082,"RPC",1260,0)
ORWDX ORDITM
"KRN",19,10082,"RPC",1261,0)
ORWDX SAVE
"KRN",19,10082,"RPC",1262,0)
ORWDX SEND
"KRN",19,10082,"RPC",1263,0)
ORWDX SENDP
"KRN",19,10082,"RPC",1264,0)
ORWDX UNLOCK
"KRN",19,10082,"RPC",1265,0)
ORWDX WRLST
"KRN",19,10082,"RPC",1266,0)
ORWDXA ALERT
"KRN",19,10082,"RPC",1267,0)
ORWDXA COMPLETE
"KRN",19,10082,"RPC",1268,0)
ORWDXA DC
"KRN",19,10082,"RPC",1269,0)
ORWDXA DCREASON
"KRN",19,10082,"RPC",1270,0)
ORWDXA DCREQIEN
"KRN",19,10082,"RPC",1271,0)
ORWDXA FLAG
"KRN",19,10082,"RPC",1272,0)
ORWDXA FLAGTXT
"KRN",19,10082,"RPC",1273,0)
ORWDXA HOLD
"KRN",19,10082,"RPC",1274,0)
ORWDXA UNFLAG
"KRN",19,10082,"RPC",1275,0)
ORWDXA UNHOLD
"KRN",19,10082,"RPC",1276,0)
ORWDXA VALID
"KRN",19,10082,"RPC",1277,0)
ORWDXA VERIFY
"KRN",19,10082,"RPC",1278,0)
ORWDXA WCGET
"KRN",19,10082,"RPC",1279,0)
ORWDXA WCPUT
"KRN",19,10082,"RPC",1280,0)
ORWDXC ACCEPT
"KRN",19,10082,"RPC",1281,0)
ORWDXC DELAY
"KRN",19,10082,"RPC",1282,0)
ORWDXC DELORD
"KRN",19,10082,"RPC",1283,0)
ORWDXC DISPLAY
"KRN",19,10082,"RPC",1284,0)
ORWDXC FILLID
"KRN",19,10082,"RPC",1285,0)
ORWDXC ON
"KRN",19,10082,"RPC",1286,0)
ORWDXC SAVECHK
"KRN",19,10082,"RPC",1287,0)
ORWDXC SESSION
"KRN",19,10082,"RPC",1288,0)
ORWDXM AUTOACK
"KRN",19,10082,"RPC",1289,0)
ORWDXM DLGNAME
"KRN",19,10082,"RPC",1290,0)
ORWDXM FORMID
"KRN",19,10082,"RPC",1291,0)
ORWDXM LOADSET
"KRN",19,10082,"RPC",1292,0)
ORWDXM MENU
"KRN",19,10082,"RPC",1293,0)
ORWDXM MSTYLE
"KRN",19,10082,"RPC",1294,0)
ORWDXM PROMPTS
"KRN",19,10082,"RPC",1295,0)
ORWDXM1 BLDQRSP
"KRN",19,10082,"RPC",1296,0)
ORWDXM2 CLRRCL
"KRN",19,10082,"RPC",1297,0)
ORWDXQ DLGNAME
"KRN",19,10082,"RPC",1298,0)
ORWDXQ DLGSAVE
"KRN",19,10082,"RPC",1299,0)
ORWDXQ GETQLST
"KRN",19,10082,"RPC",1300,0)
ORWDXQ GETQNAM
"KRN",19,10082,"RPC",1301,0)
ORWDXQ PUTQLST
"KRN",19,10082,"RPC",1302,0)
ORWDXQ PUTQNAM
"KRN",19,10082,"RPC",1303,0)
ORWDXR ISREL
"KRN",19,10082,"RPC",1304,0)
ORWDXR RENEW
"KRN",19,10082,"RPC",1305,0)
ORWDXR RNWFLDS
"KRN",19,10082,"RPC",1306,0)
ORWGEPT CLINRNG
"KRN",19,10082,"RPC",1307,0)
ORWLR CUMULATIVE REPORT
"KRN",19,10082,"RPC",1308,0)
ORWLR CUMULATIVE SECTION
"KRN",19,10082,"RPC",1309,0)
ORWLR REPORT LISTS
"KRN",19,10082,"RPC",1310,0)
ORWLRR ALLTESTS
"KRN",19,10082,"RPC",1311,0)
ORWLRR ATESTS
"KRN",19,10082,"RPC",1312,0)
ORWLRR ATG
"KRN",19,10082,"RPC",1313,0)
ORWLRR ATOMICS
"KRN",19,10082,"RPC",1314,0)
ORWLRR CHART
"KRN",19,10082,"RPC",1315,0)
ORWLRR CHEMTEST
"KRN",19,10082,"RPC",1316,0)
ORWLRR GRID
"KRN",19,10082,"RPC",1317,0)
ORWLRR INTERIM
"KRN",19,10082,"RPC",1318,0)
ORWLRR INTERIMG
"KRN",19,10082,"RPC",1319,0)
ORWLRR INTERIMS
"KRN",19,10082,"RPC",1320,0)
ORWLRR MICRO
"KRN",19,10082,"RPC",1321,0)
ORWLRR NEWOLD
"KRN",19,10082,"RPC",1322,0)
ORWLRR PARAM
"KRN",19,10082,"RPC",1323,0)
ORWLRR SPEC
"KRN",19,10082,"RPC",1324,0)
ORWLRR TG
"KRN",19,10082,"RPC",1325,0)
ORWLRR USERS
"KRN",19,10082,"RPC",1326,0)
ORWLRR UTGA
"KRN",19,10082,"RPC",1327,0)
ORWLRR UTGD
"KRN",19,10082,"RPC",1328,0)
ORWLRR UTGR
"KRN",19,10082,"RPC",1329,0)
ORWMC PATIENT PROCEDURES
"KRN",19,10082,"RPC",1330,0)
ORWOR RESULT
"KRN",19,10082,"RPC",1331,0)
ORWOR SHEETS
"KRN",19,10082,"RPC",1332,0)
ORWOR TSALL
"KRN",19,10082,"RPC",1333,0)
ORWORB AUTOUNFLAG ORDERS
"KRN",19,10082,"RPC",1334,0)
ORWORB FASTUSER
"KRN",19,10082,"RPC",1335,0)
ORWORB GET TIU ALERT INFO
"KRN",19,10082,"RPC",1336,0)
ORWORB GETDATA
"KRN",19,10082,"RPC",1337,0)
ORWORB KILL UNSIG ORDERS ALERT
"KRN",19,10082,"RPC",1339,0)
ORWORDG ALLTREE
"KRN",19,10082,"RPC",1340,0)
ORWORDG GRPSEQB
"KRN",19,10082,"RPC",1341,0)
ORWORDG IEN
"KRN",19,10082,"RPC",1342,0)
ORWORDG MAPSEQ
"KRN",19,10082,"RPC",1343,0)
ORWORDG REVSTS
"KRN",19,10082,"RPC",1344,0)
ORWORR AGET
"KRN",19,10082,"RPC",1345,0)
ORWORR GET
"KRN",19,10082,"RPC",1346,0)
ORWORR GET4LST
"KRN",19,10082,"RPC",1347,0)
ORWORR GETBYIFN
"KRN",19,10082,"RPC",1348,0)
ORWORR GETTXT
"KRN",19,10082,"RPC",1349,0)
ORWPCE ACTIVE PROV
"KRN",19,10082,"RPC",1350,0)
ORWPCE ACTPROB
"KRN",19,10082,"RPC",1351,0)
ORWPCE CPTREQD
"KRN",19,10082,"RPC",1352,0)
ORWPCE DELETE
"KRN",19,10082,"RPC",1353,0)
ORWPCE DIAG
"KRN",19,10082,"RPC",1354,0)
ORWPCE GET EDUCATION TOPICS
"KRN",19,10082,"RPC",1355,0)
ORWPCE GET EXAM TYPE
"KRN",19,10082,"RPC",1356,0)
ORWPCE GET HEALTH FACTORS TY
"KRN",19,10082,"RPC",1357,0)
ORWPCE GET IMMUNIZATION TYPE
"KRN",19,10082,"RPC",1358,0)
ORWPCE GET SET OF CODES
"KRN",19,10082,"RPC",1359,0)
ORWPCE GET SKIN TEST TYPE
"KRN",19,10082,"RPC",1360,0)
ORWPCE GET TREATMENT TYPE
"KRN",19,10082,"RPC",1361,0)
ORWPCE HF
"KRN",19,10082,"RPC",1362,0)
ORWPCE IMM
"KRN",19,10082,"RPC",1363,0)
ORWPCE LEX
"KRN",19,10082,"RPC",1364,0)
ORWPCE LEXCODE
"KRN",19,10082,"RPC",1366,0)
ORWPCE NOTEVSTR
"KRN",19,10082,"RPC",1367,0)
ORWPCE PCE4NOTE
"KRN",19,10082,"RPC",1368,0)
ORWPCE PED
"KRN",19,10082,"RPC",1369,0)
ORWPCE PROC
"KRN",19,10082,"RPC",1370,0)
ORWPCE SAVE
"KRN",19,10082,"RPC",1371,0)
ORWPCE SCDIS
"KRN",19,10082,"RPC",1372,0)
ORWPCE SCSEL
"KRN",19,10082,"RPC",1373,0)
ORWPCE SK
"KRN",19,10082,"RPC",1374,0)
ORWPCE TRT
"KRN",19,10082,"RPC",1375,0)
ORWPCE VISIT
"KRN",19,10082,"RPC",1376,0)
ORWPCE XAM
"KRN",19,10082,"RPC",1377,0)
ORWPS ACTIVE
"KRN",19,10082,"RPC",1378,0)
ORWPS COVER
"KRN",19,10082,"RPC",1379,0)
ORWPS DETAIL
"KRN",19,10082,"RPC",1380,0)
ORWPS1 NEWDLG
"KRN",19,10082,"RPC",1381,0)
ORWPS1 PICKUP
"KRN",19,10082,"RPC",1382,0)
ORWPS1 REFILL
"KRN",19,10082,"RPC",1383,0)
ORWPT ADMITLST
"KRN",19,10082,"RPC",1384,0)
ORWPT APPTLST
"KRN",19,10082,"RPC",1385,0)
ORWPT CLINRNG
"KRN",19,10082,"RPC",1386,0)
ORWPT CWAD
"KRN",19,10082,"RPC",1387,0)
ORWPT DFLTSRC
"KRN",19,10082,"RPC",1388,0)
ORWPT DIEDON
"KRN",19,10082,"RPC",1389,0)
ORWPT DISCHARGE
"KRN",19,10082,"RPC",1390,0)
ORWPT ENCTITL
"KRN",19,10082,"RPC",1391,0)
ORWPT FULLSSN
"KRN",19,10082,"RPC",1392,0)
ORWPT ID INFO
"KRN",19,10082,"RPC",1393,0)
ORWPT LAST5
"KRN",19,10082,"RPC",1394,0)
ORWPT LIST ALL
"KRN",19,10082,"RPC",1395,0)
ORWPT PTINQ
"KRN",19,10082,"RPC",1396,0)
ORWPT SAVDFLT
"KRN",19,10082,"RPC",1397,0)
ORWPT SELCHK
"KRN",19,10082,"RPC",1398,0)
ORWPT SELECT
"KRN",19,10082,"RPC",1399,0)
ORWPT SHARE
"KRN",19,10082,"RPC",1400,0)
ORWPT TOP
"KRN",19,10082,"RPC",1401,0)
ORWPT1 PCDETAIL
"KRN",19,10082,"RPC",1402,0)
ORWPT1 PRCARE
"KRN",19,10082,"RPC",1403,0)
ORWPT16 ADMITLST
"KRN",19,10082,"RPC",1404,0)
ORWPT16 APPTLST
"KRN",19,10082,"RPC",1405,0)
ORWPT16 DEMOG
"KRN",19,10082,"RPC",1406,0)
ORWPT16 GETVSIT
"KRN",19,10082,"RPC",1407,0)
ORWPT16 ID INFO
"KRN",19,10082,"RPC",1408,0)
ORWPT16 LIST ALL
"KRN",19,10082,"RPC",1409,0)
ORWPT16 LOOKUP
"KRN",19,10082,"RPC",1410,0)
ORWPT16 PSCNVT
"KRN",19,10082,"RPC",1411,0)
ORWRA DEFAULT EXAM SETTINGS
"KRN",19,10082,"RPC",1412,0)
ORWRA IMAGING EXAMS
"KRN",19,10082,"RPC",1413,0)
ORWRA PRINT REPORT
"KRN",19,10082,"RPC",1414,0)
ORWRA REPORT TEXT
"KRN",19,10082,"RPC",1415,0)
ORWRP PRINT LAB REPORTS
"KRN",19,10082,"RPC",1416,0)
ORWRP PRINT REPORT
"KRN",19,10082,"RPC",1417,0)
ORWRP REPORT LISTS
"KRN",19,10082,"RPC",1418,0)
ORWRP REPORT TEXT
"KRN",19,10082,"RPC",1419,0)
ORWRP1 LISTNUTR
"KRN",19,10082,"RPC",1420,0)
ORWRP16 REPORT LISTS
"KRN",19,10082,"RPC",1421,0)
ORWRP16 REPORT TEXT
"KRN",19,10082,"RPC",1422,0)
ORWTIU GET DCSUMM CONTEXT
"KRN",19,10082,"RPC",1423,0)
ORWTIU GET TIU CONTEXT
"KRN",19,10082,"RPC",1424,0)
ORWTIU SAVE DCSUMM CONTEXT
"KRN",19,10082,"RPC",1425,0)
ORWTIU SAVE TIU CONTEXT
"KRN",19,10082,"RPC",1426,0)
ORWU CLINLOC
"KRN",19,10082,"RPC",1427,0)
ORWU DEVICE
"KRN",19,10082,"RPC",1428,0)
ORWU DT
"KRN",19,10082,"RPC",1429,0)
ORWU EXTNAME
"KRN",19,10082,"RPC",1430,0)
ORWU GBLREF
"KRN",19,10082,"RPC",1431,0)
ORWU GENERIC
"KRN",19,10082,"RPC",1432,0)
ORWU HASKEY
"KRN",19,10082,"RPC",1433,0)
ORWU HOSPLOC
"KRN",19,10082,"RPC",1434,0)
ORWU INPLOC
"KRN",19,10082,"RPC",1435,0)
ORWU NEWPERS
"KRN",19,10082,"RPC",1436,0)
ORWU NPHASKEY
"KRN",19,10082,"RPC",1437,0)
ORWU PATCH
"KRN",19,10082,"RPC",1438,0)
ORWU TOOLMENU
"KRN",19,10082,"RPC",1439,0)
ORWU USERINFO
"KRN",19,10082,"RPC",1440,0)
ORWU VALDT
"KRN",19,10082,"RPC",1441,0)
ORWU VALIDSIG
"KRN",19,10082,"RPC",1442,0)
ORWU VERSRV
"KRN",19,10082,"RPC",1443,0)
ORWU16 DEVICE
"KRN",19,10082,"RPC",1444,0)
ORWU16 HOSPLOC
"KRN",19,10082,"RPC",1445,0)
ORWU16 NEWPERS
"KRN",19,10082,"RPC",1446,0)
ORWU16 USERINFO
"KRN",19,10082,"RPC",1447,0)
ORWU16 VALDT
"KRN",19,10082,"RPC",1448,0)
ORWU16 VALIDSIG
"KRN",19,10082,"RPC",1449,0)
ORWUH POPUP
"KRN",19,10082,"RPC",1450,0)
ORWUX SYMTAB
"KRN",19,10082,"RPC",1451,0)
ORWUXT LST
"KRN",19,10082,"RPC",1452,0)
ORWUXT REF
"KRN",19,10082,"RPC",1453,0)
ORWUXT VAL
"KRN",19,10082,"RPC",1454,0)
ORQQCN DEFAULT REQUEST REASON
"KRN",19,10082,"RPC",1455,0)
ORWDX LOCK ORDER
"KRN",19,10082,"RPC",1456,0)
ORWDX UNLOCK ORDER
"KRN",19,10082,"RPC",1457,0)
ORWDCN32 NEWDLG
"KRN",19,10082,"RPC",1458,0)
ORQQCN GET SERVICE IEN
"KRN",19,10082,"RPC",1459,0)
ORQQCN PROVDX
"KRN",19,10082,"RPC",1460,0)
TIU TEMPLATE ACCESS LEVEL
"KRN",19,10082,"RPC",1461,0)
TIU GET DOCUMENT TITLE
"KRN",19,10082,"RPC",1462,0)
ORWPT BYWARD
"KRN",19,10082,"RPC",1463,0)
ORQQPX GET HIST LOCATIONS
"KRN",19,10082,"RPC",1464,0)
ORQQPX NEW REMINDERS ACTIVE
"KRN",19,10082,"RPC",1465,0)
ORWPCE GET VISIT
"KRN",19,10082,"RPC",1480,0)
TIU GET REQUEST
"KRN",19,10082,"RPC",1481,0)
ORWORB KILL EXPIR MED ALERT
"KRN",19,10082,"RPC",1482,0)
DG CHK BS5 XREF ARRAY
"KRN",19,10082,"RPC",1483,0)
DG CHK BS5 XREF Y/N
"KRN",19,10082,"RPC",1484,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,10082,"RPC",1485,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,10082,"RPC",1486,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,10082,"RPC",1487,0)
ORQQCN CANEDIT
"KRN",19,10082,"RPC",1488,0)
ORQQCN EDIT DEFAULT REASON
"KRN",19,10082,"RPC",1489,0)
ORQQCN SF513 WINDOWS PRINT
"KRN",19,10082,"RPC",1490,0)
ORWCIRN FACLIST
"KRN",19,10082,"RPC",1491,0)
ORWDLR32 GET LAB TIMES
"KRN",19,10082,"RPC",1492,0)
ORWPT LEGACY
"KRN",19,10082,"RPC",1493,0)
ORWRP GET DEFAULT PRINTER
"KRN",19,10082,"RPC",1494,0)
ORWRP PRINT WINDOWS REPORT
"KRN",19,10082,"RPC",1495,0)
ORWRP SAVE DEFAULT PRINTER
"KRN",19,10082,"RPC",1496,0)
ORWRP WINPRINT DEFAULT
"KRN",19,10082,"RPC",1497,0)
ORWRP WINPRINT LAB REPORTS
"KRN",19,10082,"RPC",1498,0)
ORWTIU WINPRINT NOTE
"KRN",19,10082,"RPC",1500,0)
ORWPCE GAFOK
"KRN",19,10082,"RPC",1501,0)
ORWPCE MHCLINIC
"KRN",19,10082,"RPC",1502,0)
ORWPCE LOADGAF
"KRN",19,10082,"RPC",1503,0)
ORWPCE SAVEGAF
"KRN",19,10082,"RPC",1504,0)
ORWPCE FORCE
"KRN",19,10082,"RPC",1505,0)
TIU GET DEFAULT PROVIDER
"KRN",19,10082,"RPC",1506,0)
TIU GET SITE PARAMETERS
"KRN",19,10082,"RPC",1507,0)
TIU IS USER A PROVIDER?
"KRN",19,10082,"RPC",1508,0)
ORWOR VWGET
"KRN",19,10082,"RPC",1509,0)
ORWOR VWSET
"KRN",19,10082,"RPC",1510,0)
ORWU PARAM
"KRN",19,10082,"RPC",1511,0)
ORWDOR LKSCRN
"KRN",19,10082,"RPC",1512,0)
ORWDOR VALNUM
"KRN",19,10082,"RPC",1513,0)
ORWDPS32 VALROUTE
"KRN",19,10082,"RPC",1515,0)
ORWORB UNSIG ORDERS FOLLOWUP
"KRN",19,10082,"RPC",1516,0)
ORWTIU GET LISTBOX ITEM
"KRN",19,10082,"RPC",1517,0)
ORWRP2 HS COMP FILES
"KRN",19,10082,"RPC",1518,0)
ORWRP2 HS COMPONENTS
"KRN",19,10082,"RPC",1519,0)
ORWRP2 HS FILE LOOKUP
"KRN",19,10082,"RPC",1520,0)
ORWRP2 HS REPORT TEXT
"KRN",19,10082,"RPC",1521,0)
ORWRP2 HS SUBITEMS
"KRN",19,10082,"RPC",1522,0)
ORWPCE HASCPT
"KRN",19,10082,"RPC",1523,0)
ORWPCE ASKPCE
"KRN",19,10082,"RPC",1524,0)
ORWPCE MHTESTOK
"KRN",19,10082,"RPC",1525,0)
ORWPCE GAFURL
"KRN",19,10082,"RPC",1526,0)
ORQQPXRM DIALOG PROMPTS
"KRN",19,10082,"RPC",1527,0)
ORQQPXRM EDUCATION SUBTOPICS
"KRN",19,10082,"RPC",1528,0)
ORQQPXRM EDUCATION SUMMARY
"KRN",19,10082,"RPC",1529,0)
ORQQPXRM EDUCATION TOPIC
"KRN",19,10082,"RPC",1530,0)
ORQQPXRM MENTAL HEALTH
"KRN",19,10082,"RPC",1531,0)
ORQQPXRM MENTAL HEALTH RESULTS
"KRN",19,10082,"RPC",1532,0)
ORQQPXRM MENTAL HEALTH SAVE
"KRN",19,10082,"RPC",1533,0)
ORQQPXRM PROGRESS NOTE HEADER
"KRN",19,10082,"RPC",1534,0)
ORQQPXRM REMINDER CATEGORIES
"KRN",19,10082,"RPC",1535,0)
ORQQPXRM REMINDER DETAIL
"KRN",19,10082,"RPC",1536,0)
ORQQPXRM REMINDER DIALOG
"KRN",19,10082,"RPC",1537,0)
ORQQPXRM REMINDER EVALUATION
"KRN",19,10082,"RPC",1538,0)
ORQQPXRM REMINDER INQUIRY
"KRN",19,10082,"RPC",1539,0)
ORQQPXRM REMINDER WEB
"KRN",19,10082,"RPC",1540,0)
ORQQPXRM REMINDERS APPLICABLE
"KRN",19,10082,"RPC",1541,0)
ORQQPXRM REMINDERS UNEVALUATED
"KRN",19,10082,"RPC",1542,0)
ORWLRR INFO
"KRN",19,10082,"RPC",1543,0)
TIU GET PRINT NAME
"KRN",19,10082,"RPC",1544,0)
TIU WAS THIS SAVED?
"KRN",19,10082,"RPC",1545,0)
ORWD1 COMLOC
"KRN",19,10082,"RPC",1546,0)
ORWD1 SIG4ANY
"KRN",19,10082,"RPC",1547,0)
ORWD1 SIG4ONE
"KRN",19,10082,"RPC",1548,0)
ORWOR UNSIGN
"KRN",19,10082,"RPC",1549,0)
ORWPT INPLOC
"KRN",19,10082,"RPC",1553,0)
ORQQCN2 GET PREREQUISITE
"KRN",19,10082,"RPC",1554,0)
ORQQCN2 SCHEDULE CONSULT
"KRN",19,10082,"RPC",1555,0)
YS GAF API
"KRN",19,10082,"RPC",1557,0)
ORWDLR33 FUTURE LAB COLLECTS
"KRN",19,10082,"RPC",1558,0)
ORWRP PRINT REMOTE REPORT
"KRN",19,10082,"RPC",1559,0)
ORWRP PRINT WINDOWS REMOTE
"KRN",19,10082,"RPC",1560,0)
ORWRP PRINT LAB REMOTE
"KRN",19,10082,"RPC",1561,0)
ORWRP PRINT WINDOWS LAB REMOTE
"KRN",19,10082,"RPC",1562,0)
ORQQPXRM DIALOG ACTIVE
"KRN",19,10082,"RPC",1563,0)
ORWPCE MH TEST AUTHORIZED
"KRN",19,10082,"RPC",1564,0)
TIU GET BOILERPLATE
"KRN",19,10082,"RPC",1565,0)
ORWRP2 HS COMPONENT SUBS
"KRN",19,10082,"RPC",1566,0)
ORWCH SAVFONT
"KRN",19,10082,"RPC",1567,0)
ORWDLR33 LASTTIME
"KRN",19,10082,"RPC",1568,0)
ORWD1 SVONLY
"KRN",19,10082,"RPC",1569,0)
ORWPCE HASVISIT
"KRN",19,10082,"RPC",1570,0)
ORWPCE GETMOD
"KRN",19,10082,"RPC",1571,0)
ORWPCE CPTMODS
"KRN",19,10082,"RPC",1572,0)
XWB REMOTE CLEAR
"KRN",19,10082,"RPC",1573,0)
XWB REMOTE GETDATA
"KRN",19,10082,"RPC",1574,0)
XWB REMOTE RPC
"KRN",19,10082,"RPC",1575,0)
XWB REMOTE STATUS CHECK
"KRN",19,10082,"RPC",1576,0)
ORQQCN ASSIGNABLE MED RESULTS
"KRN",19,10082,"RPC",1577,0)
ORQQCN ATTACH MED RESULTS
"KRN",19,10082,"RPC",1578,0)
ORQQCN GET MED RESULT DETAILS
"KRN",19,10082,"RPC",1579,0)
ORQQCN REMOVABLE MED RESULTS
"KRN",19,10082,"RPC",1580,0)
ORQQCN REMOVE MED RESULTS
"KRN",19,10082,"RPC",1581,0)
ORQQCN SVC W/SYNONYMS
"KRN",19,10082,"RPC",1582,0)
ORWCV1 COVERSHEET LIST
"KRN",19,10082,"RPC",1583,0)
ORWORB KILL EXPIR OI ALERT
"KRN",19,10082,"RPC",1584,0)
ORWPCE GETSVC
"KRN",19,10082,"RPC",1585,0)
ORWRP LAB REPORT LISTS
"KRN",19,10082,"RPC",1587,0)
ORWTPN GETCLASS
"KRN",19,10082,"RPC",1588,0)
ORWTPN GETTC
"KRN",19,10082,"RPC",1589,0)
ORWTPO CSARNGD
"KRN",19,10082,"RPC",1590,0)
ORWTPO CSLABD
"KRN",19,10082,"RPC",1591,0)
ORWTPO GETTABS
"KRN",19,10082,"RPC",1592,0)
ORWTPP ADDLIST
"KRN",19,10082,"RPC",1593,0)
ORWTPP CHKSURR
"KRN",19,10082,"RPC",1594,0)
ORWTPP CLDAYS
"KRN",19,10082,"RPC",1595,0)
ORWTPP CLEARNOT
"KRN",19,10082,"RPC",1596,0)
ORWTPP CLRANGE
"KRN",19,10082,"RPC",1597,0)
ORWTPP CSARNG
"KRN",19,10082,"RPC",1598,0)
ORWTPP CSLAB
"KRN",19,10082,"RPC",1599,0)
ORWTPP DELLIST
"KRN",19,10082,"RPC",1600,0)
ORWTPP GETCOMBO
"KRN",19,10082,"RPC",1601,0)
ORWTPP GETCOS
"KRN",19,10082,"RPC",1602,0)
ORWTPP GETDCOS
"KRN",19,10082,"RPC",1603,0)
ORWTPP GETNOT
"KRN",19,10082,"RPC",1604,0)
ORWTPP GETNOTO
"KRN",19,10082,"RPC",1605,0)
ORWTPP GETOC
"KRN",19,10082,"RPC",1606,0)
ORWTPP GETOTHER
"KRN",19,10082,"RPC",1607,0)
ORWTPP GETREM
"KRN",19,10082,"RPC",1608,0)
ORWTPP GETSUB
"KRN",19,10082,"RPC",1609,0)
ORWTPP GETSURR
"KRN",19,10082,"RPC",1610,0)
ORWTPP GETTD
"KRN",19,10082,"RPC",1611,0)
ORWTPP GETTU
"KRN",19,10082,"RPC",1612,0)
ORWTPP LSDEF
"KRN",19,10082,"RPC",1613,0)
ORWTPP NEWLIST
"KRN",19,10082,"RPC",1614,0)
ORWTPP PLISTS
"KRN",19,10082,"RPC",1615,0)
ORWTPP PLTEAMS
"KRN",19,10082,"RPC",1616,0)
ORWTPP REMLIST
"KRN",19,10082,"RPC",1617,0)
ORWTPP SAVECD
"KRN",19,10082,"RPC",1618,0)
ORWTPP SAVECS
"KRN",19,10082,"RPC",1619,0)
ORWTPP SAVELIST
"KRN",19,10082,"RPC",1620,0)
ORWTPP SAVENOT
"KRN",19,10082,"RPC",1621,0)
ORWTPP SAVENOTO
"KRN",19,10082,"RPC",1622,0)
ORWTPP SAVEOC
"KRN",19,10082,"RPC",1623,0)
ORWTPP SAVEPLD
"KRN",19,10082,"RPC",1624,0)
ORWTPP SAVESURR
"KRN",19,10082,"RPC",1625,0)
ORWTPP SAVET
"KRN",19,10082,"RPC",1626,0)
ORWTPP SETCOMBO
"KRN",19,10082,"RPC",1627,0)
ORWTPP SETDCOS
"KRN",19,10082,"RPC",1628,0)
ORWTPP SETOTHER
"KRN",19,10082,"RPC",1629,0)
ORWTPP SETREM
"KRN",19,10082,"RPC",1630,0)
ORWTPP SETSUB
"KRN",19,10082,"RPC",1631,0)
ORWTPP SORTDEF
"KRN",19,10082,"RPC",1632,0)
ORWTPP TEAMS
"KRN",19,10082,"RPC",1633,0)
ORWTPT ATEAMS
"KRN",19,10082,"RPC",1634,0)
ORWTPT GETTEAM
"KRN",19,10082,"RPC",1635,0)
TIU TEMPLATE GET DEFAULTS
"KRN",19,10082,"RPC",1636,0)
TIU TEMPLATE GET DESCRIPTION
"KRN",19,10082,"RPC",1637,0)
TIU TEMPLATE SET DEFAULTS
"KRN",19,10082,"RPC",1638,0)
ORWTIU IDNOTES INSTALLED
"KRN",19,10082,"RPC",1639,0)
ORQQPX GET FOLDERS
"KRN",19,10082,"RPC",1640,0)
ORQQPX SET FOLDERS
"KRN",19,10082,"RPC",1641,0)
TIU FIELD CAN EDIT
"KRN",19,10082,"RPC",1642,0)
TIU FIELD DELETE
"KRN",19,10082,"RPC",1643,0)
TIU FIELD EXPORT
"KRN",19,10082,"RPC",1644,0)
TIU FIELD IMPORT
"KRN",19,10082,"RPC",1645,0)
TIU FIELD LIST
"KRN",19,10082,"RPC",1646,0)
TIU FIELD LOAD
"KRN",19,10082,"RPC",1647,0)
TIU FIELD LOAD BY IEN
"KRN",19,10082,"RPC",1648,0)
TIU FIELD LOCK
"KRN",19,10082,"RPC",1649,0)
TIU FIELD NAME IS UNIQUE
"KRN",19,10082,"RPC",1650,0)
TIU FIELD SAVE
"KRN",19,10082,"RPC",1651,0)
TIU FIELD UNLOCK
"KRN",19,10082,"RPC",1652,0)
ORWDPS1 CHK94
"KRN",19,10082,"RPC",1653,0)
ORWDPS1 ODSLCT
"KRN",19,10082,"RPC",1654,0)
ORWDPS1 SCHALL
"KRN",19,10082,"RPC",1655,0)
ORWDPS2 ADMIN
"KRN",19,10082,"RPC",1656,0)
ORWDPS2 DAY2QTY
"KRN",19,10082,"RPC",1657,0)
ORWDPS2 OISLCT
"KRN",19,10082,"RPC",1658,0)
ORWDPS2 REQST
"KRN",19,10082,"RPC",1659,0)
ORWDX DGNM
"KRN",19,10082,"RPC",1660,0)
ORWUL FV4DG
"KRN",19,10082,"RPC",1661,0)
ORWUL FVIDX
"KRN",19,10082,"RPC",1662,0)
ORWUL FVSUB
"KRN",19,10082,"RPC",1663,0)
ORWUL QV4DG
"KRN",19,10082,"RPC",1664,0)
ORWUL QVIDX
"KRN",19,10082,"RPC",1665,0)
ORWUL QVSUB
"KRN",19,10082,"RPC",1666,0)
ORWDPS1 DFLTSPLY
"KRN",19,10082,"RPC",1668,0)
PXRM REMINDER DIALOG (TIU)
"KRN",19,10082,"RPC",1669,0)
ORWPCE ANYTIME
"KRN",19,10082,"RPC",1670,0)
ORQQPX GET DEF LOCATIONS
"KRN",19,10082,"RPC",1671,0)
ORWTPP GETIMG
"KRN",19,10082,"RPC",1672,0)
ORWTPP SETIMG
"KRN",19,10082,"RPC",1673,0)
ORWTPO GETIMGD
"KRN",19,10082,"RPC",1674,0)
ORQQPX REM INSERT AT CURSOR
"KRN",19,10082,"RPC",1675,0)
TIU REMINDER DIALOGS
"KRN",19,10082,"RPC",1676,0)
TIU REM DLG OK AS TEMPLATE
"KRN",19,10082,"RPC",1677,0)
ORWDPS2 MAXREF
"KRN",19,10082,"RPC",1678,0)
ORWDPS2 SCHREQ
"KRN",19,10082,"RPC",1679,0)
ORWRP COLUMN HEADERS
"KRN",19,10082,"RPC",1680,0)
TIU FIELD DOLMTEXT
"KRN",19,10082,"RPC",1681,0)
TIU TEMPLATE PERSONAL OBJECTS
"KRN",19,10082,"RPC",1682,0)
ORWPCE AUTO VISIT TYPE SELECT
"KRN",19,10082,"RPC",1683,0)
ORWDPS2 QTY2DAY
"KRN",19,10082,"RPC",1684,0)
ORWU HAS OPTION ACCESS
"KRN",19,10082,"RPC",1685,0)
TIU TEMPLATE LOCK
"KRN",19,10082,"RPC",1686,0)
ORQQPX LVREMLST
"KRN",19,10082,"RPC",1687,0)
ORQQPX NEW COVER SHEET ACTIVE
"KRN",19,10082,"RPC",1688,0)
ORQQPX NEW COVER SHEET REMS
"KRN",19,10082,"RPC",1689,0)
ORQQPX SAVELVL
"KRN",19,10082,"RPC",1690,0)
PXRM REMINDER CATEGORY
"KRN",19,10082,"RPC",1691,0)
PXRM REMINDERS AND CATEGORIES
"KRN",19,10082,"RPC",1692,0)
TIU DIV AND CLASS INFO
"KRN",19,10082,"RPC",1693,0)
TIU TEMPLATE GETBOIL
"KRN",19,10082,"RPC",1694,0)
TIU TEMPLATE GETITEMS
"KRN",19,10082,"RPC",1695,0)
TIU TEMPLATE GETROOTS
"KRN",19,10082,"RPC",1696,0)
TIU TEMPLATE GETTEXT
"KRN",19,10082,"RPC",1697,0)
TIU TEMPLATE ISEDITOR
"KRN",19,10082,"RPC",1698,0)
TIU TEMPLATE UNLOCK
"KRN",19,10082,"RPC",1699,0)
TIU USER CLASS LONG LIST
"KRN",19,10082,"RPC",1700,0)
ORWPCE ALWAYS CHECKOUT
"KRN",19,10082,"RPC",1701,0)
ORWPCE GET EXCLUDED
"KRN",19,10082,"RPC",1702,0)
ORWDPS1 FORMALT
"KRN",19,10082,"RPC",1703,0)
ORQPT DEFAULT LIST SORT
"KRN",19,10082,"RPC",1704,0)
ORWDPS1 DOSEALT
"KRN",19,10082,"RPC",1705,0)
ORWTPR OCDESC
"KRN",19,10082,"RPC",1706,0)
ORWTPR NOTDESC
"KRN",19,10082,"RPC",1707,0)
ORWDPS1 FAILDEA
"KRN",19,10082,"RPC",1708,0)
ORQPT DEFAULT CLINIC DATE RANG
"KRN",19,10082,"RPC",1709,0)
ORWTIU CANLINK
"KRN",19,10082,"RPC",1710,0)
TIU ID ATTACH ENTRY
"KRN",19,10082,"RPC",1711,0)
TIU ID CAN ATTACH
"KRN",19,10082,"RPC",1712,0)
TIU ID CAN RECEIVE
"KRN",19,10082,"RPC",1713,0)
TIU ID DETACH ENTRY
"KRN",19,10082,"RPC",1714,0)
ORWCOM GETOBJS
"KRN",19,10082,"RPC",1715,0)
ORWCOM DETAILS
"KRN",19,10082,"RPC",1716,0)
ORWCOM PTOBJ
"KRN",19,10082,"RPC",1718,0)
TIU TEMPLATE GETLINK
"KRN",19,10082,"RPC",1719,0)
TIU TEMPLATE ALL TITLES
"KRN",19,10082,"RPC",1720,0)
ORWSR LIST
"KRN",19,10082,"RPC",1721,0)
ORWSR SHOW SURG TAB
"KRN",19,10082,"RPC",1722,0)
ORWSR GET SURG CONTEXT
"KRN",19,10082,"RPC",1723,0)
ORWSR SAVE SURG CONTEXT
"KRN",19,10082,"RPC",1724,0)
ORWSR ONECASE
"KRN",19,10082,"RPC",1727,0)
ORWSR SHOW OPTOP WHEN SIGNING
"KRN",19,10082,"RPC",1728,0)
ORWSR IS NON-OR PROCEDURE
"KRN",19,10082,"RPC",1729,0)
ORWSR CASELIST
"KRN",19,10082,"RPC",1730,0)
ORQQCN GET PROC IEN
"KRN",19,10082,"RPC",1731,0)
ORWRP PRINT V REPORT
"KRN",19,10082,"RPC",1732,0)
ORWRP3 EXPAND COLUMNS
"KRN",19,10082,"RPC",1733,0)
ORWTPD ACTDF
"KRN",19,10082,"RPC",1734,0)
ORWTPD DELDFLT
"KRN",19,10082,"RPC",1735,0)
ORWTPD GETDFLT
"KRN",19,10082,"RPC",1736,0)
ORWTPD RSDFLT
"KRN",19,10082,"RPC",1737,0)
ORWTPD SUDF
"KRN",19,10082,"RPC",1738,0)
ORWTPD SUINDV
"KRN",19,10082,"RPC",1739,0)
ORWTPD GETSETS
"KRN",19,10082,"RPC",1740,0)
ORWCOM ORDEROBJ
"KRN",19,10082,"RPC",1741,0)
ORWRP2 COMPABV
"KRN",19,10082,"RPC",1742,0)
ORWRP2 GETLKUP
"KRN",19,10082,"RPC",1743,0)
ORWRP2 SAVLKUP
"KRN",19,10082,"RPC",1744,0)
ORWRP2 COMPDISP
"KRN",19,10082,"RPC",1745,0)
ORWPCE ISCLINIC
"KRN",19,10082,"RPC",1746,0)
ORWCH SAVECOL
"KRN",19,10082,"RPC",1747,0)
ORWSR RPTLIST
"KRN",19,10082,"RPC",1748,0)
ORQQPXRM MST UPDATE
"KRN",19,10082,"RPC",1749,0)
ORWMC PATIENT PROCEDURES1
"KRN",19,10082,"RPC",1750,0)
ORWRA IMAGING EXAMS1
"KRN",19,10082,"RPC",1751,0)
ORWRA REPORT TEXT1
"KRN",19,10082,"RPC",1752,0)
ORWDPS4 CPINFO
"KRN",19,10082,"RPC",1753,0)
ORWDPS4 CPLST
"KRN",19,10082,"RPC",1754,0)
ORWORB KILL UNVER MEDS ALERT
"KRN",19,10082,"RPC",1755,0)
ORWORB KILL UNVER ORDERS ALERT
"KRN",19,10082,"RPC",1756,0)
ORWPCE HNCOK
"KRN",19,10082,"RPC",1757,0)
ORWPS MEDHIST
"KRN",19,10082,"RPC",1758,0)
TIU FIELD CHECK
"KRN",19,10082,"RPC",1759,0)
TIU FIELD LIST ADD
"KRN",19,10082,"RPC",1760,0)
TIU FIELD LIST IMPORT
"KRN",19,10082,"RPC",1761,0)
TIU SET DOCUMENT TEXT
"KRN",19,10082,"RPC",1762,0)
ORWDPS2 CHKPI
"KRN",19,10082,"RPC",1763,0)
ORWDXR GTORITM
"KRN",19,10082,"RPC",1764,0)
ORWDPS2 CHKGRP
"KRN",19,10082,"RPC",1765,0)
ORWDPS2 QOGRP
"KRN",19,10082,"RPC",1766,0)
ORWDXR GETPKG
"KRN",19,10082,"RPC",1767,0)
ORQPT MAKE RPL
"KRN",19,10082,"RPC",1768,0)
ORQPT READ RPL
"KRN",19,10082,"RPC",1769,0)
ORQPT KILL RPL
"KRN",19,10082,"RPC",1770,0)
ORWTIU GET SAVED CP FIELDS
"KRN",19,10082,"RPC",1771,0)
ORWDPS1 LOCPICK
"KRN",19,10082,"RPC",1772,0)
ORWPT LAST5 RPL
"KRN",19,10082,"RPC",1773,0)
ORWPT FULLSSN RPL
"KRN",19,10082,"RPC",1774,0)
ORWOR PKIUSE
"KRN",19,10082,"RPC",1775,0)
ORWOR1 SIG
"KRN",19,10082,"RPC",1776,0)
ORWOR1 CHKDIG
"KRN",19,10082,"RPC",1777,0)
ORWOR1 GETDTEXT
"KRN",19,10082,"RPC",1778,0)
ORWOR1 GETDSIG
"KRN",19,10082,"RPC",1779,0)
ORWTPD GETIMG
"KRN",19,10082,"RPC",1780,0)
OREVNTX1 PRMPTID
"KRN",19,10082,"RPC",1781,0)
ORECS01 CHKESSO
"KRN",19,10082,"RPC",1782,0)
ORECS01 VSITID
"KRN",19,10082,"RPC",1784,0)
OREVNTX LIST
"KRN",19,10082,"RPC",1785,0)
OREVNTX PAT
"KRN",19,10082,"RPC",1786,0)
OREVNTX1 GTEVT
"KRN",19,10082,"RPC",1787,0)
OREVNTX1 CPACT
"KRN",19,10082,"RPC",1788,0)
OREVNTX1 CURSPE
"KRN",19,10082,"RPC",1789,0)
OREVNTX1 CHGEVT
"KRN",19,10082,"RPC",1790,0)
OREVNTX1 DELPTEVT
"KRN",19,10082,"RPC",1791,0)
OREVNTX1 DFLTEVT
"KRN",19,10082,"RPC",1792,0)
OREVNTX ACTIVE
"KRN",19,10082,"RPC",1793,0)
OREVNTX1 PUTEVNT
"KRN",19,10082,"RPC",1794,0)
OREVNTX1 WRLSTED
"KRN",19,10082,"RPC",1795,0)
OREVNTX1 EVT
"KRN",19,10082,"RPC",1796,0)
OREVNTX1 NAME
"KRN",19,10082,"RPC",1797,0)
OREVNTX1 MATCH
"KRN",19,10082,"RPC",1798,0)
OREVNTX1 EMPTY
"KRN",19,10082,"RPC",1799,0)
OREVNTX1 EXISTS
"KRN",19,10082,"RPC",1800,0)
OREVNTX1 GTEVT1
"KRN",19,10082,"RPC",1801,0)
OREVNTX1 DIV
"KRN",19,10082,"RPC",1802,0)
OREVNTX1 DIV1
"KRN",19,10082,"RPC",1803,0)
OREVNTX1 LOC
"KRN",19,10082,"RPC",1804,0)
OREVNTX1 LOC1
"KRN",19,10082,"RPC",1805,0)
ORWDX SENDED
"KRN",19,10082,"RPC",1806,0)
OREVNTX1 GETDLG
"KRN",19,10082,"RPC",1807,0)
ORECS01 ECPRINT
"KRN",19,10082,"RPC",1811,0)
ORECS01 ECRPT
"KRN",19,10082,"RPC",1812,0)
OREVNTX1 ISDCOD
"KRN",19,10082,"RPC",1813,0)
OREVNTX1 SETDFLT
"KRN",19,10082,"RPC",1815,0)
TIU IS THIS A CLINPROC?
"KRN",19,10082,"RPC",1816,0)
TIU IDENTIFY CLINPROC CLASS
"KRN",19,10082,"RPC",1819,0)
ORWDPS1 HASOIPI
"KRN",19,10082,"RPC",1821,0)
OREVNTX1 DEFLTS
"KRN",19,10082,"RPC",1822,0)
OREVNTX1 MULTS
"KRN",19,10082,"RPC",1823,0)
OREVNTX1 DONE
"KRN",19,10082,"RPC",1824,0)
OREVNTX1 PROMPT IDS
"KRN",19,10082,"RPC",1825,0)
ORWCIRN CHECKLINK
"KRN",19,10082,"RPC",1826,0)
XWB DIRECT RPC
"KRN",19,10082,"RPC",1827,0)
ORWDPS1 HASROUTE
"KRN",19,10082,"RPC",1828,0)
ORQQCN UNRESOLVED
"KRN",19,10082,"RPC",1829,0)
OREVNTX1 DELDFLT
"KRN",19,10082,"RPC",1830,0)
ORWCH LDFONT
"KRN",19,10082,"RPC",1831,0)
ORWU1 NAMECVT
"KRN",19,10082,"RPC",1832,0)
OREVNTX1 DFLTDLG
"KRN",19,10082,"RPC",1833,0)
ORWDPS5 LESAPI
"KRN",19,10082,"RPC",1834,0)
ORWDPS5 LESGRP
"KRN",19,10082,"RPC",1839,0)
OREVNTX1 TYPEXT
"KRN",19,10082,"RPC",1840,0)
ORWORR RGET
"KRN",19,10082,"RPC",1841,0)
OREVNTX1 AUTHMREL
"KRN",19,10082,"RPC",1842,0)
OREVNTX1 HAVEPRT
"KRN",19,10082,"RPC",1843,0)
OREVNTX1 CMEVTS
"KRN",19,10082,"RPC",1844,0)
OREVNTX1 ODPTEVID
"KRN",19,10082,"RPC",1845,0)
ORWOR PKISITE
"KRN",19,10082,"RPC",1846,0)
OREVNTX1 COMP
"KRN",19,10082,"RPC",1847,0)
OREVNTX1 ISHDORD
"KRN",19,10082,"RPC",1848,0)
ORWDXR ORCPLX
"KRN",19,10082,"RPC",1849,0)
OREVNTX1 ISPASS
"KRN",19,10082,"RPC",1850,0)
OREVNTX1 ISPASS1
"KRN",19,10082,"RPC",1851,0)
OREVNTX1 DLGIEN
"KRN",19,10082,"RPC",1852,0)
ORWDXR CANRN
"KRN",19,10082,"RPC",1853,0)
ORWDXR ISCPLX
"KRN",19,10082,"RPC",1854,0)
ORWDXA OFCPLX
"KRN",19,10082,"RPC",1855,0)
ORQQPX GET NOT PURPOSE
"KRN",19,10082,"RPC",1856,0)
ORWDPS1 IVDEA
"KRN",19,10082,"RPC",1857,0)
ORWDXR ISNOW
"KRN",19,10082,"RPC",1858,0)
ORRHCQ QRYITR
"KRN",19,10082,"RPC",1859,0)
OREVNTX1 GETSTS
"KRN",19,10082,"RPC",1860,0)
ORWU DEFAULT DIVISION
"KRN",19,10082,"RPC",1861,0)
ORWDXA ISACTOI
"KRN",19,10082,"RPC",1862,0)
ORECS01 SAVPATH
"KRN",19,10082,"RPC",1863,0)
ORWOR RESULT HISTORY
"KRN",19,10082,"RPC",1864,0)
XUS GET TOKEN
"KRN",19,10082,"RPC",1865,0)
ORQQPX IMMUN LIST
"KRN",19,10082,"RPC",1866,0)
XWB DEFERRED CLEARALL
"KRN",19,10082,"RPC",1867,0)
ORWOR1 SETDTEXT
"KRN",19,10082,"RPC",1868,0)
ORWOR1 GETDEA
"KRN",19,10082,"RPC",1869,0)
ORWOR1 GETDSCH
"KRN",19,10082,"RPC",1870,0)
ORWORB TEXT FOLLOWUP
"KRN",19,10082,"RPC",1871,0)
ORWU1 NEWLOC
"KRN",19,10082,"RPC",1872,0)
ORWPCE ACTIVE CODE
"KRN",19,10082,"RPC",1873,0)
ORQQPXRM GET WH LETTER TEXT
"KRN",19,10082,"RPC",1874,0)
ORQQPXRM GET WH LETTER TYPE
"KRN",19,10082,"RPC",1875,0)
ORQQPXRM GET WH PROC RESULT
"KRN",19,10082,"RPC",1876,0)
ORQQPXRM WOMEN HEALTH SAVE
"KRN",19,10082,"RPC",1877,0)
ORB FORWARD ALERT
"KRN",19,10082,"RPC",1878,0)
ORB RENEW ALERT
"KRN",19,10082,"RPC",1879,0)
ORPRF CLEAR
"KRN",19,10082,"RPC",1880,0)
ORPRF GETFLG
"KRN",19,10082,"RPC",1881,0)
ORPRF HASFLG
"KRN",19,10082,"RPC",1882,0)
ORWTPD GETOCM
"KRN",19,10082,"RPC",1883,0)
TIU ONE VISIT NOTE?
"KRN",19,10082,"RPC",1884,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,10082,"RPC",1885,0)
ORIMO IMOLOC
"KRN",19,10082,"RPC",1886,0)
ORIMO IMOOD
"KRN",19,10082,"RPC",1887,0)
ORWDPS4 IPOD4OP
"KRN",19,10082,"RPC",1888,0)
ORWDPS4 UPDTDG
"KRN",19,10082,"RPC",1889,0)
TIU USER INACTIVE?
"KRN",19,10082,"RPC",1890,0)
ORWTPD PUTOCM
"KRN",19,10082,"RPC",1891,0)
ORWOR ACTION TEXT
"KRN",19,10082,"RPC",1892,0)
ORQQPXRM GEC DIALOG
"KRN",19,10082,"RPC",1893,0)
ORQQPXRM GET WH REPORT TEXT
"KRN",19,10082,"RPC",1894,0)
ORWDXR01 CANCHG
"KRN",19,10082,"RPC",1895,0)
ORWDXR01 SAVCHG
"KRN",19,10082,"RPC",1896,0)
TIU HAS AUTHOR SIGNED?
"KRN",19,10082,"RPC",1897,0)
ORQQPXRM CHECK REM VERSION
"KRN",19,10082,"RPC",1898,0)
ORQQPXRM GEC STATUS PROMPT
"KRN",19,10082,"RPC",1899,0)
ORQQPXRM GEC STATUS PROMPT
"KRN",19,10082,"RPC",1900,0)
ORWDAL32 SEND BULLETIN
"KRN",19,10082,"RPC",1901,0)
ORWDBA1 ORPKGTYP
"KRN",19,10082,"RPC",1902,0)
ORWDXR01 ISSPLY
"KRN",19,10082,"RPC",1903,0)
ORWDBA1 RCVORCI
"KRN",19,10082,"RPC",1904,0)
ORWPS REASON
"KRN",19,10082,"RPC",1905,0)
ORQQPXRM GEC FINISHED?
"KRN",19,10082,"RPC",1906,0)
ORWDXM3 ISUDQO
"KRN",19,10082,"RPC",1908,0)
ORWDBA1 SCLST
"KRN",19,10082,"RPC",1909,0)
ORWDXR01 OXDATA
"KRN",19,10082,"RPC",1914,0)
ORWDBA1 BASTATUS
"KRN",19,10082,"RPC",1920,0)
ORWORB SETSORT
"KRN",19,10082,"RPC",1921,0)
ORWORB GETSORT
"KRN",19,10082,"RPC",1922,0)
ORWOR EXPIRED
"KRN",19,10082,"RPC",1923,0)
ORPRF HASCAT1
"KRN",19,10082,"RPC",1928,0)
ORECS01 GETDIV
"KRN",19,10082,"RPC",1929,0)
ORWDPS32 AUTHNVA
"KRN",19,10082,"RPC",1934,0)
ORWDPS5 ISVTP
"KRN",19,10082,"RPC",1936,0)
TIU LONG LIST CLINPROC TITLES
"KRN",19,10082,"RPC",1937,0)
TIU LONG LIST CONSULT TITLES
"KRN",19,10082,"RPC",1938,0)
TIU LONG LIST OF TITLES
"KRN",19,10082,"RPC",1939,0)
TIU LONG LIST BOILERPLATED
"KRN",19,10082,"U")
CPRSCHART VERSION 1.0.24.26
"KRN",19,10162,-1)
2^2
"KRN",19,10162,0)
ORW PARAM GUI^GUI Parameters^^M^64^^^^^^^
"KRN",19,10162,10,0)
^19.01IP^9^9
"KRN",19,10162,10,7,0)
11787^NV^11
"KRN",19,10162,10,7,"^")
ORW NONVA REASON
"KRN",19,10162,10,8,0)
11788^EX^12
"KRN",19,10162,10,8,"^")
ORWOR EXPIRED ORDERS
"KRN",19,10162,10,9,0)
11789^RM^13
"KRN",19,10162,10,9,"^")
ORWORB REMOVE
"KRN",19,10162,"U")
GUI PARAMETERS
"KRN",19,11787,-1)
0^1
"KRN",19,11787,0)
ORW NONVA REASON^GUI Non-VA Med Statements/Reasons^^A^^^^^^^^ORDER ENTRY/RESULTS REPORTING^^1
"KRN",19,11787,1,0)
^^4^4^3030422^
"KRN",19,11787,1,1,0)
This option allows you to set up a list of statements/reasons why an 
"KRN",19,11787,1,2,0)
herbal/OTC/non-VA medication is documented (ordered.)  These 
"KRN",19,11787,1,3,0)
statements/reasons will be displayed for selection in the Non-VA Med 
"KRN",19,11787,1,4,0)
ordering dialog in CPRS GUI.
"KRN",19,11787,10.1)
Non-VA Med Statements
"KRN",19,11787,20)
D EDITPAR^XPAREDIT("ORWD NONVA REASON")
"KRN",19,11787,"U")
GUI NON-VA MED STATEMENTS/REAS
"KRN",19,11788,-1)
0^4
"KRN",19,11788,0)
ORWOR EXPIRED ORDERS^GUI Expired Orders Search Hours^^A^^^^^^^^ORDER ENTRY/RESULTS REPORTING^^1
"KRN",19,11788,1,0)
^^6^6^3031202^
"KRN",19,11788,1,1,0)
This option allows you to set the number of hours to search for a
"KRN",19,11788,1,2,0)
patient's expired orders.  For example, a value of "24" hours will search
"KRN",19,11788,1,3,0)
for all of the patient's orders that have expired within the past 24 
"KRN",19,11788,1,4,0)
hours. The number of hours determines what expired orders are displayed in
"KRN",19,11788,1,5,0)
the Recently Expired Orders view.  This can be selected on the Orders tab
"KRN",19,11788,1,6,0)
under the View menu.
"KRN",19,11788,10.1)
Expired Orders Hours
"KRN",19,11788,20)
D EDITPAR^XPAREDIT("ORWOR EXPIRED ORDERS")
"KRN",19,11788,"U")
GUI EXPIRED ORDERS SEARCH HOUR
"KRN",19,11789,-1)
0^5
"KRN",19,11789,0)
ORWORB REMOVE^GUI Remove Button Enabled^^A^^^^^^^^ORDER ENTRY/RESULTS REPORTING^^1
"KRN",19,11789,1,0)
^^5^5^3031202^
"KRN",19,11789,1,1,0)
This option allows you to set the flag to indicate if a CPRS OR 
"KRN",19,11789,1,2,0)
notification/alert can be deleted without processing via the GUI alert 
"KRN",19,11789,1,3,0)
Remove button.  A "yes" value indicates the notification/alert can be
"KRN",19,11789,1,4,0)
removed.  If a notification/alert has a blank value or a "no" value, the
"KRN",19,11789,1,5,0)
notification/alert cannot be deleted without processing.
"KRN",19,11789,10.1)
Remove Button Flag
"KRN",19,11789,20)
D EDITPAR^XPAREDIT("ORB REMOVE")
"KRN",19,11789,"U")
GUI REMOVE BUTTON ENABLED
"KRN",8989.5,318,0)
22;DIC(9.4,^ORB SORT METHOD^1
"KRN",8989.5,318,1)
D
"KRN",8989.5,6176,0)
22;DIC(9.4,^ORWD NONVA REASON^1
"KRN",8989.5,6176,1)
Non-VA medication not recommended by VA provider.
"KRN",8989.5,6177,0)
22;DIC(9.4,^ORWD NONVA REASON^2
"KRN",8989.5,6177,1)
Non-VA medication recommended by VA provider.
"KRN",8989.5,6178,0)
22;DIC(9.4,^ORWD NONVA REASON^3
"KRN",8989.5,6178,1)
Patient wants to buy from Non-VA pharmacy.
"KRN",8989.5,6179,0)
22;DIC(9.4,^ORWD NONVA REASON^4
"KRN",8989.5,6179,1)
Medication prescribed by Non-VA provider.
"KRN",8989.5,6180,0)
22;DIC(9.4,^ORWOR EXPIRED ORDERS^1
"KRN",8989.51,83,-1)
0^3
"KRN",8989.51,83,0)
ORB SORT METHOD^Notification Sort Method^0
"KRN",8989.51,83,1)
S^P:Patient;M:Message;U:Urgency;I:Info;L:Location;D:Date/Time;F:Forwarded By/When;^P:Patient, M:Message, U:Urgency, I:Info, L:Location, D:Date, F:Fwd By.
"KRN",8989.51,83,20,0)
^8989.512^3^3^3031208^^
"KRN",8989.51,83,20,1,0)
Method for sorting notifications when displayed in the CPRS GUI. Methods
"KRN",8989.51,83,20,2,0)
include: by Patient, Message (text), Urgency, Info, Location, Date/Time,
"KRN",8989.51,83,20,3,0)
and Forwarded By/When.
"KRN",8989.51,83,30,0)
^8989.513I^4^4
"KRN",8989.51,83,30,1,0)
1^200
"KRN",8989.51,83,30,2,0)
2^4
"KRN",8989.51,83,30,3,0)
3^4.2
"KRN",8989.51,83,30,4,0)
4^9.4
"KRN",8989.51,99,0)
ORPF ERROR DAYS^Error Days^^^ERROR DAYS
"KRN",8989.51,99,1)
N^^Enter the number of days to keep the OE/RR Error file current.
"KRN",8989.51,99,30,0)
^8989.513I^1^1
"KRN",8989.51,99,30,1,0)
1^4.2
"KRN",8989.51,102,0)
ORPF SHOW STATUS DESCRIPTION^Show Status Description^^^SHOW STATUS DESCRIPTION
"KRN",8989.51,102,1)
Y^^     Enter YES to have the status description displayed on the detailed display.
"KRN",8989.51,102,20,0)
^^3^3^2970904^^
"KRN",8989.51,102,20,1,0)
This parameter allows the description associated with a status to be
"KRN",8989.51,102,20,2,0)
displayed with the current status of an order when a detailed
"KRN",8989.51,102,20,3,0)
display is requested.
"KRN",8989.51,102,30,0)
^8989.513I^1^1
"KRN",8989.51,102,30,1,0)
1^4.2
"KRN",8989.51,104,0)
ORPF REVIEW ON PATIENT MVMT^Review on Patient Movement^^^REVIEW ORDERS ON PATIENT MOVEMENT
"KRN",8989.51,104,1)
Y^^Enter YES to review patient orders upon patient movement or clinic appointment.
"KRN",8989.51,104,20,0)
^^2^2^2970904^^
"KRN",8989.51,104,20,1,0)
This parameter allows orders to be reviewed when a patient is transferred
"KRN",8989.51,104,20,2,0)
or discharged, and when a clinic appointment is made or canceled.
"KRN",8989.51,104,30,0)
^8989.513I^1^1
"KRN",8989.51,104,30,1,0)
1^4.2
"KRN",8989.51,105,0)
ORPF ACTIVE ORDERS CONTEXT HRS^Active Orders Context Hours^^^ACTIVE ORDERS CONTEXT HOURS
"KRN",8989.51,105,1)
N^^Number of hours to include completed orders in Active Orders display.
"KRN",8989.51,105,20,0)
^^2^2^2970904^^^^
"KRN",8989.51,105,20,1,0)
This parameter defines the number of hours that orders remain in the
"KRN",8989.51,105,20,2,0)
"Active/Current Orders" context after they have been completed.
"KRN",8989.51,105,30,0)
^8989.513I^1^1
"KRN",8989.51,105,30,1,0)
1^4.2
"KRN",8989.51,107,0)
ORPF DEFAULT PROVIDER^Default Provider^^^DEFAULT PROVIDER
"KRN",8989.51,107,1)
Y^^Enter YES to default with attending physician when entering orders.
"KRN",8989.51,107,20,0)
^^2^2^2970904^^
"KRN",8989.51,107,20,1,0)
This parameter allows the attending physician to be prompted as a default
"KRN",8989.51,107,20,2,0)
when adding new orders.
"KRN",8989.51,107,30,0)
^8989.513I^1^1
"KRN",8989.51,107,30,1,0)
1^4.2
"KRN",8989.51,176,0)
ORPF CONFIRM PROVIDER^Confirm Provider^^^CONFIRM PROVIDER
"KRN",8989.51,176,1)
S^0:NO;1:YES (Default NO);2:YES (Exclude ORES);3:YES (Default YES)^Enter YES to prompt the user for confirmation whenever a provider is entered.
"KRN",8989.51,176,20,0)
^^6^6^2970904^^^^
"KRN",8989.51,176,20,1,0)
This field will allow an additional prompt to confirm the provider
"KRN",8989.51,176,20,2,0)
selection when adding new orders.
"KRN",8989.51,176,20,3,0)
Entering 2 in this field will exclude holders of the ORES key
"KRN",8989.51,176,20,4,0)
(providers) from this check.
"KRN",8989.51,176,20,5,0)
Notice that these parameters also control the default presented to the user:
"KRN",8989.51,176,20,6,0)
'Are you sure? <no -or- yes>'
"KRN",8989.51,176,30,0)
^8989.513I^1^1
"KRN",8989.51,176,30,1,0)
1^4.2
"KRN",8989.51,177,0)
ORPF RESTRICT REQUESTOR^Restrict Requestor^^^RESTRICT REQUESTOR
"KRN",8989.51,177,1)
S^0:NO;1:YES (ORELSE);2:YES (ORELSE & OREMAS)^This restricts users from selecting themselves as the requesting clinician.
"KRN",8989.51,177,20,0)
^^8^8^2970904^^^^
"KRN",8989.51,177,20,1,0)
This field allows a site to restrict the selection of providers
"KRN",8989.51,177,20,2,0)
when adding new orders at the 'Requesting CLINICIAN: ' prompt for
"KRN",8989.51,177,20,3,0)
holders of the ORELSE and OREMAS key.  The restriction being that
"KRN",8989.51,177,20,4,0)
they cannot select themselves as the requestor even though they may
"KRN",8989.51,177,20,5,0)
also hold the PROVIDER key.
"KRN",8989.51,177,20,6,0)
 
"KRN",8989.51,177,20,7,0)
  1 YES (ORELSE)          -restricts only holders of the ORELSE key.
"KRN",8989.51,177,20,8,0)
  2 YES (ORELSE & OREMAS) -restricts holders of either key.
"KRN",8989.51,177,30,0)
^8989.513I^1^1
"KRN",8989.51,177,30,1,0)
1^4.2
"KRN",8989.51,180,0)
ORPF GRACE DAYS BEFORE PURGE^Grace Days before Purge^^^GRACE DAYS BEFORE PURGE
"KRN",8989.51,180,1)
N^30:99999^Enter the number of days that should pass before a completed order is purged.
"KRN",8989.51,180,20,0)
^^3^3^2970904^^^
"KRN",8989.51,180,20,1,0)
This parameter is the number of days that should pass before an order is 
"KRN",8989.51,180,20,2,0)
purged.  Only orders with a status of discontinued, complete, expired,
"KRN",8989.51,180,20,3,0)
cancelled, changed, and lapsed will be purged.
"KRN",8989.51,180,30,0)
^8989.513I^1^1
"KRN",8989.51,180,30,1,0)
1^4.2
"KRN",8989.51,187,0)
ORPF AUTO UNFLAG^Auto Unflag^^^AUTO UNFLAG
"KRN",8989.51,187,1)
Y^^Enter YES to automatically cancel Flag notification when processed.
"KRN",8989.51,187,20,0)
^^3^3^2970926^^^^
"KRN",8989.51,187,20,1,0)
This parameter, when set to YES, will automatically cancel
"KRN",8989.51,187,20,2,0)
the Flag Orders Notification and unflag all orders for a
"KRN",8989.51,187,20,3,0)
patient when a user process a Flagged Orders Notification.
"KRN",8989.51,187,30,0)
^8989.513I^1^1
"KRN",8989.51,187,30,1,0)
1^4.2
"KRN",8989.51,202,-1)
0^5
"KRN",8989.51,202,0)
OR OREMAS NON-VA MED ORDERS^Allow Clerks to act on Non-VA Med Orders^^^ALLOW CLERKS TO ACT ON NON-VA MED ORDERS
"KRN",8989.51,202,1)
S^0:NO;1:UNRELEASED ONLY;2:YES^Enter 1 to allow clerks to enter non-VA med orders, 2 to permit release as well
"KRN",8989.51,202,20,0)
^^6^6^3040504^
"KRN",8989.51,202,20,1,0)
This parameter determines if clerks (i.e. users holding the OREMAS key)
"KRN",8989.51,202,20,2,0)
are allowed to act on non-VA med orders.  Enter YES to permit a clerk to
"KRN",8989.51,202,20,3,0)
enter new or DC non-VA med orders and send them to Pharmacy for reports 
"KRN",8989.51,202,20,4,0)
and order checks. Enter UNRELEASED ONLY to restrict clerks to only
"KRN",8989.51,202,20,5,0)
entering unreleased orders. To prohibit clerks from handling non-VA med
"KRN",8989.51,202,20,6,0)
orders entirely, select NO.
"KRN",8989.51,202,30,0)
^8989.513I^1^1
"KRN",8989.51,202,30,1,0)
1^4.2
"KRN",8989.51,224,0)
OR SIGNED ON CHART^Signed on Chart Default^^^SIGNED ON CHART DEFAULT
"KRN",8989.51,224,1)
S^1:YES;0:NO;^Enter the desired default to the 'Signed on Chart?' prompt
"KRN",8989.51,224,20,0)
^^3^3^2971118^^^^
"KRN",8989.51,224,20,1,0)
This defines the default value to be presented when the user gets the
"KRN",8989.51,224,20,2,0)
prompt to mark orders as Signed on Chart; if no value is entered, then
"KRN",8989.51,224,20,3,0)
NO is used as the default.
"KRN",8989.51,224,30,0)
^8989.513I^2^2
"KRN",8989.51,224,30,1,0)
5^4.2
"KRN",8989.51,224,30,2,0)
9^9.4
"KRN",8989.51,230,0)
ORPF SHOW LAB #^Show Lab #^^^SHOW LAB #
"KRN",8989.51,230,1)
Y^^Enter YES to have the lab order number displayed to physicians on release
"KRN",8989.51,230,20,0)
^^6^6^2980303^^
"KRN",8989.51,230,20,1,0)
This field controls the listing of lab orders for holders of the ORES key,
"KRN",8989.51,230,20,2,0)
after the electronic signature has been entered when entering new orders.
"KRN",8989.51,230,20,3,0)
Only after the order is released to Lab service is the number assigned;
"KRN",8989.51,230,20,4,0)
if physicians want to see the lab order # with the order after entering
"KRN",8989.51,230,20,5,0)
and signing the orders, this parameter must be set to YES.  All other
"KRN",8989.51,230,20,6,0)
users get the listing regardless of what this parameter is set to.
"KRN",8989.51,230,30,0)
^8989.513I^1^1
"KRN",8989.51,230,30,1,0)
1^4.2
"KRN",8989.51,250,0)
OR SIGNATURE DEFAULT ACTION^Signature Default Action^^^SIGNATURE DEFAULT ACTION
"KRN",8989.51,250,1)
S^OC:Signed on Chart;RS:Release w/o Signature;^Enter the desired default signature action for ORELSE key holders
"KRN",8989.51,250,20,0)
^^3^3^2980708^
"KRN",8989.51,250,20,1,0)
This defines the default action presented to ORELSE key holders when
"KRN",8989.51,250,20,2,0)
signing and/or releasing orders; if no value is entered, then 'Release
"KRN",8989.51,250,20,3,0)
w/o Signature' will be used.
"KRN",8989.51,250,30,0)
^8989.513I^2^2
"KRN",8989.51,250,30,1,0)
5^4.2
"KRN",8989.51,250,30,2,0)
9^9.4
"KRN",8989.51,256,0)
ORPF NEW ORDERS DEFAULT^New Orders Default^^^NEW ORDERS DEFAULT
"KRN",8989.51,256,1)
S^0:Sign All Orders;1:Sign & Release;^Enter the desired default action for the Review New Orders screen
"KRN",8989.51,256,20,0)
^^4^4^2980728^
"KRN",8989.51,256,20,1,0)
This parameter determines the default action to be presented at the end of
"KRN",8989.51,256,20,2,0)
the Review New Orders screen; the action 'Next Screen' will be used until
"KRN",8989.51,256,20,3,0)
the last screen of orders, if there are more than one.  If there is no
"KRN",8989.51,256,20,4,0)
action specified here, then 'Sign All Orders' will be used.
"KRN",8989.51,256,30,0)
^8989.513I^2^2
"KRN",8989.51,256,30,1,0)
5^4.2
"KRN",8989.51,256,30,2,0)
9^9.4
"KRN",8989.51,265,0)
OR OREMAS MED ORDERS^Allow Clerks to act on Med Orders^^^ALLOW CLERKS TO ACT ON MED ORDERS
"KRN",8989.51,265,1)
S^0:NO;1:UNRELEASED ONLY;2:YES^Enter 1 to allow clerks to enter med orders only or 2 to permit release as well
"KRN",8989.51,265,20,0)
^^6^6^2990709^^^
"KRN",8989.51,265,20,1,0)
This parameter determines if clerks (i.e. users holding the OREMAS key)
"KRN",8989.51,265,20,2,0)
are allowed to act on medication orders.  Enter YES to permit a clerk to
"KRN",8989.51,265,20,3,0)
enter new or DC medication orders and release them to the Pharmacy as
"KRN",8989.51,265,20,4,0)
'Signed on Chart', or UNRELEASED ONLY to restrict clerks to only entering
"KRN",8989.51,265,20,5,0)
unreleased orders.  To prohibit clerks from handling medication orders
"KRN",8989.51,265,20,6,0)
entirely, select NO.
"KRN",8989.51,265,30,0)
^8989.513I^1^1
"KRN",8989.51,265,30,1,0)
1^4.2
"KRN",8989.51,332,-1)
0^1
"KRN",8989.51,332,0)
ORWD NONVA REASON^Non-VA Meds Statement/Reason^1^Sequence^Statement/Reason
"KRN",8989.51,332,1)
F^1:60^Enter a reason or statement for ordering non-VA meds (60 chars max.)
"KRN",8989.51,332,6)
N^^Enter a numeric sequence number for the statement/reason.
"KRN",8989.51,332,20,0)
^8989.512^4^4^3030227^
"KRN",8989.51,332,20,1,0)
This parameter lists the reasons and statements for ordering/documenting 
"KRN",8989.51,332,20,2,0)
a non-VA medication.  Non-VA meds include herbals, OTCs (over-the-counter 
"KRN",8989.51,332,20,3,0)
medications) and prescriptions not obtained at VA pharmacies or from VA
"KRN",8989.51,332,20,4,0)
mail delivery services.
"KRN",8989.51,332,30,0)
^8989.513I^3^3
"KRN",8989.51,332,30,1,0)
1^4
"KRN",8989.51,332,30,2,0)
2^4.2
"KRN",8989.51,332,30,3,0)
3^9.4
"KRN",8989.51,333,-1)
0^4
"KRN",8989.51,333,0)
ORWOR EXPIRED ORDERS^Hours to find recently expired orders^0^^Hours
"KRN",8989.51,333,1)
N^0:100000:0^Enter the number of hours back in time to search for expired orders.
"KRN",8989.51,333,20,0)
^^4^4^3031202^
"KRN",8989.51,333,20,1,0)
Number of hours back in time to search for expired orders.  Also used to 
"KRN",8989.51,333,20,2,0)
determine number of hours back in time to search for expired med orders if
"KRN",8989.51,333,20,3,0)
the follow-up action for the Expiring Meds alert does not find expiring
"KRN",8989.51,333,20,4,0)
meds.
"KRN",8989.51,333,30,0)
^8989.513I^2^2
"KRN",8989.51,333,30,1,0)
3^4.2
"KRN",8989.51,333,30,2,0)
4^9.4
"KRN",8989.51,334,-1)
0^2
"KRN",8989.51,334,0)
ORB REMOVE^Remove Alert Without Processing^1^Notification^Remove without Processing?
"KRN",8989.51,334,1)
Y^Y:yes;N:no^Enter 'yes' if the notification can be removed without processing
"KRN",8989.51,334,6)
P^100.9
"KRN",8989.51,334,20,0)
^8989.512^6^6^3040329^^
"KRN",8989.51,334,20,1,0)
Value indicates if the notification/alert can be deleted without 
"KRN",8989.51,334,20,2,0)
processing.  A "yes" value indicates the notification/alert can be deleted
"KRN",8989.51,334,20,3,0)
without processing.  In the CPRS GUI a"yes" value signifies a selected
"KRN",8989.51,334,20,4,0)
alert can be deleted when the Remove button is clicked.  If a
"KRN",8989.51,334,20,5,0)
notification/alert has a blank value or a "no" value, the
"KRN",8989.51,334,20,6,0)
notification/alert cannot be deleted without processing.
"KRN",8989.51,334,30,0)
^8989.513I^1^1
"KRN",8989.51,334,30,1,0)
1^4.2
"KRN",8989.52,9,-1)
0^1
"KRN",8989.52,9,0)
ORP ORDER MISC^Miscellaneous OE/RR Definition^4.2
"KRN",8989.52,9,10,0)
^8989.521IA^17^15
"KRN",8989.52,9,10,1,0)
1^ORPF ACTIVE ORDERS CONTEXT HRS
"KRN",8989.52,9,10,2,0)
3^ORPF AUTO UNFLAG
"KRN",8989.52,9,10,3,0)
4^ORPF CONFIRM PROVIDER
"KRN",8989.52,9,10,4,0)
5^ORPF DEFAULT PROVIDER
"KRN",8989.52,9,10,5,0)
7^ORPF ERROR DAYS
"KRN",8989.52,9,10,6,0)
8^ORPF GRACE DAYS BEFORE PURGE
"KRN",8989.52,9,10,7,0)
11^ORPF RESTRICT REQUESTOR
"KRN",8989.52,9,10,8,0)
12^ORPF REVIEW ON PATIENT MVMT
"KRN",8989.52,9,10,9,0)
14^ORPF SHOW STATUS DESCRIPTION
"KRN",8989.52,9,10,10,0)
16^OR SIGNED ON CHART
"KRN",8989.52,9,10,11,0)
13^ORPF SHOW LAB #
"KRN",8989.52,9,10,13,0)
15^OR SIGNATURE DEFAULT ACTION
"KRN",8989.52,9,10,14,0)
10^ORPF NEW ORDERS DEFAULT
"KRN",8989.52,9,10,16,0)
2^OR OREMAS MED ORDERS
"KRN",8989.52,9,10,17,0)
2.5^OR OREMAS NON-VA MED ORDERS
"KRN",8994,325,-1)
0^7
"KRN",8994,325,0)
ORWDX SAVE^SAVE^ORWDX^2
"KRN",8994,325,1,0)
^8994.01^9^9^3000104^
"KRN",8994,325,1,1,0)
Save the order by passing in the following information:
"KRN",8994,325,1,2,0)
        ORVP=DFN
"KRN",8994,325,1,3,0)
        ORNP=Provider
"KRN",8994,325,1,4,0)
        ORL=Location
"KRN",8994,325,1,5,0)
        DLG=Order Dialog,
"KRN",8994,325,1,6,0)
        ORDG=Display Group
"KRN",8994,325,1,7,0)
        ORIT=Quick Order Dialog,
"KRN",8994,325,1,8,0)
        ORIFN=null if new order
"KRN",8994,325,1,9,0)
        ORDIALOG=Response List
"KRN",8994,1441,-1)
0^20
"KRN",8994,1441,0)
ORQQPXRM GEC DIALOG^GEC^ORQQPXRM^1^S
"KRN",8994,1441,1,0)
^8994.01^3^3^3040130^^
"KRN",8994,1441,1,1,0)
This RPC will evaluate the Reminder Dialogs as the Finish button is click
"KRN",8994,1441,1,2,0)
for the GEC Project. THis RPC will return an error messages if the four
"KRN",8994,1441,1,3,0)
GEC Reminder Dialogs are done out of order.
"KRN",8994,1441,2,0)
^8994.02A^4^4
"KRN",8994,1441,2,1,0)
IEN^1^^1^1
"KRN",8994,1441,2,1,1,0)
^^1^1^3030605^
"KRN",8994,1441,2,1,1,1,0)
This is the Reminder Definition IEN or the Reminder Dialog IEN
"KRN",8994,1441,2,2,0)
DFN^1^^1^2
"KRN",8994,1441,2,2,1,0)
^^1^1^3030605^
"KRN",8994,1441,2,2,1,1,0)
Patient DFN
"KRN",8994,1441,2,3,0)
Visit^1^^1^3
"KRN",8994,1441,2,3,1,0)
^8994.021^1^1^3030605^^^
"KRN",8994,1441,2,3,1,1,0)
This is the Visit Encounter String
"KRN",8994,1441,2,4,0)
NOTEIEN^1^^1^4
"KRN",8994,1441,2,4,1,0)
^^1^1^3040130^
"KRN",8994,1441,2,4,1,1,0)
NOTEIEN is the progress Note IEN in file 8925.
"KRN",8994,1441,2,"B","DFN",2)

"KRN",8994,1441,2,"B","IEN",1)

"KRN",8994,1441,2,"B","NOTEIEN",4)

"KRN",8994,1441,2,"B","Visit",3)

"KRN",8994,1441,2,"PARAMSEQ",1,1)

"KRN",8994,1441,2,"PARAMSEQ",2,2)

"KRN",8994,1441,2,"PARAMSEQ",3,3)

"KRN",8994,1441,2,"PARAMSEQ",4,4)

"KRN",8994,1441,3,0)
^8994.03^2^2^3040130^^^
"KRN",8994,1441,3,1,0)
A single string that will return a value to set in the V HF file an error
"KRN",8994,1441,3,2,0)
message
"KRN",8994,1447,-1)
0^10
"KRN",8994,1447,0)
ORWDXM3 ISUDQO^ISUDQO^ORWDXM3^1
"KRN",8994,1530,-1)
0^3
"KRN",8994,1530,0)
ORWPS REASON^REASON^ORWPS^2
"KRN",8994,1530,1,0)
^^1^1^3030411^
"KRN",8994,1530,1,1,0)
Returns list of Statement/Reasons for Non-VA medication orders.
"KRN",8994,1531,-1)
0^2
"KRN",8994,1531,0)
ORWDPS5 ISVTP^ISVTP^ORWDPS5^1
"KRN",8994,1532,-1)
0^5
"KRN",8994,1532,0)
ORWDBA1 ORPKGTYP^ORPKGTYP^ORWDBA1^2
"KRN",8994,1532,1,0)
^8994.01^1^1^3030806^^^^
"KRN",8994,1532,1,1,0)
Array of Order Package Types
"KRN",8994,1532,2,0)
^8994.02A^1^1
"KRN",8994,1532,2,1,0)
ORLST^2^255^1^1
"KRN",8994,1532,2,1,1,0)
^8994.021^1^1^3030806^^^^
"KRN",8994,1532,2,1,1,1,0)
List of Order IENs
"KRN",8994,1532,2,"B","ORLST",1)

"KRN",8994,1532,2,"PARAMSEQ",1,1)

"KRN",8994,1533,-1)
0^6
"KRN",8994,1533,0)
ORWDBA1 RCVORCI^RCVORCI^ORWDBA1^1
"KRN",8994,1533,1,0)
^8994.01^1^1^3030818^^^^
"KRN",8994,1533,1,1,0)
Receive Order Entry Billing Aware data from CPRS.
"KRN",8994,1533,2,0)
^8994.02A^1^1
"KRN",8994,1533,2,1,0)
DIAG^2^255^1^2
"KRN",8994,1533,2,1,1,0)
^8994.021^1^1^3030818^^^^
"KRN",8994,1533,2,1,1,1,0)
Array of Orders and Clinical Indicators returned from CPRS
"KRN",8994,1533,2,"B","DIAG",1)

"KRN",8994,1533,2,"PARAMSEQ",2,1)

"KRN",8994,1534,-1)
0^4
"KRN",8994,1534,0)
ORWDAL32 SEND BULLETIN^SENDBULL^ORWDAL32^1
"KRN",8994,1535,-1)
0^8
"KRN",8994,1535,0)
ORWDXR01 ISSPLY^ISSPLY^ORWDXR01^1
"KRN",8994,1536,-1)
0^13
"KRN",8994,1536,0)
ORWDBA1 SCLST^SCLST^ORWDBA1^2
"KRN",8994,1536,1,0)
^^1^1^3030818^
"KRN",8994,1536,1,1,0)
Array of Order ID's and SC.
"KRN",8994,1536,2,0)
^8994.02A^1^1
"KRN",8994,1536,2,1,0)
ORLST^2^255^1^2
"KRN",8994,1536,2,1,1,0)
^^1^1^3030818^
"KRN",8994,1536,2,1,1,1,0)
List of Orders.
"KRN",8994,1536,2,"B","ORLST",1)

"KRN",8994,1536,2,"PARAMSEQ",2,1)

"KRN",8994,1537,-1)
0^14
"KRN",8994,1537,0)
ORWDXR01 OXDATA^OXDATA^ORWDXR01^1
"KRN",8994,1538,-1)
0^15
"KRN",8994,1538,0)
ORWDBA1 BASTATUS^BASTATUS^ORWDBA1^1^P^0^^^1
"KRN",8994,1538,1,0)
^^2^2^3031015^
"KRN",8994,1538,1,1,0)
Billing Awareness RPC.
"KRN",8994,1538,1,2,0)
Returns 0 if BA functionality is off or 1 if BA functionality is on.
"KRN",8994,1539,-1)
0^18
"KRN",8994,1539,0)
ORWORB SETSORT^SETSORT^ORWORB^1
"KRN",8994,1539,1,0)
^^2^2^3031124^
"KRN",8994,1539,1,1,0)
Sets the GUI alert sort method for the user.  This is set when a user 
"KRN",8994,1539,1,2,0)
clicks on the GUI alert columns to change the display sorting.
"KRN",8994,1540,-1)
0^17
"KRN",8994,1540,0)
ORWORB GETSORT^GETSORT^ORWORB^1
"KRN",8994,1540,1,0)
^^1^1^3031124^
"KRN",8994,1540,1,1,0)
Returns the method for sorting GUI alert display.
"KRN",8994,1541,-1)
0^19
"KRN",8994,1541,0)
ORWOR EXPIRED^EXPIRED^ORWOR^1
"KRN",8994,1541,1,0)
^^1^1^3031124^
"KRN",8994,1541,1,1,0)
Returns the Fileman Date/Time to begin searching for expired orders.
"KRN",8994,1542,-1)
0^16
"KRN",8994,1542,0)
ORPRF HASCAT1^HASCAT1^ORPRF^2
"KRN",8994,1618,-1)
0^21
"KRN",8994,1618,0)
ORWDPS32 AUTHNVA^AUTHNVA^ORWDPS32^1
"KRN",8994,1618,1,0)
^^3^3^3040325^
"KRN",8994,1618,1,1,0)
Checks restrictions for entering non-VA meds.  If no restrictions, a 0 is
"KRN",8994,1618,1,2,0)
returned.  If there is a restriction, it is returned in the format:
"KRN",8994,1618,1,3,0)
1^restriction text 
"KRN",8994,1644,-1)
1^11
"KRN",8994,1644,0)
ORWSR OPTOP
"KRN",8994,1645,-1)
1^12
"KRN",8994,1645,0)
ORWSR OPTOP NON-OR
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"ORD",21,8989.52)
8989.52;21;1;;PAR2E1^XPDTA2;PAR2F1^XPDIA3;PAR2E1^XPDIA3;PAR2F2^XPDIA3;;PAR2DEL^XPDIA3(%)
"ORD",21,8989.52,0)
PARAMETER TEMPLATE
"PGL",101.24,0,13,.13)
RPC^P8994'^XWB(8994,^0;13^Q
"PGL",101.24,0,18,.18)
DETAIL REPORT^*P101.24'^ORD(101.24,^0;18^S DIC("S")="I $P(^(0),""^"",8)=""CD""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",101.24,0,21,.192)
REPORT COMPONENT^P142.1'^GMT(142.1,^0;21^Q
"PGL",101.41,0,5,5)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"PGL",101.41,0,7,7)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"PGL",101.41,5,9,59)
URL^P101.14^ORD(101.14,^5;9^Q
"PGL",101.412,0,2,2)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"PGL",101.412,0,11,1)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"PGL",101.415,0,2,2)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"PGL",101.416,0,2,.02)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"PKG",22,-1)
1^1
"PKG",22,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",22,20,0)
^9.402P^^
"PKG",22,22,0)
^9.49I^1^1
"PKG",22,22,1,0)
3.0^2971217^2980204^64
"PKG",22,22,1,"PAH",1,0)
190^3040621^1362
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
62
"RTN","ORB3")
0^63^B87153852
"RTN","ORB3",1,0)
ORB3 ; slc/CLA - Main routine for OE/RR 3 notifications ;6/6/01  10:46
"RTN","ORB3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**31,74,91,105,139,190**;Dec 17, 1997
"RTN","ORB3",3,0)
EN(ORN,ORBDFN,ORNUM,ORBADUZ,ORBPMSG,ORBPDATA) ;
"RTN","ORB3",4,0)
 ;
"RTN","ORB3",5,0)
 N ORBENT
"RTN","ORB3",6,0)
 S ORBENT=$$ENTITY^ORB31(ORNUM,DUZ)
"RTN","ORB3",7,0)
 ;
"RTN","ORB3",8,0)
 Q:$$GET^XPAR(ORBENT,"ORB SYSTEM ENABLE/DISABLE",1,"I")="D"
"RTN","ORB3",9,0)
 Q:'$L($G(^ORD(100.9,ORN,0)))
"RTN","ORB3",10,0)
 Q:+$$ONOFF^ORB3FN(ORN)=0
"RTN","ORB3",11,0)
 ;
"RTN","ORB3",12,0)
 S ORBPMSG=$E($G(ORBPMSG),1,51)
"RTN","ORB3",13,0)
 ;
"RTN","ORB3",14,0)
 ;if msg from notif file or oc notif (#54), quit if dup w/in past 1 min:
"RTN","ORB3",15,0)
 N ORBDUP,ORBN
"RTN","ORB3",16,0)
 S ORBN=^ORD(100.9,ORN,0)
"RTN","ORB3",17,0)
 I ($P(ORBN,"^",4)="NOT")!(ORN=54) D
"RTN","ORB3",18,0)
 .S ORBDUP=$$DUP^ORB31(ORN,ORBDFN,ORBPMSG,ORNUM)
"RTN","ORB3",19,0)
 Q:+$G(ORBDUP)=1
"RTN","ORB3",20,0)
 ;
"RTN","ORB3",21,0)
 N ORBDESC
"RTN","ORB3",22,0)
 S ORBDESC=" Send Alert Notification ("_(+ORN)_") "_$P($G(^ORD(100.9,+ORN,0)),U,1)_"  "
"RTN","ORB3",23,0)
 ;
"RTN","ORB3",24,0)
 D QUEUE^ORB31(ORN,ORBDFN,$G(ORNUM),.ORBADUZ,$G(ORBPMSG),$G(ORBPDATA),$H,ORBDESC,$G(DGPMA))
"RTN","ORB3",25,0)
 Q
"RTN","ORB3",26,0)
ZTSK ;
"RTN","ORB3",27,0)
 D START
"RTN","ORB3",28,0)
 S ZTREQ="@"
"RTN","ORB3",29,0)
 Q
"RTN","ORB3",30,0)
UTL(ORBU,ORN,ORBDFN,ORNUM,ORBADUZ,ORBPMSG,ORBPDATA) ;
"RTN","ORB3",31,0)
 Q:$G(ORBU)'=1
"RTN","ORB3",32,0)
START Q:$G(ORN)=""!($G(ORBDFN)="")
"RTN","ORB3",33,0)
 Q:'$L($G(^ORD(100.9,ORN,0)))
"RTN","ORB3",34,0)
 N ORBNOW,ORBID,ORBLOCK,ORBDESC
"RTN","ORB3",35,0)
 S ORBNOW=$$NOW^XLFDT
"RTN","ORB3",36,0)
 S ORBLOCK=0
"RTN","ORB3",37,0)
 ;
"RTN","ORB3",38,0)
 ;lock to prevent concurrent processing by other resource slots:
"RTN","ORB3",39,0)
 I '$D(ORBU) D
"RTN","ORB3",40,0)
 .S ^XTMP("ORBLOCK",0)=$$FMADD^XLFDT(ORBNOW,1,"","","")_"^"_ORBNOW
"RTN","ORB3",41,0)
 .S ORBID=$P($P($G(ORBPDATA),"|",2),"@")  ;get unique data id
"RTN","ORB3",42,0)
 .I $L(ORBID) D
"RTN","ORB3",43,0)
 ..LOCK +^XTMP("ORBLOCK",ORBDFN,ORN,ORBID):60 E  D  Q
"RTN","ORB3",44,0)
 ...S ORBDESC=" Requeue Alert Notification ("_(+ORN)_") "_$P($G(^ORD(100.9,+ORN,0)),U,1)_"  "
"RTN","ORB3",45,0)
 ...D QUEUE^ORB31(ORN,ORBDFN,$G(ORNUM),.ORBADUZ,$G(ORBPMSG),$G(ORBPDATA),$$HADD^XLFDT($H,"","",5,""),ORBDESC,$G(DGPMA)) ;requeue in 5 min.
"RTN","ORB3",46,0)
 ...S ORBLOCK=1
"RTN","ORB3",47,0)
 .;
"RTN","ORB3",48,0)
 .I '$L(ORBID) D
"RTN","ORB3",49,0)
 ..LOCK +^XTMP("ORBLOCK",ORBDFN,ORN):60 E  D  Q
"RTN","ORB3",50,0)
 ...S ORBDESC=" Requeue Alert Notification ("_(+ORN)_") "_$P($G(^ORD(100.9,+ORN,0)),U,1)_"  "
"RTN","ORB3",51,0)
 ...D QUEUE^ORB31(ORN,ORBDFN,$G(ORNUM),.ORBADUZ,$G(ORBPMSG),$G(ORBPDATA),$$HADD^XLFDT($H,"","",5,""),ORBDESC,$G(DGPMA)) ;requeue in 5 min.
"RTN","ORB3",52,0)
 ...S ORBLOCK=1
"RTN","ORB3",53,0)
 .;
"RTN","ORB3",54,0)
 I ORBLOCK=1 D QUIT Q
"RTN","ORB3",55,0)
 ;
"RTN","ORB3",56,0)
 N ORBDUZ,ORBN,ORBXQAID,ORPTNAM,ORBPRIM,ORBATTD,ORBDEV,ORBENT
"RTN","ORB3",57,0)
 N ORBUI,ORBASPEC,ORBSMSG,ORBADT,ORBSDEV,ORBDEL,ORBDI,ORBTDEV,ORY
"RTN","ORB3",58,0)
 S ORBUI=1,ORBADT=0
"RTN","ORB3",59,0)
 S:'$L($G(ORBPMSG)) ORBPMSG=""
"RTN","ORB3",60,0)
 I '$L(ORBPDATA),(+$G(ORNUM)>0) S ORBPDATA=+$G(ORNUM)_"@"
"RTN","ORB3",61,0)
 S ORBN=^ORD(100.9,ORN,0)
"RTN","ORB3",62,0)
 ;
"RTN","ORB3",63,0)
 S ORBENT=$$ENTITY^ORB31(ORNUM,DUZ)
"RTN","ORB3",64,0)
 ;
"RTN","ORB3",65,0)
 N DFN S DFN=ORBDFN,VA200="" D OERR^VADPT
"RTN","ORB3",66,0)
 I ('$L($G(VA("BID"))))!('$L($G(VADM(1)))) D QUIT Q
"RTN","ORB3",67,0)
 I (ORN=18)!(ORN=20)!(ORN=35) S ORBADT=1 ;A/D/T notif
"RTN","ORB3",68,0)
 ;if not an A/D/T notif, get primary & attending from OERR^VADPT:
"RTN","ORB3",69,0)
 I ORBADT=0 S ORBPRIM=+$P(VAIN(2),U),ORBATTD=+$P(VAIN(11),U)
"RTN","ORB3",70,0)
 I ORBADT=1 D ADT^ORB31(ORN,ORBDFN,.ORBPRIM,.ORBATTD,$G(ORDGPMA)) ;A/D/T notif
"RTN","ORB3",71,0)
 I $D(ORBU) D  ;create debug msg
"RTN","ORB3",72,0)
 .S ORBU(ORBUI)="Processing notification: "_$P(ORBN,U),ORBUI=ORBUI+1
"RTN","ORB3",73,0)
 .S ORBU(ORBUI)="            for patient: "_VADM(1),ORBUI=ORBUI+1
"RTN","ORB3",74,0)
 .I $G(ORNUM)>0 S ORBU(ORBUI)="              for order: "_ORNUM,ORBUI=ORBUI+1
"RTN","ORB3",75,0)
 D REGULAR^ORB3REG(ORN,.XQA,.ORBU,.ORBUI,.ORBDEV,ORBDFN)
"RTN","ORB3",76,0)
 D SPECIAL^ORB3SPEC(ORN,.ORBASPEC,.ORBU,.ORBUI,$G(ORNUM),ORBDFN,$G(ORBPDATA),.ORBSMSG,$G(ORBPMSG),.ORBSDEV)
"RTN","ORB3",77,0)
 I $L($G(ORBSMSG)) S ORBPMSG=$E(ORBSMSG,1,51)
"RTN","ORB3",78,0)
 I $D(ORBASPEC)>1 D SPECDUZS ;special recips
"RTN","ORB3",79,0)
 I $D(ORBADUZ)>1 D PKGDUZS ;pkg-supplied recips
"RTN","ORB3",80,0)
 D TITLE ;provider recips
"RTN","ORB3",81,0)
 S ORBXQAID=$P(ORBN,"^",2)_","_ORBDFN_","_ORN
"RTN","ORB3",82,0)
 ;
"RTN","ORB3",83,0)
 I ($D(XQA)>1)!($D(ORBDEV)>1)!($D(ORBSDEV)>1) D  ;recips found
"RTN","ORB3",84,0)
 .S XQAFLG=$P(ORBN,"^",5)
"RTN","ORB3",85,0)
 .S XQADFN=ORBDFN
"RTN","ORB3",86,0)
 .I XQAFLG="R" S XQAROU=$P(ORBN,"^",6)_"^"_$P(ORBN,"^",7)
"RTN","ORB3",87,0)
 .I $G(ORBPDATA)'="" S XQADATA=ORBPDATA
"RTN","ORB3",88,0)
 .S ORPTNAM=$E(VADM(1)_"         ",1,9)
"RTN","ORB3",89,0)
 .S XQAMSG=ORPTNAM_" "_"("_$E(ORPTNAM)_$E(VA("BID"),1,4)_")"_": "
"RTN","ORB3",90,0)
 .S XQAMSG=XQAMSG_$S(ORBPMSG'="":ORBPMSG,1:$P(ORBN,"^",3))
"RTN","ORB3",91,0)
 .S XQAARCH=$$GET^XPAR(ORBENT,"ORB ARCHIVE PERIOD",ORN,"I")
"RTN","ORB3",92,0)
 .S XQASUPV=$$GET^XPAR(ORBENT,"ORB FORWARD SUPERVISOR",ORN,"I")
"RTN","ORB3",93,0)
 .S XQASURO=$$GET^XPAR(ORBENT,"ORB FORWARD SURROGATES",ORN,"I")
"RTN","ORB3",94,0)
 .S XQAREVUE=$$GET^XPAR(ORBENT,"ORB FORWARD BACKUP REVIEWER",ORN,"I")
"RTN","ORB3",95,0)
 .S XQACNDEL=$$GET^XPAR(ORBENT,"ORB REMOVE",ORN,"I")
"RTN","ORB3",96,0)
 .S XQACNDEL=$S(XQACNDEL=1:1,1:"")
"RTN","ORB3",97,0)
 .I $D(ORBDEV)>1 D REGDEV^ORB31(.ORBDEV)
"RTN","ORB3",98,0)
 .I $D(ORBSDEV)>1 D REGDEV^ORB31(.ORBSDEV)
"RTN","ORB3",99,0)
 .I $D(ORBTDEV)>1 D REGDEV^ORB31(.ORBTDEV)
"RTN","ORB3",100,0)
 .S XQAID=ORBXQAID
"RTN","ORB3",101,0)
 .I $D(XQA) D SETUP^XQALERT  ;if no [new] recips don't send alert
"RTN","ORB3",102,0)
QUIT ;
"RTN","ORB3",103,0)
 K VA,VA200,VADM,VAERR,VAIN,XQA,XQADATA,XQAID,XQAFLG,XQAMSG,XQAROU,XQAARCH,XQASUPV,XQASURO,XQADFN
"RTN","ORB3",104,0)
 K ^XTMP("ORBUSER",$J)
"RTN","ORB3",105,0)
 I '$D(ORBU) D
"RTN","ORB3",106,0)
 .I $L(ORBID) LOCK -^XTMP("ORBLOCK",ORBDFN,ORN,ORBID)
"RTN","ORB3",107,0)
 .E  LOCK -^XTMP("ORBLOCK",ORBDFN,ORN)
"RTN","ORB3",108,0)
 Q
"RTN","ORB3",109,0)
PKGDUZS ;get DUZs from pkg-passed ORBADUZ() array
"RTN","ORB3",110,0)
 N ORBPDUZ
"RTN","ORB3",111,0)
 I $D(ORBU) D
"RTN","ORB3",112,0)
 .S ORBU(ORBUI)=" ",ORBUI=ORBUI+1
"RTN","ORB3",113,0)
 .I ORN=68 S ORBU(ORBUI)="Recipients with Lab Threshold Exceeded:",ORBUI=ORBUI+1
"RTN","ORB3",114,0)
 .E  S ORBU(ORBUI)="Recipients defined when notif was triggered:",ORBUI=ORBUI+1
"RTN","ORB3",115,0)
 S ORBPDUZ=""
"RTN","ORB3",116,0)
 F  S ORBPDUZ=$O(ORBADUZ(ORBPDUZ)) Q:ORBPDUZ=""  S ORBDUZ=ORBPDUZ D USER
"RTN","ORB3",117,0)
 Q
"RTN","ORB3",118,0)
SPECDUZS ;get DUZs rtn by SPECIAL^ORB3SPEC
"RTN","ORB3",119,0)
 N ORBSDUZ
"RTN","ORB3",120,0)
 I $D(ORBU) D
"RTN","ORB3",121,0)
 .S ORBU(ORBUI)=" ",ORBUI=ORBUI+1
"RTN","ORB3",122,0)
 .S ORBU(ORBUI)="Special recipients associated with the notification:",ORBUI=ORBUI+1
"RTN","ORB3",123,0)
 S ORBSDUZ=""
"RTN","ORB3",124,0)
 F  S ORBSDUZ=$O(ORBASPEC(ORBSDUZ)) Q:ORBSDUZ=""  S ORBDUZ=ORBSDUZ D USER
"RTN","ORB3",125,0)
 Q
"RTN","ORB3",126,0)
TITLE ;get provider recips
"RTN","ORB3",127,0)
 N TITLES
"RTN","ORB3",128,0)
 I $D(ORBU) D
"RTN","ORB3",129,0)
 .S ORBU(ORBUI)=" ",ORBUI=ORBUI+1
"RTN","ORB3",130,0)
 .S ORBU(ORBUI)="Recipients determined by Provider Recipient parameter:",ORBUI=ORBUI+1
"RTN","ORB3",131,0)
 ;
"RTN","ORB3",132,0)
 S TITLES=$$GET^XPAR(ORBENT,"ORB PROVIDER RECIPIENTS",ORN,"I")
"RTN","ORB3",133,0)
 I TITLES["P" D PRIMARY
"RTN","ORB3",134,0)
 I TITLES["A" D ATTEND
"RTN","ORB3",135,0)
 I TITLES["T" D TEAMS
"RTN","ORB3",136,0)
 I TITLES["O" D ORDERER
"RTN","ORB3",137,0)
 I TITLES["E" D ENTERBY
"RTN","ORB3",138,0)
 I TITLES["R" D PCMMPRIM
"RTN","ORB3",139,0)
 I TITLES["S" D PCMMASSC
"RTN","ORB3",140,0)
 I TITLES["M" D PCMMTEAM
"RTN","ORB3",141,0)
 Q
"RTN","ORB3",142,0)
PRIMARY ;
"RTN","ORB3",143,0)
 I $D(ORBU),ORBADT=0 S ORBU(ORBUI)=" Inpt primary provider:",ORBUI=ORBUI+1
"RTN","ORB3",144,0)
 I $D(ORBU),ORBADT=1 S ORBU(ORBUI)=" Inpt primary provider: option cannot determine without A/D/T event data.",ORBUI=ORBUI+1
"RTN","ORB3",145,0)
 I +$G(ORBPRIM)>0 S ORBDUZ=ORBPRIM D USER
"RTN","ORB3",146,0)
 Q
"RTN","ORB3",147,0)
ATTEND ;
"RTN","ORB3",148,0)
 I $D(ORBU),ORBADT=0 S ORBU(ORBUI)=" Attending physician:",ORBUI=ORBUI+1
"RTN","ORB3",149,0)
 I $D(ORBU),ORBADT=1 S ORBU(ORBUI)=" Attending physician: option cannot determine without A/D/T event data.",ORBUI=ORBUI+1
"RTN","ORB3",150,0)
 I +$G(ORBATTD)>0 S ORBDUZ=ORBATTD D USER
"RTN","ORB3",151,0)
 Q
"RTN","ORB3",152,0)
TEAMS ;
"RTN","ORB3",153,0)
 I $D(ORBU) S ORBU(ORBUI)=" Teams/Personal Lists related to patient:",ORBUI=ORBUI+1
"RTN","ORB3",154,0)
 N ORBLST,ORBI,ORBJ,ORBTM,ORBTNAME,ORBTTYPE,ORBTD
"RTN","ORB3",155,0)
 D TMSPT^ORQPTQ1(.ORBLST,ORBDFN)
"RTN","ORB3",156,0)
 Q:+$G(ORBLST(1))<1
"RTN","ORB3",157,0)
 S ORBI="" F  S ORBI=$O(ORBLST(ORBI)) Q:ORBI=""  D
"RTN","ORB3",158,0)
 .S ORBTM=$P(ORBLST(ORBI),U),ORBTNAME=$P(ORBLST(ORBI),U,2)
"RTN","ORB3",159,0)
 .S ORBTTYPE=$P(ORBLST(ORBI),U,3)
"RTN","ORB3",160,0)
 .I $D(ORBU) D
"RTN","ORB3",161,0)
 ..S ORBU(ORBUI)="  Patient list "_ORBTNAME_" ["_ORBTTYPE_"]:",ORBUI=ORBUI+1
"RTN","ORB3",162,0)
 .N ORBLST2 D TEAMPROV^ORQPTQ1(.ORBLST2,ORBTM)
"RTN","ORB3",163,0)
 .Q:+$G(ORBLST2(1))<1
"RTN","ORB3",164,0)
 .S ORBJ="" F  S ORBJ=$O(ORBLST2(ORBJ)) Q:ORBJ=""  D
"RTN","ORB3",165,0)
 ..S ORBDUZ=$P(ORBLST2(ORBJ),U)_U_ORBTM I +$G(ORBDUZ)>0 D USER
"RTN","ORB3",166,0)
 .;
"RTN","ORB3",167,0)
 .S ORBTD=$P($$TMDEV^ORB31(ORBTM),U,2)  ;Team's device
"RTN","ORB3",168,0)
 .I $L(ORBTD) D
"RTN","ORB3",169,0)
 ..S ORBTDEV(ORBTD)=""
"RTN","ORB3",170,0)
 ..I $D(ORBU) D
"RTN","ORB3",171,0)
 ...S ORBU(ORBUI)="   Team's Device "_ORBTD_" is a recipient",ORBUI=ORBUI+1
"RTN","ORB3",172,0)
 Q
"RTN","ORB3",173,0)
ORDERER ;
"RTN","ORB3",174,0)
 Q:+$G(ORNUM)<1
"RTN","ORB3",175,0)
 I $D(ORBU) S ORBU(ORBUI)=" Ordering provider:",ORBUI=ORBUI+1
"RTN","ORB3",176,0)
 N ORBLST,ORBI,ORBTM,ORBJ,ORBTNAME,ORBPLST,ORBPI,ORBPTM,ORBTTYPE
"RTN","ORB3",177,0)
 S ORBDUZ=$S(ORN=12:+$$UNSIGNOR^ORQOR2(ORNUM),1:$$ORDERER^ORQOR2(ORNUM))
"RTN","ORB3",178,0)
 I +$G(ORBDUZ)>0 D
"RTN","ORB3",179,0)
 .D USER
"RTN","ORB3",180,0)
 .;if notif = Order Req E/S (#12) or Order Req Co-sign (#37) and
"RTN","ORB3",181,0)
 .;user doesn't have ES authority, send to fellow team members w/ES:
"RTN","ORB3",182,0)
 .I ((ORN=12)!(ORN=37)),('$D(^XUSEC("ORES",ORBDUZ))) D
"RTN","ORB3",183,0)
 ..I $D(ORBU) S ORBU(ORBUI)=" Orderer can't elec sign, getting teams orderer belongs to:",ORBUI=ORBUI+1
"RTN","ORB3",184,0)
 ..D TEAMPR^ORQPTQ1(.ORBLST,ORBDUZ)  ;get orderer's tms
"RTN","ORB3",185,0)
 ..Q:+$G(ORBLST(1))<1
"RTN","ORB3",186,0)
 ..D TMSPT^ORQPTQ1(.ORBPLST,ORBDFN)  ;get pt's tms
"RTN","ORB3",187,0)
 ..Q:+$G(ORBPLST(1))<1
"RTN","ORB3",188,0)
 ..S ORBI="" F  S ORBI=$O(ORBLST(ORBI)) Q:ORBI=""  D
"RTN","ORB3",189,0)
 ...S ORBPI="" F  S ORBPI=$O(ORBPLST(ORBPI)) Q:ORBPI=""  D
"RTN","ORB3",190,0)
 ....S ORBTM=$P(ORBLST(ORBI),U),ORBPTM=$P(ORBPLST(ORBPI),U)
"RTN","ORB3",191,0)
 ....I ORBTM=ORBPTM D  ;if pt is on provider's team
"RTN","ORB3",192,0)
 .....I +$G(ORBPTM)>0 D
"RTN","ORB3",193,0)
 ......S ORBTNAME=$P(ORBPLST(ORBPI),U,2)
"RTN","ORB3",194,0)
 ......S ORBTTYPE=$P(ORBPLST(ORBPI),U,3)
"RTN","ORB3",195,0)
 ......I $D(ORBU) S ORBU(ORBUI)="  Orderer's pt list "_ORBTNAME_" ["_ORBTTYPE_"] recipients: ",ORBUI=ORBUI+1
"RTN","ORB3",196,0)
 ......N ORBLST2 D TEAMPROV^ORQPTQ1(.ORBLST2,ORBPTM)
"RTN","ORB3",197,0)
 ......Q:+$G(ORBLST2(1))<1
"RTN","ORB3",198,0)
 ......S ORBJ="" F  S ORBJ=$O(ORBLST2(ORBJ)) Q:ORBJ=""  D
"RTN","ORB3",199,0)
 .......S ORBDUZ=$P(ORBLST2(ORBJ),U)_U_ORBPTM I +$G(ORBDUZ)>0,($D(^XUSEC("ORES",+ORBDUZ))) D USER
"RTN","ORB3",200,0)
 Q
"RTN","ORB3",201,0)
ENTERBY ;
"RTN","ORB3",202,0)
 I $D(ORBU) S ORBU(ORBUI)=" User entering order's most recent activity:",ORBUI=ORBUI+1
"RTN","ORB3",203,0)
 Q:+$G(ORNUM)<1
"RTN","ORB3",204,0)
 I $D(^OR(100,ORNUM,8,0)) D
"RTN","ORB3",205,0)
 .S ORBDUZ=$P(^OR(100,ORNUM,8,$P(^OR(100,ORNUM,8,0),U,3),0),U,13)
"RTN","ORB3",206,0)
 I +$G(ORBDUZ)>0 D USER
"RTN","ORB3",207,0)
 Q
"RTN","ORB3",208,0)
PCMMPRIM ;
"RTN","ORB3",209,0)
 I $D(ORBU) S ORBU(ORBUI)=" PCMM Primary Care Practitioner:",ORBUI=ORBUI+1
"RTN","ORB3",210,0)
 S ORBDUZ=+$$OUTPTPR^SDUTL3(ORBDFN,$$NOW^XLFDT,1)  ;DBIA #1252
"RTN","ORB3",211,0)
 I +$G(ORBDUZ)>0 D USER
"RTN","ORB3",212,0)
 Q
"RTN","ORB3",213,0)
PCMMASSC ;
"RTN","ORB3",214,0)
 I $D(ORBU) S ORBU(ORBUI)=" PCMM Associate Provider:",ORBUI=ORBUI+1
"RTN","ORB3",215,0)
 S ORBDUZ=+$$OUTPTAP^SDUTL3(ORBDFN,$$NOW^XLFDT)  ;DBIA #1252
"RTN","ORB3",216,0)
 I +$G(ORBDUZ)>0 D USER
"RTN","ORB3",217,0)
 Q
"RTN","ORB3",218,0)
PCMMTEAM ;
"RTN","ORB3",219,0)
 N ORPCMM,ORPCMMDZ
"RTN","ORB3",220,0)
 I $D(ORBU) S ORBU(ORBUI)=" PCMM Team Position Assignments:",ORBUI=ORBUI+1
"RTN","ORB3",221,0)
 S ORPCMM=$$PRPT^SCAPMC(ORBDFN,,,,,,"^TMP(""ORPCMM"",$J)",)  ;DBIA #1916
"RTN","ORB3",222,0)
 S ORPCMMDZ=0
"RTN","ORB3",223,0)
 F  S ORPCMMDZ=$O(^TMP("ORPCMM",$J,"SCPR",ORPCMMDZ)) Q:'ORPCMMDZ  D
"RTN","ORB3",224,0)
 .S ORBDUZ=ORPCMMDZ D USER
"RTN","ORB3",225,0)
 K ^TMP("ORPCMM",$J)
"RTN","ORB3",226,0)
 Q
"RTN","ORB3",227,0)
USER ;should USER (ORBDUZ) be a recip
"RTN","ORB3",228,0)
 D USER^ORB3USER(.XQA,ORBDUZ,ORN,.ORBU,.ORBUI,ORBDFN)
"RTN","ORB3",229,0)
 Q
"RTN","ORB3F1")
0^64^B8327377
"RTN","ORB3F1",1,0)
ORB3F1 ; slc/CLA - Extrinsic functions to support OE/RR 3 notifications ;5/8/95  15:16
"RTN","ORB3F1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**9,74,139,190**;Dec 17, 1997
"RTN","ORB3F1",3,0)
 ;
"RTN","ORB3F1",4,0)
XQAKILL(ORN) ;extrinsic function to return the delete mechanism for the notification based on definition in PARAM DEF file
"RTN","ORB3F1",5,0)
 N ORBKILL S ORBKILL=1
"RTN","ORB3F1",6,0)
 Q:$G(ORN)="" ORBKILL
"RTN","ORB3F1",7,0)
 S ORBKILL=$$GET^XPAR("DIV^SYS^PKG","ORB DELETE MECHANISM",ORN,"I")
"RTN","ORB3F1",8,0)
 I ORBKILL="A" S ORBKILL=0  ;delete for all recipients
"RTN","ORB3F1",9,0)
 E  S ORBKILL=1  ;default for delete mechanism is 1 (delete only for this recipient)
"RTN","ORB3F1",10,0)
 Q ORBKILL
"RTN","ORB3F1",11,0)
SITEORD(ORNUM,IOPT) ;Extrinsic function returns 1 (Yes) if the site has flagged the
"RTN","ORB3F1",12,0)
 ; orderable item (determined from the order number ORNUM) to trigger a
"RTN","ORB3F1",13,0)
 ; notification when ordered
"RTN","ORB3F1",14,0)
 N ORBFLAG,OI,ORBLST,ORBERR,ORBI,ORBE
"RTN","ORB3F1",15,0)
 S ORBFLAG=0,OI="",ORBE="",ORBERR=""
"RTN","ORB3F1",16,0)
 Q:+$G(ORNUM)<1 ORBFLAG
"RTN","ORB3F1",17,0)
 S OI=$$OI^ORQOR2(ORNUM)
"RTN","ORB3F1",18,0)
 Q:+$G(OI)<1 ORBFLAG
"RTN","ORB3F1",19,0)
 I IOPT="I" D ENVAL^XPAR(.ORBLST,"ORB OI ORDERED - INPT","`"_OI,.ORBERR)
"RTN","ORB3F1",20,0)
 I IOPT="O" D ENVAL^XPAR(.ORBLST,"ORB OI ORDERED - OUTPT","`"_OI,.ORBERR)
"RTN","ORB3F1",21,0)
 I 'ORBERR,$G(ORBLST)>0 D
"RTN","ORB3F1",22,0)
 .F ORBI=1:1:ORBLST Q:ORBFLAG=1  D
"RTN","ORB3F1",23,0)
 ..S ORBE=$O(ORBLST(ORBE))
"RTN","ORB3F1",24,0)
 ..I $D(ORBLST(ORBE,OI)) S ORBFLAG=1
"RTN","ORB3F1",25,0)
 Q ORBFLAG
"RTN","ORB3F1",26,0)
SITERES(ORNUM,IOPT) ;Extrinsic function returns 1 (Yes) if the site has flagged the
"RTN","ORB3F1",27,0)
 ; orderable item (determined from the order number ORNUM) to trigger a
"RTN","ORB3F1",28,0)
 ; notification when resulted
"RTN","ORB3F1",29,0)
 N ORBFLAG,OI,ORBLST,ORBERR,ORBI,ORBE
"RTN","ORB3F1",30,0)
 S ORBFLAG=0,OI="",ORBE="",ORBERR=""
"RTN","ORB3F1",31,0)
 Q:+$G(ORNUM)<1 ORBFLAG
"RTN","ORB3F1",32,0)
 S OI=$$OI^ORQOR2(ORNUM)
"RTN","ORB3F1",33,0)
 Q:+$G(OI)<1 ORBFLAG
"RTN","ORB3F1",34,0)
 I IOPT="I" D ENVAL^XPAR(.ORBLST,"ORB OI RESULTS - INPT","`"_OI,.ORBERR)
"RTN","ORB3F1",35,0)
 I IOPT="O" D ENVAL^XPAR(.ORBLST,"ORB OI RESULTS - OUTPT","`"_OI,.ORBERR)
"RTN","ORB3F1",36,0)
 I 'ORBERR,$G(ORBLST)>0 D
"RTN","ORB3F1",37,0)
 .F ORBI=1:1:ORBLST Q:ORBFLAG=1  D
"RTN","ORB3F1",38,0)
 ..S ORBE=$O(ORBLST(ORBE))
"RTN","ORB3F1",39,0)
 ..I $D(ORBLST(ORBE,OI)) S ORBFLAG=1
"RTN","ORB3F1",40,0)
 Q ORBFLAG
"RTN","ORB3F1",41,0)
LRRAD(OI) ;Extrinsic function returns 1 (true) if Orderable Item is a
"RTN","ORB3F1",42,0)
 ;Chemistry Lab ("S.CH") or Imaging ("S.XRAY") proc or Consult ("S.CSLT")
"RTN","ORB3F1",43,0)
 N OITEXT,ORBFLAG
"RTN","ORB3F1",44,0)
 S ORBFLAG=""
"RTN","ORB3F1",45,0)
 Q:+$G(OI)<1 ORBFLAG
"RTN","ORB3F1",46,0)
 Q:'$L($G(^ORD(101.43,OI,0))) ORBFLAG
"RTN","ORB3F1",47,0)
 S OITEXT=$P(^ORD(101.43,OI,0),U)
"RTN","ORB3F1",48,0)
 S OITEXT=$$UP^XLFSTR(OITEXT)
"RTN","ORB3F1",49,0)
 Q:$D(^ORD(101.43,"S.CH",OITEXT)) 1
"RTN","ORB3F1",50,0)
 Q:$D(^ORD(101.43,"S.XRAY",OITEXT)) 1
"RTN","ORB3F1",51,0)
 Q:$D(^ORD(101.43,"S.CSLT",OITEXT)) 1
"RTN","ORB3F1",52,0)
 Q ORBFLAG
"RTN","ORB3F1",53,0)
 ;
"RTN","ORB3F1",54,0)
EXP(ORDT,ORNUM) ;set up ^XTMP("ORAE" to store expired orders
"RTN","ORB3F1",55,0)
 N ORNOW,X0
"RTN","ORB3F1",56,0)
 S ORNOW=$$NOW^XLFDT
"RTN","ORB3F1",57,0)
 S ^XTMP("ORAE",0)=$$FMADD^XLFDT(ORNOW,30,"","","")_U_ORNOW
"RTN","ORB3F1",58,0)
 S X0=^OR(100,ORNUM,0)
"RTN","ORB3F1",59,0)
 S ^XTMP("ORAE",$P(X0,U,2),$P(X0,U,11),ORDT,ORNUM)=""
"RTN","ORB3F1",60,0)
 Q
"RTN","ORB3F1",61,0)
 ;
"RTN","ORB3F1",62,0)
DELEXP ; delete ^XTMP("ORAE" entries older than param value + 48 hours:
"RTN","ORB3F1",63,0)
 N ORNOW,OREXDT,OREXPAR,ORDELDT,ORPT,ORDG
"RTN","ORB3F1",64,0)
 S ORNOW=$$NOW^XLFDT
"RTN","ORB3F1",65,0)
 S OREXPAR=$$GET^XPAR("ALL","ORWOR EXPIRED ORDERS",1,"I")
"RTN","ORB3F1",66,0)
 S OREXPAR=$S($G(OREXPAR):OREXPAR,1:72)
"RTN","ORB3F1",67,0)
 S ORDELDT=$$FMADD^XLFDT(ORNOW,"",-(OREXPAR+48),"","")
"RTN","ORB3F1",68,0)
 S ORPT=0 F  S ORPT=$O(^XTMP("ORAE",ORPT)) Q:'ORPT  D
"RTN","ORB3F1",69,0)
 .S ORDG=0 F  S ORDG=$O(^XTMP("ORAE",ORPT,ORDG)) Q:'ORDG  D
"RTN","ORB3F1",70,0)
 ..S OREXDT=0 F  S OREXDT=$O(^XTMP("ORAE",ORPT,ORDG,OREXDT)) Q:'OREXDT  D
"RTN","ORB3F1",71,0)
 ...I OREXDT<ORDELDT K ^XTMP("ORAE",ORPT,ORDG,OREXDT)
"RTN","ORB3F1",72,0)
 Q
"RTN","ORCACT0")
0^24^B47902492
"RTN","ORCACT0",1,0)
ORCACT0 ;SLC/MKB-Validate order action ;2/24/03  10:35
"RTN","ORCACT0",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,27,48,72,86,92,94,141,165,177,173,190**;Dec 17, 1997
"RTN","ORCACT0",3,0)
VALID(IFN,ACTION,ERROR,NATR) ; -- Determines if action is valid for order IFN
"RTN","ORCACT0",4,0)
 N OR0,OR3,ORA0,AIFN,PKG,DG,ORDSTS,ACTSTS,VER,X,Y,MEDPARM K ERROR
"RTN","ORCACT0",5,0)
 S OR0=$G(^OR(100,+IFN,0)),OR3=$G(^(3)),PKG=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORCACT0",6,0)
 S DG=$P($G(^ORD(100.98,+$P(OR0,U,11),0)),U,3)
"RTN","ORCACT0",7,0)
 S MEDPARM=$S($G(NATR)="A":2,PKG'="PS":2,'$D(^XUSEC("OREMAS",DUZ)):2,DG="NV RX":$$GET^XPAR("ALL","OR OREMAS NON-VA MED ORDERS"),1:$$GET^XPAR("ALL","OR OREMAS MED ORDERS"))
"RTN","ORCACT0",8,0)
 S AIFN=$P(IFN,";",2) S:'AIFN AIFN=+$P(OR3,U,7)
"RTN","ORCACT0",9,0)
 S ORA0=$G(^OR(100,+IFN,8,AIFN,0)),ACTSTS=$P(ORA0,U,15)
"RTN","ORCACT0",10,0)
 S ORDSTS=$P(OR3,U,3),VER=$S($P(OR0,U,5)["101.41":3,1:2)
"RTN","ORCACT0",11,0)
CM I ACTION="CM" S ERROR="This action is no longer available!" G VQ ; ward comments - no restrictions
"RTN","ORCACT0",12,0)
FL I ACTION="FL" D  G VQ ; flag
"RTN","ORCACT0",13,0)
 . I +$G(^OR(100,+IFN,8,AIFN,3)) S ERROR="This order is already flagged!" Q
"RTN","ORCACT0",14,0)
UF I ACTION="UF" D  G VQ ; unflag
"RTN","ORCACT0",15,0)
 . I '+$G(^OR(100,+IFN,8,AIFN,3)) S ERROR="This order is not flagged!" Q
"RTN","ORCACT0",16,0)
DC1 I ACTION="DC",ACTSTS D  G VQ ; discontinue/cancel unrel or canc order
"RTN","ORCACT0",17,0)
 . I (ACTSTS=11)!(ACTSTS=10) D  Q  ; unreleased
"RTN","ORCACT0",18,0)
 .. I 'MEDPARM S ERROR="You are not authorized to cancel med orders!" Q
"RTN","ORCACT0",19,0)
 .. I $G(NATR)="A" S X=$O(^ORE(100.2,"AO",+IFN,0)) I X,'$G(^ORE(100.2,X,1)) S ERROR="Future event orders may not be auto-discontinued!" Q
"RTN","ORCACT0",20,0)
 . I ACTSTS=12 S ERROR="This order has been dc'd due to edit!" Q
"RTN","ORCACT0",21,0)
 . I ACTSTS=13 S ERROR="This order has been cancelled!" Q
"RTN","ORCACT0",22,0)
ES I (ACTION="ES")!(ACTION="OC")!(ACTION="RS")!(ACTION="DS") D ES^ORCACT01 G VQ ; sign
"RTN","ORCACT0",23,0)
VR I ACTION="VR" D  G VQ ; verify
"RTN","ORCACT0",24,0)
 . I $G(ORVER)="N",$P(ORA0,U,9) S ERROR="This order has been verified!" Q
"RTN","ORCACT0",25,0)
 . I $G(ORVER)="C",$P(ORA0,U,11) S ERROR="This order has been verified!" Q
"RTN","ORCACT0",26,0)
 . I $G(ORVER)="R",$P(ORA0,U,19) S ERROR="This order has been reviewed!" Q
"RTN","ORCACT0",27,0)
 . I (ACTSTS=11)!(ACTSTS=10) S ERROR="This order has not been released to the service." Q
"RTN","ORCACT0",28,0)
 . I AIFN=1,ORDSTS=5,PKG="PS" S X=$$DISABLED I X S ERROR=$P(X,U,2) Q
"RTN","ORCACT0",29,0)
DIS S X=$$DISABLED I X S ERROR=$P(X,U,2) G VQ
"RTN","ORCACT0",30,0)
MN I ACTION="MN" D  G VQ ; manually release (delayed)
"RTN","ORCACT0",31,0)
 . I ACTSTS'=10,ACTSTS'=11 S ERROR="This order has already been released!" Q
"RTN","ORCACT0",32,0)
 . I $P(OR0,U,12)="I",'$G(^DPT(+ORVP,.105)) S ERROR="This patient is not currently admitted!"
"RTN","ORCACT0",33,0)
GMRA I PKG="GMRA" S ERROR="This action is not allowed on an allergy/adverse reaction!" G VQ ; no actions allowed on Allergies
"RTN","ORCACT0",34,0)
MEDS I PKG="PS",'MEDPARM S ERROR="You are not authorized to enter med orders!" G VQ
"RTN","ORCACT0",35,0)
RW I ACTION="RW" D RW^ORCACT01 G VQ ; rewrite/copy
"RTN","ORCACT0",36,0)
XFR I ACTION="XFR" D XFR^ORCACT01 G VQ ; transfer to in/outpt
"RTN","ORCACT0",37,0)
RN I ACTION="RN" D RN^ORCACT01 G VQ ; renew
"RTN","ORCACT0",38,0)
TRM I $$DONE G VQ ; ORDSTS=1,2,7,12,13
"RTN","ORCACT0",39,0)
EV I ACTION="EV" D  G VQ ; change delay event
"RTN","ORCACT0",40,0)
 . I ORDSTS'=10,ORDSTS'=11 S ERROR="This order has been released!" Q
"RTN","ORCACT0",41,0)
 . I DG="NV RX" S ERROR="Non-VA Med orders do not support this action!" Q
"RTN","ORCACT0",42,0)
 . I $$EVTORDER^OREVNTX(IFN) S ERROR="The release event for this order may not be changed!" Q
"RTN","ORCACT0",43,0)
 . S X=$P(ORA0,U,4) I X'=2,X'=3 S ERROR="Signed orders may not be delayed to another event!" Q
"RTN","ORCACT0",44,0)
DC2 I ACTION="DC",ACTSTS="" D  G VQ ; DC released order
"RTN","ORCACT0",45,0)
 . I $G(NATR)="A" D  Q:$D(ERROR)
"RTN","ORCACT0",46,0)
 .. S X=$O(^ORE(100.2,"AO",+IFN,0)) I X S:'$G(^ORE(100.2,X,1)) ERROR="Future event orders may not be auto-discontinued!" Q
"RTN","ORCACT0",47,0)
 .. I $$GET1^DIQ(9.4,+$P(OR0,U,14)_",",1)="PSO",$G(DGPMT)=1 Q  ;177 If admission auto-dc and order is outpt med then no further checking needed
"RTN","ORCACT0",48,0)
 .. I $G(DGPMT)=1,$P($G(^SC(+$P(OR0,U,10),0)),U,3)'="C" S ERROR="Only outpatient orders may be auto-discontinued!" Q
"RTN","ORCACT0",49,0)
 .. I $G(DGPMT)'=1,$P($G(^SC(+$P(OR0,U,10),0)),U,3)="C" S ERROR="Only inpatient orders may be auto-discontinued!" Q
"RTN","ORCACT0",50,0)
 . I PKG="RA",ORDSTS=6 S ERROR="Active Radiology orders cannot be discontinued!" Q
"RTN","ORCACT0",51,0)
 . I PKG="LR" D  Q
"RTN","ORCACT0",52,0)
 .. I $$COLLECTD S ERROR="Lab orders that have been collected may not be discontinued!" Q
"RTN","ORCACT0",53,0)
 .. I $G(NATR)="A","^12^38^"'[(U_$P($G(DGPMA),U,18)_U),$$VALUE^ORX8(+IFN,"COLLECT")="SP",$P(OR0,U,8)'<DT S ERROR="Future Send Patient orders may not be auto-discontinued!" Q
"RTN","ORCACT0",54,0)
 . I PKG="GMRC",ORDSTS=9 S ERROR="Consults orders with partial results cannot be discontinued!" Q
"RTN","ORCACT0",55,0)
 . I DG="DO",$G(DGPMT)'=3,ORDSTS=6,'$$NPO(+IFN) S ERROR="Active Diets cannot be discontinued; please order a new diet!" Q
"RTN","ORCACT0",56,0)
RL I ACTION="RL" D  G VQ  ; release hold
"RTN","ORCACT0",57,0)
 . I ORDSTS'=3 S ERROR="Orders not on hold cannot be released!" Q
"RTN","ORCACT0",58,0)
 . I ACTSTS S ERROR=$$ACTION($P(ORA0,U,2))_" orders cannot be released from hold!" Q
"RTN","ORCACT0",59,0)
 . N NATR,ACT S ACT=$S($P(ORA0,U,2)="HD":AIFN,1:+$P(OR3,U,7))
"RTN","ORCACT0",60,0)
 . S NATR=+$P($G(^OR(100,+IFN,8,ACT,0)),U,12),ACT=$P($G(^(0)),U,2)
"RTN","ORCACT0",61,0)
 . I PKG="RA"!(ACT'="HD")!($P($G(^ORD(100.02,NATR,0)),U,2)="S") S ERROR="Orders held by a service must be released from hold through the service!" Q
"RTN","ORCACT0",62,0)
AIFN S X=$P(ORA0,U,2) I AIFN>1,ACTSTS S ERROR="This action is not allowed on a "_$$ACTION(X)_" order!" G VQ
"RTN","ORCACT0",63,0)
RF I ACTION="RF" D  G VQ
"RTN","ORCACT0",64,0)
 . I DG'="O RX" S ERROR="Only Outpatient Med orders may be refilled!" Q
"RTN","ORCACT0",65,0)
 . I ORDSTS=5 S ERROR="Pending orders may not be refilled!" Q
"RTN","ORCACT0",66,0)
 . N X,PSIFN S PSIFN=$G(^OR(100,+IFN,4))
"RTN","ORCACT0",67,0)
 . S X=$$REFILL^PSOREF(PSIFN) I X'>0 S ERROR=$P(X,U,2) Q
"RTN","ORCACT0",68,0)
CP I ACTION="CP" D  G VQ ; complete
"RTN","ORCACT0",69,0)
 . I PKG'="OR" S ERROR="Only generic text orders may be completed through this option!" Q
"RTN","ORCACT0",70,0)
 . I ORDSTS=11!(ORDSTS=10) S ERROR="This order has not been released!" Q
"RTN","ORCACT0",71,0)
AL I ACTION="AL" D  G VQ
"RTN","ORCACT0",72,0)
 . I PKG'="LR",PKG'="RA",PKG'="GMRC" S ERROR="This order does not generate results!" Q
"RTN","ORCACT0",73,0)
 . I $P(OR3,U,10) S ERROR="This order is already flagged to alert the provider when resulted!" Q
"RTN","ORCACT0",74,0)
XX I ACTION="XX" D XX^ORCACT01 G VQ ; edit/change
"RTN","ORCACT0",75,0)
HD I ACTION="HD" D  G VQ ; hold
"RTN","ORCACT0",76,0)
 . I PKG="FH" S ERROR="Diet orders cannot be held!" Q
"RTN","ORCACT0",77,0)
 . I PKG="LR" S ERROR="Lab orders cannot be held!" Q
"RTN","ORCACT0",78,0)
 . I PKG="RA" S ERROR="Radiology orders cannot be held!" Q
"RTN","ORCACT0",79,0)
 . I PKG="GMRC" S ERROR="Consult orders cannot be held!" Q
"RTN","ORCACT0",80,0)
 . I DG="NV RX" S ERROR="Non-VA Med orders cannot be held!" Q
"RTN","ORCACT0",81,0)
 . I ORDSTS=3 S ERROR="This order is already on hold!" Q
"RTN","ORCACT0",82,0)
 . I ORDSTS'=6,PKG="PS" S ERROR="Only active Pharmacy orders may be held!" Q
"RTN","ORCACT0",83,0)
 . I (ORDSTS=11)!(ORDSTS=10) S ERROR="This order has not been released to the service." Q
"RTN","ORCACT0",84,0)
VQ S Y=$S($D(ERROR):0,1:1)
"RTN","ORCACT0",85,0)
 Q Y
"RTN","ORCACT0",86,0)
 ;
"RTN","ORCACT0",87,0)
ACTION(X) ; -- Return text of action X
"RTN","ORCACT0",88,0)
 N Y S Y=$S(X="NW":"New",X="DC":"Discontinue",X="HD":"Hold",X="RL":"Release Hold",X="RN":"Renew",1:X)
"RTN","ORCACT0",89,0)
 Q Y
"RTN","ORCACT0",90,0)
 ;
"RTN","ORCACT0",91,0)
NPO(ORIFN) ; -- Returns 1 or 0, if order ORIFN is for NPO
"RTN","ORCACT0",92,0)
 N X,Y S X=$$VALUE^ORX8(+ORIFN,"ORDERABLE",1,"E")
"RTN","ORCACT0",93,0)
 S Y=$S($E(X,1,3)="NPO":1,1:0)
"RTN","ORCACT0",94,0)
 Q Y
"RTN","ORCACT0",95,0)
 ;
"RTN","ORCACT0",96,0)
COLLECTD() ; -- Lab order collected/active (incl all children)?
"RTN","ORCACT0",97,0)
 I (ORDSTS=11)!(ORDSTS=10) Q 0 ; unreleased
"RTN","ORCACT0",98,0)
 I '$O(^OR(100,+IFN,2,0)) Q (ORDSTS'=5)
"RTN","ORCACT0",99,0)
 ;I ORDSTS'=6 Q 1 ; Parent -> active instead of pending
"RTN","ORCACT0",100,0)
 N Y,Z S Y=1,Z=0
"RTN","ORCACT0",101,0)
 F  S Z=$O(^OR(100,+IFN,2,Z)) Q:Z'>0  I $P($G(^OR(100,Z,3)),U,3)=5 S Y=0 Q
"RTN","ORCACT0",102,0)
 Q Y
"RTN","ORCACT0",103,0)
 ;
"RTN","ORCACT0",104,0)
DONE() ; -- sets ERROR if terminal status
"RTN","ORCACT0",105,0)
 I ORDSTS=1 S ERROR="This order has been discontinued!" Q 1
"RTN","ORCACT0",106,0)
 I ORDSTS=2 S ERROR="This order has been completed!" Q 1
"RTN","ORCACT0",107,0)
 I ORDSTS=7 S ERROR="This order has expired!" Q 1
"RTN","ORCACT0",108,0)
 I ORDSTS=12 S ERROR="This order has been changed!" Q 1
"RTN","ORCACT0",109,0)
 I ORDSTS=13 S ERROR="This order has been cancelled!" Q 1
"RTN","ORCACT0",110,0)
 I ORDSTS=14 S ERROR="This order has lapsed!" Q 1
"RTN","ORCACT0",111,0)
 I ORDSTS=15 S ERROR="This order has been renewed!" Q 1
"RTN","ORCACT0",112,0)
 Q 0
"RTN","ORCACT0",113,0)
 ;
"RTN","ORCACT0",114,0)
DISABLED() ; -- Order dialog [or protocol] disabled?
"RTN","ORCACT0",115,0)
 N X,DLG S DLG=$P(OR0,U,5),X=0 I +DLG'>0 Q X
"RTN","ORCACT0",116,0)
 I VER'<3,DLG?1.N1";ORD(101.41," S X=$$MSG^ORXD(+DLG) Q X
"RTN","ORCACT0",117,0)
 S DLG=$S(PKG="RA":"RA OERR EXAM",PKG="GMRC":"GMRCOR CONSULT",1:"")
"RTN","ORCACT0",118,0)
 I $L(DLG) S DLG=+$O(^ORD(101.41,"AB",DLG,0)),X=$$MSG^ORXD(DLG)
"RTN","ORCACT0",119,0)
 Q X
"RTN","ORCACT01")
0^62^B73392861
"RTN","ORCACT01",1,0)
ORCACT01        ;SLC/MKB-Validate order actions cont ;2/12/03  13:14
"RTN","ORCACT01",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**94,116,134,141,163,187,190**;Dec 17, 1997
"RTN","ORCACT01",3,0)
 ;
"RTN","ORCACT01",4,0)
ES ; -- sign [on chart]
"RTN","ORCACT01",5,0)
 I ORDSTS=11,VER<3,PKG'="OR" S ERROR="This order cannot be released and must be discontinued!" Q
"RTN","ORCACT01",6,0)
 N X I ACTSTS=11!(ACTSTS=10) D  Q:$L($G(ERROR))
"RTN","ORCACT01",7,0)
 . I $P(ORA0,U,2)="DC",$$DONE^ORCACT0 D CANCEL^ORCSEND(+IFN),UNOTIF^ORCSIGN S OREBUILD=1 Q
"RTN","ORCACT01",8,0)
 . S X=$$DISABLED^ORCACT0 I X S ERROR=$P(X,U,2) Q
"RTN","ORCACT01",9,0)
 I ACTION="OC",$G(DG)="NV RX" S:MEDPARM<2 ERROR="You are not authorized to release non-VA med orders!" Q
"RTN","ORCACT01",10,0)
 S X=$P(ORA0,U,4) I X=3 S:ACTSTS'=11&(ACTSTS'=10) ERROR="This order does not require a signature!" Q
"RTN","ORCACT01",11,0)
 I X'=2 S ERROR="This order has been signed!" Q
"RTN","ORCACT01",12,0)
 I DG="O RX",ACTION'="ES",ACTION'="DS",$G(NATR)'="I" S ERROR="Outpatient meds may not be released without a clinician's signature!" Q
"RTN","ORCACT01",13,0)
 I (ACTION="ES"!(ACTION="DS")),$D(^XUSEC("ORELSE",DUZ)),$P(OR0,U,16)'<2 S ERROR="You are not privileged to sign this order!" Q
"RTN","ORCACT01",14,0)
 I ACTION="OC" S:MEDPARM<2 ERROR="You are not authorized to release med orders!" Q
"RTN","ORCACT01",15,0)
 I ACTION="RS" D  Q:$D(ERROR)  Q:$G(NATR)'="I"
"RTN","ORCACT01",16,0)
 . Q:ACTSTS=11  Q:ACTSTS=10  ;unreleased - ok
"RTN","ORCACT01",17,0)
 . S ERROR="This order has already been released!"
"RTN","ORCACT01",18,0)
ES1 I PKG="PS" D  ;authorized to write meds?
"RTN","ORCACT01",19,0)
 . N TYPE,OI,PSOI,DEAFLG,PKI
"RTN","ORCACT01",20,0)
 . S X=$G(^VA(200,DUZ,"PS"))
"RTN","ORCACT01",21,0)
 . I '$P(X,U) S ERROR="You are not authorized to sign med orders!" Q
"RTN","ORCACT01",22,0)
 . I $P(X,U,4),$$NOW^XLFDT>$P(X,U,4) S ERROR="You are no longer authorized to sign med orders!" Q
"RTN","ORCACT01",23,0)
 . Q:DG="IV RX"  Q:$P(ORA0,U,2)="DC"  ;don't need to ck DEA#
"RTN","ORCACT01",24,0)
 . S OI=+$$VALUE^ORX8(+IFN,"ORDERABLE")
"RTN","ORCACT01",25,0)
 . S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2) Q:PSOI'>0
"RTN","ORCACT01",26,0)
 . S TYPE=$S($P(DG," ")="O":"O",1:"I"),DEAFLG=$$OIDEA^PSSUTLA1(PSOI,TYPE)
"RTN","ORCACT01",27,0)
 . I DEAFLG>0,'$L($$DEA^XUSER()) S ERROR="You must have a valid DEA# or VA# to sign this order!" Q
"RTN","ORCACT01",28,0)
 . D PKISITE^ORWOR(.PKI)
"RTN","ORCACT01",29,0)
 . I $G(PKI),ACTION="RS",DEAFLG=1 S ERROR="This order cannot be released without a Digital Signature" Q
"RTN","ORCACT01",30,0)
 Q
"RTN","ORCACT01",31,0)
 ;
"RTN","ORCACT01",32,0)
XFR ; -- transfer to inpt/outpt [IFN=order to be transferred]
"RTN","ORCACT01",33,0)
 N OI,PS I DG="TPN" S ERROR="TPN orders may not be copied!" Q
"RTN","ORCACT01",34,0)
 I $$INACTIVE S ERROR="Orders for inactive orderables may not be transferred; please enter a new order!" Q
"RTN","ORCACT01",35,0)
 S OI=+$O(^OR(100,+IFN,.1,"B",0)),ORPS=$G(^ORD(101.43,OI,"PS"))
"RTN","ORCACT01",36,0)
 I DG="UD RX",'$P(ORPS,U,2) S ERROR="This drug may not be ordered for an outpatient!" Q
"RTN","ORCACT01",37,0)
 I DG="O RX" D  Q:$L($G(ERROR))
"RTN","ORCACT01",38,0)
 . I '$P(ORPS,U) S ERROR="This drug may not be ordered for an inpatient!" Q
"RTN","ORCACT01",39,0)
 . D:$O(^OR(100,+IFN,4.5,"ID","MISC",0)) DOSES^ORCACT02(+IFN)
"RTN","ORCACT01",40,0)
 Q
"RTN","ORCACT01",41,0)
 ;
"RTN","ORCACT01",42,0)
RW ; -- rewrite/copy
"RTN","ORCACT01",43,0)
 I ACTSTS=12 S ERROR="Orders that have been dc'd due to editing may not be copied!" Q
"RTN","ORCACT01",44,0)
 I DG="NV RX" S ERROR="Non-VA Med orders cannot be copied!" Q
"RTN","ORCACT01",45,0)
 I DG="TPN" S ERROR="TPN orders may not be rewritten!" Q
"RTN","ORCACT01",46,0)
 I DG="UD RX",$$NTBG(+IFN) S ERROR="This order has been marked 'Not to be Given' and may not be rewritten!" Q
"RTN","ORCACT01",47,0)
 I $$INACTIVE S ERROR="Orders for inactive orderables may not be copied; please enter a new order!" Q
"RTN","ORCACT01",48,0)
 I PKG="PS",'$$MEDOK S ERROR="This drug may not be ordered!" Q
"RTN","ORCACT01",49,0)
 I DG="O RX",$O(^OR(100,+IFN,4.5,"ID","MISC",0)) D DOSES^ORCACT02(+IFN) ;old form
"RTN","ORCACT01",50,0)
 Q
"RTN","ORCACT01",51,0)
 ;
"RTN","ORCACT01",52,0)
RN ; -- renew
"RTN","ORCACT01",53,0)
 I PKG'="PS",PKG'="OR" S ERROR="This order may not be renewed!" Q
"RTN","ORCACT01",54,0)
 I (ORDSTS=11)!(ORDSTS=10) S ERROR="This order has not been released to the service." Q
"RTN","ORCACT01",55,0)
 I ACTSTS=12 S ERROR="Orders that have been dc'd due to editing may not be renewed!" Q
"RTN","ORCACT01",56,0)
 I $P(OR3,U,6) S ERROR="This order has already been "_$S($P($G(^OR(100,+$P(OR3,U,6),3)),U,11)=1:"changed!",1:"renewed!") Q
"RTN","ORCACT01",57,0)
 I PKG="OR" D  Q  ;Generic orders
"RTN","ORCACT01",58,0)
 . I $$INACTIVE S ERROR="Orders for inactive orderables may not be renewed!" Q
"RTN","ORCACT01",59,0)
 . I DG="ADT" S ERROR="M.A.S. orders may not be renewed!" Q
"RTN","ORCACT01",60,0)
 . I "^1^2^6^7^"[(U_ORDSTS_U) Q  ;ok
"RTN","ORCACT01",61,0)
 . S ERROR="This order may not be renewed!"
"RTN","ORCACT01",62,0)
 I (PKG="PS"),$$INACTIVE S ERROR="Orders for inactive orderables may not be renewed!" Q
"RTN","ORCACT01",63,0)
 I '$$MEDOK S ERROR="This drug may not be ordered!" Q
"RTN","ORCACT01",64,0)
RN1 N PSIFN S PSIFN=$G(^OR(100,+IFN,4))
"RTN","ORCACT01",65,0)
 I PSIFN<1,'$O(^OR(100,+IFN,2,0)) S ERROR="Missing or invalid order number!" Q
"RTN","ORCACT01",66,0)
 I DG="O RX" D  Q  ;Outpt Meds
"RTN","ORCACT01",67,0)
 . N ORZ,ORD S ORZ=$L($T(RENEW^PSORENW),",")
"RTN","ORCACT01",68,0)
 . I ORZ>1 S ORD=+$$VALUE^ORX8(+IFN,"DRUG"),X=$$RENEW^PSORENW(PSIFN,ORD)
"RTN","ORCACT01",69,0)
 . S:ORZ'>1 X=$$RENEW^PSORENW(PSIFN) I X<1 S ERROR=$P(X,U,2) Q
"RTN","ORCACT01",70,0)
 . S X=+$P(X,U,2) D:X RESET(+IFN,X)
"RTN","ORCACT01",71,0)
 . I $O(^OR(100,+IFN,4.5,"ID","MISC",0)) D DOSES^ORCACT02(+IFN) ;old format
"RTN","ORCACT01",72,0)
 I DG="UD RX",$$NTBG(+IFN) S ERROR="This order has been marked 'Not to be Given' and may not be renewed!" Q
"RTN","ORCACT01",73,0)
 I ORDSTS=7,'$$IV,$P(OR0,U,9)<$$FMADD^XLFDT(DT,-4)  S ERROR="Inpatient med orders may not be renewed more than 4 days after expiration!" Q
"RTN","ORCACT01",74,0)
 I ORDSTS'=6,ORDSTS'=7 S ERROR="This order may not be renewed!" Q
"RTN","ORCACT01",75,0)
RN2 I $O(^OR(100,+IFN,2,0))!$P(OR3,U,9) D  Q:$D(ERROR)!'PSIFN
"RTN","ORCACT01",76,0)
 . I $P(OR3,U,9),$$VALUE^ORX8(+IFN,"SCHEDULE",1,"E")="NOW" S ERROR="One-time NOW orders may not be renewed!" Q
"RTN","ORCACT01",77,0)
 . N DAD,ORD3,I,Y S DAD=$S($P(OR3,U,9):+$P(OR3,U,9),1:+IFN),Y=0
"RTN","ORCACT01",78,0)
 . S ORD3=$G(^OR(100,DAD,3)) I $P(ORD3,U,6) S ERROR="This complex order has already been renewed!" Q
"RTN","ORCACT01",79,0)
 . I $P(ORD3,U,3)'=6 S ERROR="This complex order is not active and may not be renewed!" Q
"RTN","ORCACT01",80,0)
 . I '$$AND^ORX8(DAD) S ERROR="Complex orders with sequential doses may not be renewed!" Q
"RTN","ORCACT01",81,0)
 . S I=0 F  S I=+$O(^OR(100,DAD,2,I)) Q:I<1  D  Q:Y
"RTN","ORCACT01",82,0)
 .. I $P($G(^OR(100,I,3)),U,3)'=6 S Y=1,ERROR="Complex orders with terminated doses may not be renewed!" Q
"RTN","ORCACT01",83,0)
 .. I PSIFN<1 S X=$$ACTIVE^PSJORREN(+ORVP,$G(^OR(100,I,4))) I +X'=1 S ERROR="This order may not be renewed: "_$S(+X>1:"Inactive orderable item",1:$P(X,U,2)) Q
"RTN","ORCACT01",84,0)
 ;I DG="TPN" S ERROR="TPN orders may not be renewed!" Q
"RTN","ORCACT01",85,0)
 S X=$$ACTIVE^PSJORREN(+ORVP,PSIFN) Q:+X=1  ;Ok
"RTN","ORCACT01",86,0)
 I +X>1,$P(X,U,2) D RESET(+IFN,+$P(X,U,2)) Q  ;replace OI
"RTN","ORCACT01",87,0)
 S ERROR="This order may not be renewed: "_$P(X,U,2)
"RTN","ORCACT01",88,0)
 Q
"RTN","ORCACT01",89,0)
 ;
"RTN","ORCACT01",90,0)
XX ; -- edit/change--
"RTN","ORCACT01",91,0)
 I PKG="RA",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Radiology cannot be changed!" Q
"RTN","ORCACT01",92,0)
 I PKG="LR",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Lab cannot be changed!" Q
"RTN","ORCACT01",93,0)
 I PKG="FH",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Dietetics cannot be changed!" Q
"RTN","ORCACT01",94,0)
 I PKG="GMRC",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Consults cannot be changed!" Q
"RTN","ORCACT01",95,0)
 I DG="TPN" S ERROR="TPN orders may not be changed!" Q
"RTN","ORCACT01",96,0)
 I ORDSTS=3 S ERROR="Orders on hold may not be changed!" Q
"RTN","ORCACT01",97,0)
 I DG="UD RX",$$NTBG(+IFN) S ERROR="This order has been marked 'Not to be Given' and may not be changed!" Q
"RTN","ORCACT01",98,0)
 I $O(^OR(100,+IFN,2,0)) S ERROR="Complex orders may not be changed!" Q
"RTN","ORCACT01",99,0)
 I $P(OR3,U,9) D  Q:$D(ERROR)
"RTN","ORCACT01",100,0)
 . Q:$$VALUE^ORX8(+IFN,"SCHEDULE",1,"E")="NOW"  ;NOW ok
"RTN","ORCACT01",101,0)
 . Q:'$O(^OR(100,+$P(OR3,U,9),4.5,"ID","CONJ",0))  ;no conj=1dose/ok
"RTN","ORCACT01",102,0)
 . S ERROR="Complex orders may not be changed!" Q
"RTN","ORCACT01",103,0)
 I $P(OR3,U,6) S ERROR="This order may not be changed - a "_$S($P($G(^OR(100,+$P(OR3,U,6),3)),U,11)=1:"change",1:"renewal")_" order already exists!" Q
"RTN","ORCACT01",104,0)
 I $P(OR3,U,11)=2 D  Q:$D(ERROR)
"RTN","ORCACT01",105,0)
 . I (ORDSTS=10!(ORDSTS=11)),DG'="O RX" S ERROR="Unreleased renewals may not be changed!" Q
"RTN","ORCACT01",106,0)
 . I PKG="PS",ORDSTS=5 S ERROR="Pending renewals may not be changed!" Q
"RTN","ORCACT01",107,0)
 I $$INACTIVE S ERROR="Orders for inactive orderables may not be changed; please enter a new order!" Q
"RTN","ORCACT01",108,0)
 I PKG="PS",'$$MEDOK S ERROR="This drug may not be ordered!" Q
"RTN","ORCACT01",109,0)
 I DG="O RX",$O(^OR(100,+IFN,4.5,"ID","MISC",0)) D DOSES^ORCACT02(+IFN) ;old form
"RTN","ORCACT01",110,0)
 Q
"RTN","ORCACT01",111,0)
 ;
"RTN","ORCACT01",112,0)
INACTIVE() ; -- Returns 1 or 0, if OI is now inactive
"RTN","ORCACT01",113,0)
 N I,OI,PREOI,PREOIX,X,Y,ORNOW,DD,PSOI S Y=0,ORNOW=$$NOW^XLFDT
"RTN","ORCACT01",114,0)
 S I=0 F  S I=+$O(^OR(100,+IFN,4.5,"ID","ORDERABLE",I)) Q:I'>0  D  Q:Y
"RTN","ORCACT01",115,0)
 . S OI=+$G(^OR(100,+IFN,4.5,I,1))
"RTN","ORCACT01",116,0)
 . I OI S X=$G(^ORD(101.43,OI,.1)) I X,X<ORNOW S Y=1
"RTN","ORCACT01",117,0)
 I Y,PKG="PS",DG'="IV RX" D  ;replacement OI?
"RTN","ORCACT01",118,0)
 . S I=+$O(^OR(100,+IFN,4.5,"ID","DRUG",0)) Q:I'>0  ;first
"RTN","ORCACT01",119,0)
 . S DD=+$G(^OR(100,+IFN,4.5,I,1)) Q:DD'>0  Q:$G(OI)'>0
"RTN","ORCACT01",120,0)
 . S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2),X=$$ITEM^PSSUTIL1(PSOI,DD)
"RTN","ORCACT01",121,0)
 . Q:X'>0  S X=+$O(^ORD(101.43,"ID",+$P(X,U,2)_";99PSP",0)) Q:X'>0
"RTN","ORCACT01",122,0)
 . I $G(^ORD(101.43,X,.1)),$G(^(.1))<ORNOW Q  ;make sure new OI is active
"RTN","ORCACT01",123,0)
 . S I=+$O(^OR(100,+IFN,4.5,"ID","ORDERABLE",0))
"RTN","ORCACT01",124,0)
 . IF I D
"RTN","ORCACT01",125,0)
 . . S PREOI=$G(^OR(100,+IFN,4.5,I,1))
"RTN","ORCACT01",126,0)
 . . S PREOIX=$O(^OR(100,+IFN,.1,"B",PREOI,0))
"RTN","ORCACT01",127,0)
 . . K ^OR(100,+IFN,.1,"B",PREOI,PREOIX)
"RTN","ORCACT01",128,0)
 . . S ^OR(100,+IFN,.1,"B",X,PREOIX)=""
"RTN","ORCACT01",129,0)
 . . S ^OR(100,+IFN,.1,PREOIX,0)=X
"RTN","ORCACT01",130,0)
 . . S ^OR(100,+IFN,4.5,I,1)=X
"RTN","ORCACT01",131,0)
 . . S Y=0 ;reset
"RTN","ORCACT01",132,0)
 Q Y
"RTN","ORCACT01",133,0)
 ;
"RTN","ORCACT01",134,0)
MEDOK() ; -- Returns 1 or 0, if med OI usage=Y
"RTN","ORCACT01",135,0)
 N Y,OI,ORPS,X S Y=1,X=$P(OR0,U,12)
"RTN","ORCACT01",136,0)
 I (DG="SPLY")!(DG="O RX")!(DG="I RX")!(DG="UD RX") D
"RTN","ORCACT01",137,0)
 . S OI=+$O(^OR(100,+IFN,4.5,"ID","ORDERABLE",0))
"RTN","ORCACT01",138,0)
 . S OI=+$G(^OR(100,+IFN,4.5,OI,1))
"RTN","ORCACT01",139,0)
 . S ORPS=$G(^ORD(101.43,OI,"PS"))
"RTN","ORCACT01",140,0)
 I DG="SPLY",'$P(ORPS,U,5) S Y=0
"RTN","ORCACT01",141,0)
 I DG="O RX",'(X="O"&$P(ORPS,U,2)),'(X="I"&($P(ORPS,U)=2)) S Y=0
"RTN","ORCACT01",142,0)
 I DG="I RX"!(DG="UD RX"),'$P(ORPS,U) S Y=0
"RTN","ORCACT01",143,0)
 I DG="IV RX" D
"RTN","ORCACT01",144,0)
 . N I,X0,X1 S I=0
"RTN","ORCACT01",145,0)
 . F  S I=+$O(^OR(100,+IFN,4.5,"ID","ORDERABLE",I)) Q:I<1  D  Q:Y<1
"RTN","ORCACT01",146,0)
 .. S X0=$G(^OR(100,+IFN,4.5,I,0)),X1=+$G(^(1))
"RTN","ORCACT01",147,0)
 .. I $P($G(^ORD(101.41,+$P(X0,U,2),0)),U)["ADDITIVE" S:'$P($G(^ORD(101.43,X1,"PS")),U,4) Y=0 Q
"RTN","ORCACT01",148,0)
 .. S:'$P($G(^ORD(101.43,X1,"PS")),U,3) Y=0
"RTN","ORCACT01",149,0)
 Q Y
"RTN","ORCACT01",150,0)
 ;
"RTN","ORCACT01",151,0)
IV() ; -- IV order, either Inpt or Fluid?
"RTN","ORCACT01",152,0)
 I DG="IV RX" Q 1
"RTN","ORCACT01",153,0)
 N I,OI,X S I=+$O(^OR(100,IFN,4.5,"ID","ORDERABLE",0))
"RTN","ORCACT01",154,0)
 S OI=+$G(^OR(100,IFN,4.5,+I,1)),X=$P($G(^ORD(101.43,+OI,"PS")),U)
"RTN","ORCACT01",155,0)
 Q (X>1)
"RTN","ORCACT01",156,0)
 ;
"RTN","ORCACT01",157,0)
NTBG(ORIFN) ; -- Inpt order marked as 'Not to be Given'?
"RTN","ORCACT01",158,0)
 N PSIFN,Y,ORI,ORCH S Y=""
"RTN","ORCACT01",159,0)
 S PSIFN=$G(^OR(100,+ORIFN,4)) I PSIFN>0 Q $$ENNG^PSJORUT2(+ORVP,PSIFN)
"RTN","ORCACT01",160,0)
 S ORI=0 F  S ORI=$O(^OR(100,+ORIFN,2,ORI)) Q:ORI'>0  S ORCH=+$G(^(ORI,0)),PSIFN=$G(^OR(100,ORCH,4)) I PSIFN>0 S Y=$$ENNG^PSJORUT2(+ORVP,PSIFN) Q:Y
"RTN","ORCACT01",161,0)
 Q Y
"RTN","ORCACT01",162,0)
 ;
"RTN","ORCACT01",163,0)
RESET(IFN,NEWOI)   ; -- Update OI if changed before renewing
"RTN","ORCACT01",164,0)
 Q:'$G(IFN)  Q:'$D(^OR(100,+IFN,0))  Q:'$G(NEWOI)
"RTN","ORCACT01",165,0)
 N I,ORIT S ORIT=+$O(^ORD(101.43,"ID",NEWOI_";99PSP",0)) Q:ORIT'>0
"RTN","ORCACT01",166,0)
 S I=$O(^OR(100,+IFN,4.5,"ID","ORDERABLE",0))
"RTN","ORCACT01",167,0)
 S:I ^OR(100,+IFN,4.5,I,1)=ORIT
"RTN","ORCACT01",168,0)
 Q
"RTN","ORCACT4")
0^14^B47676938
"RTN","ORCACT4",1,0)
ORCACT4 ;SLC/MKB-Act on orders cont ; 08 May 2002  2:12 PM
"RTN","ORCACT4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,27,116,141,149,190**;Dec 17, 1997
"RTN","ORCACT4",3,0)
XX ; -- Edit/Change order ORIFN
"RTN","ORCACT4",4,0)
 N ORDIALOG,ORQUIT,FIRST,X,OREDIT,ORCHECK,ORSTS,ORDA,OR0,ORDG,ORNMSP,OREVENT,ORDUZ,ORLOG,ORTYPE
"RTN","ORCACT4",5,0)
 K ^TMP("ORWORD",$J) S FIRST=0,ORTYPE="D"
"RTN","ORCACT4",6,0)
 S OR0=$G(^OR(100,+ORIFN,0)),ORSTS=$P(^(3),U,3),ORDG=$P(OR0,U,11)
"RTN","ORCACT4",7,0)
 I $P(OR0,U,17),ORSTS=10 S OREVENT=$P(OR0,U,17)
"RTN","ORCACT4",8,0)
 S OREDIT=$S(ORSTS=11:0,ORSTS=10:0,1:1),ORNMSP=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORCACT4",9,0)
 S X=$P(OR0,U,5) I X'["101.41" D  ; 2.5
"RTN","ORCACT4",10,0)
 . N X,WP S ORDIALOG=$$PTR^ORCD("OR GXTEXT WORD PROCESSING ORDER")
"RTN","ORCACT4",11,0)
 . D GETDLG^ORCD(ORDIALOG) S WP=$$PTR^ORCD("OR GTX WORD PROCESSING 1")
"RTN","ORCACT4",12,0)
 . S ORDIALOG(WP,1)="^TMP(""ORWORD"","_$J_","_WP_",1)"
"RTN","ORCACT4",13,0)
 . M ^TMP("ORWORD",$J,WP,1)=^OR(100,+ORIFN,1) ; edit order text
"RTN","ORCACT4",14,0)
 . S X=$O(^TMP("ORWORD",$J,WP,1,0)) I X,$E(^(X,0),1,3)=">> " S ^TMP("ORWORD",$J,WP,1,X,0)=$E(^OR(100,+ORIFN,1,X,0),4,999)
"RTN","ORCACT4",15,0)
 I X["101.41" S ORDIALOG=+X S:$P($G(^ORD(101.41,+X,0)),U,4)'="D" ORDIALOG=+$P($G(^ORD(100.98,+$P(OR0,U,11),0)),U,4) D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN)
"RTN","ORCACT4",16,0)
 X:$D(^ORD(101.41,+ORDIALOG,3)) ^(3) G:$G(ORQUIT) XXQ ; entry action
"RTN","ORCACT4",17,0)
 D DISPLAY^ORCHECK ;pkg order checks
"RTN","ORCACT4",18,0)
XX1 D DIALOG^ORCDLG G:$G(ORQUIT)&FIRST XXQ
"RTN","ORCACT4",19,0)
 I '$$CHANGED W !!,"Nothing changed!" H 2 Q
"RTN","ORCACT4",20,0)
 D ACCEPT^ORCHECK(),DISPLAY^ORCDLG S X=$$OK(ORACT)
"RTN","ORCACT4",21,0)
 G:X="^" XXQ I X="E" K ORCHECK G XX1
"RTN","ORCACT4",22,0)
 I X="C" W !?10,"... changes cancelled.",! G XXQ
"RTN","ORCACT4",23,0)
 I X="P" D XX^ORCSAVE W !?10,$S(ORIFN:"... changes placed.",1:"ERROR"),! S:ORIFN ^TMP("ORNEW",$J,ORIFN,1)=""
"RTN","ORCACT4",24,0)
XXQ X:$D(^ORD(101.41,+ORDIALOG,4)) ^(4) K ^TMP("ORWORD",$J) ; exit action
"RTN","ORCACT4",25,0)
 Q
"RTN","ORCACT4",26,0)
 ;
"RTN","ORCACT4",27,0)
CHANGED() ; -- Returns 1 or 0, if order was actually changed
"RTN","ORCACT4",28,0)
 N OROLD,P,I,Y D GETORDER^ORCD(+ORIFN,"OROLD") S Y=0
"RTN","ORCACT4",29,0)
 S P=0 F  S P=$O(ORDIALOG(P)) Q:P'>0  D  Q:Y
"RTN","ORCACT4",30,0)
 . S I=0 F  S I=$O(OROLD(P,I)) Q:I'>0  D CHK Q:Y
"RTN","ORCACT4",31,0)
 . Q:Y  S I=0 F  S I=$O(ORDIALOG(P,I)) Q:I'>0  D CHK Q:Y
"RTN","ORCACT4",32,0)
 Q Y
"RTN","ORCACT4",33,0)
 ;
"RTN","ORCACT4",34,0)
CHK N OLD,NEW S OLD=$G(OROLD(P,I)),NEW=$G(ORDIALOG(P,I)) S:NEW'=OLD Y=1
"RTN","ORCACT4",35,0)
 ;I $E(ORDIALOG(P,0))'="W" S:NEW'=OLD Y=1 Q
"RTN","ORCACT4",36,0)
 ;I @OLD@(0)'=@NEW@(0) S Y=1
"RTN","ORCACT4",37,0)
 Q
"RTN","ORCACT4",38,0)
 ;
"RTN","ORCACT4",39,0)
RN ; -- Renew order ORIFN
"RTN","ORCACT4",40,0)
 N ORDIALOG,ORQUIT,FIRST,ORENEW,ORCHECK,ORDA,OR0,OR3,ORDG,ORNMSP,ORDUZ,ORLOG,ORTYPE,X
"RTN","ORCACT4",41,0)
 K ^TMP("ORWORD",$J) S FIRST=0,ORENEW=1,ORTYPE="D"
"RTN","ORCACT4",42,0)
 S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3)),ORDIALOG=+$P(OR0,U,5)
"RTN","ORCACT4",43,0)
 S ORNMSP=$$NMSP^ORCD($P(OR0,U,14)),ORDG=$P(OR0,U,11)
"RTN","ORCACT4",44,0)
 I $P(OR3,U,9) D  Q:$G(ORQUIT)
"RTN","ORCACT4",45,0)
 . I $$DOSES($P(OR3,U,9))'>1 Q  ;dose+Now only - ok
"RTN","ORCACT4",46,0)
 . W !,$C(7),"This is part of a complex order, which must be renewed in its entirety:"
"RTN","ORCACT4",47,0)
 . S I=0 F  S I=$O(^OR(100,+$P(OR3,U,9),8,1,.1,I)) Q:I<1  S X=$G(^(I,0)) W:$$UP^XLFSTR(X)'=" FIRST DOSE NOW" !,X
"RTN","ORCACT4",48,0)
 . S:'$$OKALL ORQUIT=1 I '$G(ORQUIT) S ORIFN=+$P(OR3,U,9)
"RTN","ORCACT4",49,0)
 I $P(OR0,U,5)["101.41" S:$P($G(^ORD(101.41,ORDIALOG,0)),U,4)'="D" ORDIALOG=+$P($G(^ORD(100.98,+$P(OR0,U,11),0)),U,4) D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN) K ORDIALOG($$PTR^ORCD("OR GTX NOW"),1)
"RTN","ORCACT4",50,0)
 I $P(OR0,U,5)'["101.41" D  ; protocol -> use WP dialog for renewal
"RTN","ORCACT4",51,0)
 . N STOP,WP,X S ORDIALOG=$$PTR^ORCD("OR GXTEXT WORD PROCESSING ORDER")
"RTN","ORCACT4",52,0)
 . D GETDLG^ORCD(ORDIALOG)
"RTN","ORCACT4",53,0)
 . S WP=$$PTR^ORCD("OR GTX WORD PROCESSING 1"),ORDIALOG(WP,1)="^TMP(""ORWORD"","_$J_","_WP_",1)" M ^TMP("ORWORD",$J,WP,1)=^OR(100,+ORIFN,1)
"RTN","ORCACT4",54,0)
 . S X=$O(^TMP("ORWORD",$J,WP,1,0)) I X,$E(^(X,0),1,3)=">> " S ^TMP("ORWORD",$J,WP,1,X,0)=$E(^OR(100,+ORIFN,1,X,0),4,999)
"RTN","ORCACT4",55,0)
 . S STOP=$P(OR0,U,9) I STOP,STOP>$$NOW^XLFDT S ORDIALOG($$PTR^ORCD("OR GTX START DATE/TIME"),1)=STOP
"RTN","ORCACT4",56,0)
 X:$D(^ORD(101.41,+ORDIALOG,3)) ^(3) G:$G(ORQUIT) RNQ ; entry action
"RTN","ORCACT4",57,0)
 D DISPLAY^ORCHECK ;pkg order checks
"RTN","ORCACT4",58,0)
RN1 D DIALOG^ORCDLG G:$G(ORQUIT) RNQ
"RTN","ORCACT4",59,0)
 D ACCEPT^ORCHECK() S X="P"
"RTN","ORCACT4",60,0)
 I $G(ORCHECK) D DISPLAY^ORCDLG S X=$$OK(ORACT) G:X="^" RNQ
"RTN","ORCACT4",61,0)
 I X="C" W !?10,"... renewal cancelled.",! G RNQ
"RTN","ORCACT4",62,0)
 I X="P" D RN^ORCSAVE W !?10,$S(ORIFN:"... order renewed.",1:"ERROR"),! S:ORIFN ^TMP("ORNEW",$J,ORIFN,1)=""
"RTN","ORCACT4",63,0)
RNQ X:$D(^ORD(101.41,+ORDIALOG,4)) ^(4) K ^TMP("ORWORD",$J)
"RTN","ORCACT4",64,0)
 Q
"RTN","ORCACT4",65,0)
 ;
"RTN","ORCACT4",66,0)
DOSES(IFN) ; -- Return #doses in order IFN
"RTN","ORCACT4",67,0)
 N I,P,CNT S (I,CNT)=0
"RTN","ORCACT4",68,0)
 F  S I=$O(^OR(100,IFN,4.5,"ID","INSTR",I)) Q:I<1  S CNT=CNT+1
"RTN","ORCACT4",69,0)
 Q CNT
"RTN","ORCACT4",70,0)
 ;
"RTN","ORCACT4",71,0)
OKALL() ; -- OK to renew all child orders of complex?
"RTN","ORCACT4",72,0)
 N X,Y,DIR,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ORCACT4",73,0)
 S DIR(0)="YA",DIR("A")=" ...OK? ",DIR("B")="YES"
"RTN","ORCACT4",74,0)
 S DIR("?")="Enter YES to continue and renew the entire complex order as shown, or NO to quit."
"RTN","ORCACT4",75,0)
 D ^DIR S:$D(DTOUT)!(X["^") Y="^"
"RTN","ORCACT4",76,0)
 Q Y
"RTN","ORCACT4",77,0)
 ;
"RTN","ORCACT4",78,0)
RW ; -- Rewrite order ORIFN
"RTN","ORCACT4",79,0)
 N ORDIALOG,ORQUIT,FIRST,OREWRITE,ORCHECK,ORDA,OR0,ORDG,ORNMSP,ORDUZ,ORLOG,ORTYPE,X
"RTN","ORCACT4",80,0)
 K ^TMP("ORWORD",$J) S FIRST=1,OREWRITE=1,ORTYPE="D"
"RTN","ORCACT4",81,0)
 S OR0=$G(^OR(100,+ORIFN,0)),ORNMSP=$$NMSP^ORCD($P(OR0,U,14)),ORDG=$P(OR0,U,11),ORDIALOG=+$P(OR0,U,5)
"RTN","ORCACT4",82,0)
 I $P(OR0,U,5)["101.41" D  ;get dialog, responses
"RTN","ORCACT4",83,0)
 . S:$P($G(^ORD(101.41,ORDIALOG,0)),U,4)'="D" ORDIALOG=+$P($G(^ORD(100.98,+$P(OR0,U,11),0)),U,4)
"RTN","ORCACT4",84,0)
 . I ORNMSP="PS",$G(OREVENT) D  ;use generic Meds dlg
"RTN","ORCACT4",85,0)
 .. N X S X=$P($G(^ORD(100.98,+ORDG,0)),U,3)
"RTN","ORCACT4",86,0)
 .. Q:X="IV RX"  Q:X="SPLY"  ;don't switch these
"RTN","ORCACT4",87,0)
 .. S ORDIALOG=+$O(^ORD(101.41,"AB","PS MEDS",0))
"RTN","ORCACT4",88,0)
 . D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN)
"RTN","ORCACT4",89,0)
 . S X=$$PTR^ORCD("OR GTX URGENCY") K:$G(ORDIALOG(X,1))=99 ORDIALOG(X,1)
"RTN","ORCACT4",90,0)
 I $P(OR0,U,5)'["101.41" D  ; protocol -> use WP dialog for renewal
"RTN","ORCACT4",91,0)
 . N WP,X S ORDIALOG=$$PTR^ORCD("OR GXTEXT WORD PROCESSING ORDER")
"RTN","ORCACT4",92,0)
 . D GETDLG^ORCD(ORDIALOG)
"RTN","ORCACT4",93,0)
 . S WP=$$PTR^ORCD("OR GTX WORD PROCESSING 1"),ORDIALOG(WP,1)="^TMP(""ORWORD"","_$J_","_WP_",1)" M ^TMP("ORWORD",$J,WP,1)=^OR(100,+ORIFN,1)
"RTN","ORCACT4",94,0)
 . S X=$O(^TMP("ORWORD",$J,WP,1,0)) I X,$E(^(X,0),1,3)=">> " S ^TMP("ORWORD",$J,WP,1,X,0)=$E(^OR(100,+ORIFN,1,X,0),4,999)
"RTN","ORCACT4",95,0)
 X:$D(^ORD(101.41,+ORDIALOG,3)) ^(3) G:$G(ORQUIT) RWQ
"RTN","ORCACT4",96,0)
 D DISPLAY^ORCHECK ;pkg order checks
"RTN","ORCACT4",97,0)
RW1 D DIALOG^ORCDLG G:$G(ORQUIT)&FIRST RWQ
"RTN","ORCACT4",98,0)
 D ACCEPT^ORCHECK() ;($S(FIRST:"ALL",1:""))
"RTN","ORCACT4",99,0)
 I $G(OREVENT),$G(^ORE(100.2,+OREVENT,1)) D  ;event occurred
"RTN","ORCACT4",100,0)
 . W !!,"This release event has occurred since you started copying delayed orders."
"RTN","ORCACT4",101,0)
 . W !,"The orders that were signed have now been released; this and any other"
"RTN","ORCACT4",102,0)
 . W !,"unsigned orders will be released immediately upon signature."
"RTN","ORCACT4",103,0)
 . N X W !!,"Press <return> to continue ..." R X:DTIME K OREVENT
"RTN","ORCACT4",104,0)
 D DISPLAY^ORCDLG S X=$$OK^ORCDLG G:X="^" RWQ
"RTN","ORCACT4",105,0)
 I X="E" S FIRST=0 K ORCHECK G RW1
"RTN","ORCACT4",106,0)
 I X="C" W !?10,"... order cancelled.",! G RWQ
"RTN","ORCACT4",107,0)
 I X="P" D
"RTN","ORCACT4",108,0)
 . N OLDIFN,ORSRC S OLDIFN=+ORIFN,ORSRC="C" K ORIFN D EN^ORCSAVE
"RTN","ORCACT4",109,0)
 . W !?10,$S($G(ORIFN):"... order rewritten.",1:"ERROR"),!
"RTN","ORCACT4",110,0)
 . I $G(ORIFN) S ^TMP("ORNEW",$J,ORIFN,1)="" S:$D(^OR(100,OLDIFN,5)) ^OR(100,ORIFN,5)=^OR(100,OLDIFN,5)
"RTN","ORCACT4",111,0)
RWQ X:$D(^ORD(101.41,+ORDIALOG,4)) ^(4) K ^TMP("ORWORD",$J)
"RTN","ORCACT4",112,0)
 Q
"RTN","ORCACT4",113,0)
 ;
"RTN","ORCACT4",114,0)
HD ; -- Hold order ORIFN
"RTN","ORCACT4",115,0)
 N X S X=$$ACTION^ORCSAVE(ORACT,+ORIFN,ORNP) Q:'X
"RTN","ORCACT4",116,0)
 S ^TMP("ORNEW",$J,+ORIFN,X)=""
"RTN","ORCACT4",117,0)
 W !?10,"... hold order placed."
"RTN","ORCACT4",118,0)
 Q
"RTN","ORCACT4",119,0)
 ;
"RTN","ORCACT4",120,0)
RL ; -- Release hold on order ORIFN
"RTN","ORCACT4",121,0)
 N X S X=$$ACTION^ORCSAVE(ORACT,+ORIFN,ORNP) Q:'X
"RTN","ORCACT4",122,0)
 S ^TMP("ORNEW",$J,+ORIFN,X)=""
"RTN","ORCACT4",123,0)
 W !?10,"... release hold order placed."
"RTN","ORCACT4",124,0)
 Q
"RTN","ORCACT4",125,0)
 ;
"RTN","ORCACT4",126,0)
OK(ACT) ; -- Ready to save?
"RTN","ORCACT4",127,0)
 N X,Y,DIR
"RTN","ORCACT4",128,0)
 S DIR(0)="SA^P:PLACE;C:CANCEL;"_$S(ACT'="RN":"E:EDIT;",1:"")
"RTN","ORCACT4",129,0)
 S:ACT="XX" DIR("A")="(P)lace, (E)dit, or (C)ancel changes? ",DIR("?")="Enter P to save the changes to this order, or E to change any of the displayed values; enter C to quit without changing this order"
"RTN","ORCACT4",130,0)
 S:ACT="RN" DIR("A")="(P)lace or (C)ancel renewal? ",DIR("?")="Enter P to save this renewal or C to quit without renewing this order"
"RTN","ORCACT4",131,0)
 S DIR("B")="PLACE" D ^DIR S:$D(DTOUT) Y="^"
"RTN","ORCACT4",132,0)
 Q Y
"RTN","ORCDPS3")
0^39^B35426713
"RTN","ORCDPS3",1,0)
ORCDPS3 ;SLC/MKB-Pharmacy dialog utilities ;11/25/02  09:47
"RTN","ORCDPS3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**94,116,134,158,149,190**;Dec 17, 1997
"RTN","ORCDPS3",3,0)
 ;
"RTN","ORCDPS3",4,0)
START ; -- Start Date entry action
"RTN","ORCDPS3",5,0)
 S $P(ORDIALOG(PROMPT,0),":",3)=$S($G(ORCAT)="I":"ETRX",1:"EX")
"RTN","ORCDPS3",6,0)
 I $G(ORCAT)'="I" K ORSD K:$G(ORENEW)!$G(OREWRITE)!$D(OREDIT) ORDIALOG(PROMPT,INST) ;Inpt only
"RTN","ORCDPS3",7,0)
 Q
"RTN","ORCDPS3",8,0)
 ;
"RTN","ORCDPS3",9,0)
ADMIN ; -- Return default admin time for order in ORSD
"RTN","ORCDPS3",10,0)
 ;    Called from EXDOSE^ORCDPS2
"RTN","ORCDPS3",11,0)
 Q:$D(ORSD)  Q:$G(ORCAT)'="I"  ;inpt only
"RTN","ORCDPS3",12,0)
 N PSOI,PSIFN,SCH,CNJ,ORI,ORX
"RTN","ORCDPS3",13,0)
 S PSOI=+$P($G(^ORD(101.43,+$G(OROI),0)),U,2)
"RTN","ORCDPS3",14,0)
 S PSIFN=$S($G(ORENEW):$G(^OR(100,+$G(ORIFN),4)),1:"")
"RTN","ORCDPS3",15,0)
 S SCH=$$PTR^ORCD("OR GTX SCHEDULE"),CNJ=$$PTR^ORCD("OR GTX AND/THEN"),ORX=""
"RTN","ORCDPS3",16,0)
 S ORI=0 F  S ORI=$O(ORDIALOG(PROMPT,ORI)) Q:ORI<1  S ORX=ORX_$S($L(ORX):U,1:"")_$G(ORDIALOG(CNJ,ORI))_";"_$G(ORDIALOG(SCH,ORI))
"RTN","ORCDPS3",17,0)
 S ORSD=$$FIRST(+ORVP,+$G(ORWARD),PSOI,ORX,PSIFN)
"RTN","ORCDPS3",18,0)
 S:$P(ORSD,U)="NEXT" ORSD="NEXTA^"_$P(ORSD,U,2,99)
"RTN","ORCDPS3",19,0)
 Q
"RTN","ORCDPS3",20,0)
 ;
"RTN","ORCDPS3",21,0)
FIRST(DFN,WARD,OI,DATA,ORDER)   ; -- Return expected first admin time of order
"RTN","ORCDPS3",22,0)
 N ORCNT,ORI,J,ORZ,Y,SCH,ORX I '$G(DFN)!'$G(OI) Q ""
"RTN","ORCDPS3",23,0)
 S ORCNT=0 F ORI=1:1:$L(DATA,"^") S ORZ=$P(DATA,U,ORI) D  Q:$E(ORZ)="T"
"RTN","ORCDPS3",24,0)
 . S SCH=$P(ORZ,";",2) Q:'$L(SCH)  S ORCNT=ORCNT+1
"RTN","ORCDPS3",25,0)
 . S ORX(ORCNT)=$$STARTSTP^PSJORPOE(DFN,SCH,OI,WARD,$G(ORDER))
"RTN","ORCDPS3",26,0)
 S Y=9999999,J=0
"RTN","ORCDPS3",27,0)
 F ORI=1:1:ORCNT S ORZ=$P(ORX(ORI),U,4) I ORZ<Y S Y=ORZ,J=ORI ;earliest
"RTN","ORCDPS3",28,0)
 S Y=$S(J:ORX(J),1:"")
"RTN","ORCDPS3",29,0)
 Q Y
"RTN","ORCDPS3",30,0)
 ;
"RTN","ORCDPS3",31,0)
NOW ; -- First dose now?
"RTN","ORCDPS3",32,0)
 N X,Y,DIR,SCH
"RTN","ORCDPS3",33,0)
 I $G(ORCAT)="O"!'$D(ORSD)!$L($G(OREVENT))!$G(ORENEW) K ORDIALOG(PROMPT,INST) Q
"RTN","ORCDPS3",34,0)
 ; ask on Copy? Change?
"RTN","ORCDPS3",35,0)
 S X=$$PTR^ORCD("OR GTX SCHEDULE"),Y=+$O(ORDIALOG(X,0))
"RTN","ORCDPS3",36,0)
 S SCH=$G(ORDIALOG(X,Y)),Y=+$O(^PS(51.1,"APPSJ",SCH,0)) ;1st one
"RTN","ORCDPS3",37,0)
 I $P($G(^PS(51.1,Y,0)),U,5)="O"!(Y<1) K ORDIALOG(PROMPT,INST) Q
"RTN","ORCDPS3",38,0)
 ; other conditions?
"RTN","ORCDPS3",39,0)
 S DIR(0)="YA",DIR("A")="Give additional dose NOW? "
"RTN","ORCDPS3",40,0)
 S DIR("B")=$S($G(ORDIALOG(PROMPT,INST)):"YES",1:"NO")
"RTN","ORCDPS3",41,0)
 I ORINPT,$P(ORSD,U,4) S DIR("A",1)="Next scheduled administration time: "_$$FMTE^XLFDT($P(ORSD,U,4))
"RTN","ORCDPS3",42,0)
 S DIR("?")="Enter YES if you want a dose given now in addition to the regular administration times for this schedule and ward."
"RTN","ORCDPS3",43,0)
 D ^DIR S:$D(DTOUT)!$D(DUOUT) ORQUIT=1
"RTN","ORCDPS3",44,0)
 I $G(ORQUIT)!(Y'>0) K ORDIALOG(PROMPT,INST) Q
"RTN","ORCDPS3",45,0)
 S ORDIALOG(PROMPT,INST)=1 I $G(ORCOMPLX) D
"RTN","ORCDPS3",46,0)
 . W $C(7),!,"  >> First Dose NOW is in addition to those already entered.    <<"
"RTN","ORCDPS3",47,0)
 . W !,"  >> Please adjust the duration of the first one, if necessary. <<"
"RTN","ORCDPS3",48,0)
 Q
"RTN","ORCDPS3",49,0)
 ;
"RTN","ORCDPS3",50,0)
DEFSTRT ; -- Returns default start date/time in Y
"RTN","ORCDPS3",51,0)
 ;    Expects PROMPT,INST,ORDIALOG,ORSD to be defined
"RTN","ORCDPS3",52,0)
 ;
"RTN","ORCDPS3",53,0)
 Q:$G(ORCAT)="O"  Q:$G(ORTYPE)="Z"  ;skip if outpt or editor
"RTN","ORCDPS3",54,0)
 N LAST,STRT,DUR,D1,D2,OFF,F1,F2,UNT,Y1,Y2,I,J K Y
"RTN","ORCDPS3",55,0)
 S LAST=+$O(ORDIALOG(+$$PTR^ORCD("OR GTX INSTRUCTIONS"),INST),-1)
"RTN","ORCDPS3",56,0)
 S STRT=$G(ORDIALOG(PROMPT,LAST))
"RTN","ORCDPS3",57,0)
 I LAST'>0!'$L(STRT) S:$L($P($G(ORSD),U)) Y=$P(ORSD,U) Q  ;first inst
"RTN","ORCDPS3",58,0)
 S DUR=$G(ORDIALOG(+$$PTR^ORCD("OR GTX DURATION"),LAST))
"RTN","ORCDPS3",59,0)
 I +DUR'>0 S Y=STRT Q  ;no duration = same start
"RTN","ORCDPS3",60,0)
 S DUR=$$FMDUR(DUR) I STRT D  Q  ;FM date/time, so just add
"RTN","ORCDPS3",61,0)
 . N X,%DT S %DT="TX",X=STRT_"+"_DUR D ^%DT
"RTN","ORCDPS3",62,0)
 . I Y'>0 S Y=STRT ;error
"RTN","ORCDPS3",63,0)
 S D1=+DUR,D2=$P(DUR,D1,2) S:(STRT="NEXTA")!(STRT="CLOSEST") STRT="NOW"
"RTN","ORCDPS3",64,0)
 S OFF=$P(STRT,"+",2) I '$L(OFF) S Y=STRT_"+"_DUR Q  ;no prev offset
"RTN","ORCDPS3",65,0)
 S F1=+OFF,F2=$P(OFF,F1,2),UNT=F2,Y=STRT
"RTN","ORCDPS3",66,0)
 I D2=F2 S Y=$P(STRT,"+")_"+"_(D1+F1)_UNT Q  ;same units
"RTN","ORCDPS3",67,0)
 F I="S","'","H","D","W","M" I (F2=I)!(D2=I) S UNT=I D  Q
"RTN","ORCDPS3",68,0)
 . S:D2=UNT Y1=D1,X1=F1,X2=F2 ; Y1=# in UNT
"RTN","ORCDPS3",69,0)
 . S:F2=UNT Y1=F1,X1=D1,X2=D2 ; X1=# in other units X2
"RTN","ORCDPS3",70,0)
 . F J=1:1 S Z=$T(CONV+J) Q:Z["ZZZZ"  I $P(Z,";",3,4)=(X2_";"_UNT) S Y2=+$P(Z,";",5) Q
"RTN","ORCDPS3",71,0)
 . S Y=$P(STRT,"+")_"+"_(Y1+$S(Y2:Y2*X1,1:0))_UNT
"RTN","ORCDPS3",72,0)
 Q
"RTN","ORCDPS3",73,0)
 ;
"RTN","ORCDPS3",74,0)
FMDUR(X)        ; -- convert '# DAYS' to #D
"RTN","ORCDPS3",75,0)
 N X1,X2,Y I +X'>0 Q ""
"RTN","ORCDPS3",76,0)
 S X1=+X,X2=$P(X," ",2) S:'$L(X2) X2="DAYS"
"RTN","ORCDPS3",77,0)
 S Y=X1_$S("MINUTES"[X2:"'",1:$E(X2))
"RTN","ORCDPS3",78,0)
 Q Y
"RTN","ORCDPS3",79,0)
 ;
"RTN","ORCDPS3",80,0)
CONV ;;unit;unit;factor
"RTN","ORCDPS3",81,0)
 ;;';S;60
"RTN","ORCDPS3",82,0)
 ;;H;';60
"RTN","ORCDPS3",83,0)
 ;;H;S;3600
"RTN","ORCDPS3",84,0)
 ;;D;H;24
"RTN","ORCDPS3",85,0)
 ;;D;';1440
"RTN","ORCDPS3",86,0)
 ;;D;S;86400
"RTN","ORCDPS3",87,0)
 ;;W;D;7
"RTN","ORCDPS3",88,0)
 ;;W;H;168
"RTN","ORCDPS3",89,0)
 ;;W;';10080
"RTN","ORCDPS3",90,0)
 ;;W;S;604800
"RTN","ORCDPS3",91,0)
 ;;M;W;4
"RTN","ORCDPS3",92,0)
 ;;M;D;30
"RTN","ORCDPS3",93,0)
 ;;M;H;720
"RTN","ORCDPS3",94,0)
 ;;M;';43200
"RTN","ORCDPS3",95,0)
 ;;M;S;2592000
"RTN","ORCDPS3",96,0)
 ;;ZZZZ
"RTN","ORCDPS3",97,0)
 ;
"RTN","ORCDPS3",98,0)
ASKDUR()        ; -- Returns 1 or 0, if Duration prompt should be asked
"RTN","ORCDPS3",99,0)
 N X,Y I '$G(ORCOMPLX) K ORDIALOG(PROMPT,INST) Q 0
"RTN","ORCDPS3",100,0)
 S Y=1 G:'$L($G(ORSCH)) ADQ ;no schedule
"RTN","ORCDPS3",101,0)
 S X=+$O(^PS(51.1,"APPSJ",ORSCH,0)) G:X'>0 ADQ
"RTN","ORCDPS3",102,0)
 S:$P($G(^PS(51.1,X,0)),U,5)="O" Y=0
"RTN","ORCDPS3",103,0)
ADQ Q Y
"RTN","ORCDPS3",104,0)
 ;
"RTN","ORCDPS3",105,0)
CKDUR(X) ; -- Returns validated form of duration X, or null if invalid
"RTN","ORCDPS3",106,0)
 N X1,X2,Y,Z S Y=""
"RTN","ORCDPS3",107,0)
 S X1=+$G(X),X2=$P($G(X),X1,2) I X1'>0 Q ""
"RTN","ORCDPS3",108,0)
 S X2=$$UP^XLFSTR(X2),X2=$$STRIP^XLFSTR(X2," ") S:'$L(X2) X2="DAYS"
"RTN","ORCDPS3",109,0)
 F Z="MONTHS^&MONTHS&MONS","WEEKS^&WEEKS&WKS","DAYS^&DAYS&DYS","HOURS^&HOURS&HRS","MINUTES^&MINUTES&MINS'","SECONDS^&SECONDS&SECS" I $P(Z,U,2)[("&"_X2) S Y=$P(Z,U) Q
"RTN","ORCDPS3",110,0)
 S:$L(Y) Y=X1_" "_$S(X1=1:$E(Y,1,$L(Y)-1),1:Y) ;strip trailing 's'
"RTN","ORCDPS3",111,0)
 Q Y
"RTN","ORCDPS3",112,0)
 ;
"RTN","ORCDPS3",113,0)
DUR ; -- Process duration [from P-S Action]
"RTN","ORCDPS3",114,0)
 N X S X=$G(ORDIALOG(PROMPT,ORI)),X=$$CKDUR(X)
"RTN","ORCDPS3",115,0)
 I '$L(X) K DONE W $C(7),!,ORDIALOG(PROMPT,"?"),! Q
"RTN","ORCDPS3",116,0)
 S ORDIALOG(PROMPT,ORI)=X D:$G(ORESET)'=X CHANGED^ORCDPS1("QUANTITY")
"RTN","ORCDPS3",117,0)
 Q
"RTN","ORCDPS3",118,0)
 ;
"RTN","ORCDPS3",119,0)
TEST(START,DURTN)       ; -- test DEFSTRT
"RTN","ORCDPS3",120,0)
 N INST,ORSD,ORDIALOG,PROMPT
"RTN","ORCDPS3",121,0)
 S ORDIALOG(136,1)="",INST=2,ORSD="NOW",PROMPT=6
"RTN","ORCDPS3",122,0)
 S:$L($G(START)) ORDIALOG(6,1)=START S:$G(DURTN) ORDIALOG(153,1)=DURTN
"RTN","ORCDPS3",123,0)
 D DEFSTRT W !,Y
"RTN","ORCDPS3",124,0)
 Q
"RTN","ORCDPS3",125,0)
 ;
"RTN","ORCDPS3",126,0)
SC ; -- Dialog validation, to ask SC questions
"RTN","ORCDPS3",127,0)
 ;    Expects ORIFN, ORDA, and ORDER
"RTN","ORCDPS3",128,0)
 ;
"RTN","ORCDPS3",129,0)
 Q:'$L($T(SCNEW^PSOCP))  Q:'$G(ORIFN)  Q:'$G(ORDA)
"RTN","ORCDPS3",130,0)
 Q:$P($G(^OR(100,ORIFN,0)),U,12)'="O"  Q:$P($G(^(8,ORDA,0)),U,2)'="NW"  Q:$P($G(^(0)),U,15)=""
"RTN","ORCDPS3",131,0)
 ;
"RTN","ORCDPS3",132,0)
 N OR3,ORDRUG,PSIFN,ORX,I,J,DIE,DR,DA,X,Y,DTOUT,ORIGVIEW,DFN
"RTN","ORCDPS3",133,0)
 S OR3=$G(^OR(100,ORIFN,3)),X=$P(OR3,U,11) I X>2 Q  ;new, edit, or renew
"RTN","ORCDPS3",134,0)
 I X S Y=$P(OR3,U,5),PSIFN=$G(^OR(100,Y,4)) ;get PS# if edit/renewal
"RTN","ORCDPS3",135,0)
 S ORDRUG=$$VALUE^ORCSAVE2(ORIFN,"DRUG")
"RTN","ORCDPS3",136,0)
 D SCNEW^PSOCP(.ORX,+ORVP,ORDRUG,$G(PSIFN)) Q:'$D(ORX)
"RTN","ORCDPS3",137,0)
 S DIE="^OR(100,",DA=ORIFN,DR="",J=0
"RTN","ORCDPS3",138,0)
 F I="SC","MST","AO","IR","EC","HNC","CV" S J=J+1 S:$D(ORX(I)) X=ORX(I),DR=DR_";5"_J_"R"_$S($L(X):"//"_$S(X:"YES",1:"NO"),1:"")
"RTN","ORCDPS3",139,0)
 S:$E(DR)=";" DR=$E(DR,2,999) Q:'$L(DR)  S ORIGVIEW=1
"RTN","ORCDPS3",140,0)
 I $D(ORX("SC")) S DFN=+ORVP D DIS^DGRPDB ;show current SC data
"RTN","ORCDPS3",141,0)
 W !!,"Is "_$$ORDITEM^ORCACT(ORDER)_" for treatment related to:"
"RTN","ORCDPS3",142,0)
 D ^DIE S:$D(DTOUT)!$D(Y) ORQUIT=1
"RTN","ORCDPS3",143,0)
 Q
"RTN","ORCDPSH")
0^3^B15721733
"RTN","ORCDPSH",1,0)
ORCDPSH ;SLC/CLA-Pharmacy dialog utilities-Non-VA Meds ; 09 April 2003 11:00 AM
"RTN","ORCDPSH",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**190**;Dec 17, 1997
"RTN","ORCDPSH",3,0)
EN(TYPE) ; -- entry action for Meds dialogs
"RTN","ORCDPSH",4,0)
 S ORDG=+$O(^ORD(100.98,"B","NV RX",0)),ORCAT="O"
"RTN","ORCDPSH",5,0)
 K ^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORCDPSH",6,0)
 I $G(ORENEW)!$G(OREWRITE)!$D(OREDIT)!$G(ORXFER) D
"RTN","ORCDPSH",7,0)
 . K ORDIALOG($$PTR("START DATE/TIME"),1)
"RTN","ORCDPSH",8,0)
 . K ORDIALOG($$PTR("NOW"),1)
"RTN","ORCDPSH",9,0)
 . I $D(OREDIT),'$O(ORDIALOG($$PTR^ORCD("OR GTX INSTRUCTIONS"),0)) K ^TMP("ORWORD",$J)
"RTN","ORCDPSH",10,0)
 Q
"RTN","ORCDPSH",11,0)
 ;
"RTN","ORCDPSH",12,0)
ENOI ; -- setup OI prompt
"RTN","ORCDPSH",13,0)
 S ORDIALOG(PROMPT,"D")="S.NV RX"
"RTN","ORCDPSH",14,0)
 Q
"RTN","ORCDPSH",15,0)
 ;
"RTN","ORCDPSH",16,0)
CHANGED(X) ; -- Kill dependent values when prompt X changes
"RTN","ORCDPSH",17,0)
 N PROMPTS,NAME,PTR,P,I
"RTN","ORCDPSH",18,0)
 S PROMPTS=X I X="OI" D
"RTN","ORCDPSH",19,0)
 . S PROMPTS="INSTRUCTIONS^ROUTE^SCHEDULE^START DATE/TIME^DOSE^DISPENSE DRUG^SIG^PATIENT INSTRUCTIONS"
"RTN","ORCDPSH",20,0)
 . K ORDRUG,ORDOSE,OROUTE,ORSCH,ORSD,ORDSUP,ORQTY,ORQTYUNT,OREFILLS,ORCOPAY
"RTN","ORCDPSH",21,0)
 . K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORCDPSH",22,0)
 F P=1:1:$L(PROMPTS,U) S NAME=$P(PROMPTS,U,P) D
"RTN","ORCDPSH",23,0)
 . S PTR=$$PTR(NAME) Q:'PTR
"RTN","ORCDPSH",24,0)
 . S I=0 F  S I=$O(ORDIALOG(PTR,I)) Q:I'>0  K ORDIALOG(PTR,I)
"RTN","ORCDPSH",25,0)
 . K ORDIALOG(PTR,"LIST"),^TMP("ORWORD",$J,PTR)
"RTN","ORCDPSH",26,0)
 Q
"RTN","ORCDPSH",27,0)
 ;
"RTN","ORCDPSH",28,0)
ORDITM(OI) ; -- Check OI inactive date & type, get dependent info
"RTN","ORCDPSH",29,0)
 Q:OI'>0  ;quit - no value
"RTN","ORCDPSH",30,0)
 N ORPS,PSOI S ORPS=$G(^ORD(101.43,+OI,"PS")),PSOI=+$P($G(^(0)),U,2)
"RTN","ORCDPSH",31,0)
 S ORIV=$S($P(ORPS,U)=2:1,1:0)
"RTN","ORCDPSH",32,0)
 I '$P(ORPS,U,7) W $C(7),!,"This drug may not be used in a non-VA med order." S ORQUIT=1 D WAIT Q
"RTN","ORCDPSH",33,0)
OI1 ; ck NF status (don't care if Non-VA Meds are formulary or not)
"RTN","ORCDPSH",34,0)
OI2 ; -get selectable routes, doses [also called from NF^ORCDPS]
"RTN","ORCDPSH",35,0)
 D:'$D(^TMP("PSJMR",$J)) START^PSSJORDF(PSOI,$G(ORCAT))
"RTN","ORCDPSH",36,0)
 I '$D(ORDOSE) D 
"RTN","ORCDPSH",37,0)
 . D DOSE^PSSORUTL(.ORDOSE,PSOI,"X",+ORVP)
"RTN","ORCDPSH",38,0)
 . K:$G(ORDOSE(1))=-1 ORDOSE
"RTN","ORCDPSH",39,0)
 Q
"RTN","ORCDPSH",40,0)
 ;
"RTN","ORCDPSH",41,0)
NFI(OI) ; -- Show NFI restrictions, if exist
"RTN","ORCDPSH",42,0)
 N PSOI,I,J,LCNT,MAX,X,STOP
"RTN","ORCDPSH",43,0)
 S PSOI=+$P($G(^ORD(101.43,+$G(OI),0)),U,2)
"RTN","ORCDPSH",44,0)
 D EN^PSSDIN(PSOI,"") Q:'$D(^TMP("PSSDIN",$J,"OI",PSOI))
"RTN","ORCDPSH",45,0)
 S I=0,LCNT=0,MAX=$S($G(IOBM)&$G(IOTM):IOBM-IOTM+1,1:24) W !
"RTN","ORCDPSH",46,0)
 F  S I=$O(^TMP("PSSDIN",$J,"OI",PSOI,I)) Q:I'>0  D
"RTN","ORCDPSH",47,0)
 . S J=0 F  S J=$O(^TMP("PSSDIN",$J,"OI",PSOI,I,J)) Q:J'>0  S X=$G(^(J)) D  Q:$G(STOP)
"RTN","ORCDPSH",48,0)
 .. S LCNT=LCNT+1 I LCNT'<MAX S:'$$CONT STOP=1 Q:$G(STOP)  S LCNT=1
"RTN","ORCDPSH",49,0)
 .. W !,X
"RTN","ORCDPSH",50,0)
 W ! K ^TMP("PSSDIN",$J,"OI",PSOI)
"RTN","ORCDPSH",51,0)
 Q
"RTN","ORCDPSH",52,0)
 ;
"RTN","ORCDPSH",53,0)
CONT() ; -- Press return to cont or ^ to stop
"RTN","ORCDPSH",54,0)
 N X,Y,DIR,DUOUT,DTOUT,DIRUT,DIROUT S DIR(0)="EA"
"RTN","ORCDPSH",55,0)
 S DIR("A")="Press <return> to continue or ^ to stop ..."
"RTN","ORCDPSH",56,0)
 D ^DIR S:$D(DUOUT)!$D(DTOUT) Y=""
"RTN","ORCDPSH",57,0)
 Q +Y
"RTN","ORCDPSH",58,0)
 ;
"RTN","ORCDPSH",59,0)
WAIT ; -- Wait for user
"RTN","ORCDPSH",60,0)
 N X W !,"Press <return> to continue ..." R X:DTIME
"RTN","ORCDPSH",61,0)
 Q
"RTN","ORCDPSH",62,0)
 ;
"RTN","ORCDPSH",63,0)
ROUTES ; -- Get allowable med routes
"RTN","ORCDPSH",64,0)
 Q:$G(ORDIALOG(PROMPT,"LIST"))  N I,X,CNT S (I,CNT)=0
"RTN","ORCDPSH",65,0)
 F  S I=$O(^TMP("PSJMR",$J,I)) Q:I'>0  S X=^(I),CNT=CNT+1,ORDIALOG(PROMPT,"LIST",CNT)=$P(X,U,3)_U_$P(X,U,1,2),ORDIALOG(PROMPT,"LIST","B",$P(X,U))=$P(X,U,3)
"RTN","ORCDPSH",66,0)
 S:$G(CNT) ORDIALOG(PROMPT,"LIST")=CNT
"RTN","ORCDPSH",67,0)
 S REQD=0
"RTN","ORCDPSH",68,0)
 Q
"RTN","ORCDPSH",69,0)
 ;
"RTN","ORCDPSH",70,0)
DEFRTE ; -- Get default route
"RTN","ORCDPSH",71,0)
 N INST1 S INST1=$O(ORDIALOG(PROMPT,0)) S:INST1'>0 INST1=INST ;1st inst
"RTN","ORCDPSH",72,0)
 I INST1=INST S Y=+$P($G(^TMP("PSJMR",$J,1)),U,3) K:Y'>0 Y Q
"RTN","ORCDPSH",73,0)
 S Y=+$G(ORDIALOG(PROMPT,INST1)) K:Y'>0 Y S:$G(Y) EDITONLY=1
"RTN","ORCDPSH",74,0)
 Q
"RTN","ORCDPSH",75,0)
 ;
"RTN","ORCDPSH",76,0)
CKSCH ; -- validate schedule [Called from P-S Action]
"RTN","ORCDPSH",77,0)
 N ORX S ORX=ORDIALOG(PROMPT,ORI) Q:ORX=$G(ORESET)  K ORSD ;reset
"RTN","ORCDPSH",78,0)
 D EN^PSSGS0(.ORX,"X")
"RTN","ORCDPSH",79,0)
 I $D(ORX) S ORDIALOG(PROMPT,ORI)=ORX D CHANGED("QUANTITY") Q  ;ok
"RTN","ORCDPSH",80,0)
 W $C(7),!,"Enter either a standard administration schedule or one of your own,",!,"up to 70 characters and no more than 2 spaces.",!
"RTN","ORCDPSH",81,0)
 K DONE
"RTN","ORCDPSH",82,0)
 Q
"RTN","ORCDPSH",83,0)
 ;
"RTN","ORCDPSH",84,0)
PTR(X) ; -- Return ptr to prompt OR GTX X
"RTN","ORCDPSH",85,0)
 Q +$O(^ORD(101.41,"AB","OR GTX "_X,0))
"RTN","ORCDPSH",86,0)
 ;
"RTN","ORCDPSH",87,0)
EXIT ; -- exit action for Meds dialogs
"RTN","ORCDPSH",88,0)
 S:$G(ORXNP) ORNP=ORXNP
"RTN","ORCDPSH",89,0)
 K ORXNP,ORINPT,ORCAT,ORPKG,OROI,ORIV,ORDRUG,ORDOSE,OROUTE,ORSCH,ORSD,ORDSUP,OREFILLS,ORQTY,ORQTYUNT,ORCOPAY,PSJNOPC,ORCOMPLX
"RTN","ORCDPSH",90,0)
 K ^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORCDPSH",91,0)
 Q
"RTN","ORCMED")
0^15^B40461468
"RTN","ORCMED",1,0)
ORCMED ;SLC/MKB-Medication actions ;4/2/02  16:45
"RTN","ORCMED",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,7,38,48,94,141,178,190**;Dec 17, 1997
"RTN","ORCMED",3,0)
XFER ; -- transfer to in/outpt meds
"RTN","ORCMED",4,0)
 N ORPTLK,ORTYPE,ORXFER,ORSRC,ORCAT,OREVENT,X,ORINPT,ORIDLG,ORODLG,ORIVDLG,ORNMSP,ORCNT,ORI,NMBR,ORIFN,OLDIFN,ORDIALOG,ORDG,ORCHECK,ORQUIT,ORDUZ,ORLOG,FIRST,ORDITM,ORD,ORERR
"RTN","ORCMED",5,0)
 S ORPTLK=$$LOCK^ORX2(+ORVP) I 'ORPTLK D  G XFQ ; lock pt chart
"RTN","ORCMED",6,0)
 . W !!,$C(7),$P(ORPTLK,U,2) H 2
"RTN","ORCMED",7,0)
 . S:'$D(VALMBCK) VALMBCK=""
"RTN","ORCMED",8,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("transfer") G:'ORNMBR XFQ
"RTN","ORCMED",9,0)
 D FULL^VALM1 S VALMBCK="R",ORTYPE="Q",ORXFER=1,ORDUZ=DUZ,ORSRC="X"
"RTN","ORCMED",10,0)
 S X=$P($P($G(^TMP("OR",$J,"CURRENT",0)),U,3),";",3) S:X="" X=$G(ORWARD)
"RTN","ORCMED",11,0)
 S ORCAT=$S(X:"O",1:"I") I ORCAT="I"!$G(ORWARD) D  Q:$G(OREVENT)="^"
"RTN","ORCMED",12,0)
 . W !!,$$CURRENT^OREVNT
"RTN","ORCMED",13,0)
 . S X=$$DELAY^ORCACT I X="^" S OREVENT="^" Q
"RTN","ORCMED",14,0)
 . S:X OREVENT=+$$PTEVENT^OREVNT(+ORVP,1)
"RTN","ORCMED",15,0)
 I '$G(ORL) S ORL=$S($G(OREVENT):$$LOC^OREVNTX(OREVENT),1:$$LOCATION^ORCMENU1) G:ORL="^" XFQ
"RTN","ORCMED",16,0)
 S ORINPT=$$INPT^ORCD,ORNP=$$PROVIDER^ORCMENU1 G:ORNP="^" XFQ
"RTN","ORCMED",17,0)
 S ORIDLG=+$O(^ORD(101.41,"AB","PSJ OR PAT OE",0))
"RTN","ORCMED",18,0)
 S ORODLG=+$O(^ORD(101.41,"AB","PSO OERR",0))
"RTN","ORCMED",19,0)
 S ORIVDLG=+$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORCMED",20,0)
 D PROVIDER^ORCDPSIV G:$G(ORQUIT) XFQ ;X:$D(^ORD(101.41,ORDIALOG,3)) ^(3)
"RTN","ORCMED",21,0)
 S ORNMSP="PS" D DISPLAY^ORCHECK
"RTN","ORCMED",22,0)
 S ORCNT=$L(ORNMBR,",") S:$P(ORNMBR,",",ORCNT)'>0 ORCNT=ORCNT-1
"RTN","ORCMED",23,0)
XF1 F ORI=1:1:ORCNT S NMBR=$P(ORNMBR,",",ORI) D:NMBR  I $D(ORQUIT),ORI<ORCNT Q:'$$CONT  ;if not last one, ask
"RTN","ORCMED",24,0)
 . K ORIFN,ORDIALOG,ORDG,ORDOSE,ORCHECK,ORQUIT,ORERR
"RTN","ORCMED",25,0)
 . K ^TMP("PSJMR",$J),^TMP("ORWORD",$J),^TMP("ORSIG",$J)
"RTN","ORCMED",26,0)
 . S OLDIFN=+$P($G(^TMP("OR",$J,ORTAB,"IDX",NMBR)),U,4)
"RTN","ORCMED",27,0)
 . S ORDITM=$$ORDITEM^ORCACT(OLDIFN) D SUBHDR^ORCACT(ORDITM)
"RTN","ORCMED",28,0)
 . I '$$VALID^ORCACT0(OLDIFN,"XFR",.ORERR) W !,ORERR H 2 Q
"RTN","ORCMED",29,0)
 . S ORD=$P($G(^OR(100,OLDIFN,0)),U,5) Q:ORD'["101.41"  ;error msg?
"RTN","ORCMED",30,0)
 . S ORDIALOG=$S(+ORD=ORIVDLG:ORIVDLG,ORCAT="I":ORIDLG,1:ORODLG)
"RTN","ORCMED",31,0)
 . S ORDG=+$P($G(^ORD(101.41,ORDIALOG,0)),U,5)
"RTN","ORCMED",32,0)
 . D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(OLDIFN)
"RTN","ORCMED",33,0)
 . I ORDIALOG'=ORIVDLG D OUT:ORCAT="I",IN:ORCAT="O" ;convert data
"RTN","ORCMED",34,0)
 . K ORDIALOG($$PTR^ORCD("OR GTX START DATE/TIME"),1)
"RTN","ORCMED",35,0)
 . K ORDIALOG($$PTR^ORCD("OR GTX NOW"),1)
"RTN","ORCMED",36,0)
 . S ORLOG=+$E($$NOW^XLFDT,1,12),FIRST=1
"RTN","ORCMED",37,0)
XF2 . D DIALOG^ORCDLG Q:$G(ORQUIT)&FIRST  K ORQUIT
"RTN","ORCMED",38,0)
 . D ACCEPT^ORCHECK(),DISPLAY^ORCDLG S X=$$OK^ORCDLG I X="^" S ORQUIT=1 Q
"RTN","ORCMED",39,0)
 . I X="E" K ORCHECK S FIRST=0 G XF2
"RTN","ORCMED",40,0)
 . I X="C" W !?10,"... order cancelled.",! Q
"RTN","ORCMED",41,0)
 . I X="P" D
"RTN","ORCMED",42,0)
 . . D EN^ORCSAVE W !?10,$S(ORIFN:"... order placed.",1:"ERROR"),!
"RTN","ORCMED",43,0)
 . . S:$G(ORIFN) ^TMP("ORNEW",$J,ORIFN,1)=""
"RTN","ORCMED",44,0)
 . . I '$D(^TMP("ORECALL",$J,ORDIALOG)) M ^(ORDIALOG)=ORDIALOG M:$D(^TMP("ORWORD",$J)) ^TMP("ORECALL",$J,ORDIALOG)=^TMP("ORWORD",$J) ;save 1st values
"RTN","ORCMED",45,0)
XFQ D EXIT^ORCDPS1 ;X:$D(^ORD(101.41,ORDIALOG,4)) ^(4)
"RTN","ORCMED",46,0)
 K ^TMP("ORWORD",$J),^TMP("ORSIG",$J)
"RTN","ORCMED",47,0)
 D:'$D(^TMP("ORNEW",$J)) UNLOCK^ORX2(+ORVP) ;unlock if no new orders
"RTN","ORCMED",48,0)
 Q
"RTN","ORCMED",49,0)
 ;
"RTN","ORCMED",50,0)
IN ; -- Kill extra values, Reset ID's/DD from Inpt dialog
"RTN","ORCMED",51,0)
 N P F P="START DATE/TIME","NOW" K ORDIALOG($$PTR(P),1)
"RTN","ORCMED",52,0)
 D DOSES("O")
"RTN","ORCMED",53,0)
 Q
"RTN","ORCMED",54,0)
 ;
"RTN","ORCMED",55,0)
OUT ; -- Kill extra values, Reset ID's/DD from Outpt dialog
"RTN","ORCMED",56,0)
 N P I '$O(ORDIALOG($$PTR("INSTRUCTIONS"),0)) D  ;old sig in comments
"RTN","ORCMED",57,0)
 . N WP S WP=$$PTR("WORD PROCESSING 1") K ^TMP("ORSIG",$J)
"RTN","ORCMED",58,0)
 . M ^TMP("ORSIG",$J)=^TMP("ORWORD",$J,WP,1)
"RTN","ORCMED",59,0)
 . K ORDIALOG(WP,1),^TMP("ORWORD",$J,WP,1)
"RTN","ORCMED",60,0)
 F P="PATIENT INSTRUCTIONS","START DATE/TIME","DAYS SUPPLY","QUANTITY","REFILLS","ROUTING","SERVICE CONNECTED" K ORDIALOG($$PTR(P),1)
"RTN","ORCMED",61,0)
 I $G(ORDIALOG($$PTR("URGENCY"),1))=99 K ORDIALOG($$PTR("URGENCY"),1)
"RTN","ORCMED",62,0)
 D DOSES("I")
"RTN","ORCMED",63,0)
 Q
"RTN","ORCMED",64,0)
 ;
"RTN","ORCMED",65,0)
DOSES(TYPE)     ; -- Convert doses to new TYPE, reset ID strings
"RTN","ORCMED",66,0)
 N PSOI,ORMED,PROMPT,DOSE,DRUG,I,X,DD,DRUG0,STR
"RTN","ORCMED",67,0)
 F I="DISPENSE DRUG","STRENGTH","DRUG NAME","SIG" K ORDIALOG($$PTR(I),1)
"RTN","ORCMED",68,0)
 S PSOI=+$P($G(^ORD(101.43,+$G(ORDIALOG($$PTR("ORDERABLE ITEM"),1)),0)),U,2),ORMED=$P($G(^(0)),U)
"RTN","ORCMED",69,0)
 D DOSE^PSSORUTL(.ORDOSE,PSOI,TYPE,+ORVP) I $G(ORDOSE(1))=-1 K ORDOSE
"RTN","ORCMED",70,0)
 S PROMPT=$$PTR("INSTRUCTIONS"),DOSE=$$PTR("DOSE")
"RTN","ORCMED",71,0)
 S DRUG=$$PTR("DISPENSE DRUG") D D1^ORCDPS2
"RTN","ORCMED",72,0)
 S I=0 F  S I=$O(ORDIALOG(PROMPT,I)) Q:I'>0  D
"RTN","ORCMED",73,0)
 . K ORDIALOG(DOSE,I) S X=$G(ORDIALOG(PROMPT,I)) Q:'$L(X)
"RTN","ORCMED",74,0)
 . S X=$$UP^XLFSTR(X),DD=+$G(ORDIALOG(PROMPT,"LIST","D",X)) Q:'DD
"RTN","ORCMED",75,0)
 . S ORDIALOG(DOSE,I)=$TR($G(ORDOSE("DD",DD,X)),"^","&")
"RTN","ORCMED",76,0)
 . S ORDIALOG(DRUG,I)=DD,DRUG0=$G(ORDOSE("DD",DD))
"RTN","ORCMED",77,0)
 . S STR=$P(DRUG0,U,5)_$P(DRUG0,U,6)
"RTN","ORCMED",78,0)
 . I STR'>0 S:'$G(ORDOSE(1)) ORDIALOG($$PTR("DRUG NAME"),1)=$P(DRUG0,U) Q
"RTN","ORCMED",79,0)
 . I ORMED'[STR,TYPE="O"!'$G(ORDOSE(1)) S ORDIALOG($$PTR("STRENGTH"),1)=STR
"RTN","ORCMED",80,0)
 Q
"RTN","ORCMED",81,0)
 ;
"RTN","ORCMED",82,0)
CONT() ; -- Want to continue processing orders?
"RTN","ORCMED",83,0)
 N X,Y,DIR
"RTN","ORCMED",84,0)
 S DIR(0)="YA",DIR("A")="Do you want to continue transferring orders? ",DIR("B")="YES"
"RTN","ORCMED",85,0)
 S DIR("?")="Enter YES to continue transferring the remaining orders selected, or NO to quit this option."
"RTN","ORCMED",86,0)
 D ^DIR
"RTN","ORCMED",87,0)
 Q +Y
"RTN","ORCMED",88,0)
 ;
"RTN","ORCMED",89,0)
SHOWSIG ; -- Show old sig for transfer in ^TMP("ORSIG",$J)
"RTN","ORCMED",90,0)
 N ORTX,I,X,ORMAX S ORMAX=72
"RTN","ORCMED",91,0)
 S I=0 F  S I=$O(^TMP("ORSIG",$J,I)) Q:I'>0  S X=$G(^(I,0)) D:$L(X) TXT^ORCHTAB
"RTN","ORCMED",92,0)
 S I=0 F  S I=$O(ORTX(I)) Q:I'>0  W !,$S(I=1:"(Sig: ",1:"      ")_ORTX(I)
"RTN","ORCMED",93,0)
 W ")"
"RTN","ORCMED",94,0)
 Q
"RTN","ORCMED",95,0)
 ;
"RTN","ORCMED",96,0)
PTR(NAME) ; -- Returns pointer to OR GTX NAME
"RTN","ORCMED",97,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORCMED",98,0)
 ;
"RTN","ORCMED",99,0)
REFILLS ; -- Request a refill for med orders
"RTN","ORCMED",100,0)
 ;    ORNMBR = #,#,...,# of selected orders
"RTN","ORCMED",101,0)
 ;
"RTN","ORCMED",102,0)
 N ORLK,ORI,NMBR,IDX,ORIFN,ORDITM,ORERR,ORQUIT,OROUT
"RTN","ORCMED",103,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("") G:'ORNMBR RFQ
"RTN","ORCMED",104,0)
 D FREEZE^ORCMENU S VALMBCK="R"
"RTN","ORCMED",105,0)
 S ORNP=$$PROVIDER^ORCMENU1 G:ORNP="^" RFQ
"RTN","ORCMED",106,0)
 S:'$G(ORL) ORL=$$LOCATION^ORCMENU1 G:ORL="^" RFQ
"RTN","ORCMED",107,0)
 S OROUT=$$ROUTING G:OROUT="^" RFQ
"RTN","ORCMED",108,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCMED",109,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR)),ORIFN=+$P(IDX,U,4)
"RTN","ORCMED",110,0)
 . Q:'ORIFN  I '$D(^OR(100,ORIFN,0)) W !,"Invalid order number!" H 2 Q
"RTN","ORCMED",111,0)
 . S ORDITM=$$ORDITEM^ORCACT(ORIFN) D SUBHDR^ORCACT(ORDITM)
"RTN","ORCMED",112,0)
 . I '$$VALID^ORCACT0(ORIFN,"RF",.ORERR) W !,ORERR H 2 Q
"RTN","ORCMED",113,0)
 . S ORLK=$$LOCK1^ORX2(+ORIFN) I 'ORLK W !,$P(ORLK,U,2) H 2 Q
"RTN","ORCMED",114,0)
 . D REF^ORMBLDPS(ORIFN,OROUT),UNLK1^ORX2(+ORIFN)
"RTN","ORCMED",115,0)
 . W !?10,"... refill requested.",$$RETURN
"RTN","ORCMED",116,0)
RFQ Q
"RTN","ORCMED",117,0)
 ;
"RTN","ORCMED",118,0)
RETURN() ; -- press return to cont
"RTN","ORCMED",119,0)
 N X W !,"Press <return> to continue ..." R X:DTIME
"RTN","ORCMED",120,0)
 Q ""
"RTN","ORCMED",121,0)
 ;
"RTN","ORCMED",122,0)
ROUTING() ; -- Routing for refill
"RTN","ORCMED",123,0)
 N X,Y,DIR S DIR(0)="SAM^W:WINDOW;M:MAIL;C:ADMINISTERED IN CLINIC;"
"RTN","ORCMED",124,0)
 S DIR("A")="Routing: ",DIR("B")=$S($D(^PSX(550,"C")):"MAIL",1:"WINDOW")
"RTN","ORCMED",125,0)
 S DIR("?")="Select how the patient is to receive this refill, by mail or at the window or in the clinic"
"RTN","ORCMED",126,0)
 D ^DIR S:$D(DTOUT)!(X["^") Y="^"
"RTN","ORCMED",127,0)
 Q Y
"RTN","ORCMED",128,0)
 ;
"RTN","ORCMED",129,0)
NW ; -- Order New Medication from Meds tab
"RTN","ORCMED",130,0)
 ;    Requires ORDIALOG      = name of pkg dialog
"RTN","ORCMED",131,0)
 ;             OREVENT       = event, if delaying orders
"RTN","ORCMED",132,0)
 ;             OREVENT("TS") = treating spec, if admission or transfer
"RTN","ORCMED",133,0)
 N ORPTLK G:'$L($G(ORDIALOG)) NWQ
"RTN","ORCMED",134,0)
 S ORPTLK=$$LOCK^ORX2(+ORVP) I 'ORPTLK W !!,$C(7),$P(ORPTLK,U,2) H 2 Q
"RTN","ORCMED",135,0)
 D FREEZE^ORCMENU S VALMBCK="R"
"RTN","ORCMED",136,0)
 S ORNP=$$PROVIDER^ORCMENU1 G:ORNP="^" NWQ
"RTN","ORCMED",137,0)
 I '$G(ORL) S ORL=$S($G(OREVENT):$$LOC^OREVNTX(OREVENT),1:$$LOCATION^ORCMENU1) G:ORL["^" NWQ
"RTN","ORCMED",138,0)
 S ORDIALOG=$O(^ORD(101.41,"AB",$E(ORDIALOG,1,63),0)) G:'ORDIALOG NWQ
"RTN","ORCMED",139,0)
 D ADD^ORCDLG,REBLD^ORCMENU:$D(^TMP("ORNEW",$J))
"RTN","ORCMED",140,0)
 K ORDIALOG,^TMP("ORWORD",$J),^TMP("ORECALL",$J) S VALMBCK="R"
"RTN","ORCMED",141,0)
NWQ D:'$D(^TMP("ORNEW",$J)) UNLOCK^ORX2(+ORVP) ;unlock if no new orders
"RTN","ORCMED",142,0)
 Q
"RTN","ORCMEDT0")
0^72^B16773395
"RTN","ORCMEDT0",1,0)
ORCMEDT0 ;SLC/MKB-Dialog Utilities ;04:11 PM  12 Feb 1999
"RTN","ORCMEDT0",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**46,60,190**;Dec 17, 1997
"RTN","ORCMEDT0",3,0)
DIALOG(TYPE) ; -- Get Dialog file entry
"RTN","ORCMEDT0",4,0)
 N X,Y,Z,D,DIC,DIE,DIK,DA,DR,DLAYGO,ORPKG,ORDLG,ORIT,OROI,I,IDX
"RTN","ORCMEDT0",5,0)
 S ORPKG=$O(^DIC(9.4,"C","OR",0)),DIC="^ORD(101.41,",DIC(0)="AEQLZ"
"RTN","ORCMEDT0",6,0)
 S DIC("S")="I $P(^(0),U,4)="""_TYPE_"""",DLAYGO=101.41
"RTN","ORCMEDT0",7,0)
 S DIC("A")="Select "_$S(TYPE="Q":"QUICK ORDER",TYPE="O":"ORDER SET",TYPE="A":"ACTION",1:"ORDER DIALOG")_" NAME: "
"RTN","ORCMEDT0",8,0)
 S DIC("DR")="4///"_TYPE_$S(TYPE="D":";7////"_ORPKG,1:"")
"RTN","ORCMEDT0",9,0)
D0 S D="AB" D IX^DIC I Y'>0 S ORDLG="^" G DQ
"RTN","ORCMEDT0",10,0)
 S ORDLG=+Y,ORDG=$P(Y(0),U,5) G:'$P(Y,U,3) DQ ; not a new entry
"RTN","ORCMEDT0",11,0)
 I $O(^ORD(101.41,"AB",$P(Y,U,2),0))'=+Y W $C(7),!,"Another entry already exists by this name!",! D DEL(+Y) G D0
"RTN","ORCMEDT0",12,0)
 I TYPE="D" D  G:ORDLG="^" DQ ;new dialog
"RTN","ORCMEDT0",13,0)
 . S DA=ORDLG,DR="5R",DIE=DIC,ORIT=$P(Y,U,2) D ^DIE
"RTN","ORCMEDT0",14,0)
 . S ORDG=+$P($G(^ORD(101.41,ORDLG,0)),U,5)
"RTN","ORCMEDT0",15,0)
 . I 'ORDG W $C(7),!,"Deleting <"_ORIT_"> ..." S DA=ORDLG,DIK=DIC D ^DIK S ORDLG="^" Q
"RTN","ORCMEDT0",16,0)
 . S ORIT=$$OI^ORCMEDT3(+ORDG) S:ORIT="^" ORDLG="^"
"RTN","ORCMEDT0",17,0)
 I TYPE="Q" D  G DQ ;new quick order
"RTN","ORCMEDT0",18,0)
 . S DIC="^ORD(100.98,",DIC(0)="AEQM",DIC("S")="I ($P(^(0),U,4)&($P(^(0),U)'=""NON-VA MEDICATIONS""))"
"RTN","ORCMEDT0",19,0)
 . S DIC("A")="TYPE OF QUICK ORDER: " D ^DIC
"RTN","ORCMEDT0",20,0)
 . I Y>0 S ORDG=+Y,$P(^ORD(101.41,ORDLG,0),U,5)=+Y Q
"RTN","ORCMEDT0",21,0)
 . W !,$P(^ORD(101.41,ORDLG,0),U)_" quick order dialog DELETED!",!
"RTN","ORCMEDT0",22,0)
 . S DA=ORDLG,DIK="^ORD(101.41,",ORDLG="^" D ^DIK
"RTN","ORCMEDT0",23,0)
D1 I $$COPY^ORCMEDIT(TYPE) D  ;copy an existing dialog?
"RTN","ORCMEDT0",24,0)
 . K DLAYGO,DIC("B") S DIC(0)="AEQZ",DIC("A")="Select "_$S(TYPE="Q":"QUICK ORDER",TYPE="O":"ORDER SET",1:"ORDER DIALOG")_" TO COPY: "
"RTN","ORCMEDT0",25,0)
 . D ^DIC Q:Y'>0  W !,"Copying ..."
"RTN","ORCMEDT0",26,0)
 . F I=2,6,8,9 S $P(^ORD(101.41,ORDLG,0),U,I)=$P(Y(0),U,I)
"RTN","ORCMEDT0",27,0)
 . S:TYPE'="D" $P(^ORD(101.41,ORDLG,0),U,5)=$P(Y(0),U,5) ;skip DG if Dlg
"RTN","ORCMEDT0",28,0)
 . S:$L($P(Y(0),U,2)) ^ORD(101.41,"C",$$UP^XLFSTR($P(Y(0),U,2)),ORDLG)="" ;disp text
"RTN","ORCMEDT0",29,0)
 . F I=2,3,3.1,4,5,6,7,9,10 I $D(^ORD(101.41,+Y,I)) M ^ORD(101.41,ORDLG,I)=^ORD(101.41,+Y,I)
"RTN","ORCMEDT0",30,0)
 . I $P(Y(0),U,7) S DA=ORDLG,DIE=DIC,DR="7////"_$P(Y(0),U,7) D ^DIE
"RTN","ORCMEDT0",31,0)
 . K DA S DA(1)=ORDLG,DIK="^ORD(101.41,"_ORDLG_",10,",DIK(1)="2^AD" D ENALL^DIK
"RTN","ORCMEDT0",32,0)
D2 I TYPE="D",$G(ORIT) D  ;stuff in default OI
"RTN","ORCMEDT0",33,0)
 . S DA=ORDLG,DR="2///"_$P(ORIT,U,2),DIE="^ORD(101.41," D ^DIE
"RTN","ORCMEDT0",34,0)
 . S OROI=$$PTR^ORCD("OR GTX ORDERABLE ITEM"),DA=$O(^ORD(101.41,ORDLG,10,"D",OROI,0)) I 'DA D  Q:'DA  ;create OI prompt
"RTN","ORCMEDT0",35,0)
 .. S X=+$O(^ORD(101.41,ORDLG,10,"B",0)),X=$S(X=0:1,1:X-.1) ;get Seq#
"RTN","ORCMEDT0",36,0)
 .. K DA,DIC S DIC="^ORD(101.41,"_ORDLG_",10,",DIC(0)="L",DA(1)=ORDLG
"RTN","ORCMEDT0",37,0)
 .. S DIC("P")=$P(^DD(101.41,10,0),U,2) D ^DIC Q:Y'>0  S DA=+Y
"RTN","ORCMEDT0",38,0)
 .. S Z=+$O(^ORD(101.41,ORDLG,10,"ATXT",0)),Z=$S(Z=0:1,1:Z-.1) ;TxtSeq#
"RTN","ORCMEDT0",39,0)
 .. S ^ORD(101.41,ORDLG,10,DA,0)=X_U_OROI_"^^Order: ^^1",^(2)=Z
"RTN","ORCMEDT0",40,0)
 .. S ^ORD(101.41,"AD",OROI,ORDLG,DA)="",^ORD(101.41,ORDLG,10,"B",X,DA)="",^ORD(101.41,ORDLG,10,"D",OROI,DA)="",^ORD(101.41,ORDLG,10,"ATXT",X,DA)=""
"RTN","ORCMEDT0",41,0)
 . S IDX="S."_$P($G(^ORD(100.98,+ORDG,0)),U,3)
"RTN","ORCMEDT0",42,0)
 . S $P(^ORD(101.41,ORDLG,10,DA,0),U,8)=1,$P(^(0),U,10)=IDX,^(3)="I 0 ;uneditable",^(7)="S Y="_+ORIT
"RTN","ORCMEDT0",43,0)
DQ Q ORDLG
"RTN","ORCMEDT0",44,0)
 ;
"RTN","ORCMEDT0",45,0)
DEL(DA) ; -- delete bad entry in Order Dialog file
"RTN","ORCMEDT0",46,0)
 N DIK S DIK="^ORD(101.41," D:$G(DA) ^DIK
"RTN","ORCMEDT0",47,0)
 Q
"RTN","ORCMEDT0",48,0)
 ;
"RTN","ORCMEDT0",49,0)
SAVE ; -- Save ORDG, responses in ORDIALOG to dialog ORQDLG
"RTN","ORCMEDT0",50,0)
 N PROMPT,CNT,ITM,TYPE,INST,VALUE K ^ORD(101.41,ORQDLG,6)
"RTN","ORCMEDT0",51,0)
 S (PROMPT,CNT)=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:PROMPT'>0  D
"RTN","ORCMEDT0",52,0)
 . S ITM=ORDIALOG(PROMPT),TYPE=$E(ORDIALOG(PROMPT,0))
"RTN","ORCMEDT0",53,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  D
"RTN","ORCMEDT0",54,0)
 . . S VALUE=$G(ORDIALOG(PROMPT,INST)),CNT=CNT+1
"RTN","ORCMEDT0",55,0)
 . . S ^ORD(101.41,ORQDLG,6,CNT,0)=+ITM_U_PROMPT_U_INST
"RTN","ORCMEDT0",56,0)
 . . S:TYPE'="W" ^ORD(101.41,ORQDLG,6,CNT,1)=VALUE
"RTN","ORCMEDT0",57,0)
 . . M:TYPE="W" ^ORD(101.41,ORQDLG,6,CNT,2)=@VALUE
"RTN","ORCMEDT0",58,0)
 . . S ^ORD(101.41,ORQDLG,6,"D",PROMPT,CNT)=""
"RTN","ORCMEDT0",59,0)
 S ^ORD(101.41,ORQDLG,6,0)="^101.416^"_CNT_U_CNT
"RTN","ORCMEDT0",60,0)
 S:$G(ORDG) $P(^ORD(101.41,ORQDLG,0),U,5)=+ORDG
"RTN","ORCMEDT0",61,0)
 Q
"RTN","ORCMEDT0",62,0)
 ;
"RTN","ORCMEDT0",63,0)
ITEM(Z) ; -- Select new item to add
"RTN","ORCMEDT0",64,0)
 N X,Y,DIC,ORDDF,ORERR,I
"RTN","ORCMEDT0",65,0)
 S DIC=101.41,DIC(0)="AEQM",DIC("A")="ITEM: "
"RTN","ORCMEDT0",66,0)
 I $G(Z) S Z=$P($G(^ORD(101.41,+Z,0)),U) S:$L(Z) DIC("B")=Z
"RTN","ORCMEDT0",67,0)
 S DIC("S")="I $P(^(0),U,4)'=""P"""
"RTN","ORCMEDT0",68,0)
IT1 D ^DIC I Y'>0 S Y=$S($D(DUOUT)!$D(DTOUT):"^",1:"") Q Y
"RTN","ORCMEDT0",69,0)
 D RECURSV^ORCMEDT5(+Y,+ORMENU,.ORERR) I $D(ORERR) D  G IT1
"RTN","ORCMEDT0",70,0)
 . W $C(7),!!,"An ancestor of this menu may not be added as an item!"
"RTN","ORCMEDT0",71,0)
 . W !,ORERR S I=0 F  S I=$O(ORERR(I)) Q:I'>0  W !?18," =>"_ORERR(I)
"RTN","ORCMEDT0",72,0)
 Q +Y
"RTN","ORCSAVE")
0^16^B60436590
"RTN","ORCSAVE",1,0)
ORCSAVE ;SLC/MKB/JDL-Save ;10/17/02  10:39
"RTN","ORCSAVE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,56,70,73,92,94,116,141,163,187,190**;Dec 17, 1997
"RTN","ORCSAVE",3,0)
NEW(ORDIALOG,ORDG,ORPKG,ORCAT,OREVENT,ORDUZ,ORLOG) ; -- New order
"RTN","ORCSAVE",4,0)
 ; Returns ORIFN = [new] order number, if created/saved
"RTN","ORCSAVE",5,0)
 D EN
"RTN","ORCSAVE",6,0)
 Q
"RTN","ORCSAVE",7,0)
 ;
"RTN","ORCSAVE",8,0)
XX ; -- save new/unreleased edited order into Orders file
"RTN","ORCSAVE",9,0)
 ;    Requires: ORDIALOG() = array of dialog values
"RTN","ORCSAVE",10,0)
 ;              ORIFN      = IFN of original order that was edited
"RTN","ORCSAVE",11,0)
 ;  
"RTN","ORCSAVE",12,0)
 N OLDIFN S ORIFN=+ORIFN
"RTN","ORCSAVE",13,0)
 I $S($P(^OR(100,ORIFN,3),U,3)=11:0,$P(^(3),U,3)'=10:1,$P(^(8,1,0),U,4)=2:0,1:1) S OLDIFN=ORIFN K ORIFN ; create new order if released or delayed&signed
"RTN","ORCSAVE",14,0)
 D EN Q:'ORIFN  S:'$G(ORDA) ORDA=1
"RTN","ORCSAVE",15,0)
 I $G(OLDIFN) D  ;save links between orders
"RTN","ORCSAVE",16,0)
 . S $P(^OR(100,ORIFN,3),U,5)=OLDIFN,$P(^(3),U,11)=1
"RTN","ORCSAVE",17,0)
 . S $P(^OR(100,OLDIFN,3),U,6)=ORIFN S:$D(^(5)) ^OR(100,ORIFN,5)=^OR(100,OLDIFN,5)
"RTN","ORCSAVE",18,0)
 Q
"RTN","ORCSAVE",19,0)
 ;
"RTN","ORCSAVE",20,0)
RN ; -- save new/unreleased renewal order into Orders file
"RTN","ORCSAVE",21,0)
 ;    Requires: ORDIALOG() = array of new dialog values
"RTN","ORCSAVE",22,0)
 ;              ORIFN      = IFN of original order that was renewed
"RTN","ORCSAVE",23,0)
 ; 
"RTN","ORCSAVE",24,0)
 N OLDIFN S OLDIFN=+ORIFN K ORIFN
"RTN","ORCSAVE",25,0)
 D EN Q:'ORIFN  S:'$G(ORDA) ORDA=1
"RTN","ORCSAVE",26,0)
 S $P(^OR(100,ORIFN,3),U,5)=OLDIFN,$P(^(3),U,11)=2
"RTN","ORCSAVE",27,0)
 S $P(^OR(100,OLDIFN,3),U,6)=ORIFN S:$D(^(5)) ^OR(100,ORIFN,5)=^OR(100,OLDIFN,5)
"RTN","ORCSAVE",28,0)
 Q
"RTN","ORCSAVE",29,0)
 ;
"RTN","ORCSAVE",30,0)
EN ; -- save new/unreleased order in ORDIALOG() into Orders file
"RTN","ORCSAVE",31,0)
 ;    Requires: ORVP, ORNP [and ORL, ORTS, ORAPPT if available]
"RTN","ORCSAVE",32,0)
 ;    If defined: ORCAT,ORPKG,ORDG,ORLOG,ORDUZ,OREVENT,ORDCNTRL,ORSRC
"RTN","ORCSAVE",33,0)
 ;     (else use values from ORDIALOG and current state)
"RTN","ORCSAVE",34,0)
 ;
"RTN","ORCSAVE",35,0)
 N PKG,NOW,NODE,CNT,CDL,I,X,STS,SIGNREQD,LOC,TRSPEC,NATR,CATG,DG,LOG,USR,TYPE
"RTN","ORCSAVE",36,0)
 Q:'$G(ORVP)  Q:'$G(ORDIALOG)  Q:'$D(^ORD(101.41,+ORDIALOG,0))
"RTN","ORCSAVE",37,0)
 S NOW=$$NOW^XLFDT,SIGNREQD=+$P(^ORD(101.41,+ORDIALOG,0),U,6)
"RTN","ORCSAVE",38,0)
 S CATG=$S($L($G(ORCAT)):ORCAT,1:$S($$INPT^ORCD:"I",1:"O"))
"RTN","ORCSAVE",39,0)
 S PKG=$S($G(ORPKG):ORPKG,1:$P(^ORD(101.41,+ORDIALOG,0),U,7))
"RTN","ORCSAVE",40,0)
 I $G(ORIFN),$D(^OR(100,ORIFN,0)) S STS=$P(^(3),U,3) G EN2 ; unrel order
"RTN","ORCSAVE",41,0)
 S DG=$S($G(ORDG):+ORDG,1:$P(^ORD(101.41,+ORDIALOG,0),U,5))
"RTN","ORCSAVE",42,0)
 I $G(OREVENT),$$GET1^DIQ(9.4,+PKG_",",1)'="PSO" S LOC="",TRSPEC=""
"RTN","ORCSAVE",43,0)
 E  S LOC=$G(ORL),TRSPEC=$G(ORTS)
"RTN","ORCSAVE",44,0)
 S TYPE=$S("^B^C^X^P^0^"[(U_$G(ORSRC)_U):ORSRC,$G(ORDCNTRL)="SN":"P",1:0)
"RTN","ORCSAVE",45,0)
 S LOG=$S($G(ORLOG):ORLOG,1:+$E(NOW,1,12)),USR=$S($G(ORDUZ):ORDUZ,1:DUZ)
"RTN","ORCSAVE",46,0)
 S NATR=+$O(^ORD(100.02,"C","E",0)) ;assume Elec Entered until changed
"RTN","ORCSAVE",47,0)
 S STS=$S($G(OREVENT):10,1:11),ORIFN=$$NEXTIFN Q:'ORIFN
"RTN","ORCSAVE",48,0)
EN1 S ^OR(100,ORIFN,0)=ORIFN_U_ORVP_U_U_$G(ORNP)_U_+ORDIALOG_";ORD(101.41,^"_USR_U_LOG_U_U_U_LOC_U_DG_U_CATG_U_TRSPEC_U_PKG_U_U_SIGNREQD_U_$G(OREVENT)_U_$G(ORAPPT)
"RTN","ORCSAVE",49,0)
 S ^OR(100,ORIFN,3)=LOG_"^90^"_STS_U_$S($G(ORIT):ORIT_";ORD(101.41,",1:"")_U_$G(ORDIALOG("PREV"))_"^^1^^^^"_TYPE
"RTN","ORCSAVE",50,0)
 S ^OR(100,ORIFN,8,0)="^100.008DA^1^1",^OR(100,ORIFN,8,1,0)=LOG_"^NW^"_$G(ORNP)_U_$S(SIGNREQD:2,1:3)_"^^^^^^^^"_NATR_U_USR_"^1^"_STS,^OR(100,ORIFN,8,"C","NW",1)=""
"RTN","ORCSAVE",51,0)
 S ^OR(100,"AF",LOG,ORIFN,1)=""
"RTN","ORCSAVE",52,0)
 S ^OR(100,"ACT",ORVP,9999999-LOG,+DG,ORIFN,1)=""
"RTN","ORCSAVE",53,0)
 S:STS'=10 ^OR(100,"AC",ORVP,9999999-LOG,ORIFN,1)=""
"RTN","ORCSAVE",54,0)
 S:SIGNREQD ^OR(100,"AS",ORVP,9999999-LOG,ORIFN,1)=""
"RTN","ORCSAVE",55,0)
 S:$G(OREVENT) ^OR(100,"AEVNT",ORVP,OREVENT,ORIFN)=""
"RTN","ORCSAVE",56,0)
EN2 S ORIFN=+ORIFN D RESPONSE ; save responses
"RTN","ORCSAVE",57,0)
 I $P(^OR(100,ORIFN,0),"^",5) D  ;Copy orders PKI fix
"RTN","ORCSAVE",58,0)
 . N OI
"RTN","ORCSAVE",59,0)
 . S OI=+$O(^OR(100,ORIFN,4.5,"ID","ORDERABLE",0)),OI=+$G(^OR(100,ORIFN,4.5,OI,1)) Q:'OI
"RTN","ORCSAVE",60,0)
 . I PKG'=$O(^DIC(9.4,"B","OUTPATIENT PHARMACY",0)) Q
"RTN","ORCSAVE",61,0)
 . D PKI^ORWDPS1(.ORY,OI,CATG,+ORVP,$$GET^XPAR("ALL^USR.`"_DUZ,"ORWOR PKI USE",1,"Q"))
"RTN","ORCSAVE",62,0)
 . I $E($G(ORY))=2 S ORDEA=ORY
"RTN","ORCSAVE",63,0)
 K ^OR(100,ORIFN,8,1,.1) D ORDTEXT^ORCSAVE1(ORIFN_";1") ; order text
"RTN","ORCSAVE",64,0)
 S NODE=$G(^OR(100,ORIFN,0)) D  S ^OR(100,ORIFN,0)=NODE
"RTN","ORCSAVE",65,0)
 . S $P(NODE,U,4)=$G(ORNP) ; COST?
"RTN","ORCSAVE",66,0)
 . S I=$O(^OR(100,ORIFN,4.5,"ID","LOCATION",0))
"RTN","ORCSAVE",67,0)
 . I I,$P(NODE,U,10) S X=+$G(^OR(100,ORIFN,4.5,+I,1)) S:X $P(NODE,U,10)=X_";SC(" ;reset Loc if prev value
"RTN","ORCSAVE",68,0)
 . S I=$O(^OR(100,ORIFN,4.5,"ID","CLASS",0))
"RTN","ORCSAVE",69,0)
 . I I S X=$G(^OR(100,ORIFN,4.5,+I,1)) S:"^I^O^"[(U_X_U) $P(NODE,U,12)=X
"RTN","ORCSAVE",70,0)
 S $P(^OR(100,ORIFN,3),U)=NOW
"RTN","ORCSAVE",71,0)
 K ^OR(100,ORIFN,9) I $G(ORCHECK) D  ; save order checks
"RTN","ORCSAVE",72,0)
 . S (CNT,CDL)=0 F  S CDL=$O(ORCHECK("NEW",CDL)) Q:CDL'>0  S I=0 D
"RTN","ORCSAVE",73,0)
 . . F  S I=$O(ORCHECK("NEW",CDL,I)) Q:I'>0  S X=ORCHECK("NEW",CDL,I) D
"RTN","ORCSAVE",74,0)
 . . . S CNT=CNT+1,^OR(100,ORIFN,9,"B",+X,CNT)=""
"RTN","ORCSAVE",75,0)
 . . . S ^OR(100,ORIFN,9,CNT,0)=$P(X,U,1,2),^(1)=$E($P(X,U,3),1,245)
"RTN","ORCSAVE",76,0)
 . S:CNT ^OR(100,ORIFN,9,0)="^100.09PA^"_CNT_U_CNT
"RTN","ORCSAVE",77,0)
 K ORDEA
"RTN","ORCSAVE",78,0)
ENQ Q
"RTN","ORCSAVE",79,0)
 ;
"RTN","ORCSAVE",80,0)
NEXTIFN() ; -- Returns next available ORIFN
"RTN","ORCSAVE",81,0)
 N I,HDR,LAST,TOTAL,DA
"RTN","ORCSAVE",82,0)
 F I=1:1:10 L +^OR(100,0):1 Q:$T  H 2
"RTN","ORCSAVE",83,0)
 I '$T Q "^"
"RTN","ORCSAVE",84,0)
 S HDR=$G(^OR(100,0)),TOTAL=+$P(HDR,U,4),LAST=$O(^OR(100,"?"),-1)
"RTN","ORCSAVE",85,0)
 S I=LAST\1 F I=(I+1):1 Q:'$D(^OR(100,I,0))
"RTN","ORCSAVE",86,0)
 S DA=I,^OR(100,DA,0)=DA,$P(HDR,U,3,4)=DA_U_(TOTAL+1)
"RTN","ORCSAVE",87,0)
 S ^OR(100,0)=HDR L -^OR(100,0)
"RTN","ORCSAVE",88,0)
 Q DA
"RTN","ORCSAVE",89,0)
 ;
"RTN","ORCSAVE",90,0)
RESPONSE ; -- Save responses in ORDIALOG() into ^OR(100,ORIFN,4.5)
"RTN","ORCSAVE",91,0)
 N PROMPT,CNT,ITM,TYPE,INST,VALUE,I,START,PAT,X
"RTN","ORCSAVE",92,0)
 S PAT=$P(^OR(100,ORIFN,0),U,2),START=$P(^(0),U,8) K ^(4.5)
"RTN","ORCSAVE",93,0)
 S (PROMPT,CNT)=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:PROMPT'>0  D
"RTN","ORCSAVE",94,0)
 . S ITM=$G(ORDIALOG(PROMPT)) Q:'ITM
"RTN","ORCSAVE",95,0)
 . S TYPE=$E($G(ORDIALOG(PROMPT,0))) Q:'$L(TYPE)
"RTN","ORCSAVE",96,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  D
"RTN","ORCSAVE",97,0)
 . . S VALUE=$G(ORDIALOG(PROMPT,INST)) Q:VALUE=""  S CNT=CNT+1
"RTN","ORCSAVE",98,0)
 . . S ^OR(100,ORIFN,4.5,CNT,0)=+ITM_U_PROMPT_U_INST_U_$P(ITM,U,2)
"RTN","ORCSAVE",99,0)
 . . S:$L($P(ITM,U,2)) ^OR(100,ORIFN,4.5,"ID",$P(ITM,U,2),CNT)=""
"RTN","ORCSAVE",100,0)
 . . S:TYPE'="W" ^OR(100,ORIFN,4.5,CNT,1)=VALUE
"RTN","ORCSAVE",101,0)
 . . M:TYPE="W" ^OR(100,ORIFN,4.5,CNT,2)=@VALUE ; array root
"RTN","ORCSAVE",102,0)
 S ^OR(100,ORIFN,4.5,0)="^100.045A^"_CNT_U_CNT
"RTN","ORCSAVE",103,0)
R1 ; [Reset] Orderables
"RTN","ORCSAVE",104,0)
 I $D(^OR(100,ORIFN,.1)) S I=0 F  S I=$O(^OR(100,ORIFN,.1,I)) Q:I'>0  S X=$G(^(I,0)) I X,PAT,START K ^OR(100,"AOI",X,PAT,9999999-START,ORIFN) ; kill xref
"RTN","ORCSAVE",105,0)
 K ^OR(100,ORIFN,.1) I $D(^OR(100,ORIFN,4.5,"ID","ORDERABLE")) D
"RTN","ORCSAVE",106,0)
 . S (I,CNT)=0
"RTN","ORCSAVE",107,0)
 . F  S I=$O(^OR(100,ORIFN,4.5,"ID","ORDERABLE",I)) Q:I'>0  D
"RTN","ORCSAVE",108,0)
 . . S X=$G(^OR(100,ORIFN,4.5,I,1)) Q:'X
"RTN","ORCSAVE",109,0)
 . . S CNT=CNT+1,^OR(100,ORIFN,.1,CNT,0)=X,^OR(100,ORIFN,.1,"B",X,CNT)=""
"RTN","ORCSAVE",110,0)
 . . I PAT,START S ^OR(100,"AOI",X,PAT,9999999-START,ORIFN)=""
"RTN","ORCSAVE",111,0)
 . S ^OR(100,ORIFN,.1,0)="^100.001PA^"_CNT_U_CNT
"RTN","ORCSAVE",112,0)
 Q
"RTN","ORCSAVE",113,0)
 ;
"RTN","ORCSAVE",114,0)
RESUME(IFN) ; -- add Response nodes for RESUME tray service
"RTN","ORCSAVE",115,0)
 ; S ^OR(100,+IFN,4.5,<next>,0)=DT_"^^^RESUME",^(1)=1
"RTN","ORCSAVE",116,0)
 ;
"RTN","ORCSAVE",117,0)
 N X,Y,DA,DIC
"RTN","ORCSAVE",118,0)
 S DIC="^OR(100,"_+IFN_",4.5,",DIC(0)="LX",DA(1)=+IFN,X=DT
"RTN","ORCSAVE",119,0)
 S DIC("DR")=".04///RESUME",DIC("P")=$P(^DD(100,4.5,0),U,2)
"RTN","ORCSAVE",120,0)
 D ^DIC S:Y ^OR(100,+IFN,4.5,+Y,1)=1
"RTN","ORCSAVE",121,0)
 Q
"RTN","ORCSAVE",122,0)
 ;
"RTN","ORCSAVE",123,0)
PROVIDER(ORDER,PROV) ; -- Change PROVider assigned to ORDER
"RTN","ORCSAVE",124,0)
 Q:'$G(ORDER)  Q:'$G(PROV)
"RTN","ORCSAVE",125,0)
 N ORACT S ORACT=+$P(ORDER,";",2) S:'ORACT ORACT=1
"RTN","ORCSAVE",126,0)
 S $P(^OR(100,+ORDER,8,ORACT,0),U,3)=PROV
"RTN","ORCSAVE",127,0)
 S:ORACT=1 $P(^OR(100,+ORDER,0),U,4)=PROV
"RTN","ORCSAVE",128,0)
 Q
"RTN","ORCSAVE",129,0)
 ;
"RTN","ORCSAVE",130,0)
ACTION(CODE,DA,PROV,REASON,WHEN,WHO) ; -- save new action
"RTN","ORCSAVE",131,0)
 N NEXT,TOTAL,HDR,LAST,X,PAT,DGRP,SIG,NATR,TXT S DA=+DA
"RTN","ORCSAVE",132,0)
 Q:'$D(^OR(100,DA,0)) 0 Q:$G(CODE)'?2U 0
"RTN","ORCSAVE",133,0)
 S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12) S:'$G(WHO) WHO=DUZ
"RTN","ORCSAVE",134,0)
 S NATR=+$O(^ORD(100.02,"C","E",0)) ;assume Elec Entered until changed
"RTN","ORCSAVE",135,0)
 S PAT=$P(^OR(100,DA,0),U,2),DGRP=$P(^(0),U,11),SIG=$P(^(0),U,16),X=+$P($G(^(3)),U,7),HDR=$G(^(8,0))
"RTN","ORCSAVE",136,0)
 S:X'>0 X=1 S TXT=$P($G(^OR(100,DA,8,X,0)),U,14) ;current actn's txt ptr
"RTN","ORCSAVE",137,0)
 S:HDR="" HDR="^100.008DA^^" S TOTAL=+$P(HDR,U,4)
"RTN","ORCSAVE",138,0)
 S LAST=$O(^OR(100,DA,8,"C",CODE,"?"),-1) I LAST D
"RTN","ORCSAVE",139,0)
 . S X=$G(^OR(100,DA,8,LAST,0)) Q:$P(X,U,15)'=11  Q:$P(X,U,4)'=2
"RTN","ORCSAVE",140,0)
 . S NEXT=LAST I PAT,$P(X,U) D  ; kill old xref entries
"RTN","ORCSAVE",141,0)
 . . K:DGRP ^OR(100,"ACT",PAT,(9999999-$P(X,U)),DGRP,DA,NEXT)
"RTN","ORCSAVE",142,0)
 . . K ^OR(100,"AC",PAT,(9999999-$P(X,U)),DA,NEXT),^OR(100,"AS",PAT,(9999999-$P(X,U)),DA,NEXT),^OR(100,"AF",$P(X,U),DA,NEXT)
"RTN","ORCSAVE",143,0)
 S:'$G(NEXT) NEXT=$O(^OR(100,DA,8,"?"),-1)+1,TOTAL=TOTAL+1
"RTN","ORCSAVE",144,0)
 S ^OR(100,DA,8,NEXT,0)=WHEN_U_CODE_U_$G(PROV)_U_$S(SIG:2,1:3)_"^^^^^^^^"_NATR_U_WHO_U_TXT_"^11",^OR(100,DA,8,"C",CODE,NEXT)=""
"RTN","ORCSAVE",145,0)
 S ^OR(100,"AF",WHEN,DA,NEXT)=""
"RTN","ORCSAVE",146,0)
 I PAT,DGRP S ^OR(100,"ACT",PAT,9999999-WHEN,DGRP,DA,NEXT)=""
"RTN","ORCSAVE",147,0)
 I PAT S ^OR(100,"AC",PAT,9999999-WHEN,DA,NEXT)=""
"RTN","ORCSAVE",148,0)
 I SIG S ^OR(100,"AS",PAT,9999999-WHEN,DA,NEXT)=""
"RTN","ORCSAVE",149,0)
 S:$L($G(REASON)) ^OR(100,DA,8,NEXT,1)=REASON
"RTN","ORCSAVE",150,0)
 S $P(HDR,U,3,4)=NEXT_U_TOTAL,^OR(100,DA,8,0)=HDR
"RTN","ORCSAVE",151,0)
 Q NEXT
"RTN","ORCSAVE",152,0)
 ;
"RTN","ORCSAVE",153,0)
SET(DLG) ; -- Create new parent for order set ORDIALOG
"RTN","ORCSAVE",154,0)
 ; Returns ORPIFN = ifn of new parent order for set
"RTN","ORCSAVE",155,0)
 ;
"RTN","ORCSAVE",156,0)
 Q:'$G(ORVP)  Q:'$G(DLG)  N OR0,PKG,NOW,CATG,STS,ORLOC,TRSPEC,X
"RTN","ORCSAVE",157,0)
 S OR0=$G(^ORD(101.41,DLG,0)) Q:OR0=""  S ORPIFN=$$NEXTIFN Q:'ORPIFN
"RTN","ORCSAVE",158,0)
 S PKG=$O(^DIC(9.4,"C","OR",0)),CATG=$S($$INPT^ORCD:"I",1:"O"),STS=$S($G(OREVENT):10,1:11),NOW=$S($G(ORSLOG):ORSLOG,1:+$E($$NOW^XLFDT,1,12))
"RTN","ORCSAVE",159,0)
 I $G(OREVENT) S ORLOC="",TRSPEC=""
"RTN","ORCSAVE",160,0)
 S ^OR(100,ORPIFN,0)=ORPIFN_U_ORVP_U_U_$G(ORNP)_U_DLG_";ORD(101.41,^"_DUZ_U_NOW_U_U_U_ORLOC_U_U_CATG_U_TRSPEC_U_PKG_"^^^"_$G(OREVENT),^(3)=NOW_"^90^"_STS_U_$S($G(ORIT):ORIT_"ORD(101.41,",1:"")_"^^^1^^^^0^^"_+$P(OR0,U,6)
"RTN","ORCSAVE",161,0)
 S ^OR(100,ORPIFN,8,0)="^100.008DA^1^1",^(1,0)=NOW_"^NW^"_$G(ORNP)_"^^^^^^^^^^"_DUZ_"^^"_STS,^OR(100,ORPIFN,8,"C","NW",1)="",^OR(100,"AF",NOW,ORPIFN,1)=""
"RTN","ORCSAVE",162,0)
 S ^OR(100,"ACT",ORVP,9999999-NOW,ORPIFN,1)=""
"RTN","ORCSAVE",163,0)
 S:STS=11 ^OR(100,"AC",ORVP,9999999-NOW,ORPIFN,1)=""
"RTN","ORCSAVE",164,0)
 ; AEVNT ??
"RTN","ORCSAVE",165,0)
 S ^OR(100,ORPIFN,1,0)="^100.011^1^1",^(1,0)=$P(OR0,U,2) ; Order text
"RTN","ORCSAVE",166,0)
 Q
"RTN","ORCSAVE2")
0^40^B44373911
"RTN","ORCSAVE2",1,0)
ORCSAVE2 ;SLC/MKB-Utilities to update an order ;04:19 PM  11 Jan 2001
"RTN","ORCSAVE2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,27,56,70,94,116,190**;Dec 17, 1997
"RTN","ORCSAVE2",3,0)
STATUS(IFN,ST) ; -- Update status of order
"RTN","ORCSAVE2",4,0)
 Q:'$G(IFN)  Q:'$D(^OR(100,+IFN,0))  Q:$P($G(^(3)),U,3)=$G(ST)  ;no change
"RTN","ORCSAVE2",5,0)
 Q:'$G(ST)  Q:'$D(^ORD(100.01,+ST,0))
"RTN","ORCSAVE2",6,0)
 N NODE0,NODE3,ORNOW,DA,XACT,PROV,ORVP
"RTN","ORCSAVE2",7,0)
 S NODE3=$G(^OR(100,+IFN,3)),ORVP=$P($G(^(0)),U,2),ORNOW=$$NOW^XLFDT
"RTN","ORCSAVE2",8,0)
 S $P(NODE3,U)=ORNOW,$P(NODE3,U,3)=ST,^OR(100,+IFN,3)=NODE3
"RTN","ORCSAVE2",9,0)
 I (ST<3)!(ST=12)!(ST=13),$G(ORDCNTRL)'="ZC" D DATES(+IFN,,+$E(ORNOW,1,12))
"RTN","ORCSAVE2",10,0)
 I "^1^2^7^12^13^15^"[(U_ST_U) D CANCEL^ORCSEND(+IFN),UNOTIF^ORCSIGN
"RTN","ORCSAVE2",11,0)
 I $P(NODE3,U,9) D CKPARENT($P(NODE3,U,9)) ; ck siblings to update parent
"RTN","ORCSAVE2",12,0)
 D SETALL^ORDD100(+IFN)
"RTN","ORCSAVE2",13,0)
 Q
"RTN","ORCSAVE2",14,0)
 ;
"RTN","ORCSAVE2",15,0)
CKPARENT(ORIFN) ; -- Update status of parent order, if appropriate
"RTN","ORCSAVE2",16,0)
 N ORSTS,ALLRELSD,ALLDONE,DC,COMP,CH,CHSTS,ACTIVE,LAPS
"RTN","ORCSAVE2",17,0)
 Q:'$D(^OR(100,ORIFN,0))  S ORSTS=$P($G(^(3)),U,3)
"RTN","ORCSAVE2",18,0)
 I (ORSTS=11)!(ORSTS=10) S ALLRELSD=1 D  Q  ;Parent unrel'd - ck children
"RTN","ORCSAVE2",19,0)
 . F CH=0:0 S CH=$O(^OR(100,ORIFN,2,CH)) Q:CH'>0  D  Q:'ALLRELSD
"RTN","ORCSAVE2",20,0)
 . . I '$D(^OR(100,CH)) K ^OR(100,ORIFN,2,CH) Q
"RTN","ORCSAVE2",21,0)
 . . S CHSTS=$P($G(^OR(100,CH,3)),U,3) S:CHSTS=11 ALLRELSD=0
"RTN","ORCSAVE2",22,0)
 . I ALLRELSD D STATUS(ORIFN,5) ; update Parent order to pending
"RTN","ORCSAVE2",23,0)
 S ALLDONE=1,(DC,COMP,LAPS,ACTIVE)=0
"RTN","ORCSAVE2",24,0)
 F CH=0:0 S CH=$O(^OR(100,ORIFN,2,CH)) Q:CH'>0  D  Q:'ALLDONE
"RTN","ORCSAVE2",25,0)
 . I '$D(^OR(100,CH)) K ^OR(100,ORIFN,2,CH) Q
"RTN","ORCSAVE2",26,0)
 . S CHSTS=$P($G(^OR(100,CH,3)),U,3) I CHSTS=14 S LAPS=1 Q
"RTN","ORCSAVE2",27,0)
 . I "^1^12^13^"[(U_CHSTS_U) S DC=1 Q
"RTN","ORCSAVE2",28,0)
 . I "^2^7^"[(U_CHSTS_U) S COMP=1 Q
"RTN","ORCSAVE2",29,0)
 . S ALLDONE=0 S:CHSTS=6 ACTIVE=1
"RTN","ORCSAVE2",30,0)
 I ALLDONE S ORSTS=$S(COMP:2,DC:1,LAPS:14,1:"") D:ORSTS STATUS(ORIFN,ORSTS) Q
"RTN","ORCSAVE2",31,0)
 I ACTIVE,ORSTS'=6 D STATUS(ORIFN,6) ;at least child active
"RTN","ORCSAVE2",32,0)
 Q
"RTN","ORCSAVE2",33,0)
 ;
"RTN","ORCSAVE2",34,0)
RELEASE(ORDER,ACTION,WHEN,WHO,NATURE) ; -- Mark order as released to service
"RTN","ORCSAVE2",35,0)
 S:'$G(ACTION) ACTION=1 S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12) S:'$G(WHO) WHO=DUZ
"RTN","ORCSAVE2",36,0)
 Q:'$G(ORDER)  N OR0 S OR0=$G(^OR(100,ORDER,8,ACTION,0))
"RTN","ORCSAVE2",37,0)
 S:$L($G(NATURE)) $P(OR0,U,12)=$S(NATURE:NATURE,1:+$O(^ORD(100.02,"C",NATURE,0)))
"RTN","ORCSAVE2",38,0)
 S:($P(OR0,U,15)=10)!($P(OR0,U,15)=11) $P(OR0,U,15)=""
"RTN","ORCSAVE2",39,0)
 S $P(OR0,U,16,17)=WHEN_U_WHO,^OR(100,"AR",ORVP,9999999-WHEN,ORDER,ACTION)=""
"RTN","ORCSAVE2",40,0)
 S ^OR(100,ORDER,8,ACTION,0)=OR0
"RTN","ORCSAVE2",41,0)
 I $P(OR0,U,2)="NW",'$P(^OR(100,ORDER,0),U,8) D STARTDT(ORDER)
"RTN","ORCSAVE2",42,0)
 Q
"RTN","ORCSAVE2",43,0)
 ;
"RTN","ORCSAVE2",44,0)
STARTDT(DA) ; -- resolve Start and Stop dates from Responses
"RTN","ORCSAVE2",45,0)
 N X,Y,%DT,ORDG,ORT,ORLAB
"RTN","ORCSAVE2",46,0)
 S ORDG=$P($G(^ORD(100.98,+$P(^OR(100,DA,0),U,11),0)),U,3)
"RTN","ORCSAVE2",47,0)
 S ORLAB="^LAB^CH^HEMA^MI^AP^AU^EM^SP^CY^BB^"[(U_ORDG_U)
"RTN","ORCSAVE2",48,0)
 I ORDG="E/L T" S ORT=$$VALUE(DA,"TIME")
"RTN","ORCSAVE2",49,0)
STRT S X=$$VALUE(DA,"START") Q:'$L(X)  I ORDG="E/L T" S X=X_"@"_ORT
"RTN","ORCSAVE2",50,0)
 D AM:X="AM",NEXT:X="NEXT",ADMIN("NEXT"):X="NEXTA",ADMIN("CLOSEST"):X="CLOSEST"
"RTN","ORCSAVE2",51,0)
 S %DT="T" D ^%DT Q:Y'>0  S:$E($P(Y,".",2),1,2)=24 Y=$P(Y,".")_".2359"
"RTN","ORCSAVE2",52,0)
 S $P(^OR(100,DA,0),U,8)=Y D SS^ORDD100,WS^ORDD100,OI1^ORDD100A(DA)
"RTN","ORCSAVE2",53,0)
STOP I ORLAB S X=$$VALUE(DA,"DAYS") Q:X'>1  S X=$$FMADD^XLFDT(Y,(X-1))
"RTN","ORCSAVE2",54,0)
 I 'ORLAB S X=$$VALUE(DA,"STOP") Q:'$L(X)  S:ORDG="E/L T" X=X_"@"_ORT
"RTN","ORCSAVE2",55,0)
 S %DT="T" D ^%DT Q:Y'>0  S:$E($P(Y,".",2),1,2)=24 Y=$P(Y,".")_".2359"
"RTN","ORCSAVE2",56,0)
 S $P(^OR(100,DA,0),U,9)=Y D ES^ORDD100A
"RTN","ORCSAVE2",57,0)
 Q
"RTN","ORCSAVE2",58,0)
 ;
"RTN","ORCSAVE2",59,0)
NEXT ; -- Resolve next lab collection to FM date/time
"RTN","ORCSAVE2",60,0)
 N ORTIME,ORDAY,NOW,NEXT,ENT
"RTN","ORCSAVE2",61,0)
 S ENT=$S($P($G(^SC(+$G(ORL),0)),U,4):+$P(^(0),U,4),1:+$G(DUZ(2)))_";DIC(4," S:ENT'>0 ENT="ALL"
"RTN","ORCSAVE2",62,0)
 D GETLST^XPAR(.ORTIME,ENT,"LR PHLEBOTOMY COLLECTION","N")
"RTN","ORCSAVE2",63,0)
 S NOW=$P($H,",",2),ORDAY=$S($O(ORTIME(NOW)):"T",1:"T+1")
"RTN","ORCSAVE2",64,0)
 S ORDAY=$$NEXTCOLL^ORCDLR1(ORDAY) S:ORDAY["+" NOW=0
"RTN","ORCSAVE2",65,0)
 S NEXT=$O(ORTIME(NOW)),X=ORDAY_"@"_$P($G(ORTIME(+NEXT)),U)
"RTN","ORCSAVE2",66,0)
 Q
"RTN","ORCSAVE2",67,0)
 ;
"RTN","ORCSAVE2",68,0)
AM ; -- Resolve AM lab collection to FM date/time
"RTN","ORCSAVE2",69,0)
 N ORTIME,ORDAY,AM,NOW,ENT
"RTN","ORCSAVE2",70,0)
 S ENT=$S($P($G(^SC(+$G(ORL),0)),U,4):+$P(^(0),U,4),1:+$G(DUZ(2)))_";DIC(4," S:ENT'>0 ENT="ALL"
"RTN","ORCSAVE2",71,0)
 D GETLST^XPAR(.ORTIME,ENT,"LR PHLEBOTOMY COLLECTION","N")
"RTN","ORCSAVE2",72,0)
 S AM=$O(ORTIME(0)),NOW=$P($H,",",2)
"RTN","ORCSAVE2",73,0)
 S ORDAY=$S(AM=$O(ORTIME(NOW)):"T",1:"T+1")
"RTN","ORCSAVE2",74,0)
 S X=$$NEXTCOLL^ORCDLR1(ORDAY)_"@"_$P($G(ORTIME(+AM)),U)
"RTN","ORCSAVE2",75,0)
 Q
"RTN","ORCSAVE2",76,0)
 ;
"RTN","ORCSAVE2",77,0)
ADMIN(START) ; -- Resolve next/closest administration times to FM date/time
"RTN","ORCSAVE2",78,0)
 N PAT,SCH,OI,LOC,Y,I
"RTN","ORCSAVE2",79,0)
 I $G(DA) D  ;get data from order DA
"RTN","ORCSAVE2",80,0)
 . S PAT=+$P($G(^OR(100,DA,0)),U,2),LOC=""
"RTN","ORCSAVE2",81,0)
 . S I=+$O(^OR(100,DA,4.5,"ID","INSTR",0)),I=+$P($G(^OR(100,DA,4.5,I,0)),U,3) ;first
"RTN","ORCSAVE2",82,0)
 . S SCH=$$VALUE(DA,"SCHEDULE",I),OI=$$VALUE(DA,"ORDERABLE")
"RTN","ORCSAVE2",83,0)
 I '$G(DA) D  ;or look in ORDIALOG() instead
"RTN","ORCSAVE2",84,0)
 . S I=+$O(ORDIALOG($$PTR^ORCD("OR GTX INSTRUCTIONS"),0))
"RTN","ORCSAVE2",85,0)
 . S PAT=$G(ORVP),SCH=$G(ORDIALOG($$PTR^ORCD("OR GTX SCHEDULE"),I))
"RTN","ORCSAVE2",86,0)
 . S OI=$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1)),LOC=""
"RTN","ORCSAVE2",87,0)
 S OI=+$P($G(^ORD(101.43,+OI,0)),U,2) ;PSOI
"RTN","ORCSAVE2",88,0)
 S Y=$$RESOLVE^PSJORPOE(PAT,SCH,OI,START,LOC),X=$P(Y,U,2)
"RTN","ORCSAVE2",89,0)
 Q
"RTN","ORCSAVE2",90,0)
 ;
"RTN","ORCSAVE2",91,0)
SIGN(DA,WHO,WHEN,HOW,WHAT) ; -- affix ES to order
"RTN","ORCSAVE2",92,0)
 Q:'$G(DA)  S:'$G(WHAT) WHAT=1
"RTN","ORCSAVE2",93,0)
 N X S X=$G(^OR(100,DA,8,WHAT,0)) D S2^ORDD100(DA,WHAT) ; kill AS xref
"RTN","ORCSAVE2",94,0)
 S $P(X,U,4,7)=$G(HOW)_U_$G(WHO)_U_$E($G(WHEN),1,12)_U_$S(HOW=0:DUZ,1:"")
"RTN","ORCSAVE2",95,0)
 ; S:$G(WHO) $P(X,U,3)=WHO ; reset provider to signer
"RTN","ORCSAVE2",96,0)
 S ^OR(100,DA,8,WHAT,0)=X
"RTN","ORCSAVE2",97,0)
 D:$G(HOW)=2 S1^ORDD100(DA,WHAT) ; reset AS xref
"RTN","ORCSAVE2",98,0)
 Q
"RTN","ORCSAVE2",99,0)
 ;
"RTN","ORCSAVE2",100,0)
SIGSTS(IFN,ACT) ; -- Set SigSts for backdoor orders [Called from ^ORM* rtns]
"RTN","ORCSAVE2",101,0)
 ; Expects ORNATR, ORVP, ORNP to be defined
"RTN","ORCSAVE2",102,0)
 Q:'$G(IFN)  Q:'$G(ACT)  N X,OR0 S OR0=+$P($G(^OR(100,+IFN,8,ACT,0)),U)
"RTN","ORCSAVE2",103,0)
 S X=$S($$SIGNREQD^ORCACT1(+IFN):$$SIGSTS^ORX1(ORNATR),1:3)
"RTN","ORCSAVE2",104,0)
 K ^OR(100,"AS",ORVP,9999999-OR0,+IFN,ACT)
"RTN","ORCSAVE2",105,0)
 S $P(^OR(100,+IFN,8,ACT,0),U,4)=X
"RTN","ORCSAVE2",106,0)
 I X=2 S ^OR(100,"AS",ORVP,9999999-OR0,+IFN,ACT)="" D NOTIF^ORCSIGN
"RTN","ORCSAVE2",107,0)
 Q
"RTN","ORCSAVE2",108,0)
 ;
"RTN","ORCSAVE2",109,0)
UNVEIL(IFN) ; -- unveil new order
"RTN","ORCSAVE2",110,0)
 S $P(^OR(100,IFN,3),U,8)=""
"RTN","ORCSAVE2",111,0)
 Q
"RTN","ORCSAVE2",112,0)
 ;
"RTN","ORCSAVE2",113,0)
DELETE(ORDER) ; -- delete order [action]
"RTN","ORCSAVE2",114,0)
 N DIK,DA,DAD
"RTN","ORCSAVE2",115,0)
 I $P(ORDER,";",2)>1 S DA=+$P(ORDER,";",2),DA(1)=+ORDER,DIK="^OR(100,"_DA(1)_",8," D:DA ^DIK Q
"RTN","ORCSAVE2",116,0)
 S DAD=+$P($G(^OR(100,+ORDER,3)),U,9) I DAD S DIK="^OR(100,"_DAD_",2,",DA(1)=DAD,DA=+ORDER D ^DIK ; remove link to child from parent
"RTN","ORCSAVE2",117,0)
 K DA S DA=+ORDER,DIK="^OR(100," D ^DIK ;remove order, text
"RTN","ORCSAVE2",118,0)
 Q
"RTN","ORCSAVE2",119,0)
 ;
"RTN","ORCSAVE2",120,0)
VERIFY(IFN,DA,TYPE,WHO,WHEN) ; -- order verified
"RTN","ORCSAVE2",121,0)
 Q:'$G(IFN)  Q:'$G(DA)  Q:"^N^C^R^"'[(U_$G(TYPE)_U)
"RTN","ORCSAVE2",122,0)
 N FLD S FLD=$S(TYPE="N":8,TYPE="C":10,1:18)
"RTN","ORCSAVE2",123,0)
 S:'$G(WHO) WHO=DUZ S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12)
"RTN","ORCSAVE2",124,0)
 S $P(^OR(100,IFN,8,DA,0),U,FLD,FLD+1)=WHO_U_WHEN
"RTN","ORCSAVE2",125,0)
 Q
"RTN","ORCSAVE2",126,0)
 ;
"RTN","ORCSAVE2",127,0)
COMP(IFN,WHO,WHEN) ; -- order completed
"RTN","ORCSAVE2",128,0)
 Q:'$G(IFN)  S:'$G(WHO) WHO=DUZ S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12)
"RTN","ORCSAVE2",129,0)
 D DATES(+IFN,,WHEN),STATUS(+IFN,2)
"RTN","ORCSAVE2",130,0)
 S $P(^OR(100,+IFN,6),U,6,7)=WHEN_U_WHO
"RTN","ORCSAVE2",131,0)
 Q
"RTN","ORCSAVE2",132,0)
 ;
"RTN","ORCSAVE2",133,0)
DATES(DA,START,STOP) ; -- Update start/stop dates for order DA
"RTN","ORCSAVE2",134,0)
 Q:'$G(DA)  I $G(START) D
"RTN","ORCSAVE2",135,0)
 . Q:START=$P(^OR(100,DA,0),U,8)
"RTN","ORCSAVE2",136,0)
 . D SK^ORDD100,WK^ORDD100,OI2^ORDD100A(DA)
"RTN","ORCSAVE2",137,0)
 . S $P(^OR(100,DA,0),U,8)=START
"RTN","ORCSAVE2",138,0)
 . D SS^ORDD100,WS^ORDD100,OI1^ORDD100A(DA)
"RTN","ORCSAVE2",139,0)
 I $G(STOP) D
"RTN","ORCSAVE2",140,0)
 . ;Q:STOP=$P(^OR(100,DA,0),U,9)  ;ck xref anyway
"RTN","ORCSAVE2",141,0)
 . D EK^ORDD100A S $P(^OR(100,DA,0),U,9)=STOP D ES^ORDD100A
"RTN","ORCSAVE2",142,0)
 Q
"RTN","ORCSAVE2",143,0)
 ;
"RTN","ORCSAVE2",144,0)
OC ; -- Save order checks in ORCHECK() in ^OR(100,+ORIFN,9)
"RTN","ORCSAVE2",145,0)
 Q:'$G(ORIFN)  Q:'$D(^OR(100,+ORIFN,0))  K ^OR(100,+ORIFN,9)
"RTN","ORCSAVE2",146,0)
 N NOW,CNT,CDL,I,OC,OVERIDE S NOW=+$E($$NOW^XLFDT,1,12),CNT=0
"RTN","ORCSAVE2",147,0)
 S CDL=0 F  S CDL=$O(ORCHECK(+ORIFN,CDL)) Q:CDL'>0  D
"RTN","ORCSAVE2",148,0)
 . S I=0 F  S I=$O(ORCHECK(+ORIFN,CDL,I)) Q:I'>0  D
"RTN","ORCSAVE2",149,0)
 . . S OC=ORCHECK(+ORIFN,CDL,I) Q:'OC
"RTN","ORCSAVE2",150,0)
 . . S OVERIDE=$S($G(MODE)="NOTIF":$G(ORCHECK("OK"))_U,CDL=1:$G(ORCHECK("OK"))_U_DUZ,1:U_DUZ)_U_NOW
"RTN","ORCSAVE2",151,0)
 . . S CNT=CNT+1,^OR(100,+ORIFN,9,"B",+OC,CNT)=""
"RTN","ORCSAVE2",152,0)
 . . S ^OR(100,+ORIFN,9,CNT,0)=$P(OC,U,1,2)_U_U_OVERIDE,^(1)=$E($P(OC,U,3),1,245)
"RTN","ORCSAVE2",153,0)
 S:CNT ^OR(100,+ORIFN,9,0)="^100.09PA^"_CNT_U_CNT
"RTN","ORCSAVE2",154,0)
 Q
"RTN","ORCSAVE2",155,0)
 ;
"RTN","ORCSAVE2",156,0)
VALUE(IFN,ID,INST) ; -- Returns value of prompt by identifier ID
"RTN","ORCSAVE2",157,0)
 I '$G(IFN)!('$D(^OR(100,+$G(IFN),0)))!($G(ID)="") Q ""
"RTN","ORCSAVE2",158,0)
 N I,Y S I=0,Y="" S:'$G(INST) INST=1
"RTN","ORCSAVE2",159,0)
 F  S I=$O(^OR(100,IFN,4.5,"ID",ID,I)) Q:I'>0  I $P($G(^OR(100,IFN,4.5,+I,0)),U,3)=INST S Y=$G(^(1)) Q
"RTN","ORCSAVE2",160,0)
 Q Y
"RTN","ORCSAVE2",161,0)
 ;
"RTN","ORCSAVE2",162,0)
SC(ORX,ORIFN) ; -- save responses to SC questions
"RTN","ORCSAVE2",163,0)
 Q:'$G(ORIFN)  Q:'$D(^OR(100,+ORIFN,0))  ;invalid order number
"RTN","ORCSAVE2",164,0)
 N OR5,I,P S OR5=$G(^OR(100,+ORIFN,5)),P=0
"RTN","ORCSAVE2",165,0)
 F I="SC","MST","AO","IR","EC","HNC","CV" S P=P+1 S:$D(ORX(I)) $P(OR5,U,P)=ORX(I)
"RTN","ORCSAVE2",166,0)
 S ^OR(100,+ORIFN,5)=OR5
"RTN","ORCSAVE2",167,0)
 Q
"RTN","ORDD43")
0^31^B35300161
"RTN","ORDD43",1,0)
ORDD43 ; SLC/MKB - Build xrefs for file 101.43 ;7/2/97  10:52
"RTN","ORDD43",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**26,68,94,164,190**;Dec 17, 1997
"RTN","ORDD43",3,0)
 ;
"RTN","ORDD43",4,0)
SET(X,IFN) ; Create new entry X in SET multiple
"RTN","ORDD43",5,0)
 N DIC,DA,Y Q:$D(^ORD(101.43,IFN,9,"B",X))  ; already exists
"RTN","ORDD43",6,0)
 S DIC="^ORD(101.43,"_IFN_",9,",DIC(0)="L",DA(1)=IFN
"RTN","ORDD43",7,0)
 S DIC("P")=$P(^DD(101.43,9,0),U,2) K DD,DO
"RTN","ORDD43",8,0)
 S ^ORD(101.43,"AH",X)=$H
"RTN","ORDD43",9,0)
 S ^ORD(101.43,"AH","S."_X)=$H
"RTN","ORDD43",10,0)
 D FILE^DICN
"RTN","ORDD43",11,0)
 Q
"RTN","ORDD43",12,0)
 ;
"RTN","ORDD43",13,0)
KILL(X,IFN) ; Remove entry X from SET multiple
"RTN","ORDD43",14,0)
 N DIK,DA
"RTN","ORDD43",15,0)
 S DIK="^ORD(101.43,"_IFN_",9,",DA(1)=IFN
"RTN","ORDD43",16,0)
 S ^ORD(101.43,"AH",X)=$H
"RTN","ORDD43",17,0)
 S DA=$O(^ORD(101.43,IFN,9,"B",X,0)) I DA D ^DIK
"RTN","ORDD43",18,0)
 Q
"RTN","ORDD43",19,0)
 ;
"RTN","ORDD43",20,0)
SETRA(NAME,ITYPE,CPROC) ; Set COMMON xref
"RTN","ORDD43",21,0)
 Q:'CPROC  Q:'$L(ITYPE)  ; not common, no IType
"RTN","ORDD43",22,0)
 S ^ORD(101.43,"COMMON",ITYPE,NAME,DA)=""
"RTN","ORDD43",23,0)
 Q
"RTN","ORDD43",24,0)
 ;
"RTN","ORDD43",25,0)
KILLRA(NAME,ITYPE,CPROC) ; Kill COMMON xref
"RTN","ORDD43",26,0)
 Q:'CPROC  Q:'$L(ITYPE)  ; not common, no IType
"RTN","ORDD43",27,0)
 K ^ORD(101.43,"COMMON",ITYPE,NAME,DA)
"RTN","ORDD43",28,0)
 Q
"RTN","ORDD43",29,0)
 ;
"RTN","ORDD43",30,0)
SS(NAME,DATE,LABTYP) ; -- Set S.SET xref by Name, Set multiple
"RTN","ORDD43",31,0)
 Q:'$L($G(NAME))  I ($G(LABTYP)="O")!($G(LABTYP)="N") D SK(NAME) Q
"RTN","ORDD43",32,0)
 N SET,SET0,SETNM,SETLST,QO
"RTN","ORDD43",33,0)
 S SET=0 F  S SET=$O(^ORD(101.43,DA,9,SET)) Q:SET'>0  S SET0=$G(^(SET,0)) D
"RTN","ORDD43",34,0)
 . S SETNM=$P(SET0,U),QO=$P(SET0,U,2)
"RTN","ORDD43",35,0)
 . S ^ORD(101.43,"S."_SETNM,$$UP^XLFSTR(NAME),DA)=U_NAME_U_$G(DATE)_U_U_QO
"RTN","ORDD43",36,0)
 . S ^ORD(101.43,"AH","S."_SETNM)=$H,SETLST("S."_SETNM)=""
"RTN","ORDD43",37,0)
 I $G(DATE),(DATE>$$NOW^XLFDT) D
"RTN","ORDD43",38,0)
 . N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSAVE,ZTSK
"RTN","ORDD43",39,0)
 . S ZTRTN="DQAH^ORDD43",ZTDESC="CPRS AH Update",ZTDTH=DATE,ZTIO=""
"RTN","ORDD43",40,0)
 . S ZTSAVE("SETLST(")="" D ^%ZTLOAD
"RTN","ORDD43",41,0)
 Q
"RTN","ORDD43",42,0)
DQAH ; -- set new timestamps for sets where items are becoming inactive
"RTN","ORDD43",43,0)
 S ZTREQ="@"
"RTN","ORDD43",44,0)
 N X
"RTN","ORDD43",45,0)
 S X="" F  S X=$O(SETLST(X)) Q:X=""  S ^ORD(101.43,"AH",X)=$H
"RTN","ORDD43",46,0)
 Q
"RTN","ORDD43",47,0)
 ;
"RTN","ORDD43",48,0)
SK(NAME) ; -- Kill S.SET xref by Name, Set multiple
"RTN","ORDD43",49,0)
 Q:'$L($G(NAME))  N SET,SETNM
"RTN","ORDD43",50,0)
 S SET=0 F  S SET=$O(^ORD(101.43,DA,9,SET)) Q:SET'>0  S SETNM=$P(^(SET,0),U) D
"RTN","ORDD43",51,0)
 . K ^ORD(101.43,"S."_SETNM,$$UP^XLFSTR(NAME),DA)
"RTN","ORDD43",52,0)
 . S ^ORD(101.43,"AH","S."_SETNM)=$H
"RTN","ORDD43",53,0)
 Q
"RTN","ORDD43",54,0)
 ;
"RTN","ORDD43",55,0)
SS1(NAME,DATE,LABTYP) ; -- Set S.SET mnemonic xref by Synonym, Name, Set
"RTN","ORDD43",56,0)
 Q:'$L($G(NAME))  I ($G(LABTYP)="O")!($G(LABTYP)="N") D SK1(NAME) Q
"RTN","ORDD43",57,0)
 N SYN,SYNM,SET,SET0,SETNM,QO
"RTN","ORDD43",58,0)
 S SET=0 F  S SET=$O(^ORD(101.43,DA,9,SET)) Q:SET'>0  S SET0=$G(^(SET,0)) D
"RTN","ORDD43",59,0)
 . S SETNM=$P(SET0,U),QO=$P(SET0,U,2)
"RTN","ORDD43",60,0)
 . S SYN=0 F  S SYN=$O(^ORD(101.43,DA,2,SYN)) Q:SYN'>0  S SYNM=$P(^(SYN,0),U) D
"RTN","ORDD43",61,0)
 . . S:SYNM'=NAME ^ORD(101.43,"S."_SETNM,$$UP^XLFSTR(SYNM),DA)="1^"_SYNM_U_$G(DATE)_U_NAME_U_QO
"RTN","ORDD43",62,0)
 . . S ^ORD(101.43,"AH","S."_SETNM)=$H
"RTN","ORDD43",63,0)
 Q
"RTN","ORDD43",64,0)
 ;
"RTN","ORDD43",65,0)
SK1(NAME) ; -- Kill S.SET mnemonic xref by Synonym, Name, Set
"RTN","ORDD43",66,0)
 N SYN,SYNM,SET,SETNM
"RTN","ORDD43",67,0)
 S SET=0 F  S SET=$O(^ORD(101.43,DA,9,SET)) Q:SET'>0  S SETNM=$P(^(SET,0),U) D
"RTN","ORDD43",68,0)
 . S SYN=0 F  S SYN=$O(^ORD(101.43,DA,2,SYN)) Q:SYN'>0  S SYNM=$P(^(SYN,0),U) D
"RTN","ORDD43",69,0)
 . . I $G(^ORD(101.43,"S."_SETNM,$$UP^XLFSTR(SYNM),DA)) K ^(DA)
"RTN","ORDD43",70,0)
 . . S ^ORD(101.43,"AH","S."_SETNM)=$H
"RTN","ORDD43",71,0)
 Q
"RTN","ORDD43",72,0)
 ;
"RTN","ORDD43",73,0)
SS2 ; -- Set S.SET mnemonic xref from SET multiple
"RTN","ORDD43",74,0)
 N TYP,NAME,DATE,SYN,SYNM,I,QO
"RTN","ORDD43",75,0)
 S TYP=$P($G(^ORD(101.43,DA(1),"LR")),U,7) I (TYP="O")!(TYP="N") D SK2 Q
"RTN","ORDD43",76,0)
 S I=+$O(^ORD(101.43,DA(1),9,"B",X,0))
"RTN","ORDD43",77,0)
 S QO=$P($G(^ORD(101.43,DA(1),9,I,0)),U,2)
"RTN","ORDD43",78,0)
 S SYN=0,NAME=$P(^ORD(101.43,DA(1),0),U),DATE=$G(^(.1))
"RTN","ORDD43",79,0)
 F  S SYN=$O(^ORD(101.43,DA(1),2,SYN)) Q:SYN'>0  S SYNM=$P(^(SYN,0),U) D
"RTN","ORDD43",80,0)
 . S:SYNM'=NAME ^ORD(101.43,"S."_X,$$UP^XLFSTR(SYNM),DA(1))="1^"_SYNM_U_DATE_U_NAME_U_QO
"RTN","ORDD43",81,0)
 . S ^ORD(101.43,"AH","S."_X)=$H
"RTN","ORDD43",82,0)
 Q
"RTN","ORDD43",83,0)
 ;
"RTN","ORDD43",84,0)
SK2 ; -- Kill S.SET mnemonic xref from SET multiple
"RTN","ORDD43",85,0)
 N SYN,SYNM
"RTN","ORDD43",86,0)
 S SYN=0 F  S SYN=$O(^ORD(101.43,DA(1),2,SYN)) Q:SYN'>0  S SYNM=$P(^(SYN,0),U) D
"RTN","ORDD43",87,0)
 . I $G(^ORD(101.43,"S."_X,$$UP^XLFSTR(SYNM),DA(1))) K ^(DA(1))
"RTN","ORDD43",88,0)
 . S ^ORD(101.43,"AH","S."_X)=$H
"RTN","ORDD43",89,0)
 Q
"RTN","ORDD43",90,0)
 ;
"RTN","ORDD43",91,0)
SS3 ; -- Set S.SET mnemonic xref from SYN multiple
"RTN","ORDD43",92,0)
 N TYP,NAME,DATE,SET,SET0,SETNM,QO
"RTN","ORDD43",93,0)
 S TYP=$P($G(^ORD(101.43,DA(1),"LR")),U,7) I (TYP="O")!(TYP="N") D SK3 Q
"RTN","ORDD43",94,0)
 S NAME=$P(^ORD(101.43,DA(1),0),U),DATE=$G(^(.1)),SET=0 Q:X=NAME
"RTN","ORDD43",95,0)
 F  S SET=$O(^ORD(101.43,DA(1),9,SET)) Q:SET'>0  S SET0=$G(^(SET,0)) D
"RTN","ORDD43",96,0)
 . S SETNM=$P(SET0,U),QO=$P(SET0,U,2)
"RTN","ORDD43",97,0)
 . S ^ORD(101.43,"S."_SETNM,$$UP^XLFSTR(X),DA(1))="1^"_X_U_DATE_U_NAME_U_QO
"RTN","ORDD43",98,0)
 . S ^ORD(101.43,"AH","S."_SETNM)=$H
"RTN","ORDD43",99,0)
 Q
"RTN","ORDD43",100,0)
 ;
"RTN","ORDD43",101,0)
SK3 ; -- Kill S.SET mnemonic xref from SYN multiple
"RTN","ORDD43",102,0)
 N SET,SETNM
"RTN","ORDD43",103,0)
 S SET=0 F  S SET=$O(^ORD(101.43,DA(1),9,SET)) Q:SET'>0  S SETNM=$P(^(SET,0),U) D
"RTN","ORDD43",104,0)
 . I $G(^ORD(101.43,"S."_SETNM,$$UP^XLFSTR(X),DA(1))) K ^(DA(1))
"RTN","ORDD43",105,0)
 . S ^ORD(101.43,"AH","S."_SETNM)=$H
"RTN","ORDD43",106,0)
 Q
"RTN","ORDD43",107,0)
 ;
"RTN","ORDD43",108,0)
CS(NAME,CODE,DATE) ; -- Set C.SET xref by 'Code Name', Set
"RTN","ORDD43",109,0)
 Q:'$L($G(NAME))  Q:'$L($G(CODE))
"RTN","ORDD43",110,0)
 N X,XP,ORS,SET0,SETNM,QO
"RTN","ORDD43",111,0)
 S X=CODE_" "_NAME,XP=$$UP^XLFSTR(X)
"RTN","ORDD43",112,0)
 S ORS=0 F  S ORS=$O(^ORD(101.43,DA,9,ORS)) Q:ORS'>0  S SET0=$G(^(ORS,0)) D
"RTN","ORDD43",113,0)
 . S SETNM=$P(SET0,U),QO=$P(SET0,U,2)
"RTN","ORDD43",114,0)
 . S ^ORD(101.43,"C."_SETNM,XP,DA)=U_X_U_$G(DATE)_U_U_QO
"RTN","ORDD43",115,0)
 Q
"RTN","ORDD43",116,0)
 ;
"RTN","ORDD43",117,0)
CK(NAME,CODE) ; -- Kill C.SET xref
"RTN","ORDD43",118,0)
 Q:'$L($G(NAME))  Q:'$L($G(CODE))
"RTN","ORDD43",119,0)
 N XP,ORS,ORSET S XP=$$UP^XLFSTR(CODE_" "_NAME)
"RTN","ORDD43",120,0)
 S ORS=0 F  S ORS=$O(^ORD(101.43,DA,9,ORS)) Q:ORS'>0  S ORSET=$P(^(ORS,0),U) K ^ORD(101.43,"C."_ORSET,XP,DA)
"RTN","ORDD43",121,0)
 Q
"RTN","ORDD43",122,0)
 ;
"RTN","ORDD43",123,0)
QO(X) ; -- Add data to SET xrefs, set/kill AQO xref
"RTN","ORDD43",124,0)
 N NAME,XREF,SYN,SYNM S X=$G(X)
"RTN","ORDD43",125,0)
 S NAME=$$UP^XLFSTR($P($G(^ORD(101.43,DA(1),0)),U)),XREF="S."_$P($G(^(9,DA,0)),U)
"RTN","ORDD43",126,0)
 S:X ^ORD(101.43,DA(1),9,"AQO",XREF)=""
"RTN","ORDD43",127,0)
 K:'X ^ORD(101.43,DA(1),9,"AQO",XREF)
"RTN","ORDD43",128,0)
 Q:'$D(^ORD(101.43,XREF,NAME,DA(1)))  S $P(^(DA(1)),U,5)=X
"RTN","ORDD43",129,0)
 S SYN=0 F  S SYN=+$O(^ORD(101.43,DA(1),2,SYN)) Q:SYN<1  S SYNM=$P($G(^(SYN,0)),U),$P(^ORD(101.43,XREF,$$UP^XLFSTR(SYNM),DA(1)),U,5)=X
"RTN","ORDD43",130,0)
 S ^ORD(101.43,"AH",XREF)=$H
"RTN","ORDD43",131,0)
 Q
"RTN","ORDD43",132,0)
 ;
"RTN","ORDD43",133,0)
XHELP(INDEX,SCREEN) ; -- ??Help
"RTN","ORDD43",134,0)
 N X,Y,Y0,Z,SYN,CNT,D,DONE
"RTN","ORDD43",135,0)
 S:'$L($G(INDEX)) INDEX="B" W !!,"Choose from:" S CNT=1,D=INDEX
"RTN","ORDD43",136,0)
 S X="" F  S X=$O(^ORD(101.43,INDEX,X)) Q:X=""  S Y=0 D  Q:$G(DONE)
"RTN","ORDD43",137,0)
 . F  S Y=$O(^ORD(101.43,INDEX,X,Y)) Q:Y'>0  S SYN=$G(^(Y)) I 'SYN D  Q:$G(DONE)
"RTN","ORDD43",138,0)
 . . S Y0=$G(^ORD(101.43,Y,0)) X:$L($G(SCREEN)) SCREEN Q:'$T
"RTN","ORDD43",139,0)
 . . W !,"   "_X ;W:SYN "     "_$P(SYN,U,4) ; echo .01 if synonym
"RTN","ORDD43",140,0)
 . . S CNT=CNT+1 Q:CNT'>(IOSL-5)  S CNT=0
"RTN","ORDD43",141,0)
 . . W !,"   '^' TO STOP: " R Z:DTIME S:'$T!(Z["^") DONE=1
"RTN","ORDD43",142,0)
 W !
"RTN","ORDD43",143,0)
 Q
"RTN","ORDD43",144,0)
 ;
"RTN","ORDD43",145,0)
ACTIVE(ITM) ; -- Screen, if inactive or restricted to QO use only
"RTN","ORDD43",146,0)
 ;        Use in DIC("S") when searching #101.43
"RTN","ORDD43",147,0)
 N Y S Y=1
"RTN","ORDD43",148,0)
 I $G(ORTYPE)="D",$L($G(D)),$D(^ORD(101.43,+ITM,9,"AQO",$P(D,U))) S Y=0
"RTN","ORDD43",149,0)
 I $G(^ORD(101.43,+ITM,.1)),^(.1)'>$$NOW^XLFDT S Y=0  ;inactive
"RTN","ORDD43",150,0)
 Q Y
"RTN","ORDD43",151,0)
 ;
"RTN","ORDD43",152,0)
ID(OLD,NEW) ; -- API for package to update ID field [ code;99XXX ]
"RTN","ORDD43",153,0)
 ;    Returns 1 or 0, if successful or not
"RTN","ORDD43",154,0)
 N IFN,Y S Y=0
"RTN","ORDD43",155,0)
 G:'$G(OLD) IDQ G:$G(NEW)'?1.N1";99"3U IDQ ;invalid
"RTN","ORDD43",156,0)
 S IFN=+$O(^ORD(101.43,"ID",OLD,0)) G:IFN'>0 IDQ
"RTN","ORDD43",157,0)
 K ^ORD(101.43,"ID",OLD,IFN)
"RTN","ORDD43",158,0)
 S $P(^ORD(101.43,IFN,0),U,2)=NEW,^ORD(101.43,"ID",NEW,IFN)="",Y=1
"RTN","ORDD43",159,0)
IDQ Q Y
"RTN","ORIMO")
0^66^B746197
"RTN","ORIMO",1,0)
ORIMO ;SLC/JDL - Inpatient medication on outpatient
"RTN","ORIMO",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**187,190**;Dec 17, 1997
"RTN","ORIMO",3,0)
IMOLOC(ORY,ORLOC,ORDFN) ;ORY>=0: LOC is an IMO authorized location
"RTN","ORIMO",4,0)
 S ORY=-1
"RTN","ORIMO",5,0)
 N PACH
"RTN","ORIMO",6,0)
 S PACH=$$PATCH^XPDUTL("PSJ*5.0*111")
"RTN","ORIMO",7,0)
 Q:'PACH
"RTN","ORIMO",8,0)
 I $L($TEXT(SDIMO^SDAMA203)) D
"RTN","ORIMO",9,0)
 . ;#DBIA 4133
"RTN","ORIMO",10,0)
 . S ORY=$$SDIMO^SDAMA203(ORLOC,ORDFN)
"RTN","ORIMO",11,0)
 . K SDIMO(1)
"RTN","ORIMO",12,0)
 Q
"RTN","ORIMO",13,0)
 ; 
"RTN","ORIMO",14,0)
IMOOD(ORY,ORDERID) ;Is it an IMO order?
"RTN","ORIMO",15,0)
 Q:'$D(^OR(100,+ORDERID,0))
"RTN","ORIMO",16,0)
 N PIMO,DGRP,IPGRP
"RTN","ORIMO",17,0)
 S (PIMO,DGRP,IPGRP)=0
"RTN","ORIMO",18,0)
 I $P($G(^OR(100,+ORDERID,0)),U,18)>0 S PIMO=1
"RTN","ORIMO",19,0)
 S DGRP=$P($G(^OR(100,+ORDERID,0)),U,11)
"RTN","ORIMO",20,0)
 S IPGRP=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORIMO",21,0)
 I (DGRP=IPGRP),PIMO S ORY=1
"RTN","ORIMO",22,0)
 Q
"RTN","ORIMO",23,0)
 ;
"RTN","ORKCHK4")
0^54^B26734530
"RTN","ORKCHK4",1,0)
ORKCHK4 ; slc/CLA - Support routine called by ORKCHK to do SELECT mode order checks ;3/6/97  9:35
"RTN","ORKCHK4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,74,87,94,123,162,190**;Dec 17, 1997
"RTN","ORKCHK4",3,0)
 Q
"RTN","ORKCHK4",4,0)
 ;
"RTN","ORKCHK4",5,0)
EN(ORKS,ORKDFN,ORKA,ORENT,ORKTMODE) ;perform order checking for orderable item selection
"RTN","ORKCHK4",6,0)
 Q:$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE",1,"I")="D"
"RTN","ORKCHK4",7,0)
 ;
"RTN","ORKCHK4",8,0)
 N OI,ORKDG,HL7,ODT,ORNUM,HL7NPTR,HL7NTXT,HL7NCOD,HL7LPTR,HL7LTXT,HL7LCOD
"RTN","ORKCHK4",9,0)
 N ORKMSG,ORKT,ORKTXT
"RTN","ORKCHK4",10,0)
 ;
"RTN","ORKCHK4",11,0)
 S OI=$P(ORKA,"|"),ORKDG=$P(ORKA,"|",2)
"RTN","ORKCHK4",12,0)
 S HL7=$P(ORKA,"|",3),ODT=$P(ORKA,"|",4),ORNUM=$P(ORKA,"|",5)
"RTN","ORKCHK4",13,0)
 S HL7NPTR=$P(HL7,U),HL7NTXT=$P(HL7,U,2),HL7NCOD=$P(HL7,U,3)
"RTN","ORKCHK4",14,0)
 S HL7LPTR=$P(HL7,U,4),HL7LTXT=$P(HL7,U,5),HL7LCOD=$P(HL7,U,6)
"RTN","ORKCHK4",15,0)
 ;
"RTN","ORKCHK4",16,0)
 I $E(ORKDG,1,2)="PS" D PHARM
"RTN","ORKCHK4",17,0)
 I $E(ORKDG,1,2)'="PS" D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SELECT")
"RTN","ORKCHK4",18,0)
 Q
"RTN","ORKCHK4",19,0)
 ;
"RTN","ORKCHK4",20,0)
PHARM ;process pharmacy order checks:
"RTN","ORKCHK4",21,0)
 N ORPSPKG,ORPSA,ORKDD
"RTN","ORKCHK4",22,0)
 N ORCRITN,ORCRITF,ORCRITD,ORSIGN,ORSIGF,ORSIGD,ORDUPN,ORDUPF,ORDUPD,ORDUPCN,ORDUPCF,ORDUPCD
"RTN","ORKCHK4",23,0)
 ;
"RTN","ORKCHK4",24,0)
 D PARAMS("CRITICAL DRUG INTERACTION",.ORCRITN,.ORCRITF,.ORCRITD)
"RTN","ORKCHK4",25,0)
 D PARAMS("SIGNIFICANT DRUG INTERACTION",.ORSIGN,.ORSIGF,.ORSIGD)
"RTN","ORKCHK4",26,0)
 D PARAMS("DUPLICATE DRUG ORDER",.ORDUPN,.ORDUPF,.ORDUPD)
"RTN","ORKCHK4",27,0)
 D PARAMS("DUPLICATE DRUG CLASS ORDER",.ORDUPCN,.ORDUPCF,.ORDUPCD)
"RTN","ORKCHK4",28,0)
 ;
"RTN","ORKCHK4",29,0)
 ;dispense drug selected:
"RTN","ORKCHK4",30,0)
 I $L($G(HL7LPTR)),($G(HL7LCOD)="99PSD") D
"RTN","ORKCHK4",31,0)
 .D RXOCS
"RTN","ORKCHK4",32,0)
 .D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SELECT")
"RTN","ORKCHK4",33,0)
 ;
"RTN","ORKCHK4",34,0)
 ;dispense drug NOT selected, split OI into dispense drugs:
"RTN","ORKCHK4",35,0)
 I '$L($G(HL7LPTR)) D
"RTN","ORKCHK4",36,0)
 .S ORPSPKG=$E(ORKDG,3)
"RTN","ORKCHK4",37,0)
 .I ORPSPKG="H" S ORPSPKG="X"  ;change to "X" if "H"erbal/non-VA med
"RTN","ORKCHK4",38,0)
 .I "IOX"[ORPSPKG D OI2DD(.ORPSA,OI,ORPSPKG)
"RTN","ORKCHK4",39,0)
 .S ORKDD=0 F  S ORKDD=$O(ORPSA(ORKDD)) Q:'ORKDD  D
"RTN","ORKCHK4",40,0)
 ..S HL7LTXT=ORPSA(ORKDD)
"RTN","ORKCHK4",41,0)
 ..S HL7NPTR=$P(ORKDD,";",2)
"RTN","ORKCHK4",42,0)
 ..S HL7LPTR=+ORKDD
"RTN","ORKCHK4",43,0)
 ..S HL7LCOD="99PSD",HL7NCOD="99NDF"
"RTN","ORKCHK4",44,0)
 ..S $P(HL7,U)=HL7NPTR,$P(HL7,U,3)=HL7NCOD
"RTN","ORKCHK4",45,0)
 ..S $P(HL7,U,4)=HL7LPTR,$P(HL7,U,5)=HL7LTXT,$P(HL7,U,6)=HL7LCOD
"RTN","ORKCHK4",46,0)
 ..S $P(ORKA,"|",3)=HL7  ;set these for MLM OCX call
"RTN","ORKCHK4",47,0)
 ..D RXOCS
"RTN","ORKCHK4",48,0)
 ..D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SELECT")
"RTN","ORKCHK4",49,0)
 Q
"RTN","ORKCHK4",50,0)
 ;
"RTN","ORKCHK4",51,0)
RXOCS ;drug-drug interaction, duplicate drug order, duplicate drug class
"RTN","ORKCHK4",52,0)
 Q:ORCRITF_ORSIGF_ORDUPF_ORDUPCF'["E"  ;quit if none are "E"nabled
"RTN","ORKCHK4",53,0)
 N ORKRX,ORPSNUM
"RTN","ORKCHK4",54,0)
 D CHECK^ORKPS(.ORKRX,ORKDFN,HL7LPTR,OI,ORKDG)
"RTN","ORKCHK4",55,0)
 N CHK,XX S CHK=0,XX=""
"RTN","ORKCHK4",56,0)
 F  S CHK=$O(ORKRX(CHK)) Q:'CHK  D
"RTN","ORKCHK4",57,0)
 .S XX=ORKRX(CHK)
"RTN","ORKCHK4",58,0)
 .;
"RTN","ORKCHK4",59,0)
 .;critical drug interaction:
"RTN","ORKCHK4",60,0)
 .I $P(XX,U)="DI",$P(XX,U,5)="CRITICAL" D  ;,(ORKTMODE'="ALL") D
"RTN","ORKCHK4",61,0)
 ..Q:ORCRITF="D"
"RTN","ORKCHK4",62,0)
 ..S ORPSNUM=$P(XX,U,8)  ;get the associated order number
"RTN","ORKCHK4",63,0)
 ..I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) S ORKT=$$FULLTEXT^ORQOR1(+ORPSNUM),ORKTXT=$P(ORKT,U)_" ["_$P(ORKT,U,2)_"]"
"RTN","ORKCHK4",64,0)
 ..E  S ORKTXT=$P(XX,U,3)
"RTN","ORKCHK4",65,0)
 ..S ORKMSG=$P(XX,U,5)_" drug-drug interaction: "_$P(XX,U,6)_" & "_$P(XX,U,7)
"RTN","ORKCHK4",66,0)
 ..S ORKS("ORK",ORCRITD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKMSG,1,225))=ORNUM_U_ORCRITN_U_ORCRITD_U_ORKMSG_" ("_ORKTXT_")"_U_$G(ORPSNUM)
"RTN","ORKCHK4",67,0)
 .;
"RTN","ORKCHK4",68,0)
 .;significant drug interaction:
"RTN","ORKCHK4",69,0)
 .I $P(XX,U)="DI",$P(XX,U,5)="SIGNIFICANT" D  ;,(ORKTMODE'="ALL") D
"RTN","ORKCHK4",70,0)
 ..Q:ORSIGF="D"
"RTN","ORKCHK4",71,0)
 ..S ORPSNUM=$P(XX,U,8)  ;get the associated order number
"RTN","ORKCHK4",72,0)
 ..I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) S ORKT=$$FULLTEXT^ORQOR1(+ORPSNUM),ORKTXT=$P(ORKT,U)_" ["_$P(ORKT,U,2)_"]"
"RTN","ORKCHK4",73,0)
 ..E  S ORKTXT=$P(XX,U,3)
"RTN","ORKCHK4",74,0)
 ..S ORKMSG=$P(XX,U,5)_" drug-drug interaction: "_$P(XX,U,6)_" & "_$P(XX,U,7)
"RTN","ORKCHK4",75,0)
 ..S ORKS("ORK",ORSIGD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKMSG,1,225))=ORNUM_U_ORSIGN_U_ORSIGD_U_ORKMSG_" ("_ORKTXT_")"_U_$G(ORPSNUM)
"RTN","ORKCHK4",76,0)
 .;
"RTN","ORKCHK4",77,0)
 .;duplicate drug:
"RTN","ORKCHK4",78,0)
 .I $P(XX,U)="DD" D  ;,(ORKTMODE'="ALL") D
"RTN","ORKCHK4",79,0)
 ..Q:ORDUPF="D"
"RTN","ORKCHK4",80,0)
 ..S ORPSNUM=$P(XX,U,4)  ;get the associated order number
"RTN","ORKCHK4",81,0)
 ..I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) S ORKT=$$FULLTEXT^ORQOR1(+ORPSNUM),ORKTXT=$P(ORKT,U)_" ["_$P(ORKT,U,2)_"]"
"RTN","ORKCHK4",82,0)
 ..E  S ORKTXT=$P(XX,U,3)
"RTN","ORKCHK4",83,0)
 ..S ORKMSG="Duplicate order: "_ORKTXT
"RTN","ORKCHK4",84,0)
 ..S ORKS("ORK",ORDUPD_","_$G(ORNUM)_","_ORPSNUM_",Duplicate order: "_$P(XX,U,3))=ORNUM_U_ORDUPN_U_ORDUPD_U_ORKMSG_U_$G(ORPSNUM)
"RTN","ORKCHK4",85,0)
 .;
"RTN","ORKCHK4",86,0)
 .;duplicate class:
"RTN","ORKCHK4",87,0)
 .I $P(XX,U)="DC" D  ;,(ORKTMODE'="ALL") D
"RTN","ORKCHK4",88,0)
 ..Q:ORDUPCF="D"
"RTN","ORKCHK4",89,0)
 ..S ORPSNUM=$P(XX,U,6)  ;get the associated order number
"RTN","ORKCHK4",90,0)
 ..I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) S ORKT=$$FULLTEXT^ORQOR1(+ORPSNUM),ORKTXT=$P(ORKT,U)_" ["_$P(ORKT,U,2)_"]"
"RTN","ORKCHK4",91,0)
 ..E  S ORKTXT=$P(XX,U,5)
"RTN","ORKCHK4",92,0)
 ..S ORKMSG="Duplicate drug class order: "_$P(XX,U,3)
"RTN","ORKCHK4",93,0)
 ..S ORKS("ORK",ORDUPCD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKMSG,1,225))=ORNUM_U_ORDUPCN_U_ORDUPCD_U_ORKMSG_" ("_ORKTXT_")"_U_$G(ORPSNUM)
"RTN","ORKCHK4",94,0)
 Q
"RTN","ORKCHK4",95,0)
 ;
"RTN","ORKCHK4",96,0)
OI2DD(ORPSA,OROI,ORPSPKG)       ;rtn dispense drugs for a PS OI
"RTN","ORKCHK4",97,0)
 N PSOI
"RTN","ORKCHK4",98,0)
 Q:'$D(^ORD(101.43,OROI,0))
"RTN","ORKCHK4",99,0)
 S PSOI=$P($P(^ORD(101.43,OROI,0),U,2),";")
"RTN","ORKCHK4",100,0)
 Q:+$G(PSOI)<1
"RTN","ORKCHK4",101,0)
 D DRG^PSSUTIL1(.ORPSA,PSOI,ORPSPKG)
"RTN","ORKCHK4",102,0)
 Q
"RTN","ORKCHK4",103,0)
 ;
"RTN","ORKCHK4",104,0)
PARAMS(ORKNAME,ORKNUM,ORKFLAG,ORKDNGR) ; get parameter values for an order chk
"RTN","ORKCHK4",105,0)
 S ORKNUM=0,ORKNUM=$O(^ORD(100.8,"B",ORKNAME,ORKNUM))
"RTN","ORKCHK4",106,0)
 S ORKFLAG=$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",ORKNUM,"I")
"RTN","ORKCHK4",107,0)
 S ORKDNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",ORKNUM,"I")
"RTN","ORKCHK4",108,0)
 Q
"RTN","ORKCHK5")
0^55^B21617903
"RTN","ORKCHK5",1,0)
ORKCHK5 ; slc/CLA - Support routine called by ORKCHK to do ACCEPT mode order checks ;3/6/97  9:35
"RTN","ORKCHK5",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,74,94,123,190**;Dec 17, 1997
"RTN","ORKCHK5",3,0)
 Q
"RTN","ORKCHK5",4,0)
 ;
"RTN","ORKCHK5",5,0)
EN(ORKS,ORKDFN,ORKA,ORENT,ORKTMODE) ;perform order checking for orderable item acceptance
"RTN","ORKCHK5",6,0)
 Q:$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE",1,"I")="D"
"RTN","ORKCHK5",7,0)
 ;
"RTN","ORKCHK5",8,0)
 N OI,ORKDG,HL7,ODT,ORNUM,HL7NPTR,HL7NTXT,HL7NCOD,HL7LPTR,HL7LTXT,HL7LCOD
"RTN","ORKCHK5",9,0)
 N OCN,DNGR,ORKMSG,ORKPDATA,ORKOCNUM
"RTN","ORKCHK5",10,0)
 ;
"RTN","ORKCHK5",11,0)
 S OI=$P(ORKA,"|"),ORKDG=$P(ORKA,"|",2),HL7=$P(ORKA,"|",3)
"RTN","ORKCHK5",12,0)
 S ODT=$P(ORKA,"|",4),ORNUM=$P(ORKA,"|",5),ORKPDATA=$P(ORKA,"|",6)
"RTN","ORKCHK5",13,0)
 S HL7NPTR=$P(HL7,U),HL7NTXT=$P(HL7,U,2),HL7NCOD=$P(HL7,U,3)
"RTN","ORKCHK5",14,0)
 S HL7LPTR=$P(HL7,U,4),HL7LTXT=$P(HL7,U,5),HL7LCOD=$P(HL7,U,6)
"RTN","ORKCHK5",15,0)
 I ORKDG="GMRC",'$L(ODT) S ODT=$$NOW^XLFDT  ;def consult order d/t is now
"RTN","ORKCHK5",16,0)
 ;
"RTN","ORKCHK5",17,0)
 I $E(ORKDG,1,2)="PS" D PHARM
"RTN","ORKCHK5",18,0)
 I $E(ORKDG,1,2)'="PS",($E(ORKDG,1,2)'="LR"),($L($G(OI))),($L($G(ODT))),(ORKTMODE'="ALL") D DUPOR
"RTN","ORKCHK5",19,0)
 I $E(ORKDG,1,2)="LR",($L($G(OI))),($L($G(ODT))),(ORKTMODE'="ALL") D
"RTN","ORKCHK5",20,0)
 .D DUPLAB
"RTN","ORKCHK5",21,0)
 .D LABFREQ
"RTN","ORKCHK5",22,0)
 I $E(ORKDG,1,2)'="PS" D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"ACCEPT")
"RTN","ORKCHK5",23,0)
 Q
"RTN","ORKCHK5",24,0)
 ;
"RTN","ORKCHK5",25,0)
PHARM ;process pharmacy order checks:
"RTN","ORKCHK5",26,0)
 N ORPSPKG,ORPSA,ORKDD
"RTN","ORKCHK5",27,0)
 N ORALLRN,ORALLRF,ORALLRD
"RTN","ORKCHK5",28,0)
 D PARAMS("ALLERGY-DRUG INTERACTION",.ORALLRN,.ORALLRF,.ORALLRD)
"RTN","ORKCHK5",29,0)
 ;
"RTN","ORKCHK5",30,0)
 ;dispense drug selected:
"RTN","ORKCHK5",31,0)
 I $L($G(HL7LPTR)),($G(HL7LCOD)="99PSD") D
"RTN","ORKCHK5",32,0)
 .D RXOCS
"RTN","ORKCHK5",33,0)
 .D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"ACCEPT")
"RTN","ORKCHK5",34,0)
 ;
"RTN","ORKCHK5",35,0)
 ;dispense drug NOT selected, split OI into dispense drugs:
"RTN","ORKCHK5",36,0)
 I '$L($G(HL7LPTR)) D
"RTN","ORKCHK5",37,0)
 .S ORPSPKG=$E(ORKDG,3)
"RTN","ORKCHK5",38,0)
 .I ORPSPKG="H" S ORPSPKG="X"  ;change to "X" if "H"erbal/non-VA med
"RTN","ORKCHK5",39,0)
 .I "IOX"[ORPSPKG D OI2DD(.ORPSA,OI,ORPSPKG)
"RTN","ORKCHK5",40,0)
 .S ORKDD=0 F  S ORKDD=$O(ORPSA(ORKDD)) Q:'ORKDD  D
"RTN","ORKCHK5",41,0)
 ..S HL7LTXT=ORPSA(ORKDD)
"RTN","ORKCHK5",42,0)
 ..S HL7NPTR=$P(ORKDD,";",2)
"RTN","ORKCHK5",43,0)
 ..S HL7LPTR=+ORKDD
"RTN","ORKCHK5",44,0)
 ..S HL7LCOD="99PSD",HL7NCOD="99NDF"
"RTN","ORKCHK5",45,0)
 ..S $P(HL7,U)=HL7NPTR,$P(HL7,U,3)=HL7NCOD
"RTN","ORKCHK5",46,0)
 ..S $P(HL7,U,4)=HL7LPTR,$P(HL7,U,5)=HL7LTXT,$P(HL7,U,6)=HL7LCOD
"RTN","ORKCHK5",47,0)
 ..S $P(ORKA,"|",3)=HL7  ;set these for MLM OCX call
"RTN","ORKCHK5",48,0)
 ..D RXOCS
"RTN","ORKCHK5",49,0)
 ..D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"ACCEPT")
"RTN","ORKCHK5",50,0)
 Q
"RTN","ORKCHK5",51,0)
 ;
"RTN","ORKCHK5",52,0)
RXOCS ;drug-allergy interaction
"RTN","ORKCHK5",53,0)
 Q:ORALLRF="D"
"RTN","ORKCHK5",54,0)
 N ORKAL
"RTN","ORKCHK5",55,0)
 I $L($G(HL7NPTR)),($G(HL7NCOD)="99NDF") D
"RTN","ORKCHK5",56,0)
 .D RXN^ORQQAL(.ORKAL,ORKDFN,"DR",HL7NPTR,$G(HL7LPTR)) I (ORKAL>0) D
"RTN","ORKCHK5",57,0)
 ..Q:$L($P(ORKAL,U,2))<1
"RTN","ORKCHK5",58,0)
 ..S ORKMSG="Previous adverse reaction to: "_$P(ORKAL,U,2)
"RTN","ORKCHK5",59,0)
 ..S ORKS("ORK",ORALLRD_","_$G(ORNUM)_","_$E(ORKMSG,1,225))=ORNUM_U_ORALLRN_U_ORALLRD_U_ORKMSG
"RTN","ORKCHK5",60,0)
 Q
"RTN","ORKCHK5",61,0)
 ;
"RTN","ORKCHK5",62,0)
OI2DD(ORPSA,OROI,ORPSPKG)       ;rtn dispense drugs for a PS OI
"RTN","ORKCHK5",63,0)
 N PSOI
"RTN","ORKCHK5",64,0)
 Q:'$D(^ORD(101.43,OROI,0))
"RTN","ORKCHK5",65,0)
 S PSOI=$P($P(^ORD(101.43,OROI,0),U,2),";")
"RTN","ORKCHK5",66,0)
 Q:+$G(PSOI)<1
"RTN","ORKCHK5",67,0)
 D DRG^PSSUTIL1(.ORPSA,PSOI,ORPSPKG)
"RTN","ORKCHK5",68,0)
 Q
"RTN","ORKCHK5",69,0)
 ;
"RTN","ORKCHK5",70,0)
DUPOR ;duplicate orders for non-pharmacy and non-lab:
"RTN","ORKCHK5",71,0)
 S OCN=0,OCN=$O(^ORD(100.8,"B","DUPLICATE ORDER",OCN))
"RTN","ORKCHK5",72,0)
 Q:+$G(OCN)<1
"RTN","ORKCHK5",73,0)
 Q:$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",OCN,"I")="D"
"RTN","ORKCHK5",74,0)
 N ORKOR S ORKOR=0
"RTN","ORKCHK5",75,0)
 D DUP^ORKOR(.ORKOR,ORKDFN,OI,ODT,ORKDG) I (ORKOR>0) D
"RTN","ORKCHK5",76,0)
 .S ORKOCNUM=+$P(ORKOR,U)
"RTN","ORKCHK5",77,0)
 .S DNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",OCN,"I")
"RTN","ORKCHK5",78,0)
 .S ORKMSG="Duplicate order: "_$P(ORKOR,U,2)
"RTN","ORKCHK5",79,0)
 .S ORKS("ORK",DNGR_","_$G(ORNUM)_","_ORKOCNUM_","_$E(ORKMSG,1,225))=ORNUM_U_OCN_U_DNGR_U_ORKMSG_U_ORKOCNUM
"RTN","ORKCHK5",80,0)
 Q
"RTN","ORKCHK5",81,0)
 ;
"RTN","ORKCHK5",82,0)
DUPLAB ;duplicate laboratory orders:
"RTN","ORKCHK5",83,0)
 N ORKLR,OCI
"RTN","ORKCHK5",84,0)
 S ORKLR=0,OCI=""
"RTN","ORKCHK5",85,0)
 S OCN=0,OCN=$O(^ORD(100.8,"B","DUPLICATE ORDER",OCN))
"RTN","ORKCHK5",86,0)
 Q:+$G(OCN)<1
"RTN","ORKCHK5",87,0)
 Q:$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",OCN,"I")="D"
"RTN","ORKCHK5",88,0)
 S DNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",OCN,"I")
"RTN","ORKCHK5",89,0)
 D DUP^ORKLR(.ORKLR,OI,ORKDFN,ODT,ORKPDATA)
"RTN","ORKCHK5",90,0)
 F  S OCI=$O(ORKLR(OCI)) Q:OCI=""  D
"RTN","ORKCHK5",91,0)
 .S ORKOCNUM=+$P(ORKLR(OCI),U)
"RTN","ORKCHK5",92,0)
 .S ORKMSG="Duplicate order: "_$P(ORKLR(OCI),U,2)
"RTN","ORKCHK5",93,0)
 .S ORKS("ORK",DNGR_","_$G(ORNUM)_","_ORKOCNUM_","_$E(ORKMSG,1,225))=ORNUM_U_OCN_U_DNGR_U_ORKMSG_U_ORKOCNUM
"RTN","ORKCHK5",94,0)
 Q
"RTN","ORKCHK5",95,0)
 ;
"RTN","ORKCHK5",96,0)
LABFREQ ;lab order frequency restrictions:
"RTN","ORKCHK5",97,0)
 N ORKLR,OCI
"RTN","ORKCHK5",98,0)
 S ORKLR=0,OCI=""
"RTN","ORKCHK5",99,0)
 S OCN=0,OCN=$O(^ORD(100.8,"B","LAB ORDER FREQ RESTRICTIONS",OCN))
"RTN","ORKCHK5",100,0)
 Q:+$G(OCN)<1
"RTN","ORKCHK5",101,0)
 Q:$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",OCN,"I")="D"
"RTN","ORKCHK5",102,0)
 S DNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",OCN,"I")
"RTN","ORKCHK5",103,0)
 D ORFREQ^ORKLR2(.ORKLR,OI,ORKDFN_";DPT(",ODT,ORKPDATA)
"RTN","ORKCHK5",104,0)
 S OCI="" F  S OCI=$O(ORKLR(OCI)) Q:OCI=""  D
"RTN","ORKCHK5",105,0)
 .S ORKMSG=$P(ORKLR(OCI),U,2)
"RTN","ORKCHK5",106,0)
 .S ORKS("ORK",DNGR_","_$G(ORNUM)_","_$E(ORKMSG,1,225))=ORNUM_U_OCN_U_DNGR_U_ORKMSG
"RTN","ORKCHK5",107,0)
 Q
"RTN","ORKCHK5",108,0)
 ;
"RTN","ORKCHK5",109,0)
PARAMS(ORKNAME,ORKNUM,ORKFLAG,ORKDNGR) ; get parameter values for an order chk
"RTN","ORKCHK5",110,0)
 S ORKNUM=0,ORKNUM=$O(^ORD(100.8,"B",ORKNAME,ORKNUM))
"RTN","ORKCHK5",111,0)
 S ORKFLAG=$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",ORKNUM,"I")
"RTN","ORKCHK5",112,0)
 S ORKDNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",ORKNUM,"I")
"RTN","ORKCHK5",113,0)
 Q
"RTN","ORKCHK6")
0^65^B27280482
"RTN","ORKCHK6",1,0)
ORKCHK6 ; slc/CLA - Support routine called by ORKCHK to do SESSION mode order checks ;3/6/97  9:35
"RTN","ORKCHK6",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,74,87,94,123,162,190**;Dec 17, 1997
"RTN","ORKCHK6",3,0)
 Q
"RTN","ORKCHK6",4,0)
 ;
"RTN","ORKCHK6",5,0)
EN(ORKS,ORKDFN,ORKA,ORENT,ORKTMODE) ;perform order checking for entire ordering session
"RTN","ORKCHK6",6,0)
 Q:$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE",1,"I")="D"
"RTN","ORKCHK6",7,0)
 ;
"RTN","ORKCHK6",8,0)
 N OI,ORKDG,HL7,ODT,ORNUM,HL7NPTR,HL7NTXT,HL7NCOD,HL7LPTR,HL7LTXT,HL7LCOD
"RTN","ORKCHK6",9,0)
 N ORKMSG,ORKDGI,ORKT,ORKTXT,ORKPDATA
"RTN","ORKCHK6",10,0)
 ;
"RTN","ORKCHK6",11,0)
 S OI=$P(ORKA,"|"),ORKDG=$P(ORKA,"|",2),HL7=$P(ORKA,"|",3)
"RTN","ORKCHK6",12,0)
 S ODT=$P(ORKA,"|",4),ORNUM=$P(ORKA,"|",5),ORKPDATA=$P(ORKA,"|",6)
"RTN","ORKCHK6",13,0)
 S HL7NPTR=$P(HL7,U),HL7NTXT=$P(HL7,U,2),HL7NCOD=$P(HL7,U,3)
"RTN","ORKCHK6",14,0)
 S HL7LPTR=$P(HL7,U,4),HL7LTXT=$P(HL7,U,5),HL7LCOD=$P(HL7,U,6)
"RTN","ORKCHK6",15,0)
 ;
"RTN","ORKCHK6",16,0)
 S:ORKDG="PSJ" ORKDG="PSI"
"RTN","ORKCHK6",17,0)
 I $E(ORKDG,1,2)="PS" D PHARM
"RTN","ORKCHK6",18,0)
 I $E(ORKDG,1,2)'="PS" D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SESSION")
"RTN","ORKCHK6",19,0)
 Q
"RTN","ORKCHK6",20,0)
 ;
"RTN","ORKCHK6",21,0)
PHARM ;process pharmacy order checks:
"RTN","ORKCHK6",22,0)
 N ORPSPKG,ORPSA,ORKDD
"RTN","ORKCHK6",23,0)
 N ORCRITN,ORCRITF,ORCRITD,ORSIGN,ORSIGF,ORSIGD,ORDUPN,ORDUPF,ORDUPD,ORDUPC,ORDUPCF,ORDUPCD
"RTN","ORKCHK6",24,0)
 ;
"RTN","ORKCHK6",25,0)
 D PARAMS("CRITICAL DRUG INTERACTION",.ORCRITN,.ORCRITF,.ORCRITD)
"RTN","ORKCHK6",26,0)
 D PARAMS("SIGNIFICANT DRUG INTERACTION",.ORSIGN,.ORSIGF,.ORSIGD)
"RTN","ORKCHK6",27,0)
 D PARAMS("DUPLICATE DRUG ORDER",.ORDUPN,.ORDUPF,.ORDUPD)
"RTN","ORKCHK6",28,0)
 D PARAMS("DUPLICATE DRUG CLASS ORDER",.ORDUPCN,.ORDUPCF,.ORDUPCD)
"RTN","ORKCHK6",29,0)
 ;
"RTN","ORKCHK6",30,0)
 ;dispense drug selected:
"RTN","ORKCHK6",31,0)
 I $L($G(HL7LPTR)),($G(HL7LCOD)="99PSD") D
"RTN","ORKCHK6",32,0)
 .D RXOCS
"RTN","ORKCHK6",33,0)
 .D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SESSION")
"RTN","ORKCHK6",34,0)
 ;
"RTN","ORKCHK6",35,0)
 ;dispense drug NOT selected, split OI into dispense drugs:
"RTN","ORKCHK6",36,0)
 I '$L($G(HL7LPTR)) D
"RTN","ORKCHK6",37,0)
 .S ORPSPKG=$E(ORKDG,3)
"RTN","ORKCHK6",38,0)
 .I ORPSPKG="H" S ORPSPKG="X"  ;change to "X" if "H"erbal/non-VA med
"RTN","ORKCHK6",39,0)
 .I "IOX"[ORPSPKG D OI2DD(.ORPSA,OI,ORPSPKG)
"RTN","ORKCHK6",40,0)
 .S ORKDD=0 F  S ORKDD=$O(ORPSA(ORKDD)) Q:'ORKDD  D
"RTN","ORKCHK6",41,0)
 ..S HL7LTXT=ORPSA(ORKDD)
"RTN","ORKCHK6",42,0)
 ..S HL7NPTR=$P(ORKDD,";",2)
"RTN","ORKCHK6",43,0)
 ..S HL7LPTR=+ORKDD
"RTN","ORKCHK6",44,0)
 ..S HL7LCOD="99PSD",HL7NCOD="99NDF"
"RTN","ORKCHK6",45,0)
 ..S $P(HL7,U)=HL7NPTR,$P(HL7,U,3)=HL7NCOD
"RTN","ORKCHK6",46,0)
 ..S $P(HL7,U,4)=HL7LPTR,$P(HL7,U,5)=HL7LTXT,$P(HL7,U,6)=HL7LCOD
"RTN","ORKCHK6",47,0)
 ..S $P(ORKA,"|",3)=HL7  ;set these for MLM OCX call
"RTN","ORKCHK6",48,0)
 ..D RXOCS
"RTN","ORKCHK6",49,0)
 ..D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SESSION")
"RTN","ORKCHK6",50,0)
 Q
"RTN","ORKCHK6",51,0)
 ;
"RTN","ORKCHK6",52,0)
RXOCS ;drug-drug interaction, duplicate drug order, duplicate drug class
"RTN","ORKCHK6",53,0)
 Q:ORCRITF_ORSIGF_ORDUPF_ORDUPCF'["E"  ;quit if none are "E"nabled
"RTN","ORKCHK6",54,0)
 N ORKRX,ORPSNUM
"RTN","ORKCHK6",55,0)
 I $L($G(HL7LPTR)),($G(HL7LCOD)="99PSD") D
"RTN","ORKCHK6",56,0)
 .D CHKSESS^ORKPS(.ORKRX,ORKDFN,HL7LPTR,OI,ORKPDATA,ORKDG)
"RTN","ORKCHK6",57,0)
 .N CHK,XX S CHK=0,XX=""
"RTN","ORKCHK6",58,0)
 .F  S CHK=$O(ORKRX(CHK)) Q:'CHK  D
"RTN","ORKCHK6",59,0)
 ..S XX=ORKRX(CHK)
"RTN","ORKCHK6",60,0)
 ..;
"RTN","ORKCHK6",61,0)
 ..;critical drug interaction:
"RTN","ORKCHK6",62,0)
 ..I $P(XX,U)="DI",$P(XX,U,5)="CRITICAL" D
"RTN","ORKCHK6",63,0)
 ...Q:ORCRITF="D"
"RTN","ORKCHK6",64,0)
 ...S ORPSNUM=$P(XX,U,8)  ;get the associated order number
"RTN","ORKCHK6",65,0)
 ...I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) S ORKT=$$FULLTEXT^ORQOR1(+ORPSNUM),ORKTXT=$P(ORKT,U)_" ["_$P(ORKT,U,2)_"]"
"RTN","ORKCHK6",66,0)
 ...E  S ORKTXT=$P(XX,U,3)
"RTN","ORKCHK6",67,0)
 ...S ORKMSG=$P(XX,U,5)_" drug-drug interaction: "_$P(XX,U,6)_" & "_$P(XX,U,7)
"RTN","ORKCHK6",68,0)
 ...S ORKS("ORK",ORCRITD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKMSG,1,225))=ORNUM_U_ORCRITN_U_ORCRITD_U_ORKMSG_" ("_ORKTXT_")"_U_$G(ORPSNUM)
"RTN","ORKCHK6",69,0)
 ..;
"RTN","ORKCHK6",70,0)
 ..;significant drug interaction:
"RTN","ORKCHK6",71,0)
 ..I $P(XX,U)="DI",$P(XX,U,5)="SIGNIFICANT" D
"RTN","ORKCHK6",72,0)
 ...Q:ORSIGF="D"
"RTN","ORKCHK6",73,0)
 ...S ORPSNUM=$P(XX,U,8)  ;get the associated order number
"RTN","ORKCHK6",74,0)
 ...I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) S ORKT=$$FULLTEXT^ORQOR1(+ORPSNUM),ORKTXT=$P(ORKT,U)_" ["_$P(ORKT,U,2)_"]"
"RTN","ORKCHK6",75,0)
 ...E  S ORKTXT=$P(XX,U,3)
"RTN","ORKCHK6",76,0)
 ...S ORKMSG=$P(XX,U,5)_" drug-drug interaction: "_$P(XX,U,6)_" & "_$P(XX,U,7)
"RTN","ORKCHK6",77,0)
 ...S ORKS("ORK",ORSIGD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKMSG,1,225))=ORNUM_U_ORSIGN_U_ORSIGD_U_ORKMSG_" ("_ORKTXT_")"_U_$G(ORPSNUM)
"RTN","ORKCHK6",78,0)
 ..;
"RTN","ORKCHK6",79,0)
 ..;duplicate drug:
"RTN","ORKCHK6",80,0)
 ..I $P(XX,U)="DD" D
"RTN","ORKCHK6",81,0)
 ...Q:ORDUPF="D"
"RTN","ORKCHK6",82,0)
 ...S ORPSNUM=$P(XX,U,4)  ;get the associated order number
"RTN","ORKCHK6",83,0)
 ...I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) S ORKT=$$FULLTEXT^ORQOR1(+ORPSNUM),ORKTXT=$P(ORKT,U)_" ["_$P(ORKT,U,2)_"]"
"RTN","ORKCHK6",84,0)
 ...E  S ORKTXT=$P(XX,U,3)
"RTN","ORKCHK6",85,0)
 ...S ORKMSG="Duplicate order: "_ORKTXT
"RTN","ORKCHK6",86,0)
 ...S ORKS("ORK",ORDUPD_","_$G(ORNUM)_","_ORPSNUM_",Duplicate order: "_$P(XX,U,3))=ORNUM_U_ORDUPN_U_ORDUPD_U_ORKMSG_U_$G(ORPSNUM)
"RTN","ORKCHK6",87,0)
 ..;
"RTN","ORKCHK6",88,0)
 ..;duplicate class:
"RTN","ORKCHK6",89,0)
 ..I $P(XX,U)="DC" D
"RTN","ORKCHK6",90,0)
 ...Q:ORDUPCF="D"
"RTN","ORKCHK6",91,0)
 ...S ORPSNUM=$P(XX,U,6)  ;get the associated order number
"RTN","ORKCHK6",92,0)
 ...I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) S ORKT=$$FULLTEXT^ORQOR1(+ORPSNUM),ORKTXT=$P(ORKT,U)_" ["_$P(ORKT,U,2)_"]"
"RTN","ORKCHK6",93,0)
 ...E  S ORKTXT=$P(XX,U,5)
"RTN","ORKCHK6",94,0)
 ...S ORKMSG="Duplicate drug class order: "_$P(XX,U,3)
"RTN","ORKCHK6",95,0)
 ...S ORKS("ORK",ORDUPCD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKMSG,1,225))=ORNUM_U_ORDUPCN_U_ORDUPCD_U_ORKMSG_" ("_ORKTXT_")"_U_$G(ORPSNUM)
"RTN","ORKCHK6",96,0)
 Q
"RTN","ORKCHK6",97,0)
 ;
"RTN","ORKCHK6",98,0)
OI2DD(ORPSA,OROI,ORPSPKG)       ;rtn dispense drugs for a PS OI
"RTN","ORKCHK6",99,0)
 N PSOI
"RTN","ORKCHK6",100,0)
 Q:'$D(^ORD(101.43,OROI,0))
"RTN","ORKCHK6",101,0)
 S PSOI=$P($P(^ORD(101.43,OROI,0),U,2),";")
"RTN","ORKCHK6",102,0)
 Q:+$G(PSOI)<1
"RTN","ORKCHK6",103,0)
 D DRG^PSSUTIL1(.ORPSA,PSOI,ORPSPKG)
"RTN","ORKCHK6",104,0)
 Q
"RTN","ORKCHK6",105,0)
 ;
"RTN","ORKCHK6",106,0)
PARAMS(ORKNAME,ORKNUM,ORKFLAG,ORKDNGR) ; get parameter values for an order chk
"RTN","ORKCHK6",107,0)
 S ORKNUM=0,ORKNUM=$O(^ORD(100.8,"B",ORKNAME,ORKNUM))
"RTN","ORKCHK6",108,0)
 S ORKFLAG=$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",ORKNUM,"I")
"RTN","ORKCHK6",109,0)
 S ORKDNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",ORKNUM,"I")
"RTN","ORKCHK6",110,0)
 Q
"RTN","ORKPS")
0^56^B71672869
"RTN","ORKPS",1,0)
ORKPS ; slc/CLA - Order checking support procedures for medications ;12/15/97 [3/18/04 10:28am]
"RTN","ORKPS",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,74,94,123,141,190**;Dec 17, 1997
"RTN","ORKPS",3,0)
 Q
"RTN","ORKPS",4,0)
CHECK(YY,DFN,MED,OI,ORKDG) ; return drug order checks
"RTN","ORKPS",5,0)
 ;YY:    returned array of data
"RTN","ORKPS",6,0)
 ;DFN:   patient id
"RTN","ORKPS",7,0)
 ;MED:   drug ien [file #50]
"RTN","ORKPS",8,0)
 ;OI:    orderable item ien [file #101.43
"RTN","ORKPS",9,0)
 ;ORKDG: display group (should be PSI, PSIV, PSO or PSH)
"RTN","ORKPS",10,0)
 ; returned info: varies for ^TMP($J x-ref - refer to listings below
"RTN","ORKPS",11,0)
 K ^TMP($J,"DI"),^TMP($J,"DD"),^TMP($J,"DC")
"RTN","ORKPS",12,0)
 N ORDFN S ORDFN=DFN
"RTN","ORKPS",13,0)
 D EN^PSOORDRG(DFN,MED)
"RTN","ORKPS",14,0)
 D PROCESS(OI,ORDFN,ORKDG)
"RTN","ORKPS",15,0)
 K ^TMP($J,"DI"),^TMP($J,"DD"),^TMP($J,"DC")
"RTN","ORKPS",16,0)
 Q
"RTN","ORKPS",17,0)
CHKSESS(YY,DFN,MED,OI,ORKPDATA,ORKDG) ; return drug order checks for session
"RTN","ORKPS",18,0)
 N ORKDGI,ORKDRUG,ORKDRUGA,ORKORN,HOR,SEQ,CNT,CNTX,ORKOI
"RTN","ORKPS",19,0)
 N ORKFLG,ORSESS,ORPSPKG,ORPSA,ORKDD,ORSNUM,ORNUM,DUPX,DUPORN
"RTN","ORKPS",20,0)
 N ORDFN S ORDFN=DFN
"RTN","ORKPS",21,0)
 S ORKFLG=0
"RTN","ORKPS",22,0)
 S ORNUM=$P(ORKA,"|",5)
"RTN","ORKPS",23,0)
 ;
"RTN","ORKPS",24,0)
 ;get other session med orders:
"RTN","ORKPS",25,0)
 I $D(^TMP("ORKA",$J)) D
"RTN","ORKPS",26,0)
 .S CNT=^TMP("ORKA",$J) F CNTX=1:1:CNT D
"RTN","ORKPS",27,0)
 ..S ORSESS=$G(^TMP("ORKA",$J,CNTX))
"RTN","ORKPS",28,0)
 ..Q:'$L(ORSESS)
"RTN","ORKPS",29,0)
 ..S ORPSPKG=$P(ORSESS,"|",2)
"RTN","ORKPS",30,0)
 ..Q:'$L(ORPSPKG)
"RTN","ORKPS",31,0)
 ..Q:$E(ORPSPKG,1,2)'="PS"
"RTN","ORKPS",32,0)
 ..S ORSNUM=$P(ORSESS,"|",5)
"RTN","ORKPS",33,0)
 ..S ORKOI=$P(ORSESS,"|")
"RTN","ORKPS",34,0)
 ..;quit if same order/oi:
"RTN","ORKPS",35,0)
 ..Q:((+$G(ORNUM)=+$G(ORSNUM))&(+$G(OI)=+$G(ORKOI)))
"RTN","ORKPS",36,0)
 ..S:ORPSPKG="PSJ" ORPSPKG="PSI"
"RTN","ORKPS",37,0)
 ..S ORKDRUG=$P($P(ORSESS,"|",3),U,4)
"RTN","ORKPS",38,0)
 ..;
"RTN","ORKPS",39,0)
 ..;if no disp drug selected get disp drug(s) from OI:
"RTN","ORKPS",40,0)
 ..I +$G(ORKDRUG)<1,$L(ORKOI) D
"RTN","ORKPS",41,0)
 ...I "IOH"[$E(ORPSPKG,3) D OI2DD(.ORPSA,ORKOI,$E(ORPSPKG,3)) D
"RTN","ORKPS",42,0)
 ....S ORKDD=0 F  S ORKDD=$O(ORPSA(ORKDD)) Q:'ORKDD  D
"RTN","ORKPS",43,0)
 .....S ORKDRUG=+ORKDD
"RTN","ORKPS",44,0)
 .....S:+$G(ORKDRUG)>0 ORKDRUGA(ORKDRUG_";"_ORPSPKG_";"_ORSNUM)=ORSNUM
"RTN","ORKPS",45,0)
 ...K ORPSA  ;need to clean out between calls to OI2DD
"RTN","ORKPS",46,0)
 ..;
"RTN","ORKPS",47,0)
 ..Q:+$G(ORKDRUG)<1
"RTN","ORKPS",48,0)
 ..;if dispense drug selected add to array:
"RTN","ORKPS",49,0)
 ..S ORKDRUGA(ORKDRUG_";"_ORPSPKG_";"_ORSNUM)=ORSNUM
"RTN","ORKPS",50,0)
 ;
"RTN","ORKPS",51,0)
 ;get unsigned medication orders:
"RTN","ORKPS",52,0)
 S HOR=0,SEQ=0
"RTN","ORKPS",53,0)
 S HOR=$O(^TMP("ORR",$J,HOR)) I +$G(HOR)>0 D
"RTN","ORKPS",54,0)
 .F  S SEQ=$O(^TMP("ORR",$J,HOR,SEQ)) Q:+SEQ<1  D
"RTN","ORKPS",55,0)
 ..S ORKORN=+$P(^TMP("ORR",$J,HOR,SEQ),U),DUPORN=0
"RTN","ORKPS",56,0)
 ..Q:+$G(ORKORN)<1
"RTN","ORKPS",57,0)
 ..Q:+ORKORN=+ORNUM
"RTN","ORKPS",58,0)
 ..Q:$P(^OR(100,+ORKORN,8,$P(^OR(100,+ORKORN,8,0),U,3),0),U,2)="DC"
"RTN","ORKPS",59,0)
 ..Q:$P(^ORD(100.01,$P(^OR(100,+ORKORN,3),U,3),0),U)="DISCONTINUED"
"RTN","ORKPS",60,0)
 ..S ORKDRUG=$$VALUE^ORCSAVE2(+ORKORN,"DRUG") ;get disp drug for order
"RTN","ORKPS",61,0)
 ..;only process vs. unsigned med order if disp drug is assoc w/order:
"RTN","ORKPS",62,0)
 ..Q:+$G(ORKDRUG)<1
"RTN","ORKPS",63,0)
 ..S ORPSPKG=$$DGRX^ORQOR2(+ORKORN)
"RTN","ORKPS",64,0)
 ..S ORPSPKG=$S(ORPSPKG="UNIT DOSE MEDICATIONS":"PSI",ORPSPKG="OUTPATIENT MEDICATIONS":"PSO",ORPSPKG="IV MEDICATIONS":"PSIV",ORPSPKG="NON-VA MEDICATIONS":"PSH",1:"")
"RTN","ORKPS",65,0)
 ..S DUPX="" F  S DUPX=$O(ORKDRUGA(DUPX)) Q:'DUPX!(DUPORN=1)  D
"RTN","ORKPS",66,0)
 ...S:ORKORN=ORKDRUGA(DUPX) DUPORN=1
"RTN","ORKPS",67,0)
 ..Q:DUPORN=1  ;quit if already processed drug order
"RTN","ORKPS",68,0)
 ..S ORKDRUGA(+ORKDRUG_";"_ORPSPKG_";"_ORKORN)=ORKORN
"RTN","ORKPS",69,0)
 ;
"RTN","ORKPS",70,0)
 K ^TMP($J,"DI"),^TMP($J,"DD"),^TMP($J,"DC")
"RTN","ORKPS",71,0)
 I $D(ORKDRUGA) D DRGCHK^PSOORDRG(DFN,MED,.ORKDRUGA)
"RTN","ORKPS",72,0)
 D PROCESS(OI,ORDFN,ORKDG)
"RTN","ORKPS",73,0)
 K ^TMP($J,"DI"),^TMP($J,"DD"),^TMP($J,"DC")
"RTN","ORKPS",74,0)
 Q
"RTN","ORKPS",75,0)
PROCESS(OI,DFN,ORKDG) ;process data from pharmacy order check API
"RTN","ORKPS",76,0)
 Q:'$D(^TMP($J))
"RTN","ORKPS",77,0)
 N II,XX,ZZ,ZZD,ORTYPE,ORMTYPE,ORN,ORZ
"RTN","ORKPS",78,0)
 S II=1,XX=0,ZZ="",ZZD=""
"RTN","ORKPS",79,0)
 ;
"RTN","ORKPS",80,0)
 ;check to determine if inpatient or outpatient:
"RTN","ORKPS",81,0)
 I $L(ORKDG) S ORTYPE=$S($G(ORKDG)="PSI":"I",$G(ORKDG)="PSO":"O",$G(ORKDG)="PSIV":"I",$G(ORKDG)="PSH":"O",1:"")
"RTN","ORKPS",82,0)
 I '$L(ORTYPE) D  ;if no display group
"RTN","ORKPS",83,0)
 .D ADM^VADPT2
"RTN","ORKPS",84,0)
 .S ORTYPE=$S(+$G(VADMVT)>0:"I",1:"O")
"RTN","ORKPS",85,0)
 .K VADMVT
"RTN","ORKPS",86,0)
 ;
"RTN","ORKPS",87,0)
 ; drug-drug interactions:
"RTN","ORKPS",88,0)
 F  S XX=$O(^TMP($J,"DI",XX)) Q:XX<1  D
"RTN","ORKPS",89,0)
 .S ZZ=$G(^TMP($J,"DI",XX,0))
"RTN","ORKPS",90,0)
 .S ORN=$P($P(ZZ,U,7),";"),ORZ=""
"RTN","ORKPS",91,0)
 .I $L(ORN),$D(^OR(100,ORN,8,0)) S ORZ=^OR(100,ORN,8,0)
"RTN","ORKPS",92,0)
 .I $L($G(ORZ)),($P(^OR(100,ORN,8,$P(ORZ,U,3),0),U,2)="DC") Q
"RTN","ORKPS",93,0)
 .I $L(ORN),$P(^ORD(100.01,$P(^OR(100,ORN,3),U,3),0),U)="DISCONTINUED" Q
"RTN","ORKPS",94,0)
 .I ZZ'="" S YY(II)="DI^"_ZZ,II=II+1
"RTN","ORKPS",95,0)
 ;
"RTN","ORKPS",96,0)
 ; duplicate drugs:
"RTN","ORKPS",97,0)
 Q:$$SOLUT(OI)  ;quit if the orderable item is a solution (RX EP specs
"RTN","ORKPS",98,0)
 ;require that we do not perform dup drug/class OCs for solutions)
"RTN","ORKPS",99,0)
 S XX=0,ZZ=""
"RTN","ORKPS",100,0)
 F  S XX=$O(^TMP($J,"DD",XX)) Q:XX<1  D
"RTN","ORKPS",101,0)
 .S ZZ=$G(^TMP($J,"DD",XX,0)),ORMTYPE=$P($P(ZZ,U,4),";",2)
"RTN","ORKPS",102,0)
 .I $G(ORTYPE)'=$G(ORMTYPE) Q
"RTN","ORKPS",103,0)
 .S ORN=$P($P(ZZ,U,3),";"),ORZ=""
"RTN","ORKPS",104,0)
 .Q:+$G(ORN)=+$G(ORIFN)  ;QUIT if dup med ord # = current ord #
"RTN","ORKPS",105,0)
 .I $L(ORN),$D(^OR(100,ORN,8,0)) S ORZ=^OR(100,ORN,8,0)
"RTN","ORKPS",106,0)
 .I $L($G(ORZ)),($P(^OR(100,ORN,8,$P(ORZ,U,3),0),U,2)="DC") Q
"RTN","ORKPS",107,0)
 .I $L(ORN),$P(^ORD(100.01,$P(^OR(100,ORN,3),U,3),0),U)="DISCONTINUED" Q
"RTN","ORKPS",108,0)
 .I ZZ'="" S YY(II)="DD^"_ZZ,II=II+1
"RTN","ORKPS",109,0)
 ;
"RTN","ORKPS",110,0)
 ; duplicate classes:
"RTN","ORKPS",111,0)
 Q:$$SUPPLY(OI)  ;quit if the orderable item is a supply
"RTN","ORKPS",112,0)
 S XX=0,ZZ=""
"RTN","ORKPS",113,0)
 F  S XX=$O(^TMP($J,"DC",XX)) Q:XX<1  D
"RTN","ORKPS",114,0)
 .S ZZ=$G(^TMP($J,"DC",XX,0)),ORMTYPE=$P($P(ZZ,U,6),";",2)
"RTN","ORKPS",115,0)
 .I $G(ORTYPE)'=$G(ORMTYPE) Q
"RTN","ORKPS",116,0)
 .S ORN=$P($P(ZZ,U,5),";"),ORZ=""
"RTN","ORKPS",117,0)
 .Q:+$G(ORN)=+$G(ORIFN)  ;QUIT if dup class ord # = current ord #
"RTN","ORKPS",118,0)
 .I $L(ORN),$D(^OR(100,ORN,8,0)) S ORZ=^OR(100,ORN,8,0)
"RTN","ORKPS",119,0)
 .I $L($G(ORZ)),($P(^OR(100,ORN,8,$P(ORZ,U,3),0),U,2)="DC") Q
"RTN","ORKPS",120,0)
 .I $L(ORN),$P(^ORD(100.01,$P(^OR(100,ORN,3),U,3),0),U)="DISCONTINUED" Q
"RTN","ORKPS",121,0)
 .I ZZ'="" S YY(II)="DC^"_ZZ,II=II+1
"RTN","ORKPS",122,0)
 Q
"RTN","ORKPS",123,0)
TAKEMED(ORKDFN,ORKMED) ;extrinsic function returns med orderable item if any
"RTN","ORKPS",124,0)
 ;active med patient is taking contains any piece of ORKMED
"RTN","ORKPS",125,0)
 ;ORKDFN   patient DFN
"RTN","ORKPS",126,0)
 ;ORKMED   meds to check vs. active med list in format MED1^MED2^MED3...
"RTN","ORKPS",127,0)
 Q:'$L($G(ORKDFN)) "0^Patient not identified."
"RTN","ORKPS",128,0)
 Q:'$L($G(ORKMED)) "0^Medication not identified."
"RTN","ORKPS",129,0)
 N ORKARX,ORKY,ORI,ORJ,ORCNT,ORKMEDP,ORKRSLT
"RTN","ORKPS",130,0)
 D LIST^ORQQPS(.ORKY,ORKDFN,"","")
"RTN","ORKPS",131,0)
 Q:$P(ORKY(1),U)="" "0^No active meds found."
"RTN","ORKPS",132,0)
 S ORKRSLT="0^No matching meds found."
"RTN","ORKPS",133,0)
 S ORCNT=$L(ORKMED,U)
"RTN","ORKPS",134,0)
 S ORI=0 F  S ORI=$O(ORKY(ORI)) Q:ORI<1  D
"RTN","ORKPS",135,0)
 .S ORKARX=$P(ORKY(ORI),U,2)
"RTN","ORKPS",136,0)
 .F ORJ=1:1:ORCNT S ORKMEDP=$P(ORKMED,U,ORJ) D
"RTN","ORKPS",137,0)
 ..I $L(ORKMEDP),(ORKARX[ORKMEDP) S ORKRSLT="1^"_ORKARX
"RTN","ORKPS",138,0)
 Q ORKRSLT
"RTN","ORKPS",139,0)
SOLUT(OI) ;extrinsic function returns 1 (true) if the orderable item is
"RTN","ORKPS",140,0)
 ; a solution (IV Base)
"RTN","ORKPS",141,0)
 Q:+$G(OI)<1 ""
"RTN","ORKPS",142,0)
 N OITEXT
"RTN","ORKPS",143,0)
 S OITEXT=$G(^ORD(101.43,OI,0))
"RTN","ORKPS",144,0)
 Q:'$L(OITEXT) ""
"RTN","ORKPS",145,0)
 S OITEXT=$P(OITEXT,U)
"RTN","ORKPS",146,0)
 Q:$D(^ORD(101.43,"S.IVB RX",OITEXT)) 1
"RTN","ORKPS",147,0)
 Q ""
"RTN","ORKPS",148,0)
POLYRX(DFN) ;extrins funct rtns 1 if patient exceeds polypharmacy, 0 if not
"RTN","ORKPS",149,0)
 N ORSLT,ORENT,ORLOC,ORPAR,ORMEDS
"RTN","ORKPS",150,0)
 S ORSLT=0
"RTN","ORKPS",151,0)
 Q:'$L(DFN) ORSLT
"RTN","ORKPS",152,0)
 ;get patient's location flag (INPATIENT ONLY - outpt locations cannot be
"RTN","ORKPS",153,0)
 ;reliably determined, and many simultaneous outpt locations can occur):
"RTN","ORKPS",154,0)
 S VA200="" D OERR^VADPT
"RTN","ORKPS",155,0)
 S ORLOC=+$G(^DIC(42,+VAIN(4),44))
"RTN","ORKPS",156,0)
 K VA200,VAIN
"RTN","ORKPS",157,0)
 S ORENT=+$G(ORLOC)_";SC(^DIV^SYS^PKG"
"RTN","ORKPS",158,0)
 S ORPAR=$$GET^XPAR(ORENT,"ORK POLYPHARMACY",1,"I")
"RTN","ORKPS",159,0)
 S ORMEDS=$$NUMRX(DFN)
"RTN","ORKPS",160,0)
 I $G(ORMEDS)>$G(ORPAR) S ORSLT=1
"RTN","ORKPS",161,0)
 Q ORSLT
"RTN","ORKPS",162,0)
GLCREAT(DFN) ;extrinsic function returns patient's (DFN) most recent serum
"RTN","ORKPS",163,0)
 ; creatinine within # of days from parameter ORK GLUCOPHAGE CREATININE
"RTN","ORKPS",164,0)
 ; results format: test id^result units flag ref range collect d/t^result
"RTN","ORKPS",165,0)
 ; used by order check GLUCOPHAGE-LAB RESULTS
"RTN","ORKPS",166,0)
 N ORLOC,ORPAR,ORDAYS
"RTN","ORKPS",167,0)
 N BDT,CDT,ORY,ORX,ORZ,TEST,ORI,ORJ,CREARSLT,LABFILE,SPECFILE,SPECIMEN
"RTN","ORKPS",168,0)
 Q:'$L(DFN) "0^"
"RTN","ORKPS",169,0)
 S ORDAYS=$$GCDAYS(DFN)
"RTN","ORKPS",170,0)
 Q:'$L(ORDAYS) "0^"
"RTN","ORKPS",171,0)
 D NOW^%DTC
"RTN","ORKPS",172,0)
 S BDT=$$FMADD^XLFDT(%,"-"_ORDAYS,"","","")
"RTN","ORKPS",173,0)
 K %
"RTN","ORKPS",174,0)
 Q:'$L($G(BDT)) "0^"
"RTN","ORKPS",175,0)
 S LABFILE=$$TERMLKUP^ORB31(.ORY,"SERUM CREATININE")
"RTN","ORKPS",176,0)
 Q:'$D(ORY) "0^" ;no link between SERUM CREATININE and local lab test
"RTN","ORKPS",177,0)
 Q:$G(LABFILE)'=60 "0^"
"RTN","ORKPS",178,0)
 S SPECFILE=$$TERMLKUP^ORB31(.ORX,"SERUM SPECIMEN")
"RTN","ORKPS",179,0)
 Q:'$D(ORX) "0^" ;no link between SERUM SPECIMEN and local specimen
"RTN","ORKPS",180,0)
 Q:$G(SPECFILE)'=61 "0^"
"RTN","ORKPS",181,0)
 F ORI=1:1:ORY I +$G(CREARSLT)<1 D
"RTN","ORKPS",182,0)
 .S TEST=$P(ORY(ORI),U)
"RTN","ORKPS",183,0)
 .Q:+$G(TEST)<1
"RTN","ORKPS",184,0)
 .F ORJ=1:1:ORX I +$G(CREARSLT)<1 D
"RTN","ORKPS",185,0)
 ..S SPECIMEN=$P(ORX(ORJ),U)
"RTN","ORKPS",186,0)
 ..Q:+$G(SPECIMEN)<1
"RTN","ORKPS",187,0)
 ..S ORZ=$$LOCL^ORQQLR1(DFN,TEST,SPECIMEN)
"RTN","ORKPS",188,0)
 ..Q:'$L($G(ORZ))
"RTN","ORKPS",189,0)
 ..S CDT=$P(ORZ,U,7)
"RTN","ORKPS",190,0)
 ..I CDT'<BDT S CREARSLT=1
"RTN","ORKPS",191,0)
 Q:+$G(CREARSLT)<1 "0^"
"RTN","ORKPS",192,0)
 Q $P(ORZ,U)_U_$P(ORZ,U,3)_" "_$P(ORZ,U,4)_" "_$P(ORZ,U,5)_" ("_$P(ORZ,U,6)_")  "_$$FMTE^XLFDT(CDT,"2P")_U_$P(ORZ,U,3)
"RTN","ORKPS",193,0)
GCDAYS(DFN) ;extrinsic function to return number of days to look for 
"RTN","ORKPS",194,0)
 ; glucophage serum creatinine result
"RTN","ORKPS",195,0)
 Q:'$L(DFN) ""
"RTN","ORKPS",196,0)
 N ORLOC,ORENT,ORDAYS
"RTN","ORKPS",197,0)
 ;get patient's location flag (INPATIENT ONLY - outpt locations cannot be
"RTN","ORKPS",198,0)
 ;reliably determined, and many simultaneous outpt locations can occur):
"RTN","ORKPS",199,0)
 S VA200="" D OERR^VADPT
"RTN","ORKPS",200,0)
 S ORLOC=+$G(^DIC(42,+VAIN(4),44))
"RTN","ORKPS",201,0)
 K VA200,VAIN
"RTN","ORKPS",202,0)
 S ORENT=+$G(ORLOC)_";SC(^DIV^SYS^PKG"
"RTN","ORKPS",203,0)
 S ORDAYS=$$GET^XPAR(ORENT,"ORK GLUCOPHAGE CREATININE",1,"I")
"RTN","ORKPS",204,0)
 Q:$L(ORDAYS) ORDAYS
"RTN","ORKPS",205,0)
 Q ""
"RTN","ORKPS",206,0)
SUPPLY(OI) ;extrinsic function returns 1 (true) if the orderable item is
"RTN","ORKPS",207,0)
 ; a supply
"RTN","ORKPS",208,0)
 Q:+$G(OI)<1 ""
"RTN","ORKPS",209,0)
 N OITEXT
"RTN","ORKPS",210,0)
 S OITEXT=$G(^ORD(101.43,OI,0))
"RTN","ORKPS",211,0)
 Q:'$L(OITEXT) ""
"RTN","ORKPS",212,0)
 S OITEXT=$P(OITEXT,U)
"RTN","ORKPS",213,0)
 Q:$D(^ORD(101.43,"S.SPLY",OITEXT)) 1
"RTN","ORKPS",214,0)
 Q ""
"RTN","ORKPS",215,0)
NUMRX(DFN) ;extrinsic funct returns number of active meds patient is taking
"RTN","ORKPS",216,0)
 N NUMRX,ORPTYPE,ORX,ORY,ORS,ORNUM,ORPRENEW
"RTN","ORKPS",217,0)
 S NUMRX=0
"RTN","ORKPS",218,0)
 Q:+$G(DFN)<1 NUMRX
"RTN","ORKPS",219,0)
 ;
"RTN","ORKPS",220,0)
 ;check to determine if inpatient or outpatient:
"RTN","ORKPS",221,0)
 D ADM^VADPT2
"RTN","ORKPS",222,0)
 S ORPTYPE=$S(+$G(VADMVT)>0:"I",1:"O")
"RTN","ORKPS",223,0)
 ;
"RTN","ORKPS",224,0)
 K ^TMP("PS",$J)
"RTN","ORKPS",225,0)
 D OCL^PSOORRL(DFN,"","")  ;if no date range, returns active meds for pt
"RTN","ORKPS",226,0)
 N X
"RTN","ORKPS",227,0)
 S X=0
"RTN","ORKPS",228,0)
 F  S X=$O(^TMP("PS",$J,X)) Q:X<1  D
"RTN","ORKPS",229,0)
 .S ORX=$G(^TMP("PS",$J,X,0))
"RTN","ORKPS",230,0)
 .S ORY=$P(ORX,U)
"RTN","ORKPS",231,0)
 .S ORNUM=$P(ORX,U,8) ;order entry order number
"RTN","ORKPS",232,0)
 .S ORS=$P(ORX,U,9) ;medication status from pharmacy
"RTN","ORKPS",233,0)
 .S ORPRENEW=$P(ORX,U,14)  ;pending renewal flag (1: pending renewal)
"RTN","ORKPS",234,0)
 .Q:+ORX<1
"RTN","ORKPS",235,0)
 .Q:$P(ORY,";",2)'=ORPTYPE  ;quit if med is not pt type (inpt/outpt)
"RTN","ORKPS",236,0)
 .;quit if status is a non-active type:
"RTN","ORKPS",237,0)
 .Q:$G(ORS)="EXPIRED"
"RTN","ORKPS",238,0)
 .Q:$G(ORS)["DISCONTINUE"
"RTN","ORKPS",239,0)
 .Q:$G(ORS)="DELETED"
"RTN","ORKPS",240,0)
 .Q:+$G(ORPRENEW)>0
"RTN","ORKPS",241,0)
 .Q:$$SUPPLY($$OI^ORQOR2(ORNUM))=1  ;quit if a supply
"RTN","ORKPS",242,0)
 .S NUMRX=NUMRX+1
"RTN","ORKPS",243,0)
 K ^TMP("PS",$J)
"RTN","ORKPS",244,0)
 Q NUMRX
"RTN","ORKPS",245,0)
OI2DD(ORPSA,OROI,ORPSPKG)       ;rtn dispense drugs for a PS OI
"RTN","ORKPS",246,0)
 N PSOI
"RTN","ORKPS",247,0)
 Q:'$D(^ORD(101.43,OROI,0))
"RTN","ORKPS",248,0)
 S PSOI=$P($P(^ORD(101.43,OROI,0),U,2),";")
"RTN","ORKPS",249,0)
 Q:+$G(PSOI)<1
"RTN","ORKPS",250,0)
 S:ORPSPKG="H" ORPSPKG="X"  ;if non-va med need to pass api "X"
"RTN","ORKPS",251,0)
 D DRG^PSSUTIL1(.ORPSA,PSOI,ORPSPKG)
"RTN","ORKPS",252,0)
 Q
"RTN","ORMBLD")
0^6^B39557652
"RTN","ORMBLD",1,0)
ORMBLD ; SLC/MKB/JDL - Build outgoing ORM msgs ;11/24/00  13:09
"RTN","ORMBLD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,33,26,45,79,97,133,168,187,190**;Dec 17, 1997
"RTN","ORMBLD",3,0)
NEW(IFN,CODE) ; -- Send NW order message to pkg
"RTN","ORMBLD",4,0)
 ;I $P($G(^ORD(101.42,+$$VALUE^ORCSAVE2(IFN,"URGENCY"),0)),U)="DONE" D STATUS^ORCSAVE2(IFN,2) Q  ; complete -> don't send to pkg
"RTN","ORMBLD",5,0)
 N ORPKG,ORMSG,DGQUIET K ^TMP("ORWORD",$J)
"RTN","ORMBLD",6,0)
 S DGQUIET=1 D  Q:'$O(ORMSG(0))  ;build msg, ORDIALOG gone when posted
"RTN","ORMBLD",7,0)
 . N OR0,OR3,OR8,ORVP,ORDG,ORDIALOG,ORPARENT S:'$D(CODE) CODE="NW"
"RTN","ORMBLD",8,0)
 . S OR0=$G(^OR(100,IFN,0)) Q:'$L(OR0)  S OR3=$G(^(3)),OR8=$G(^(8,1,0))
"RTN","ORMBLD",9,0)
 . S ORVP=$P(OR0,U,2),ORDG=$P(OR0,U,11),ORPKG=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORMBLD",10,0)
 . Q:"^GMRA^GMRC^FH^LR^PS^RA^OR^"'[(U_ORPKG_U)
"RTN","ORMBLD",11,0)
 . S ORDIALOG=+$P(OR0,U,5) Q:'ORDIALOG
"RTN","ORMBLD",12,0)
 . D GETDLG1^ORCD(ORDIALOG),GETORDER^ORCD(IFN)
"RTN","ORMBLD",13,0)
 . S ORMSG(1)=$$MSH("ORM",ORPKG),ORMSG(2)=$$PID(ORVP)
"RTN","ORMBLD",14,0)
 . S ORMSG(3)=$$PV1(ORVP,$P(OR0,U,12),+$P(OR0,U,10),"",$P(OR0,U,18))
"RTN","ORMBLD",15,0)
 . S ORPARENT=$P(OR3,U,9) I ORPARENT,$G(ORDIALOG($$PTR^ORCD("OR GTX SCHEDULE"),1))="NOW"!'$O(^OR(100,+ORPARENT,4.5,"ID","CONJ",0)) S ORPARENT="" ;no parent if NOW or only child
"RTN","ORMBLD",16,0)
 . S ORMSG(4)="ORC|"_CODE_"|"_+OR0_";1^OR||||||"_ORPARENT_"|"_$$HL7DATE($P(OR0,U,7))_"|"_+$P(OR0,U,6)_"||"_+$P(OR0,U,4)_"|||"_$$HL7DATE($$NOW^XLFDT)_"|"_$$NATURE($P(OR8,U,12))_"^^^"
"RTN","ORMBLD",17,0)
 . D @ORPKG K ^TMP("ORWORD",$J)
"RTN","ORMBLD",18,0)
 I $G(ORZTEST) M ORZTEST=ORMSG Q  ;testing only
"RTN","ORMBLD",19,0)
 D MSG^XQOR("OR EVSEND "_ORPKG,.ORMSG)
"RTN","ORMBLD",20,0)
 Q
"RTN","ORMBLD",21,0)
 ;
"RTN","ORMBLD",22,0)
MSG(IFN,CODE,REASON) ; -- Send all other order msgs
"RTN","ORMBLD",23,0)
 N ORPKG,ORMSG,DGQUIET K ^TMP("ORWORD",$J)
"RTN","ORMBLD",24,0)
 S DGQUIET=1 D  Q:'$O(ORMSG(0))  ; build message
"RTN","ORMBLD",25,0)
 . N OR0,OR8,DG,PKGID,I,TYPE,DA,PROV,NATR,STS,OI
"RTN","ORMBLD",26,0)
 . S OR0=$G(^OR(100,+IFN,0)),PKGID=$G(^(4)),STS=$P($G(^(3)),U,3)
"RTN","ORMBLD",27,0)
 . S ORPKG=$$NMSP^ORCD($P(OR0,U,14)) Q:"^GMRA^GMRC^FH^LR^PS^RA^OR^"'[(U_ORPKG_U)  S:ORPKG="LR" ORPKG="LRCH"
"RTN","ORMBLD",28,0)
 . S DA=+$P(IFN,";",2),OR8=$G(^OR(100,+IFN,8,DA,0))
"RTN","ORMBLD",29,0)
 . S PROV=$P(OR8,U,3),NATR=$P(OR8,U,12) S:'PROV PROV=$G(ORNP)
"RTN","ORMBLD",30,0)
 . S TYPE=$S(CODE="NA"!(CODE="DE"):"ORR",1:"ORM")
"RTN","ORMBLD",31,0)
 . S ORMSG(1)=$$MSH(TYPE,ORPKG),ORMSG(2)=$$PID($P(OR0,U,2)),I=2
"RTN","ORMBLD",32,0)
 . I ORPKG="PS" S I=I+1,ORMSG(I)=$$PV1($P(OR0,U,2),$P(OR0,U,12),+$P(OR0,U,10))
"RTN","ORMBLD",33,0)
 . S I=I+1,ORMSG(I)="ORC|"_CODE_"|"_IFN_"^OR|"_PKGID_U_ORPKG_"||||||"_$S($G(DGPMA):$$HL7DATE($P(DGPMA,U)),1:"")_"|"_DUZ_"||"_PROV_"|||"_$$HL7DATE($$NOW^XLFDT)_"|"_$$REASON(+$G(REASON),NATR)
"RTN","ORMBLD",34,0)
 . I ORPKG="FH",CODE="SS" S $P(ORMSG(I),"|",6)=$S(STS=8:"SC",STS=6:"IP",1:"")
"RTN","ORMBLD",35,0)
 . I $E(ORPKG,1,2)="LR" S OI=+$O(^OR(100,+IFN,.1,0)),OI=+$G(^(OI,0)) S:OI I=I+1,ORMSG(I)="OBR||||"_$$USID(OI)
"RTN","ORMBLD",36,0)
 . I $P(^ORD(100.98,$P(OR0,U,11),0),U)="NON-VA MEDICATIONS" D
"RTN","ORMBLD",37,0)
 . . I (CODE="CA")!(CODE="DC") S I=I+1,ORMSG(I)="ZRN|N"
"RTN","ORMBLD",38,0)
 . K ^TMP("ORWORD",$J)
"RTN","ORMBLD",39,0)
 D MSG^XQOR("OR EVSEND "_ORPKG,.ORMSG)
"RTN","ORMBLD",40,0)
 Q
"RTN","ORMBLD",41,0)
 ;
"RTN","ORMBLD",42,0)
BHS(PAT) ; -- Send batch header segment/message to Lab
"RTN","ORMBLD",43,0)
 N ORMSG S ORMSG(1)="BHS|^~\&|ORDER ENTRY|"_$G(DUZ(2))_"|LABORATORY|"_$G(DUZ(2))_"|"_$$HL7DATE($$NOW^XLFDT)
"RTN","ORMBLD",44,0)
 S ORMSG(2)=$$PID($G(PAT))
"RTN","ORMBLD",45,0)
 D MSG^XQOR("OR EVSEND LRCH",.ORMSG)
"RTN","ORMBLD",46,0)
 Q
"RTN","ORMBLD",47,0)
 ;
"RTN","ORMBLD",48,0)
BTS(PAT) ; -- Send batch trailer segment/message to Lab
"RTN","ORMBLD",49,0)
 N ORMSG S ORMSG(1)="BTS",ORMSG(2)=$$PID($G(PAT))
"RTN","ORMBLD",50,0)
 D MSG^XQOR("OR EVSEND LRCH",.ORMSG)
"RTN","ORMBLD",51,0)
 Q
"RTN","ORMBLD",52,0)
 ;
"RTN","ORMBLD",53,0)
MSH(TYPE,TO) ; -- MSH segment
"RTN","ORMBLD",54,0)
 N MSH
"RTN","ORMBLD",55,0)
 S MSH="MSH|^~\&|ORDER ENTRY|"_$G(DUZ(2))_"|"_$$NAME(TO)_"|"_$G(DUZ(2))_"|"_$$HL7DATE($$NOW^XLFDT)_"||"_TYPE
"RTN","ORMBLD",56,0)
 Q MSH
"RTN","ORMBLD",57,0)
 ;
"RTN","ORMBLD",58,0)
NAME(NMSP) ; -- Returns name of pkg NMSP
"RTN","ORMBLD",59,0)
 I NMSP="GMRA" Q "ALLERGIES"
"RTN","ORMBLD",60,0)
 I NMSP="GMRC" Q "CONSULTS"
"RTN","ORMBLD",61,0)
 I NMSP="FH" Q "DIETETICS"
"RTN","ORMBLD",62,0)
 I NMSP?1"LR".E Q "LABORATORY"
"RTN","ORMBLD",63,0)
 I NMSP="PS" Q "PHARMACY"
"RTN","ORMBLD",64,0)
 I NMSP="RA" Q "RADIOLOGY"
"RTN","ORMBLD",65,0)
 I NMSP="OR" Q "ORDER ENTRY"
"RTN","ORMBLD",66,0)
 Q ""
"RTN","ORMBLD",67,0)
 ;
"RTN","ORMBLD",68,0)
PID(DFN) ; -- PID segment
"RTN","ORMBLD",69,0)
 N PID,PTR,ROOT
"RTN","ORMBLD",70,0)
 S PTR=+$P(DFN,";"),ROOT=$P(DFN,";",2),PID="PID|||"
"RTN","ORMBLD",71,0)
 I ROOT="DPT(" S PID=PID_PTR_"||"_$P($G(^DPT(PTR,0)),U)
"RTN","ORMBLD",72,0)
 E  S PID=PID_"|"_DFN_"|"_$S($L(ROOT):$P($G(@(U_ROOT_PTR_",0)")),U),1:"")
"RTN","ORMBLD",73,0)
 Q PID
"RTN","ORMBLD",74,0)
 ;
"RTN","ORMBLD",75,0)
PV1(OBJ,TYPE,LOC,VISIT,APPTDT) ; -- PV1 segment
"RTN","ORMBLD",76,0)
 N PV1,RB,PACH S RB=""
"RTN","ORMBLD",77,0)
 S:$G(APPTDT) APPTDT=$$FMTHL7^XLFDT(APPTDT)
"RTN","ORMBLD",78,0)
 I TYPE="I",+OBJ,$P(OBJ,";",2)="DPT(" S RB=$P($G(^DPT(+OBJ,.101)),U)
"RTN","ORMBLD",79,0)
 S PACH=$$PATCH^XPDUTL("PSJ*5.0*111")
"RTN","ORMBLD",80,0)
 S:PACH PV1="PV1||"_TYPE_"|"_LOC_$S($L(RB):U_RB,1:"")_"||||||||||||||||"_$G(VISIT)_"|||||||||||||||||||||||||"_$G(APPTDT)
"RTN","ORMBLD",81,0)
 S:'PACH PV1="PV1||"_TYPE_"|"_LOC_$S($L(RB):U_RB,1:"")_"||||||||||||||||"_$G(VISIT)
"RTN","ORMBLD",82,0)
 Q PV1
"RTN","ORMBLD",83,0)
 ;
"RTN","ORMBLD",84,0)
HL7DATE(DATE) ; -- FM -> HL7 format
"RTN","ORMBLD",85,0)
 Q $$FMTHL7^XLFDT(DATE)  ;**97
"RTN","ORMBLD",86,0)
 ;
"RTN","ORMBLD",87,0)
USID(OI) ; -- Returns Univ Serv ID for Orderable Item
"RTN","ORMBLD",88,0)
 N OITEM,NATL,LOCAL S OITEM=$G(^ORD(101.43,+OI,0))
"RTN","ORMBLD",89,0)
 S NATL=$P(OITEM,U,3)_U_U_$P(OITEM,U,4)
"RTN","ORMBLD",90,0)
 S LOCAL=$P($P(OITEM,U,2),";")_U_$P(OITEM,U)_U_$P($P(OITEM,U,2),";",2)
"RTN","ORMBLD",91,0)
 Q NATL_U_LOCAL
"RTN","ORMBLD",92,0)
 ;
"RTN","ORMBLD",93,0)
NATURE(X) ; -- Returns 3 ^-piece identifier for nature X
"RTN","ORMBLD",94,0)
 N ORN,Y S ORN=$G(^ORD(100.02,+$G(X),0))
"RTN","ORMBLD",95,0)
 S Y=$P(ORN,U,2)_U_$P(ORN,U)_"^99ORN"
"RTN","ORMBLD",96,0)
 Q Y
"RTN","ORMBLD",97,0)
 ;
"RTN","ORMBLD",98,0)
REASON(X,N) ; -- Returns 6 ^-piece format of reason X
"RTN","ORMBLD",99,0)
 ;    N ^ NATURE ^ 99ORN ^ # ^ Reason ^ 99ORR
"RTN","ORMBLD",100,0)
 N Y,ORR S ORR=$G(^ORD(100.03,+$G(X),0))
"RTN","ORMBLD",101,0)
 S:'$G(N) N=+$P(ORR,U,7) S Y=$$NATURE(N)
"RTN","ORMBLD",102,0)
 S:$G(X) Y=Y_U_$S(ORPKG'="RA":+X,1:"")_U_$P(ORR,U)_"^99ORR"
"RTN","ORMBLD",103,0)
 Q Y
"RTN","ORMBLD",104,0)
 ;
"RTN","ORMBLD",105,0)
IP() ; -- Returns ORIFN^Type if pt has active isolation order (or 0 if not)
"RTN","ORMBLD",106,0)
 N TYPE,START,ORIFN,Y
"RTN","ORMBLD",107,0)
 S TYPE=$O(^ORD(100.98,"B","PREC",0)),START=$$NOW^XLFDT,Y=0
"RTN","ORMBLD",108,0)
 F  S START=$O(^OR(100,"AW",ORVP,TYPE,START),-1) Q:START'>0  S ORIFN=$O(^(START,0)) I $P($G(^OR(100,ORIFN,3)),U,3)=6 S Y=ORIFN Q
"RTN","ORMBLD",109,0)
 I Y S TYPE=$$VALUE^ORCSAVE2(ORIFN,"ISOLATION"),Y=Y_U_$$GET1^DIQ(119.4,+TYPE_",",.01)
"RTN","ORMBLD",110,0)
 Q Y
"RTN","ORMBLD",111,0)
 ;
"RTN","ORMBLD",112,0)
OR ; -- new Generic order
"RTN","ORMBLD",113,0)
 I ORDG=$O(^ORD(100.98,"B","M.A.S.",0)) D ADT^ORMBLDOR Q
"RTN","ORMBLD",114,0)
 D EN^ORMBLDOR
"RTN","ORMBLD",115,0)
 Q
"RTN","ORMBLD",116,0)
 ;
"RTN","ORMBLD",117,0)
GMRA ; -- new Allergy order
"RTN","ORMBLD",118,0)
 D ALG^ORMBLDAL
"RTN","ORMBLD",119,0)
 Q
"RTN","ORMBLD",120,0)
 ;
"RTN","ORMBLD",121,0)
GMRC ; -- new Consult order
"RTN","ORMBLD",122,0)
 D CSLT^ORMBLDGM
"RTN","ORMBLD",123,0)
 Q
"RTN","ORMBLD",124,0)
 ;
"RTN","ORMBLD",125,0)
FH ; -- new Diet order
"RTN","ORMBLD",126,0)
 N ORPARAM D EN^FHWOR8(+ORVP,.ORPARAM) ; set parameters
"RTN","ORMBLD",127,0)
 S:'$L($G(ORPARAM(3))) ORPARAM(3)="T"
"RTN","ORMBLD",128,0)
 I ORDG=$O(^ORD(100.98,"B","PRECAUTIONS",0)) D IP^ORMBLDFH Q
"RTN","ORMBLD",129,0)
 I ORDG=$O(^ORD(100.98,"B","EARLY/LATE TRAYS",0)) D TRAY^ORMBLDFH Q
"RTN","ORMBLD",130,0)
 I ORDG=$O(^ORD(100.98,"B","TUBEFEEDINGS",0)) D TF^ORMBLDFH Q
"RTN","ORMBLD",131,0)
 I ORDG=$O(^ORD(100.98,"B","DIET ADDITIONAL ORDERS",0)) D ADDN^ORMBLDFH Q
"RTN","ORMBLD",132,0)
 D DIET^ORMBLDFH
"RTN","ORMBLD",133,0)
 Q
"RTN","ORMBLD",134,0)
 ;
"RTN","ORMBLD",135,0)
LR ; -- new Lab order
"RTN","ORMBLD",136,0)
 I CODE="XO" D XO^ORMBLDLR Q  ; change
"RTN","ORMBLD",137,0)
 D CH^ORMBLDLR S ORPKG="LRCH" Q  ;no difference by subscript at this time
"RTN","ORMBLD",138,0)
 N SUB S SUB=$P($G(^ORD(100.98,ORDG,0)),U,3)
"RTN","ORMBLD",139,0)
 S:(SUB="SP")!(SUB="EM")!(SUB="AU")!(SUB="CY") SUB="AP"
"RTN","ORMBLD",140,0)
 S:(SUB="LAB")!(SUB="MI")!(SUB="HEMA") SUB="CH"
"RTN","ORMBLD",141,0)
 D @(SUB_"^ORMBLDLR") S ORPKG=ORPKG_SUB
"RTN","ORMBLD",142,0)
 Q
"RTN","ORMBLD",143,0)
 ;
"RTN","ORMBLD",144,0)
PS ; -- new Pharmacy order
"RTN","ORMBLD",145,0)
 ;I ORDG=$O(^ORD(100.98,"B","OUTPATIENT MEDICATIONS",0)) D OUT^ORMBLDPS Q
"RTN","ORMBLD",146,0)
 ;D UD^ORMBLDPS
"RTN","ORMBLD",147,0)
 N PKG S PKG=$P(OR0,U,14),PKG=$$GET1^DIQ(9.4,+PKG_",",1)
"RTN","ORMBLD",148,0)
 I +$$VALUE^ORCSAVE2(IFN,"URGENCY")=99,PKG="PSO" D  Q  ;only send DONE orders from BCMA
"RTN","ORMBLD",149,0)
 . D STATUS^ORCSAVE2(IFN,2) K ORMSG
"RTN","ORMBLD",150,0)
 . I $P(OR3,U,11)=1,$P($G(^OR(100,+$P(OR3,U,5),3)),U,3)=5 D MSG(+$P(OR3,U,5),"CA") ;cancel original instead
"RTN","ORMBLD",151,0)
 I ORDG=$O(^ORD(100.98,"B","IV RX",0))!(ORDG=$O(^ORD(100.98,"B","TPN",0))) D IV^ORMBLDPS Q
"RTN","ORMBLD",152,0)
 D @($S(PKG="PSIV":"IV",PKG="PSO":"OUT",PKG="PSH":"NVA",1:"UD")_"^ORMBLDPS")
"RTN","ORMBLD",153,0)
 Q
"RTN","ORMBLD",154,0)
 ;
"RTN","ORMBLD",155,0)
RA ; -- new Radiology order
"RTN","ORMBLD",156,0)
 D EN^ORMBLDRA
"RTN","ORMBLD",157,0)
 Q
"RTN","ORMBLD",158,0)
 ;
"RTN","ORMBLD",159,0)
TEST(ORIFN) ; -- Build/display HL7 msgs w/o sending
"RTN","ORMBLD",160,0)
 K ORZTEST S ORZTEST=1 D NEW(ORIFN) ; leaves msg in ORZTEST() on exit
"RTN","ORMBLD",161,0)
 Q
"RTN","ORMBLDGM")
0^21^B4563377
"RTN","ORMBLDGM",1,0)
ORMBLDGM ;SLC/MKB-Build outgoing GMR* ORM msgs ;11/17/00  11:07
"RTN","ORMBLDGM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**26,68,97,190**;Dec 17, 1997
"RTN","ORMBLDGM",3,0)
HL7DATE(DATE) ; -- FM -> HL7 format
"RTN","ORMBLDGM",4,0)
 Q $$FMTHL7^XLFDT(DATE)  ;**97
"RTN","ORMBLDGM",5,0)
 ;
"RTN","ORMBLDGM",6,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","ORMBLDGM",7,0)
 Q $O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORMBLDGM",8,0)
 ;
"RTN","ORMBLDGM",9,0)
CSLT ; -- Segments for new Consult order
"RTN","ORMBLDGM",10,0)
 N OI,WP,URG,CATG,PLACE,ATTN,DIAG,CODE,QT,I,J,USID,CTYPE,RSERV,Z
"RTN","ORMBLDGM",11,0)
 S OI=$G(ORDIALOG($$PTR("ORDERABLE ITEM"),1))
"RTN","ORMBLDGM",12,0)
 S CTYPE=$G(ORDIALOG($$PTR("FREE TEXT OI"),1))
"RTN","ORMBLDGM",13,0)
 S RSERV=$G(ORDIALOG($$PTR("REQUEST SERVICE"),1))
"RTN","ORMBLDGM",14,0)
 S WP=$$PTR("WORD PROCESSING 1"),URG=+$G(ORDIALOG($$PTR("URGENCY"),1))
"RTN","ORMBLDGM",15,0)
 S CATG=$G(ORDIALOG($$PTR("CATEGORY"),1))
"RTN","ORMBLDGM",16,0)
 S PLACE=$G(ORDIALOG($$PTR("PLACE OF CONSULTATION"),1))
"RTN","ORMBLDGM",17,0)
 S ATTN=$G(ORDIALOG($$PTR("PROVIDER"),1))
"RTN","ORMBLDGM",18,0)
 S DIAG=$G(ORDIALOG($$PTR("FREE TEXT"),1))
"RTN","ORMBLDGM",19,0)
 S CODE=$G(ORDIALOG($$PTR("CODE"),1))
"RTN","ORMBLDGM",20,0)
CS1 S QT="^^^^^"_$P($G(^ORD(101.42,+URG,0)),U,2),$P(ORMSG(4),"|",8)=QT
"RTN","ORMBLDGM",21,0)
 S $P(ORMSG(3),"|",3)=CATG S:PLACE="C" PLACE="OC"
"RTN","ORMBLDGM",22,0)
 S USID=$$USID^ORMBLD(OI) ;S:$L(CTYPE) $P(USID,U,5)=CTYPE
"RTN","ORMBLDGM",23,0)
 S ORMSG(5)="OBR||||"_USID_"||||||||||||||"_PLACE_"|"_ATTN,Z=5
"RTN","ORMBLDGM",24,0)
 ; Create DG1 & ZCL segment(s) for Billing Awareness (BA) project
"RTN","ORMBLDGM",25,0)
 D DG1^ORWDBA1($G(IFN),"Z",5)
"RTN","ORMBLDGM",26,0)
 I RSERV'>0,$P(USID,U,6)="99CON" S RSERV=+$P(USID,U,4)
"RTN","ORMBLDGM",27,0)
 S:RSERV Z=Z+1,ORMSG(Z)="ZSV|^^^"_+RSERV_U_$$GET1^DIQ(123.5,+RSERV_",",.01)_"^99CON|"_CTYPE
"RTN","ORMBLDGM",28,0)
 S I=0,J=+$O(^TMP("ORWORD",$J,WP,1,0)),Z=Z+1 ; get first line
"RTN","ORMBLDGM",29,0)
 S ORMSG(Z)="OBX|1|TX|2000.02^REASON FOR REQUEST^AS4||"_$G(^TMP("ORWORD",$J,WP,1,J,0))
"RTN","ORMBLDGM",30,0)
 F  S J=$O(^TMP("ORWORD",$J,WP,1,J)) Q:J'>0  S I=I+1,ORMSG(Z,I)=^(+J,0)
"RTN","ORMBLDGM",31,0)
 I $L(DIAG) D
"RTN","ORMBLDGM",32,0)
 . N TYPE,VALUE S TYPE="TX",VALUE=DIAG
"RTN","ORMBLDGM",33,0)
 . S:$L(CODE) TYPE="CE",VALUE=CODE_U_DIAG_"^I9C"
"RTN","ORMBLDGM",34,0)
 . S Z=Z+1,ORMSG(Z)="OBX|2|"_TYPE_"|^PROVISIONAL DIAGNOSIS^||"_VALUE
"RTN","ORMBLDGM",35,0)
 Q
"RTN","ORMBLDLR")
0^22^B19628908
"RTN","ORMBLDLR",1,0)
ORMBLDLR ; SLC/MKB - Build outgoing Lab ORM msgs ;11/17/00  11:10
"RTN","ORMBLDLR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**97,190**;Dec 17, 1997
"RTN","ORMBLDLR",3,0)
HL7DATE(DATE) ; -- FM -> HL7 format
"RTN","ORMBLDLR",4,0)
 Q $$FMTHL7^XLFDT(DATE)  ;**97
"RTN","ORMBLDLR",5,0)
 ;
"RTN","ORMBLDLR",6,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","ORMBLDLR",7,0)
 Q $O(^ORD(101.41,"AB",$E(NAME,1,63),0))
"RTN","ORMBLDLR",8,0)
 ;
"RTN","ORMBLDLR",9,0)
AP ; -- new Lab AP order
"RTN","ORMBLDLR",10,0)
 ;    fall through to CH - no difference at this time
"RTN","ORMBLDLR",11,0)
CH ; -- new Lab CH order
"RTN","ORMBLDLR",12,0)
 N IP,OI,START,STOP,URG,CMMT,INST,I,J,X
"RTN","ORMBLDLR",13,0)
 S START=$P($G(^OR(100,IFN,0)),U,8),STOP=$P($G(^(0)),U,9)
"RTN","ORMBLDLR",14,0)
 S OI=$$PTR("OR GTX ORDERABLE ITEM"),URG=$$PTR("OR GTX LAB URGENCY")
"RTN","ORMBLDLR",15,0)
 S CMMT=$$PTR("OR GTX WORD PROCESSING 1")
"RTN","ORMBLDLR",16,0)
 S IP="" ;$S($D(^OR(100,<ISOLATION ORDER FOR DFN>)):1,1:0)
"RTN","ORMBLDLR",17,0)
 S $P(ORMSG(4),"|",8)="^^^"_$$HL7DATE(START)_U_$$HL7DATE(STOP)
"RTN","ORMBLDLR",18,0)
 S I=4,INST=0 F  S INST=$O(ORDIALOG(OI,INST)) Q:INST'>0  D
"RTN","ORMBLDLR",19,0)
 . S X=+$G(ORDIALOG(URG,INST)),X=$P($G(^LAB(62.05,X,0)),U,4)_";"_X
"RTN","ORMBLDLR",20,0)
 . S I=I+1,ORMSG(I)="OBR||||"_$$USID^ORMBLD(ORDIALOG(OI,INST))_"|||||||"_$$COLLTYPE_"|"_IP_"|||"_$$SPEC_"||||||||||||^^^^^"_X
"RTN","ORMBLDLR",21,0)
 . S J=$O(^TMP("ORWORD",$J,CMMT,INST,0)) Q:'J  ; no comments for test
"RTN","ORMBLDLR",22,0)
 . S I=I+1,ORMSG(I)="NTE|"_INST_"|P|"_^TMP("ORWORD",$J,CMMT,INST,J,0)
"RTN","ORMBLDLR",23,0)
 . S L=0 F  S J=$O(^TMP("ORWORD",$J,CMMT,INST,J)) Q:J'>0  S L=L+1,ORMSG(I,L)=^(J,0)
"RTN","ORMBLDLR",24,0)
 ; Add DG1 & ZCL segment(s) for Billing Aware
"RTN","ORMBLDLR",25,0)
 D DG1^ORWDBA1($G(IFN),"I",I)
"RTN","ORMBLDLR",26,0)
 Q
"RTN","ORMBLDLR",27,0)
 ;
"RTN","ORMBLDLR",28,0)
BB ; -- new Lab BB order
"RTN","ORMBLDLR",29,0)
 N START,QUAN,WP,I,J
"RTN","ORMBLDLR",30,0)
 S QUAN=+$G(ORDIALOG($$PTR("OR GTX QUANTITY"),1))
"RTN","ORMBLDLR",31,0)
 S START=$P(^OR(100,IFN,0),U,8),WP=$$PTR("OR GTX WORD PROCESSING 1")
"RTN","ORMBLDLR",32,0)
 S $P(ORMSG(4),"|",8)=QUAN_"^^^"_$$HL7DATE(START)
"RTN","ORMBLDLR",33,0)
 S ORMSG(5)="OBR||||"_$G(ORDIALOG($$PTR("OR GTX ORDERABLE ITEM"),1))
"RTN","ORMBLDLR",34,0)
 S I=$O(^TMP("ORWORD",$J,WP,1,0)) Q:'I
"RTN","ORMBLDLR",35,0)
 S ORMSG(6)="NTE|1|P|"_$G(^TMP("ORWORD",$J,WP,1,I,0)),J=0
"RTN","ORMBLDLR",36,0)
 F  S I=$O(^TMP("ORWORD",$J,WP,1,I)) Q:I'>0  S J=J+1,ORMSG(6,J)=$G(^(I,0))
"RTN","ORMBLDLR",37,0)
 Q
"RTN","ORMBLDLR",38,0)
 ;
"RTN","ORMBLDLR",39,0)
COLLTYPE() ; -- Returns collection type for current INST
"RTN","ORMBLDLR",40,0)
 N TYPE,X
"RTN","ORMBLDLR",41,0)
 S TYPE=$G(ORDIALOG($$PTR("OR GTX COLLECTION TYPE"),INST))
"RTN","ORMBLDLR",42,0)
 S X=$S(TYPE="LC":"L",TYPE="WC":"O",TYPE="SP":1,TYPE="I":2,1:"")
"RTN","ORMBLDLR",43,0)
 Q X
"RTN","ORMBLDLR",44,0)
 ;
"RTN","ORMBLDLR",45,0)
SPEC() ; -- Returns specimen/sample string for current INST
"RTN","ORMBLDLR",46,0)
 N SAMP,SPEC,X,X0
"RTN","ORMBLDLR",47,0)
 S SPEC=+$G(ORDIALOG($$PTR("OR GTX SPECIMEN"),INST))
"RTN","ORMBLDLR",48,0)
 S X0=$G(^LAB(61,SPEC,0)),X=$P(X0,U,2)_";"_$P(X0,U)_";SNM"
"RTN","ORMBLDLR",49,0)
 S SAMP=+$G(ORDIALOG($$PTR("OR GTX COLLECTION SAMPLE"),INST))
"RTN","ORMBLDLR",50,0)
 S X=X_";"_SAMP_";"_$P($G(^LAB(62,+SAMP,0)),U)_";99LRS^^^"_SPEC_";"_$P(X0,U)_";99LRX"
"RTN","ORMBLDLR",51,0)
 Q X
"RTN","ORMBLDLR",52,0)
 ;
"RTN","ORMBLDLR",53,0)
XO ; -- Send XO message to Lab
"RTN","ORMBLDLR",54,0)
 N OR0,DG,ORMSG,ORNEW,OI,URG,I,CNT,INST,ORDIALOG,TEST,CMMT,J,L,OROLD
"RTN","ORMBLDLR",55,0)
 S OR0=$G(^OR(100,+IFN,0)),DG=$P($G(^ORD(100.98,+$P(OR0,U,11),0)),U,3)
"RTN","ORMBLDLR",56,0)
 S DG="LR"_$S(DG="AP":"AP",DG="BB":"BB",1:"CH"),ORDIALOG=+$P(OR0,U,5)
"RTN","ORMBLDLR",57,0)
 S OROLD=+$P(^OR(100,IFN,3),U,5),$P(ORMSG(4),"|",4)=$G(^OR(100,+OROLD,4))_U_DG
"RTN","ORMBLDLR",58,0)
 S OI=$$PTR("OR GTX ORDERABLE ITEM"),URG=$$PTR("OR GTX URGENCY")
"RTN","ORMBLDLR",59,0)
 S CMMT=$$PTR("OR GTX WORD PROCESSING 1"),CNT=3
"RTN","ORMBLDLR",60,0)
 S I=0 F  S I=$O(^OR(100,+IFN,4.5,I)) Q:I'>0  I $P($G(^(I,0)),U,2)=OI S TEST=$G(^(1)),ORNEW(TEST)=^(0) ; new set of tests
"RTN","ORMBLDLR",61,0)
 S I=0 F  S I=$O(^OR(100,OROLD,4.5,I)) Q:I'>0  I $P($G(^(I,0)),U,2)=OI S TEST=$G(^(1)),OROLD(TEST)=^(0) ; orig set of tests
"RTN","ORMBLDLR",62,0)
XO1 D GETDLG1^ORCD(ORDIALOG),GETORDER^ORCD(+IFN)
"RTN","ORMBLDLR",63,0)
 S I=0 F  S I=$O(ORNEW(I)) Q:I'>0  I '$D(OROLD(I)) D
"RTN","ORMBLDLR",64,0)
 . S CNT=CNT+1,TEST=I,INST=$P(ORNEW(I),U,3)
"RTN","ORMBLDLR",65,0)
 . S ORMSG(CNT)="OBR|"_(CNT-3)_"|||"_$$USID^ORMBLD(TEST)_"|||||||A||||"_$$SPEC_"||||||||||||^^^^^"_$P($G(^ORD(101.42,+$G(ORDIALOG(URG,INST)),0)),U,2)
"RTN","ORMBLDLR",66,0)
 . S J=$O(^TMP("ORWORD",$J,CMMT,INST,0)) Q:'J  ; no comments for test
"RTN","ORMBLDLR",67,0)
 . S CNT=CNT+1,ORMSG(CNT)="NTE|"_INST_"|L|"_^TMP("ORWORD",$J,CMMT,INST,J,0)
"RTN","ORMBLDLR",68,0)
 . S L=0 F  S J=$O(^TMP("ORWORD",$J,CMMT,INST,J)) Q:J'>0  S L=L+1,ORMSG(CNT,L)=^(J,0)
"RTN","ORMBLDLR",69,0)
 S I=ORDIALOG K ORDIALOG S ORDIALOG=I
"RTN","ORMBLDLR",70,0)
 D GETDLG1^ORCD(ORDIALOG),GETORDER^ORCD(OROLD)
"RTN","ORMBLDLR",71,0)
 S I=0 F  S I=$O(OROLD(I)) Q:I'>0  I '$D(ORNEW(I)) D
"RTN","ORMBLDLR",72,0)
 . S CNT=CNT+1,TEST=I,INST=$P(OROLD(I),U,3)
"RTN","ORMBLDLR",73,0)
 . S ORMSG(CNT)="OBR|"_(CNT-3)_"|||"_$$USID^ORMBLD(TEST)_"|||||||3||||"_$$SPEC_"||||||||||||^^^^^"_$P($G(^ORD(101.42,+$G(ORDIALOG(URG,INST)),0)),U,2)
"RTN","ORMBLDLR",74,0)
 . S J=$O(^TMP("ORWORD",$J,CMMT,INST,0)) Q:'J  ; no comments for test
"RTN","ORMBLDLR",75,0)
 . S CNT=CNT+1,ORMSG(CNT)="NTE|"_INST_"|L|"_^TMP("ORWORD",$J,CMMT,INST,J,0)
"RTN","ORMBLDLR",76,0)
 . S L=0 F  S J=$O(^TMP("ORWORD",$J,CMMT,INST,J)) Q:J'>0  S L=L+1,ORMSG(CNT,L)=^(J,0)
"RTN","ORMBLDLR",77,0)
 D MSG^XQOR("OR EVSEND "_DG,.ORMSG)
"RTN","ORMBLDLR",78,0)
 Q
"RTN","ORMBLDPS")
0^7^B58238373
"RTN","ORMBLDPS",1,0)
ORMBLDPS ;SLC/MKB-Build outgoing Pharmacy ORM msgs ;11:26 AM  2 Apr 2001
"RTN","ORMBLDPS",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,38,54,86,97,94,116,129,141,190**;Dec 17, 1997
"RTN","ORMBLDPS",3,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","ORMBLDPS",4,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORMBLDPS",5,0)
 ;
"RTN","ORMBLDPS",6,0)
NVA ; -- new Non-VA Meds order
"RTN","ORMBLDPS",7,0)
 N NVA S NVA=1
"RTN","ORMBLDPS",8,0)
OUT ; -- new Outpt Meds order
"RTN","ORMBLDPS",9,0)
 ;    fall through to UD: same msg, +3 fields
"RTN","ORMBLDPS",10,0)
UD ; -- new Inpt (Unit Dose) Meds order
"RTN","ORMBLDPS",11,0)
 N OI,DRUG,INSTR,DOSE,ROUTE,SCHED,DUR,URG,PROVCOMM,PI,DISPENSE,X,Y,I,J,K,L,QT1,QT2,QT3,QT4,QT6,QT9,CONJ,ORC,SC,OUTPT
"RTN","ORMBLDPS",12,0)
 S OUTPT=$S($P(OR0,U,12)="O":1,1:0) ;outpt flag
"RTN","ORMBLDPS",13,0)
 S X=$G(^OR(100,IFN,8,1,0)) I $P(X,U,5),$P(X,U,5)'=$P(X,U,3) S $P(ORMSG(4),"|",13)=$P(X,U,5) ; Send signer instead of orderer if different
"RTN","ORMBLDPS",14,0)
 S OI=$$PTR("ORDERABLE ITEM"),DRUG=$$PTR("DISPENSE DRUG")
"RTN","ORMBLDPS",15,0)
 S INSTR=$$PTR("INSTRUCTIONS"),SCHED=$$PTR("SCHEDULE")
"RTN","ORMBLDPS",16,0)
 S DUR=$$PTR("DURATION"),URG=$$PTR("URGENCY"),DOSE=$$PTR("DOSE")
"RTN","ORMBLDPS",17,0)
 S ROUTE=$$PTR("ROUTE"),PROVCOMM=$$PTR("WORD PROCESSING 1")
"RTN","ORMBLDPS",18,0)
 S PI=$$PTR("PATIENT INSTRUCTIONS"),CONJ=$$PTR("AND/THEN")
"RTN","ORMBLDPS",19,0)
 S J=1,ORC(J)=$P(ORMSG(4),"|",1,7)_"|"
"RTN","ORMBLDPS",20,0)
 I +$G(NVA)=1 G NVA1
"RTN","ORMBLDPS",21,0)
UD1 S I=0 F  S I=$O(ORDIALOG(INSTR,I)) Q:I'>0  D
"RTN","ORMBLDPS",22,0)
 . S QT2=$G(ORDIALOG(SCHED,I)),QT3=$$HL7DUR,X=$G(ORDIALOG(DOSE,I))
"RTN","ORMBLDPS",23,0)
 . ;S QT1=$S($L(X):$P(X,"&",1,4)_"&"_$P(X,"&",6),1:"")
"RTN","ORMBLDPS",24,0)
 . S QT1=$S($L(X):$P(X,"&",1,6),1:"")
"RTN","ORMBLDPS",25,0)
 . S QT6=$P($G(^ORD(101.42,+$G(ORDIALOG(URG,I)),0)),U,2)
"RTN","ORMBLDPS",26,0)
 . S QT9=$G(ORDIALOG(CONJ,I))_"~" S:$E(QT9)="T" QT9="S~"
"RTN","ORMBLDPS",27,0)
 . S J=J+1,ORC(J)=QT1_U_QT2_U_QT3_"^^^"_QT6_"^^"_$$INSTR_U_QT9
"RTN","ORMBLDPS",28,0)
 ;
"RTN","ORMBLDPS",29,0)
NVA1 I +$G(NVA)=1 D
"RTN","ORMBLDPS",30,0)
 . S I=1 ;only one dosage possible for non-va meds
"RTN","ORMBLDPS",31,0)
 . S QT2=$G(ORDIALOG(SCHED,I)),QT3=$$HL7DUR,X=$G(ORDIALOG(DOSE,I))
"RTN","ORMBLDPS",32,0)
 . S QT1=$S($L(X):$P(X,"&",1,6),1:"")
"RTN","ORMBLDPS",33,0)
 . S QT6=$P($G(^ORD(101.42,+$G(ORDIALOG(URG,I)),0)),U,2)
"RTN","ORMBLDPS",34,0)
 . S QT9=$G(ORDIALOG(CONJ,I))_"~" S:$E(QT9)="T" QT9="S~"
"RTN","ORMBLDPS",35,0)
 . S J=J+1,ORC(J)=QT1_U_QT2_U_QT3_"^^^"_QT6_"^^"_$$INSTR_U_QT9
"RTN","ORMBLDPS",36,0)
 ;
"RTN","ORMBLDPS",37,0)
 I $L($P(OR0,U,8)) S $P(ORC(2),U,4)=$$FMTHL7^XLFDT($P(OR0,U,8)) S:J<2 J=2
"RTN","ORMBLDPS",38,0)
 S J=J+1,ORC(J)="|"_$P(ORMSG(4),"|",9,999),ORC=J,X="ORMSG(4)",ORMSG(4)="",I=0
"RTN","ORMBLDPS",39,0)
 F J=1:1:ORC S Y=ORC(J) D  ;add to ORMSG(4)
"RTN","ORMBLDPS",40,0)
 . I $L(@X)+$L(Y)'>245 S @X=@X_Y
"RTN","ORMBLDPS",41,0)
 . E  S L=245-$L(@X),@X=@X_$E(Y,1,L),I=I+1,X="ORMSG(4,"_I_")",@X=$E(Y,L+1,$L(Y))
"RTN","ORMBLDPS",42,0)
 I $G(ORDIALOG(DRUG,1)) S X=$$ENDCM^PSJORUTL(ORDIALOG(DRUG,1)),DISPENSE=$P(X,U,3)_"^^99NDF^"_ORDIALOG(DRUG,1)_"^^99PSD"
"RTN","ORMBLDPS",43,0)
 S ORMSG(5)="RXO|"_$$USID^ORMBLD($G(ORDIALOG(OI,1)))_"|||||||||"_$G(DISPENSE)
"RTN","ORMBLDPS",44,0)
UD2 I $G(OUTPT) D
"RTN","ORMBLDPS",45,0)
 . N QTY,REFS,DSPY
"RTN","ORMBLDPS",46,0)
 . S QTY=$$PTR("QUANTITY"),REFS=$$PTR("REFILLS"),DSPY=$$PTR("DAYS SUPPLY")
"RTN","ORMBLDPS",47,0)
 . S ORMSG(5)=ORMSG(5)_"|"_$G(ORDIALOG(QTY,1))_"||"_$G(ORDIALOG(REFS,1))_"||||D"_$G(ORDIALOG(DSPY,1))
"RTN","ORMBLDPS",48,0)
 S I=5 I $L($G(ORDIALOG(PROVCOMM,1))) D
"RTN","ORMBLDPS",49,0)
 . S J=$O(^TMP("ORWORD",$J,PROVCOMM,1,0)) Q:'J
"RTN","ORMBLDPS",50,0)
 . S I=6,ORMSG(6)="NTE|6|P|"_$G(^TMP("ORWORD",$J,PROVCOMM,1,J,0))
"RTN","ORMBLDPS",51,0)
 . S K=0 F  S J=$O(^TMP("ORWORD",$J,PROVCOMM,1,J)) Q:J'>0  S K=K+1,ORMSG(6,K)=$G(^(J,0))
"RTN","ORMBLDPS",52,0)
 I $G(OUTPT),$L($G(ORDIALOG(PI,1))) D
"RTN","ORMBLDPS",53,0)
 . S J=$O(^TMP("ORWORD",$J,PI,1,0)) Q:'J
"RTN","ORMBLDPS",54,0)
 . S I=I+1,ORMSG(I)="NTE|7|P|"_$G(^TMP("ORWORD",$J,PI,1,J,0))
"RTN","ORMBLDPS",55,0)
 . S K=0 F  S J=$O(^TMP("ORWORD",$J,PI,1,J)) Q:J'>0  S K=K+1,ORMSG(I,K)=$G(^(J,0))
"RTN","ORMBLDPS",56,0)
UD3 S J=0 F  S J=$O(ORDIALOG(ROUTE,J)) Q:J'>0  S I=I+1,ORMSG(I)=$$RXR($G(ORDIALOG(ROUTE,J)))
"RTN","ORMBLDPS",57,0)
 I $D(^OR(100,IFN,9)) D ORDCHKS
"RTN","ORMBLDPS",58,0)
 S I=I+1,ORMSG(I)=$$ZRX(IFN)
"RTN","ORMBLDPS",59,0)
 I $G(OUTPT) D  ;add SC data
"RTN","ORMBLDPS",60,0)
 . N OR5 S OR5=$G(^OR(100,IFN,5))
"RTN","ORMBLDPS",61,0)
 . I $L(OR5),OR5'?5"^" S I=I+1,ORMSG(I)="ZSC|"_$TR(OR5,"^","|") Q
"RTN","ORMBLDPS",62,0)
 . S SC=$$PTR("SERVICE CONNECTED") S:$D(ORDIALOG(SC,1)) I=I+1,ORMSG(I)="ZSC|"_$S(ORDIALOG(SC,1):"SC",1:"NSC")
"RTN","ORMBLDPS",63,0)
 ; Create DG1 & ZCL segment(s) for Billing Awareness (BA) Project
"RTN","ORMBLDPS",64,0)
 D DG1^ORWDBA1($G(IFN),"I",I)
"RTN","ORMBLDPS",65,0)
 I $P(^ORD(100.98,$P(OR0,U,11),0),U)="NON-VA MEDICATIONS" D
"RTN","ORMBLDPS",66,0)
 . S I=I+1 D ZRN(IFN,.ORMSG,I)
"RTN","ORMBLDPS",67,0)
 Q
"RTN","ORMBLDPS",68,0)
 ;
"RTN","ORMBLDPS",69,0)
INSTR()  ; -- Return text instructions for QT-8, instance I
"RTN","ORMBLDPS",70,0)
 N Y S Y=$P($G(ORDIALOG(DOSE,I)),"&",5)
"RTN","ORMBLDPS",71,0)
 I $G(ORDIALOG(DRUG,1)),$L(Y) Q Y
"RTN","ORMBLDPS",72,0)
 S Y=$G(ORDIALOG(INSTR,I)) I $G(OUTPT) D
"RTN","ORMBLDPS",73,0)
 . N UNITS,UNT S UNITS=$$PTR("FREE TEXT"),UNT=$G(ORDIALOG(UNITS,I))
"RTN","ORMBLDPS",74,0)
 . S:$L(UNT) Y=Y_" "_UNT ;old format
"RTN","ORMBLDPS",75,0)
 Q Y
"RTN","ORMBLDPS",76,0)
 ;
"RTN","ORMBLDPS",77,0)
HL7DUR()  ; -- Returns HL7 form of duration X
"RTN","ORMBLDPS",78,0)
 N X,X1,X2,Y S X=$G(ORDIALOG(DUR,I))
"RTN","ORMBLDPS",79,0)
 S X1=+$G(X),Y="" G:X1'>0 HDQ
"RTN","ORMBLDPS",80,0)
 S X2=$$UP^XLFSTR($P(X,X1,2)) S:$E(X2)=" " X2=$E(X2,2,99)
"RTN","ORMBLDPS",81,0)
 S Y=$S($E(X2,1,2)="MO":"L",'$L(X2):"D",1:$E(X2))_X1
"RTN","ORMBLDPS",82,0)
HDQ Q Y
"RTN","ORMBLDPS",83,0)
 ;
"RTN","ORMBLDPS",84,0)
IV ; -- new IV Meds order
"RTN","ORMBLDPS",85,0)
 N SOLN,VOL,ADDS,STR,UNITS,RATE,URG,WP,QT,I,X1,X2,INST
"RTN","ORMBLDPS",86,0)
 S RATE=$$PTR("INFUSION RATE"),ADDS=$$PTR("ADDITIVE")
"RTN","ORMBLDPS",87,0)
 S STR=$$PTR("STRENGTH PSIV"),UNITS=$$PTR("UNITS")
"RTN","ORMBLDPS",88,0)
 S WP=$$PTR("WORD PROCESSING 1"),VOL=$$PTR("VOLUME")
"RTN","ORMBLDPS",89,0)
 S SOLN=$$PTR("ORDERABLE ITEM"),URG=+$G(ORDIALOG($$PTR("URGENCY"),1))
"RTN","ORMBLDPS",90,0)
 S QT=U_$G(ORDIALOG(+$$PTR("SCHEDULE"),1))_"^^^^"
"RTN","ORMBLDPS",91,0)
 S:URG QT=QT_$P($G(^ORD(101.42,URG,0)),U,2) S $P(ORMSG(4),"|",8)=QT
"RTN","ORMBLDPS",92,0)
 S X=$G(^OR(100,IFN,8,1,0)) I $P(X,U,5),$P(X,U,5)'=$P(X,U,3) S $P(ORMSG(4),"|",13)=$P(X,U,5) ; Send signer instead of orderer if different
"RTN","ORMBLDPS",93,0)
 S RATE=$G(ORDIALOG(RATE,1)) S:$E(RATE,$L(RATE))=" " RATE=$E(RATE,1,($L(RATE)-1)) S ORMSG(5)="RXO|^^^PS-1^IV^99OTH|"_RATE ;strip any trailing spaces
"RTN","ORMBLDPS",94,0)
 S I=5 I $L($G(ORDIALOG(WP,1))) D
"RTN","ORMBLDPS",95,0)
 . N J,K S J=$O(^TMP("ORWORD",$J,WP,1,0)) Q:'J
"RTN","ORMBLDPS",96,0)
 . S I=6,ORMSG(6)="NTE|6|P|"_$G(^TMP("ORWORD",$J,WP,1,J,0))
"RTN","ORMBLDPS",97,0)
 . S K=0 F  S J=$O(^TMP("ORWORD",$J,WP,1,J)) Q:J'>0  S K=K+1,ORMSG(6,K)=^(J,0)
"RTN","ORMBLDPS",98,0)
IV1 S INST=0 F  S INST=$O(ORDIALOG(SOLN,INST)) Q:INST'>0  D
"RTN","ORMBLDPS",99,0)
 . S X1="B",X2=+$G(ORDIALOG(SOLN,INST))
"RTN","ORMBLDPS",100,0)
 . I $P($G(^ORD(101.43,X2,"PS")),U,4) S X1=X1_"A" ;pre-mix
"RTN","ORMBLDPS",101,0)
 . S I=I+1,ORMSG(I)="RXC|"_X1_"|"_$$USID^ORMBLD(X2)_"|"_$G(ORDIALOG(VOL,INST))_"|"_$$HL7UNIT("ML")
"RTN","ORMBLDPS",102,0)
 I $O(ORDIALOG(ADDS,0)) D
"RTN","ORMBLDPS",103,0)
 . S INST=0 F  S INST=$O(ORDIALOG(ADDS,INST)) Q:INST'>0  D
"RTN","ORMBLDPS",104,0)
 . . S X1=$G(ORDIALOG(ADDS,INST)),X2=$G(ORDIALOG(UNITS,INST))
"RTN","ORMBLDPS",105,0)
 . . S I=I+1,ORMSG(I)="RXC|A|"_$$USID^ORMBLD(X1)_"|"_$G(ORDIALOG(STR,INST))_"|"_$$HL7UNIT(X2)
"RTN","ORMBLDPS",106,0)
 I $D(^OR(100,IFN,9)) D ORDCHKS
"RTN","ORMBLDPS",107,0)
 S I=I+1,ORMSG(I)=$$ZRX(IFN)
"RTN","ORMBLDPS",108,0)
 ; Create DG1 & ZCL segment(s) for Billing Awareness (BA) Project
"RTN","ORMBLDPS",109,0)
 D DG1^ORWDBA1($G(IFN),"I",I)
"RTN","ORMBLDPS",110,0)
 Q
"RTN","ORMBLDPS",111,0)
 ;
"RTN","ORMBLDPS",112,0)
RXR(ROUTE) ; -- Returns RXR segment
"RTN","ORMBLDPS",113,0)
 N NAME S NAME=$$GET1^DIQ(51.2,+ROUTE_",",.01)
"RTN","ORMBLDPS",114,0)
 Q "RXR|^^^"_+ROUTE_U_NAME_"^99PSR"
"RTN","ORMBLDPS",115,0)
 ;
"RTN","ORMBLDPS",116,0)
ZRX(IFN) ; -- Returns ZRX segment
"RTN","ORMBLDPS",117,0)
 N NATURE,TYPE,ORIG,PSORIG,ZRX
"RTN","ORMBLDPS",118,0)
 S TYPE=$P($G(^OR(100,IFN,3)),U,11),NATURE=$P($G(^(8,1,0)),U,12)
"RTN","ORMBLDPS",119,0)
 S:NATURE NATURE=$P($G(^ORD(100.02,+NATURE,0)),U,2) ;code
"RTN","ORMBLDPS",120,0)
 S PSORIG="" I (TYPE=1)!(TYPE=2) D
"RTN","ORMBLDPS",121,0)
 . S ORIG=$P($G(^OR(100,IFN,3)),U,5),PSORIG=$G(^OR(100,+ORIG,4))
"RTN","ORMBLDPS",122,0)
 . I PSORIG'>0 S PSORIG="",TYPE=0 ;edit of unreleased order
"RTN","ORMBLDPS",123,0)
 S ZRX="ZRX|"_PSORIG_"|"_NATURE_"|"_$S(TYPE=1:"E",TYPE=2:"R",1:"N")
"RTN","ORMBLDPS",124,0)
 I $G(OUTPT) S ZRX=ZRX_"|"_$G(ORDIALOG($$PTR("ROUTING"),1))_$S($L($P($G(^OR(100,ORIFN,8,1,2)),"^",3)):"|||1",1:"")
"RTN","ORMBLDPS",125,0)
 Q ZRX
"RTN","ORMBLDPS",126,0)
 ;
"RTN","ORMBLDPS",127,0)
ZRN(IFN,ORMSG,I) ; -- Set ZRN segment
"RTN","ORMBLDPS",128,0)
 N ST,ZRN,J,K,TXT
"RTN","ORMBLDPS",129,0)
 S ORMSG(I)="ZRN|N|"
"RTN","ORMBLDPS",130,0)
 S ST=$$PTR("STATEMENTS")
"RTN","ORMBLDPS",131,0)
 I $L($G(ORDIALOG(ST,1))) D
"RTN","ORMBLDPS",132,0)
 . S J=$O(^TMP("ORWORD",$J,ST,1,0)) Q:'J
"RTN","ORMBLDPS",133,0)
 . S K=0,TXT=$G(^TMP("ORWORD",$J,ST,1,J,0))
"RTN","ORMBLDPS",134,0)
 . I $L(TXT) S K=K+1,ORMSG(I,K)=TXT
"RTN","ORMBLDPS",135,0)
 . F  S J=$O(^TMP("ORWORD",$J,ST,1,J)) Q:J'>0  S TXT=$G(^(J,0)) D
"RTN","ORMBLDPS",136,0)
 . . I $L(TXT) S K=K+1,ORMSG(I,K)=TXT
"RTN","ORMBLDPS",137,0)
 Q
"RTN","ORMBLDPS",138,0)
 ;
"RTN","ORMBLDPS",139,0)
ORDCHKS ; -- Include order checks in OBX segments
"RTN","ORMBLDPS",140,0)
 N OC,X,X1 S OC=0
"RTN","ORMBLDPS",141,0)
 F  S OC=$O(^OR(100,IFN,9,OC)) Q:OC'>0  S X=$G(^(OC,0)),X1=$G(^(1)) D
"RTN","ORMBLDPS",142,0)
 . S I=I+1,ORMSG(I)="OBX|"_OC_"|TX|^^^"_+X_"^^99OCX||"_$S($L(X1):X1,1:$P(X,U,3))_"|||||||||"_$$FMTHL7^XLFDT($P(X,U,6))_"||"_$P(X,U,5)
"RTN","ORMBLDPS",143,0)
 . I $L($P(X,U,4)) S I=I+1,ORMSG(I)="NTE|"_OC_"|P|"_$P(X,U,4)
"RTN","ORMBLDPS",144,0)
 Q
"RTN","ORMBLDPS",145,0)
 ;
"RTN","ORMBLDPS",146,0)
HL7UNIT(X) ; -- Return coded element for volume/strength units
"RTN","ORMBLDPS",147,0)
 N I,UNIT,Y
"RTN","ORMBLDPS",148,0)
 F I=1:1:$L(X) I $E(X,I)?1A Q  ; first letter
"RTN","ORMBLDPS",149,0)
 S UNIT=$$UP^XLFSTR($E(X,I,$L(X))),Y=""
"RTN","ORMBLDPS",150,0)
 F I=1:1:11 S X=$T(UNITS+I) I UNIT=$P(X,";",3) S Y="^^^PSIV-"_I_U_UNIT_"^99OTH" Q
"RTN","ORMBLDPS",151,0)
 Q Y
"RTN","ORMBLDPS",152,0)
 ;
"RTN","ORMBLDPS",153,0)
UNITS ; -- allowable PS units
"RTN","ORMBLDPS",154,0)
 ;;ML
"RTN","ORMBLDPS",155,0)
 ;;LITER
"RTN","ORMBLDPS",156,0)
 ;;MCG
"RTN","ORMBLDPS",157,0)
 ;;MG
"RTN","ORMBLDPS",158,0)
 ;;GM
"RTN","ORMBLDPS",159,0)
 ;;UNITS
"RTN","ORMBLDPS",160,0)
 ;;IU
"RTN","ORMBLDPS",161,0)
 ;;MEQ
"RTN","ORMBLDPS",162,0)
 ;;MM
"RTN","ORMBLDPS",163,0)
 ;;MU
"RTN","ORMBLDPS",164,0)
 ;;THOUU
"RTN","ORMBLDPS",165,0)
HL7TIME(X) ; -- Return HL7 formatted duration
"RTN","ORMBLDPS",166,0)
 N I,Y S Y=""
"RTN","ORMBLDPS",167,0)
 F I=1:1:$L(X) I $E(X,I)?1A S Y=$$UP^XLFSTR($E(X,I)) Q  ; first letter
"RTN","ORMBLDPS",168,0)
 S Y=Y_+X
"RTN","ORMBLDPS",169,0)
 Q Y
"RTN","ORMBLDPS",170,0)
 ;
"RTN","ORMBLDPS",171,0)
VER(IFN) ; -- Send msg for nurse-verified orders
"RTN","ORMBLDPS",172,0)
 N OR0,ORMSG S OR0=$G(^OR(100,+IFN,0)) Q:$P(OR0,U,12)'="I"  ;Inpt only
"RTN","ORMBLDPS",173,0)
 S ORMSG(1)=$$MSH^ORMBLD("ORM","PS"),ORMSG(2)=$$PID^ORMBLD($P(OR0,U,2))
"RTN","ORMBLDPS",174,0)
 S ORMSG(3)=$$PV1^ORMBLD($P(OR0,U,2),$P(OR0,U,12),+$P(OR0,U,10))
"RTN","ORMBLDPS",175,0)
 S ORMSG(4)="ORC|ZV|"_IFN_"^OR|"_$G(^OR(100,+IFN,4))_"^PS||||||||"_DUZ_"||||"_$$FMTHL7^XLFDT($$NOW^XLFDT)
"RTN","ORMBLDPS",176,0)
 D MSG^XQOR("OR EVSEND PS",.ORMSG)
"RTN","ORMBLDPS",177,0)
 Q
"RTN","ORMBLDPS",178,0)
 ;
"RTN","ORMBLDPS",179,0)
REF(IFN,ROUTING,CLINIC) ; -- Send msg for refill request
"RTN","ORMBLDPS",180,0)
 N OR0,ORMSG S OR0=$G(^OR(100,+IFN,0)) Q:$P(OR0,U,12)'="O"
"RTN","ORMBLDPS",181,0)
 S:'$G(CLINIC) CLINIC=$S($G(ORL):+ORL,1:+$P(OR0,U,10))
"RTN","ORMBLDPS",182,0)
 S ORMSG(1)=$$MSH^ORMBLD("ORM","PS"),ORMSG(2)=$$PID^ORMBLD($P(OR0,U,2))
"RTN","ORMBLDPS",183,0)
 S ORMSG(3)=$$PV1^ORMBLD($P(OR0,U,2),"O",CLINIC)
"RTN","ORMBLDPS",184,0)
 S ORMSG(4)="ORC|ZF|"_IFN_"^OR|"_$G(^OR(100,+IFN,4))_"^PS|||||||"_DUZ_"||"_$G(ORNP)_"|||"_$$FMTHL7^XLFDT($$NOW^XLFDT)
"RTN","ORMBLDPS",185,0)
 S ORMSG(5)="ZRX||||"_ROUTING
"RTN","ORMBLDPS",186,0)
 D MSG^XQOR("OR EVSEND PS",.ORMSG)
"RTN","ORMBLDPS",187,0)
 Q
"RTN","ORMBLDRA")
0^23^B8026162
"RTN","ORMBLDRA",1,0)
ORMBLDRA ; SLC/MKB - Build outgoing Radiology ORM msgs ;11/17/00  11:14
"RTN","ORMBLDRA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**75,97,190**;Dec 17, 1997
"RTN","ORMBLDRA",3,0)
HL7DATE(DATE) ; -- FM -> HL7 format
"RTN","ORMBLDRA",4,0)
 Q $$FMTHL7^XLFDT(DATE)  ;**97
"RTN","ORMBLDRA",5,0)
 ;
"RTN","ORMBLDRA",6,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","ORMBLDRA",7,0)
 Q $O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORMBLDRA",8,0)
 ;
"RTN","ORMBLDRA",9,0)
EN ; -- Segments for new Radiology order
"RTN","ORMBLDRA",10,0)
 N ORSEX,OI,START,IP,URG,ILOC,MODE,CATG,PREOP,PREG,MODS,CLHIST,PROV,QT,I,J,Z
"RTN","ORMBLDRA",11,0)
 S OI=$G(ORDIALOG($$PTR("ORDERABLE ITEM"),1))
"RTN","ORMBLDRA",12,0)
 S START=$P($G(^OR(100,IFN,0)),U,8),IP=$G(ORDIALOG($$PTR("YES/NO"),1))
"RTN","ORMBLDRA",13,0)
 S URG=$P($G(^ORD(101.42,+$G(ORDIALOG($$PTR("URGENCY"),1)),0)),U,2)
"RTN","ORMBLDRA",14,0)
 S ILOC=$G(ORDIALOG($$PTR("IMAGING LOCATION"),1))
"RTN","ORMBLDRA",15,0)
 S MODE=$G(ORDIALOG($$PTR("MODE OF TRANSPORT"),1))
"RTN","ORMBLDRA",16,0)
 S CATG=$G(ORDIALOG($$PTR("CATEGORY"),1))
"RTN","ORMBLDRA",17,0)
 S PREOP=$G(ORDIALOG($$PTR("PRE-OP SCHEDULED DATE/TIME"),1))
"RTN","ORMBLDRA",18,0)
 S PREG=$G(ORDIALOG($$PTR("PREGNANT"),1))
"RTN","ORMBLDRA",19,0)
 S MODS=$$PTR("MODIFIERS"),CLHIST=$$PTR("WORD PROCESSING 1")
"RTN","ORMBLDRA",20,0)
 S MODS=$$MULT(MODS) S:ILOC ILOC=ILOC_U_$P($G(^RA(79.1,+ILOC,0)),U)
"RTN","ORMBLDRA",21,0)
 S MODE=$S(MODE="A":"WALK",MODE="P":"PORT",MODE="S":"CART",1:"WHLC")
"RTN","ORMBLDRA",22,0)
 S PREG=$S(PREG="Y":"YES",PREG="N":"NO",1:"UNKNOWN")
"RTN","ORMBLDRA",23,0)
 S QT="^^^"_$$HL7DATE(START)_"^^"_URG,$P(ORMSG(4),"|",8)=QT
"RTN","ORMBLDRA",24,0)
 S PROV=+$G(ORDIALOG($$PTR("PROVIDER"),1)) S:PROV $P(ORMSG(4),"|",12)=PROV
"RTN","ORMBLDRA",25,0)
 S ORMSG(5)="OBR||||"_$$USID^ORMBLD(OI)_"||||||||"_$S(IP:"isolation",1:"")_"||||||"_MODS_"|"_ILOC_"|||||||||||"_MODE,I=5
"RTN","ORMBLDRA",26,0)
 ; Create DG1 & ZCL segment(s) for Billing Awareness (BA) Project
"RTN","ORMBLDRA",27,0)
 D DG1^ORWDBA1($G(IFN),"I",I)
"RTN","ORMBLDRA",28,0)
OBX S J=0 F  S J=$O(^TMP("ORWORD",$J,CLHIST,1,J)) Q:J'>0  S I=I+1,ORMSG(I)="OBX|"_J_"|TX|2000.02^CLINICAL HISTORY^AS4|1|"_^(J,0)
"RTN","ORMBLDRA",29,0)
 S ORSEX=$P($G(^DPT(+ORVP,0)),U,2)
"RTN","ORMBLDRA",30,0)
 S:ORSEX="F" I=I+1,ORMSG(I)="OBX|1|TX|2000.33^PREGNANT^AS4||"_PREG
"RTN","ORMBLDRA",31,0)
 S:PREOP I=I+1,ORMSG(I)="OBX|1|TS|^PRE-OP SCHEDULED DATE/TIME||"_$$HL7DATE(PREOP)
"RTN","ORMBLDRA",32,0)
 I "CS"[CATG S Z=$$PTR("CONTRACT/SHARING SOURCE"),I=I+1,ORMSG(I)="OBX|1|CE|34^CONTRACT/SHARING SOURCE^99DD||"_+$G(ORDIALOG(Z,1))_U_$P($G(^DIC(34,+$G(ORDIALOG(Z,1)),0)),U)
"RTN","ORMBLDRA",33,0)
 I CATG="R" S Z=$$PTR("RESEARCH SOURCE"),I=I+1,ORMSG(I)="OBX|1|TX|^RESEARCH SOURCE||"_$G(ORDIALOG(Z,1))
"RTN","ORMBLDRA",34,0)
 Q
"RTN","ORMBLDRA",35,0)
 ;
"RTN","ORMBLDRA",36,0)
MULT(M) ; -- Returns string of MODIFIER~MODIFIER~...
"RTN","ORMBLDRA",37,0)
 N I,X S X="" Q:'$O(ORDIALOG(M,0)) X
"RTN","ORMBLDRA",38,0)
 S I=$O(ORDIALOG(M,0)),X=$P($G(^RAMIS(71.2,+ORDIALOG(M,I),0)),U)
"RTN","ORMBLDRA",39,0)
 F  S I=$O(ORDIALOG(M,I)) Q:I'>0  S X=X_"~"_$P($G(^RAMIS(71.2,+ORDIALOG(M,I),0)),U)
"RTN","ORMBLDRA",40,0)
 Q X
"RTN","ORMPS1")
0^38^B61975902
"RTN","ORMPS1",1,0)
ORMPS1 ;SLC/MKB - Process Pharmacy ORM msgs cont ;1/22/03  12:33
"RTN","ORMPS1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**86,92,94,116,134,152,158,149,190**;Dec 17, 1997
"RTN","ORMPS1",3,0)
UDOSE ; -- new Unit Dose order
"RTN","ORMPS1",4,0)
 N QT,DRUG,INSTR,DOSE,RTE,SCH,OI,URG,WP,DUR,STR,DRGNM,X,PSOI,PSDD,S0,ID,LDOSE,XC,NTE,S0,RXR
"RTN","ORMPS1",5,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","PSJ OR PAT OE",0))
"RTN","ORMPS1",6,0)
 S ORDG=+$O(^ORD(100.98,"B","UNIT DOSE MEDICATIONS",0))
"RTN","ORMPS1",7,0)
 S ORPKG=+$$PKG("PSJ")
"RTN","ORMPS1",8,0)
 D GETDLG1^ORCD(ORDIALOG) S QT=$G(ORQT(1))
"RTN","ORMPS1",9,0)
 S DRUG=$$PTR("DISPENSE DRUG"),INSTR=$$PTR("INSTRUCTIONS")
"RTN","ORMPS1",10,0)
 S DOSE=$$PTR("DOSE"),RTE=$$PTR("ROUTE"),SCH=$$PTR("SCHEDULE")
"RTN","ORMPS1",11,0)
 S OI=$$PTR("ORDERABLE ITEM"),URG=$$PTR("URGENCY")
"RTN","ORMPS1",12,0)
 S WP=$$PTR("WORD PROCESSING 1"),DUR=$$PTR("DURATION")
"RTN","ORMPS1",13,0)
 S STR=$$PTR("STRENGTH"),DRGNM=$$PTR("DRUG NAME")
"RTN","ORMPS1",14,0)
 ;
"RTN","ORMPS1",15,0)
UD1 S:RXO X=$P(RXO,"|",2),ORDIALOG(OI,1)=$$ORDITEM^ORM(X),PSOI=$P(X,U,4,5)
"RTN","ORMPS1",16,0)
 I '$G(ORDIALOG(OI,1)) S ORERR="Missing or invalid orderable item" Q
"RTN","ORMPS1",17,0)
 S PSDD=$P($$FIND^ORM(+RXE,3),U,4,5),ORDIALOG(DRUG,1)=+PSDD
"RTN","ORMPS1",18,0)
 S S0=$$FIND^ORM(+RXE,26)_"&"_$P($$FIND^ORM(+RXE,27),U,5)
"RTN","ORMPS1",19,0)
 S ID=$P(QT,U),LDOSE=$P(QT,U,8) I 'ID,S0 D
"RTN","ORMPS1",20,0)
 . N UNT,PTRN S UNT=$P(S0,"&",2),PTRN="1.N1"""_UNT_""""
"RTN","ORMPS1",21,0)
 . I LDOSE?@PTRN S $P(ID,"&",1,2)=+LDOSE_"&"_UNT Q  ;pre-POE orders
"RTN","ORMPS1",22,0)
 . S:$P(PSOI,U,2)'[S0 ORDIALOG(STR,1)=$TR(S0,"&")
"RTN","ORMPS1",23,0)
 I 'ID,'S0 S ORDIALOG(DRGNM,1)=$P(PSDD,U,2)
"RTN","ORMPS1",24,0)
 S:$L(ID) ORDIALOG(DOSE,1)=$P(ID,"&",1,4)_"&"_LDOSE_"&"_+PSDD_"&"_S0
"RTN","ORMPS1",25,0)
 I LDOSE="" D  I LDOSE="" S ORERR="Unable to determine instructions" Q
"RTN","ORMPS1",26,0)
 . I $G(RXC)'>0 D  Q  ;look for units/dose
"RTN","ORMPS1",27,0)
 .. S LDOSE=$P(ID,"&",3),X=$P(ID,"&",4) I 'LDOSE S LDOSE="" Q
"RTN","ORMPS1",28,0)
 .. S:'$L(X) X=$P($$FIND^ORM(+RXE,7),U,5) S:$L(X) LDOSE=LDOSE_" "_X
"RTN","ORMPS1",29,0)
 .. S ORDIALOG(DRGNM,1)=$P(PSDD,U,2) ;force use of DD
"RTN","ORMPS1",30,0)
 . F  D  Q:LDOSE'=""  S RXC=$O(@ORMSG@(RXC)) Q:'RXC  Q:$E(@ORMSG@(RXC),1,3)'="RXC"
"RTN","ORMPS1",31,0)
 .. S XC=@ORMSG@(RXC) Q:+$P($P(XC,"|",3),U,4)'=+PSOI
"RTN","ORMPS1",32,0)
 .. S LDOSE=$P(XC,"|",4)_$P($P(XC,"|",5),U,5) ;strength_units
"RTN","ORMPS1",33,0)
 S ORDIALOG(INSTR,1)=LDOSE
"RTN","ORMPS1",34,0)
UD2 S NTE=$$NTE(21) I NTE D
"RTN","ORMPS1",35,0)
 . N CNT,I S CNT=1,^TMP("ORWORD",$J,WP,1,CNT,0)=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMPS1",36,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,WP,1,CNT,0)=@ORMSG@(NTE,I)
"RTN","ORMPS1",37,0)
 . S ^TMP("ORWORD",$J,WP,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",38,0)
 . S ORDIALOG(WP,1)="^TMP(""ORWORD"",$J,"_WP_",1)"
"RTN","ORMPS1",39,0)
 S RXR=$$RXR^ORMPS I 'RXR S ORERR="Missing or invalid RXR segment" Q
"RTN","ORMPS1",40,0)
 S ORDIALOG(RTE,1)=$P($P(RXR,"|",2),U,4),ORDIALOG(URG,1)=ORURG
"RTN","ORMPS1",41,0)
 S ORDIALOG(SCH,1)=$P(QT,U,2),X=$P(QT,U,3)
"RTN","ORMPS1",42,0)
 I $L(X) D  ;set only if previous order had duration
"RTN","ORMPS1",43,0)
 . N IFN S IFN=$S($G(ORIFN):+ORIFN,$P(ZRX,"|",2):+$P(ZRX,"|",2),1:0)
"RTN","ORMPS1",44,0)
 . S:$O(^OR(100,+IFN,4.5,"ID","DAYS",0)) ORDIALOG(DUR,1)=$$DURATION(X)
"RTN","ORMPS1",45,0)
 D DOSETEXT^ORCDPS2 ;reset Instructions text, SIG
"RTN","ORMPS1",46,0)
 Q
"RTN","ORMPS1",47,0)
 ;
"RTN","ORMPS1",48,0)
OUT ; -- new Outpt order
"RTN","ORMPS1",49,0)
 N OI,SIG,INSTR,DOSE,RTE,SCH,DUR,SC,STR,DRUG,PI,CONJ,PSOI,PSDD,S0,X,I,RXR,J,NTE,ZSC,CNT,PC
"RTN","ORMPS1",50,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","PSO OERR",0))
"RTN","ORMPS1",51,0)
 S ORDG=+$O(^ORD(100.98,"B","OUTPATIENT MEDICATIONS",0))
"RTN","ORMPS1",52,0)
 S ORPKG=+$$PKG("PSO") D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMPS1",53,0)
 S OI=$$PTR("ORDERABLE ITEM"),SIG=$$PTR("SIG")
"RTN","ORMPS1",54,0)
 S INSTR=$$PTR("INSTRUCTIONS"),DOSE=$$PTR("DOSE")
"RTN","ORMPS1",55,0)
 S SCH=$$PTR("SCHEDULE"),DUR=$$PTR("DURATION")
"RTN","ORMPS1",56,0)
 S RTE=$$PTR("ROUTE"),SC=$$PTR("SERVICE CONNECTED")
"RTN","ORMPS1",57,0)
 S STR=$$PTR("STRENGTH"),DRUG=$$PTR("DISPENSE DRUG")
"RTN","ORMPS1",58,0)
 S PI=$$PTR("PATIENT INSTRUCTIONS"),CONJ=$$PTR("AND/THEN")
"RTN","ORMPS1",59,0)
 S PC=$$PTR("WORD PROCESSING 1")
"RTN","ORMPS1",60,0)
 ;
"RTN","ORMPS1",61,0)
 S:RXO X=$P(RXO,"|",2),ORDIALOG(OI,1)=$$ORDITEM^ORM(X),PSOI=$P(X,U,4,5)
"RTN","ORMPS1",62,0)
 I '$G(ORDIALOG(OI,1)) S ORERR="Missing or invalid orderable item" Q
"RTN","ORMPS1",63,0)
 S PSDD=$P($$FIND^ORM(+RXE,3),U,4,5),ORDIALOG(DRUG,1)=+PSDD
"RTN","ORMPS1",64,0)
 S S0=$$FIND^ORM(+RXE,26)_"&"_$P($$FIND^ORM(+RXE,27),U,5)
"RTN","ORMPS1",65,0)
 I S0,$P(PSOI,U,2)'[S0 S ORDIALOG(STR,1)=$TR(S0,"&")
"RTN","ORMPS1",66,0)
 I 'S0,'$G(ORQT(1)) S ORDIALOG($$PTR("DRUG NAME"),1)=$P(PSDD,U,2)
"RTN","ORMPS1",67,0)
OUT1 S ORDIALOG($$PTR("QUANTITY"),1)=$$FIND^ORM(+RXE,11)
"RTN","ORMPS1",68,0)
 S ORDIALOG($$PTR("REFILLS"),1)=$$FIND^ORM(+RXE,13)
"RTN","ORMPS1",69,0)
 S X=$$FIND^ORM(+RXE,23) S:$E(X)="D" X=+$E(X,2,99)
"RTN","ORMPS1",70,0)
 S:X ORDIALOG($$PTR("DAYS SUPPLY"),1)=X
"RTN","ORMPS1",71,0)
 I ZRX S X=$P(ZRX,"|",5) S:$L(X) ORDIALOG($$PTR("ROUTING"),1)=X
"RTN","ORMPS1",72,0)
 S:ORURG ORDIALOG($$PTR("URGENCY"),1)=ORURG F I=1:1:ORQT D
"RTN","ORMPS1",73,0)
 . S ORDIALOG(INSTR,I)=$P(ORQT(I),U,8),X=$P(ORQT(I),U)
"RTN","ORMPS1",74,0)
 . S:$L(X) ORDIALOG(DOSE,I)=$P(X,"&",1,4)_"&"_$P(ORQT(I),U,8)_"&"_+PSDD_"&"_S0
"RTN","ORMPS1",75,0)
 . S X=$P(ORQT(I),U,2) S:$L(X) ORDIALOG(SCH,I)=X
"RTN","ORMPS1",76,0)
 . S X=$P(ORQT(I),U,3) S:$L(X) ORDIALOG(DUR,I)=$$DURATION(X)
"RTN","ORMPS1",77,0)
 . S X=$P(ORQT(I),U,9) S:$L(X) ORDIALOG(CONJ,I)=$S(X="S":"T",1:X)
"RTN","ORMPS1",78,0)
 S RXR=$$RXR^ORMPS I RXR S ORDIALOG(RTE,1)=$P($P(RXR,"|",2),U,4) D
"RTN","ORMPS1",79,0)
 . S I=1,J=+RXR ;look for multiple RXR's
"RTN","ORMPS1",80,0)
 . F  S J=$O(@ORMSG@(J)) Q:J'>0  S RXR=@ORMSG@(J) Q:$E(RXR,1,3)'="RXR"  S I=I+1,ORDIALOG(RTE,I)=$P($P(RXR,"|",2),U,4)
"RTN","ORMPS1",81,0)
OUT2 S NTE=$$NTE(6) D:'NTE PCOMM I NTE D  ;Prov Comm
"RTN","ORMPS1",82,0)
 . S CNT=1,^TMP("ORWORD",$J,PC,1,CNT,0)=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMPS1",83,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,PC,1,CNT,0)=@ORMSG@(NTE,I)
"RTN","ORMPS1",84,0)
 . S ^TMP("ORWORD",$J,PC,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",85,0)
 . S ORDIALOG(PC,1)="^TMP(""ORWORD"",$J,"_PC_",1)"
"RTN","ORMPS1",86,0)
 S NTE=$$NTE(7) I NTE D  ;Pat Instr
"RTN","ORMPS1",87,0)
 . S CNT=1,^TMP("ORWORD",$J,PI,1,CNT,0)=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMPS1",88,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,PI,1,CNT,0)=@ORMSG@(NTE,I)
"RTN","ORMPS1",89,0)
 . S ^TMP("ORWORD",$J,PI,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",90,0)
 . S ORDIALOG(PI,1)="^TMP(""ORWORD"",$J,"_PI_",1)"
"RTN","ORMPS1",91,0)
 S NTE=$$NTE(21) I NTE D  ;Sig
"RTN","ORMPS1",92,0)
 . S CNT=1,^TMP("ORWORD",$J,SIG,1,CNT,0)=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMPS1",93,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,SIG,1,CNT,0)=@ORMSG@(NTE,I)
"RTN","ORMPS1",94,0)
 . S ^TMP("ORWORD",$J,SIG,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",95,0)
 . S ORDIALOG(SIG,1)="^TMP(""ORWORD"",$J,"_SIG_",1)"
"RTN","ORMPS1",96,0)
 . S ORDIALOG(PI,"FORMAT")="@" ;PI already included in Sig
"RTN","ORMPS1",97,0)
OUT3 I '$G(ORQT(1))!('NTE) D DOSETEXT^ORCDPS2 ;reset Instructions text, Sig
"RTN","ORMPS1",98,0)
 S ZSC=$$ZSC,X=$P(ZSC,"|",2) I X?2.3U S ORDIALOG(SC,1)=$S(X="SC":1,1:0)
"RTN","ORMPS1",99,0)
 Q
"RTN","ORMPS1",100,0)
 ;
"RTN","ORMPS1",101,0)
IV ; -- new IV order
"RTN","ORMPS1",102,0)
 N IVTYP S IVTYP=$P(ZRX,"|",7) I IVTYP="",$$NUMADDS'>1 G UDOSE
"RTN","ORMPS1",103,0)
 N SOLN,VOL,ADDS,STR,UNITS,RATE,URG,X,X1,X2,I,J,TYPE,OI,WP,NTE,SCH
"RTN","ORMPS1",104,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORMPS1",105,0)
 S ORDG=+$O(^ORD(100.98,"B",$S($P(ZRX,"|",7)="TPN":"TPN",1:"IV RX"),0))
"RTN","ORMPS1",106,0)
 S ORPKG=+$$PKG("PSJ") D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMPS1",107,0)
 S SOLN=$$PTR("ORDERABLE ITEM"),VOL=$$PTR("VOLUME"),SCH=$$PTR("SCHEDULE")
"RTN","ORMPS1",108,0)
 S RATE=$$PTR("INFUSION RATE") S:ORURG ORDIALOG($$PTR("URGENCY"),1)=ORURG
"RTN","ORMPS1",109,0)
 S WP=$$PTR("WORD PROCESSING 1"),ADDS=$$PTR("ADDITIVE")
"RTN","ORMPS1",110,0)
 S STR=$$PTR("STRENGTH PSIV"),UNITS=$$PTR("UNITS")
"RTN","ORMPS1",111,0)
IV1 S NTE=$$NTE(21) I NTE D
"RTN","ORMPS1",112,0)
 . N CNT,I S CNT=1,^TMP("ORWORD",$J,WP,1,CNT,0)=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMPS1",113,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,WP,1,CNT,0)=@ORMSG@(NTE,I)
"RTN","ORMPS1",114,0)
 . S ^TMP("ORWORD",$J,WP,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",115,0)
 . S ORDIALOG(WP,1)="^TMP(""ORWORD"",$J,"_WP_",1)"
"RTN","ORMPS1",116,0)
 S X=$P($$FIND^ORM(+RXE,25),U,5)
"RTN","ORMPS1",117,0)
 S ORDIALOG(RATE,1)=$$FIND^ORM(+RXE,24)_$S($L(X):" "_X,1:""),(I,J)=0
"RTN","ORMPS1",118,0)
 F  D  S RXC=$O(@ORMSG@(RXC)) Q:'RXC  Q:$E(@ORMSG@(RXC),1,3)'="RXC"
"RTN","ORMPS1",119,0)
 . S X=@ORMSG@(RXC),TYPE=$P(X,"|",2),OI=$$ORDITEM^ORM($P(X,"|",3)) Q:'OI
"RTN","ORMPS1",120,0)
 . S X1=$P(X,"|",4),X2=$P($P(X,"|",5),U,5)
"RTN","ORMPS1",121,0)
 . I $E(TYPE)="B" S J=J+1,ORDIALOG(SOLN,J)=OI,ORDIALOG(VOL,J)=X1 Q
"RTN","ORMPS1",122,0)
 . S I=I+1,ORDIALOG(ADDS,I)=OI,ORDIALOG(STR,I)=X1,ORDIALOG(UNITS,I)=X2
"RTN","ORMPS1",123,0)
 I IVTYP="" S X=$P($G(ORQT(1)),U,2) S:$L(X) ORDIALOG(SCH,1)=X
"RTN","ORMPS1",124,0)
 Q
"RTN","ORMPS1",125,0)
 ;
"RTN","ORMPS1",126,0)
NTE(ID) ; -- Return subscript of NTE segment for RXE-<ID>
"RTN","ORMPS1",127,0)
 N I,SEG,Y S Y="",I=+RXE S:'$G(ID) ID=21
"RTN","ORMPS1",128,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=@ORMSG@(I) Q:$E(SEG,1,3)="ORC"  I $P(SEG,"|",1,2)=("NTE|"_ID) S Y=I Q
"RTN","ORMPS1",129,0)
 Q Y
"RTN","ORMPS1",130,0)
 ;
"RTN","ORMPS1",131,0)
ZSC() ; -- Return subscript of ZSC segment
"RTN","ORMPS1",132,0)
 N I,SEG,Y S Y="",I=+RXE
"RTN","ORMPS1",133,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="ZSC" S Y=I_U_@ORMSG@(I) Q
"RTN","ORMPS1",134,0)
 Q Y
"RTN","ORMPS1",135,0)
 ;
"RTN","ORMPS1",136,0)
NUMADDS() ; -- count number of additives to determine type
"RTN","ORMPS1",137,0)
 N CNT,I,X S CNT=0,I=+RXE
"RTN","ORMPS1",138,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S X=@ORMSG@(I) Q:$P(X,"|")="ORC"  I $E(X,1,6)="RXC|A|" S CNT=CNT+1
"RTN","ORMPS1",139,0)
 Q CNT
"RTN","ORMPS1",140,0)
 ;
"RTN","ORMPS1",141,0)
PKG(NMSP) ; -- Return Package file ptr for NMSP
"RTN","ORMPS1",142,0)
 N I S I=0
"RTN","ORMPS1",143,0)
 F  S I=+$O(^DIC(9.4,"C",NMSP,I)) Q:I<1  Q:'$O(^(I,0))  ;no Addl Prefs
"RTN","ORMPS1",144,0)
 Q I
"RTN","ORMPS1",145,0)
 ;
"RTN","ORMPS1",146,0)
PTR(NAME) ; -- Returns ien of prompt NAME in Order Dialog file #101.41
"RTN","ORMPS1",147,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORMPS1",148,0)
 ;
"RTN","ORMPS1",149,0)
DURATION(X) ; -- Returns "# units" from U# format
"RTN","ORMPS1",150,0)
 N Y,Y1,Y2 I X'?.1U1.N Q ""
"RTN","ORMPS1",151,0)
 S Y1=$E(X),Y2=+$E(X,2,$L(X)) I X=+X S Y1="D",Y2=+X
"RTN","ORMPS1",152,0)
 S Y=Y2_" "_$S(Y1="L":"MONTH",Y1="W":"WEEK",Y1="H":"HOUR",Y1="M":"MINUTE",Y1="S":"SECOND",1:"DAY")_$S(Y2>1:"S",1:"")
"RTN","ORMPS1",153,0)
 Q Y
"RTN","ORMPS1",154,0)
 ;
"RTN","ORMPS1",155,0)
QT ; -- Unpiece the Q/T field from RXE
"RTN","ORMPS1",156,0)
 I 'RXE S ORQT(1)=ORQT,ORQT=1 Q  ; nothing to reset
"RTN","ORMPS1",157,0)
 N X,Y,I,J,P,SEG,DONE K ORQT
"RTN","ORMPS1",158,0)
 S SEG=$G(@ORMSG@(+RXE)),X=$P(SEG,"|",2),(I,J,P,DONE)=0
"RTN","ORMPS1",159,0)
 F  D  Q:DONE
"RTN","ORMPS1",160,0)
 . S P=P+1,Y=$P(X,"~",P) I Y="" S DONE=1 Q
"RTN","ORMPS1",161,0)
 . I P<$L(X,"~") S I=I+1,ORQT(I)=Y Q
"RTN","ORMPS1",162,0)
 . I $L(SEG,"|")>2 S I=I+1,ORQT(I)=Y,DONE=1 Q
"RTN","ORMPS1",163,0)
 . S J=+$O(@ORMSG@(+RXE,J)) I J'>0 S I=I+1,ORQT(I)=Y,DONE=1 Q
"RTN","ORMPS1",164,0)
 . S SEG=$G(@ORMSG@(+RXE,J)),X=$P(SEG,"|"),P=1,I=I+1,ORQT(I)=Y_$P(X,"~")
"RTN","ORMPS1",165,0)
 S ORQT=I Q:'ORQT  ; else reset ORSTRT, ORSTOP, ORURG
"RTN","ORMPS1",166,0)
 S ORSTRT=$P(ORQT(1),U,4),ORSTOP=$P(ORQT(ORQT),U,5),ORURG=$P(ORQT(1),U,6)
"RTN","ORMPS1",167,0)
 S:ORSTRT ORSTRT=$$FMDATE^ORM(ORSTRT) S:ORSTOP ORSTOP=$$FMDATE^ORM(ORSTOP) S:$L(ORURG) ORURG=$$URGENCY^ORM(ORURG)
"RTN","ORMPS1",168,0)
 Q
"RTN","ORMPS1",169,0)
 ;
"RTN","ORMPS1",170,0)
PCOMM ; -- Get Provider Comments from previous order, when changed
"RTN","ORMPS1",171,0)
 N OLD,I
"RTN","ORMPS1",172,0)
 S OLD=+$G(ORIFN) I OLD<1 S OLD=+$P(ZRX,"|",2) Q:OLD<1
"RTN","ORMPS1",173,0)
 S I=+$O(^OR(100,OLD,4.5,"ID","COMMENT",0)) Q:I<1
"RTN","ORMPS1",174,0)
 Q:'$O(^OR(100,OLD,4.5,I,2,0))  ;none
"RTN","ORMPS1",175,0)
 M ^TMP("ORWORD",$J,PC,1)=^OR(100,OLD,4.5,I,2)
"RTN","ORMPS1",176,0)
 S ORDIALOG(PC,1)="^TMP(""ORWORD"",$J,"_PC_",1)"
"RTN","ORMPS1",177,0)
 S ORDIALOG(PC,"FORMAT")="@" ;text in Sig already
"RTN","ORMPS1",178,0)
 Q
"RTN","ORMPS2")
0^20^B33632444
"RTN","ORMPS2",1,0)
ORMPS2 ;SLC/MKB - Process Pharmacy ORM msgs cont;10:53 AM  16 May 2001 [9/28/01 1:50pm]
"RTN","ORMPS2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**94,116,129,134,186,190**;Dec 17, 1997
"RTN","ORMPS2",3,0)
 ;
"RTN","ORMPS2",4,0)
FINISHED()      ; -- new order [SN^ORMPS] due to finishing?
"RTN","ORMPS2",5,0)
 N Y,ORIG,TYPE,ORIG4 S Y=0
"RTN","ORMPS2",6,0)
 S ORIG=+$P(ZRX,"|",2),TYPE=$P(ZRX,"|",4),ORIG4=$G(^OR(100,ORIG,4))
"RTN","ORMPS2",7,0)
 I ORIG,TYPE="E",ORIG4?1.N1"P"!(ORIG4?1.N1"S") S ORIFN=+ORIG,Y=1
"RTN","ORMPS2",8,0)
 Q Y
"RTN","ORMPS2",9,0)
 ;
"RTN","ORMPS2",10,0)
WPX() ; -- Compare comments in @ORMSG@(NTE) with order ORIFN
"RTN","ORMPS2",11,0)
 ;     Returns 1 if different, or 0 if same
"RTN","ORMPS2",12,0)
 N NTE,SPINST,Y,I,J,X,X1 S Y=0
"RTN","ORMPS2",13,0)
 S NTE=+$$NTE^ORMPS1(21),SPINST=$S(NTE:$P(@ORMSG@(NTE),"|",4),1:"")
"RTN","ORMPS2",14,0)
 S I=+$O(^OR(100,+ORIFN,4.5,"ID","COMMENT",0)) I I'>0 S:$L(SPINST) Y=1 G WQ
"RTN","ORMPS2",15,0)
 S X=$G(^OR(100,+ORIFN,4.5,I,2,1,0)) ;1st line
"RTN","ORMPS2",16,0)
 I '$O(^OR(100,+ORIFN,4.5,I,2,1)) S:X'=SPINST Y=1 G WQ
"RTN","ORMPS2",17,0)
 S J=1 F  S J=$O(^OR(100,+ORIFN,4.5,I,2,J)) Q:J'>0  S X1=$G(^(J,0)) D  Q:$L(X)'<240
"RTN","ORMPS2",18,0)
 . I ($L(X)+$L(X1)+1)'>240 S X=X_" "_X1 Q
"RTN","ORMPS2",19,0)
 . S X=X_" "_$E(X1,1,239-$L(X))
"RTN","ORMPS2",20,0)
 S:X'=SPINST Y=1 ;changed
"RTN","ORMPS2",21,0)
WQ Q Y
"RTN","ORMPS2",22,0)
 ;
"RTN","ORMPS2",23,0)
IVX() ; -- Compare ORMSG to Inpt order ORIFN if IV, return 0 if 'diff or 'IV
"RTN","ORMPS2",24,0)
 N Y,RXC,DG,OI,PSOI,XC,RATE,ORA,ORB,ORX,I,J,OI0,INST,VOL,STR,UNT
"RTN","ORMPS2",25,0)
 S RXC=$$RXC^ORMPS,Y=0 I RXC'>0 Q Y  ;not IV of any kind
"RTN","ORMPS2",26,0)
 S DG=+$P($G(^OR(100,+ORIFN,0)),U,11),DG=$P($G(^ORD(100.98,DG,0)),U,3)
"RTN","ORMPS2",27,0)
 I DG'="IV RX",DG'="TPN" D  Q Y  ;not fluid
"RTN","ORMPS2",28,0)
 . I $P(ZRX,"|",7)'="" S Y=1 Q
"RTN","ORMPS2",29,0)
 . I $$NUMADDS^ORMPS1>1 S Y=1 Q
"RTN","ORMPS2",30,0)
 . S OI=$$VALUE("ORDERABLE"),PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2)
"RTN","ORMPS2",31,0)
 . S XC=@ORMSG@(RXC) I PSOI'=$P(XC,U,4) S Y=1 Q
"RTN","ORMPS2",32,0)
 . N X1,X2,X3 S X1=$P(XC,"|",4),X2=$P($P(XC,"|",5),U,5)
"RTN","ORMPS2",33,0)
 . S X3=$$VALUE("INSTR") I (X1_X2)'=X3,(X1_" "_X2)'=X3 S Y=1 Q
"RTN","ORMPS2",34,0)
IV1 S RATE=$$FIND^ORM(+RXE,24),UNT=$P($$FIND^ORM(+RXE,25),U,5)
"RTN","ORMPS2",35,0)
 S:$L(UNT) RATE=RATE_" "_UNT I RATE'=$$VALUE("RATE") S Y=1 Q Y
"RTN","ORMPS2",36,0)
 S ORB=+$$PTR("ORDERABLE ITEM"),ORA=+$$PTR("ADDITIVE"),I=+RXC
"RTN","ORMPS2",37,0)
 F  S XC=@ORMSG@(I) Q:$E(XC,1,3)'="RXC"  D  S I=$O(@ORMSG@(I)) Q:I'>0
"RTN","ORMPS2",38,0)
 . S ORX($P(XC,"|",2),+$P(XC,U,4))=$P(XC,"|",4)_U_$P($P(XC,"|",5),U,5)
"RTN","ORMPS2",39,0)
 . ;ORX("A",PSOI)=str^units or ORX("B",PSOI)=volume^units
"RTN","ORMPS2",40,0)
 F I="STRENGTH","UNITS","VOLUME" D  ;ORX(I,inst)=value
"RTN","ORMPS2",41,0)
 . S J=0 F  S J=$O(^OR(100,+ORIFN,4.5,"ID",I,J)) Q:J'>0  D
"RTN","ORMPS2",42,0)
 .. S INST=+$P($G(^OR(100,+ORIFN,4.5,J,0)),U,3)
"RTN","ORMPS2",43,0)
 .. S:INST ORX(I,INST)=$G(^OR(100,+ORIFN,4.5,J,1))
"RTN","ORMPS2",44,0)
 S I=0 F  S I=$O(^OR(100,+ORIFN,4.5,"ID","ORDERABLE",I)) Q:I'>0  D  Q:Y
"RTN","ORMPS2",45,0)
 . S OI0=$G(^OR(100,+ORIFN,4.5,I,0)),OI=+$G(^(1))
"RTN","ORMPS2",46,0)
 . S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2)
"RTN","ORMPS2",47,0)
 . I $P(OI0,U,2)=ORA,$G(ORX("A",PSOI)) D  Q
"RTN","ORMPS2",48,0)
 .. S INST=$P(OI0,U,3),STR=+ORX("A",PSOI),UNT=$P(ORX("A",PSOI),U,2)
"RTN","ORMPS2",49,0)
 .. I STR'=$G(ORX("STRENGTH",INST)) S Y=1 Q
"RTN","ORMPS2",50,0)
 .. I UNT'=$G(ORX("UNITS",INST)) S Y=1 Q
"RTN","ORMPS2",51,0)
 .. K ORX("A",PSOI) ;same
"RTN","ORMPS2",52,0)
 . I $P(OI0,U,2)=ORB,$G(ORX("B",PSOI)) D  Q
"RTN","ORMPS2",53,0)
 .. S INST=$P(OI0,U,3),VOL=+$G(ORX("B",PSOI))
"RTN","ORMPS2",54,0)
 .. I VOL'=$G(ORX("VOLUME",INST)) S Y=1 Q
"RTN","ORMPS2",55,0)
 .. K ORX("B",PSOI) ;same
"RTN","ORMPS2",56,0)
 . S Y=1
"RTN","ORMPS2",57,0)
 I $O(ORX("A",0))!$O(ORX("B",0)) S Y=1 ;leftover items - changed
"RTN","ORMPS2",58,0)
 Q Y
"RTN","ORMPS2",59,0)
 ;
"RTN","ORMPS2",60,0)
CHANGED()       ; -- Compare ORMSG to order ORIFN, return 1 if different
"RTN","ORMPS2",61,0)
 N X,Y,X1,ZSC,NTE,SIG,PI S Y=0
"RTN","ORMPS2",62,0)
 I $G(ORCAT)="I" D  G CHQ
"RTN","ORMPS2",63,0)
 . I $$WPX S Y=1 Q  ;Special Instructions
"RTN","ORMPS2",64,0)
 . ;S X=$$VALUE("DAYS") ;duration
"RTN","ORMPS2",65,0)
 . ;I X S X1=$$DURATION^ORMPS1($P($G(ORQT(1)),U,3)) I X'=X1 S Y=1 Q
"RTN","ORMPS2",66,0)
 . I $$IVX S Y=1 Q  ;IV fields
"RTN","ORMPS2",67,0)
 S X=$P($P(RXE,"|",3),U,4) I X'=$$VALUE("DRUG") S Y=1 G CHQ
"RTN","ORMPS2",68,0)
 I $P(RXE,"|",11)'=$$VALUE("QTY") S Y=1 G CHQ
"RTN","ORMPS2",69,0)
 I $P(RXE,"|",13)'=$$VALUE("REFILLS") S Y=1 G CHQ
"RTN","ORMPS2",70,0)
 S X=$P(RXE,"|",23) S:$E(X)="D" X=+$E(X,2,99) I X'=$$VALUE("SUPPLY") S Y=1 G CHQ
"RTN","ORMPS2",71,0)
 I $P(ZRX,"|",5)'=$$VALUE("PICKUP") S Y=1 G CHQ
"RTN","ORMPS2",72,0)
 S NTE=$$NTE^ORMPS1(21),SIG=+$O(^OR(100,+ORIFN,4.5,"ID","SIG",0)) ;verb
"RTN","ORMPS2",73,0)
 I NTE,SIG,$P($P(@ORMSG@(NTE),"|",4)," ")'=$P($G(^OR(100,+ORIFN,4.5,SIG,2,1,0))," ") S Y=1 G CHQ
"RTN","ORMPS2",74,0)
 S NTE=$$NTE^ORMPS1(7),PI=+$O(^OR(100,+ORIFN,4.5,"ID","PI",0))
"RTN","ORMPS2",75,0)
 I (NTE&'PI)!('NTE&PI) Q 1 ;added or deleted
"RTN","ORMPS2",76,0)
 I NTE,PI,$P(@ORMSG@(NTE),"|",4)'=$G(^OR(100,+ORIFN,4.5,PI,2,1,0)) S Y=1 G CHQ
"RTN","ORMPS2",77,0)
 Q:'$P($G(^OR(100,+ORIFN,8,0)),U,3)
"RTN","ORMPS2",78,0)
 N LSTACT,PREPRV,CURPRV S LSTACT="?",(PREPRV,CURPRV)=0
"RTN","ORMPS2",79,0)
 F  S LSTACT=$O(^OR(100,+ORIFN,8,LSTACT),-1) Q:LSTACT
"RTN","ORMPS2",80,0)
 S PREPRV=$P($G(^OR(100,+ORIFN,8,LSTACT,0)),U,3)
"RTN","ORMPS2",81,0)
 S CURPRV=$P($G(ORC),"|",13)
"RTN","ORMPS2",82,0)
 I (PREPRV'=CURPRV) S Y=1 G CHQ
"RTN","ORMPS2",83,0)
CHQ Q Y
"RTN","ORMPS2",84,0)
 ;
"RTN","ORMPS2",85,0)
VALUE(ID)       ; -- Return value of ID in ^OR(100,+ORIFN,4.5,"ID")
"RTN","ORMPS2",86,0)
 N I,Y I '$L($G(ID)) Q ""
"RTN","ORMPS2",87,0)
 S I=+$O(^OR(100,+ORIFN,4.5,"ID",ID,0))
"RTN","ORMPS2",88,0)
 S Y=$G(^OR(100,+ORIFN,4.5,I,1))
"RTN","ORMPS2",89,0)
 Q Y
"RTN","ORMPS2",90,0)
 ;
"RTN","ORMPS2",91,0)
PTR(X) ; -- Return ptr to prompt OR GTX X
"RTN","ORMPS2",92,0)
 Q +$O(^ORD(101.41,"AB","OR GTX "_X,0))
"RTN","ORMPS2",93,0)
 ;
"RTN","ORMPS2",94,0)
RO ; -- Replacement order (finished)
"RTN","ORMPS2",95,0)
 ;
"RTN","ORMPS2",96,0)
 N RXO,RXC,ORDIALOG,ORDG,ORPKG,ORDA,ORX,ORSIG,ORP,ZSC,NEWSTS
"RTN","ORMPS2",97,0)
 K ^TMP("ORWORD",$J)
"RTN","ORMPS2",98,0)
 I '$D(^VA(200,ORNP,0)) S ORERR="Missing or invalid ordering provider" Q
"RTN","ORMPS2",99,0)
 I 'RXE S ORERR="Missing or invalid RXE segment" Q
"RTN","ORMPS2",100,0)
 S RXO=$$RXO^ORMPS,RXC=$$RXC^ORMPS,ORIFN=+$G(ORIFN)
"RTN","ORMPS2",101,0)
 I ORIFN'>0 S ORERR="Missing or invalid order number" Q
"RTN","ORMPS2",102,0)
 D @($S(RXC:"IV",$G(ORCAT)="I":"UDOSE",1:"OUT")_"^ORMPS1") Q:$D(ORERR)
"RTN","ORMPS2",103,0)
 S ORDA=$$ACTION^ORCSAVE("XX",ORIFN,ORNP,"",ORNOW,ORWHO)
"RTN","ORMPS2",104,0)
 I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMPS2",105,0)
RO1 ; -Update sts of order to active, last action to dc/edit:
"RTN","ORMPS2",106,0)
 S ORX=ORDA F  S ORX=+$O(^OR(100,ORIFN,8,ORX),-1) Q:ORX'>0  I $D(^(ORX,0)),$P(^(0),U,15)="" Q  ;ORX=last released action
"RTN","ORMPS2",107,0)
 S:ORX $P(^OR(100,ORIFN,8,ORX,0),U,15)=12 ;dc/edit
"RTN","ORMPS2",108,0)
 S $P(^OR(100,ORIFN,3),U,7)=ORDA,NEWSTS=$S('$G(ORSTS):0,ORSTS=$P(^(3),U,3):0,1:1) K ^(6)
"RTN","ORMPS2",109,0)
 D STATUS^ORCSAVE2(ORIFN,ORSTS):NEWSTS,SETALL^ORDD100(ORIFN):'NEWSTS
"RTN","ORMPS2",110,0)
 D DATES^ORCSAVE2(ORIFN,ORSTRT,ORSTOP)
"RTN","ORMPS2",111,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,ORWHO,ORNATR)
"RTN","ORMPS2",112,0)
 ; -If unsigned edit, leave XX unsigned & mark ORX as Sig Not Req'd
"RTN","ORMPS2",113,0)
 S ORSIG=$S($P($G(^OR(100,ORIFN,8,ORX,0)),U,4)'=2:1,1:0)
"RTN","ORMPS2",114,0)
 D SIGSTS^ORCSAVE2(ORIFN,ORDA):ORSIG,SIGN^ORCSAVE2(ORIFN,,,5,ORX):'ORSIG
"RTN","ORMPS2",115,0)
RO2 ; -Update responses, get/save new order text:
"RTN","ORMPS2",116,0)
 K ^OR(100,ORIFN,4.5) D RESPONSE^ORCSAVE,ORDTEXT^ORCSAVE1(ORIFN_";"_ORDA)
"RTN","ORMPS2",117,0)
 S $P(^OR(100,ORIFN,0),U,5)=ORDIALOG_";ORD(101.41,",$P(^(0),U,14)=ORPKG
"RTN","ORMPS2",118,0)
 I $P(^OR(100,ORIFN,0),U,11)'=ORDG D  ;update DG,xrefs
"RTN","ORMPS2",119,0)
 . N DA,DR,DIE
"RTN","ORMPS2",120,0)
 . S DA=ORIFN,DR="23////"_ORDG,DIE="^OR(100," D ^DIE
"RTN","ORMPS2",121,0)
 S ^OR(100,ORIFN,4)=PKGIFN,$P(^(8,ORDA,0),U,14)=ORDA
"RTN","ORMPS2",122,0)
 S ORIFN=ORIFN_";"_ORDA,ORDCNTRL="SN" ;to send NA msg back
"RTN","ORMPS2",123,0)
 I $G(ORL) S ORP(1)=ORIFN_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMPS2",124,0)
 I $G(ORCAT)="O" S ZSC=$$ZSC^ORMPS1 I ZSC,$P(ZSC,"|",2)'?2.3U S ^OR(100,+ORIFN,5)=$TR($P(ZSC,"|",2,7),"|","^") ;1 or 0 instead of [N]SC in #100
"RTN","ORMPS2",125,0)
 Q
"RTN","ORMTIM01")
0^57^B14361893
"RTN","ORMTIM01",1,0)
ORMTIM01 ; RJS/SLC-ISC - PROCESS TIME BASED EVENT ;2/01/00  10:30
"RTN","ORMTIM01",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**31,40,190**;Dec 17, 1997
"RTN","ORMTIM01",3,0)
 ;
"RTN","ORMTIM01",4,0)
SCAN ;
"RTN","ORMTIM01",5,0)
 S OCXORMTR="ORMTIME: scan"
"RTN","ORMTIM01",6,0)
 N OCXNOW,OCXDATE,OCXTMT,OCXORD S OCXNOW=$$IDATE("NOW"),OCXTMT=$$IDATE("N+1H")
"RTN","ORMTIM01",7,0)
 ;
"RTN","ORMTIM01",8,0)
 ;  Expire orders
"RTN","ORMTIM01",9,0)
 ;
"RTN","ORMTIM01",10,0)
 S OCXORMTR="ORMTIME: scan expiring orders"
"RTN","ORMTIM01",11,0)
 S OCXDATE=0 F  S OCXDATE=$O(^OR(100,"AE",OCXDATE)) Q:'OCXDATE  I '((+OCXDATE)>OCXNOW) D
"RTN","ORMTIM01",12,0)
 .S OCXORD=0 F  S OCXORD=$O(^OR(100,"AE",OCXDATE,OCXORD)) Q:'OCXORD  D
"RTN","ORMTIM01",13,0)
 ..D EXP^OCXOTIME(OCXDATE,OCXORD)
"RTN","ORMTIM01",14,0)
 ..I $G(^OR(100,"AE",OCXDATE,OCXORD)),(^OR(100,"AE",OCXDATE,OCXORD)>OCXNOW) Q
"RTN","ORMTIM01",15,0)
 ..S ^OR(100,"AE",OCXDATE,OCXORD)=OCXTMT
"RTN","ORMTIM01",16,0)
 ..N OCXORMTR S OCXORMTR=" Executing: D EXP^ORMEVNT("_OCXORD_","_OCXDATE_")"
"RTN","ORMTIM01",17,0)
 ..D EXP^ORB3F1(OCXDATE,OCXORD)
"RTN","ORMTIM01",18,0)
 ..D EXP^ORMEVNT(OCXORD,OCXDATE)
"RTN","ORMTIM01",19,0)
 ..S:$D(^OR(100,"AE",OCXDATE,OCXORD)) ^OR(100,"AE",OCXDATE,OCXORD)=""
"RTN","ORMTIM01",20,0)
 D DELEXP^ORB3F1  ;delete old expired orders from ^XTMP("ORAE"
"RTN","ORMTIM01",21,0)
 ;
"RTN","ORMTIM01",22,0)
 ;  Activate orders
"RTN","ORMTIM01",23,0)
 ;
"RTN","ORMTIM01",24,0)
 S OCXORMTR="ORMTIME: scan activating orders"
"RTN","ORMTIM01",25,0)
 S OCXDATE=0 F  S OCXDATE=$O(^OR(100,"AD",OCXDATE)) Q:'OCXDATE  I '((+OCXDATE)>OCXNOW) D
"RTN","ORMTIM01",26,0)
 .S OCXORD=0 F  S OCXORD=$O(^OR(100,"AD",OCXDATE,OCXORD)) Q:'OCXORD  D
"RTN","ORMTIM01",27,0)
 ..D ACT^OCXOTIME(OCXDATE,OCXORD)
"RTN","ORMTIM01",28,0)
 ..I $G(^OR(100,"AD",OCXDATE,OCXORD)),(^OR(100,"AD",OCXDATE,OCXORD)>OCXNOW) Q
"RTN","ORMTIM01",29,0)
 ..S ^OR(100,"AD",OCXDATE,OCXORD)=OCXTMT
"RTN","ORMTIM01",30,0)
 ..N OCXORMTR S OCXORMTR=" Executing: D ACTIVE^ORMEVNT("_OCXORD_","_OCXDATE_")"
"RTN","ORMTIM01",31,0)
 ..D ACTIVE^ORMEVNT(OCXORD,OCXDATE)
"RTN","ORMTIM01",32,0)
 ..S:$D(^OR(100,"AD",OCXDATE,OCXORD)) ^OR(100,"AD",OCXDATE,OCXORD)=""
"RTN","ORMTIM01",33,0)
 ;
"RTN","ORMTIM01",34,0)
 ; Trigger Task/Time-driven Notifications
"RTN","ORMTIM01",35,0)
 ;
"RTN","ORMTIM01",36,0)
 S OCXORMTR=" Executing: D TNOTIFS^ORB3TIM1"
"RTN","ORMTIM01",37,0)
 D TNOTIFS^ORB3TIM1
"RTN","ORMTIM01",38,0)
 ;
"RTN","ORMTIM01",39,0)
 ;   Run Order Check Purges
"RTN","ORMTIM01",40,0)
 ;
"RTN","ORMTIM01",41,0)
 I $L($T(^OCXOPURG)) D
"RTN","ORMTIM01",42,0)
 .S OCXORMTR="ORMTIME: Run purge for order checking"
"RTN","ORMTIM01",43,0)
 .D EN^OCXOPURG
"RTN","ORMTIM01",44,0)
 ;
"RTN","ORMTIM01",45,0)
 ;   ^ORYX("ORERR" CPRS Errors Purge
"RTN","ORMTIM01",46,0)
 ;
"RTN","ORMTIM01",47,0)
 I $O(^ORYX("ORERR",0)) D
"RTN","ORMTIM01",48,0)
 .N %DT,ORD0,ORDATE,ORKILL,ORLIMIT,ORNODE,X,Y
"RTN","ORMTIM01",49,0)
 .;
"RTN","ORMTIM01",50,0)
 .S ORLIMIT=$$GET^XPAR("ALL","ORPF ERROR DAYS") S:(ORLIMIT<1) ORLIMIT=2
"RTN","ORMTIM01",51,0)
 .S X="TODAY-"_ORLIMIT,%DT="" D ^%DT S ORLIMIT=Y
"RTN","ORMTIM01",52,0)
 .;
"RTN","ORMTIM01",53,0)
 .I '$O(^ORYX("ORERR","B",0)) S ORD0=0 F  S ORD0=$O(^ORYX("ORERR",ORD0)) Q:'ORD0  D
"RTN","ORMTIM01",54,0)
 ..S ^ORYX("ORERR","B",+$G(^ORYX("ORERR",ORD0,0)),ORD0)=""
"RTN","ORMTIM01",55,0)
 .;
"RTN","ORMTIM01",56,0)
 .S ORDATE="" F  S ORDATE=$O(^ORYX("ORERR","B",ORDATE)) Q:'$L(ORDATE)  D
"RTN","ORMTIM01",57,0)
 ..S ORD0=0 F  S ORD0=$O(^ORYX("ORERR","B",ORDATE,ORD0)) Q:'ORD0  D
"RTN","ORMTIM01",58,0)
 ...S ORNODE=$G(^ORYX("ORERR",ORD0,0))
"RTN","ORMTIM01",59,0)
 ...I (+ORNODE<ORLIMIT) K ^ORYX("ORERR",ORD0) S ORKILL=1
"RTN","ORMTIM01",60,0)
 ..I (ORDATE<ORLIMIT) K ^ORYX("ORERR","B",ORDATE) S ORKILL=1
"RTN","ORMTIM01",61,0)
 .;
"RTN","ORMTIM01",62,0)
 .S ORLIMIT=10000 ; **NOTE**  This limit is on the number of entries in the CPRS error log
"RTN","ORMTIM01",63,0)
 .;
"RTN","ORMTIM01",64,0)
 .I $G(ORKILL)!($P(^ORYX("ORERR",0),U,4)>ORLIMIT) D
"RTN","ORMTIM01",65,0)
 ..N ORD0,ORD1,ORPREV,ORCNT
"RTN","ORMTIM01",66,0)
 ..S ORD0=0 F ORCNT=0:1 S ORPREV=ORD0,ORD0=$O(^ORYX("ORERR",ORD0)) Q:'ORD0
"RTN","ORMTIM01",67,0)
 ..S $P(^ORYX("ORERR",0),U,3,4)=ORPREV_U_ORCNT
"RTN","ORMTIM01",68,0)
 ..;
"RTN","ORMTIM01",69,0)
 ..S ORD0=0 F ORD1=ORLIMIT:1:ORCNT S ORPREV=ORD0,ORD0=$O(^ORYX("ORERR",ORD0)) Q:'ORD0  D
"RTN","ORMTIM01",70,0)
 ...S ORNODE=$G(^ORYX("ORERR",ORD0,0))
"RTN","ORMTIM01",71,0)
 ...K ^ORYX("ORERR",ORD0),^ORYX("ORERR","B",+ORNODE)
"RTN","ORMTIM01",72,0)
 ..S $P(^ORYX("ORERR",0),U,3,4)=ORPREV_U_ORLIMIT
"RTN","ORMTIM01",73,0)
 ;
"RTN","ORMTIM01",74,0)
 ;  Time Based Events for Order Checking
"RTN","ORMTIM01",75,0)
 ;
"RTN","ORMTIM01",76,0)
 I $L($T(^OCXOTIME)) D
"RTN","ORMTIM01",77,0)
 .S OCXORMTR="ORMTIME: scan time based events for order checking"
"RTN","ORMTIM01",78,0)
 .D EN^OCXOTIME
"RTN","ORMTIM01",79,0)
 ;
"RTN","ORMTIM01",80,0)
 S OCXORMTR="Finish Job #: "_$J_"  at: "_$$EDATE($$IDATE("N"))
"RTN","ORMTIM01",81,0)
 ;
"RTN","ORMTIM01",82,0)
 Q
"RTN","ORMTIM01",83,0)
 ;
"RTN","ORMTIM01",84,0)
EDATE(Y) X ^DD("DD") S:(Y["@") Y=$P(Y,"@",1)_" at "_$P(Y,"@",2) Q Y
"RTN","ORMTIM01",85,0)
 ;
"RTN","ORMTIM01",86,0)
IDATE(X) N %DT,Y S %DT="TF" D ^%DT Q Y
"RTN","ORMTIM01",87,0)
 ;
"RTN","ORMTIM01",88,0)
TIME(X) N M,H S M=$E(100+(X#60),2,3),H=$E(100+(X\60),2,3) Q H_M
"RTN","ORMTIM01",89,0)
 ;
"RTN","ORPRF")
0^37^B8382678
"RTN","ORPRF",1,0)
ORPRF ;SLC/JLI-Patient record flag ;2/28/03
"RTN","ORPRF",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**173,187,190**;Dec 17, 1997
"RTN","ORPRF",3,0)
 ;
"RTN","ORPRF",4,0)
 ; ^TMP("ORPRF",$J,NN) store the flag array.
"RTN","ORPRF",5,0)
 ;
"RTN","ORPRF",6,0)
FMT(ROOT) ; Convert record flag data to displayable data
"RTN","ORPRF",7,0)
 N IDX,IX,CNT
"RTN","ORPRF",8,0)
 S (IDX,IX,CNT)=0
"RTN","ORPRF",9,0)
 F  S IDX=$O(ROOT(IDX)) Q:'IDX  D
"RTN","ORPRF",10,0)
 . S ^TMP("ORPRF",$J,IDX,"FLAG")=$P($G(ROOT(IDX,"FLAG")),U,2)
"RTN","ORPRF",11,0)
 . S ^TMP("ORPRF",$J,IDX,"CATEGORY")=$P($G(ROOT(IDX,"CATEGORY")),U,2)
"RTN","ORPRF",12,0)
 . S CNT=CNT+1,^TMP("ORPRF",$J,IDX,CNT)="Flag Name:               "_$P($G(ROOT(IDX,"FLAG")),U,2)
"RTN","ORPRF",13,0)
 . S CNT=CNT+1,^TMP("ORPRF",$J,IDX,CNT)="Flag Type:               "_$P($G(ROOT(IDX,"FLAGTYPE")),U,2)
"RTN","ORPRF",14,0)
 . S CNT=CNT+1,^TMP("ORPRF",$J,IDX,CNT)="Flag Category:           "_$P($G(ROOT(IDX,"CATEGORY")),U,2)
"RTN","ORPRF",15,0)
 . S CNT=CNT+1,^TMP("ORPRF",$J,IDX,CNT)="Assignment Status:       "_"Active"
"RTN","ORPRF",16,0)
 . S CNT=CNT+1,^TMP("ORPRF",$J,IDX,CNT)="Initial Assigned Date:   "_$P($G(ROOT(IDX,"ASSIGNDT")),U,2)
"RTN","ORPRF",17,0)
 . S CNT=CNT+1,^TMP("ORPRF",$J,IDX,CNT)="Approved by:             "_$P($G(ROOT(IDX,"APPRVBY")),U,2)
"RTN","ORPRF",18,0)
 . S CNT=CNT+1,^TMP("ORPRF",$J,IDX,CNT)="Next Review Date:        "_$P($G(ROOT(IDX,"REVIEWDT")),U,2)
"RTN","ORPRF",19,0)
 . S CNT=CNT+1,^TMP("ORPRF",$J,IDX,CNT)="Owner Site:              "_$P($G(ROOT(IDX,"OWNER")),U,2)
"RTN","ORPRF",20,0)
 . S CNT=CNT+1,^TMP("ORPRF",$J,IDX,CNT)="Originating Site:        "_$P($G(ROOT(IDX,"ORIGSITE")),U,2)
"RTN","ORPRF",21,0)
 . Q:'$D(ROOT(IDX,"NARR"))
"RTN","ORPRF",22,0)
 . S CNT=CNT+1,^TMP("ORPRF",$J,IDX,CNT)="            "
"RTN","ORPRF",23,0)
 . S CNT=CNT+1,^TMP("ORPRF",$J,IDX,CNT)="Assignment Narratives:   "
"RTN","ORPRF",24,0)
 . F  S IX=$O(ROOT(IDX,"NARR",IX)) Q:'IX  D
"RTN","ORPRF",25,0)
 . . S CNT=CNT+1,^TMP("ORPRF",$J,IDX,CNT)=$G(ROOT(IDX,"NARR",IX,0))
"RTN","ORPRF",26,0)
 K ROOT
"RTN","ORPRF",27,0)
 Q
"RTN","ORPRF",28,0)
 ;
"RTN","ORPRF",29,0)
HASFLG(ORY,PTDFN) ;If patient has record flag
"RTN","ORPRF",30,0)
 ;DBIA 3860: $$GETACT^DGPFAPI(PTDFN,.FLGDATA)
"RTN","ORPRF",31,0)
 I '$L($TEXT(GETACT^DGPFAPI)) S ORY=0 Q
"RTN","ORPRF",32,0)
 N IDY
"RTN","ORPRF",33,0)
 K ^TMP("ORPRF",$J)
"RTN","ORPRF",34,0)
 S ORY=$$GETACT^DGPFAPI(PTDFN,"PRFARR")
"RTN","ORPRF",35,0)
 Q:'ORY
"RTN","ORPRF",36,0)
 D FMT(.@("PRFARR"))
"RTN","ORPRF",37,0)
 K PRFARR
"RTN","ORPRF",38,0)
 S IDY=0 F  S IDY=$O(^TMP("ORPRF",$J,IDY)) Q:'IDY  D
"RTN","ORPRF",39,0)
 . S ORY(IDY)=IDY_U_$G(^TMP("ORPRF",$J,IDY,"FLAG"))
"RTN","ORPRF",40,0)
 Q
"RTN","ORPRF",41,0)
 ;
"RTN","ORPRF",42,0)
HASCAT1(ORY) ;If patient has Category I flag
"RTN","ORPRF",43,0)
 ;
"RTN","ORPRF",44,0)
 Q:'$D(^TMP("ORPRF",$J))
"RTN","ORPRF",45,0)
 N ID,IX,CNT,TOT S (ID,CNT,TOT)=0
"RTN","ORPRF",46,0)
 F  S ID=$O(^TMP("ORPRF",$J,ID)) Q:'ID  D
"RTN","ORPRF",47,0)
 . ;I $P($G(^TMP("ORPRF",$J,ID,"CATEGORY"))," ")'="I" Q
"RTN","ORPRF",48,0)
 . S TOT=TOT+1
"RTN","ORPRF",49,0)
 . S CNT=CNT+1
"RTN","ORPRF",50,0)
 . S ORY(CNT)="~"_ID_U_$G(^TMP("ORPRF",$J,ID,"FLAG"))
"RTN","ORPRF",51,0)
 . S IX=0 F  S IX=$O(^TMP("ORPRF",$J,ID,IX)) Q:'IX  D
"RTN","ORPRF",52,0)
 . . S CNT=CNT+1,ORY(CNT)=$G(^TMP("ORPRF",$J,ID,IX))
"RTN","ORPRF",53,0)
 S:TOT ORY(0)="TOT"_U_TOT
"RTN","ORPRF",54,0)
 Q
"RTN","ORPRF",55,0)
 ;
"RTN","ORPRF",56,0)
GETFLG(ORY,PTDFN,FLAGID) ;Return detail flag information
"RTN","ORPRF",57,0)
 I '$D(^TMP("ORPRF",$J,FLAGID)) Q
"RTN","ORPRF",58,0)
 N IX,CNT
"RTN","ORPRF",59,0)
 S (IX,CNT)=0
"RTN","ORPRF",60,0)
 F  S IX=$O(^TMP("ORPRF",$J,FLAGID,IX)) Q:'IX  D
"RTN","ORPRF",61,0)
 . S CNT=CNT+1,ORY(CNT)=$G(^TMP("ORPRF",$J,FLAGID,IX))
"RTN","ORPRF",62,0)
 Q
"RTN","ORPRF",63,0)
 ;
"RTN","ORPRF",64,0)
CLEAR(ORY) ;Clear up the temp globe
"RTN","ORPRF",65,0)
 K ^TMP("ORPRF",$J)
"RTN","ORPRF",66,0)
 Q
"RTN","ORPRF",67,0)
 ;
"RTN","ORPRPM")
0^70^B60368587
"RTN","ORPRPM",1,0)
ORPRPM ;DAN/SLC Performance Measure; ;4/8/04  09:53
"RTN","ORPRPM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**107,114,119,196,190**;Dec 17, 1997
"RTN","ORPRPM",3,0)
 ;
"RTN","ORPRPM",4,0)
 ;DBIA SECTION
"RTN","ORPRPM",5,0)
 ;4195 - EN^PSOTPCUL
"RTN","ORPRPM",6,0)
 ;
"RTN","ORPRPM",7,0)
 ;This routine will print a report indicating the percent of
"RTN","ORPRPM",8,0)
 ;orders entered for a provider by a provider holding the ORES key.
"RTN","ORPRPM",9,0)
 ;The data for the report will be stored in ^TMP as follows:
"RTN","ORPRPM",10,0)
 ;^TMP($J,"SUM",Provider Name,Patient Status)=Total # of order (universe)^Denominator^Numerator^Verbal^Written^Telephone^Policy^Electronically entered^Student entered^Outpatient narcotic orders
"RTN","ORPRPM",11,0)
 ;Where Patient Status is I for inpatient or O for outpatient.
"RTN","ORPRPM",12,0)
 ;
"RTN","ORPRPM",13,0)
 N DIR,ORSD,ORED,ORPROV,ORTYPE,ORPT,ORREP,ORPIECE,Y,DIRUT,DUOUT,DTOUT,ZTRTN,ORDT,ORIEN,ORACT0,ORPVID,PG,REPDT,ORSTOP,ORI,ORJ,ORPAT,ORTOT,ORSTOT,X,ORPVNM,ORORD,ORPTST,ORP,ORWROTE,ORNS,ORFS,ORPFILE
"RTN","ORPRPM",14,0)
 D GETDATE K DIR Q:$D(DIRUT)  ;quit if no dates selected ;get start and end dates
"RTN","ORPRPM",15,0)
 D GETPROV K DIR Q:'$D(ORPROV)!($G(ORPROV)'="ALL"&($D(ORPROV)'=11))!($D(DUOUT))!($D(DTOUT))  ;quit if user didn't select all providers or if didn't choose individual providers or if user timed out or up-arrowed out
"RTN","ORPRPM",16,0)
 D GETOTHER Q:$D(DIRUT)  ;quit if any questions were unanswered in this section
"RTN","ORPRPM",17,0)
 S ZTRTN="DQ^ORPRPM" D QUE^ORUTL1(ZTRTN,"CPRS Performance Monitor")
"RTN","ORPRPM",18,0)
 Q
"RTN","ORPRPM",19,0)
 ;
"RTN","ORPRPM",20,0)
GETDATE ;Prompt for start and end dates
"RTN","ORPRPM",21,0)
 S DIR(0)="DO^:DT:AE",DIR("A")="Enter starting date",DIR("?")="Enter date to begin searching from" D ^DIR Q:$D(DIRUT)  S ORSD=Y
"RTN","ORPRPM",22,0)
 S DIR(0)="DOA^"_ORSD_":DT:AE",DIR("A")="Enter ending date: ",DIR("?")="Enter date to stop searching.  Must be between "_$$FMTE^XLFDT(ORSD,2)_" and "_$$FMTE^XLFDT(DT,2) D ^DIR Q:$D(DIRUT)
"RTN","ORPRPM",23,0)
 S ORED=Y_.24,ORSD=ORSD-.1 ;Set end date to end of day, start date back to include current day
"RTN","ORPRPM",24,0)
 Q  ;End GETDATE
"RTN","ORPRPM",25,0)
 ;
"RTN","ORPRPM",26,0)
GETPROV ;Allow selection of all/single/multiple providers
"RTN","ORPRPM",27,0)
 ;return ORPROV="ALL" for all providers or ORPROV array for individual providers
"RTN","ORPRPM",28,0)
 S DIR(0)="Y",DIR("A")="Do you want ALL providers to appear on this report",DIR("B")="Y",DIR("?")="Enter Yes to search for all providers.  Enter No to select individual providers"  D ^DIR Q:$D(DIRUT)  S ORPROV=$S(Y=1:"ALL",1:"") Q:ORPROV="ALL"
"RTN","ORPRPM",29,0)
 K DIR ;clear DIR variables before getting individual providers
"RTN","ORPRPM",30,0)
 F  D  Q:$D(DIRUT)  ;quit when finished selecting
"RTN","ORPRPM",31,0)
 .S DIR(0)="PO^200:AEQM",DIR("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U)))",DIR("A")="Select "_$S($D(ORPROV)=11:"another ",1:"")_"provider"
"RTN","ORPRPM",32,0)
 .S DIR("?")="Select providers to appear on report.  Return when finished, ^ to stop processing" D ^DIR Q:$D(DIRUT)  S ORPROV(+Y)=""
"RTN","ORPRPM",33,0)
 Q  ;End GETPROV
"RTN","ORPRPM",34,0)
 ;
"RTN","ORPRPM",35,0)
GETOTHER ;Get order type, patient type, and summary only report response
"RTN","ORPRPM",36,0)
 ;Get order type first
"RTN","ORPRPM",37,0)
 S DIR(0)="S^A:All orders;P:Pharmacy orders only",DIR("A")="Select order category",DIR("B")="P",DIR("?")="Enter P to see pharmacy orders only.  Enter A to see all orders. Enter ^ to quit" D ^DIR Q:$D(DIRUT)  S ORTYPE=Y
"RTN","ORPRPM",38,0)
 K DIR
"RTN","ORPRPM",39,0)
 ;Get patient status
"RTN","ORPRPM",40,0)
 S DIR(0)="S^I:Inpatient;O:Outpatient;B:Both",DIR("A")="Select patient status",DIR("B")="B",DIR("?")="Enter patient status at time of order.  Enter ^ to quit" D ^DIR Q:$D(DIRUT)  S ORPT=Y
"RTN","ORPRPM",41,0)
 K DIR
"RTN","ORPRPM",42,0)
 ;Ask if user desires facility subtotal, summary, detail, or both (detail and summary) reports
"RTN","ORPRPM",43,0)
 S DIR(0)="S^S:Summary (includes provider details);D:Detail (includes order details);B:Both (Summary & Detail);T:Summary Report Totals Only (no provider details)",DIR("A")="Select report",DIR("B")="S"
"RTN","ORPRPM",44,0)
 D ^DIR Q:$D(DIRUT)  S ORREP=Y,ORFS=0 I Y="T" S ORREP="S",ORFS=1
"RTN","ORPRPM",45,0)
 K DIR
"RTN","ORPRPM",46,0)
 Q  ;End GETOTHER
"RTN","ORPRPM",47,0)
 ;
"RTN","ORPRPM",48,0)
DQ ;Come here to do build and print from QUE^ORUTL either direct or tasked
"RTN","ORPRPM",49,0)
 U IO K ^TMP($J) ;clean out temp space
"RTN","ORPRPM",50,0)
 S ORDT=ORSD F  S ORDT=$O(^OR(100,"AF",ORDT)) Q:'ORDT!(ORDT>ORED)  S ORIEN="" F  S ORIEN=$O(^OR(100,"AF",ORDT,ORIEN)) Q:'ORIEN  I $O(^OR(100,"AF",ORDT,ORIEN,0))=1 I $D(^OR(100,ORIEN,8,1,0)) D CHECK
"RTN","ORPRPM",51,0)
 D PRINT^ORPRPM1
"RTN","ORPRPM",52,0)
 K ^TMP($J)
"RTN","ORPRPM",53,0)
 Q
"RTN","ORPRPM",54,0)
 ;
"RTN","ORPRPM",55,0)
CHECK ;If order matches requirements then save
"RTN","ORPRPM",56,0)
 S ORPFILE=$P($G(^OR(100,ORIEN,0)),"^",2) Q:ORPFILE=""  ;Quit if no object of order
"RTN","ORPRPM",57,0)
 I $P(ORPFILE,";",2)["DPT" Q:$P($G(^DPT(+$P($G(^OR(100,ORIEN,0)),"^",2),0)),"^",21)  ;Quit if test patient
"RTN","ORPRPM",58,0)
 Q:+$P($G(^OR(100,ORIEN,3)),"^",11)'=0  ;190 quit if order type not standard
"RTN","ORPRPM",59,0)
 S ORPTST=$P($G(^OR(100,ORIEN,0)),"^",12) ;patient status (in/out)
"RTN","ORPRPM",60,0)
 I ORPT'="B" Q:ORPTST'=ORPT  ;Quit if patient status is not 'both' and status doesn't match selected status
"RTN","ORPRPM",61,0)
 S ORNS=$$NMSP^ORCD($P($G(^OR(100,ORIEN,0)),"^",14))
"RTN","ORPRPM",62,0)
 I ORTYPE'="A"&(ORNS'="PS") Q  ;if not getting all types of orders then quit if order is not from pharmacy
"RTN","ORPRPM",63,0)
 I ORPTST="O",ORNS="PS",$G(^OR(100,ORIEN,4))=+$G(^OR(100,ORIEN,4)),$L($T(EN^PSOTPCUL)) Q:$$EN^PSOTPCUL($G(^OR(100,ORIEN,4)))  ;196 Don't count if outpatient pharm order is a transitional pharmacy benefit order
"RTN","ORPRPM",64,0)
 S ORACT0=$G(^OR(100,ORIEN,8,1,0)),ORORD=$P(ORACT0,"^",12) ;ORORD holds nature of order ien
"RTN","ORPRPM",65,0)
 S ORPVID=$P(ORACT0,"^",3) I ORPROV'="ALL" Q:'$D(ORPROV(ORPVID))  ;quit if ordering provider doesn't match user selected provider
"RTN","ORPRPM",66,0)
 S ORPVNM=$P($G(^VA(200,ORPVID,0)),"^") ;get provider name
"RTN","ORPRPM",67,0)
 Q:'$D(^XUSEC("ORES",ORPVID))  ;quit if ordering provider doesn't have ORES key DBIA # 10076 allows direct read of XUSEC
"RTN","ORPRPM",68,0)
 Q:"^1^2^3^5^8^"'[("^"_ORORD_"^")  ;quit if NATURE OF ORDER is not verbal, written, telephoned, policy, or electronically entered
"RTN","ORPRPM",69,0)
 D COUNT ;Count order
"RTN","ORPRPM",70,0)
 Q
"RTN","ORPRPM",71,0)
 ;
"RTN","ORPRPM",72,0)
COUNT ;This section determines how the order should be counted
"RTN","ORPRPM",73,0)
 N OREB,ORPIECE
"RTN","ORPRPM",74,0)
 D ADD(1) ;Add one to universe (total # of orders)
"RTN","ORPRPM",75,0)
 S OREB=$P(ORACT0,"^",13) ;Entered by
"RTN","ORPRPM",76,0)
 S ^TMP($J,"DET",ORPVNM,ORIEN)=$D(^XUSEC("ORES",OREB))&(OREB=ORPVID) ;Mark "HAS ORES" column for detailed listing if entered by = provider and has ORES key
"RTN","ORPRPM",77,0)
 I OREB=ORPVID D ADD(2),ADD(3) Q  ;if order entered by provider then add one to denominator and numerator
"RTN","ORPRPM",78,0)
 I ORNS="PS" I $$OIDEA=1 D ADD(10) Q  ;If order requires wet signature add one to narcotic group
"RTN","ORPRPM",79,0)
 I $$STUDENT D ADD(9) Q  ;If order entered by student add one to student group
"RTN","ORPRPM",80,0)
 S ORPIECE=$S(ORORD=1:4,ORORD=2:5,ORORD=3:6,ORORD=8:7,1:8) D ADD(ORPIECE) ;add to exceptions group for orders not entered by provider
"RTN","ORPRPM",81,0)
 I ORORD'=5 D ADD(2) ;Add to denominator if not policy order
"RTN","ORPRPM",82,0)
 Q
"RTN","ORPRPM",83,0)
 ;
"RTN","ORPRPM",84,0)
ADD(PIECE) ;Add one to storage
"RTN","ORPRPM",85,0)
 S $P(^TMP($J,"SUM",ORPVNM,ORPTST),"^",PIECE)=$P($G(^TMP($J,"SUM",ORPVNM,ORPTST)),"^",PIECE)+1 Q
"RTN","ORPRPM",86,0)
 ;
"RTN","ORPRPM",87,0)
OIDEA() ;Check to see if pharmacy order requires wet signature
"RTN","ORPRPM",88,0)
 ;dbia 3373 allows call to pharmacy API or dbia 221 allows direct read of ^PSDRUG if routine doesn't exist yet
"RTN","ORPRPM",89,0)
 N OI,PSOI,SIGREQ,PSSXOLP,PSSXOLPD,PSSXOLPX,PSSXNODD,PSSPKLX
"RTN","ORPRPM",90,0)
 Q:ORPTST'="O" 0 ;quit if inpatient
"RTN","ORPRPM",91,0)
 S OI=$$VALUE^ORX8(ORIEN,"ORDERABLE") ;get orderable item
"RTN","ORPRPM",92,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2) I PSOI'>0 Q 0 ;quit if no pharmacy orderable item
"RTN","ORPRPM",93,0)
 I $L($T(OIDEA^PSSUTLA1)) S SIGREQ=$$OIDEA^PSSUTLA1(PSOI,"O") Q:SIGREQ=1 1 Q 0 ;If SIGREQ = 1 then wet signature required
"RTN","ORPRPM",94,0)
 S (PSSXOLPD,PSSXNODD)=0
"RTN","ORPRPM",95,0)
 S PSSPKLX=0
"RTN","ORPRPM",96,0)
 F PSSXOLP=0:0 S PSSXOLP=$O(^PSDRUG("ASP",PSOI,PSSXOLP)) Q:'PSSXOLP!(PSSXOLPD=1)  D
"RTN","ORPRPM",97,0)
 .I $P($G(^PSDRUG(PSSXOLP,"I")),"^"),$P($G(^("I")),"^")<DT Q
"RTN","ORPRPM",98,0)
 .I 'PSSPKLX,$P($G(^PSDRUG(PSSXOLP,2)),"^",3)'["O" Q
"RTN","ORPRPM",99,0)
 .I PSSPKLX I $P($G(^PSDRUG(PSSXOLP,2)),"^",3)'["U",$P($G(^(2)),"^",3)'["I" Q
"RTN","ORPRPM",100,0)
 .S PSSXNODD=1
"RTN","ORPRPM",101,0)
 .S PSSXOLPX=$P($G(^PSDRUG(PSSXOLP,0)),"^",3)
"RTN","ORPRPM",102,0)
 .I PSSXOLPX[1!(PSSXOLPX[2)!((PSSXOLPX[3)&(PSSXOLPX["A")) S PSSXOLPD=1 Q
"RTN","ORPRPM",103,0)
 .I PSSXOLPX[3!(PSSXOLPX[4)!(PSSXOLPX[5) S PSSXOLPD=2
"RTN","ORPRPM",104,0)
 I PSSXOLPD=0,'PSSXNODD S PSSXOLPD=""
"RTN","ORPRPM",105,0)
 Q PSSXOLPD
"RTN","ORPRPM",106,0)
 ;
"RTN","ORPRPM",107,0)
STUDENT() ;Check to see if entered by is a student
"RTN","ORPRPM",108,0)
 ;Check USER CLASS for membership in "STUDENT" CLASS - DBIA 2324
"RTN","ORPRPM",109,0)
 ;Then check PROVIDER CLASS in NEW PERSON file for "STUDENT" - DBIA 10060
"RTN","ORPRPM",110,0)
 N ORCLASS,ORSUB,EXPIRE,ORUSR
"RTN","ORPRPM",111,0)
 D WHATIS^USRLM(OREB,"ORCLASS") ;API to get user class membership
"RTN","ORPRPM",112,0)
 S ORSUB=0,ORUSR=0 F  S ORSUB=$O(ORCLASS(ORSUB)) Q:ORSUB=""!ORUSR  D
"RTN","ORPRPM",113,0)
 .I $$UP^XLFSTR(ORSUB)'["STUDENT" Q  ;User not a member of student class
"RTN","ORPRPM",114,0)
 .I ORDT'<+$P(ORCLASS(ORSUB),"^",4) S EXPIRE=$S(+$P(ORCLASS(ORSUB),"^",5):$P(ORCLASS(ORSUB),"^",5),1:9999999) I ORDT'>EXPIRE S ORUSR=1 ;member of student class and within date range for class
"RTN","ORPRPM",115,0)
 I ORUSR Q 1 ;User identified as a student
"RTN","ORPRPM",116,0)
 K ORCLASS
"RTN","ORPRPM",117,0)
 S DIC=200,DR=53.5,DA=OREB,DIQ="ORCLASS",DIQ(0)="E" D EN^DIQ1
"RTN","ORPRPM",118,0)
 I $G(ORCLASS(200,OREB,53.5,"E"))["STUDENT" Q 1 ;Provider class set to student
"RTN","ORPRPM",119,0)
 Q 0 ;User not a student
"RTN","ORQ1")
0^49^B9948654
"RTN","ORQ1",1,0)
ORQ1 ;slc/dcm-Get orders for a patient. ; 08 May 2002  2:12 PM
"RTN","ORQ1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**27,72,78,141,190**;Dec 17, 1997
"RTN","ORQ1",3,0)
EN(PAT,GROUP,FLG,EXPAND,SDATE,EDATE,DETAIL,MULT,XREF,GETKID,EVENT) ;Get orders
"RTN","ORQ1",4,0)
 ; Returns orders in ^TMP("ORR",$J,ORLIST,i) for defined context:
"RTN","ORQ1",5,0)
 ;
"RTN","ORQ1",6,0)
 ; PAT  =patient variable ptr in format "DFN;DPT("
"RTN","ORQ1",7,0)
 ; GROUP=Display group
"RTN","ORQ1",8,0)
 ; FLG  =#:                Includes status:
"RTN","ORQ1",9,0)
 ; 1. All               => 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
"RTN","ORQ1",10,0)
 ; 2. Active/Current    =>     3,4,5,6,  8,9,   11,         15
"RTN","ORQ1",11,0)
 ;    Includes CONTEXT HRS 1,2,7,13 & Action Status=13
"RTN","ORQ1",12,0)
 ;                         Orders in ^OR(100,"AC",PAT,TM,IFN,ACTION)
"RTN","ORQ1",13,0)
 ; 3. Discontinued      => 1                       12,13
"RTN","ORQ1",14,0)
 ; 4. Completed/Expired =>   2,        7
"RTN","ORQ1",15,0)
 ; 5. Expiring          =>     3,4,5,6,  8,9
"RTN","ORQ1",16,0)
 ; 6. Recent Activity   => 1,2,3,4,5,6,7,8,9,      12,      15
"RTN","ORQ1",17,0)
 ;                         Orders in ^OR(100,"AR",PAT,TM,IFN,ACTION)
"RTN","ORQ1",18,0)
 ; 7. Pending           =>         5
"RTN","ORQ1",19,0)
 ; 8. Unverified        => 1,  3,4,5,6,  8,9,               15
"RTN","ORQ1",20,0)
 ; 9. Unverified/Nurse  => 1,  3,4,5,6,  8,9,               15
"RTN","ORQ1",21,0)
 ;10. Unverified/Clerk  => 1,  3,4,5,6,  8,9,               15
"RTN","ORQ1",22,0)
 ;11. Unsigned          => 1,2,3,4,5,6,7,8,9,10,11,   13,14,15
"RTN","ORQ1",23,0)
 ;                         Orders in ^OR(100,"AS",PAT,TM,IFN)
"RTN","ORQ1",24,0)
 ;12. Flagged           => 1,2,3,4,5,6,7,8,9,      12,13,14,15
"RTN","ORQ1",25,0)
 ;13. Verbal/Phoned     => 1,2,3,4,5,6,7,8,9,         13,14,15
"RTN","ORQ1",26,0)
 ;                         Nature of order of verbal or phoned
"RTN","ORQ1",27,0)
 ;14. Verb/Phn unsigned => 1,2,3,4,5,6,7,8,9,         13,14,15
"RTN","ORQ1",28,0)
 ;                         Nature of order V or P & unsigned
"RTN","ORQ1",29,0)
 ;15. Admission         =>           6,      10
"RTN","ORQ1",30,0)
 ;16. Discharge         =>           6,      10
"RTN","ORQ1",31,0)
 ;17. Transfer          =>           6,      10
"RTN","ORQ1",32,0)
 ;                         Orders in ^OR(100,"AEVNT",PAT,EVENT,IFN)
"RTN","ORQ1",33,0)
 ;18. On Hold           =>     3
"RTN","ORQ1",34,0)
 ;19. New Orders        =>                   10,11
"RTN","ORQ1",35,0)
 ;                         Orders in ^TMP("ORNEW",$J,ORIFN)
"RTN","ORQ1",36,0)
 ;20. Chart Review      => 1,  3,4,5,6,  8,9,               15
"RTN","ORQ1",37,0)
 ;21. Chart Copy Summary=> same as All w/screen on Nature of order
"RTN","ORQ1",38,0)
 ;22. Lapsed            =>                               14
"RTN","ORQ1",39,0)
 ;23. Active status     =>         5,6
"RTN","ORQ1",40,0)
 ;24. All Delayed       =>           6,      10
"RTN","ORQ1",41,0)
 ;25. Out of OR         =>           6,      10
"RTN","ORQ1",42,0)
 ;26. Manual Release    =>           6,      10
"RTN","ORQ1",43,0)
 ;27. Expired           =>             7
"RTN","ORQ1",44,0)
 ;                         Orders in ^OR(100,"AEVNT",PAT,EVENT,IFN)
"RTN","ORQ1",45,0)
EN0 ; where order status=#:
"RTN","ORQ1",46,0)
 ; 1 => Discontinued (dc) 6 => Active (a)           11 => Unreleased (u)
"RTN","ORQ1",47,0)
 ; 2 => Complete (c)      7 => Expired (e)          12 => DC/Edit (dce)
"RTN","ORQ1",48,0)
 ; 3 => Hold (h)          8 => Scheduled (s)        13 => Cancelled (x)
"RTN","ORQ1",49,0)
 ; 4 => Flagged (?)       9 => Partial Results (pr) 14 => Lapsed (l)
"RTN","ORQ1",50,0)
 ; 5 => Pending (p)      10 => Delayed (d)          15 => Renewed (rn)
"RTN","ORQ1",51,0)
 ;                                                  99 => No Status (')
"RTN","ORQ1",52,0)
 ; EXPAND=ifn of parent order, used to expand child orders
"RTN","ORQ1",53,0)
 ; SDATE =Start date
"RTN","ORQ1",54,0)
 ; EDATE =End date
"RTN","ORQ1",55,0)
 ; DETAIL=Data to be returned (optional, default=0):
"RTN","ORQ1",56,0)
 ;     0 => ^TMP("ORR",$J,ORLIST,i) = order #
"RTN","ORQ1",57,0)
 ;     1 => ^TMP("ORR",$J,ORLIST,i) = order #^display group^when entered^
"RTN","ORQ1",58,0)
 ;                                    start d/t^stop d/t^status^sts abbrv
"RTN","ORQ1",59,0)
 ;          ^TMP("ORR",$J,ORLIST,i,"TX",j) = order text
"RTN","ORQ1",60,0)
 ; MULT  =0:Don't allow multiple occurrances of order
"RTN","ORQ1",61,0)
 ;       =1:Allow multiple occurances
"RTN","ORQ1",62,0)
 ; XREF  =cross reference to use instead of ACT (AW for completed orders)
"RTN","ORQ1",63,0)
 ; GETKID=includes children of multiple orders
"RTN","ORQ1",64,0)
 ; EVENT =ptr to Patient Event file #100.2, for orders tied to an event
"RTN","ORQ1",65,0)
 ;
"RTN","ORQ1",66,0)
EN1 ; -- start here
"RTN","ORQ1",67,0)
 Q:'$G(PAT)  N X,ORLST,ORGRP,LAPSE
"RTN","ORQ1",68,0)
 S:'$G(GROUP) GROUP=$O(^ORD(100.98,"B","ALL SERVICES",0))
"RTN","ORQ1",69,0)
 S:'$G(FLG) FLG=2 S:'$G(DETAIL) DETAIL=0 S:'$G(MULT) MULT=0
"RTN","ORQ1",70,0)
 I $G(EDATE)<$G(SDATE) S X=EDATE,EDATE=SDATE,SDATE=X
"RTN","ORQ1",71,0)
 I $G(EDATE) S EDATE=$S($L(EDATE,".")=2:EDATE+.0001,1:EDATE+1)
"RTN","ORQ1",72,0)
 I $G(SDATE) S SDATE=$S($L(SDATE,".")=2:SDATE-.0001,1:SDATE)
"RTN","ORQ1",73,0)
 S SDATE=9999999-$S($G(SDATE):SDATE,FLG=6:DT-.7641,1:0),EDATE=9999999-$S($G(EDATE):EDATE,FLG=6:DT+.2359,1:9999998)
"RTN","ORQ1",74,0)
 S ORLST=0,X=EDATE,EDATE=SDATE,SDATE=X D GRP(GROUP),LIST
"RTN","ORQ1",75,0)
 S LAPSE=+$$GET^XPAR("ALL","OR DELAYED ORDERS LAPSE DAYS")
"RTN","ORQ1",76,0)
 S:LAPSE LAPSE=$$FMADD^XLFDT(DT,(0-LAPSE)) ;=0 or cutoff date
"RTN","ORQ1",77,0)
 I "^15^16^17^24^25^26^"[(U_FLG_U)!$G(EVENT) D EN^ORQ13 G ENQ
"RTN","ORQ1",78,0)
 D @($S(FLG=2:"CUR",FLG=5:"EXG","^6^8^9^10^20^"[(U_FLG_U):"ACT",FLG=11:"SIG",FLG=19:"NEW","^1^3^4^7^12^13^14^18^21^22^23^27^"[(U_FLG_U):"LOOP",1:"QUIT")_"^ORQ11")
"RTN","ORQ1",79,0)
ENQ K ^TMP("ORGOTIT",$J)
"RTN","ORQ1",80,0)
 Q
"RTN","ORQ1",81,0)
 ;
"RTN","ORQ1",82,0)
LIST ;Get entry in ^TMP("ORR",$J,ORLIST)
"RTN","ORQ1",83,0)
 S ORLIST=$H
"RTN","ORQ1",84,0)
 L +^TMP("ORR",$J,ORLIST)
"RTN","ORQ1",85,0)
 I $D(^TMP("ORR",$J,ORLIST)) L -^TMP("ORR",$J,ORLIST) H 1 G LIST
"RTN","ORQ1",86,0)
 S ^TMP("ORR",$J,ORLIST)=""
"RTN","ORQ1",87,0)
 L -^TMP("ORR",$J,ORLIST)
"RTN","ORQ1",88,0)
 Q
"RTN","ORQ1",89,0)
 ;
"RTN","ORQ1",90,0)
GRP(DG) ;Setup display groups
"RTN","ORQ1",91,0)
 ;DG=Display group to expand
"RTN","ORQ1",92,0)
 N STK,MEM
"RTN","ORQ1",93,0)
 S ORGRP(DG)="",STK=1,STK(STK)=DG_"^0",STK(0)=0,MEM=0
"RTN","ORQ1",94,0)
 F  S MEM=$O(^ORD(100.98,+STK(STK),1,MEM)) D @$S(+MEM'>0:"POP",1:"PROC") Q:STK<1
"RTN","ORQ1",95,0)
 Q
"RTN","ORQ1",96,0)
 ;
"RTN","ORQ1",97,0)
POP S STK=STK-1,MEM=$P(STK(STK),"^",2)
"RTN","ORQ1",98,0)
 Q
"RTN","ORQ1",99,0)
PROC S $P(STK(STK),"^",2)=MEM,DG=$P(^ORD(100.98,+STK(STK),1,MEM,0),"^",1)
"RTN","ORQ1",100,0)
 S ORGRP(DG)="",STK=STK+1,STK(STK)=DG_"^0",MEM=0
"RTN","ORQ1",101,0)
 Q
"RTN","ORQ11")
0^50^B58131139
"RTN","ORQ11",1,0)
ORQ11 ;slc/dcm-Get patient orders in context ; 08 May 2002  2:12 PM
"RTN","ORQ11",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,27,48,72,78,99,94,148,141,177,186,190**;Dec 17, 1997
"RTN","ORQ11",3,0)
LOOP ; -- main loop through "ACT" x-ref
"RTN","ORQ11",4,0)
 I $G(XREF)="AW" D AW Q
"RTN","ORQ11",5,0)
 I $G(FLG)=27 D EXPD^ORQ12 Q
"RTN","ORQ11",6,0)
 K ^TMP("ORGOTIT",$J)
"RTN","ORQ11",7,0)
AWIN ;Jump in here to add active orders to AW context
"RTN","ORQ11",8,0)
 N TM,TO,IFN,X0,X3,X7,X8,STS,USTS,NOW,ACTOR,X
"RTN","ORQ11",9,0)
 S NOW=+$E($$NOW^XLFDT,1,12),TM=SDATE
"RTN","ORQ11",10,0)
 F  S TM=$O(^OR(100,"ACT",PAT,TM)) Q:'TM!(TM>EDATE)  S TO=0 F  S TO=$O(^OR(100,"ACT",PAT,TM,TO)) Q:'TO  I $D(ORGRP(TO)) D
"RTN","ORQ11",11,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"ACT",PAT,TM,TO,IFN)) Q:'IFN  I ('$D(^TMP("ORGOTIT",$J,IFN))!MULT),$D(^OR(100,IFN,0)),$D(^(3)) S X0=^(0),X3=^(3) D
"RTN","ORQ11",12,0)
 .. S ACTOR=0 F  S ACTOR=$O(^OR(100,"ACT",PAT,TM,TO,IFN,ACTOR)) Q:ACTOR<1  I '$D(^TMP("ORGOTIT",$J,IFN,ACTOR)),$D(^OR(100,IFN,8,ACTOR,0)),$P(^(0),U,15)'=13!(FLG=1) S X8=^(0),X7=$G(^(7)) D LP1
"RTN","ORQ11",13,0)
 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",14,0)
 Q
"RTN","ORQ11",15,0)
AW ; -- loop through "AW" x-ref
"RTN","ORQ11",16,0)
 K ^TMP("ORGOTIT",$J),^TMP("ORSORT",$J)
"RTN","ORQ11",17,0)
 N TM,TO,IFN,X0,X3,X7,X8,STS,USTS,NOW,ACTOR,X
"RTN","ORQ11",18,0)
 S NOW=+$E($$NOW^XLFDT,1,12),TO=0,SDATE=9999999-SDATE,EDATE=9999999-EDATE
"RTN","ORQ11",19,0)
 F  S TO=$O(^OR(100,"AW",PAT,TO)) Q:'TO  I $D(ORGRP(TO)) S TM=EDATE F  S TM=$O(^OR(100,"AW",PAT,TO,TM)) Q:'TM!(TM>SDATE)!(+TM<EDATE)  D
"RTN","ORQ11",20,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AW",PAT,TO,TM,IFN)) Q:'IFN  I ('$D(^TMP("ORGOTIT",$J,IFN))!MULT) D
"RTN","ORQ11",21,0)
 .. S ^TMP("ORSORT",$J,9999999-TM,TO,IFN)=""
"RTN","ORQ11",22,0)
 S TM=0 F  S TM=$O(^TMP("ORSORT",$J,TM)) Q:'TM  S TO=0 F  S TO=$O(^TMP("ORSORT",$J,TM,TO)) Q:'TO  D
"RTN","ORQ11",23,0)
 . S IFN=0 F  S IFN=$O(^TMP("ORSORT",$J,TM,TO,IFN)) Q:'IFN  I $D(^OR(100,IFN,0)),$D(^(3)) S X0=^(0),X3=^(3) D 
"RTN","ORQ11",24,0)
 .. S ACTOR=0 F  S ACTOR=$O(^OR(100,"ACT",PAT,9999999-$P(X0,U,7),TO,IFN,ACTOR)) Q:ACTOR<1  I '$D(^TMP("ORGOTIT",$J,IFN,ACTOR)),$D(^OR(100,IFN,8,ACTOR,0)),$P(^(0),U,15)'=13 S X8=^(0),X7=$G(^(7)) D LP1
"RTN","ORQ11",25,0)
 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",26,0)
 I +$$GET^XPAR("SYS","OR ORDER SUMMARY CONTEXT",1,"I")=2 S SDATE=9999999-SDATE,EDATE=9999999-EDATE D AWIN
"RTN","ORQ11",27,0)
 K ^TMP("ORSORT",$J),^TMP("ORGOTIT",$J)
"RTN","ORQ11",28,0)
 Q
"RTN","ORQ11",29,0)
LP1 ; -- main secondary loop
"RTN","ORQ11",30,0)
 Q:$P(X3,U,8)  Q:$P(X3,U,3)=99  S STS=$P(X3,U,3)
"RTN","ORQ11",31,0)
 I '$G(GETKID),$P(X3,U,9),'$P($G(^OR(100,$P(X3,U,9),3)),U,8),FLG'=11 Q
"RTN","ORQ11",32,0)
 I $L($P(X0,U,17)),"^10^11^"[(U_STS_U) S X=$$LAPSED^OREVNTX($P(X0,U,17))
"RTN","ORQ11",33,0)
 D @($S(FLG=2:"CUR1",FLG=3:"DC1",FLG=4:"COM1",FLG=5:"EXG1",FLG=7:"PEN1",FLG=8:"UVR1",FLG=9:"UVN1",FLG=10:"UVC1",FLG=12:"FLG1",FLG=13:"VP1",FLG=14:"VPU1",FLG=18:"HLD1",FLG=20:"CHT1",FLG=21:"CHTSUM",FLG=22:"LPS1",FLG=23:"AVT1",1:"ALL1"))
"RTN","ORQ11",34,0)
 Q
"RTN","ORQ11",35,0)
 ; ** FLG context specific loops:
"RTN","ORQ11",36,0)
 ;
"RTN","ORQ11",37,0)
ALL1 ; 1 -- secondary pass for All, Recent Orders, Unsigned
"RTN","ORQ11",38,0)
 D GET^ORQ12(IFN,ORLIST,DETAIL,$G(ACTOR))
"RTN","ORQ11",39,0)
 Q
"RTN","ORQ11",40,0)
 ;
"RTN","ORQ11",41,0)
CUR ; 2 -- Active/Current
"RTN","ORQ11",42,0)
 N X,X0,X1,X2,X3,%H,YD,%,TM,IFN,ACTOR
"RTN","ORQ11",43,0)
 I $G(GROUP)=$O(^ORD(100.98,"B","ALL SERVICES",0)),$G(ORWARD),$G(DGPMT)'=1 S X=$O(^ORD(100.98,"B","O RX",0)) K:X ORGRP(X) ; 177 screen out Outpt Meds if inpt
"RTN","ORQ11",44,0)
 S X2=+$$GET^XPAR("SYS","ORPF ACTIVE ORDERS CONTEXT HRS",1,"I"),X=$H,X=+X*24+($P(X,",",2)/3600),X1=X-X2,X3=X1#24,X1=X1\24,X2=$J(X3*3600,0,0),%H=X1_","_X2 D YMD^%DTC S YD=+(X_%)
"RTN","ORQ11",45,0)
 S TM=SDATE F  S TM=$O(^OR(100,"AC",PAT,TM)) Q:TM<1!(TM>EDATE)  S IFN=0 F  S IFN=$O(^OR(100,"AC",PAT,TM,IFN)) Q:IFN<1  I $D(^OR(100,IFN,0)),$D(^(3)) S X0=^(0),X3=^(3) D
"RTN","ORQ11",46,0)
 . Q:'$D(ORGRP($P(X0,U,11)))  S ACTOR=0
"RTN","ORQ11",47,0)
 . F  S ACTOR=$O(^OR(100,"AC",PAT,TM,IFN,ACTOR)) Q:ACTOR<1  I $D(^OR(100,IFN,8,ACTOR,0)) S X=^(0) D
"RTN","ORQ11",48,0)
 .. I "^10^12^"[(U_$P(X,U,15)_U) K ^OR(100,"AC",PAT,TM,IFN,ACTOR) Q
"RTN","ORQ11",49,0)
 .. I $P(X,U,15)=13,$P(X,U)<YD K ^OR(100,"AC",PAT,TM,IFN,ACTOR) Q
"RTN","ORQ11",50,0)
 .. I $P(X,U,15)="",ACTOR'=$P(X3,U,7) K ^OR(100,"AC",PAT,TM,IFN,ACTOR) Q
"RTN","ORQ11",51,0)
 .. D LP1
"RTN","ORQ11",52,0)
 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",53,0)
 Q
"RTN","ORQ11",54,0)
CUR1 ; 2 -- secondary pass for Active/Current
"RTN","ORQ11",55,0)
 N STOP S STOP=$P(X0,U,9)
"RTN","ORQ11",56,0)
 I STS=10 K ^OR(100,"AC",PAT,TM,IFN) Q  ;no delayed orders
"RTN","ORQ11",57,0)
 I '$D(YD),"^1^2^7^12^13^14^"[(U_STS_U) K ^OR(100,"AC",PAT,TM,IFN) Q
"RTN","ORQ11",58,0)
 I $D(YD),"^1^2^7^12^13^14^"[(U_STS_U),STOP<YD K ^OR(100,"AC",PAT,TM,IFN) Q
"RTN","ORQ11",59,0)
 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",60,0)
 Q
"RTN","ORQ11",61,0)
 ;
"RTN","ORQ11",62,0)
DC1 ; 3 -- secondary pass for DC
"RTN","ORQ11",63,0)
 I STS=1!(STS=13)!(STS=12) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",64,0)
 Q
"RTN","ORQ11",65,0)
 ;
"RTN","ORQ11",66,0)
COM1 ; 4 -- secondary pass for Completed/Expired
"RTN","ORQ11",67,0)
 N STOP S STOP=$P(X0,U,9)
"RTN","ORQ11",68,0)
 I STS=2!(STS=7)!($L(STOP)&(STOP<NOW)&(STS'=1)&(STS'=13)&(STS'=12)) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",69,0)
 Q
"RTN","ORQ11",70,0)
 ;
"RTN","ORQ11",71,0)
EXG ; 5 -- Expiring
"RTN","ORQ11",72,0)
 N ORNG,ORDT,ORDW,ORHOL,X,Y,%DT,DIC,TMW,NOW,STS
"RTN","ORQ11",73,0)
 F ORNG=1:1 D  I ORHOL=0,ORDW=0 Q
"RTN","ORQ11",74,0)
 . S ORDT=$$FMADD^XLFDT(DT,ORNG),ORDW=$S($H-4+ORNG#7>4:1,1:0)
"RTN","ORQ11",75,0)
 . S DIC="^HOLIDAY(",X=$P(ORDT,".")
"RTN","ORQ11",76,0)
 . D ^DIC S ORHOL=$S(+$G(Y)>0:1,1:0)
"RTN","ORQ11",77,0)
 S %DT="",X="T+"_ORNG D ^%DT
"RTN","ORQ11",78,0)
 S TMW=Y_".9999",NOW=+$E($$NOW^XLFDT,1,12)
"RTN","ORQ11",79,0)
 D CUR ;D LOOP
"RTN","ORQ11",80,0)
 Q
"RTN","ORQ11",81,0)
EXG1 ; 5 -- secondary pass for Expiring
"RTN","ORQ11",82,0)
 N STOP S STOP=$P(X0,U,9)
"RTN","ORQ11",83,0)
 I STS'=1,STS'=2,STS'=7,STS'>9,STOP>NOW,STOP'>TMW D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",84,0)
 Q
"RTN","ORQ11",85,0)
 ;
"RTN","ORQ11",86,0)
ACT ; 6 -- Recent Activity (Order Summary)
"RTN","ORQ11",87,0)
 ;N ORLSIGN S ORLSIGN=$$GET^XPAR("ALL","OR ORDER REVIEW DT","`"_+PAT,"Q")
"RTN","ORQ11",88,0)
 N TM,IFN,X0,X3,ACTOR,X8
"RTN","ORQ11",89,0)
 S TM=SDATE F  S TM=$O(^OR(100,"AR",PAT,TM)) Q:TM<1!(TM>EDATE)  D
"RTN","ORQ11",90,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AR",PAT,TM,IFN)) Q:IFN<1  S X0=$G(^OR(100,IFN,0)),X3=$G(^(3)) I $D(ORGRP(+$P(X0,U,11))) D
"RTN","ORQ11",91,0)
 .. S ACTOR=0 F  S ACTOR=$O(^OR(100,"AR",PAT,TM,IFN,ACTOR)) Q:ACTOR<1  I $D(^OR(100,IFN,8,ACTOR,0)),$P(^(0),U,15)'=13 S X8=^(0) D LP1
"RTN","ORQ11",92,0)
 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",93,0)
 Q
"RTN","ORQ11",94,0)
 ;
"RTN","ORQ11",95,0)
PEN1 ; 7 -- secondary pass for Pending
"RTN","ORQ11",96,0)
 I STS=5 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",97,0)
 Q
"RTN","ORQ11",98,0)
 ;
"RTN","ORQ11",99,0)
UVR1 ; 8 -- secondary pass for Unverified
"RTN","ORQ11",100,0)
 ;      Include if: unverified, released, inpt, not repl/canc/lapsed
"RTN","ORQ11",101,0)
 I '$P(X8,U,9),'$P(X8,U,11),$P(X8,U,15)="",$$INPT,"^12^13^14^"'[(U_STS_U) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",102,0)
 Q
"RTN","ORQ11",103,0)
 ;
"RTN","ORQ11",104,0)
UVN1 ; 9 -- secondary pass for Unverified/Nurse
"RTN","ORQ11",105,0)
 ;      Include if: unverified, released, inpt, not repl/canc/lapsed
"RTN","ORQ11",106,0)
 I '$P(X8,U,9),$P(X8,U,15)="",$$INPT,"^12^13^14^"'[(U_STS_U) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",107,0)
 Q
"RTN","ORQ11",108,0)
 ;
"RTN","ORQ11",109,0)
UVC1 ; 10 -- secondary pass for Unverified/Clerk
"RTN","ORQ11",110,0)
 ;       Include if: unverified, released, inpt, not repl/canc/lapsed
"RTN","ORQ11",111,0)
 I '$P(X8,U,11),$P(X8,U,15)="",$$INPT,"^12^13^14^"'[(U_STS_U) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",112,0)
 Q
"RTN","ORQ11",113,0)
 ;
"RTN","ORQ11",114,0)
INPT() ; -- Returns 1 or 0, if inpt order using X0=^OR(100,IFN,0)
"RTN","ORQ11",115,0)
 I ($P(X0,U,12)="I")!($P(X0,U,17)="D") Q 1
"RTN","ORQ11",116,0)
 I $P($G(^SC(+$P(X0,U,10),0)),U,3)="W" Q 1
"RTN","ORQ11",117,0)
 Q 0
"RTN","ORQ11",118,0)
 ;
"RTN","ORQ11",119,0)
SIG ; 11 -- Unsigned
"RTN","ORQ11",120,0)
 N TM,IFN,X0,X3,ACTOR S TM=SDATE
"RTN","ORQ11",121,0)
 F  S TM=$O(^OR(100,"AS",PAT,TM)) Q:TM<1!(TM>EDATE)  S IFN=0 F  S IFN=$O(^OR(100,"AS",PAT,TM,IFN)) Q:IFN<1  D
"RTN","ORQ11",122,0)
 . S X0=$G(^OR(100,IFN,0)),X3=$G(^(3))
"RTN","ORQ11",123,0)
 . I X0="" K ^OR(100,"AS",PAT,TM,IFN) Q  ;deleted
"RTN","ORQ11",124,0)
 . Q:'$D(ORGRP(+$P(X0,U,11)))  ;not a selected DispGrp
"RTN","ORQ11",125,0)
 . S ACTOR=0 F  S ACTOR=$O(^OR(100,"AS",PAT,TM,IFN,ACTOR)) Q:ACTOR<1  D
"RTN","ORQ11",126,0)
 .. I $P($G(^OR(100,IFN,8,ACTOR,0)),U,4)'=2 K ^OR(100,"AS",PAT,TM,IFN,ACTOR) Q  ;signed or deleted
"RTN","ORQ11",127,0)
 .. D LP1
"RTN","ORQ11",128,0)
 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",129,0)
 Q
"RTN","ORQ11",130,0)
 ;
"RTN","ORQ11",131,0)
FLG1 ; 12 -- secondary pass for Flagged
"RTN","ORQ11",132,0)
 I +$G(^OR(100,IFN,8,ACTOR,3)) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",133,0)
 Q
"RTN","ORQ11",134,0)
 ;
"RTN","ORQ11",135,0)
VP1 ; 13 -- secondary pass for Verbal/Phone
"RTN","ORQ11",136,0)
 N ORNATR S ORNATR=$P(X8,U,12)
"RTN","ORQ11",137,0)
 I ORNATR,"PV"[$P($G(^ORD(100.02,+ORNATR,0)),U,2) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR) ;STS'=12
"RTN","ORQ11",138,0)
 Q
"RTN","ORQ11",139,0)
 ;
"RTN","ORQ11",140,0)
VPU1 ; 14 -- secondary pass for Verbal/Phone Unsigned
"RTN","ORQ11",141,0)
 N ORNATR S ORNATR=$P(X8,U,12)
"RTN","ORQ11",142,0)
 I ORNATR,"PV"[$P($G(^ORD(100.02,+ORNATR,0)),U,2),'$P(X8,U,5),$P(X8,U,4)=2 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR) ;STS'=12
"RTN","ORQ11",143,0)
 Q
"RTN","ORQ11",144,0)
 ;
"RTN","ORQ11",145,0)
HLD1 ; 18 -- secondary pass for On Hold
"RTN","ORQ11",146,0)
 I STS=3 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",147,0)
 Q
"RTN","ORQ11",148,0)
 ;
"RTN","ORQ11",149,0)
NEW ; 19 -- New Orders, plus other unsigned orders by current provider
"RTN","ORQ11",150,0)
 N IFN,ACTOR,TM,X0,X3,X8,ORENT,ORPAR
"RTN","ORQ11",151,0)
 S IFN=0 F  S IFN=$O(^TMP("ORNEW",$J,IFN)) Q:IFN'>0  D  ;New orders
"RTN","ORQ11",152,0)
 . S ACTOR=0 F  S ACTOR=$O(^TMP("ORNEW",$J,IFN,ACTOR)) Q:ACTOR'>0  D
"RTN","ORQ11",153,0)
 .. Q:'$D(^OR(100,IFN,0))  Q:'$D(^(8,ACTOR,0))  ;deleted
"RTN","ORQ11",154,0)
 .. D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",155,0)
 G:'$D(^XUSEC("ORES",DUZ)) NW1 ;ck parameter for add'l orders
"RTN","ORQ11",156,0)
 S ORENT="ALL"_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+^(5),1:"")
"RTN","ORQ11",157,0)
 S ORPAR=$$GET^XPAR(ORENT,"OR UNSIGNED ORDERS ON EXIT")
"RTN","ORQ11",158,0)
 I ORPAR S TM=SDATE F  S TM=$O(^OR(100,"AS",PAT,TM)) Q:TM<1!(TM>EDATE)  D
"RTN","ORQ11",159,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AS",PAT,TM,IFN)) Q:IFN<1  D
"RTN","ORQ11",160,0)
 .. S ACTOR=0 F  S ACTOR=$O(^OR(100,"AS",PAT,TM,IFN,ACTOR)) Q:ACTOR<1  D
"RTN","ORQ11",161,0)
 ... Q:$D(^TMP("ORNEW",$J,IFN,ACTOR))  ;already included
"RTN","ORQ11",162,0)
 ... S X0=$G(^OR(100,IFN,0)),X3=$G(^(3)),X8=$G(^(8,ACTOR,0))
"RTN","ORQ11",163,0)
 ... I $S(ORPAR=1&($P(X8,U,3)=DUZ):1,ORPAR=2:1,1:0) D LP1
"RTN","ORQ11",164,0)
NW1 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",165,0)
 Q
"RTN","ORQ11",166,0)
 ;
"RTN","ORQ11",167,0)
CHT1 ; 20 -- secondary pass for Chart Review
"RTN","ORQ11",168,0)
 ;       Include if: unverified, released, inpt, not repl/canc/lapsed
"RTN","ORQ11",169,0)
 I '$P(X8,U,19),$P(X8,U,15)="",$$INPT,"^12^13^14^"'[(U_STS_U) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",170,0)
 Q
"RTN","ORQ11",171,0)
 ;
"RTN","ORQ11",172,0)
CHTSUM ; 21 -- secondary pass for Chart copy summary
"RTN","ORQ11",173,0)
 ;       Included based on Nature of Order
"RTN","ORQ11",174,0)
 N XP,NAT
"RTN","ORQ11",175,0)
 S XP=+$$GET^XPAR("SYS","OR PRINT ALL ORDERS CHART SUM",1,"I")
"RTN","ORQ11",176,0)
 I XP=2 D  Q  ;depends on Nature of Order
"RTN","ORQ11",177,0)
 . S NAT=$P($G(^OR(100,IFN,6)),U)
"RTN","ORQ11",178,0)
 . I 'NAT S NAT=$P(X8,U,12)
"RTN","ORQ11",179,0)
 . I NAT,$$CHART^ORX1(NAT) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",180,0)
 I XP=0 D  Q  ;If original printed, print on sum
"RTN","ORQ11",181,0)
 . I X7 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",182,0)
 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR) ;XP=1 gets All orders
"RTN","ORQ11",183,0)
 Q
"RTN","ORQ11",184,0)
 ;
"RTN","ORQ11",185,0)
LPS1 ; 22 -- secondary pass for Lapsed
"RTN","ORQ11",186,0)
 I STS=14 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",187,0)
 Q
"RTN","ORQ11",188,0)
 ;
"RTN","ORQ11",189,0)
AVT1 ; 23 -- secondary pass for Active/Pending sts only
"RTN","ORQ11",190,0)
 I (STS=6)!(STS=5) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",191,0)
 Q
"RTN","ORQ11",192,0)
 ;
"RTN","ORQ11",193,0)
QUIT ; -- stop
"RTN","ORQ11",194,0)
 Q
"RTN","ORQ12")
0^51^B28850030
"RTN","ORQ12",1,0)
ORQ12 ; slc/dcm - Get patient orders in context ;10/24/00  10:49
"RTN","ORQ12",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**12,27,78,92,116,190**;Dec 17, 1997
"RTN","ORQ12",3,0)
GET(IFN,NEWD,DETAIL,ACTOR) ; -- Setup TMP array
"RTN","ORQ12",4,0)
 ; IFN=ifn of order
"RTN","ORQ12",5,0)
 ; NEWD=3rd subscript in ^TMP("ORR",$J, node (ORLIST)
"RTN","ORQ12",6,0)
 ; DETAIL=see description in ^ORQ1
"RTN","ORQ12",7,0)
 ;
"RTN","ORQ12",8,0)
 N X0,X3,X4,X6,TXT,STAT,START,DG,STOP,ENTERD
"RTN","ORQ12",9,0)
 S ORLST=ORLST+1,^TMP("ORGOTIT",$J,IFN,+$G(ACTOR))=""
"RTN","ORQ12",10,0)
 I '$G(DETAIL) S ^TMP("ORR",$J,NEWD,ORLST)=IFN_$S($G(ACTOR):";"_ACTOR,1:"") Q
"RTN","ORQ12",11,0)
 S X0=^OR(100,IFN,0),X3=$G(^(3)),X4=$G(^(4)),X6=$G(^(6))
"RTN","ORQ12",12,0)
 S DG=$P(X0,U,11),DG=$P($G(^ORD(100.98,+DG,0)),U,3)
"RTN","ORQ12",13,0)
 S STAT=$S($P(X3,U,3):$P(^ORD(100.01,$P(X3,U,3),0),U,1,2),1:"") ;.01^abbr
"RTN","ORQ12",14,0)
 S ENTERD=$P(X0,U,7),START=$P(X0,U,8),STOP=$P(X0,U,9)
"RTN","ORQ12",15,0)
 ; S FLAGREA=$P(X6,U,7)
"RTN","ORQ12",16,0)
 S ^TMP("ORR",$J,NEWD,ORLST)=IFN_$S($G(ACTOR):";"_ACTOR,1:"")_U_DG_U_ENTERD_U_START_U_STOP_U_STAT
"RTN","ORQ12",17,0)
 D TEXT(.TXT,IFN) M ^TMP("ORR",$J,NEWD,ORLST,"TX")=TXT
"RTN","ORQ12",18,0)
 Q
"RTN","ORQ12",19,0)
 ;
"RTN","ORQ12",20,0)
TEXT(ORTX,ORIFN,WIDTH) ; -- Returns text of order ORIFN in ORTX(#)
"RTN","ORQ12",21,0)
 N OR0,OR3,OR6,X,Y,FIRST,ORI,ORJ,DLG,ORX,ORACT,ORTA
"RTN","ORQ12",22,0)
 K ORTX S:'$G(WIDTH) WIDTH=244
"RTN","ORQ12",23,0)
 S ORACT=+$P(ORIFN,";",2),ORIFN=+ORIFN
"RTN","ORQ12",24,0)
 I ORACT<1 S ORACT=+$P($G(^OR(100,ORIFN,3)),U,7) S:'ORACT ORACT=1
"RTN","ORQ12",25,0)
 ;D:$O(^OR(100,ORIFN,1,0)) CNV^ORY92(ORIFN) ;convert text otf
"RTN","ORQ12",26,0)
 S OR0=$G(^OR(100,ORIFN,0)),OR3=$G(^(3)),OR6=$G(^(6)),ORX=$G(^(8,ORACT,0))
"RTN","ORQ12",27,0)
 S ORTX=1,ORTX(1)=""
"RTN","ORQ12",28,0)
 I $L(OR0),($P(^ORD(100.98,$P(OR0,U,11),0),U)="NON-VA MEDICATIONS") S X="Non-VA" D ADD
"RTN","ORQ12",29,0)
 G:$G(ORIGVIEW)>1 T1
"RTN","ORQ12",30,0)
 S:$P(OR0,U,14)=$O(^DIC(9.4,"C","OR",0)) ORTX(1)=">>" ;generic
"RTN","ORQ12",31,0)
 S X=$$ACTION($P(ORX,U,2)) D:$L(X) ADD
"RTN","ORQ12",32,0)
 I $P(ORX,U,2)="NW",$P(OR3,U,11),'$G(ORIGVIEW) D  ; Changed or Renewed
"RTN","ORQ12",33,0)
 . I $P(OR3,U,11)=2 S X="Renew" D ADD Q
"RTN","ORQ12",34,0)
 . N ORIG,ORIGTA S ORIG=+$P(OR3,U,5) Q:'ORIG  Q:$P(OR3,U,11)'=1
"RTN","ORQ12",35,0)
 . S X="Change" D ADD S ORI=0
"RTN","ORQ12",36,0)
 . S ORIGTA=$$LASTXT(ORIG) ;D:$O(^OR(100,ORIG,1,0)) CNV^ORY92(ORIG)
"RTN","ORQ12",37,0)
 . F  S ORI=$O(^OR(100,ORIG,8,ORIGTA,.1,ORI)) Q:ORI'>0  S X=$G(^(ORI,0)) S:$E(X,1,3)=">> " X=$E(X,4,999) D ADD
"RTN","ORQ12",38,0)
 . S X=" to" D ADD
"RTN","ORQ12",39,0)
T1 S ORTA=+$P(ORX,U,14),FIRST=+$O(^OR(100,ORIFN,8,ORTA,.1,0))
"RTN","ORQ12",40,0)
 S ORI=0 F  S ORI=$O(^OR(100,ORIFN,8,ORTA,.1,ORI)) Q:ORI'>0  S X=$G(^(ORI,0)) S:(FIRST=ORI)&($E(X,1,3)=">> ") X=$E(X,4,999) D:$L(X) ADD
"RTN","ORQ12",41,0)
 Q:$G(ORIGVIEW)>1  ;contents of global only
"RTN","ORQ12",42,0)
 S DLG=$P(OR0,U,5) K Y I DLG,$P(DLG,";",2)["101.41",$D(^ORD(101.41,+DLG,9)) X ^(9) I $L($G(Y)) S X=Y D ADD ; additional text
"RTN","ORQ12",43,0)
 ; I $P(OR3,U,11)=2 S X="(Renewal)" D ADD
"RTN","ORQ12",44,0)
 I $P(ORX,U,4)=2 S X="*UNSIGNED*" D ADD
"RTN","ORQ12",45,0)
 I $P(ORX,U,2)="DC"!("^1^13^"[(U_$P(OR3,U,3)_U)),$L(OR6) S X=" <"_$S($L($P(OR6,U,5)):$P(OR6,U,5),$P(OR6,U,4):$P($G(^ORD(100.03,+$P(OR6,U,4),0)),U),1:"")_">" D:$L(X)>3 ADD ; DC Reason
"RTN","ORQ12",46,0)
 I $D(XQAID),$G(ORFLG)=12 S ORX=$G(^OR(100,ORIFN,8,ORACT,3)) I $P(ORX,U) S X=" Flagged "_$$DATETIME($P(ORX,U,3))_$S($P(ORX,U,4):" by "_$$NAME($P(ORX,U,4)),1:"")_": "_$P(ORX,U,5) D ADD ; Flagged - show in FUP
"RTN","ORQ12",47,0)
 Q
"RTN","ORQ12",48,0)
 ;
"RTN","ORQ12",49,0)
LASTXT(IFN)     ; -- Returns action with latest text for order IFN
"RTN","ORQ12",50,0)
 N I,Y S Y=1
"RTN","ORQ12",51,0)
 S I=0 F  S I=$O(^OR(100,IFN,8,I)) Q:I'>0  S:$O(^(I,.1,0)) Y=I
"RTN","ORQ12",52,0)
 Q Y
"RTN","ORQ12",53,0)
 ;
"RTN","ORQ12",54,0)
LAST(CODE) ; -- Return DA of last occurence of CODE action
"RTN","ORQ12",55,0)
 N DA
"RTN","ORQ12",56,0)
 I '$L($G(CODE)) S DA=$O(^OR(100,ORIFN,8,"A"),-1) ; last entry
"RTN","ORQ12",57,0)
 E  S DA=$O(^OR(100,ORIFN,8,"C",CODE,"?"),-1) ; last CODE entry
"RTN","ORQ12",58,0)
 Q DA
"RTN","ORQ12",59,0)
 ;
"RTN","ORQ12",60,0)
ACTION(X) ; -- Returns text of action X
"RTN","ORQ12",61,0)
 N Y
"RTN","ORQ12",62,0)
 S Y=$S(X="DC":"Discontinue",X="HD":"Hold",X="RL"&'$G(ORIGVIEW):"Release Hold of",X="FL":"Flag",X="UF":"Unflag",X="RN"&'$G(ORIGVIEW):"Renew",1:"")
"RTN","ORQ12",63,0)
 Q Y
"RTN","ORQ12",64,0)
 ;
"RTN","ORQ12",65,0)
DATETIME(X) ; -- Returns date/time in format 00/00/00@00:00am
"RTN","ORQ12",66,0)
 N Y,D,T,T1,Z
"RTN","ORQ12",67,0)
 S D=$P(X,"."),T=$E($P(X,".",2)_"0000",1,4),T1=$E(T,1,2),Z="AM"
"RTN","ORQ12",68,0)
 S:T1>12 T1=T1-12,Z="PM"
"RTN","ORQ12",69,0)
 S Y=$E(D,4,5)_"/"_$E(D,6,7)_"/"_(1700+$E(D,1,3))_"@"_T1_":"_$E(T,3,4)_Z
"RTN","ORQ12",70,0)
 Q Y
"RTN","ORQ12",71,0)
 ;
"RTN","ORQ12",72,0)
NAME(X) ; -- Returns name as Lname,F
"RTN","ORQ12",73,0)
 N Y,Z S Z=$P($G(^VA(200,+X,0)),U) Q:Z="" ""
"RTN","ORQ12",74,0)
 S Y=$P(Z,",")_"," F I=$F(Z,","):1:$L(Z) I $E(Z,I)'=" " S Y=Y_$E(Z,I) Q
"RTN","ORQ12",75,0)
 S Y=$$LOWER^VALM1(Y) ; mixed case
"RTN","ORQ12",76,0)
 Q Y
"RTN","ORQ12",77,0)
 ;
"RTN","ORQ12",78,0)
ADD ; -- Add text X to ORTX()
"RTN","ORQ12",79,0)
 N I,Y S Y=$L(ORTX(ORTX)) S:Y Y=Y+1 ;allow for space
"RTN","ORQ12",80,0)
 I $E(X)=" ",Y S ORTX=ORTX+1,ORTX(ORTX)="",Y=0,X=$E(X,2,999) ;new line
"RTN","ORQ12",81,0)
 I Y+$L(X)'>WIDTH S ORTX(ORTX)=ORTX(ORTX)_$S(Y:" ",1:"")_X Q
"RTN","ORQ12",82,0)
 F I=1:1:$L(X," ") S Z=$P(X," ",I) D:(Y+$L(Z))>WIDTH  S ORTX(ORTX)=$G(ORTX(ORTX))_$S(Y:" ",1:"")_Z,Y=$L(ORTX(ORTX)) S:Y Y=Y+1
"RTN","ORQ12",83,0)
 . I $L(Z)>WIDTH F  S ORTX(ORTX)=$G(ORTX(ORTX))_$S(Y:" ",1:"")_$E(Z,1,WIDTH-Y),Z=$E(Z,WIDTH-Y+1,999) Q:$L(Z)'>WIDTH  S ORTX=ORTX+1,Y=0
"RTN","ORQ12",84,0)
 . S ORTX=ORTX+1,Y=0
"RTN","ORQ12",85,0)
 Q
"RTN","ORQ12",86,0)
 ;
"RTN","ORQ12",87,0)
EXPD ; -- loop through ^XTMP("ORAE" to get expired orders
"RTN","ORQ12",88,0)
 K ^TMP("ORGOTIT",$J),^TMP("ORSORT",$J)
"RTN","ORQ12",89,0)
 N TM,TO,IFN,X0,X3,X7,X8,USTS,NOW,ACTOR,X
"RTN","ORQ12",90,0)
 S NOW=+$E($$NOW^XLFDT,1,12),TO=0,SDATE=9999999-SDATE,EDATE=9999999-EDATE
"RTN","ORQ12",91,0)
 F  S TO=$O(^XTMP("ORAE",PAT,TO)) Q:'TO  I $D(ORGRP(TO)) S TM=EDATE F  S TM=$O(^XTMP("ORAE",PAT,TO,TM)) Q:'TM!(TM>SDATE)!(+TM<EDATE)  D
"RTN","ORQ12",92,0)
 . S IFN=0 F  S IFN=$O(^XTMP("ORAE",PAT,TO,TM,IFN)) Q:'IFN  I ('$D(^TMP("ORGOTIT",$J,IFN))!MULT) D
"RTN","ORQ12",93,0)
 .. S USTS=$P(^OR(100,IFN,3),U,3)
"RTN","ORQ12",94,0)
 .. Q:+$G(USTS)'=7  ;quit if order no longer expired
"RTN","ORQ12",95,0)
 .. S ^TMP("ORSORT",$J,9999999-TM,TO,IFN)=""
"RTN","ORQ12",96,0)
 S TM=0 F  S TM=$O(^TMP("ORSORT",$J,TM)) Q:'TM  S TO=0 F  S TO=$O(^TMP("ORSORT",$J,TM,TO)) Q:'TO  D
"RTN","ORQ12",97,0)
 . S IFN=0 F  S IFN=$O(^TMP("ORSORT",$J,TM,TO,IFN)) Q:'IFN  I $D(^OR(100,IFN,0)),$D(^(3)) S X0=^(0),X3=^(3) D 
"RTN","ORQ12",98,0)
 .. S ACTOR=0 F  S ACTOR=$O(^OR(100,"ACT",PAT,9999999-$P(X0,U,7),TO,IFN,ACTOR)) Q:ACTOR<1  I '$D(^TMP("ORGOTIT",$J,IFN,ACTOR)),$D(^OR(100,IFN,8,ACTOR,0)),$P(^(0),U,15)'=13 S X8=^(0),X7=$G(^(7)) D LP1^ORQ11
"RTN","ORQ12",99,0)
 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ12",100,0)
 K ^TMP("ORSORT",$J),^TMP("ORGOTIT",$J)
"RTN","ORQ12",101,0)
 Q
"RTN","ORQ20")
0^73^B47004491
"RTN","ORQ20",1,0)
ORQ20 ; SLC/MKB - Detailed Order Report cont ;7/23/03  12:29
"RTN","ORQ20",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**12,27,92,94,116,141,177,186,190**;Dec 17, 1997
"RTN","ORQ20",3,0)
ACT ; -- add Activity [from ^ORQ2]
"RTN","ORQ20",4,0)
 N ORACT S ORACT=$P(ACTION,U,2)
"RTN","ORQ20",5,0)
 N NVA S:$P(^ORD(100.98,$P(^OR(100,+ORIFN,0),U,11),0),U)="NON-VA MEDICATIONS" NVA=1
"RTN","ORQ20",6,0)
 S CNT=CNT+1,@ORY@(CNT)=$$DATE($P(ACTION,U))_"  "_$$ACTION(ORACT)
"RTN","ORQ20",7,0)
 I $P(ACTION,U,13) S @ORY@(CNT)=@ORY@(CNT)_" entered by "_$$USER(+$P(ACTION,U,13))
"RTN","ORQ20",8,0)
 I ORACT="NW" D  ;Show original order text
"RTN","ORQ20",9,0)
 . N ORZ,I,ORIGVIEW S ORIGVIEW=2 D TEXT^ORQ12(.ORZ,ORIFN_";1",55)
"RTN","ORQ20",10,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Order Text:        "_$G(ORZ(1))
"RTN","ORQ20",11,0)
 . S I=1 F  S I=$O(ORZ(I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$$REPEAT^XLFSTR(" ",24)_$G(ORZ(I))
"RTN","ORQ20",12,0)
 I ORACT="XX" D  ;Changed - show new text
"RTN","ORQ20",13,0)
 . N ORZ,I,ORIGVIEW S ORIGVIEW=2 D TEXT^ORQ12(.ORZ,ORIFN_";"_ORI,55)
"RTN","ORQ20",14,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Changed to:        "_$G(ORZ(1))
"RTN","ORQ20",15,0)
 . S I=1 F  S I=$O(ORZ(I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$$REPEAT^XLFSTR(" ",24)_$G(ORZ(I))
"RTN","ORQ20",16,0)
A1 I $P(ACTION,U,12) D  ;Nature of Order/Release
"RTN","ORQ20",17,0)
 . N ORZ S ORZ=$G(^ORD(100.02,+$P(ACTION,U,12),0))
"RTN","ORQ20",18,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Nature of Order:   "_$P(ORZ,U)
"RTN","ORQ20",19,0)
 . I $P(OR0,U,17),(ORACT="NW") Q  ;see event
"RTN","ORQ20",20,0)
 . I "^V^P^"[(U_$P(ORZ,U,2)_U),$P(ACTION,U,16) S CNT=CNT+1,@ORY@(CNT)="     Released by:       "_$$USER(+$P(ACTION,U,17))_" on "_$$DATE($P(ACTION,U,16))
"RTN","ORQ20",21,0)
 I $P(OR0,U,17)&(ORACT="NW") D  ;Delayed Release Event
"RTN","ORQ20",22,0)
 . N EVT,X,ORV,I S EVT=+$P(OR0,U,17),X=$$NAME^OREVNTX(EVT)
"RTN","ORQ20",23,0)
 . S:$E(X,1,8)="Delayed " X=$E(X,9,99)
"RTN","ORQ20",24,0)
 . I $G(^ORE(100.2,EVT,1)),'$P(ACTION,U,16) S X=X_" on "_$$DATE(+^(1))
"RTN","ORQ20",25,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Delayed Until:     "_X Q:'$P(ACTION,U,16)
"RTN","ORQ20",26,0)
 . D EVENT(.ORV) S CNT=CNT+1,@ORY@(CNT)="     Released by:       "_ORV(1)
"RTN","ORQ20",27,0)
 . S I=1 F  S I=$O(ORV(I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$$REPEAT^XLFSTR(" ",24)_$G(ORV(I))
"RTN","ORQ20",28,0)
A2 I $P(ACTION,U,5) S CNT=CNT+1,@ORY@(CNT)=$S($P(ACTION,U,4)=7:"      Dig",1:"     Elec")_" Signature:    "_$$USER(+$P(ACTION,U,5))_" on "_$$DATE($P(ACTION,U,6))
"RTN","ORQ20",29,0)
 I '$P(ACTION,U,5)!($P(ACTION,U,3)'=$P(ACTION,U,5)),'$$SERVCORR S CNT=CNT+1,@ORY@(CNT)="     "_$S($D(NVA):"Documented by:",1:"Ordered by:   ")_"     "_$$USER(+$P(ACTION,U,3))
"RTN","ORQ20",30,0)
 I '$P(ACTION,U,5),$L($P(ACTION,U,4)) S:$P(ACTION,U,4)=0 CNT=CNT+1,@ORY@(CNT)="     Released by:       "_$$USER(+$P(ACTION,U,7))_" on "_$$DATE($P(ACTION,U,16)) S CNT=CNT+1,@ORY@(CNT)="     Signature:         "_$$SIG($P(ACTION,U,4)) ;186
"RTN","ORQ20",31,0)
 I $P(ACTION,U,9) S CNT=CNT+1,@ORY@(CNT)="     Nurse Verified:    "_$S($P(ACTION,U,8):$$USER(+$P(ACTION,U,8))_" on ",1:"")_$$DATE($P(ACTION,U,9))
"RTN","ORQ20",32,0)
 I $P(ACTION,U,11) S CNT=CNT+1,@ORY@(CNT)="     Clerk Verified:    "_$S($P(ACTION,U,10):$$USER(+$P(ACTION,U,10))_" on ",1:"")_$$DATE($P(ACTION,U,11))
"RTN","ORQ20",33,0)
 I $P(ACTION,U,19) S CNT=CNT+1,@ORY@(CNT)="     Chart Reviewed:    "_$S($P(ACTION,U,18):$$USER(+$P(ACTION,U,18))_" on ",1:"")_$$DATE($P(ACTION,U,19))
"RTN","ORQ20",34,0)
A3 I $P(ACTION,U,2)="DC",$L(OR6) S X=$S($L($P(OR6,U,5)):$P(OR6,U,5),$P(OR6,U,4):$P($G(^ORD(100.03,+$P(OR6,U,4),0)),U),$P(OR6,U):$P($G(^ORD(100.02,+$P(OR6,U),0)),U),1:"") S:$L(X) CNT=CNT+1,@ORY@(CNT)="     Reason for DC:     "_X
"RTN","ORQ20",35,0)
 I $L($G(^OR(100,ORIFN,8,ORI,1))) S X=^(1) D  ;add backdoor comments
"RTN","ORQ20",36,0)
 . N LBL,I S LBL=""
"RTN","ORQ20",37,0)
 . I $P(ACTION,U,15)="",$P(ACTION,U,2)'="DC" S LBL="     Comments:          " ;DC shown above
"RTN","ORQ20",38,0)
 . I $P(ACTION,U,15)=13,$P(ACTION,U,2)'="NW" S LBL="     Cancelled:         " ;NW shown in ORQ2
"RTN","ORQ20",39,0)
 . Q:'$L(LBL)  I $L(X)'>56 S CNT=CNT+1,@ORY@(CNT)=LBL_X Q
"RTN","ORQ20",40,0)
 . S DIWL=1,DIWR=56,DIWF="C56" K ^UTILITY($J,"W") D ^DIWP
"RTN","ORQ20",41,0)
 . S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=LBL_^(I,0),LBL="                        "
"RTN","ORQ20",42,0)
 I $D(^OR(100,ORIFN,8,ORI,5)) D  ;Ward comments
"RTN","ORQ20",43,0)
 . N X,ORJ K ^UTILITY($J,"W")
"RTN","ORQ20",44,0)
 . S ORJ=0 F  S ORJ=$O(^OR(100,ORIFN,8,ORI,5,ORJ)) Q:ORJ'>0  S X=^(ORJ,0) D ^DIWP
"RTN","ORQ20",45,0)
 . S ORJ=0 F  S ORJ=$O(^UTILITY($J,"W",DIWL,ORJ)) Q:ORJ'>0  S CNT=CNT+1,@ORY@(CNT)=$S(ORJ=1:"     Ward/Clinic Cmmts: ",1:"                        ")_^(ORJ,0)
"RTN","ORQ20",46,0)
 . K ^UTILITY($J,"W")
"RTN","ORQ20",47,0)
A4 I $P(ACTION,U,2)="HD",$G(^OR(100,ORIFN,8,ORI,2)) S X2=^(2),CNT=CNT+1,@ORY@(CNT)="     Hold Released:     "_$$FMTE^XLFDT($P(X2,U),"2P")_" by "_$$USER($P(X2,U,2))
"RTN","ORQ20",48,0)
 I $D(^OR(100,ORIFN,8,ORI,3)) D  ;Un-/Flagged
"RTN","ORQ20",49,0)
 . N X S X=$G(^OR(100,ORIFN,8,ORI,3))
"RTN","ORQ20",50,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Flagged by:        "_$$USER(+$P(X,U,4))_" on "_$$DATE($P(X,U,3))
"RTN","ORQ20",51,0)
 . S CNT=CNT+1,@ORY@(CNT)="                        "_$P(X,U,5)
"RTN","ORQ20",52,0)
 . Q:X  S CNT=CNT+1,@ORY@(CNT)="     Unflagged by:      "_$$USER(+$P(X,U,7))_" on "_$$DATE($P(X,U,6))
"RTN","ORQ20",53,0)
 . S CNT=CNT+1,@ORY@(CNT)="                        "_$P(X,U,8)
"RTN","ORQ20",54,0)
 Q
"RTN","ORQ20",55,0)
 ;
"RTN","ORQ20",56,0)
DC ; -- Add Reason for DC
"RTN","ORQ20",57,0)
 S CNT=CNT+1,@ORY@(CNT)=$$DATE($P(OR6,U,3))_$S($P(OR6,U,8):"  Auto-",1:"  ")_"Discontinued"
"RTN","ORQ20",58,0)
 I $P(OR6,U,8) D  Q
"RTN","ORQ20",59,0)
 . N EVT,PKG,ORV,I
"RTN","ORQ20",60,0)
 . S EVT=$P(OR6,U,8),PKG=$P($G(^ORE(100.2,+EVT,3,ORIFN,0)),U,2)
"RTN","ORQ20",61,0)
 . S @ORY@(CNT)=@ORY@(CNT)_" by "_$S(PKG="FH":"DIETETICS",PKG="LR":"LABORATORY",PKG="PS":"PHARMACY",1:"CPRS")
"RTN","ORQ20",62,0)
 . D EVENT(.ORV,1) S CNT=CNT+1,@ORY@(CNT)="     Patient Movement:  "_ORV(1)
"RTN","ORQ20",63,0)
 . S I=1 F  S I=$O(ORV(I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$$REPEAT^XLFSTR(" ",24)_$G(ORV(I))
"RTN","ORQ20",64,0)
 I $P(OR6,U,2),$P($G(^ORD(100.02,+$P(OR6,U),0)),U,2)'="A" S @ORY@(CNT)=@ORY@(CNT)_" by "_$$USER($P(OR6,U,2)) ;don't show user name if auto-dc
"RTN","ORQ20",65,0)
 N X S X=$S($L($P(OR6,U,5)):$P(OR6,U,5),$P(OR6,U,4):$P($G(^ORD(100.03,+$P(OR6,U,4),0)),U),$P(OR6,U):$P($G(^ORD(100.02,+$P(OR6,U),0)),U),1:"") S:$L(X) CNT=CNT+1,@ORY@(CNT)="     Reason for DC:     "_X
"RTN","ORQ20",66,0)
 Q
"RTN","ORQ20",67,0)
 ;
"RTN","ORQ20",68,0)
ACTION(CODE) ; -- Return name of action CODE
"RTN","ORQ20",69,0)
 N NAME S NAME=$S(CODE="NW":"New Order",CODE="DC":"Discontinue",CODE="HD":"Hold",CODE="RL":"Release Hold",CODE="RN":"Renewal",CODE="XX":"Change",1:"")
"RTN","ORQ20",70,0)
 I CODE="NW",$P(OR3,U,11) S NAME=NAME_$S($P(OR3,U,11)=1:" (Change)",$P(OR3,U,11)=2:" (Renewal)",1:"")
"RTN","ORQ20",71,0)
 Q NAME
"RTN","ORQ20",72,0)
 ;
"RTN","ORQ20",73,0)
XACT(X) ; -- Return name of transaction code X
"RTN","ORQ20",74,0)
 N Y S X=$G(X)
"RTN","ORQ20",75,0)
 S Y=$S(X="XX":"Edited",X="DC":"Discontinued",X="HD":"Held",X="RL":"Hold Released",X="FW":"Forwarded",X="CA":"Cancelled",1:"")
"RTN","ORQ20",76,0)
 Q Y
"RTN","ORQ20",77,0)
 ;
"RTN","ORQ20",78,0)
DATE(X) ; -- Return date formatted as 00/00/0000 00:00
"RTN","ORQ20",79,0)
 N T,Y  S T=$P(X,".",2)_"0000"
"RTN","ORQ20",80,0)
 S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_(1700+$E(X,1,3))
"RTN","ORQ20",81,0)
 I T S Y=Y_" "_$E(T,1,2)_":"_$E(T,3,4)
"RTN","ORQ20",82,0)
 Q Y
"RTN","ORQ20",83,0)
 ;
"RTN","ORQ20",84,0)
USER(X) ; -- Returns NAME (TITLE) of New Person X
"RTN","ORQ20",85,0)
 N X0,Y S X0=$G(^VA(200,+X,0)),Y=$P(X0,U)
"RTN","ORQ20",86,0)
 S:$P(X0,U,9) Y=Y_" ("_$E($P($G(^DIC(3.1,+$P(X0,U,9),0)),U),1,15)_")"
"RTN","ORQ20",87,0)
 Q Y
"RTN","ORQ20",88,0)
 ;
"RTN","ORQ20",89,0)
SIG(X) ; -- Returns text of signature status X
"RTN","ORQ20",90,0)
 N Y S Y=""
"RTN","ORQ20",91,0)
 I X=0 S Y="ON CHART WITH WRITTEN ORDERS"
"RTN","ORQ20",92,0)
 I X=1 S Y="ELECTRONICALLY SIGNED"
"RTN","ORQ20",93,0)
 I X=2 S Y="NOT SIGNED"
"RTN","ORQ20",94,0)
 I X=3 S Y="NOT REQUIRED"
"RTN","ORQ20",95,0)
 I X=4 S Y="ON CHART WITH PRINTED ORDERS"
"RTN","ORQ20",96,0)
 I X=5 S Y="NOT REQUIRED DUE TO SERVICE CANCEL"
"RTN","ORQ20",97,0)
 I X=6 S Y="SERVICE CORRECTION TO SIGNED ORDER"
"RTN","ORQ20",98,0)
 Q Y
"RTN","ORQ20",99,0)
 ;
"RTN","ORQ20",100,0)
SERVCORR()      ; -- Returns 1 or 0, if current ACTION is a serv corr change
"RTN","ORQ20",101,0)
 N Y,NATURE,I,X S Y=0
"RTN","ORQ20",102,0)
 G:ORACT'="XX" SCQ
"RTN","ORQ20",103,0)
 S NATURE=+$P(ACTION,U,12),NATURE=$P($G(^ORD(100.02,NATURE,0)),U,2)
"RTN","ORQ20",104,0)
 I "^S^I^"'[(U_NATURE_U) G SCQ
"RTN","ORQ20",105,0)
 S I=$O(^OR(100,ORIFN,8,ORI),-1),X=$G(^(I,0))
"RTN","ORQ20",106,0)
 I $P(X,U,3)'=$P(ACTION,U,3),$P(X,U,5)'=$P(ACTION,U,3) G SCQ ;show prov
"RTN","ORQ20",107,0)
 S Y=1
"RTN","ORQ20",108,0)
SCQ Q Y
"RTN","ORQ20",109,0)
 ;
"RTN","ORQ20",110,0)
EVENT(ORTX,DC) ; -- Returns patient event info for EVT
"RTN","ORQ20",111,0)
 N EVT1,REL,X,Y,I,ORMAX
"RTN","ORQ20",112,0)
 S ORTX(1)="" ;177
"RTN","ORQ20",113,0)
 S EVT1=$G(^ORE(100.2,EVT,1)),REL=$G(^ORE(100.2,EVT,2,ORIFN,0))
"RTN","ORQ20",114,0)
 ; Return event data if AutoDC or auto-released by an event:
"RTN","ORQ20",115,0)
 I $G(DC)!(REL&'$L($P(REL,U,2))&($P(EVT1,U,2)!$P(EVT1,U,4))) D  Q
"RTN","ORQ20",116,0)
 . S Y=$S($P(EVT1,U,5):$P(EVT1,U,5),1:EVT) ;parent owns Activity
"RTN","ORQ20",117,0)
 . S Y=+$O(^ORE(100.2,+Y,10,0)),Y=$G(^(Y,0)),X=$P(Y,U,4) Q:'$L(X)
"RTN","ORQ20",118,0)
 . S X=$S(X="A":"ADMISSION",X="T":"TRANSFER",X="D":"DISCHARGE",X="S":"SPECIALTY CHANGE",1:"OUT OF O.R.")_" on "_$$DATE($P(EVT1,U))
"RTN","ORQ20",119,0)
 . S ORTX(1)=X,ORTX=1,ORMAX=56
"RTN","ORQ20",120,0)
 . I $P(Y,U,6) S X=$S($P(Y,U,4)="D":"from ",1:"to ")_$$GET1^DIQ(45.7,+$P(Y,U,6)_",",.01) D TXT^ORCHTAB
"RTN","ORQ20",121,0)
 . I $P(Y,U,7) S X="on "_$$GET1^DIQ(42,+$P(Y,U,7)_",",.01) D TXT^ORCHTAB
"RTN","ORQ20",122,0)
 S X=$$USER(+$P(ACTION,U,17))_" on "_$$DATE($P(ACTION,U,16))
"RTN","ORQ20",123,0)
 I ORIFN'=+$P($G(^ORE(100.2,EVT,0)),U,4),$P(REL,U,2)="MN" S X=X_" (manually released)"
"RTN","ORQ20",124,0)
 S ORTX(1)=X
"RTN","ORQ20",125,0)
 Q
"RTN","ORQ21")
0^12^B22235244
"RTN","ORQ21",1,0)
ORQ21 ; SLC/MKB/GSS - Detailed Order Report cont ; 08 May 2002  2:12 PM
"RTN","ORQ21",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**141,190**;Dec 17, 1997
"RTN","ORQ21",3,0)
 ;
"RTN","ORQ21",4,0)
RAD(TCOM) ; -- add RA data for 2.5 orders
"RTN","ORQ21",5,0)
 N RAIFN,CASE,PROC,ORD,ORI,X,ORTTL,ORB
"RTN","ORQ21",6,0)
 S RAIFN=$G(^OR(100,ORIFN,4)) Q:RAIFN'>0
"RTN","ORQ21",7,0)
 D EN30^RAO7PC1(RAIFN) Q:'$D(^TMP($J,"RAE2",+ORVP))
"RTN","ORQ21",8,0)
 S ORD=$G(^TMP($J,"RAE2",+ORVP,"ORD")),CASE=$O(^(0)) Q:'CASE  S PROC=$O(^(CASE,""))
"RTN","ORQ21",9,0)
 I '$G(TCOM) D  ;else add only Tech Comments
"RTN","ORQ21",10,0)
 . S CNT=CNT+1,@ORY@(CNT)=$$LJ^XLFSTR("Procedure:",30)_$S($L(ORD):ORD,1:PROC)
"RTN","ORQ21",11,0)
 . S ORI=0,ORTTL="Procedure Modifiers:          ",ORB=1
"RTN","ORQ21",12,0)
 . F  S ORI=$O(^TMP($J,"RAE2",+ORVP,CASE,PROC,"M",ORI)) Q:ORI'>0  S CNT=CNT+1,@ORY@(CNT)=ORTTL_^(ORI),ORTTL=$$REPEAT^XLFSTR(" ",30)
"RTN","ORQ21",13,0)
 . S CNT=CNT+1,@ORY@(CNT)="History and Reason for Exam:"
"RTN","ORQ21",14,0)
 . F  S ORI=$O(^TMP($J,"RAE2",+ORVP,CASE,PROC,"H",ORI)) Q:ORI'>0  S CNT=CNT+1,@ORY@(CNT)="  "_^(ORI)
"RTN","ORQ21",15,0)
RAD1 I $L($G(^TMP($J,"RAE2",+ORVP,CASE,PROC,"TCOM",1))) S X=^(1) D
"RTN","ORQ21",16,0)
 . N DIWL,DIWR,DIWF,I K ^UTILITY($J,"W")
"RTN","ORQ21",17,0)
 . S DIWL=1,DIWR=72,DIWF="C72" D ^DIWP
"RTN","ORQ21",18,0)
 . S CNT=CNT+1,@ORY@(CNT)="Technologist's Comment:",ORB=1
"RTN","ORQ21",19,0)
 . S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)="  "_^(I,0)
"RTN","ORQ21",20,0)
 K ^TMP($J,"RAE2",+ORVP),^UTILITY($J,"W")
"RTN","ORQ21",21,0)
 S:$G(ORB) CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ21",22,0)
 Q
"RTN","ORQ21",23,0)
 ;
"RTN","ORQ21",24,0)
MED ; -- Add Pharmacy order data
"RTN","ORQ21",25,0)
 Q:$G(^OR(100,ORIFN,4))["N"  ;non-VA med -- no refill history
"RTN","ORQ21",26,0)
 N TYPE,NODE,RXN,OR5 S TYPE=$P(OR0,U,12)
"RTN","ORQ21",27,0)
 I '$D(^TMP("PS",$J,0)) D  ;get PS data
"RTN","ORQ21",28,0)
 . N PSIFN S PSIFN=$G(^OR(100,ORIFN,4))
"RTN","ORQ21",29,0)
 . S:TYPE="O" PSIFN=$TR(PSIFN,"S","P")_$S(PSIFN?1.N:"R",1:"")
"RTN","ORQ21",30,0)
 . D OEL^PSOORRL(+ORVP,PSIFN_";"_TYPE)
"RTN","ORQ21",31,0)
 S NODE=$G(^TMP("PS",$J,0)),RXN=$G(^("RXN",0))
"RTN","ORQ21",32,0)
 I '$L(NODE) K ^TMP("PS",$J) Q  ;error
"RTN","ORQ21",33,0)
 I $O(^TMP("PS",$J,"DD",0)) D  ;Disp Drugs
"RTN","ORQ21",34,0)
 . N I,X,Y S X="Dispense Drugs (units/dose):  ",I=0
"RTN","ORQ21",35,0)
 . F  S I=$O(^TMP("PS",$J,"DD",I)) Q:I'>0  S Y=$G(^(I,0)) S:Y CNT=CNT+1,@ORY@(CNT)=X_$$GET1^DIQ(50,+Y_",",.01)_" ("_$P(Y,U,2)_")"
"RTN","ORQ21",36,0)
 S:$P(NODE,U,9) CNT=CNT+1,@ORY@(CNT)="Total Dose:                   "_$P(NODE,U,9)
"RTN","ORQ21",37,0)
M1 I TYPE="I" D  ;admin data
"RTN","ORQ21",38,0)
 . N I,X,Y I $O(^TMP("PS",$J,"B",0)) D
"RTN","ORQ21",39,0)
 .. S X="IV Print Name:                ",I=0
"RTN","ORQ21",40,0)
 .. F  S I=$O(^TMP("PS",$J,"B",I)) Q:I<1  S Y=$G(^(I,0)) S:$L(Y) CNT=CNT+1,@ORY@(CNT)=X_$P(Y,U),X=$$REPEAT^XLFSTR(" ",30) I $L($P(Y,U,3)) S CNT=CNT+1,@ORY@(CNT)=X_" "_$P(Y,U,3)
"RTN","ORQ21",41,0)
 . S I=+$O(^TMP("PS",$J,"SCH",0)),X=$P($G(^(I,0)),U,2)
"RTN","ORQ21",42,0)
 . S:$L(X) CNT=CNT+1,@ORY@(CNT)="Schedule Type:                "_X
"RTN","ORQ21",43,0)
 . S X="Administration Times:         ",I=0
"RTN","ORQ21",44,0)
 . F  S I=$O(^TMP("PS",$J,"ADM",I)) Q:I'>0  S Y=$G(^(I,0)) S:$L(Y) CNT=CNT+1,@ORY@(CNT)=X_Y,X=$$REPEAT^XLFSTR(" ",30)
"RTN","ORQ21",45,0)
M2 I TYPE="O" D  ;fill history
"RTN","ORQ21",46,0)
 . N FILLD,X,Y,I
"RTN","ORQ21",47,0)
 . S:$P(NODE,U,12) CNT=CNT+1,@ORY@(CNT)="Last Filled:                  "_$$FMTE^XLFDT($P(NODE,U,12),2)
"RTN","ORQ21",48,0)
 . S CNT=CNT+1,@ORY@(CNT)="Refills Remaining:            "_$P(NODE,U,4)
"RTN","ORQ21",49,0)
 . I $P(RXN,U,6)!$G(^TMP("PS",$J,"REF",0)) S X="Filled:                       " D
"RTN","ORQ21",50,0)
 .. I $P(RXN,U,6) S FILLD=$P(RXN,U,6)_"^^^"_$P(RXN,U,7)_U_$P(RXN,U,3,4) D FILLED("R")
"RTN","ORQ21",51,0)
 .. S I=0 F  S I=$O(^TMP("PS",$J,"REF",I)) Q:I'>0  S FILLD=$G(^(I,0)) D FILLED("R")
"RTN","ORQ21",52,0)
 . I $G(^TMP("PS",$J,"PAR",0)) S I=0,X="Partial Fills:      " F  S I=$O(^TMP("PS",$J,"PAR",I)) Q:I'>0  S FILLD=$G(^(I,0)) D FILLED("P")
"RTN","ORQ21",53,0)
 . S:RXN CNT=CNT+1,@ORY@(CNT)="Prescription#:                "_$P(RXN,U)
"RTN","ORQ21",54,0)
M3 S:$P(RXN,U,5) CNT=CNT+1,@ORY@(CNT)="Pharmacist:                   "_$P($G(^VA(200,+$P(RXN,U,5),0)),U)
"RTN","ORQ21",55,0)
 S:$P(NODE,U,13) CNT=CNT+1,@ORY@(CNT)="NOT TO BE GIVEN" K ^TMP("PS",$J)
"RTN","ORQ21",56,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ21",57,0)
 S OR5=$G(^OR(100,ORIFN,5)) I $L(OR5) D  ;SC data
"RTN","ORQ21",58,0)
 . N X,Y,I S X="For conditions related to:    "
"RTN","ORQ21",59,0)
 . F I=1:1:7 S Y=$P(OR5,U,I) I Y S CNT=CNT+1,@ORY@(CNT)=X_$$SC(I),X=$$REPEAT^XLFSTR(" ",30)
"RTN","ORQ21",60,0)
 Q
"RTN","ORQ21",61,0)
 ;
"RTN","ORQ21",62,0)
BA ;Billing Aware data display
"RTN","ORQ21",63,0)
 N DXIEN,DXV,ICD9,OCT
"RTN","ORQ21",64,0)
 S OCT=0 F  S OCT=$O(^OR(100,ORIFN,5.1,OCT)) Q:OCT=""  D
"RTN","ORQ21",65,0)
 . S OREC=^OR(100,ORIFN,5.1,OCT,0)
"RTN","ORQ21",66,0)
 . S DXIEN=$P(OREC,U) S:DXIEN'="" ICD9=$P($G(^ICD9(DXIEN,0)),U)
"RTN","ORQ21",67,0)
 . S DXV=$P($G(^ICD9(DXIEN,0)),U,3)
"RTN","ORQ21",68,0)
 . S X="Diagnosis of:  "_ICD9_" - "_DXV,CNT=CNT+1,@ORY@(CNT)=X
"RTN","ORQ21",69,0)
 . S X="For conditions related to:    "
"RTN","ORQ21",70,0)
 . F I=1:1:6 S Y=$P(OREC,U,I+3) I Y S CNT=CNT+1,@ORY@(CNT)=X_$$SC(I),X=$$REPEAT^XLFSTR(" ",30)
"RTN","ORQ21",71,0)
 Q
"RTN","ORQ21",72,0)
 ;
"RTN","ORQ21",73,0)
FILLED(TYPE) ; -- add FILLD data
"RTN","ORQ21",74,0)
 N Y S Y=$$FMTE^XLFDT($P(FILLD,U),2)_" ("_$$ROUTING($P(FILLD,U,5))_")"
"RTN","ORQ21",75,0)
 S:TYPE="R"&$P(FILLD,U,4) Y=Y_" released "_$$FMTE^XLFDT($P(FILLD,U,4),2)
"RTN","ORQ21",76,0)
 S:TYPE="P"&$P(FILLD,U,3) Y=Y_" Qty: "_$P(FILLD,U,3)
"RTN","ORQ21",77,0)
 S CNT=CNT+1,@ORY@(CNT)=X_Y,X=$$REPEAT^XLFSTR(" ",30)
"RTN","ORQ21",78,0)
 S:$L($P(FILLD,U,6)) CNT=CNT+1,@ORY@(CNT)=X_$P(FILLD,U,6)
"RTN","ORQ21",79,0)
 Q
"RTN","ORQ21",80,0)
 ;
"RTN","ORQ21",81,0)
ROUTING(X) ; -- Returns external form
"RTN","ORQ21",82,0)
 N Y S Y=$S($G(X)="M":"Mail",$G(X)="W":"Window",1:$G(X))
"RTN","ORQ21",83,0)
 Q Y
"RTN","ORQ21",84,0)
 ;
"RTN","ORQ21",85,0)
SC(J) ; -- Returns name of SC field by piece number
"RTN","ORQ21",86,0)
 I '$G(J) Q ""
"RTN","ORQ21",87,0)
 I J=1 Q "SERVICE CONNECTED CONDITION"
"RTN","ORQ21",88,0)
 I J=2 Q "MILITARY SEXUAL TRAUMA"
"RTN","ORQ21",89,0)
 I J=3 Q "AGENT ORANGE EXPOSURE"
"RTN","ORQ21",90,0)
 I J=4 Q "IONIZING RADIATION EXPOSURE"
"RTN","ORQ21",91,0)
 I J=5 Q "ENVIRONMENTAL CONTAMINANTS"
"RTN","ORQ21",92,0)
 I J=6 Q "HEAD OR NECK CANCER"
"RTN","ORQ21",93,0)
 I J=7 Q "COMBAT VETERAN"
"RTN","ORQ21",94,0)
 Q ""
"RTN","ORQOR2")
0^71^B13586012
"RTN","ORQOR2",1,0)
ORQOR2 ; slc/CLA - Extrinsic functions which return order information ;6/14/96  10:15 [ 04/02/97  1:35 PM ]
"RTN","ORQOR2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,92,122,144,190**;Dec 17, 1997
"RTN","ORQOR2",3,0)
STATUS(ORN) ;extrinsic function returns the current status of an order in
"RTN","ORQOR2",4,0)
 ;the format: status ien^external text 
"RTN","ORQOR2",5,0)
 ;DBIA #3458 supported api for outpt pharmacy
"RTN","ORQOR2",6,0)
 Q:'$L($G(ORN)) ""
"RTN","ORQOR2",7,0)
 Q:'$L($G(^OR(100,ORN,3))) ""
"RTN","ORQOR2",8,0)
 N ORSTATUS
"RTN","ORQOR2",9,0)
 S ORSTATUS=$P(^OR(100,ORN,3),U,3)
"RTN","ORQOR2",10,0)
 S ORSTATUS=ORSTATUS_U_$G(^ORD(100.01,+ORSTATUS,0))
"RTN","ORQOR2",11,0)
 Q ORSTATUS
"RTN","ORQOR2",12,0)
RECENT(PT,OI,ST) ;extrinsic funct returns pt's most recent order for an orderable item and status in format:
"RTN","ORQOR2",13,0)
 ; order number^order text (truncated to 60 chars)^start d/t^status
"RTN","ORQOR2",14,0)
 N INDT,ORN,CDT,ORSTATUS,ORTEXT,RESULT S RESULT="",ORN="",INDT=""
"RTN","ORQOR2",15,0)
 F  S INDT=$O(^OR(100,"AOI",OI,PT_";DPT(",INDT)) Q:INDT=""!(RESULT'="")  D
"RTN","ORQOR2",16,0)
 .F  S ORN=$O(^OR(100,"AOI",OI,PT_";DPT(",INDT,ORN)) Q:ORN=""  D
"RTN","ORQOR2",17,0)
 ..S ORSTATUS=$P(^OR(100,ORN,3),U,3)
"RTN","ORQOR2",18,0)
 ..I '$L($G(ST))!($G(ORSTATUS)=ST) D
"RTN","ORQOR2",19,0)
 ...S ORSTATUS=$G(^ORD(100.01,ORSTATUS,0)),CDT=9999999-INDT
"RTN","ORQOR2",20,0)
 ...S ORTEXT=$P($$TEXT^ORKOR(ORN,60),U,2)
"RTN","ORQOR2",21,0)
 ...S RESULT=ORN_U_ORTEXT_U_CDT_U_ORSTATUS
"RTN","ORQOR2",22,0)
 Q RESULT
"RTN","ORQOR2",23,0)
DUPRANGE(OI,DG,ODT,ORPT) ;extrinsic funct returns duplicate order range beginning date in the format:
"RTN","ORQOR2",24,0)
 ;fileman d/t^inverse fileman d/t
"RTN","ORQOR2",25,0)
 ;OI   = orderable item ien
"RTN","ORQOR2",26,0)
 ;DG   = display group abbrev. (e.g. 'LR')
"RTN","ORQOR2",27,0)
 ;ODT  = order effective/start date/time in FM format
"RTN","ORQOR2",28,0)
 ;ORPT = patient dfn
"RTN","ORQOR2",29,0)
 N DHRS,BDT,INBDT,ORSRV,ORLOC
"RTN","ORQOR2",30,0)
 S BDT="",INBDT=""
"RTN","ORQOR2",31,0)
 ;
"RTN","ORQOR2",32,0)
 ;get patient's location flag (INPATIENT ONLY - outpt locations cannot be
"RTN","ORQOR2",33,0)
 ;reliably determined, and many simultaneous outpt locations can occur):
"RTN","ORQOR2",34,0)
 I +$G(ORPT)>0 D
"RTN","ORQOR2",35,0)
 .N DFN S DFN=ORPT,VA200="" D OERR^VADPT
"RTN","ORQOR2",36,0)
 .I +$G(VAIN(4))>0 S ORLOC=+$G(^DIC(42,+$G(VAIN(4)),44))
"RTN","ORQOR2",37,0)
 .K VA200,VAIN
"RTN","ORQOR2",38,0)
 ;
"RTN","ORQOR2",39,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQOR2",40,0)
 S DHRS=$$GET^XPAR("LOC.`"_$G(ORLOC)_"^SRV.`"_$G(ORSRV)_"^DIV^SYS","ORK DUP ORDER RANGE OI",OI,"I")
"RTN","ORQOR2",41,0)
 Q:$G(DHRS)=0 "0^0" ;quit if number of hours for this OI is zero
"RTN","ORQOR2",42,0)
 I +$G(DHRS)<1 D
"RTN","ORQOR2",43,0)
 .I DG="LR" S DHRS=$$GET^XPAR("LOC.`"_$G(ORLOC)_"^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG","ORK DUP ORDER RANGE LAB",1,"I")
"RTN","ORQOR2",44,0)
 .I DG="RA" S DHRS=$$GET^XPAR("LOC.`"_$G(ORLOC)_"^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG","ORK DUP ORDER RANGE RADIOLOGY",1,"I")
"RTN","ORQOR2",45,0)
 I +$G(DHRS)<1 S DHRS=48  ;non-lab and non-radiology default is 48 hrs
"RTN","ORQOR2",46,0)
 S BDT=$$FMADD^XLFDT(ODT,"","-"_DHRS,"",""),INBDT=9999999-BDT
"RTN","ORQOR2",47,0)
 Q BDT_U_INBDT
"RTN","ORQOR2",48,0)
ORDERER(ORNUM) ;ext. funct. gets ordering provider DUZ from ORDER File (#100)
"RTN","ORQOR2",49,0)
 Q:'$L($G(ORNUM)) ""
"RTN","ORQOR2",50,0)
 S ORNUM=+$G(ORNUM)
"RTN","ORQOR2",51,0)
 N ORQDUZ,ORQI S ORQDUZ=""
"RTN","ORQOR2",52,0)
 I $L($G(^OR(100,ORNUM,8,0))) D
"RTN","ORQOR2",53,0)
 .S ORQI=0,ORQI=$O(^OR(100,ORNUM,8,"C","NW",ORQI))  ;8 node for New order
"RTN","ORQOR2",54,0)
 Q:+$G(ORQI)<1 ""
"RTN","ORQOR2",55,0)
 S ORQDUZ=$P(^OR(100,ORNUM,8,ORQI,0),U,3)
"RTN","ORQOR2",56,0)
 Q ORQDUZ
"RTN","ORQOR2",57,0)
UNSIGNOR(ORNUM) ;ext. funct. gets ordering provider DUZ from ORDER File (#100)
"RTN","ORQOR2",58,0)
 ; based on order action number (8 node)
"RTN","ORQOR2",59,0)
 ; if no action number return orderer for New order
"RTN","ORQOR2",60,0)
 ;ORNUM in format: <order ien>;<action number>
"RTN","ORQOR2",61,0)
 Q:'$L(+$G(ORNUM)) ""
"RTN","ORQOR2",62,0)
 N ORQDUZ,ORQI S ORQDUZ=""
"RTN","ORQOR2",63,0)
 S ORQI=$P(ORNUM,";",2)
"RTN","ORQOR2",64,0)
 S ORNUM=$P(ORNUM,";")
"RTN","ORQOR2",65,0)
 Q:+$G(ORNUM)<1 ""
"RTN","ORQOR2",66,0)
 I +$G(ORQI)<1 S ORQI=$P($G(^OR(100,ORNUM,8,0)),U,3)
"RTN","ORQOR2",67,0)
 I $L(ORQI),$L($G(^OR(100,ORNUM,8,ORQI,0))) D
"RTN","ORQOR2",68,0)
 .S ORQDUZ=$P(^OR(100,ORNUM,8,ORQI,0),U,3)
"RTN","ORQOR2",69,0)
 Q ORQDUZ
"RTN","ORQOR2",70,0)
OI(ORNUM) ;ext. funct. gets Orderable Item ien from ORDER File (#100)
"RTN","ORQOR2",71,0)
 Q:+$G(ORNUM)<1 ""
"RTN","ORQOR2",72,0)
 N OI S OI=""
"RTN","ORQOR2",73,0)
 S OI=+$G(^OR(100,+$G(ORNUM),.1,1,0))
"RTN","ORQOR2",74,0)
 Q OI
"RTN","ORQOR2",75,0)
DG(ORNUM) ;ext. funct. gets Display Group ien from ORDER File (#100)
"RTN","ORQOR2",76,0)
 Q:'$L($G(ORNUM)) ""
"RTN","ORQOR2",77,0)
 N DG S DG=""
"RTN","ORQOR2",78,0)
 S DG=$G(^OR(100,ORNUM,0))
"RTN","ORQOR2",79,0)
 I $L(DG) S DG=$P(DG,U,11)
"RTN","ORQOR2",80,0)
 Q DG
"RTN","ORQOR2",81,0)
DGRX(ORNUM)        ;ext. funct. determines if order is pharmacy order
"RTN","ORQOR2",82,0)
 Q:+$G(ORNUM)<1 ""
"RTN","ORQOR2",83,0)
 N DG,DGNAME,RXDG
"RTN","ORQOR2",84,0)
 S DG=$$DG(ORNUM)
"RTN","ORQOR2",85,0)
 S DGNAME=$P($G(^ORD(100.98,+DG,0)),U) Q:'$L(DGNAME) ""
"RTN","ORQOR2",86,0)
 F RXDG="PHARMACY","INPATIENT MEDICATIONS","OUTPATIENT MEDICATIONS","UNIT DOSE MEDICATIONS","IV MEDICATIONS","NON-VA MEDICATIONS","" Q:(DGNAME=RXDG)
"RTN","ORQOR2",87,0)
 Q RXDG
"RTN","ORQOR2",88,0)
PT(ORNUM) ;ext. funct. gets Patient dfn from ORDER File (#100)
"RTN","ORQOR2",89,0)
 Q:'$L($G(ORNUM)) ""
"RTN","ORQOR2",90,0)
 N PT S PT=""
"RTN","ORQOR2",91,0)
 S PT=$G(^OR(100,ORNUM,0))
"RTN","ORQOR2",92,0)
 I $L(PT) S PT=$P(PT,U,2),PT=$P(PT,";DPT")
"RTN","ORQOR2",93,0)
 Q PT
"RTN","ORQOR2",94,0)
RSLTFLG(ORNUM) ;ext. funct. returns duz of user to receive alert if order was
"RTN","ORQOR2",95,0)
 ; flagged to alert when resulted
"RTN","ORQOR2",96,0)
 Q:'$L($G(ORNUM)) ""
"RTN","ORQOR2",97,0)
 N FLG S FLG=""
"RTN","ORQOR2",98,0)
 S FLG=$G(^OR(100,+ORNUM,3))
"RTN","ORQOR2",99,0)
 I $L(FLG) S FLG=$P(FLG,U,10)
"RTN","ORQOR2",100,0)
 Q FLG
"RTN","ORQORB")
0^52^B3145696
"RTN","ORQORB",1,0)
ORQORB ; slc/CLA - Functions which return OE/RR Notification information ;12/15/97
"RTN","ORQORB",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,173,190**;Dec 17, 1997
"RTN","ORQORB",3,0)
 Q
"RTN","ORQORB",4,0)
LIST(Y) ;return list of notifications from Notification File [#100.9]
"RTN","ORQORB",5,0)
 ; RETURN IEN^NAME^URGENCY
"RTN","ORQORB",6,0)
 N I,J,V
"RTN","ORQORB",7,0)
 S I=1
"RTN","ORQORB",8,0)
 S J=0 F  S J=$O(^ORD(100.9,"B",J)) Q:J=""  S V=0,V=$O(^ORD(100.9,"B",J,V)) S Y(I)=V_"^"_J_"^"_^ORD(100.9,V,3),I=I+1
"RTN","ORQORB",9,0)
 Q
"RTN","ORQORB",10,0)
LISTON(Y,USER) ;return notifications the user has turned On or OFF
"RTN","ORQORB",11,0)
 ; RETURN NOTIF IEN^NOTIF NAME^ON/OFF FLAG
"RTN","ORQORB",12,0)
 N I,J,V,Z,FLAG
"RTN","ORQORB",13,0)
 S I=1,FLAG=""
"RTN","ORQORB",14,0)
 S J=0 F  S J=$O(^ORD(100.9,"B",J)) Q:J=""  S V=0,V=$O(^ORD(100.9,"B",J,V)) D
"RTN","ORQORB",15,0)
 .S Z=0,Z=$O(^ORD(100.9,"E",V,USER,Z))
"RTN","ORQORB",16,0)
 .I Z>0 S FLAG="ON"
"RTN","ORQORB",17,0)
 .E  S FLAG="OFF"
"RTN","ORQORB",18,0)
 .S Y(I)=V_"^"_J_"^"_FLAG,I=I+1
"RTN","ORQORB",19,0)
 Q
"RTN","ORQORB",20,0)
URGENCY(ORY,ORN) ;return urgency for the notification passed
"RTN","ORQORB",21,0)
 N ORSRV
"RTN","ORQORB",22,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQORB",23,0)
 S ORY=$$GET^XPAR("USR^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG","ORB URGENCY",ORN,"I")
"RTN","ORQORB",24,0)
 Q
"RTN","ORQORB",25,0)
URGLIST(ORY) ;return list of notification urgencies
"RTN","ORQORB",26,0)
 N ORSRV,ORN,ORU
"RTN","ORQORB",27,0)
 S ORN=0 F  S ORN=$O(^ORD(100.9,ORN)) Q:+$G(ORN)<1  D
"RTN","ORQORB",28,0)
 .S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQORB",29,0)
 .S ORU=$$GET^XPAR("USR^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG","ORB URGENCY",ORN,"I")
"RTN","ORQORB",30,0)
 .S ORY(ORN)=ORU
"RTN","ORQORB",31,0)
 Q
"RTN","ORQORB",32,0)
SORT(ORY) ;return notification sort method for user/division/system/pkg
"RTN","ORQORB",33,0)
 S ORY=$$GET^XPAR("USR^DIV^SYS^PKG","ORB SORT METHOD",1,"I")
"RTN","ORQORB",34,0)
 Q
"RTN","ORQORB",35,0)
REMLIST(ORY) ;return list of notification remove without processing values
"RTN","ORQORB",36,0)
 N ORN,ORU
"RTN","ORQORB",37,0)
 S ORN=0 F  S ORN=$O(^ORD(100.9,ORN)) Q:+$G(ORN)<1  D
"RTN","ORQORB",38,0)
 .S ORU=$$GET^XPAR("SYS","ORB REMOVE",ORN,"I")
"RTN","ORQORB",39,0)
 .S ORY(ORN)=ORU
"RTN","ORQORB",40,0)
 Q
"RTN","ORQPTQ2")
0^76^B40001761
"RTN","ORQPTQ2",1,0)
ORQPTQ2 ; slc/CLA - Functions which return patient lists and list sources pt 2 ;12/15/97 [ 04/02/97  3:41 PM ] [4/23/04 4:49pm]
"RTN","ORQPTQ2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**9,10,85,187,190**;Dec 17, 1997
"RTN","ORQPTQ2",3,0)
CLIN(Y) ; RETURN LIST OF CLINICS
"RTN","ORQPTQ2",4,0)
 N ORLST,IEN,I
"RTN","ORQPTQ2",5,0)
 D GETLST^XPAR(.ORLST,"ALL","ORWD COMMON CLINIC")
"RTN","ORQPTQ2",6,0)
 S I=0 F  S I=$O(ORLST(I)) Q:'I  D
"RTN","ORQPTQ2",7,0)
 . S IEN=$P(ORLST(I),U,2) I $$ACTLOC^ORWU(IEN)=1 D
"RTN","ORQPTQ2",8,0)
 .. S Y(I)=IEN_U_$P(^SC(IEN,0),U,1)
"RTN","ORQPTQ2",9,0)
 Q
"RTN","ORQPTQ2",10,0)
 ;
"RTN","ORQPTQ2",11,0)
CLINPTS(Y,CLIN,ORBDATE,OREDATE) ; RETURN LIST OF PTS W/CLINIC APPT W/IN BEGINNING AND END DATES
"RTN","ORQPTQ2",12,0)
 ; PKS-8/2003: Modified for new scheduling pkg APIs.
"RTN","ORQPTQ2",13,0)
 I +$G(CLIN)<1 S Y(1)="^No clinic identified" Q 
"RTN","ORQPTQ2",14,0)
 I $$ACTLOC^ORWU(CLIN)'=1 S Y(1)="^Clinic is inactive or Occasion Of Service" Q
"RTN","ORQPTQ2",15,0)
 N DFN,NAME,I,J,X,ORJ,ORSRV,ORNOWDT,CHKX,CHKIN,MAXAPPTS,ORC,CLNAM,ORFLDS,ORCLIN,ORRESULT,ORSTART,OREND,ORSTAT,ORASTAT,ORERR,ORI,ORPT,ORPTSTAT,ORMAX,ORHOLD
"RTN","ORQPTQ2",16,0)
 S MAXAPPTS=200
"RTN","ORQPTQ2",17,0)
 S ORNOWDT=$$NOW^XLFDT
"RTN","ORQPTQ2",18,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQPTQ2",19,0)
 S DFN=0,I=1
"RTN","ORQPTQ2",20,0)
 I ORBDATE="" S ORBDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","ORQPTQ2",21,0)
 I OREDATE="" S OREDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","ORQPTQ2",22,0)
 ;
"RTN","ORQPTQ2",23,0)
 ; Convert ORBDATE, OREDATE to FM Date/Time:
"RTN","ORQPTQ2",24,0)
 D DT^DILF("T",ORBDATE,.ORBDATE,"","")
"RTN","ORQPTQ2",25,0)
 D DT^DILF("T",OREDATE,.OREDATE,"","")
"RTN","ORQPTQ2",26,0)
 I (ORBDATE=-1)!(OREDATE=-1) S Y(1)="^Error in date range." Q 
"RTN","ORQPTQ2",27,0)
 S OREDATE=$P(OREDATE,".")_.5 ; Add 1/2 day to end date.
"RTN","ORQPTQ2",28,0)
 K ^TMP($J,"SDAMA202","GETPLIST") ; Clean house before starting.
"RTN","ORQPTQ2",29,0)
 S ORRESULT=""
"RTN","ORQPTQ2",30,0)
 S ORCLIN=+CLIN,ORFLDS="1;3;4;12",ORASTAT="R;NT",ORSTART=ORBDATE,OREND=OREDATE,ORSTAT="" ; Assign parameters.
"RTN","ORQPTQ2",31,0)
 ; ORFLDS: 1;3;4;12 = ApptDateTime;ApptStatus;IEN^PtName;PtStatus.
"RTN","ORQPTQ2",32,0)
 D GETPLIST^SDAMA202(ORCLIN,ORFLDS,ORASTAT,ORSTART,OREND,.ORRESULT,ORSTAT) ; DBIA # 3869.
"RTN","ORQPTQ2",33,0)
 ;
"RTN","ORQPTQ2",34,0)
 ; Deal with server errors:
"RTN","ORQPTQ2",35,0)
 S ORERR=""
"RTN","ORQPTQ2",36,0)
 I ORRESULT=-1 D
"RTN","ORQPTQ2",37,0)
 .S ORERR=$O(^TMP($J,"SDAMA202","GETPLIST","ERROR",ORERR))
"RTN","ORQPTQ2",38,0)
 I ORERR'="" S Y(1)="Server Error: "_ORERR Q
"RTN","ORQPTQ2",39,0)
 ;
"RTN","ORQPTQ2",40,0)
 ; Reassign ^TMP array to local array:
"RTN","ORQPTQ2",41,0)
 S (ORPT,ORI)=0,ORMAX=MAXAPPTS
"RTN","ORQPTQ2",42,0)
 I ORRESULT'>0 S Y(1)="^No appointments." Q
"RTN","ORQPTQ2",43,0)
 F  S ORPT=$O(^TMP($J,"SDAMA202","GETPLIST",ORPT)) Q:ORPT=""!(ORI>ORMAX)  D
"RTN","ORQPTQ2",44,0)
 .S ORI=ORI+1
"RTN","ORQPTQ2",45,0)
 .S Y(ORI)=$G(^TMP($J,"SDAMA202","GETPLIST",ORPT,4)) ; IEN^Name.
"RTN","ORQPTQ2",46,0)
 .S Y(ORI)=Y(ORI)_U_ORCLIN ; ^Clinic IEN.
"RTN","ORQPTQ2",47,0)
 .S Y(ORI)=Y(ORI)_U_$G(^TMP($J,"SDAMA202","GETPLIST",ORPT,1)) ; App't.
"RTN","ORQPTQ2",48,0)
 .S ORPTSTAT=$G(^TMP($J,"SDAMA202","GETPLIST",ORPT,12)) ; Pt Status.
"RTN","ORQPTQ2",49,0)
 .S ORPTSTAT=$S(ORPTSTAT="I":"IPT",ORPTSTAT="O":"OPT",1:"")
"RTN","ORQPTQ2",50,0)
 .S ORHOLD=$G(^TMP($J,"SDAMA202","GETPLIST",ORPT,3)) ; Appt Status.
"RTN","ORQPTQ2",51,0)
 .I ORPTSTAT=""&(ORHOLD="NT") S ORPTSTAT="NT" ; "No Action Taken."
"RTN","ORQPTQ2",52,0)
 .S Y(ORI)=Y(ORI)_U_U_U_U_U_ORPTSTAT ; Pt I or O status (or "NT").
"RTN","ORQPTQ2",53,0)
 ;
"RTN","ORQPTQ2",54,0)
 K ^TMP($J,"SDAMA202","GETPLIST") ; Clean house after finishing.
"RTN","ORQPTQ2",55,0)
 ;
"RTN","ORQPTQ2",56,0)
 Q
"RTN","ORQPTQ2",57,0)
 ;
"RTN","ORQPTQ2",58,0)
CDATRANG(ORY) ; return default start and stop dates for clinics in form start^stop
"RTN","ORQPTQ2",59,0)
 N ORBDATE,OREDATE,ORSRV
"RTN","ORQPTQ2",60,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQPTQ2",61,0)
 S ORBDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","ORQPTQ2",62,0)
 S OREDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","ORQPTQ2",63,0)
 S ORBDATE=$S($L($G(ORBDATE)):ORBDATE,1:""),OREDATE=$S($L($G(OREDATE)):OREDATE,1:"")
"RTN","ORQPTQ2",64,0)
 S ORY=$$UP^XLFSTR(ORBDATE)_"^"_$$UP^XLFSTR(OREDATE)
"RTN","ORQPTQ2",65,0)
 Q
"RTN","ORQPTQ2",66,0)
PTAPPTS(Y,DFN,ORBDATE,OREDATE,CLIN) ; return appts for a patient between beginning and end dates for a clinic, if no clinic return all appointments
"RTN","ORQPTQ2",67,0)
 ;I +$G(CLIN)<1 S Y(1)="^No clinic identified" Q 
"RTN","ORQPTQ2",68,0)
 I +$G(CLIN)>0,$$ACTLOC^ORWU(CLIN)'=1 S Y(1)="^Clinic is inactive or Occasion Of Service" Q
"RTN","ORQPTQ2",69,0)
 N VASD,NUM,CNT,INVDT,INT,EXT,ORSRV S NUM=0,CNT=1
"RTN","ORQPTQ2",70,0)
 I (ORBDATE="")!(OREDATE="") D  ;get user's service and set up entities:
"RTN","ORQPTQ2",71,0)
 .S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQPTQ2",72,0)
 I ORBDATE="" D
"RTN","ORQPTQ2",73,0)
 .I '$L(CLIN) S ORBDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORQQAP SEARCH RANGE START",1,"E"))
"RTN","ORQPTQ2",74,0)
 .S:ORBDATE="" ORBDATE="T" ;default start date across all clinics is today
"RTN","ORQPTQ2",75,0)
 I OREDATE="" D
"RTN","ORQPTQ2",76,0)
 .I '$L(CLIN) S OREDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORQQAP SEARCH RANGE STOP",1,"E"))
"RTN","ORQPTQ2",77,0)
 .S:OREDATE="" OREDATE="T" ;default end date across all clinics is today
"RTN","ORQPTQ2",78,0)
 ;CONVERT ORBDATE AND OREDATE INTO FILEMAN DATE/TIME
"RTN","ORQPTQ2",79,0)
 D DT^DILF("T",ORBDATE,.ORBDATE,"","")
"RTN","ORQPTQ2",80,0)
 D DT^DILF("T",OREDATE,.OREDATE,"","")
"RTN","ORQPTQ2",81,0)
 I (ORBDATE=-1)!(OREDATE=-1) S Y(1)="^Error in date range." Q 
"RTN","ORQPTQ2",82,0)
 S VASD("F")=ORBDATE
"RTN","ORQPTQ2",83,0)
 S VASD("T")=$P(OREDATE,".")_.5  ;ADD 1/2 DAY TO END DATE
"RTN","ORQPTQ2",84,0)
 I $L($G(CLIN)) S VASD("C",CLIN)=""
"RTN","ORQPTQ2",85,0)
 D SDA^VADPT
"RTN","ORQPTQ2",86,0)
 Q:VAERR=1
"RTN","ORQPTQ2",87,0)
 F  S NUM=$O(^UTILITY("VASD",$J,NUM)) Q:'NUM  D
"RTN","ORQPTQ2",88,0)
 .S INT=^UTILITY("VASD",$J,NUM,"I"),INVDT=9999999-$P(INT,U)
"RTN","ORQPTQ2",89,0)
 .S EXT=^UTILITY("VASD",$J,NUM,"E")
"RTN","ORQPTQ2",90,0)
 .S Y(CNT)=$P(INT,U)_U_$P(EXT,U,2)_U_$P(EXT,U,3)_U_$P(EXT,U,4)_U_INVDT
"RTN","ORQPTQ2",91,0)
 .S CNT=CNT+1
"RTN","ORQPTQ2",92,0)
 S:+$G(Y(1))<1 Y(1)="^No appointments."
"RTN","ORQPTQ2",93,0)
 K VAERR
"RTN","ORQPTQ2",94,0)
 Q
"RTN","ORQPTQ2",95,0)
PROV(Y) ; RETURN LIST OF PROVIDERS
"RTN","ORQPTQ2",96,0)
 N I,IEN,NAME,TDATE
"RTN","ORQPTQ2",97,0)
 S I=1,NAME=""
"RTN","ORQPTQ2",98,0)
 F  S NAME=$O(^VA(200,"B",NAME)) Q:NAME=""  S IEN=0,IEN=$O(^(NAME,IEN))  D
"RTN","ORQPTQ2",99,0)
 .Q:$E(NAME)="*"
"RTN","ORQPTQ2",100,0)
 .I $D(^XUSEC("PROVIDER",IEN)),$$ACTIVE^XUSER(IEN) S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","ORQPTQ2",101,0)
 Q
"RTN","ORQPTQ2",102,0)
PROVPTS(Y,PROV) ; RETURN LIST OF PATIENTS LINKED TO A PRIMARY PROVIDER
"RTN","ORQPTQ2",103,0)
 I +$G(PROV)<1 S Y(1)="^No provider identified" Q
"RTN","ORQPTQ2",104,0)
 N ORI,DFN
"RTN","ORQPTQ2",105,0)
 S ORI=1,DFN=0
"RTN","ORQPTQ2",106,0)
 F  S DFN=$O(^DPT("APR",PROV,DFN)) Q:DFN'>0  S Y(ORI)=+DFN_"^"_$P(^DPT(+DFN,0),"^"),ORI=ORI+1
"RTN","ORQPTQ2",107,0)
 S:+$G(Y(1))<1 Y(1)="^No patients found."
"RTN","ORQPTQ2",108,0)
 Q
"RTN","ORQPTQ2",109,0)
SPEC(Y) ; RETURN LIST OF TREATING SPECIALTIES
"RTN","ORQPTQ2",110,0)
 N I,NAME,IEN
"RTN","ORQPTQ2",111,0)
 S I=1,NAME=""
"RTN","ORQPTQ2",112,0)
 ;access to DIC(45.7 global granted under DBIA #519:
"RTN","ORQPTQ2",113,0)
 F  S NAME=$O(^DIC(45.7,"B",NAME)) Q:NAME=""  S IEN=0,IEN=$O(^(NAME,IEN)) I $$ACTIVE^DGACT(45.7,IEN) S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","ORQPTQ2",114,0)
 Q
"RTN","ORQPTQ2",115,0)
SPECPTS(Y,SPEC) ; RETURN LIST OF PATIENTS LINKED TO A TREATING SPECIALTY
"RTN","ORQPTQ2",116,0)
 I +$G(SPEC)<1 S Y(1)="^No specialty identified" Q 
"RTN","ORQPTQ2",117,0)
 N ORI,DFN
"RTN","ORQPTQ2",118,0)
 S ORI=1,DFN=0
"RTN","ORQPTQ2",119,0)
 F  S DFN=$O(^DPT("ATR",SPEC,DFN)) Q:DFN'>0  S Y(ORI)=+DFN_"^"_$P(^DPT(+DFN,0),"^"),ORI=ORI+1
"RTN","ORQPTQ2",120,0)
 S:+$G(Y(1))<1 Y(1)="^No patients found."
"RTN","ORQPTQ2",121,0)
 Q
"RTN","ORQPTQ2",122,0)
WARD(Y) ; RETURN LIST OF ACTIVE WARDS
"RTN","ORQPTQ2",123,0)
 N I,IEN,NAME,D0
"RTN","ORQPTQ2",124,0)
 S I=1,NAME=""
"RTN","ORQPTQ2",125,0)
 ;access to DIC(42 global granted under DBIA #36:
"RTN","ORQPTQ2",126,0)
 F  S NAME=$O(^DIC(42,"B",NAME)) Q:NAME=""  S IEN=$O(^(NAME,0)) D
"RTN","ORQPTQ2",127,0)
 . S D0=IEN D WIN^DGPMDDCF
"RTN","ORQPTQ2",128,0)
 . I X=0 S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","ORQPTQ2",129,0)
 Q
"RTN","ORQPTQ2",130,0)
WARDPTS(Y,WARD) ; RETURN LIST OF PATIENTS IN A WARD
"RTN","ORQPTQ2",131,0)
 ; SLC/PKS - Modifications for Room/Bed data on  1/19/2001.
"RTN","ORQPTQ2",132,0)
 I +$G(WARD)<1 S Y(1)="^No ward identified" Q 
"RTN","ORQPTQ2",133,0)
 N ORI,DFN,RBDAT
"RTN","ORQPTQ2",134,0)
 S ORI=1,DFN=0
"RTN","ORQPTQ2",135,0)
 ; Access to DIC(42 global granted under DBIA #36:
"RTN","ORQPTQ2",136,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;GET WARD NAME FOR "CN"  LOOKUP
"RTN","ORQPTQ2",137,0)
 ; Next section modified 1/19/2001 by PKS:
"RTN","ORQPTQ2",138,0)
 F  D  Q:DFN'>0
"RTN","ORQPTQ2",139,0)
 .S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0
"RTN","ORQPTQ2",140,0)
 .S Y(ORI)=+DFN_"^"_$P(^DPT(+DFN,0),"^")
"RTN","ORQPTQ2",141,0)
 .S RBDAT=""
"RTN","ORQPTQ2",142,0)
 .; Add patient room/bed information where data exists:
"RTN","ORQPTQ2",143,0)
 .S RBDAT=$P($G(^DPT(+DFN,.101)),U)
"RTN","ORQPTQ2",144,0)
 .I RBDAT'="" D                                   ; Any R/B data?
"RTN","ORQPTQ2",145,0)
 ..I $L(RBDAT)<4 S RBDAT=RBDAT_"   "              ; Add if < 4 chars.
"RTN","ORQPTQ2",146,0)
 ..S RBDAT=$E(RBDAT,1,4)                          ; Get first 4 only.
"RTN","ORQPTQ2",147,0)
 .S Y(ORI)=Y(ORI)_U_RBDAT                         ; Add R/B to string
"RTN","ORQPTQ2",148,0)
 .S ORI=ORI+1                                     ; Increment counter.
"RTN","ORQPTQ2",149,0)
 ;
"RTN","ORQPTQ2",150,0)
 S:+$G(Y(1))<1 Y(1)="^No patients found."
"RTN","ORQPTQ2",151,0)
 Q
"RTN","ORQPTQ2",152,0)
NLIST(ORQY) ; return a null list
"RTN","ORQPTQ2",153,0)
 S ORQY(1)=""
"RTN","ORQPTQ2",154,0)
 Q
"RTN","ORQPTQ5")
0^77^B61498504
"RTN","ORQPTQ5",1,0)
ORQPTQ5 ; SLC/PKS - Functions for Patient Selection Lists. [4/23/04 4:49pm]
"RTN","ORQPTQ5",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**82,85,187,190**;Dec 17, 1997
"RTN","ORQPTQ5",3,0)
 ;
"RTN","ORQPTQ5",4,0)
 Q
"RTN","ORQPTQ5",5,0)
 ;
"RTN","ORQPTQ5",6,0)
COMBDISP(ORQDUZ,ORQPTR) ; Display user's "Combination" pt selection sources.
"RTN","ORQPTQ5",7,0)
 ;
"RTN","ORQPTQ5",8,0)
 ; Variables used:
"RTN","ORQPTQ5",9,0)
 ;
"RTN","ORQPTQ5",10,0)
 ;   ORQCNT = Counter for number of entries displayed.
"RTN","ORQPTQ5",11,0)
 ;   ORQDUZ = DUZ of user involved.
"RTN","ORQPTQ5",12,0)
 ;   ORQPTR = IEN for user's OE/RR PT SEL COMBO file entries.
"RTN","ORQPTQ5",13,0)
 ;   ORQSRC = $O command values from combo entries, file ^OR(100.24,.
"RTN","ORQPTQ5",14,0)
 ;   ORQTXT = Text name string for combo entry pointers.
"RTN","ORQPTQ5",15,0)
 ;
"RTN","ORQPTQ5",16,0)
 N ORQCNT,ORQSRC,ORQTXT
"RTN","ORQPTQ5",17,0)
 ;
"RTN","ORQPTQ5",18,0)
 ; Check passed variables, punt on errors:
"RTN","ORQPTQ5",19,0)
 S ORQCNT=0
"RTN","ORQPTQ5",20,0)
 I '($D(ORQDUZ)) W !,"No user DUZ passed.",! Q ORQCNT
"RTN","ORQPTQ5",21,0)
 I '($D(ORQPTR)) W !,"No combination pointer passed.",! Q ORQCNT
"RTN","ORQPTQ5",22,0)
 I ORQDUZ="" W !,"No user DUZ passed.",! Q ORQCNT
"RTN","ORQPTQ5",23,0)
 I ORQPTR="" W !,"No combination pointer passed.",! Q ORQCNT
"RTN","ORQPTQ5",24,0)
 ;
"RTN","ORQPTQ5",25,0)
 ; Order through the user's combination source entries:
"RTN","ORQPTQ5",26,0)
 K ^TMP("OR",$J,"ORQCPL")
"RTN","ORQPTQ5",27,0)
 S ORQSRC=0
"RTN","ORQPTQ5",28,0)
 F  S ORQSRC=$O(^OR(100.24,ORQPTR,.01,ORQSRC)) Q:'ORQSRC  D
"RTN","ORQPTQ5",29,0)
 .;
"RTN","ORQPTQ5",30,0)
 .; Get the actual source name based on the pointer entry value:
"RTN","ORQPTQ5",31,0)
 .S ORQTXT=""
"RTN","ORQPTQ5",32,0)
 .S ORQTXT=$G(^OR(100.24,ORQPTR,.01,ORQSRC,0))
"RTN","ORQPTQ5",33,0)
 .I '(ORQTXT="") D
"RTN","ORQPTQ5",34,0)
 ..S ORQCNT=ORQCNT+1         ; Increment counter.
"RTN","ORQPTQ5",35,0)
 ..S ORQTXT=$$COMBNM(ORQTXT) ; Call tag to create complete string.
"RTN","ORQPTQ5",36,0)
 ..;
"RTN","ORQPTQ5",37,0)
 ..; Write to ^TMP file for sorting:
"RTN","ORQPTQ5",38,0)
 ..I ORQTXT'="" S ^TMP("OR",$J,"ORQCPL",$P(ORQTXT,U))=$P(ORQTXT,U,2)
"RTN","ORQPTQ5",39,0)
 ;
"RTN","ORQPTQ5",40,0)
 ; Write data to the screen:
"RTN","ORQPTQ5",41,0)
 I ORQCNT D                                       ; Data to write?
"RTN","ORQPTQ5",42,0)
 .S ORQTXT=""                                     ; Reset, re-use.
"RTN","ORQPTQ5",43,0)
 .F  S ORQTXT=$O(^TMP("OR",$J,"ORQCPL",ORQTXT)) Q:ORQTXT=""  D
"RTN","ORQPTQ5",44,0)
 ..W !,$G(^TMP("OR",$J,"ORQCPL",ORQTXT))
"RTN","ORQPTQ5",45,0)
 ;
"RTN","ORQPTQ5",46,0)
 K ^TMP("OR",$J,"ORQCPL")                         ; Clean house.
"RTN","ORQPTQ5",47,0)
 ;
"RTN","ORQPTQ5",48,0)
 Q ORQCNT                                         ; Return counter.
"RTN","ORQPTQ5",49,0)
 ;
"RTN","ORQPTQ5",50,0)
COMBNM(ORQVAL) ; Returns name of "Combination" source entry, ^OR(100.24 file.
"RTN","ORQPTQ5",51,0)
 ;
"RTN","ORQPTQ5",52,0)
 ; Returned string is "X_Name^String" where X is letter of type,
"RTN","ORQPTQ5",53,0)
 ;    Name is name of entity, and String resembles examples below:
"RTN","ORQPTQ5",54,0)
 ; 
"RTN","ORQPTQ5",55,0)
 ;       W_1W^Ward:       1W  SURGERY WEST
"RTN","ORQPTQ5",56,0)
 ;       P_JONES,WILMA MD^Provider:   JONES,WILMA MD
"RTN","ORQPTQ5",57,0)
 ;       T_SURGERYLIST2^Team List:  SURGERYLIST2
"RTN","ORQPTQ5",58,0)
 ;       (Etc.)
"RTN","ORQPTQ5",59,0)
 ;
"RTN","ORQPTQ5",60,0)
 ; Variables used:
"RTN","ORQPTQ5",61,0)
 ;
"RTN","ORQPTQ5",62,0)
 ;    ORQFILE = File for retrieval of name.
"RTN","ORQPTQ5",63,0)
 ;    ORQPTR  = Name string to return.
"RTN","ORQPTQ5",64,0)
 ;    ORQRTN  = Value returned by this function.
"RTN","ORQPTQ5",65,0)
 ;    ORQVAL  = Combo source entry pointer.
"RTN","ORQPTQ5",66,0)
 ;
"RTN","ORQPTQ5",67,0)
 N ORQPTR,ORQFILE,ORQRTN
"RTN","ORQPTQ5",68,0)
 I '($D(ORQVAL)) Q ORQRTN                         ; Error - punt.
"RTN","ORQPTQ5",69,0)
 ;
"RTN","ORQPTQ5",70,0)
 S ORQRTN="No source found...."                   ; Default init.
"RTN","ORQPTQ5",71,0)
 S ORQPTR=$P(ORQVAL,";")                          ; Get pointer.
"RTN","ORQPTQ5",72,0)
 S ORQFILE="^"_$P(ORQVAL,";",2)                   ; Get file.
"RTN","ORQPTQ5",73,0)
 ;
"RTN","ORQPTQ5",74,0)
 I ORQFILE="^DIC(42," D  Q ORQRTN                 ; Wards.
"RTN","ORQPTQ5",75,0)
 .S ORQRTN=$G(^DIC(42,ORQPTR,0))
"RTN","ORQPTQ5",76,0)
 .I $D(ORQRTN) S ORQRTN="W"_"_"_$P(ORQRTN,U)_U_"Ward:       "_$P(ORQRTN,U)_"  "_$P(ORQRTN,U,2)
"RTN","ORQPTQ5",77,0)
 ;
"RTN","ORQPTQ5",78,0)
 I ORQFILE="^VA(200," D  Q ORQRTN                 ; Providers.
"RTN","ORQPTQ5",79,0)
 .S ORQRTN=$G(^VA(200,ORQPTR,0))
"RTN","ORQPTQ5",80,0)
 .I $D(ORQRTN) S ORQRTN="P"_"_"_$P(ORQRTN,U)_U_"Provider:   "_$P(ORQRTN,U)
"RTN","ORQPTQ5",81,0)
 ;
"RTN","ORQPTQ5",82,0)
 I ORQFILE="^DIC(45.7," D  Q ORQRTN               ; Specialties.
"RTN","ORQPTQ5",83,0)
 .S ORQRTN=$G(^DIC(45.7,ORQPTR,0))
"RTN","ORQPTQ5",84,0)
 .I $D(ORQRTN) S ORQRTN="S"_"_"_$P(ORQRTN,U)_U_"Specialty:  "_$P(ORQRTN,U)
"RTN","ORQPTQ5",85,0)
 ;
"RTN","ORQPTQ5",86,0)
 I ORQFILE="^OR(100.21," D  Q ORQRTN              ; Team Lists.
"RTN","ORQPTQ5",87,0)
 .S ORQRTN=$G(^OR(100.21,ORQPTR,0))
"RTN","ORQPTQ5",88,0)
 .I $D(ORQRTN) S ORQRTN="T"_"_"_$P(ORQRTN,U)_U_"Team List:  "_$P(ORQRTN,U)
"RTN","ORQPTQ5",89,0)
 ;
"RTN","ORQPTQ5",90,0)
 I ORQFILE="^SC(" D  Q ORQRTN                     ; Clinics.
"RTN","ORQPTQ5",91,0)
 .S ORQRTN=$G(^SC(ORQPTR,0))
"RTN","ORQPTQ5",92,0)
 .I $D(ORQRTN) S ORQRTN="C"_"_"_$P(ORQRTN,U)_U_"Clinic:     "_$P(ORQRTN,U)
"RTN","ORQPTQ5",93,0)
 ;
"RTN","ORQPTQ5",94,0)
 ; Return value (null will be returned if nothing matched):
"RTN","ORQPTQ5",95,0)
 Q ORQRTN
"RTN","ORQPTQ5",96,0)
 ;
"RTN","ORQPTQ5",97,0)
PTSCOMBO(ORQTYP,ORQPTR) ; Write ^TMP("OR",$J,"PATIENTS","B") patient entries.
"RTN","ORQPTQ5",98,0)
 ;
"RTN","ORQPTQ5",99,0)
 ; Called from COMBPTS^ORQPTQ6.
"RTN","ORQPTQ5",100,0)
 ; (ORQCNT,ORQPDAT,ORQPIEN,ORQPNM,ORQPSTAT,SORT new'd in calling tag.)
"RTN","ORQPTQ5",101,0)
 ; (Array ORY new'd in calling routine ORQPTQ2.)
"RTN","ORQPTQ5",102,0)
 ;
"RTN","ORQPTQ5",103,0)
 ; Variables used:
"RTN","ORQPTQ5",104,0)
 ;
"RTN","ORQPTQ5",105,0)
 ;    ORQDOB  = Patient DOB.
"RTN","ORQPTQ5",106,0)
 ;    ORQDONE = Flag for end of patient records.
"RTN","ORQPTQ5",107,0)
 ;    ORQIDT  = Clinic app't date stored in internal format.
"RTN","ORQPTQ5",108,0)
 ;    ORQMORE = Room/bed or appointment information.
"RTN","ORQPTQ5",109,0)
 ;    ORQPTR  = PASSED: Pointer from subfile entry, combination file.
"RTN","ORQPTQ5",110,0)
 ;    ORQSNM  = Name of source from subfile entry pointer.
"RTN","ORQPTQ5",111,0)
 ;    ORQSNM4 = First four letters of name of source.
"RTN","ORQPTQ5",112,0)
 ;    ORQSSN  = Patient SSN suffix.
"RTN","ORQPTQ5",113,0)
 ;    ORQTYP  = PASSED: Holds source type:
"RTN","ORQPTQ5",114,0)
 ;
"RTN","ORQPTQ5",115,0)
 ;                W = Ward
"RTN","ORQPTQ5",116,0)
 ;                P = Provider
"RTN","ORQPTQ5",117,0)
 ;                S = Specialty
"RTN","ORQPTQ5",118,0)
 ;                T = Team List
"RTN","ORQPTQ5",119,0)
 ;                C = Clinic
"RTN","ORQPTQ5",120,0)
 ;
"RTN","ORQPTQ5",121,0)
 N ORQDOB,ORQDONE,ORQIDT,ORQMORE,ORQSNM,ORQSNM4,ORQSSN
"RTN","ORQPTQ5",122,0)
 ;
"RTN","ORQPTQ5",123,0)
 ; Initialize variables:
"RTN","ORQPTQ5",124,0)
 S ORQDONE=0
"RTN","ORQPTQ5",125,0)
 S ORQCNT=1
"RTN","ORQPTQ5",126,0)
 ;
"RTN","ORQPTQ5",127,0)
 ; Get name data for source:
"RTN","ORQPTQ5",128,0)
 S ORQSNM4=""                                     ; Default setting.
"RTN","ORQPTQ5",129,0)
 I ORQTYP="W" S ORQSNM4=$G(^DIC(42,ORQPTR,0))     ; Wards.
"RTN","ORQPTQ5",130,0)
 I ORQTYP="P" S ORQSNM4=$G(^VA(200,ORQPTR,0))     ; Providers.
"RTN","ORQPTQ5",131,0)
 I ORQTYP="S" S ORQSNM4=$G(^DIC(45.7,ORQPTR,0))   ; Specialties.
"RTN","ORQPTQ5",132,0)
 I ORQTYP="T" S ORQSNM4=$G(^OR(100.21,ORQPTR,0))  ; Team Lists.
"RTN","ORQPTQ5",133,0)
 I ORQTYP="C" S ORQSNM4=$G(^SC(ORQPTR,0))         ; Clinics.
"RTN","ORQPTQ5",134,0)
 ;
"RTN","ORQPTQ5",135,0)
 ; Assure use of first 4 letters of name:
"RTN","ORQPTQ5",136,0)
 S ORQSNM4=$P(ORQSNM4,U)_"    "                   ; Add 4 for safety.
"RTN","ORQPTQ5",137,0)
 S ORQSNM4=$E(ORQSNM4,1,4)                        ; Get first 4 only.
"RTN","ORQPTQ5",138,0)
 ;
"RTN","ORQPTQ5",139,0)
 ; Add label prefix to source name:
"RTN","ORQPTQ5",140,0)
 S ORQSNM=""                                      ; Default setting.
"RTN","ORQPTQ5",141,0)
 S ORQSNM=$S(ORQTYP="W":"Wd ",ORQTYP="P":"Pr ",ORQTYP="S":"Sp ",ORQTYP="T":"Tm ",ORQTYP="C":"Cl ",1:"     ")           ; Get correct name.
"RTN","ORQPTQ5",142,0)
 S ORQSNM=ORQSNM_ORQSNM4                          ; Prepend label.
"RTN","ORQPTQ5",143,0)
 ;
"RTN","ORQPTQ5",144,0)
 ; Order thru ORY array created by calls in calling routine:
"RTN","ORQPTQ5",145,0)
 S ORQPDAT=""                                     ; Initialize.
"RTN","ORQPTQ5",146,0)
 F  S ORQPDAT=$G(ORY(ORQCNT)) Q:((ORQPDAT="")!(ORQDONE))  D
"RTN","ORQPTQ5",147,0)
 .;
"RTN","ORQPTQ5",148,0)
 .; Clear variables each time:
"RTN","ORQPTQ5",149,0)
 .S (ORQPIEN,ORQPNM,ORQSSN,ORQDOB,ORQIDT,ORQMORE,ORQPSTAT)=""
"RTN","ORQPTQ5",150,0)
 .;
"RTN","ORQPTQ5",151,0)
 .S ORQPIEN=$P(ORQPDAT,U)                         ; Get patient IEN.
"RTN","ORQPTQ5",152,0)
 .I ORQPIEN="" S ORQDONE=1 Q                      ; Punt if no IEN.
"RTN","ORQPTQ5",153,0)
 .S ORQPNM=$P(ORQPDAT,U,2)                        ; Get patient name.
"RTN","ORQPTQ5",154,0)
 .;
"RTN","ORQPTQ5",155,0)
 .; Get patient SSN suffix:
"RTN","ORQPTQ5",156,0)
 .S ORQSSN=$$ID($G(ORQPIEN))
"RTN","ORQPTQ5",157,0)
 .;
"RTN","ORQPTQ5",158,0)
 .; Get patient DOB:
"RTN","ORQPTQ5",159,0)
 .S ORQDOB=$$FMTE^XLFDT($P($G(^DPT(ORQPIEN,0)),U,3))
"RTN","ORQPTQ5",160,0)
 .;
"RTN","ORQPTQ5",161,0)
 .; Get patient room/bed information where data exists:
"RTN","ORQPTQ5",162,0)
 .S ORQMORE=$P($G(^DPT(ORQPIEN,.101)),U)
"RTN","ORQPTQ5",163,0)
 .;
"RTN","ORQPTQ5",164,0)
 .; Assure at least 4 letters for any existing room/bed data:
"RTN","ORQPTQ5",165,0)
 .I ORQMORE'="" D                                 ; Any data now?
"RTN","ORQPTQ5",166,0)
 ..I $L(ORQMORE)<4 D                              ; Less than 4 now?
"RTN","ORQPTQ5",167,0)
 ...S ORQMORE=ORQMORE_"   "                       ; Add 3 for safety.
"RTN","ORQPTQ5",168,0)
 ...S ORQMORE=$E(ORQMORE,1,4)                     ; Get first 4 only.
"RTN","ORQPTQ5",169,0)
 .;
"RTN","ORQPTQ5",170,0)
 .; Get clinic appointment information, if applicable:
"RTN","ORQPTQ5",171,0)
 .I ORQTYP="C" D
"RTN","ORQPTQ5",172,0)
 ..S ORQMORE=""                                   ; Reset, re-use.
"RTN","ORQPTQ5",173,0)
 ..S ORQMORE=$P(ORQPDAT,U,4)                      ; App't data.
"RTN","ORQPTQ5",174,0)
 ..S ORQIDT=ORQMORE                               ; Internal format.
"RTN","ORQPTQ5",175,0)
 ..S $P(ORQMORE,".",2)=$E($P(ORQMORE,".",2)_"000",1,4)
"RTN","ORQPTQ5",176,0)
 ..S ORQMORE=$$FMTE^XLFDT($P(ORQMORE,U))          ; Format app't.
"RTN","ORQPTQ5",177,0)
 ..S ORQPSTAT=$P(ORQPDAT,U,9)                     ; Ipt/Opt status.
"RTN","ORQPTQ5",178,0)
 .;
"RTN","ORQPTQ5",179,0)
 .; Write a sorted entry in ^TMP("OR",$J,"PATIENTS","B"):
"RTN","ORQPTQ5",180,0)
 .;    (Node's data:)
"RTN","ORQPTQ5",181,0)
 .;    (DFN^PtName^SSN^DOB^SourceName^App't/Room/Bed^SourceIEN^IOStat)
"RTN","ORQPTQ5",182,0)
 .I ORQPIEN'="" D
"RTN","ORQPTQ5",183,0)
 ..;
"RTN","ORQPTQ5",184,0)
 ..; Write using source name first if sorted by "S" (source) -or-
"RTN","ORQPTQ5",185,0)
 ..;    if "P" (app't) sort and not a clinic:
"RTN","ORQPTQ5",186,0)
 ..I ((SORT="S")!((SORT="P")&(ORQTYP'="C"))) D  Q
"RTN","ORQPTQ5",187,0)
 ...S ^TMP("OR",$J,"PATIENTS","B",ORQSNM_" "_ORQPNM_" "_ORQPIEN_" "_ORQIDT)=ORQPIEN_U_ORQPNM_U_ORQSSN_U_ORQDOB_U_ORQSNM_U_ORQMORE_U_ORQPTR_U_ORQIDT_U_ORQPSTAT
"RTN","ORQPTQ5",188,0)
 ..; 
"RTN","ORQPTQ5",189,0)
 ..; Use source source+app't first if "P" (app't) sort, and a clinic:
"RTN","ORQPTQ5",190,0)
 ..I ((ORQTYP="C")&(SORT="P")) D  Q
"RTN","ORQPTQ5",191,0)
 ...S ^TMP("OR",$J,"PATIENTS","B",ORQSNM_" "_ORQIDT_" "_ORQPNM_" "_ORQPIEN)=ORQPIEN_U_ORQPNM_U_ORQSSN_U_ORQDOB_U_ORQSNM_U_ORQMORE_U_ORQPTR_U_ORQIDT_U_ORQPSTAT
"RTN","ORQPTQ5",192,0)
 ..;
"RTN","ORQPTQ5",193,0)
 ..; If not by source or source/app't, default to alpha ("A") sort:
"RTN","ORQPTQ5",194,0)
 ..S ^TMP("OR",$J,"PATIENTS","B",ORQPNM_" "_ORQPIEN_" "_ORQSNM_" "_ORQIDT)=ORQPIEN_U_ORQPNM_U_ORQSSN_U_ORQDOB_U_ORQSNM_U_ORQMORE_U_ORQPTR_U_ORQIDT_U_ORQPSTAT
"RTN","ORQPTQ5",195,0)
 .;
"RTN","ORQPTQ5",196,0)
 .S ORQCNT=ORQCNT+1                               ; Increment counter.
"RTN","ORQPTQ5",197,0)
 ;
"RTN","ORQPTQ5",198,0)
 Q
"RTN","ORQPTQ5",199,0)
 ;
"RTN","ORQPTQ5",200,0)
ID(ORQPIEN) ; Return short ID for patient ID.
"RTN","ORQPTQ5",201,0)
 ; (Copied from ORQPT routine and modified.)
"RTN","ORQPTQ5",202,0)
 ;
"RTN","ORQPTQ5",203,0)
 N ID
"RTN","ORQPTQ5",204,0)
 ;
"RTN","ORQPTQ5",205,0)
 S ID=$P($G(^DPT(ORQPIEN,.36)),U,4)               ; Gets short ID.
"RTN","ORQPTQ5",206,0)
 I '$L(ID) D                                      ; - or -
"RTN","ORQPTQ5",207,0)
 .S ID=$E($P($G(^DPT(ORQPIEN,0)),U,9),6,9)        ; Last 4 of SSN
"RTN","ORQPTQ5",208,0)
 ;
"RTN","ORQPTQ5",209,0)
 Q "("_$E(ORQPNM)_ID_")"
"RTN","ORQPTQ5",210,0)
 ;
"RTN","ORQQAL")
0^67^B22690568
"RTN","ORQQAL",1,0)
ORQQAL ; slc/CLA,JFR - Functions which return patient allergy data ;9/18/97 [ 04/02/97  3:43 PM ]
"RTN","ORQQAL",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**9,85,162,190**;Dec 17, 1997
"RTN","ORQQAL",3,0)
LIST(ORAY,ORPT) ; RETURN PATIENT'S ALLERGY/ADVERSE REACTION INFO:
"RTN","ORQQAL",4,0)
 ; null:no allergy assessment, 0:no known allergies, 1:pt has allergies
"RTN","ORQQAL",5,0)
 ; if 1 also get: allergen/reactant^reaction/symptom^severity^allergy ien
"RTN","ORQQAL",6,0)
 N I,J,K
"RTN","ORQQAL",7,0)
 S I=1,J=0,K=0
"RTN","ORQQAL",8,0)
 D EN1^GMRAOR1(ORPT,"GMRARXN")
"RTN","ORQQAL",9,0)
 I $G(GMRARXN)="" S ORAY(I)="^No Allergy Assessment"
"RTN","ORQQAL",10,0)
 I $G(GMRARXN)=0 S ORAY(I)="^No Known Allergies"
"RTN","ORQQAL",11,0)
 I $G(GMRARXN)=1 F  S J=$O(GMRARXN(J)) Q:J=""  S ORAY(I)=$P(GMRARXN(J),"^",3)_"^"_$P(GMRARXN(J),"^")_"^"_$P(GMRARXN(J),"^",2) D SIGNS S I=I+1
"RTN","ORQQAL",12,0)
 S:'$D(ORAY(1)) ORAY(1)="^No allergies found."
"RTN","ORQQAL",13,0)
 K GMRARXN
"RTN","ORQQAL",14,0)
 Q
"RTN","ORQQAL",15,0)
SIGNS S K=0,N=0 F  S K=$O(GMRARXN(J,"S",K)) Q:K'>0  D
"RTN","ORQQAL",16,0)
 .I N=0 S ORAY(I)=ORAY(I)_"^"_$P(GMRARXN(J,"S",K),";")
"RTN","ORQQAL",17,0)
 .E  S ORAY(I)=ORAY(I)_";"_$P(GMRARXN(J,"S",K),";")
"RTN","ORQQAL",18,0)
 .S N=N+1
"RTN","ORQQAL",19,0)
 Q
"RTN","ORQQAL",20,0)
LRPT(ORAY,ORPT) ; RETURN PT'S ALLERGY/ADVERSE REACTION INFO IN REPORT FORMAT:
"RTN","ORQQAL",21,0)
 ; null:no allergy assessment, 0:no known allergies, 1:pt has allergies
"RTN","ORQQAL",22,0)
 ; if 1 also get: allergen/reactant^reaction/symptom^severity^allergy ien
"RTN","ORQQAL",23,0)
 N I,J,K,SEVER,CR
"RTN","ORQQAL",24,0)
 S CR=$CHAR(13)
"RTN","ORQQAL",25,0)
 S I=1,J=0,K=0,SEVER=""
"RTN","ORQQAL",26,0)
 D EN1^GMRAOR1(ORPT,"GMRARXN")
"RTN","ORQQAL",27,0)
 I $G(GMRARXN)="" S ORAY(I)="No Allergy Assessment"
"RTN","ORQQAL",28,0)
 I $G(GMRARXN)=0 S ORAY(I)="No Known Allergies"
"RTN","ORQQAL",29,0)
 I $G(GMRARXN)=1 F  S J=$O(GMRARXN(J)) Q:J=""  D
"RTN","ORQQAL",30,0)
 .S SEVER=$P(GMRARXN(J),U,2)
"RTN","ORQQAL",31,0)
 .S ORAY(I)=$P(GMRARXN(J),U)_"     [Severity: "_$S($L($G(SEVER)):SEVER,1:"UNKNOWN")_"]",I=I+1
"RTN","ORQQAL",32,0)
 .S K=0,N=0 F  S K=$O(GMRARXN(J,"S",K)) Q:K'>0  D
"RTN","ORQQAL",33,0)
 ..I N=0 S ORAY(I)="    Signs/symptoms: "_$P(GMRARXN(J,"S",K),";")
"RTN","ORQQAL",34,0)
 ..E     S ORAY(I)="                    "_$P(GMRARXN(J,"S",K),";")
"RTN","ORQQAL",35,0)
 ..S N=N+1,I=I+1
"RTN","ORQQAL",36,0)
 .S ORAY(I)=" ",I=I+1
"RTN","ORQQAL",37,0)
 S:'$D(ORAY(1)) ORAY(1)="No allergies found."
"RTN","ORQQAL",38,0)
 K GMRARXN
"RTN","ORQQAL",39,0)
 Q
"RTN","ORQQAL",40,0)
RXN(ORAY,ORPT,SRC,NDF,PSDRUG) ; RETURN TRUE OR FALSE IF PATIENT IS ALLERGIC TO AGENT
"RTN","ORQQAL",41,0)
 ; SRC: ALLERGEN SOURCE (CM=CONTRAST MEDIA, DR=DRUG)
"RTN","ORQQAL",42,0)
 ; NDF: IF SRC=DR, NDF=Nat'l Drug File ien ELSE NDF=""
"RTN","ORQQAL",43,0)
 ; PSDRUG:IF SRC=DR, PSDRUG=(local) Drug file ien ELSE PSDRUG=""
"RTN","ORQQAL",44,0)
 S ORAY=$$ORCHK^GMRAOR(ORPT,SRC,NDF)
"RTN","ORQQAL",45,0)
 I SRC="DR",ORAY=1 D  ;drug ingredient allergy found
"RTN","ORQQAL",46,0)
 .S I=1,J=0 F  S J=$O(GMRAING(J)) Q:J=""  D
"RTN","ORQQAL",47,0)
 ..I I=1 S ORAY=ORAY_U_GMRAING(J)
"RTN","ORQQAL",48,0)
 ..E  S ORAY=ORAY_";"_GMRAING(J)
"RTN","ORQQAL",49,0)
 ..S I=I+1
"RTN","ORQQAL",50,0)
 I SRC="DR",ORAY=2 D  ;drug class allergy found
"RTN","ORQQAL",51,0)
 .S CL="",I=1,J=0 F  S J=$O(GMRADRCL(J)) Q:J=""  D
"RTN","ORQQAL",52,0)
 ..; per test sites 3/17/04 - no oc for pt allergy to entire HERBS class:
"RTN","ORQQAL",53,0)
 ..Q:$P(GMRADRCL(J),U)="HA000"
"RTN","ORQQAL",54,0)
 ..I I=1 S ORAY=ORAY_U_$P(GMRADRCL(J),U,2)
"RTN","ORQQAL",55,0)
 ..E  S CL=$P(GMRADRCL(J),U,2) I ORAY'[CL S ORAY=ORAY_";"_CL
"RTN","ORQQAL",56,0)
 ..S I=I+1
"RTN","ORQQAL",57,0)
 I SRC="DR",(+$G(ORAY)<1) D MEDCLASS(.ORAY,ORPT,PSDRUG)
"RTN","ORQQAL",58,0)
 K I,J,GMRADRCL,GMRAING,CL
"RTN","ORQQAL",59,0)
 Q
"RTN","ORQQAL",60,0)
MEDCLASS(ORAY,DFN,PSDRUG) ;check for allergens with medications in same VA drug class
"RTN","ORQQAL",61,0)
 N ORVACLS,ALLR,K,CL
"RTN","ORQQAL",62,0)
 Q:+$G(PSDRUG)<1
"RTN","ORQQAL",63,0)
 S ORVACLS=$P(^PSDRUG(PSDRUG,0),U,2)
"RTN","ORQQAL",64,0)
 Q:$L(ORVACLS)<4
"RTN","ORQQAL",65,0)
 Q:$G(ORVACLS)="HA000"  ;don't process herbal drug class for order checks
"RTN","ORQQAL",66,0)
 S CL=$S($E(ORVACLS,1,4)="CN10":5,1:4) ;look at 5 chars if ANALGESICS
"RTN","ORQQAL",67,0)
 S GMRA="0^0^001",ALLR=""
"RTN","ORQQAL",68,0)
 D EN1^GMRADPT F  S ALLR=$O(GMRAL(ALLR)) Q:'ALLR!(+ORAY=2)  D
"RTN","ORQQAL",69,0)
 .K GMRACT D EN1^GMRAOR2(ALLR,"GMRACT") I $D(GMRACT("V")) D
"RTN","ORQQAL",70,0)
 ..S K=0 F  S K=$O(GMRACT("V",K)) Q:K'>0!(+ORAY=2)  D
"RTN","ORQQAL",71,0)
 ...I $E($P(GMRACT("V",K),U),1,CL)=$E(ORVACLS,1,CL) D
"RTN","ORQQAL",72,0)
 ....S ORAY="2"_U_$P(GMRACT("V",K),U,2)
"RTN","ORQQAL",73,0)
 K GMRA,GMRAL,GMRACT
"RTN","ORQQAL",74,0)
 Q
"RTN","ORQQAL",75,0)
DETAIL(ORAY,DFN,ALLR,ID) ; RETURN DETAILED ALLERGY INFO FOR SPECIFIED ALLERGIC REACTION:
"RTN","ORQQAL",76,0)
 D EN1^GMRAOR2(ALLR,"GMRACT")
"RTN","ORQQAL",77,0)
 N CR,OX,OH S CR=$CHAR(13),I=1
"RTN","ORQQAL",78,0)
 S ORAY(I)="    Causative agent: "_$P(GMRACT,U),I=I+1
"RTN","ORQQAL",79,0)
 S ORAY(I)=" ",I=I+1
"RTN","ORQQAL",80,0)
 I $D(GMRACT("S",1)) D SYMP
"RTN","ORQQAL",81,0)
 I $D(GMRACT("V",1)) D CLAS
"RTN","ORQQAL",82,0)
 S ORAY(I)="         Originated: "_$P(GMRACT,U,2)_"  "_$P(GMRACT,U,3),I=I+1
"RTN","ORQQAL",83,0)
 I $D(GMRACT("O",1)) D OBS
"RTN","ORQQAL",84,0)
 S ORAY(I)="           Verified: "_$S($P(GMRACT,U,4)="VERIFIED":"Yes",1:"No"),I=I+1
"RTN","ORQQAL",85,0)
 S ORAY(I)="Observed/Historical: "_$S($P(GMRACT,U,5)="OBSERVED":"Observed",$P(GMRACT,U,5)="HISTORICAL":"Historical",1:""),I=I+1
"RTN","ORQQAL",86,0)
 I $D(GMRACT("C",1)) D COM
"RTN","ORQQAL",87,0)
 K GMRACT
"RTN","ORQQAL",88,0)
 Q
"RTN","ORQQAL",89,0)
SYMP S K=0,N=0 F  S K=$O(GMRACT("S",K)) Q:K'>0  D
"RTN","ORQQAL",90,0)
 .I N=0 S ORAY(I)="     Signs/symptoms: "_GMRACT("S",K),I=I+1
"RTN","ORQQAL",91,0)
 .E  S ORAY(I)="                     "_GMRACT("S",K),I=I+1
"RTN","ORQQAL",92,0)
 .S N=N+1
"RTN","ORQQAL",93,0)
 S ORAY(I)=" ",I=I+1
"RTN","ORQQAL",94,0)
 K N,K
"RTN","ORQQAL",95,0)
 Q
"RTN","ORQQAL",96,0)
CLAS S K=0,N=0 F  S K=$O(GMRACT("V",K)) Q:K'>0  D
"RTN","ORQQAL",97,0)
 .I N=0 S ORAY(I)="       Drug Classes: "_$P(GMRACT("V",K),U,2),I=I+1
"RTN","ORQQAL",98,0)
 .E  S ORAY(I)="                     "_$P(GMRACT("V",K),U,2),I=I+1
"RTN","ORQQAL",99,0)
 .S N=N+1
"RTN","ORQQAL",100,0)
 S ORAY(I)=" ",I=I+1
"RTN","ORQQAL",101,0)
 K N,K
"RTN","ORQQAL",102,0)
 Q
"RTN","ORQQAL",103,0)
OBS S K=0,N=0 F  S K=$O(GMRACT("O",K)) Q:K'>0  D
"RTN","ORQQAL",104,0)
 .I N=0 D
"RTN","ORQQAL",105,0)
 ..S Y=$P(GMRACT("O",K),U) D DD^%DT
"RTN","ORQQAL",106,0)
 ..S ORAY(I)=" Obs dates/severity: "_Y_" "_$P(GMRACT("O",K),U,2),I=I+1
"RTN","ORQQAL",107,0)
 .E  D
"RTN","ORQQAL",108,0)
 ..S Y=$P(GMRACT("O",K),U) D DD^%DT
"RTN","ORQQAL",109,0)
 ..S ORAY(I)="                     "_Y_" "_$P(GMRACT("O",K),U,2),I=I+1
"RTN","ORQQAL",110,0)
 .S N=N+1
"RTN","ORQQAL",111,0)
 S ORAY(I)=" ",I=I+1
"RTN","ORQQAL",112,0)
 K N,K,Y
"RTN","ORQQAL",113,0)
 Q
"RTN","ORQQAL",114,0)
COM S K=0,N=0,ORAY(I)=" ",I=I+1
"RTN","ORQQAL",115,0)
 F  S K=$O(GMRACT("C",K)) Q:K'>0  D
"RTN","ORQQAL",116,0)
 .I N=0 S ORAY(I)="Comments:",I=I+1
"RTN","ORQQAL",117,0)
 .S Y=$P(GMRACT("C",K),U) D DD^%DT
"RTN","ORQQAL",118,0)
 .S ORAY(I)="   "_Y_" by "_$P(GMRACT("C",K),U,2),I=I+1
"RTN","ORQQAL",119,0)
 .I $D(GMRACT("C",K,1,0)) S L=0 F  S L=$O(GMRACT("C",K,L)) Q:L'>0  D
"RTN","ORQQAL",120,0)
 ..S ORAY(I)=GMRACT("C",K,L,0),I=I+1
"RTN","ORQQAL",121,0)
 .S N=N+1
"RTN","ORQQAL",122,0)
 S ORAY(I)=" ",I=I+1
"RTN","ORQQAL",123,0)
 K N,K,L,Y
"RTN","ORQQAL",124,0)
 Q
"RTN","ORQQPX")
0^53^B57398301
"RTN","ORQQPX",1,0)
ORQQPX ; SLC/JM - PCE and Reminder routines ;9/3/2003 [1/13/04 4:53pm]
"RTN","ORQQPX",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,184,187,190**;Dec 17, 1997
"RTN","ORQQPX",3,0)
 Q
"RTN","ORQQPX",4,0)
IMMLIST(ORY,ORPT) ;return pt's immunization list:
"RTN","ORQQPX",5,0)
 ;id^name^date/time^reaction^inverse d/t
"RTN","ORQQPX",6,0)
 I $L($T(IMMUN^PXRHS03))<1 S ORY(1)="^Immunizations not available." Q
"RTN","ORQQPX",7,0)
 K ^TMP("PXI",$J)
"RTN","ORQQPX",8,0)
 D IMMUN^PXRHS03(ORPT)
"RTN","ORQQPX",9,0)
 N ORI,IMM,IVDT,IEN,X
"RTN","ORQQPX",10,0)
 S ORI=0,IMM="",IVDT="",IEN=0
"RTN","ORQQPX",11,0)
 F  S IMM=$O(^TMP("PXI",$J,IMM)) Q:IMM=""  D
"RTN","ORQQPX",12,0)
 .F  S IVDT=$O(^TMP("PXI",$J,IMM,IVDT)) Q:IVDT=""  D
"RTN","ORQQPX",13,0)
 ..F  S IEN=$O(^TMP("PXI",$J,IMM,IVDT,IEN)) Q:IEN<1  D
"RTN","ORQQPX",14,0)
 ...S ORI=ORI+1,X=$G(^TMP("PXI",$J,IMM,IVDT,IEN,0)) Q:'$L(X)
"RTN","ORQQPX",15,0)
 ...S ORY(ORI)=IEN_U_IMM_U_$P(X,U,3)
"RTN","ORQQPX",16,0)
 ...I $P(X,U,7)=1 S ORY(ORI)=ORY(ORI)_U_$P(X,U,6)_U_IVDT
"RTN","ORQQPX",17,0)
 ...E  S ORY(ORI)=ORY(ORI)_U_U_IVDT
"RTN","ORQQPX",18,0)
 S:+$G(ORY(1))<1 ORY(1)="^No immunizations found.^2900101^^9999999"
"RTN","ORQQPX",19,0)
 K ^TMP("PXI",$J)
"RTN","ORQQPX",20,0)
 Q
"RTN","ORQQPX",21,0)
DETAIL(ORY,IMM) ; return detailed information for an immunization
"RTN","ORQQPX",22,0)
 S ORY(1)="Detailed information on immunizations is not available."
"RTN","ORQQPX",23,0)
 Q
"RTN","ORQQPX",24,0)
REMIND(ORY,ORPT) ;return pt's currently due PCE clinical reminders
"RTN","ORQQPX",25,0)
 ; in the format file 811.9 ien^reminder print name^date due^last occur.
"RTN","ORQQPX",26,0)
 N ORTMPLST,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT,ORLOC
"RTN","ORQQPX",27,0)
 S ORJ=0
"RTN","ORQQPX",28,0)
 ;
"RTN","ORQQPX",29,0)
 ;get patient's location flag (INPATIENT ONLY - outpt locations cannot be
"RTN","ORQQPX",30,0)
 ;reliably determined, and many simultaneous outpt locations can occur):
"RTN","ORQQPX",31,0)
 I +$G(ORPT)>0 D
"RTN","ORQQPX",32,0)
 .N DFN S DFN=ORPT,VA200="" D OERR^VADPT
"RTN","ORQQPX",33,0)
 .I +$G(VAIN(4))>0 S ORLOC=+$G(^DIC(42,+$G(VAIN(4)),44))
"RTN","ORQQPX",34,0)
 .K VA200,VAIN
"RTN","ORQQPX",35,0)
 ;
"RTN","ORQQPX",36,0)
 D REMLIST(.ORTMPLST,$G(ORLOC))
"RTN","ORQQPX",37,0)
 ;D GETLST^XPAR(.ORTMPLST,"USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORQQPX SEARCH ITEMS","Q",.ORERR)
"RTN","ORQQPX",38,0)
 ;I ORERR>0 S ORY(1)=U_"Error: "_$P(ORERR,U,2) Q
"RTN","ORQQPX",39,0)
 S ORI=0 F  S ORI=$O(ORTMPLST(ORI)) Q:'ORI  D
"RTN","ORQQPX",40,0)
 .S ORIEN=$P(ORTMPLST(ORI),U,2)
"RTN","ORQQPX",41,0)
 .K ^TMP("PXRHM",$J)
"RTN","ORQQPX",42,0)
 .D MAIN^PXRM(ORPT,ORIEN,0)
"RTN","ORQQPX",43,0)
 .S ORTXT="",ORTXT=$O(^TMP("PXRHM",$J,ORIEN,ORTXT)) Q:ORTXT=""  D
"RTN","ORQQPX",44,0)
 ..S ORX=^TMP("PXRHM",$J,ORIEN,ORTXT)
"RTN","ORQQPX",45,0)
 ..S ORDUEDT=$P(ORX,U,2),ORLASTDT=$P(ORX,U,3)
"RTN","ORQQPX",46,0)
 ..S ORLASTDT=$S(+$G(ORLASTDT)>0:ORLASTDT,1:"")  ;null if not a date
"RTN","ORQQPX",47,0)
 ..S ORJ=ORJ+1
"RTN","ORQQPX",48,0)
 ..S ORY(ORJ)=ORIEN_U_ORTXT_U_ORDUEDT_U_ORLASTDT
"RTN","ORQQPX",49,0)
 .K ^TMP("PXRHM",$J)
"RTN","ORQQPX",50,0)
 Q
"RTN","ORQQPX",51,0)
REMDET(ORY,ORPT,ORIEN) ;return detail for a pt's clinical reminder
"RTN","ORQQPX",52,0)
 ; ORY - return array
"RTN","ORQQPX",53,0)
 ; ORPT - patient DFN
"RTN","ORQQPX",54,0)
 ; ORIEN - clinical reminder (811.9 ien)
"RTN","ORQQPX",55,0)
 K ^TMP("PXRHM",$J)
"RTN","ORQQPX",56,0)
 D MAIN^PXRM(ORPT,ORIEN,5)     ; 5 returns all reminder info
"RTN","ORQQPX",57,0)
 N CR,I,J,ORTXT S I=1
"RTN","ORQQPX",58,0)
 S ORTXT="",ORTXT=$O(^TMP("PXRHM",$J,ORIEN,ORTXT)) Q:ORTXT=""  D
"RTN","ORQQPX",59,0)
 .S J=0 F  S J=$O(^TMP("PXRHM",$J,ORIEN,ORTXT,"TXT",J)) Q:J=""  D
"RTN","ORQQPX",60,0)
 ..S ORY(I)=^TMP("PXRHM",$J,ORIEN,ORTXT,"TXT",J),I=I+1
"RTN","ORQQPX",61,0)
 K ^TMP("PXRHM",$J)
"RTN","ORQQPX",62,0)
 Q
"RTN","ORQQPX",63,0)
NEWACTIV(ORY) ;Return true if Interactive Reminders are active
"RTN","ORQQPX",64,0)
 S ORY=0
"RTN","ORQQPX",65,0)
 I $T(APPL^PXRMRPCA)'="",+$G(DUZ) D
"RTN","ORQQPX",66,0)
 . N SRV
"RTN","ORQQPX",67,0)
 . S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORQQPX",68,0)
 . S ORY=$$GET^XPAR(DUZ_";VA(200,^SRV.`"_+$G(SRV)_"^DIV^SYS","PXRM GUI REMINDERS ACTIVE",1,"Q")
"RTN","ORQQPX",69,0)
 . I +ORY S ORY=1
"RTN","ORQQPX",70,0)
 . E  S ORY=0
"RTN","ORQQPX",71,0)
 Q
"RTN","ORQQPX",72,0)
HISTLOC(LST) ;Returns a list of historical locations
"RTN","ORQQPX",73,0)
 N IDX,PTR,LINE,NAME
"RTN","ORQQPX",74,0)
 K ^TMP("OR",$J,"LOC")
"RTN","ORQQPX",75,0)
 S LST=$NA(^TMP("OR",$J,"LOC"))
"RTN","ORQQPX",76,0)
 S (LINE,IDX)=0
"RTN","ORQQPX",77,0)
 F  S IDX=$O(^AUTTLOC(IDX)) Q:'IDX  D
"RTN","ORQQPX",78,0)
 .S PTR=+$G(^AUTTLOC(IDX,0))
"RTN","ORQQPX",79,0)
 .I +PTR D
"RTN","ORQQPX",80,0)
 ..S NAME=$P($G(^DIC(4,PTR,0)),U)
"RTN","ORQQPX",81,0)
 ..I NAME'="" D
"RTN","ORQQPX",82,0)
 ...S LINE=LINE+1
"RTN","ORQQPX",83,0)
 ...S ^TMP("OR",$J,"LOC",LINE)=PTR_U_NAME
"RTN","ORQQPX",84,0)
 Q
"RTN","ORQQPX",85,0)
GETFLDRS(ORFLDRS) ;Return Visible Reminder Folders
"RTN","ORQQPX",86,0)
 ; Codes: D=Due, A=Applicable, N=Not Applicable, E=Evaluated, O=Other
"RTN","ORQQPX",87,0)
 N SRV,ORERR,ORTMP
"RTN","ORQQPX",88,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORQQPX",89,0)
 D GETLST^XPAR(.ORTMP,"USR^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORQQPX REMINDER FOLDERS","Q",.ORERR)
"RTN","ORQQPX",90,0)
 I +ORTMP S ORFLDRS=$P($G(ORTMP(1)),U,2)
"RTN","ORQQPX",91,0)
 E  S ORFLDRS="DAO"
"RTN","ORQQPX",92,0)
 Q
"RTN","ORQQPX",93,0)
SETFLDRS(ORY,ORFLDRS) ;Sets Visible Reminder Folders for the current user
"RTN","ORQQPX",94,0)
 N ORERR
"RTN","ORQQPX",95,0)
 D EN^XPAR(DUZ_";VA(200,","ORQQPX REMINDER FOLDERS",1,ORFLDRS,.ORERR)
"RTN","ORQQPX",96,0)
 S ORY=1
"RTN","ORQQPX",97,0)
 Q
"RTN","ORQQPX",98,0)
GETDEFOL(ORDEFLOC) ;Return Default Outside Locations
"RTN","ORQQPX",99,0)
 N SRV,ORERR
"RTN","ORQQPX",100,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORQQPX",101,0)
 D GETLST^XPAR(.ORDEFLOC,"USR^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORQQPX DEFAULT LOCATIONS","Q",.ORERR)
"RTN","ORQQPX",102,0)
 Q
"RTN","ORQQPX",103,0)
INSCURS(ORY) ; Returns status of ORQQPX REMINDER TEXT AT CURSOR
"RTN","ORQQPX",104,0)
 N SRV,ORERR,ORTMP
"RTN","ORQQPX",105,0)
 S ORY=0,SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORQQPX",106,0)
 D GETLST^XPAR(.ORTMP,"USR^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORQQPX REMINDER TEXT AT CURSOR","Q",.ORERR)
"RTN","ORQQPX",107,0)
 I +ORTMP S ORY=$P($G(ORTMP(1)),U,2)
"RTN","ORQQPX",108,0)
 Q
"RTN","ORQQPX",109,0)
NEWCVOK(ORY) ; Returns status of 
"RTN","ORQQPX",110,0)
 N SRV,ORERR,ORTMP
"RTN","ORQQPX",111,0)
 S ORY=0,SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORQQPX",112,0)
 D GETLST^XPAR(.ORTMP,"USR^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORQQPX NEW REMINDER PARAMS","Q",.ORERR)
"RTN","ORQQPX",113,0)
 I +ORTMP S ORY=$P($G(ORTMP(1)),U,2)
"RTN","ORQQPX",114,0)
 Q
"RTN","ORQQPX",115,0)
ADDNAME(ORX) ; Add Reminder or Category Name as 3rd piece
"RTN","ORQQPX",116,0)
 N CAT,IEN
"RTN","ORQQPX",117,0)
 S CAT=$E($P(ORX,U,2),2)
"RTN","ORQQPX",118,0)
 S IEN=$E($P(ORX,U,2),3,99)
"RTN","ORQQPX",119,0)
 I +IEN D
"RTN","ORQQPX",120,0)
 .I CAT="R" S $P(ORX,U,3)=$P($G(^PXD(811.9,IEN,0)),U,3)
"RTN","ORQQPX",121,0)
 .I CAT="C" S $P(ORX,U,3)=$P($G(^PXRMD(811.7,IEN,0)),U)
"RTN","ORQQPX",122,0)
 Q ORX
"RTN","ORQQPX",123,0)
REMACCUM(ORY,LVL,TYP,SORT,CLASS) ; Accumulates ORTMP into ORY
"RTN","ORQQPX",124,0)
 ; Format of entries in ORQQPX COVER SHEET REMINDERS:
"RTN","ORQQPX",125,0)
 ;   L:Lock;R:Remove;N:Normal / C:Category;R:Reminder / Cat or Rem IEN
"RTN","ORQQPX",126,0)
 N IDX,I,J,K,M,FOUND,ORERR,ORTMP,FLAG,IEN
"RTN","ORQQPX",127,0)
 N FFLAG,FIEN,OUT,P2,ADD,DOADD,CODE
"RTN","ORQQPX",128,0)
 I LVL="CLASS" D  I 1
"RTN","ORQQPX",129,0)
 .N ORLST,ORCLS,ORCLSPRM,ORWP
"RTN","ORQQPX",130,0)
 .S ORCLSPRM="ORQQPX COVER SHEET REM CLASSES"
"RTN","ORQQPX",131,0)
 .D GETLST^XPAR(.ORLST,"SYS",ORCLSPRM,"Q",.ORERR)
"RTN","ORQQPX",132,0)
 .S I=0,M=0,CLASS=$G(CLASS)
"RTN","ORQQPX",133,0)
 .F  S I=$O(ORLST(I)) Q:'I  D
"RTN","ORQQPX",134,0)
 ..S ORCLS=$P(ORLST(I),U,1)
"RTN","ORQQPX",135,0)
 ..I +CLASS S ADD=(ORCLS=+CLASS) I 1
"RTN","ORQQPX",136,0)
 ..E  S ADD=$$ISA^USRLM(DUZ,ORCLS,.ORERR)
"RTN","ORQQPX",137,0)
 ..I +ADD D
"RTN","ORQQPX",138,0)
 ...D GETWP^XPAR(.ORWP,"SYS",ORCLSPRM,ORCLS,.ORERR)
"RTN","ORQQPX",139,0)
 ...S K=0
"RTN","ORQQPX",140,0)
 ...F  S K=$O(ORWP(K)) Q:'K  D
"RTN","ORQQPX",141,0)
 ....S M=M+1
"RTN","ORQQPX",142,0)
 ....S J=$P(ORWP(K,0),";",1)
"RTN","ORQQPX",143,0)
 ....S ORTMP(M)=J_U_$P(ORWP(K,0),";",2)
"RTN","ORQQPX",144,0)
 E  D GETLST^XPAR(.ORTMP,LVL,"ORQQPX COVER SHEET REMINDERS",TYP,.ORERR)
"RTN","ORQQPX",145,0)
 S I=0,IDX=$O(ORY(999999),-1)+1,ADD=(SORT="")
"RTN","ORQQPX",146,0)
 F  S I=$O(ORTMP(I)) Q:'I  D
"RTN","ORQQPX",147,0)
 .S (FOUND,J)=0,P2=$P(ORTMP(I),U,2)
"RTN","ORQQPX",148,0)
 .S FLAG=$E(P2),IEN=$E(P2,2,999)
"RTN","ORQQPX",149,0)
 .I ADD S DOADD=1
"RTN","ORQQPX",150,0)
 .E  D
"RTN","ORQQPX",151,0)
 ..S DOADD=0
"RTN","ORQQPX",152,0)
 ..F  S J=$O(ORY(J)) Q:'J  D  Q:FOUND
"RTN","ORQQPX",153,0)
 ...S P2=$P(ORY(J),U,2)
"RTN","ORQQPX",154,0)
 ...S FIEN=$E(P2,2,999)
"RTN","ORQQPX",155,0)
 ...I FIEN=IEN S FOUND=J,FFLAG=$E(P2)
"RTN","ORQQPX",156,0)
 ..I FOUND D  I 1
"RTN","ORQQPX",157,0)
 ...I FLAG="R",FFLAG'="L" K ORY(FOUND)
"RTN","ORQQPX",158,0)
 ...I FLAG'=FFLAG,(FLAG_FFLAG)["L" S $E(P2)="L",$P(ORY(FOUND),U,2)=P2
"RTN","ORQQPX",159,0)
 ..E  I (FLAG'="R") S DOADD=1
"RTN","ORQQPX",160,0)
 .I DOADD D
"RTN","ORQQPX",161,0)
 ..S OUT(IDX)=ORTMP(I)
"RTN","ORQQPX",162,0)
 ..S $P(OUT(IDX),U)=$P(OUT(IDX),U)_SORT
"RTN","ORQQPX",163,0)
 ..I SORT="" S OUT(IDX)=$$ADDNAME(OUT(IDX))
"RTN","ORQQPX",164,0)
 ..S IDX=IDX+1
"RTN","ORQQPX",165,0)
 M ORY=OUT
"RTN","ORQQPX",166,0)
 Q
"RTN","ORQQPX",167,0)
ADDREM(ORY,IDX,IEN) ; Add Reminder to ORY list
"RTN","ORQQPX",168,0)
 I $D(ORY("B",IEN)) Q               ; See if it's in the list
"RTN","ORQQPX",169,0)
 I '$D(^PXD(811.9,IEN)) Q           ; Check if Exists
"RTN","ORQQPX",170,0)
 I $P($G(^PXD(811.9,IEN,0)),U,6)'="" Q  ; Check if Active
"RTN","ORQQPX",171,0)
 ;check to see if the reminder is assigned to CPRS
"RTN","ORQQPX",172,0)
 I $P($G(^PXD(811.9,IEN,100)),U,4)'["C",$P($G(^PXD(811.9,IEN,100)),U,4)'="*" Q
"RTN","ORQQPX",173,0)
 S ORY(IDX)=IDX_U_IEN
"RTN","ORQQPX",174,0)
 S ORY("B",IEN)=""
"RTN","ORQQPX",175,0)
 Q
"RTN","ORQQPX",176,0)
ADDCAT(ORY,IDX,IEN) ; Add Category Reminders to ORY list
"RTN","ORQQPX",177,0)
 N ORREM,I,IDX2,NREM
"RTN","ORQQPX",178,0)
 D CATREM^PXRMAPI0(IEN,.ORREM)
"RTN","ORQQPX",179,0)
 S I=0
"RTN","ORQQPX",180,0)
 F  S I=$O(ORREM(I)) Q:'I  D
"RTN","ORQQPX",181,0)
 . S IDX2="00000"_I
"RTN","ORQQPX",182,0)
 . S IDX2=$E(IDX2,$L(IDX2)-5,99)
"RTN","ORQQPX",183,0)
 . D ADDREM(.ORY,+(IDX_"."_IDX2),$P(ORREM(I),U,1))
"RTN","ORQQPX",184,0)
 Q
"RTN","ORQQPX",185,0)
REMLIST(ORY,LOC) ;Returns a list of all cover sheet reminders
"RTN","ORQQPX",186,0)
 N SRV,I,J,ORLST,CODE,IDX,IEN,NEWP
"RTN","ORQQPX",187,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORQQPX",188,0)
 D NEWCVOK(.NEWP)
"RTN","ORQQPX",189,0)
 I 'NEWP D GETLST^XPAR(.ORY,"USR^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORQQPX SEARCH ITEMS","Q",.ORERR) Q
"RTN","ORQQPX",190,0)
 D REMACCUM(.ORLST,"PKG","Q",1000)
"RTN","ORQQPX",191,0)
 D REMACCUM(.ORLST,"SYS","Q",2000)
"RTN","ORQQPX",192,0)
 D REMACCUM(.ORLST,"DIV","Q",3000)
"RTN","ORQQPX",193,0)
 I +SRV D REMACCUM(.ORLST,"SRV.`"_+$G(SRV),"Q",4000)
"RTN","ORQQPX",194,0)
 I +LOC D REMACCUM(.ORLST,"LOC.`"_+$G(LOC),"Q",5000)
"RTN","ORQQPX",195,0)
 D REMACCUM(.ORLST,"CLASS","Q",6000)
"RTN","ORQQPX",196,0)
 D REMACCUM(.ORLST,"USR","Q",7000)
"RTN","ORQQPX",197,0)
 S I=0
"RTN","ORQQPX",198,0)
 F  S I=$O(ORLST(I)) Q:'I  D
"RTN","ORQQPX",199,0)
 .S IDX=$P(ORLST(I),U,1)
"RTN","ORQQPX",200,0)
 .F  Q:'$D(ORY(IDX))  S IDX=IDX+1
"RTN","ORQQPX",201,0)
 .S CODE=$E($P(ORLST(I),U,2),2)
"RTN","ORQQPX",202,0)
 .S IEN=$E($P(ORLST(I),U,2),3,999)
"RTN","ORQQPX",203,0)
 .I CODE="R" D ADDREM(.ORY,IDX,IEN)
"RTN","ORQQPX",204,0)
 .I CODE="C" D ADDCAT(.ORY,IDX,IEN)
"RTN","ORQQPX",205,0)
 K ORY("B")
"RTN","ORQQPX",206,0)
 Q
"RTN","ORQQPX",207,0)
LVREMLST(ORY,LVL,CLASS) ;Returns cover sheet reminders at a specified level
"RTN","ORQQPX",208,0)
 D REMACCUM(.ORY,LVL,"Q","",$G(CLASS))
"RTN","ORQQPX",209,0)
 Q
"RTN","ORQQPX",210,0)
SAVELVL(ORY,LVL,CLASS,DATA) ;Save cover sheet reminders at a specified level
"RTN","ORQQPX",211,0)
 N ORERR,PARAM,I
"RTN","ORQQPX",212,0)
 I LVL="CLASS" D  I 1
"RTN","ORQQPX",213,0)
 .S PARAM="ORQQPX COVER SHEET REM CLASSES"
"RTN","ORQQPX",214,0)
 .S LVL="SYS"
"RTN","ORQQPX",215,0)
 .D DEL^XPAR(LVL,PARAM,"`"_CLASS,.ORERR)
"RTN","ORQQPX",216,0)
 .D EN^XPAR(LVL,PARAM,"`"_CLASS,.DATA,.ORERR)
"RTN","ORQQPX",217,0)
 E  D
"RTN","ORQQPX",218,0)
 .S PARAM="ORQQPX COVER SHEET REMINDERS"
"RTN","ORQQPX",219,0)
 .D NDEL^XPAR(LVL,PARAM,.ORERR)
"RTN","ORQQPX",220,0)
 .S I=0
"RTN","ORQQPX",221,0)
 .F  S I=$O(DATA(I)) Q:'I  D
"RTN","ORQQPX",222,0)
 ..D EN^XPAR(LVL,PARAM,$P(DATA(I),U,1),$P(DATA(I),U,2),.ORERR)
"RTN","ORQQPX",223,0)
 S ORY=1
"RTN","ORQQPX",224,0)
 Q
"RTN","ORQQPX",225,0)
GETLIST(ORY,ORLOC) ;Returns a list of all cover sheet reminders
"RTN","ORQQPX",226,0)
 N I
"RTN","ORQQPX",227,0)
 D REMLIST(.ORY,$G(ORLOC))
"RTN","ORQQPX",228,0)
 S I=0
"RTN","ORQQPX",229,0)
 F  S I=$O(ORY(I)) Q:'I  D
"RTN","ORQQPX",230,0)
 .S ORY(I)=$P(ORY(I),U,2)
"RTN","ORQQPX",231,0)
 Q
"RTN","ORQQPX",232,0)
EVALCOVR(ORY,ORPT,ORLOC) ; Evaluate Cover Sheet Reminders
"RTN","ORQQPX",233,0)
 N ORTMP
"RTN","ORQQPX",234,0)
 D GETLIST(.ORTMP,$G(ORLOC))
"RTN","ORQQPX",235,0)
 D ALIST^ORQQPXRM(.ORY,ORPT,.ORTMP)
"RTN","ORQQPX",236,0)
 Q
"RTN","ORQQPXRM")
0^60^B9875184
"RTN","ORQQPXRM",1,0)
ORQQPXRM ; SLC/PJH - Functions for reminder data ;4/15/2003 [2/4/04 10:24am]
"RTN","ORQQPXRM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,173,187,190**;Dec 17, 1997
"RTN","ORQQPXRM",3,0)
 ;
"RTN","ORQQPXRM",4,0)
 ;ORQQPXRM DIALOG ACTIVE
"RTN","ORQQPXRM",5,0)
ACTIVE(ORY,ORLIST) D ACTIVE^PXRMRPCC(.ORY,.ORLIST) Q  ; DBIA 3080
"RTN","ORQQPXRM",6,0)
 ;
"RTN","ORQQPXRM",7,0)
 ;ORQQPXRM REMINDER EVALUATION
"RTN","ORQQPXRM",8,0)
ALIST(ORY,ORPT,ORLIST) D ALIST^PXRMRPCA(.ORY,.ORPT,.ORLIST) Q  ; DBIA 3078
"RTN","ORQQPXRM",9,0)
 ;
"RTN","ORQQPXRM",10,0)
 ;ORQQPXRM REMINDERS APPLICABLE
"RTN","ORQQPXRM",11,0)
APPL(ORY,ORPT,ORLOC) D EVALCOVR^ORQQPX(.ORY,ORPT,ORLOC) Q
"RTN","ORQQPXRM",12,0)
 ;D APPL^PXRMRPCA(.ORY,ORPT,ORLOC) Q  ; DBIA 3078
"RTN","ORQQPXRM",13,0)
 ;
"RTN","ORQQPXRM",14,0)
 ;ORQQPXRM REMINDER CATEGORIES
"RTN","ORQQPXRM",15,0)
CATEGORY(ORY,ORPT,ORLOC) ;
"RTN","ORQQPXRM",16,0)
 D CATEGORY^PXRMRPCA(.ORY,ORPT,ORLOC) Q  ; DBIA 3078
"RTN","ORQQPXRM",17,0)
 ;
"RTN","ORQQPXRM",18,0)
 ;ORQQPXRM REMINDER DIALOG
"RTN","ORQQPXRM",19,0)
DIALOG(ORY,ORREM,DFN) ;
"RTN","ORQQPXRM",20,0)
 ; DBIA 3080
"RTN","ORQQPXRM",21,0)
 I $G(DFN)'="" D DIALOG^PXRMRPCC(.ORY,ORREM,DFN)
"RTN","ORQQPXRM",22,0)
 I $G(DFN)="" D DIALOG^PXRMRPCC(.ORY,ORREM)
"RTN","ORQQPXRM",23,0)
 Q
"RTN","ORQQPXRM",24,0)
 ;
"RTN","ORQQPXRM",25,0)
 ;ORQQPXRM EDUCATION SUBTOPICS
"RTN","ORQQPXRM",26,0)
EDS(ORY,OREDU) D EDS^PXRMRPCB(.ORY,OREDU) Q  ; DBIA 3079
"RTN","ORQQPXRM",27,0)
 ;
"RTN","ORQQPXRM",28,0)
 ;ORQQPXRM EDUCATION SUMMARY
"RTN","ORQQPXRM",29,0)
EDL(ORY,OREM) D EDL^PXRMRPCB(.ORY,OREM) Q  ; DBIA 3079
"RTN","ORQQPXRM",30,0)
 ;
"RTN","ORQQPXRM",31,0)
 ;ORQQPXRM EDUCATION TOPIC
"RTN","ORQQPXRM",32,0)
EDU(ORY,OREDU) D EDU^PXRMRPCB(.ORY,OREDU) Q  ; DBIA 3079
"RTN","ORQQPXRM",33,0)
 ;
"RTN","ORQQPXRM",34,0)
 ;ORQQPXRM PROGRESS NOTE HEADER
"RTN","ORQQPXRM",35,0)
HDR(ORY,ORLOC) D HDR^PXRMRPCC(.ORY,ORLOC) Q  ; DBIA 3080
"RTN","ORQQPXRM",36,0)
 ;
"RTN","ORQQPXRM",37,0)
 ;ORQQPXRM REMINDERS UNEVALUATED
"RTN","ORQQPXRM",38,0)
LIST(ORY,ORPT,ORLOC) D GETLIST^ORQQPX(.ORY,ORLOC) Q
"RTN","ORQQPXRM",39,0)
 ;D LIST^PXRMRPCA(.ORY,ORPT,ORLOC) Q  ; DBIA 3078
"RTN","ORQQPXRM",40,0)
 ;
"RTN","ORQQPXRM",41,0)
 ;ORQQPXRM MENTAL HEALTH
"RTN","ORQQPXRM",42,0)
MH(ORY,OTEST) D MH^PXRMRPCC(.ORY,OTEST) Q  ; DBIA 3080
"RTN","ORQQPXRM",43,0)
 ;
"RTN","ORQQPXRM",44,0)
 ;ORQQPXRM MENTAL HEALTH RESULTS
"RTN","ORQQPXRM",45,0)
MHR(ORY,RESULT,ORES) D MHR^PXRMRPCC(.ORY,RESULT,.ORES) Q  ; DBIA 3080
"RTN","ORQQPXRM",46,0)
 ;
"RTN","ORQQPXRM",47,0)
 ;ORQQPXRM MENTAL HEALTH SAVE
"RTN","ORQQPXRM",48,0)
MHS(ORY,ORES) D MHS^PXRMRPCC(.ORY,.ORES) Q  ; DBIA 3080
"RTN","ORQQPXRM",49,0)
 ;
"RTN","ORQQPXRM",50,0)
 ;ORQQPXRM MST UPDATE
"RTN","ORQQPXRM",51,0)
MST(ORY,ORPT,ORDATE,ORSTAT,ORPROV,ORFTYP,ORFIEN,ORRES) ;
"RTN","ORQQPXRM",52,0)
 D MST^PXRMRPCC(.ORY,ORPT,ORDATE,ORSTAT,ORPROV,ORFTYP,ORFIEN,ORRES) Q
"RTN","ORQQPXRM",53,0)
 ;
"RTN","ORQQPXRM",54,0)
 ;ORQQPXRM WOMEN HEALTH RESULT
"RTN","ORQQPXRM",55,0)
WH(ORY,ORRESULT) ;
"RTN","ORQQPXRM",56,0)
 D WH^PXRMRPCC(.ORY,.ORRESULT) Q
"RTN","ORQQPXRM",57,0)
 ;
"RTN","ORQQPXRM",58,0)
WHLETTER(ORY,ORIEN) ;
"RTN","ORQQPXRM",59,0)
 D LETTER^WVRPCNO1(.ORY,ORIEN) Q
"RTN","ORQQPXRM",60,0)
 ;
"RTN","ORQQPXRM",61,0)
WHREPORT(ORY,ORIEN) ;
"RTN","ORQQPXRM",62,0)
 D RESULTS^WVALERTF(.ORY,ORIEN) Q
"RTN","ORQQPXRM",63,0)
 ;
"RTN","ORQQPXRM",64,0)
 ;ORQQPXRM DIALOG PROMPTS
"RTN","ORQQPXRM",65,0)
PROMPT(ORY,ORDLG,ORDCUR,ORFTYP) ;
"RTN","ORQQPXRM",66,0)
 D PROMPT^PXRMRPCC(.ORY,ORDLG,ORDCUR,ORFTYP) Q  ; DBIA 3080
"RTN","ORQQPXRM",67,0)
 ;
"RTN","ORQQPXRM",68,0)
 ;ORQQPXRM REMINDER DETAIL
"RTN","ORQQPXRM",69,0)
REMDET(ORY,ORPT,ORIEN) D REMDET^PXRMRPCA(.ORY,ORPT,ORIEN) Q  ; DBIA 3078
"RTN","ORQQPXRM",70,0)
 ;
"RTN","ORQQPXRM",71,0)
 ;ORQQPXRM REMINDER INQUIRY
"RTN","ORQQPXRM",72,0)
RES(ORY,ORREM) D RES^PXRMRPCC(.ORY,ORREM) Q  ; DBIA 3080
"RTN","ORQQPXRM",73,0)
 ;
"RTN","ORQQPXRM",74,0)
 ;ORQQPXRM REMINDER WEB
"RTN","ORQQPXRM",75,0)
WEB(ORY,ORREM) D WEB^PXRMRPCA(.ORY,ORREM) Q  ; DBIA 3078
"RTN","ORQQPXRM",76,0)
 ;
"RTN","ORQQPXRM",77,0)
ACT(REM) ;ORQQPX SEARCH ITEMS - XPAR value screen for active reminders
"RTN","ORQQPXRM",78,0)
 ;Treat a null value as inactive
"RTN","ORQQPXRM",79,0)
 I 'REM Q 0
"RTN","ORQQPXRM",80,0)
 ;Treat a non-existen entry as inactive
"RTN","ORQQPXRM",81,0)
 I $G(^PXD(811.9,REM,0))="" Q 0
"RTN","ORQQPXRM",82,0)
 ;Check IF inactive flag is set
"RTN","ORQQPXRM",83,0)
 I ($T(INACTIVE^PXRM)'=""),$$INACTIVE^PXRM(REM) Q 0 ; DBIA 2182
"RTN","ORQQPXRM",84,0)
 ;Otherwise active
"RTN","ORQQPXRM",85,0)
 Q 1
"RTN","ORQQPXRM",86,0)
 ;
"RTN","ORQQPXRM",87,0)
REMVER(ORLIST) ;
"RTN","ORQQPXRM",88,0)
 S ORLIST=$$VERSION^XPDUTL("PXRM")
"RTN","ORQQPXRM",89,0)
 Q
"RTN","ORQQPXRM",90,0)
 ;
"RTN","ORQQPXRM",91,0)
GEC(ORRESULT,IEN,DFN,VISIT,NOTEIEN) ;
"RTN","ORQQPXRM",92,0)
 I $$VERSION^XPDUTL("PXRM")["2.0" D API^PXRMGECU(.ORRESULT,IEN,DFN,VISIT,1,NOTEIEN)
"RTN","ORQQPXRM",93,0)
 Q
"RTN","ORQQPXRM",94,0)
 ;
"RTN","ORQQPXRM",95,0)
GECF(RESULT,DFN,FIN) ;
"RTN","ORQQPXRM",96,0)
 I $$VERSION^XPDUTL("PXRM")["2.0" D FINISHED^PXRMGECU(DFN,FIN)
"RTN","ORQQPXRM",97,0)
 Q
"RTN","ORQQPXRM",98,0)
 ;
"RTN","ORQQPXRM",99,0)
GECP(RESULT,DFN) ;
"RTN","ORQQPXRM",100,0)
 I $$VERSION^XPDUTL("PXRM")["2.0",$G(DFN)'="" S RESULT=$$STATUS^PXRMGECU(DFN)
"RTN","ORQQPXRM",101,0)
 Q
"RTN","ORQQPXRM",102,0)
 ;
"RTN","ORSNAST1")
0^74^B26795016
"RTN","ORSNAST1",1,0)
ORSNAST1 ;SLC/RAF - continuation of nature/status search ;10/20/00  14:30
"RTN","ORSNAST1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**50,190**;Dec 17, 1997
"RTN","ORSNAST1",3,0)
 ;
"RTN","ORSNAST1",4,0)
EN ;
"RTN","ORSNAST1",5,0)
 S RPDT="""Report Date: "",$$FMTE^XLFDT($$NOW^XLFDT),!,""Sort Range From: "",$$FMTE^XLFDT(SDATE),"" TO: "",$$FMTE^XLFDT(EDATE)",STOP=0,PAGE=0
"RTN","ORSNAST1",6,0)
 I SORT=1 D NATURE^ORSNAST2 Q
"RTN","ORSNAST1",7,0)
STATUS ;goes thru the "AF" xref in 100 for order dates for a specific status
"RTN","ORSNAST1",8,0)
2 I SORT=2 D  I ('$D(^TMP("ORNS",$J)))&(FORMAT=1) W !,"No orders found." Q
"RTN","ORSNAST1",9,0)
 .D:('PAGE)&(FORMAT=1) HDR^ORS100
"RTN","ORSNAST1",10,0)
 .S DATE=SDATE F  S DATE=$O(^OR(100,"AF",DATE)) Q:'DATE!STOP  Q:DATE>EDATE  D
"RTN","ORSNAST1",11,0)
 ..S IEN=0 F  S IEN=$O(^OR(100,"AF",DATE,IEN)) Q:'IEN!STOP  I $D(^OR(100,IEN)) D
"RTN","ORSNAST1",12,0)
 ...S SUB=0 F  S SUB=$O(^OR(100,"AF",DATE,IEN,SUB)) Q:'SUB!STOP  D
"RTN","ORSNAST1",13,0)
 ....I $P($G(^OR(100,IEN,3)),U,3)=SEARCH D
"RTN","ORSNAST1",14,0)
 .....I $D(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,3),0)) S PROV=$$USER^ORS100(+$P(^OR(100,IEN,8,SUB,0),U,3))
"RTN","ORSNAST1",15,0)
 .....I $D(^VA(200,+$P(^OR(100,IEN,0),U,4),5)),$L($P(^(5),U)) S SER=$$SER^ORS100(+$P(^VA(200,+$P(^OR(100,IEN,0),U,4),5),U))
"RTN","ORSNAST1",16,0)
 .....E  S SER="MISSING from file 200"
"RTN","ORSNAST1",17,0)
 .....I $D(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,13))) S WHO=$$USER^ORS100(+$P(^OR(100,IEN,8,SUB,0),U,13))
"RTN","ORSNAST1",18,0)
 .....S DFN=+$P(^OR(100,IEN,0),U,2) Q:$P(^DPT(DFN,0),U,21)  D DEM^VADPT S SSN=VA("BID"),PNM=VADM(1)
"RTN","ORSNAST1",19,0)
 .....S STATUS=$S(+$P(^OR(100,IEN,8,SUB,0),U,15)'=SEARCH&(+$P(^(0),U,15)'=0):$$STAT^ORS100(+$P(^(0),U,15)),1:$$STAT^ORS100($P(^OR(100,IEN,3),U,3)))
"RTN","ORSNAST1",20,0)
 .....I $D(^OR(100,IEN,8,SUB,0)),$P(^(0),U) S WHEN=$$FMTE^XLFDT($P(^(0),U)) I $P(^(0),U,6) S SIGNED=$$FMTE^XLFDT($P(^(0),U,6))
"RTN","ORSNAST1",21,0)
 .....E  S SIGNED=""
"RTN","ORSNAST1",22,0)
 .....S ^TMP("ORNS",$J,WHO,PROV,IEN)=WHO_U_PROV_U_PNM_U_SSN_U_STATUS_U_IEN_U_WHEN_U_SIGNED
"RTN","ORSNAST1",23,0)
 .....S ^TMP("ORSERV",$J,SER,WHO,IEN)=SER_U_WHO_U_PROV_U_PNM_U_SSN_U_STATUS_U_IEN_U_WHEN_U_SIGNED
"RTN","ORSNAST1",24,0)
DETAILS .....;detailed output which includes the order text
"RTN","ORSNAST1",25,0)
 .....I FORMAT=1 D
"RTN","ORSNAST1",26,0)
 ......W !,"Order STATUS: ",STATUS,?34,"Order Action: ",$P(^OR(100,IEN,8,SUB,0),U,2),?52,"ORIFN(Order #): ",IEN D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST1",27,0)
 ......W !,"OBJECT OF ORDER(Patient name): ",$G(PNM),?63,"SSN: ",$G(SSN) D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST1",28,0)
 ......I $P(^ORD(100.98,$P(^OR(100,+IEN,0),U,11),0),U)="NON-VA MEDICATIONS" D
"RTN","ORSNAST1",29,0)
 .......W !,"DOCUMENTED BY: ",$P($G(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,3),0)),U),?53,"VEILED ORDER?: ",$S($P(^OR(100,IEN,3),U,8)=1:"YES",1:"NO") D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST1",30,0)
 ......E  W !,"ORDERED BY: ",$P($G(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,3),0)),U),?53,"VEILED ORDER?: ",$S($P(^OR(100,IEN,3),U,8)=1:"YES",1:"NO") D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST1",31,0)
 ......W !,"ENTERED BY: ",$P($G(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,13),0)),U)," ON ",$$FMTE^XLFDT($P(^OR(100,IEN,0),U,7)) D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST1",32,0)
 ......W !,"RELEASED BY: " I +$P(^OR(100,IEN,8,SUB,0),U,16) W $P($G(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,17),0)),U)," ON ",$$FMTE^XLFDT($P(^OR(100,IEN,8,SUB,0),U,16)) D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST1",33,0)
 ......W !,"SIGNED BY: " I +$P(^OR(100,IEN,8,SUB,0),U,6) W $P($G(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,5),0)),U)," ON ",$$FMTE^XLFDT($P(^OR(100,IEN,8,SUB,0),U,6)) D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST1",34,0)
 ......W !,"ORDER TEXT: " S ORIGVIEW=2 D TEXT^ORQ12(.TEXT,IEN_";"_SUB,(IOM-13)) S TEXTSUB="" F  S TEXTSUB=$O(TEXT(TEXTSUB)) Q:'+TEXTSUB!(TEXTSUB=4)!STOP  W:TEXTSUB'=1 ?12 W TEXT(TEXTSUB),! D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST1",35,0)
 ......I 'STOP I TEXTSUB=4 W !,"***There is more order text.  It is limited to 3 lines for this report***"
"RTN","ORSNAST1",36,0)
 ......K TEXT,TEXTSUB
"RTN","ORSNAST1",37,0)
 ......I 'STOP K DASH S $P(DASH,"-",IOM)="" W !,DASH
"RTN","ORSNAST1",38,0)
COLUMNS ;this section uses the TMP global for the columnar format
"RTN","ORSNAST1",39,0)
 I '$G(SERVICE)&(FORMAT=2) D
"RTN","ORSNAST1",40,0)
 .S HDR1="!,""Provider"",?25,""Patient"",?50,""SSN"",?56,""Status"",?75,""Order #"",?87,""Order Date"",?110,""Signed"""
"RTN","ORSNAST1",41,0)
 .S HDR="!,""Search for orders with a status of ""_SNAME"
"RTN","ORSNAST1",42,0)
 .D HDR^ORS100
"RTN","ORSNAST1",43,0)
 .I '$D(^TMP("ORNS",$J)) W !,"No orders found." Q
"RTN","ORSNAST1",44,0)
 .S WHO="" F  S WHO=$O(^TMP("ORNS",$J,WHO)) Q:WHO=""!STOP  W "Entered by: ",WHO,!  D  W !
"RTN","ORSNAST1",45,0)
 ..S PNM="" F  S PNM=$O(^TMP("ORNS",$J,WHO,PNM)) Q:PNM=""!STOP  D
"RTN","ORSNAST1",46,0)
 ...S IEN=0 F  S IEN=$O(^TMP("ORNS",$J,WHO,PNM,IEN)) Q:'IEN!STOP  D
"RTN","ORSNAST1",47,0)
 ....W $P(^(IEN),U,2),?25,$P(^(IEN),U,3),?50,$P(^(IEN),U,4),?56,$P(^(IEN),U,5),?75,$P(^(IEN),U,6),?87,$P(^(IEN),U,7),?110,$P(^(IEN),U,8),! D:$Y>(IOSL-4) HDR^ORS100
"RTN","ORSNAST1",48,0)
SERV I $G(SERVICE)&(FORMAT=2) D
"RTN","ORSNAST1",49,0)
 .S HDR1="!,""Provider"",?25,""Patient"",?50,""SSN"",?56,""Status"",?75,""Order #"",?87,""Order Date"",?110,""Signed"""
"RTN","ORSNAST1",50,0)
 .S HDR="!,""Search for orders with a status of ""_SNAME"
"RTN","ORSNAST1",51,0)
 .D HDR^ORS100
"RTN","ORSNAST1",52,0)
 .I '$D(^TMP("ORSERV",$J)) W !,"No orders found." Q
"RTN","ORSNAST1",53,0)
 .S REF=$S($D(LONER):"LONER(SER)",1:"^TMP(""ORSERV"",$J,SER)")
"RTN","ORSNAST1",54,0)
 .S SER="" F  S SER=$O(@REF) Q:SER=""!STOP  W "Service/Section: ",SER,! D
"RTN","ORSNAST1",55,0)
 ..I '$D(^TMP("ORSERV",$J,SER)) W "No orders found.",!! Q
"RTN","ORSNAST1",56,0)
 ..S WHO="" F  S WHO=$O(^TMP("ORSERV",$J,SER,WHO)) Q:WHO=""!STOP   W ?5,"Entered by: ",WHO,!  D  W !
"RTN","ORSNAST1",57,0)
 ...S IEN=0 F  S IEN=$O(^TMP("ORSERV",$J,SER,WHO,IEN)) Q:'IEN!STOP  D
"RTN","ORSNAST1",58,0)
 ....W $P(^(IEN),U,3),?25,$P(^(IEN),U,4),?50,$P(^(IEN),U,5),?56,$P(^(IEN),U,6),?75,$P(^(IEN),U,7),?87,$P(^(IEN),U,8),?110,$P(^(IEN),U,9),! D:$Y>(IOSL-4) HDR^ORS100
"RTN","ORSNAST1",59,0)
 ;
"RTN","ORSNAST1",60,0)
 K ^TMP("ORNS",$J),^TMP("ORSERV",$J)
"RTN","ORSNAST1",61,0)
 D ^%ZISC
"RTN","ORSNAST1",62,0)
 Q
"RTN","ORSNAST2")
0^75^B24780861
"RTN","ORSNAST2",1,0)
ORSNAST2 ;SLC/RAF - continuation of nature/status search ;10/20/00  14:32
"RTN","ORSNAST2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**50,190**;Dec 17, 1997
"RTN","ORSNAST2",3,0)
 ;
"RTN","ORSNAST2",4,0)
NATURE ;goes thru the "AF" xref in 100 for order dates for nature or order
"RTN","ORSNAST2",5,0)
1 I SORT=1 D  I ('$D(^TMP("ORNS",$J)))&(FORMAT=1) W !,"No orders found." Q
"RTN","ORSNAST2",6,0)
 .D:('PAGE)&(FORMAT=1) HDR^ORS100
"RTN","ORSNAST2",7,0)
 .S DATE=SDATE F  S DATE=$O(^OR(100,"AF",DATE)) Q:'DATE!STOP  Q:DATE>EDATE  D
"RTN","ORSNAST2",8,0)
 ..S IEN=0 F  S IEN=$O(^OR(100,"AF",DATE,IEN)) Q:'IEN!STOP  I $D(^OR(100,IEN)) D
"RTN","ORSNAST2",9,0)
 ...S SUB=0 F  S SUB=$O(^OR(100,"AF",DATE,IEN,SUB)) Q:'SUB!STOP  D
"RTN","ORSNAST2",10,0)
 ....I $P($G(^OR(100,IEN,8,SUB,0)),U,12)=SEARCH D
"RTN","ORSNAST2",11,0)
 .....I $D(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,3),0)) S PROV=$$USER^ORS100(+$P(^OR(100,IEN,8,SUB,0),U,3))
"RTN","ORSNAST2",12,0)
 .....I $D(^VA(200,+$P(^OR(100,IEN,0),U,4),5)),$L($P(^(5),U)) S SER=$$SER^ORS100(+$P(^VA(200,+$P(^OR(100,IEN,0),U,4),5),U))
"RTN","ORSNAST2",13,0)
 .....E  S SER="MISSING from file 200"
"RTN","ORSNAST2",14,0)
 .....I $D(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,13))) S WHO=$$USER^ORS100(+$P(^OR(100,IEN,8,SUB,0),U,13))
"RTN","ORSNAST2",15,0)
 .....S DFN=+$P(^OR(100,IEN,0),U,2) Q:$P(^DPT(DFN,0),U,21)  D DEM^VADPT S SSN=VA("BID"),PNM=VADM(1)
"RTN","ORSNAST2",16,0)
 .....I $D(^OR(100,IEN,3)),$P(^(3),U,3) S STATUS=$$STAT^ORS100(+$P(^(3),U,3))
"RTN","ORSNAST2",17,0)
 .....I $D(^OR(100,IEN,8,SUB,0)) S WHEN=$$FMTE^XLFDT($P(^(0),U)) S SIGNED=$$FMTE^XLFDT($P(^(0),U,6))
"RTN","ORSNAST2",18,0)
 .....E  S SIGNED=""
"RTN","ORSNAST2",19,0)
 .....S ^TMP("ORNS",$J,WHO,PROV,IEN)=WHO_U_PROV_U_PNM_U_SSN_U_STATUS_U_IEN_U_WHEN_U_SIGNED
"RTN","ORSNAST2",20,0)
 .....S ^TMP("ORSERV",$J,SER,WHO,IEN)=SER_U_WHO_U_PROV_U_PNM_U_SSN_U_STATUS_U_IEN_U_WHEN_U_SIGNED
"RTN","ORSNAST2",21,0)
DETAILS .....;detailed output which includes the order text
"RTN","ORSNAST2",22,0)
 .....I FORMAT=1 D
"RTN","ORSNAST2",23,0)
 ......W !,"NATURE OF ORDER: ",SNAME,?54,"Order Action: ",$P(^OR(100,IEN,8,SUB,0),U,2) D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST2",24,0)
 ......W !,"STATUS: ",STATUS,?52,"ORIFN(Order #): ",IEN D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST2",25,0)
 ......W !,"OBJECT OF ORDER(Patient name): ",$G(PNM),?63,"SSN: ",$G(SSN) D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST2",26,0)
 ......I $P(^ORD(100.98,$P(^OR(100,+IEN,0),U,11),0),U)="NON-VA MEDICATIONS" D
"RTN","ORSNAST2",27,0)
 .......W !,"DOCUMENTED BY: ",$P($G(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,3),0)),U),?53,"VEILED ORDER?: ",$S($P(^OR(100,IEN,3),U,8)=1:"YES",1:"NO") D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST2",28,0)
 ......E  W !,"ORDERED BY: ",$P($G(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,3),0)),U),?53,"VEILED ORDER?: ",$S($P(^OR(100,IEN,3),U,8)=1:"YES",1:"NO") D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST2",29,0)
 ......W !,"ENTERED BY: ",$P($G(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,13),0)),U)," ON ",$$FMTE^XLFDT($P(^OR(100,IEN,0),U,7)) D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST2",30,0)
 ......W !,"RELEASED BY: " I +$P(^OR(100,IEN,8,SUB,0),U,16) W $P($G(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,17),0)),U)," ON ",$$FMTE^XLFDT($P(^OR(100,IEN,8,SUB,0),U,16)) D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST2",31,0)
 ......W !,"SIGNED BY: " I +$P(^OR(100,IEN,8,SUB,0),U,6) W $P($G(^VA(200,+$P(^OR(100,IEN,8,SUB,0),U,5),0)),U)," ON ",$$FMTE^XLFDT($P(^OR(100,IEN,8,SUB,0),U,6)) D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST2",32,0)
 ......W !,"ORDER TEXT: " S ORIGVIEW=2 D TEXT^ORQ12(.TEXT,IEN_";"_SUB,(IOM-13)) S TEXTSUB="" F  S TEXTSUB=$O(TEXT(TEXTSUB)) Q:'+TEXTSUB!(TEXTSUB=4)!STOP  W:TEXTSUB'=1 ?12 W TEXT(TEXTSUB),! D:$Y>(IOSL-4) HDR^ORS100 Q:STOP
"RTN","ORSNAST2",33,0)
 ......I 'STOP I TEXTSUB=4 W !,"***There is more order text.  It is limited to 3 lines for this report***"
"RTN","ORSNAST2",34,0)
 ......K TEXT,TEXTSUB
"RTN","ORSNAST2",35,0)
 ......I 'STOP K DASH S $P(DASH,"-",IOM)="" W !,DASH
"RTN","ORSNAST2",36,0)
COLUMNS ;this section uses the TMP global for the columnar format
"RTN","ORSNAST2",37,0)
 I '$G(SERVICE)&(FORMAT=2) D
"RTN","ORSNAST2",38,0)
 .S HDR1="!,""Provider"",?25,""Patient"",?50,""SSN"",?56,""Status"",?75,""Order #"",?87,""Order Date"",?110,""Signed"""
"RTN","ORSNAST2",39,0)
 .S HDR="!,""Search for orders with a nature of order of ""_SNAME"
"RTN","ORSNAST2",40,0)
 .D HDR^ORS100
"RTN","ORSNAST2",41,0)
 .I '$D(^TMP("ORNS",$J)) W !,"No orders found." Q
"RTN","ORSNAST2",42,0)
 .S WHO="" F  S WHO=$O(^TMP("ORNS",$J,WHO)) Q:WHO=""!STOP  W "Entered by: ",WHO,!  D  W !
"RTN","ORSNAST2",43,0)
 ..S PNM="" F  S PNM=$O(^TMP("ORNS",$J,WHO,PNM)) Q:PNM=""!STOP  D
"RTN","ORSNAST2",44,0)
 ...S IEN=0 F  S IEN=$O(^TMP("ORNS",$J,WHO,PNM,IEN)) Q:'IEN!STOP  D
"RTN","ORSNAST2",45,0)
 ....W $P(^(IEN),U,2),?25,$P(^(IEN),U,3),?50,$P(^(IEN),U,4),?56,$P(^(IEN),U,5),?75,$P(^(IEN),U,6),?87,$P(^(IEN),U,7),?110,$P(^(IEN),U,8),! D:$Y>(IOSL-4) HDR^ORS100
"RTN","ORSNAST2",46,0)
SERV I $G(SERVICE)&(FORMAT=2) D
"RTN","ORSNAST2",47,0)
 .S HDR1="!,""Provider"",?25,""Patient"",?50,""SSN"",?56,""Status"",?75,""Order #"",?87,""Order Date"",?110,""Signed"""
"RTN","ORSNAST2",48,0)
 .S HDR="!,""Search for orders with a nature of order of ""_SNAME"
"RTN","ORSNAST2",49,0)
 .D HDR^ORS100
"RTN","ORSNAST2",50,0)
 .I '$D(^TMP("ORSERV",$J)) W !,"No orders found." Q
"RTN","ORSNAST2",51,0)
 .S REF=$S($D(LONER):"LONER(SER)",1:"^TMP(""ORSERV"",$J,SER)")
"RTN","ORSNAST2",52,0)
 .S SER="" F  S SER=$O(@REF) Q:SER=""!STOP  W "Service/Section: ",SER,! D
"RTN","ORSNAST2",53,0)
 ..I '$D(^TMP("ORSERV",$J,SER)) W "No orders found.",!! Q
"RTN","ORSNAST2",54,0)
 ..S WHO="" F  S WHO=$O(^TMP("ORSERV",$J,SER,WHO)) Q:WHO=""!STOP  W ?5,"Entered by: ",WHO,!  D  W !
"RTN","ORSNAST2",55,0)
 ...S IEN=0 F  S IEN=$O(^TMP("ORSERV",$J,SER,WHO,IEN)) Q:'IEN!STOP  D
"RTN","ORSNAST2",56,0)
 ....W $P(^(IEN),U,3),?25,$P(^(IEN),U,4),?50,$P(^(IEN),U,5),?56,$P(^(IEN),U,6),?75,$P(^(IEN),U,7),?87,$P(^(IEN),U,8),?110,$P(^(IEN),U,9),! D:$Y>(IOSL-4) HDR^ORS100
"RTN","ORSNAST2",57,0)
 Q
"RTN","ORWDAL32")
0^9^B16535139
"RTN","ORWDAL32",1,0)
ORWDAL32 ; SLC/REV - Allergy calls to support windows ;1/30/04  12:33
"RTN","ORWDAL32",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,190**;Dec 17, 1997
"RTN","ORWDAL32",3,0)
 ;
"RTN","ORWDAL32",4,0)
DEF(LST) ; Get dialog data for allergies
"RTN","ORWDAL32",5,0)
 N ILST,I,X S ILST=0
"RTN","ORWDAL32",6,0)
 S LST($$NXT)="~Reactions" D REACTTYP
"RTN","ORWDAL32",7,0)
 S LST($$NXT)="~Top Ten" D TOPTEN
"RTN","ORWDAL32",8,0)
 S LST($$NXT)="~Observ/Hist" D OBSHIST
"RTN","ORWDAL32",9,0)
 S LST($$NXT)="~Severity" D SEVERITY
"RTN","ORWDAL32",10,0)
 Q
"RTN","ORWDAL32",11,0)
TOPTEN ;  Get top ten symptoms from Allergy Site Parameters file
"RTN","ORWDAL32",12,0)
 N X0,I,CNT S I=0,X0="",CNT=0
"RTN","ORWDAL32",13,0)
 F  S I=$O(^GMRD(120.84,1,1,I)),CNT=CNT+1 Q:+I=0!(CNT>10)  D
"RTN","ORWDAL32",14,0)
 . S X0=^GMRD(120.84,1,1,I,0) Q:'$D(^GMRD(120.83,X0))
"RTN","ORWDAL32",15,0)
 . S LST($$NXT)="i"_X0_U_$P($G(^GMRD(120.83,X0,0)),U,1)
"RTN","ORWDAL32",16,0)
 Q
"RTN","ORWDAL32",17,0)
ALLSRCH(Y,X) ; Return list of partial matches  ; CHANGED TO PRODUCE TREEVIEW IN GUI
"RTN","ORWDAL32",18,0)
 N ORX,ROOT,XP,CNT,ORFILE,ORSRC,ORIEN,ORREAX S ORIEN=0,CNT=0,ORSRC=0,ORFILE="",ORREAX=""
"RTN","ORWDAL32",19,0)
 S ORX=X,X=$$UP^XLFSTR(X)
"RTN","ORWDAL32",20,0)
 F ROOT="^GMRD(120.82,""B"")","^GMRD(120.82,""D"")",$$B^PSNAPIS,$$T^PSNAPIS,"^PSDRUG(""B"")","^PSDRUG(""C"")","^PS(50.416,""P"")","^PS(50.605,""C"")" D
"RTN","ORWDAL32",21,0)
 . S ORSRC=ORSRC+1,ORFILE=$P(ROOT,",",1)_")",ORSRC(ORSRC)=$P($T(FILENAME+ORSRC),";;",2)
"RTN","ORWDAL32",22,0)
 . I (ORSRC'=2),(ORSRC'=6) S CNT=CNT+1,Y(CNT)=ORSRC_U_ORSRC(ORSRC)_U_U_U_"TOP"_U_"+"
"RTN","ORWDAL32",23,0)
 . I $D(@ROOT@(X)) D
"RTN","ORWDAL32",24,0)
 . . S ORIEN=$O(@ROOT@(X,0))
"RTN","ORWDAL32",25,0)
 . . I ORSRC=2 S CNT=CNT+1,Y(CNT)=ORIEN_U_$P($G(^GMRD(120.82,+ORIEN,0)),U,1)_" <"_X_">"_ROOT
"RTN","ORWDAL32",26,0)
 . . E  I ORSRC=6 S CNT=CNT+1,Y(CNT)=ORIEN_U_$P($G(^PSDRUG(+ORIEN,0)),U,1)_" <"_X_">"_ROOT
"RTN","ORWDAL32",27,0)
 . . E  S CNT=CNT+1,Y(CNT)=ORIEN_U_X_ROOT
"RTN","ORWDAL32",28,0)
 . . S ORREAX=$S($P(Y(CNT),U,3)?1"GMR".E:$P($G(^GMRD(120.82,+Y(CNT),0)),U,2),1:"D")
"RTN","ORWDAL32",29,0)
 . . S Y(CNT)=Y(CNT)_U_ORREAX_U_$S(ORSRC=2:1,ORSRC=6:5,1:ORSRC)
"RTN","ORWDAL32",30,0)
 . S XP=X F  S XP=$O(@ROOT@(XP)) Q:XP=""  Q:$E(XP,1,$L(X))'=X  D
"RTN","ORWDAL32",31,0)
 . . S ORIEN=$O(@ROOT@(XP,0))
"RTN","ORWDAL32",32,0)
 . . I ORSRC=2 S CNT=CNT+1,Y(CNT)=ORIEN_U_$P($G(^GMRD(120.82,+ORIEN,0)),U,1)_" <"_XP_">"_ROOT ; partial matches
"RTN","ORWDAL32",33,0)
 . . E  I ORSRC=6 S CNT=CNT+1,Y(CNT)=ORIEN_U_$P($G(^PSDRUG(+ORIEN,0)),U,1)_" <"_XP_">"_ROOT ; partial matches
"RTN","ORWDAL32",34,0)
 . . E  S CNT=CNT+1,Y(CNT)=ORIEN_U_XP_ROOT
"RTN","ORWDAL32",35,0)
 . . S ORREAX=$S($P(Y(CNT),U,3)?1"GMR".E:$P($G(^GMRD(120.82,+Y(CNT),0)),U,2),1:"D")
"RTN","ORWDAL32",36,0)
 . . S Y(CNT)=Y(CNT)_U_ORREAX_U_$S(ORSRC=2:1,ORSRC=6:5,1:ORSRC)
"RTN","ORWDAL32",37,0)
 Q
"RTN","ORWDAL32",38,0)
FILENAME        ; Display text of filenames for search treeview
"RTN","ORWDAL32",39,0)
 ;;VA Allergies File
"RTN","ORWDAL32",40,0)
 ;;VA Allergies File (Synonyms)  SPACER ONLY - NOT DISPLAYED
"RTN","ORWDAL32",41,0)
 ;;National Drug File - Generic Drug Name
"RTN","ORWDAL32",42,0)
 ;;National Drug file - Trade Name
"RTN","ORWDAL32",43,0)
 ;;Local Drug File
"RTN","ORWDAL32",44,0)
 ;;Local Drug File (Synonyms)  SPACER ONLY - NOT DISPLAYED
"RTN","ORWDAL32",45,0)
 ;;Drug Ingredients File
"RTN","ORWDAL32",46,0)
 ;;VA Drug Class File
"RTN","ORWDAL32",47,0)
 ;;
"RTN","ORWDAL32",48,0)
REACTTYP ; Get the reaction types
"RTN","ORWDAL32",49,0)
 ;F X="A^Allergy","R^Adverse Reaction" D  ; NEED ART CHANGES FIRST!!
"RTN","ORWDAL32",50,0)
 F X="D^Drug","F^Food","O^Other","DF^Drug,Food","DO^Drug,Other","FO^Food,Other" D
"RTN","ORWDAL32",51,0)
 . S LST($$NXT)="i"_X
"RTN","ORWDAL32",52,0)
 Q
"RTN","ORWDAL32",53,0)
OBSHIST ; Observed or historical
"RTN","ORWDAL32",54,0)
 F X="o^Observed","h^Historical" D
"RTN","ORWDAL32",55,0)
 . S LST($$NXT)="i"_X
"RTN","ORWDAL32",56,0)
 Q
"RTN","ORWDAL32",57,0)
SEVERITY ; Severity
"RTN","ORWDAL32",58,0)
 F X="1^Severe","2^Moderate","3^Mild" D
"RTN","ORWDAL32",59,0)
 . S LST($$NXT)="i"_X
"RTN","ORWDAL32",60,0)
 Q
"RTN","ORWDAL32",61,0)
SYMPTOMS(Y,FROM,DIR) ; Return a subset of symptoms
"RTN","ORWDAL32",62,0)
 ; .Return Array, Starting Text, Direction
"RTN","ORWDAL32",63,0)
 N I,IEN,CNT,X S I=0,CNT=44
"RTN","ORWDAL32",64,0)
 F  Q:I'<CNT  S FROM=$O(^GMRD(120.83,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORWDAL32",65,0)
 . S IEN=0 F  S IEN=$O(^GMRD(120.83,"B",FROM,IEN)) Q:'IEN  D
"RTN","ORWDAL32",66,0)
 . . S I=I+1
"RTN","ORWDAL32",67,0)
 . . S Y(I)=IEN_U_FROM
"RTN","ORWDAL32",68,0)
 Q
"RTN","ORWDAL32",69,0)
NXT() ; Increment index of LST
"RTN","ORWDAL32",70,0)
 S ILST=ILST+1
"RTN","ORWDAL32",71,0)
 Q ILST
"RTN","ORWDAL32",72,0)
 ;=====================================================
"RTN","ORWDAL32",73,0)
 ;  NEXT THREE CALLS NEED ART CHANGES BEFORE IMPLEMENTING
"RTN","ORWDAL32",74,0)
 ;=====================================================
"RTN","ORWDAL32",75,0)
EDITLOAD(Y,ORALIEN)     ; Load an allergy/adverse reaction for editing
"RTN","ORWDAL32",76,0)
 Q:+$G(ORALIEN)=0
"RTN","ORWDAL32",77,0)
 N ORNODE,I
"RTN","ORWDAL32",78,0)
 S ORNODE=$NAME(^TMP("GMRA",$J)),I=0
"RTN","ORWDAL32",79,0)
 ;D GETREC^GMRAGUI(ORALIEN,ORNODE)
"RTN","ORWDAL32",80,0)
 S Y=ORNODE
"RTN","ORWDAL32",81,0)
 Q
"RTN","ORWDAL32",82,0)
EDITSAVE(Y,ORALIEN,ORDFN,OREDITED)      ; Save Edit/Add of an allergy/adverse reaction
"RTN","ORWDAL32",83,0)
 N ORNODE
"RTN","ORWDAL32",84,0)
 S ORNODE=$NAME(^TMP("GMRA",$J))
"RTN","ORWDAL32",85,0)
 M @ORNODE=OREDITED
"RTN","ORWDAL32",86,0)
 ;D FILE^GMRAEDIT(ORALIEN,ORDFN,ORNODE)
"RTN","ORWDAL32",87,0)
 S Y="-1^Save not yet implemented."
"RTN","ORWDAL32",88,0)
 Q
"RTN","ORWDAL32",89,0)
SENDBULL(Y,ORDUZ,ORDFN,ORTEXT,ORCMTS)      ; Send bulletin if user attempts free-text entry
"RTN","ORWDAL32",90,0)
 I '$$PATCH^XPDUTL("GMRA*4.0*17") S Y="-1^Unable to send bulletin." Q
"RTN","ORWDAL32",91,0)
 I '$D(ORCMTS) D
"RTN","ORWDAL32",92,0)
 . S Y=$$SENDREQ^GMRAPES0(ORDUZ,ORDFN,ORTEXT)
"RTN","ORWDAL32",93,0)
 E  D
"RTN","ORWDAL32",94,0)
 . S Y=$$SENDREQ^GMRAPES0(ORDUZ,ORDFN,ORTEXT,.ORCMTS)
"RTN","ORWDAL32",95,0)
 Q
"RTN","ORWDBA1")
0^10^B59127892
"RTN","ORWDBA1",1,0)
ORWDBA1 ;; SLC OIFO/DKK/GSS - Order Dialogs Billing Awarness;[5/3/03 11:45pm] [2/26/04 11:40am]
"RTN","ORWDBA1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**190**;Dec 17, 1997
"RTN","ORWDBA1",3,0)
 ;
"RTN","ORWDBA1",4,0)
 ;Ref to ^DIC(9.4 - DBIA ___
"RTN","ORWDBA1",5,0)
 ;
"RTN","ORWDBA1",6,0)
SCLST(Y,DFN,ORLST) ; main entry for compiling appropriate CI's
"RTN","ORWDBA1",7,0)
 ;
"RTN","ORWDBA1",8,0)
 ;  RPC     =    ORWDBA1 SCLST
"RTN","ORWDBA1",9,0)
 ;  Y       =    Returned value
"RTN","ORWDBA1",10,0)
 ;  DFN     =    Patient IEN
"RTN","ORWDBA1",11,0)
 ;  ORLST   =    List of orders
"RTN","ORWDBA1",12,0)
 ;
"RTN","ORWDBA1",13,0)
 ;D CPLST^ORWDPS4(.Y,DFN,.ORLST) Q
"RTN","ORWDBA1",14,0)
 ;
"RTN","ORWDBA1",15,0)
 ; call for BA/CI
"RTN","ORWDBA1",16,0)
 D CPLSTBA(.Y,DFN,.ORLST)
"RTN","ORWDBA1",17,0)
 Q
"RTN","ORWDBA1",18,0)
 ;
"RTN","ORWDBA1",19,0)
CPLSTBA(TEST,PTIFN,ORIFNS) ; set-up SC/CIs for BA
"RTN","ORWDBA1",20,0)
 ;
"RTN","ORWDBA1",21,0)
 ;  TEST    =  Returned value
"RTN","ORWDBA1",22,0)
 ;  PTIFN   =  Patient IEN
"RTN","ORWDBA1",23,0)
 ;  ORIFNS  =  List of orders
"RTN","ORWDBA1",24,0)
 ;
"RTN","ORWDBA1",25,0)
 S ORI=""
"RTN","ORWDBA1",26,0)
 ;
"RTN","ORWDBA1",27,0)
 ;  GMRC    =  Consult/Request Tracking (#128) - Prosthetics
"RTN","ORWDBA1",28,0)
 ;  LR      =  Lab Services (#26) - Lab
"RTN","ORWDBA1",29,0)
 ;  PSO     =  Outpt Pharmacy (#112) - Outpt Pharmacy (orig. Co-Pay)
"RTN","ORWDBA1",30,0)
 ;  RA      =  Radiology/Nuclear Medicine (#31) - Radiology
"RTN","ORWDBA1",31,0)
 ;
"RTN","ORWDBA1",32,0)
 F I=1:1 S ORPKG=$P("GMRC;LR;PSO;RA",";",I) Q:ORPKG=""  D
"RTN","ORWDBA1",33,0)
 . S ORPKG(+$O(^DIC(9.4,"C",ORPKG,0)))=1  ; ^DIC(9.4) is package file
"RTN","ORWDBA1",34,0)
 ;
"RTN","ORWDBA1",35,0)
 ; get SC/CI for patient (Clinical Indicators: AO,IR,EC,MST,HNC)
"RTN","ORWDBA1",36,0)
 D SCPRE(.DR,DFN)
"RTN","ORWDBA1",37,0)
 ;
"RTN","ORWDBA1",38,0)
 ; set SC/CIs if order is for a package for which BA data is collected
"RTN","ORWDBA1",39,0)
 F  S ORI=$O(ORLST(ORI)) Q:'ORI  S ORD=+ORLST(ORI) D
"RTN","ORWDBA1",40,0)
 . Q:$D(TEST(ORD))!'$D(ORPKG($P(^OR(100,ORD,0),U,14)))
"RTN","ORWDBA1",41,0)
 . S TEST(ORD)=ORLST(ORI)_DR
"RTN","ORWDBA1",42,0)
 Q
"RTN","ORWDBA1",43,0)
 ;
"RTN","ORWDBA1",44,0)
SCPRE(DR,DFN) ; RPC 'ORWDBA1 SCPRE' - Dialog validation, to ask BA questions
"RTN","ORWDBA1",45,0)
 ;
"RTN","ORWDBA1",46,0)
 ;  DR    =  return value
"RTN","ORWDBA1",47,0)
 ;  DFN   =  input patient IEN
"RTN","ORWDBA1",48,0)
 ;
"RTN","ORWDBA1",49,0)
 Q:$G(DFN)=""
"RTN","ORWDBA1",50,0)
 N CPNODE,I,ORX,X
"RTN","ORWDBA1",51,0)
 S (CPNODE,DR,ORX)=""
"RTN","ORWDBA1",52,0)
 ; need a DBIA to use these calls ??? PIMS ???
"RTN","ORWDBA1",53,0)
 S CPNODE=$S($P($G(^DPT(DFN,.3)),U)="Y":1,1:0)  ;SC
"RTN","ORWDBA1",54,0)
 S $P(CPNODE,U,2)=$S('$O(^DGMS(29.11,"C",DFN,"")):0,1:1)  ;MST  29.11 
"RTN","ORWDBA1",55,0)
 S $P(CPNODE,U,3)=$S($P($G(^DPT(DFN,.321)),U,2)="Y":1,1:0)  ;AO
"RTN","ORWDBA1",56,0)
 S $P(CPNODE,U,4)=$S($P($G(^DPT(DFN,.321)),U,3)="Y":1,1:0)  ;IR
"RTN","ORWDBA1",57,0)
 S $P(CPNODE,U,5)=$S($P($G(^DPT(DFN,.322)),U,13)="Y":1,1:0)  ;EC
"RTN","ORWDBA1",58,0)
 S $P(CPNODE,U,6)=$S('$O(^DGNT(28.11,"B",DFN,"")):0,1:1)   ;HNC  28.11
"RTN","ORWDBA1",59,0)
 ;
"RTN","ORWDBA1",60,0)
 S X=$S($P(CPNODE,U)=1:"SC",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",61,0)
 S X=$S($P(CPNODE,U,3)=1:"AO",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",62,0)
 S X=$S($P(CPNODE,U,4)=1:"IR",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",63,0)
 S X=$S($P(CPNODE,U,5)=1:"EC",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",64,0)
 S X=$S($P(CPNODE,U,2)=1:"MST",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",65,0)
 S X=$S($P(CPNODE,U,6)=1:"HNC",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",66,0)
 ;
"RTN","ORWDBA1",67,0)
 ; get SC/CI for patient (CIs include AO,IR,EC,MST,HNC) where
"RTN","ORWDBA1",68,0)
 ;  AO      =  Agent Orange
"RTN","ORWDBA1",69,0)
 ;  IR      =  Ionizing Radiation
"RTN","ORWDBA1",70,0)
 ;  EC      =  Environmental Contaminants
"RTN","ORWDBA1",71,0)
 ;  MST     =  Military Sexual Trauma
"RTN","ORWDBA1",72,0)
 ;  HNC     =  Head and Neck Cancer
"RTN","ORWDBA1",73,0)
 F I="SC","AO","IR","EC","MST","HNC" D
"RTN","ORWDBA1",74,0)
 . I $D(ORX(I)) S DR=DR_U_I_$S($L(ORX(I)):";"_ORX(I),1:"")
"RTN","ORWDBA1",75,0)
 Q
"RTN","ORWDBA1",76,0)
 ;
"RTN","ORWDBA1",77,0)
ORPKGTYP(Y,ORLST) ; Build BA supported packages array
"RTN","ORWDBA1",78,0)
 F I=1:1 S ORPKG=$P("GMRC;LR;PSO;RA",";",I) Q:ORPKG=""  D
"RTN","ORWDBA1",79,0)
 . S ORPKG(+$O(^DIC(9.4,"C",ORPKG,0)))=1  ; ^DIC(9.4) is package file
"RTN","ORWDBA1",80,0)
 S GMRCPROS=+$O(^DIC(9.4,"C","GMRC",0))
"RTN","ORWDBA1",81,0)
 ; see if order is for a package which BA supports (GMRC,LR,PSO,RA)
"RTN","ORWDBA1",82,0)
 D ORPKG1(.Y,.ORLST)
"RTN","ORWDBA1",83,0)
 Q
"RTN","ORWDBA1",84,0)
 ;
"RTN","ORWDBA1",85,0)
ORPKG1(TEST,ORIFNS) ; Order for package BA supports?  TEST(ORI)=1 is YES
"RTN","ORWDBA1",86,0)
 S U="^",ORI=""
"RTN","ORWDBA1",87,0)
 F I=1:1:4 S OIV(I)=$P("PROSTHETICS REQUEST^EYEGLASS REQUEST^CONTACT LENSE REQUEST^HOME OXYGEN REQUEST",U,I)
"RTN","ORWDBA1",88,0)
 F  S ORI=$O(ORIFNS(ORI)) Q:'ORI  S ORD=+ORIFNS(ORI),TEST(ORI)=0 D
"RTN","ORWDBA1",89,0)
 . I $$BASTAT=0 Q  ;BA not used - abort switch set
"RTN","ORWDBA1",90,0)
 . I '$D(^OR(100,ORD,0)) Q  ;invalid order #
"RTN","ORWDBA1",91,0)
 . I $P(^OR(100,ORD,0),U,14)'?.N Q  ;invalid order # or entry
"RTN","ORWDBA1",92,0)
 . I '$D(ORPKG($P(^OR(100,ORD,0),U,14))) Q  ;pkg not supported
"RTN","ORWDBA1",93,0)
 . I $P(^OR(100,ORD,0),U,14)=GMRCPROS D  Q  ;check for Pros consult order
"RTN","ORWDBA1",94,0)
 .. S OIREC=$G(^ORD(101.43,$G(^OR(100,ORD,4.5,1,1)),0)),OIVN=""
"RTN","ORWDBA1",95,0)
 .. F  S OIVN=$O(OIV(OIVN)) Q:OIVN=""  I OIV(OIVN)=$E($P(OIREC,U),1,$L(OIV(OIVN))) S TEST(ORI)=1 Q
"RTN","ORWDBA1",96,0)
 . S TEST(ORI)=1  ;order is for a supported pkg (also note Pros ck above)
"RTN","ORWDBA1",97,0)
 Q
"RTN","ORWDBA1",98,0)
 ;
"RTN","ORWDBA1",99,0)
BASTATUS(Y) ;RPC to retrieve the status of the Billing Awareness software
"RTN","ORWDBA1",100,0)
 ;   Y  =  Returned Value (1=BA usable, 0=BA not-usable)
"RTN","ORWDBA1",101,0)
 S Y=1
"RTN","ORWDBA1",102,0)
 I $G(^ORWDBA1("GO_BA"))="" S Y=0
"RTN","ORWDBA1",103,0)
 Q
"RTN","ORWDBA1",104,0)
 ;
"RTN","ORWDBA1",105,0)
BASTAT() ; Internal version of BASTATUS
"RTN","ORWDBA1",106,0)
 I $G(^ORWDBA1("GO_BA"))="" Q 0
"RTN","ORWDBA1",107,0)
 Q 1
"RTN","ORWDBA1",108,0)
 ;
"RTN","ORWDBA1",109,0)
RCVORCI(Y,DIAG) ;Receive order related Clinical Indicators & Diagnoses from GUI
"RTN","ORWDBA1",110,0)
 ; Store data in ^OR(100,ODN,5)
"RTN","ORWDBA1",111,0)
 ;
"RTN","ORWDBA1",112,0)
 N DXIEN,ODN,ORIEN,SCI,OCT
"RTN","ORWDBA1",113,0)
 ;
"RTN","ORWDBA1",114,0)
 S ODN=""
"RTN","ORWDBA1",115,0)
 ;
"RTN","ORWDBA1",116,0)
 F  S ODN=$O(DIAG(ODN)) Q:ODN=""  D
"RTN","ORWDBA1",117,0)
 . S ORIEN=$P(DIAG(ODN),";",1)
"RTN","ORWDBA1",118,0)
 . ;S ^ZZGARYS("DIAG",ORIEN,ODN)=DIAG(ODN)  ;???DELETE POST TEST
"RTN","ORWDBA1",119,0)
 . S SCI=$$CIGUIGBL($E($P(DIAG(ODN),";",2),3,8))
"RTN","ORWDBA1",120,0)
 . ;S ^ZZGARYS("SCI",ORIEN,ODN)=SCI  ;???DELETE POST TEST
"RTN","ORWDBA1",121,0)
 . S ^OR(100,ORIEN,5)=SCI  ;eventually will not be stored here
"RTN","ORWDBA1",122,0)
 . ;
"RTN","ORWDBA1",123,0)
 . F OCT=3:2 Q:$P(DIAG(ODN),U,OCT)=""  D
"RTN","ORWDBA1",124,0)
 .. S DXIEN=$O(^ICD9("BA",$P(DIAG(ODN),U,OCT)_" ",0))  ;Dx IEN
"RTN","ORWDBA1",125,0)
 .. S ^OR(100,ORIEN,5.1,(OCT\2),0)=DXIEN_"^^^"_SCI
"RTN","ORWDBA1",126,0)
 ;S ^ZZGARYS("RCVORCI",ORIEN)=0  ;???DELETE THIS POST TEST
"RTN","ORWDBA1",127,0)
 S Y=1
"RTN","ORWDBA1",128,0)
 Q
"RTN","ORWDBA1",129,0)
 ;
"RTN","ORWDBA1",130,0)
CIGUIGBL(CIS) ;Convert Clinical Indicators from GUI to Global order & format
"RTN","ORWDBA1",131,0)
 ;
"RTN","ORWDBA1",132,0)
 ; Expect CIS to be in CNUUNC where C=checked, N=not checked, U=unchecked
"RTN","ORWDBA1",133,0)
 ; Output SCI in 1^^^0^0^1 format (reordered for global storage)
"RTN","ORWDBA1",134,0)
 ;
"RTN","ORWDBA1",135,0)
 N CC,CI,CIGBL,CIGUI,CIHL7,J,NCI,SCI
"RTN","ORWDBA1",136,0)
 S SCI="",NCI=6  ;NCI=number of Clinical Indicators
"RTN","ORWDBA1",137,0)
 I $L(CIS)'=NCI Q -1  ;invalid number of indicators
"RTN","ORWDBA1",138,0)
 ; CIGBL is order of CIs in ^OR(100,ORIEN,5) & ^OR(100,ORIEN,5.1,#)
"RTN","ORWDBA1",139,0)
 ; CIGUI is order of CIs from GUI
"RTN","ORWDBA1",140,0)
 S CIGBL="SC^MST^AO^IR^EC^HNC",CIGUI="SC^AO^IR^EC^MST^HNC"
"RTN","ORWDBA1",141,0)
 F J=1:1:NCI S CI=$E(CIS,J),CI($P(CIGUI,U,J))=$S(CI="C":1,CI="U":0,1:"")
"RTN","ORWDBA1",142,0)
 F J=1:1:NCI S SCI=SCI_U_CI($P(CIGBL,U,J))
"RTN","ORWDBA1",143,0)
 Q $P(SCI,U,2,99)
"RTN","ORWDBA1",144,0)
 ;
"RTN","ORWDBA1",145,0)
HL7 ; Define common variables and access either Inpatient (ORWDBA2) or
"RTN","ORWDBA1",146,0)
 ;  Outpatient (ORWDBA3) routine to get PTF and PCE related pointers.
"RTN","ORWDBA1",147,0)
 ;
"RTN","ORWDBA1",148,0)
 ; Input:
"RTN","ORWDBA1",149,0)
 ;  IFN       = Order IEN (file# 100)
"RTN","ORWDBA1",150,0)
 ;
"RTN","ORWDBA1",151,0)
 ; Output:
"RTN","ORWDBA1",152,0)
 ;  ORDGX                        = Pointer to Diagnosis (#80)
"RTN","ORWDBA1",153,0)
 ;  ORAR(ORDFN,"DOS")            = Date Of Service (FM format)
"RTN","ORWDBA1",154,0)
 ;  ORAR(ORDFN,"PAT")            = Patient's IEN (file# 2)
"RTN","ORWDBA1",155,0)
 ;  ORAR(ORDFN,"POS")            = Place of Service
"RTN","ORWDBA1",156,0)
 ;  ORAR(ORDFN,"POV IEN")        = Pointer to V POV (file# 9000010.07)
"RTN","ORWDBA1",157,0)
 ;  ORAR(ORDFN,"USR")            = Ordering Provider
"RTN","ORWDBA1",158,0)
 ;  ORAR(ORDFN,"DGX",ORDGX)
"RTN","ORWDBA1",159,0)
 ;     $P  Description
"RTN","ORWDBA1",160,0)
 ;      1  Diagnosis (ICD9 #)
"RTN","ORWDBA1",161,0)
 ;      2  Diagnosis description
"RTN","ORWDBA1",162,0)
 ;      3  Service Connected (Y/N)
"RTN","ORWDBA1",163,0)
 ;      4  Agent Orange (Y/N)
"RTN","ORWDBA1",164,0)
 ;      5  Ionizing Radiation (Y/N)
"RTN","ORWDBA1",165,0)
 ;      6  Environmental Contaminants (Y/N)
"RTN","ORWDBA1",166,0)
 ;      7  Military Sexual Trauma (Y/N)
"RTN","ORWDBA1",167,0)
 ;      8  Head & Neck Cancer (Y/N)
"RTN","ORWDBA1",168,0)
 ;
"RTN","ORWDBA1",169,0)
 I $$BASTAT=0 Q  ;BA not used
"RTN","ORWDBA1",170,0)
 ;
"RTN","ORWDBA1",171,0)
 N DXIEN,ICD9,OCT,OR0,ORAR,ORDFN,OREC,PTCLAS
"RTN","ORWDBA1",172,0)
 S ORDFN=IFN,OR0=^OR(100,$G(IFN),0)
"RTN","ORWDBA1",173,0)
 S ORAR(ORDFN,"DOS")=$$NOW^XLFDT              ;Order effective D/T
"RTN","ORWDBA1",174,0)
 S ORAR(ORDFN,"PAT")=$P($P(OR0,U,2),";")      ;Patient's IEN
"RTN","ORWDBA1",175,0)
 S ORAR(ORDFN,"POS")=$P($P(OR0,U,10),";")     ;Patient's location (POS
"RTN","ORWDBA1",176,0)
 S ORAR(ORDFN,"USR")=$P($G(OR0),U,4)          ;Ordering provider IEN
"RTN","ORWDBA1",177,0)
 S PTCLAS=$P($G(OR0),U,12)                    ;Patient class
"RTN","ORWDBA1",178,0)
 ;
"RTN","ORWDBA1",179,0)
 S (ICD9,OCT)=""
"RTN","ORWDBA1",180,0)
 ; Go through each diagnosis for the order
"RTN","ORWDBA1",181,0)
 F  S OCT=$O(^OR(100,ORDFN,5.1,OCT)) Q:OCT=""  D
"RTN","ORWDBA1",182,0)
 . S OREC=$G(^OR(100,ORDFN,5.1,OCT,0)) Q:OREC=""
"RTN","ORWDBA1",183,0)
 . S DXIEN=$P(OREC,U) S:DXIEN'="" ICD9=$P($G(^ICD9(DXIEN,0)),U)
"RTN","ORWDBA1",184,0)
 . S ORAR(ORDFN,"DGX",DXIEN)=ICD9_U_$P(^ICD9(DXIEN,0),U,3)_U_$P(OREC,U,3,8)
"RTN","ORWDBA1",185,0)
 . ;
"RTN","ORWDBA1",186,0)
 . ;D @$S("OP^ORWDBA3":PTCLAS="O",1:"IP^ORWDBA2")
"RTN","ORWDBA1",187,0)
 . ;
"RTN","ORWDBA1",188,0)
 . S $P(^OR(100,ORDFN,5.1,OCT,0),U,2)=$G(VPOV)
"RTN","ORWDBA1",189,0)
 . S $P(^OR(100,ORDFN,5.1,OCT,0),U,3)=$G(IEN461)
"RTN","ORWDBA1",190,0)
 ;
"RTN","ORWDBA1",191,0)
 S $P(^OR(100,ORDFN,0),U,3)=$G(VISIT)
"RTN","ORWDBA1",192,0)
 S ^OR(100,ORDFN,5.2,0)=$G(PTCLAS)_U_$G(IEN45)
"RTN","ORWDBA1",193,0)
 ;S ^ZZGARYS("HL7",ORDFN)=0  ;???DELETE POST TEST
"RTN","ORWDBA1",194,0)
 ;
"RTN","ORWDBA1",195,0)
 ;store VISIT and VPOV etc data in ^OR(100  (46.1 & 9000010.07)
"RTN","ORWDBA1",196,0)
 ;set VISIT variable for inclusion in PV1 segment
"RTN","ORWDBA1",197,0)
 ;
"RTN","ORWDBA1",198,0)
 Q
"RTN","ORWDBA1",199,0)
 ;
"RTN","ORWDBA1",200,0)
ORINFO Q  ;defined to avoid error - does nothing - called from ORWDBA3
"RTN","ORWDBA1",201,0)
 ;
"RTN","ORWDBA1",202,0)
DG1(ORDFN,COUNTER,CTVALUE) ; Create DG1 segment(s) & make call for ZCL seg.
"RTN","ORWDBA1",203,0)
 ;
"RTN","ORWDBA1",204,0)
 ;  Input
"RTN","ORWDBA1",205,0)
 ;    ORDFN      Internal Order ID#
"RTN","ORWDBA1",206,0)
 ;    COUNTER    Variable used as counter from calling routine
"RTN","ORWDBA1",207,0)
 ;    CTVALUE    Value of COUNTER when DG1 called
"RTN","ORWDBA1",208,0)
 ;  Output
"RTN","ORWDBA1",209,0)
 ;
"RTN","ORWDBA1",210,0)
 I $$BASTAT=0 Q  ;BA not used
"RTN","ORWDBA1",211,0)
 ;
"RTN","ORWDBA1",212,0)
 N DG13,DXIEN,DXV,FROMFILE,ICD9,OCT,OREC
"RTN","ORWDBA1",213,0)
 ; zero order count variable
"RTN","ORWDBA1",214,0)
 S OCT=0
"RTN","ORWDBA1",215,0)
 ; Get the diagnoses for an order
"RTN","ORWDBA1",216,0)
 F  S OCT=$O(^OR(100,ORDFN,5.1,OCT)) Q:OCT=""  D
"RTN","ORWDBA1",217,0)
 . S OREC=^OR(100,ORDFN,5.1,OCT,0)
"RTN","ORWDBA1",218,0)
 . ; DXIEN=pointer to diagnosis (ICD9) file #80
"RTN","ORWDBA1",219,0)
 . S DXIEN=$P(OREC,U)
"RTN","ORWDBA1",220,0)
 . ; the DXIEN pointer should point to a valid diagnosis (after all is
"RTN","ORWDBA1",221,0)
 . ;   was previously entered .. but just in case things have changed...
"RTN","ORWDBA1",222,0)
 . ; 
"RTN","ORWDBA1",223,0)
 . I DXIEN'="" S DXV=$P($G(^ICD9(DXIEN,0)),U,3),ICD9=$P($G(^ICD9(DXIEN,0)),U)
"RTN","ORWDBA1",224,0)
 . E  S DXV="",ICD9=""
"RTN","ORWDBA1",225,0)
 . S FROMFILE=80
"RTN","ORWDBA1",226,0)
 . S DG13=DXIEN_U_DXV_U_FROMFILE_U_ICD9_U_DXV_U_"ICD9"
"RTN","ORWDBA1",227,0)
 . S CTVALUE=CTVALUE+1
"RTN","ORWDBA1",228,0)
 . S ORMSG(CTVALUE)="DG1"_"|"_OCT_"||"_DG13_"|||||||||||||"
"RTN","ORWDBA1",229,0)
 . D ZCL
"RTN","ORWDBA1",230,0)
 . ;S ^ZZGARYS("DG1",ORDFN,OCT)=ORMSG(CTVALUE)  ;???DELETE POST TEST
"RTN","ORWDBA1",231,0)
 S @COUNTER=CTVALUE
"RTN","ORWDBA1",232,0)
 Q
"RTN","ORWDBA1",233,0)
 ;
"RTN","ORWDBA1",234,0)
ZCL ;create all the ZCL segments (currently 6) for order number OCT
"RTN","ORWDBA1",235,0)
 N SCI,SCIN,TABLE,VALUE
"RTN","ORWDBA1",236,0)
 ; SCI is CI & SC data in SC^MST^AO^IR^EC^HNC order (^OR order)
"RTN","ORWDBA1",237,0)
 S SCI=$P(OREC,U,4,9)
"RTN","ORWDBA1",238,0)
 ; conversion order from ^OR stored data and Table SD008 for HL7 msg
"RTN","ORWDBA1",239,0)
 ; convert so that the ZCL segments will be in Table SD008 order (1-6)
"RTN","ORWDBA1",240,0)
 S TABLE="341526"  ;AO^IR^SC^EC^MST^HNC table SD008 order
"RTN","ORWDBA1",241,0)
 F SCIN=1:1:6 D
"RTN","ORWDBA1",242,0)
 . ; ORMSG counter incremented
"RTN","ORWDBA1",243,0)
 . S CTVALUE=CTVALUE+1
"RTN","ORWDBA1",244,0)
 . ; SC/EI VALUE=0 for no or 1 for yes (only if not req. is it null)
"RTN","ORWDBA1",245,0)
 . S VALUE=$P(SCI,U,$E(TABLE,SCIN))
"RTN","ORWDBA1",246,0)
 . ; for Table SD008: OCT=Set ID, SCIN=O/P Classif. Type, VALUE=Value
"RTN","ORWDBA1",247,0)
 . S ORMSG(CTVALUE)="ZCL|"_OCT_"|"_SCIN_"|"_VALUE
"RTN","ORWDBA1",248,0)
 . ;S ^ZZGARYS("ZCL",ORDFN,OCT,CTVALUE)=ORMSG(CTVALUE)  ;???DELETE
"RTN","ORWDBA1",249,0)
 Q
"RTN","ORWDBA1",250,0)
 ;
"RTN","ORWDBA1",251,0)
PRVKEY(X) ; check for provider key - DO NOT EDIT OR DELETE - DBIA
"RTN","ORWDBA1",252,0)
 Q:'+$G(X) 0
"RTN","ORWDBA1",253,0)
 Q:$D(^XUSEC("ORES",X)) 1
"RTN","ORWDBA1",254,0)
 Q 0
"RTN","ORWDBA3")
0^46^B10588553
"RTN","ORWDBA3",1,0)
ORWDBA3 ; SLC/GSS Billing Awareness; OUTPATIENT ORDERS. [8/20/03 9:19am]
"RTN","ORWDBA3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**190**;Dec 17, 1997
"RTN","ORWDBA3",3,0)
 ;
"RTN","ORWDBA3",4,0)
 ; Subroutines to get V POV pointers at order entry and result
"RTN","ORWDBA3",5,0)
 ; verification for outpatient.
"RTN","ORWDBA3",6,0)
 ;
"RTN","ORWDBA3",7,0)
 ; Reference to EN^DDIOL supported by IA #10142
"RTN","ORWDBA3",8,0)
 ; Reference to ^DIC supported by IA #10006
"RTN","ORWDBA3",9,0)
 ; Reference to $$GET1^DIQ supported by IA #2056
"RTN","ORWDBA3",10,0)
 ; Reference to ^DIR supported by IA #10026
"RTN","ORWDBA3",11,0)
 ; Reference to ^ICD9 supported by IA #10082
"RTN","ORWDBA3",12,0)
 ; Reference to ^DIC(9.4 supported by IA #10048
"RTN","ORWDBA3",13,0)
 ;
"RTN","ORWDBA3",14,0)
 ; Outpatient Order Entry - called from INOUTPT^ORWDBA1
"RTN","ORWDBA3",15,0)
 ;
"RTN","ORWDBA3",16,0)
 ; Input:
"RTN","ORWDBA3",17,0)
 ;  PTIEN                        = Patient's DFN (#2)
"RTN","ORWDBA3",18,0)
 ;  ORDGX                        = Pointer to Diagnosis (#80)
"RTN","ORWDBA3",19,0)
 ;  ORAR(ORDFN,"DOS")            = Date Of Service (FM format)
"RTN","ORWDBA3",20,0)
 ;  ORAR(ORDFN,"PAT")            = Patient's IEN (file# 2)
"RTN","ORWDBA3",21,0)
 ;  ORAR(ORDFN,"POS")            = Place of Service
"RTN","ORWDBA3",22,0)
 ;  ORAR(ORDFN,"POV IEN")        = Pointer to V POV (file# 9000010.07)
"RTN","ORWDBA3",23,0)
 ;  ORAR(ORDFN,"USR")            = Ordering Provider
"RTN","ORWDBA3",24,0)
 ;  ORAR(ORDFN,"DGX",ORDGX)
"RTN","ORWDBA3",25,0)
 ;     $P  Description
"RTN","ORWDBA3",26,0)
 ;      1  Diagnosis (ICD9 #)
"RTN","ORWDBA3",27,0)
 ;      2  Diagnosis description
"RTN","ORWDBA3",28,0)
 ;      3  Service Connected (Y/N)
"RTN","ORWDBA3",29,0)
 ;      4  Agent Orange (Y/N)
"RTN","ORWDBA3",30,0)
 ;      5  Ionizing Radiation (Y/N)
"RTN","ORWDBA3",31,0)
 ;      6  Environmental Contaminants (Y/N)
"RTN","ORWDBA3",32,0)
 ;      7  Military Sexual Trauma (Y/N)
"RTN","ORWDBA3",33,0)
 ;      8  Head & Neck Cancer (Y/N)
"RTN","ORWDBA3",34,0)
 ;
"RTN","ORWDBA3",35,0)
 ; Output:
"RTN","ORWDBA3",36,0)
 ;   ORAR1(VISIT,ORTST,POV)=ORDGX
"RTN","ORWDBA3",37,0)
 ;   VISIT      -  Visit Number
"RTN","ORWDBA3",38,0)
 ;   ORTST      -  Ordered Test
"RTN","ORWDBA3",39,0)
 ;   POV        -  Pointer to V POV (#9000010.07) file
"RTN","ORWDBA3",40,0)
 ;   ORDGX      -  Pointer to Diagnosis (#80)
"RTN","ORWDBA3",41,0)
 ;
"RTN","ORWDBA3",42,0)
OP N ODATA,ODGX,ONUM,ORDGX,INROOT,PKG,SRC,USR,ERRDIS
"RTN","ORWDBA3",43,0)
 N ORDIEN,LVL3,VISIT
"RTN","ORWDBA3",44,0)
 ; ??? DELETE NEXT LINE POST TEST
"RTN","ORWDBA3",45,0)
 ;S U="^"
"RTN","ORWDBA3",46,0)
 F I=1:1:5 S LVL3(I)=$P("DX/PL^ENCOUNTER^^PROVIDER^STOP",U,I)
"RTN","ORWDBA3",47,0)
 S INROOT="^TMP(""ORXAPI"",$J)"
"RTN","ORWDBA3",48,0)
 ;S X="LAB PACKAGE",DIC="^DIC(9.4,",DIC(0)="Z" D ^DIC
"RTN","ORWDBA3",49,0)
 ;S PKG=+Y
"RTN","ORWDBA3",50,0)
 S SRC="CPRS-",ONUM=0,USR=DUZ,ERRDIS=0,ORDFN="",JOB=$J
"RTN","ORWDBA3",51,0)
 ;
"RTN","ORWDBA3",52,0)
 F  S ORDIEN=$O(ORAR(ORDIEN)) Q:ORDIEN=""  K ^TMP("ORXAPI",JOB) D
"RTN","ORWDBA3",53,0)
 . D ORINFO^ORWDBA1(ORDIEN)
"RTN","ORWDBA3",54,0)
 . ; file manager internal formated date.time
"RTN","ORWDBA3",55,0)
 . S ^TMP("ORXAPI",JOB,LVL3(2),1,"ENC D/T")=ORAR(ORDIEN,"DOS")
"RTN","ORWDBA3",56,0)
 . ; pointer to hospital location file# 44
"RTN","ORWDBA3",57,0)
 . S ^TMP("ORXAPI",JOB,LVL3(2),1,"HOS LOC")=ORAR(ORDIEN,"POS")
"RTN","ORWDBA3",58,0)
 . ; pointer to patient file# 9000001
"RTN","ORWDBA3",59,0)
 . S ^TMP("ORXAPI",JOB,LVL3(2),1,"PATIENT")=ORAR(ORDIEN,"PAT")
"RTN","ORWDBA3",60,0)
 . ; ambulatory svc category, may be later changed to I by Visit Tracking
"RTN","ORWDBA3",61,0)
 . S ^TMP("ORXAPI",JOB,LVL3(2),1,"SERVICE CATEGORY")="A"
"RTN","ORWDBA3",62,0)
 . ; primary encounter associated with appt or is stand alone
"RTN","ORWDBA3",63,0)
 . S ^TMP("ORXAPI",JOB,LVL3(2),1,"ENCOUNTER TYPE")="P"
"RTN","ORWDBA3",64,0)
 . ; provider's IEN
"RTN","ORWDBA3",65,0)
 . S ^TMP("ORXAPI",JOB,LVL3(4),1,"NAME")=ORAR(ORDIEN,"POV IEN")
"RTN","ORWDBA3",66,0)
 . S ORDGX=""
"RTN","ORWDBA3",67,0)
 . F  S ORDGX=$O(^OR(100,ORDIEN,5.1,"ICD9",ORDGX)) Q:ORDGX=""  D
"RTN","ORWDBA3",68,0)
 .. S OREC=$G(^OR(100,ORDIEN,5.1,"ICD9",ORDGX,0))
"RTN","ORWDBA3",69,0)
 .. S ODATA=$G(ORAR(ORDIEN,"DGX",ORTST,ORDGX))
"RTN","ORWDBA3",70,0)
 .. S ONUM=$G(ONUM)+1
"RTN","ORWDBA3",71,0)
 .. S ^TMP("ORXAPI",$J,LVL3(1),ONUM,"DIAGNOSIS")=ORDGX
"RTN","ORWDBA3",72,0)
 .. S:ONUM=1 ^TMP("ORXAPI",$J,LVL3(1),ONUM,"PRIMARY")=1
"RTN","ORWDBA3",73,0)
 .. F OX=1:1:6 D
"RTN","ORWDBA3",74,0)
 ... I $P($G(TDATA),U,OX+3)'="" D
"RTN","ORWDBA3",75,0)
 .... S ^TMP("ORXAPI",$J,LVL3(1),ONUM,"CPRS-LAB")=$P(TDATA,U,OX+3)
"RTN","ORWDBA3",76,0)
 . S X=$$DATA2PCE^PXAPI(INROOT,PKG,SRC,.VISIT,USR,ERRDIS)
"RTN","ORWDBA3",77,0)
 . ;I VISIT<0 D ERRMSG(VISIT) Q
"RTN","ORWDBA3",78,0)
 . D ENC(VISIT)
"RTN","ORWDBA3",79,0)
 Q
"RTN","ORWDBA3",80,0)
 ;
"RTN","ORWDBA3",81,0)
ENC(VISIT) ; Get the VISIT and POV
"RTN","ORWDBA3",82,0)
 N POV,TDATA,VDGX
"RTN","ORWDBA3",83,0)
 D ENCEVENT^PXKENC(VISIT)
"RTN","ORWDBA3",84,0)
 S POV=""
"RTN","ORWDBA3",85,0)
 F  S POV=$O(^TMP("PXKENC",$J,VISIT,"POV",POV)) Q:POV=""  D
"RTN","ORWDBA3",86,0)
 . S ODATA=$G(^TMP("PXKENC",$J,VISIT,"POV",POV,0)),VDGX=$P(ODATA,U,1)
"RTN","ORWDBA3",87,0)
 . Q:'$D(ORAR(DFN,"DGX",VDGX))
"RTN","ORWDBA3",88,0)
 . S ORAR1(VISIT,ORTST,POV)=VDGX
"RTN","ORWDBA3",89,0)
 Q
"RTN","ORWDBA3",90,0)
 ;
"RTN","ORWDBA3",91,0)
ERRMSG(VISIT) ; Error handling and message
"RTN","ORWDBA3",92,0)
 ; to be determined
"RTN","ORWDBA3",93,0)
 Q
"RTN","ORWDPS32")
0^68^B79108191
"RTN","ORWDPS32",1,0)
ORWDPS32 ; SLC/KCM - Pharmacy Calls for GUI Dialog [ 08/04/96  6:57 PM ];02:03 PM  4 Sep 1998;2/2/98  23:53 ;1/22/01  11:39 [1/22/01 2:48pm]
"RTN","ORWDPS32",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,94,190**;Dec 17, 1997
"RTN","ORWDPS32",3,0)
 ;
"RTN","ORWDPS32",4,0)
NXT() ; -- returns next available index in return data array
"RTN","ORWDPS32",5,0)
 S ILST=ILST+1
"RTN","ORWDPS32",6,0)
 Q ILST
"RTN","ORWDPS32",7,0)
 ;
"RTN","ORWDPS32",8,0)
DLGSLCT(LST,PSTYPE) ; return default lists for dialog
"RTN","ORWDPS32",9,0)
 ; PSTYPE: pharmacy type (U=unit dose, F=IV fluids, O=outpatient)
"RTN","ORWDPS32",10,0)
 N ILST S ILST=0
"RTN","ORWDPS32",11,0)
 I PSTYPE="F" D  Q                       ; IV Fluids
"RTN","ORWDPS32",12,0)
 . S LST($$NXT)="~ShortList"  D SHORT
"RTN","ORWDPS32",13,0)
 . S LST($$NXT)="~Priorities" D PRIOR
"RTN","ORWDPS32",14,0)
 ;
"RTN","ORWDPS32",15,0)
 S LST($$NXT)="~ShortList"  D SHORT      ; Unit Dose & Outpatient
"RTN","ORWDPS32",16,0)
 S LST($$NXT)="~Schedules"  D SCHED
"RTN","ORWDPS32",17,0)
 S LST($$NXT)="~Priorities" D PRIOR
"RTN","ORWDPS32",18,0)
 I PSTYPE="O" D                          ; Outpatient
"RTN","ORWDPS32",19,0)
 . S LST($$NXT)="~Pickup"   D PICKUP
"RTN","ORWDPS32",20,0)
 . S LST($$NXT)="~SCStatus" D SCLIST
"RTN","ORWDPS32",21,0)
 Q
"RTN","ORWDPS32",22,0)
SHORT ; from DLGSLCT, get short list of med quick orders
"RTN","ORWDPS32",23,0)
 ; !!! change this so that it uses the ORWDXQ call!!!
"RTN","ORWDPS32",24,0)
 N I,X,TMP
"RTN","ORWDPS32",25,0)
 I PSTYPE="U" S X="UD RX"
"RTN","ORWDPS32",26,0)
 I PSTYPE="F" S X="IV RX"
"RTN","ORWDPS32",27,0)
 I PSTYPE="O" S X="O RX"
"RTN","ORWDPS32",28,0)
 D GETQLST^ORWDXQ(.TMP,X,"iQ")
"RTN","ORWDPS32",29,0)
 S I=0 F  S I=$O(TMP(I)) Q:'I  S LST($$NXT)=TMP(I)
"RTN","ORWDPS32",30,0)
 Q
"RTN","ORWDPS32",31,0)
SCHED ; from DLGSLCT, get all pharm admin scheds
"RTN","ORWDPS32",32,0)
 N X
"RTN","ORWDPS32",33,0)
 S X="" F  S X=$O(^PS(51.1,"APPSJ",X)) Q:X=""  S LST($$NXT)="i"_X
"RTN","ORWDPS32",34,0)
 Q
"RTN","ORWDPS32",35,0)
SCHEDA ; (similar to SCHED, but also rtns admin times)
"RTN","ORWDPS32",36,0)
 N X,IEN,SCH
"RTN","ORWDPS32",37,0)
 S SCH="" F  S SCH=$O(^PS(51.1,"APPSJ",SCH)) Q:SCH=""  D
"RTN","ORWDPS32",38,0)
 . S IEN=0 F  S IEN=$O(^PS(51.1,"APPSJ",SCH,IEN)) Q:IEN'>0  D
"RTN","ORWDPS32",39,0)
 . . S X=^PS(51.1,IEN,0) S X=$S($L($P(X,U,2)):"  ("_$P(X,U,2)_")",1:"")
"RTN","ORWDPS32",40,0)
 . . S LST($$NXT)="i"_IEN_U_SCH_X
"RTN","ORWDPS32",41,0)
 Q
"RTN","ORWDPS32",42,0)
PRIOR ; from DLGSLCT, get list of allowed priorities
"RTN","ORWDPS32",43,0)
 N X,XREF
"RTN","ORWDPS32",44,0)
 S XREF=$S(PSTYPE="O":"S.PSO",1:"S.PSJ")
"RTN","ORWDPS32",45,0)
 S X="" F  S X=$O(^ORD(101.42,XREF,X)) Q:'$L(X)  D
"RTN","ORWDPS32",46,0)
 . S LST($$NXT)="i"_$O(^ORD(101.42,XREF,X,0))_U_X
"RTN","ORWDPS32",47,0)
 S LST($$NXT)="d"_$O(^ORD(101.42,"B","ROUTINE",0))_U_"ROUTINE"
"RTN","ORWDPS32",48,0)
 Q
"RTN","ORWDPS32",49,0)
PICKUP ; from DLGSLCT, get prescription routing
"RTN","ORWDPS32",50,0)
 N X,EDITONLY
"RTN","ORWDPS32",51,0)
 F X="W^at Window","M^by Mail","C^in Clinic" S LST($$NXT)="i"_X
"RTN","ORWDPS32",52,0)
 S X=$$DEFPICK I $L(X) S LST($$NXT)="d"_X
"RTN","ORWDPS32",53,0)
 Q
"RTN","ORWDPS32",54,0)
DEFPICK()       ; return default routing
"RTN","ORWDPS32",55,0)
 N X,DLG,PRMT
"RTN","ORWDPS32",56,0)
 S DLG=$O(^ORD(101.41,"AB","PSO OERR",0)),X=""
"RTN","ORWDPS32",57,0)
 S PRMT=$O(^ORD(101.41,"AB","OR GTX ROUTING",0))
"RTN","ORWDPS32",58,0)
 I $D(^TMP("ORECALL",$J,+DLG,+PRMT,1)) S X=^(1)
"RTN","ORWDPS32",59,0)
 I X'="" S EDITONLY=1 Q X  ; EDITONLY used by default action
"RTN","ORWDPS32",60,0)
 ;
"RTN","ORWDPS32",61,0)
 S X=$$GET^XPAR("ALL","ORWDPS ROUTING DEFAULT",1,"I")
"RTN","ORWDPS32",62,0)
 I X="C" S X="C^in Clinic" G XPICK
"RTN","ORWDPS32",63,0)
 I X="M" S X="M^by Mail"   G XPICK
"RTN","ORWDPS32",64,0)
 I X="W" S X="W^at Window" G XPICK
"RTN","ORWDPS32",65,0)
 I X="N" S X=""             G XPICK
"RTN","ORWDPS32",66,0)
 I X=""  S X=$S($D(^PSX(550,"C")):"M^by Mail",1:"W^at Window")
"RTN","ORWDPS32",67,0)
XPICK Q X
"RTN","ORWDPS32",68,0)
 ;
"RTN","ORWDPS32",69,0)
SCLIST ; from DLGSLCT, get options for service connected
"RTN","ORWDPS32",70,0)
 F X="0^No","1^Yes" S LST($$NXT)="i"_X
"RTN","ORWDPS32",71,0)
 Q
"RTN","ORWDPS32",72,0)
 ;
"RTN","ORWDPS32",73,0)
OISLCT(LST,OI,PSTYPE,ORVP) ; rtn for defaults for pharm OI
"RTN","ORWDPS32",74,0)
 N ILST S ILST=0
"RTN","ORWDPS32",75,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORWDPS32",76,0)
 S LST($$NXT)="~Dispense" D DISPDRG
"RTN","ORWDPS32",77,0)
 S LST($$NXT)="~Instruct" D INSTRCT
"RTN","ORWDPS32",78,0)
 S LST($$NXT)="~Route"    D ROUTE
"RTN","ORWDPS32",79,0)
 S LST($$NXT)="~Message"  D MESSAGE
"RTN","ORWDPS32",80,0)
 I $L($G(^TMP("PSJSCH",$J))) S LST($$NXT)="~DefSched",LST($$NXT)="d"_^($J)
"RTN","ORWDPS32",81,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORWDPS32",82,0)
 Q
"RTN","ORWDPS32",83,0)
 ;
"RTN","ORWDPS32",84,0)
DISPDRUG(LST,OI) ; list dispense drugs for an orderable item
"RTN","ORWDPS32",85,0)
 N ILST,PSTYPE S ILST=0,PSTYPE="U" D DISPDRG
"RTN","ORWDPS32",86,0)
 Q
"RTN","ORWDPS32",87,0)
 ;
"RTN","ORWDPS32",88,0)
DISPDRG ; from OISLCT, get disp drugs for this pharm OI
"RTN","ORWDPS32",89,0)
 N I,ORTMP,ORX
"RTN","ORWDPS32",90,0)
 S ORX=$T(ENDD^PSJORUTL),ORX=$L($P(ORX,";"),",")
"RTN","ORWDPS32",91,0)
 I ORX>3 D ENDD^PSJORUTL("^^^"_+$P($G(^ORD(101.43,OI,0)),"^",2),PSTYPE,.ORTMP,+ORVP)
"RTN","ORWDPS32",92,0)
 I ORX'>3 D ENDD^PSJORUTL("^^^"_+$P($G(^ORD(101.43,OI,0)),"^",2),PSTYPE,.ORTMP)
"RTN","ORWDPS32",93,0)
 S I="" F  S I=$O(ORTMP(I)) Q:I=""  D
"RTN","ORWDPS32",94,0)
 . I $P(ORTMP(I),U,4)="1" S $P(ORTMP(I),U,4)="NF"
"RTN","ORWDPS32",95,0)
 . S $P(ORTMP(I),U,3)="$"_$P(ORTMP(I),U,3)_" per "_$P(ORTMP(I),U,5)
"RTN","ORWDPS32",96,0)
 . S LST($$NXT)="i"_ORTMP(I)
"RTN","ORWDPS32",97,0)
 Q
"RTN","ORWDPS32",98,0)
INSTRCT ; from OISLCT, get list of potential instructs (based on drug form)
"RTN","ORWDPS32",99,0)
 N INOUN,NOUN,IINS,INS,VERB,INSREC
"RTN","ORWDPS32",100,0)
 D START^PSSJORDF(+$P(^ORD(101.43,OI,0),U,2))
"RTN","ORWDPS32",101,0)
 I PSTYPE="U" Q  ; don't use the instructions list for inpatients
"RTN","ORWDPS32",102,0)
 S IINS=0 F  S IINS=$O(^TMP("PSJINS",$J,IINS)) Q:'IINS  D
"RTN","ORWDPS32",103,0)
 . S INSREC=$G(^TMP("PSJINS",$J,IINS))
"RTN","ORWDPS32",104,0)
 . I '$D(VERB) S VERB=$P(INSREC,U)
"RTN","ORWDPS32",105,0)
 . I $L($P(INSREC,U,2)) S LST($$NXT)="i"_$P(INSREC,U,2)
"RTN","ORWDPS32",106,0)
 S LST($$NXT)="~Nouns"
"RTN","ORWDPS32",107,0)
 S INOUN=0 F  S INOUN=$O(^TMP("PSJNOUN",$J,INOUN)) Q:'INOUN  D
"RTN","ORWDPS32",108,0)
 . S LST($$NXT)="i"_$P(^TMP("PSJNOUN",$J,INOUN),U)
"RTN","ORWDPS32",109,0)
 I $D(VERB) S LST($$NXT)="~Verb",LST($$NXT)="d"_VERB
"RTN","ORWDPS32",110,0)
 ;
"RTN","ORWDPS32",111,0)
 Q
"RTN","ORWDPS32",112,0)
MIXED(X)   ; Return mixed case
"RTN","ORWDPS32",113,0)
 Q X  ;$E(X)_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","ORWDPS32",114,0)
 ;
"RTN","ORWDPS32",115,0)
ROUTE ; from OISLCT, get list of routes for the drug form
"RTN","ORWDPS32",116,0)
 ; ** NEED BOTH ABBREVIATION & NAME IN LIST BOX
"RTN","ORWDPS32",117,0)
 N I,CNT,ABBR,IEN,ROUT,X
"RTN","ORWDPS32",118,0)
 S I="" F  S I=$O(^TMP("PSJMR",$J,I)) Q:I=""  D
"RTN","ORWDPS32",119,0)
 . S ROUT=$P(^TMP("PSJMR",$J,I),U),ABBR=$P(^(I),U,2),IEN=$P(^(I),U,3)
"RTN","ORWDPS32",120,0)
 . S LST($$NXT)="i"_IEN_U_ROUT_U_ABBR
"RTN","ORWDPS32",121,0)
 . I I=1,IEN S LST($$NXT)="d"_IEN_U_ROUT ;_U_ABBR ; assume first always default
"RTN","ORWDPS32",122,0)
 S I="" F  S I=$O(^TMP("PSJMR",$J,I)) Q:I=""  D
"RTN","ORWDPS32",123,0)
 . S ROUT=$P(^TMP("PSJMR",$J,I),U),ABBR=$P(^(I),U,2),IEN=$P(^(I),U,3)
"RTN","ORWDPS32",124,0)
 . I $L(ABBR),(ABBR'=ROUT) S LST($$NXT)="i"_IEN_U_ABBR_" ("_ROUT_")"_U_ABBR
"RTN","ORWDPS32",125,0)
 Q
"RTN","ORWDPS32",126,0)
MESSAGE ; message
"RTN","ORWDPS32",127,0)
 S I=0 F  S I=$O(^ORD(101.43,OI,8,I)) Q:I'>0  S LST($$NXT)="t"_^(I,0)
"RTN","ORWDPS32",128,0)
 Q
"RTN","ORWDPS32",129,0)
ALLROUTE(LST) ; returns a list of all available med routes
"RTN","ORWDPS32",130,0)
 N I,X,ILST S ILST=0
"RTN","ORWDPS32",131,0)
 S I=0 F  S I=$O(^PS(51.2,I)) Q:'I  S X=^(I,0) D
"RTN","ORWDPS32",132,0)
 . I $P(X,U,4) S LST($$NXT)=I_U_$P(X,U)_U_$P(X,U,3)
"RTN","ORWDPS32",133,0)
 Q
"RTN","ORWDPS32",134,0)
VALROUTE(REC,X)        ; validates route name & returns IEN + abbreviation
"RTN","ORWDPS32",135,0)
 N ORLST,ABBR
"RTN","ORWDPS32",136,0)
 D FIND^DIC(51.2,"",1,"MO",X,1,,"I $P(^(0),U,4)=1",,"ORLST")
"RTN","ORWDPS32",137,0)
 I 'ORLST("DILIST",0) S REC=0 Q
"RTN","ORWDPS32",138,0)
 S X=$$UPPER(X),ABBR=ORLST("DILIST","ID",1,1)
"RTN","ORWDPS32",139,0)
 I '$L(ABBR) S ABBR=ORLST("DILIST",1,1)
"RTN","ORWDPS32",140,0)
 I ($$UPPER(ORLST("DILIST",1,1))'=X),($$UPPER(ABBR)'=X) S REC=0 Q
"RTN","ORWDPS32",141,0)
 S REC=ORLST("DILIST",2,1)_U_ABBR
"RTN","ORWDPS32",142,0)
 Q
"RTN","ORWDPS32",143,0)
AUTH(VAL,PRV) ; For inpatient meds, check restrictions
"RTN","ORWDPS32",144,0)
 N NAME,AUTH,INACT,X S VAL=0
"RTN","ORWDPS32",145,0)
 S NAME=$P($G(^VA(200,PRV,20)),U,2) S:'$L(NAME) NAME=$P(^(0),U)
"RTN","ORWDPS32",146,0)
 S X=$G(^VA(200,PRV,"PS")),AUTH=$P(X,U),INACT=$P(X,U,4)
"RTN","ORWDPS32",147,0)
 I 'AUTH!(INACT&(DT>INACT)) D  Q
"RTN","ORWDPS32",148,0)
 . S VAL="1^"_NAME_" is not authorized to write medication orders."
"RTN","ORWDPS32",149,0)
 I $D(^XUSEC("OREMAS",DUZ)),'$$GET^XPAR("ALL","OR OREMAS MED ORDERS") D  Q
"RTN","ORWDPS32",150,0)
 . S VAL="1^OREMAS key holders may not enter medication orders."
"RTN","ORWDPS32",151,0)
 Q
"RTN","ORWDPS32",152,0)
AUTHNVA(VAL,PRV) ; For Non-VA meds, check restrictions
"RTN","ORWDPS32",153,0)
 N NAME,AUTH,INACT,X S VAL=0
"RTN","ORWDPS32",154,0)
 S NAME=$P($G(^VA(200,PRV,20)),U,2) S:'$L(NAME) NAME=$P(^(0),U)
"RTN","ORWDPS32",155,0)
 S X=$G(^VA(200,PRV,"PS")),AUTH=$P(X,U),INACT=$P(X,U,4)
"RTN","ORWDPS32",156,0)
 I 'AUTH!(INACT&(DT>INACT)) D  Q
"RTN","ORWDPS32",157,0)
 . S VAL="1^"_NAME_" is not authorized to write medication orders."
"RTN","ORWDPS32",158,0)
 I $D(^XUSEC("OREMAS",DUZ)),'$$GET^XPAR("ALL","OR OREMAS NON-VA MED ORDERS") D  Q
"RTN","ORWDPS32",159,0)
 . S VAL="1^OREMAS key holders may not enter non-VA medication orders."
"RTN","ORWDPS32",160,0)
 Q
"RTN","ORWDPS32",161,0)
DRUGMSG(VAL,IEN)        ; return any message associated with a dispense drug
"RTN","ORWDPS32",162,0)
 N X S X=$$ENDCM^PSJORUTL(IEN)
"RTN","ORWDPS32",163,0)
 S VAL=$P(X,U,2)_U_$P(X,U,4)
"RTN","ORWDPS32",164,0)
 Q
"RTN","ORWDPS32",165,0)
MEDISIV(VAL,IEN)        ; return true if orderable item is IV medication
"RTN","ORWDPS32",166,0)
 S VAL=0
"RTN","ORWDPS32",167,0)
 I $P($G(^ORD(101.43,IEN,"PS")),U)=2 S VAL=1
"RTN","ORWDPS32",168,0)
 Q
"RTN","ORWDPS32",169,0)
ISSPLY(VAL,IEN) ; return true if orderable item is a supply
"RTN","ORWDPS32",170,0)
 S VAL=0
"RTN","ORWDPS32",171,0)
 I $P($G(^ORD(101.43,IEN,"PS")),U,5)=1 S VAL=1
"RTN","ORWDPS32",172,0)
 Q
"RTN","ORWDPS32",173,0)
IVAMT(VAL,OI,ORWTYP)     ; return UNITS^AMOUNT |^AMOUNT^AMOUNT...| for IV soln
"RTN","ORWDPS32",174,0)
 N I,PSOI,ORWY,AMT
"RTN","ORWDPS32",175,0)
 S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2)_ORWTYP,VAL=""
"RTN","ORWDPS32",176,0)
 D ENVOL^PSJORUT2(PSOI,.ORWY)
"RTN","ORWDPS32",177,0)
 I ORWTYP="B" D
"RTN","ORWDPS32",178,0)
 . S I=0 F  S I=$O(ORWY(I)) Q:I'>0  S AMT(+ORWY(I))=""
"RTN","ORWDPS32",179,0)
 . S AMT=0,VAL="ML" F  S AMT=$O(AMT(AMT)) Q:AMT'>0  S VAL=VAL_U_AMT
"RTN","ORWDPS32",180,0)
 I ORWTYP="A" D
"RTN","ORWDPS32",181,0)
 . S I=+$O(ORWY(0)) S VAL=$P($G(ORWY(I)),U,2)
"RTN","ORWDPS32",182,0)
 . I '$L(VAL) S VAL="ML^LITER^MCG^MG^GM^UNITS^IU^MEQ^MM^MU^THOUU"
"RTN","ORWDPS32",183,0)
 Q
"RTN","ORWDPS32",184,0)
VALRATE(VAL,X)   ; return "1" (true) if IV rate text is valid
"RTN","ORWDPS32",185,0)
 I $E($RE($$UPPER(X)),1,5)="RH/LM"  S X=$E(X,1,$L(X)-5)
"RTN","ORWDPS32",186,0)
 S X=$$TRIM(X)
"RTN","ORWDPS32",187,0)
 D ORINF^PSIVSP S VAL=$G(X) ;S OK=$S($D(X):1,1:0)
"RTN","ORWDPS32",188,0)
 Q
"RTN","ORWDPS32",189,0)
UPPER(X)        ; return uppercase
"RTN","ORWDPS32",190,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ORWDPS32",191,0)
 ;
"RTN","ORWDPS32",192,0)
TRIM(X) ; trim leading and trailing spaces
"RTN","ORWDPS32",193,0)
 S X=$RE(X) F  S:$E(X)=" " X=$E(X,2,999) Q:$E(X)'=" "  Q:'$L(X)  ;trail
"RTN","ORWDPS32",194,0)
 S X=$RE(X) F  S:$E(X)=" " X=$E(X,2,999) Q:$E(X)'=" "  Q:'$L(X)  ;lead
"RTN","ORWDPS32",195,0)
 Q X
"RTN","ORWDPS32",196,0)
SCSTS(VAL,ORVP,ORDRUG)  ; return service connected eligibility for patient
"RTN","ORWDPS32",197,0)
 N ORWP94 S ORWP94=$O(^ORD(101.41,"AB","PS MEDS",0))>0
"RTN","ORWDPS32",198,0)
 I $L($T(SC^PSOCP)),$$SC^PSOCP(+ORVP,+$G(ORDRUG)) S VAL=0 G XSCSTS
"RTN","ORWDPS32",199,0)
 I 'ORWP94,(+$$RXST^IBARXEU(+ORVP)>0) S VAL=0 G XSCSTS
"RTN","ORWDPS32",200,0)
 S VAL=1
"RTN","ORWDPS32",201,0)
XSCSTS Q
"RTN","ORWDPS32",202,0)
FORMALT(ORLST,IEN,PSTYPE) ; return a list of formulary alternatives
"RTN","ORWDPS32",203,0)
 D ENRFA^PSJORUTL(IEN,PSTYPE,.ORLST)
"RTN","ORWDPS32",204,0)
 S I=0 F  S I=$O(ORLST(I)) Q:'I  D
"RTN","ORWDPS32",205,0)
 . S OI=+$O(^ORD(101.43,"ID",+$P(ORLST(I),U,4)_";99PSP",0))
"RTN","ORWDPS32",206,0)
 . S $P(ORLST(I),U,4)=OI I OI S $P(ORLST(I),U,5)=$P(^ORD(101.43,OI,0),U)
"RTN","ORWDPS32",207,0)
 Q
"RTN","ORWDPS32",208,0)
VALSCH(OK,X,PSTYPE)    ; validate a schedule, return 1 if valid, 0 if not
"RTN","ORWDPS32",209,0)
 I '$L($T(EN^PSSGSGUI)) S OK=-1 Q
"RTN","ORWDPS32",210,0)
 I $E($T(EN^PSSGSGUI),1,4)="EN(X" D
"RTN","ORWDPS32",211,0)
 . N ORX S ORX=$G(X) D EN^PSSGSGUI(.ORX,$G(PSTYPE,"I"))
"RTN","ORWDPS32",212,0)
 . K X S:$D(ORX) X=ORX
"RTN","ORWDPS32",213,0)
 E  D
"RTN","ORWDPS32",214,0)
 . D EN^PSSGSGUI
"RTN","ORWDPS32",215,0)
 S OK=$S($D(X):1,1:0)
"RTN","ORWDPS32",216,0)
 Q
"RTN","ORWDPS32",217,0)
VALQTY(OK,X)    ; validate a quantity, return 1 if valid, 0 if not
"RTN","ORWDPS32",218,0)
 ; to be compatible with LM, make sure X is integer from 1 to 240
"RTN","ORWDPS32",219,0)
 ; this is based on the input transform from 52,7
"RTN","ORWDPS32",220,0)
 K:(+X'>0)!(+X>99999999)!(X'?.8N.1".".2N)!($L(X)>12) X
"RTN","ORWDPS32",221,0)
 S OK=$S($D(X):1,1:0)
"RTN","ORWDPS32",222,0)
 Q
"RTN","ORWDPS32",223,0)
DOSES(LST,OI) ; return doses for an orderable item  -  TEST ONLY
"RTN","ORWDPS32",224,0)
 N ORTMP,ORI,ORJ,ILST,NDF,VAPN,X,PSTYPE S PSTYPE="O"
"RTN","ORWDPS32",225,0)
 D ENDD^PSJORUTL("^^^"_+$P($G(^ORD(101.43,OI,0)),"^",2),PSTYPE,.ORTMP)
"RTN","ORWDPS32",226,0)
 S ORI=0 F  S ORI=$O(ORTMP(ORI)) Q:'ORI  S ORWDRG=+ORTMP(ORI) D
"RTN","ORWDPS32",227,0)
 . S NDF=$G(^PSDRUG(+ORWDRG,"ND")),VAPN=$P(NDF,U,3),NDF=+NDF
"RTN","ORWDPS32",228,0)
 . S X=$$DFSU^PSNAPIS(NDF,VAPN)
"RTN","ORWDPS32",229,0)
 . S LSTA($P(X,U,4),$P(X,U,6))=""
"RTN","ORWDPS32",230,0)
 . I +$P(X,U,4)=$P(X,U,4) S LSTA($P(X,U,4)*2,$P(X,U,6))=""
"RTN","ORWDPS32",231,0)
 S ORI="",ILST=0 F  S ORI=$O(LSTA(ORI)) Q:ORI=""  D
"RTN","ORWDPS32",232,0)
 . S ORJ="" F  S ORJ=$O(LSTA(ORI,ORJ)) Q:ORJ=""  D
"RTN","ORWDPS32",233,0)
 . . S ILST=ILST+1,LST(ILST)=ORI_" "_ORJ
"RTN","ORWDPS32",234,0)
 Q
"RTN","ORWDPS4")
0^41^B16415294
"RTN","ORWDPS4",1,0)
ORWDPS4 ;; SLC/JDL - Order Dialogs CO-PAY and Other;[12/31/01 6:38pm] [4/29/04 8:47am]
"RTN","ORWDPS4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**116,125,131,141,173,187,190**;Dec 17, 1997
"RTN","ORWDPS4",3,0)
 ;
"RTN","ORWDPS4",4,0)
CPLST(TEST,PTIFN,ORIFNS) ; --Get CP questions
"RTN","ORWDPS4",5,0)
 N ORIFN,ORDA,ORI,ORPSO,CPX
"RTN","ORWDPS4",6,0)
 S ORI=0,ORPSO=+$O(^DIC(9.4,"C","PSO",0))
"RTN","ORWDPS4",7,0)
 F  S ORI=$O(ORIFNS(ORI)) Q:'ORI  D
"RTN","ORWDPS4",8,0)
 .S ORIFN=+ORIFNS(ORI),ORDA=$P(ORIFNS(ORI),";",2)
"RTN","ORWDPS4",9,0)
 .I $D(^OR(100,ORIFN,0)),($P(^OR(100,ORIFN,0),U,14)=ORPSO) D
"RTN","ORWDPS4",10,0)
 ..S CPX=$$SC(ORIFN)
"RTN","ORWDPS4",11,0)
 ..I $L(CPX)>1 S TEST(ORIFN)=ORIFN_";"_ORDA_CPX
"RTN","ORWDPS4",12,0)
 K PTIFN,ORIFN,ORDA,ORI,CPX
"RTN","ORWDPS4",13,0)
 Q
"RTN","ORWDPS4",14,0)
 ;
"RTN","ORWDPS4",15,0)
CPINFO(Y,ORINFO) ; -- Save reponses to CP questions
"RTN","ORWDPS4",16,0)
 Q:'$D(ORINFO)
"RTN","ORWDPS4",17,0)
 N ORIFN,ORI,ORX,ANS S ORI=0
"RTN","ORWDPS4",18,0)
 F  S ORI=$O(ORINFO(ORI)) Q:'ORI  D
"RTN","ORWDPS4",19,0)
 .S ORIFN=$P($P(ORINFO(ORI),U,1),";",1)
"RTN","ORWDPS4",20,0)
 .S ANS=$P(ORINFO(ORI),U,2)
"RTN","ORWDPS4",21,0)
 .D REFMT(.ORX,ANS)
"RTN","ORWDPS4",22,0)
 .D SC^ORCSAVE2(.ORX,ORIFN)
"RTN","ORWDPS4",23,0)
 S Y=1
"RTN","ORWDPS4",24,0)
 K ORIFN,ORX,ORI,ANS
"RTN","ORWDPS4",25,0)
 Q
"RTN","ORWDPS4",26,0)
 ;
"RTN","ORWDPS4",27,0)
SC(ORIFN) ; -- Dialog validation, to ask CP questions
"RTN","ORWDPS4",28,0)
 ;Expects ORIFN and ORDA
"RTN","ORWDPS4",29,0)
 ;
"RTN","ORWDPS4",30,0)
 N DR S DR=""
"RTN","ORWDPS4",31,0)
 I '$L($T(SCNEW^PSOCP))!('$G(ORIFN))!('$G(ORDA)) Q DR
"RTN","ORWDPS4",32,0)
 I $P($G(^OR(100,ORIFN,8,ORDA,0)),U,2)'="NW" Q DR
"RTN","ORWDPS4",33,0)
 ;
"RTN","ORWDPS4",34,0)
 N OR3,ORDRUG,ORENEW,ORX,I,X,Y,CPNODE,ASC,AAO,AIR,AEC,AMST,AHNC,ACV
"RTN","ORWDPS4",35,0)
 S ORX=""
"RTN","ORWDPS4",36,0)
 ;--Only new, renew, edited, copied outpatient order can continue...
"RTN","ORWDPS4",37,0)
 S OR3=$G(^OR(100,ORIFN,3)),X=$P(OR3,U,11) I (X'=0)&((X'=2)&(X'=1)) Q DR
"RTN","ORWDPS4",38,0)
 I (X=1)&($D(^OR(100,ORIFN,5))=0) Q DR
"RTN","ORWDPS4",39,0)
 I $D(^OR(100,ORIFN,5))>0 D
"RTN","ORWDPS4",40,0)
 .S CPNODE=$G(^OR(100,ORIFN,5))
"RTN","ORWDPS4",41,0)
 .S ASC=$S($L($P(CPNODE,"^",1)):"SC;"_$P(CPNODE,"^",1),1:"")
"RTN","ORWDPS4",42,0)
 .S DR=$S($L(ASC):DR_U_ASC,1:DR)
"RTN","ORWDPS4",43,0)
 .S AAO=$S($L($P(CPNODE,"^",3)):"AO;"_$P(CPNODE,"^",3),1:"")
"RTN","ORWDPS4",44,0)
 .S DR=$S($L(AAO):DR_U_AAO,1:DR)
"RTN","ORWDPS4",45,0)
 .S AIR=$S($L($P(CPNODE,"^",4)):"IR;"_$P(CPNODE,"^",4),1:"")
"RTN","ORWDPS4",46,0)
 .S DR=$S($L(AIR):DR_U_AIR,1:DR)
"RTN","ORWDPS4",47,0)
 .S AEC=$S($L($P(CPNODE,"^",5)):"EC;"_$P(CPNODE,"^",5),1:"")
"RTN","ORWDPS4",48,0)
 .S DR=$S($L(AEC):DR_U_AEC,1:DR)
"RTN","ORWDPS4",49,0)
 .S AMST=$S($L($P(CPNODE,"^",2)):"MST;"_$P(CPNODE,"^",2),1:"")
"RTN","ORWDPS4",50,0)
 .S DR=$S($L(AMST):DR_U_AMST,1:DR)
"RTN","ORWDPS4",51,0)
 .S AHNC=$S($L($P(CPNODE,"^",6)):"HNC;"_$P(CPNODE,"^",6),1:"")
"RTN","ORWDPS4",52,0)
 .S DR=$S($L(AHNC):DR_U_AHNC,1:DR)
"RTN","ORWDPS4",53,0)
 .S ACV=$S($L($P(CPNODE,"^",7)):"CV;"_$P(CPNODE,"^",7),1:"")
"RTN","ORWDPS4",54,0)
 .S DR=$S($L(ACV):DR_U_ACV,1:DR)
"RTN","ORWDPS4",55,0)
 .D CPCOMP(.DR)
"RTN","ORWDPS4",56,0)
 .K ASC,AAO,AIR,AEC,AMST,AHNC,CPNODE
"RTN","ORWDPS4",57,0)
 I $L(DR)>0 Q DR
"RTN","ORWDPS4",58,0)
 I X=2 S Y=$P(OR3,U,5),ORENEW=$G(^OR(100,Y,4)) ;get PS# if renewal
"RTN","ORWDPS4",59,0)
 S ORDRUG=$$VALUE^ORCSAVE2(ORIFN,"DRUG")
"RTN","ORWDPS4",60,0)
 D SCNEW^PSOCP(.ORX,+PTIFN,ORDRUG,$G(ORENEW)) I '$D(ORX) Q DR
"RTN","ORWDPS4",61,0)
 F I="SC","AO","IR","EC","MST","HNC","CV" D
"RTN","ORWDPS4",62,0)
 . I $D(ORX(I)) S DR=DR_U_I_$S($L(ORX(I)):";"_ORX(I),1:"")
"RTN","ORWDPS4",63,0)
 Q DR
"RTN","ORWDPS4",64,0)
REFMT(ORX,INFO) ;
"RTN","ORWDPS4",65,0)
 ;"U": Unchecked ("NO") 
"RTN","ORWDPS4",66,0)
 ;"C": Checked ("YES")
"RTN","ORWDPS4",67,0)
 ;"N" : Question not asked
"RTN","ORWDPS4",68,0)
 N RST,RST1
"RTN","ORWDPS4",69,0)
 S RST=""
"RTN","ORWDPS4",70,0)
 F I=1:1:$L(INFO)  S RST=RST_U_$S($E(INFO,I)="U":0,$E(INFO,I)="C":1,1:"")
"RTN","ORWDPS4",71,0)
 S RST1=$E(RST,2,$L(RST))
"RTN","ORWDPS4",72,0)
 S ORX("SC")=$P(RST1,U,1)
"RTN","ORWDPS4",73,0)
 S ORX("MST")=$P(RST1,U,5)
"RTN","ORWDPS4",74,0)
 S ORX("AO")=$P(RST1,U,2)
"RTN","ORWDPS4",75,0)
 S ORX("IR")=$P(RST1,U,3)
"RTN","ORWDPS4",76,0)
 S ORX("EC")=$P(RST1,U,4)
"RTN","ORWDPS4",77,0)
 S ORX("HNC")=$P(RST1,U,6)
"RTN","ORWDPS4",78,0)
 S ORX("CV")=$P(RST1,U,7)
"RTN","ORWDPS4",79,0)
 K RST,RST1
"RTN","ORWDPS4",80,0)
 Q
"RTN","ORWDPS4",81,0)
CPCOMP(PREX) ; -- Compare the existed exemptions with new exemption questions
"RTN","ORWDPS4",82,0)
 N ORX1,ORDRUG1,CPI,LSTCP,TMPVAL
"RTN","ORWDPS4",83,0)
 S LSTCP=""
"RTN","ORWDPS4",84,0)
 S ORDRUG1=$$VALUE^ORCSAVE2(ORIFN,"DRUG")
"RTN","ORWDPS4",85,0)
 D SCNEW^PSOCP(.ORX1,+PTIFN,ORDRUG1,$G(ORENEW)) I '$D(ORX1) Q
"RTN","ORWDPS4",86,0)
 F CPI="SC","AO","IR","EC","MST","HNC","CV" D
"RTN","ORWDPS4",87,0)
 . I $D(ORX1(CPI)) D
"RTN","ORWDPS4",88,0)
 . . S TMPVAL=""
"RTN","ORWDPS4",89,0)
 . . I $F(PREX,CPI) D
"RTN","ORWDPS4",90,0)
 . . . S TMPVAL=+$E(PREX,$F(PREX,CPI)+1)
"RTN","ORWDPS4",91,0)
 . . . I $L(TMPVAL),((TMPVAL=0)!(TMPVAL=1)) S TMPVAL=CPI_";"_TMPVAL
"RTN","ORWDPS4",92,0)
 . . . E  S TMPVAL=CPI
"RTN","ORWDPS4",93,0)
 . . E  S TMPVAL=CPI
"RTN","ORWDPS4",94,0)
 . . S LSTCP=LSTCP_U_TMPVAL
"RTN","ORWDPS4",95,0)
 S PREX=LSTCP
"RTN","ORWDPS4",96,0)
 Q
"RTN","ORWDPS4",97,0)
IPOD4OP(ORY,ORID) ;True: is an Inpt (IV OI) order on an OutPatient
"RTN","ORWDPS4",98,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDPS4",99,0)
 S ORY=0
"RTN","ORWDPS4",100,0)
 N APKG,ADLG,ADG,APTCLS,RXDG,UDDLG,IPPKG
"RTN","ORWDPS4",101,0)
 S (RXDG,UDDLG,IPPKG)=0
"RTN","ORWDPS4",102,0)
 S RXDG=+$O(^ORD(100.98,"B","O RX",0))
"RTN","ORWDPS4",103,0)
 S UDDLG=+$O(^ORD(101.41,"B","PSJ OR PAT OE",0))
"RTN","ORWDPS4",104,0)
 S IPPKG=+$O(^DIC(9.4,"B","INPATIENT MEDICATIONS",0))
"RTN","ORWDPS4",105,0)
 S ADLG=+$P($G(^OR(100,+ORID,0)),U,5)
"RTN","ORWDPS4",106,0)
 S ADG=$P($G(^OR(100,+ORID,0)),U,11)
"RTN","ORWDPS4",107,0)
 S APKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDPS4",108,0)
 S APTCLS=$P($G(^OR(100,+ORID,0)),U,12)
"RTN","ORWDPS4",109,0)
 I ADG=RXDG,(ADLG=UDDLG),(APKG=IPPKG),(APTCLS="I") S ORY=1
"RTN","ORWDPS4",110,0)
 Q
"RTN","ORWDPS4",111,0)
 ;
"RTN","ORWDPS4",112,0)
UPDTDG(ORY,ORID) ;Update Inpt order for outpatient DG to Inpt DG
"RTN","ORWDPS4",113,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDPS4",114,0)
 N UDDG
"RTN","ORWDPS4",115,0)
 S UDDG=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORWDPS4",116,0)
 S $P(^OR(100,+ORID,0),U,11)=UDDG
"RTN","ORWDPS4",117,0)
 Q
"RTN","ORWDPS5")
0^2^B3422338
"RTN","ORWDPS5",1,0)
ORWDPS5 ;SLC/JLI - CPRS Orders Utility ; 8/15/2002 11AM
"RTN","ORWDPS5",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**149,190**;Dec 17, 1997
"RTN","ORWDPS5",3,0)
LESGRP(ORY,ORLES) ;Return all of the orders' display groups LES checked
"RTN","ORWDPS5",4,0)
 ;LES will check the orders belonging to the following display group
"RTN","ORWDPS5",5,0)
 ; 1.  LAB/LABORATORY  ORDERS
"RTN","ORWDPS5",6,0)
 ; 2.  BLOOD BANK      ORDERS
"RTN","ORWDPS5",7,0)
 ; 3.  CHEMISTRY       ORDERS
"RTN","ORWDPS5",8,0)
 N LABID,BLDBKID,CHMID
"RTN","ORWDPS5",9,0)
 S (LABID,BLDBKID,CHMID,ORY)=0
"RTN","ORWDPS5",10,0)
 S:$D(^ORD(100.98,"B","LAB")) LABID=$O(^ORD(100.98,"B","LAB",0))
"RTN","ORWDPS5",11,0)
 I 'LABID S:$D(^ORD(100.98,"B","LABORATORY")) LABID=$O(^ORD(100.98,"B","LABORATORY",0))
"RTN","ORWDPS5",12,0)
 S:$D(^ORD(100.98,"B","BLOOD BANK")) BLDBKID=$O(^ORD(100.98,"B","BLOOD BANK",0))
"RTN","ORWDPS5",13,0)
 S:$D(^ORD(100.98,"B","CHEMISTRY")) CHMID=$O(^ORD(100.98,"B","CHEMISTRY",0))
"RTN","ORWDPS5",14,0)
 I ('LABID)!('BLDBKID!('CHMID)) Q
"RTN","ORWDPS5",15,0)
 S ORY=LABID_U_BLDBKID_U_CHMID
"RTN","ORWDPS5",16,0)
 Q
"RTN","ORWDPS5",17,0)
 ;
"RTN","ORWDPS5",18,0)
LESAPI(ORY,FLDS) ;Call LES Api from inside CPRS for validating changed lab order
"RTN","ORWDPS5",19,0)
 ; FLDS = DFN^TEST^ORL^ORNP^ORDT
"RTN","ORWDPS5",20,0)
 ; DFN:  Patient DFN (pointer to #2)
"RTN","ORWDPS5",21,0)
 ; TEST: Lab Test IFN (pointer to #101.43)
"RTN","ORWDPS5",22,0)
 ; ORL:  Patient Location (pointer to #44)
"RTN","ORWDPS5",23,0)
 ; ORNP: Provider IEN (pointer to #200)
"RTN","ORWDPS5",24,0)
 ; ORDT: Collection date/time (fileman format)
"RTN","ORWDPS5",25,0)
 N DFNL,TESTL,ORLOCL,ORNPL,ORDTL,HAVELES
"RTN","ORWDPS5",26,0)
 S (DFNL,TESTL,ORLOCL,ORNPL,ORDTL,HAVELES)=""
"RTN","ORWDPS5",27,0)
 S DFNL=$P(FLDS,U,1)
"RTN","ORWDPS5",28,0)
 S TESTL=$P(FLDS,U,2)
"RTN","ORWDPS5",29,0)
 S ORLOCL=$P(FLDS,U,3)
"RTN","ORWDPS5",30,0)
 S ORNPL=$P(FLDS,U,4)
"RTN","ORWDPS5",31,0)
 S ORDTL=$P(FLDS,U,5)
"RTN","ORWDPS5",32,0)
 S HAVELES=$TEXT(COM^AVJLES)
"RTN","ORWDPS5",33,0)
 I $L(HAVELES) D COM^AVJLES(.ORY,DFNL,TESTL,ORLOCL,ORNPL,ORDTL)
"RTN","ORWDPS5",34,0)
 S ORY(1)=""
"RTN","ORWDPS5",35,0)
 Q
"RTN","ORWDPS5",36,0)
 ;
"RTN","ORWDPS5",37,0)
ISVTP(ORY,ODIEN) ;True: is verbal or telephoned or policy order
"RTN","ORWDPS5",38,0)
 S ORY=0
"RTN","ORWDPS5",39,0)
 Q:'$D(^OR(100,+ODIEN,0))
"RTN","ORWDPS5",40,0)
 N VERB,TEL,POL,LSTACT,NATR
"RTN","ORWDPS5",41,0)
 S (VERB,TEL,POL,LSTACT)=0,NATR=""
"RTN","ORWDPS5",42,0)
 S VERB=$O(^ORD(100.02,"B","VERBAL",0))
"RTN","ORWDPS5",43,0)
 S TEL=$O(^ORD(100.02,"B","TELEPHONED",0))
"RTN","ORWDPS5",44,0)
 S POL=$O(^ORD(100.02,"B","POLICY",0))
"RTN","ORWDPS5",45,0)
 S LSTACT=$O(^OR(100,+ODIEN,8,"?"),-1)
"RTN","ORWDPS5",46,0)
 S NATR=$P(^OR(100,+ODIEN,8,LSTACT,0),U,12)
"RTN","ORWDPS5",47,0)
 I (NATR=VERB)!(NATR=TEL)!(NATR=POL) S ORY=1
"RTN","ORWDPS5",48,0)
 Q
"RTN","ORWDX")
0^33^B71800907
"RTN","ORWDX",1,0)
ORWDX ; SLC/KCM/REV/JLI - Order dailog utilities ;2/20/03 9:30AM
"RTN","ORWDX",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,132,141,164,178,187,190**;Dec 17, 1997
"RTN","ORWDX",3,0)
NXT() ; -- Gets index in array
"RTN","ORWDX",4,0)
 S ILST=ILST+1
"RTN","ORWDX",5,0)
 Q ILST
"RTN","ORWDX",6,0)
ORDITM(Y,FROM,DIR,XREF) ; Subset of orderable items
"RTN","ORWDX",7,0)
 ; Y(n)=IEN^.01 Name^.01 Name  -or-  IEN^Synonym <.01 Name>^.01 Name
"RTN","ORWDX",8,0)
 N I,IEN,CNT,X,DTXT,CURTM
"RTN","ORWDX",9,0)
 S I=0,CNT=44,CURTM=$$NOW^XLFDT
"RTN","ORWDX",10,0)
 F  Q:I'<CNT  S FROM=$O(^ORD(101.43,XREF,FROM),DIR) Q:FROM=""  D
"RTN","ORWDX",11,0)
 . S IEN="" F  S IEN=$O(^ORD(101.43,XREF,FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWDX",12,0)
 . . S X=^ORD(101.43,XREF,FROM,IEN)
"RTN","ORWDX",13,0)
 . . I +$P(X,U,3),$P(X,U,3)<CURTM Q
"RTN","ORWDX",14,0)
 . . Q:$P(X,U,5)  S I=I+1
"RTN","ORWDX",15,0)
 . . I 'X S Y(I)=IEN_U_$P(X,U,2)_U_$P(X,U,2)
"RTN","ORWDX",16,0)
 . . E  S Y(I)=IEN_U_$P(X,U,2)_$C(9)_"<"_$P(X,U,4)_">"_U_$P(X,U,4)
"RTN","ORWDX",17,0)
 Q
"RTN","ORWDX",18,0)
ODITMBC(Y,XREF,ODLST) ;
"RTN","ORWDX",19,0)
 N CNT,NM,XRF
"RTN","ORWDX",20,0)
 S CNT=0,NM=0,XRF=XREF
"RTN","ORWDX",21,0)
 F  S CNT=$O(ODLST(CNT)) Q:'CNT  D FNDINFO(.Y,ODLST(CNT))
"RTN","ORWDX",22,0)
 Q
"RTN","ORWDX",23,0)
FNDINFO(Y,ODIEN) ;
"RTN","ORWDX",24,0)
 N ODI,CRTM,FRM,XX
"RTN","ORWDX",25,0)
 S FRM="",CRTM=$$NOW^XLFDT
"RTN","ORWDX",26,0)
 F  S FRM=$O(^ORD(101.43,XRF,FRM)) Q:FRM=""  D
"RTN","ORWDX",27,0)
 . S ODI=0 F  S ODI=$O(^ORD(101.43,XRF,FRM,ODI)) Q:'ODI  D
"RTN","ORWDX",28,0)
 .. S XX=^ORD(101.43,XRF,FRM,ODI)
"RTN","ORWDX",29,0)
 .. I +$P(XX,U,3),$P(XX,U,3)<CRTM Q
"RTN","ORWDX",30,0)
 .. I ODI=ODIEN D
"RTN","ORWDX",31,0)
 ... S NM=NM+1
"RTN","ORWDX",32,0)
 ... I 'XX S Y(NM)=ODIEN_U_$P(XX,U,2)_U_$P(XX,U,2)
"RTN","ORWDX",33,0)
 ... E  S Y(NM)=ODIEN_U_$P(XX,U,2)_$C(9)_"<"_$P(XX,U,4)_">"_U_$P(XX,U,4)
"RTN","ORWDX",34,0)
 Q
"RTN","ORWDX",35,0)
DLGDEF(LST,DLG) ; Format mapping for a dlg
"RTN","ORWDX",36,0)
 N I,IEN,ILST,X0,X2,XW  S ILST=0
"RTN","ORWDX",37,0)
 I $O(^ORD(101.41,"AB",DLG,0))>0 S DLG=$O(^ORD(101.41,"AB",DLG,0))
"RTN","ORWDX",38,0)
 E  S DLG=$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWDX",39,0)
 Q:'DLG
"RTN","ORWDX",40,0)
 S I=0 F  S I=$O(^ORD(101.41,DLG,10,I)) Q:I'>0  D
"RTN","ORWDX",41,0)
 . S X0=$G(^ORD(101.41,DLG,10,I,0)),X2=$G(^(2)),IEN=+$P(X0,U,2)
"RTN","ORWDX",42,0)
 . S ILST=ILST+1,LST(ILST)=U_IEN_U_$P(X2,U,1,7)
"RTN","ORWDX",43,0)
 . I $P(X0,U,11) S $P(LST(ILST),U,11)=1
"RTN","ORWDX",44,0)
 . S $P(LST(ILST),U)=$P($G(^ORD(101.41,IEN,1)),U,3)
"RTN","ORWDX",45,0)
 . I $P($G(^ORD(101.41,IEN,0)),U)="OR GTX ADDITIVE" S $P(LST(ILST),U)="ADDITIVE"
"RTN","ORWDX",46,0)
 . I $L($P(LST(ILST),U))=0 S $P(LST(ILST),U)="ID"_IEN
"RTN","ORWDX",47,0)
 . I $D(^ORD(101.41,DLG,10,"DAD",IEN)) D
"RTN","ORWDX",48,0)
 .. N SEQ,DA,CHILD S CHILD=""
"RTN","ORWDX",49,0)
 .. S SEQ=0 F  S SEQ=$O(^ORD(101.41,DLG,10,"DAD",IEN,SEQ)) Q:'SEQ  D
"RTN","ORWDX",50,0)
 ... S DA=0 F  S DA=$O(^ORD(101.41,DLG,10,"DAD",IEN,SEQ,DA)) Q:'DA  D
"RTN","ORWDX",51,0)
 .... S CHILD=CHILD_+$P($G(^ORD(101.41,DLG,10,DA,0)),U,2)_"~"
"RTN","ORWDX",52,0)
 .. S $P(LST(ILST),U,10)=CHILD
"RTN","ORWDX",53,0)
 Q
"RTN","ORWDX",54,0)
DLGQUIK(LST,QO) ;(NOT USED)
"RTN","ORWDX",55,0)
 D LOADRSP(.LST,QO)
"RTN","ORWDX",56,0)
 Q
"RTN","ORWDX",57,0)
LOADRSP(LST,RSPID)      ; Load responses from 101.41 or 100
"RTN","ORWDX",58,0)
 ; RSPID:  C123456;1-3243 = cached copy,   134-3234 = cached quick
"RTN","ORWDX",59,0)
 ;         X123456;1      = change order,  134      = quick dialog
"RTN","ORWDX",60,0)
 N I,J,DLG,INST,ID,VAL,ILST,ROOT S ROOT=""
"RTN","ORWDX",61,0)
 I RSPID["-" S ROOT="^TMP(""ORWDXMQ"",$J,"""_RSPID_""")" G XROOT
"RTN","ORWDX",62,0)
 I $E(RSPID)="X" S ROOT="^OR(100,"_+$P(RSPID,"X",2)_",4.5)"  G XROOT
"RTN","ORWDX",63,0)
 I +RSPID=RSPID  S ROOT="^ORD(101.41,"_+RSPID_",6)" G XROOT
"RTN","ORWDX",64,0)
 Q:ROOT=""
"RTN","ORWDX",65,0)
XROOT S (ILST,I)=0 F  S I=$O(@ROOT@(I)) Q:I'>0  D
"RTN","ORWDX",66,0)
 . S DLG=$P(@ROOT@(I,0),U,2),INST=$P(^(0),U,3)
"RTN","ORWDX",67,0)
 . S ID=$P($G(^ORD(101.41,DLG,1)),U,3)
"RTN","ORWDX",68,0)
 . I '$L(ID) S ID="ID"_DLG
"RTN","ORWDX",69,0)
 . S VAL=$G(@ROOT@(I,1))
"RTN","ORWDX",70,0)
 . I $P($G(^ORD(101.41,DLG,0)),U)="OR GTX ADDITIVE" S ID="ADDITIVE"
"RTN","ORWDX",71,0)
 . I $E(RSPID)="C",(ID="START"),VAL Q  ; skip literal start time on copy
"RTN","ORWDX",72,0)
 . S LST($$NXT)="~"_DLG_U_INST_U_ID
"RTN","ORWDX",73,0)
 . I $L(VAL) D
"RTN","ORWDX",74,0)
 .. S LST($$NXT)="i"_VAL,LST($$NXT)="e"_$$EXTVAL(VAL,DLG)
"RTN","ORWDX",75,0)
 . I $D(@ROOT@(I,2))>1 D
"RTN","ORWDX",76,0)
 .. S J=0 F  S J=$O(@ROOT@(I,2,J)) Q:J'>0  D
"RTN","ORWDX",77,0)
 ... S LST($$NXT)="t"_$G(@ROOT@(I,2,J,0))
"RTN","ORWDX",78,0)
 I $E(ROOT,1,4)="^TMP" K ^TMP("ORWDXMQ",$J)
"RTN","ORWDX",79,0)
 Q
"RTN","ORWDX",80,0)
SAVE(REC,ORVP,ORNP,ORL,DLG,ORDG,ORIT,ORIFN,ORDIALOG,ORDEA,ORAPPT,ORSRC) ;
"RTN","ORWDX",81,0)
 ; ORVP=DFN, ORNP=Provider, ORL=Location, DLG=Order Dialog,
"RTN","ORWDX",82,0)
 ; ORDG=Display Group, ORIT=Quick Order Dialog, ORAPPT=Appointment
"RTN","ORWDX",83,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORLEAD,ORTRAIL,ORPKG,ORWP94,ORCATFN,OREVTYPE,ONPASS
"RTN","ORWDX",84,0)
 S ORCATFN=""
"RTN","ORWDX",85,0)
 I $L($P(DLG,U,2)) S ORCATFN=$P(DLG,U,2),DLG=$P(DLG,U,1)
"RTN","ORWDX",86,0)
 I $G(ORDIALOG("ORTS")) S ORTS=ORDIALOG("ORTS") K ORDIALOG("ORTS")
"RTN","ORWDX",87,0)
 I $G(ORDIALOG("ORSLOG")) S ORLOG=ORDIALOG("ORSLOG") K ORDIALOG("ORSLOG")
"RTN","ORWDX",88,0)
 I $D(ORDIALOG("OREVENT")) S OREVENT=ORDIALOG("OREVENT") K ORDIALOG("OREVENT")
"RTN","ORWDX",89,0)
 I $L($G(OREVENT)) D
"RTN","ORWDX",90,0)
 . S ONPASS=0
"RTN","ORWDX",91,0)
 . S OREVTYPE=$$TYPE^OREVNTX(OREVENT)
"RTN","ORWDX",92,0)
 . I OREVTYPE="T" D ISPASS^OREVNTX1(.ONPASS,+OREVENT,"T")
"RTN","ORWDX",93,0)
 . S ORCAT=$S(OREVTYPE="A":"I",OREVTYPE="T":"I",ONPASS=1:"O",1:"O")
"RTN","ORWDX",94,0)
 E  S ORCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDX",95,0)
 I DLG="PS MEDS" S ORWP94=1 D
"RTN","ORWDX",96,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO SUPPLY",0)) S DLG="PSO SUPPLY"
"RTN","ORWDX",97,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO OERR",0)) S DLG="PSO OERR"
"RTN","ORWDX",98,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSJ OR PAT OE",0)) S DLG="PSJ OR PAT OE"
"RTN","ORWDX",99,0)
 I DLG="PSO OERR" S ORCAT="O" I $G(OREVENT("EFFECTIVE")) D
"RTN","ORWDX",100,0)
 . S ORDIALOG($O(^ORD(101.41,"B","OR GTX START DATE"_$S($G(ORWP94):"/TIME",1:""),0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDX",101,0)
 I DLG="PSJ OR PAT OE" S ORCAT="I"
"RTN","ORWDX",102,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDX",103,0)
 K:'ORDG ORDG K:'ORIT ORIT ; Dgrp & Quick must be non-zero
"RTN","ORWDX",104,0)
 M ORCHECK=ORDIALOG("ORCHECK") K ORDIALOG("ORCHECK")
"RTN","ORWDX",105,0)
 S ORDIALOG=$O(^ORD(101.41,"AB",DLG,0))
"RTN","ORWDX",106,0)
 I 'ORDIALOG S ORDIALOG=$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWDX",107,0)
 I $D(ORDIALOG("ORLEAD")) S ORLEAD=ORDIALOG("ORLEAD")
"RTN","ORWDX",108,0)
 I $D(ORDIALOG("ORTRAIL")) S ORTRAIL=ORDIALOG("ORTRAIL")
"RTN","ORWDX",109,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORWDX",110,0)
 I $L(ORCATFN) S ORCAT=ORCATFN
"RTN","ORWDX",111,0)
 I $G(ORWP94) D
"RTN","ORWDX",112,0)
 . N SIGPRMT S SIGPRMT=$O(^ORD(101.41,"B","OR GTX SIG",0))
"RTN","ORWDX",113,0)
 . N INSPRMT S INSPRMT=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDX",114,0)
 . I $L($G(ORDIALOG(SIGPRMT,1))) S ORDIALOG(INSPRMT,"FORMAT")="@"
"RTN","ORWDX",115,0)
 . I ORCAT="O" S ORPKG=$O(^DIC(9.4,"C","PSO",0))
"RTN","ORWDX",116,0)
 . I ORCAT="I" S ORPKG=$O(^DIC(9.4,"C","PSJ",0))
"RTN","ORWDX",117,0)
 S ORSRC=$G(ORSRC)
"RTN","ORWDX",118,0)
 D DELPI^ORWDX1 ;delete empty PI
"RTN","ORWDX",119,0)
 I $G(ORIFN)="" D  ; new order
"RTN","ORWDX",120,0)
 . D EN^ORCSAVE
"RTN","ORWDX",121,0)
 . S REC="" I ORIFN D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",122,0)
 . I '$D(^TMP("ORECALL",$J,ORDIALOG)) M ^TMP("ORECALL",$J,ORDIALOG)=ORDIALOG
"RTN","ORWDX",123,0)
 E  D
"RTN","ORWDX",124,0)
 . N OR0
"RTN","ORWDX",125,0)
 . S OR0=$G(^OR(100,+ORIFN,0)),ORSTS=$P($G(^(3)),U,3),ORDG=$P(OR0,U,11)
"RTN","ORWDX",126,0)
 . I $L($P(OR0,U,17)),ORSTS=10 S OREVENT=$P(OR0,U,17),OREVENT("TS")=$P(OR0,U,13)
"RTN","ORWDX",127,0)
 . D XX^ORCSAVE ; edit order
"RTN","ORWDX",128,0)
 . S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",129,0)
 Q
"RTN","ORWDX",130,0)
SENDED(ORWLST,ORIENS,TS,LOC) ; Release EDOs to svc
"RTN","ORWDX",131,0)
 N OK,ORVP,ORWERR,ORSIGST,ORDA,ORNATURE,ORIX,X,PTEVT,ORIFN
"RTN","ORWDX",132,0)
 S ORWERR="",ORIX=0,LOC=LOC_";SC("
"RTN","ORWDX",133,0)
 F  S ORIX=$O(ORIENS(ORIX)) Q:'ORIX  D
"RTN","ORWDX",134,0)
 . S ORIFN=ORIENS(ORIX)
"RTN","ORWDX",135,0)
 . S ORDA=$P(ORIFN,";",2) S:'ORDA ORDA=1
"RTN","ORWDX",136,0)
 . S ORVP=$P($G(^OR(100,+ORIFN,0)),U,2)
"RTN","ORWDX",137,0)
 . I $D(^OR(100,+ORIFN,8,ORDA,0)) D
"RTN","ORWDX",138,0)
 .. S ORSIGST=$P($G(^(0)),U,4)
"RTN","ORWDX",139,0)
 .. S ORNATURE=$P($G(^(0)),U,12)
"RTN","ORWDX",140,0)
 . S:$G(LOC) $P(^OR(100,+ORIFN,0),U,10)=LOC ;set location
"RTN","ORWDX",141,0)
 . S:$G(TS) $P(^OR(100,+ORIFN,0),U,13)=TS ;set specialty
"RTN","ORWDX",142,0)
 . S OK=$$LOCK1^ORX2(ORIFN) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",143,0)
 . I OK D EN2^ORCSEND(ORIENS(ORIX),ORSIGST,ORNATURE,.ORWERR),UNLK1^ORX2(ORIENS(ORIX))
"RTN","ORWDX",144,0)
 . S ORWLST(ORIX)=ORIENS(ORIX)
"RTN","ORWDX",145,0)
 . I $L(ORWERR) S ORWLST(ORIX)=ORWLST(ORIX)_"^E^"_ORWERR Q
"RTN","ORWDX",146,0)
 . E  D
"RTN","ORWDX",147,0)
 .. S PTEVT=$P($G(^OR(100,+ORIENS(ORIX),0)),U,17)
"RTN","ORWDX",148,0)
 .. D:$$TYPE^OREVNTX(PTEVT)="M" SAVE^ORMEVNT1(ORIENS(ORIX),PTEVT,2)
"RTN","ORWDX",149,0)
 . S X="RS"
"RTN","ORWDX",150,0)
 . S $P(ORWLST(ORIX),U,2)=X
"RTN","ORWDX",151,0)
 Q
"RTN","ORWDX",152,0)
SEND(ORWLST,DFN,ORNP,ORL,ES,ORWREC) ; Sign
"RTN","ORWDX",153,0)
 ; DFN=Patient, ORNP=Provider, ORL=Location, ES=Encrypted ES code
"RTN","ORWDX",154,0)
 ; ORWREC(n)=ORIFN;Action^Signature Sts^Release Sts^Nature of Order
"RTN","ORWDX",155,0)
SEND1 N ORVP,ORWI,ORWERR,ORWREL,ORWSIG,ORWNATR,ORDERID,ORBEF,ORLR,ORLAB,X
"RTN","ORWDX",156,0)
 S ORVP=DFN_";DPT(",ORL=ORL_";SC(",ORL(2)=ORL,ORWLST=0
"RTN","ORWDX",157,0)
 S ORLR=+$O(^DIC(9.4,"C","LR",0))
"RTN","ORWDX",158,0)
 S ORWI=0 F  S ORWI=$O(ORWREC(ORWI)) Q:'ORWI  D
"RTN","ORWDX",159,0)
 . S X=ORWREC(ORWI),ORWERR=""
"RTN","ORWDX",160,0)
 . S ORDERID=$P(X,U),ORWSIG=$P(X,U,2),ORWREL=$P(X,U,3),ORWNATR=$P(X,U,4)
"RTN","ORWDX",161,0)
 . S ORBEF=0
"RTN","ORWDX",162,0)
 . I '$D(^OR(100,+ORDERID,0)) Q
"RTN","ORWDX",163,0)
 . I $D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) S ORBEF=$P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),U,15)
"RTN","ORWDX",164,0)
 . S:$D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) ORWNATR=$S($P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),"^",4)=3:"",1:ORWNATR)
"RTN","ORWDX",165,0)
 . S ORWERR=$$CHKACT^ORWDXR(ORDERID,ORWSIG,ORWREL,ORWNATR)
"RTN","ORWDX",166,0)
 . I $L(ORWERR) S ORWERR="1^"_ORWERR
"RTN","ORWDX",167,0)
 . I '$L(ORWERR) D
"RTN","ORWDX",168,0)
 .. I $P(^OR(100,+ORDERID,0),U,14)=ORLR,'$G(ORLAB) D  ; lab batch start
"RTN","ORWDX",169,0)
 ... I $L($T(BHS^ORMBLD)) D BHS^ORMBLD(ORVP) S ORLAB=1
"RTN","ORWDX",170,0)
 .. N OK S OK=$$LOCK1^ORX2(ORDERID) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",171,0)
 .. I OK D EN^ORCSEND(ORDERID,"",ORWSIG,ORWREL,ORWNATR,"",.ORWERR),UNLK1^ORX2(ORDERID)
"RTN","ORWDX",172,0)
 . S ORWLST(ORWI)=ORDERID,X=""
"RTN","ORWDX",173,0)
 . I $L(ORWERR) S ORWLST(ORWI)=ORWLST(ORWI)_"^E^"_ORWERR Q
"RTN","ORWDX",174,0)
 . I ORWREL,((ORBEF=10)!(ORBEF=11)),($P(^OR(100,+ORDERID,3),U,3)'=10) S X="R"
"RTN","ORWDX",175,0)
 . I ORWSIG'=2 S X=X_"S"
"RTN","ORWDX",176,0)
 . S $P(ORWLST(ORWI),U,2)=X
"RTN","ORWDX",177,0)
 I $G(ORLAB) D BTS^ORMBLD(ORVP)
"RTN","ORWDX",178,0)
 Q
"RTN","ORWDX",179,0)
EXTVAL(IVAL,DLG) ; External value given a dlg ptr
"RTN","ORWDX",180,0)
 N ORDIALOG
"RTN","ORWDX",181,0)
 S ORDIALOG(DLG,0)=$P($G(^ORD(101.41,DLG,1)),U,1,2)
"RTN","ORWDX",182,0)
 S ORDIALOG(DLG,1)=IVAL
"RTN","ORWDX",183,0)
 I $E(ORDIALOG(DLG,0))="R",(+IVAL'=IVAL) Q IVAL  ; free text date/time
"RTN","ORWDX",184,0)
 Q $$EXT^ORCD(DLG,1)  ; all others
"RTN","ORWDX",185,0)
DLGID(VAL,ORIFN) ; return dlg IEN for order
"RTN","ORWDX",186,0)
 S VAL=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",187,0)
 S VAL=$S($P(VAL,";",2)="ORD(101.41,":+VAL,1:0)
"RTN","ORWDX",188,0)
 Q
"RTN","ORWDX",189,0)
FORMID(VAL,ORIFN)  ; Base dlg FormID for an order
"RTN","ORWDX",190,0)
 N DLG
"RTN","ORWDX",191,0)
 S VAL=0,DLG=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",192,0)
 Q:$P(DLG,";",2)'="ORD(101.41,"
"RTN","ORWDX",193,0)
 D FORMID^ORWDXM(.VAL,+DLG)
"RTN","ORWDX",194,0)
 Q
"RTN","ORWDX",195,0)
AGAIN(VAL,DLG)  ; return true to keep dlg for another order
"RTN","ORWDX",196,0)
 S VAL=''$P($G(^ORD(101.41,DLG,0)),U,9)
"RTN","ORWDX",197,0)
 Q
"RTN","ORWDX",198,0)
DGRP(VAL,DLG)   ; Display grp pointer for a dlg
"RTN","ORWDX",199,0)
 S DLG=$S($E(DLG)="`":+$P(DLG,"`",2),1:$O(^ORD(101.41,"AB",DLG,0))) ;kcm
"RTN","ORWDX",200,0)
 S VAL=$P($G(^ORD(101.41,DLG,0)),U,5)
"RTN","ORWDX",201,0)
 Q
"RTN","ORWDX",202,0)
DGNM(VAL,NM) ; Display grp pointer for name
"RTN","ORWDX",203,0)
 S VAL=$O(^ORD(100.98,"B",NM,0))
"RTN","ORWDX",204,0)
 Q
"RTN","ORWDX",205,0)
WRLST(LST,LOC) ; List of dlgs for writing orders
"RTN","ORWDX",206,0)
 G WRLST1^ORWDX1
"RTN","ORWDX",207,0)
MSG(LST,IEN) ; Msg text for orderable item
"RTN","ORWDX",208,0)
 N I
"RTN","ORWDX",209,0)
 S I=0 F  S I=$O(^ORD(101.43,IEN,8,I)) Q:I'>0  S LST(I)=^(I,0)
"RTN","ORWDX",210,0)
 Q
"RTN","ORWDX",211,0)
DISMSG(VAL,IEN) ; Disabled mge for ordering dlg
"RTN","ORWDX",212,0)
 S VAL=$P($G(^ORD(101.41,+IEN,0)),U,3)
"RTN","ORWDX",213,0)
 Q
"RTN","ORWDX",214,0)
LOCK(OK,DFN) ; Attempt to lock pt for ordering
"RTN","ORWDX",215,0)
 S OK=$$LOCK^ORX2(DFN)
"RTN","ORWDX",216,0)
 Q
"RTN","ORWDX",217,0)
UNLOCK(OK,DFN) ; Unlock pt for ordering
"RTN","ORWDX",218,0)
 D UNLOCK^ORX2(DFN) S OK=1
"RTN","ORWDX",219,0)
 Q
"RTN","ORWDX",220,0)
LOCKORD(OK,ORIFN) ; Attempt to lock order
"RTN","ORWDX",221,0)
 S OK=$$LOCK1^ORX2(ORIFN)
"RTN","ORWDX",222,0)
 Q
"RTN","ORWDX",223,0)
UNLKORD(OK,ORIFN) ; Unlock order
"RTN","ORWDX",224,0)
 D UNLK1^ORX2(ORIFN) S OK=1
"RTN","ORWDX",225,0)
 Q
"RTN","ORWDXM3")
0^34^B34529571
"RTN","ORWDXM3",1,0)
ORWDXM3 ; SLC/KCM/JLI - Quick Orders ;10:42 AM 6/20/2002
"RTN","ORWDXM3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,131,132,141,185,187,190**;Dec 17, 1997
"RTN","ORWDXM3",3,0)
 ;
"RTN","ORWDXM3",4,0)
KEYVAR(DLG)  ; Parse entry action for key variables & return in string
"RTN","ORWDXM3",5,0)
 ; RV=CollTp^Samp^Spec^CollDt^Urg^Sched^NoComm^NoDiag^NoProv^NoRsn
"RTN","ORWDXM3",6,0)
 N XCODE,RV,POS,Z
"RTN","ORWDXM3",7,0)
 S XCODE=$G(^ORD(101.41,DLG,3)),RV=""
"RTN","ORWDXM3",8,0)
 I '$L(XCODE) Q ""
"RTN","ORWDXM3",9,0)
 S POS=$F(XCODE,"LRFZX=")    I POS S $P(RV,U,1)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",10,0)
 S POS=$F(XCODE,"LRFSAMP=")  I POS S $P(RV,U,2)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",11,0)
 S POS=$F(XCODE,"LRFSPEC=")  I POS S $P(RV,U,3)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",12,0)
 S POS=$F(XCODE,"LRFDATE=")  I POS S $P(RV,U,4)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",13,0)
 S POS=$F(XCODE,"LRFURG=")   I POS S $P(RV,U,5)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",14,0)
 S POS=$F(XCODE,"LRFSCH=")   I POS S $P(RV,U,6)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",15,0)
 S POS=$F(XCODE,"PSJNOPC=")  I POS S $P(RV,U,7)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",16,0)
 S POS=$F(XCODE,"GMRCNOPD=") I POS S $P(RV,U,8)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",17,0)
 S POS=$F(XCODE,"GMRCNOAT=") I POS S $P(RV,U,9)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",18,0)
 S POS=$F(XCODE,"GMRCREAF=") I POS S $P(RV,U,10)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",19,0)
 S POS=$F(XCODE,"ORFORGET=") I POS D
"RTN","ORWDXM3",20,0)
 . ; need to change this so that it is executed in SETKEYV so
"RTN","ORWDXM3",21,0)
 . ; that it is executed each time menu is revisited
"RTN","ORWDXM3",22,0)
 . N ORFORGET S ORFORGET=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",23,0)
 . I ORFORGET K ^TMP("ORECALL",$J,+ORFORGET)
"RTN","ORWDXM3",24,0)
 . E  K ^TMP("ORECALL",$J)
"RTN","ORWDXM3",25,0)
 Q RV
"RTN","ORWDXM3",26,0)
VALUE(STR,BEG) ; Return value of "var=" (copied from ORCONVRT)
"RTN","ORWDXM3",27,0)
 N X,Y,I S X=$E(STR,BEG,999),Y=""
"RTN","ORWDXM3",28,0)
 S:$E(X)="""" X=$E(X,2,999) ; strip leading "
"RTN","ORWDXM3",29,0)
 F I=1:1:$L(X) S Z=$E(X,I) Q:(Z=",")!(Z=" ")!(Z="""")  S Y=Y_Z
"RTN","ORWDXM3",30,0)
 Q $TR(Y,U,"")
"RTN","ORWDXM3",31,0)
 ;
"RTN","ORWDXM3",32,0)
SETKEYV(X)      ; Set the key variables based on contents of X
"RTN","ORWDXM3",33,0)
 I $L($P(X,U,1))  S LRFZX=$P(X,U,1)
"RTN","ORWDXM3",34,0)
 I $L($P(X,U,2))  S LRFSAMP=$P(X,U,2)
"RTN","ORWDXM3",35,0)
 I $L($P(X,U,3))  S LRFSPEC=$P(X,U,3)
"RTN","ORWDXM3",36,0)
 I $L($P(X,U,4))  S LRFDATE=$P(X,U,4)
"RTN","ORWDXM3",37,0)
 I $L($P(X,U,5))  S LRFURG=$P(X,U,5)
"RTN","ORWDXM3",38,0)
 I $L($P(X,U,6))  S LRFSCH=$P(X,U,6)
"RTN","ORWDXM3",39,0)
 I $L($P(X,U,7))  S PSJNOPC=$P(X,U,7)
"RTN","ORWDXM3",40,0)
 I $L($P(X,U,8))  S GMRCNOPD=$P(X,U,8)
"RTN","ORWDXM3",41,0)
 I $L($P(X,U,9))  S GMRCNOAT=$P(X,U,9)
"RTN","ORWDXM3",42,0)
 I $L($P(X,U,10)) S GMRCREAF=$P(X,U,10)
"RTN","ORWDXM3",43,0)
 Q
"RTN","ORWDXM3",44,0)
DLGINFO(IEN,MODE)    ; return information about a dialog
"RTN","ORWDXM3",45,0)
 ; IEN=DlgIEN or ORIFN, MODE=0:Dlg,1:Copy,2:Change
"RTN","ORWDXM3",46,0)
 ; RESULT=DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",47,0)
 ; If MODE="1;T",don't check "PS MEDS" for transfer order
"RTN","ORWDXM3",48,0)
 ; PSMDGP=1: Unit/Dose  Group
"RTN","ORWDXM3",49,0)
 ; PSMDGP=2: OutPatient Group
"RTN","ORWDXM3",50,0)
 N X0,DLGIEN,TYP,FID,DGRP,PSMDGP,ISXF
"RTN","ORWDXM3",51,0)
 S PSMDGP=0,ISXF=""
"RTN","ORWDXM3",52,0)
 S ISXF=$P(MODE,";",2)
"RTN","ORWDXM3",53,0)
 S MODE=+MODE
"RTN","ORWDXM3",54,0)
 S DLGIEN=IEN I MODE,(ISXF'="T") D
"RTN","ORWDXM3",55,0)
 . S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",56,0)
 . I $P(^ORD(101.41,DLGIEN,0),U)="PS MEDS" D
"RTN","ORWDXM3",57,0)
 . . N PTCAT S PTCAT=$P($G(^OR(100,+IEN,0)),U,12)
"RTN","ORWDXM3",58,0)
 . . I PTCAT="I" S DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)),PSMDGP=1
"RTN","ORWDXM3",59,0)
 . . I PTCAT="O" S DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)),PSMDGP=2
"RTN","ORWDXM3",60,0)
 I MODE,(ISXF="T") S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",61,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),TYP=$P(X0,U,4),DGRP=$P(X0,U,5)
"RTN","ORWDXM3",62,0)
 I MODE S DGRP=+$P($G(^OR(100,+IEN,0)),U,11)
"RTN","ORWDXM3",63,0)
 ;JD NEW START 11/13/02
"RTN","ORWDXM3",64,0)
 I DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) S PSMDGP=1
"RTN","ORWDXM3",65,0)
 I DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)) S PSMDGP=2
"RTN","ORWDXM3",66,0)
 ;JD NEW END 11/13/02
"RTN","ORWDXM3",67,0)
 ; for copy or change, if the base dialog has changed, use it's info 
"RTN","ORWDXM3",68,0)
 I MODE,$G(ORDIALOG),(+DLGIEN'=+ORDIALOG),(PSMDGP=0) D
"RTN","ORWDXM3",69,0)
 . S DLGIEN=+ORDIALOG,DGRP=$P(^ORD(101.41,+ORDIALOG,0),U,5)
"RTN","ORWDXM3",70,0)
 D FORMID^ORWDXM(.FID,DLGIEN)
"RTN","ORWDXM3",71,0)
 Q DLGIEN_U_TYP_U_FID_U_DGRP
"RTN","ORWDXM3",72,0)
 ;
"RTN","ORWDXM3",73,0)
CHKDSBL(LST,ID,MODE)  ; return message if dialog disabled
"RTN","ORWDXM3",74,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",75,0)
 ; LST=QL_REJECT + disabled message or unchanged
"RTN","ORWDXM3",76,0)
 S DLGIEN=+ID I MODE S DLGIEN=+$P($G(^OR(100,+ID,0)),U,5)
"RTN","ORWDXM3",77,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),X=$P(X0,U,3)
"RTN","ORWDXM3",78,0)
 I '$L(X),($P(X0,U,4)="Q") D  ; check default dialog
"RTN","ORWDXM3",79,0)
 . S DLGIEN=+$$DEFDLG^ORWDXQ($P(X0,U,5))
"RTN","ORWDXM3",80,0)
 . S X=$P($G(^ORD(101.41,DLGIEN,0)),U,3)
"RTN","ORWDXM3",81,0)
 I $L(X) D
"RTN","ORWDXM3",82,0)
 . I MODE D GETTXT^ORWORR(.LST,ID) S LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",83,0)
 . S LST(0)="8^0",LST(.5)="Dialog Disabled:  "_X
"RTN","ORWDXM3",84,0)
 Q
"RTN","ORWDXM3",85,0)
CHKVACT(LST,ID,MODE,ORNP)  ; return message if action not valid
"RTN","ORWDXM3",86,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",87,0)
 ; LST=QL_REJECT + invalid action message or unchanged
"RTN","ORWDXM3",88,0)
 Q:'MODE  ; not an action on an order
"RTN","ORWDXM3",89,0)
 N X,ACT S ACT=$S(MODE=1:"RW",MODE=2:"XX",1:"")
"RTN","ORWDXM3",90,0)
 D VALID^ORWDXA(.X,ID,ACT,ORNP)
"RTN","ORWDXM3",91,0)
 I $L(X) D GETTXT^ORWORR(.LST,ID) D
"RTN","ORWDXM3",92,0)
 . S LST(0)="8^0",LST(.5)=X,LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",93,0)
 Q
"RTN","ORWDXM3",94,0)
CHKCOPY(LST,ID,FLDS)  ; return message if can't copy this order
"RTN","ORWDXM3",95,0)
 ; ID=ORIFN;ACT FLDS=EventType in 7th piece
"RTN","ORWDXM3",96,0)
 ; LST=QL_REJECT + cannot copy message or unchanged
"RTN","ORWDXM3",97,0)
 I "^A^D^T^"'[(U_$E($P(FLDS,U,7))_U) Q             ; not event delayed
"RTN","ORWDXM3",98,0)
 N PKG S PKG=$P($G(^OR(100,+ID,0)),U,14)
"RTN","ORWDXM3",99,0)
 S PKG=$$NMSP^ORCD(PKG) I PKG="OR"!(PKG="PS") Q    ; xfer meds, generics
"RTN","ORWDXM3",100,0)
 N ORWCAT S ORWCAT=$P($G(^OR(100,+ID,0)),U,12)
"RTN","ORWDXM3",101,0)
 I ORWCAT="I",("^A^T^"[(U_$E($P(FLDS,U,7))_U)) Q   ; admit, xfer inpt
"RTN","ORWDXM3",102,0)
 I ORWCAT="O",$E($P(FLDS,U,7))="D" Q               ; discharge outpt
"RTN","ORWDXM3",103,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDXM3",104,0)
 I ORWCAT="I" S LST(.5)="inpatient order to outpatient -"
"RTN","ORWDXM3",105,0)
 I ORWCAT="O" S LST(.5)="outpatient order to inpatient -"
"RTN","ORWDXM3",106,0)
 S:$D(LST(.5)) LST(.5)="Cannot copy the following "_LST(.5)
"RTN","ORWDXM3",107,0)
 S LST(0)="8^0",LST(.7)=""
"RTN","ORWDXM3",108,0)
 Q
"RTN","ORWDXM3",109,0)
BLD4CHG(LST,ID,FLDS)  ; build responses for an edit
"RTN","ORWDXM3",110,0)
 ; ID=ORIFN;ACT FLDS=unused right now
"RTN","ORWDXM3",111,0)
 ; LST(0)=Qlvl^RespID(XOrderID)^DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",112,0)
 N OIDX,OI,CNT
"RTN","ORWDXM3",113,0)
 S (OI,OIDX,CNT)=0
"RTN","ORWDXM3",114,0)
 S:$D(^OR(100,+ID,4.5,"ID","ORDERABLE")) OIDX=$O(^OR(100,+ID,4.5,"ID","ORDERABLE",0))
"RTN","ORWDXM3",115,0)
 I $D(^OR(100,+ID,4.5,OIDX)) D
"RTN","ORWDXM3",116,0)
 . F  S CNT=$O(^OR(100,+ID,4.5,OIDX,CNT)) Q:'CNT  D
"RTN","ORWDXM3",117,0)
 . . S OI=^(CNT) D VALDOI
"RTN","ORWDXM3",118,0)
 I +LST(0)=8 S LST(.5)="You can not change this order." Q
"RTN","ORWDXM3",119,0)
 S LST(0)="0^X"_ID_U_$$DLGINFO(+ID,2)
"RTN","ORWDXM3",120,0)
 S $P(LST(0),U,4)="X"
"RTN","ORWDXM3",121,0)
 Q
"RTN","ORWDXM3",122,0)
VALDOI ; Validate the Orderable Items
"RTN","ORWDXM3",123,0)
 N ORQUIT,ORPS
"RTN","ORWDXM3",124,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXM3",125,0)
 . S ORQUIT=1
"RTN","ORWDXM3",126,0)
 . S LST(0)="8^0"
"RTN","ORWDXM3",127,0)
 I $D(ORQUIT) Q:ORQUIT
"RTN","ORWDXM3",128,0)
 S ORPS=$G(^ORD(101.43,+OI,"PS"))
"RTN","ORWDXM3",129,0)
 I $P(ORPS,U,1,4)="0^0^0^0",($P(ORPS,U,7)=0) S LST(0)="8^0"
"RTN","ORWDXM3",130,0)
 Q
"RTN","ORWDXM3",131,0)
VALQO(IFN) ;Check to see if it's a good QO med
"RTN","ORWDXM3",132,0)
 ;If it's an IV QO: check if infusion rate entered
"RTN","ORWDXM3",133,0)
 ;If it's an UD QO: check if dosage entered
"RTN","ORWDXM3",134,0)
 ;regular order treated as good QO
"RTN","ORWDXM3",135,0)
 ;
"RTN","ORWDXM3",136,0)
 I $P($G(^ORD(101.41,IFN,0)),U,4)'="Q" Q 1
"RTN","ORWDXM3",137,0)
 N ODP,ODG,INFUID,DSAGEID,SUCC
"RTN","ORWDXM3",138,0)
 S SUCC=0
"RTN","ORWDXM3",139,0)
 S ODP=+$P($G(^ORD(101.41,IFN,0)),U,7),ODG=+$P($G(^(0)),U,5)
"RTN","ORWDXM3",140,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1),ODG=$P($G(^ORD(100.98,ODG,0)),U,3)
"RTN","ORWDXM3",141,0)
 ;check infusion rate for IV QO
"RTN","ORWDXM3",142,0)
 I ODG="IV RX"!(ODG="TPN") D
"RTN","ORWDXM3",143,0)
 . S INFUID=$O(^ORD(101.41,"B","OR GTX INFUSION RATE",0))
"RTN","ORWDXM3",144,0)
 . I $D(ORDIALOG(INFUID,1)) S SUCC=1
"RTN","ORWDXM3",145,0)
 ;check dosage for UD QO
"RTN","ORWDXM3",146,0)
 I (ODP="PSJ")!(ODP="PSO"),ODG'="IV RX",ODG'="TPN" D
"RTN","ORWDXM3",147,0)
 . S DSAGEID=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDXM3",148,0)
 . I $D(ORDIALOG(DSAGEID,1)) S SUCC=1
"RTN","ORWDXM3",149,0)
 Q SUCC
"RTN","ORWDXM3",150,0)
ISUDQO(ORY,DLGID) ;True: is unit dose quick order
"RTN","ORWDXM3",151,0)
 S ORY=0
"RTN","ORWDXM3",152,0)
 Q:'$D(^ORD(101.41,DLGID,0))
"RTN","ORWDXM3",153,0)
 N UDGRP,DLGTYP,DLGGRP
"RTN","ORWDXM3",154,0)
 S UDGRP=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORWDXM3",155,0)
 S DLGTYP=$P($G(^ORD(101.41,DLGID,0)),U,4)
"RTN","ORWDXM3",156,0)
 S DLGGRP=$P($G(^ORD(101.41,DLGID,0)),U,5)
"RTN","ORWDXM3",157,0)
 I (DLGTYP="Q"),(DLGGRP=UDGRP) S ORY=1
"RTN","ORWDXM3",158,0)
 Q
"RTN","ORWDXR")
0^35^B32338211
"RTN","ORWDXR",1,0)
ORWDXR ; SLC/KCM/JDL - Utilites for Order Actions;;3/28/02  07:47 ;11/15/02  16:18
"RTN","ORWDXR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,134,141,149,187,190**;Dec 17, 1997
"RTN","ORWDXR",3,0)
 ;
"RTN","ORWDXR",4,0)
ISREL(VAL,ORIFN) ; Return true if an order has been released
"RTN","ORWDXR",5,0)
 N STS S STS=$P(^OR(100,+ORIFN,3),U,3)
"RTN","ORWDXR",6,0)
 S VAL=$S(STS=10:0,STS=11:0,1:1)  ; false if delayed or unreleased order
"RTN","ORWDXR",7,0)
 Q
"RTN","ORWDXR",8,0)
RENEW(REC,ORIFN,ORVP,ORNP,ORL,FLDS,CPLX,ORAPPT) ; Renew an order
"RTN","ORWDXR",9,0)
 N ORDG
"RTN","ORWDXR",10,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORPKG
"RTN","ORWDXR",11,0)
 N ORDIALOG,PRMT,X0
"RTN","ORWDXR",12,0)
 N FSTDOSE,FST
"RTN","ORWDXR",13,0)
 S (FSTDOSE,FST)=0
"RTN","ORWDXR",14,0)
 I '$D(CPLX) S CPLX=0
"RTN","ORWDXR",15,0)
 I '$G(ORAPPT) S ORAPPT=""
"RTN","ORWDXR",16,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDXR",17,0)
 S X0=^OR(100,+ORIFN,0)
"RTN","ORWDXR",18,0)
 S ORDG=$P(X0,U,11)
"RTN","ORWDXR",19,0)
 S ORPKG=$P(X0,U,14)
"RTN","ORWDXR",20,0)
 I $D(FLDS("ORCHECK")) M ORCHECK=FLDS("ORCHECK")
"RTN","ORWDXR",21,0)
 I $P(X0,U,5)["101.41," D                        ; version 3
"RTN","ORWDXR",22,0)
 . S ORDIALOG=+$P(X0,U,5),ORCAT=$P(^OR(100,+ORIFN,0),U,12)
"RTN","ORWDXR",23,0)
 . D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN)
"RTN","ORWDXR",24,0)
 . S:CPLX FSTDOSE=$P($G(ORDIALOG("B","FIRST DOSE")),U,2)
"RTN","ORWDXR",25,0)
 . I FSTDOSE,$G(ORDIALOG(FSTDOSE,1)) K ORDIALOG(FSTDOSE,1)
"RTN","ORWDXR",26,0)
 E  D                                            ; version 2.5 generic
"RTN","ORWDXR",27,0)
 . S ORDIALOG=$O(^ORD(101.41,"B","OR GXTEXT WORD PROCESSING ORDE",0))
"RTN","ORWDXR",28,0)
 . D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXR",29,0)
 . S PRMT=$O(^ORD(101.41,"B","OR GTX WORD PROCESSING 1",0))
"RTN","ORWDXR",30,0)
 . S ORDIALOG(PRMT,1)=$NA(^TMP("ORWORD",$J,PRMT,1))
"RTN","ORWDXR",31,0)
 . M ^TMP("ORWORD",$J,PRMT,1)=^OR(100,+ORIFN,1)
"RTN","ORWDXR",32,0)
 . S PRMT=$O(^ORD(101.41,"B","OR GTX START DATE/TIME",0))
"RTN","ORWDXR",33,0)
 . I $P(X0,U,9) S ORDIALOG(PRMT,1)=$P(X0,U,9)
"RTN","ORWDXR",34,0)
 I +FLDS(1)=999 D  ; generic order
"RTN","ORWDXR",35,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX START DATE/TIME"),1)=$P(FLDS(1),U,2)
"RTN","ORWDXR",36,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX STOP DATE/TIME"),1)=$P(FLDS(1),U,3)
"RTN","ORWDXR",37,0)
 I ($O(^ORD(101.41,"AB","PS MEDS",0))>0),(+FLDS(1)=130)!(+FLDS(1)=135)!(+FLDS(1)=140),'$L($G(ORDIALOG($$PTR^ORCD("OR GTX SIG"),1))) D
"RTN","ORWDXR",38,0)
 . N ORDOSE,ORDRUG,ORCAT,ORWPSOI,PROMPT,DRUG
"RTN","ORWDXR",39,0)
 . S ORCAT=$P($G(^OR(100,+ORIFN,0)),U,12)
"RTN","ORWDXR",40,0)
 . S PROMPT=$$PTR^ORCD("OR GTX INSTRUCTIONS")
"RTN","ORWDXR",41,0)
 . S ORDRUG=$G(ORDIALOG($$PTR^ORCD("OR GTX DISPENSE DRUG"),1))
"RTN","ORWDXR",42,0)
 . S ORWPSOI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDXR",43,0)
 . I ORWPSOI S ORWPSOI=+$P($G(^ORD(101.43,+ORWPSOI,0)),U,2)
"RTN","ORWDXR",44,0)
 . D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,$S(ORCAT="I":"U",1:"O"),ORVP)       ; dflt doses
"RTN","ORWDXR",45,0)
 . D D1^ORCDPS2  ; set up ORDOSE
"RTN","ORWDXR",46,0)
 . S DRUG=$G(ORDOSE("DD",+ORDRUG))
"RTN","ORWDXR",47,0)
 . I DRUG,ORCAT="O" D RESETID^ORCDPS
"RTN","ORWDXR",48,0)
 . D SIG^ORCDPS2
"RTN","ORWDXR",49,0)
 I +FLDS(1)=140 D  ; outpatient meds
"RTN","ORWDXR",50,0)
 . K ORDIALOG($$PTR^ORCD("OR GTX START DATE"),1) ; remove effective dt
"RTN","ORWDXR",51,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX REFILLS"),1)=$P(FLDS(1),U,4)
"RTN","ORWDXR",52,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX ROUTING"),1)=$P(FLDS(1),U,5)
"RTN","ORWDXR",53,0)
 . S PRMT=$$PTR^ORCD("OR GTX WORD PROCESSING 1")
"RTN","ORWDXR",54,0)
 . K ^TMP("ORWORD",$J,PRMT,1)
"RTN","ORWDXR",55,0)
 . S I=1 F  S I=$O(FLDS(I)) Q:'I  S ^TMP("ORWORD",$J,PRMT,1,I-1,0)=FLDS(I)
"RTN","ORWDXR",56,0)
 . S ^TMP("ORWORD",$J,PRMT,1,0)=U_U_(I-1)_U_(I-1)_U_DT_U
"RTN","ORWDXR",57,0)
 . S ORDIALOG(PRMT,1)=$NA(^TMP("ORWORD",$J,PRMT,1))
"RTN","ORWDXR",58,0)
 D RN^ORCSAVE
"RTN","ORWDXR",59,0)
 S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXR",60,0)
 Q
"RTN","ORWDXR",61,0)
RNWFLDS(LST,ORIFN)      ; Return fields for renew action
"RTN","ORWDXR",62,0)
 ; LST(0)=RenewType^Start^Stop^Refills^Pickup  LST(n)=Comments
"RTN","ORWDXR",63,0)
 N X0,DG,PKG,RNWTYPE,START,STOP,REFILLS
"RTN","ORWDXR",64,0)
 S ORIFN=+ORIFN,X0=^OR(100,ORIFN,0),DG=$P(X0,U,11),PKG=$P(X0,U,14)
"RTN","ORWDXR",65,0)
 S PKG=$E($P(^DIC(9.4,PKG,0),U,2),1,2),DG=$P(^ORD(100.98,DG,0),U,3)
"RTN","ORWDXR",66,0)
 S LST(0)=$S(PKG="OR":999,PKG="PS"&(DG="O RX"):140,PKG="PS"&(DG="UD RX"):130,PKG="PS"&(DG="NV RX"):145,1:0)
"RTN","ORWDXR",67,0)
 I +LST(0)=140 D
"RTN","ORWDXR",68,0)
 . S LST(0)=LST(0)_U_U_U_+$$VAL(ORIFN,"REFILLS")_U_$$VAL(ORIFN,"PICKUP")
"RTN","ORWDXR",69,0)
 . D WPVAL(.LST,ORIFN,"COMMENT")
"RTN","ORWDXR",70,0)
 I +LST(0)=999 S LST(0)=LST(0)_U_$$VAL(ORIFN,"START")_U_$$VAL(ORIFN,"STOP")
"RTN","ORWDXR",71,0)
 ; make sure start/stop times are relative times, otherwise use NOW, no Stop
"RTN","ORWDXR",72,0)
 I +$P(LST(0),U,2) S $P(LST(0),U,2)="NOW"
"RTN","ORWDXR",73,0)
 I +$P(LST(0),U,3)!($P(LST(0),U,3)="0") S $P(LST(0),U,3)=""
"RTN","ORWDXR",74,0)
 Q
"RTN","ORWDXR",75,0)
VAL(ORIFN,ID)   ; Return value for order response
"RTN","ORWDXR",76,0)
 N DA S DA=+$O(^OR(100,ORIFN,4.5,"ID",ID,0))
"RTN","ORWDXR",77,0)
 Q $G(^OR(100,ORIFN,4.5,DA,1))
"RTN","ORWDXR",78,0)
WPVAL(TXT,ORIFN,ID)    ; Return word processing value
"RTN","ORWDXR",79,0)
 N DA S DA=+$O(^OR(100,ORIFN,4.5,"ID",ID,0))
"RTN","ORWDXR",80,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,4.5,DA,2,I)) Q:'I  S TXT(I)=^(I,0)
"RTN","ORWDXR",81,0)
 Q
"RTN","ORWDXR",82,0)
CHKACT(ORDERID,ORWSIG,ORWREL,ORWNATR) ; Return error if can't sign/release order
"RTN","ORWDXR",83,0)
 N ORACT,ORWERR
"RTN","ORWDXR",84,0)
 ; begin case
"RTN","ORWDXR",85,0)
 S ORACT=""
"RTN","ORWDXR",86,0)
 I (ORWSIG=1),$D(^XUSEC("ORES",DUZ)) S ORACT="ES" G XC1
"RTN","ORWDXR",87,0)
 I (ORWSIG=7),$D(^XUSEC("ORES",DUZ)) S ORACT="DS" G XC1
"RTN","ORWDXR",88,0)
 I ORWREL,(ORWNATR="W") S ORACT="OC" G XC1
"RTN","ORWDXR",89,0)
 I ORWREL S ORACT="RS" S:$P($G(^OR(100,+ORDERID,0)),U,16)<2 ORACT="ES"
"RTN","ORWDXR",90,0)
XC1 ; end case
"RTN","ORWDXR",91,0)
 S ORWERR=""
"RTN","ORWDXR",92,0)
 I $L(ORACT),$$VALID^ORCACT0(ORDERID,ORACT,.ORWERR,ORWNATR) S ORWERR=""
"RTN","ORWDXR",93,0)
 Q ORWERR
"RTN","ORWDXR",94,0)
GTORITM(Y,ORIFN)        ;-- Get back the orderable item IEN
"RTN","ORWDXR",95,0)
 S ORIFN=+ORIFN
"RTN","ORWDXR",96,0)
 S Y=$$VALUE^ORCSAVE2(ORIFN,"ORDERABLE")
"RTN","ORWDXR",97,0)
 Q
"RTN","ORWDXR",98,0)
GETPKG(Y,IFN) ;Get package for an order
"RTN","ORWDXR",99,0)
 N ORDERID,PKGID
"RTN","ORWDXR",100,0)
 Q:+IFN<1
"RTN","ORWDXR",101,0)
 S ORDERID=+IFN,Y=""
"RTN","ORWDXR",102,0)
 S PKGID=$P(^OR(100,ORDERID,0),U,14)
"RTN","ORWDXR",103,0)
 S:PKGID>0 Y=$P(^DIC(9.4,PKGID,0),U,2)
"RTN","ORWDXR",104,0)
 Q
"RTN","ORWDXR",105,0)
ISCPLX(ORY,ORID) ; 1: is complex order 0: is not
"RTN","ORWDXR",106,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",107,0)
 N PKG
"RTN","ORWDXR",108,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXR",109,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXR",110,0)
 I PKG'="PS" Q
"RTN","ORWDXR",111,0)
 N NUMCHDS,NOWID,NOWVAL
"RTN","ORWDXR",112,0)
 S (NOWVAL,NOWID)=0
"RTN","ORWDXR",113,0)
 S NUMCHDS=$P($G(^OR(100,+ORID,2,0)),U,4)
"RTN","ORWDXR",114,0)
 I NUMCHDS>2 S ORY=1 Q
"RTN","ORWDXR",115,0)
 I NUMCHDS=2 D
"RTN","ORWDXR",116,0)
 . S ORY=1
"RTN","ORWDXR",117,0)
 . S:$D(^OR(100,+ORID,4.5,"ID","NOW")) NOWID=$O(^("NOW",0))
"RTN","ORWDXR",118,0)
 . S:NOWID NOWVAL=$G(^OR(100,+ORID,4.5,NOWID,1))
"RTN","ORWDXR",119,0)
 I NOWVAL=1 S ORY=0 Q
"RTN","ORWDXR",120,0)
 Q
"RTN","ORWDXR",121,0)
ORCPLX(ORY,ORID,ORACT) ;Return children orders of the complex order
"RTN","ORWDXR",122,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",123,0)
 N PKG
"RTN","ORWDXR",124,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXR",125,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXR",126,0)
 I PKG'="PS" Q
"RTN","ORWDXR",127,0)
 N CHLDCNT,IDX,X3
"RTN","ORWDXR",128,0)
 S (CHLDCNT,IDX)=0
"RTN","ORWDXR",129,0)
 S:$L($G(^OR(100,+ORID,2,0))) CHLDCNT=$P(^(0),U,4)
"RTN","ORWDXR",130,0)
 I 'CHLDCNT Q
"RTN","ORWDXR",131,0)
 F  S IDX=$O(^OR(100,+ORID,2,IDX)) Q:'IDX  D
"RTN","ORWDXR",132,0)
 . S X3=$G(^OR(100,IDX,3))
"RTN","ORWDXR",133,0)
 . S:'ORACT ORACT=$P(X3,U,7)
"RTN","ORWDXR",134,0)
 . S ORY(IDX)=IDX_";"_ORACT
"RTN","ORWDXR",135,0)
 Q
"RTN","ORWDXR",136,0)
CANRN(ORY,ORID) ; Check conjunction for renew.
"RTN","ORWDXR",137,0)
 ; All conjunctioni = "And" return 1
"RTN","ORWDXR",138,0)
 ; Has a "Then" return 0
"RTN","ORWDXR",139,0)
 Q:'$G(^OR(100,+ORID,0))
"RTN","ORWDXR",140,0)
 N PKG
"RTN","ORWDXR",141,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXR",142,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXR",143,0)
 I PKG'="PS" Q
"RTN","ORWDXR",144,0)
 N INDX,INDY,CANRENEW
"RTN","ORWDXR",145,0)
 S INDX=0
"RTN","ORWDXR",146,0)
 S CANRENEW=1
"RTN","ORWDXR",147,0)
 F  S INDX=$O(^OR(100,+ORID,4.5,"ID","CONJ",INDX)) Q:'INDX  D
"RTN","ORWDXR",148,0)
 . S INDY=0 F  S INDY=$O(^OR(100,+ORID,4.5,INDX,INDY)) Q:'INDY  D
"RTN","ORWDXR",149,0)
 . . I $G(^(INDY))="T" S CANRENEW=0 Q
"RTN","ORWDXR",150,0)
 . I CANRENEW=0 Q
"RTN","ORWDXR",151,0)
 S ORY=CANRENEW
"RTN","ORWDXR",152,0)
 Q
"RTN","ORWDXR",153,0)
ISNOW(ORY,ORID) ; Is first time now order?
"RTN","ORWDXR",154,0)
 N SCH
"RTN","ORWDXR",155,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",156,0)
 S SCH=""
"RTN","ORWDXR",157,0)
 S SCH=$O(^OR(100,+ORID,4.5,"ID","SCHEDULE",0))
"RTN","ORWDXR",158,0)
 S:SCH SCH=$G(^OR(100,+ORID,4.5,SCH,1))
"RTN","ORWDXR",159,0)
 S:SCH="NOW" ORY=1
"RTN","ORWDXR",160,0)
 Q
"RTN","ORWDXR01")
0^36^B13737892
"RTN","ORWDXR01",1,0)
ORWDXR01 ;SLC/JDL - Utilities for Order Actions;; 6/30/03 11:48
"RTN","ORWDXR01",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**187,190**;Dec 17, 1997
"RTN","ORWDXR01",3,0)
CANCHG(ORY,ORIFN,TXTOD) ;
"RTN","ORWDXR01",4,0)
 ;If it's an pending or unsigned unreleased renewed order, can edit=True
"RTN","ORWDXR01",5,0)
 S ORY=0
"RTN","ORWDXR01",6,0)
 Q:'$D(^OR(100,+ORIFN,0))
"RTN","ORWDXR01",7,0)
 I TXTOD D TXTCAN(.ORY) Q
"RTN","ORWDXR01",8,0)
 N OUTGRP,URELSTS,USIGSTS,RNTYPE
"RTN","ORWDXR01",9,0)
 N ODGRP,ODREL,ODSIG,ODTYPE,LSTACT
"RTN","ORWDXR01",10,0)
 S OUTGRP=$O(^ORD(100.98,"B","O RX",0))
"RTN","ORWDXR01",11,0)
 S URELSTS=$O(^ORD(100.01,"B","UNRELEASED",0))
"RTN","ORWDXR01",12,0)
 S PDSTS=$O(^ORD(100.01,"B","PENDING",0))
"RTN","ORWDXR01",13,0)
 S USIGSTS=2 ; unsigned order
"RTN","ORWDXR01",14,0)
 S RNTYPE=2 ; renew action
"RTN","ORWDXR01",15,0)
 ;Data from the order entry
"RTN","ORWDXR01",16,0)
 S LSTACT=$P($G(^OR(100,+ORIFN,3)),U,7)
"RTN","ORWDXR01",17,0)
 S ODGRP=$P($G(^OR(100,+ORIFN,0)),U,11)
"RTN","ORWDXR01",18,0)
 S ODREL=$P($G(^OR(100,+ORIFN,3)),U,3)
"RTN","ORWDXR01",19,0)
 S ODSIG=$P($G(^OR(100,+ORIFN,8,LSTACT,0)),U,4)
"RTN","ORWDXR01",20,0)
 S ODTYPE=$P($G(^OR(100,+ORIFN,3)),U,11)
"RTN","ORWDXR01",21,0)
 I (ODGRP=OUTGRP),(ODREL=URELSTS),(ODSIG=USIGSTS),(ODTYPE=RNTYPE) S ORY=1
"RTN","ORWDXR01",22,0)
 Q
"RTN","ORWDXR01",23,0)
 ;
"RTN","ORWDXR01",24,0)
TXTCAN(ORY) ;
"RTN","ORWDXR01",25,0)
 ;if it's an unsigned unreleased renewed text order, can change=true
"RTN","ORWDXR01",26,0)
 N URELSTS,USIGSTS,RNTYPE
"RTN","ORWDXR01",27,0)
 N ODREL,ODSIG,ODTYPE,LSTACT
"RTN","ORWDXR01",28,0)
 S URELSTS=$O(^ORD(100.01,"B","UNRELEASED",0))
"RTN","ORWDXR01",29,0)
 S USIGSTS=2 ; unsigned order
"RTN","ORWDXR01",30,0)
 S RNTYPE=2 ; renew action
"RTN","ORWDXR01",31,0)
 ;Data from the order entry
"RTN","ORWDXR01",32,0)
 S LSTACT=$P($G(^OR(100,+ORIFN,3)),U,7)
"RTN","ORWDXR01",33,0)
 S ODREL=$P($G(^OR(100,+ORIFN,8,LSTACT,0)),U,15)
"RTN","ORWDXR01",34,0)
 S ODSIG=$P($G(^OR(100,+ORIFN,8,LSTACT,0)),U,4)
"RTN","ORWDXR01",35,0)
 S ODTYPE=$P($G(^OR(100,+ORIFN,3)),U,11)
"RTN","ORWDXR01",36,0)
 I (ODREL=URELSTS),(ODSIG=USIGSTS),(ODTYPE=RNTYPE) S ORY=1
"RTN","ORWDXR01",37,0)
 Q
"RTN","ORWDXR01",38,0)
 ;
"RTN","ORWDXR01",39,0)
SAVCHG(ORY,ORID,PARM1,PARM2,TXTOD) ;
"RTN","ORWDXR01",40,0)
 ;save new changes on the unreleased unsigned renewed order
"RTN","ORWDXR01",41,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR01",42,0)
 ;Update new start and stop date the text order
"RTN","ORWDXR01",43,0)
 I TXTOD D TXTSAV(.ORY,ORID,PARM1,PARM2) Q
"RTN","ORWDXR01",44,0)
 ;Update new refills and pickup for the med order
"RTN","ORWDXR01",45,0)
 N REFID,PICKID,ACT,IX,TXT,REFPOS,NDQUIT
"RTN","ORWDXR01",46,0)
 S (REFID,PICKID,ACT,REFPOS,NDQUIT)=0,ORY=""
"RTN","ORWDXR01",47,0)
 S ACT=+$P(ORID,";",2) S:ACT'>0 ACT=1
"RTN","ORWDXR01",48,0)
 S REFID=$O(^OR(100,+ORID,4.5,"ID","REFILLS",0))
"RTN","ORWDXR01",49,0)
 S PICKID=$O(^OR(100,+ORID,4.5,"ID","PICKUP",0))
"RTN","ORWDXR01",50,0)
 S:$D(^OR(100,+ORID,4.5,REFID,1)) ^(1)=PARM1
"RTN","ORWDXR01",51,0)
 S:$D(^OR(100,+ORID,4.5,PICKID,1)) ^(1)=PARM2
"RTN","ORWDXR01",52,0)
 S IX=0 F  S IX=$O(^OR(100,+ORID,8,ACT,.1,IX)) Q:('IX)!(NDQUIT)  D
"RTN","ORWDXR01",53,0)
 . S TXT=$G(^OR(100,+ORID,8,ACT,.1,IX,0))
"RTN","ORWDXR01",54,0)
 . I ($$UP^XLFSTR(TXT)["QUANTITY:"),($$UP^XLFSTR(TXT)["REFILLS:") D
"RTN","ORWDXR01",55,0)
 . . S REFPOS=$F($$UP^XLFSTR(TXT),"REFILLS")-$L("REFILLS")-1
"RTN","ORWDXR01",56,0)
 . . S TXT=$E(TXT,1,REFPOS)_"Refills: "_PARM1
"RTN","ORWDXR01",57,0)
 . . S ^OR(100,+ORID,8,ACT,.1,IX,0)=TXT,NDQUIT=1 Q
"RTN","ORWDXR01",58,0)
 D GETBYIFN^ORWORR(.ORY,+ORID)
"RTN","ORWDXR01",59,0)
 Q
"RTN","ORWDXR01",60,0)
 ;
"RTN","ORWDXR01",61,0)
TXTSAV(ORY,ORID,PARM1,PARM2) ;
"RTN","ORWDXR01",62,0)
 ; Update new start and stop date for the unsigned unreleased 
"RTN","ORWDXR01",63,0)
 ; renewed text order
"RTN","ORWDXR01",64,0)
 N STRTID,STOPID
"RTN","ORWDXR01",65,0)
 S STRTID=$O(^OR(100,+ORID,4.5,"ID","START",0))
"RTN","ORWDXR01",66,0)
 S STOPID=$O(^OR(100,+ORID,4.5,"ID","STOP",0))
"RTN","ORWDXR01",67,0)
 S:$D(^OR(100,+ORID,4.5,STRTID,1)) ^(1)=PARM1
"RTN","ORWDXR01",68,0)
 S:$D(^OR(100,+ORID,4.5,STOPID,1)) ^(1)=PARM2
"RTN","ORWDXR01",69,0)
 D GETBYIFN^ORWORR(.ORY,+ORID)
"RTN","ORWDXR01",70,0)
 Q
"RTN","ORWDXR01",71,0)
 ;
"RTN","ORWDXR01",72,0)
ISSPLY(ORY,DLGID,QODLG) ;
"RTN","ORWDXR01",73,0)
 ; ORY=1: is "PSO SUPPLY" dialog
"RTN","ORWDXR01",74,0)
 S ORY=""
"RTN","ORWDXR01",75,0)
 Q:'$D(^ORD(101.41,DLGID,0))
"RTN","ORWDXR01",76,0)
 I 'QODLG,($P(^ORD(101.41,DLGID,0),U)="PSO SUPPLY") S ORY=1
"RTN","ORWDXR01",77,0)
 I QODLG D
"RTN","ORWDXR01",78,0)
 . N SPLYDG S SPLYDG=$O(^ORD(100.98,"B","SPLY",0))
"RTN","ORWDXR01",79,0)
 . I $P(^ORD(101.41,DLGID,0),U,5)=SPLYDG S ORY=1
"RTN","ORWDXR01",80,0)
 Q
"RTN","ORWDXR01",81,0)
 ;
"RTN","ORWDXR01",82,0)
OXDATA(ORY,ORIEN) ; Return orderable item data for order check usage
"RTN","ORWDXR01",83,0)
 Q:'$D(^OR(100,+ORIEN,0))
"RTN","ORWDXR01",84,0)
 N DRUGID,OIID,IDX,IDY,DISPIN,DISPOUT,DISPID
"RTN","ORWDXR01",85,0)
 S (DRUGID,OIID,IDX,IDY,DISPIN,DISPOUT)=0
"RTN","ORWDXR01",86,0)
 S DISPID=""
"RTN","ORWDXR01",87,0)
 S DISPIN=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORWDXR01",88,0)
 S DISPOUT=$O(^ORD(100.98,"B","O RX",0))
"RTN","ORWDXR01",89,0)
 S DRUGID=$O(^OR(100,+ORIEN,4.5,"ID","DRUG",0))
"RTN","ORWDXR01",90,0)
 S OIID=$O(^OR(100,+ORIEN,4.5,"ID","ORDERABLE",0))
"RTN","ORWDXR01",91,0)
 S DISPID=$P(^OR(100,+ORIEN,0),U,11)
"RTN","ORWDXR01",92,0)
 I DISPID=DISPIN S DISPID="PSI"
"RTN","ORWDXR01",93,0)
 I DISPID=DISPOUT S DISPID="PSO"
"RTN","ORWDXR01",94,0)
 I (DISPID'="PSI"),(DISPID'="PSO") Q
"RTN","ORWDXR01",95,0)
 Q:'DRUGID
"RTN","ORWDXR01",96,0)
 Q:'OIID
"RTN","ORWDXR01",97,0)
 S IDX=$O(^OR(100,+ORIEN,4.5,DRUGID,0))
"RTN","ORWDXR01",98,0)
 S IDY=$O(^OR(100,+ORIEN,4.5,OIID,0))
"RTN","ORWDXR01",99,0)
 I IDX,IDY,'+DISPID S ORY=$G(^OR(100,+ORIEN,4.5,OIID,IDY))_U_DISPID_U_$G(^OR(100,+ORIEN,4.5,DRUGID,IDX))
"RTN","ORWDXR01",100,0)
 Q
"RTN","ORWOR")
0^48^B34438722
"RTN","ORWOR",1,0)
ORWOR ; SLC/KCM - Orders Calls;10:54 PM  02 Feb 2003
"RTN","ORWOR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132,141,163,187,190**;Dec 17, 1997
"RTN","ORWOR",3,0)
 ;
"RTN","ORWOR",4,0)
CURRENT(LST,DFN) ; Get Current Orders for a Patient
"RTN","ORWOR",5,0)
 ; Returns two lists in ^TMP("ORW",$J), fields and text
"RTN","ORWOR",6,0)
 N TM,IEN,X,X0,X3,CTR,IDX,I
"RTN","ORWOR",7,0)
 K ^TMP("ORW",$J)
"RTN","ORWOR",8,0)
 S IDX=0,DFN=DFN_";DPT("
"RTN","ORWOR",9,0)
 S TM=0 F  S TM=$O(^OR(100,"AC",DFN,TM)) Q:TM<1  D
"RTN","ORWOR",10,0)
 . S IEN=0 F  S IEN=$O(^OR(100,"AC",DFN,TM,IEN)) Q:IEN<1  D
"RTN","ORWOR",11,0)
 . . S X0=^OR(100,IEN,0),X3=^(3)
"RTN","ORWOR",12,0)
 . . S X=IEN_U_$P(X0,U,7)_U_$P(X0,U,11)_U_$P(X3,U,6)_U_$P(X3,U,3)
"RTN","ORWOR",13,0)
 . . S ^TMP("ORW",$J,IDX+1)=X
"RTN","ORWOR",14,0)
 . . S (CTR,I)=0,X=""
"RTN","ORWOR",15,0)
 . . F  S I=$O(^OR(100,IEN,1,I)) Q:I<1  D  Q:CTR>244
"RTN","ORWOR",16,0)
 . . . S X=X_$E(^OR(100,IEN,1,I,0),1,(245-CTR)),CTR=$L(X)
"RTN","ORWOR",17,0)
 . . S ^TMP("ORW",$J,IDX+2)=X,IDX=IDX+2
"RTN","ORWOR",18,0)
 ; S LST=$NA(^TMP("ORW",$J))
"RTN","ORWOR",19,0)
 M LST=^TMP("ORW",$J)
"RTN","ORWOR",20,0)
 Q
"RTN","ORWOR",21,0)
DETAIL(LST,ORID,DFN)    ; Return details of ORID (shell to kill VIDEO subs)
"RTN","ORWOR",22,0)
 Q:'+ORID
"RTN","ORWOR",23,0)
 I $G(DFN) N ORVP S ORVP=DFN_";DPT("
"RTN","ORWOR",24,0)
 S LST="^TMP(""ORTXT"",$J)"
"RTN","ORWOR",25,0)
 D DETAIL^ORQ2(.LST,ORID)
"RTN","ORWOR",26,0)
 K @LST@("VIDEO")
"RTN","ORWOR",27,0)
 S LST=$NA(^TMP("ORTXT",$J)),@LST=""
"RTN","ORWOR",28,0)
 Q
"RTN","ORWOR",29,0)
RESULT(REF,DFN,ORID,ID)      ; Return results of order identified by ID
"RTN","ORWOR",30,0)
 K ^TMP("ORXPND",$J)
"RTN","ORWOR",31,0)
 N ORESULTS,ORVP,LCNT S ORESULTS=1,LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWOR",32,0)
 D ORDERS^ORCXPND1
"RTN","ORWOR",33,0)
 K ^TMP("ORXPND",$J,"VIDEO")
"RTN","ORWOR",34,0)
 S REF=$NA(^TMP("ORXPND",$J))
"RTN","ORWOR",35,0)
 Q
"RTN","ORWOR",36,0)
RESHIST(REF,DFN,ORID,ID)      ; Return result history of associated tests identified by ID
"RTN","ORWOR",37,0)
 K ^TMP("ORXPND",$J)
"RTN","ORWOR",38,0)
 N ORESULTS,ORVP,LCNT
"RTN","ORWOR",39,0)
 S ORESULTS=1,LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWOR",40,0)
 D ORDHIST^ORWOR2
"RTN","ORWOR",41,0)
 K ^TMP("ORXPND",$J,"VIDEO")
"RTN","ORWOR",42,0)
 S REF=$NA(^TMP("ORXPND",$J))
"RTN","ORWOR",43,0)
 Q
"RTN","ORWOR",44,0)
TSALL(LST)      ; Return list of treating specialties
"RTN","ORWOR",45,0)
 N Y S Y=0
"RTN","ORWOR",46,0)
 F  S Y=$O(^DIC(45.7,Y)) Q:'Y  I $$ACTIVE^DGACT(45.7,Y) S LST(Y)=Y_U_$P(^DIC(45.7,Y,0),U)
"RTN","ORWOR",47,0)
 Q
"RTN","ORWOR",48,0)
DT(X) ; -- Returns FM date for X (SEE ORCHTAB1)
"RTN","ORWOR",49,0)
 N Y,%DT S %DT="T",Y="" D:X'="" ^%DT
"RTN","ORWOR",50,0)
 Q +Y
"RTN","ORWOR",51,0)
VWSET(ORERR,VIEW)       ; Set the preferred view for orders
"RTN","ORWOR",52,0)
 ; VIEW:  semi-colon delimited record
"RTN","ORWOR",53,0)
 ;        1 - Relative From Date/Time or ""
"RTN","ORWOR",54,0)
 ;        2 - Relative Thru Date/Time or ""
"RTN","ORWOR",55,0)
 ;        3 - Filter
"RTN","ORWOR",56,0)
 ;        4 - Display Group Pointer
"RTN","ORWOR",57,0)
 ;        5 - Format (preserve for list manager)
"RTN","ORWOR",58,0)
 ;        6 - chronological display (R or F)
"RTN","ORWOR",59,0)
 ;        7 - sort by display group
"RTN","ORWOR",60,0)
 N FMT
"RTN","ORWOR",61,0)
 ; use short name for display group instead of pointer
"RTN","ORWOR",62,0)
 S $P(VIEW,";",4)=$P($G(^ORD(100.98,+$P(VIEW,";",4),0)),U,3)
"RTN","ORWOR",63,0)
 ; use last saved format, since this is used only by LM
"RTN","ORWOR",64,0)
 S FMT=$P($$GET^XPAR("ALL","ORCH CONTEXT ORDERS",1,"I"),";",5)
"RTN","ORWOR",65,0)
 S:'$L(FMT) FMT="L" S $P(VIEW,";",5)=FMT
"RTN","ORWOR",66,0)
 ; and save the parameter
"RTN","ORWOR",67,0)
 D EN^XPAR(DUZ_";VA(200,","ORCH CONTEXT ORDERS",1,VIEW,.ORERR)
"RTN","ORWOR",68,0)
 Q
"RTN","ORWOR",69,0)
VWGET(REC)      ; Get the preferred view for orders
"RTN","ORWOR",70,0)
 N FROM,THRU,FILTER,DGRP,FRMT,CHRN,BYGRP,S,VNAME,FL
"RTN","ORWOR",71,0)
 S REC=$$GET^XPAR("ALL","ORCH CONTEXT ORDERS",1,"I"),S=";"
"RTN","ORWOR",72,0)
 S FROM=$$DT($P(REC,S)),THRU=$$DT($P(REC,S,2)),FILTER=$P(REC,S,3)
"RTN","ORWOR",73,0)
 S DGRP=$P(REC,S,4),FRMT=$P(REC,S,5),CHRN=$P(REC,S,6),BYGRP=$P(REC,S,7)
"RTN","ORWOR",74,0)
 S:'$L(DGRP) DGRP="ALL" S DGRP=+$O(^ORD(100.98,"B",DGRP,0))
"RTN","ORWOR",75,0)
 I FILTER="" S FILTER=2  ; active orders
"RTN","ORWOR",76,0)
 I CHRN="" S CHRN="R"    ; reverse chronological
"RTN","ORWOR",77,0)
 I BYGRP="" S BYGRP=1    ; sort by display group
"RTN","ORWOR",78,0)
 ; set up view name
"RTN","ORWOR",79,0)
 D REVSTS^ORWORDG(.FL)
"RTN","ORWOR",80,0)
 S I=0 F  S I=$O(FL(I)) Q:'I  Q:+FL(I)=FILTER
"RTN","ORWOR",81,0)
 S VNAME=$P($G(FL(+I)),U,2)
"RTN","ORWOR",82,0)
 I '("^6^8^9^10^19^20^"[(U_FILTER_U)) S VNAME=VNAME_" Orders"
"RTN","ORWOR",83,0)
 I FILTER=2 S VNAME="Active Orders (includes Pending & Recent Activity)"
"RTN","ORWOR",84,0)
 I FILTER=23 S VNAME="Current Orders (Active & Pending Status Only)"
"RTN","ORWOR",85,0)
 S VNAME=VNAME_" - "_$P($G(^ORD(100.98,DGRP,0)),U)
"RTN","ORWOR",86,0)
 I (FROM>0)!(THRU>0) D
"RTN","ORWOR",87,0)
 . S VNAME=VNAME_" ("_$$FMTE^XLFDT(FROM,"2D")_" thru "
"RTN","ORWOR",88,0)
 . S VNAME=VNAME_$S(THRU>0:$$FMTE^XLFDT(THRU,"2D"),1:"")_")"
"RTN","ORWOR",89,0)
 S REC=FROM_S_THRU_S_FILTER_S_DGRP_S_FRMT_S_CHRN_S_BYGRP_S_VNAME
"RTN","ORWOR",90,0)
 Q
"RTN","ORWOR",91,0)
SHEETS(LST,ORVP) ; Return Order Sheets for a patient
"RTN","ORWOR",92,0)
 N ELST,ETYP,ORIFN,TS,I
"RTN","ORWOR",93,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWOR",94,0)
 S ETYP="" F  S ETYP=$O(^OR(100,"AEVNT",ORVP,ETYP)) Q:ETYP=""  D
"RTN","ORWOR",95,0)
 . S ORIFN=0 F  S ORIFN=$O(^OR(100,"AEVNT",ORVP,ETYP,ORIFN)) Q:'ORIFN  D
"RTN","ORWOR",96,0)
 . . I (ETYP="A")!(ETYP="T") S ELST(ETYP,$P($G(^OR(100,+ORIFN,0)),U,13))=""
"RTN","ORWOR",97,0)
 S LST(1)="C;O^Current View",I=1
"RTN","ORWOR",98,0)
 S TS="" F  S TS=$O(ELST("A",TS)) Q:TS=""  D
"RTN","ORWOR",99,0)
 . S I=I+1,LST(I)="A;"_TS_U_"Admit to "_$P($G(^DIC(45.7,TS,0)),U)
"RTN","ORWOR",100,0)
 S I=I+1,LST(I)="A;-1^Admit..."
"RTN","ORWOR",101,0)
 S TS="" F  S TS=$O(ELST("T",TS)) Q:TS=""  D
"RTN","ORWOR",102,0)
 . S I=I+1,LST(I)="T;"_TS_U_"Transfer to "_$P($G(^DIC(45.7,TS,0)),U)
"RTN","ORWOR",103,0)
 I $L($G(^DPT(+ORVP,.1))) D
"RTN","ORWOR",104,0)
 . S I=I+1,LST(I)="T;-1^Transfer..."
"RTN","ORWOR",105,0)
 . S I=I+1,LST(I)="D;0^Discharge"
"RTN","ORWOR",106,0)
 Q
"RTN","ORWOR",107,0)
EVENTS(LST,EVT) ; Return general delayed events categories for a patient
"RTN","ORWOR",108,0)
 N EVTI
"RTN","ORWOR",109,0)
 S EVTI=0
"RTN","ORWOR",110,0)
 S EVTI=EVTI+1,LST(EVTI)="A;-1^Admit..."
"RTN","ORWOR",111,0)
 S EVTI=EVTI+1,LST(EVTI)="T;-1^Transfer..."
"RTN","ORWOR",112,0)
 S EVTI=EVTI+1,LST(EVTI)="D;0^Discharge"
"RTN","ORWOR",113,0)
 Q
"RTN","ORWOR",114,0)
UNSIGN(LST,ORVP,HAVE)   ; Return Unsigned Orders that are not on client
"RTN","ORWOR",115,0)
 N IFN,ACT,X8,ENT,LVL,TM,ILST S ILST=0
"RTN","ORWOR",116,0)
 Q:'$D(^XUSEC("ORES",DUZ))
"RTN","ORWOR",117,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWOR",118,0)
 S ENT="ALL"_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+^(5),1:"")
"RTN","ORWOR",119,0)
 S LVL=$$GET^XPAR(ENT,"OR UNSIGNED ORDERS ON EXIT")
"RTN","ORWOR",120,0)
 Q:'LVL
"RTN","ORWOR",121,0)
 S TM=0 F  S TM=$O(^OR(100,"AS",ORVP,TM)) Q:TM<1  D
"RTN","ORWOR",122,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AS",ORVP,TM,IFN)) Q:IFN<1  D
"RTN","ORWOR",123,0)
 . . S ACT=0 F  S ACT=$O(^OR(100,"AS",ORVP,TM,IFN,ACT)) Q:ACT<1  D
"RTN","ORWOR",124,0)
 . . . Q:$D(HAVE(IFN_";"_ACT))                        ;in Changes
"RTN","ORWOR",125,0)
 . . . S X8=$G(^OR(100,IFN,8,ACT,0))
"RTN","ORWOR",126,0)
 . . . I '$S(LVL=1&($P(X8,U,3)=DUZ):1,LVL=2:1,1:0) Q  ;chk user
"RTN","ORWOR",127,0)
 . . . S ILST=ILST+1,LST(ILST)=IFN_";"_ACT
"RTN","ORWOR",128,0)
 Q
"RTN","ORWOR",129,0)
PKIUSE(RETURN) ; RPC determines user can use PKI Digital Signature
"RTN","ORWOR",130,0)
 S RETURN=0
"RTN","ORWOR",131,0)
 I $$GET^XPAR("ALL^USR.`"_DUZ,"ORWOR PKI USE",1,"Q") S RETURN=1
"RTN","ORWOR",132,0)
 Q
"RTN","ORWOR",133,0)
PKISITE(RETURN) ; RPC determines if PKI is turned on at the site
"RTN","ORWOR",134,0)
 S RETURN=0
"RTN","ORWOR",135,0)
 Q:'$L($T(STORESIG^XUSSPKI))  ;Check for Kernel piece
"RTN","ORWOR",136,0)
 Q:'$L($T(DOSE^PSSOPKI1))  ;Check for Pharmacy piece
"RTN","ORWOR",137,0)
 I $$GET^XPAR("ALL","ORWOR PKI SITE",1,"Q") S RETURN=1
"RTN","ORWOR",138,0)
 Q
"RTN","ORWOR",139,0)
ACTXT(ORY,ORIFN) ;Return detail action information
"RTN","ORWOR",140,0)
 N ORI,CNT,OR0,OR3,OR6
"RTN","ORWOR",141,0)
 K ^TMP("ORACTXT",$J)
"RTN","ORWOR",142,0)
 S ORY="^TMP(""ORACTXT"",$J)",ORI=$P(ORIFN,";",2)
"RTN","ORWOR",143,0)
 S CNT=0,ORIFN=+ORIFN,OR0=$G(^OR(100,ORIFN,0)),OR3=$G(^(3)),OR6=$G(^(6))
"RTN","ORWOR",144,0)
 F  S ORI=$O(^OR(100,+ORIFN,8,ORI)) Q:ORI'>0  S ACTION=$G(^(ORI,0)) D ACT^ORQ20
"RTN","ORWOR",145,0)
 S ORY=$NA(^TMP("ORACTXT",$J)),@ORY=""
"RTN","ORWOR",146,0)
 Q
"RTN","ORWOR",147,0)
EXPIRED(ORY) ;return FM date/time to begin search for expired orders
"RTN","ORWOR",148,0)
 N HRS
"RTN","ORWOR",149,0)
 S HRS=$$GET^XPAR("ALL","ORWOR EXPIRED ORDERS",1,"I")
"RTN","ORWOR",150,0)
 S ORY=$$FMADD^XLFDT($$NOW^XLFDT,"","-"_HRS,"","")
"RTN","ORWOR",151,0)
 Q
"RTN","ORWORB")
0^47^B56568783
"RTN","ORWORB",1,0)
ORWORB ; slc/dee/REV/CLA - RPC functions which return user alert ;10:12 am JAN 31, 2001
"RTN","ORWORB",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,148,173,190**;Dec 17, 1997
"RTN","ORWORB",3,0)
 ;
"RTN","ORWORB",4,0)
URGENLST(ORY) ;return array of the  urgency for the notification
"RTN","ORWORB",5,0)
 N ORSRV,ORERROR
"RTN","ORWORB",6,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORWORB",7,0)
 D GETLST^XPAR(.ORY,"USR^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG","ORB URGENCY","I",.ORERROR)
"RTN","ORWORB",8,0)
 Q
"RTN","ORWORB",9,0)
 ;
"RTN","ORWORB",10,0)
FASTUSER(ORY) ;return current user's notifications across all patients
"RTN","ORWORB",11,0)
 N STRTDATE,STOPDATE,ORTOT,I,ORURG,URG,ORN,SORT,ORN0,URGLIST,REMLIST,REM
"RTN","ORWORB",12,0)
 N ALRT,ALRTDT,ALRTPT,ALRTMSG,ALRTI,ALRTLOC,ALRTXQA,J,FWDBY,PRE,ALRTDFN
"RTN","ORWORB",13,0)
 K ^TMP("ORBG",$J)
"RTN","ORWORB",14,0)
 S STRTDATE="",STOPDATE="",FWDBY="Forwarded by: "
"RTN","ORWORB",15,0)
 D GETUSER1^XQALDATA("^TMP(""ORB"",$J)",DUZ,STRTDATE,STOPDATE)
"RTN","ORWORB",16,0)
 S ORTOT=^TMP("ORB",$J)
"RTN","ORWORB",17,0)
 D URGLIST^ORQORB(.URGLIST)
"RTN","ORWORB",18,0)
 D REMLIST^ORQORB(.REMLIST)
"RTN","ORWORB",19,0)
 S J=0
"RTN","ORWORB",20,0)
 F I=1:1:ORTOT D
"RTN","ORWORB",21,0)
 .S ALRTDFN=""
"RTN","ORWORB",22,0)
 .S ALRT=^TMP("ORB",$J,I)
"RTN","ORWORB",23,0)
 .S PRE=$E(ALRT,1,1)
"RTN","ORWORB",24,0)
 .S ALRTXQA=$P(ALRT,U,2)  ;XQAID
"RTN","ORWORB",25,0)
 .S ALRTMSG=$P($P(ALRT,U),PRE_"  ",2)
"RTN","ORWORB",26,0)
 .I $E(ALRT,4,8)'="-----" D  ;not forwarded alert info/comment
"RTN","ORWORB",27,0)
 ..S ORURG="n/a"
"RTN","ORWORB",28,0)
 ..S ALRTI=$P(ALRT,"  ")
"RTN","ORWORB",29,0)
 ..S ALRTPT=""
"RTN","ORWORB",30,0)
 ..S ALRTLOC=""
"RTN","ORWORB",31,0)
 ..I $E($P(ALRTXQA,";"),1,3)="TIU" S ORURG="Moderate"
"RTN","ORWORB",32,0)
 ..I $P(ALRTXQA,",")="OR" D
"RTN","ORWORB",33,0)
 ...S ORN=$P($P(ALRTXQA,";"),",",3)
"RTN","ORWORB",34,0)
 ...S URG=$G(URGLIST(ORN))
"RTN","ORWORB",35,0)
 ...S ORURG=$S(URG=1:"HIGH",URG=2:"Moderate",1:"low")
"RTN","ORWORB",36,0)
 ...S REM=$G(REMLIST(ORN))
"RTN","ORWORB",37,0)
 ...S ORN0=^ORD(100.9,ORN,0)
"RTN","ORWORB",38,0)
 ...S ALRTI=$S($P(ORN0,U,6)="INFODEL":"I",1:"")
"RTN","ORWORB",39,0)
 ...S ALRTDFN=$P(ALRTXQA,",",2)
"RTN","ORWORB",40,0)
 ...S ALRTLOC=$G(^DPT(+$G(ALRTDFN),.1))
"RTN","ORWORB",41,0)
 ..S ALRTI=$S(ALRTI="I":"I",1:"")
"RTN","ORWORB",42,0)
 ..I ALRT["): " D
"RTN","ORWORB",43,0)
 ...S ALRTPT=$P(ALRT,": ")
"RTN","ORWORB",44,0)
 ...S ALRTPT=$E(ALRTPT,4,$L(ALRTPT))
"RTN","ORWORB",45,0)
 ...S ALRTMSG=$P($P(ALRT,U),"): ",2)
"RTN","ORWORB",46,0)
 ...I $E(ALRTMSG,1,1)="[" D
"RTN","ORWORB",47,0)
 ....;S ALRTLOC=$P(ALRTMSG,"]")_"]"
"RTN","ORWORB",48,0)
 ....S ALRTMSG=$P(ALRTMSG,"] ",2)
"RTN","ORWORB",49,0)
 ..I '$L($G(ALRTPT)) S ALRTPT="no patient"
"RTN","ORWORB",50,0)
 ..S ALRTDT=$P(ALRTXQA,";",3)
"RTN","ORWORB",51,0)
 ..S ALRTDT=($E(ALRTDT,1,3)+1700)_"/"_$E(ALRTDT,4,5)_"/"_$E(ALRTDT,6,7)_"@"_$E($P(ALRTDT,".",2),1,2)_":"_$E($P(ALRTDT,".",2),3,4)
"RTN","ORWORB",52,0)
 ..S J=J+1,^TMP("ORBG",$J,J)=ALRTI_U_ALRTPT_U_ALRTLOC_U_ORURG_U_ALRTDT_U
"RTN","ORWORB",53,0)
 ..S ^TMP("ORBG",$J,J)=^TMP("ORBG",$J,J)_ALRTMSG_U_U_ALRTXQA_U_$G(REM)_U
"RTN","ORWORB",54,0)
 .;
"RTN","ORWORB",55,0)
 .;if alert forward info/comment:
"RTN","ORWORB",56,0)
 .I $E(ALRTMSG,1,5)="-----" D
"RTN","ORWORB",57,0)
 ..S ALRTMSG=$P(ALRTMSG,"-----",2)
"RTN","ORWORB",58,0)
 ..I $E(ALRTMSG,1,14)=FWDBY D
"RTN","ORWORB",59,0)
 ...S J=J+1,^TMP("ORBG",$J,J)=FWDBY_U_$P($P(ALRTMSG,FWDBY,2),"Generated: ")_$P($P(ALRTMSG,FWDBY,2),"Generated: ",2)
"RTN","ORWORB",60,0)
 ..E  S ^TMP("ORBG",$J,J)=^TMP("ORBG",$J,J)_U_""""_ALRTMSG_""""
"RTN","ORWORB",61,0)
 S ^TMP("ORBG",$J)=""
"RTN","ORWORB",62,0)
 S ORY=$NA(^TMP("ORBG",$J))
"RTN","ORWORB",63,0)
 Q
"RTN","ORWORB",64,0)
 ;
"RTN","ORWORB",65,0)
GETDATA(ORY,XQAID) ; return XQADATA for an alert
"RTN","ORWORB",66,0)
 N SHOWADD
"RTN","ORWORB",67,0)
 S ORY=""
"RTN","ORWORB",68,0)
 Q:$G(XQAID)=""!('$D(^XTV(8992,"AXQA",XQAID)))
"RTN","ORWORB",69,0)
 D GETACT^XQALERT(XQAID)
"RTN","ORWORB",70,0)
 S ORY=XQADATA
"RTN","ORWORB",71,0)
 I ($E(XQAID,1,3)="TIU"),(+ORY>0) D
"RTN","ORWORB",72,0)
 . S SHOWADD=1
"RTN","ORWORB",73,0)
 . S ORY=ORY_$$RESOLVE^TIUSRVLO(+ORY)
"RTN","ORWORB",74,0)
 K XQAID,XQADATA,XQAOPT,XQAROU
"RTN","ORWORB",75,0)
 Q
"RTN","ORWORB",76,0)
 ;
"RTN","ORWORB",77,0)
KILUNSNO(Y,ORVP) ; Delete unsigned order alerts if no unsigned orders remaining
"RTN","ORWORB",78,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWORB",79,0)
 D UNOTIF^ORCSIGN
"RTN","ORWORB",80,0)
 Q
"RTN","ORWORB",81,0)
 ;
"RTN","ORWORB",82,0)
UNFLORD(Y,DFN,XQAID) ; -- auto-unflag orders?/delete alert
"RTN","ORWORB",83,0)
 Q:'$L(DFN)!('$L(XQAID))
"RTN","ORWORB",84,0)
 N ORI,ORIFN,ORA,XQAKILL,ORN,ORBY,ORAUTO,ORUNF
"RTN","ORWORB",85,0)
 S ORN=+$O(^ORD(100.9,"B","FLAGGED ORDERS",0))
"RTN","ORWORB",86,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORN)
"RTN","ORWORB",87,0)
 D LIST^ORQOR1(.ORBY,DFN,"ALL",12,"","")
"RTN","ORWORB",88,0)
 S ORAUTO=+$$GET^XPAR("ALL","ORPF AUTO UNFLAG")
"RTN","ORWORB",89,0)
 S ORI=0 F  S ORI=$O(ORBY(ORI)) Q:ORI'>0  D
"RTN","ORWORB",90,0)
 . I ORAUTO D  ; unflag
"RTN","ORWORB",91,0)
 . . S ORUNF=+$E($$NOW^XLFDT,1,12)_U_DUZ_"^Auto-Unflagged"
"RTN","ORWORB",92,0)
 . . S ORIFN=$P(ORBY(ORI),U),ORA=+$P(ORIFN,";",2)
"RTN","ORWORB",93,0)
 . . I ORIFN,$D(^OR(100,+ORIFN,0)) S $P(^(8,ORA,3),U)=0,$P(^(3),U,6,8)=ORUNF ; unflag
"RTN","ORWORB",94,0)
 I ORAUTO!(+$G(ORBY(1))=0) D DELETE^XQALERT
"RTN","ORWORB",95,0)
 Q
"RTN","ORWORB",96,0)
KILEXMED(Y,ORDFN)  ; -- Delete expiring meds notification if no expiring meds remaining
"RTN","ORWORB",97,0)
 N ORDG,ORLST S ORDG=$$DG^ORQOR1("RX")
"RTN","ORWORB",98,0)
 D AGET^ORWORR(.ORLST,ORDFN,5,ORDG)
"RTN","ORWORB",99,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",100,0)
 N XQAKILL,ORNIFN,ORVP
"RTN","ORWORB",101,0)
 S ORNIFN=$O(^ORD(100.9,"B","MEDICATIONS EXPIRING",0)),ORVP=ORDFN_";DPT("
"RTN","ORWORB",102,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN) ; expiring meds notif
"RTN","ORWORB",103,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",104,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",105,0)
 Q
"RTN","ORWORB",106,0)
KILEXOI(Y,ORDFN,ORNIFN)  ; -- Delete expiring flagged OI notification if no flagged expiring OI remaining
"RTN","ORWORB",107,0)
 N ORDG,ORLST S ORDG=$$DG^ORQOR1("ALL")
"RTN","ORWORB",108,0)
 D AGET^ORWORR(.ORLST,ORDFN,5,ORDG)
"RTN","ORWORB",109,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",110,0)
 N XQAKILL,ORVP
"RTN","ORWORB",111,0)
 S ORVP=ORDFN_";DPT("
"RTN","ORWORB",112,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN) ; flagged expiring OI notifications
"RTN","ORWORB",113,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",114,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",115,0)
 Q
"RTN","ORWORB",116,0)
KILUNVOR(Y,ORDFN)  ; -- Delete UNVERIFIED ORDER notification if none remaining within current admission/30 days
"RTN","ORWORB",117,0)
 N DFN,ORDG,ORLST,ORBDT,OREDT S ORDG=$$DG^ORQOR1("ALL")
"RTN","ORWORB",118,0)
 S OREDT=$$NOW^XLFDT
"RTN","ORWORB",119,0)
 ;get current admission date/time:
"RTN","ORWORB",120,0)
 S DFN=ORDFN,VA200="" D INP^VADPT
"RTN","ORWORB",121,0)
 S ORBDT=$P($G(VAIN(7)),U)
"RTN","ORWORB",122,0)
 S ORBDT=$S('$L($G(ORBDT)):$$FMADD^XLFDT(OREDT,"-30"),1:ORBDT)  ;<= if no admission use past 30 days
"RTN","ORWORB",123,0)
 D AGET^ORWORR(.ORLST,ORDFN,9,ORDG,ORBDT,OREDT)
"RTN","ORWORB",124,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",125,0)
 N XQAKILL,ORVP,ORNIFN
"RTN","ORWORB",126,0)
 S ORNIFN=$O(^ORD(100.9,"B","UNVERIFIED ORDER",0)),ORVP=ORDFN_";DPT("
"RTN","ORWORB",127,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN)
"RTN","ORWORB",128,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",129,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",130,0)
 Q
"RTN","ORWORB",131,0)
KILUNVMD(Y,ORDFN)  ; -- Delete UNVERIFIED MEDS notification if none remaining within current admission/30 days
"RTN","ORWORB",132,0)
 N DFN,ORDG,ORLST,ORBDT,OREDT S ORDG=$$DG^ORQOR1("RX")
"RTN","ORWORB",133,0)
 S OREDT=$$NOW^XLFDT
"RTN","ORWORB",134,0)
 ;get current admission date/time:
"RTN","ORWORB",135,0)
 S DFN=ORDFN,VA200="" D INP^VADPT
"RTN","ORWORB",136,0)
 S ORBDT=$P($G(VAIN(7)),U)
"RTN","ORWORB",137,0)
 S ORBDT=$S('$L($G(ORBDT)):$$FMADD^XLFDT(OREDT,"-30"),1:ORBDT)  ;<= if no admission use past 30 days
"RTN","ORWORB",138,0)
 D AGET^ORWORR(.ORLST,ORDFN,9,ORDG,ORBDT,OREDT)
"RTN","ORWORB",139,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",140,0)
 N XQAKILL,ORVP,ORNIFN
"RTN","ORWORB",141,0)
 S ORNIFN=$O(^ORD(100.9,"B","UNVERIFIED MEDICATION ORDER",0)),ORVP=ORDFN_";DPT("
"RTN","ORWORB",142,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN)
"RTN","ORWORB",143,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",144,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",145,0)
 Q
"RTN","ORWORB",146,0)
ESORD(ORY,XQAID)   ;order(s) requiring electronic signature follow-up
"RTN","ORWORB",147,0)
 K XQAKILL
"RTN","ORWORB",148,0)
 N ORPT,ORDG,ORBXQAID,ORY,ORX,ORZ,ORDERS,ORDNUM,ORQUIT,ORBLMDEL
"RTN","ORWORB",149,0)
 S ORBXQAID=XQAID,ORDERS=0,ORQUIT=0
"RTN","ORWORB",150,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORWORB",151,0)
 S ORDG=$$DG^ORQOR1("ALL")
"RTN","ORWORB",152,0)
 ;the FLG code for UNSIGNED orders in ORQ1 is '11'
"RTN","ORWORB",153,0)
 ;get unsigned orders - if none exist, delete alert then quit:
"RTN","ORWORB",154,0)
 D EN^ORQ1(ORPT_";DPT(",ORDG,11,"","","",0,0)
"RTN","ORWORB",155,0)
 S ORX="",ORX=$O(^TMP("ORR",$J,ORX)) Q:ORX=""  I +$G(^TMP("ORR",$J,ORX,"TOT"))<1 D DEL^ORB3FUP1(.ORY,ORBXQAID) K ^TMP("ORR",$J) Q
"RTN","ORWORB",156,0)
 ;
"RTN","ORWORB",157,0)
 ;user does not have ORES key, delete user's alert:
"RTN","ORWORB",158,0)
 I '$D(^XUSEC("ORES",DUZ)) S XQAKILL=1 D DEL^ORB3FUP1(.ORY,ORBXQAID) K ^TMP("ORR",$J) Q
"RTN","ORWORB",159,0)
 ;
"RTN","ORWORB",160,0)
 ;if prov is NOT linked to pt via attending, primary or teams:
"RTN","ORWORB",161,0)
 I $$PPLINK^ORQPTQ1(DUZ,ORPT)=0 D
"RTN","ORWORB",162,0)
 .S ORX="" F  S ORX=$O(^TMP("ORR",$J,ORX)) Q:ORX=""!(ORDERS=1)  D
"RTN","ORWORB",163,0)
 ..S ORZ="" F  S ORZ=$O(^TMP("ORR",$J,ORX,ORZ)) Q:+ORZ=0!(ORDERS=1)  D
"RTN","ORWORB",164,0)
 ...S ORDNUM=^TMP("ORR",$J,ORX,ORZ)
"RTN","ORWORB",165,0)
 ...;quit if this unsigned order's last action was made by the user
"RTN","ORWORB",166,0)
 ...I DUZ=+$$UNSIGNOR^ORQOR2(ORDNUM) S ORDERS=1
"RTN","ORWORB",167,0)
 .I ORDERS'=1 D  ;provider has no outstanding unsigned orders for pt
"RTN","ORWORB",168,0)
 ..S XQAKILL=1 D DEL^ORB3FUP1(.ORY,ORBXQAID)  ;delete alert for this user
"RTN","ORWORB",169,0)
 K ^TMP("ORR",$J)
"RTN","ORWORB",170,0)
 Q
"RTN","ORWORB",171,0)
 ;
"RTN","ORWORB",172,0)
TXTFUP(ROOT,DFN,NOTIF,XQADATA) ; Follow-up for text messages
"RTN","ORWORB",173,0)
 ;
"RTN","ORWORB",174,0)
 I NOTIF=67 D CHGRAD
"RTN","ORWORB",175,0)
 Q
"RTN","ORWORB",176,0)
 ;
"RTN","ORWORB",177,0)
CHGRAD ;GUI follow-up for Imaging Request Changed (#67)
"RTN","ORWORB",178,0)
 S ROOT=$NA(^TMP($J,"RAE4"))
"RTN","ORWORB",179,0)
 K @ROOT
"RTN","ORWORB",180,0)
 D SET1^RAO7PC4  ;DBIA #3563
"RTN","ORWORB",181,0)
 Q
"RTN","ORWORB",182,0)
 ;
"RTN","ORWORB",183,0)
GETSORT(ORY) ;return notification sort method for user/division/system/pkg
"RTN","ORWORB",184,0)
 S ORY=$$GET^XPAR("ALL","ORB SORT METHOD",1,"I")
"RTN","ORWORB",185,0)
 Q
"RTN","ORWORB",186,0)
 ;
"RTN","ORWORB",187,0)
SETSORT(ORERR,SORT) ;set notification sort method for user
"RTN","ORWORB",188,0)
 D EN^XPAR(DUZ_";VA(200,","ORB SORT METHOD",1,SORT,.ORERR)
"RTN","ORWORB",189,0)
 Q
"RTN","ORWPCE")
0^42^B75772132
"RTN","ORWPCE",1,0)
ORWPCE ; SLC/JM/REV - wrap calls to PCE and AICS; 11/21/03 [11/26/03 2:13pm]
"RTN","ORWPCE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,173,190**;Dec 17, 1997
"RTN","ORWPCE",3,0)
 Q
"RTN","ORWPCE",4,0)
VISIT(LST,CLINIC,ORDATE) ; visit types for clinic
"RTN","ORWPCE",5,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",6,0)
 I $$PATCH^XPDUTL("IBD*3.0*51") D
"RTN","ORWPCE",7,0)
 . D GETLST^IBDF18A(CLINIC,"DG SELECT VISIT TYPE CPT PROCEDURES","LST",,,,ORDATE)
"RTN","ORWPCE",8,0)
 E  D
"RTN","ORWPCE",9,0)
 . D GETLST^IBDF18A(CLINIC,"DG SELECT VISIT TYPE CPT PROCEDURES","LST")
"RTN","ORWPCE",10,0)
 . I $$PATCH^XPDUTL("ICPT*6.0*14") D
"RTN","ORWPCE",11,0)
 . . N ORWINDEX S ORWINDEX=0
"RTN","ORWPCE",12,0)
 . . F  S ORWINDEX=$O(LST(ORWINDEX)) Q:'ORWINDEX  D:$P(LST(ORWINDEX),"^",1)]""
"RTN","ORWPCE",13,0)
 . . . I '+$$STATCHK^ICPTAPIU($P(LST(ORWINDEX),"^",1),ORDATE) K LST(ORWINDEX) Q 
"RTN","ORWPCE",14,0)
 Q
"RTN","ORWPCE",15,0)
PROC(LST,CLINIC,ORDATE) ; get list of procedures for clinic P12 for CPTMods
"RTN","ORWPCE",16,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",17,0)
 I $$PATCH^XPDUTL("IBD*3.0*51") D
"RTN","ORWPCE",18,0)
 . D GETLST^IBDF18A(CLINIC,"DG SELECT CPT PROCEDURE CODES","LST",,,1,ORDATE)
"RTN","ORWPCE",19,0)
 E  D
"RTN","ORWPCE",20,0)
 . D GETLST^IBDF18A(CLINIC,"DG SELECT CPT PROCEDURE CODES","LST",,,1)
"RTN","ORWPCE",21,0)
 . I $$PATCH^XPDUTL("ICPT*6.0*14") D
"RTN","ORWPCE",22,0)
 . . N ORWINDEX S ORWINDEX=0
"RTN","ORWPCE",23,0)
 . . F  S ORWINDEX=$O(LST(ORWINDEX)) Q:'ORWINDEX  D:$P(LST(ORWINDEX),"^",1)]""
"RTN","ORWPCE",24,0)
 . . . I '+$$STATCHK^ICPTAPIU($P(LST(ORWINDEX),"^",1),ORDATE) S LST(ORWINDEX)=""
"RTN","ORWPCE",25,0)
 N IDX,MOD,CODES,FIRST S IDX=0
"RTN","ORWPCE",26,0)
 F  S IDX=$O(LST(IDX)) Q:'+IDX  D
"RTN","ORWPCE",27,0)
 . I LST(IDX)="" K LST(IDX) Q
"RTN","ORWPCE",28,0)
 . S MOD=0,CODES="",FIRST=1
"RTN","ORWPCE",29,0)
 . F  S MOD=$O(LST(IDX,"MODIFIER",MOD)) Q:(MOD="")  D
"RTN","ORWPCE",30,0)
 . . I FIRST S FIRST=0
"RTN","ORWPCE",31,0)
 . . E  S CODES=CODES_";"
"RTN","ORWPCE",32,0)
 . . S CODES=CODES_LST(IDX,"MODIFIER",MOD)
"RTN","ORWPCE",33,0)
 . K LST(IDX,"MODIFIER")
"RTN","ORWPCE",34,0)
 . I 'FIRST S $P(LST(IDX),U,12)=CODES
"RTN","ORWPCE",35,0)
 Q
"RTN","ORWPCE",36,0)
CPTMODS(LST,ORCPTCOD,ORDATE) ; Get CPT Modifiers for CPT Code
"RTN","ORWPCE",37,0)
 N ORM,ORIDX,ORI,MODNAME
"RTN","ORWPCE",38,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",39,0)
 I $$PATCH^XPDUTL("ICPT*6.0*14") D
"RTN","ORWPCE",40,0)
 . I +($$CODM^ICPTCOD(ORCPTCOD,$NA(ORM),0,ORDATE)),+$D(ORM) D
"RTN","ORWPCE",41,0)
 . . S ORIDX="",ORI=0
"RTN","ORWPCE",42,0)
 . . F  S ORIDX=$O(ORM(ORIDX)) Q:(ORIDX="")  D
"RTN","ORWPCE",43,0)
 . . . S ORI=ORI+1,MODNAME=$P(ORM(ORIDX),U,1)
"RTN","ORWPCE",44,0)
 . . . S LST(MODNAME_ORI)=$P(ORM(ORIDX),U,2)_U_MODNAME_U_ORIDX
"RTN","ORWPCE",45,0)
 E  D
"RTN","ORWPCE",46,0)
 . I +($$CODM^ICPTCOD(ORCPTCOD,$NA(ORM),0,"T")),+$D(ORM) D
"RTN","ORWPCE",47,0)
 . . S ORIDX="",ORI=0
"RTN","ORWPCE",48,0)
 . . F  S ORIDX=$O(ORM(ORIDX)) Q:(ORIDX="")  D
"RTN","ORWPCE",49,0)
 . . . S ORI=ORI+1,MODNAME=$P(ORM(ORIDX),U,1)
"RTN","ORWPCE",50,0)
 . . . S LST(MODNAME_ORI)=$P(ORM(ORIDX),U,2)_U_MODNAME_U_ORIDX
"RTN","ORWPCE",51,0)
 Q
"RTN","ORWPCE",52,0)
GETMOD(MODINFO,ORMODIEN,ORDATE) ; Get info for specific CPT Modifier
"RTN","ORWPCE",53,0)
 N ORDATA
"RTN","ORWPCE",54,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",55,0)
 I $$PATCH^XPDUTL("ICPT*6.0*14") D
"RTN","ORWPCE",56,0)
 . S ORDATA=$$MOD^ICPTMOD(ORMODIEN,"I",ORDATE,1)
"RTN","ORWPCE",57,0)
 E  D
"RTN","ORWPCE",58,0)
 . S ORDATA=$$MOD^ICPTMOD(ORMODIEN,"I","T",1)
"RTN","ORWPCE",59,0)
 I +ORDATA>0 S MODINFO=ORMODIEN_U_$P(ORDATA,U,3)_U_$P(ORDATA,U,2)
"RTN","ORWPCE",60,0)
 Q
"RTN","ORWPCE",61,0)
DIAG(LST,CLINIC,ORDATE) ; get list of diagnoses for clinic
"RTN","ORWPCE",62,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",63,0)
 I $$PATCH^XPDUTL("IBD*3.0*51") D
"RTN","ORWPCE",64,0)
 . D GETLST^IBDF18A(CLINIC,"DG SELECT ICD-9 DIAGNOSIS CODES","LST",,,,ORDATE)
"RTN","ORWPCE",65,0)
 E  D
"RTN","ORWPCE",66,0)
 . D GETLST^IBDF18A(CLINIC,"DG SELECT ICD-9 DIAGNOSIS CODES","LST")
"RTN","ORWPCE",67,0)
 . ; DBIA   10082     NAME: ICD DIAGNOSIS FILE
"RTN","ORWPCE",68,0)
 . N ORWINDEX,ORWICD9,ORICD186
"RTN","ORWPCE",69,0)
 . S ORWINDEX=0
"RTN","ORWPCE",70,0)
 . S ORICD186=$$PATCH^XPDUTL("ICD*18.0*6")
"RTN","ORWPCE",71,0)
 . F  S ORWINDEX=$O(LST(ORWINDEX)) Q:'ORWINDEX  D:$P(LST(ORWINDEX),"^",1)]""
"RTN","ORWPCE",72,0)
 . . I +ORICD186 D
"RTN","ORWPCE",73,0)
 . . . I '+$$STATCHK^ICDAPIU($P(LST(ORWINDEX),"^",1),ORDATE) K LST(ORWINDEX) Q 
"RTN","ORWPCE",74,0)
 . . E  D
"RTN","ORWPCE",75,0)
 . . . S ORWICD9=$O(^ICD9("BA",$P(LST(ORWINDEX),"^",1)_" ",0))
"RTN","ORWPCE",76,0)
 . . . I +ORWICD9,$G(^ICD9(ORWICD9,0)) S $P(LST(ORWINDEX),"^",3)=$P(^ICD9(ORWICD9,0),"^",11)
"RTN","ORWPCE",77,0)
 Q
"RTN","ORWPCE",78,0)
IMM(LST,CLINIC) ;get immunizations for clinic
"RTN","ORWPCE",79,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT IMMUNIZATIONS","LST")
"RTN","ORWPCE",80,0)
 Q
"RTN","ORWPCE",81,0)
SK(LST,CLINIC) ;get skin test for clinic
"RTN","ORWPCE",82,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT SKIN TESTS","LST")
"RTN","ORWPCE",83,0)
 Q
"RTN","ORWPCE",84,0)
HF(LST,CLINIC) ;get health factors for clinic
"RTN","ORWPCE",85,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT HEALTH FACTORS","LST")
"RTN","ORWPCE",86,0)
 Q
"RTN","ORWPCE",87,0)
PED(LST,CLINIC) ;get education topices for clinic
"RTN","ORWPCE",88,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT EDUCATION TOPICS","LST")
"RTN","ORWPCE",89,0)
 Q
"RTN","ORWPCE",90,0)
TRT(LST,CLINIC) ;get treatments for clinic
"RTN","ORWPCE",91,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT TREATMENTS","LST")
"RTN","ORWPCE",92,0)
 Q
"RTN","ORWPCE",93,0)
XAM(LST,CLINIC) ;get exams for clinic
"RTN","ORWPCE",94,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT EXAMS","LST")
"RTN","ORWPCE",95,0)
 Q
"RTN","ORWPCE",96,0)
ACTPROB(GLST,DFN,ORDATE) ;get patient's active problems
"RTN","ORWPCE",97,0)
 K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE",98,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",99,0)
 D DSELECT^GMPLENFM
"RTN","ORWPCE",100,0)
 N ORPROB,ORPROBIX,ORPRCNT
"RTN","ORWPCE",101,0)
 S ORPRCNT=0
"RTN","ORWPCE",102,0)
 S ORPROBIX=0
"RTN","ORWPCE",103,0)
 F  S ORPROBIX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE",104,0)
 . S ORPROB=$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)
"RTN","ORWPCE",105,0)
 . I $E(ORPROB,1)="$" S ORPROB=$E(ORPROB,2,255)
"RTN","ORWPCE",106,0)
 . I '$D(ORPROB(ORPROB)) D
"RTN","ORWPCE",107,0)
 .. S ORPROB(ORPROB)=""
"RTN","ORWPCE",108,0)
 .. S ORPRCNT=ORPRCNT+1
"RTN","ORWPCE",109,0)
 .. S $P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)=ORPROB
"RTN","ORWPCE",110,0)
 . E  K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)
"RTN","ORWPCE",111,0)
 ; DBIA   10082     NAME: ICD DIAGNOSIS FILE
"RTN","ORWPCE",112,0)
 N ORWINDEX,ORWICD9,ORITEM,ORICD186
"RTN","ORWPCE",113,0)
 S ORWINDEX=0
"RTN","ORWPCE",114,0)
 S ORICD186=$$PATCH^XPDUTL("ICD*18.0*6")
"RTN","ORWPCE",115,0)
 F  S ORWINDEX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORWINDEX)) Q:'ORWINDEX  D:$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORWINDEX),"^",1)]""
"RTN","ORWPCE",116,0)
 . S ORITEM=^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORWINDEX)
"RTN","ORWPCE",117,0)
 . I +ORICD186 D
"RTN","ORWPCE",118,0)
 . . I '+$$STATCHK^ICDAPIU($P(ORITEM,"^",3),ORDATE) S $P(ORITEM,"^",11)="#"
"RTN","ORWPCE",119,0)
 . E  D
"RTN","ORWPCE",120,0)
 . . S ORWICD9=$O(^ICD9("BA",$P(ORITEM,"^",3)_" ",0))
"RTN","ORWPCE",121,0)
 . . I +ORWICD9,$G(^ICD9(ORWICD9,0)) S $P(ORITEM,"^",10)=$P(^ICD9(ORWICD9,0),"^",11)
"RTN","ORWPCE",122,0)
 . S ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORWINDEX)=ORITEM
"RTN","ORWPCE",123,0)
 S ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",0)=ORPRCNT
"RTN","ORWPCE",124,0)
 S GLST="^TMP(""IB"","_$J_",""INTERFACES"",""GMP SELECT PATIENT ACTIVE PROBLEMS"")"
"RTN","ORWPCE",125,0)
 Q
"RTN","ORWPCE",126,0)
SCSEL(VAL,DFN,ATM,LOC,VST) ; SC conditions that may be selected
"RTN","ORWPCE",127,0)
 ; VAL=SCallow^SCdflt;AOallow^AOdflt;IRallow^IRdflt;ECallow^ECdflt;
"RTN","ORWPCE",128,0)
 ;     MSTallow^MSTdflt;HNCallow^HNCdflt;CVAllow^CVDflt
"RTN","ORWPCE",129,0)
 N ORX,S S S=";"
"RTN","ORWPCE",130,0)
 D SCCOND^PXUTLSCC(DFN,ATM,LOC,$G(VST),.ORX)
"RTN","ORWPCE",131,0)
 S VAL=$G(ORX("SC"))_S_$G(ORX("AO"))_S_$G(ORX("IR"))_S_$G(ORX("EC"))_S_$G(ORX("MST"))_S_$G(ORX("HNC"))_S_$G(ORX("CV"))
"RTN","ORWPCE",132,0)
 Q
"RTN","ORWPCE",133,0)
SCDIS(LST,DFN) ; SC % and rated disabilities
"RTN","ORWPCE",134,0)
 N VAEL,VAERR,I,ILST,DIS,SC,X
"RTN","ORWPCE",135,0)
 D ELIG^VADPT
"RTN","ORWPCE",136,0)
 S LST(1)="Service Connected: "_$S(+VAEL(3):$P(VAEL(3),U,2)_"%",1:"NO")
"RTN","ORWPCE",137,0)
 I 'VAEL(4),'$P($G(^DG(391,+VAEL(6),0)),U,2) S LST(2)="NOT A VETERAN." Q
"RTN","ORWPCE",138,0)
 S I=0,ILST=1 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X=^(I,0) D
"RTN","ORWPCE",139,0)
 . S DIS=$P($G(^DIC(31,+X,0)),U) Q:DIS=""
"RTN","ORWPCE",140,0)
 . S SC=$S($P(X,U,3):"SC",$P(X,U,3)']"":"not specified",1:"NSC")
"RTN","ORWPCE",141,0)
 . S ILST=ILST+1,LST(ILST)=DIS_" ("_$P(X,U,2)_"% "_SC_")"
"RTN","ORWPCE",142,0)
 I ILST=1 S LST(2)="Rated Disabilities: NONE STATED"
"RTN","ORWPCE",143,0)
 Q
"RTN","ORWPCE",144,0)
CPTREQD(VAL,IEN) ; return 1 in VAL if note still needs a CPT code
"RTN","ORWPCE",145,0)
 S VAL=+$P(^TIU(8925,IEN,0),U,11)
"RTN","ORWPCE",146,0)
 Q
"RTN","ORWPCE",147,0)
NOTEVSTR(VAL,IEN) ; return the VSTR^AUTHOR for a note
"RTN","ORWPCE",148,0)
 N X0,X12,VISIT
"RTN","ORWPCE",149,0)
 S X0=$G(^TIU(8925,+IEN,0)),X12=$G(^(12)),VISIT=$P(X12,U,7)
"RTN","ORWPCE",150,0)
 I +VISIT S VAL=$$VSTRBLD^TIUSRVP(VISIT) I 1
"RTN","ORWPCE",151,0)
 E  S VAL=$P(X12,U,11)_";"_$P(X0,U,7)_";"_$P(X0,U,13)
"RTN","ORWPCE",152,0)
 Q
"RTN","ORWPCE",153,0)
HASVISIT(ORY,IEN,DFN,ORLOC,ORDTE) ;Has visit or is stand alone
"RTN","ORWPCE",154,0)
 N ORVISIT
"RTN","ORWPCE",155,0)
 S ORY=-1
"RTN","ORWPCE",156,0)
 I +$G(IEN)>0 S ORVISIT=+$P($G(^TIU(8925,+IEN,0)),U,3)
"RTN","ORWPCE",157,0)
 I +$G(ORVISIT)'>0 S ORVISIT=$$GETENC^PXAPI(DFN,ORDTE,ORLOC)
"RTN","ORWPCE",158,0)
 I +$G(ORVISIT)>0 S ORY=$$VST2APPT^PXAPI(ORVISIT)
"RTN","ORWPCE",159,0)
 Q
"RTN","ORWPCE",160,0)
DELETE(VAL,VSTR,DFN) ; delete PCE info when deleting a note
"RTN","ORWPCE",161,0)
 N VISIT,ORCOUNT
"RTN","ORWPCE",162,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,ZTSYNC,ZTSK
"RTN","ORWPCE",163,0)
 I '$D(^TMP("ORWPCE",$J,VSTR)) S VAL=0 Q  ; no PCE data saved yet
"RTN","ORWPCE",164,0)
 I $P(VSTR,";",3)="H" S VAL=0 Q           ; leave inpatient alone
"RTN","ORWPCE",165,0)
 I $L($T(DOCCNT^TIUSRVLV))=0 S VAL=0 Q    ; leave if no tiu entry point
"RTN","ORWPCE",166,0)
 D DOCCNT^TIUSRVLV(.ORCOUNT,DFN,VSTR)     ; Do not delete if another
"RTN","ORWPCE",167,0)
 I ORCOUNT>0 S VAL=0 Q                    ; title points to visit
"RTN","ORWPCE",168,0)
 S ZTIO="ORW/PXAPI RESOURCE",ZTRTN="DQDEL^ORWPCE1",ZTDTH=$H
"RTN","ORWPCE",169,0)
 S (ZTSAVE("VSTR"),ZTSAVE("DFN"))="",ZTDESC="CPRS Delete Note/PCE"
"RTN","ORWPCE",170,0)
 S ZTSYNC="ORW"_VSTR
"RTN","ORWPCE",171,0)
 D ^%ZTLOAD I '$D(ZTSK) D DQDEL^ORWPCE1
"RTN","ORWPCE",172,0)
 Q
"RTN","ORWPCE",173,0)
SAVE(OK,PCELIST,NOTEIEN,ORLOC) ; save PCE information
"RTN","ORWPCE",174,0)
 N VSTR,GMPLUSER
"RTN","ORWPCE",175,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,ZTSYNC,ZTSK
"RTN","ORWPCE",176,0)
 S VSTR=$P(PCELIST(1),U,4) K ^TMP("ORWPCE",$J,VSTR)
"RTN","ORWPCE",177,0)
 M ^TMP("ORWPCE",$J,VSTR)=PCELIST
"RTN","ORWPCE",178,0)
 S GMPLUSER=$$CLINUSER^ORQQPL1(DUZ),NOTEIEN=+$G(NOTEIEN)
"RTN","ORWPCE",179,0)
 S ZTIO="ORW/PXAPI RESOURCE",ZTRTN="DQSAVE^ORWPCE1",ZTDTH=$H
"RTN","ORWPCE",180,0)
 S ZTSAVE("PCELIST(")="",ZTDESC="Data from CPRS to PCE"
"RTN","ORWPCE",181,0)
 S ZTSAVE("GMPLUSER")="",ZTSAVE("NOTEIEN")="",ZTSAVE("DUZ")=""
"RTN","ORWPCE",182,0)
 S ZTSYNC="ORW"_VSTR,ZTSAVE("ORLOC")=""
"RTN","ORWPCE",183,0)
 D ^%ZTLOAD I '$D(ZTSK) D DQSAVE^ORWPCE1
"RTN","ORWPCE",184,0)
 Q
"RTN","ORWPCE",185,0)
LEX(LST,X,APP,ORDATE)   ; return list after lexicon lookup
"RTN","ORWPCE",186,0)
 N LEX,ILST,I,IEN
"RTN","ORWPCE",187,0)
 S:APP="CPT" APP="CHP" ; LEX PATCH 10
"RTN","ORWPCE",188,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",189,0)
 I $$PATCH^XPDUTL("LEX*2.0*25") D
"RTN","ORWPCE",190,0)
 . D CONFIG^LEXSET(APP,APP,ORDATE)
"RTN","ORWPCE",191,0)
 . D LOOK^LEXA(X,APP,1,"",ORDATE)
"RTN","ORWPCE",192,0)
 E  D
"RTN","ORWPCE",193,0)
 . D CONFIG^LEXSET(APP,APP)
"RTN","ORWPCE",194,0)
 . D LOOK^LEXA(X,APP,1)
"RTN","ORWPCE",195,0)
 I '$D(LEX("LIST",1)) S LST(1)="-1^No matches found." Q
"RTN","ORWPCE",196,0)
 S LST(1)=LEX("LIST",1),ILST=1
"RTN","ORWPCE",197,0)
 S I="" F  S I=$O(^TMP("LEXFND",$J,I)) Q:I'<0  D
"RTN","ORWPCE",198,0)
 . S IEN=$O(^TMP("LEXFND",$J,I,0))
"RTN","ORWPCE",199,0)
 . S ILST=ILST+1,LST(ILST)=IEN_U_^TMP("LEXFND",$J,I,IEN)
"RTN","ORWPCE",200,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","ORWPCE",201,0)
 Q
"RTN","ORWPCE",202,0)
LEXCODE(VAL,IEN,APP,ORDATE)     ; return code for a lexicon entry
"RTN","ORWPCE",203,0)
 S VAL=""
"RTN","ORWPCE",204,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",205,0)
 I $$PATCH^XPDUTL("LEX*2.0*25") D
"RTN","ORWPCE",206,0)
 . I APP="ICD" S VAL=$$ICDONE^LEXU(IEN,ORDATE)
"RTN","ORWPCE",207,0)
 . I APP="CPT"!(APP="CHP") S VAL=$$CPTONE^LEXU(IEN,ORDATE) ; LEX PATCH 10
"RTN","ORWPCE",208,0)
 . I VAL="",(APP="CHP") S VAL=$$CPCONE^LEXU(IEN,ORDATE) ; LEX PATCH 10
"RTN","ORWPCE",209,0)
 E  D
"RTN","ORWPCE",210,0)
 . I APP="ICD" S VAL=$$ICDONE^LEXU(IEN)
"RTN","ORWPCE",211,0)
 . I APP="CPT"!(APP="CHP") S VAL=$$CPTONE^LEXU(IEN) ; LEX PATCH 10
"RTN","ORWPCE",212,0)
 . I VAL="",(APP="CHP") S VAL=$$CPCONE^LEXU(IEN) ; LEX PATCH 10
"RTN","ORWPCE",213,0)
 Q
"RTN","ORWPCE",214,0)
ADDRES ; Add the ORW/PXAPI RESOURCE device
"RTN","ORWPCE",215,0)
 N X
"RTN","ORWPCE",216,0)
 S X=$$RES^XUDHSET("ORW/PXAPI RESOURCE",,5,"CPRS to PCE transactions")
"RTN","ORWPCE",217,0)
 Q
"RTN","ORWPCE",218,0)
GETSVC(NEWSVC,SVC,LOC,INP) ; Return correct Service Connected Category
"RTN","ORWPCE",219,0)
 N DSS
"RTN","ORWPCE",220,0)
 S DSS=$P($G(^SC(+LOC,0)),U,7)
"RTN","ORWPCE",221,0)
 Q:'+DSS
"RTN","ORWPCE",222,0)
 S NEWSVC=$$SVC^PXKCO(.SVC,DSS,INP,LOC) ; DBIA #3225
"RTN","ORWPCE",223,0)
 Q
"RTN","ORWPCE1")
0^45^B60045966
"RTN","ORWPCE1",1,0)
ORWPCE1 ;SLC/KCM - PCE Calls from CPRS GUI; 11/21/03
"RTN","ORWPCE1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148,187,190**;Dec 17, 1997
"RTN","ORWPCE1",3,0)
GETVSIT(VSTR,DFN) ; lookup a visit
"RTN","ORWPCE1",4,0)
 N PKG,SRC,ORPXAPI,OK,ORVISIT
"RTN","ORWPCE1",5,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",6,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",7,0)
 S ORPXAPI("ENCOUNTER",1,"ENC D/T")=$P(VSTR,";",2)
"RTN","ORWPCE1",8,0)
 S ORPXAPI("ENCOUNTER",1,"PATIENT")=DFN
"RTN","ORWPCE1",9,0)
 S ORPXAPI("ENCOUNTER",1,"HOS LOC")=+VSTR
"RTN","ORWPCE1",10,0)
 S ORPXAPI("ENCOUNTER",1,"SERVICE CATEGORY")=$P(VSTR,";",3)
"RTN","ORWPCE1",11,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",12,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORVISIT)
"RTN","ORWPCE1",13,0)
 Q ORVISIT
"RTN","ORWPCE1",14,0)
DQDEL ; background call to DATA2PCE and DELVFILE
"RTN","ORWPCE1",15,0)
 N VISIT,VAL
"RTN","ORWPCE1",16,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",17,0)
 S VISIT=$$GETVSIT(VSTR,DFN)
"RTN","ORWPCE1",18,0)
 S VAL=$$DELVFILE^PXAPI("ALL",VISIT,"","TEXT INTEGRATION UTILITIES")
"RTN","ORWPCE1",19,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",20,0)
 Q
"RTN","ORWPCE1",21,0)
DQSAVE ; Background Call to DATA2PCE
"RTN","ORWPCE1",22,0)
 N PKG,SRC,TYP,CODE,IEN,OK,I,X,ORPXAPI,ORPXDEL
"RTN","ORWPCE1",23,0)
 N CAT,NARR,ROOT,ROOT2,ORAVST
"RTN","ORWPCE1",24,0)
 N PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT,MOD,MODCNT,MODIDX,MODS
"RTN","ORWPCE1",25,0)
 N COM,COMMENT,COMMENTS
"RTN","ORWPCE1",26,0)
 N DFN,PROBLEMS,PXAPREDT,ORCPTDEL
"RTN","ORWPCE1",27,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",28,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",29,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",30,0)
 S (PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT)=0
"RTN","ORWPCE1",31,0)
 S I="" F  S I=$O(PCELIST(I)) Q:'I  S X=PCELIST(I) D
"RTN","ORWPCE1",32,0)
 . S X=PCELIST(I),TYP=$P(X,U),CODE=$P(X,U,2),CAT=$P(X,U,3),NARR=$P(X,U,4)
"RTN","ORWPCE1",33,0)
 . I $E(TYP,1,3)="PRV" D  Q
"RTN","ORWPCE1",34,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",35,0)
 . . S PRV=PRV+1
"RTN","ORWPCE1",36,0)
 . . S ROOT="ORPXAPI(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",37,0)
 . . S ROOT2="ORPXDEL(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",38,0)
 . . I $E(TYP,4)'="-" D
"RTN","ORWPCE1",39,0)
 . . . S @ROOT@("NAME")=CODE
"RTN","ORWPCE1",40,0)
 . . . S @ROOT@("PRIMARY")=$P(X,U,6)
"RTN","ORWPCE1",41,0)
 . . S @ROOT2@("NAME")=CODE
"RTN","ORWPCE1",42,0)
 . . S @ROOT2@("DELETE")=1
"RTN","ORWPCE1",43,0)
 . . S PXAPREDT=1 ;Allow edit of primary flag
"RTN","ORWPCE1",44,0)
 . I TYP="VST" D  Q
"RTN","ORWPCE1",45,0)
 . . S ROOT="ORPXAPI(""ENCOUNTER"",1)"
"RTN","ORWPCE1",46,0)
 . . I CODE="DT" S @ROOT@("ENC D/T")=$P(X,U,3) Q
"RTN","ORWPCE1",47,0)
 . . I CODE="PT" S @ROOT@("PATIENT")=$P(X,U,3),DFN=$P(X,U,3) Q
"RTN","ORWPCE1",48,0)
 . . I CODE="HL" S @ROOT@("HOS LOC")=$P(X,U,3) Q
"RTN","ORWPCE1",49,0)
 . . I CODE="PR" S @ROOT@("PARENT")=$P(X,U,3) Q
"RTN","ORWPCE1",50,0)
 . . ;prevents checkout! 
"RTN","ORWPCE1",51,0)
 . . I CODE="VC" S @ROOT@("SERVICE CATEGORY")=$P(X,U,3) Q
"RTN","ORWPCE1",52,0)
 . . I CODE="SC" S @ROOT@("SC")=$P(X,U,3) Q
"RTN","ORWPCE1",53,0)
 . . I CODE="AO" S @ROOT@("AO")=$P(X,U,3) Q
"RTN","ORWPCE1",54,0)
 . . I CODE="IR" S @ROOT@("IR")=$P(X,U,3) Q
"RTN","ORWPCE1",55,0)
 . . I CODE="EC" S @ROOT@("EC")=$P(X,U,3) Q
"RTN","ORWPCE1",56,0)
 . . I CODE="MST" S @ROOT@("MST")=$P(X,U,3) Q
"RTN","ORWPCE1",57,0)
 . . I CODE="HNC" S @ROOT@("HNC")=$P(X,U,3) Q
"RTN","ORWPCE1",58,0)
 . . I CODE="CV" S @ROOT@("CV")=$P(X,U,3) Q
"RTN","ORWPCE1",59,0)
 . . I CODE="OL" D  Q
"RTN","ORWPCE1",60,0)
 . . . I +$P(X,U,3) S @ROOT@("INSTITUTION")=$P(X,U,3)
"RTN","ORWPCE1",61,0)
 . . . E  I $P(X,U,4)'="",$P(X,U,4)'="0" D
"RTN","ORWPCE1",62,0)
 . . . . I $$PATCH^XPDUTL("PX*1.0*96") S @ROOT@("OUTSIDE LOCATION")=$P(X,U,4)
"RTN","ORWPCE1",63,0)
 . . . . E  S @ROOT@("COMMENT")="OUTSIDE LOCATION:  "_$P(X,U,4)
"RTN","ORWPCE1",64,0)
 . I $E(TYP,1,3)="CPT" D  Q
"RTN","ORWPCE1",65,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",66,0)
 . . S CPT=CPT+1,ROOT="ORPXAPI(""PROCEDURE"","_CPT_")"
"RTN","ORWPCE1",67,0)
 . . S IEN=+$O(^ICPT("B",CODE,0))
"RTN","ORWPCE1",68,0)
 . . S @ROOT@("PROCEDURE")=IEN
"RTN","ORWPCE1",69,0)
 . . I +$P(X,U,9) D
"RTN","ORWPCE1",70,0)
 . . . S MODS=$P(X,U,9),MODCNT=+MODS
"RTN","ORWPCE1",71,0)
 . . . F MODIDX=1:1:MODCNT D
"RTN","ORWPCE1",72,0)
 . . . . S MOD=$P($P(MODS,";",MODIDX+1),"/")
"RTN","ORWPCE1",73,0)
 . . . . S @ROOT@("MODIFIERS",MOD)=""
"RTN","ORWPCE1",74,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",75,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",76,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",77,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",78,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PROCEDURE^"_CPT
"RTN","ORWPCE1",79,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0,ORCPTDEL=CPT
"RTN","ORWPCE1",80,0)
 . I $E(TYP,1,3)="POV" D  Q
"RTN","ORWPCE1",81,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",82,0)
 . . S ICD=ICD+1,ROOT="ORPXAPI(""DX/PL"","_ICD_")"
"RTN","ORWPCE1",83,0)
 . . S IEN=+$O(^ICD9("AB",CODE_" ",0))
"RTN","ORWPCE1",84,0)
 . . S @ROOT@("DIAGNOSIS")=IEN
"RTN","ORWPCE1",85,0)
 . . S @ROOT@("PRIMARY")=$P(X,U,5)
"RTN","ORWPCE1",86,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",87,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",88,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",89,0)
 . . I $L($P(X,U,7)),$P(X,U,7)=1 S @ROOT@("PL ADD")=$P(X,U,7),PROBLEMS(ICD)=NARR_U_CODE
"RTN","ORWPCE1",90,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="DX/PL^"_ICD
"RTN","ORWPCE1",91,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",92,0)
 . I $E(TYP,1,3)="IMM" D  Q
"RTN","ORWPCE1",93,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",94,0)
 . . S IMM=IMM+1,ROOT="ORPXAPI(""IMMUNIZATION"","_IMM_")"
"RTN","ORWPCE1",95,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",96,0)
 . . S:$L($P(X,U,5)) @ROOT@("SERIES")=$P(X,U,5)
"RTN","ORWPCE1",97,0)
 . . S:$L($P(X,U,5)) @ROOT@("REACTION")=$P(X,U,7)
"RTN","ORWPCE1",98,0)
 . . S:$L($P(X,U,8)) @ROOT@("CONTRAINDICATED")=$P(X,U,8)
"RTN","ORWPCE1",99,0)
 . . S:$L($P(X,U,9)) @ROOT@("REFUSED")=$P(X,U,9)
"RTN","ORWPCE1",100,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",101,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="IMMUNIZATION^"_IMM
"RTN","ORWPCE1",102,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",103,0)
 . I $E(TYP,1,2)="SK" D  Q
"RTN","ORWPCE1",104,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",105,0)
 . . S SK=SK+1,ROOT="ORPXAPI(""SKIN TEST"","_SK_")"
"RTN","ORWPCE1",106,0)
 . . S @ROOT@("TEST")=CODE
"RTN","ORWPCE1",107,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",108,0)
 . . S:$L($P(X,U,7)) @ROOT@("READING")=$P(X,U,7)
"RTN","ORWPCE1",109,0)
 . . S:$L($P(X,U,8)) @ROOT@("D/T READ")=$P(X,U,8)
"RTN","ORWPCE1",110,0)
 . . S:$L($P(X,U,9)) @ROOT@("EVENT D/T")=$P(X,U,9)
"RTN","ORWPCE1",111,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",112,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="SKIN TEST^"_SK
"RTN","ORWPCE1",113,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",114,0)
 . I $E(TYP,1,3)="PED" D  Q
"RTN","ORWPCE1",115,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",116,0)
 . . S PED=PED+1,ROOT="ORPXAPI(""PATIENT ED"","_PED_")"
"RTN","ORWPCE1",117,0)
 . . S @ROOT@("TOPIC")=CODE
"RTN","ORWPCE1",118,0)
 . . S:$L($P(X,U,5)) @ROOT@("UNDERSTANDING")=$P(X,U,5)
"RTN","ORWPCE1",119,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",120,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PATIENT ED^"_PED
"RTN","ORWPCE1",121,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",122,0)
 . I $E(TYP,1,2)="HF" D  Q
"RTN","ORWPCE1",123,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",124,0)
 . . S HF=HF+1,ROOT="ORPXAPI(""HEALTH FACTOR"","_HF_")"
"RTN","ORWPCE1",125,0)
 . . S @ROOT@("HEALTH FACTOR")=CODE
"RTN","ORWPCE1",126,0)
 . . S:$L($P(X,U,5)) @ROOT@("LEVEL/SEVERITY")=$P(X,U,5)
"RTN","ORWPCE1",127,0)
 . . S:$P(X,U,6)'>0 $P(X,U,6)=$G(ORPXAPI("PROVIDER",1,"NAME"))
"RTN","ORWPCE1",128,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",129,0)
 . . S:$L($P(X,U,11)) @ROOT@("EVENT D/T")=$P($P(X,U,11),";",1)
"RTN","ORWPCE1",130,0)
 . . S:$L($P(X,U,11)) SRC=$P($P(X,U,11),";",2)
"RTN","ORWPCE1",131,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="HEALTH FACTOR^"_HF
"RTN","ORWPCE1",132,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",133,0)
 . I $E(TYP,1,3)="XAM" D  Q
"RTN","ORWPCE1",134,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",135,0)
 . . S XAM=XAM+1,ROOT="ORPXAPI(""EXAM"","_XAM_")"
"RTN","ORWPCE1",136,0)
 . . S @ROOT@("EXAM")=CODE
"RTN","ORWPCE1",137,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",138,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",139,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="EXAM^"_XAM
"RTN","ORWPCE1",140,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",141,0)
 . I $E(TYP,1,3)="TRT" D  Q
"RTN","ORWPCE1",142,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",143,0)
 . . S TRT=TRT+1,ROOT="ORPXAPI(""TREATMENT"","_TRT_")"
"RTN","ORWPCE1",144,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",145,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",146,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",147,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",148,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",149,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="TREATMENT^"_TRT
"RTN","ORWPCE1",150,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0
"RTN","ORWPCE1",151,0)
 . I $E(TYP,1,3)="COM" D  Q
"RTN","ORWPCE1",152,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",153,0)
 . . Q:'$L(CAT)
"RTN","ORWPCE1",154,0)
 . . S COMMENTS(CODE)=$P(X,U,3,999)
"RTN","ORWPCE1",155,0)
 ;Store the comments
"RTN","ORWPCE1",156,0)
 S COM=""
"RTN","ORWPCE1",157,0)
 F  S COM=$O(COMMENT(COM)) Q:COM=""  S:$D(COMMENTS(COM)) ORPXAPI($P(COMMENT(COM),"^",1),$P(COMMENT(COM),"^",2),"COMMENT")=COMMENTS(COM)
"RTN","ORWPCE1",158,0)
 ;
"RTN","ORWPCE1",159,0)
 ;Remove any problems to add that the patient already has as active problems
"RTN","ORWPCE1",160,0)
 I $D(PROBLEMS),$D(DFN) D
"RTN","ORWPCE1",161,0)
 . N ORWPROB,ORPROBIX
"RTN","ORWPCE1",162,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",163,0)
 . D DSELECT^GMPLENFM
"RTN","ORWPCE1",164,0)
 . S ORPROBIX=0
"RTN","ORWPCE1",165,0)
 . F  S ORPROBIX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE1",166,0)
 .. S ORWPROB=$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)
"RTN","ORWPCE1",167,0)
 .. S ORWPROB($S($E(ORWPROB,1)="$":$E(ORWPROB,2,255),1:ORWPROB))=""
"RTN","ORWPCE1",168,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",169,0)
 . Q:'$D(ORWPROB)
"RTN","ORWPCE1",170,0)
 . S ORPROBIX=""
"RTN","ORWPCE1",171,0)
 . F  S ORPROBIX=$O(PROBLEMS(ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE1",172,0)
 .. S:$D(ORWPROB(PROBLEMS(ORPROBIX))) ORPXAPI("DX/PL",ORPROBIX,"PL ADD")=0
"RTN","ORWPCE1",173,0)
 ;
"RTN","ORWPCE1",174,0)
 I $$MDS(.ORPXAPI,$G(ORLOC)) S ORPXAPI("ENCOUNTER",1,"CHECKOUT D/T")=$$NOW^XLFDT
"RTN","ORWPCE1",175,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",176,0)
DATA2PCE ;
"RTN","ORWPCE1",177,0)
 I $G(PXAPREDT)!($G(ORCPTDEL)) D
"RTN","ORWPCE1",178,0)
 . M ORPXDEL("ENCOUNTER")=ORPXAPI("ENCOUNTER")
"RTN","ORWPCE1",179,0)
 . I $G(ORCPTDEL) M ORPXDEL("PROCEDURE",ORCPTDEL)=ORPXAPI("PROCEDURE",ORCPTDEL)
"RTN","ORWPCE1",180,0)
 . S OK=$$DATA2PCE^PXAPI("ORPXDEL",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",181,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",182,0)
 I OK>0,+NOTEIEN,+ORAVST D  ; NOTEIEN only set on inpatient encounters
"RTN","ORWPCE1",183,0)
 .N OROK,ORX
"RTN","ORWPCE1",184,0)
 .S ORX(1207)=ORAVST
"RTN","ORWPCE1",185,0)
 .D FILE^TIUSRVP(.OROK,NOTEIEN,.ORX,1)
"RTN","ORWPCE1",186,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",187,0)
 Q
"RTN","ORWPCE1",188,0)
 ;
"RTN","ORWPCE1",189,0)
MDS(X,ORLOC) ; return TRUE if checkout is needed 
"RTN","ORWPCE1",190,0)
 I $$CHKOUT^ORWPCE2(ORLOC) Q 1
"RTN","ORWPCE1",191,0)
 N I,ORAUTO,OROK
"RTN","ORWPCE1",192,0)
 S (OROK,I)=0
"RTN","ORWPCE1",193,0)
 F  S I=$O(X("DX/PL",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",194,0)
 . I $G(X("DX/PL",I,"DIAGNOSIS")) S OROK=1
"RTN","ORWPCE1",195,0)
 I 'OROK D
"RTN","ORWPCE1",196,0)
 .S I=0 F  S I=$O(X("PROCEDURE",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",197,0)
 .. I $G(X("PROCEDURE",I,"PROCEDURE")) S OROK=1
"RTN","ORWPCE1",198,0)
 I $D(X("PROVIDER",1,"NAME")) S OROK=1
"RTN","ORWPCE1",199,0)
 Q OROK
"RTN","ORWPCE3")
0^44^B43500279
"RTN","ORWPCE3",1,0)
ORWPCE3 ; SLC/KCM - Get a PCE encounter for a TIU document;11/21/03
"RTN","ORWPCE3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,190**;Dec 17, 1997
"RTN","ORWPCE3",3,0)
 Q
"RTN","ORWPCE3",4,0)
PCE4NOTE(LST,IEN,DFN,VSITSTR) ; Return encounter for an associated note
"RTN","ORWPCE3",5,0)
 ; LST(1)=HDR^AllowEdit^CPTRequired^VStr^Author^hasCPT
"RTN","ORWPCE3",6,0)
 ; LST(n)=TYP+^CODE^CAT^NARR^QUAL1^QUAL2 (QUAL1=Primary!Qty, QUAL2=Prv)
"RTN","ORWPCE3",7,0)
 N VISIT,VSTR,ILST,LOC,CODE,PRIM,QTY,CAT,NARR,PRV,X0,X12,X802,X811,VTYP
"RTN","ORWPCE3",8,0)
 N IPOV,ICPT,IPRV,IIMM,ISK,IPED,IHF,IXAM,ITRT,ICOM,MIDX,MIEN,MCNT,MODS
"RTN","ORWPCE3",9,0)
 I +$G(IEN)<1 D  I 1 ; Get PCE Data on a new note not yet saved
"RTN","ORWPCE3",10,0)
 . S (X0,X12)=""
"RTN","ORWPCE3",11,0)
 . S VISIT=$$GETENC^PXAPI(DFN,$P(VSITSTR,";",2),$P(VSITSTR,";"))
"RTN","ORWPCE3",12,0)
 . S VSTR=VSITSTR
"RTN","ORWPCE3",13,0)
 E  D
"RTN","ORWPCE3",14,0)
 . S X0=^TIU(8925,IEN,0),X12=$G(^(12))
"RTN","ORWPCE3",15,0)
 . S VISIT=$P(X12,U,7)
"RTN","ORWPCE3",16,0)
 . I 'VISIT S VISIT=$P(X0,U,3)
"RTN","ORWPCE3",17,0)
 . D NOTEVSTR^ORWPCE(.VSTR,IEN)
"RTN","ORWPCE3",18,0)
 S VTYP=$P(VSTR,";",3)
"RTN","ORWPCE3",19,0)
 S ILST=1
"RTN","ORWPCE3",20,0)
 S ICOM=0
"RTN","ORWPCE3",21,0)
 S LST(1)="HDR"_U_("HID"[VTYP)_U_$P(X0,U,11)_U_VSTR_U_$P(X12,U,2)
"RTN","ORWPCE3",22,0)
 ;add hasCPT node
"RTN","ORWPCE3",23,0)
 S LST(1)=LST(1)_U_0
"RTN","ORWPCE3",24,0)
 I VISIT'>0 D  Q
"RTN","ORWPCE3",25,0)
 . I $G(VSTR)'="" M LST=^TMP("ORWPCE",$J,VSTR)  ; get cached visit data
"RTN","ORWPCE3",26,0)
 I $P(LST(1),U,2),VTYP="H" Q                    ; quit if admission
"RTN","ORWPCE3",27,0)
 K ^TMP("PXKENC",$J)
"RTN","ORWPCE3",28,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ORWPCE3",29,0)
 I '$D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0)) Q
"RTN","ORWPCE3",30,0)
 S $P(LST(1),U,6)=$D(^TMP("PXKENC",$J,VISIT,"CPT"))\10
"RTN","ORWPCE3",31,0)
 S X0=^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),LOC=+$P(X0,U,22)
"RTN","ORWPCE3",32,0)
 S ILST=ILST+1,LST(ILST)="VST^DT^"_$P(X0,U)
"RTN","ORWPCE3",33,0)
 S ILST=ILST+1,LST(ILST)="VST^PT^"_$P(X0,U,5)
"RTN","ORWPCE3",34,0)
 S ILST=ILST+1,LST(ILST)="VST^HL^"_LOC_"^^"_$P($G(^SC(LOC,0)),U)
"RTN","ORWPCE3",35,0)
 S ILST=ILST+1,LST(ILST)="VST^PS^0"  ;outpt
"RTN","ORWPCE3",36,0)
 ;S X0=$G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800))
"RTN","ORWPCE3",37,0)
 N VAL
"RTN","ORWPCE3",38,0)
 D SCSEL^ORWPCE(.VAL,$P(X0,U,5),$P(X0,U),LOC,VISIT)
"RTN","ORWPCE3",39,0)
 S ILST=ILST+1,LST(ILST)="VST^SC^"_$P($P(VAL,";",1),U,2)
"RTN","ORWPCE3",40,0)
 S ILST=ILST+1,LST(ILST)="VST^AO^"_$P($P(VAL,";",2),U,2)
"RTN","ORWPCE3",41,0)
 S ILST=ILST+1,LST(ILST)="VST^IR^"_$P($P(VAL,";",3),U,2)
"RTN","ORWPCE3",42,0)
 S ILST=ILST+1,LST(ILST)="VST^EC^"_$P($P(VAL,";",4),U,2)
"RTN","ORWPCE3",43,0)
 S ILST=ILST+1,LST(ILST)="VST^MST^"_$P($P(VAL,";",5),U,2)
"RTN","ORWPCE3",44,0)
 I $P(VAL,";",6)'="" D
"RTN","ORWPCE3",45,0)
 .S ILST=ILST+1,LST(ILST)="VST^HNC^"_$P($P(VAL,";",6),U,2)
"RTN","ORWPCE3",46,0)
 I $P(VAL,";",7)'="" D
"RTN","ORWPCE3",47,0)
 .S ILST=ILST+1,LST(ILST)="VST^CV^"_$P($P(VAL,";",7),U,2)
"RTN","ORWPCE3",48,0)
 ;for provider
"RTN","ORWPCE3",49,0)
 ; LST(n)="PRV"^ien^^^name^primary/secondary flag
"RTN","ORWPCE3",50,0)
 S IPRV=0 F  S IPRV=$O(^TMP("PXKENC",$J,VISIT,"PRV",IPRV)) Q:'IPRV  D
"RTN","ORWPCE3",51,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"PRV",IPRV,0)
"RTN","ORWPCE3",52,0)
 . ;Q:$P(X0,U,4)'="P"
"RTN","ORWPCE3",53,0)
 . S CODE=$P(X0,U),NARR=$P($G(^VA(200,CODE,0)),U)
"RTN","ORWPCE3",54,0)
 . S PRIM=($P(X0,U,4)="P")
"RTN","ORWPCE3",55,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",56,0)
 . S LST(ILST)="PRV"_U_CODE_"^^^"_NARR_"^"_PRIM
"RTN","ORWPCE3",57,0)
 S IPOV=0 F  S IPOV=$O(^TMP("PXKENC",$J,VISIT,"POV",IPOV)) Q:'IPOV  D
"RTN","ORWPCE3",58,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"POV",IPOV,0),X802=$G(^(802)),X811=$G(^(811))
"RTN","ORWPCE3",59,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",60,0)
 . S:CODE CODE=$P(^ICD9(CODE,0),U)
"RTN","ORWPCE3",61,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",62,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",63,0)
 . S NARR=$P(X0,U,4)
"RTN","ORWPCE3",64,0)
 . S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",65,0)
 . S PRIM=($P(X0,U,12)="P")
"RTN","ORWPCE3",66,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",67,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",68,0)
 . S LST(ILST)="POV"_U_CODE_U_CAT_U_NARR_U_PRIM_U_PRV
"RTN","ORWPCE3",69,0)
 . I X811]"" D
"RTN","ORWPCE3",70,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",71,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",72,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",73,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",74,0)
 S ICPT=0 F  S ICPT=$O(^TMP("PXKENC",$J,VISIT,"CPT",ICPT)) Q:'ICPT  D
"RTN","ORWPCE3",75,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"CPT",ICPT,0),X802=$G(^(802)),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",76,0)
 . ;S CODE=$P(X0,U)
"RTN","ORWPCE3",77,0)
 . S CODE=$O(^ICPT("B",$P(X0,U),0))
"RTN","ORWPCE3",78,0)
 . S:CODE CODE=$P(^ICPT(CODE,0),U)
"RTN","ORWPCE3",79,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",80,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",81,0)
 . S NARR=$P(X0,U,4)
"RTN","ORWPCE3",82,0)
 . S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",83,0)
 . S QTY=$P(X0,U,16)
"RTN","ORWPCE3",84,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",85,0)
 . S MCNT=0,MIDX=0,MODS=""
"RTN","ORWPCE3",86,0)
 . F  S MIDX=$O(^TMP("PXKENC",$J,VISIT,"CPT",ICPT,1,MIDX)) Q:'MIDX  D
"RTN","ORWPCE3",87,0)
 . . S MIEN=$G(^TMP("PXKENC",$J,VISIT,"CPT",ICPT,1,MIDX,0))
"RTN","ORWPCE3",88,0)
 . . I +MIEN S MCNT=MCNT+1,MODS=MODS_";/"_MIEN
"RTN","ORWPCE3",89,0)
 . I +MCNT S MODS=MCNT_MODS
"RTN","ORWPCE3",90,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",91,0)
 . S LST(ILST)="CPT"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_U_U_MODS
"RTN","ORWPCE3",92,0)
 . I X811]"" D
"RTN","ORWPCE3",93,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",94,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",95,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",96,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",97,0)
 ;for immunization:
"RTN","ORWPCE3",98,0)
 ; LST(n)="IMM"^Code^^^Series^prv^Reaction^Contraindicated^Refused
"RTN","ORWPCE3",99,0)
 S IIMM=0 F  S IIMM=$O(^TMP("PXKENC",$J,VISIT,"IMM",IIMM)) Q:'IIMM  D
"RTN","ORWPCE3",100,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"IMM",IIMM,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",101,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",102,0)
 . S:CODE NARR=$P(^AUTTIMM(CODE,0),U)
"RTN","ORWPCE3",103,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",104,0)
 . S CAT=""
"RTN","ORWPCE3",105,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",106,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",107,0)
 . S LST(ILST)="IMM"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,6,7)
"RTN","ORWPCE3",108,0)
 . I X811]"" D
"RTN","ORWPCE3",109,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",110,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",111,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",112,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",113,0)
 ;for skin test:
"RTN","ORWPCE3",114,0)
 ; LST(n)="SK"^Code^^^result^prv^reading^d/t read^d/t given
"RTN","ORWPCE3",115,0)
 S ISK=0 F  S ISK=$O(^TMP("PXKENC",$J,VISIT,"SK",ISK)) Q:'ISK  D
"RTN","ORWPCE3",116,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"SK",ISK,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",117,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",118,0)
 . S:CODE NARR=$P(^AUTTSK(CODE,0),U)
"RTN","ORWPCE3",119,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",120,0)
 . S CAT=""
"RTN","ORWPCE3",121,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",122,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",123,0)
 . S LST(ILST)="SK"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,5,6)_U_$P(X12,U)
"RTN","ORWPCE3",124,0)
 . I X811]"" D
"RTN","ORWPCE3",125,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",126,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",127,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",128,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",129,0)
 ;for patient education:
"RTN","ORWPCE3",130,0)
 ; LST(n)="PED"^Code^^^level of understanding^prv
"RTN","ORWPCE3",131,0)
 S IPED=0 F  S IPED=$O(^TMP("PXKENC",$J,VISIT,"PED",IPED)) Q:'IPED  D
"RTN","ORWPCE3",132,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"PED",IPED,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",133,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",134,0)
 . S:CODE NARR=$P(^AUTTEDT(CODE,0),U)
"RTN","ORWPCE3",135,0)
 . S QTY=$P(X0,U,6)
"RTN","ORWPCE3",136,0)
 . S CAT=""
"RTN","ORWPCE3",137,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",138,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",139,0)
 . S LST(ILST)="PED"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",140,0)
 . I X811]"" D
"RTN","ORWPCE3",141,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",142,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",143,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",144,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",145,0)
 ;for health factors:
"RTN","ORWPCE3",146,0)
 ; LST(n)="HF"^Code^^^level/severity^prv
"RTN","ORWPCE3",147,0)
 S IHF=0 F  S IHF=$O(^TMP("PXKENC",$J,VISIT,"HF",IHF)) Q:'IHF  D
"RTN","ORWPCE3",148,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"HF",IHF,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",149,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",150,0)
 . S:CODE NARR=$P(^AUTTHF(CODE,0),U)
"RTN","ORWPCE3",151,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",152,0)
 . S CAT=""
"RTN","ORWPCE3",153,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",154,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",155,0)
 . S LST(ILST)="HF"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",156,0)
 . I X811]"" D
"RTN","ORWPCE3",157,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",158,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",159,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",160,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",161,0)
 ;for exam:
"RTN","ORWPCE3",162,0)
 ; LST(n)="XAM"^Code^^^result^prv
"RTN","ORWPCE3",163,0)
 S IXAM=0 F  S IXAM=$O(^TMP("PXKENC",$J,VISIT,"XAM",IXAM)) Q:'IXAM  D
"RTN","ORWPCE3",164,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"XAM",IXAM,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",165,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",166,0)
 . S:CODE NARR=$P(^AUTTEXAM(CODE,0),U)
"RTN","ORWPCE3",167,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",168,0)
 . S CAT=""
"RTN","ORWPCE3",169,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",170,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",171,0)
 . S LST(ILST)="XAM"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,6,7)
"RTN","ORWPCE3",172,0)
 . I X811]"" D
"RTN","ORWPCE3",173,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",174,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",175,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",176,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",177,0)
 ;for treatment:
"RTN","ORWPCE3",178,0)
 ; LST(n)="TRT"^Code^CAT^NARR^QTY^prv
"RTN","ORWPCE3",179,0)
 S ITRT=0 F  S ITRT=$O(^TMP("PXKENC",$J,VISIT,"TRT",ITRT)) Q:'ITRT  D
"RTN","ORWPCE3",180,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"TRT",ITRT,0),X802=$G(^(802)),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",181,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",182,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",183,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",184,0)
 . S NARR=$P(X0,U,6)
"RTN","ORWPCE3",185,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",186,0)
 . S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",187,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",188,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",189,0)
 . S LST(ILST)="TRT"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",190,0)
 . I X811]"" D
"RTN","ORWPCE3",191,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",192,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",193,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",194,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",195,0)
 Q
"RTN","ORWPS")
0^30^B35516120
"RTN","ORWPS",1,0)
ORWPS ; SLC/KCM/JLI/REV/CLA - Meds Tab; 05/22/03
"RTN","ORWPS",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,141,173,203,190**;Dec 17, 1997
"RTN","ORWPS",3,0)
COVER(LST,DFN)  ; retrieve meds for cover sheet
"RTN","ORWPS",4,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",5,0)
 D OCL^PSOORRL(DFN,"","")
"RTN","ORWPS",6,0)
 N ILST,ITMP,X S ILST=0
"RTN","ORWPS",7,0)
 S ITMP="" F  S ITMP=$O(^TMP("PS",$J,ITMP)) Q:'ITMP  D
"RTN","ORWPS",8,0)
 . S X=^TMP("PS",$J,ITMP,0)
"RTN","ORWPS",9,0)
 . I '$L($P(X,U,2)) S X="??"  ; show something if drug empty
"RTN","ORWPS",10,0)
 . S LST($$NXT)=$P(X,U,1,2)_U_$P(X,U,8,9)
"RTN","ORWPS",11,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",12,0)
 Q
"RTN","ORWPS",13,0)
DT(X) ; -- Returns FM date for X
"RTN","ORWPS",14,0)
 N Y,%DT S %DT="T",Y="" D:X'="" ^%DT
"RTN","ORWPS",15,0)
 Q Y
"RTN","ORWPS",16,0)
 ;
"RTN","ORWPS",17,0)
ACTIVE(LST,DFN) ; retrieve active inpatient & outpatient meds
"RTN","ORWPS",18,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",19,0)
 K ^TMP("ORACT",$J)
"RTN","ORWPS",20,0)
 N BEG,END,CTX
"RTN","ORWPS",21,0)
 S (BEG,END,CTX)=""
"RTN","ORWPS",22,0)
 S CTX=$$GET^XPAR("ALL","ORCH CONTEXT MEDS")
"RTN","ORWPS",23,0)
 S BEG=$$DT($P(CTX,";")),END=$$DT($P(CTX,";",2))
"RTN","ORWPS",24,0)
 D OCL^PSOORRL(DFN,BEG,END)
"RTN","ORWPS",25,0)
 N ITMP,FIELDS,INSTRUCT,COMMENTS,REASON,NVSDT,TYPE,ILST,J S ILST=0
"RTN","ORWPS",26,0)
 S ITMP="" F  S ITMP=$O(^TMP("PS",$J,ITMP),-1) Q:'ITMP  D
"RTN","ORWPS",27,0)
 . K INSTRUCT,COMMENTS,REASON
"RTN","ORWPS",28,0)
 . K ^TMP("ORACT",$J,"COMMENTS")
"RTN","ORWPS",29,0)
 . S COMMENTS="^TMP(""ORACT"",$J,""COMMENTS"")"
"RTN","ORWPS",30,0)
 . S (INSTRUCT,@COMMENTS)="",FIELDS=^TMP("PS",$J,ITMP,0)
"RTN","ORWPS",31,0)
 . I +$P(FIELDS,"^",8),$D(^OR(100,+$P(FIELDS,"^",8),8,"C","XX")) D
"RTN","ORWPS",32,0)
 . . S $P(^TMP("PS",$J,ITMP,0),"^",2)="*"_$P(^TMP("PS",$J,ITMP,0),"^",2) ;dan testing
"RTN","ORWPS",33,0)
 . S TYPE=$S($P($P(FIELDS,U),";",2)="O":"OP",1:"UD")
"RTN","ORWPS",34,0)
 . I TYPE="OP",$P(FIELDS,";")["N" S TYPE="NV"          ;non-VA med
"RTN","ORWPS",35,0)
 . I $O(^TMP("PS",$J,ITMP,"A",0))>0 S TYPE="IV"
"RTN","ORWPS",36,0)
 . I $O(^TMP("PS",$J,ITMP,"B",0))>0 S TYPE="IV"
"RTN","ORWPS",37,0)
 . I TYPE="UD" D UDINST(.INSTRUCT,ITMP)
"RTN","ORWPS",38,0)
 . I TYPE="OP" D OPINST(.INSTRUCT,ITMP)
"RTN","ORWPS",39,0)
 . I TYPE="IV" D IVINST(.INSTRUCT,ITMP)
"RTN","ORWPS",40,0)
 . I TYPE="NV" D NVINST(.INSTRUCT,ITMP),NVREASON(.REASON,.NVSDT,ITMP)
"RTN","ORWPS",41,0)
 . I (TYPE="UD")!(TYPE="IV")!(TYPE="NV") D SETMULT(COMMENTS,ITMP,"SIO")
"RTN","ORWPS",42,0)
 . M COMMENTS=@COMMENTS
"RTN","ORWPS",43,0)
 . I $D(COMMENTS(1)) S COMMENTS(1)="\"_COMMENTS(1)
"RTN","ORWPS",44,0)
 . S:TYPE="NV" $P(FIELDS,U,4)=$G(NVSDT)
"RTN","ORWPS",45,0)
 . S LST($$NXT)="~"_TYPE_U_FIELDS
"RTN","ORWPS",46,0)
 . S J=0 F  S J=$O(INSTRUCT(J)) Q:'J  S LST($$NXT)=INSTRUCT(J)
"RTN","ORWPS",47,0)
 . S J=0 F  S J=$O(COMMENTS(J)) Q:'J  S LST($$NXT)="t"_COMMENTS(J)
"RTN","ORWPS",48,0)
 . S J=0 F  S J=$O(REASON(J)) Q:'J  S LST($$NXT)="t"_REASON(J)
"RTN","ORWPS",49,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",50,0)
 K ^TMP("ORACT",$J)
"RTN","ORWPS",51,0)
 Q
"RTN","ORWPS",52,0)
NXT() ; increment ILST
"RTN","ORWPS",53,0)
 S ILST=ILST+1
"RTN","ORWPS",54,0)
 Q ILST
"RTN","ORWPS",55,0)
 ;
"RTN","ORWPS",56,0)
UDINST(Y,INDEX) ; assembles instructions for a unit dose order
"RTN","ORWPS",57,0)
 N I,X,RST
"RTN","ORWPS",58,0)
 S X=^TMP("PS",$J,INDEX,0)
"RTN","ORWPS",59,0)
 S RST="^TMP(""ORACT"",$J,""INSTRUCT"")"
"RTN","ORWPS",60,0)
 S @RST@(1)=" "_$P(X,U,2),@RST=1
"RTN","ORWPS",61,0)
 S X=$S($L($P(X,U,6)):$P(X,U,6),1:$P(X,U,7))
"RTN","ORWPS",62,0)
 I $L(X) S @RST=2,@RST@(2)=X
"RTN","ORWPS",63,0)
 E  S @RST=1 D SETMULT(.RST,INDEX,"SIG")
"RTN","ORWPS",64,0)
 S @RST@(2)="\Give: "_$G(@RST@(2)),@RST=$G(@RST,2)
"RTN","ORWPS",65,0)
 D SETMULT(RST,INDEX,"MDR"),SETMULT(RST,INDEX,"SCH")
"RTN","ORWPS",66,0)
 F I=3:1:@RST S @RST@(I)=" "_@RST@(I)
"RTN","ORWPS",67,0)
 M Y=@RST K @RST
"RTN","ORWPS",68,0)
 Q
"RTN","ORWPS",69,0)
OPINST(Y,INDEX) ; assembles instructions for an outpatient prescription
"RTN","ORWPS",70,0)
 N I,X,RST
"RTN","ORWPS",71,0)
 S X=^TMP("PS",$J,INDEX,0)
"RTN","ORWPS",72,0)
 S RST="^TMP(""ORACT"",$J,""INSTRUCT"")"
"RTN","ORWPS",73,0)
 S @RST@(1)=" "_$P(X,U,2),@RST=1
"RTN","ORWPS",74,0)
 I $L($P(X,U,12)) S @RST@(1)=@RST@(1)_"  Qty: "_$P(X,U,12)
"RTN","ORWPS",75,0)
 I $L($P(X,U,11)) S @RST@(1)=@RST@(1)_" for "_$P(X,U,11)_" days"
"RTN","ORWPS",76,0)
 D SETMULT(RST,INDEX,"SIG")
"RTN","ORWPS",77,0)
 I @RST=1 D
"RTN","ORWPS",78,0)
 . D SETMULT(RST,INDEX,"SIO")
"RTN","ORWPS",79,0)
 . D SETMULT(RST,INDEX,"MDR")
"RTN","ORWPS",80,0)
 . D SETMULT(RST,INDEX,"SCH")
"RTN","ORWPS",81,0)
 S @RST@(2)="\ Sig: "_$G(@RST@(2))
"RTN","ORWPS",82,0)
 F I=3:1:@RST S @RST@(I)=" "_@RST@(I)
"RTN","ORWPS",83,0)
 M Y=@RST K @RST
"RTN","ORWPS",84,0)
 Q
"RTN","ORWPS",85,0)
IVINST(Y,INDEX) ; assembles instructions for an IV order
"RTN","ORWPS",86,0)
 N SOLN1,I,RST
"RTN","ORWPS",87,0)
 S RST="^TMP(""ORACT"",$J,""INSTRUCT"")"
"RTN","ORWPS",88,0)
 S @RST=0 D SETMULT(RST,INDEX,"A") S SOLN1=@RST+1
"RTN","ORWPS",89,0)
 D SETMULT(RST,INDEX,"B")
"RTN","ORWPS",90,0)
 I $D(@RST@(SOLN1)),$L($P(FIELDS,U,2)) S @RST@(SOLN1)="in "_@RST@(SOLN1)
"RTN","ORWPS",91,0)
 S SOLN1=@RST+1
"RTN","ORWPS",92,0)
 D SETMULT(RST,INDEX,"SCH") S:$D(@RST@(SOLN1)) @RST@(SOLN1)=" "_@RST@(SOLN1)
"RTN","ORWPS",93,0)
 F I=1:1:@RST S @RST@(I)="\"_$TR(@RST@(I),U," ")
"RTN","ORWPS",94,0)
 I $D(@RST@(1)) S @RST@(1)=" "_$E(@RST@(1),2,999)
"RTN","ORWPS",95,0)
 S @RST@(@RST)=@RST@(@RST)_" "_$P(^TMP("PS",$J,INDEX,0),U,3)
"RTN","ORWPS",96,0)
 M Y=@RST K @RST
"RTN","ORWPS",97,0)
 Q
"RTN","ORWPS",98,0)
NVINST(Y,INDEX) ; assembles instructions for a non-VA med
"RTN","ORWPS",99,0)
 N I,X,RST
"RTN","ORWPS",100,0)
 S X=^TMP("PS",$J,INDEX,0)
"RTN","ORWPS",101,0)
 S RST="^TMP(""ORACT"",$J,""INSTRUCT"")"
"RTN","ORWPS",102,0)
 S @RST@(1)=" "_$P(X,U,2),@RST=1
"RTN","ORWPS",103,0)
 D SETMULT(RST,INDEX,"SIG")
"RTN","ORWPS",104,0)
 I @RST=1 D
"RTN","ORWPS",105,0)
 . D SETMULT(RST,INDEX,"SIO")
"RTN","ORWPS",106,0)
 . D SETMULT(RST,INDEX,"MDR")
"RTN","ORWPS",107,0)
 . D SETMULT(RST,INDEX,"SCH")
"RTN","ORWPS",108,0)
 S @RST@(2)="\ "_$G(@RST@(2))
"RTN","ORWPS",109,0)
 F I=3:1:@RST S @RST@(I)=" "_@RST@(I)
"RTN","ORWPS",110,0)
 M Y=@RST K @RST
"RTN","ORWPS",111,0)
 Q
"RTN","ORWPS",112,0)
NVREASON(ORR,NVSDT,INDEX) ; assembles start date and reasons for a non-VA med
"RTN","ORWPS",113,0)
 N ORI,J,X,ORN,ORA
"RTN","ORWPS",114,0)
 S ORI=0 K ORR
"RTN","ORWPS",115,0)
 S X=^TMP("PS",$J,INDEX,0)
"RTN","ORWPS",116,0)
 S ORN=+$P(X,U,8)
"RTN","ORWPS",117,0)
 I $D(^OR(100,ORN,0)) D
"RTN","ORWPS",118,0)
 .S NVSDT=$P(^OR(100,ORN,0),U,8)
"RTN","ORWPS",119,0)
 .D WPVAL^ORWDXR(.ORA,ORN,"STATEMENTS") I $D(ORA) D
"RTN","ORWPS",120,0)
 ..S J=0 F  S J=$O(ORA(J)) Q:J<1  S ORI=ORI+1,ORR(ORI)=ORA(J)
"RTN","ORWPS",121,0)
 Q
"RTN","ORWPS",122,0)
SETMULT(Y,INDEX,SUB) ; appends the multiple at the subscript to Y
"RTN","ORWPS",123,0)
 N I,X,J
"RTN","ORWPS",124,0)
 S J=$G(@Y)
"RTN","ORWPS",125,0)
 S I=0 F  S I=$O(^TMP("PS",$J,INDEX,SUB,I)) Q:'I  S X=$G(^(I,0)) D
"RTN","ORWPS",126,0)
 . I SUB="B",$L($P(X,U,3)) S X=$P(X,U)_" "_$P(X,U,3)_"^"_$P(X,U,2)
"RTN","ORWPS",127,0)
 . S J=J+1,@Y@(J)=X
"RTN","ORWPS",128,0)
 S @Y=J
"RTN","ORWPS",129,0)
 Q
"RTN","ORWPS",130,0)
COMPRESS(Y) ; concatenate Y subscripts into smallest possible number
"RTN","ORWPS",131,0)
 N I,J,X S J=1,X(J)=""
"RTN","ORWPS",132,0)
 S I=0 F  S I=$O(Y(I)) Q:'I  D
"RTN","ORWPS",133,0)
 . I ($L(Y(I))+$L(X(J)))>245 S J=J+1,X(J)=""
"RTN","ORWPS",134,0)
 . S X(J)=X(J)_$S($L(X(J)):" ",1:"")_Y(I)
"RTN","ORWPS",135,0)
 K Y M Y=X
"RTN","ORWPS",136,0)
 Q
"RTN","ORWPS",137,0)
DETAIL(ROOT,DFN,ID) ; -- show details for a med order
"RTN","ORWPS",138,0)
 K ^TMP("ORXPND",$J)
"RTN","ORWPS",139,0)
 N LCNT,ORVP
"RTN","ORWPS",140,0)
 S LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWPS",141,0)
 D MEDS^ORCXPND1
"RTN","ORWPS",142,0)
 S ROOT=$NA(^TMP("ORXPND",$J))
"RTN","ORWPS",143,0)
 Q
"RTN","ORWPS",144,0)
MEDHIST(ORROOT,DFN,ORIFN)       ; -- show admin history for a med  (RV)
"RTN","ORWPS",145,0)
 N ORPSID,ISIV,CKPKG,ORPHMID
"RTN","ORWPS",146,0)
 S ORPSID=+$P($$OI^ORX8(ORIFN),U,3),ISIV=0
"RTN","ORWPS",147,0)
 S ORROOT=$NA(^TMP("ORHIST",$J)) K @ORROOT
"RTN","ORWPS",148,0)
 S ISIV=$O(^ORD(100.98,"B","IV RX",ISIV))
"RTN","ORWPS",149,0)
 S CKPKG=$$PATCH^XPDUTL("PSB*2.0*19")
"RTN","ORWPS",150,0)
 I $P($G(^OR(100,+ORIFN,0)),U,11)=ISIV D  Q
"RTN","ORWPS",151,0)
 . I 'CKPKG S @ORROOT@(0)="Medication Administration History is not available at this time for IV fluids."
"RTN","ORWPS",152,0)
 . I CKPKG D
"RTN","ORWPS",153,0)
 . . S ORPHMID=$G(^OR(100,+ORIFN,4))  ;Pharmacy order number
"RTN","ORWPS",154,0)
 . . D RPC^PSBO(.ORROOT,"PM",DFN,"","","","","","","","","",ORPHMID)  ;DBIA #3955
"RTN","ORWPS",155,0)
 . . I '$D(@ORROOT) S @ORROOT@(0)="No Medication Administration History found for the IV order."
"RTN","ORWPS",156,0)
 I '$L($T(HISTORY^PSBMLHS)) D  Q
"RTN","ORWPS",157,0)
 . S @ORROOT@(0)="This report is only available using BCMA version 2.0."
"RTN","ORWPS",158,0)
 D HISTORY^PSBMLHS(.ORROOT,DFN,ORPSID)  ; DBIA #3459 for BCMA v2.0
"RTN","ORWPS",159,0)
 Q
"RTN","ORWPS",160,0)
 ;
"RTN","ORWPS",161,0)
REASON(ORY) ; -- Return Non-VA Med Statement/Reasons
"RTN","ORWPS",162,0)
 N ORE
"RTN","ORWPS",163,0)
 D GETLST^XPAR(.ORY,"ALL","ORWD NONVA REASON","E")
"RTN","ORWPS",164,0)
 Q
"RTN","ORWPT")
0^29^B59057766
"RTN","ORWPT",1,0)
ORWPT ; SLC/KCM/REV - Patient Lookup Functions ;25-JAN-1999 11:26:58 [3/23/04 11:28am]
"RTN","ORWPT",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132,149,206,187,190**;Dec 17, 1997
"RTN","ORWPT",3,0)
 ;
"RTN","ORWPT",4,0)
IDINFO(REC,DFN) ; Return identifying information for a patient
"RTN","ORWPT",5,0)
 ; PID^DOB^SEX^VET^SC%^WARD^RM-BED^NAME
"RTN","ORWPT",6,0)
 N X0,X1,X101,X3,XV  ; name/dob/sex/ssn, ward, room-bed, sc%, vet
"RTN","ORWPT",7,0)
 S X0=$G(^DPT(DFN,0)),X1=$G(^(.1)),X101=$G(^(.101)),X3=$G(^(.3)),XV=$G(^("VET"))
"RTN","ORWPT",8,0)
 S REC=$$SSN^DPTLK1(DFN)_U_$$DOB^DPTLK1(DFN,2)_U_$P(X0,U,2)_U_$P(XV,U)_U_$P(X3,U,2)_U_$P(X1,U)_U_$P(X101,U)_U_$P(X0,U) ;DG249
"RTN","ORWPT",9,0)
 Q
"RTN","ORWPT",10,0)
PTINQ(REF,DFN) ; Return formatted pt inquiry report
"RTN","ORWPT",11,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",12,0)
 D DGINQ^ORCXPND1(DFN)
"RTN","ORWPT",13,0)
 S REF=$NA(^TMP("ORDATA",$J,1))
"RTN","ORWPT",14,0)
 Q
"RTN","ORWPT",15,0)
SCDIS(LST,DFN) ; Return service connected % and rated disabilities
"RTN","ORWPT",16,0)
 N VAEL,VAERR,I,ILST,DIS,SC,X
"RTN","ORWPT",17,0)
 D ELIG^VADPT
"RTN","ORWPT",18,0)
 S LST(1)="Service Connected: "_$S(+VAEL(3):$P(VAEL(3),U,2)_"%",1:"NO")
"RTN","ORWPT",19,0)
 I 'VAEL(4),'$P($G(^DG(391,+VAEL(6),0)),U,2) S LST(2)="NOT A VETERAN." Q
"RTN","ORWPT",20,0)
 S I=0,ILST=1 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X=^(I,0) D
"RTN","ORWPT",21,0)
 . S DIS=$P($G(^DIC(31,+X,0)),U) Q:DIS=""
"RTN","ORWPT",22,0)
 . S SC=$S($P(X,U,3):"SC",$P(X,U,3)']"":"not specified",1:"NSC")
"RTN","ORWPT",23,0)
 . S ILST=ILST+1,LST(ILST)=DIS_" ("_$P(X,U,2)_"% "_SC_")"
"RTN","ORWPT",24,0)
 I ILST=1 S LST(2)="Rated Disabilities: NONE STATED"
"RTN","ORWPT",25,0)
 Q
"RTN","ORWPT",26,0)
SHOW ; temporary - show patient inquiry screen
"RTN","ORWPT",27,0)
 N I,Y,DIC S DIC=2,DIC(0)="AEMQ" D ^DIC Q:'Y
"RTN","ORWPT",28,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",29,0)
 D DGINQ^ORCXPND1(+Y)
"RTN","ORWPT",30,0)
 S I=0 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:'I  W !,^(I)
"RTN","ORWPT",31,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",32,0)
 Q
"RTN","ORWPT",33,0)
SELCHK(REC,DFN) ; Check for sensitive pt
"RTN","ORWPT",34,0)
 ; SENSITIVE
"RTN","ORWPT",35,0)
 S REC=$$EN1^ORQPT2(DFN)
"RTN","ORWPT",36,0)
 Q
"RTN","ORWPT",37,0)
DIEDON(VAL,DFN) ; Check for a date of death
"RTN","ORWPT",38,0)
 S VAL=+$G(^DPT(DFN,.35))
"RTN","ORWPT",39,0)
 Q
"RTN","ORWPT",40,0)
SELECT(REC,DFN) ; Selects patient & returns key information
"RTN","ORWPT",41,0)
 ;  1    2   3   4    5      6    7    8       9       10      11  12
"RTN","ORWPT",42,0)
 ; NAME^SEX^DOB^SSN^LOCIEN^LOCNM^RMBD^CWAD^SENSITIVE^ADMITTED^CONV^SC^
"RTN","ORWPT",43,0)
 ; 13  14  15  16
"RTN","ORWPT",44,0)
 ; SC%^ICN^AGE^TS
"RTN","ORWPT",45,0)
 ;
"RTN","ORWPT",46,0)
 ; for CCOW (RV - 2/27/03)  name="-1", location=error message
"RTN","ORWPT",47,0)
 I '$D(^DPT(DFN,0)) S REC="-1^^^^^Patient is unknown to CPRS." Q
"RTN","ORWPT",48,0)
 ;
"RTN","ORWPT",49,0)
 N X
"RTN","ORWPT",50,0)
 K ^TMP("ORWPCE",$J) ; delete PCE 'cache' when switching patients
"RTN","ORWPT",51,0)
 S X=^DPT(DFN,0),REC=$P(X,U,1,3)_U_$P(X,U,9)_U_U_$G(^(.1))_U_$G(^(.101))
"RTN","ORWPT",52,0)
 S X=$P(REC,U,6) I $L(X) S $P(REC,U,5)=+$G(^DIC(42,+$O(^DIC(42,"B",X,0)),44))
"RTN","ORWPT",53,0)
 S $P(REC,U,8)=$$CWAD^ORQPT2(DFN)_U_$$EN1^ORQPT2(DFN)
"RTN","ORWPT",54,0)
 ; I $P(REC,U,9) D EN2^ORQPT2(DFN)  ;update DG security log ; DG249
"RTN","ORWPT",55,0)
 S X=$G(^DPT(DFN,.105)) I X S $P(REC,U,10)=$P($G(^DGPM(X,0)),U)
"RTN","ORWPT",56,0)
 S:'$D(IOST) IOST="P-OTHER"
"RTN","ORWPT",57,0)
 S $P(REC,U,11)=$$OTF^OR3CONV(DFN,1)
"RTN","ORWPT",58,0)
 D ELIG^VADPT S $P(REC,U,12)=$G(VAEL(3)) ;two pieces: SC^SC%
"RTN","ORWPT",59,0)
 I $L($T(GETICN^MPIF001)) S X=+$$GETICN^MPIF001(DFN) S:X>0 $P(REC,U,14)=X
"RTN","ORWPT",60,0)
 S $P(REC,U,15)=$$AGE(DFN,$P(REC,U,3))
"RTN","ORWPT",61,0)
 S $P(REC,U,16)=+$G(^DPT(DFN,.103)) ; treating specialty
"RTN","ORWPT",62,0)
 K VAEL,VAERR ;VADPT call to kill?
"RTN","ORWPT",63,0)
 S ^DISV(DUZ,"^DPT(")=DFN
"RTN","ORWPT",64,0)
 Q
"RTN","ORWPT",65,0)
SHARE(VAL,IP,HWND,DFN) ; Set global to share DFN with other applications
"RTN","ORWPT",66,0)
 K ^TMP("ORWCHART",$J),^TMP("ORECALL",$J),^TMP("ORWORD",$J)
"RTN","ORWPT",67,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","ORWPT",68,0)
 S ^TMP("ORWCHART",$J,IP,HWND)=DFN
"RTN","ORWPT",69,0)
 Q
"RTN","ORWPT",70,0)
BYWARD(LST,WARD) ; Return a list of patients in a ward
"RTN","ORWPT",71,0)
 N ILST,DFN
"RTN","ORWPT",72,0)
 I +$G(WARD)<1 S LST(1)="^No ward identified" Q
"RTN","ORWPT",73,0)
 S (ILST,DFN)=0
"RTN","ORWPT",74,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;DBIA #36
"RTN","ORWPT",75,0)
 F  S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0  D
"RTN","ORWPT",76,0)
 . S ILST=ILST+1,LST(ILST)=+DFN_U_$P(^DPT(+DFN,0),U)_U_$G(^DPT(+DFN,.101))
"RTN","ORWPT",77,0)
 I ILST<1 S LST(1)="^No patients found."
"RTN","ORWPT",78,0)
 Q
"RTN","ORWPT",79,0)
LAST5(LST,ID) ; Return a list of patients matching A9999 identifiers
"RTN","ORWPT",80,0)
 N I,IEN,XREF
"RTN","ORWPT",81,0)
 S (I,IEN)=0,XREF=$S($L(ID)=5:"BS5",1:"BS")
"RTN","ORWPT",82,0)
 F  S IEN=$O(^DPT(XREF,ID,IEN)) Q:'IEN  D
"RTN","ORWPT",83,0)
 . S I=I+1,LST(I)=IEN_U_$P(^DPT(IEN,0),U)_U_$$DOB^DPTLK1(IEN,2)_U_$$SSN^DPTLK1(IEN)  ; DG249
"RTN","ORWPT",84,0)
 Q
"RTN","ORWPT",85,0)
 ;
"RTN","ORWPT",86,0)
LAST5RPL(LST,ID) ; ; Return list matching A9999 id's, but from RPL only.
"RTN","ORWPT",87,0)
 N ORRPL,ORCNT,ORPT,ORPIEN
"RTN","ORWPT",88,0)
 ; IA ____ allows read access to NEW PERSON file node 101:
"RTN","ORWPT",89,0)
 S ORRPL=$G(^VA(200,DUZ,101))
"RTN","ORWPT",90,0)
 S ORRPL=$P(ORRPL,U,2)
"RTN","ORWPT",91,0)
 I (('ORRPL)!(ORRPL="")) S LST(0)="" Q
"RTN","ORWPT",92,0)
 ;
"RTN","ORWPT",93,0)
 S (ORCNT,ORPT)=0
"RTN","ORWPT",94,0)
 F  S ORPT=$O(^OR(100.21,ORRPL,10,ORPT)) Q:'ORPT  D
"RTN","ORWPT",95,0)
 .S ORPIEN=+$G(^OR(100.21,ORRPL,10,ORPT,0))
"RTN","ORWPT",96,0)
 .I ((ORPIEN<0)!(ORPIEN="")) Q
"RTN","ORWPT",97,0)
 .S ORCNT=ORCNT+1
"RTN","ORWPT",98,0)
 .S LST(ORCNT)=ORPIEN_U_$P(^DPT(ORPIEN,0),U)_U_$$DOB^DPTLK1(ORPIEN,2)_U_$$SSN^DPTLK1(ORPIEN) ; DG249.
"RTN","ORWPT",99,0)
 ;
"RTN","ORWPT",100,0)
 Q
"RTN","ORWPT",101,0)
 ;
"RTN","ORWPT",102,0)
FULLSSN(LST,ID) ; Return a list of patients matching full SSN entered
"RTN","ORWPT",103,0)
 N I,IEN
"RTN","ORWPT",104,0)
 S (I,IEN)=0
"RTN","ORWPT",105,0)
 F  S IEN=$O(^DPT("SSN",ID,IEN)) Q:'IEN  D
"RTN","ORWPT",106,0)
 . S I=I+1,LST(I)=IEN_U_$P(^DPT(IEN,0),U)_U_$$DOB^DPTLK1(IEN,2)_U_$$SSN^DPTLK1(IEN)  ; DG249
"RTN","ORWPT",107,0)
 Q
"RTN","ORWPT",108,0)
 ;
"RTN","ORWPT",109,0)
FSSNRPL(LST,ID) ; Return list matching Full SSN, but from RPL only.
"RTN","ORWPT",110,0)
 N ORRPL,ORCNT,ORPT,ORLPT,ORPIEN
"RTN","ORWPT",111,0)
 ; IA ____ allows read access to NEW PERSON file node 101:
"RTN","ORWPT",112,0)
 S ORRPL=$G(^VA(200,DUZ,101))
"RTN","ORWPT",113,0)
 S ORRPL=$P(ORRPL,U,2)
"RTN","ORWPT",114,0)
 I (('ORRPL)!(ORRPL="")) S LST(0)="" Q
"RTN","ORWPT",115,0)
 ;
"RTN","ORWPT",116,0)
 S (ORCNT,ORPT)=0
"RTN","ORWPT",117,0)
 F  S ORPT=$O(^DPT("SSN",ID,ORPT)) Q:'ORPT  D
"RTN","ORWPT",118,0)
 .S ORLPT=0
"RTN","ORWPT",119,0)
 .F  S ORLPT=$O(^OR(100.21,ORRPL,10,ORLPT)) Q:'ORLPT  D
"RTN","ORWPT",120,0)
 ..S ORPIEN=+$G(^OR(100.21,ORRPL,10,ORLPT,0))
"RTN","ORWPT",121,0)
 ..I ((ORPIEN<0)!(ORPIEN="")) Q
"RTN","ORWPT",122,0)
 ..I (ORPIEN'=ORPT) Q
"RTN","ORWPT",123,0)
 ..S ORCNT=ORCNT+1
"RTN","ORWPT",124,0)
 ..S LST(ORCNT)=ORPIEN_U_$P(^DPT(ORPIEN,0),U)_U_$$DOB^DPTLK1(ORPIEN,2)_U_$$SSN^DPTLK1(ORPIEN) ; DG249.
"RTN","ORWPT",125,0)
 ;
"RTN","ORWPT",126,0)
 Q
"RTN","ORWPT",127,0)
 ;
"RTN","ORWPT",128,0)
TOP(LST) ; Return top for all patients list (last selected for now)
"RTN","ORWPT",129,0)
 N IEN
"RTN","ORWPT",130,0)
 S IEN=$G(^DISV(DUZ,"^DPT("))
"RTN","ORWPT",131,0)
 I IEN S LST(1)=IEN_U_$P($G(^DPT(IEN,0)),U)
"RTN","ORWPT",132,0)
 Q
"RTN","ORWPT",133,0)
ENCTITL(REC,DFN,LOC,PROV) ; Return external values for encounter
"RTN","ORWPT",134,0)
 ; LOCNAME^LOCABBR^ROOMBED^PROVNAME
"RTN","ORWPT",135,0)
 S $P(REC,U,1)=$P($G(^SC(+LOC,0)),U,1,2)
"RTN","ORWPT",136,0)
 S $P(REC,U,3)=$P($G(^DPT(DFN,.101)),U)
"RTN","ORWPT",137,0)
 S $P(REC,U,4)=$P($G(^VA(200,+PROV,0)),U)
"RTN","ORWPT",138,0)
 Q
"RTN","ORWPT",139,0)
LISTALL(Y,FROM,DIR) ; Return a bolus of patient names.  From is either Name or IEN^Name.
"RTN","ORWPT",140,0)
 N I,IEN,CNT,FROMIEN,ORIDNAME S CNT=44,I=0,FROMIEN=0
"RTN","ORWPT",141,0)
 I $P(FROM,U,2)'="" S FROMIEN=$P(FROM,U,1),FROM=$O(^DPT("B",$P(FROM,U,2)),-DIR)
"RTN","ORWPT",142,0)
 F  S FROM=$O(^DPT("B",FROM),DIR) Q:FROM=""  D  Q:I=CNT
"RTN","ORWPT",143,0)
 . S IEN=FROMIEN,FROMIEN=0 F  S IEN=$O(^DPT("B",FROM,IEN)) Q:'IEN  D  Q:I=CNT
"RTN","ORWPT",144,0)
 . . S ORIDNAME=""
"RTN","ORWPT",145,0)
 . . S ORIDNAME=$G(^DPT(IEN,0)) ; Get zero node name.
"RTN","ORWPT",146,0)
 . . ; S X1=$G(^DPT(IEN,.1))_" "_$G(^DPT(IEN,.101))
"RTN","ORWPT",147,0)
 . . S I=I+1 S Y(I)=IEN_U_FROM_U_U_U_U_$P(ORIDNAME,U) ;_"^"_X ; _"^"_X1  ;"   ("_X_")"
"RTN","ORWPT",148,0)
 Q
"RTN","ORWPT",149,0)
APPTLST(LST,DFN) ; return a list of appointments
"RTN","ORWPT",150,0)
 ; APPTTIME^LOCIEN^LOCNAME^EXTSTATUS
"RTN","ORWPT",151,0)
 N VASD
"RTN","ORWPT",152,0)
 S VASD("F")=$$HTFM^XLFDT($H-30,1)
"RTN","ORWPT",153,0)
 S VASD("T")=$$HTFM^XLFDT($H+1,1)_".2359"
"RTN","ORWPT",154,0)
 S VASD("W")="123456789"
"RTN","ORWPT",155,0)
 D SDA^VADPT
"RTN","ORWPT",156,0)
 S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","ORWPT",157,0)
 . S LST(I)=$P(^UTILITY("VASD",$J,I,"I"),U,1,2)_U_$P(^("E"),U,2,3)
"RTN","ORWPT",158,0)
 K ^UTILITY("VASD",$J)
"RTN","ORWPT",159,0)
 Q
"RTN","ORWPT",160,0)
ADMITLST(LST,DFN) ; return a list of admissions
"RTN","ORWPT",161,0)
 ; MOVETIME^LOCIEN^LOCNAME^TYPE
"RTN","ORWPT",162,0)
 N TIM,MOV,X0,Y,MTIM,XTYP,XLOC,HLOC,ILST S ILST=0
"RTN","ORWPT",163,0)
 S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D
"RTN","ORWPT",164,0)
 . S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D
"RTN","ORWPT",165,0)
 . . N VSTR,TIUDA
"RTN","ORWPT",166,0)
 . . S X0=$G(^DGPM(MOV,0)) I X0']"" Q
"RTN","ORWPT",167,0)
 . . S MTIM=$P(X0,U)
"RTN","ORWPT",168,0)
 . . S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","ORWPT",169,0)
 . . S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","ORWPT",170,0)
 . . S VSTR=HLOC_";"_MTIM_";H",TIUDA=$$HASDS^TIULX(DFN,VSTR)
"RTN","ORWPT",171,0)
 . . S ILST=ILST+1,LST(ILST)=MTIM_U_HLOC_U_XLOC_U_XTYP_U_MOV_U_TIUDA
"RTN","ORWPT",172,0)
 Q
"RTN","ORWPT",173,0)
CLINRNG(LST) ; return date ranges for clinic appointments
"RTN","ORWPT",174,0)
 S LST(1)="T;T^Today"
"RTN","ORWPT",175,0)
 S LST(2)="T+1;T+1^Tomorrow"
"RTN","ORWPT",176,0)
 S LST(3)="T-1;T-1^Yesterday"
"RTN","ORWPT",177,0)
 S LST(4)="T-7;T^Past Week"
"RTN","ORWPT",178,0)
 S LST(5)="T-31;T^Past Month"
"RTN","ORWPT",179,0)
 S LST(6)="S^Specify Date Range..."
"RTN","ORWPT",180,0)
 Q
"RTN","ORWPT",181,0)
 ;
"RTN","ORWPT",182,0)
 N %,%H,X,SUNDAY,START
"RTN","ORWPT",183,0)
 S LST(1)=DT_";"_DT_"^Today",X=$$HTFM^XLFDT($H+1,1)
"RTN","ORWPT",184,0)
 S LST(2)=X_";"_X_"^Tomorrow"
"RTN","ORWPT",185,0)
 S X=+$H F  Q:X#7=3  S X=X-1                        ; $H#7=3 is Sunday
"RTN","ORWPT",186,0)
 S LST(3)=$$HTFM^XLFDT(X)_";"_$$HTFM^XLFDT(X+6)_"^This Week"
"RTN","ORWPT",187,0)
 S LST(4)=$$HTFM^XLFDT(X+7)_";"_$$HTFM^XLFDT(X+13)_"^Next Week"
"RTN","ORWPT",188,0)
 S LST(5)=$E(DT,1,5)_"01;"_$E(DT,1,5)_"31^This Month"
"RTN","ORWPT",189,0)
 S X=$E(DT,4,5)+1 S:X=13 X=1 S X=$E(DT,1,3)_$TR($J(X,2)," ",0)
"RTN","ORWPT",190,0)
 S LST(6)=X_"01;"_X_"31^Next Month"
"RTN","ORWPT",191,0)
 S LST(7)="^Specify Dates"
"RTN","ORWPT",192,0)
 Q
"RTN","ORWPT",193,0)
DFLTSRC(VAL) ; return default patient list source (T, W, C, P, S)
"RTN","ORWPT",194,0)
 N SRV S SRV=+$G(^VA(200,DUZ,5))
"RTN","ORWPT",195,0)
 S VAL=$$GET^XPAR("ALL^SRV.`"_SRV,"ORLP DEFAULT LIST SOURCE")
"RTN","ORWPT",196,0)
 Q
"RTN","ORWPT",197,0)
SAVDFLT(OK,X) ; save new default patient list settings (X=type^ien^sdt;edt)
"RTN","ORWPT",198,0)
 G SAVDFLT^ORWPT1
"RTN","ORWPT",199,0)
 ;
"RTN","ORWPT",200,0)
DISCHRG(Y,DFN,ADMITDT) ; Get discharge movement information
"RTN","ORWPT",201,0)
 N VAIP
"RTN","ORWPT",202,0)
 I +$G(ADMITDT)=0 S Y=DT Q
"RTN","ORWPT",203,0)
 S VAIP("D")=ADMITDT D 52^VADPT
"RTN","ORWPT",204,0)
 I +VAIP(17)=0 S Y=DT Q
"RTN","ORWPT",205,0)
 S Y=+VAIP(17,1)
"RTN","ORWPT",206,0)
 Q
"RTN","ORWPT",207,0)
CWAD(Y,DFN) ;  returns CWAD flags for a patient
"RTN","ORWPT",208,0)
 S Y=$$CWAD^ORQPT2(DFN)
"RTN","ORWPT",209,0)
 Q
"RTN","ORWPT",210,0)
LEGACY(ORLST,DFN) ; return message if data on the legacy system
"RTN","ORWPT",211,0)
 ; ORLST(0)=1 if data,  ORLST(n)=display message if data
"RTN","ORWPT",212,0)
 S ORLST(0)=0
"RTN","ORWPT",213,0)
 I $L($T(HXDATA^A7RDPAGU)) D
"RTN","ORWPT",214,0)
 . D HXDATA^A7RDPAGU(.ORLST,DFN)
"RTN","ORWPT",215,0)
 . I $O(ORLST(0)) S ORLST(0)=1
"RTN","ORWPT",216,0)
 Q
"RTN","ORWPT",217,0)
INPLOC(REC,DFN) ; Return a patient's current location
"RTN","ORWPT",218,0)
 N X
"RTN","ORWPT",219,0)
 S X=$G(^DPT(DFN,.102)),REC=0
"RTN","ORWPT",220,0)
 I X S X=$P($G(^DGPM(X,0)),U,6)
"RTN","ORWPT",221,0)
 I X S REC=+$G(^DIC(42,X,44))
"RTN","ORWPT",222,0)
 I X S $P(REC,U,2)=$P($G(^DIC(42,X,0)),U,1)
"RTN","ORWPT",223,0)
 I X S X=$P($G(^DIC(42,X,0)),U,3)
"RTN","ORWPT",224,0)
 S $P(REC,U,3)=X
"RTN","ORWPT",225,0)
 Q
"RTN","ORWPT",226,0)
AGE(DFN,BEG) ; returns age based on date of birth and date of death (or DT)
"RTN","ORWPT",227,0)
 N END,X
"RTN","ORWPT",228,0)
 S END=+$G(^DPT(DFN,.35)),END=$S(END:END,1:DT)
"RTN","ORWPT",229,0)
 S X=$E(END,1,3)-$E(BEG,1,3)-($E(END,4,7)<$E(BEG,4,7))
"RTN","ORWPT",230,0)
 Q X
"RTN","ORWPT",231,0)
ROK(X) ; Routine OK (in UCI) (NDBI)
"RTN","ORWPT",232,0)
 S X=$G(X) Q:'$L(X) 0  Q:$L(X)>8 0  X ^%ZOSF("TEST") Q:$T 1  Q 0
"RTN","ORWPT",233,0)
NDBI(X) ; National Database Integration site 1 = yes  0 = no
"RTN","ORWPT",234,0)
 N R,G S X="A7RDUP" X ^%ZOSF("TEST") S R=$T,G=$S($D(^A7RCP):1,1:0),X=R+G,X=$S(X=2:1,1:0) Q X
"RTN","ORWRA")
0^61^B9699553
"RTN","ORWRA",1,0)
ORWRA ; ALB/MJK/REV/JDL -Imaging Calls ;8/6/02  1:30 [2/12/04 9:25am]
"RTN","ORWRA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,135,132,148,154,141,160,149,190**;Dec 17, 1997
"RTN","ORWRA",3,0)
EXAMS(ROOT,DFN) ; Return imaging exams
"RTN","ORWRA",4,0)
 ; RPC: ORWRA IMAGING EXAMS
"RTN","ORWRA",5,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRA",6,0)
 D GET(0)
"RTN","ORWRA",7,0)
 Q
"RTN","ORWRA",8,0)
EXAMS1(ROOT,DFN) ; Return imaging exams
"RTN","ORWRA",9,0)
 ; RPC: ORWRA IMAGING EXAMS1
"RTN","ORWRA",10,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRA",11,0)
 D GET(1)
"RTN","ORWRA",12,0)
 Q
"RTN","ORWRA",13,0)
GET(GSITE) ;Get the data
"RTN","ORWRA",14,0)
 N I,ID,RADATA,STRING,SITE,ORCX
"RTN","ORWRA",15,0)
 N BEG,END,MAX,P1,P2
"RTN","ORWRA",16,0)
 S RADATA=$NA(^TMP($J,"RAE1",DFN))
"RTN","ORWRA",17,0)
 S ROOT=$NA(^TMP($J,"ORAEXAMS"))
"RTN","ORWRA",18,0)
 S ORCX=1  ;show cancelled reports
"RTN","ORWRA",19,0)
 K @RADATA,@ROOT
"RTN","ORWRA",20,0)
 ;
"RTN","ORWRA",21,0)
 ; -- set date range
"RTN","ORWRA",22,0)
 D GETDEFG(.STRING)
"RTN","ORWRA",23,0)
 S BEG=$P(STRING,U)
"RTN","ORWRA",24,0)
 S END=$P(STRING,"^",2)
"RTN","ORWRA",25,0)
 S MAX=$P(STRING,"^",3)
"RTN","ORWRA",26,0)
 I GSITE="1" S MAX=MAX_"P"
"RTN","ORWRA",27,0)
 D EN1^RAO7PC1(DFN,BEG,END,MAX,ORCX)
"RTN","ORWRA",28,0)
 ;
"RTN","ORWRA",29,0)
 ; -- reformat data array for rpc
"RTN","ORWRA",30,0)
 S I=0,ID="",SITE=""
"RTN","ORWRA",31,0)
 I $G(GSITE) S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",2)_";"_$P(SITE,"^",3)_U
"RTN","ORWRA",32,0)
 F  S ID=$O(@RADATA@(ID)) Q:ID=""  D
"RTN","ORWRA",33,0)
 . S P1=$P($G(^TMP($J,"RAE1",DFN,ID,"CPRS")),U) ;The member of set indicator from Radiology 
"RTN","ORWRA",34,0)
 . S P2=$P($G(^TMP($J,"RAE1",DFN,ID,"CPRS")),U,2) ;The parent procedure name from Radiology  
"RTN","ORWRA",35,0)
 . S I=I+1
"RTN","ORWRA",36,0)
 . S @ROOT@(I)=SITE_ID_U_(9999999.9999-ID)_U_@RADATA@(ID)_U_P1_U_P2
"RTN","ORWRA",37,0)
 K @RADATA
"RTN","ORWRA",38,0)
 Q
"RTN","ORWRA",39,0)
 ;
"RTN","ORWRA",40,0)
GETDEFG(Y) ; -- get default context settings for GUI imaging reports
"RTN","ORWRA",41,0)
 N BEG,END,MAX
"RTN","ORWRA",42,0)
 ;if called from CAPRI, show all reports
"RTN","ORWRA",43,0)
 D OP^XQCHK
"RTN","ORWRA",44,0)
 I $P($G(XQOPT),"^",1)="DVBA CAPRI GUI" D
"RTN","ORWRA",45,0)
 . S BEG=$$DT^ORCHTAB1("T-36500")
"RTN","ORWRA",46,0)
 . S END=$$DT^ORCHTAB1("T")
"RTN","ORWRA",47,0)
 . S MAX="9999"
"RTN","ORWRA",48,0)
 . S Y=BEG_"^"_END_"^"_MAX
"RTN","ORWRA",49,0)
 ; if not CAPRI, use CPRS defaults
"RTN","ORWRA",50,0)
 E  D GETIMG^ORWTPD(.Y,"")
"RTN","ORWRA",51,0)
 Q
"RTN","ORWRA",52,0)
GETDEF(Y) ; -- get default context settings for LM imaging reports
"RTN","ORWRA",53,0)
 N BEG,CONTEXT,END,MAX
"RTN","ORWRA",54,0)
 S CONTEXT=$$GET^XPAR("ALL","ORCH CONTEXT REPORTS")
"RTN","ORWRA",55,0)
 S BEG=$$DT^ORCHTAB1($P(CONTEXT,";"))
"RTN","ORWRA",56,0)
 S END=$$DT^ORCHTAB1($P(CONTEXT,";",2))
"RTN","ORWRA",57,0)
 S MAX=$P(CONTEXT,";",5)
"RTN","ORWRA",58,0)
 D OP^XQCHK
"RTN","ORWRA",59,0)
 I $P($G(XQOPT),"^",1)="DVBA CAPRI GUI" D
"RTN","ORWRA",60,0)
 .S BEG=$$DT^ORCHTAB1("T-36500")
"RTN","ORWRA",61,0)
 .S END=$$DT^ORCHTAB1("T")
"RTN","ORWRA",62,0)
 .S MAX="9999"
"RTN","ORWRA",63,0)
 S Y=BEG_"^"_END_"^"_MAX
"RTN","ORWRA",64,0)
 Q
"RTN","ORWRA",65,0)
 ;
"RTN","ORWRA",66,0)
RPT1(ROOT,DFN,ORID,ALPHA,OMEGA,DTRANGE,REMOTE,ORMAX,ORFHIE) ; -- return imaging report
"RTN","ORWRA",67,0)
 D RPT(.ROOT,.DFN,.ORID,.ALPHA,.OMEGA,.DTRANGE,.REMOTE,.ORMAX,.ORFHIE)
"RTN","ORWRA",68,0)
 Q
"RTN","ORWRA",69,0)
RPT(ROOT,DFN,ORID,ALPHA,OMEGA,DTRANGE,REMOTE,ORMAX,ORFHIE) ; -- return imaging report
"RTN","ORWRA",70,0)
 ;  RPC: ORWRA REPORT TEXT
"RTN","ORWRA",71,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRA",72,0)
 ; -- init locals and globals
"RTN","ORWRA",73,0)
 N ID,LCNT,ORVP,EXAMDATE,CASENMBR
"RTN","ORWRA",74,0)
 S RADATA=$NA(^TMP($J,"RAE3"))
"RTN","ORWRA",75,0)
 S ROOT=$NA(^TMP("ORXPND",$J))
"RTN","ORWRA",76,0)
 K @RADATA,@ROOT
"RTN","ORWRA",77,0)
 ; 
"RTN","ORWRA",78,0)
 ; -- set up exam id and call to get report text
"RTN","ORWRA",79,0)
 S ID=$TR(ORID,"-",U)
"RTN","ORWRA",80,0)
 ;
"RTN","ORWRA",81,0)
 ; -- set up counter and vp local for dfn for formating call
"RTN","ORWRA",82,0)
 S LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWRA",83,0)
 D XRAYS^ORCXPND1
"RTN","ORWRA",84,0)
 K @RADATA
"RTN","ORWRA",85,0)
 Q
"RTN","ORWRA",86,0)
 ;
"RTN","ORWRA",87,0)
TEST ; -- test to get exam list
"RTN","ORWRA",88,0)
 N I,ROOT,DFN
"RTN","ORWRA",89,0)
 S DFN=16
"RTN","ORWRA",90,0)
 D EXAMS1(.ROOT,DFN)
"RTN","ORWRA",91,0)
 W !,"Root: ",ROOT
"RTN","ORWRA",92,0)
 S I=0 F  S I=$O(@ROOT@(I)) Q:'I  W !,@ROOT@(I)
"RTN","ORWRA",93,0)
 Q
"RTN","ORWRA",94,0)
 ;
"RTN","ORWRA",95,0)
TEST1 ; -- test to print reprt for first 3 exams
"RTN","ORWRA",96,0)
 N ORI,ROOT,ROOT1,L,X,DFN
"RTN","ORWRA",97,0)
 S DFN=16
"RTN","ORWRA",98,0)
 D EXAMS1(.ROOT,DFN)
"RTN","ORWRA",99,0)
 S ORI=0 F  S ORI=$O(@ROOT@(ORI)) Q:'ORI  D  Q:ORI=3
"RTN","ORWRA",100,0)
 . S X=@ROOT@(ORI)
"RTN","ORWRA",101,0)
 . D RPT1(.ROOT1,DFN,$P(X,U))
"RTN","ORWRA",102,0)
 . S L=0 F  S L=$O(@ROOT1@(L)) Q:'L  W !,@ROOT1@(L,0)
"RTN","ORWRA",103,0)
 Q
"RTN","ORWSR")
0^28^B21774260
"RTN","ORWSR",1,0)
ORWSR ;SLC/REV-Surgery RPCs ;08/27/03
"RTN","ORWSR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**109,116,132,148,160,190**;Dec 17, 1997
"RTN","ORWSR",3,0)
 ;
"RTN","ORWSR",4,0)
SHOWSURG(ORY)     ;is Surgery ES patch installed?
"RTN","ORWSR",5,0)
 S ORY=$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",6,0)
 Q:+ORY=0
"RTN","ORWSR",7,0)
 S ORY=$$GET^XPAR("ALL","ORWOR SHOW SURGERY TAB",1)
"RTN","ORWSR",8,0)
 Q
"RTN","ORWSR",9,0)
LIST(ORY,ORDFN,ORBDT,OREDT,ORCTXT,ORMAX,ORFHIE)        ;RETURN LIST OF SURGERY CASES FOR A PATIENT
"RTN","ORWSR",10,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",11,0)
 N I,J,X,SHOWADD,SHOWDOCS
"RTN","ORWSR",12,0)
 S ORY=$NA(^TMP("ORLIST",$J))
"RTN","ORWSR",13,0)
 Q:'+ORDFN
"RTN","ORWSR",14,0)
 S:'$G(ORCTXT) ORCTXT=1
"RTN","ORWSR",15,0)
 S:'$G(ORBDT) ORBDT=""
"RTN","ORWSR",16,0)
 S:'$G(OREDT) OREDT=""
"RTN","ORWSR",17,0)
 S:'$G(ORMAX) ORMAX=""
"RTN","ORWSR",18,0)
 S (SHOWDOCS,SHOWADD)=1
"RTN","ORWSR",19,0)
 D LIST^SROESTV(.ORY,ORDFN,ORBDT,OREDT,ORMAX,SHOWDOCS)
"RTN","ORWSR",20,0)
 S I=0
"RTN","ORWSR",21,0)
 F  S I=$O(@ORY@(I)) Q:+I=0  D
"RTN","ORWSR",22,0)
 . S X=@ORY@(I),J=0
"RTN","ORWSR",23,0)
 . S $P(X,U,6)=$$NON^SROESTV(+X)
"RTN","ORWSR",24,0)
 . S $P(X,U,14)=ORCTXT
"RTN","ORWSR",25,0)
 . S $P(X,U,13)=$P(X,U,5),$P(X,U,5)=""
"RTN","ORWSR",26,0)
 . S @ORY@(I)=X
"RTN","ORWSR",27,0)
 . F  S J=$O(@ORY@(I,J)) Q:+J=0  D
"RTN","ORWSR",28,0)
 . . S X=@ORY@(I,J)
"RTN","ORWSR",29,0)
 . . S:(($P(X,U,14)=ORCTXT)!($P(X,U,14)="")) $P(X,U,14)=+$P(X,U,10)
"RTN","ORWSR",30,0)
 . . S @ORY@(I,J)=X
"RTN","ORWSR",31,0)
 Q
"RTN","ORWSR",32,0)
CASELIST(ORY,ORDFN) ; retrieve list of cases, but no documents
"RTN","ORWSR",33,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",34,0)
 Q:'+ORDFN
"RTN","ORWSR",35,0)
 N ORBDT,OREDT,ORMAX,I,SHOWDOCS S (ORBDT,OREDT,ORMAX)="",SHOWDOCS=0
"RTN","ORWSR",36,0)
 S ORY=$NA(^TMP("ORLIST",$J))
"RTN","ORWSR",37,0)
 D LIST^SROESTV(.ORY,ORDFN,ORBDT,OREDT,ORMAX,SHOWDOCS)
"RTN","ORWSR",38,0)
 S I=0
"RTN","ORWSR",39,0)
 F  S I=$O(@ORY@(I)) Q:+I=0  D
"RTN","ORWSR",40,0)
  . S $P(@ORY@(I),U,4)=$P($P(@ORY@(I),U,4),";",2)
"RTN","ORWSR",41,0)
 Q
"RTN","ORWSR",42,0)
GTSURCTX(Y,ORUSER) ; Returns current Notes view context for user
"RTN","ORWSR",43,0)
 N OCCLIM,SHOWSUB
"RTN","ORWSR",44,0)
 S Y=$$GET^XPAR("ALL","ORCH CONTEXT SURGERY",1)
"RTN","ORWSR",45,0)
 Q
"RTN","ORWSR",46,0)
SVSURCTX(Y,ORCTXT) ; Save new Notes view preferences for user
"RTN","ORWSR",47,0)
 N TMP
"RTN","ORWSR",48,0)
 S TMP=$$GET^XPAR(DUZ_";VA(200,","ORCH CONTEXT SURGERY",1)
"RTN","ORWSR",49,0)
 I TMP'="" D  Q
"RTN","ORWSR",50,0)
 . D CHG^XPAR(DUZ_";VA(200,","ORCH CONTEXT SURGERY",1,ORCTXT)
"RTN","ORWSR",51,0)
 D ADD^XPAR(DUZ_";VA(200,","ORCH CONTEXT SURGERY",1,ORCTXT)
"RTN","ORWSR",52,0)
 Q
"RTN","ORWSR",53,0)
 ;
"RTN","ORWSR",54,0)
ONECASE(ORY,ORTIUDA) ;Given a TIU document, return the case and related documents
"RTN","ORWSR",55,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")!(+$G(ORTIUDA)=0)
"RTN","ORWSR",56,0)
 N ORCASE
"RTN","ORWSR",57,0)
 D GET1405^TIUSRVR(.ORCASE,ORTIUDA)
"RTN","ORWSR",58,0)
 I +ORCASE'>0 S ORY=ORCASE Q
"RTN","ORWSR",59,0)
 D GETONE(.ORY,+ORCASE)
"RTN","ORWSR",60,0)
 Q
"RTN","ORWSR",61,0)
GETONE(ORY,ORCASE)      ; called by ONECASE and RPTTEXT 
"RTN","ORWSR",62,0)
 ;Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",63,0)
 N ORTMP,J,SHOWADD,ORCTXT
"RTN","ORWSR",64,0)
 S SHOWADD=1,ORCTXT=1
"RTN","ORWSR",65,0)
 D ONE^SROESTV("ORY",+ORCASE)
"RTN","ORWSR",66,0)
 S X=ORY(+ORCASE),J=0
"RTN","ORWSR",67,0)
 S $P(X,U,6)=$$NON^SROESTV(+X)
"RTN","ORWSR",68,0)
 S $P(X,U,14)=ORCTXT
"RTN","ORWSR",69,0)
 S $P(X,U,13)=$P(X,U,5),$P(X,U,5)=""
"RTN","ORWSR",70,0)
 S ORTMP(0)=X
"RTN","ORWSR",71,0)
 F  S J=$O(ORY(+ORCASE,J)) Q:+J=0  D
"RTN","ORWSR",72,0)
 . S X=ORY(+ORCASE,J)
"RTN","ORWSR",73,0)
 . S:(($P(X,U,14)=ORCTXT)!($P(X,U,14)="")) $P(X,U,14)=+$P(X,U,10)
"RTN","ORWSR",74,0)
 . S ORTMP(J)=X
"RTN","ORWSR",75,0)
 K ORY M ORY=ORTMP
"RTN","ORWSR",76,0)
 Q
"RTN","ORWSR",77,0)
SHOWOPTP(ORY,ORCASE)    ;Should OpTop be displayed on signature?
"RTN","ORWSR",78,0)
 I '$$PATCH^XPDUTL("SR*3.0*100") S ORY=0 Q
"RTN","ORWSR",79,0)
 S ORY=$$OPTOP^SROESTV(+ORCASE)
"RTN","ORWSR",80,0)
 Q
"RTN","ORWSR",81,0)
ISNONOR(ORY,ORCASE)     ;Is the procedure a non-OR procedure?
"RTN","ORWSR",82,0)
 I '$$PATCH^XPDUTL("SR*3.0*100") S ORY=0 Q
"RTN","ORWSR",83,0)
 S ORY=$$NON^SROESTV(+ORCASE)
"RTN","ORWSR",84,0)
 Q
"RTN","ORWSR",85,0)
RPTLIST(ORY,ORDFN) ;Return list of surgery reports for reports tab
"RTN","ORWSR",86,0)
 ;I '$$PATCH^XPDUTL("SR*3.0*100") D NOTYET(.ORY)  Q
"RTN","ORWSR",87,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",88,0)
 Q:'+ORDFN
"RTN","ORWSR",89,0)
 N ORBDT,OREDT,ORMAX,I,SHOWDOCS,X,SITE
"RTN","ORWSR",90,0)
 S (ORBDT,OREDT,ORMAX)="",SHOWDOCS=0
"RTN","ORWSR",91,0)
 S ORY=$NA(^TMP("ORLIST",$J))
"RTN","ORWSR",92,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",2)_";"_$P(SITE,"^",3)
"RTN","ORWSR",93,0)
 D LIST^SROESTV(.ORY,ORDFN,ORBDT,OREDT,ORMAX,SHOWDOCS)
"RTN","ORWSR",94,0)
 S I=0
"RTN","ORWSR",95,0)
 F  S I=$O(@ORY@(I)) Q:+I=0  D
"RTN","ORWSR",96,0)
 . S X=$P(@ORY@(I),U,2),$P(@ORY@(I),U,2)=$P(@ORY@(I),U,3),$P(@ORY@(I),U,3)=X
"RTN","ORWSR",97,0)
 . S $P(@ORY@(I),U,4)=$P($P(@ORY@(I),U,4),";",2)
"RTN","ORWSR",98,0)
 . S @ORY@(I)=SITE_U_@ORY@(I)
"RTN","ORWSR",99,0)
 Q
"RTN","ORWSR",100,0)
RPTTEXT(ROOT,DFN,ORID,ALPHA,OMEGA,DTRANGE,REMOTE,ORMAX,ORFHIE) ; -- return surgery report
"RTN","ORWSR",101,0)
 ;I '$$PATCH^XPDUTL("SR*3.0*100") D NOTYET(.ROOT)  Q
"RTN","ORWSR",102,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",103,0)
 Q:+ORID=0
"RTN","ORWSR",104,0)
 N X,ORI,J,ORDOC,ORCASE,CNT,LINES,ORSEP,ORTMP
"RTN","ORWSR",105,0)
 S (X,ORI)="",$P(ORSEP,"=",74)=""
"RTN","ORWSR",106,0)
 S ROOT=$NA(^TMP("ORXPND",$J))
"RTN","ORWSR",107,0)
 K @ROOT
"RTN","ORWSR",108,0)
 S CNT=0
"RTN","ORWSR",109,0)
 D GETONE(.ORCASE,ORID)
"RTN","ORWSR",110,0)
 S (ORI,J)=""
"RTN","ORWSR",111,0)
 F  S ORI=$O(ORCASE(ORI)) Q:ORI=""  D
"RTN","ORWSR",112,0)
 . S ORTMP(ORID,ORI)=ORCASE(ORI)
"RTN","ORWSR",113,0)
 K ORCASE M ORCASE=ORTMP
"RTN","ORWSR",114,0)
 S ORI=""
"RTN","ORWSR",115,0)
 F  S ORI=$O(ORCASE(ORID,ORI)) Q:ORI=""  D
"RTN","ORWSR",116,0)
 . Q:'$L($P(ORCASE(ORID,ORI),U,10))
"RTN","ORWSR",117,0)
 . Q:$E($P(ORCASE(ORID,ORI),U,2),1,8)="Addendum"
"RTN","ORWSR",118,0)
 . D TGET^TIUSRVR1(.ORDOC,+ORCASE(ORID,ORI),"VIEW")
"RTN","ORWSR",119,0)
 . S J="",LINES=0
"RTN","ORWSR",120,0)
 . F  S J=$O(@ORDOC@(J)) Q:J=""  D
"RTN","ORWSR",121,0)
 . . I $D(@ORDOC@(J))=10 D
"RTN","ORWSR",122,0)
 . . . S @ROOT@(J+CNT,0)=@ORDOC@(J,0),LINES=LINES+1
"RTN","ORWSR",123,0)
 . . E  S @ROOT@(J+CNT,0)=@ORDOC@(J),LINES=LINES+1
"RTN","ORWSR",124,0)
 . K ORDOC,ORY(ORID) S CNT=CNT+LINES+1
"RTN","ORWSR",125,0)
 . S @ROOT@(CNT,0)=ORSEP,CNT=CNT+1
"RTN","ORWSR",126,0)
 I CNT=0 S @ROOT@(CNT,0)="No reports are available for this case."
"RTN","ORWSR",127,0)
 Q
"RTN","ORWSR",128,0)
NOTYET(ROOT) ; -- standard not available display text
"RTN","ORWSR",129,0)
 D SETITEM(.ROOT,"Report not available at this time.")
"RTN","ORWSR",130,0)
 Q
"RTN","ORWSR",131,0)
SETITEM(ROOT,X) ; -- set item in list
"RTN","ORWSR",132,0)
 S @ROOT@($O(@ROOT@(9999),-1)+1)=X
"RTN","ORWSR",133,0)
 Q
"RTN","ORX2")
0^69^B10820095
"RTN","ORX2",1,0)
ORX2 ; slc/dcm - OE/RR Patient lock entry points ;11/25/02  09:51
"RTN","ORX2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**16,48,158,168,183,190**;Dec 17, 1997
"RTN","ORX2",3,0)
PT1 ;;Entry point to unlock patient when done adding orders - NO LONGER USED
"RTN","ORX2",4,0)
 ;;Required variable ORVP.
"RTN","ORX2",5,0)
 Q:'$D(ORVP)  Q:'$L(ORVP)  Q:ORVP'["DPT("
"RTN","ORX2",6,0)
 D UNLOCK(+ORVP) K ORPTLK,ORELK
"RTN","ORX2",7,0)
 Q
"RTN","ORX2",8,0)
LK ;;Entry point for locking patient when updating orders
"RTN","ORX2",9,0)
 ;;Entry: X=VP to Patient "DFN;DPT("  Exit: Y=1 if lock succeeds
"RTN","ORX2",10,0)
 Q:'$D(X)  Q:'$L(X)  Q:X'["DPT("  Q:'$D(@("^"_$P(X,";",2)_+X_",0)"))
"RTN","ORX2",11,0)
 S Y=$$LOCK(+X) Q:Y
"RTN","ORX2",12,0)
 W !!,$C(7),$P(Y,U,2) D READ
"RTN","ORX2",13,0)
 S Y=0 K X
"RTN","ORX2",14,0)
 Q
"RTN","ORX2",15,0)
ULK ;;Entry point to unlock patient
"RTN","ORX2",16,0)
 ;;Required variable X=VP to patient.
"RTN","ORX2",17,0)
 Q:'$D(X)  Q:'$L(X)  Q:X'["DPT("  Q:'$D(@("^"_$P(X,";",2)_+X_",0)"))
"RTN","ORX2",18,0)
 D UNLOCK(+X)
"RTN","ORX2",19,0)
 Q
"RTN","ORX2",20,0)
 ;
"RTN","ORX2",21,0)
LOCK(DFN) ; -- Lock patient chart (silent)
"RTN","ORX2",22,0)
 ; Returns 1 if successful, or 0^Message if could not get lock
"RTN","ORX2",23,0)
 ;
"RTN","ORX2",24,0)
 Q:'$G(DFN) "0^Invalid patient" N Y,ORLK,NOW,NOW1
"RTN","ORX2",25,0)
 S ORLK=$G(^XTMP("ORPTLK-"_DFN,1)) Q:ORLK=(DUZ_U_$J) 1 ;locked
"RTN","ORX2",26,0)
 L +^XTMP("ORPTLK-"_DFN):1 I '$T S Y="0^"_$S(+ORLK:$P($G(^VA(200,+ORLK,0)),U),1:"Another person")_" is editing orders for this patient." Q Y
"RTN","ORX2",27,0)
 S NOW=$$NOW^XLFDT,NOW1=$$FMADD^XLFDT(NOW,1)
"RTN","ORX2",28,0)
 S ^XTMP("ORPTLK-"_DFN,0)=NOW1_U_NOW_"^CPRS Chart Lock",^(1)=DUZ_U_$J
"RTN","ORX2",29,0)
 Q 1
"RTN","ORX2",30,0)
 ;
"RTN","ORX2",31,0)
UNLOCK(DFN) ; -- Unlock patient chart (silent)
"RTN","ORX2",32,0)
 L -^XTMP("ORPTLK-"_DFN)
"RTN","ORX2",33,0)
 I $G(^XTMP("ORPTLK-"_DFN,1))=(DUZ_U_$J) K ^XTMP("ORPTLK-"_DFN)
"RTN","ORX2",34,0)
 Q
"RTN","ORX2",35,0)
 ;
"RTN","ORX2",36,0)
INC(IFN) ;Increment zero node on file 100.2
"RTN","ORX2",37,0)
 N X,X3,X4
"RTN","ORX2",38,0)
 Q:'$G(IFN) 1 Q:$D(^OR(100.2,IFN)) 1
"RTN","ORX2",39,0)
 L +^OR(100.2,0):5 I '$T Q 0
"RTN","ORX2",40,0)
 S:'$D(^OR(100.2,0)) ^(0)="OE/RR PATIENT^100.2P" S X=^(0)
"RTN","ORX2",41,0)
 S X4=+$P(X,U,4)+1,X3=$S(IFN>$P(X,U,3):IFN,1:$P(X,U,3))
"RTN","ORX2",42,0)
 S $P(^OR(100.2,0),U,3,4)=X3_U_X4
"RTN","ORX2",43,0)
 L -^OR(100.2,0)
"RTN","ORX2",44,0)
 Q 1
"RTN","ORX2",45,0)
 ;
"RTN","ORX2",46,0)
LOCK1(ORDER) ; -- Lock ORDER in file #100
"RTN","ORX2",47,0)
 ; Returns 1 if successful or 0^Message if could not get lock
"RTN","ORX2",48,0)
 ;
"RTN","ORX2",49,0)
 N X,Y,NOW,NOW1 I '$G(ORDER) Q "0^Invalid order number"
"RTN","ORX2",50,0)
 ;DBIA #4001 Private DBIA w CMOP
"RTN","ORX2",51,0)
 I $D(^XTMP("ORLK-"_ORDER,0)),(^(0)["CPRS/CMOP") Q "0^CMOP Transmission"
"RTN","ORX2",52,0)
 L +^OR(100,+ORDER):1 I '$T S X=+$G(^XTMP("ORLK-"_+ORDER,1)),Y="0^"_$S(X:$P($G(^VA(200,X,0)),U),1:"Another person")_" is working on this order." Q Y
"RTN","ORX2",53,0)
 I $P($G(^OR(100,+ORDER,0)),U,12)="I" S Y=+$P($G(^(3)),U,6) I Y,$P($G(^OR(100,Y,3)),U,3)=11 D  Q Y
"RTN","ORX2",54,0)
 . S X=$S($P(^OR(100,Y,3),U,11)=2:"renewal",1:"edit")
"RTN","ORX2",55,0)
 . S Y="0^An unreleased "_X_" exists for this order." L -^OR(100,+ORDER)
"RTN","ORX2",56,0)
 S NOW=$$NOW^XLFDT,NOW1=$$FMADD^XLFDT(NOW,1)
"RTN","ORX2",57,0)
 S ^XTMP("ORLK-"_+ORDER,0)=NOW1_U_NOW_"^CPRS Order Lock",^(1)=DUZ_U_$J
"RTN","ORX2",58,0)
 Q 1
"RTN","ORX2",59,0)
 ;
"RTN","ORX2",60,0)
UNLK1(ORDER) ; -- Unlock ORDER in file #100
"RTN","ORX2",61,0)
 ;DBIA #4001 CMOP
"RTN","ORX2",62,0)
 S ORDER=+ORDER Q:'ORDER
"RTN","ORX2",63,0)
 I $D(^XTMP("ORLK-"_ORDER,0)),(^(0)["CPRS/CMOP") D  Q
"RTN","ORX2",64,0)
 . I $J'=$P($G(^XTMP("ORLK-"_ORDER,1)),U,2) Q
"RTN","ORX2",65,0)
 . L -^OR(100,ORDER) K ^XTMP("ORLK-"_ORDER)
"RTN","ORX2",66,0)
 L +^OR(100,ORDER):1
"RTN","ORX2",67,0)
 I '$T Q
"RTN","ORX2",68,0)
 E  L -^OR(100,ORDER)
"RTN","ORX2",69,0)
 L -^OR(100,ORDER) K ^XTMP("ORLK-"_ORDER)
"RTN","ORX2",70,0)
 Q
"RTN","ORX2",71,0)
 ;
"RTN","ORX2",72,0)
READ ; -- instead of READ^ORUTL
"RTN","ORX2",73,0)
 N X,Y,DIR
"RTN","ORX2",74,0)
 S DIR(0)="EA",DIR("A")="     Press return to continue  "
"RTN","ORX2",75,0)
 D ^DIR
"RTN","ORX2",76,0)
 Q
"RTN","ORY190")
0^59^B14269927
"RTN","ORY190",1,0)
ORY190 ; slc/CLA - Pre and Post-init for patch OR*3*190 ; Aug 6, 2003@11:02:31 [6/17/04 12:59pm]
"RTN","ORY190",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**190**;Dec 17, 1997
"RTN","ORY190",3,0)
 ;
"RTN","ORY190",4,0)
PRE ;initiate pre-init processes
"RTN","ORY190",5,0)
 ;
"RTN","ORY190",6,0)
 Q
"RTN","ORY190",7,0)
 ;
"RTN","ORY190",8,0)
POST ;initiate post-init processes
"RTN","ORY190",9,0)
 ;
"RTN","ORY190",10,0)
 N VER
"RTN","ORY190",11,0)
 ;
"RTN","ORY190",12,0)
 S VER=$P($T(VERSION^ORY190),";",3)
"RTN","ORY190",13,0)
 I +$$PATCH^XPDUTL("TIU*1.0*112") D SURGREG
"RTN","ORY190",14,0)
 D SETVAL
"RTN","ORY190",15,0)
 D SORTCHG
"RTN","ORY190",16,0)
 D PSIV
"RTN","ORY190",17,0)
 D MAIL
"RTN","ORY190",18,0)
 ;
"RTN","ORY190",19,0)
 Q
"RTN","ORY190",20,0)
 ;
"RTN","ORY190",21,0)
SURGREG ; Register TIU SURGERY RPCs if TIU*1.0*112 present
"RTN","ORY190",22,0)
 N MENU,RPC
"RTN","ORY190",23,0)
 S MENU="OR CPRS GUI CHART"
"RTN","ORY190",24,0)
 F RPC="TIU IS THIS A SURGERY?","TIU IDENTIFY SURGERY CLASS","TIU LONG LIST SURGERY TITLES","TIU GET DOCUMENTS FOR REQUEST" D INSERT(MENU,RPC)
"RTN","ORY190",25,0)
 Q
"RTN","ORY190",26,0)
 ;
"RTN","ORY190",27,0)
INSERT(OPTION,RPC) ; Call FM Updater with each RPC
"RTN","ORY190",28,0)
 ; Input  -- OPTION   Option file (#19) Name field (#.01)
"RTN","ORY190",29,0)
 ;           RPC      RPC sub-file (#19.05) RPC field (#.01)
"RTN","ORY190",30,0)
 ; Output -- None
"RTN","ORY190",31,0)
 N FDA,FDAIEN,ERR,DIERR
"RTN","ORY190",32,0)
 S FDA(19,"?1,",.01)=OPTION
"RTN","ORY190",33,0)
 S FDA(19.05,"?+2,?1,",.01)=RPC
"RTN","ORY190",34,0)
 D UPDATE^DIE("E","FDA","FDAIEN","ERR")
"RTN","ORY190",35,0)
 Q
"RTN","ORY190",36,0)
 ;
"RTN","ORY190",37,0)
SETVAL ; Set package-level values for params
"RTN","ORY190",38,0)
 N X
"RTN","ORY190",39,0)
 S X=0,X=$O(^ORD(100.98,"B","NON-VA MEDICATIONS",X)) Q:'X  D 
"RTN","ORY190",40,0)
 . D PUT^XPAR("PKG","ORWOR CATEGORY SEQUENCE",68,X)
"RTN","ORY190",41,0)
 S X=0,X=$O(^ORD(101.41,"B","PSH OERR",X)) Q:'X  D 
"RTN","ORY190",42,0)
 . D PUT^XPAR("PKG","ORWOR WRITE ORDERS LIST",53,X)
"RTN","ORY190",43,0)
 D PUT^XPAR("PKG","ORWD NONVA REASON",1,"Non-VA medication not recommended by VA provider.")
"RTN","ORY190",44,0)
 D PUT^XPAR("PKG","ORWD NONVA REASON",2,"Non-VA medication recommended by VA provider.")
"RTN","ORY190",45,0)
 D PUT^XPAR("PKG","ORWD NONVA REASON",3,"Patient wants to buy from Non-VA pharmacy.")
"RTN","ORY190",46,0)
 D PUT^XPAR("PKG","ORWD NONVA REASON",4,"Medication prescribed by Non-VA provider.")
"RTN","ORY190",47,0)
 ;
"RTN","ORY190",48,0)
 D PUT^XPAR("PKG","ORB SORT METHOD",1,"D")  ; Date/Time
"RTN","ORY190",49,0)
 Q
"RTN","ORY190",50,0)
 ;
"RTN","ORY190",51,0)
SORTCHG ; conver "T" sort method values to "M"
"RTN","ORY190",52,0)
 N ORLST,ORERR,ORBX,ORBE,ORBERR
"RTN","ORY190",53,0)
 S ORBE=0,ORBX=0
"RTN","ORY190",54,0)
 D ENVAL^XPAR(.ORLST,"ORB SORT METHOD",1,.ORERR)
"RTN","ORY190",55,0)
 I 'ORERR,$G(ORLST)>0 D
"RTN","ORY190",56,0)
 .F ORBX=1:1:ORLST S ORBE=$O(ORLST(ORBE)) I ORLST(ORBE,1)="T" D
"RTN","ORY190",57,0)
 ..D EN^XPAR(ORBE,"ORB SORT METHOD",1,"M",.ORBERR)
"RTN","ORY190",58,0)
 ..I +ORBERR>0 D
"RTN","ORY190",59,0)
 ...S X="Error: "_ORBERR_" converting ORB SORT METHOD value 'T' to 'M' for entity "_ORBE
"RTN","ORY190",60,0)
 ...D BMES^XPDUTL(X)
"RTN","ORY190",61,0)
 Q
"RTN","ORY190",62,0)
 ;
"RTN","ORY190",63,0)
PSIV ; convert package ptrs in #101.41 from PSIV to PSJ
"RTN","ORY190",64,0)
 N ORPSIV,ORPSJ,ORI,X
"RTN","ORY190",65,0)
 S ORPSIV=+$$PKG^ORMPS1("PSIV"),ORPSJ=+$$PKG^ORMPS1("PSJ") Q:ORPSJ<1
"RTN","ORY190",66,0)
 S ORI=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0)) I ORI,$D(^ORD(101.41,ORI,0)) S X=$P(^(0),U,7),$P(^(0),U,7)=ORPSJ K ^ORD(101.41,"APKG",X,ORI) S ^ORD(101.41,"APKG",ORPSJ,ORI)="" ;ensure IV dlg is correct
"RTN","ORY190",67,0)
 I ORPSIV S ORI=0 F  S ORI=$O(^ORD(101.41,"APKG",ORPSIV,ORI)) Q:ORI<1  D
"RTN","ORY190",68,0)
 . K ^ORD(101.41,"APKG",ORPSIV,ORI)
"RTN","ORY190",69,0)
 . S $P(^ORD(101.41,ORI,0),U,7)=ORPSJ,^ORD(101.41,"APKG",ORPSJ,ORI)=""
"RTN","ORY190",70,0)
 Q
"RTN","ORY190",71,0)
 ;
"RTN","ORY190",72,0)
MAIL ; send bulletin of installation time
"RTN","ORY190",73,0)
 N COUNT,DIFROM,I,START,TEXT,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","ORY190",74,0)
 S COUNT=0
"RTN","ORY190",75,0)
 S XMSUB="Version "_$P($T(VERSION),";;",2)_" Installed"
"RTN","ORY190",76,0)
 S XMDUZ="CPRS PACKAGE"
"RTN","ORY190",77,0)
 F I="G.CPRS GUI INSTALL@ISC-SLC.VA.GOV",DUZ S XMY(I)=""
"RTN","ORY190",78,0)
 S XMTEXT="TEXT("
"RTN","ORY190",79,0)
 ;
"RTN","ORY190",80,0)
 S X=$P($T(VERSION),";;",2)
"RTN","ORY190",81,0)
 D LINE("Version "_X_" has been installed.")
"RTN","ORY190",82,0)
 D LINE(" ")
"RTN","ORY190",83,0)
 D LINE("Install complete:  "_$$FMTE^XLFDT($$NOW^XLFDT()))
"RTN","ORY190",84,0)
 ;
"RTN","ORY190",85,0)
 D ^XMD
"RTN","ORY190",86,0)
 Q
"RTN","ORY190",87,0)
 ;
"RTN","ORY190",88,0)
LINE(DATA) ; set text into array
"RTN","ORY190",89,0)
 S COUNT=COUNT+1
"RTN","ORY190",90,0)
 S TEXT(COUNT)=DATA
"RTN","ORY190",91,0)
 Q
"RTN","ORY190",92,0)
 ;
"RTN","ORY190",93,0)
VERSION ;;24.26
"VER")
8.0^22.0
"^DD",100,100,8.1,0)
TYPE^S^0:STANDARD;1:EDIT;2:RENEW;4:HOLD;6:DISCONTINUE;B:BCMA;C:COPY;X:TRANSFER;P:PACKAGE;^3;11^Q
"^DD",100,100,8.1,3)
The type of order is determined by the action a user takes when processing orders.
"^DD",100,100,8.1,21,0)
^.001^2^2^3030815^^
"^DD",100,100,8.1,21,1,0)
This field is used to determine the type of order that is being processed.
"^DD",100,100,8.1,21,2,0)
Different things happen depending on the order type.
"^DD",100,100,8.1,"DT")
3030815
"^DD",100,100,57,0)
COMBAT VETERAN^S^1:YES;0:NO;^5;7^Q
"^DD",100,100,57,3)
Enter YES if this order is for treatment of a condition related to combat.
"^DD",100,100,57,21,0)
^^5^5^3031117^
"^DD",100,100,57,21,1,0)
When signing orders, the provider may be asked if this order is for
"^DD",100,100,57,21,2,0)
treatment of a combat-related condition; his/her response to this
"^DD",100,100,57,21,3,0)
question will be stored in this field.  Currently this question is only
"^DD",100,100,57,21,4,0)
asked for Outpatient Medications, and the response is passed to that
"^DD",100,100,57,21,5,0)
package with the new order.
"^DD",100,100,57,"DT")
3031117
"^DD",101.24,101.24,0)
FIELD^^10^36
"^DD",101.24,101.24,0,"DDA")
N
"^DD",101.24,101.24,0,"DT")
3031008
"^DD",101.24,101.24,0,"ID",.23)
W:$D(^(2)) "   ",$P(^(2),U,3)
"^DD",101.24,101.24,0,"ID",.24)
W:$D(^(2)) "   ",$P(^(2),U,4)
"^DD",101.24,101.24,0,"IX","AC",101.24,.02)

"^DD",101.24,101.24,0,"IX","B",101.24,.01)

"^DD",101.24,101.24,0,"NM","OE/RR REPORT")

"^DD",101.24,101.24,0,"PT",101.24,.18)

"^DD",101.24,101.24,0,"PT",101.241,.01)

"^DD",101.24,101.24,0,"VRPK")
OR
"^DD",101.24,101.24,.001,0)
NUMBER^NJ5,0^^ ^K:+X'=X!(X>10000)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.24,.001,3)
Type a Number between 1 and 10000, 0 Decimal Digits
"^DD",101.24,101.24,.001,21,0)
^^1^1^3000921^
"^DD",101.24,101.24,.001,21,1,0)
This is the Number field for the file.
"^DD",101.24,101.24,.001,"DT")
3000920
"^DD",101.24,101.24,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",101.24,101.24,.01,1,0)
^.1^^-1
"^DD",101.24,101.24,.01,1,1,0)
101.24^B
"^DD",101.24,101.24,.01,1,1,1)
S ^ORD(101.24,"B",$E(X,1,30),DA)=""
"^DD",101.24,101.24,.01,1,1,2)
K ^ORD(101.24,"B",$E(X,1,30),DA)
"^DD",101.24,101.24,.01,3)
Answer must be 3-30 characters in length.
"^DD",101.24,101.24,.01,21,0)
^^1^1^3000921^
"^DD",101.24,101.24,.01,21,1,0)
This is the Name of the report.
"^DD",101.24,101.24,.01,"DT")
3010510
"^DD",101.24,101.24,.02,0)
ID^RF^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",101.24,101.24,.02,1,0)
^.1
"^DD",101.24,101.24,.02,1,1,0)
101.24^AC
"^DD",101.24,101.24,.02,1,1,1)
S ^ORD(101.24,"AC",$E(X,1,30),DA)=""
"^DD",101.24,101.24,.02,1,1,2)
K ^ORD(101.24,"AC",$E(X,1,30),DA)
"^DD",101.24,101.24,.02,1,1,"DT")
3001005
"^DD",101.24,101.24,.02,3)
Answer must be 1-10 characters in length.
"^DD",101.24,101.24,.02,21,0)
^^4^4^3000921^
"^DD",101.24,101.24,.02,21,1,0)
This is the code that identifies the report.  Each tab in CPRS that
"^DD",101.24,101.24,.02,21,2,0)
uses reports looks for this ID in order to process the report.
"^DD",101.24,101.24,.02,21,3,0)
Each tab also uses a unique set of ID's.  An ID of 5 on the Reports
"^DD",101.24,101.24,.02,21,4,0)
Tab may not identify the same report on a different tab.
"^DD",101.24,101.24,.02,"DT")
3001005
"^DD",101.24,101.24,.03,0)
REMOTE^S^1:YES;^0;3^Q
"^DD",101.24,101.24,.03,21,0)
^^2^2^3000921^
"^DD",101.24,101.24,.03,21,1,0)
This field is used to identify which reports allow remote access through
"^DD",101.24,101.24,.03,21,2,0)
Remote Data Views.
"^DD",101.24,101.24,.03,"DT")
3000907
"^DD",101.24,101.24,.04,0)
QUALIFIER^S^1:HSType;2:DateTime;3:Imaging;4:NutrAssess;19:MedicineProcedure;39:ListView;5:HSComponent;6:HSWPComponent;28:Surgery;^0;4^Q
"^DD",101.24,101.24,.04,21,0)
^.001^2^2^3010531^^^
"^DD",101.24,101.24,.04,21,1,0)
This field identifies which qualifier to use when processing the report.
"^DD",101.24,101.24,.04,21,2,0)
Examples of qualifiers are HSType, DateTime, Imaging and NutrAssess.
"^DD",101.24,101.24,.04,"DT")
3011004
"^DD",101.24,101.24,.05,0)
ROUTINE^FI^^0;5^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.05,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.05,8.5)
@
"^DD",101.24,101.24,.05,9)
@
"^DD",101.24,101.24,.05,21,0)
^.001^1^1^3001026^^^
"^DD",101.24,101.24,.05,21,1,0)
This is the routine that is invoked to produce the report.
"^DD",101.24,101.24,.05,23,0)
^.001^2^2^3001026^^
"^DD",101.24,101.24,.05,23,1,0)
The Labs Tab does not have a value for this field.  The CPRS executable
"^DD",101.24,101.24,.05,23,2,0)
calls separate RPC's for each report.
"^DD",101.24,101.24,.05,"DT")
3040126
"^DD",101.24,101.24,.06,0)
ENTRY POINT^FI^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.06,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.06,8.5)
@
"^DD",101.24,101.24,.06,9)
@
"^DD",101.24,101.24,.06,21,0)
^.001^2^2^3001026^^
"^DD",101.24,101.24,.06,21,1,0)
This is the entry point for the ROUTINE that is invoked to produce the
"^DD",101.24,101.24,.06,21,2,0)
report.
"^DD",101.24,101.24,.06,23,0)
^.001^2^2^3001026^^
"^DD",101.24,101.24,.06,23,1,0)
The Labs Tab does not have a value for this field.  The CPRS executable
"^DD",101.24,101.24,.06,23,2,0)
calls separate RPC's for each report.
"^DD",101.24,101.24,.06,"DT")
3040126
"^DD",101.24,101.24,.07,0)
CATEGORY^S^0:FIXED;1:FIXED W/DATE;2:FIXED W/HEADER;3:FIXED W/DATE&HEADER;4:SPECIALIZED;5:GRAPHIC;6:LISTVIEW;^0;7^Q
"^DD",101.24,101.24,.07,3)
Enter a category for this report
"^DD",101.24,101.24,.07,21,0)
^^2^2^3001004^
"^DD",101.24,101.24,.07,21,1,0)
This field puts reports into a category that is evaluated by the GUI
"^DD",101.24,101.24,.07,21,2,0)
when the report is processed.
"^DD",101.24,101.24,.07,"DT")
3010215
"^DD",101.24,101.24,.08,0)
TAB^S^R:REPORTS TAB;L:LABS TAB;C:COVER SHEET;CD:COVER SHEET DETAILS;^0;8^Q
"^DD",101.24,101.24,.08,3)
Enter the appropriate code for this report.
"^DD",101.24,101.24,.08,21,0)
^.001^1^1^3001003^^
"^DD",101.24,101.24,.08,21,1,0)
This fields identifies the appropriate tab for a report in CPRS.
"^DD",101.24,101.24,.08,"DT")
3001011
"^DD",101.24,101.24,.09,0)
MIXEDCASE^S^1:YES;^0;9^Q
"^DD",101.24,101.24,.09,3)
Enter YES to display the list in mixed case
"^DD",101.24,101.24,.09,21,0)
^^2^2^3001004^
"^DD",101.24,101.24,.09,21,1,0)
This is used in the cover sheet and is used to display the returned
"^DD",101.24,101.24,.09,21,2,0)
list in mixed case.
"^DD",101.24,101.24,.09,"DT")
3001004
"^DD",101.24,101.24,.1,0)
INVERT^S^1:YES;^0;10^Q
"^DD",101.24,101.24,.1,3)
Enter YES to have the returned list inverted.
"^DD",101.24,101.24,.1,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.1,21,1,0)
This field is used to invert a list of data returned in the Cover sheet
"^DD",101.24,101.24,.1,"DT")
3001004
"^DD",101.24,101.24,.11,0)
TEXT COLOR^S^Black:BLACK;Maroon:MAROON;Green:GREEN;Olive:OLIVE;Purple:PURPLE;Teal:TEAL;Red:RED;Lime:LIME;Yellow:YELLOW;Blue:BLUE;Fuchsia:FUCHSIA;Aqua:AQUA;^0;11^Q
"^DD",101.24,101.24,.11,3)
Enter the color for the text
"^DD",101.24,101.24,.11,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.11,21,1,0)
This field determines the text color for the returned data.
"^DD",101.24,101.24,.11,"DT")
3001004
"^DD",101.24,101.24,.12,0)
TYPE^S^R:REPORT;H:HTML;L:LISTMAN ONLY;S:SELECTION LIST;V:LISTVIEW;M:MENU;^0;12^Q
"^DD",101.24,101.24,.12,3)
Enter the type for this entry.
"^DD",101.24,101.24,.12,21,0)
^.001^1^1^3001017^^
"^DD",101.24,101.24,.12,21,1,0)
This field identifies the type for an entry.
"^DD",101.24,101.24,.12,"DT")
3010315
"^DD",101.24,101.24,.13,0)
RPC^P8994'^XWB(8994,^0;13^Q
"^DD",101.24,101.24,.13,3)
Select the RPC that produces this report.
"^DD",101.24,101.24,.13,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.13,21,1,0)
This is the RPC that is called inside the GUI to produce the report.
"^DD",101.24,101.24,.13,"DT")
3001004
"^DD",101.24,101.24,.14,0)
DATE FORMAT^S^D:DATE ONLY;T:DATE WITH TIME;^0;14^Q
"^DD",101.24,101.24,.14,3)
Enter the code for the desired date format.
"^DD",101.24,101.24,.14,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.14,21,1,0)
This field determines what kind of format to display date/time fields.
"^DD",101.24,101.24,.14,"DT")
3001004
"^DD",101.24,101.24,.15,0)
DATE PIECE^NJ2,0^^0;15^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.24,.15,3)
Type a Number between 1 and 15, 0 Decimal Digits
"^DD",101.24,101.24,.15,21,0)
^^2^2^3001004^
"^DD",101.24,101.24,.15,21,1,0)
This is used on the Cover Sheet to determine which piece the date field
"^DD",101.24,101.24,.15,21,2,0)
occupies.
"^DD",101.24,101.24,.15,"DT")
3001004
"^DD",101.24,101.24,.16,0)
TAB POSITIONS^F^^0;16^K:$L(X)>15!($L(X)<1) X
"^DD",101.24,101.24,.16,3)
Answer must be 1-15 characters in length.
"^DD",101.24,101.24,.16,21,0)
^^2^2^3001005^
"^DD",101.24,101.24,.16,21,1,0)
This is the value that will be used for the Tab property for the listbox
"^DD",101.24,101.24,.16,21,2,0)
associated with this report on the Cover Sheet.
"^DD",101.24,101.24,.16,"DT")
3001005
"^DD",101.24,101.24,.17,0)
PIECES^F^^0;17^K:$L(X)>20!($L(X)<1) X
"^DD",101.24,101.24,.17,3)
Answer must be 1-20 characters in length.
"^DD",101.24,101.24,.17,21,0)
^^2^2^3001011^
"^DD",101.24,101.24,.17,21,1,0)
This field is used by the Cover Sheet to determine what pieces of data
"^DD",101.24,101.24,.17,21,2,0)
to display in the listbox.
"^DD",101.24,101.24,.17,"DT")
3001011
"^DD",101.24,101.24,.18,0)
DETAIL REPORT^*P101.24'^ORD(101.24,^0;18^S DIC("S")="I $P(^(0),""^"",8)=""CD""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",101.24,101.24,.18,3)
Enter the report to get the details for this report.
"^DD",101.24,101.24,.18,12)
Allow only Cover sheet detail type reports
"^DD",101.24,101.24,.18,12.1)
S DIC("S")="I $P(^(0),""^"",8)=""CD"""
"^DD",101.24,101.24,.18,21,0)
^^1^1^3001011^
"^DD",101.24,101.24,.18,21,1,0)
This field is used to get the details of an item on the cover sheet.
"^DD",101.24,101.24,.18,"DT")
3001011
"^DD",101.24,101.24,.19,0)
REPORT TAG^FI^^0;19^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.19,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.19,21,0)
^.001^1^1^3010503^^
"^DD",101.24,101.24,.19,21,1,0)
This is the entry point tag for a report extract.
"^DD",101.24,101.24,.19,"DT")
3040126
"^DD",101.24,101.24,.191,0)
REPORT ROUTINE^FI^^0;20^K:$L(X)>8!($L(X)<3) X
"^DD",101.24,101.24,.191,3)
Answer must be 3-8 characters in length.
"^DD",101.24,101.24,.191,21,0)
^.001^1^1^3010503^^
"^DD",101.24,101.24,.191,21,1,0)
This is the routine associated with the REPORT TAG for report extracts.
"^DD",101.24,101.24,.191,"DT")
3040126
"^DD",101.24,101.24,.192,0)
REPORT COMPONENT^P142.1'^GMT(142.1,^0;21^Q
"^DD",101.24,101.24,.192,21,0)
^.001^1^1^3010503^^
"^DD",101.24,101.24,.192,21,1,0)
This is the report component associated with this report.
"^DD",101.24,101.24,.192,"DT")
3010503
"^DD",101.24,101.24,.21,0)
PARAM 1^F^^2;1^K:$L(X)>30!($L(X)<1) X
"^DD",101.24,101.24,.21,3)
Answer must be 1-30 characters in length.
"^DD",101.24,101.24,.21,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.21,21,1,0)
This is the 1st parameter passed to the RPC, if needed.
"^DD",101.24,101.24,.21,"DT")
3001004
"^DD",101.24,101.24,.22,0)
PARAM 2^F^^2;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.24,101.24,.22,3)
Answer must be 1-30 characters in length.
"^DD",101.24,101.24,.22,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.22,21,1,0)
This is the 2nd parameter passed to the RPC, if needed.
"^DD",101.24,101.24,.22,"DT")
3001004
"^DD",101.24,101.24,.23,0)
HEADING^F^^2;3^K:$L(X)>75!($L(X)<1) X
"^DD",101.24,101.24,.23,1,0)
^.1^^0
"^DD",101.24,101.24,.23,3)
Answer must be 1-75 characters in length.
"^DD",101.24,101.24,.23,21,0)
^^1^1^3001031^
"^DD",101.24,101.24,.23,21,1,0)
This is the heading used on the Cover sheet for the list of items.
"^DD",101.24,101.24,.23,"DT")
3010510
"^DD",101.24,101.24,.24,0)
DESCRIPTIVE TEXT^RF^^2;4^K:$L(X)>55!($L(X)<2) X
"^DD",101.24,101.24,.24,3)
Answer must be 2-55 characters in length.
"^DD",101.24,101.24,.24,21,0)
^.001^2^2^3010510^^
"^DD",101.24,101.24,.24,21,1,0)
This is a more descriptive name than what might be included in the 
"^DD",101.24,101.24,.24,21,2,0)
NAME field.
"^DD",101.24,101.24,.24,"DT")
3010510
"^DD",101.24,101.24,.25,0)
NODE^F^^2;5^K:$L(X)>10!($L(X)<1) X
"^DD",101.24,101.24,.25,3)
Answer must be 1-10 characters in length.
"^DD",101.24,101.24,.25,21,0)
^^2^2^3001005^
"^DD",101.24,101.24,.25,21,1,0)
This is used by the Cover Sheet routines to define the node in the ^XTMP
"^DD",101.24,101.24,.25,21,2,0)
global to store the data.
"^DD",101.24,101.24,.25,"DT")
3001005
"^DD",101.24,101.24,.26,0)
PRINT TAG^FI^^2;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.26,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.26,21,0)
^^2^2^3010614^
"^DD",101.24,101.24,.26,21,1,0)
This is the entry point tag used when printing reports that do their own
"^DD",101.24,101.24,.26,21,2,0)
Write statements.
"^DD",101.24,101.24,.26,"DT")
3040126
"^DD",101.24,101.24,.27,0)
PRINT ROUTINE^FI^^2;7^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.27,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.27,21,0)
^^2^2^3010614^
"^DD",101.24,101.24,.27,21,1,0)
This is the entry point routine used when printing reports that do their own
"^DD",101.24,101.24,.27,21,2,0)
Write statements.
"^DD",101.24,101.24,.27,"DT")
3040126
"^DD",101.24,101.24,.28,0)
EXTRACT TAG^FI^^2;8^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.28,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.28,21,0)
^^2^2^3010711^
"^DD",101.24,101.24,.28,21,1,0)
This is the entry point for the extract routine that pulls the data from
"^DD",101.24,101.24,.28,21,2,0)
package API's and/or package files.
"^DD",101.24,101.24,.28,"DT")
3040126
"^DD",101.24,101.24,.29,0)
EXTRACT ROUTINE^FI^^2;9^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.29,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.29,21,0)
^^2^2^3010711^
"^DD",101.24,101.24,.29,21,1,0)
This is the extract routine that pulls data from package API's and/or
"^DD",101.24,101.24,.29,21,2,0)
package files.
"^DD",101.24,101.24,.29,"DT")
3040126
"^DD",101.24,101.24,.41,0)
SORT ORDER^F^^4;1^K:$L(X)>15!($L(X)<3)!'(X?1N1":"1N) X
"^DD",101.24,101.24,.41,3)
Answer must be 3-15 characters in length.
"^DD",101.24,101.24,.41,21,0)
^^6^6^3010717^
"^DD",101.24,101.24,.41,21,1,0)
This field is used when sorting columns of data on at grid within CPRS.
"^DD",101.24,101.24,.41,21,2,0)
It determines the sort order to be used in a multi-column sort.  The
"^DD",101.24,101.24,.41,21,3,0)
primary sort column is always the column header clicked on by the user.
"^DD",101.24,101.24,.41,21,4,0)
If this field has values in the form #:#, then a multi-column sort is
"^DD",101.24,101.24,.41,21,5,0)
done, using the column numbers identified in this field for the second
"^DD",101.24,101.24,.41,21,6,0)
and third level sorting.
"^DD",101.24,101.24,.41,"DT")
3010717
"^DD",101.24,101.24,.42,0)
MAXIMUM DAYS BACK^NJ4,0^^4;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.24,.42,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",101.24,101.24,.42,21,0)
^^1^1^3011004^
"^DD",101.24,101.24,.42,21,1,0)
This field restricts the report date range to the maximum value specified.
"^DD",101.24,101.24,.42,"DT")
3011004
"^DD",101.24,101.24,.43,0)
FHIE REPORT^F^^4;3^K:$L(X)>10!($L(X)<2) X
"^DD",101.24,101.24,.43,3)
Answer must be 2-10 characters in length.
"^DD",101.24,101.24,.43,21,0)
^.001^3^3^3040126^^^^
"^DD",101.24,101.24,.43,21,1,0)
This field identifies reports that are available through FHIE.
"^DD",101.24,101.24,.43,21,2,0)
The item in this field is the code for the report available through
"^DD",101.24,101.24,.43,21,3,0)
the FHIE server.
"^DD",101.24,101.24,.43,23,0)
^.001^3^3^3040126^^^^
"^DD",101.24,101.24,.43,23,1,0)
This field is not looked at by reports that have a 'listview' format.
"^DD",101.24,101.24,.43,23,2,0)
It is only used by straight text reports that go through the routine:
"^DD",101.24,101.24,.43,23,3,0)
  ORDV01
"^DD",101.24,101.24,.43,"DT")
3031008
"^DD",101.24,101.24,3,0)
COLUMN HEADERS^101.243^^3;0
"^DD",101.24,101.24,10,0)
ITEM^101.241P^^10;0
"^DD",101.24,101.241,0)
ITEM SUB-FIELD^^.03^3
"^DD",101.24,101.241,0,"DT")
3010215
"^DD",101.24,101.241,0,"IX","B",101.241,.01)

"^DD",101.24,101.241,0,"NM","ITEM")

"^DD",101.24,101.241,0,"UP")
101.24
"^DD",101.24,101.241,.01,0)
ITEM^MP101.24^ORD(101.24,^0;1^Q
"^DD",101.24,101.241,.01,1,0)
^.1
"^DD",101.24,101.241,.01,1,1,0)
101.241^B
"^DD",101.24,101.241,.01,1,1,1)
S ^ORD(101.24,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",101.24,101.241,.01,1,1,2)
K ^ORD(101.24,DA(1),10,"B",$E(X,1,30),DA)
"^DD",101.24,101.241,.01,3)

"^DD",101.24,101.241,.01,21,0)
^^1^1^3010215^
"^DD",101.24,101.241,.01,21,1,0)
This is used in building a treeview of reports for CPRS GUI.
"^DD",101.24,101.241,.01,"DT")
3010215
"^DD",101.24,101.241,.02,0)
HEADER TEXT^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.24,101.241,.02,3)
Answer must be 1-30 characters in length.
"^DD",101.24,101.241,.02,21,0)
^^1^1^3010215^
"^DD",101.24,101.241,.02,21,1,0)
This is the header to be used.
"^DD",101.24,101.241,.02,"DT")
3010215
"^DD",101.24,101.241,.03,0)
SEQUENCE^NJ7,1^^0;3^K:+X'=X!(X>99999)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.24,101.241,.03,3)
Type a Number between .1 and 99999, 1 Decimal Digit
"^DD",101.24,101.241,.03,21,0)
^^1^1^3010215^
"^DD",101.24,101.241,.03,21,1,0)
This is the sequence number for this report.
"^DD",101.24,101.241,.03,"DT")
3010215
"^DD",101.24,101.243,0)
COLUMN HEADERS SUB-FIELD^^.1^10
"^DD",101.24,101.243,0,"DT")
3010727
"^DD",101.24,101.243,0,"IX","B",101.243,.01)

"^DD",101.24,101.243,0,"IX","C",101.243,.03)

"^DD",101.24,101.243,0,"NM","COLUMN HEADERS")

"^DD",101.24,101.243,0,"UP")
101.24
"^DD",101.24,101.243,.01,0)
COLUMN HEADERS^MF^^0;1^K:$L(X)>60!($L(X)<1) X
"^DD",101.24,101.243,.01,1,0)
^.1
"^DD",101.24,101.243,.01,1,1,0)
101.243^B
"^DD",101.24,101.243,.01,1,1,1)
S ^ORD(101.24,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",101.24,101.243,.01,1,1,2)
K ^ORD(101.24,DA(1),3,"B",$E(X,1,30),DA)
"^DD",101.24,101.243,.01,3)
Answer must be 1-60 characters in length.
"^DD",101.24,101.243,.01,21,0)
^.001^1^1^3010709^^^^
"^DD",101.24,101.243,.01,21,1,0)
These are the column headings used on a report in ListView format.
"^DD",101.24,101.243,.01,"DT")
3010709
"^DD",101.24,101.243,.02,0)
VISIBLE^S^0:YES;1:NO;^0;2^Q
"^DD",101.24,101.243,.02,3)
Set this field to NO to hide the column.
"^DD",101.24,101.243,.02,21,0)
^^1^1^3010420^
"^DD",101.24,101.243,.02,21,1,0)
This field determines the visible property of the column.
"^DD",101.24,101.243,.02,"DT")
3010420
"^DD",101.24,101.243,.03,0)
SEQUENCE^NJ6,1^^0;3^K:+X'=X!(X>9999)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.24,101.243,.03,1,0)
^.1
"^DD",101.24,101.243,.03,1,1,0)
101.243^C
"^DD",101.24,101.243,.03,1,1,1)
S ^ORD(101.24,DA(1),3,"C",$E(X,1,30),DA)=""
"^DD",101.24,101.243,.03,1,1,2)
K ^ORD(101.24,DA(1),3,"C",$E(X,1,30),DA)
"^DD",101.24,101.243,.03,1,1,"DT")
3010321
"^DD",101.24,101.243,.03,3)
Type a Number between .1 and 9999, 1 Decimal Digit
"^DD",101.24,101.243,.03,21,0)
^^1^1^3010215^
"^DD",101.24,101.243,.03,21,1,0)
This is the sequence for the column header.
"^DD",101.24,101.243,.03,"DT")
3010321
"^DD",101.24,101.243,.04,0)
TYPE^S^0:SINGLE PIECE VALUE;1:WORD PROCESSING;^0;4^Q
"^DD",101.24,101.243,.04,3)
Enter '1' if the value of this column contains multiple lines of text.
"^DD",101.24,101.243,.04,21,0)
^^1^1^3010420^
"^DD",101.24,101.243,.04,21,1,0)
This field identifies columns that contain multiple lines of text.
"^DD",101.24,101.243,.04,"DT")
3010420
"^DD",101.24,101.243,.05,0)
INCLUDE ON DETAIL^S^0:NO;1:YES;^0;5^Q
"^DD",101.24,101.243,.05,3)
Enter YES to include this field in detailed report
"^DD",101.24,101.243,.05,21,0)
^.001^2^2^3010628^^^^
"^DD",101.24,101.243,.05,21,1,0)
This field is used to determine what data to include in the details of
"^DD",101.24,101.243,.05,21,2,0)
a report.
"^DD",101.24,101.243,.05,"DT")
3010628
"^DD",101.24,101.243,.06,0)
PRINT LENGTH^NJ2,0^^0;6^K:+X'=X!(X>20)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.243,.06,3)
Type a Number between 1 and 20, 0 Decimal Digits
"^DD",101.24,101.243,.06,21,0)
^^1^1^3010628^
"^DD",101.24,101.243,.06,21,1,0)
This is the field length used when printing this column on a report.
"^DD",101.24,101.243,.06,"DT")
3010628
"^DD",101.24,101.243,.07,0)
INCLUDE ON PRINT^S^0:NO;1:YES;^0;7^Q
"^DD",101.24,101.243,.07,21,0)
^^2^2^3010628^
"^DD",101.24,101.243,.07,21,1,0)
This field determines which columns are included when a printout is
"^DD",101.24,101.243,.07,21,2,0)
requested.
"^DD",101.24,101.243,.07,"DT")
3010628
"^DD",101.24,101.243,.08,0)
PRINT TITLE^F^^0;8^K:$L(X)>20!($L(X)<1) X
"^DD",101.24,101.243,.08,3)
Answer must be 1-20 characters in length.
"^DD",101.24,101.243,.08,21,0)
^^1^1^3010628^
"^DD",101.24,101.243,.08,21,1,0)
This field is used when printing this field in lieu of the Column Header.
"^DD",101.24,101.243,.08,"DT")
3010628
"^DD",101.24,101.243,.09,0)
DATA TYPE^S^0:FREE TEXT;1:NUMERIC;2:DATE/TIME;^0;9^Q
"^DD",101.24,101.243,.09,3)
Enter the type of data that is in this column.
"^DD",101.24,101.243,.09,21,0)
^.001^3^3^3010718^^
"^DD",101.24,101.243,.09,21,1,0)
This is the data type of the column.  It is used when sorting columns.
"^DD",101.24,101.243,.09,21,2,0)
The default data type is 0 - FREE TEXT.  If no value is entered, it is
"^DD",101.24,101.243,.09,21,3,0)
assumed to be FREE TEXT.
"^DD",101.24,101.243,.09,"DT")
3010718
"^DD",101.24,101.243,.1,0)
WIDTH^NJ4,0^^0;10^K:+X'=X!(X>4000)!(X<-2)!(X?.E1"."1N.N) X
"^DD",101.24,101.243,.1,3)
Type a Number between -2 and 4000, 0 Decimal Digits
"^DD",101.24,101.243,.1,21,0)
^^5^5^3010727^
"^DD",101.24,101.243,.1,21,1,0)
This field is for the column width.  No value needs to be entered because
"^DD",101.24,101.243,.1,21,2,0)
the value is actually obtained from a User level parameter.  The field
"^DD",101.24,101.243,.1,21,3,0)
is defined here to reserve the 10 piece of this node so that future
"^DD",101.24,101.243,.1,21,4,0)
field definitions won't break the RPC used in CPRS to get column properties
"^DD",101.24,101.243,.1,21,5,0)
where the width is stored in the 10 piece.
"^DD",101.24,101.243,.1,"DT")
3010727
"^DD",101.41,101.41,0)
FIELD^^99^31
"^DD",101.41,101.41,0,"DDA")
N
"^DD",101.41,101.41,0,"DT")
2980501
"^DD",101.41,101.41,0,"IX","AB",101.41,.01)

"^DD",101.41,101.41,0,"IX","AD",101.412,2)

"^DD",101.41,101.41,0,"IX","AM",101.41,99)

"^DD",101.41,101.41,0,"IX","AM2",101.41,2)

"^DD",101.41,101.41,0,"IX","AM51",101.41,51)

"^DD",101.41,101.41,0,"IX","AM52",101.41,52)

"^DD",101.41,101.41,0,"IX","AMM",101.412,.01)

"^DD",101.41,101.41,0,"IX","AMM2",101.412,2)

"^DD",101.41,101.41,0,"IX","AMM3",101.412,3)

"^DD",101.41,101.41,0,"IX","AMM4",101.412,4)

"^DD",101.41,101.41,0,"IX","AMM5",101.412,5)

"^DD",101.41,101.41,0,"IX","APKG",101.41,7)

"^DD",101.41,101.41,0,"IX","B",101.41,.01)

"^DD",101.41,101.41,0,"IX","C",101.41,2)

"^DD",101.41,101.41,0,"NM","ORDER DIALOG")

"^DD",101.41,101.41,0,"PT",100,2)

"^DD",101.41,101.41,0,"PT",100,7)

"^DD",101.41,101.41,0,"PT",100.045,.02)

"^DD",101.41,101.41,0,"PT",100.5,4)

"^DD",101.41,101.41,0,"PT",100.5,5)

"^DD",101.41,101.41,0,"PT",100.98,4)

"^DD",101.41,101.41,0,"PT",101.141,.03)

"^DD",101.41,101.41,0,"PT",101.412,1)

"^DD",101.41,101.41,0,"PT",101.412,2)

"^DD",101.41,101.41,0,"PT",101.415,2)

"^DD",101.41,101.41,0,"PT",101.416,.02)

"^DD",101.41,101.41,0,"PT",101.441,.01)

"^DD",101.41,101.41,0,"PT",801.41,15)

"^DD",101.41,101.41,0,"PT",801.4118,.01)

"^DD",101.41,101.41,0,"VRPK")
OR
"^DD",101.41,101.41,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",101.41,101.41,.01,1,0)
^.1
"^DD",101.41,101.41,.01,1,1,0)
101.41^B
"^DD",101.41,101.41,.01,1,1,1)
S ^ORD(101.41,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.41,.01,1,1,2)
K ^ORD(101.41,"B",$E(X,1,30),DA)
"^DD",101.41,101.41,.01,1,2,0)
101.41^AB
"^DD",101.41,101.41,.01,1,2,1)
S ^ORD(101.41,"AB",$E(X,1,63),DA)=""
"^DD",101.41,101.41,.01,1,2,2)
K ^ORD(101.41,"AB",$E(X,1,63),DA)
"^DD",101.41,101.41,.01,1,2,"%D",0)
^^1^1^2971020^
"^DD",101.41,101.41,.01,1,2,"%D",1,0)
This is a regular index on the full 63 characters of the Name field.
"^DD",101.41,101.41,.01,1,2,"DT")
2971020
"^DD",101.41,101.41,.01,3)
Answer must be 3-63 characters in length.
"^DD",101.41,101.41,.01,21,0)
^^3^3^2971219^
"^DD",101.41,101.41,.01,21,1,0)
This is the name of the dialog; entries that were converted from the
"^DD",101.41,101.41,.01,21,2,0)
Protocol file will retain the same name.  Namespacing is not required,
"^DD",101.41,101.41,.01,21,3,0)
but still encouraged.
"^DD",101.41,101.41,.01,"DT")
2971020
"^DD",101.41,101.41,2,0)
DISPLAY TEXT^FX^^0;2^K:$L(X)>80!($L(X)<3)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.41,2,1,0)
^.1
"^DD",101.41,101.41,2,1,1,0)
101.41^C
"^DD",101.41,101.41,2,1,1,1)
S ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)=""
"^DD",101.41,101.41,2,1,1,2)
K ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)
"^DD",101.41,101.41,2,1,1,"DT")
2950112
"^DD",101.41,101.41,2,1,2,0)
101.41^AM2^MUMPS
"^DD",101.41,101.41,2,1,2,1)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,2)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,2,1,2,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.41,2,1,2,"DT")
2990210
"^DD",101.41,101.41,2,3)
Answer must be 3-80 characters in length and cannot contain a semicolon (;), a comma (,), an up-arrow (^), a dash (-), or an equal sign (=). 
"^DD",101.41,101.41,2,21,0)
^.001^1^1^3010913^^^^
"^DD",101.41,101.41,2,21,1,0)
The text of this dialog's name as it appears on a menu or subheader.
"^DD",101.41,101.41,2,"DT")
3000823
"^DD",101.41,101.41,3,0)
DISABLE^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",101.41,101.41,3,3)
Enter a message here to disable this dialog, 1-40 characters in length.
"^DD",101.41,101.41,3,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,3,21,1,0)
This field disables use of this dialog when it contains text.  The text
"^DD",101.41,101.41,3,21,2,0)
should be a short message explaining why use of this dialog has been
"^DD",101.41,101.41,3,21,3,0)
disabled, as it will be displayed if this dialog is selected.
"^DD",101.41,101.41,3,"DT")
2950112
"^DD",101.41,101.41,4,0)
TYPE^RS^P:prompt;D:dialog;Q:quick order;O:order set;M:menu;A:action;H:html;^0;4^Q
"^DD",101.41,101.41,4,3)
Specify a type for this dialog.
"^DD",101.41,101.41,4,21,0)
^^5^5^2950716^^^^
"^DD",101.41,101.41,4,21,1,0)
This field defines the type of order dialog to be processed.  Control
"^DD",101.41,101.41,4,21,2,0)
will be passed to the OE/RR Dialog Processor for dialog items; menu types
"^DD",101.41,101.41,4,21,3,0)
are used for displaying and selecting dialog items.  Action types will only
"^DD",101.41,101.41,4,21,4,0)
execute the entry and exit actions, ignoring any items that may exist; these
"^DD",101.41,101.41,4,21,5,0)
dialogs should not create entries in the Orders file.
"^DD",101.41,101.41,4,"DT")
3010430
"^DD",101.41,101.41,5,0)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"^DD",101.41,101.41,5,3)
Enter the display group containing orderable items defined by this dialog.
"^DD",101.41,101.41,5,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,5,21,1,0)
This field determines what display group this dialog has been defined for.
"^DD",101.41,101.41,5,21,2,0)
It will define which orderable items are selectable with this dialog,
"^DD",101.41,101.41,5,21,3,0)
as well as what service to send the order to when it is complete.
"^DD",101.41,101.41,5,"DT")
2950112
"^DD",101.41,101.41,6,0)
SIGNATURE REQUIRED^S^0:NONE;1:ORELSE;2:ORES;^0;6^Q
"^DD",101.41,101.41,6,3)
Enter the OR key required to sign orders created by this dialog
"^DD",101.41,101.41,6,21,0)
^^6^6^2970318^^
"^DD",101.41,101.41,6,21,1,0)
This field indicates what signature will be required for orders created by
"^DD",101.41,101.41,6,21,2,0)
this dialog, to be considered complete and ready to release to the service
"^DD",101.41,101.41,6,21,3,0)
for action.  If this flag is set to NO and the dialog contains a prompt
"^DD",101.41,101.41,6,21,4,0)
for item(s) from the Orderable Item file, the order created may still
"^DD",101.41,101.41,6,21,5,0)
require a signature if any of the items ordered are individually flagged
"^DD",101.41,101.41,6,21,6,0)
as requiring a signature.
"^DD",101.41,101.41,6,"DT")
2970318
"^DD",101.41,101.41,7,0)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"^DD",101.41,101.41,7,1,0)
^.1
"^DD",101.41,101.41,7,1,1,0)
101.41^APKG
"^DD",101.41,101.41,7,1,1,1)
S ^ORD(101.41,"APKG",$E(X,1,30),DA)=""
"^DD",101.41,101.41,7,1,1,2)
K ^ORD(101.41,"APKG",$E(X,1,30),DA)
"^DD",101.41,101.41,7,1,1,"DT")
2970325
"^DD",101.41,101.41,7,3)
Enter the VISTA package that is to receive orders created by this dialog.
"^DD",101.41,101.41,7,21,0)
^^3^3^2950208^
"^DD",101.41,101.41,7,21,1,0)
This is the VISTA package that is intended to receive orders created by
"^DD",101.41,101.41,7,21,2,0)
this dialog; this is required for creating the HL7 messages to pass the
"^DD",101.41,101.41,7,21,3,0)
order.
"^DD",101.41,101.41,7,"DT")
2970325
"^DD",101.41,101.41,8,0)
VERIFY ORDER^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.41,8,3)
Enter YES to have orders created by this dialog presented to the user before saving, with the opportunity to edit.
"^DD",101.41,101.41,8,21,0)
^^3^3^2950623^
"^DD",101.41,101.41,8,21,1,0)
This field is a flag, which determines if the order created by this dialog
"^DD",101.41,101.41,8,21,2,0)
will be presented to the user for verification before saving in the Orders
"^DD",101.41,101.41,8,21,3,0)
file; for most quick orders, this flag should be set to 0 (no).
"^DD",101.41,101.41,8,"DT")
2950623
"^DD",101.41,101.41,9,0)
ASK FOR ANOTHER ORDER^S^0:NO;1:YES;2:YES-DON'T ASK;^0;9^Q
"^DD",101.41,101.41,9,3)
Enter YES to have the user asked to enter another order from this dialog before exiting.
"^DD",101.41,101.41,9,21,0)
^^6^6^2970616^^^
"^DD",101.41,101.41,9,21,1,0)
This field allows the user to add another order from this dialog, when the
"^DD",101.41,101.41,9,21,2,0)
initial order is accepted and placed; if set to YES, the user will be
"^DD",101.41,101.41,9,21,3,0)
asked "Add another <dialog display text> order?" to allow for either
"^DD",101.41,101.41,9,21,4,0)
exiting the processor or adding an additional order of the same type.
"^DD",101.41,101.41,9,21,5,0)
This field can also be set to YES-DON'T ASK to force the processor to
"^DD",101.41,101.41,9,21,6,0)
automatically drop into prompting for another order without asking first.
"^DD",101.41,101.41,9,"DT")
2970616
"^DD",101.41,101.41,10,0)
ITEMS^101.412IA^^10;0
"^DD",101.41,101.41,10,21,0)
^^5^5^2990211^^^^
"^DD",101.41,101.41,10,21,1,0)
This field contains the components for dialogs:
"^DD",101.41,101.41,10,21,2,0)
     Dialogs      -> prompts
"^DD",101.41,101.41,10,21,3,0)
     Quick orders -> prompts (completed)
"^DD",101.41,101.41,10,21,4,0)
     Order sets   -> dialogs or quick orders
"^DD",101.41,101.41,10,21,5,0)
     Menus        -> dialogs, quick orders, or order sets
"^DD",101.41,101.41,11,0)
DATA TYPE^S^D:date/time;R:free text date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;W:word processing;^1;1^Q
"^DD",101.41,101.41,11,3)
Enter the type of data to be collected at this prompt.
"^DD",101.41,101.41,11,21,0)
^^2^2^2950823^^
"^DD",101.41,101.41,11,21,1,0)
This is the type of data being prompted for; this field is used to define
"^DD",101.41,101.41,11,21,2,0)
a call to the reader (^DIR) in most cases.
"^DD",101.41,101.41,11,23,0)
^^1^1^2950823^^
"^DD",101.41,101.41,11,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,11,"DT")
2950407
"^DD",101.41,101.41,12,0)
DOMAIN^F^^1;2^K:$L(X)>235!($L(X)<1) X
"^DD",101.41,101.41,12,3)
Answer must be 1-235 characters in length.
"^DD",101.41,101.41,12,21,0)
^^3^3^2990225^^^^
"^DD",101.41,101.41,12,21,1,0)
This is a parameter that may be used to further specify the data type.
"^DD",101.41,101.41,12,21,2,0)
The string stored here should be appropriate for the second ^-piece of
"^DD",101.41,101.41,12,21,3,0)
DIR(0) when used with the data type field.
"^DD",101.41,101.41,12,23,0)
^^1^1^2990225^^^^
"^DD",101.41,101.41,12,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,12,"DT")
2990225
"^DD",101.41,101.41,13,0)
ID^F^^1;3^K:$L(X)>10!($L(X)<2) X
"^DD",101.41,101.41,13,3)
Answer must be 2-10 characters in length.
"^DD",101.41,101.41,13,21,0)
^.001^20^20^3010727^^
"^DD",101.41,101.41,13,21,1,0)
This field may contain a single word identifier which will be
"^DD",101.41,101.41,13,21,2,0)
stored with the user response in the Orders file #100, where it
"^DD",101.41,101.41,13,21,3,0)
will be indexed for quick reference to certain values in the
"^DD",101.41,101.41,13,21,4,0)
order dialog.  The following are some examples of values
"^DD",101.41,101.41,13,21,5,0)
currently in use:
"^DD",101.41,101.41,13,21,6,0)
 
"^DD",101.41,101.41,13,21,7,0)
   START      -> Start date/time
"^DD",101.41,101.41,13,21,8,0)
   STOP       -> Stop date/time
"^DD",101.41,101.41,13,21,9,0)
   SCHEDULE   -> Administration Schedule
"^DD",101.41,101.41,13,21,10,0)
   ORDERABLE  -> Orderable Item
"^DD",101.41,101.41,13,21,11,0)
   DRUG       -> Dispense Drug
"^DD",101.41,101.41,13,21,12,0)
   CANCEL     -> Cancel Future Orders flag
"^DD",101.41,101.41,13,21,13,0)
   COMMENT    -> Word processing comments
"^DD",101.41,101.41,13,21,14,0)
 
"^DD",101.41,101.41,13,21,15,0)
These values must be unique among entries within an order dialog
"^DD",101.41,101.41,13,21,16,0)
but do not need to be unique across the entire file.  Be sure to
"^DD",101.41,101.41,13,21,17,0)
check the IDs assigned to generic text entries to make sure that
"^DD",101.41,101.41,13,21,18,0)
all IDs are unique.  In order to avoid potential problems it's
"^DD",101.41,101.41,13,21,19,0)
recommended that you use unique IDs for any local entries that you
"^DD",101.41,101.41,13,21,20,0)
create.
"^DD",101.41,101.41,13,"DT")
2960215
"^DD",101.41,101.41,17,0)
VALIDATION^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,17,9)
@
"^DD",101.41,101.41,17,21,0)
^^3^3^2960912^
"^DD",101.41,101.41,17,21,1,0)
This is MUMPS code that will be executed at the time of releasing an
"^DD",101.41,101.41,17,21,2,0)
order created with this dialog; dialog responses may be checked again
"^DD",101.41,101.41,17,21,3,0)
here before releasing the order to the service.
"^DD",101.41,101.41,17,"DT")
2960912
"^DD",101.41,101.41,19,0)
ADDITIONAL TEXT^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,19,9)
@
"^DD",101.41,101.41,19,21,0)
^^3^3^2960405^^
"^DD",101.41,101.41,19,21,1,0)
This is MUMPS code that will be executed when order ORIFN created by this
"^DD",101.41,101.41,19,21,2,0)
dialog is about to be displayed; any string that should be appended to the
"^DD",101.41,101.41,19,21,3,0)
order text should be returned in Y.
"^DD",101.41,101.41,19,"DT")
2960405
"^DD",101.41,101.41,20,0)
DESCRIPTION^101.411^^2;0
"^DD",101.41,101.41,20,21,0)
^^1^1^2971219^
"^DD",101.41,101.41,20,21,1,0)
This is a description of the dialog and its uses.
"^DD",101.41,101.41,21,0)
RESPONSES^101.416^^6;0
"^DD",101.41,101.41,21,21,0)
^^2^2^2971219^
"^DD",101.41,101.41,21,21,1,0)
This multiple contains any responses to prompts that have been pre-answered
"^DD",101.41,101.41,21,21,2,0)
to create a quick order.
"^DD",101.41,101.41,30,0)
ENTRY ACTION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,30,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,30,9)
@
"^DD",101.41,101.41,30,21,0)
^^4^4^2950425^
"^DD",101.41,101.41,30,21,1,0)
This is MUMPS code that will be executed at the top of a dialog, prior to
"^DD",101.41,101.41,30,21,2,0)
the execution of any prompts; it may perform functions such as listing
"^DD",101.41,101.41,30,21,3,0)
the recent Radiology exams before ordering a new one, or alerting the
"^DD",101.41,101.41,30,21,4,0)
user to an existing diet order before making a change.
"^DD",101.41,101.41,30,"DT")
2950425
"^DD",101.41,101.41,31,0)
QUICK SETUP^K^^3.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,31,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,31,9)
@
"^DD",101.41,101.41,31,21,0)
^^3^3^2970113^
"^DD",101.41,101.41,31,21,1,0)
This is MUMPS code that will be executed in the place of the Entry Action
"^DD",101.41,101.41,31,21,2,0)
when creating quick orders for this dialog; variables may be set here
"^DD",101.41,101.41,31,21,3,0)
instead to bypass the usual dependence on specific patient values.
"^DD",101.41,101.41,31,"DT")
2970113
"^DD",101.41,101.41,40,0)
EXIT ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,40,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,40,9)
@
"^DD",101.41,101.41,40,21,0)
^^2^2^2950622^
"^DD",101.41,101.41,40,21,1,0)
This is MUMPS code that will be executed upon completion of processing the
"^DD",101.41,101.41,40,21,2,0)
dialog; it is currently used only with dialog-type entries.
"^DD",101.41,101.41,40,"DT")
2950622
"^DD",101.41,101.41,50,0)
CONTROLS^101.415A^^50;0
"^DD",101.41,101.41,51,0)
COLUMN WIDTH^NJ3,0^^5;1^K:+X'=X!(X>240)!(X<20)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,51,1,0)
^.1
"^DD",101.41,101.41,51,1,1,0)
101.41^AM51^MUMPS
"^DD",101.41,101.41,51,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,51,1,1,"%D",1,0)
Update TIMESTAMP whenever COLUMN WIDTH is changed.
"^DD",101.41,101.41,51,1,1,"DT")
2990210
"^DD",101.41,101.41,51,3)
Type a Number between 20 and 240, 0 Decimal Digits
"^DD",101.41,101.41,51,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,51,21,1,0)
This is the width, in characters, for each column in a menu.  For example,
"^DD",101.41,101.41,51,21,2,0)
to have 3 columns on an 80 character device, enter a width of 26.
"^DD",101.41,101.41,51,"DT")
2990210
"^DD",101.41,101.41,52,0)
MNEMONIC WIDTH^NJ1,0^^5;2^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,52,1,0)
^.1
"^DD",101.41,101.41,52,1,1,0)
101.41^AM52^MUMPS
"^DD",101.41,101.41,52,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,52,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC WIDTH is changed.
"^DD",101.41,101.41,52,1,1,"DT")
2990210
"^DD",101.41,101.41,52,3)
Type a Number between 1 and 9, 0 Decimal Digits
"^DD",101.41,101.41,52,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,52,21,1,0)
This field allows the width of item mnemonics to be varied; the default
"^DD",101.41,101.41,52,21,2,0)
value is 5.
"^DD",101.41,101.41,52,"DT")
2990210
"^DD",101.41,101.41,53,0)
PATH SWITCH^S^1:YES;0:NO;^5;3^Q
"^DD",101.41,101.41,53,3)
Enter YES if this menu should be redisplayed when traversing back up the menu tree.
"^DD",101.41,101.41,53,21,0)
^^5^5^2950623^
"^DD",101.41,101.41,53,21,1,0)
This switch allows the user, when traversing back UP the tree of menus and
"^DD",101.41,101.41,53,21,2,0)
items, to select a new path back down the tree.  In other words, the menu
"^DD",101.41,101.41,53,21,3,0)
is redisplayed when returning to that menu's level in the tree and
"^DD",101.41,101.41,53,21,4,0)
processing back down the tree is possible from that point.  If nothing is
"^DD",101.41,101.41,53,21,5,0)
selected from the menu, the path continues back up the tree.
"^DD",101.41,101.41,53,"DT")
2950623
"^DD",101.41,101.41,54,0)
LISTBOX TEXT^F^^5;4^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.41,54,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.41,54,"DT")
2960524
"^DD",101.41,101.41,55,0)
WINDOW FORM ID^NJ4,0^^5;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,55,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",101.41,101.41,55,21,0)
^.001^23^23^3010727^^
"^DD",101.41,101.41,55,21,1,0)
This field tells the GUI DELPHI code which form to use to process the
"^DD",101.41,101.41,55,21,2,0)
order dialog.  Each number represents a unique form.  Following are some
"^DD",101.41,101.41,55,21,3,0)
of the more common codes and their corresponding form in DELPHI.
"^DD",101.41,101.41,55,21,4,0)
 
"^DD",101.41,101.41,55,21,5,0)
    Form Name     Windows Form ID
"^DD",101.41,101.41,55,21,6,0)
    ---------     ---------------
"^DD",101.41,101.41,55,21,7,0)
  OD_ACTIVITY           100
"^DD",101.41,101.41,55,21,8,0)
  OD_ALLERGY            105
"^DD",101.41,101.41,55,21,9,0)
  OD_CONSULT            110
"^DD",101.41,101.41,55,21,10,0)
  OD_PROCEDURE          112
"^DD",101.41,101.41,55,21,11,0)
  OD_DIET_TXT           115
"^DD",101.41,101.41,55,21,12,0)
  OD_DIET               117
"^DD",101.41,101.41,55,21,13,0)
  OD_LAB                120
"^DD",101.41,101.41,55,21,14,0)
  OD_MEDINPT            130
"^DD",101.41,101.41,55,21,15,0)
  OD_MEDS               135
"^DD",101.41,101.41,55,21,16,0)
  OD_MEDOUTPT           140
"^DD",101.41,101.41,55,21,17,0)
  OD_NURSING            150
"^DD",101.41,101.41,55,21,18,0)
  OD_MISC               151
"^DD",101.41,101.41,55,21,19,0)
  OD_GENERIC            152
"^DD",101.41,101.41,55,21,20,0)
  OD_IMAGING            160
"^DD",101.41,101.41,55,21,21,0)
  OD_VITALS             171 
"^DD",101.41,101.41,55,21,22,0)
  OD_MEDIV              180
"^DD",101.41,101.41,55,21,23,0)
  OD_TEXTONLY           999
"^DD",101.41,101.41,55,"DT")
2960804
"^DD",101.41,101.41,56,0)
CREATE PARENT ORDER^S^1:YES;0:NO;^5;6^Q
"^DD",101.41,101.41,56,3)
Enter YES if a parent order should be created for this order set
"^DD",101.41,101.41,56,21,0)
^^6^6^2970227^
"^DD",101.41,101.41,56,21,1,0)
This flag indicates whether a parent order should be created to group
"^DD",101.41,101.41,56,21,2,0)
together all the orders created by this order set; this flag is only
"^DD",101.41,101.41,56,21,3,0)
valid with SET type order dialogs.  If this value is YES, a parent
"^DD",101.41,101.41,56,21,4,0)
order will be created, and only the parent will be presented on the
"^DD",101.41,101.41,56,21,5,0)
orders list for display and action; NO will prevent a parent from being
"^DD",101.41,101.41,56,21,6,0)
created and all orders will be created and displayed independently.
"^DD",101.41,101.41,56,"DT")
2970227
"^DD",101.41,101.41,57,0)
DISPLAY SUBHEADER^S^1:YES;0:NO;^5;7^Q
"^DD",101.41,101.41,57,3)
Enter YES if a subheader should be displayed as each order in this set is processed
"^DD",101.41,101.41,57,21,0)
^^3^3^2970227^
"^DD",101.41,101.41,57,21,1,0)
This flag indicates whether a subheader is to be displayed for each order
"^DD",101.41,101.41,57,21,2,0)
in this set as it is processed and placed; this flag is only valid with
"^DD",101.41,101.41,57,21,3,0)
SET type order dialogs.
"^DD",101.41,101.41,57,"DT")
2970227
"^DD",101.41,101.41,58,0)
AUTO-ACCEPT QUICK ORDER^S^1:YES;^5;8^Q
"^DD",101.41,101.41,58,3)
Enter 'Yes' if the order should be placed without displaying the dialog window.
"^DD",101.41,101.41,58,21,0)
^^2^2^2980902^
"^DD",101.41,101.41,58,21,1,0)
This can be set to yes for a quick order so that it can be placed simply
"^DD",101.41,101.41,58,21,2,0)
by clicking on it in the GUI (no ordering dialog is displayed).
"^DD",101.41,101.41,58,"DT")
2980902
"^DD",101.41,101.41,59,0)
URL^P101.14^ORD(101.14,^5;9^Q
"^DD",101.41,101.41,59,3)
Enter the URL that should be associated with this dialog.
"^DD",101.41,101.41,59,21,0)
^^3^3^3010724^
"^DD",101.41,101.41,59,21,1,0)
This points an entry in the ORDER HTML FORM file.  The URL is used to
"^DD",101.41,101.41,59,21,2,0)
tpresent the user with an HTML form that can be used to select quick
"^DD",101.41,101.41,59,21,3,0)
orders.
"^DD",101.41,101.41,59,"DT")
3010724
"^DD",101.41,101.41,99,0)
TIMESTAMP^F^^99;1^K:$L(X)>15!($L(X)<1) X
"^DD",101.41,101.41,99,1,0)
^.1
"^DD",101.41,101.41,99,1,1,0)
101.41^AM^MUMPS
"^DD",101.41,101.41,99,1,1,1)
D SET^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,2)
D KILL^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,"%D",0)
^^2^2^2990210^
"^DD",101.41,101.41,99,1,1,"%D",1,0)
Recompiles order dialog menus in ^XUTL("XQORM",<dialog#>_";ORD(101.41,")
"^DD",101.41,101.41,99,1,1,"%D",2,0)
whenever fields necessary to displaying the menu are changed.
"^DD",101.41,101.41,99,1,1,"DT")
2990210
"^DD",101.41,101.41,99,3)
Answer must be 1-15 characters in length.
"^DD",101.41,101.41,99,21,0)
^^2^2^2980501^
"^DD",101.41,101.41,99,21,1,0)
For menus, this contains the $H time the menu was last compiled for use
"^DD",101.41,101.41,99,21,2,0)
with the Unwinder utility (^XQOR).
"^DD",101.41,101.41,99,"DT")
2990210
"^DD",101.41,101.411,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",101.41,101.411,0,"DT")
2950407
"^DD",101.41,101.411,0,"NM","DESCRIPTION")

"^DD",101.41,101.411,0,"UP")
101.41
"^DD",101.41,101.411,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",101.41,101.411,.01,3)
Enter a description of this dialog.
"^DD",101.41,101.411,.01,21,0)
^^1^1^2950425^^
"^DD",101.41,101.411,.01,21,1,0)
This field contains a description of the content and use of this dialog.
"^DD",101.41,101.411,.01,"DT")
2950407
"^DD",101.41,101.412,0)
ITEMS SUB-FIELD^^117^37
"^DD",101.41,101.412,0,"DT")
2971117
"^DD",101.41,101.412,0,"ID","WRITE")
N OR0,ORNM S OR0=^(0) I $P(OR0,U,2) S ORNM=$P($G(^ORD(101.41,+$P(OR0,U,2),0)),U) D:$L(ORNM) EN^DDIOL(ORNM,,"?10")
"^DD",101.41,101.412,0,"IX","ATXT",101.412,21)

"^DD",101.41,101.412,0,"IX","B",101.412,.01)

"^DD",101.41,101.412,0,"IX","D",101.412,2)

"^DD",101.41,101.412,0,"IX","DAD",101.412,1)

"^DD",101.41,101.412,0,"IX","DAD1",101.412,.01)

"^DD",101.41,101.412,0,"NM","ITEMS")

"^DD",101.41,101.412,0,"UP")
101.41
"^DD",101.41,101.412,.01,0)
SEQUENCE^MNJ5,1^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.41,101.412,.01,1,0)
^.1
"^DD",101.41,101.412,.01,1,1,0)
101.412^B
"^DD",101.41,101.412,.01,1,1,1)
S ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.412,.01,1,1,2)
K ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)
"^DD",101.41,101.412,.01,1,2,0)
101.412^DAD1^MUMPS
"^DD",101.41,101.412,.01,1,2,1)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) S:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)=""
"^DD",101.41,101.412,.01,1,2,2)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) K:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)
"^DD",101.41,101.412,.01,1,2,"%D",0)
^^1^1^2950511^
"^DD",101.41,101.412,.01,1,2,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,.01,1,2,"DT")
2950511
"^DD",101.41,101.412,.01,1,3,0)
101.41^AMM^MUMPS
"^DD",101.41,101.412,.01,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,.01,1,3,"%D",1,0)
Update TIMESTAMP whenever SEQUENCE is changed.
"^DD",101.41,101.412,.01,1,3,"DT")
2990210
"^DD",101.41,101.412,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",101.41,101.412,.01,21,0)
^^2^2^2971117^^^^
"^DD",101.41,101.412,.01,21,1,0)
This field specifies the order in which this item will be displayed or
"^DD",101.41,101.412,.01,21,2,0)
processed.
"^DD",101.41,101.412,.01,"DT")
2990210
"^DD",101.41,101.412,.1,0)
INPUT TRANSFORM^K^^.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,.1,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,.1,9)
@
"^DD",101.41,101.412,.1,21,0)
^^2^2^2950816^
"^DD",101.41,101.412,.1,21,1,0)
This is code that will be used as the third piece of DIR(0) when asking
"^DD",101.41,101.412,.1,21,2,0)
this prompt.
"^DD",101.41,101.412,.1,"DT")
2950816
"^DD",101.41,101.412,1,0)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"^DD",101.41,101.412,1,1,0)
^.1
"^DD",101.41,101.412,1,1,1,0)
101.412^DAD^MUMPS
"^DD",101.41,101.412,1,1,1,1)
S ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)=""
"^DD",101.41,101.412,1,1,1,2)
K ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)
"^DD",101.41,101.412,1,1,1,"%D",0)
^^1^1^2950511^^
"^DD",101.41,101.412,1,1,1,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,1,1,1,"DT")
2950511
"^DD",101.41,101.412,1,3)
If this prompt is subordinate to another in this dialog, enter the parent prompt here
"^DD",101.41,101.412,1,21,0)
^^4^4^2950511^
"^DD",101.41,101.412,1,21,1,0)
This field controls the behavior of this prompt.  If a parent is defined
"^DD",101.41,101.412,1,21,2,0)
here, this prompt will be asked from within the parent's dialog; when it
"^DD",101.41,101.412,1,21,3,0)
is invoked independently based on its position sequence number, the child
"^DD",101.41,101.412,1,21,4,0)
prompt will be ignored.
"^DD",101.41,101.412,1,"DT")
2950511
"^DD",101.41,101.412,2,0)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"^DD",101.41,101.412,2,1,0)
^.1
"^DD",101.41,101.412,2,1,1,0)
101.41^AD
"^DD",101.41,101.412,2,1,1,1)
S ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",101.41,101.412,2,1,1,2)
K ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)
"^DD",101.41,101.412,2,1,1,"DT")
2950123
"^DD",101.41,101.412,2,1,2,0)
101.412^D
"^DD",101.41,101.412,2,1,2,1)
S ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.412,2,1,2,2)
K ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)
"^DD",101.41,101.412,2,1,2,"DT")
2950411
"^DD",101.41,101.412,2,1,3,0)
101.41^AMM2^MUMPS
"^DD",101.41,101.412,2,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,2,1,3,"%D",1,0)
Update TIMESTAMP whenever ITEM is changed.
"^DD",101.41,101.412,2,1,3,"DT")
2990210
"^DD",101.41,101.412,2,3)
Enter an order dialog; a dialog that is an ancestor may not also be a sub-item.
"^DD",101.41,101.412,2,21,0)
^^3^3^2950123^
"^DD",101.41,101.412,2,21,1,0)
This field points to an order dialog which is subordinate to this dialog.
"^DD",101.41,101.412,2,21,2,0)
NOTE:  The parent dialog menu or one of its ancestors may not be entered
"^DD",101.41,101.412,2,21,3,0)
as an item.
"^DD",101.41,101.412,2,"DT")
2990217
"^DD",101.41,101.412,3,0)
MNEMONIC^FX^^0;3^K:$L(X)>4!($L(X)<1)!(+X=X&($L(X,".")>1))!($$CHKMNE^ORUTL(X)) X
"^DD",101.41,101.412,3,1,0)
^.1
"^DD",101.41,101.412,3,1,1,0)
101.41^AMM3^MUMPS
"^DD",101.41,101.412,3,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,3,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC is changed.
"^DD",101.41,101.412,3,1,1,"DT")
2990210
"^DD",101.41,101.412,3,3)
Enter a mnemonic to be used when this dialog is displayed for selection, 1-4 characters in length with no decimal places if numeric. Standard list manager mnemonics may not be used.
"^DD",101.41,101.412,3,21,0)
^.001^2^2^3010727^^^^
"^DD",101.41,101.412,3,21,1,0)
This is a short abbreviation for this item dialog to be used when this
"^DD",101.41,101.412,3,21,2,0)
dialog is displayed for selection.
"^DD",101.41,101.412,3,"DT")
3000822
"^DD",101.41,101.412,4,0)
DISPLAY TEXT^FX^^0;4^K:$L(X)>80!($L(X)<1)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.412,4,1,0)
^.1
"^DD",101.41,101.412,4,1,1,0)
101.41^AMM4^MUMPS
"^DD",101.41,101.412,4,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,4,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.412,4,1,1,"DT")
2990210
"^DD",101.41,101.412,4,3)
Answer must be 1-80 characters in length and cannot contain a semicolon (;), a comma (,), an up-arrow (^), a dash (-), or an equal sign (=).
"^DD",101.41,101.412,4,21,0)
^.001^2^2^3010419^^^^
"^DD",101.41,101.412,4,21,1,0)
This field allows the text that normally appears for this item to be
"^DD",101.41,101.412,4,21,2,0)
replaced with alternate text for use in this dialog or menu.
"^DD",101.41,101.412,4,"DT")
3000823
"^DD",101.41,101.412,5,0)
DISPLAY ONLY?^S^0:NO;1:YES;2:YES-HEADER;^0;5^Q
"^DD",101.41,101.412,5,1,0)
^.1
"^DD",101.41,101.412,5,1,1,0)
101.41^AMM5^MUMPS
"^DD",101.41,101.412,5,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,5,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY ONLY? is changed.
"^DD",101.41,101.412,5,1,1,"DT")
2990210
"^DD",101.41,101.412,5,3)
Enter YES if this item is text for display only and not a selectable item.
"^DD",101.41,101.412,5,21,0)
^^3^3^2970409^^^^
"^DD",101.41,101.412,5,21,1,0)
This field identifies an item as being free text for display purposes
"^DD",101.41,101.412,5,21,2,0)
only.  The text in the Display Text field will be displayed, but it
"^DD",101.41,101.412,5,21,3,0)
is not selectable; if designated as a header, the text will be underlined.
"^DD",101.41,101.412,5,"DT")
2990210
"^DD",101.41,101.412,6,0)
REQUIRED^S^1:YES;0:NO;^0;6^Q
"^DD",101.41,101.412,6,3)
Enter YES if a response to this prompt is mandatory.
"^DD",101.41,101.412,6,21,0)
^^1^1^2950407^
"^DD",101.41,101.412,6,21,1,0)
This field indicates that the user must enter a response to this prompt.
"^DD",101.41,101.412,6,"DT")
2950407
"^DD",101.41,101.412,7,0)
MULTIPLE VALUED^S^1:YES;0:NO;^0;7^Q
"^DD",101.41,101.412,7,3)
Enter YES if this prompt is to be asked multiple times.
"^DD",101.41,101.412,7,21,0)
^^3^3^2950407^
"^DD",101.41,101.412,7,21,1,0)
This field determines if this prompt will be allowed to have multiple
"^DD",101.41,101.412,7,21,2,0)
values, or be prompted for only once; if this prompt is a sub-dialog,
"^DD",101.41,101.412,7,21,3,0)
the entire dialog will be asked once or many times, as a group.
"^DD",101.41,101.412,7,"DT")
2950407
"^DD",101.41,101.412,7.1,0)
MAX NUMBER OF MULTIPLES^NJ2,0^^0;12^K:+X'=X!(X>99)!(X<2)!(X?.E1"."1N.N) X
"^DD",101.41,101.412,7.1,3)
Type a Number between 2 and 99, 0 Decimal Digits
"^DD",101.41,101.412,7.1,21,0)
^^4^4^2950815^
"^DD",101.41,101.412,7.1,21,1,0)
This is the maximum number of values that may be entered for this prompt,
"^DD",101.41,101.412,7.1,21,2,0)
if it is flagged as being multiple-valued.  For example, a diet order may
"^DD",101.41,101.412,7.1,21,3,0)
have up to 5 diet modifications entered, where 5 is the maximum allowed
"^DD",101.41,101.412,7.1,21,4,0)
that would be entered here.
"^DD",101.41,101.412,7.1,"DT")
2950815
"^DD",101.41,101.412,7.2,0)
TITLE^F^^0;13^K:$L(X)>30!($L(X)<3) X
"^DD",101.41,101.412,7.2,3)
Answer must be 3-30 characters in length.
"^DD",101.41,101.412,7.2,21,0)
^^8^8^2970430^^
"^DD",101.41,101.412,7.2,21,1,0)
This is text that will be used in place of the prompt when the order is
"^DD",101.41,101.412,7.2,21,2,0)
displayed for place, edit, or cancel, or at the top of a multiple-valued
"^DD",101.41,101.412,7.2,21,3,0)
prompt.  The Display Text for the prompt will be used together with the
"^DD",101.41,101.412,7.2,21,4,0)
instance number to prompt for user input; for example if Title="Lab Tests:"
"^DD",101.41,101.412,7.2,21,5,0)
and Display Text="Test:" the user would see
"^DD",101.41,101.412,7.2,21,6,0)
  Lab Tests:
"^DD",101.41,101.412,7.2,21,7,0)
  1. Test:
"^DD",101.41,101.412,7.2,21,8,0)
  2. Test:
"^DD",101.41,101.412,7.2,"DT")
2950815
"^DD",101.41,101.412,7.3,0)
PROMPT^F^^0;14^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,7.3,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,7.3,21,0)
^^3^3^2970618^
"^DD",101.41,101.412,7.3,21,1,0)
This field contains text that will be appended to the beginning of the
"^DD",101.41,101.412,7.3,21,2,0)
display text when prompting for additional values; if this field is
"^DD",101.41,101.412,7.3,21,3,0)
empty, then "Another " will be used.
"^DD",101.41,101.412,7.3,"DT")
2970618
"^DD",101.41,101.412,8,0)
ASK ON EDIT ONLY^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.412,8,3)
Enter YES if this prompt should not be asked initially when creating this order, only if the user chooses to edit the order.
"^DD",101.41,101.412,8,21,0)
^^4^4^2960112^^^
"^DD",101.41,101.412,8,21,1,0)
This field determines the behaviour of the dialog driver for this prompt;
"^DD",101.41,101.412,8,21,2,0)
if no value or the defined default is usually correct for this prompt,
"^DD",101.41,101.412,8,21,3,0)
enter YES here to have this prompt skipped on the first pass through this
"^DD",101.41,101.412,8,21,4,0)
dialog when creating an order.
"^DD",101.41,101.412,8,"DT")
2950407
"^DD",101.41,101.412,9,0)
ASK ON ACTION^F^^0;9^K:$L(X)>3!($L(X)<1) X
"^DD",101.41,101.412,9,3)
Answer must be 1-3 characters in length.
"^DD",101.41,101.412,9,21,0)
^^6^6^2970708^^^
"^DD",101.41,101.412,9,21,1,0)
This field determines the behaviour of the dialog driver for this prompt
"^DD",101.41,101.412,9,21,2,0)
when taking a particular action on an order created by this dialog.  If
"^DD",101.41,101.412,9,21,3,0)
this string contains "R", this prompt will be asked when renewing an order;
"^DD",101.41,101.412,9,21,4,0)
if this string contains "C", this prompt will be asked when changing an
"^DD",101.41,101.412,9,21,5,0)
order; if this string contains "W", this prompt will be asked when
"^DD",101.41,101.412,9,21,6,0)
rewriting an order.
"^DD",101.41,101.412,9,"DT")
2970708
"^DD",101.41,101.412,10,0)
INDEX^F^^0;10^K:$L(X)>25!($L(X)<1) X
"^DD",101.41,101.412,10,3)
Answer must be 1-25 characters in length.
"^DD",101.41,101.412,10,21,0)
^^3^3^2950713^^^
"^DD",101.41,101.412,10,21,1,0)
For pointer-type prompts, this is the index to use when searching the file;
"^DD",101.41,101.412,10,21,2,0)
it must be in the form of a regular cross-reference.  To search on multiple
"^DD",101.41,101.412,10,21,3,0)
indices, enter a string of index names separated by semi-colons, i.e. "B;C".
"^DD",101.41,101.412,10,"DT")
2950713
"^DD",101.41,101.412,11,0)
HELP MESSAGE^F^^1;1^K:$L(X)>160!($L(X)<1) X
"^DD",101.41,101.412,11,3)
Answer must be 1-160 characters in length.
"^DD",101.41,101.412,11,21,0)
^^2^2^2970609^^
"^DD",101.41,101.412,11,21,1,0)
This field contains the help message to be presented when the user enters
"^DD",101.41,101.412,11,21,2,0)
a question mark at this prompt.
"^DD",101.41,101.412,11,"DT")
2970609
"^DD",101.41,101.412,12,0)
SPECIAL LOOKUP ROUTINE^F^^1;2^K:$L(X)>20!($L(X)<3) X
"^DD",101.41,101.412,12,3)
Enter the routine to use instead of DIC to do this lookup, as [TAG;]ROUTINE
"^DD",101.41,101.412,12,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,12,21,1,0)
This field contains a routine to execute that will replace the standard
"^DD",101.41,101.412,12,21,2,0)
DIC lookup for this prompt; it must be entered here as LINETAG;ROUTINE
"^DD",101.41,101.412,12,21,3,0)
using a ; instead of ^ and where LINETAG is optional.
"^DD",101.41,101.412,12,"DT")
2970609
"^DD",101.41,101.412,13,0)
ASK ON CONDITION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,13,3)
This is MUMPS code that sets $T to determine if this prompt should be asked, or given a default value and bypassed.
"^DD",101.41,101.412,13,9)
@
"^DD",101.41,101.412,13,21,0)
^^5^5^2950407^
"^DD",101.41,101.412,13,21,1,0)
This is MUMPS code that sets $T to determine if this prompt should be asked
"^DD",101.41,101.412,13,21,2,0)
or simply given a default value and presented to the user for acceptance
"^DD",101.41,101.412,13,21,3,0)
or editing.  For example, the prompt "Pregnant: " may have code here to
"^DD",101.41,101.412,13,21,4,0)
check the sex of the current patient, i.e. I ORSEX="F" will allow it to be
"^DD",101.41,101.412,13,21,5,0)
asked only for female patients.
"^DD",101.41,101.412,13,"DT")
2950407
"^DD",101.41,101.412,14,0)
SCREEN^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,14,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,14,9)
@
"^DD",101.41,101.412,14,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,14,21,1,0)
For pointer-type prompts, this field may contain MUMPS code that will be
"^DD",101.41,101.412,14,21,2,0)
set into DIC("S") to screen the possible choices in the pointed-to file.
"^DD",101.41,101.412,14,"DT")
2950407
"^DD",101.41,101.412,15,0)
POST-SELECTION ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,15,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,15,9)
@
"^DD",101.41,101.412,15,21,0)
^^3^3^2970923^^^^
"^DD",101.41,101.412,15,21,1,0)
This is code that will be executed after a response is entered to this
"^DD",101.41,101.412,15,21,2,0)
prompt; if this prompt should be re-asked, kill the variable DONE.
"^DD",101.41,101.412,15,21,3,0)
If execution of the ordering dialog should be stopped, set ORQUIT=1.
"^DD",101.41,101.412,15,"DT")
2970923
"^DD",101.41,101.412,16,0)
XECUTABLE HELP^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,16,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,16,9)
@
"^DD",101.41,101.412,16,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,16,21,1,0)
This is code that is to be executed when the user enters two or more
"^DD",101.41,101.412,16,21,2,0)
question marks at this prompt.
"^DD",101.41,101.412,16,"DT")
2950407
"^DD",101.41,101.412,17,0)
DEFAULT^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,17,9)
@
"^DD",101.41,101.412,17,21,0)
^^2^2^2971219^^^^
"^DD",101.41,101.412,17,21,1,0)
This is code that is to be executed to determine the appropriate default
"^DD",101.41,101.412,17,21,2,0)
value for this prompt, setting Y=internal form of this value.
"^DD",101.41,101.412,17,"DT")
2950519
"^DD",101.41,101.412,18,0)
DEFAULT WORD-PROCESSING TEXT^101.41218^^8;0
"^DD",101.41,101.412,18,21,0)
^^1^1^2971219^
"^DD",101.41,101.412,18,21,1,0)
This is default text to be stuffed into this word-processing prompt.
"^DD",101.41,101.412,19,0)
ENTRY ACTION^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,19,9)
@
"^DD",101.41,101.412,19,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,19,21,1,0)
This is code that will be executed at the beginning of the processing of
"^DD",101.41,101.412,19,21,2,0)
this prompt, before the Default and Ask on Condition fields are executed;
"^DD",101.41,101.412,19,21,3,0)
any special setup required for this field should be done here.
"^DD",101.41,101.412,19,"DT")
2970609
"^DD",101.41,101.412,20,0)
EXIT ACTION^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,20,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,20,9)
@
"^DD",101.41,101.412,20,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,20,21,1,0)
This is code that will be executed at the very end of the processing of
"^DD",101.41,101.412,20,21,2,0)
this prompt, after prompting and the Validation field is executed;
"^DD",101.41,101.412,20,21,3,0)
any special cleanup should be done here.
"^DD",101.41,101.412,20,"DT")
2970609
"^DD",101.41,101.412,21,0)
ORDER TEXT SEQUENCE^NJ5,2^^2;1^K:+X'=X!(X>99.99)!(X<1)!(X?.E1"."3N.N) X
"^DD",101.41,101.412,21,1,0)
^.1
"^DD",101.41,101.412,21,1,1,0)
101.412^ATXT
"^DD",101.41,101.412,21,1,1,1)
S ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)=""
"^DD",101.41,101.412,21,1,1,2)
K ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)
"^DD",101.41,101.412,21,1,1,"%D",0)
^^1^1^2960226^
"^DD",101.41,101.412,21,1,1,"%D",1,0)
Used to build order text.
"^DD",101.41,101.412,21,1,1,"DT")
2960226
"^DD",101.41,101.412,21,3)
Enter the order in which this value should be added to the order text, as a number between 1 and 99.99; leave this field blank to prevent this value from being included
"^DD",101.41,101.412,21,21,0)
^^3^3^2970607^^^
"^DD",101.41,101.412,21,21,1,0)
This field indicates the order in which values will be concatenated
"^DD",101.41,101.412,21,21,2,0)
together to build the order text; this may differ from the prompting
"^DD",101.41,101.412,21,21,3,0)
order defined in the .01 Sequence field.
"^DD",101.41,101.412,21,"DT")
2960226
"^DD",101.41,101.412,22,0)
FORMAT^F^^2;2^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,22,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,22,21,0)
^^15^15^2971207^^^^
"^DD",101.41,101.412,22,21,1,0)
This is a string of characters that will define any exceptions to how
"^DD",101.41,101.412,22,21,2,0)
the external form of this value is generated.  Possible values include:
"^DD",101.41,101.412,22,21,3,0)
  Pointer         -> <field #>~<piece in RPC list of field #>, default =.01
"^DD",101.41,101.412,22,21,4,0)
  Set of Codes    -> 1~<piece in RPC list of code> to use code for name
"^DD",101.41,101.412,22,21,5,0)
  Date/Time       -> Format string to pass $$FMTE^XLFDT (default = 2)
"^DD",101.41,101.412,22,21,6,0)
  
"^DD",101.41,101.412,22,21,7,0)
  Suppress value  -> @
"^DD",101.41,101.412,22,21,8,0)
  Replace value   -> @<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,9,0)
                      whose value, when present, supersedes this value
"^DD",101.41,101.412,22,21,10,0)
  Required value  -> *<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,11,0)
                      whose value is required to be present to include
"^DD",101.41,101.412,22,21,12,0)
                      this value
"^DD",101.41,101.412,22,21,13,0)
  Ignore if same  -> =<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,14,0)
                      whose value, if the external form is the same,
"^DD",101.41,101.412,22,21,15,0)
                      supersedes this value
"^DD",101.41,101.412,22,"DT")
2960226
"^DD",101.41,101.412,23,0)
OMIT TEXT^F^^2;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,23,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,23,21,0)
^^3^3^2970829^^^^
"^DD",101.41,101.412,23,21,1,0)
This is the external form of a value that is not to be included when building
"^DD",101.41,101.412,23,21,2,0)
the order text.  E.g. to include the urgency in the order text unless it
"^DD",101.41,101.412,23,21,3,0)
is routine, enter "ROUTINE" here.
"^DD",101.41,101.412,23,"DT")
2970829
"^DD",101.41,101.412,24,0)
LEADING TEXT^F^^2;4^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,24,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,24,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,24,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,24,21,2,0)
immediately in front of this value, e.g. "Instructions:".  If this text
"^DD",101.41,101.412,24,21,3,0)
is contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,24,"DT")
2970724
"^DD",101.41,101.412,25,0)
TRAILING TEXT^F^^2;5^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,25,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,25,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,25,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,25,21,2,0)
immediately following this value, e.g. "refills".  If this text is
"^DD",101.41,101.412,25,21,3,0)
contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,25,"DT")
2970724
"^DD",101.41,101.412,26,0)
START NEW LINE^S^1:YES;0:NO;^2;6^Q
"^DD",101.41,101.412,26,3)
Enter YES if this value should begin on a new line in the order text.
"^DD",101.41,101.412,26,21,0)
0^^2^2^2970911^
"^DD",101.41,101.412,26,21,1,0)
This field determines if this value is concatenated onto the current line
"^DD",101.41,101.412,26,21,2,0)
when building the order text, or if a new line is started with this value.
"^DD",101.41,101.412,26,"DT")
2970911
"^DD",101.41,101.412,27,0)
WORD-WRAP^S^1:DON'T WRAP;0:WRAP;^2;7^Q
"^DD",101.41,101.412,27,3)
Enter 'Don't Wrap' to have the text be added line-by-line as it is stored; the default formatting is 'Wrap'.
"^DD",101.41,101.412,27,21,0)
^^3^3^2970926^^^
"^DD",101.41,101.412,27,21,1,0)
This field determines if this text should be wrapped when added to the
"^DD",101.41,101.412,27,21,2,0)
order text, or appended line by line as stored in the file; this is only
"^DD",101.41,101.412,27,21,3,0)
used for word-processing type prompts.
"^DD",101.41,101.412,27,"DT")
2970926
"^DD",101.41,101.412,101,0)
WINDOWS CONTROL^F^^W;1^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,101,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,101,21,0)
^^2^2^2950715^
"^DD",101.41,101.412,101,21,1,0)
Stores the type of Windows control necessary to get the data for this
"^DD",101.41,101.412,101,21,2,0)
prompt.
"^DD",101.41,101.412,101,"DT")
2960517
"^DD",101.41,101.412,102,0)
API NAME^F^^W;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,102,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,102,21,0)
^^3^3^2950715^
"^DD",101.41,101.412,102,21,1,0)
This is the API that should be called when the control is used.  How the API
"^DD",101.41,101.412,102,21,2,0)
is used varys with the control.  Examples are: filling list boxes, getting
"^DD",101.41,101.412,102,21,3,0)
boilerplate text, etc.
"^DD",101.41,101.412,102,"DT")
2951002
"^DD",101.41,101.412,103,0)
API PARAMETER #1^F^^W;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,103,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,103,21,0)
^^1^1^2950715^
"^DD",101.41,101.412,103,21,1,0)
A parameter that is used by the API call may be stored here.
"^DD",101.41,101.412,103,"DT")
2950715
"^DD",101.41,101.412,113,0)
WINDOWS CONDITION^K^^W3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,113,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,113,9)
@
"^DD",101.41,101.412,113,21,0)
^^3^3^2950715^
"^DD",101.41,101.412,113,21,1,0)
This is silent code that is executed when building the dialog for windows.
"^DD",101.41,101.412,113,21,2,0)
It identifies which prompts should be included in the dialog.  The condition
"^DD",101.41,101.412,113,21,3,0)
should leave $T false if the prompt should not be asked.
"^DD",101.41,101.412,113,"DT")
2950715
"^DD",101.41,101.412,117,0)
WINDOWS DEFAULT^K^^W7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,117,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,117,9)
@
"^DD",101.41,101.412,117,21,0)
^^2^2^2950715^
"^DD",101.41,101.412,117,21,1,0)
This code should silently set the default value of a prompt when it is 
"^DD",101.41,101.412,117,21,2,0)
selected.
"^DD",101.41,101.412,117,"DT")
2950715
"^DD",101.41,101.41218,0)
DEFAULT WORD-PROCESSING TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.41218,0,"DT")
2950407
"^DD",101.41,101.41218,0,"NM","DEFAULT WORD-PROCESSING TEXT")

"^DD",101.41,101.41218,0,"UP")
101.412
"^DD",101.41,101.41218,.01,0)
DEFAULT WORD-PROCESSING TEXT^W^^0;1^Q
"^DD",101.41,101.41218,.01,3)
Enter the default response for a word-processing type prompt.
"^DD",101.41,101.41218,.01,21,0)
^^2^2^2950407^
"^DD",101.41,101.41218,.01,21,1,0)
This field contains the text to be presented as the default for this prompt,
"^DD",101.41,101.41218,.01,21,2,0)
for word-processing type prompts.
"^DD",101.41,101.41218,.01,"DT")
2950407
"^DD",101.41,101.415,0)
CONTROLS SUB-FIELD^^14^14
"^DD",101.41,101.415,0,"DT")
2960202
"^DD",101.41,101.415,0,"IX","AC",101.415,3)

"^DD",101.41,101.415,0,"IX","B",101.415,.01)

"^DD",101.41,101.415,0,"NM","CONTROLS")

"^DD",101.41,101.415,0,"UP")
101.41
"^DD",101.41,101.415,.01,0)
LOGICAL NAME^MF^^0;1^K:$L(X)>8!($L(X)<1)!'(X?1.8U) X
"^DD",101.41,101.415,.01,1,0)
^.1
"^DD",101.41,101.415,.01,1,1,0)
101.415^B
"^DD",101.41,101.415,.01,1,1,1)
S ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.415,.01,1,1,2)
K ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)
"^DD",101.41,101.415,.01,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,.01,21,0)
^^1^1^2960202^
"^DD",101.41,101.415,.01,21,1,0)
This is the name by which controls can refer to each other.
"^DD",101.41,101.415,.01,"DT")
2960202
"^DD",101.41,101.415,2,0)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.415,2,"DT")
2960202
"^DD",101.41,101.415,3,0)
CREATE SEQUENCE^NJ2,0^^0;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,3,1,0)
^.1
"^DD",101.41,101.415,3,1,1,0)
101.415^AC
"^DD",101.41,101.415,3,1,1,1)
S ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)=""
"^DD",101.41,101.415,3,1,1,2)
K ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)
"^DD",101.41,101.415,3,1,1,"%D",0)
^^2^2^2960202^
"^DD",101.41,101.415,3,1,1,"%D",1,0)
The 'AC' cross-reference puts in window controls in order by creation 
"^DD",101.41,101.415,3,1,1,"%D",2,0)
sequence.
"^DD",101.41,101.415,3,1,1,"DT")
2960202
"^DD",101.41,101.415,3,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",101.41,101.415,3,"DT")
2960202
"^DD",101.41,101.415,4,0)
CONTROL TYPE^S^0:Label;1:Button;2:Edit;3:Memo;4:ListBox;5:SimpleCombo;6:DropDownList;7:LongCombo;^0;4^Q
"^DD",101.41,101.415,4,"DT")
2960202
"^DD",101.41,101.415,5,0)
LABEL^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.415,5,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.415,5,"DT")
2960202
"^DD",101.41,101.415,6,0)
BESIDE^F^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,6,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,6,"DT")
2960202
"^DD",101.41,101.415,7,0)
BELOW^F^^0;7^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,7,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,7,"DT")
2960202
"^DD",101.41,101.415,8,0)
WIDTH^NJ6,4^^0;8^K:+X'=X!(X>1)!(X<0)!(X?.E1"."5N.N) X
"^DD",101.41,101.415,8,3)
Type a Number between 0 and 1, 4 Decimal Digits
"^DD",101.41,101.415,8,"DT")
2960202
"^DD",101.41,101.415,9,0)
LEFT CONTROL^F^^0;9^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,9,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,9,"DT")
2960202
"^DD",101.41,101.415,10,0)
RIGHT CONTROL^F^^0;10^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,10,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,10,"DT")
2960202
"^DD",101.41,101.415,11,0)
HEIGHT^NJ2,0^^0;11^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,11,3)
Type a Number between 1 and 15, 0 Decimal Digits
"^DD",101.41,101.415,11,"DT")
2960202
"^DD",101.41,101.415,12,0)
UPPER CONTROL^F^^0;12^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,12,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,12,"DT")
2960202
"^DD",101.41,101.415,13,0)
LOWER CONTROL^F^^0;13^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,13,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,13,"DT")
2960202
"^DD",101.41,101.415,14,0)
TAB SEQUENCE^NJ2,0^^0;14^K:+X'=X!(X>89)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,14,3)
Type a Number between 0 and 89, 0 Decimal Digits
"^DD",101.41,101.415,14,"DT")
2960202
"^DD",101.41,101.416,0)
RESPONSES SUB-FIELD^^2^5
"^DD",101.41,101.416,0,"DT")
2960717
"^DD",101.41,101.416,0,"IX","D",101.416,.02)

"^DD",101.41,101.416,0,"NM","RESPONSES")

"^DD",101.41,101.416,0,"UP")
101.41
"^DD",101.41,101.416,.01,0)
ITEM ENTRY^MNJ7,0^^0;1^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.01,1,0)
^.1^^0
"^DD",101.41,101.416,.01,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.01,21,0)
^^2^2^2971219^^^
"^DD",101.41,101.416,.01,21,1,0)
This is the internal entry number of the prompt in the Item multiple
"^DD",101.41,101.416,.01,21,2,0)
by which this response was obtained.
"^DD",101.41,101.416,.01,"DT")
2961118
"^DD",101.41,101.416,.02,0)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.416,.02,1,0)
^.1
"^DD",101.41,101.416,.02,1,1,0)
101.416^D
"^DD",101.41,101.416,.02,1,1,1)
S ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.416,.02,1,1,2)
K ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)
"^DD",101.41,101.416,.02,1,1,"DT")
2961118
"^DD",101.41,101.416,.02,3)
Select the dialog prompt from which this response was generated.
"^DD",101.41,101.416,.02,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.02,21,1,0)
This is a pointer to the dialog prompt, which is in the Order Dialog file
"^DD",101.41,101.416,.02,21,2,0)
as type prompt.
"^DD",101.41,101.416,.02,"DT")
2961118
"^DD",101.41,101.416,.03,0)
INSTANCE^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.03,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.03,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.03,21,1,0)
In the case of multiple answers for the same item, this identifies the
"^DD",101.41,101.416,.03,21,2,0)
individual instance.
"^DD",101.41,101.416,.03,"DT")
2960717
"^DD",101.41,101.416,1,0)
VALUE^FO^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",101.41,101.416,1,2)
S Y(0)=Y S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,2.1)
S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,3)
Answer must be 1-245 characters in length.
"^DD",101.41,101.416,1,21,0)
^^2^2^2971219^^
"^DD",101.41,101.416,1,21,1,0)
This contains the actual response, unless the value is a word processing
"^DD",101.41,101.416,1,21,2,0)
type.
"^DD",101.41,101.416,1,"DT")
2980717
"^DD",101.41,101.416,2,0)
TEXT^101.4162^^2;0
"^DD",101.41,101.416,2,21,0)
^^1^1^2971219^
"^DD",101.41,101.416,2,21,1,0)
This contains the actual response, for word-processing type prompts.
"^DD",101.41,101.416,2,"DT")
2960717
"^DD",101.41,101.4162,0)
TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.4162,0,"DT")
2960717
"^DD",101.41,101.4162,0,"NM","TEXT")

"^DD",101.41,101.4162,0,"UP")
101.416
"^DD",101.41,101.4162,.01,0)
TEXT^WL^^0;1^Q
"^DD",101.41,101.4162,.01,21,0)
^^1^1^2960717^^
"^DD",101.41,101.4162,.01,21,1,0)
This contains responses to items that are a word processing type.
"^DD",101.41,101.4162,.01,"DT")
2960717
"^DIC",101.24,101.24,0)
OE/RR REPORT^101.24
"^DIC",101.24,101.24,0,"GL")
^ORD(101.24,
"^DIC",101.24,101.24,"%",0)
^1.005^^0
"^DIC",101.24,101.24,"%D",0)
^1.001^7^7^3020924^^^
"^DIC",101.24,101.24,"%D",1,0)
This file contains definitions and parameters used in various reports
"^DIC",101.24,101.24,"%D",2,0)
within CPRS.
"^DIC",101.24,101.24,"%D",3,0)
 
"^DIC",101.24,101.24,"%D",4,0)
Entry numbers >1000 are reserved for national use.  Any local entries
"^DIC",101.24,101.24,"%D",5,0)
should be added to a number <1000.  If this convention is not followed,
"^DIC",101.24,101.24,"%D",6,0)
you run the risk of having your local entries overwritten by a patch
"^DIC",101.24,101.24,"%D",7,0)
or future release of CPRS.
"^DIC",101.24,"B","OE/RR REPORT",101.24)

"^DIC",101.41,101.41,0)
ORDER DIALOG^101.41
"^DIC",101.41,101.41,0,"GL")
^ORD(101.41,
"^DIC",101.41,101.41,"%D",0)
^^2^2^2960819^^
"^DIC",101.41,101.41,"%D",1,0)
This file contains the information needed to define how to prompt for each
"^DIC",101.41,101.41,"%D",2,0)
order, what values are acceptable, etc.
"^DIC",101.41,"B","ORDER DIALOG",101.41)

**END**
**END**
