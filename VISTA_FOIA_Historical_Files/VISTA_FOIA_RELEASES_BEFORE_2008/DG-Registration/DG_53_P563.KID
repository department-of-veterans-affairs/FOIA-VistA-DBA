KIDS Distribution saved on Jan 19, 2005@10:53:37
DOD Enhancements
**KIDS**:DG*5.3*563^IVM*2.0*102^

**INSTALL NAME**
DG*5.3*563
"BLD",5136,0)
DG*5.3*563^REGISTRATION^0^3050119^y
"BLD",5136,1,0)
^^1^1^3041105^
"BLD",5136,1,1,0)
Date of Death Enhancements
"BLD",5136,4,0)
^9.64PA^^
"BLD",5136,"ABPKG")
n
"BLD",5136,"INID")
^n
"BLD",5136,"INIT")
EP^DG53B563
"BLD",5136,"KRN",0)
^9.67PA^8989.52^19
"BLD",5136,"KRN",.4,0)
.4
"BLD",5136,"KRN",.401,0)
.401
"BLD",5136,"KRN",.402,0)
.402
"BLD",5136,"KRN",.403,0)
.403
"BLD",5136,"KRN",.5,0)
.5
"BLD",5136,"KRN",.84,0)
.84
"BLD",5136,"KRN",3.6,0)
3.6
"BLD",5136,"KRN",3.8,0)
3.8
"BLD",5136,"KRN",9.2,0)
9.2
"BLD",5136,"KRN",9.8,0)
9.8
"BLD",5136,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",5136,"KRN",9.8,"NM",1,0)
DGDEATH^^0^B33387401
"BLD",5136,"KRN",9.8,"NM",2,0)
DGREG^^0^B49375183
"BLD",5136,"KRN",9.8,"NM",3,0)
DG53B563^^0^B17417391
"BLD",5136,"KRN",9.8,"NM","B","DG53B563",3)

"BLD",5136,"KRN",9.8,"NM","B","DGDEATH",1)

"BLD",5136,"KRN",9.8,"NM","B","DGREG",2)

"BLD",5136,"KRN",19,0)
19
"BLD",5136,"KRN",19,"NM",0)
^9.68A^^
"BLD",5136,"KRN",19.1,0)
19.1
"BLD",5136,"KRN",101,0)
101
"BLD",5136,"KRN",409.61,0)
409.61
"BLD",5136,"KRN",771,0)
771
"BLD",5136,"KRN",870,0)
870
"BLD",5136,"KRN",8989.51,0)
8989.51
"BLD",5136,"KRN",8989.52,0)
8989.52
"BLD",5136,"KRN",8994,0)
8994
"BLD",5136,"KRN","B",.4,.4)

"BLD",5136,"KRN","B",.401,.401)

"BLD",5136,"KRN","B",.402,.402)

"BLD",5136,"KRN","B",.403,.403)

"BLD",5136,"KRN","B",.5,.5)

"BLD",5136,"KRN","B",.84,.84)

"BLD",5136,"KRN","B",3.6,3.6)

"BLD",5136,"KRN","B",3.8,3.8)

"BLD",5136,"KRN","B",9.2,9.2)

"BLD",5136,"KRN","B",9.8,9.8)

"BLD",5136,"KRN","B",19,19)

"BLD",5136,"KRN","B",19.1,19.1)

"BLD",5136,"KRN","B",101,101)

"BLD",5136,"KRN","B",409.61,409.61)

"BLD",5136,"KRN","B",771,771)

"BLD",5136,"KRN","B",870,870)

"BLD",5136,"KRN","B",8989.51,8989.51)

"BLD",5136,"KRN","B",8989.52,8989.52)

"BLD",5136,"KRN","B",8994,8994)

"BLD",5136,"QUES",0)
^9.62^^
"BLD",5136,"REQB",0)
^9.611^2^2
"BLD",5136,"REQB",1,0)
DG*5.3*568^2
"BLD",5136,"REQB",2,0)
DG*5.3*574^2
"BLD",5136,"REQB","B","DG*5.3*568",1)

"BLD",5136,"REQB","B","DG*5.3*574",2)

"INIT")
EP^DG53B563
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
563^3050119
"PKG",5,22,1,"PAH",1,1,0)
^^1^1^3050119
"PKG",5,22,1,"PAH",1,1,1,0)
Date of Death Enhancements
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","DG53B563")
0^3^B17417391
"RTN","DG53B563",1,0)
DG53B563 ;ALB/PJR - DOD Enhancement Post-Install ; 12/30/04 3:53pm
"RTN","DG53B563",2,0)
 ;;5.3;Registration;**563**; Aug 13,1993
"RTN","DG53B563",3,0)
 ;This post install routine will loop through patient file (#2)
"RTN","DG53B563",4,0)
 ;and delete the DEATH ENTERED BY field
"RTN","DG53B563",5,0)
 ;for all entries that have NO value in the DATE OF DEATH field (#.351)
"RTN","DG53B563",6,0)
 ;but DO have a value in the DEATH ENTERED BY field (#.352)
"RTN","DG53B563",7,0)
 Q
"RTN","DG53B563",8,0)
 ;
"RTN","DG53B563",9,0)
EP ;Entry point
"RTN","DG53B563",10,0)
 N OK
"RTN","DG53B563",11,0)
 D CHK Q:'OK
"RTN","DG53B563",12,0)
 D MSG
"RTN","DG53B563",13,0)
 D QUETASK
"RTN","DG53B563",14,0)
 Q
"RTN","DG53B563",15,0)
 ;
"RTN","DG53B563",16,0)
QUETASK ;Queue the task
"RTN","DG53B563",17,0)
 N TXT,ZTRTN,ZTDESC,ZTSK,ZTIO,ZTDTH
"RTN","DG53B563",18,0)
 S ZTRTN="EP1^DG53B563",ZTIO="",ZTDTH=$$NOW^XLFDT()
"RTN","DG53B563",19,0)
 S ZTDESC="DOD ENHANCEMENT POST-INSTALL"
"RTN","DG53B563",20,0)
 K ^XTMP("DG53B563")
"RTN","DG53B563",21,0)
 D ^%ZTLOAD S ^XTMP("DG53B563","TASK")=ZTSK
"RTN","DG53B563",22,0)
 S TXT(1)="Task: "_ZTSK_" Queued."
"RTN","DG53B563",23,0)
 D BMES^XPDUTL(.TXT)
"RTN","DG53B563",24,0)
 Q
"RTN","DG53B563",25,0)
 ;
"RTN","DG53B563",26,0)
EP1 ;Entry point
"RTN","DG53B563",27,0)
 N ZCNT,ZIEN,ZEND,ZDATE,ZEDATE,DA,DIE,DR,ZCK,ZII,ZXX,X
"RTN","DG53B563",28,0)
 L +^XTMP("DG53B563"):1 E  Q
"RTN","DG53B563",29,0)
 S (ZIEN,ZCNT)=0
"RTN","DG53B563",30,0)
 S ZDATE=$$DT^XLFDT D DG53
"RTN","DG53B563",31,0)
 S ^XTMP("DG53B563",0)=ZCNT_U_ZDATE_U_X
"RTN","DG53B563",32,0)
 S $P(^XTMP("DG53B563","DATE"),"^")=$$FMTE^XLFDT($$NOW^XLFDT(),"5P")
"RTN","DG53B563",33,0)
 D LMINUS
"RTN","DG53B563",34,0)
 ;Loop through patient file
"RTN","DG53B563",35,0)
 F  S ZIEN=$O(^DPT(ZIEN)) Q:'ZIEN  D
"RTN","DG53B563",36,0)
 .S ZXX=$G(^DPT(ZIEN,.35)),ZCK=0 I ZXX=""!ZXX Q
"RTN","DG53B563",37,0)
 .F ZII=1,2,3,5 I $P(ZXX,U,ZII)]"" S ZCK=1 D
"RTN","DG53B563",38,0)
 ..S DA=ZIEN,DIE="^DPT(",DR=".35"_ZII_"////@" D ^DIE
"RTN","DG53B563",39,0)
 .I ZCK S ZCNT=ZCNT+1 ;Tot records updated
"RTN","DG53B563",40,0)
 S $P(^XTMP("DG53B563","DATE"),"^",2)=$$FMTE^XLFDT($$NOW^XLFDT(),"5P")
"RTN","DG53B563",41,0)
 S ZDATE=$$DT^XLFDT,ZEDATE=$$FMTE^XLFDT(DT) D DG53
"RTN","DG53B563",42,0)
 S ^XTMP("DG53B563",0)=ZCNT_U_ZDATE_U_X
"RTN","DG53B563",43,0)
 S ^XTMP("DG53B563","COMPLETED")=1 D MAIL
"RTN","DG53B563",44,0)
 D DG53 S X="The "_X_" process is complete."
"RTN","DG53B563",45,0)
 D BMES^XPDUTL(X)
"RTN","DG53B563",46,0)
 Q
"RTN","DG53B563",47,0)
 ;
"RTN","DG53B563",48,0)
CHK ;check for completion
"RTN","DG53B563",49,0)
 N TXT,TASKNUM,STAT
"RTN","DG53B563",50,0)
 S OK=1 L +^XTMP("DG53B563"):1 E  D  Q
"RTN","DG53B563",51,0)
 .S OK=0 D DG53 S TXT(1)=X_" process has a lock table"
"RTN","DG53B563",52,0)
 .S TXT(2)="problem.  Nothing Done!"
"RTN","DG53B563",53,0)
 .D BMES^XPDUTL(.TXT),LMINUS
"RTN","DG53B563",54,0)
 ;
"RTN","DG53B563",55,0)
 I $G(^XTMP("DG53B563","COMPLETED")) D  Q
"RTN","DG53B563",56,0)
 .S OK=0 D DG53 S TXT(1)=X_" process was completed in a"
"RTN","DG53B563",57,0)
 .S TXT(2)="previous run.  Nothing Done!"
"RTN","DG53B563",58,0)
 .D BMES^XPDUTL(.TXT),LMINUS
"RTN","DG53B563",59,0)
 ;
"RTN","DG53B563",60,0)
 S TASKNUM=$G(^XTMP("DG53B563","TASK"))
"RTN","DG53B563",61,0)
 I +TASKNUM D  Q
"RTN","DG53B563",62,0)
 .S STAT=$$ACTIVE(TASKNUM)
"RTN","DG53B563",63,0)
 .I STAT>0 D
"RTN","DG53B563",64,0)
 ..S OK=0 D DG53
"RTN","DG53B563",65,0)
 ..S TXT(1)="Task: "_TASKNUM_" is currently running the"
"RTN","DG53B563",66,0)
 ..S TXT(2)=X_" process."
"RTN","DG53B563",67,0)
 ..S TXT(3)="Duplicate processes cannot be started."
"RTN","DG53B563",68,0)
 ..D BMES^XPDUTL(.TXT)
"RTN","DG53B563",69,0)
 .D LMINUS
"RTN","DG53B563",70,0)
 ;
"RTN","DG53B563",71,0)
 D LMINUS Q
"RTN","DG53B563",72,0)
 ;
"RTN","DG53B563",73,0)
MSG ;create bulletin message in install file.
"RTN","DG53B563",74,0)
 N TXT
"RTN","DG53B563",75,0)
 S TXT(1)="This Post Install routine will loop through the Patient (#2) file"
"RTN","DG53B563",76,0)
 S TXT(2)="and delete the DEATH ENTERED BY field for all patients"
"RTN","DG53B563",77,0)
 S TXT(3)="that have NO value in the DATE OF DEATH (#.531) field"
"RTN","DG53B563",78,0)
 S TXT(4)="but DO have a value in the DEATH ENTERED BY field."
"RTN","DG53B563",79,0)
 S TXT(5)=" "
"RTN","DG53B563",80,0)
 D BMES^XPDUTL(.TXT)
"RTN","DG53B563",81,0)
 Q
"RTN","DG53B563",82,0)
 ;
"RTN","DG53B563",83,0)
MAIL N SITE,STATN,SITENM,XMDUZ,XMSUB,XMY,XMTEXT,MSG
"RTN","DG53B563",84,0)
 S SITE=$$SITE^VASITE,STATN=$P($G(SITE),"^",3),SITENM=$P($G(SITE),"^",2)
"RTN","DG53B563",85,0)
 S:$$GET1^DIQ(869.3,"1,",.03,"I")'="P" STATN=STATN_" [TEST]"
"RTN","DG53B563",86,0)
 D DG53 S XMDUZ=X,XMSUB=XMDUZ_" - "_STATN_" (DG*5.3*563)"
"RTN","DG53B563",87,0)
 S (XMY(DUZ),XMY(.5))=""
"RTN","DG53B563",88,0)
 S XMTEXT="MSG(" D DG53
"RTN","DG53B563",89,0)
 S MSG(1)="The "_X_" process"
"RTN","DG53B563",90,0)
 S MSG(2)="has completed successfully."
"RTN","DG53B563",91,0)
 S MSG(3)="Task: "_$G(^XTMP("DG53B563","TASK"))
"RTN","DG53B563",92,0)
 S MSG(4)=""
"RTN","DG53B563",93,0)
 S MSG(5)="Site Station number: "_STATN
"RTN","DG53B563",94,0)
 S MSG(6)="Site Name: "_SITENM
"RTN","DG53B563",95,0)
 S MSG(7)=""
"RTN","DG53B563",96,0)
 S MSG(8)="Process started at    : "_$P($G(^XTMP("DG53B563","DATE")),"^",1)
"RTN","DG53B563",97,0)
 S MSG(8)="Process completed at  : "_$P($G(^XTMP("DG53B563","DATE")),"^",2)
"RTN","DG53B563",98,0)
 S MSG(10)="Total Veterans updated: "_+$G(^XTMP("DG53B563",0))
"RTN","DG53B563",99,0)
 D ^XMD
"RTN","DG53B563",100,0)
 Q
"RTN","DG53B563",101,0)
 ;
"RTN","DG53B563",102,0)
 ;
"RTN","DG53B563",103,0)
ACTIVE(TASK) ;Checks if task is running
"RTN","DG53B563",104,0)
 ;  input  --  The taskman ID
"RTN","DG53B563",105,0)
 ;  output --  1=The task is running
"RTN","DG53B563",106,0)
 ;             0=The task is not running
"RTN","DG53B563",107,0)
 N STAT,ZTSK,Y
"RTN","DG53B563",108,0)
 S STAT=0,ZTSK=+TASK
"RTN","DG53B563",109,0)
 D STAT^%ZTLOAD
"RTN","DG53B563",110,0)
 S Y=ZTSK(1)
"RTN","DG53B563",111,0)
 I Y=0 S STAT=-1
"RTN","DG53B563",112,0)
 I ",1,2,"[(","_Y_",") S STAT=1
"RTN","DG53B563",113,0)
 I ",3,5,"[(","_Y_",") S STAT=0
"RTN","DG53B563",114,0)
 Q STAT
"RTN","DG53B563",115,0)
DG53 S X="DG*5.3*563 DOD Post-Install cleanup DEATH ENTERED BY" Q
"RTN","DG53B563",116,0)
LMINUS L -^XTMP("DG53B563") Q
"RTN","DGDEATH")
0^1^B33387401
"RTN","DGDEATH",1,0)
DGDEATH ;ALB/MRL/PJR-PROCESS DECEASED PATIENTS ; 10/27/04 9:45pm
"RTN","DGDEATH",2,0)
 ;;5.3;Registration;**45,84,101,149,392,545,595,568,563**;Aug 13, 1993
"RTN","DGDEATH",3,0)
 ;
"RTN","DGDEATH",4,0)
GET S DGDTHEN="" W !! S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S (DA,DFN)=+Y
"RTN","DGDEATH",5,0)
 S DGDOLD=$G(^DPT(DFN,.35))
"RTN","DGDEATH",6,0)
 I $D(^DPT(DFN,.1)) W !?3,"Patient is currently in-house.  Discharge him with a discharge type of DEATH." G GET
"RTN","DGDEATH",7,0)
 I $S($D(^DPT(DFN,.35)):^(.35),1:"") F DGY=0:0 S DGY=$O(^DGPM("ATID1",DFN,DGY)) Q:'DGY  S DGDA=$O(^(DGY,0)) I $D(^DGPM(+DGDA,0)),$P(^(0),"^",17)]"" S DGXX=$P(^(0),"^",17),DGXX=^DGPM(DGXX,0) I "^12^38^"[("^"_$P(DGXX,"^",18)_"^") G DIS
"RTN","DGDEATH",8,0)
 D NOW^%DTC S DGNOW=%
"RTN","DGDEATH",9,0)
 S ^TMP("DEATH",$J)=1
"RTN","DGDEATH",10,0)
 K A W ! S DIE=DIC,DR=".351" D ^DIE
"RTN","DGDEATH",11,0)
 I '$D(^DPT(DFN,.35)) K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",12,0)
 S DGDNEW=^DPT(DFN,.35)
"RTN","DGDEATH",13,0)
 I $P(DGDNEW,"^",1)="",$P(DGDNEW,"^",2)'="" S DR=".352////@" D ^DIE
"RTN","DGDEATH",14,0)
 I $P(DGDNEW,"^",1)="" K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",15,0)
 I $P(DGDNEW,"^",1)'="" S DR=".353" D ^DIE
"RTN","DGDEATH",16,0)
 I DGDOLD'=DGDNEW D DISCHRGE
"RTN","DGDEATH",17,0)
 I $P(DGDOLD,"^",1)'=$P(DGDNEW,"^",1) D XFR
"RTN","DGDEATH",18,0)
 K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",19,0)
 ;
"RTN","DGDEATH",20,0)
DIS W !,"Patient has a discharge type of Death",!,"Edit the discharge",!
"RTN","DGDEATH",21,0)
Q K A,DA,DFN,DGDA,DIC,DIE,DR,DGXX,DGY,DGDTHEN,DGDOLD,DGDNEW,DGDONOT Q
"RTN","DGDEATH",22,0)
XFR ; called from set x-ref of field .351 of file 2
"RTN","DGDEATH",23,0)
 N DGPCMM,DGFAPT,DGFAPTI,DGFAPT1
"RTN","DGDEATH",24,0)
 Q:'$D(DFN)
"RTN","DGDEATH",25,0)
 K DGTEXT D ^DGPATV S DGDEATH=$$GET1^DIQ(2,DFN,.351,"I"),XMSUB="PATIENT HAS EXPIRED",DGCT=0
"RTN","DGDEATH",26,0)
 D DEMOG
"RTN","DGDEATH",27,0)
 S DGT=X-.0001,(Y,DGDDT)=X,DG1="" D:DGT]"" ^DGPMSTAT
"RTN","DGDEATH",28,0)
 S Y=$$FMTE^XLFDT(Y),Y=$S(Y]"":Y,1:"UNKNOWN")
"RTN","DGDEATH",29,0)
 S DGDONOT=0 D APTT3
"RTN","DGDEATH",30,0)
 D LINE("")
"RTN","DGDEATH",31,0)
 D LINE("      Date/Time of Death: "_DEATHVAL_$S(DGDONOT:"",'DG1:"",$D(DGDTHEN):"",1:"  (While an inpatient)"))
"RTN","DGDEATH",32,0)
 D LINE("")
"RTN","DGDEATH",33,0)
 I '$D(ADM),DG1,$D(^DGPM(+DGA1,0)) S ADM=+^DGPM($P(^(0),"^",14),0)
"RTN","DGDEATH",34,0)
 S Y=$$FMTE^XLFDT($S($D(ADM):ADM,1:""))
"RTN","DGDEATH",35,0)
 D LINE($S($D(DGDTHEN):"",DG1:"     Admission Date/Time: "_Y_$S((DGDDT-ADM)<1:"  (Within 24 hours of hospitalization)",1:""),1:""))
"RTN","DGDEATH",36,0)
 D LINE("")
"RTN","DGDEATH",37,0)
 S DGX=$P($G(^DGPM(+$G(DGA1),0)),"^",6),DGX=$P($G(^DIC(42,+DGX,0)),U,1)
"RTN","DGDEATH",38,0)
 D LINE($S($D(DGDTHEN):"",('DG1):"",$D(DGA1):"             Admitted To: "_$S(DGX]"":DGX,1:"UNKNOWN"),1:"")) K DGX
"RTN","DGDEATH",39,0)
 D LINE("")
"RTN","DGDEATH",40,0)
 I DG1&'$D(DGDTHEN) D 
"RTN","DGDEATH",41,0)
 . D LINE($S($D(DGXFR0):"           Last Transfer: "_$S($D(^DIC(42,+$P(DGXFR0,"^",6),0)):$P(^(0),"^"),1:"UNKNOWN"),1:""))
"RTN","DGDEATH",42,0)
 . D LINE("")
"RTN","DGDEATH",43,0)
F N DGARRAY,SDCNT S DGFAPT=DGDEATH,DGFAPTI=""
"RTN","DGDEATH",44,0)
 S DGARRAY("FLDS")=3,DGARRAY(4)=DFN,DGARRAY("SORT")="P",DGARRAY(1)=DT
"RTN","DGDEATH",45,0)
 S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGDEATH",46,0)
 F  S DGFAPT=$O(^TMP($J,"SDAMA301",DFN,DGFAPT)) Q:'DGFAPT  S DGFAPT1=$G(^TMP($J,"SDAMA301",DFN,DGFAPT)) Q:DGFAPT1']""  D  Q:DGFAPTI
"RTN","DGDEATH",47,0)
 .I $P($P(DGFAPT1,U,3),";")'["C" D LINE("NOTE: Patient has future appointments scheduled!!") S DGFAPTI=1
"RTN","DGDEATH",48,0)
 S DGSCHAD=0 D SA I DGSCHAD D LINE("NOTE: Patient had scheduled admissions which have been cancelled!!")
"RTN","DGDEATH",49,0)
 I 'DGVETS D LINE("Patient is a NON-VETERAN."_$S($D(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)):"  ["_$P(^(0),"^",1)_"]",1:""))
"RTN","DGDEATH",50,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",51,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",52,0)
Q1 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",53,0)
 K DGDEATH,DGSCHAD,DGI,Y,DGDDT D KILL^DGPATV K ADM,DG1,DGA1,DGCT,DGT,DGXX,DGY,Z Q
"RTN","DGDEATH",54,0)
SA F DGI=0:0 S DGI=$O(^DGS(41.1,"B",DFN,DGI)) Q:'DGI  I $D(^DGS(41.1,DGI,0)),($P(^(0),"^",13)']""),($P(^(0),"^",17)']"") S $P(^(0),"^",13)=DGDEATH,$P(^(0),"^",14)=+DUZ,$P(^(0),"^",15)=1,$P(^(0),"^",16)=2,DGSCHAD=1
"RTN","DGDEATH",55,0)
 Q
"RTN","DGDEATH",56,0)
 ;
"RTN","DGDEATH",57,0)
DEL ; delete death bulletin
"RTN","DGDEATH",58,0)
 N DGPCMM,DELBY,DELTM,DTHINFO
"RTN","DGDEATH",59,0)
 S DFN=+$G(DA) I '$D(^DPT(DFN,0)) Q  ; no patient node
"RTN","DGDEATH",60,0)
 I +$G(^DPT(DFN,.35)) Q  ; not deletion
"RTN","DGDEATH",61,0)
 S DGDEATH=X,XMSUB="Patient Death has been Deleted",DGCT=0
"RTN","DGDEATH",62,0)
 D ^DGPATV
"RTN","DGDEATH",63,0)
 D LINE("The date of death for the following patient has been deleted.")
"RTN","DGDEATH",64,0)
 D LINE("")
"RTN","DGDEATH",65,0)
 D DEMOG
"RTN","DGDEATH",66,0)
 D LINE("")
"RTN","DGDEATH",67,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",68,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",69,0)
 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",70,0)
 K DGCT,DGDEATH D KILL^DGPATV
"RTN","DGDEATH",71,0)
 Q
"RTN","DGDEATH",72,0)
 ;
"RTN","DGDEATH",73,0)
DEMOG ; list main demographics
"RTN","DGDEATH",74,0)
 D LINE("                    NAME: "_DGNAME)
"RTN","DGDEATH",75,0)
 D LINE("                     SSN: "_$P(SSN,"^",2))
"RTN","DGDEATH",76,0)
 D LINE("                     DOB: "_$P(DOB,"^",2))
"RTN","DGDEATH",77,0)
 I DGVETS D
"RTN","DGDEATH",78,0)
 . N DGX
"RTN","DGDEATH",79,0)
 . S DGX=$G(^DPT(DFN,.31))
"RTN","DGDEATH",80,0)
 . S DGLOCATN=$$FIND1^DIC(4,"","MX","`"_+$P(DGX,U,4)),DGLOCATN=$S(+DGLOCATN>0:$P($$NS^XUAF4(DGLOCATN),U),1:"NOT LISTED")
"RTN","DGDEATH",81,0)
 . D LINE("   CLAIM FOLDER LOCATION: "_$S($D(DGLOCATN):DGLOCATN,1:"NOT LISTED"))
"RTN","DGDEATH",82,0)
 . D LINE("            CLAIM NUMBER: "_$S($P(DGX,"^",3)]"":$P(DGX,"^",3),1:"NOT LISTED"))
"RTN","DGDEATH",83,0)
 D LINE("   COORDINATING MASTER OF RECORD: "_DGCMOR)
"RTN","DGDEATH",84,0)
 D GETS^DIQ(2,DFN_",",".351;.353;.354;.355","E","DTHINFO")
"RTN","DGDEATH",85,0)
 S DEATHVAL=$G(DTHINFO(2,DFN_",",.351,"E"))
"RTN","DGDEATH",86,0)
 S DEATHVAL=$$FMTE^XLFDT(DEATHVAL),DEATHVAL=$S(DEATHVAL]"":DEATHVAL,1:"UNKNOWN")
"RTN","DGDEATH",87,0)
 S SOURCE=$G(DTHINFO(2,DFN_",",.353,"E"))
"RTN","DGDEATH",88,0)
 S DELTM=$G(DTHINFO(2,DFN_",",.354,"E"))
"RTN","DGDEATH",89,0)
 S DELBY=$G(DTHINFO(2,DFN_",",.355,"E"))
"RTN","DGDEATH",90,0)
 D LINE("")
"RTN","DGDEATH",91,0)
 D LINE("             LAST EDITED BY: "_DELBY)
"RTN","DGDEATH",92,0)
 D LINE("    DATE/TIME LAST MODIFIED: "_DELTM)
"RTN","DGDEATH",93,0)
 D LINE("     SOURCE OF NOTIFICATION: "_$S(SOURCE="":"UNDEFINED",1:SOURCE))
"RTN","DGDEATH",94,0)
 ;K DEATHVAL,SOURCE,DELTM,DELBY
"RTN","DGDEATH",95,0)
 Q
"RTN","DGDEATH",96,0)
 ;
"RTN","DGDEATH",97,0)
LINE(X) ; add line contained in X to array
"RTN","DGDEATH",98,0)
 S DGCT=DGCT+1
"RTN","DGDEATH",99,0)
 S DGTEXT(DGCT,0)=X
"RTN","DGDEATH",100,0)
 Q
"RTN","DGDEATH",101,0)
DSBULL ;
"RTN","DGDEATH",102,0)
 ;
"RTN","DGDEATH",103,0)
 I $G(IVMDODUP)=1 Q
"RTN","DGDEATH",104,0)
 S DFN=DA
"RTN","DGDEATH",105,0)
 I $D(DGPMDA) D  Q
"RTN","DGDEATH",106,0)
 .S DISTYPE=$P($G(^DGPM(DGPMDA,0)),"^",18)
"RTN","DGDEATH",107,0)
 .I $G(^DG(405.2,DISTYPE,0))["DEATH" D
"RTN","DGDEATH",108,0)
 ..S FDA(2,DFN_",",.353)=1 D FILE^DIE(,"FDA","BWFERR")
"RTN","DGDEATH",109,0)
 ..D DISCHRGE,XFR
"RTN","DGDEATH",110,0)
 I $D(^TMP("DEATH",$J)) Q
"RTN","DGDEATH",111,0)
 D DISCHRGE,XFR
"RTN","DGDEATH",112,0)
 Q
"RTN","DGDEATH",113,0)
DKBULL ;
"RTN","DGDEATH",114,0)
 S DFN=DA
"RTN","DGDEATH",115,0)
 S FDA(2,DFN_",",.353)="@"
"RTN","DGDEATH",116,0)
 I $D(^TMP("DEATH",$J)) S FDA(2,DFN_",",.355)=DUZ
"RTN","DGDEATH",117,0)
 D FILE^DIE(,"FDA",)
"RTN","DGDEATH",118,0)
 D DEL
"RTN","DGDEATH",119,0)
 Q
"RTN","DGDEATH",120,0)
DISCHRGE ;
"RTN","DGDEATH",121,0)
 ; If the patient is being discharged, determine values needed for 
"RTN","DGDEATH",122,0)
 ; Source of Notification and Date/Time last entered.
"RTN","DGDEATH",123,0)
 ;
"RTN","DGDEATH",124,0)
 I '$D(DGNOW) S DGNOW=$$HTFM^XLFDT($H)
"RTN","DGDEATH",125,0)
 I $G(DGDAUTO)'=1 S FDA(2,DFN_",",.354)=DGNOW
"RTN","DGDEATH",126,0)
 S FDA(2,DFN_",",.355)=DUZ
"RTN","DGDEATH",127,0)
 D FILE^DIE(,"FDA",)
"RTN","DGDEATH",128,0)
 Q
"RTN","DGDEATH",129,0)
APTT3 ;Check to exclude "While an Inpatient" from DOD Bulletin
"RTN","DGDEATH",130,0)
 ; Input:  DFN  Output: DGDONOT
"RTN","DGDEATH",131,0)
 N DATE,XIEN,TYPE,XDOD,YES
"RTN","DGDEATH",132,0)
 S DGDONOT=0
"RTN","DGDEATH",133,0)
 S XDOD=$P($G(^DPT(DFN,.35)),"^",1) I 'XDOD Q
"RTN","DGDEATH",134,0)
 S XDOD=$P(XDOD,".",1),YES=0,TYPE=""
"RTN","DGDEATH",135,0)
 I '$D(^DGPM("APTT3",DFN)) Q
"RTN","DGDEATH",136,0)
 S DATE=$O(^DGPM("APTT3",DFN,XDOD)) I 'DATE Q
"RTN","DGDEATH",137,0)
 I $P(DATE,".",1)=XDOD S YES=1
"RTN","DGDEATH",138,0)
 I ($P(DATE,".",1)-1)=XDOD S YES=1
"RTN","DGDEATH",139,0)
 S XIEN=$O(^DGPM("APTT3",DFN,DATE,"")) I 'XIEN Q
"RTN","DGDEATH",140,0)
 S TYPE=$P($G(^DGPM(XIEN,0)),"^",4)
"RTN","DGDEATH",141,0)
 I YES,'((TYPE=27)!(TYPE=32)) S DGDONOT=1
"RTN","DGDEATH",142,0)
 Q
"RTN","DGREG")
0^2^B49375183
"RTN","DGREG",1,0)
DGREG ;ALB/JDS,MRL/PJR-REGISTER PATIENT ; 12/20/04 10:35am
"RTN","DGREG",2,0)
 ;;5.3;Registration;**1,32,108,147,149,182,245,250,513,425,533,574,563**;Aug 13, 1993
"RTN","DGREG",3,0)
START ;
"RTN","DGREG",4,0)
EN D LO^DGUTL S DGCLPR=""
"RTN","DGREG",5,0)
 N DGDIV
"RTN","DGREG",6,0)
 S DGDIV=$$PRIM^VASITE
"RTN","DGREG",7,0)
 S:DGDIV %ZIS("B")=$P($G(^DG(40.8,+DGDIV,"DEV")),U,1)
"RTN","DGREG",8,0)
 I $P(^DG(43,1,0),U,39) S %ZIS="NQ",%ZIS("A")="Select 1010 printer: " D ^%ZIS Q:POP  S (DGIO(10),DGIO("PRF"),DGIO("RT"),DGIO("HS"))=ION,DGASKDEV="" I $E(IOST,1,2)'["P-" W !,$C(7),"Not a printer" G DGREG
"RTN","DGREG",9,0)
 K %ZIS("B")
"RTN","DGREG",10,0)
 I '$D(DGIO),$P(^DG(43,1,0),U,30) S %ZIS="N",IOP="HOME" D ^%ZIS I $D(IOS),IOS,$D(^%ZIS(1,+IOS,99)),$D(^%ZIS(1,+^(99),0)) S Y=$P(^(0),U,1) W !,"Using closest printer ",Y,! F I=10,"PRF","RT","HS" S DGIO(I)=Y
"RTN","DGREG",11,0)
A D ENDREG($G(DFN)) I '$G(DG1010TF) W !! S DIC=2,DIC(0)="ALEQM",DLAYGO=2 K DIC("S"),DIC("B") D ^DIC K DLAYGO G Q1:Y<0 S (DFN,DA)=+Y,DGNEW=$P(Y,"^",3) N Y D PAUSE^DG10 D BEGINREG(DFN) I DGNEW D NEW^DGRP
"RTN","DGREG",12,0)
 ;
"RTN","DGREG",13,0)
 ;; ask to continue if patient died - DG*5.3*563 - pjr 10/12/04
"RTN","DGREG",14,0)
 S DOD="" I $G(DFN) S DOD=$P($G(^DPT(DFN,.35)),"^",1)
"RTN","DGREG",15,0)
 I DOD,'$G(DG1010TF) S Y=DOD,DGPME=0 D DIED^DGPMV I DGPME K DFN,DGRPOUT G A
"RTN","DGREG",16,0)
 ;
"RTN","DGREG",17,0)
 D CIRN
"RTN","DGREG",18,0)
 ;
"RTN","DGREG",19,0)
 I +$G(DGNEW) D
"RTN","DGREG",20,0)
 . ; query CMOR for Patient Record Flag Assignments if NEW patient and
"RTN","DGREG",21,0)
 . ; display results.
"RTN","DGREG",22,0)
 . I $$PRFQRY^DGPFAPI(DFN) D DISPPRF^DGPFAPI(DFN)
"RTN","DGREG",23,0)
 ;
"RTN","DGREG",24,0)
 D ROMQRY
"RTN","DGREG",25,0)
 ;
"RTN","DGREG",26,0)
 S (DGFC,CURR)=0
"RTN","DGREG",27,0)
 D:'$G(DGNEW) WARN S DA=DFN,DGFC="^1",VET=$S($D(^DPT(DFN,"VET")):^("VET")'="Y",1:0)
"RTN","DGREG",28,0)
 I '$G(DG1010TF) S %ZIS="N",IOP="HOME" D ^%ZIS S DGELVER=0 D EN^DGRPD I $D(DGRPOUT) D ENDREG($G(DFN)) D HL7A08^VAFCDD01 K DFN,DGRPOUT G A
"RTN","DGREG",29,0)
 I '$G(DG1010TF) D HINQ^DG10
"RTN","DGREG",30,0)
 I $D(^DIC(195.4,1,"UP")) I ^("UP") D ADM^RTQ3
"RTN","DGREG",31,0)
 D REG^IVMCQ($G(DFN))  ; send financial query  
"RTN","DGREG",32,0)
 G A1
"RTN","DGREG",33,0)
 ;
"RTN","DGREG",34,0)
RT I $D(^DIC(195.4,1,"UP")) I ^("UP") S $P(DGFC,U,1)=DIV D ADM^RTQ3
"RTN","DGREG",35,0)
 Q
"RTN","DGREG",36,0)
 ;
"RTN","DGREG",37,0)
A1 I '$G(DG1010TF) W !,"Do you want to ",$S(DGNEW:"enter",1:"edit")," Patient Data" S %=1 D YN^DICN G H:'%,CK:%'=1 S DGRPV=0 D EN1^DGRP G Q:'$D(DA)
"RTN","DGREG",38,0)
 G CH
"RTN","DGREG",39,0)
PR W !!,"Is the patient currently being followed in a clinic for the same condition" S %=0 D YN^DICN G Q:%=-1
"RTN","DGREG",40,0)
 I '% W !?4,$C(7),"Enter 'Y' if the patient is being followed in clinic for condition for which",!?6,"registered, 'N' if not." G PR
"RTN","DGREG",41,0)
 S CURR=% G SEEN
"RTN","DGREG",42,0)
 ;
"RTN","DGREG",43,0)
CK S DGEDCN=1 D ^DGRPC
"RTN","DGREG",44,0)
CH S X=$S('$D(^DPT(DFN,.36)):1,$P(^(.36),"^",1)']"":1,1:0),X1=$S('$D(^DPT(DFN,.32)):1,$P(^(.32),"^",3)']"":1,1:0) I 'X,'X1 G CH1
"RTN","DGREG",45,0)
CH1 S DA=DFN G PR:'$D(^DPT("ADA",1,DA)) W !!,"There is still an open disposition--register aborted.",$C(7),$C(7) G Q
"RTN","DGREG",46,0)
SEEN W !!,"Is the patient to be examined in the medical center today" S %=1 D YN^DICN S SEEN=% G:%<0 Q I %'>0 W !!,"Enter 'Y' if the patient is to be examined today, 'N' if not.",$C(7) G SEEN
"RTN","DGREG",47,0)
ABIL D ^DGREGG
"RTN","DGREG",48,0)
ENR ; next line appears to be dead code.  left commented just to test.  mli 4/28/94
"RTN","DGREG",49,0)
 ;S DE=0 F I=0:0 S I=$O(^DPT(DA,"DE",I)) Q:'I  I $P(^(I,0),"^",3)'?7N Q  D PR:'DE S L=+$P($S($D(^SC(L,0)):^(0),1:""),"^",1)
"RTN","DGREG",50,0)
REG S (DIE,DIC)="^DPT("_DFN_",""DIS"",",%DT="PTEX",%DT("A")="Registration login date/time: NOW// "
"RTN","DGREG",51,0)
 W !,%DT("A") R ANS:DTIME S:'$T ANS="^" S:ANS="" ANS="N" S X=ANS G Q:ANS="^" S DA(1)=DFN D CHK^DIE(2.101,.01,"E",X,.RESULT) G REG:RESULT="^"!('$D(RESULT)),PR3:'(RESULT#1) S Y=RESULT
"RTN","DGREG",52,0)
 I (RESULT'="^") W "  ("_RESULT(0)_")"
"RTN","DGREG",53,0)
 S DINUM=9999999-RESULT
"RTN","DGREG",54,0)
 S (DFN1,Y1)=DINUM,APD=Y I $D(^DPT(DFN,"DIS",Y1)) W !!,"You must enter a date that does not exist.",$C(7),$C(7) G REG
"RTN","DGREG",55,0)
 G:$D(^DPT("ADA",1,DA)) CH1 L @(DIE_DINUM_")"):2 G:'$T MSG S:'($D(^DPT(DA(1),"DIS",0))#2) ^(0)="^2.101D^^" S DIC(0)="L",X=+Y D ^DIC
"RTN","DGREG",56,0)
 ;
"RTN","DGREG",57,0)
 ;SAVE OFF DATE/TIME OF REGISTRATION FOR HL7 V2.3 MESSAGING, IN VAFCDDT
"RTN","DGREG",58,0)
 S VAFCDDT=X
"RTN","DGREG",59,0)
 ;
"RTN","DGREG",60,0)
 S DA=DFN1,DIE("NO^")="",DA(1)=DFN,DP=2.101,DR="1///"_$S(SEEN=2:2,CURR=1:1,1:0)_";Q;2"_$S(CURR=1:"///3",1:"")_";2.1;3//"_$S($P(^DG(43,1,"GL"),"^",2):"",1:"/")_$S($D(^DG(40.8,+$P(^DG(43,1,"GL"),"^",3),0)):$P(^(0),"^",1),1:"")_";4////"_DUZ
"RTN","DGREG",61,0)
 I $G(DG1010TF) S DR=DR_";.2///1"
"RTN","DGREG",62,0)
 D EL K DIC("A") N DGNDLOCK S DGNDLOCK=DIE_DFN1_")" L +@DGNDLOCK:2 G:'$T MSG D ^DIE L -@DGNDLOCK
"RTN","DGREG",63,0)
 I $D(DTOUT) D  G Q
"RTN","DGREG",64,0)
 .K DTOUT
"RTN","DGREG",65,0)
 .N DA,DIK
"RTN","DGREG",66,0)
 .S DA(1)=DFN,DA=DFN1,DIK="^DPT("_DFN_",""DIS"","
"RTN","DGREG",67,0)
 .D ^DIK
"RTN","DGREG",68,0)
 .W !!?5,"User Time-out.  Required registration data could be missing."
"RTN","DGREG",69,0)
 .W !,?5,"This registration has been deleted."
"RTN","DGREG",70,0)
 ; check whether facility applying to (division) is inactive
"RTN","DGREG",71,0)
 I '$$DIVCHK^DGREGFAC(DFN,DFN1) G CONT
"RTN","DGREG",72,0)
ASKDIV W !!?5,"The facility chosen either has no pointer to an Institution"
"RTN","DGREG",73,0)
 W !?5,"file record or the Institution file record is inactive."
"RTN","DGREG",74,0)
 W !?5,"Please choose another division."
"RTN","DGREG",75,0)
 S DA=DFN1,DIE("NO^")="",DA(1)=DFN,DP=2.101,DR="3" D ^DIE
"RTN","DGREG",76,0)
 I $$DIVCHK^DGREGFAC(DFN,DFN1) G ASKDIV
"RTN","DGREG",77,0)
CONT ; continue
"RTN","DGREG",78,0)
 S DGXXXD=1 D EL^DGREGE I $P(^DPT(DFN,"DIS",DFN1,0),"^",3)=4 S DA=DFN,DIE="^DPT(",DR=".368;.369" D ^DIE S DIE="^DPT("_DFN_",""DIS"",",DA(1)=DFN,DA=DFN1
"RTN","DGREG",79,0)
 S DA=DFN,DR="[DGREG]",DIE="^DPT(" D ^DIE K DIE("NO^")
"RTN","DGREG",80,0)
 I $D(^DPT(DFN,"DIS",DFN1,2)),$P(^(2),"^",1)="Y" S DIE="^DPT(",DR="[DG EMPLOYER]",DA=DFN D ^DIE
"RTN","DGREG",81,0)
 G ^DGREG0
"RTN","DGREG",82,0)
PR2 W !!,"You can only enter new registrations through this option.",$C(7),$C(7) G REG
"RTN","DGREG",83,0)
PR3 W !!,"Time is required to register the patient.",!!,$C(7),$C(7) G REG
"RTN","DGREG",84,0)
H W !?5,"Enter 'YES' to enter/edit registration data or 'NO' to continue." G A1
"RTN","DGREG",85,0)
Q K DG,DQ G Q1^DGREG0
"RTN","DGREG",86,0)
Q1 K DGIO,DGASKDEV,DGFC,DGCLRP,CURR,DGELVER,DGNEW Q
"RTN","DGREG",87,0)
EL S DR=DR_";13//" I $D(^DPT(DFN,.36)),$D(^DIC(8,+^(.36),0)) S DR=DR_$P(^(0),"^",1) Q
"RTN","DGREG",88,0)
 S DR=DR_"HUMANITARIAN EMERGENCY" Q
"RTN","DGREG",89,0)
FEE S DGRPFEE=1 D DGREG K DGRPFEE G Q1
"RTN","DGREG",90,0)
 ;
"RTN","DGREG",91,0)
EN1010T(DFN,DGNEWPF,DGDIV,DGIO,DGASKDEV,DG1010TF) ;Registration entry point for 10-10T
"RTN","DGREG",92,0)
 S DGNEW=DGNEWPF ;set new patient flag
"RTN","DGREG",93,0)
 I $G(DGASKDF) S DGASKDEV="" ;ask device flag
"RTN","DGREG",94,0)
 D A
"RTN","DGREG",95,0)
 K DFN1,DG1,DGMT,DGMTCOR,DGRGAUTO,DGWRT
"RTN","DGREG",96,0)
 G Q1
"RTN","DGREG",97,0)
 ;
"RTN","DGREG",98,0)
WARN I $S('$D(^DPT(DFN,.1)):0,$P(^(.1),"^",1)']"":0,1:1) W !,$C(7),"***PATIENT IS CURRENTLY AN INPATIENT***",! H 2
"RTN","DGREG",99,0)
 I $S('$D(^DPT(DFN,.107)):0,$P(^(.107),"^",1)']"":0,1:1) W !,$C(7),"***PATIENT IS CURRENTLY A LODGER***",! H 2
"RTN","DGREG",100,0)
 Q
"RTN","DGREG",101,0)
MSG W !,"Another user is editing, try later ..." G Q
"RTN","DGREG",102,0)
 ;
"RTN","DGREG",103,0)
BEGINREG(DFN) ;
"RTN","DGREG",104,0)
 ;Description: This is called at the begining of the registration process.
"RTN","DGREG",105,0)
 ;Concurrent processes can check the lock to determine if the patient is
"RTN","DGREG",106,0)
 ;currently being registered.
"RTN","DGREG",107,0)
 ;
"RTN","DGREG",108,0)
 Q:'$G(DFN) 0
"RTN","DGREG",109,0)
 I $$QRY^DGENQRY(DFN) W !!,"Enrollment/Eligibility Query sent ...",!!
"RTN","DGREG",110,0)
 L +^TMP(DFN,"REGISTRATION IN PROGRESS"):1
"RTN","DGREG",111,0)
 I $$LOCK^DGENPTA1(DFN) ;try to lock the patient record
"RTN","DGREG",112,0)
 Q
"RTN","DGREG",113,0)
 ;
"RTN","DGREG",114,0)
ENDREG(DFN) ;
"RTN","DGREG",115,0)
 ;Description: releases the lock obtained by calling BEGINREG.
"RTN","DGREG",116,0)
 ;
"RTN","DGREG",117,0)
 Q:'$G(DFN)
"RTN","DGREG",118,0)
 L -^TMP(DFN,"REGISTRATION IN PROGRESS")
"RTN","DGREG",119,0)
 D UNLOCK^DGENPTA1(DFN)
"RTN","DGREG",120,0)
 Q
"RTN","DGREG",121,0)
 ;
"RTN","DGREG",122,0)
IFREG(DFN) ;
"RTN","DGREG",123,0)
 ;Description: tests whether the lock set by BEGINREG is set
"RTN","DGREG",124,0)
 ;
"RTN","DGREG",125,0)
 ;Input:  DFN
"RTN","DGREG",126,0)
 ;Output:
"RTN","DGREG",127,0)
 ;      Function Value = 1 if lock is set, 0 otherwise
"RTN","DGREG",128,0)
 ;
"RTN","DGREG",129,0)
 N RETURN
"RTN","DGREG",130,0)
 Q:'$G(DFN) 0
"RTN","DGREG",131,0)
 L +^TMP(DFN,"REGISTRATION IN PROGRESS"):1
"RTN","DGREG",132,0)
 S RETURN='$T
"RTN","DGREG",133,0)
 L -^TMP(DFN,"REGISTRATION IN PROGRESS")
"RTN","DGREG",134,0)
 Q RETURN
"RTN","DGREG",135,0)
 Q
"RTN","DGREG",136,0)
CIRN ;MPI QUERY
"RTN","DGREG",137,0)
 ;check to see if CIRN PD/MPI is installed
"RTN","DGREG",138,0)
 N X S X="MPIFAPI" X ^%ZOSF("TEST") Q:'$T
"RTN","DGREG",139,0)
 K MPIFRTN
"RTN","DGREG",140,0)
 D MPIQ^MPIFAPI(DFN)
"RTN","DGREG",141,0)
 K MPIFRTN
"RTN","DGREG",142,0)
 Q
"RTN","DGREG",143,0)
ROMQRY ;
"RTN","DGREG",144,0)
 I +$G(DGNEW) D
"RTN","DGREG",145,0)
 . ; query LST for Patient Demographic Information if NEW patient and
"RTN","DGREG",146,0)
 . ; file into patient's record.
"RTN","DGREG",147,0)
 . N A
"RTN","DGREG",148,0)
 . I $$ROMQRY^DGROAPI(DFN) D
"RTN","DGREG",149,0)
 . . ;display busy message to interactive users
"RTN","DGREG",150,0)
 . .S DGMSG(1)="Data retrieval from LST site has been completed successfully"
"RTN","DGREG",151,0)
 . .S DGMSG(2)="Thank you for your patience."
"RTN","DGREG",152,0)
 . .D EN^DDIOL(.DGMSG) R A:5
"RTN","DGREG",153,0)
 . E  D
"RTN","DGREG",154,0)
 . . ;display busy message to interactive users
"RTN","DGREG",155,0)
 . .S DGMSG(1)="Data retrieval from LST site has not been successful."
"RTN","DGREG",156,0)
 . .S DGMSG(2)="Please continue the Registration Process."
"RTN","DGREG",157,0)
 . .D EN^DDIOL(.DGMSG) R A:5
"RTN","DGREG",158,0)
 . ;
"RTN","DGREG",159,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
IVM*2.0*102
"BLD",5847,0)
IVM*2.0*102^INCOME VERIFICATION MATCH^0^3050119^y
"BLD",5847,1,0)
^^1^1^3041105^
"BLD",5847,1,1,0)
Date of Death Enhancements
"BLD",5847,4,0)
^9.64PA^^
"BLD",5847,"ABPKG")
n
"BLD",5847,"INI")
PRE^IVM2A102
"BLD",5847,"INID")
^n^n
"BLD",5847,"INIT")
EP^IVM2B102
"BLD",5847,"KRN",0)
^9.67PA^8989.52^19
"BLD",5847,"KRN",.4,0)
.4
"BLD",5847,"KRN",.401,0)
.401
"BLD",5847,"KRN",.402,0)
.402
"BLD",5847,"KRN",.403,0)
.403
"BLD",5847,"KRN",.5,0)
.5
"BLD",5847,"KRN",.84,0)
.84
"BLD",5847,"KRN",3.6,0)
3.6
"BLD",5847,"KRN",3.8,0)
3.8
"BLD",5847,"KRN",9.2,0)
9.2
"BLD",5847,"KRN",9.8,0)
9.8
"BLD",5847,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",5847,"KRN",9.8,"NM",1,0)
IVMLDEM4^^0^B35742511
"BLD",5847,"KRN",9.8,"NM",2,0)
IVMLDEMC^^0^B10291539
"BLD",5847,"KRN",9.8,"NM",3,0)
IVMPREC8^^0^B29336358
"BLD",5847,"KRN",9.8,"NM",4,0)
IVMLDEMD^^0^B68878821
"BLD",5847,"KRN",9.8,"NM",5,0)
IVM2A102^^0^B3917071
"BLD",5847,"KRN",9.8,"NM",6,0)
IVM2B102^^0^B23069237
"BLD",5847,"KRN",9.8,"NM",7,0)
IVMPREC6^^0^B33426027
"BLD",5847,"KRN",9.8,"NM","B","IVM2A102",5)

"BLD",5847,"KRN",9.8,"NM","B","IVM2B102",6)

"BLD",5847,"KRN",9.8,"NM","B","IVMLDEM4",1)

"BLD",5847,"KRN",9.8,"NM","B","IVMLDEMC",2)

"BLD",5847,"KRN",9.8,"NM","B","IVMLDEMD",4)

"BLD",5847,"KRN",9.8,"NM","B","IVMPREC6",7)

"BLD",5847,"KRN",9.8,"NM","B","IVMPREC8",3)

"BLD",5847,"KRN",19,0)
19
"BLD",5847,"KRN",19,"NM",0)
^9.68A^^
"BLD",5847,"KRN",19.1,0)
19.1
"BLD",5847,"KRN",101,0)
101
"BLD",5847,"KRN",409.61,0)
409.61
"BLD",5847,"KRN",771,0)
771
"BLD",5847,"KRN",870,0)
870
"BLD",5847,"KRN",8989.51,0)
8989.51
"BLD",5847,"KRN",8989.52,0)
8989.52
"BLD",5847,"KRN",8994,0)
8994
"BLD",5847,"KRN","B",.4,.4)

"BLD",5847,"KRN","B",.401,.401)

"BLD",5847,"KRN","B",.402,.402)

"BLD",5847,"KRN","B",.403,.403)

"BLD",5847,"KRN","B",.5,.5)

"BLD",5847,"KRN","B",.84,.84)

"BLD",5847,"KRN","B",3.6,3.6)

"BLD",5847,"KRN","B",3.8,3.8)

"BLD",5847,"KRN","B",9.2,9.2)

"BLD",5847,"KRN","B",9.8,9.8)

"BLD",5847,"KRN","B",19,19)

"BLD",5847,"KRN","B",19.1,19.1)

"BLD",5847,"KRN","B",101,101)

"BLD",5847,"KRN","B",409.61,409.61)

"BLD",5847,"KRN","B",771,771)

"BLD",5847,"KRN","B",870,870)

"BLD",5847,"KRN","B",8989.51,8989.51)

"BLD",5847,"KRN","B",8989.52,8989.52)

"BLD",5847,"KRN","B",8994,8994)

"BLD",5847,"QUES",0)
^9.62^^
"BLD",5847,"REQB",0)
^9.611^1^1
"BLD",5847,"REQB",1,0)
IVM*2.0*56^2
"BLD",5847,"REQB","B","IVM*2.0*56",1)

"INI")
PRE^IVM2A102
"INIT")
EP^IVM2B102
"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
102^3050119
"PKG",220,22,1,"PAH",1,1,0)
^^1^1^3050119
"PKG",220,22,1,"PAH",1,1,1,0)
Date of Death Enhancements
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","IVM2A102")
0^5^B3917071
"RTN","IVM2A102",1,0)
IVM2A102 ;ALB/PJR - IVM*2.0*102 PRE-INSTALL ; 10/25/04 12:33pm
"RTN","IVM2A102",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**102**; 21-OCT-94
"RTN","IVM2A102",3,0)
 ;
"RTN","IVM2A102",4,0)
 Q
"RTN","IVM2A102",5,0)
PRE ; pre-install entry point
"RTN","IVM2A102",6,0)
 ; add 2 new entries to the 301.92 file
"RTN","IVM2A102",7,0)
 N FDA,DATA,ERR,XME,FLDNUM
"RTN","IVM2A102",8,0)
 S DATA=""
"RTN","IVM2A102",9,0)
 S XME="  >> Adding entries to IVM DEMOGRAPHIC UPLOAD FIELDS (#301.92) file"
"RTN","IVM2A102",10,0)
 D BMES^XPDUTL(XME)
"RTN","IVM2A102",11,0)
 D SOURCE(.DATA),UPDATE(.DATA)
"RTN","IVM2A102",12,0)
 D LAST(.DATA),UPDATE(.DATA)
"RTN","IVM2A102",13,0)
 ;;
"RTN","IVM2A102",14,0)
 D MES^XPDUTL("")
"RTN","IVM2A102",15,0)
 Q
"RTN","IVM2A102",16,0)
 ;
"RTN","IVM2A102",17,0)
SOURCE(DATA) ; setup fda array for Source of Notification for DOD
"RTN","IVM2A102",18,0)
 S DATA(.01)="SOURCE OF NOTIFICATION"
"RTN","IVM2A102",19,0)
 S DATA(.02)="ZPD31",DATA(.05)=.353,DATA(.04)=2
"RTN","IVM2A102",20,0)
 S (DATA(.03),DATA(.06),DATA(.07))=1,DATA(.08)=0
"RTN","IVM2A102",21,0)
 S (DATA(10),DATA(20))="S DR=.353 D LOOK^IVMPREC9"
"RTN","IVM2A102",22,0)
 Q
"RTN","IVM2A102",23,0)
 ;
"RTN","IVM2A102",24,0)
LAST(DATA) ; setup fda array for Last Updated Date for DOD
"RTN","IVM2A102",25,0)
 S DATA(.01)="DATE OF DEATH LAST UPDATED"
"RTN","IVM2A102",26,0)
 S DATA(.02)="ZPD32",DATA(.05)=.354,DATA(.04)=2
"RTN","IVM2A102",27,0)
 S (DATA(.03),DATA(.06),DATA(.07))=1,DATA(.08)=0
"RTN","IVM2A102",28,0)
 S (DATA(10),DATA(20))="S DR=.354 D LOOK^IVMPREC9"
"RTN","IVM2A102",29,0)
 Q
"RTN","IVM2A102",30,0)
 ;
"RTN","IVM2A102",31,0)
UPDATE(DATA) ;
"RTN","IVM2A102",32,0)
 I $$FIND1^DIC(301.92,"","X",$G(DATA(.01))) D ALREADY Q
"RTN","IVM2A102",33,0)
 S FLDNUM="" F  S FLDNUM=$O(DATA(FLDNUM)) Q:'FLDNUM  D ADD
"RTN","IVM2A102",34,0)
 D UPDATE^DIE("","FDA","","ERR")
"RTN","IVM2A102",35,0)
 I $D(ERR) D ERROR Q
"RTN","IVM2A102",36,0)
 D SUCCESS
"RTN","IVM2A102",37,0)
 K DATA
"RTN","IVM2A102",38,0)
 Q
"RTN","IVM2A102",39,0)
ADD ;;
"RTN","IVM2A102",40,0)
 S FDA(301.92,"+1,",FLDNUM)=$G(DATA(FLDNUM)) Q
"RTN","IVM2A102",41,0)
 ;
"RTN","IVM2A102",42,0)
ALREADY ;;
"RTN","IVM2A102",43,0)
 D BMES^XPDUTL("      *** "_$G(DATA(.01))_" entry already exists!") Q
"RTN","IVM2A102",44,0)
ERROR ;
"RTN","IVM2A102",45,0)
 D BMES^XPDUTL("   >>> ERROR! "_$G(DATA(.01))_" not added to file #301.92!")
"RTN","IVM2A102",46,0)
 I $D(ERR("DIERR",1))=11 D
"RTN","IVM2A102",47,0)
 .D MES^XPDUTL(ERR("DIERR",1)_": "_ERR("DIERR",1,"TEXT",1))
"RTN","IVM2A102",48,0)
 Q
"RTN","IVM2A102",49,0)
SUCCESS ;
"RTN","IVM2A102",50,0)
 D BMES^XPDUTL("      "_$G(DATA(.01))_" successfully added.") Q
"RTN","IVM2B102")
0^6^B23069237
"RTN","IVM2B102",1,0)
IVM2B102 ;ALB/PJR - IVM*2.0*102 POST-INSTALL ; 12/30/04 3:51pm
"RTN","IVM2B102",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**102**; 21-OCT-94
"RTN","IVM2B102",3,0)
 ;
"RTN","IVM2B102",4,0)
 ;This post install routine will loop through patient file (#2)
"RTN","IVM2B102",5,0)
 ;and trigger a Z07 message to the HEC system
"RTN","IVM2B102",6,0)
 ;for all entries that have a value in the DATE OF DEATH field (#.351)
"RTN","IVM2B102",7,0)
 ;and a value in the SOURCE OF NOTIFICATION field (#.353)
"RTN","IVM2B102",8,0)
 ;of 1, 2, 3, 4, 5, 8, or 9
"RTN","IVM2B102",9,0)
 Q
"RTN","IVM2B102",10,0)
 ;
"RTN","IVM2B102",11,0)
EP ;Entry point
"RTN","IVM2B102",12,0)
 N OK
"RTN","IVM2B102",13,0)
 D CHK Q:'OK
"RTN","IVM2B102",14,0)
 D MSG
"RTN","IVM2B102",15,0)
 D QUETASK
"RTN","IVM2B102",16,0)
 Q
"RTN","IVM2B102",17,0)
 ;
"RTN","IVM2B102",18,0)
QUETASK ;Queue the task
"RTN","IVM2B102",19,0)
 N TXT,ZTRTN,ZTDESC,ZTSK,ZTIO,ZTDTH
"RTN","IVM2B102",20,0)
 S ZTRTN="EP1^IVM2B102",ZTIO="",ZTDTH=$$NOW^XLFDT()
"RTN","IVM2B102",21,0)
 S ZTDESC="DOD ENHANCEMENT POST-INSTALL"
"RTN","IVM2B102",22,0)
 D ^%ZTLOAD S ^XTMP("IVM2B102","TASK")=ZTSK
"RTN","IVM2B102",23,0)
 S TXT(1)="Task: "_ZTSK_" Queued."
"RTN","IVM2B102",24,0)
 D BMES^XPDUTL(.TXT)
"RTN","IVM2B102",25,0)
 Q
"RTN","IVM2B102",26,0)
 ;
"RTN","IVM2B102",27,0)
EP1 ;Entry point
"RTN","IVM2B102",28,0)
 N X,XIEN,EVENT,IYR,ZCNT,ZIEN,ZEND,ZDATE,ZEDATE
"RTN","IVM2B102",29,0)
 L +^XTMP("IVM2B102"):1 E  Q
"RTN","IVM2B102",30,0)
 S X=$G(^XTMP("IVM2B102",0)),ZCNT=+X,ZIEN=+$P(X,U,4),ZEND=ZCNT+4999
"RTN","IVM2B102",31,0)
 S ZDATE=$$DT^XLFDT D IVM2
"RTN","IVM2B102",32,0)
 S ^XTMP("IVM2B102",0)=ZCNT_U_ZDATE_U_X_U_ZIEN
"RTN","IVM2B102",33,0)
 S $P(^XTMP("IVM2B102","DATE"),"^")=$$FMTE^XLFDT($$NOW^XLFDT(),"5P")
"RTN","IVM2B102",34,0)
 D LMINUS
"RTN","IVM2B102",35,0)
 ;Loop through patient file
"RTN","IVM2B102",36,0)
 F  S ZIEN=$O(^DPT(ZIEN)) Q:ZCNT>ZEND!('ZIEN)  D
"RTN","IVM2B102",37,0)
 .S X=$G(^DPT(ZIEN,.35)) I X,"^1^2^3^4^5^8^9^"[("^"_$P(X,"^",3)_"^") D
"RTN","IVM2B102",38,0)
 ..S IYR=$$INCYR(ZIEN) Q:IYR=""
"RTN","IVM2B102",39,0)
 ..Q:'$$LOG^IVMPLOG(ZIEN,IYR,.EVENT)  ;Queue Z07
"RTN","IVM2B102",40,0)
 ..S ZCNT=ZCNT+1 ;Tot Z07's queued
"RTN","IVM2B102",41,0)
 S $P(^XTMP("IVM2B102","DATE"),"^",2)=$$FMTE^XLFDT($$NOW^XLFDT(),"5P")
"RTN","IVM2B102",42,0)
 S ZDATE=$$DT^XLFDT,ZEDATE=$$FMTE^XLFDT(DT) D IVM2
"RTN","IVM2B102",43,0)
 S ^XTMP("IVM2B102",0)=ZCNT_U_ZDATE_U_X_U_(ZIEN-1)
"RTN","IVM2B102",44,0)
 I 'ZIEN S ^XTMP("IVM2B102","COMPLETED")=1 D MAIL
"RTN","IVM2B102",45,0)
 D IVM2 S X="The "_X_" process is complete"
"RTN","IVM2B102",46,0)
 I ZIEN S X=X_" for "_ZEDATE
"RTN","IVM2B102",47,0)
 S X=X_"." D BMES^XPDUTL(X)
"RTN","IVM2B102",48,0)
 Q
"RTN","IVM2B102",49,0)
 ;
"RTN","IVM2B102",50,0)
CHK ;check for completion
"RTN","IVM2B102",51,0)
 N TXT,TASKNUM,STAT
"RTN","IVM2B102",52,0)
 S OK=1 L +^XTMP("IVM2B102"):1 E  D  Q
"RTN","IVM2B102",53,0)
 .S OK=0 D IVM2 S TXT(1)=X_" process has a lock table"
"RTN","IVM2B102",54,0)
 .S TXT(2)="problem.  Nothing Done!"
"RTN","IVM2B102",55,0)
 .D BMES^XPDUTL(.TXT),LMINUS
"RTN","IVM2B102",56,0)
 ;
"RTN","IVM2B102",57,0)
 I $G(^XTMP("IVM2B102","COMPLETED")) D  Q
"RTN","IVM2B102",58,0)
 .S OK=0 D IVM2 S TXT(1)=X_" process was completed in a"
"RTN","IVM2B102",59,0)
 .S TXT(2)="previous run.  Nothing Done!"
"RTN","IVM2B102",60,0)
 .D BMES^XPDUTL(.TXT),LMINUS
"RTN","IVM2B102",61,0)
 ;
"RTN","IVM2B102",62,0)
 S X=$G(^XTMP("IVM2B102",0))
"RTN","IVM2B102",63,0)
 I $$DT^XLFDT=$P(X,U,2) D  Q
"RTN","IVM2B102",64,0)
 .S OK=0 D IVM2 S TXT(1)=X_" is complete for today."
"RTN","IVM2B102",65,0)
 .S TXT(2)="Please re-start tomorrow."
"RTN","IVM2B102",66,0)
 .D BMES^XPDUTL(.TXT),LMINUS
"RTN","IVM2B102",67,0)
 ;
"RTN","IVM2B102",68,0)
 S TASKNUM=$G(^XTMP("IVM2B102","TASK"))
"RTN","IVM2B102",69,0)
 I +TASKNUM D  Q
"RTN","IVM2B102",70,0)
 .S STAT=$$ACTIVE(TASKNUM)
"RTN","IVM2B102",71,0)
 .I STAT>0 D
"RTN","IVM2B102",72,0)
 ..S OK=0 D IVM2
"RTN","IVM2B102",73,0)
 ..S TXT(1)="Task: "_TASKNUM_" is currently running the"
"RTN","IVM2B102",74,0)
 ..S TXT(2)=X_" process."
"RTN","IVM2B102",75,0)
 ..S TXT(3)="Duplicate processes cannot be started."
"RTN","IVM2B102",76,0)
 ..D BMES^XPDUTL(.TXT)
"RTN","IVM2B102",77,0)
 .D LMINUS
"RTN","IVM2B102",78,0)
 ;
"RTN","IVM2B102",79,0)
 D LMINUS Q
"RTN","IVM2B102",80,0)
 ;
"RTN","IVM2B102",81,0)
MSG ;create bulletin message in install file.
"RTN","IVM2B102",82,0)
 N TXT
"RTN","IVM2B102",83,0)
 S TXT(1)="This Post Install routine will queue a Z07 HL7 message to be sent to the"
"RTN","IVM2B102",84,0)
 S TXT(2)="Health Eligibility Center (HEC) for all entries in the PATIENT (#2) file"
"RTN","IVM2B102",85,0)
 S TXT(3)="that have a value in the DATE OF DEATH (#.531) field and a"
"RTN","IVM2B102",86,0)
 S TXT(4)="SOURCE OF NOTIFICATION (#.533) value of 1, 2, 3, 4, 5, 8, or 9"
"RTN","IVM2B102",87,0)
 S TXT(5)=" "
"RTN","IVM2B102",88,0)
 D BMES^XPDUTL(.TXT)
"RTN","IVM2B102",89,0)
 Q
"RTN","IVM2B102",90,0)
 ;
"RTN","IVM2B102",91,0)
MAIL N SITE,STATN,SITENM,XMDUZ,XMSUB,XMY,XMTEXT,MSG
"RTN","IVM2B102",92,0)
 S SITE=$$SITE^VASITE,STATN=$P($G(SITE),"^",3),SITENM=$P($G(SITE),"^",2)
"RTN","IVM2B102",93,0)
 S:$$GET1^DIQ(869.3,"1,",.03,"I")'="P" STATN=STATN_" [TEST]"
"RTN","IVM2B102",94,0)
 D IVM2 S XMDUZ=X,XMSUB=XMDUZ_" - "_STATN_" (IVM*2.0*102)"
"RTN","IVM2B102",95,0)
 S (XMY(DUZ),XMY(.5))=""
"RTN","IVM2B102",96,0)
 S XMTEXT="MSG(" D IVM2
"RTN","IVM2B102",97,0)
 S MSG(1)="The "_X_" process"
"RTN","IVM2B102",98,0)
 S MSG(2)="has completed successfully."
"RTN","IVM2B102",99,0)
 S MSG(3)="Task: "_$G(^XTMP("IVM2B102","TASK"))
"RTN","IVM2B102",100,0)
 S MSG(4)=""
"RTN","IVM2B102",101,0)
 S MSG(5)="Site Station number: "_STATN
"RTN","IVM2B102",102,0)
 S MSG(6)="Site Name: "_SITENM
"RTN","IVM2B102",103,0)
 S MSG(7)=""
"RTN","IVM2B102",104,0)
 S MSG(8)="Final process started at     : "_$P($G(^XTMP("IVM2B102","DATE")),"^",1)
"RTN","IVM2B102",105,0)
 S MSG(8)="Final process completed at   : "_$P($G(^XTMP("IVM2B102","DATE")),"^",2)
"RTN","IVM2B102",106,0)
 S MSG(10)="Total Veterans queued for Z07: "_+$G(^XTMP("IVM2B102",0))
"RTN","IVM2B102",107,0)
 D ^XMD
"RTN","IVM2B102",108,0)
 Q
"RTN","IVM2B102",109,0)
 ;
"RTN","IVM2B102",110,0)
INCYR(XIEN) ;Get valid income year
"RTN","IVM2B102",111,0)
 N I,LMT,TMP,INCYR
"RTN","IVM2B102",112,0)
 I $D(^IVM(301.5,"APT",XIEN)) Q $O(^IVM(301.5,"APT",XIEN,""),-1)
"RTN","IVM2B102",113,0)
 F I=1,2,4 S LMT=$$LST^DGMTU(XIEN,,I) S:+$G(LMT) TMP($P(LMT,"^",2))=""
"RTN","IVM2B102",114,0)
 I $D(TMP) S LMT=$O(TMP(""),-1),INCYR=($E(LMT,1,3)-1)_"0000" Q INCYR
"RTN","IVM2B102",115,0)
 S INCYR=($E(DT,1,3)-1)_"0000"
"RTN","IVM2B102",116,0)
 Q INCYR
"RTN","IVM2B102",117,0)
 ;
"RTN","IVM2B102",118,0)
ACTIVE(TASK) ;Checks if task is running
"RTN","IVM2B102",119,0)
 ;  input  --  The taskman ID
"RTN","IVM2B102",120,0)
 ;  output --  1=The task is running
"RTN","IVM2B102",121,0)
 ;             0=The task is not running
"RTN","IVM2B102",122,0)
 N STAT,ZTSK,Y
"RTN","IVM2B102",123,0)
 S STAT=0,ZTSK=+TASK
"RTN","IVM2B102",124,0)
 D STAT^%ZTLOAD
"RTN","IVM2B102",125,0)
 S Y=ZTSK(1)
"RTN","IVM2B102",126,0)
 I Y=0 S STAT=-1
"RTN","IVM2B102",127,0)
 I ",1,2,"[(","_Y_",") S STAT=1
"RTN","IVM2B102",128,0)
 I ",3,5,"[(","_Y_",") S STAT=0
"RTN","IVM2B102",129,0)
 Q STAT
"RTN","IVM2B102",130,0)
IVM2 S X="IVM*2.0*102 DOD Post-Install transmit Z07's to HEC" Q
"RTN","IVM2B102",131,0)
LMINUS L -^XTMP("IVM2B102") Q
"RTN","IVMLDEM4")
0^1^B35742511
"RTN","IVMLDEM4",1,0)
IVMLDEM4 ;ALB/KCL,PJR - IVM DEMOGRAPHIC UPLOAD/DELETE FIELDS ; 11/22/04 2:27pm
"RTN","IVMLDEM4",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**5,10,56,102**; 21-OCT-94
"RTN","IVMLDEM4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMLDEM4",4,0)
 ;
"RTN","IVMLDEM4",5,0)
 ;
"RTN","IVMLDEM4",6,0)
UF ; - (action) select uploadable demographic fields for filing
"RTN","IVMLDEM4",7,0)
 ;
"RTN","IVMLDEM4",8,0)
 ;  Input:  IVMWHERE  --  as where the action is coming from 
"RTN","IVMLDEM4",9,0)
 ;
"RTN","IVMLDEM4",10,0)
 ;                    --  If action from UPLOADABLE list:
"RTN","IVMLDEM4",11,0)
 ;                          array of uploadable fields as
"RTN","IVMLDEM4",12,0)
 ;                          ^TMP("IVMUPLOAD",$J,"IDX",CTR,CTR)=dfn^da(2)^da(1)^da^ivm field value^pointer to file (#1)^dhcp field number^dhcp field name
"RTN","IVMLDEM4",13,0)
 ;
"RTN","IVMLDEM4",14,0)
 ;
"RTN","IVMLDEM4",15,0)
 ; - generic seletor used within list manager action
"RTN","IVMLDEM4",16,0)
 N VALMY,IVMDOD S IVMDOD=0
"RTN","IVMLDEM4",17,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IVMLDEM4",18,0)
 Q:'$D(VALMY)
"RTN","IVMLDEM4",19,0)
 ;
"RTN","IVMLDEM4",20,0)
 N IVMPKDOD D CHECKS,CHECKDOD
"RTN","IVMLDEM4",21,0)
 ;
"RTN","IVMLDEM4",22,0)
 S IVMENT4=0 F  S IVMENT4=$O(VALMY(IVMENT4)) Q:'IVMENT4  D
"RTN","IVMLDEM4",23,0)
 .;
"RTN","IVMLDEM4",24,0)
 .S IVMINDEX=$G(^TMP("IVMUPLOAD",$J,"IDX",IVMENT4,IVMENT4)) I IVMINDEX']"" Q
"RTN","IVMLDEM4",25,0)
 .;
"RTN","IVMLDEM4",26,0)
 .; - check to see if selection is an address field
"RTN","IVMLDEM4",27,0)
 .S IVMADDR=$$ADDR^IVMLDEM6(+IVMINDEX,$P(IVMINDEX,"^",2),$P(IVMINDEX,"^",3),$P(IVMINDEX,"^",4),IVMPPICK)
"RTN","IVMLDEM4",28,0)
 .;
"RTN","IVMLDEM4",29,0)
 .Q:IVMADDR
"RTN","IVMLDEM4",30,0)
 .;
"RTN","IVMLDEM4",31,0)
 .; - check to see if selection is a Date of Death field
"RTN","IVMLDEM4",32,0)
 .I IVMPKDOD S IVMDOD=$$DOD^IVMLDEMD(+IVMINDEX,$P(IVMINDEX,"^",2),$P(IVMINDEX,"^",3),$P(IVMINDEX,"^",4))
"RTN","IVMLDEM4",33,0)
 .;
"RTN","IVMLDEM4",34,0)
 .Q:IVMDOD
"RTN","IVMLDEM4",35,0)
 .;
"RTN","IVMLDEM4",36,0)
 .; - ask user if they are sure they want to update field
"RTN","IVMLDEM4",37,0)
 .D RUSURE^IVMLDEMU($P(IVMINDEX,"^",8),"update") I IVMOUT!'IVMSURE Q
"RTN","IVMLDEM4",38,0)
 .;
"RTN","IVMLDEM4",39,0)
 .W !,"Updating "_$P(IVMINDEX,"^",8)_" field... "
"RTN","IVMLDEM4",40,0)
 .;
"RTN","IVMLDEM4",41,0)
 .; - upload value received from IVM into DHCP field
"RTN","IVMLDEM4",42,0)
 .D UPLOAD^IVMLDEMU(DFN,$P(IVMINDEX,"^",6),$P(IVMINDEX,"^",7),$P(IVMINDEX,"^",5))
"RTN","IVMLDEM4",43,0)
 .;
"RTN","IVMLDEM4",44,0)
 .; - remove entry from file (#301.5)
"RTN","IVMLDEM4",45,0)
 .D DELENT^IVMLDEMU($P(IVMINDEX,"^",2),$P(IVMINDEX,"^",3),$P(IVMINDEX,"^",4)) W "completed."
"RTN","IVMLDEM4",46,0)
 .;
"RTN","IVMLDEM4",47,0)
 ;
"RTN","IVMLDEM4",48,0)
 ; - hold display before building list
"RTN","IVMLDEM4",49,0)
 D PAUSE^VALM1
"RTN","IVMLDEM4",50,0)
 ;
"RTN","IVMLDEM4",51,0)
 ; - init the list and re-display to the user
"RTN","IVMLDEM4",52,0)
 D INIT^IVMLDEM2
"RTN","IVMLDEM4",53,0)
 ;
"RTN","IVMLDEM4",54,0)
DEQ ; clean-up variables
"RTN","IVMLDEM4",55,0)
 D QACTION
"RTN","IVMLDEM4",56,0)
 Q
"RTN","IVMLDEM4",57,0)
 ;
"RTN","IVMLDEM4",58,0)
 ;
"RTN","IVMLDEM4",59,0)
DF ; - (action) select uploadable/non-uploadable demographic fields for deletion
"RTN","IVMLDEM4",60,0)
 ;
"RTN","IVMLDEM4",61,0)
 ;  Input:  IVMWHERE  --  as where the action is coming from 
"RTN","IVMLDEM4",62,0)
 ;
"RTN","IVMLDEM4",63,0)
 ;                    --  If action from UPLOADABLE list:
"RTN","IVMLDEM4",64,0)
 ;                          array of uploadable fields as
"RTN","IVMLDEM4",65,0)
 ;                          ^TMP("IVMUPLOAD",$J,"IDX",CTR,CTR)=dfn^da(2)^da(1)^da^ivm field value^pointer to file (#1)^dhcp field number^dhcp field name
"RTN","IVMLDEM4",66,0)
 ;
"RTN","IVMLDEM4",67,0)
 ;                        OR
"RTN","IVMLDEM4",68,0)
 ;
"RTN","IVMLDEM4",69,0)
 ;                    --  If action from NON-UPLOADABLE list:
"RTN","IVMLDEM4",70,0)
 ;                          array of non-uploadable fields as
"RTN","IVMLDEM4",71,0)
 ;                          ^TMP("IVMNONUP",$J,"IDX",CTR,CTR)=dfn^da(2)^da(1)^da^ivm field value^pointer to file (#1)^dhcp field number^dhcp field name
"RTN","IVMLDEM4",72,0)
 ;
"RTN","IVMLDEM4",73,0)
 ;
"RTN","IVMLDEM4",74,0)
 ; Output:  None
"RTN","IVMLDEM4",75,0)
 ;
"RTN","IVMLDEM4",76,0)
 ; - generic seletor used within list manager action
"RTN","IVMLDEM4",77,0)
 N VALMY
"RTN","IVMLDEM4",78,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IVMLDEM4",79,0)
 Q:'$D(VALMY)
"RTN","IVMLDEM4",80,0)
 ;
"RTN","IVMLDEM4",81,0)
 ; - determine array depending on variable IVMWHERE
"RTN","IVMLDEM4",82,0)
 S IVMARRAY=$S(IVMWHERE="UP":"IVMUPLOAD",1:"IVMNONUP")
"RTN","IVMLDEM4",83,0)
 ;
"RTN","IVMLDEM4",84,0)
 N IVMPKDOD D CHECKS,CHECKDOD
"RTN","IVMLDEM4",85,0)
 ;
"RTN","IVMLDEM4",86,0)
 S IVMENT4=0 F  S IVMENT4=$O(VALMY(IVMENT4)) Q:'IVMENT4  D
"RTN","IVMLDEM4",87,0)
 .;
"RTN","IVMLDEM4",88,0)
 .I IVMWHERE="NON" D DF^IVMLDEM8 Q  ; non-uploadable fields
"RTN","IVMLDEM4",89,0)
 .;
"RTN","IVMLDEM4",90,0)
 .; - get selected entry for uploadable fields
"RTN","IVMLDEM4",91,0)
 .S IVMINDEX=$G(^TMP(IVMARRAY,$J,"IDX",IVMENT4,IVMENT4)) Q:IVMINDEX']""
"RTN","IVMLDEM4",92,0)
 .;
"RTN","IVMLDEM4",93,0)
 .; - check to see if selection is an address field
"RTN","IVMLDEM4",94,0)
 .S IVMADDR=$$ADDR^IVMLDEM7(+IVMINDEX,$P(IVMINDEX,"^",2),$P(IVMINDEX,"^",3),$P(IVMINDEX,"^",4),IVMPPICK)
"RTN","IVMLDEM4",95,0)
 .;
"RTN","IVMLDEM4",96,0)
 .Q:IVMADDR
"RTN","IVMLDEM4",97,0)
 .;
"RTN","IVMLDEM4",98,0)
 .; - ask user if they are sure they want to delete field
"RTN","IVMLDEM4",99,0)
 .D RUSURE^IVMLDEMU($P(IVMINDEX,"^",8),"delete") I IVMOUT!'IVMSURE Q
"RTN","IVMLDEM4",100,0)
 .;
"RTN","IVMLDEM4",101,0)
 .W !,"Deleting "_$P(IVMINDEX,"^",8)_" field from the list... "
"RTN","IVMLDEM4",102,0)
 .;
"RTN","IVMLDEM4",103,0)
 .;if Date of Death is Deleted, send bulletin
"RTN","IVMLDEM4",104,0)
 .I IVMPKDOD D BULLETIN S IVMPKDOD=0
"RTN","IVMLDEM4",105,0)
 .;- remove entry from file (#301.5)
"RTN","IVMLDEM4",106,0)
 .D DELENT^IVMLDEMU($P(IVMINDEX,"^",2),$P(IVMINDEX,"^",3),$P(IVMINDEX,"^",4)) W "completed."
"RTN","IVMLDEM4",107,0)
 ;
"RTN","IVMLDEM4",108,0)
 ; - hold display before re-building list
"RTN","IVMLDEM4",109,0)
 D PAUSE^VALM1
"RTN","IVMLDEM4",110,0)
 ;
"RTN","IVMLDEM4",111,0)
 ; - init the list and re-display to the user
"RTN","IVMLDEM4",112,0)
 D @$S(IVMWHERE="UP":"INIT^IVMLDEM2",1:"INIT^IVMLDEM3")
"RTN","IVMLDEM4",113,0)
 ;
"RTN","IVMLDEM4",114,0)
DFQ ; clean-up variables
"RTN","IVMLDEM4",115,0)
 D QACTION
"RTN","IVMLDEM4",116,0)
 Q
"RTN","IVMLDEM4",117,0)
 ;
"RTN","IVMLDEM4",118,0)
 ;
"RTN","IVMLDEM4",119,0)
CHECKS ; check if residence phone number selected
"RTN","IVMLDEM4",120,0)
 ; check if another address field selected
"RTN","IVMLDEM4",121,0)
 ; IVMPPICK=0 phone or an address field not selected
"RTN","IVMLDEM4",122,0)
 ;          1 address field(s) selected
"RTN","IVMLDEM4",123,0)
 ;          2 phone selected
"RTN","IVMLDEM4",124,0)
 ;          3 both address field(s) and phone selected
"RTN","IVMLDEM4",125,0)
 ;
"RTN","IVMLDEM4",126,0)
 N IVMPPIC1,IVMPPIC2
"RTN","IVMLDEM4",127,0)
 S (IVMPPICK,IVMPPIC2)=0
"RTN","IVMLDEM4",128,0)
 Q:IVMWHERE'="UP"
"RTN","IVMLDEM4",129,0)
 S IVMENT4=0 F  S IVMENT4=$O(VALMY(IVMENT4)) Q:'IVMENT4  D
"RTN","IVMLDEM4",130,0)
 .I $G(^TMP("IVMUPLOAD",$J,"IDX",IVMENT4,IVMENT4))["PHONE NUMBER [RESIDENCE]" S IVMPPICK=2 Q
"RTN","IVMLDEM4",131,0)
 .S IVMINDEX=$G(^TMP("IVMUPLOAD",$J,"IDX",IVMENT4,IVMENT4)) I IVMINDEX']"" Q
"RTN","IVMLDEM4",132,0)
 .S IVMPPIC1=+$G(^IVM(301.5,+$P(IVMINDEX,"^",2),"IN",+$P(IVMINDEX,"^",3),"DEM",+$P(IVMINDEX,"^",4),0)) Q:'IVMPPIC1
"RTN","IVMLDEM4",133,0)
 .S:$D(^IVM(301.92,"AD",+IVMPPIC1)) IVMPPIC2=1
"RTN","IVMLDEM4",134,0)
 .Q
"RTN","IVMLDEM4",135,0)
 S IVMPPICK=IVMPPICK+IVMPPIC2
"RTN","IVMLDEM4",136,0)
 Q
"RTN","IVMLDEM4",137,0)
 ;
"RTN","IVMLDEM4",138,0)
CHECKDOD ; check if date of death was selected
"RTN","IVMLDEM4",139,0)
 ; IVMPKDOD=0 date of death not selected
"RTN","IVMLDEM4",140,0)
 ;          1 date of death selected
"RTN","IVMLDEM4",141,0)
 ;
"RTN","IVMLDEM4",142,0)
 N IVMPPIC1,IVMPPIC2,CKST
"RTN","IVMLDEM4",143,0)
 S (IVMPKDOD,IVMPPIC2)=0
"RTN","IVMLDEM4",144,0)
 Q:IVMWHERE'="UP"
"RTN","IVMLDEM4",145,0)
 S IVMENT4=0 F  S IVMENT4=$O(VALMY(IVMENT4)) Q:'IVMENT4  D
"RTN","IVMLDEM4",146,0)
 .S CKST=$G(^TMP("IVMUPLOAD",$J,"IDX",IVMENT4,IVMENT4))
"RTN","IVMLDEM4",147,0)
 .I CKST["DATE OF DEATH"!(CKST["SOURCE OF NOTIFICATION")!(CKST["DATE OF DEATH LAST UPDATED") S IVMPKDOD=1 Q
"RTN","IVMLDEM4",148,0)
 Q
"RTN","IVMLDEM4",149,0)
BULLETIN ; Non-Acceptance of Date of Death Data Bulletin
"RTN","IVMLDEM4",150,0)
 N DGBULL,DGLINE,DGMGRP,DGNAME,DIFROM,VA,VAERR,XMTEXT,XMSUB,XMDUZ
"RTN","IVMLDEM4",151,0)
 S DGMGRP=$O(^XMB(3.8,"B","DGEN ELIGIBILITY ALERT",""))
"RTN","IVMLDEM4",152,0)
 Q:'DGMGRP
"RTN","IVMLDEM4",153,0)
 D XMY^DGMTUTL(DGMGRP,0,1)
"RTN","IVMLDEM4",154,0)
 S DGNAME=$P($G(^DPT(DFN,0)),"^"),DGSSN=$P($G(^DPT(DFN,0)),"^",9)
"RTN","IVMLDEM4",155,0)
 S XMTEXT="DGBULL("
"RTN","IVMLDEM4",156,0)
 S XMSUB="NON-ACCEPTANCE OF DATE OF DEATH DATA"
"RTN","IVMLDEM4",157,0)
 S DGLINE=0
"RTN","IVMLDEM4",158,0)
 D LINE^DGEN("Patient: "_DGNAME,.DGLINE)
"RTN","IVMLDEM4",159,0)
 D LINE^DGEN("SSN: "_DGSSN,.DGLINE)
"RTN","IVMLDEM4",160,0)
 D LINE^DGEN("",.DGLINE)
"RTN","IVMLDEM4",161,0)
 D LINE^DGEN("This Veteran's Enrollment Record contains a Date of Death,",.DGLINE)
"RTN","IVMLDEM4",162,0)
 D LINE^DGEN("however, you did not upload this information into VistA.",.DGLINE)
"RTN","IVMLDEM4",163,0)
 D LINE^DGEN("Contact the HEC by phone or by fax with the reason for",.DGLINE)
"RTN","IVMLDEM4",164,0)
 D LINE^DGEN("non-acceptance.  The HEC will delete erroneous Date of Death",.DGLINE)
"RTN","IVMLDEM4",165,0)
 D LINE^DGEN("information and update the veteran's enrollment record.",.DGLINE)
"RTN","IVMLDEM4",166,0)
 D ^XMD
"RTN","IVMLDEM4",167,0)
 Q
"RTN","IVMLDEM4",168,0)
QACTION ; - kill variables used from all protocols
"RTN","IVMLDEM4",169,0)
 S VALMBCK="R"
"RTN","IVMLDEM4",170,0)
 K IVMADDR,IVMARRAY,IVMENT4,IVMINDEX,IVMOUT,IVMPPICK,IVMSURE
"RTN","IVMLDEM4",171,0)
 Q
"RTN","IVMLDEMC")
0^2^B10291539
"RTN","IVMLDEMC",1,0)
IVMLDEMC ;ALB/BRM/PJR - IVM UPLOAD DEMO CLEAN-UP ; 10/21/04 11:36am
"RTN","IVMLDEMC",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**79,102**; 21-OCT-94
"RTN","IVMLDEMC",3,0)
 ;
"RTN","IVMLDEMC",4,0)
 Q
"RTN","IVMLDEMC",5,0)
EN(ADDRDT) ; entry point
"RTN","IVMLDEMC",6,0)
 N IVMDA,IVMDA1,IVMDA2,SEG
"RTN","IVMLDEMC",7,0)
 N X1,X2,Y,SSN,DFN
"RTN","IVMLDEMC",8,0)
 D FNDSEG(.SEG)
"RTN","IVMLDEMC",9,0)
 S IVMDA2=0
"RTN","IVMLDEMC",10,0)
 F  S IVMDA2=$O(^IVM(301.5,IVMDA2)) Q:IVMDA2=""  D
"RTN","IVMLDEMC",11,0)
 .S DFN=$P($G(^IVM(301.5,IVMDA2,0)),"^"),IVMDA1=0
"RTN","IVMLDEMC",12,0)
 .Q:('DFN)!('$D(^DPT(+DFN)))!('$D(^IVM(301.5,IVMDA2,"IN")))
"RTN","IVMLDEMC",13,0)
 .F  S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1)) Q:'IVMDA1  D
"RTN","IVMLDEMC",14,0)
 ..D LOOP(DFN,IVMDA2,IVMDA1,.SEG,.ADDRDT)
"RTN","IVMLDEMC",15,0)
 ..; if no display or uploadable fields, delete PID segment
"RTN","IVMLDEMC",16,0)
 ..I ('$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,0))&('$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,1)) D DELETE^IVMLDEM5(IVMDA2,IVMDA1," ")
"RTN","IVMLDEMC",17,0)
 Q
"RTN","IVMLDEMC",18,0)
LOOP(DFN,IVMDA2,IVMDA1,SEG,ADDRDT) ;
"RTN","IVMLDEMC",19,0)
 N SEGNUM,X,X1,X2,%Y
"RTN","IVMLDEMC",20,0)
 Q:'$D(SEG)
"RTN","IVMLDEMC",21,0)
 S (SEGNUM,SEGNAM)=""
"RTN","IVMLDEMC",22,0)
 F  S SEGNAM=$O(SEG(SEGNAM)) Q:SEGNAM']""  D
"RTN","IVMLDEMC",23,0)
 .S SEGNUM=$P($G(SEG(SEGNAM)),"^"),IVMTYPE=+$P($G(SEG(SEGNAM)),"^",2)
"RTN","IVMLDEMC",24,0)
 .S IVMDA=""
"RTN","IVMLDEMC",25,0)
 .F  S IVMDA=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",SEGNUM,IVMDA)) Q:'IVMDA  D
"RTN","IVMLDEMC",26,0)
 ..S IVMDAT=$P($G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMDA,0)),"^",3)
"RTN","IVMLDEMC",27,0)
 ..; ignore recent uploads if this is the one-time clean-up
"RTN","IVMLDEMC",28,0)
 ..I (IVMDAT&'$G(ADDRDT(IVMTYPE)))!($G(ADDRDT(IVMTYPE))&'IVMDAT) Q
"RTN","IVMLDEMC",29,0)
 ..; quit if # of days has not passed yet (doesn't apply to EN tag)
"RTN","IVMLDEMC",30,0)
 ..I $G(ADDRDT(IVMTYPE)),IVMDAT S X1=$$DT^XLFDT,X2=IVMDAT D ^%DTC Q:X<ADDRDT(IVMTYPE)
"RTN","IVMLDEMC",31,0)
 ..;process fields that are selectively deleted
"RTN","IVMLDEMC",32,0)
 ..Q:'$$RULES(DFN,SEGNAM)
"RTN","IVMLDEMC",33,0)
 ..I IVMTYPE,$G(ADDRDT(IVMTYPE)) D AUTOLOAD^IVMLDEM9(DFN,IVMDA2,IVMDA1)
"RTN","IVMLDEMC",34,0)
 ..; remove entry from (#301.511) sub-file
"RTN","IVMLDEMC",35,0)
 ..D DELETE^IVMLDEM5(IVMDA2,IVMDA1," "),DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMDA)
"RTN","IVMLDEMC",36,0)
 Q
"RTN","IVMLDEMC",37,0)
RULES(DFN,SEGNAM) ;can this data element be deleted?
"RTN","IVMLDEMC",38,0)
 Q:SEGNAM'="ZPD09" 1
"RTN","IVMLDEMC",39,0)
 Q:'$G(DFN) 0
"RTN","IVMLDEMC",40,0)
 N VADM
"RTN","IVMLDEMC",41,0)
 D DEM^VADPT
"RTN","IVMLDEMC",42,0)
 Q:$G(VADM(6))]"" 1  ;delete dod if present in Patient file (#2)
"RTN","IVMLDEMC",43,0)
 Q 0
"RTN","IVMLDEMC",44,0)
 ;
"RTN","IVMLDEMC",45,0)
FNDSEG(SEG) ;
"RTN","IVMLDEMC",46,0)
 N SEGLOC,LINE,QUIT,TAG,SEGDAT,PIECE
"RTN","IVMLDEMC",47,0)
 S LINE=1,SEGDAT="",QUIT=0
"RTN","IVMLDEMC",48,0)
 F  S LINE=LINE+1 Q:$G(QUIT)  D
"RTN","IVMLDEMC",49,0)
 .S TAG="DATA+"_LINE,SEGDAT=$P($T(@(TAG)),";;",2)
"RTN","IVMLDEMC",50,0)
 .I SEGDAT']"" S QUIT=1 Q
"RTN","IVMLDEMC",51,0)
 .F PIECE=1:1:10 Q:$P(SEGDAT,"~",PIECE)=""  D
"RTN","IVMLDEMC",52,0)
 ..S SEGLOC=$P(SEGDAT,"~",PIECE) Q:'$D(^IVM(301.92,"C",SEGLOC))
"RTN","IVMLDEMC",53,0)
 ..S SEG(SEGLOC)=$O(^IVM(301.92,"C",SEGLOC,""))
"RTN","IVMLDEMC",54,0)
 ..Q:'$G(SEG(SEGLOC))
"RTN","IVMLDEMC",55,0)
 ..S $P(SEG(SEGLOC),"^",2)=$P($G(^IVM(301.92,SEG(SEGLOC),0)),"^",8)
"RTN","IVMLDEMC",56,0)
 Q
"RTN","IVMLDEMC",57,0)
 ;
"RTN","IVMLDEMC",58,0)
DATA ;;  do not modify below values!  They are used to set-up the array
"RTN","IVMLDEMC",59,0)
 ;;  that determines the fields to delete and/or process
"RTN","IVMLDEMC",60,0)
 ;;PID111~PID112~PID113~PID114~PID115~PID12~PID13~RF171~ZPD09~ZPD13
"RTN","IVMLDEMC",61,0)
 ;;ZGD03~ZGD04~ZGD05~ZGD061~ZGD062~ZGD063~ZGD064~ZGD065~ZGD07~ZGD08
"RTN","IVMLDEMC",62,0)
 ;;ZPD08~ZPD12~ZPD13~ZEL02~ZEL06~ZPD31~ZPD32
"RTN","IVMLDEMC",63,0)
 ;;
"RTN","IVMLDEMC",64,0)
 ;; end of data (do not remove or modify above "blank" line)
"RTN","IVMLDEMD")
0^4^B68878821
"RTN","IVMLDEMD",1,0)
IVMLDEMD ;ALB/PJR - IVM DEMOGRAPHIC UPLOAD FILE DATE OF DEATH FIELDS ; 1/3/05 1:33pm
"RTN","IVMLDEMD",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**102**; 21-OCT-94
"RTN","IVMLDEMD",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMLDEMD",4,0)
 ;
"RTN","IVMLDEMD",5,0)
 ;
"RTN","IVMLDEMD",6,0)
DOD(DFN,IVMDA2,IVMDA1,IVMDA) ; function to upload Date of Death
"RTN","IVMLDEMD",7,0)
 ;                                   fields and return a flag
"RTN","IVMLDEMD",8,0)
 ;
"RTN","IVMLDEMD",9,0)
 ;  Input:      DFN  -  as patient IEN
"RTN","IVMLDEMD",10,0)
 ;           IVMDA2  -  pointer to case record in (#301.5) file
"RTN","IVMLDEMD",11,0)
 ;           IVMDA1  -  pointer to PID msg in (#301.501) sub-file
"RTN","IVMLDEMD",12,0)
 ;            IVMDA  -  pointer to record in (#301.511) sub-file
"RTN","IVMLDEMD",13,0)
 ;
"RTN","IVMLDEMD",14,0)
 ; Output: IVMFLAG   -  1 if a Date of Death Field
"RTN","IVMLDEMD",15,0)
 ;                      0 if not a Date of Death field
"RTN","IVMLDEMD",16,0)
 ;
"RTN","IVMLDEMD",17,0)
 ;
"RTN","IVMLDEMD",18,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,Y,DODFIELD,DELDATA,CKDEL,DGDAUTO
"RTN","IVMLDEMD",19,0)
 ;
"RTN","IVMLDEMD",20,0)
 ; - initialize flags
"RTN","IVMLDEMD",21,0)
 S IVMFLAG=0
"RTN","IVMLDEMD",22,0)
 ;
"RTN","IVMLDEMD",23,0)
 ; - check for required parameters
"RTN","IVMLDEMD",24,0)
 I '$G(DFN)!('$G(IVMDA))!('$G(IVMDA1))!'($G(IVMDA2)) G DODQ
"RTN","IVMLDEMD",25,0)
 ;
"RTN","IVMLDEMD",26,0)
 ; - get pointer to (#301.92) file from (#301.511) sub-file
"RTN","IVMLDEMD",27,0)
 S IVMPTR=+$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMDA,0)) G DODQ:'IVMPTR
"RTN","IVMLDEMD",28,0)
 ;
"RTN","IVMLDEMD",29,0)
ASK ;;
"RTN","IVMLDEMD",30,0)
 D CKDEL I CKDEL G DODDEL
"RTN","IVMLDEMD",31,0)
 W ! S DIR("A")="Do you wish to proceed with this action"
"RTN","IVMLDEMD",32,0)
 S DIR("A",1)="You have selected to update a Date of Death field."
"RTN","IVMLDEMD",33,0)
 S DIR("A",2)="All Date of Death Fields will be uploaded."
"RTN","IVMLDEMD",34,0)
 S DIR("?")="Enter 'YES' to continue or 'NO' to abort."
"RTN","IVMLDEMD",35,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEMD",36,0)
 D ^DIR K DIR
"RTN","IVMLDEMD",37,0)
 S IVMFLAG=1 G DODQ:'Y
"RTN","IVMLDEMD",38,0)
 W !,"Filing Date of Death fields... "
"RTN","IVMLDEMD",39,0)
 ;
"RTN","IVMLDEMD",40,0)
 ;
"RTN","IVMLDEMD",41,0)
LOOP ; - loop through DOD fields
"RTN","IVMLDEMD",42,0)
 S (DGDAUTO,IVMDODUP)=1
"RTN","IVMLDEMD",43,0)
 F DODFIELD="ZPD09","ZPD31","ZPD32" D
"RTN","IVMLDEMD",44,0)
 .S IVMI=$O(^IVM(301.92,"C",DODFIELD,"")) I IVMI="" Q
"RTN","IVMLDEMD",45,0)
 .S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,"")) Q:IVMJ']""  D
"RTN","IVMLDEMD",46,0)
 ..;
"RTN","IVMLDEMD",47,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",48,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0)) Q:'(+IVMNODE)
"RTN","IVMLDEMD",49,0)
 ..I DODFIELD="ZPD31",$P(IVMNODE,"^",2)=""!($P(IVMNODE,"^",2)<1)!($P(IVMNODE,"^",2)>9) S $P(IVMNODE,"^",2)="@"
"RTN","IVMLDEMD",50,0)
 ..I DODFIELD'="ZPD31",$P(IVMNODE,"^",2)=""!($E($P(IVMNODE,"^",2),1,7)'?1.7N) S $P(IVMNODE,"^",2)="@"
"RTN","IVMLDEMD",51,0)
 ..;
"RTN","IVMLDEMD",52,0)
 ..;   load Date of Death field rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEMD",53,0)
 ..D UPLOAD(+DFN,$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),$P(IVMNODE,"^",2)) S IVMFLAG=1
"RTN","IVMLDEMD",54,0)
 ..;
"RTN","IVMLDEMD",55,0)
 ..; - remove entry from (#301.511) sub-file
"RTN","IVMLDEMD",56,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEMD",57,0)
 ;
"RTN","IVMLDEMD",58,0)
 I IVMFLAG D  W "completed.",!
"RTN","IVMLDEMD",59,0)
 .D UPLOAD(+DFN,.355,$S($G(DUZ):DUZ,1:.5))
"RTN","IVMLDEMD",60,0)
 D DISCHRGE^DGDEATH,XFR^DGDEATH
"RTN","IVMLDEMD",61,0)
 K IVMDODUP
"RTN","IVMLDEMD",62,0)
 ;                                                                    
"RTN","IVMLDEMD",63,0)
 S VALMBCK="R"
"RTN","IVMLDEMD",64,0)
 ;
"RTN","IVMLDEMD",65,0)
 G DODQ
"RTN","IVMLDEMD",66,0)
 ;
"RTN","IVMLDEMD",67,0)
DODDEL ;
"RTN","IVMLDEMD",68,0)
 W ! S DIR("A")="Do you wish to proceed with this action"
"RTN","IVMLDEMD",69,0)
 S DIR("A",1)="You have selected to update a DELETION of a Date of Death field."
"RTN","IVMLDEMD",70,0)
 S DIR("A",2)="All Date of Death Fields will be deleted."
"RTN","IVMLDEMD",71,0)
 S DIR("?")="Enter 'YES' to continue or 'NO' to abort."
"RTN","IVMLDEMD",72,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEMD",73,0)
 D ^DIR K DIR
"RTN","IVMLDEMD",74,0)
 S IVMFLAG=1 G DODQ:'Y
"RTN","IVMLDEMD",75,0)
 W !,"Filing Date of Death deletions... "
"RTN","IVMLDEMD",76,0)
 F DODFIELD="ZPD09","ZPD31","ZPD32" D
"RTN","IVMLDEMD",77,0)
 .S IVMI=$O(^IVM(301.92,"C",DODFIELD,"")) I IVMI="" Q
"RTN","IVMLDEMD",78,0)
 .S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,"")) Q:IVMJ']""
"RTN","IVMLDEMD",79,0)
 .;
"RTN","IVMLDEMD",80,0)
 .; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",81,0)
 .S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",82,0)
 .Q:'(+IVMNODE)
"RTN","IVMLDEMD",83,0)
 .;
"RTN","IVMLDEMD",84,0)
 .;   load Date of Death deletion rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEMD",85,0)
 .I DODFIELD="ZPD09" D UPLOAD(+DFN,.351,"@")
"RTN","IVMLDEMD",86,0)
 .;
"RTN","IVMLDEMD",87,0)
 .; - remove entry from (#301.511) sub-file
"RTN","IVMLDEMD",88,0)
 .D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEMD",89,0)
 ;
"RTN","IVMLDEMD",90,0)
 I IVMFLAG D  W "completed.",!
"RTN","IVMLDEMD",91,0)
 .D UPLOAD(+DFN,.355,.5)
"RTN","IVMLDEMD",92,0)
 ;
"RTN","IVMLDEMD",93,0)
 S VALMBCK="R"
"RTN","IVMLDEMD",94,0)
 ;
"RTN","IVMLDEMD",95,0)
 G DODQ
"RTN","IVMLDEMD",96,0)
CKDEL S CKDEL=0
"RTN","IVMLDEMD",97,0)
 S IVMI=$O(^IVM(301.92,"C","ZPD09","")) I IVMI="" Q
"RTN","IVMLDEMD",98,0)
 S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,""))
"RTN","IVMLDEMD",99,0)
 I IVMJ']"" Q
"RTN","IVMLDEMD",100,0)
 ;
"RTN","IVMLDEMD",101,0)
 ; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",102,0)
 S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",103,0)
 Q:'(+IVMNODE)!($P(IVMNODE,"^",2)']"")
"RTN","IVMLDEMD",104,0)
 ;
"RTN","IVMLDEMD",105,0)
 I $P(IVMNODE,"^",2)="""""" S CKDEL=1
"RTN","IVMLDEMD",106,0)
 Q
"RTN","IVMLDEMD",107,0)
AUTODOD(DFN) ;
"RTN","IVMLDEMD",108,0)
 ; function to automatically upload Date of Death
"RTN","IVMLDEMD",109,0)
 ; fields and return a flag
"RTN","IVMLDEMD",110,0)
 ;
"RTN","IVMLDEMD",111,0)
 ;  Input:      DFN  -  as patient IEN
"RTN","IVMLDEMD",112,0)
 ;
"RTN","IVMLDEMD",113,0)
 ; Output: IVMFLAG   -  1 if a Date of Death Field
"RTN","IVMLDEMD",114,0)
 ;                      0 if not a Date of Death field
"RTN","IVMLDEMD",115,0)
 ;
"RTN","IVMLDEMD",116,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,DODFIELD
"RTN","IVMLDEMD",117,0)
 N DELDATA,CKDEL,CKADD,CKDUZ,IVMDA1,IVMDA2,DGDAUTO,IVMENT4
"RTN","IVMLDEMD",118,0)
 ;
"RTN","IVMLDEMD",119,0)
 ; - initialize flags
"RTN","IVMLDEMD",120,0)
 S (IVMFLAG,CKDEL,CKADD,CKDUZ)=0,IVMENT4=999999999
"RTN","IVMLDEMD",121,0)
 ;
"RTN","IVMLDEMD",122,0)
 ; - check for required parameters
"RTN","IVMLDEMD",123,0)
 S IVMDA2=$G(IVM3015)
"RTN","IVMLDEMD",124,0)
 I 'IVMDA2 G DODQ
"RTN","IVMLDEMD",125,0)
 S IVMDA1=$O(^HL(771.3,"B","PID",""))
"RTN","IVMLDEMD",126,0)
 S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN","B",IVMDA1,""),-1)
"RTN","IVMLDEMD",127,0)
 I 'IVMDA1 G DODQ
"RTN","IVMLDEMD",128,0)
 ;
"RTN","IVMLDEMD",129,0)
 D CKAUTO I CKDEL D AUTODEL,DEM5,BULL(+^IVM(301.5,IVMDA2,0)) G DODQ
"RTN","IVMLDEMD",130,0)
 I CKADD D CKDUZ,AUTOADD,DEM5 G DODQ
"RTN","IVMLDEMD",131,0)
 G DODQ
"RTN","IVMLDEMD",132,0)
AUTOADD ;
"RTN","IVMLDEMD",133,0)
 S DGDAUTO=1
"RTN","IVMLDEMD",134,0)
 ; - loop through DOD fields
"RTN","IVMLDEMD",135,0)
 F DODFIELD="ZPD09","ZPD31","ZPD32" D
"RTN","IVMLDEMD",136,0)
 .S IVMI=$O(^IVM(301.92,"C",DODFIELD,"")) I IVMI="" Q
"RTN","IVMLDEMD",137,0)
 .S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,"")) Q:IVMJ']""  D
"RTN","IVMLDEMD",138,0)
 ..;
"RTN","IVMLDEMD",139,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",140,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0)) Q:'(+IVMNODE)
"RTN","IVMLDEMD",141,0)
 ..I DODFIELD="ZPD31",$P(IVMNODE,"^",2)=""!($P(IVMNODE,"^",2)<1)!($P(IVMNODE,"^",2)>9) S $P(IVMNODE,"^",2)="@"
"RTN","IVMLDEMD",142,0)
 ..I DODFIELD'="ZPD31",$P(IVMNODE,"^",2)=""!($E($P(IVMNODE,"^",2),1,7)'?1.7N) S $P(IVMNODE,"^",2)="@"
"RTN","IVMLDEMD",143,0)
 ..;
"RTN","IVMLDEMD",144,0)
 ..;   load Date of Death field rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEMD",145,0)
 ..I DODFIELD'="ZPD09" D UPLOAD(+DFN,$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),$P(IVMNODE,"^",2)) S IVMFLAG=1
"RTN","IVMLDEMD",146,0)
 ..; - remove entry from (#301.511) sub-file
"RTN","IVMLDEMD",147,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEMD",148,0)
 ;
"RTN","IVMLDEMD",149,0)
 I IVMFLAG D UPLOAD(+DFN,.355,$S(CKDUZ:CKDUZ,1:.5))
"RTN","IVMLDEMD",150,0)
 D CLEAN(IVMDA2)
"RTN","IVMLDEMD",151,0)
 Q
"RTN","IVMLDEMD",152,0)
AUTODEL ;
"RTN","IVMLDEMD",153,0)
 N DFNDOD S DFNDOD=0 I $P($G(^DPT(+DFN,.35)),U)>0 S DFNDOD=1
"RTN","IVMLDEMD",154,0)
 F DODFIELD="ZPD09","ZPD31","ZPD32" D
"RTN","IVMLDEMD",155,0)
 .S IVMI=$O(^IVM(301.92,"C",DODFIELD,"")) I IVMI="" Q
"RTN","IVMLDEMD",156,0)
 .S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,"")) Q:IVMJ']""
"RTN","IVMLDEMD",157,0)
 .; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",158,0)
 .S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",159,0)
 .Q:'(+IVMNODE)
"RTN","IVMLDEMD",160,0)
 .;   load Date of Death deletion rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEMD",161,0)
 .I DODFIELD="ZPD09" I DFNDOD D UPLOAD(+DFN,.351,"@") S IVMFLAG=1
"RTN","IVMLDEMD",162,0)
 .; - remove entry from (#301.511) sub-file
"RTN","IVMLDEMD",163,0)
 .D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEMD",164,0)
 ;
"RTN","IVMLDEMD",165,0)
 I IVMFLAG D UPLOAD(+DFN,.355,.5)
"RTN","IVMLDEMD",166,0)
 D CLEAN(IVMDA2)
"RTN","IVMLDEMD",167,0)
 Q
"RTN","IVMLDEMD",168,0)
DEM5 ;
"RTN","IVMLDEMD",169,0)
 I '$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,0),'$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,1) D
"RTN","IVMLDEMD",170,0)
 .D DELETE^IVMLDEM5(IVMDA2,IVMDA1," ") ; Dummy up name parameter
"RTN","IVMLDEMD",171,0)
 Q
"RTN","IVMLDEMD",172,0)
CKAUTO S (CKDEL,CKADD)=0
"RTN","IVMLDEMD",173,0)
 S IVMI=$O(^IVM(301.92,"C","ZPD09","")) I IVMI="" Q
"RTN","IVMLDEMD",174,0)
 S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,""))
"RTN","IVMLDEMD",175,0)
 I IVMJ']"" Q
"RTN","IVMLDEMD",176,0)
 ;
"RTN","IVMLDEMD",177,0)
 ; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",178,0)
 S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",179,0)
 Q:'(+IVMNODE)!($P(IVMNODE,"^",2)']"")
"RTN","IVMLDEMD",180,0)
 ;
"RTN","IVMLDEMD",181,0)
 I $P(IVMNODE,"^",2)="""""" S CKDEL=1 Q
"RTN","IVMLDEMD",182,0)
 I $P(IVMNODE,"^",2)=$P($G(^DPT(DFN,.35)),"^",1) S CKADD=1
"RTN","IVMLDEMD",183,0)
 Q
"RTN","IVMLDEMD",184,0)
CKDUZ ; Check to preserve DUZ for "Last Edited By"
"RTN","IVMLDEMD",185,0)
 S IVMI=$O(^IVM(301.92,"C","ZPD32","")) I IVMI="" Q
"RTN","IVMLDEMD",186,0)
 S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,""))
"RTN","IVMLDEMD",187,0)
 I IVMJ']"" Q
"RTN","IVMLDEMD",188,0)
 ;
"RTN","IVMLDEMD",189,0)
 ; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",190,0)
 S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",191,0)
 Q:'(+IVMNODE)!($P(IVMNODE,"^",2)']"")
"RTN","IVMLDEMD",192,0)
 ;
"RTN","IVMLDEMD",193,0)
 I $P(IVMNODE,"^",2)=$P($G(^DPT(DFN,.35)),"^",4) D
"RTN","IVMLDEMD",194,0)
 .S CKDUZ=$P($G(^DPT(DFN,.35)),"^",5)
"RTN","IVMLDEMD",195,0)
 Q
"RTN","IVMLDEMD",196,0)
UPLOAD(DFN,IVMFIELD,IVMVALUE) ; - file Date of Death fields received from IVM
"RTN","IVMLDEMD",197,0)
 ;  Input:       DFN  -  as patient IEN
"RTN","IVMLDEMD",198,0)
 ;          IVMFIELD  -  as the field number to be updated
"RTN","IVMLDEMD",199,0)
 ;          IVMVALUE  -  as the value of the field
"RTN","IVMLDEMD",200,0)
 ;
"RTN","IVMLDEMD",201,0)
 ; Output: None
"RTN","IVMLDEMD",202,0)
 ;
"RTN","IVMLDEMD",203,0)
 N DA,DIE,DR
"RTN","IVMLDEMD",204,0)
 S DIE="^DPT(",DA=DFN,DR=IVMFIELD_"////^S X=IVMVALUE"
"RTN","IVMLDEMD",205,0)
 D ^DIE
"RTN","IVMLDEMD",206,0)
 Q
"RTN","IVMLDEMD",207,0)
 ;
"RTN","IVMLDEMD",208,0)
DODQ ; - return  -->  1 if uploadable field is a Date of Death field
"RTN","IVMLDEMD",209,0)
 ;           -->  0 if nothing uploadable
"RTN","IVMLDEMD",210,0)
 ;
"RTN","IVMLDEMD",211,0)
 I IVMFLAG D RESET^IVMLDEMU
"RTN","IVMLDEMD",212,0)
 Q IVMFLAG
"RTN","IVMLDEMD",213,0)
 ;
"RTN","IVMLDEMD",214,0)
CLEAN(IVMI) ;
"RTN","IVMLDEMD",215,0)
 ; Remove any Date of Death related entries from IVM UPLOAD DEM
"RTN","IVMLDEMD",216,0)
 N IVMJ,IVMN,IVM92,OTHFLG
"RTN","IVMLDEMD",217,0)
 S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,"ASEG","PID",IVMI,IVMJ)) Q:'IVMJ  D
"RTN","IVMLDEMD",218,0)
 .I '$D(^IVM(301.5,IVMI,"IN",IVMJ)) D REMASEG(IVMI,IVMJ) Q
"RTN","IVMLDEMD",219,0)
 .S (OTHFLG,IVMN)=0 F  S IVMN=$O(^IVM(301.5,IVMI,"IN",IVMJ,"DEM",IVMN)) Q:'IVMN  D
"RTN","IVMLDEMD",220,0)
 ..S IVM92=$P(^IVM(301.5,IVMI,"IN",IVMJ,"DEM",IVMN,0),U)
"RTN","IVMLDEMD",221,0)
 ..I "^15^36^37^"[(U_IVM92_U) D REM511(IVMI,IVMJ,IVMN)
"RTN","IVMLDEMD",222,0)
 ..I "^15^36^37^"'[(U_IVM92_U) S OTHFLG=1
"RTN","IVMLDEMD",223,0)
 .I 'OTHFLG D REM501(IVMI,IVMJ)
"RTN","IVMLDEMD",224,0)
 Q
"RTN","IVMLDEMD",225,0)
 ;
"RTN","IVMLDEMD",226,0)
REM501(IVMI,IVMJ) ;
"RTN","IVMLDEMD",227,0)
 ; Delete 301.501 entry to remove from ASEG x-ref
"RTN","IVMLDEMD",228,0)
 N DA,DIE,DR
"RTN","IVMLDEMD",229,0)
 S DA=IVMJ,DA(1)=IVMI
"RTN","IVMLDEMD",230,0)
 S DIE="^IVM(301.5,"_DA(1)_",""IN"","
"RTN","IVMLDEMD",231,0)
 S DR=".02////@" D ^DIE
"RTN","IVMLDEMD",232,0)
 Q
"RTN","IVMLDEMD",233,0)
 ;
"RTN","IVMLDEMD",234,0)
REM511(IVMI,IVMJ,IVMN) ;
"RTN","IVMLDEMD",235,0)
 ; Delete 301.511 entry to remove from IVM UPLOAD DEM
"RTN","IVMLDEMD",236,0)
 N DA,DIK
"RTN","IVMLDEMD",237,0)
 S DA(1)=IVMJ,DA(2)=IVMI,DA=IVMN
"RTN","IVMLDEMD",238,0)
 S DIK="^IVM(301.5,"_DA(2)_",""IN"","_DA(1)_",""DEM"","
"RTN","IVMLDEMD",239,0)
 D ^DIK
"RTN","IVMLDEMD",240,0)
 Q
"RTN","IVMLDEMD",241,0)
 ;
"RTN","IVMLDEMD",242,0)
REMASEG(IVMI,IVMJ) ;
"RTN","IVMLDEMD",243,0)
 ; Delete invalid ASEG x-ref entries
"RTN","IVMLDEMD",244,0)
 K ^IVM(301.5,"ASEG","PID",IVMI,IVMJ)
"RTN","IVMLDEMD",245,0)
 Q
"RTN","IVMLDEMD",246,0)
BULL(DFN) ; Date of Death Deletion Bulletin
"RTN","IVMLDEMD",247,0)
 I '$D(^DPT(DFN,0)) Q
"RTN","IVMLDEMD",248,0)
 I '(+$G(^DPT(DFN,.35))) Q
"RTN","IVMLDEMD",249,0)
 ;
"RTN","IVMLDEMD",250,0)
 N DGDEATH,DGB,DGPCMM,XMSUB,X
"RTN","IVMLDEMD",251,0)
 S DGDEATH=+$G(^DPT(DFN,.35)),XMSUB="Patient Death has been Deleted",DGCT=0
"RTN","IVMLDEMD",252,0)
 D ^DGPATV
"RTN","IVMLDEMD",253,0)
 D LINE^DGDEATH("The date of death for the following patient has been deleted.")
"RTN","IVMLDEMD",254,0)
 D LINE^DGDEATH("")
"RTN","IVMLDEMD",255,0)
 D DEMOG^DGDEATH
"RTN","IVMLDEMD",256,0)
 D LINE^DGDEATH("")
"RTN","IVMLDEMD",257,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","IVMLDEMD",258,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","IVMLDEMD",259,0)
 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","IVMLDEMD",260,0)
 K DGCT,DGDEATH D KILL^DGPATV
"RTN","IVMLDEMD",261,0)
 ;
"RTN","IVMLDEMD",262,0)
 Q
"RTN","IVMPREC6")
0^7^B33426027
"RTN","IVMPREC6",1,0)
IVMPREC6 ;ALB/KCL/BRM - PROCESS INCOMING (Z05 EVENT TYPE) HL7 MESSAGES ; 12/29/2004
"RTN","IVMPREC6",2,0)
 ;;2.0; INCOME VERIFICATION MATCH ;**3,4,12,17,34,58,79,102**; 21-OCT-94
"RTN","IVMPREC6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPREC6",4,0)
 ;
"RTN","IVMPREC6",5,0)
 ; This routine will process batch ORU demographic (event type Z05) HL7
"RTN","IVMPREC6",6,0)
 ; messages received from the IVM center.  Format of HL7 batch message:
"RTN","IVMPREC6",7,0)
 ;
"RTN","IVMPREC6",8,0)
 ;       BHS
"RTN","IVMPREC6",9,0)
 ;       {MSH
"RTN","IVMPREC6",10,0)
 ;        PID
"RTN","IVMPREC6",11,0)
 ;        ZPD
"RTN","IVMPREC6",12,0)
 ;        ZGD
"RTN","IVMPREC6",13,0)
 ;        RF1 (optional)
"RTN","IVMPREC6",14,0)
 ;       }
"RTN","IVMPREC6",15,0)
 ;       BTS
"RTN","IVMPREC6",16,0)
 ;
"RTN","IVMPREC6",17,0)
 ;
"RTN","IVMPREC6",18,0)
EN ; - entry point to process HL7 patient demographic message 
"RTN","IVMPREC6",19,0)
 ;
"RTN","IVMPREC6",20,0)
 N DGENUPLD,VAFCA08,DGRUGA08
"RTN","IVMPREC6",21,0)
 ;
"RTN","IVMPREC6",22,0)
 ; prevent a return Z07 when uploading a Z05 (Patient file triggers)
"RTN","IVMPREC6",23,0)
 S DGENUPLD="ENROLLMENT/ELIGIBILITY UPLOAD IN PROGRESS"
"RTN","IVMPREC6",24,0)
 ;
"RTN","IVMPREC6",25,0)
 ; prevent MPI A08 message when uploading Z05 (Patient file triggers)
"RTN","IVMPREC6",26,0)
 S VAFCA08=1  ;MPI/CIRN A08 suppression flag
"RTN","IVMPREC6",27,0)
 ;
"RTN","IVMPREC6",28,0)
 S IVMFLG=0
"RTN","IVMPREC6",29,0)
 ; - get incoming HL7 message from HL7 Transmission (#772) file
"RTN","IVMPREC6",30,0)
 F IVMDA=0:0 S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)) Q:'IVMDA  S IVMSEG=$G(^(IVMDA,0)) I $E(IVMSEG,1,3)="MSH" D
"RTN","IVMPREC6",31,0)
 .K HLERR
"RTN","IVMPREC6",32,0)
 .;
"RTN","IVMPREC6",33,0)
 .; - message control id from MSH segment
"RTN","IVMPREC6",34,0)
 .S MSGID=$P(IVMSEG,HLFS,10),HLMID=MSGID
"RTN","IVMPREC6",35,0)
 .;
"RTN","IVMPREC6",36,0)
 .; - perform demographics message consistency check
"RTN","IVMPREC6",37,0)
 .D EN^IVMPRECA Q:$D(HLERR)
"RTN","IVMPREC6",38,0)
 .;
"RTN","IVMPREC6",39,0)
 .; - get next msg segment
"RTN","IVMPREC6",40,0)
 .D NEXT I $E(IVMSEG,1,3)'="PID" D  Q
"RTN","IVMPREC6",41,0)
 ..S HLERR="Missing PID segment" D ACK^IVMPREC
"RTN","IVMPREC6",42,0)
 .;
"RTN","IVMPREC6",43,0)
 .; - patient IEN (DFN) from PID segment
"RTN","IVMPREC6",44,0)
 .S DFN=$P($P(IVMSEG,HLFS,4),$E(HLECH),1)
"RTN","IVMPREC6",45,0)
 .;
"RTN","IVMPREC6",46,0)
 .I ('DFN!(DFN'=+DFN)!('$D(^DPT(+DFN,0)))) D  Q
"RTN","IVMPREC6",47,0)
 ..S HLERR="Invalid DFN" D ACK^IVMPREC
"RTN","IVMPREC6",48,0)
 .I $P(IVMSEG,HLFS,20)'=$P(^DPT(DFN,0),"^",9) D  Q
"RTN","IVMPREC6",49,0)
 ..S HLERR="Couldn't match HEC SSN with DHCP SSN" D ACK^IVMPREC
"RTN","IVMPREC6",50,0)
 .;
"RTN","IVMPREC6",51,0)
 .; - check for entry in IVM PATIENT file, otherwise create stub entry
"RTN","IVMPREC6",52,0)
 .S IVM3015=$O(^IVM(301.5,"B",DFN,0))
"RTN","IVMPREC6",53,0)
 .I 'IVM3015 S IVM3015=$$LOG^IVMPLOG(DFN,DT)
"RTN","IVMPREC6",54,0)
 .I 'IVM3015 D  Q
"RTN","IVMPREC6",55,0)
 ..S HLERR="Failed to create entry in IVM PATIENT file"
"RTN","IVMPREC6",56,0)
 ..D ACK^IVMPREC
"RTN","IVMPREC6",57,0)
 .;
"RTN","IVMPREC6",58,0)
 .; - compare PID segment fields with DHCP fields
"RTN","IVMPREC6",59,0)
 .D COMPARE(IVMSEG) Q:$D(HLERR)
"RTN","IVMPREC6",60,0)
 .;
"RTN","IVMPREC6",61,0)
 .; - get next msg segment
"RTN","IVMPREC6",62,0)
 .D NEXT I $E(IVMSEG,1,3)'="ZPD" D  Q
"RTN","IVMPREC6",63,0)
 ..S HLERR="Missing ZPD segment" D ACK^IVMPREC
"RTN","IVMPREC6",64,0)
 .;
"RTN","IVMPREC6",65,0)
 .; - compare ZPD segment fields with DHCP fields
"RTN","IVMPREC6",66,0)
 .D COMPARE(IVMSEG)
"RTN","IVMPREC6",67,0)
 .;
"RTN","IVMPREC6",68,0)
 .; - get next msg segment
"RTN","IVMPREC6",69,0)
 .D NEXT I $E(IVMSEG,1,3)="ZEL" D  Q
"RTN","IVMPREC6",70,0)
 ..S HLERR="ZEL segment should not be sent in Z05 message" D ACK^IVMPREC
"RTN","IVMPREC6",71,0)
 .;
"RTN","IVMPREC6",72,0)
 .; - get next msg segment
"RTN","IVMPREC6",73,0)
 .I $E(IVMSEG,1,3)'="ZGD" D  Q
"RTN","IVMPREC6",74,0)
 ..S HLERR="Missing ZGD segment" D ACK^IVMPREC
"RTN","IVMPREC6",75,0)
 .;
"RTN","IVMPREC6",76,0)
 .; - compare ZGD segment fields with DHCP fields
"RTN","IVMPREC6",77,0)
 .D COMPARE(IVMSEG)
"RTN","IVMPREC6",78,0)
 .;S IVMFLG=0
"RTN","IVMPREC6",79,0)
 .;
"RTN","IVMPREC6",80,0)
 .; - check for RF1 segment and get segment if it exists
"RTN","IVMPREC6",81,0)
 .;     This process will automatically update patient address data
"RTN","IVMPREC6",82,0)
 .;     in the Patient (#2) file if the incoming address is more
"RTN","IVMPREC6",83,0)
 .;     recent than the existing one.
"RTN","IVMPREC6",84,0)
 .I $$RF1CHK(IVMRTN,IVMDA) D NEXT,COMPARE(IVMSEG) S IVMFLG=0
"RTN","IVMPREC6",85,0)
 ;
"RTN","IVMPREC6",86,0)
 ; - send mail message if necessary
"RTN","IVMPREC6",87,0)
 I IVMCNTR D MAIL^IVMUFNC()
"RTN","IVMPREC6",88,0)
 ; Cleanup variables if no msg necessary
"RTN","IVMPREC6",89,0)
 I 'IVMCNTR K IVMTEXT,XMSUB
"RTN","IVMPREC6",90,0)
 ;
"RTN","IVMPREC6",91,0)
ENQ ; - cleanup variables
"RTN","IVMPREC6",92,0)
 K DA,DFN,IVMADDR,IVMADFLG,IVMDA,IVMDHCP,IVMFLAG,IVMFLD,IVMPIECE,IVMSEG,IVMSTART,IVMXREF,DGENUPLD
"RTN","IVMPREC6",93,0)
 Q
"RTN","IVMPREC6",94,0)
 ;
"RTN","IVMPREC6",95,0)
 ;
"RTN","IVMPREC6",96,0)
NEXT ; - get the next HL7 segment in the message from HL7 Transmission (#772) file
"RTN","IVMPREC6",97,0)
 ;
"RTN","IVMPREC6",98,0)
 S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)),IVMSEG=$G(^(+IVMDA,0))
"RTN","IVMPREC6",99,0)
 Q
"RTN","IVMPREC6",100,0)
 ;
"RTN","IVMPREC6",101,0)
 ;
"RTN","IVMPREC6",102,0)
COMPARE(IVMSEG) ; - compare incoming HL7 segment/fields with DHCP fields
"RTN","IVMPREC6",103,0)
 ;
"RTN","IVMPREC6",104,0)
 ;  Input:  IVMSEG  --  as the text of the incoming HL7 message
"RTN","IVMPREC6",105,0)
 ;
"RTN","IVMPREC6",106,0)
 ; Output:  None
"RTN","IVMPREC6",107,0)
 ;
"RTN","IVMPREC6",108,0)
 ; - get 3 letter HL7 segment name
"RTN","IVMPREC6",109,0)
 S IVMXREF=$P(IVMSEG,HLFS,1),IVMSTART=IVMXREF
"RTN","IVMPREC6",110,0)
 ;
"RTN","IVMPREC6",111,0)
 ; - strip off HL7 segment name
"RTN","IVMPREC6",112,0)
 S IVMSEG=$P(IVMSEG,HLFS,2,99)
"RTN","IVMPREC6",113,0)
 ;
"RTN","IVMPREC6",114,0)
 ; - roll through "C" x-ref in IVM Demographic Upload Fields (#301.92) file
"RTN","IVMPREC6",115,0)
 F  S IVMXREF=$O(^IVM(301.92,"C",IVMXREF)) Q:IVMXREF']""  D
"RTN","IVMPREC6",116,0)
 .S IVMDEMDA=$O(^IVM(301.92,"C",IVMXREF,"")) Q:IVMDEMDA']""
"RTN","IVMPREC6",117,0)
 .I $$INACTIVE(IVMDEMDA) Q
"RTN","IVMPREC6",118,0)
 .;
"RTN","IVMPREC6",119,0)
 .; - compare incoming HL7 segment fields with DHCP fields
"RTN","IVMPREC6",120,0)
 .I IVMXREF["PID",(IVMSTART["PID") D PID^IVMPREC8
"RTN","IVMPREC6",121,0)
 .I IVMXREF["ZPD",(IVMSTART["ZPD") D ZPD^IVMPREC8
"RTN","IVMPREC6",122,0)
 .I IVMXREF["ZGD",(IVMSTART["ZGD") D ZGD^IVMPREC8
"RTN","IVMPREC6",123,0)
 .I IVMXREF["RF1",(IVMSTART["RF1") D RF1^IVMPREC8
"RTN","IVMPREC6",124,0)
 Q
"RTN","IVMPREC6",125,0)
 ;
"RTN","IVMPREC6",126,0)
 ;
"RTN","IVMPREC6",127,0)
DEMBULL ; -  build mail message for transmission to IVM mail group notifying
"RTN","IVMPREC6",128,0)
 ;    them that patients with updated demographic data has been received
"RTN","IVMPREC6",129,0)
 ;    from the IVM Center and may now be uploaded into DHCP.
"RTN","IVMPREC6",130,0)
 ;
"RTN","IVMPREC6",131,0)
 ; If record is auto uploaded, don't add veteran to bulletin
"RTN","IVMPREC6",132,0)
 I $$CKAUTO Q
"RTN","IVMPREC6",133,0)
 ;
"RTN","IVMPREC6",134,0)
 S IVMPTID=$$PT^IVMUFNC4(DFN)
"RTN","IVMPREC6",135,0)
 S XMSUB="IVM - DEMOGRAPHIC UPLOAD for "_$P($P(IVMPTID,"^"),",")_" ("_$P(IVMPTID,"^",3)_")"
"RTN","IVMPREC6",136,0)
 S IVMTEXT(1)="Updated demographic information has been received from the"
"RTN","IVMPREC6",137,0)
 S IVMTEXT(2)="Health Eligibilty Center.  Please select the 'Demographic Upload'"
"RTN","IVMPREC6",138,0)
 S IVMTEXT(3)="option from the IVM Upload Menu in order to take action on this"
"RTN","IVMPREC6",139,0)
 S IVMTEXT(4)="demographic information.  If you have any questions concerning the"
"RTN","IVMPREC6",140,0)
 S IVMTEXT(5)="information received, please contact the Health Eligibility Center."
"RTN","IVMPREC6",141,0)
 S IVMTEXT(7)=""
"RTN","IVMPREC6",142,0)
 S IVMTEXT(8)="The Health Eligibilty Center has identified the following"
"RTN","IVMPREC6",143,0)
 S IVMTEXT(9)="patients as having updated demographic information:"
"RTN","IVMPREC6",144,0)
 S IVMTEXT(10)=""
"RTN","IVMPREC6",145,0)
 S IVMCNTR=IVMCNTR+1
"RTN","IVMPREC6",146,0)
 S IVMTEXT(IVMCNTR+10)=$J(IVMCNTR_")",5)_"  "_$P(IVMPTID,"^")_" ("_$P(IVMPTID,"^",3)_")"
"RTN","IVMPREC6",147,0)
 Q
"RTN","IVMPREC6",148,0)
 ;
"RTN","IVMPREC6",149,0)
INACTIVE(IVMDEMDA) ;Check if field is inactive in Demographic Upload
"RTN","IVMPREC6",150,0)
 ; Input  -- IVMDEMDA IVM Demographic Upload Fields IEN
"RTN","IVMPREC6",151,0)
 ; Output -- 1=Yes and 0=No
"RTN","IVMPREC6",152,0)
 Q +$P($G(^IVM(301.92,IVMDEMDA,0)),U,9)
"RTN","IVMPREC6",153,0)
 ;
"RTN","IVMPREC6",154,0)
RF1CHK(IVMRTN,IVMDA) ;does an RF1 segment exist in this message?
"RTN","IVMPREC6",155,0)
 N RF1
"RTN","IVMPREC6",156,0)
 S RF1=$O(^TMP($J,IVMRTN,IVMDA))
"RTN","IVMPREC6",157,0)
 I $E($G(^(+RF1,0)),1,3)'="RF1" Q 0
"RTN","IVMPREC6",158,0)
 Q 1
"RTN","IVMPREC6",159,0)
 ;
"RTN","IVMPREC6",160,0)
CKAUTO() ;
"RTN","IVMPREC6",161,0)
 ; Chect if message qualifies for an auto upload.
"RTN","IVMPREC6",162,0)
 N AUTO,IVMI,DOD
"RTN","IVMPREC6",163,0)
 S AUTO=0,IVMI=$O(^IVM(301.92,"C","ZPD09",""))
"RTN","IVMPREC6",164,0)
 I IVMI=IVMDEMDA  D
"RTN","IVMPREC6",165,0)
 .I +IVMFLD'>0 S AUTO=1 Q
"RTN","IVMPREC6",166,0)
 .S DOD=$P($G(^DPT(DFN,.35)),U)
"RTN","IVMPREC6",167,0)
 .I DOD=IVMFLD S AUTO=1 Q
"RTN","IVMPREC6",168,0)
 ;
"RTN","IVMPREC6",169,0)
 Q AUTO
"RTN","IVMPREC8")
0^3^B29336358
"RTN","IVMPREC8",1,0)
IVMPREC8 ;ALB/KCL/BRM/PJR - PROCESS INCOMING (Z05 EVENT TYPE) HL7 MESSAGES (CON'T) ; 11/24/04 9:58am
"RTN","IVMPREC8",2,0)
 ;;2.0; INCOME VERIFICATION MATCH ;**5,6,12,58,73,79,102**; 21-OCT-94
"RTN","IVMPREC8",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPREC8",4,0)
 ;
"RTN","IVMPREC8",5,0)
 ; This routine is called from IVMPREC6.
"RTN","IVMPREC8",6,0)
 ; This routine will process batch ORU demographic (event type Z05) HL7
"RTN","IVMPREC8",7,0)
 ; messages received from the IVM center.
"RTN","IVMPREC8",8,0)
 ;
"RTN","IVMPREC8",9,0)
 ;
"RTN","IVMPREC8",10,0)
 ;
"RTN","IVMPREC8",11,0)
PID ; - compare PID segment fields with DHCP fields
"RTN","IVMPREC8",12,0)
 N COMPPH1,COMPPH2
"RTN","IVMPREC8",13,0)
 ;
"RTN","IVMPREC8",14,0)
 ; - strip off segment name
"RTN","IVMPREC8",15,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",16,0)
 ;
"RTN","IVMPREC8",17,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",18,0)
 .;
"RTN","IVMPREC8",19,0)
 .; - if PID field is the address field - parse address
"RTN","IVMPREC8",20,0)
 .S IVMADFLG=0
"RTN","IVMPREC8",21,0)
 .I IVMXREF["PID11" D  Q:IVMFLD=""
"RTN","IVMPREC8",22,0)
 ..; - get PID address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",23,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",24,0)
 ..; - get piece of address field, and set IVMFLD
"RTN","IVMPREC8",25,0)
 ..S IVMPIECE=$E(IVMPIECE,3,4),IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",26,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",27,0)
 ..; - convert state abbrev. to pointer
"RTN","IVMPREC8",28,0)
 ..I IVMPIECE=4 S (IVMSTPTR,IVMFLD)=+$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",29,0)
 ..I IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=X
"RTN","IVMPREC8",30,0)
 ..S IVMADFLG=1
"RTN","IVMPREC8",31,0)
 .;
"RTN","IVMPREC8",32,0)
 .I IVMXREF["PID12" S IVMADFLG=1,IVMFLD=+$O(^DIC(5,IVMSTPTR,1,"C",$P(IVMSEG,HLFS,12),0))
"RTN","IVMPREC8",33,0)
 .; line remove so that the phone number is compared 
"RTN","IVMPREC8",34,0)
 .; before saving to 301.5.
"RTN","IVMPREC8",35,0)
 .;I IVMXREF["PID13" S IVMFLD=$P(IVMSEG,HLFS,13) D STORE^IVMPREC9 S IVMADFLG=1 Q
"RTN","IVMPREC8",36,0)
 .;
"RTN","IVMPREC8",37,0)
 .; - file address fields and quit
"RTN","IVMPREC8",38,0)
 .I IVMADFLG D STORE^IVMPREC9 Q
"RTN","IVMPREC8",39,0)
 .;
"RTN","IVMPREC8",40,0)
 .; - otherwise, set IVMFLD to field rec'd from IVM
"RTN","IVMPREC8",41,0)
 .;   for comparison with DHCP field
"RTN","IVMPREC8",42,0)
 .S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",43,0)
 .;
"RTN","IVMPREC8",44,0)
 .; - if HL7 date convert to FM date and set IVMFLD
"RTN","IVMPREC8",45,0)
 .I IVMXREF["PID07" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",46,0)
 .;
"RTN","IVMPREC8",47,0)
 .; - call VADPT routine to return DHCP demographics
"RTN","IVMPREC8",48,0)
 .D DEM^VADPT,ADD^VADPT
"RTN","IVMPREC8",49,0)
 .;
"RTN","IVMPREC8",50,0)
 .; - execute code on the 1 node and get DHCP field for comparison
"RTN","IVMPREC8",51,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",52,0)
 .;
"RTN","IVMPREC8",53,0)
 .; - special logic for phone number processing
"RTN","IVMPREC8",54,0)
 .; - if different, then store the actual value received, then quit
"RTN","IVMPREC8",55,0)
 .I IVMXREF["PID13",IVMFLD]"" D  Q
"RTN","IVMPREC8",56,0)
 ..S COMPPH1=$$CONVPH(IVMFLD)
"RTN","IVMPREC8",57,0)
 ..S COMPPH2=$$CONVPH(IVMDHCP)
"RTN","IVMPREC8",58,0)
 ..I COMPPH1'=COMPPH2 D STORE^IVMPREC9
"RTN","IVMPREC8",59,0)
 .;
"RTN","IVMPREC8",60,0)
 .; - if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",61,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",62,0)
 Q
"RTN","IVMPREC8",63,0)
 ;
"RTN","IVMPREC8",64,0)
 ;
"RTN","IVMPREC8",65,0)
ZPD ; - compare ZPD segment fields with DHCP fields
"RTN","IVMPREC8",66,0)
 S IVMPIECE=$E(IVMXREF,4,5)
"RTN","IVMPREC8",67,0)
 I $P(IVMSEG,HLFS,IVMPIECE)]"" D
"RTN","IVMPREC8",68,0)
 .;
"RTN","IVMPREC8",69,0)
 .; - set var to HL7 field
"RTN","IVMPREC8",70,0)
 .S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",71,0)
 .;
"RTN","IVMPREC8",72,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",73,0)
 .I IVMXREF["ZPD09"!(IVMXREF["ZPD13")!(IVMXREF["ZPD32") S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",74,0)
 .;
"RTN","IVMPREC8",75,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",76,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",77,0)
 .;
"RTN","IVMPREC8",78,0)
 .; - if field from IVM does not equal DHCP field - store for uploading 
"RTN","IVMPREC8",79,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9 Q
"RTN","IVMPREC8",80,0)
 .I IVMXREF["ZPD09"!(IVMXREF["ZPD31")!(IVMXREF["ZPD32") D STORE^IVMPREC9
"RTN","IVMPREC8",81,0)
 I IVMXREF["ZPD32",$$AUTODOD^IVMLDEMD(DFN)
"RTN","IVMPREC8",82,0)
 Q
"RTN","IVMPREC8",83,0)
 ;
"RTN","IVMPREC8",84,0)
 ;
"RTN","IVMPREC8",85,0)
ZGD ; - compare ZGD segment fields with DHCP fields
"RTN","IVMPREC8",86,0)
 S IVMADFLG=0
"RTN","IVMPREC8",87,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",88,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",89,0)
 .;
"RTN","IVMPREC8",90,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",91,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",92,0)
 .;
"RTN","IVMPREC8",93,0)
 .; - ZGD06 as the ZGD address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",94,0)
 .I IVMXREF["ZGD06" D
"RTN","IVMPREC8",95,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",96,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE),IVMADFLG=1
"RTN","IVMPREC8",97,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",98,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",99,0)
 .;
"RTN","IVMPREC8",100,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",101,0)
 .I IVMXREF["ZGD08" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",102,0)
 .;
"RTN","IVMPREC8",103,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",104,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",105,0)
 .;
"RTN","IVMPREC8",106,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",107,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",108,0)
 Q
"RTN","IVMPREC8",109,0)
RF1 ; - compare RF1 segment fields with DHCP fields
"RTN","IVMPREC8",110,0)
 S IVMPIECE=$E(IVMXREF,4),IVMADFLG=1
"RTN","IVMPREC8",111,0)
 I $P(IVMSEG,HLFS,IVMPIECE)]"" D
"RTN","IVMPREC8",112,0)
 .;if RF1 field is SEQ6, then parse subcomponents
"RTN","IVMPREC8",113,0)
 .I IVMXREF["RF16" D  Q
"RTN","IVMPREC8",114,0)
 ..;- get data containing 4 pieces seperated by HLECH (~)
"RTN","IVMPREC8",115,0)
 ..S IVMRFDAT=$P(IVMSEG,HLFS,6)
"RTN","IVMPREC8",116,0)
 ..S IVMPIECE=$E(IVMXREF,5),IVMFLD=$P(IVMRFDAT,"~",IVMPIECE)
"RTN","IVMPREC8",117,0)
 ..I IVMPIECE=2 S IVMFLD=$$ADDRCNV(IVMFLD)
"RTN","IVMPREC8",118,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",119,0)
 ..D STORE^IVMPREC9
"RTN","IVMPREC8",120,0)
 .I IVMXREF["RF17" D  Q
"RTN","IVMPREC8",121,0)
 ..;get address change date/tm field
"RTN","IVMPREC8",122,0)
 ..S IVMFLD=$$FMDATE^HLFNC($P(IVMSEG,HLFS,7))
"RTN","IVMPREC8",123,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",124,0)
 ..D STORE^IVMPREC9
"RTN","IVMPREC8",125,0)
 ..; check for auto-upload
"RTN","IVMPREC8",126,0)
 ..S NOUPDT=0,IVMDHCP=$P($G(^DPT(DFN,.11)),HLFS,13)
"RTN","IVMPREC8",127,0)
 ..I IVMFLD]"",(IVMFLD'>IVMDHCP) S NOUPDT=1
"RTN","IVMPREC8",128,0)
 ..I $$AUTOADDR^IVMLDEM6(DFN,1,NOUPDT)
"RTN","IVMPREC8",129,0)
 Q
"RTN","IVMPREC8",130,0)
 ;
"RTN","IVMPREC8",131,0)
ADDRCNV(ADDRSRC) ;convert Address Source from HL7 to DHCP format
"RTN","IVMPREC8",132,0)
 ;
"RTN","IVMPREC8",133,0)
 Q:$G(ADDRSRC)']"" ""
"RTN","IVMPREC8",134,0)
 Q:ADDRSRC="USVAHEC" "HEC"
"RTN","IVMPREC8",135,0)
 Q:ADDRSRC="USVAMC" "VAMC"
"RTN","IVMPREC8",136,0)
 Q:ADDRSRC="USVAHBSC" "HBSC"
"RTN","IVMPREC8",137,0)
 Q:ADDRSRC="USNCOA" "NCOA"
"RTN","IVMPREC8",138,0)
 Q:ADDRSRC="USVABVA" "BVA"
"RTN","IVMPREC8",139,0)
 Q:ADDRSRC="USVAINS" "VAINS"
"RTN","IVMPREC8",140,0)
 Q:ADDRSRC="USPS" "USPS"
"RTN","IVMPREC8",141,0)
 Q ""
"RTN","IVMPREC8",142,0)
CONVPH(PH) ;remove special chars/spaces from Phone number
"RTN","IVMPREC8",143,0)
 Q $TR(PH," )(/#\-","")
"VER")
8.0^22.0
**END**
**END**
