KIDS Distribution saved on Jan 27, 2003@16:56:43
GEOGRAPHIC MEANS TESTING (PART 3)
**KIDS**:DG*5.3*481^IVM*2.0*67^IB*2.0*202^

**INSTALL NAME**
DG*5.3*481
"BLD",4103,0)
DG*5.3*481^REGISTRATION^0^3030127^y
"BLD",4103,4,0)
^9.64PA^^
"BLD",4103,"KRN",0)
^9.67PA^8989.52^19
"BLD",4103,"KRN",.4,0)
.4
"BLD",4103,"KRN",.401,0)
.401
"BLD",4103,"KRN",.402,0)
.402
"BLD",4103,"KRN",.403,0)
.403
"BLD",4103,"KRN",.5,0)
.5
"BLD",4103,"KRN",.84,0)
.84
"BLD",4103,"KRN",3.6,0)
3.6
"BLD",4103,"KRN",3.8,0)
3.8
"BLD",4103,"KRN",9.2,0)
9.2
"BLD",4103,"KRN",9.8,0)
9.8
"BLD",4103,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",4103,"KRN",9.8,"NM",1,0)
DGMTUB^^0^B7927681
"BLD",4103,"KRN",9.8,"NM","B","DGMTUB",1)

"BLD",4103,"KRN",19,0)
19
"BLD",4103,"KRN",19.1,0)
19.1
"BLD",4103,"KRN",101,0)
101
"BLD",4103,"KRN",409.61,0)
409.61
"BLD",4103,"KRN",771,0)
771
"BLD",4103,"KRN",870,0)
870
"BLD",4103,"KRN",8989.51,0)
8989.51
"BLD",4103,"KRN",8989.52,0)
8989.52
"BLD",4103,"KRN",8994,0)
8994
"BLD",4103,"KRN","B",.4,.4)

"BLD",4103,"KRN","B",.401,.401)

"BLD",4103,"KRN","B",.402,.402)

"BLD",4103,"KRN","B",.403,.403)

"BLD",4103,"KRN","B",.5,.5)

"BLD",4103,"KRN","B",.84,.84)

"BLD",4103,"KRN","B",3.6,3.6)

"BLD",4103,"KRN","B",3.8,3.8)

"BLD",4103,"KRN","B",9.2,9.2)

"BLD",4103,"KRN","B",9.8,9.8)

"BLD",4103,"KRN","B",19,19)

"BLD",4103,"KRN","B",19.1,19.1)

"BLD",4103,"KRN","B",101,101)

"BLD",4103,"KRN","B",409.61,409.61)

"BLD",4103,"KRN","B",771,771)

"BLD",4103,"KRN","B",870,870)

"BLD",4103,"KRN","B",8989.51,8989.51)

"BLD",4103,"KRN","B",8989.52,8989.52)

"BLD",4103,"KRN","B",8994,8994)

"BLD",4103,"QUES",0)
^9.62^^
"BLD",4103,"REQB",0)
^9.611^1^1
"BLD",4103,"REQB",1,0)
DG*5.3*456^2
"BLD",4103,"REQB","B","DG*5.3*456",1)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
481^3030127
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","DGMTUB")
0^1^B7927681
"RTN","DGMTUB",1,0)
DGMTUB ;ALB/RMO/CAW,CPM,LBD - Means Test Billing Utilities ; 7/22/02 9:32am
"RTN","DGMTUB",2,0)
 ;;5.3;Registration;**33,456,481**;Aug 13, 1993
"RTN","DGMTUB",3,0)
 ;
"RTN","DGMTUB",4,0)
BIL(DFN,DGDT) ;Determine if patient is pending adjudication
"RTN","DGMTUB",5,0)
 ;        or category C and has agreed to pay the deductible
"RTN","DGMTUB",6,0)
 ;         Input  -- DFN   Patient IEN
"RTN","DGMTUB",7,0)
 ;                   DGDT  Date/Time
"RTN","DGMTUB",8,0)
 ;         Output -- 1=TRUE and 0=FALSE
"RTN","DGMTUB",9,0)
 N MT0,MTI,TDAT,EDAT,BILL,STOP
"RTN","DGMTUB",10,0)
 S (BILL,STOP)=0
"RTN","DGMTUB",11,0)
 I '$G(DFN) G BILQ
"RTN","DGMTUB",12,0)
 S:'$G(DGDT) DGDT=DT
"RTN","DGMTUB",13,0)
 ;
"RTN","DGMTUB",14,0)
 S TDAT=-(DGDT+.1)
"RTN","DGMTUB",15,0)
 F  S TDAT=$O(^DGMT(408.31,"AID",1,DFN,TDAT)) Q:'TDAT!STOP  D
"RTN","DGMTUB",16,0)
 .S MTI=0 F  S MTI=$O(^DGMT(408.31,"AID",1,DFN,TDAT,MTI)) Q:'MTI!STOP  D
"RTN","DGMTUB",17,0)
 ..S MT0=$G(^DGMT(408.31,MTI,0)) Q:'$G(^("PRIM"))  ; not primary MT
"RTN","DGMTUB",18,0)
 ..;
"RTN","DGMTUB",19,0)
 ..; - evaluate the test if the category isn't 'REQUIRED'
"RTN","DGMTUB",20,0)
 ..I MT0,$P(MT0,"^",3)'=1 D
"RTN","DGMTUB",21,0)
 ...S EDAT=$S($P(MT0,"^",3)=3:+MT0,1:$P(MT0,"^",7))
"RTN","DGMTUB",22,0)
 ...;
"RTN","DGMTUB",23,0)
 ...; - if the patient is not billable on the evaluation date, quit
"RTN","DGMTUB",24,0)
 ...I EDAT\1=(DGDT\1),'$$CK(MT0) S STOP=1 Q
"RTN","DGMTUB",25,0)
 ...;
"RTN","DGMTUB",26,0)
 ...; - if the test effective date is prior to the evaluation date,
"RTN","DGMTUB",27,0)
 ...;   obtain the billable status and quit
"RTN","DGMTUB",28,0)
 ...I EDAT'>DGDT S BILL=$$CK(MT0),STOP=1
"RTN","DGMTUB",29,0)
 ;
"RTN","DGMTUB",30,0)
BILQ Q BILL
"RTN","DGMTUB",31,0)
 ;
"RTN","DGMTUB",32,0)
BILST(DFN) ;Determine the last date patient was pending adjudication
"RTN","DGMTUB",33,0)
 ;        or category C and agreed to pay the deductible
"RTN","DGMTUB",34,0)
 ;         Input  -- DFN   Patient IEN
"RTN","DGMTUB",35,0)
 ;         Output -- Last effective date
"RTN","DGMTUB",36,0)
 N DGDT,DGENDT,DGMT0,DGMTI,DGMTIDT,DGSTDT
"RTN","DGMTUB",37,0)
 S (DGDT,DGENDT,DGSTDT)=""
"RTN","DGMTUB",38,0)
 I '$G(DFN) G BILSTQ
"RTN","DGMTUB",39,0)
 I $$BIL(DFN,DT) S DGDT=DT G BILSTQ
"RTN","DGMTUB",40,0)
 ;
"RTN","DGMTUB",41,0)
 S DGMTIDT="" F  S DGMTIDT=$O(^DGMT(408.31,"AID",1,DFN,DGMTIDT)) Q:DGMTIDT=""!(DGDT)  D
"RTN","DGMTUB",42,0)
 .S DGMTI=0 F  S DGMTI=$O(^DGMT(408.31,"AID",1,DFN,DGMTIDT,DGMTI)) Q:DGMTI=""!(DGDT)  D
"RTN","DGMTUB",43,0)
 ..I $D(^DGMT(408.31,DGMTI,0)),$G(^("PRIM")) S DGMT0=^(0) D CKDT
"RTN","DGMTUB",44,0)
 ;
"RTN","DGMTUB",45,0)
BILSTQ Q +$P($G(DGDT),".")
"RTN","DGMTUB",46,0)
 ;
"RTN","DGMTUB",47,0)
CKDT ;Check the date of test
"RTN","DGMTUB",48,0)
 N DGMTS,X,X1,X2,Y
"RTN","DGMTUB",49,0)
 S Y=$$CK(DGMT0) S DGMTS=$P(DGMT0,"^",3) S:Y DGSTDT=$P(DGMT0,"^",7) S:'Y DGENDT=$S(DGMTS=1:DGENDT,DGMTS=3:$P(DGMT0,"^"),1:$P(DGMT0,"^",7))
"RTN","DGMTUB",50,0)
 I DGSTDT S:'DGENDT DGDT=DT I DGENDT S X1=DGENDT,X2=-1 D C^%DTC S DGDT=X
"RTN","DGMTUB",51,0)
 Q
"RTN","DGMTUB",52,0)
 ;
"RTN","DGMTUB",53,0)
CK(DGMT0) ;Check if patient is pending adjudication or category C
"RTN","DGMTUB",54,0)
 ;        and has agreed to pay the deductible
"RTN","DGMTUB",55,0)
 ;        Add check for GMT status (DG*5.3*456)
"RTN","DGMTUB",56,0)
 ;         Input  -- DGMT0  Annual Means Test 0th node
"RTN","DGMTUB",57,0)
 ;         Output -- 1=TRUE and 0=FALSE
"RTN","DGMTUB",58,0)
 N DGMTATP,DGMTS,Y
"RTN","DGMTUB",59,0)
 S DGMTS=$P(DGMT0,"^",3),DGMTATP=$P(DGMT0,"^",11)
"RTN","DGMTUB",60,0)
 I ("^2^6^16^"[("^"_DGMTS_"^"))&(DGMTATP'=0) S Y=1
"RTN","DGMTUB",61,0)
 Q +$G(Y)
"RTN","DGMTUB",62,0)
 ;
"RTN","DGMTUB",63,0)
GMT(DFN,DGDT) ;Determine if patient is GMT Copay Required as of the date
"RTN","DGMTUB",64,0)
 ;        specified
"RTN","DGMTUB",65,0)
 ;         Input  -- DFN   Patient IEN
"RTN","DGMTUB",66,0)
 ;                   DGDT  Date/Time
"RTN","DGMTUB",67,0)
 ;         Output -- 1=Patient had GMT status or Pending Adjudication
"RTN","DGMTUB",68,0)
 ;                      for GMT as of date specified
"RTN","DGMTUB",69,0)
 ;                   0=Patient did not have GMT status
"RTN","DGMTUB",70,0)
 ;
"RTN","DGMTUB",71,0)
 N DGMT,DGSTA,DGMT0,DGMTG
"RTN","DGMTUB",72,0)
 I '$G(DFN) Q 0
"RTN","DGMTUB",73,0)
 S:'$G(DGDT) DGDT=DT
"RTN","DGMTUB",74,0)
 ; Get last primary means test with status other than Required
"RTN","DGMTUB",75,0)
 S DGMT=$$LVMT^DGMTU(DFN,DGDT),DGSTA=$P(DGMT,U,4)
"RTN","DGMTUB",76,0)
 I DGSTA="G" Q 1  ; status = GMT copay required
"RTN","DGMTUB",77,0)
 S DGMT0=$G(^DGMT(408.31,+DGMT,0)),DGMTG=$P(DGMT0,U,27)
"RTN","DGMTUB",78,0)
 I DGMTG="" Q 0
"RTN","DGMTUB",79,0)
 ; If status = Pending Adjudication and GMT Threhold is greater than
"RTN","DGMTUB",80,0)
 ; MT Threshold, then patient is Pending Adjudication for GMT
"RTN","DGMTUB",81,0)
 I DGSTA="P",DGMTG>$P(DGMT0,U,12) Q 1
"RTN","DGMTUB",82,0)
 Q 0
"VER")
8.0^22
**INSTALL NAME**
IVM*2.0*67
"BLD",4104,0)
IVM*2.0*67^INCOME VERIFICATION MATCH^0^3030127^y
"BLD",4104,4,0)
^9.64PA^^
"BLD",4104,"KRN",0)
^9.67PA^8989.52^19
"BLD",4104,"KRN",.4,0)
.4
"BLD",4104,"KRN",.401,0)
.401
"BLD",4104,"KRN",.402,0)
.402
"BLD",4104,"KRN",.403,0)
.403
"BLD",4104,"KRN",.5,0)
.5
"BLD",4104,"KRN",.84,0)
.84
"BLD",4104,"KRN",3.6,0)
3.6
"BLD",4104,"KRN",3.8,0)
3.8
"BLD",4104,"KRN",9.2,0)
9.2
"BLD",4104,"KRN",9.8,0)
9.8
"BLD",4104,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",4104,"KRN",9.8,"NM",1,0)
IVMCM6^^0^B72045688
"BLD",4104,"KRN",9.8,"NM",2,0)
IVMCME5^^0^B44133186
"BLD",4104,"KRN",9.8,"NM","B","IVMCM6",1)

"BLD",4104,"KRN",9.8,"NM","B","IVMCME5",2)

"BLD",4104,"KRN",19,0)
19
"BLD",4104,"KRN",19.1,0)
19.1
"BLD",4104,"KRN",101,0)
101
"BLD",4104,"KRN",409.61,0)
409.61
"BLD",4104,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",4104,"KRN",771,0)
771
"BLD",4104,"KRN",870,0)
870
"BLD",4104,"KRN",8989.51,0)
8989.51
"BLD",4104,"KRN",8989.52,0)
8989.52
"BLD",4104,"KRN",8994,0)
8994
"BLD",4104,"KRN","B",.4,.4)

"BLD",4104,"KRN","B",.401,.401)

"BLD",4104,"KRN","B",.402,.402)

"BLD",4104,"KRN","B",.403,.403)

"BLD",4104,"KRN","B",.5,.5)

"BLD",4104,"KRN","B",.84,.84)

"BLD",4104,"KRN","B",3.6,3.6)

"BLD",4104,"KRN","B",3.8,3.8)

"BLD",4104,"KRN","B",9.2,9.2)

"BLD",4104,"KRN","B",9.8,9.8)

"BLD",4104,"KRN","B",19,19)

"BLD",4104,"KRN","B",19.1,19.1)

"BLD",4104,"KRN","B",101,101)

"BLD",4104,"KRN","B",409.61,409.61)

"BLD",4104,"KRN","B",771,771)

"BLD",4104,"KRN","B",870,870)

"BLD",4104,"KRN","B",8989.51,8989.51)

"BLD",4104,"KRN","B",8989.52,8989.52)

"BLD",4104,"KRN","B",8994,8994)

"BLD",4104,"QUES",0)
^9.62^^
"BLD",4104,"REQB",0)
^9.611^1^1
"BLD",4104,"REQB",1,0)
IVM*2.0*62^2
"BLD",4104,"REQB","B","IVM*2.0*62",1)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
67^3030127
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IVMCM6")
0^1^B72045688
"RTN","IVMCM6",1,0)
IVMCM6 ;ALB/SEK,JAN,RTK,CKN,TDM - COMPLETE DCD INCOME TEST ; 8/28/02 2:17pm
"RTN","IVMCM6",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,25,39,44,50,53,49,58,62,67**;21-OCT-94
"RTN","IVMCM6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMCM6",4,0)
 ;
"RTN","IVMCM6",5,0)
EN ; This routine will update annual means test file (#408.31):
"RTN","IVMCM6",6,0)
 ;      
"RTN","IVMCM6",7,0)
 ; Note: There is no entry in 408.31 for income screening.
"RTN","IVMCM6",8,0)
 ;
"RTN","IVMCM6",9,0)
 ;
"RTN","IVMCM6",10,0)
 ;Input:
"RTN","IVMCM6",11,0)
 ;  DGMTI - ien of new Annual Means Test which requires completion
"RTN","IVMCM6",12,0)
 ;  IVMMTIEN - ien of replaced test (may not exist)
"RTN","IVMCM6",13,0)
 ;
"RTN","IVMCM6",14,0)
 ; - open case record in (#301.5) file
"RTN","IVMCM6",15,0)
 N DGREF,DATA,CODE,FIELD,RET,NODE0,NODE2,OK2SND
"RTN","IVMCM6",16,0)
 D CHKTST,OPEN
"RTN","IVMCM6",17,0)
 ;
"RTN","IVMCM6",18,0)
 ; - if income screening goto MTBULL
"RTN","IVMCM6",19,0)
 I IVMTYPE=3 G MTBULL
"RTN","IVMCM6",20,0)
 ;
"RTN","IVMCM6",21,0)
 ; - setup variables for (#408.31) file
"RTN","IVMCM6",22,0)
 ;get the ZMT segment, translate HLQ's to NULLS
"RTN","IVMCM6",23,0)
 S IVMSEG=$G(^TMP($J,"IVMCM","ZMT"_IVMTYPE)) ; get mt/copay ZMT segment
"RTN","IVMCM6",24,0)
 F FIELD=4:1:29 I FIELD'=24,$P(IVMSEG,HLFS,FIELD)=HLQ S $P(IVMSEG,HLFS,FIELD)=""
"RTN","IVMCM6",25,0)
 ;
"RTN","IVMCM6",26,0)
 S IVM1=$$FMDATE^HLFNC($P(IVMSEG,"^",10)) ; dt/time completed
"RTN","IVMCM6",27,0)
 S IVM2=$P(IVMSEG,"^",7) ; agree to pay deductible
"RTN","IVMCM6",28,0)
 S IVM3=$$FMDATE^HLFNC($P(IVMSEG,"^",15)) ; dt vet signed test
"RTN","IVMCM6",29,0)
 S IVM4=$P(IVMSEG,"^",16) ; declines to give income info field
"RTN","IVMCM6",30,0)
 S:IVM4 DGREF=""
"RTN","IVMCM6",31,0)
 S IVM5=$$FMDATE^HLFNC($P(IVMSEG,"^",6)) ; dt/time of adjudication
"RTN","IVMCM6",32,0)
 S IVM6=$P(IVMSEG,"^",3) ;status
"RTN","IVMCM6",33,0)
 S IVM7=$P(IVMSEG,"^",13) ; hardship
"RTN","IVMCM6",34,0)
 S:$G(IVMHADJ) IVMCAT=$P(IVMSEG,"^",3) ; test status 
"RTN","IVMCM6",35,0)
 S IVM8=$P(IVMSEG,"^",22) ; site conducting test
"RTN","IVMCM6",36,0)
 S IVM9=$P(IVMSEG,"^",23) ; site granting hardship
"RTN","IVMCM6",37,0)
 S IVM10=$P(IVMSEG,"^",11) ; prev years threshold
"RTN","IVMCM6",38,0)
 S IVM11=$P(IVMSEG,"^",18) ; source of test
"RTN","IVMCM6",39,0)
 S IVM12=$$FMDATE^HLFNC($P(IVMSEG,"^",24)) ; hardship effective date
"RTN","IVMCM6",40,0)
 S IVM13=$$FMDATE^HLFNC($P(IVMSEG,"^",25)) ; date/time last edited
"RTN","IVMCM6",41,0)
 S IVM14=$P(IVMSEG,"^",26) ; test determined status
"RTN","IVMCM6",42,0)
 S IVM15=$P(IVMSEG,"^",4) ; income 
"RTN","IVMCM6",43,0)
 S IVM16=$P(IVMSEG,"^",5) ; net worth
"RTN","IVMCM6",44,0)
 S IVM17=$P(IVMSEG,"^",8) ; threshold A
"RTN","IVMCM6",45,0)
 S IVM18=$P(IVMSEG,"^",9) ; deductible expenses
"RTN","IVMCM6",46,0)
 S IVM19=$P(IVMSEG,"^",12) ; total dependents
"RTN","IVMCM6",47,0)
 S IVM20=$P(IVMSEG,"^",27) ; signature valid?
"RTN","IVMCM6",48,0)
 S IVM21=$$FMDATE^HLFNC($P(IVMSEG,"^",14)) ; hardship review date
"RTN","IVMCM6",49,0)
 S IVM22=$P(IVMSEG,"^",28) ; GMT threshold
"RTN","IVMCM6",50,0)
 S IVM23=$P(IVMSEG,"^",29) ; hardship reason
"RTN","IVMCM6",51,0)
 ;
"RTN","IVMCM6",52,0)
 ;old tests may not have the field Test-Determined Status
"RTN","IVMCM6",53,0)
 I IVM14="" D
"RTN","IVMCM6",54,0)
 .I IVMTYPE=1,IVM7,"AG"[IVM6 D  Q
"RTN","IVMCM6",55,0)
 ..I IVM6="A",(IVM15'>IVM22) S IVM14="G" Q   ;Income <= GMT Threshold
"RTN","IVMCM6",56,0)
 ..S IVM14="C"
"RTN","IVMCM6",57,0)
 .S IVM14=IVM6
"RTN","IVMCM6",58,0)
 ;
"RTN","IVMCM6",59,0)
 ; - fields for means test, copay test and Long Term Care Test
"RTN","IVMCM6",60,0)
 S DATA(.14)=IVM4,DATA(.18)=IVM19,DATA(.23)=IVM11,DATA(2.05)=IVM8,DATA(.06)=DUZ,DATA(.07)=IVM1,DATA(2.02)=IVM13,DATA(2.03)=$$GETSTAT^DGMTH(IVM14,IVMTYPE)
"RTN","IVMCM6",61,0)
 ;
"RTN","IVMCM6",62,0)
 I IVM7 S DATA(.08)=.5,DATA(.09)=$$NOW^XLFDT
"RTN","IVMCM6",63,0)
 ;
"RTN","IVMCM6",64,0)
 I 'IVM4 S DATA(.04)=IVM15,DATA(.15)=IVM18
"RTN","IVMCM6",65,0)
 ;
"RTN","IVMCM6",66,0)
 ; - means test fields
"RTN","IVMCM6",67,0)
 I IVMTYPE=1 D
"RTN","IVMCM6",68,0)
 .S DATA(.11)=IVM2,DATA(.12)=IVM17,DATA(.2)=IVM7,DATA(.24)=IVM3,DATA(.29)=IVM20,DATA(2.04)=IVM9,DATA(.1)=IVM5,DATA(2.01)=IVM12
"RTN","IVMCM6",69,0)
 .I 'IVM4 S DATA(.05)=IVM16
"RTN","IVMCM6",70,0)
 .S DATA(.16)=IVM10,DATA(.21)=IVM21,DATA(.27)=IVM22,DATA(2.09)=IVM23
"RTN","IVMCM6",71,0)
 ;
"RTN","IVMCM6",72,0)
 ; - Long Term Care fields
"RTN","IVMCM6",73,0)
 I IVMTYPE=4 D
"RTN","IVMCM6",74,0)
 .N DATE,TYPE
"RTN","IVMCM6",75,0)
 .;set pointer to associated means test or RX copay test if there is one
"RTN","IVMCM6",76,0)
 .I $P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2) S DATE=$P(^TMP($J,"IVMCM","ZMT1"),HLFS,2),TYPE=1
"RTN","IVMCM6",77,0)
 .E  I $P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2) S DATE=$P(^TMP($J,"IVMCM","ZMT2"),HLFS,2),TYPE=2
"RTN","IVMCM6",78,0)
 .I $G(DATE) S DATA(2.08)=$P($$LST^DGMTU(DFN,DATE,TYPE),"^")
"RTN","IVMCM6",79,0)
 .S DATA(.11)=IVM2
"RTN","IVMCM6",80,0)
 .I 'IVM4 S DATA(.05)=IVM16
"RTN","IVMCM6",81,0)
 .K DATA(2.03)  ;test determined status is not used in LTC test
"RTN","IVMCM6",82,0)
 ;
"RTN","IVMCM6",83,0)
 I $G(IVMMTIEN) D
"RTN","IVMCM6",84,0)
 .; Get record data to compare with HL7 Message data
"RTN","IVMCM6",85,0)
 .S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","IVMCM6",86,0)
 .S NODE2=$G(^DGMT(408.31,IVMMTIEN,2))
"RTN","IVMCM6",87,0)
 .;
"RTN","IVMCM6",88,0)
 .; If Site Conducting Test is the same, get Completed By from record.
"RTN","IVMCM6",89,0)
 .I $P(NODE2,"^",5)=IVM8 S DATA(.06)=$P(NODE0,"^",6)
"RTN","IVMCM6",90,0)
 .;
"RTN","IVMCM6",91,0)
 .; If there are Comments, copy them into new record
"RTN","IVMCM6",92,0)
 .I $D(^DGMT(408.31,IVMMTIEN,"C")) S DATA(50)="^DGMT(408.31,"_IVMMTIEN_",""C"")"
"RTN","IVMCM6",93,0)
 .;
"RTN","IVMCM6",94,0)
 .I IVMTYPE=1 D
"RTN","IVMCM6",95,0)
 ..; Hardship is YES in msg and record, and the Site Granting Hardship
"RTN","IVMCM6",96,0)
 ..; is the same as the site receiving the msg, keep the record data
"RTN","IVMCM6",97,0)
 ..I IVM7,$P(NODE0,"^",20),IVM9=$P($$SITE^VASITE,"^",3) S DATA(.21)=$P(NODE0,"^",21),DATA(.22)=$P(NODE0,"^",22),DATA(2.01)=$P(NODE2,"^",1),DATA(.08)=$P(NODE0,"^",8),DATA(.09)=$P(NODE0,"^",9)
"RTN","IVMCM6",98,0)
 ..;
"RTN","IVMCM6",99,0)
 ..; Hardship is YES in msg and record, and the Site Granting Hardship
"RTN","IVMCM6",100,0)
 ..; is NOT the same in both the msg and record, keep the message data
"RTN","IVMCM6",101,0)
 ..I IVM7,$P(NODE0,"^",20),$P(NODE2,"^",4)'=IVM9 S DATA(.22)=DATA(.06)
"RTN","IVMCM6",102,0)
 ..;
"RTN","IVMCM6",103,0)
 ..; Hardship is YES in msg and NO in record, keep the message data
"RTN","IVMCM6",104,0)
 ..I IVM7,'$P(NODE0,"^",20) S DATA(.22)=DATA(.06)
"RTN","IVMCM6",105,0)
 ..;
"RTN","IVMCM6",106,0)
 ..; Hardship is set to delete in msg, delete the Hardship
"RTN","IVMCM6",107,0)
 ..I IVM12=HLQ!('IVM7&($P(NODE0,"^",20))) D
"RTN","IVMCM6",108,0)
 ...S (DATA(.08),DATA(.09),DATA(.2),DATA(.21),DATA(.22),DATA(2.01),DATA(2.04),DATA(2.09))=""
"RTN","IVMCM6",109,0)
 ...I $P(NODE0,"^",20) D BULL2^IVMCMB(DFN,$P(NODE2,"^"),$P(NODE2,"^",4))
"RTN","IVMCM6",110,0)
 ..;
"RTN","IVMCM6",111,0)
 ..; Hardship is NO in msg and in record, keep the message data
"RTN","IVMCM6",112,0)
 ..I 'IVM7,'$P(NODE0,"^",20) S DATA(.22)=""
"RTN","IVMCM6",113,0)
 ..;
"RTN","IVMCM6",114,0)
 ..; Notify site of hardship?
"RTN","IVMCM6",115,0)
 ..I IVM12'=HLQ,IVM7,((IVM12'=$P(NODE2,"^"))!('$P(NODE0,"^",20))) D BULL1^IVMCMB(DFN,IVM12,IVM9)
"RTN","IVMCM6",116,0)
 ..;
"RTN","IVMCM6",117,0)
 ..; Notify site to discontinue net-worth development?
"RTN","IVMCM6",118,0)
 ..I IVM11=3,$P(NODE0,"^",23)=1,$$GETCODE^DGMTH($P(NODE0,"^",3))="P" D BULL3^IVMCMB(DFN)
"RTN","IVMCM6",119,0)
 ;
"RTN","IVMCM6",120,0)
 ;determine status based on test-determined status and hardship
"RTN","IVMCM6",121,0)
 S CODE=IVM14
"RTN","IVMCM6",122,0)
 I IVMTYPE=1,DATA(.2) S CODE=IVM6
"RTN","IVMCM6",123,0)
 S DATA(.03)=$$GETSTAT^DGMTH(CODE,IVMTYPE)
"RTN","IVMCM6",124,0)
 ;
"RTN","IVMCM6",125,0)
 I $$UPD^DGENDBS(408.31,DGMTI,.DATA) D
"RTN","IVMCM6",126,0)
 .; can't call MT Events protocol for Long Term Care Copay Exemption
"RTN","IVMCM6",127,0)
 .; Tests as it triggers an IB and Enrollment update
"RTN","IVMCM6",128,0)
 .; so manually call needed protocols to trigger audit, date stamp
"RTN","IVMCM6",129,0)
 .; and transmission (if necessary)
"RTN","IVMCM6",130,0)
 .I IVMTYPE=4 D  Q
"RTN","IVMCM6",131,0)
 ..S:$G(DGMTACT)="" DGMTACT="ADD"
"RTN","IVMCM6",132,0)
 ..S DGMTINF=1  ;Means Test Interactive/Non-interactive flag
"RTN","IVMCM6",133,0)
 ..D AFTER^DGMTEVT
"RTN","IVMCM6",134,0)
 ..D EN^DGMTAUD                   ;means test audit event
"RTN","IVMCM6",135,0)
 ..D ^IVMPMTE                     ;IVM means test event
"RTN","IVMCM6",136,0)
 ..D DATETIME^DGMTU4($G(DGMTI))   ;date stamp
"RTN","IVMCM6",137,0)
 .;
"RTN","IVMCM6",138,0)
 .; - call means test event driver if not future test
"RTN","IVMCM6",139,0)
 .I 'IVMFUTR D
"RTN","IVMCM6",140,0)
 ..D:(IVMTYPE=1) MTPRIME^DGMTU4(DGMTI)
"RTN","IVMCM6",141,0)
 ..D:(IVMTYPE=2) RXPRIME^DGMTU4(DGMTI)
"RTN","IVMCM6",142,0)
 ..S CODE=$$GETCODE^DGMTH($P($G(^DGMT(408.31,DGMTI,0)),"^",3))
"RTN","IVMCM6",143,0)
 .E  D
"RTN","IVMCM6",144,0)
 ..;enter to list of future tests kept in the IVM Patient file
"RTN","IVMCM6",145,0)
 ..D ADDFUTR^IVMPLOG2(DGMTI)
"RTN","IVMCM6",146,0)
 ..;also, if HEC changed the test to a future date, there could be
"RTN","IVMCM6",147,0)
 ..;a test on file for the same income year marked as primary
"RTN","IVMCM6",148,0)
 ..I $G(IVMMTIEN),$P(NODE2,"^",5)=IVM8 D
"RTN","IVMCM6",149,0)
 ...N DATA,ERROR,DGMTI,DGMTACT,DGMTYPT,DGMTA
"RTN","IVMCM6",150,0)
 ...S DATA(2)=0
"RTN","IVMCM6",151,0)
 ...I $$UPD^DGENDBS(408.31,IVMMTIEN,.DATA,.ERROR)
"RTN","IVMCM6",152,0)
 ...; if the test being replaced by the uploaded future test
"RTN","IVMCM6",153,0)
 ...; becomes non-primary and the site conducted both tests
"RTN","IVMCM6",154,0)
 ...; then call Means Test event driver (non interactively)
"RTN","IVMCM6",155,0)
 ...S DGMTACT="EDT",DGMTI=IVMMTIEN,DGMTYPT=IVMTYPE,DGMTINF=1
"RTN","IVMCM6",156,0)
 ...D AFTER^DGMTEVT
"RTN","IVMCM6",157,0)
 ...D EN^DGMTEVT
"RTN","IVMCM6",158,0)
 ...D
"RTN","IVMCM6",159,0)
 ....N DGMSGF,DGADDF
"RTN","IVMCM6",160,0)
 ....S DGMSGF=1,DGADDF=0
"RTN","IVMCM6",161,0)
 ....D EN^DGMTR
"RTN","IVMCM6",162,0)
 .D:OK2SND TRNSMT
"RTN","IVMCM6",163,0)
 ;
"RTN","IVMCM6",164,0)
 ;
"RTN","IVMCM6",165,0)
MTBULL ; Build results array
"RTN","IVMCM6",166,0)
 D ADD^IVMCMB(DFN,IVMTYPE,$S(IVMFUTR:"Future Test",1:"New Test"),$G(IVMMTDT),$S($G(IVMMTIEN):$$GETCODE^DGMTH($P($G(^DGMT(408.31,IVMMTIEN,0)),"^",3)),1:""),CODE)
"RTN","IVMCM6",167,0)
 ;
"RTN","IVMCM6",168,0)
CLEANUP ; cleanup
"RTN","IVMCM6",169,0)
 K DGCAT,DGCOMF,DGMTACT,DGMTI,DGMTINF,DGMTPAR,DGTHB,IVMBU45,IVMOP,IVMOP1
"RTN","IVMCM6",170,0)
 K IVM1,IVM2,IVM3,IVM4,IVM5,IVM6,IVM7,IVM8,IVM9,IVM10,IVM11,IVM12,IVM13,IVM14,IVMCAT,IVMCEA,IVMCEB,IVMMTA,IVM15,IVM16,IVM17,IVM18,IVM19,IVM20,IVM21
"RTN","IVMCM6",171,0)
 K IVM22,IVM23
"RTN","IVMCM6",172,0)
 Q
"RTN","IVMCM6",173,0)
 ;
"RTN","IVMCM6",174,0)
OPEN ; open case record for uploaded test
"RTN","IVMCM6",175,0)
 S IVMOP="",IVMOP=$O(^IVM(301.5,"AYR",DGLY,DFN,IVMOP)) I 'IVMOP D OPEN1 Q
"RTN","IVMCM6",176,0)
 S IVMOP1=$G(^IVM(301.5,IVMOP,0)) I 'IVMOP1 D OPEN1 Q
"RTN","IVMCM6",177,0)
 I $P(IVMOP1,"^",4)=1 S DA=+IVMOP D  Q
"RTN","IVMCM6",178,0)
 .S DIE="^IVM(301.5,",DR=".03////1;.04////0"
"RTN","IVMCM6",179,0)
 .D OPEN2
"RTN","IVMCM6",180,0)
 Q
"RTN","IVMCM6",181,0)
OPEN1 K DD,DO
"RTN","IVMCM6",182,0)
 S DIC="^IVM(301.5,",DIC(0)="LMNZ",X=DFN,DLAYGO=301.5
"RTN","IVMCM6",183,0)
 D FILE^DICN Q:Y'>0  S DA=+Y
"RTN","IVMCM6",184,0)
 S DIE="^IVM(301.5,",DR=".02////^S X=DGLY;.03////1;.04////0"
"RTN","IVMCM6",185,0)
OPEN2 D ^DIE K DD,DO,DIC,DLAYGO,X,Y,DIE,DR
"RTN","IVMCM6",186,0)
 Q
"RTN","IVMCM6",187,0)
 ;
"RTN","IVMCM6",188,0)
MTDRIVER ; call means test event driver
"RTN","IVMCM6",189,0)
 ; dgmtact
"RTN","IVMCM6",190,0)
 ; adj  adjudicated mt
"RTN","IVMCM6",191,0)
 ; cat  hardship mt
"RTN","IVMCM6",192,0)
 ; add  new mt or copay
"RTN","IVMCM6",193,0)
 ; edit corrected mt or copay
"RTN","IVMCM6",194,0)
 ;         
"RTN","IVMCM6",195,0)
 N IVMDA,IVMDT,IVMFLG,IVMMTDT,IVMNEW
"RTN","IVMCM6",196,0)
 S DGMTACT=$S($G(IVMHADJ)=1:"ADJ",$G(IVMHADJ)=2:"CAT",'$G(DGMTP):"ADD",1:"EDT")
"RTN","IVMCM6",197,0)
 D AFTER^DGMTEVT
"RTN","IVMCM6",198,0)
 S DGMTINF=1 ; non-interactive flag
"RTN","IVMCM6",199,0)
 D EN^DGMTEVT
"RTN","IVMCM6",200,0)
 Q
"RTN","IVMCM6",201,0)
 ;
"RTN","IVMCM6",202,0)
CHKTST ; Verify if the incoming Income Test requires a Z07 transmission.
"RTN","IVMCM6",203,0)
 ;
"RTN","IVMCM6",204,0)
 N MTREC,REC01,ZMTSEG
"RTN","IVMCM6",205,0)
 S OK2SND=0
"RTN","IVMCM6",206,0)
 S MTREC=$G(^DGMT(408.31,DGMTI,0))
"RTN","IVMCM6",207,0)
 Q:'$D(^DGMT(408.31,DGMTI,0))
"RTN","IVMCM6",208,0)
 ; Check if the Source of the Test is DCD
"RTN","IVMCM6",209,0)
 S ZMTSEG=$G(^TMP($J,"IVMCM","ZMT"_IVMTYPE))
"RTN","IVMCM6",210,0)
 Q:$P($G(^DG(408.34,+$P(ZMTSEG,U,18),0)),U)'="DCD"
"RTN","IVMCM6",211,0)
 ;Check if the DCD software has been installed
"RTN","IVMCM6",212,0)
 Q:'$$VERSION^XPDUTL("IVMC")
"RTN","IVMCM6",213,0)
 ;
"RTN","IVMCM6",214,0)
 ; If the source of the test is DCD, and the site receiving the test
"RTN","IVMCM6",215,0)
 ; is a DCD site, set the record to transmit.
"RTN","IVMCM6",216,0)
 S OK2SND=1
"RTN","IVMCM6",217,0)
 Q
"RTN","IVMCM6",218,0)
 ;
"RTN","IVMCM6",219,0)
TRNSMT ; Set the record to transmit due to DCD Criteria
"RTN","IVMCM6",220,0)
 N REC01,DCDDATA,DCDIEN,EVENTS,ERROR
"RTN","IVMCM6",221,0)
 S REC01=$O(^IVM(301.5,"AYR",DGLY,DFN,""))
"RTN","IVMCM6",222,0)
 S DCDDATA(.04)=0,DCDIEN=REC01
"RTN","IVMCM6",223,0)
 I $$UPD^DGENDBS(301.5,DCDIEN,.DCDDATA,.ERROR)
"RTN","IVMCM6",224,0)
 S EVENTS("DCD")=1
"RTN","IVMCM6",225,0)
 I $$SETSTAT^IVMPLOG(REC01,.EVENTS)
"RTN","IVMCM6",226,0)
 ;
"RTN","IVMCM6",227,0)
 Q
"RTN","IVMCME5")
0^2^B44133186
"RTN","IVMCME5",1,0)
IVMCME5 ;ALB/SEK,KCL,BRM,AEG,BRM,TDM - CHECK INCOME TEST DATA (CON'T.) ; 1/9/03 3:51pm
"RTN","IVMCME5",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,26,38,49,58,62,67**;21-OCT-94
"RTN","IVMCME5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMCME5",4,0)
 ;
"RTN","IVMCME5",5,0)
 ;
"RTN","IVMCME5",6,0)
 ; This routine is called from IVMCME4.
"RTN","IVMCME5",7,0)
 ;
"RTN","IVMCME5",8,0)
MT(STRING,INCOME) ; Calculate means test status
"RTN","IVMCME5",9,0)
 ;
"RTN","IVMCME5",10,0)
 ; - init vars
"RTN","IVMCME5",11,0)
 N X,Y,ADJ,HAR,INC,NET,THRESH,THRESHA,THRESHT,IVMTEXT,XMSUB,CAT,CAT1
"RTN","IVMCME5",12,0)
 N THRESHG,THRESHV,EXP,NWC,DGMTICYR
"RTN","IVMCME5",13,0)
 ;DGMTBS - BASE THRESHOLD VALUE FOR SITE
"RTN","IVMCME5",14,0)
 ;DGMTBH - BASE THRESHOLD VALUE SENT FROM HEC
"RTN","IVMCME5",15,0)
 ;DGTDEP - TOTAL # OF DEPENDENTS SENT BY HEC.
"RTN","IVMCME5",16,0)
 N VADM,DGMTBS,DGMTBH,DGTDEP,ECODE,DGMTICY    ;BRM added for IVM*2*26
"RTN","IVMCME5",17,0)
 ;
"RTN","IVMCME5",18,0)
 ; - perform initial error checking
"RTN","IVMCME5",19,0)
 S CAT1=$P(STRING,HLFS,3)
"RTN","IVMCME5",20,0)
 I '$$GETSTAT^DGMTH(CAT1,1) S ERROR="Invalid Means Test Status" G MTQ
"RTN","IVMCME5",21,0)
 ;
"RTN","IVMCME5",22,0)
 S CAT=$P(STRING,HLFS,26)
"RTN","IVMCME5",23,0)
 ;
"RTN","IVMCME5",24,0)
 I CAT="" S CAT=CAT1
"RTN","IVMCME5",25,0)
 I CAT'="A",CAT'="C",CAT'="P",CAT'="G" S ERROR="Invalid Means Test Status for Test-Determined Status" G MTQ
"RTN","IVMCME5",26,0)
 ;
"RTN","IVMCME5",27,0)
 ; - if previous yr mt threshold flag is set use date of prev year
"RTN","IVMCME5",28,0)
 S X=$S($P(STRING,HLFS,11):($E($P(STRING,HLFS,2),1,4)-1),1:$E($P(STRING,HLFS,2),1,4)),DGMTICY=$P($G(STRING),HLFS,2)
"RTN","IVMCME5",29,0)
 N Y S Y=$$HL7TFM^XLFDT(DGMTICY,"1D") X ^DD("DD") S DGMTICY=Y
"RTN","IVMCME5",30,0)
 ;
"RTN","IVMCME5",31,0)
 S %DT="" D ^%DT S X=Y K %DT
"RTN","IVMCME5",32,0)
 ;
"RTN","IVMCME5",33,0)
 S THRESH=$G(^DG(43,1,"MT",X,0)),THRESHT=$P(THRESH,U,2),DGMTBS=THRESHT
"RTN","IVMCME5",34,0)
 I $P(STRING,HLFS,12) S THRESHT=THRESHT+$P(THRESH,U,3)+(($P(STRING,HLFS,12)-1)*$P(THRESH,U,4)),DGTDEP=$P($G(STRING),HLFS,12)
"RTN","IVMCME5",35,0)
 S DGMTICYR=$$LYR^DGMTSCU1($$HL7TFM^XLFDT($P(STRING,HLFS,2)))
"RTN","IVMCME5",36,0)
 S THRESHV=$$GMTT(DFN,DGMTICYR,$G(DGTDEP))
"RTN","IVMCME5",37,0)
 ;
"RTN","IVMCME5",38,0)
 S INC=$P(STRING,HLFS,4)
"RTN","IVMCME5",39,0)
 S EXP=$P(STRING,HLFS,9)
"RTN","IVMCME5",40,0)
 S NET=$P(STRING,HLFS,5)
"RTN","IVMCME5",41,0)
 S NWC=+$G(^DG(43,1,"GMT"))  ; net worth calculation flag
"RTN","IVMCME5",42,0)
 S ADJ=$P(STRING,HLFS,6)
"RTN","IVMCME5",43,0)
 S THRESHA=$P(STRING,HLFS,8),DGMTBH=THRESHA
"RTN","IVMCME5",44,0)
 S THRESHG=$P(STRING,HLFS,28)
"RTN","IVMCME5",45,0)
 I $P(STRING,HLFS,12),(THRESHA'=THRESHT) S THRESHA=THRESHA+$P(THRESH,U,3)+(($P(STRING,HLFS,12)-1)*$P(THRESH,U,4))
"RTN","IVMCME5",46,0)
 S DECLINE=$P(STRING,HLFS,16)
"RTN","IVMCME5",47,0)
 S HAR=$P(STRING,HLFS,13)
"RTN","IVMCME5",48,0)
 ;
"RTN","IVMCME5",49,0)
 ; - perform error checking
"RTN","IVMCME5",50,0)
 I DECLINE,((CAT="A")!(CAT="G")) S ERROR="Declines to give income info-must be MT Copay Required" G MTQ
"RTN","IVMCME5",51,0)
 I DECLINE,CAT="C" G MTQ
"RTN","IVMCME5",52,0)
 ;
"RTN","IVMCME5",53,0)
 ; - if threshold A is incorrect, send message to sites's IVM MESSAGE
"RTN","IVMCME5",54,0)
 ;   mail group and continue to process
"RTN","IVMCME5",55,0)
 I CAT'="G"&(THRESHT'=THRESHA) D
"RTN","IVMCME5",56,0)
 .;
"RTN","IVMCME5",57,0)
 .;brm;27apr00;code modifications below to add PID and Name to message
"RTN","IVMCME5",58,0)
 .D:$G(DFN)'=""
"RTN","IVMCME5",59,0)
 ..N VAHOW,VAROOT,VAPTYP
"RTN","IVMCME5",60,0)
 ..D DEM^VADPT
"RTN","IVMCME5",61,0)
 .S XMSUB="MT threshold discrepancy - "
"RTN","IVMCME5",62,0)
 .S XMSUB=XMSUB_"PID - "_$P($G(VADM(2)),U,2)
"RTN","IVMCME5",63,0)
 .S IVMTEXT(1)="While uploading the following income test from HEC a"
"RTN","IVMCME5",64,0)
 .S IVMTEXT(2)="discrepancy was found with the threshold values."
"RTN","IVMCME5",65,0)
 .S IVMTEXT(3)="  ",IVMTEXT(4)="   NAME: "_$G(VADM(1))
"RTN","IVMCME5",66,0)
 .S IVMTEXT(5)="  ",IVMTEXT(6)="   PID : "_$P($G(VADM(2)),"^",2)
"RTN","IVMCME5",67,0)
 .S IVMTEXT(8)="  ",IVMTEXT(9)="Date of Test sent from HEC: "_DGMTICY
"RTN","IVMCME5",68,0)
 .S IVMTEXT(10)="  "
"RTN","IVMCME5",69,0)
 .S IVMTEXT(11)="Site MT Threshold value: "_$J($FN($G(THRESHT),",",0),6)
"RTN","IVMCME5",70,0)
 .S IVMTEXT(12)="  "
"RTN","IVMCME5",71,0)
 .S IVMTEXT(13)="HEC Transmitted MT Threshold value: "_$J($FN($G(DGMTBH),",",0),6)
"RTN","IVMCME5",72,0)
 .S IVMTEXT(14)="  ",IVMTEXT(16)="Total number of dependents: "_$G(DGTDEP)
"RTN","IVMCME5",73,0)
 .S IVMTEXT(17)="  "
"RTN","IVMCME5",74,0)
 .;brm;27apr00;end of changes
"RTN","IVMCME5",75,0)
 .;
"RTN","IVMCME5",76,0)
 .D MAIL^IVMUFNC("DGMT MT/CT UPLOAD ALERTS")
"RTN","IVMCME5",77,0)
 .Q
"RTN","IVMCME5",78,0)
 I (INC-EXP)'>THRESHA D  I ERROR]"" G MTQ
"RTN","IVMCME5",79,0)
 .I NET']"" S ERROR="This veteran requires net worth" Q
"RTN","IVMCME5",80,0)
 .I ((NET-EXP)+$S(NWC:0,1:INC)'>$P(THRESH,U,8))&((CAT="C")!(CAT="G")) S ERROR="Income plus net worth not greater than threshold value-incorrect status" Q
"RTN","IVMCME5",81,0)
 .I ((NET-EXP)+$S(NWC:0,1:INC)>$P(THRESH,U,8))&(CAT="A"),'$P(STRING,HLFS,6) S ERROR="Patient should be adjudicated-no adjudicated date/time" Q
"RTN","IVMCME5",82,0)
 I (INC-EXP)>THRESHA,CAT'="C",'HAR,'ADJ,CAT'="P",CAT'="G" S ERROR="Incorrect means test status for Test-Determined Status"
"RTN","IVMCME5",83,0)
MTQ Q
"RTN","IVMCME5",84,0)
 ;
"RTN","IVMCME5",85,0)
 ;
"RTN","IVMCME5",86,0)
CO(STRING) ; Calculate copay test status
"RTN","IVMCME5",87,0)
 ;
"RTN","IVMCME5",88,0)
 ; - init vars
"RTN","IVMCME5",89,0)
 N CAT,CAT1,COPDT,DECLINE,DEDEX,DEP,DGCAT,DGCOPS,DGCOST,INC
"RTN","IVMCME5",90,0)
 ;
"RTN","IVMCME5",91,0)
 ; - vars containing ZMT fields
"RTN","IVMCME5",92,0)
 S COPDT=$$FMDATE^HLFNC($P(STRING,HLFS,2))
"RTN","IVMCME5",93,0)
 S CAT1=$P(STRING,HLFS,3)
"RTN","IVMCME5",94,0)
 I '$$GETSTAT^DGMTH(CAT1,2) S ERROR="Invalid Copay Test Status" G COQ
"RTN","IVMCME5",95,0)
 ;
"RTN","IVMCME5",96,0)
 ;For the Test-Determined Status only
"RTN","IVMCME5",97,0)
 ; - a status of E or M or P should be transmitted
"RTN","IVMCME5",98,0)
 ; - P only is networth is used to determine exemption
"RTN","IVMCME5",99,0)
 S CAT=$P(STRING,HLFS,26)
"RTN","IVMCME5",100,0)
 I CAT="" S CAT=CAT1
"RTN","IVMCME5",101,0)
 I CAT'="E",CAT'="M",CAT'="P" S ERROR="Invalid Copay Test Status for Test-Determined Status" G COQ
"RTN","IVMCME5",102,0)
 I CAT="P",'$$NETW^IBARXEU1 S ERROR="Invalid Copay Test Status for Test-Determined Status" G COQ
"RTN","IVMCME5",103,0)
 ;
"RTN","IVMCME5",104,0)
 ; - a status of E or M or P should be transmitted
"RTN","IVMCME5",105,0)
 ; - P only is networth is used to determine exemption
"RTN","IVMCME5",106,0)
 I CAT'="E",CAT'="M",CAT'="P" S ERROR="Invalid Copay Test Status" G COQ
"RTN","IVMCME5",107,0)
 I CAT="P",'$$NETW^IBARXEU1 S ERROR="Invalid Copay Test Status" G COQ
"RTN","IVMCME5",108,0)
 S INC=$P(STRING,HLFS,4)
"RTN","IVMCME5",109,0)
 S DEDEX=$P(STRING,HLFS,9)
"RTN","IVMCME5",110,0)
 S DEP=$P(STRING,HLFS,12)
"RTN","IVMCME5",111,0)
 S DECLINE=$P(STRING,HLFS,16)
"RTN","IVMCME5",112,0)
 ;
"RTN","IVMCME5",113,0)
 S DGCOST=COPDT_U_DFN_U_U_INC,$P(DGCOST,U,14)=DECLINE,$P(DGCOST,U,15)=DEDEX,$P(DGCOST,U,18)=DEP,$P(DGCOST,U,19)=2
"RTN","IVMCME5",114,0)
 S DGCOPS=$$INCDT^IBARXEU1(DGCOST)
"RTN","IVMCME5",115,0)
 S DGCAT=$S(+DGCOPS=1:"E",+DGCOPS=2:"M",+DGCOPS=3:"P",1:"I")
"RTN","IVMCME5",116,0)
 I CAT'=DGCAT S ERROR="Copay Test Status should be "_DGCAT
"RTN","IVMCME5",117,0)
COQ Q
"RTN","IVMCME5",118,0)
 ;
"RTN","IVMCME5",119,0)
 ;
"RTN","IVMCME5",120,0)
INC ; Gather income totals
"RTN","IVMCME5",121,0)
 N DEBD,DEB,DEBT,DGX,EXCL,INC,INCYR,NET,X,Y
"RTN","IVMCME5",122,0)
 I $P(STRING,HLFS,4)']"",'$$IS^IVMCUC(DFN,DGLY),'$P(STRING,HLFS,16) S ERROR="No Income transmitted"
"RTN","IVMCME5",123,0)
 S INC=$P(ARRAY("ZIC"),HLFS,21),DEBT=$P(ARRAY("ZIC"),HLFS,22),NET=$P(ARRAY("ZIC"),HLFS,23)
"RTN","IVMCME5",124,0)
 S DGX=0 F  S DGX=$O(ARRAY(DGX)) Q:'DGX  D
"RTN","IVMCME5",125,0)
 .S INC=INC+($P(ARRAY(DGX,"ZIC"),HLFS,21))
"RTN","IVMCME5",126,0)
 .S NET=NET+($P(ARRAY(DGX,"ZIC"),HLFS,23))
"RTN","IVMCME5",127,0)
 .I $P(ARRAY(DGX,"ZDP"),U,6)'=2 D  Q
"RTN","IVMCME5",128,0)
 ..S X=$E($P(ARRAY("ZMT"),U,2),1,4),%DT="" D ^%DT S INCYR=Y
"RTN","IVMCME5",129,0)
 ..S EXCL=$P($G(^DG(43,1,"MT",INCYR,0)),U,17)
"RTN","IVMCME5",130,0)
 ..S DEBD=($P(ARRAY(DGX,"ZIC"),HLFS,9)-EXCL-$P(ARRAY(DGX,"ZIC"),HLFS,15))
"RTN","IVMCME5",131,0)
 ..S DEBD=$S(DEBD>0:DEBD,1:0)
"RTN","IVMCME5",132,0)
 ..S DEB=($P(ARRAY(DGX,"ZIC"),HLFS,9)-DEBD)
"RTN","IVMCME5",133,0)
 ..S DEBT=DEBT+DEB
"RTN","IVMCME5",134,0)
 .S DEBT=DEBT+($P(ARRAY(DGX,"ZIC"),HLFS,22))
"RTN","IVMCME5",135,0)
INCQ Q
"RTN","IVMCME5",136,0)
 ;
"RTN","IVMCME5",137,0)
 ;
"RTN","IVMCME5",138,0)
SIGN ; Date Veteran Signed/Refused to Sign
"RTN","IVMCME5",139,0)
 I $P(STRING,HLFS,15)]"" D  G:ERROR]"" SIGNQ
"RTN","IVMCME5",140,0)
 .S X=$P(STRING,HLFS,15) I $E(X,1,4)<1994!($E(X,1,4)>($E(DT,1,3)+1700)) S ERROR="Invalid Date Veteran Signed Test" Q
"RTN","IVMCME5",141,0)
 .S X=$$FMDATE^HLFNC($P(STRING,HLFS,15)),%DT="X" D ^%DT I Y<0 S ERROR="Invalid Date Veteran Signed Test" Q
"RTN","IVMCME5",142,0)
SIGNQ Q
"RTN","IVMCME5",143,0)
 ;
"RTN","IVMCME5",144,0)
LTC(STRING) ;calculate LTC test status
"RTN","IVMCME5",145,0)
 ;
"RTN","IVMCME5",146,0)
 N CAT1
"RTN","IVMCME5",147,0)
 S CAT1=$P(STRING,HLFS,3)
"RTN","IVMCME5",148,0)
 I '$$GETSTAT^DGMTH(CAT1,4) S ERROR="Invalid LTC Test Status"
"RTN","IVMCME5",149,0)
 Q
"RTN","IVMCME5",150,0)
 ;
"RTN","IVMCME5",151,0)
GMTT(DFN,DGMTICY,DGTDEP) ;Get GMT Threshold values for veteran
"RTN","IVMCME5",152,0)
 ; Input:      DFN = Patient IEN
"RTN","IVMCME5",153,0)
 ;         DGMTICY = Last Income year
"RTN","IVMCME5",154,0)
 ;          DGTDEP = Total number of dependents
"RTN","IVMCME5",155,0)
 ;Output:     GMTT = GMT Thresholds for Veteran
"RTN","IVMCME5",156,0)
 ;
"RTN","IVMCME5",157,0)
 N DGMTGMT,GMT,GMTT,PCT
"RTN","IVMCME5",158,0)
 S GMTT=0
"RTN","IVMCME5",159,0)
 D GETFIPS^EASAILK(DFN,DGMTICY,.GMT)
"RTN","IVMCME5",160,0)
 I '$G(GMT("GMTIEN")) Q GMTT
"RTN","IVMCME5",161,0)
 S DGMTGMT=$G(^EAS(712.5,GMT("GMTIEN"),1))
"RTN","IVMCME5",162,0)
 I (DGTDEP+1)<9 S GMTT=$P(DGMTGMT,"^",(DGTDEP+1)) Q GMTT
"RTN","IVMCME5",163,0)
 S PCT=((DGTDEP+1)-8)*8+132,GMTT=$P(DGMTGMT,"^",4)*PCT/100
"RTN","IVMCME5",164,0)
 S GMTT=$S(GMTT#50=0:GMTT,1:GMTT+(50-(GMTT#50)))
"RTN","IVMCME5",165,0)
 Q GMTT
"VER")
8.0^22
**INSTALL NAME**
IB*2.0*202
"BLD",4155,0)
IB*2.0*202^INTEGRATED BILLING^0^3030127^y
"BLD",4155,1,0)
^^1^1^3021101^
"BLD",4155,1,1,0)
GMT IB Clean-up patch.
"BLD",4155,4,0)
^9.64PA^^
"BLD",4155,"ABPKG")
n
"BLD",4155,"INIT")
POST^IB20P202
"BLD",4155,"KRN",0)
^9.67PA^8989.52^19
"BLD",4155,"KRN",.4,0)
.4
"BLD",4155,"KRN",.401,0)
.401
"BLD",4155,"KRN",.402,0)
.402
"BLD",4155,"KRN",.403,0)
.403
"BLD",4155,"KRN",.5,0)
.5
"BLD",4155,"KRN",.84,0)
.84
"BLD",4155,"KRN",3.6,0)
3.6
"BLD",4155,"KRN",3.8,0)
3.8
"BLD",4155,"KRN",9.2,0)
9.2
"BLD",4155,"KRN",9.8,0)
9.8
"BLD",4155,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",4155,"KRN",9.8,"NM",1,0)
IB20P202^^0^B66366858
"BLD",4155,"KRN",9.8,"NM",2,0)
IBAGMT^^0^B3103165
"BLD",4155,"KRN",9.8,"NM",3,0)
IBAMTD1^^0^B9598919
"BLD",4155,"KRN",9.8,"NM",4,0)
IBAUTL4^^0^B24214602
"BLD",4155,"KRN",9.8,"NM",5,0)
IBECEA21^^0^B26041958
"BLD",4155,"KRN",9.8,"NM",6,0)
IBECEA3^^0^B61444394
"BLD",4155,"KRN",9.8,"NM",7,0)
IBEMTO^^0^B15335932
"BLD",4155,"KRN",9.8,"NM",8,0)
IBOMTE^^0^B10360703
"BLD",4155,"KRN",9.8,"NM",9,0)
IBRUTL^^0^B7947297
"BLD",4155,"KRN",9.8,"NM",10,0)
IBAMTBU2^^0^B18762869
"BLD",4155,"KRN",9.8,"NM","B","IB20P202",1)

"BLD",4155,"KRN",9.8,"NM","B","IBAGMT",2)

"BLD",4155,"KRN",9.8,"NM","B","IBAMTBU2",10)

"BLD",4155,"KRN",9.8,"NM","B","IBAMTD1",3)

"BLD",4155,"KRN",9.8,"NM","B","IBAUTL4",4)

"BLD",4155,"KRN",9.8,"NM","B","IBECEA21",5)

"BLD",4155,"KRN",9.8,"NM","B","IBECEA3",6)

"BLD",4155,"KRN",9.8,"NM","B","IBEMTO",7)

"BLD",4155,"KRN",9.8,"NM","B","IBOMTE",8)

"BLD",4155,"KRN",9.8,"NM","B","IBRUTL",9)

"BLD",4155,"KRN",19,0)
19
"BLD",4155,"KRN",19.1,0)
19.1
"BLD",4155,"KRN",101,0)
101
"BLD",4155,"KRN",409.61,0)
409.61
"BLD",4155,"KRN",771,0)
771
"BLD",4155,"KRN",870,0)
870
"BLD",4155,"KRN",8989.51,0)
8989.51
"BLD",4155,"KRN",8989.52,0)
8989.52
"BLD",4155,"KRN",8994,0)
8994
"BLD",4155,"KRN","B",.4,.4)

"BLD",4155,"KRN","B",.401,.401)

"BLD",4155,"KRN","B",.402,.402)

"BLD",4155,"KRN","B",.403,.403)

"BLD",4155,"KRN","B",.5,.5)

"BLD",4155,"KRN","B",.84,.84)

"BLD",4155,"KRN","B",3.6,3.6)

"BLD",4155,"KRN","B",3.8,3.8)

"BLD",4155,"KRN","B",9.2,9.2)

"BLD",4155,"KRN","B",9.8,9.8)

"BLD",4155,"KRN","B",19,19)

"BLD",4155,"KRN","B",19.1,19.1)

"BLD",4155,"KRN","B",101,101)

"BLD",4155,"KRN","B",409.61,409.61)

"BLD",4155,"KRN","B",771,771)

"BLD",4155,"KRN","B",870,870)

"BLD",4155,"KRN","B",8989.51,8989.51)

"BLD",4155,"KRN","B",8989.52,8989.52)

"BLD",4155,"KRN","B",8994,8994)

"BLD",4155,"QUES",0)
^9.62^^
"BLD",4155,"REQB",0)
^9.611^2^2
"BLD",4155,"REQB",1,0)
IB*2.0*183^2
"BLD",4155,"REQB",2,0)
DG*5.3*456^2
"BLD",4155,"REQB","B","DG*5.3*456",2)

"BLD",4155,"REQB","B","IB*2.0*183",1)

"INIT")
POST^IB20P202
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
202^3030127^123456809
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3030127
"PKG",200,22,1,"PAH",1,1,1,0)
GMT IB Clean-up patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","IB20P202")
0^1^B66366858
"RTN","IB20P202",1,0)
IB20P202 ;WOIFO/AAT-GMT IB PART 3 POST-INSTALL ;24-OCT-02
"RTN","IB20P202",2,0)
 ;;2.0;INTEGRATED BILLING;**202**;21-MAR-94
"RTN","IB20P202",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IB20P202",4,0)
 ;
"RTN","IB20P202",5,0)
 Q
"RTN","IB20P202",6,0)
 ;
"RTN","IB20P202",7,0)
POST ;Post-Install procedure
"RTN","IB20P202",8,0)
 ;
"RTN","IB20P202",9,0)
 K ^TMP($J,"IB20P202")
"RTN","IB20P202",10,0)
 D PRNMSG ; Print message to the user
"RTN","IB20P202",11,0)
 D RELALL ; Force conversion for all remaining patients
"RTN","IB20P202",12,0)
 ; Remove temporary global nodes
"RTN","IB20P202",13,0)
 K ^XTMP("IB GMT CONVERSION")
"RTN","IB20P202",14,0)
 K ^IB("AGMT")
"RTN","IB20P202",15,0)
 K ^IB("AGMTP")
"RTN","IB20P202",16,0)
 K ^TMP($J,"IB20P202")
"RTN","IB20P202",17,0)
 Q
"RTN","IB20P202",18,0)
 ;
"RTN","IB20P202",19,0)
 ; Add the patient to the log message
"RTN","IB20P202",20,0)
ADDPAT(DFN,IBRES,IBNUM) N IBPT,IBSTA
"RTN","IB20P202",21,0)
 S IBPT=$P($G(^DPT(DFN,0)),U) ;Patient's name
"RTN","IB20P202",22,0)
 S IBSTA=$P($$LST^DGMTU(DFN),"^",3) ;Patient's Copayment Status
"RTN","IB20P202",23,0)
 S IBSTA=$E(IBSTA,1,20),IBSTA=IBSTA_$J("",20-$L(IBSTA))
"RTN","IB20P202",24,0)
 D ADDLN($J(IBNUM,3)_" "_IBPT_$J("",30-$L(IBPT))_" "_IBSTA_" "_(+IBRES)_" Charge"_$S(IBRES=1:"",1:"s"))
"RTN","IB20P202",25,0)
 Q
"RTN","IB20P202",26,0)
 ;
"RTN","IB20P202",27,0)
 ;Add a line to the text array
"RTN","IB20P202",28,0)
ADDLN(IBTXT) N IBC
"RTN","IB20P202",29,0)
 D MES^XPDUTL("  "_$G(IBTXT))
"RTN","IB20P202",30,0)
 S IBC=$O(^TMP($J,"IB20P202",""),-1)+1
"RTN","IB20P202",31,0)
 S ^TMP($J,"IB20P202",IBC)=$G(IBTXT," ")
"RTN","IB20P202",32,0)
 Q
"RTN","IB20P202",33,0)
 ;
"RTN","IB20P202",34,0)
RELALL ;Release all remaining held charges off hold;
"RTN","IB20P202",35,0)
 N DFN,IBRES,IBNUM,XMSUB,XMY,XMDUZ,XMTEXT,XMGROUP,DIFROM
"RTN","IB20P202",36,0)
 D ADDLN("Geographic Means Test Clean-up, patch IB*2.0*202 post-install procedure.")
"RTN","IB20P202",37,0)
 D ADDLN("During the GMT IB Clean-up procedure all Inpatient Means Test charges, placed")
"RTN","IB20P202",38,0)
 D ADDLN("ON HOLD (RATE) since October 1, 2002, will be released and passed to the")
"RTN","IB20P202",39,0)
 D ADDLN("Accounts Receivable package.")
"RTN","IB20P202",40,0)
 D ADDLN("For patients with 'GMT COPAY REQUIRED' status charges will be recalculated.")
"RTN","IB20P202",41,0)
 D ADDLN("Process started on "_$$NOW())
"RTN","IB20P202",42,0)
 D ADDLN()
"RTN","IB20P202",43,0)
 D ADDLN("Searching and processing patients, who did not pass the GMT conversion...")
"RTN","IB20P202",44,0)
 D ADDLN()
"RTN","IB20P202",45,0)
 S IBNUM=0
"RTN","IB20P202",46,0)
 S DFN=0 F  S DFN=$O(^IB("AGMTP",DFN)) Q:'DFN  D
"RTN","IB20P202",47,0)
 . S IBRES=$$RELHOLD(DFN)
"RTN","IB20P202",48,0)
 . S IBNUM=IBNUM+1
"RTN","IB20P202",49,0)
 . D ADDPAT(DFN,IBRES,IBNUM)
"RTN","IB20P202",50,0)
 I IBNUM=0 D ADDLN("none found.")
"RTN","IB20P202",51,0)
 I $D(^IB("AC",20)) D FORCEREL ; Force releasing of hold charges on hold (rate)
"RTN","IB20P202",52,0)
 D ADDLN()
"RTN","IB20P202",53,0)
 D ADDLN("Process finished at "_$$NOW())
"RTN","IB20P202",54,0)
 D ADDLN()
"RTN","IB20P202",55,0)
 I $D(^IB("AC",20)) D
"RTN","IB20P202",56,0)
 . D ADDLN("Some charges still remain on hold (rate), they may be not related to GMT.")
"RTN","IB20P202",57,0)
 . D ADDLN("Use 'List Charges Awaiting New Copay Rate' menu option to make sure, that ")
"RTN","IB20P202",58,0)
 . D ADDLN("there is no GMT-related charges, placed on hold, because of unknown rate.")
"RTN","IB20P202",59,0)
 I IBNUM>0 D ADDLN(),ADDLN("Use the 'Means Test Single Patient Billing Profile' report to review charges.")
"RTN","IB20P202",60,0)
 ;
"RTN","IB20P202",61,0)
 ; Send log message to IB MEANS TEST mail group.
"RTN","IB20P202",62,0)
 S XMSUB="GEOGRAPHIC MEANS TEST CLEAN-UP PROCEDURE"
"RTN","IB20P202",63,0)
 S XMDUZ="PATCH IB*2.0*202 POST-INIT"
"RTN","IB20P202",64,0)
 S XMGROUP=$$GET1^DIQ(350.9,"1,",.11) ; Means Test billing Group
"RTN","IB20P202",65,0)
 S XMY(DUZ)="" ; Send the message to the user (at least)
"RTN","IB20P202",66,0)
 I XMGROUP'="" S XMY("G."_XMGROUP)=""
"RTN","IB20P202",67,0)
 S XMTEXT="^TMP($J,""IB20P202"","
"RTN","IB20P202",68,0)
 ;
"RTN","IB20P202",69,0)
 D ^XMD
"RTN","IB20P202",70,0)
 Q
"RTN","IB20P202",71,0)
 ;
"RTN","IB20P202",72,0)
FORCEREL ; Force releasing remaining charges on hold (rate)
"RTN","IB20P202",73,0)
 N IBACT,IBCNT
"RTN","IB20P202",74,0)
 S IBCNT=0
"RTN","IB20P202",75,0)
 S IBACT=0 F  S IBACT=$O(^IB("AC",20,IBACT)) Q:'IBACT  I $$RELCRG(IBACT) S IBCNT=IBCNT+1
"RTN","IB20P202",76,0)
 I IBCNT D ADDLN(IBCNT_" inpatient charges were released off hold additionally.")
"RTN","IB20P202",77,0)
 Q
"RTN","IB20P202",78,0)
 ;
"RTN","IB20P202",79,0)
 ;Perform "conversion" for the given patient 
"RTN","IB20P202",80,0)
RELHOLD(DFN) N IBACT,IBDT,X,IBLIMIT,IBCNT
"RTN","IB20P202",81,0)
 S DFN=+DFN
"RTN","IB20P202",82,0)
 S IBLIMIT=$$PLUS($$GMTEFD^IBAGMT(),-30)
"RTN","IB20P202",83,0)
 S IBCNT=0
"RTN","IB20P202",84,0)
 ;For each Patient's IB Action starting from the last, back to the GMT Effective Date:
"RTN","IB20P202",85,0)
 S IBDT="" F  S IBDT=$O(^IB("APTDT",DFN,IBDT),-1) Q:IBDT=""  Q:IBDT<IBLIMIT  D
"RTN","IB20P202",86,0)
 . S IBACT="" F  S IBACT=$O(^IB("APTDT",DFN,IBDT,IBACT),-1) Q:'IBACT  S IBCNT=IBCNT+$$RELCRG(IBACT)
"RTN","IB20P202",87,0)
 K ^IB("AGMTP",DFN) ; Remove the flag
"RTN","IB20P202",88,0)
 Q IBCNT
"RTN","IB20P202",89,0)
 ;
"RTN","IB20P202",90,0)
 ;
"RTN","IB20P202",91,0)
 ; Release/recalculate the single charge
"RTN","IB20P202",92,0)
 ; Also adjust MT Billing Clock Data, if this is a Copay charge.
"RTN","IB20P202",93,0)
 ; Input: IB ACTION IEN
"RTN","IB20P202",94,0)
 ; Output: 1 - Processed, 0 - Charge does not need to be processed (or error)
"RTN","IB20P202",95,0)
RELCRG(IBACT) N DFN,IBZ,IBSTA,IBDT,IBCRG,IBNOS,IBSEQNO,IBDUZ,IBFDA,IBGMT,Y,IBCLK,IB90D,IBCLKZ,IBAMT,IBATYP
"RTN","IB20P202",96,0)
 S IBZ=$G(^IB(IBACT,0)) Q:IBZ="" 0 ;Corrupted cross-reference
"RTN","IB20P202",97,0)
 S DFN=$P(IBZ,U,2)
"RTN","IB20P202",98,0)
 S IBSTA=$P(IBZ,U,5) I IBSTA'=20,IBSTA'=1 Q 0 ;Not a 'HOLD-RATE' and not an 'INCOMPLETE'
"RTN","IB20P202",99,0)
 S IBATYP=+$P(IBZ,U,3) ; IB Action Type
"RTN","IB20P202",100,0)
 S IBDT=$P(IBZ,U,14) ; Date Billed From
"RTN","IB20P202",101,0)
 I IBDT<$$GMTEFD^IBAGMT() Q 0 ;Never touch charges 'billed from' before the GMT Effective Date
"RTN","IB20P202",102,0)
 I '$$ISGMTTYP^IBAGMT(IBATYP) Q 0 ;Not a MT Inpatient charge
"RTN","IB20P202",103,0)
 S X="RCERR^IB20P202",@^%ZOSF("TRAP")
"RTN","IB20P202",104,0)
 S IBCRG=$P(IBZ,U,7) ;Charge Amount
"RTN","IB20P202",105,0)
 S IBGMT=$$ISGMTPT^IBAGMT(DFN,IBDT) ; GMT Status for the patient
"RTN","IB20P202",106,0)
 ;Recalculate the charge
"RTN","IB20P202",107,0)
 I IBGMT>0,'$P(^IB(IBACT,0),U,21) D  ;If the patient has GMT Copayment Status
"RTN","IB20P202",108,0)
 . S $P(^IB(IBACT,0),U,7)=$$REDUCE^IBAGMT(IBCRG) ;Reduce the amount to 20%
"RTN","IB20P202",109,0)
 . S $P(^IB(IBACT,0),U,21)=1 ;Mark the charge as GMT RELATED
"RTN","IB20P202",110,0)
 . Q:'$G(^IB("AGMT",IBACT))  ; Quit if that is not COPAY charge.
"RTN","IB20P202",111,0)
 . ; The temporary node "AGMT" exists only for Inpatient Copay Charges.
"RTN","IB20P202",112,0)
 . ; Adjusting MT Billing Clock Amount
"RTN","IB20P202",113,0)
 . S IBCLK=+$P(^IB("AGMT",IBACT),U),IB90D=+$P(^(IBACT),U,2) Q:IB90D<1  Q:IB90D>4
"RTN","IB20P202",114,0)
 . S IBCLKZ=$G(^IBE(351,IBCLK,0)) Q:IBCLKZ=""
"RTN","IB20P202",115,0)
 . S IBAMT=+$P(IBCLKZ,"^",4+IB90D) S IBAMT=IBAMT-IBCRG+$$REDUCE^IBAGMT(IBCRG) S:IBAMT<0 IBAMT=0
"RTN","IB20P202",116,0)
 . S $P(^IBE(351,IBCLK,0),U,4+IB90D)=IBAMT
"RTN","IB20P202",117,0)
 K ^IB("AGMT",IBACT) ; Remove temporary node
"RTN","IB20P202",118,0)
 ; Now pass the held charge to the AR package (Incomplete charges will not be released)
"RTN","IB20P202",119,0)
 I IBSTA'=1 S IBNOS=IBACT,IBSEQNO=$P($G(^IBE(350.1,IBATYP,0)),U,5) S:IBSEQNO="" IBSEQNO=1 S IBDUZ=DUZ D ^IBR I Y<0 D ERRMSG(IBACT,$P(Y,U,2,99))
"RTN","IB20P202",120,0)
 I IBGMT'>0,IBSTA=1 Q 0  ; Incomplete charges for non-GMT patients
"RTN","IB20P202",121,0)
 Q 1
"RTN","IB20P202",122,0)
 ;
"RTN","IB20P202",123,0)
RCERR N IBERR  ;Error trapping for RELCRG
"RTN","IB20P202",124,0)
 S IBERR=$$EC^%ZOSV
"RTN","IB20P202",125,0)
 D ^%ZTER
"RTN","IB20P202",126,0)
 D ERRMSG(IBACT,"Program Error "_IBERR)
"RTN","IB20P202",127,0)
 Q 0
"RTN","IB20P202",128,0)
 ;
"RTN","IB20P202",129,0)
PLUS(IBDT,IBDAYS) N X,X1,X2,%H
"RTN","IB20P202",130,0)
 S X1=IBDT,X2=IBDAYS
"RTN","IB20P202",131,0)
 D C^%DTC
"RTN","IB20P202",132,0)
 Q X
"RTN","IB20P202",133,0)
 ;
"RTN","IB20P202",134,0)
 ; Send error message to IB MEANS TEST group.
"RTN","IB20P202",135,0)
 ; "Please review the IB ACTION"
"RTN","IB20P202",136,0)
ERRMSG(IBACT,IBERR) N IBTXT,XMSUB,XMY,XMDUZ,XMTEXT,XMGROUP,DIFROM,IBGRP,IBI,DFN,IBPT,IBZ,IBC,IBDT,IBATYP
"RTN","IB20P202",137,0)
 S XMSUB="IB GMT CLEAN-UP ERROR"
"RTN","IB20P202",138,0)
 S XMDUZ="PATCH IB*2.0*202 POST-INIT"
"RTN","IB20P202",139,0)
 S XMGROUP=$$GET1^DIQ(350.9,"1,",.11) ; Means Test billing Group
"RTN","IB20P202",140,0)
 I XMGROUP="" S XMGROUP=DUZ ; No billing groups defined - send to the user
"RTN","IB20P202",141,0)
 E  S XMGROUP="G."_XMGROUP
"RTN","IB20P202",142,0)
 S XMTEXT="IBTXT(",XMY(XMGROUP)=""
"RTN","IB20P202",143,0)
 ;
"RTN","IB20P202",144,0)
 S IBZ=$G(^IB(IBACT,0))
"RTN","IB20P202",145,0)
 S DFN=$P(IBZ,U,2),IBPT=$P($G(^DPT(DFN,0)),U)
"RTN","IB20P202",146,0)
 S IBDT=$P(IBZ,U,14),IBATYP=+$P(IBZ,U,3)
"RTN","IB20P202",147,0)
 S IBC=0
"RTN","IB20P202",148,0)
 S IBC=IBC+1,IBTXT(IBC)="The Geographic Means Test software failed to process the Inpatient Means Test"
"RTN","IB20P202",149,0)
 S IBC=IBC+1,IBTXT(IBC)="charge IEN "_IBACT_", placed on HOLD - RATE (or Incomplete) after the GMT Effective Date."
"RTN","IB20P202",150,0)
 S IBC=IBC+1,IBTXT(IBC)=" "
"RTN","IB20P202",151,0)
 S IBC=IBC+1,IBTXT(IBC)="The error occurred when trying to pass the charge to Accounts Receivable."
"RTN","IB20P202",152,0)
 S IBC=IBC+1,IBTXT(IBC)="Please review the IB ACTION IEN "_IBACT_"."
"RTN","IB20P202",153,0)
 S IBC=IBC+1,IBTXT(IBC)=" "
"RTN","IB20P202",154,0)
 I $G(IBERR)'="" D
"RTN","IB20P202",155,0)
 . S IBC=IBC+1,IBTXT(IBC)="Error code: "_IBERR
"RTN","IB20P202",156,0)
 . S IBC=IBC+1,IBTXT(IBC)=" "
"RTN","IB20P202",157,0)
 S IBC=IBC+1,IBTXT(IBC)="DIAGNOSTIC INFORMATION:"
"RTN","IB20P202",158,0)
 S IBC=IBC+1,IBTXT(IBC)="Patient: "_IBPT
"RTN","IB20P202",159,0)
 S IBC=IBC+1,IBTXT(IBC)="IB Action IEN: "_IBACT_", Date billed from: "_$$DAT($P(IBZ,"^",14))_", Date billed to: "_$$DAT($P(IBZ,"^",15))
"RTN","IB20P202",160,0)
 S IBC=IBC+1,IBTXT(IBC)="IB Action Type: "_$E($$ACTNM^IBOUTL(IBATYP),1,30)
"RTN","IB20P202",161,0)
 S IBC=IBC+1,IBTXT(IBC)="Total Charge Amount: "_$J($P(IBZ,U,7),"",2)_", The charge is "_$S($P(IBZ,U,21):"",1:"not ")_"marked as GMT Related."
"RTN","IB20P202",162,0)
 I '$P(IBZ,U,21),IBDT'<$$GMTEFD^IBAGMT(),$$ISGMTTYP^IBAGMT(IBATYP),$$ISGMTPT^IBAGMT(DFN,IBDT)>0 D
"RTN","IB20P202",163,0)
 . S IBC=IBC+1,IBTXT(IBC)="The amount must be decreased to 20% of initial value (GMT rate)."
"RTN","IB20P202",164,0)
 . I '$P(IBZ,U,21) S IBC=IBC+1,IBTXT(IBC)="The charge is supposed to be GMT Related."
"RTN","IB20P202",165,0)
 ;
"RTN","IB20P202",166,0)
 D ^XMD
"RTN","IB20P202",167,0)
 Q
"RTN","IB20P202",168,0)
 ;
"RTN","IB20P202",169,0)
 ;
"RTN","IB20P202",170,0)
DAT(IBDT) ; Convert FM date to (mm/dd/yy) format.
"RTN","IB20P202",171,0)
 I 'IBDT Q ""
"RTN","IB20P202",172,0)
 Q $$FMTE^XLFDT(IBDT,"2MZ")
"RTN","IB20P202",173,0)
 ;
"RTN","IB20P202",174,0)
NOW() N %,%H,%I,X,Y
"RTN","IB20P202",175,0)
 D NOW^%DTC S Y=%
"RTN","IB20P202",176,0)
 D DD^%DT
"RTN","IB20P202",177,0)
 S Y=$P(Y,"@")_" at "_$P(Y,"@",2)
"RTN","IB20P202",178,0)
 Q Y
"RTN","IB20P202",179,0)
 ;
"RTN","IB20P202",180,0)
PRNMSG ;
"RTN","IB20P202",181,0)
 N IBTXT
"RTN","IB20P202",182,0)
 S IBTXT(1)=""
"RTN","IB20P202",183,0)
 S IBTXT(2)="  Geographic Means Test, IB Part 3, Post-Install Starting"
"RTN","IB20P202",184,0)
 S IBTXT(3)=""
"RTN","IB20P202",185,0)
 S IBTXT(4)="  The procedure will find, adjust and bill all remaining"
"RTN","IB20P202",186,0)
 S IBTXT(5)="  GMT-related IB charges, placed on hold since 10/1/2002,"
"RTN","IB20P202",187,0)
 S IBTXT(6)="  because of unknown rate."
"RTN","IB20P202",188,0)
 S IBTXT(7)=""
"RTN","IB20P202",189,0)
 S IBTXT(8)="  The process will take some time ..."
"RTN","IB20P202",190,0)
 S IBTXT(9)=""
"RTN","IB20P202",191,0)
 D MES^XPDUTL(.IBTXT)
"RTN","IB20P202",192,0)
 Q
"RTN","IBAGMT")
0^2^B3103165
"RTN","IBAGMT",1,0)
IBAGMT ;WOIFO/AAT-GEOGRAPHIC MEANS TEST UTILITIES ;7-JUN-02
"RTN","IBAGMT",2,0)
 ;;2.0;INTEGRATED BILLING;**179,183,202**;21-MAR-94
"RTN","IBAGMT",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBAGMT",4,0)
 ;
"RTN","IBAGMT",5,0)
 Q
"RTN","IBAGMT",6,0)
 ;
"RTN","IBAGMT",7,0)
 ;GMT Effective Date
"RTN","IBAGMT",8,0)
 ;~~~~~~~~~~~~~~~~~~
"RTN","IBAGMT",9,0)
GMTEFD() Q 3021001
"RTN","IBAGMT",10,0)
 ;
"RTN","IBAGMT",11,0)
 ;
"RTN","IBAGMT",12,0)
 ;Is this a GMT Action Type?
"RTN","IBAGMT",13,0)
 ;~~~~~~~~~~~~~~~~~~~~~~~~~~
"RTN","IBAGMT",14,0)
 ;Input: IBATYP - IEN of Action Type file (#350.1)
"RTN","IBAGMT",15,0)
 ;Output: 1- yes, 0-no
"RTN","IBAGMT",16,0)
ISGMTTYP(IBATYP) N IBBG ; Billing group
"RTN","IBAGMT",17,0)
 S IBBG=+$P($G(^IBE(350.1,+$G(IBATYP),0)),"^",11)
"RTN","IBAGMT",18,0)
 ;All Inpatient Means Test Billing Groups:
"RTN","IBAGMT",19,0)
 ;IBBG=1: INPT/NHCU FEE SERVICE
"RTN","IBAGMT",20,0)
 ;IBBG=2: INPT/NHCU COPAY
"RTN","IBAGMT",21,0)
 ;IBBG=3: INPT/NHCU PER DIEM
"RTN","IBAGMT",22,0)
 Q (IBBG>0)&(IBBG<4) ; Return 'true' for MT Inpatient types
"RTN","IBAGMT",23,0)
 ;
"RTN","IBAGMT",24,0)
 ;
"RTN","IBAGMT",25,0)
 ;Does the patient have GMT Copayment Status?
"RTN","IBAGMT",26,0)
 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"RTN","IBAGMT",27,0)
 ;Input: DFN - IEN of the Patient
"RTN","IBAGMT",28,0)
 ;       IBDT - date of status
"RTN","IBAGMT",29,0)
 ;Output: Boolean value (1- yes, 0-no)
"RTN","IBAGMT",30,0)
ISGMTPT(DFN,IBDT) N IBGMT ;
"RTN","IBAGMT",31,0)
 S DFN=+DFN
"RTN","IBAGMT",32,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBAGMT",33,0)
 I IBDT<$$GMTEFD() Q 0  ;Prior to the GMT effective date
"RTN","IBAGMT",34,0)
 I $T(GMT^DGMTUB)="" Q 0
"RTN","IBAGMT",35,0)
 S IBGMT=$$GMT^DGMTUB(DFN,IBDT)
"RTN","IBAGMT",36,0)
 Q $S(IBGMT<0:0,1:IBGMT)
"RTN","IBAGMT",37,0)
 ;
"RTN","IBAGMT",38,0)
 ; Is the bill GMT-related? (That means 'True' if at least one charge is GMT-related).
"RTN","IBAGMT",39,0)
 ; ~~~~~~~~~~~~~~~~~~~~~~~~
"RTN","IBAGMT",40,0)
 ; Input: IBNAM - the Bill's Name (not IEN !)
"RTN","IBAGMT",41,0)
 ; Output: 1 - Yes, 0 - No
"RTN","IBAGMT",42,0)
ISGMTBIL(IBNAM) N IBACT,IBRES
"RTN","IBAGMT",43,0)
 S IBRES=0 ;Default Result
"RTN","IBAGMT",44,0)
 I IBNAM'="" S IBACT=0 F  S IBACT=$O(^IB("ABIL",IBNAM,IBACT)) Q:'IBACT  D  Q:IBRES
"RTN","IBAGMT",45,0)
 . I $P($G(^IB(IBACT,0)),"^",21) S IBRES=1
"RTN","IBAGMT",46,0)
 Q IBRES
"RTN","IBAGMT",47,0)
 ;
"RTN","IBAGMT",48,0)
HOLD(X) ;The function is disabled
"RTN","IBAGMT",49,0)
 Q 0 ; Stub function
"RTN","IBAGMT",50,0)
 ;
"RTN","IBAGMT",51,0)
 ; The rule to convert MT Charge to GMT rate (20%, rounded).
"RTN","IBAGMT",52,0)
 ; Input: MT Charge
"RTN","IBAGMT",53,0)
 ; Output: GMT Charge
"RTN","IBAGMT",54,0)
REDUCE(IBCRG) Q +$J(IBCRG*.2,"",2)
"RTN","IBAGMT",55,0)
 ;
"RTN","IBAGMT",56,0)
 ;
"RTN","IBAGMT",57,0)
 ; The API Call, used by Enrollment during the GMT Comversion, disabled.
"RTN","IBAGMT",58,0)
RELHOLD(DFN,IBFORCE) N IBACT,IBDT,X,IBODT,IBGMTEFD,IBLIMIT,IBCNT
"RTN","IBAGMT",59,0)
 Q "-1^The function is disabled"
"RTN","IBAMTBU2")
0^10^B18762869
"RTN","IBAMTBU2",1,0)
IBAMTBU2 ;ALB/CPM - MEANS TEST BILLING BULLETINS (CON'T.) ; 15-JUN-93
"RTN","IBAMTBU2",2,0)
 ;;2.0;INTEGRATED BILLING;**153,202**;21-MAR-94
"RTN","IBAMTBU2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBAMTBU2",4,0)
 ;
"RTN","IBAMTBU2",5,0)
MT ; Generate the 'change in Means Test' bulletin.
"RTN","IBAMTBU2",6,0)
 W:'DGMTINF !!,"Patient's Means Test billing status has changed..."
"RTN","IBAMTBU2",7,0)
 K IBT S IBPT=$$PT^IBEFUNC(DFN)
"RTN","IBAMTBU2",8,0)
 S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - MEANS TEST CHANGE"
"RTN","IBAMTBU2",9,0)
 S IBT(1)="A Means Test has been "_$S(DGMTP="":"added",DGMTA="":"deleted",1:"edited")_" for the following patient:"
"RTN","IBAMTBU2",10,0)
 S IBT(2)=" ",IBC=2,IBDUZ=DUZ D PAT^IBAERR1 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBAMTBU2",11,0)
 S Y=+IBMT D DD^%DT S IBC=IBC+1,IBT(IBC)="Test Date: "_Y
"RTN","IBAMTBU2",12,0)
 S IBC=IBC+1,IBT(IBC)="   Status: "_$P($$MTS^DGMTU(DFN,+$P(IBMT,"^",3)),"^")
"RTN","IBAMTBU2",13,0)
 I "^2^6^"[("^"_+$P(IBMT,"^",3)_"^") S IBT(IBC)=IBT(IBC)_$J("",$S($P(IBMT,"^",3)=2:11,1:21))_"Agrees to Pay Deductible? "_$S($P(IBMT,"^",11):"YES",$P(IBMT,"^",11)=0:"NO",1:"UNANSWERED")
"RTN","IBAMTBU2",14,0)
 I $P(IBMT,"^",3)=3 D ELIG^VADPT I VAEL(3) S DIC="^DPT(",DR=.3012,DA=DFN,DIQ="IBDIQ",DIQ(0)="E" D EN^DIQ1 S IBDIQ=$G(IBDIQ(2,DFN,.3012,"E")),IBT(IBC)=IBT(IBC)_$J("",13)_"SC Award Date: "_$S(IBDIQ]"":IBDIQ,1:"Unknown")
"RTN","IBAMTBU2",15,0)
 S Y=+$P(IBMT,"^",7) I Y D DD^%DT S IBC=IBC+1,IBT(IBC)="Completed: "_Y
"RTN","IBAMTBU2",16,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBAMTBU2",17,0)
 S IBC=IBC+1,IBT(IBC)="This patient is no"_$S(IBCATCA:"w",1:" longer")_" billable for medical care copayments."
"RTN","IBAMTBU2",18,0)
 D @$S(IBCATCP:"LCHG",1:"LEP") ; build bulletin for charges or episodes
"RTN","IBAMTBU2",19,0)
 D MAIL^IBAERR1 ; send bulletin
"RTN","IBAMTBU2",20,0)
 W:'DGMTINF "bulletin has been generated."
"RTN","IBAMTBU2",21,0)
 Q
"RTN","IBAMTBU2",22,0)
 ;
"RTN","IBAMTBU2",23,0)
LCHG ; List charges in bulletin.
"RTN","IBAMTBU2",24,0)
 N C,IBD,IBIL,IBN,IBND,X,Y
"RTN","IBAMTBU2",25,0)
 S IBC=IBC+1,IBT(IBC)=$S($G(IBCANCEL):"Please note that the following charge(s) were automatically cancelled:",1:"The following charges have been billed since "_$$DAT1^IBOUTL($S(+$P(IBMT,"^",7):+$P(IBMT,"^",7),1:+IBMT))_":")
"RTN","IBAMTBU2",26,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBAMTBU2",27,0)
 S IBC=IBC+1,IBT(IBC)="   Bill From  Bill To   Charge Type             Bill #  Status        Charge"
"RTN","IBAMTBU2",28,0)
 S IBC=IBC+1,IBT(IBC)=$TR($J("",79)," ","=")
"RTN","IBAMTBU2",29,0)
 ;
"RTN","IBAMTBU2",30,0)
 ; - build detail lines
"RTN","IBAMTBU2",31,0)
 S IBD="" F  S IBD=$O(IBARR(IBD)) Q:'IBD  S IBN=0 F  S IBN=$O(IBARR(IBD,IBN)) Q:'IBN  D
"RTN","IBAMTBU2",32,0)
 .S IBND=$G(^IB(IBN,0)),IBIL=$P(IBND,"^",11)
"RTN","IBAMTBU2",33,0)
 .S IBC=IBC+1,IBT(IBC)="   "_$$DAT1^IBOUTL(+$P(IBND,"^",14))_"   "_$$DAT1^IBOUTL(+$P(IBND,"^",15))_"  "
"RTN","IBAMTBU2",34,0)
 .S X=$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^") S:$E(X,1,2)="DG" X=$E(X,4,99)
"RTN","IBAMTBU2",35,0)
 .S IBT(IBC)=IBT(IBC)_X_$J("",24-$L(X))_$S(IBIL]"":$P(IBIL,"-",2)_"  ",1:$J("",8))
"RTN","IBAMTBU2",36,0)
 .S Y=$P(IBND,"^",5),C=$P(^DD(350,.05,0),"^",2) D Y^DIQ
"RTN","IBAMTBU2",37,0)
 .S IBT(IBC)=IBT(IBC)_Y_$J("",15-$L(Y))_"$"_$P(IBND,"^",7)
"RTN","IBAMTBU2",38,0)
 ;
"RTN","IBAMTBU2",39,0)
 I '$G(IBCANCEL) S IBC=IBC+1,IBT(IBC)=" ",IBC=IBC+1,IBT(IBC)="Please review these charges and cancel those that should not be billed."
"RTN","IBAMTBU2",40,0)
 Q
"RTN","IBAMTBU2",41,0)
 ;
"RTN","IBAMTBU2",42,0)
LEP ; List episodes of care in bulletin.
"RTN","IBAMTBU2",43,0)
 N IBD,IBN,IBX,X
"RTN","IBAMTBU2",44,0)
 S IBC=IBC+1,IBT(IBC)="The following episodes of care have occurred since "_$$DAT1^IBOUTL($S(+$P(IBMT,"^",7):+$P(IBMT,"^",7),1:+IBMT))_":"
"RTN","IBAMTBU2",45,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBAMTBU2",46,0)
 S IBC=IBC+1,IBT(IBC)="Episode Date/Time      Type of Care   Ward/Clinic/Disposition/Appt Type"
"RTN","IBAMTBU2",47,0)
 S IBC=IBC+1,IBT(IBC)=$TR($J("",79)," ","=")
"RTN","IBAMTBU2",48,0)
 ;
"RTN","IBAMTBU2",49,0)
 ; - build detail lines
"RTN","IBAMTBU2",50,0)
 S IBD=0 F  S IBD=$O(IBARR(IBD)) Q:'IBD  S IBN="" F  S IBN=$O(IBARR(IBD,IBN)) Q:IBN=""  D
"RTN","IBAMTBU2",51,0)
 .S IBX=IBARR(IBD,IBN),X=$$DAT2^IBOUTL(IBD)
"RTN","IBAMTBU2",52,0)
 .S IBC=IBC+1,IBT(IBC)=X_$J("",23-$L(X))
"RTN","IBAMTBU2",53,0)
 .D @$S(IBN["SC":"SC",1:IBN) S IBT(IBC)=IBT(IBC)_X
"RTN","IBAMTBU2",54,0)
 ;
"RTN","IBAMTBU2",55,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBAMTBU2",56,0)
 S IBC=IBC+1,IBT(IBC)="Please review these episodes and add charges for those that should be billed."
"RTN","IBAMTBU2",57,0)
 Q
"RTN","IBAMTBU2",58,0)
 ;
"RTN","IBAMTBU2",59,0)
SC ; Build string for Stop Codes.
"RTN","IBAMTBU2",60,0)
 S X="STOP CODE      "_$E($P($G(^DIC(40.7,+IBX,0)),"^"),1,20)_" ("_$$FLD5^IBOVOP1(+$P(IBX,"^",2))_")"
"RTN","IBAMTBU2",61,0)
 Q
"RTN","IBAMTBU2",62,0)
 ;
"RTN","IBAMTBU2",63,0)
APP ; Build string for Scheduled Appointments.
"RTN","IBAMTBU2",64,0)
 S X="APPOINTMENT    "_$E($P($G(^SC(+IBX,0)),"^"),1,20)_" ("_$$FLD5^IBOVOP1(+$P(IBX,"^",2))_")"
"RTN","IBAMTBU2",65,0)
 Q
"RTN","IBAMTBU2",66,0)
 ;
"RTN","IBAMTBU2",67,0)
R ; Build string for Registrations.
"RTN","IBAMTBU2",68,0)
 S X="REGISTRATION   "_$P($G(^DIC(37,+IBX,0)),"^")
"RTN","IBAMTBU2",69,0)
 Q
"RTN","IBAMTBU2",70,0)
 ;
"RTN","IBAMTBU2",71,0)
ADM ; Build string for Admissions.
"RTN","IBAMTBU2",72,0)
 S X="ADMISSION      "_$P($G(^DIC(42,+IBX,0)),"^")
"RTN","IBAMTBU2",73,0)
 Q
"RTN","IBAMTD1")
0^3^B9598919
"RTN","IBAMTD1",1,0)
IBAMTD1 ;ALB/CPM-MOVEMENT EVENT DRIVER INTERFACE (CON'T) ;21-OCT-91
"RTN","IBAMTD1",2,0)
 ;;2.0;INTEGRATED BILLING;**45,153,179,183,202**;21-MAR-94
"RTN","IBAMTD1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBAMTD1",4,0)
 ;
"RTN","IBAMTD1",5,0)
EN ; Create charges for one-day admissions
"RTN","IBAMTD1",6,0)
 ;  Input:  DFN, DGPMA, IBDT, IBBS, IBCLDA
"RTN","IBAMTD1",7,0)
 ;          IBCLCT/IBCLDAY/IBCLDOL/IBCLDT (if IBCLDA'=0)
"RTN","IBAMTD1",8,0)
 ;
"RTN","IBAMTD1",9,0)
 ; - quit if patient is not a Means Test patient at discharge
"RTN","IBAMTD1",10,0)
 G:'$$BIL^DGMTUB(DFN,+DGPMA) END
"RTN","IBAMTD1",11,0)
 N IBGMT,IBGMTR,IBGMTEFD
"RTN","IBAMTD1",12,0)
 S IBGMT=$$ISGMTPT^IBAGMT(DFN,+DGPMA),IBGMTR=0
"RTN","IBAMTD1",13,0)
 S IBGMTEFD=$$GMTEFD^IBAGMT()
"RTN","IBAMTD1",14,0)
 ; - handle clock
"RTN","IBAMTD1",15,0)
 I $D(IBCLDT),IBCLDT>IBDT S IBY="-1^IB034" G END
"RTN","IBAMTD1",16,0)
 I IBCLDA D COUNT^IBAMTD S IBCLCT=IBCLCT+1 I IBCLCT>365 S IBWHER=2 D CLOCKCL^IBAUTL3 G:IBY<1 END S IBCLDA=0
"RTN","IBAMTD1",17,0)
 I 'IBCLDA S IBCLDT=IBDT,IBWHER=7 D CLADD^IBAUTL3 G:IBY<1 END S IBCLCT=1,(IBCLDAY,IBCLDOL)=0
"RTN","IBAMTD1",18,0)
 ; - build event
"RTN","IBAMTD1",19,0)
 S IBNH=$P($G(^DGCR(399.1,IBBS,0)),"^")["NURSING",IBSL="405:"_$P(DGPMA,"^",14),IBEVDT=IBDT,IBWHER=6
"RTN","IBAMTD1",20,0)
 D EVADD^IBAUTL3 G:IBY<1 END
"RTN","IBAMTD1",21,0)
 S IBCLDAY=IBCLDAY+1
"RTN","IBAMTD1",22,0)
 ; - cancel any OPT charges
"RTN","IBAMTD1",23,0)
 D OPT(DFN,IBDT)
"RTN","IBAMTD1",24,0)
 ; - process per diem
"RTN","IBAMTD1",25,0)
 G:IBDT<$$DIEM^IBAUTL5 COPAY
"RTN","IBAMTD1",26,0)
 S IBX="P",IBWHER=8 D TYPE^IBAUTL2 G:IBY<1 END
"RTN","IBAMTD1",27,0)
 ;If the patient has GMT Status, and the Action Type is MT Inpt (must be), then reduce the charge
"RTN","IBAMTD1",28,0)
 S IBGMTR=0 I IBGMT>0,DGPMA'<IBGMTEFD,$$ISGMTTYP^IBAGMT(IBATYP) S IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) ;GMT Charge Adjustment
"RTN","IBAMTD1",29,0)
 S IBWHER=13 D CHADD^IBAUTL2 G:IBY<1 END
"RTN","IBAMTD1",30,0)
 S IBNOS=IBN,IBWHER=26 D FILER^IBAUTL5 G:IBY<1 END
"RTN","IBAMTD1",31,0)
COPAY ; - process co-payment
"RTN","IBAMTD1",32,0)
 G:IBCLDAY>360 LAST
"RTN","IBAMTD1",33,0)
 I IBCLDAY>1,IBCLDAY#90=1 S IBCLDOL=0
"RTN","IBAMTD1",34,0)
 S IBMAX=IBMED
"RTN","IBAMTD1",35,0)
 I IBGMT>0,DGPMA'<IBGMTEFD S IBMAX=$$REDUCE^IBAGMT(IBMAX) ;GMT Adjustment of Medicare Deductible
"RTN","IBAMTD1",36,0)
 I IBCLDAY>90,'IBNH S IBMAX=IBMAX/2
"RTN","IBAMTD1",37,0)
 G:IBCLDOL'<IBMAX LAST
"RTN","IBAMTD1",38,0)
 S IBWHER=14 D COPAY^IBAUTL2 G:IBY<1 END
"RTN","IBAMTD1",39,0)
 ;If the patient has GMT Status, then reduce the charge
"RTN","IBAMTD1",40,0)
 S IBGMTR=0 I IBGMT>0,DGPMA'<IBGMTEFD S IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG)
"RTN","IBAMTD1",41,0)
 S IBCHARG=IBMAX-IBCLDOL I IBCHG<IBCHARG S IBCHARG=IBCHG
"RTN","IBAMTD1",42,0)
 S IBCHG=IBCHARG S:IBCHG<0 IBCHG=0
"RTN","IBAMTD1",43,0)
 S IBCLDOL=IBCLDOL+IBCHG
"RTN","IBAMTD1",44,0)
 S IBWHER=18 D CHADD^IBAUTL2 G:IBY<1 END
"RTN","IBAMTD1",45,0)
 S IBNOS=IBN,IBWHER=27 D FILER^IBAUTL5 G:IBY<1 END
"RTN","IBAMTD1",46,0)
LAST ; - close event, update billing clock
"RTN","IBAMTD1",47,0)
 S IBWHER=23,IBEVCLD=IBDT D EVCLOSE^IBAUTL3,CLUPD^IBAUTL3,CLOCKCL^IBAUTL3:IBCLCT>364
"RTN","IBAMTD1",48,0)
END Q
"RTN","IBAMTD1",49,0)
 ;
"RTN","IBAMTD1",50,0)
 ;
"RTN","IBAMTD1",51,0)
UNFLAG ; Unflag continuous patient, if not transferring from the facility.
"RTN","IBAMTD1",52,0)
 N TRAN S TRAN=$P(DGPMA,"^",18)=10
"RTN","IBAMTD1",53,0)
 I 'TRAN!(IBASIH) W:'$G(DGQUIET) !,"Unflagging patient as continuous since 7/1/86..." D
"RTN","IBAMTD1",54,0)
 . D NOW^%DTC S DIE="^IBE(351.1,",DA=+$O(^IBE(351.1,"B",DFN,0))
"RTN","IBAMTD1",55,0)
 . S DR=".02////"_$P(+DGPMA,".")_";.05////"_DUZ_";.06////"_% D ^DIE K DIE,DA,DR
"RTN","IBAMTD1",56,0)
 . W:'$G(DGQUIET) "completed."
"RTN","IBAMTD1",57,0)
 ; - send bulletin to Means Test Billing mailgroup, if patient did not die.
"RTN","IBAMTD1",58,0)
 I $P($G(^DG(405.1,+$P(DGPMA,"^",4),0)),"^")'["DEATH" D CTPT^IBAMTBU
"RTN","IBAMTD1",59,0)
 Q
"RTN","IBAMTD1",60,0)
 ;
"RTN","IBAMTD1",61,0)
OPT(DFN,IBDATE) ; Cancel any OPT charges on days billed for inpatient care.
"RTN","IBAMTD1",62,0)
 ;  Input:    DFN  --  Pointer to patient in file #2
"RTN","IBAMTD1",63,0)
 ;         IBDATE  --  Date to check for OPT charges
"RTN","IBAMTD1",64,0)
 N IBN,IBCRES,IBDUZ S IBDUZ=DUZ
"RTN","IBAMTD1",65,0)
 S IBN=$$BFO^IBECEAU(DFN,IBDATE) I 'IBN G OPTQ
"RTN","IBAMTD1",66,0)
 S IBCRES=$O(^IBE(350.3,"B","RECD INPATIENT CARE",0))
"RTN","IBAMTD1",67,0)
 S:'IBCRES IBCRES=25
"RTN","IBAMTD1",68,0)
 D CANCH^IBECEAU4(IBN,IBCRES)
"RTN","IBAMTD1",69,0)
OPTQ Q
"RTN","IBAUTL4")
0^4^B24214602
"RTN","IBAUTL4",1,0)
IBAUTL4 ;ALB/CPM-MEANS TEST BILLING UTILITIES (CON'T.) ;10-OCT-91
"RTN","IBAUTL4",2,0)
 ;;2.0;INTEGRATED BILLING;**45,153,171,176,179,183,202**;21-MAR-94
"RTN","IBAUTL4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBAUTL4",4,0)
 ;
"RTN","IBAUTL4",5,0)
EN ; Calculate inpatient co-pay, per diem charges for a date range
"RTN","IBAUTL4",6,0)
 ;  Input:  DFN, IBBDT, IBEDT, IBCLDA, IBEVDA, IBY, IBAFY
"RTN","IBAUTL4",7,0)
 ;          IBCLCT/IBCLDAY/IBCLDOL (if IBCLDA'=0)
"RTN","IBAUTL4",8,0)
 F IBDATE=IBBDT:1:IBEDT S %H=IBDATE D YMD^%DTC S IBDT=X D CALC Q:IBY<1
"RTN","IBAUTL4",9,0)
 Q
"RTN","IBAUTL4",10,0)
 ;
"RTN","IBAUTL4",11,0)
CALC ; Find charges for one day
"RTN","IBAUTL4",12,0)
 N IBGMT,IBGMTR,IBGMTEFD ;GMT Status,GMT Related flag,GMT Effective Date
"RTN","IBAUTL4",13,0)
 S (IBEVNEW,IBEVOLD,IBGMT,IBGMTR)=0
"RTN","IBAUTL4",14,0)
 ; - is LTC?
"RTN","IBAUTL4",15,0)
 I IBDT'<$$STDATE^IBAECU1() S VAIP("D")=IBDT_.2359 D IN5^VADPT I $P($$TREATSP^IBAECU2($P($G(^DIC(45.7,+VAIP(8),0)),U,2)),"^",1)="L"!($$ASIHORG^IBAECN1(DFN,+$G(IBEVDA),IBDT)=1) D  G CALCQ
"RTN","IBAUTL4",16,0)
 . I '$D(IBSITE) N IBSITE,IBFAC D SITE^IBAUTL
"RTN","IBAUTL4",17,0)
 . D CANCVIS^IBAECU5(DFN,IBDT) ;cancel OPT charges for this date
"RTN","IBAUTL4",18,0)
 . Q:$$CLOCK^IBAECU(DFN,IBDT)  ; - increment clock
"RTN","IBAUTL4",19,0)
 I IBCLDA S IBCLCT=IBCLCT+1 I IBCLCT>365 S IBWHER=2 D PASS^IBAUTL5:IBEVDA,CLOCKCL^IBAUTL3:IBY>0 G:IBY<1 CALCQ
"RTN","IBAUTL4",20,0)
 ; - Means Test billable?
"RTN","IBAUTL4",21,0)
 I '$$BIL^DGMTUB(DFN,IBDT+.2359) G:'IBCLDA CALCQ S IBWHER=3 D PASS^IBAUTL5:IBEVDA,CLOCKCL^IBAUTL3:IBY>0 G CALCQ
"RTN","IBAUTL4",22,0)
 ; - GMT Status?
"RTN","IBAUTL4",23,0)
 S IBGMT=$$ISGMTPT^IBAGMT(DFN,IBDT+.2359)
"RTN","IBAUTL4",24,0)
 S IBGMTEFD=$$GMTEFD^IBAGMT() ; GMT Effective Date
"RTN","IBAUTL4",25,0)
 ; - on leave?
"RTN","IBAUTL4",26,0)
 S VAIP("D")=IBDT_.2359 D IN5^VADPT S IBBS=$$SECT^IBAUTL5(+VAIP(8)),IBSL="405:"_VAIP(1)
"RTN","IBAUTL4",27,0)
 I 'VAIP(10) D  G CALCQ
"RTN","IBAUTL4",28,0)
 . I IBBS,'IBCLDA S IBCLDT=IBDT,IBWHER=7 D CLADD^IBAUTL3 S (IBCLDAY,IBCLDOL)=0,IBCLCT=1
"RTN","IBAUTL4",29,0)
 . Q:'IBCLDA  S IBWHER=4 D PASS^IBAUTL5:IBEVDA,CLOCKCL^IBAUTL3:IBCLCT'<365&(IBY>0)
"RTN","IBAUTL4",30,0)
 ; - check billing status
"RTN","IBAUTL4",31,0)
 I 'IBBS S IBWHER=5 D:IBEVDA PASS^IBAUTL5,EVCLOS1^IBAUTL3:IBY>0 D  G CALCQ
"RTN","IBAUTL4",32,0)
 . S IBEVDA=0 Q:'IBCLDA!(IBY<1)  D:IBCLCT'<365 CLOCKCL^IBAUTL3
"RTN","IBAUTL4",33,0)
 S IBNH=$P($G(^DGCR(399.1,IBBS,0)),"^")["NURSING"
"RTN","IBAUTL4",34,0)
 I 'IBEVDA S IBEVDT=+VAIP(3)\1,IBWHER=6 D EVADD^IBAUTL3 G:IBY<1 CALCQ
"RTN","IBAUTL4",35,0)
 ; - will bill today--got a clock?
"RTN","IBAUTL4",36,0)
 I 'IBCLDA S IBCLDT=IBDT,IBWHER=7 D CLADD^IBAUTL3 G:IBY<1 CALCQ S (IBCLDAY,IBCLDOL)=0,IBCLCT=1
"RTN","IBAUTL4",37,0)
 ; - cancel any OPT charges
"RTN","IBAUTL4",38,0)
 D OPT^IBAMTD1(DFN,IBDT)
"RTN","IBAUTL4",39,0)
 ; - update clock, $$ if starting another 90-day period of care
"RTN","IBAUTL4",40,0)
 I IBCLDAY,'(IBCLDAY#90) D CLUPD^IBAUTL3 S:IBCLDAY'=360 IBCLDOL=0
"RTN","IBAUTL4",41,0)
 S IBCLDAY=IBCLDAY+1
"RTN","IBAUTL4",42,0)
 ; - process per diem
"RTN","IBAUTL4",43,0)
 G:IBDT<$$DIEM^IBAUTL5 COPAY ; date is prior to per diem billing date
"RTN","IBAUTL4",44,0)
 S IBX="P",IBWHER=8 D TYPE^IBAUTL2 G:IBY<1 CALCQ
"RTN","IBAUTL4",45,0)
 S IBGMTR=0 I IBGMT>0,IBDT'<IBGMTEFD,$$ISGMTTYP^IBAGMT(IBATYP) S IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) ;GMT Charge Adjustment
"RTN","IBAUTL4",46,0)
 D CHFIND^IBAUTL2 S IBNOS=IBCHPDA,IBCHPDE=$P($G(^IB(+IBCHPDA,0)),"^",8),IBWHER=9
"RTN","IBAUTL4",47,0)
 ; - update or pass to A/R an incomplete per diem charge
"RTN","IBAUTL4",48,0)
 I IBCHPDA D  G:IBY<1 CALCQ
"RTN","IBAUTL4",49,0)
 . I (IBCHPDE["INPT"&(IBNH))!(IBCHPDE["NHC"&('IBNH)) D  Q
"RTN","IBAUTL4",50,0)
 ..  D FILER^IBAUTL5,EVCLOS1^IBAUTL3:IBY>0 Q:IBY<1
"RTN","IBAUTL4",51,0)
 ..  S IBEVDT=+VAIP(3)\1,IBEVOLD=IBEVDA,IBWHER=10
"RTN","IBAUTL4",52,0)
 ..  D EVADD^IBAUTL3 Q:IBY<1  S IBCHPDA=0,IBEVNEW=IBEVDA
"RTN","IBAUTL4",53,0)
 . S X1=IBDT,X2=IBCHTO D ^%DTC I X'=1 S IBWHER=11 D FILER^IBAUTL5 S IBCHPDA=0 Q
"RTN","IBAUTL4",54,0)
 . ; Split pre- and post- GMT Eff.Date charges, for GMT patients only
"RTN","IBAUTL4",55,0)
 . I IBGMT'=0,IBDT'<IBGMTEFD,$$ISGMTTYP^IBAGMT(IBATYP),IBCHTO<IBGMTEFD S IBWHER=11 D FILER^IBAUTL5 S IBCHPDA=0 Q
"RTN","IBAUTL4",56,0)
 . ; Split charges, if the patient just received or lost GMT Status
"RTN","IBAUTL4",57,0)
 . I (+$P($G(^IB(+IBCHPDA,0)),"^",21))'=IBGMTR S IBWHER=11 D FILER^IBAUTL5 S IBCHPDA=0 Q
"RTN","IBAUTL4",58,0)
 . S IBN=IBCHPDA D CHUPD^IBAUTL2
"RTN","IBAUTL4",59,0)
 I 'IBCHPDA S IBWHER=13 D CHADD^IBAUTL2 G:IBY<0 CALCQ S IBCHPDA=IBN
"RTN","IBAUTL4",60,0)
COPAY ; - process co-payment
"RTN","IBAUTL4",61,0)
 G:IBCLDAY>360!($$CONT^IBAUTL5(DFN)>IBDT) LAST ; last 5 days are grace days, or pt is continuous
"RTN","IBAUTL4",62,0)
 S IBMAX=IBMED
"RTN","IBAUTL4",63,0)
 I IBGMT>0,IBDT'<IBGMTEFD S IBMAX=$$REDUCE^IBAGMT(IBMAX) ;Adjust deductible for GMT patients
"RTN","IBAUTL4",64,0)
 I IBCLDAY>90,'IBNH S IBMAX=IBMAX/2
"RTN","IBAUTL4",65,0)
 G:IBCLDOL'<IBMAX LAST
"RTN","IBAUTL4",66,0)
 S IBWHER=14 D COPAY^IBAUTL2 G:IBY<1 CALCQ
"RTN","IBAUTL4",67,0)
 S IBGMTR=0 I IBGMT>0,IBDT'<IBGMTEFD S IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) ;GMT Charge Adjustment
"RTN","IBAUTL4",68,0)
 S IBCHARG=IBMAX-IBCLDOL I IBCHG<IBCHARG S IBCHARG=IBCHG
"RTN","IBAUTL4",69,0)
 S IBCHG=IBCHARG S:IBCHG<0 IBCHG=0
"RTN","IBAUTL4",70,0)
 S IBCLDOL=IBCLDOL+IBCHG
"RTN","IBAUTL4",71,0)
 S:IBEVOLD IBEVDA=IBEVOLD S IBX="C" D CHFIND^IBAUTL2
"RTN","IBAUTL4",72,0)
 S IBNOS=IBCHCDA,IBCHCTY=$P($G(^IB(+IBCHCDA,0)),"^",3) S:IBEVNEW IBEVDA=IBEVNEW
"RTN","IBAUTL4",73,0)
 ; - update or pass to A/R an incomplete copay charge
"RTN","IBAUTL4",74,0)
 I IBCHCDA D  G:IBY<1 CALCQ
"RTN","IBAUTL4",75,0)
 . I IBCHCTY'=IBATYP S IBWHER=15 D FILER^IBAUTL5 S IBCHCDA=0 Q
"RTN","IBAUTL4",76,0)
 . S X1=IBDT,X2=IBCHTO D ^%DTC I X'=1 S IBWHER=16 D FILER^IBAUTL5 S IBCHCDA=0 Q
"RTN","IBAUTL4",77,0)
 . ; Split pre- and post- GMT Eff.Date charges
"RTN","IBAUTL4",78,0)
 . I IBGMT'=0,IBDT'<IBGMTEFD,IBCHTO<IBGMTEFD S IBWHER=16 D FILER^IBAUTL5 S IBCHPDA=0 Q
"RTN","IBAUTL4",79,0)
 . S IBN=IBCHCDA D CHUPD^IBAUTL2
"RTN","IBAUTL4",80,0)
 I 'IBCHCDA S IBWHER=18 D CHADD^IBAUTL2 G:IBY<1 CALCQ S IBCHCDA=IBN
"RTN","IBAUTL4",81,0)
 I IBCHCDA,IBCLDOL'<IBMAX S IBEVOLD=0,IBNOS=IBCHCDA,IBWHER=19 D FILER^IBAUTL5 G:IBY<1 CALCQ S IBCHCDA=0
"RTN","IBAUTL4",82,0)
LAST ; - handle last day of billing clock
"RTN","IBAUTL4",83,0)
 G:IBCLCT<365 CALCQ
"RTN","IBAUTL4",84,0)
 I $G(IBCHPDA) S IBNOS=IBCHPDA,IBWHER=20 D FILER^IBAUTL5 G:IBY<1 CALCQ S IBCHPDA=0
"RTN","IBAUTL4",85,0)
 I $G(IBCHCDA) S IBNOS=IBCHCDA,IBWHER=21 D FILER^IBAUTL5 G:IBY<1 CALCQ S IBCHCDA=0
"RTN","IBAUTL4",86,0)
 D CLOCKCL^IBAUTL3
"RTN","IBAUTL4",87,0)
CALCQ I $G(IBJOB)=2,'$G(DGQUIET) W "."
"RTN","IBAUTL4",88,0)
 Q
"RTN","IBECEA21")
0^5^B26041958
"RTN","IBECEA21",1,0)
IBECEA21 ;ALB/CPM-Cancel/Edit/Add... Edit Prompts;19-APR-93
"RTN","IBECEA21",2,0)
 ;;2.0;INTEGRATED BILLING;**7,57,167,183,202**;21-MAR-94
"RTN","IBECEA21",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBECEA21",4,0)
 ;
"RTN","IBECEA21",5,0)
 ; Issue appropriate prompts for each charge type.  If the charge
"RTN","IBECEA21",6,0)
 ; being edited has not been billed, handle that charge before
"RTN","IBECEA21",7,0)
 ; returning to IBECEA2.
"RTN","IBECEA21",8,0)
 ;
"RTN","IBECEA21",9,0)
 N IBSTOPDA,IBTYPE,IBGMT
"RTN","IBECEA21",10,0)
 S IBGMT=0
"RTN","IBECEA21",11,0)
 ;
"RTN","IBECEA21",12,0)
 ; Handle Outpatient Charges
"RTN","IBECEA21",13,0)
 I IBXA=4 D  G END
"RTN","IBECEA21",14,0)
 .S (IBFR,IBTO,IBDT)=$P(IBND,"^",14),IBUNIT=IBUNITP
"RTN","IBECEA21",15,0)
 .W !,"Re-calculating the OPT copay charge for ",$$DAT1^IBOUTL(IBFR)," ..."
"RTN","IBECEA21",16,0)
 .;
"RTN","IBECEA21",17,0)
 .; need to look up stop info to populate IBTYPE *167
"RTN","IBECEA21",18,0)
 .S IBSTOPDA=$S($P($P(IBND,"^",4),":")=350:$P(IBND,"^",20),1:$$GETSC^IBEMTSCU($P(IBND,"^",4),$P(IBND,"^",17)))
"RTN","IBECEA21",19,0)
 .S IBTYPE=$S(IBSTOPDA>0:$P($G(^IBE(352.5,+$G(IBSTOPDA),0)),"^",3),1:1)
"RTN","IBECEA21",20,0)
 .;
"RTN","IBECEA21",21,0)
 .S IBX="O" D TYPE^IBAUTL2 Q:IBY<0  W "   $",IBCHG
"RTN","IBECEA21",22,0)
 .I 'IBH,IBCHG=IBCHGP W !,"This equals the billed amount - this charge cannot be edited." S IBY=-1 Q
"RTN","IBECEA21",23,0)
 .I IBCHG=IBCHGP W !,"This charge is ready to be billed." D PASS^IBECEA22 S IBY=-1 Q
"RTN","IBECEA21",24,0)
 .I IBH D UPCHG^IBECEA22(IBCHG) S IBY=-1 Q
"RTN","IBECEA21",25,0)
 .S IBCRES=$O(^IBE(350.3,"B","MT CHARGE EDITED",0)) S:'IBCRES IBCRES=19
"RTN","IBECEA21",26,0)
 .W !!,"The original charge will be cancelled and re-billed for $",IBCHG,"."
"RTN","IBECEA21",27,0)
 ;
"RTN","IBECEA21",28,0)
 ; Handle Pharmacy Copay Charges
"RTN","IBECEA21",29,0)
 I IBXA=5 D  G END
"RTN","IBECEA21",30,0)
 .D UNIT^IBECEAU2(IBUNITP) Q:IBY<0
"RTN","IBECEA21",31,0)
 .I 'IBH,IBUNIT=IBUNITP W !!,"No change was made!" S IBY=-1 Q
"RTN","IBECEA21",32,0)
 .I IBH D UPCHG^IBECEA22(IBCHG,IBUNIT) S IBY=-1 Q
"RTN","IBECEA21",33,0)
 .W !!,"The original charge will be cancelled and re-billed for $",$J(IBCHG,"",2),"."
"RTN","IBECEA21",34,0)
 ;
"RTN","IBECEA21",35,0)
 ; Handle all Inpatient Charges
"RTN","IBECEA21",36,0)
 S IBFRP=+$P(IBND,"^",14),IBTOP=+$P(IBND,"^",15),IBLIM=$S(IBXA=3:DT,1:$$FMADD^XLFDT(DT,-1))
"RTN","IBECEA21",37,0)
 S IBGMT=$$ISGMTPT^IBAGMT(DFN,IBFRP) ;Check GMT Copayment Status
"RTN","IBECEA21",38,0)
 D CLSTR^IBECEAU1(DFN,IBFRP)
"RTN","IBECEA21",39,0)
 I 'IBCLDA W !!,"I cannot find a billing clock that was effective on ",$$DAT1^IBOUTL(IBFRP),"!",!,"Please adjust this patient's billing clocks before editing this charge." S IBY=-1 Q
"RTN","IBECEA21",40,0)
 D CLDATA^IBAUTL3,DED^IBAUTL3 G:IBY<0 END
"RTN","IBECEA21",41,0)
 ;For GMT Patients reduce Medicare Deductible to 20%
"RTN","IBECEA21",42,0)
 I IBGMT>0 S IBMED=$$REDUCE^IBAGMT(IBMED) W !,"Medicare Deductible reduced due to GMT Copayment Status."
"RTN","IBECEA21",43,0)
 S:IBXA=2 IBBS=$O(^DGCR(399.1,"AC",IBATYP,0))
"RTN","IBECEA21",44,0)
 I IBXA=2,$P($G(^IBE(350.1,IBATYP,0)),"^",8)'["NHCU",IBCLDAY>90,IBCHGP'>IBCLDOL S IBMED=IBMED/2
"RTN","IBECEA21",45,0)
 I IBXA=1,IBCLDAY>90 D MED^IBECEA34 G:IBY<0 END
"RTN","IBECEA21",46,0)
 W !!,"  ** ",$S($P(IBCLST,"^",4)=1:"Active",1:"Closed")," Billing Clock **"
"RTN","IBECEA21",47,0)
 W !?2,"Begin Date: ",$$DAT1^IBOUTL(IBCLDT),"   # Inpt Days: ",IBCLDAY,"   ",$$INPT^IBECEAU(IBCLDAY)," 90 days: $",IBCLDOL,!
"RTN","IBECEA21",48,0)
 S:IBXA=3 IBDAYP=IBCLDAY-IBUNITP
"RTN","IBECEA21",49,0)
 I IBXA=1!(IBXA=2) S IBDOLP=IBCLDOL-IBCHGP S:IBDOLP<0 IBDOLP=0
"RTN","IBECEA21",50,0)
 ;
"RTN","IBECEA21",51,0)
 ; - ask for 'Bill From' date
"RTN","IBECEA21",52,0)
FR D FR^IBECEAU2(IBFRP) G:IBY<0 END I IBFR<IBCLDT W !!,"The 'Bill From' date cannot preceed the Billing Clock Begin Date.",! G FR
"RTN","IBECEA21",53,0)
 S IBGMTR=0,IBGMT=$$ISGMTPT^IBAGMT(DFN,IBFR) ; GMT Status may change
"RTN","IBECEA21",54,0)
 I IBXA=3 S IBDT=IBFR D COST^IBAUTL2 S:IBGMT>0 IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) I 'IBCHG W !!,"Unable to determine the per diem rate. Please check your rate table." S IBY=-1 G END
"RTN","IBECEA21",55,0)
 I IBXA=2 S IBDT=IBFR D COPAY^IBAUTL2 G:IBY<0 END S:IBGMT>0 IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) I IBCHG+IBDOLP<IBMED W *7,"   ($",IBCHG,"/day)" W:IBGMTR " GMT Rate" G TO
"RTN","IBECEA21",56,0)
 I IBXA=2,IBCHG=IBCHGP D CTBB^IBECEAU3 W !!,"No change was made!" S IBY=-1 G END
"RTN","IBECEA21",57,0)
 ;
"RTN","IBECEA21",58,0)
 ; - ask for 'Bill To' date
"RTN","IBECEA21",59,0)
TO D TO^IBECEAU2(IBTOP) G:IBY<0 END I $P(IBCLST,"^",10),IBTO>$P(IBCLST,"^",10) W !!,"The 'Bill To' date cannot exceed the Billing Clock End Date (",$$DAT1^IBOUTL($P(IBCLST,"^",10)),")." G TO
"RTN","IBECEA21",60,0)
 S IBUNIT=$$FMDIFF^XLFDT(IBTO,IBFR)
"RTN","IBECEA21",61,0)
 I $$FMDIFF^XLFDT(IBTOP,IBFRP)<IBUNITP!(IBFR=IBTO) S IBUNIT=IBUNIT+1
"RTN","IBECEA21",62,0)
 I IBTO'=IBFR,IBXA>0,IBXA<4,$$ISGMTPT^IBAGMT(DFN,IBTO)'=$$ISGMTPT^IBAGMT(DFN,IBFR) W !!,"The patient changed GMT Copayment status during the specified period!",! G TO
"RTN","IBECEA21",63,0)
 I IBXA>1 D  G END
"RTN","IBECEA21",64,0)
 . S IBCHG=IBUNIT*IBCHG S:IBXA=2 IBCHG=$S(IBDOLP+IBCHG>IBMED:IBMED-IBDOLP,1:IBCHG)
"RTN","IBECEA21",65,0)
 . I IBCHG=IBCHGP D CTBB^IBECEAU3 W !!,"No change was made!" S IBY=-1 Q
"RTN","IBECEA21",66,0)
 . S:IBXA=2 IBDOLA=IBDOLP+IBCHG,IBDAYA=0 S:IBXA=3 IBDAYA=IBDAYP+IBUNIT,IBDOLA=0
"RTN","IBECEA21",67,0)
 . W !!,"New charge to be billed" W:IBGMTR "(GMT Rate)" W ": $",$J(IBCHG,"",2),!
"RTN","IBECEA21",68,0)
 . I IBH D CHCL^IBECEA22
"RTN","IBECEA21",69,0)
 ;
"RTN","IBECEA21",70,0)
 ; - ask for 'Fee Amount'
"RTN","IBECEA21",71,0)
 S IBCLDOLO=IBCLDOL,IBCLDOL=IBCLDOL-IBCHGP S:IBCLDOL<0 IBCLDOL=0
"RTN","IBECEA21",72,0)
 I IBGMT>0 S IBGMTR=1 W !,"The patient has GMT Copayment Status! GMT rate must be applied.",!
"RTN","IBECEA21",73,0)
 D FEE^IBECEAU2(IBCHGP) G:IBY<0 END
"RTN","IBECEA21",74,0)
 I IBCHG=IBCHGP W !!,"No change was made!" S IBY=-1 G END
"RTN","IBECEA21",75,0)
 S IBCLDOL=IBCLDOLO,IBDOLA=IBDOLP+IBCHG,IBDAYA=0
"RTN","IBECEA21",76,0)
 I IBH D CHCL^IBECEA22
"RTN","IBECEA21",77,0)
 ;
"RTN","IBECEA21",78,0)
END Q
"RTN","IBECEA3")
0^6^B61444394
"RTN","IBECEA3",1,0)
IBECEA3 ;ALB/CPM-Cancel/Edit/Add... Add a Charge;30-MAR-93
"RTN","IBECEA3",2,0)
 ;;2.0;INTEGRATED BILLING;**7,57,52,132,150,153,166,156,167,176,198,188,183,202**;21-MAR-94
"RTN","IBECEA3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBECEA3",4,0)
 ;
"RTN","IBECEA3",5,0)
ADD ; Add a Charge protocol
"RTN","IBECEA3",6,0)
 N IBGMT,IBGMTR
"RTN","IBECEA3",7,0)
 S (IBGMT,IBGMTR)=0
"RTN","IBECEA3",8,0)
 S IBCOMMIT=0,IBEXSTAT=$$RXST^IBARXEU(DFN,DT),IBCATC=$$BILST^DGMTUB(DFN),IBCVAEL=$$CVA^IBAUTL5(DFN),IBLTCST=$$LTCST^IBAECU(DFN,DT,1)
"RTN","IBECEA3",9,0)
 ;I 'IBCVAEL,'IBCATC,'$G(IBRX),+IBEXSTAT<1 W !!,"This patient has never been Means Test billable." S VALMBCK="" D PAUSE^VALM1 G ADDQ1
"RTN","IBECEA3",10,0)
 ;
"RTN","IBECEA3",11,0)
 ; - clear screen and begin
"RTN","IBECEA3",12,0)
 D CLOCK^IBAUTL3 I 'IBCLDA S (IBMED,IBCLDAY,IBCLDOL,IBCLDT)=0
"RTN","IBECEA3",13,0)
 D HDR^IBECEAU("A D D")
"RTN","IBECEA3",14,0)
 I IBY<0 D NODED^IBECEAU3 G ADDQ
"RTN","IBECEA3",15,0)
 ;
"RTN","IBECEA3",16,0)
 ; - ask for the charge type
"RTN","IBECEA3",17,0)
 D CHTYP^IBECEA33 G:IBY<0 ADDQ
"RTN","IBECEA3",18,0)
 N IBAFEE S:$P($G(^IBE(350.1,+$G(IBATYP),0)),"^",8)="FEE SERVICE/OUTPATIENT" IBAFEE=IBATYP
"RTN","IBECEA3",19,0)
 ;
"RTN","IBECEA3",20,0)
 ; - process CHAMPVA charges
"RTN","IBECEA3",21,0)
 I IBXA=6 D CHMPVA^IBECEA32 G ADDQ
"RTN","IBECEA3",22,0)
 ;
"RTN","IBECEA3",23,0)
 ; - process CHAMPUS charges
"RTN","IBECEA3",24,0)
 I IBXA=7 D CUS^IBECEA35 G ADDQ
"RTN","IBECEA3",25,0)
 ;
"RTN","IBECEA3",26,0)
 ; - display MT billing clock data
"RTN","IBECEA3",27,0)
 I IBXA=2,$P($G(^IBE(350.1,+IBATYP,0)),"^",8)'["NHCU",IBCLDAY>90 S IBMED=IBMED/2
"RTN","IBECEA3",28,0)
 I IBXA=1,IBCLDAY>90 D MED^IBECEA34 G:IBY<0 ADDQ
"RTN","IBECEA3",29,0)
 I "^1^2^3^"[("^"_IBXA_"^"),IBCLDA W !!,"  ** Active Billing Clock **   # Inpt Days: ",IBCLDAY,"    ",$$INPT^IBECEAU(IBCLDAY)," 90 days: $",+IBCLDOL,!
"RTN","IBECEA3",30,0)
 ;
"RTN","IBECEA3",31,0)
 ; - display LTC billing clock data
"RTN","IBECEA3",32,0)
 I IBXA>7,IBXA<10 D  G:IBCLDA<1 ADDQ
"RTN","IBECEA3",33,0)
 . N IBCLZ
"RTN","IBECEA3",34,0)
 . S IBCLDA=$O(^IBA(351.81,"AE",DFN,9999999),-1)
"RTN","IBECEA3",35,0)
 . S:IBCLDA IBCLDA=$O(^IBA(351.81,"AE",DFN,IBCLDA,0))
"RTN","IBECEA3",36,0)
 . I 'IBCLDA W !!,"  ** Patient has no LTC billing clock **" Q
"RTN","IBECEA3",37,0)
 . S IBCLZ=^IBA(351.81,IBCLDA,0)
"RTN","IBECEA3",38,0)
 . W !!,"  **Last LTC Billing Clock    Start Date: ",$$FMTE^XLFDT($P(IBCLZ,"^",3)),"  Free Days Remaining: ",+$P(IBCLZ,"^",6)
"RTN","IBECEA3",39,0)
 . I $P(IBCLZ,"^",6) W !,"The patient must use his free days first." S IBCLDA=0
"RTN","IBECEA3",40,0)
 ;
"RTN","IBECEA3",41,0)
 ; - ask units for rx copay charge
"RTN","IBECEA3",42,0)
 I IBXA=5 D UNIT^IBECEAU2(0) G ADDQ:IBY<0 D  G ADDQ:IBY<0 G PROC
"RTN","IBECEA3",43,0)
 . ;
"RTN","IBECEA3",44,0)
 . ; has patient been previously tracked for cap info
"RTN","IBECEA3",45,0)
 . D TRACK^IBARXMN(DFN)
"RTN","IBECEA3",46,0)
 . ;
"RTN","IBECEA3",47,0)
 . D CTBB^IBECEAU3
"RTN","IBECEA3",48,0)
 . ;
"RTN","IBECEA3",49,0)
 . ; check if above cap
"RTN","IBECEA3",50,0)
 . I IBY'<0 D
"RTN","IBECEA3",51,0)
 .. N IBB,IBN,DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEA3",52,0)
 .. D NEW^IBARXMC(1,IBCHG,DT,.IBB,.IBN) Q:'IBN
"RTN","IBECEA3",53,0)
 .. ;
"RTN","IBECEA3",54,0)
 .. ; display message ask to proceed
"RTN","IBECEA3",55,0)
 .. W !!,"This charge will put the patient > $",$J(IBN,0,2)," above their cap amount."
"RTN","IBECEA3",56,0)
 .. S DIR(0)="Y",DIR("A")="Okay to proceed" D ^DIR S:'Y IBY=-1
"RTN","IBECEA3",57,0)
 .. ;
"RTN","IBECEA3",58,0)
 S IBLIM=$S(IBXA=4!(IBXA=3):DT,1:$$FMADD^XLFDT(DT,-1))
"RTN","IBECEA3",59,0)
 ;
"RTN","IBECEA3",60,0)
FR ; - ask 'bill from' date
"RTN","IBECEA3",61,0)
 D FR^IBECEAU2(0) G:IBY<0 ADDQ
"RTN","IBECEA3",62,0)
 S IBGMT=$$ISGMTPT^IBAGMT(DFN,IBFR),IBGMTR=0 ;GMT Copayment Status
"RTN","IBECEA3",63,0)
 I IBGMT>0,IBXA>0,IBXA<4 W !,"The patient has GMT Copayment Status."
"RTN","IBECEA3",64,0)
 ; - check the MT billing clock
"RTN","IBECEA3",65,0)
 I IBXA'=8,IBXA'=9 D CLMSG^IBECEA33 G:IBY<0 ADDQ
"RTN","IBECEA3",66,0)
 ;Adjust Deductible for GMT patient
"RTN","IBECEA3",67,0)
 I IBGMT>0,IBXA>0,IBXA<4,$G(IBMED) S IBMED=$$REDUCE^IBAGMT(IBMED) W !,"Medicare Deductible reduced due to GMT Copayment Status ($",$J(IBMED,"",2),")."
"RTN","IBECEA3",68,0)
 ;
"RTN","IBECEA3",69,0)
 ; - check the LTC billing clock
"RTN","IBECEA3",70,0)
 I IBXA>7,IBXA<10 D  I IBY<0 W !!,"The patient has no LTC clock active for the date.",! G ADDQ
"RTN","IBECEA3",71,0)
 . N IBCLZ S IBCLZ=^IBA(351.81,IBCLDA,0)
"RTN","IBECEA3",72,0)
 . ;
"RTN","IBECEA3",73,0)
 . ; is this the clock and within the date range
"RTN","IBECEA3",74,0)
 . I IBFR'<$P(IBCLZ,"^",3),$$YR^IBAECU($P(IBCLZ,"^",3),IBFR) S IBY=-1 Q
"RTN","IBECEA3",75,0)
 . ;
"RTN","IBECEA3",76,0)
 . ; look for another clock that might fit the date
"RTN","IBECEA3",77,0)
 . I IBFR<$P(IBCLZ,"^",3) S IBCLDA=$O(^IBA(351.81,"AE",DFN,IBFR+1),-1) I 'IBCLDA!($$YR^IBAECU($P($G(^IBA(351.81,+IBCLDA,0)),"^",3))) S IBY=-1
"RTN","IBECEA3",78,0)
 ;
"RTN","IBECEA3",79,0)
 ; - calculate the MT inpt copay charge
"RTN","IBECEA3",80,0)
 I IBXA=2 S IBDT=IBFR D COPAY^IBAUTL2 G ADDQ:IBY<0 S:IBGMT>0 IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) I IBCHG+IBCLDOL<IBMED W *7,"   ($",IBCHG,"/day)" W:IBGMTR " GMT Rate"
"RTN","IBECEA3",81,0)
 ;
"RTN","IBECEA3",82,0)
 ; - find the correct clock from the 'bill from' date (ignore LTC)
"RTN","IBECEA3",83,0)
 I IBXA'=8,IBXA'=9,('IBCLDA!(IBCLDA&(IBFR<IBCLDT))) D NOCL^IBECEA33 G:IBY<0 ADDQ
"RTN","IBECEA3",84,0)
 ;
"RTN","IBECEA3",85,0)
 ; - perform outpatient edits
"RTN","IBECEA3",86,0)
 N IBSTOPDA
"RTN","IBECEA3",87,0)
 I IBXA=4 D  G ADDQ:IBY<0,PROC
"RTN","IBECEA3",88,0)
 .   ;  for visits prior to 12/6/01 or FEE
"RTN","IBECEA3",89,0)
 .   I IBFR<3011206!($G(IBAFEE)) D OPT^IBECEA33 Q
"RTN","IBECEA3",90,0)
 .   ;  for visits on or after 12/5/01
"RTN","IBECEA3",91,0)
 .   D OPT^IBEMTSCU
"RTN","IBECEA3",92,0)
 ;
"RTN","IBECEA3",93,0)
 ; - if LTC outpatient calcuate the charge
"RTN","IBECEA3",94,0)
 I IBXA=8 D  G:IBY<0 ADDQ S (IBDT,IBTO,IBEVDT)=IBFR,IBDESC=$P(^IBE(350.1,IBATYP,0),"^",8),IBUNIT=1,IBEVDA="*" D COST^IBAUTL2,CALC^IBAECO,CTBB^IBECEAU3 G @$S(IBCHG:"PROC",1:"ADDQ")
"RTN","IBECEA3",95,0)
 . ;
"RTN","IBECEA3",96,0)
 . ; is this day already a free day
"RTN","IBECEA3",97,0)
 . I $D(^IBA(351.81,IBCLDA,1,"AC",IBFR)) W !!,"This day is already marked as a Free Day." S IBY=-1
"RTN","IBECEA3",98,0)
 . ;
"RTN","IBECEA3",99,0)
 . ; have we already billed for this day
"RTN","IBECEA3",100,0)
 . I $D(^IB("AFDT",DFN,-IBFR)) W !!,"This patient has already been billed for this date." S IBY=-1
"RTN","IBECEA3",101,0)
 ;
"RTN","IBECEA3",102,0)
 ; - find per diem charge and description
"RTN","IBECEA3",103,0)
 I IBXA=3 D  I 'IBCHG W !!,"Unable to determine the per diem rate.  Please check your rate table." G ADDQ
"RTN","IBECEA3",104,0)
 .N IBDT S IBDT=IBFR,IBGMTR=0 D COST^IBAUTL2
"RTN","IBECEA3",105,0)
 .I IBGMT>0 S IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG)
"RTN","IBECEA3",106,0)
 .S IBDESC="" X:$D(^IBE(350.1,IBATYP,20)) ^(20)
"RTN","IBECEA3",107,0)
 ;
"RTN","IBECEA3",108,0)
 ; - calculate charge for the inpatient copay
"RTN","IBECEA3",109,0)
 I IBXA=2,IBCHG+IBCLDOL'<IBMED S IBCHG=IBMED-IBCLDOL,IBUNIT=1,IBTO=IBFR D CTBB^IBECEAU3 G EV
"RTN","IBECEA3",110,0)
 ;
"RTN","IBECEA3",111,0)
TO ; - ask 'bill to' date
"RTN","IBECEA3",112,0)
 D TO^IBECEAU2(0) G:IBY<0 ADDQ
"RTN","IBECEA3",113,0)
 I IBXA>0,IBXA<4,IBGMT'=$$ISGMTPT^IBAGMT(DFN,IBTO) W !!,"The patient's GMT Copayment status changed within the specified period!",! G ADDQ
"RTN","IBECEA3",114,0)
 ;
"RTN","IBECEA3",115,0)
 ; - calculate unit charge for LTC inpatient in IBCHG
"RTN","IBECEA3",116,0)
 I IBXA=9 S IBDT=IBFR,IBEVDA=$$EVF^IBECEA31(DFN,IBFR,IBTO,IBNH),IBEVDT=$E(IBFR,1,5)_"01" D:IBEVDA<1  G ADDQ:IBY<0 D COST^IBAUTL2 I $E(IBFR,1,5)'=$E(IBTO,1,5) W !!,"  LTC Copayment charges cannot go from one month to another." G ADDQ
"RTN","IBECEA3",117,0)
 . D NOEV^IBECEA31 I '$G(IBDG)!(IBY<0) S IBY=-1 Q
"RTN","IBECEA3",118,0)
 . ; - build the event record
"RTN","IBECEA3",119,0)
 . N IBNHLTC S IBNHLTC=1 D ADEV^IBECEA31
"RTN","IBECEA3",120,0)
 ;
"RTN","IBECEA3",121,0)
 ;
"RTN","IBECEA3",122,0)
 ; - calculate units and total charge
"RTN","IBECEA3",123,0)
 S IBUNIT=$$FMDIFF^XLFDT(IBTO,IBFR) S:IBXA'=3!(IBFR=IBTO) IBUNIT=IBUNIT+1
"RTN","IBECEA3",124,0)
 I IBXA=1 D:IBGMT>0  D FEPR^IBECEA32 G ADDQ:IBY<0,EV
"RTN","IBECEA3",125,0)
 . S IBGMTR=1
"RTN","IBECEA3",126,0)
 . W !,"The patient has GMT Copayment Status! GMT rate must be applied.",!
"RTN","IBECEA3",127,0)
 S IBCHG=IBCHG*IBUNIT S:IBXA=2 IBCHG=$S(IBCLDOL+IBCHG>IBMED:IBMED-IBCLDOL,1:IBCHG)
"RTN","IBECEA3",128,0)
 ;
"RTN","IBECEA3",129,0)
 ; adjust the LTC charge based on the calculated copay cap
"RTN","IBECEA3",130,0)
 I IBXA=9 D CALC^IBAECI G:IBY<1!('IBCHG) ADDQ S IBDESC="LTC INPATIENT COPAY"
"RTN","IBECEA3",131,0)
 ;
"RTN","IBECEA3",132,0)
 D CTBB^IBECEAU3 W:IBXA=3!(IBXA=9) "  (for ",IBUNIT," day",$E("s",IBUNIT>1),")" W:IBGMTR " GMT Rate"
"RTN","IBECEA3",133,0)
 ;
"RTN","IBECEA3",134,0)
EV ; - find event record, or select admission for linkage
"RTN","IBECEA3",135,0)
 I IBXA'=9 S IBEVDA=$$EVF^IBECEA31(DFN,IBFR,IBTO,IBNH)
"RTN","IBECEA3",136,0)
 I IBEVDA'>0 D NOEV^IBECEA31 G ADDQ:IBY<0,PROC
"RTN","IBECEA3",137,0)
 S IBSL=$P($G(^IB(+IBEVDA,0)),"^",4)
"RTN","IBECEA3",138,0)
 W !!,"Linked charge to ",$$TYP(),"admission on ",$$DAT1^IBOUTL($P(IBEVDA,"^",2)),"  ("
"RTN","IBECEA3",139,0)
 W $S($P(IBEVDA,"^",3)=9999999:"Still admitted)",1:"Discharged on "_$$DAT1^IBOUTL($P(IBEVDA,"^",3))_$S($P(IBEVDA,"^",3)>DT:" [pseudo])",1:")"))," ..."
"RTN","IBECEA3",140,0)
 S IBEVDA=+IBEVDA
"RTN","IBECEA3",141,0)
 I '$G(IBSIBC) D SPEC^IBECEA32(0,$O(^IBE(351.2,"AD",IBEVDA,0)))
"RTN","IBECEA3",142,0)
 ;
"RTN","IBECEA3",143,0)
 ;
"RTN","IBECEA3",144,0)
PROC ; - okay to proceed?
"RTN","IBECEA3",145,0)
 D PROC^IBECEAU4("add") G:IBY<0 ADDQ
"RTN","IBECEA3",146,0)
 ;
"RTN","IBECEA3",147,0)
 ; - build the event record first if necessary
"RTN","IBECEA3",148,0)
 I $G(IBDG),IBXA'=9 D @("ADEV^IBECEA3"_$S($G(IBFEEV):4,1:1)) G:IBY<0 ADDQ
"RTN","IBECEA3",149,0)
 ;
"RTN","IBECEA3",150,0)
 ; - disposition the special inpatient billing case, if necessary
"RTN","IBECEA3",151,0)
 I $G(IBSIBC) D CEA^IBAMTI1(IBSIBC,IBEVDA)
"RTN","IBECEA3",152,0)
 ;
"RTN","IBECEA3",153,0)
 ; - generate entry in file #354.71 and #350
"RTN","IBECEA3",154,0)
 I IBXA=5 W !!,"Building the new transaction...  " S IBAM=$$ADD^IBARXMN(DFN,"^^"_DT_"^^P^^"_IBUNIT_"^"_IBCHG_"^"_IBDESC_"^^"_IBCHG_"^0^"_IBSITE) G:IBAM<0 ADDQ
"RTN","IBECEA3",155,0)
 D ADD^IBECEAU3 G:IBY<0 ADDQ W "done."
"RTN","IBECEA3",156,0)
 ;
"RTN","IBECEA3",157,0)
 ; - pass the charge off to AR on-line
"RTN","IBECEA3",158,0)
 W !,"Passing the charge directly to Accounts Receivable... "
"RTN","IBECEA3",159,0)
 D PASSCH^IBECEA22 W:IBY>0 "done." G:IBY<0 ADDQ
"RTN","IBECEA3",160,0)
 ;
"RTN","IBECEA3",161,0)
 ; - review the special inpatient billing case
"RTN","IBECEA3",162,0)
 I $G(IBSIBC1) D CHK^IBAMTI1(IBSIBC1,IBEVDA)
"RTN","IBECEA3",163,0)
 ;
"RTN","IBECEA3",164,0)
 ; - handle updating of clock
"RTN","IBECEA3",165,0)
 I IBXA'=8,IBXA'=9 D CLUPD^IBECEA32
"RTN","IBECEA3",166,0)
 ;
"RTN","IBECEA3",167,0)
ADDQ ; - display error, rebuild list, and quit
"RTN","IBECEA3",168,0)
 D ERR^IBECEAU4:IBY<0,PAUSE^IBECEAU S VALMBCK="R"
"RTN","IBECEA3",169,0)
 I IBCOMMIT S IBBG=VALMBG W !,"Rebuilding list of charges..." D ARRAY^IBECEA0 S VALMBG=IBBG
"RTN","IBECEA3",170,0)
 K IBMED,IBCLDA,IBCLDT,IBCLDOL,IBCLDAY,IBATYP,IBDG,IBSEQNO,IBXA,IBNH,IBBS,IBLIM,IBFR,IBTO,IBRTED,IBSIBC,IBSIBC1,IBBG,IBFEEV,IBAM
"RTN","IBECEA3",171,0)
 K IBX,IBCHG,IBUNIT,IBDESC,IBDT,IBEVDT,IBEVDA,IBSL,IBNOS,IBN,IBTOTL,IBARTYP,IBIL,IBTRAN,IBAFY,IBCVA,IBCLSF,IBDD,IBND,VADM,VA,VAERR,IBADJMED
"RTN","IBECEA3",172,0)
ADDQ1 K IBEXSTAT,IBCOMMIT,IBCATC,IBCVAEL,IBLTCST
"RTN","IBECEA3",173,0)
 Q
"RTN","IBECEA3",174,0)
 ;
"RTN","IBECEA3",175,0)
 ;
"RTN","IBECEA3",176,0)
TYP() ; Return descriptive admission type.
"RTN","IBECEA3",177,0)
 N X S X=""
"RTN","IBECEA3",178,0)
 I IBNH'=2 G TYPQ
"RTN","IBECEA3",179,0)
 I $G(IBADJMED) S X=$S(IBADJMED=1:"C",1:"H")
"RTN","IBECEA3",180,0)
 E  S X=$S($P($G(^IBE(350.1,+IBATYP,0)),"^")["NHCU":"C",1:"H")
"RTN","IBECEA3",181,0)
 S X=$S(X="C":"CNH ",1:"Contract Hospital ")
"RTN","IBECEA3",182,0)
TYPQ Q X
"RTN","IBEMTO")
0^7^B15335932
"RTN","IBEMTO",1,0)
IBEMTO ;ALB/CPM-BILL MT CHARGES AWAITING NEW COPAY RATE ;02-AUG-93
"RTN","IBEMTO",2,0)
 ;;2.0;INTEGRATED BILLING;**179,183,202**;21-MAR-94
"RTN","IBEMTO",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBEMTO",4,0)
 ;
"RTN","IBEMTO",5,0)
 ; Bill MT OPT charges on hold awaiting the new copay rate.
"RTN","IBEMTO",6,0)
 ;
"RTN","IBEMTO",7,0)
ENO ; Standalone option entry point
"RTN","IBEMTO",8,0)
 S IBOPT=1
"RTN","IBEMTO",9,0)
 ;
"RTN","IBEMTO",10,0)
ENR ; Enter/edit billing rates entry point
"RTN","IBEMTO",11,0)
 ;
"RTN","IBEMTO",12,0)
 ; - quit if job has been fired up from enter/edit rates already
"RTN","IBEMTO",13,0)
 I $G(IBRUN) G ENQ
"RTN","IBEMTO",14,0)
 ;
"RTN","IBEMTO",15,0)
 ; no longer used (at least for now)
"RTN","IBEMTO",16,0)
 W !!,"This option is no longer available.",! G ENQ
"RTN","IBEMTO",17,0)
 ;
"RTN","IBEMTO",18,0)
 ; - quit if there are no charges on hold awaiting the new rate
"RTN","IBEMTO",19,0)
 I '$D(^IB("AC",20)) W:$G(IBOPT) !!,"There are no charges on hold awaiting the entry of the new copay rate." G ENQ
"RTN","IBEMTO",20,0)
 ;
"RTN","IBEMTO",21,0)
 ; - quit if current rate is still too old
"RTN","IBEMTO",22,0)
 S IBDT=DT,IBX="O" D TYPE^IBAUTL2
"RTN","IBEMTO",23,0)
 I $$OLDRATE^IBAMTS1(IBRTED,DT) D:$G(IBOPT)  G ENQ
"RTN","IBEMTO",24,0)
 .W !!,"The current copay rate (effective ",$$DAT1^IBOUTL(IBRTED),") is still too old to use.  Please be"
"RTN","IBEMTO",25,0)
 .W !,"sure that you have entered the most current rate in your Billing Rates table."
"RTN","IBEMTO",26,0)
 ;
"RTN","IBEMTO",27,0)
 ; - if x-ref is locked, the job must be currently running
"RTN","IBEMTO",28,0)
 L +^IB("AC",20):5 E  D:$G(IBOPT)  G ENQ
"RTN","IBEMTO",29,0)
 .W !!,"The list of held charges cannot be accessed -- the job to bill these held"
"RTN","IBEMTO",30,0)
 .W !,"charges may currently be running."
"RTN","IBEMTO",31,0)
 ;
"RTN","IBEMTO",32,0)
 ; - queue the job to bill the held charges?
"RTN","IBEMTO",33,0)
 I '$G(IBOPT) D
"RTN","IBEMTO",34,0)
 .W !!?28,*7,*7,"***  PLEASE NOTE  ***"
"RTN","IBEMTO",35,0)
 .W !?8,"The Means Test Outpatient Copayment rate has just been updated,"
"RTN","IBEMTO",36,0)
 .W !?8,"and there are charges 'on hold' awaiting the entry of this new rate!",!
"RTN","IBEMTO",37,0)
 ;
"RTN","IBEMTO",38,0)
 I $G(IBOPT) D
"RTN","IBEMTO",39,0)
 .S IBN=0 F IBJ=0:1:21 S IBN=$O(^IB("AC",20,IBN)) Q:'IBN
"RTN","IBEMTO",40,0)
 .W !!,"There ",$S(IBJ=1:"is 1",1:"are "_$S(IBJ>20:"at least ",1:"")_IBJ)," charge",$E("s",IBJ>1)," on hold, awaiting the new copay rate."
"RTN","IBEMTO",41,0)
 S DIR(0)="Y",DIR("A")="Do you want to queue a job to automatically bill these held charges",DIR("?")="^D HQ^IBEMTO"
"RTN","IBEMTO",42,0)
 D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) G ENQ
"RTN","IBEMTO",43,0)
 ;
"RTN","IBEMTO",44,0)
 ; - queue up job to bill held charges
"RTN","IBEMTO",45,0)
 S:'$G(IBOPT) ZTDTH=$H
"RTN","IBEMTO",46,0)
 S ZTRTN="DQ^IBEMTO",ZTIO="",ZTDESC="BILLING OF MT OPT CHARGES AWAITING NEW COPAY RATE"
"RTN","IBEMTO",47,0)
 S IBRUN=1 D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job!")
"RTN","IBEMTO",48,0)
 ;
"RTN","IBEMTO",49,0)
ENQ L -^IB("AC",20)
"RTN","IBEMTO",50,0)
 K:$G(IBOPT) IBRUN
"RTN","IBEMTO",51,0)
 K IBN,IBDT,IBATYP,IBDESC,IBJ,IBOPT,IBRTED,IBCHG,IBX,ZTSK
"RTN","IBEMTO",52,0)
 Q
"RTN","IBEMTO",53,0)
 ;
"RTN","IBEMTO",54,0)
HQ ; Help for prompt
"RTN","IBEMTO",55,0)
 W !!,"If you wish to queue off a job to bill the Means Test Outpatient"
"RTN","IBEMTO",56,0)
 W !,"copayment charges that are on hold awaiting entry of the updated"
"RTN","IBEMTO",57,0)
 W !,"billing rate, please enter 'Y' or 'YES'.  The job will be tasked"
"RTN","IBEMTO",58,0)
 W !,"immediately.  Otherwise, enter 'N' or 'NO' or '^' to quit."
"RTN","IBEMTO",59,0)
 Q
"RTN","IBEMTO",60,0)
 ;
"RTN","IBEMTO",61,0)
 ;
"RTN","IBEMTO",62,0)
DQ ; Tasked job to bill all charges awaiting the new copay rate.
"RTN","IBEMTO",63,0)
 S IBJOB=8,IBDUZ=DUZ,IBSEQNO=1,IBCNT=0
"RTN","IBEMTO",64,0)
 ;
"RTN","IBEMTO",65,0)
 ; - record start time
"RTN","IBEMTO",66,0)
 D NOW^%DTC S IBSTART=$$DAT2^IBOUTL(%)
"RTN","IBEMTO",67,0)
 ;
"RTN","IBEMTO",68,0)
 ; - if can't lock x-ref, job must currently be running
"RTN","IBEMTO",69,0)
 L +^IB("AC",20):5
"RTN","IBEMTO",70,0)
 ;
"RTN","IBEMTO",71,0)
 ; - loop through all charges awaiting the new rate
"RTN","IBEMTO",72,0)
 I  S IBREF=0 F  S IBREF=$O(^IB("AC",20,IBREF)) Q:'IBREF  D CHG
"RTN","IBEMTO",73,0)
 ;
"RTN","IBEMTO",74,0)
 ; - unlock x-ref, record end time, and post bulletin
"RTN","IBEMTO",75,0)
 L -^IB("AC",20)
"RTN","IBEMTO",76,0)
 D NOW^%DTC S IBEND=$$DAT2^IBOUTL(%)
"RTN","IBEMTO",77,0)
 D BULL^IBEMTO1
"RTN","IBEMTO",78,0)
 K IBT,IBSTART,IBEND,IBREF,IBND,IBDT,IBX,IBCHG,IBSEQNO,IBNOS,IBCNT,XMTEXT,XMSUB,XMZ,XMY,XMDUZ
"RTN","IBEMTO",79,0)
 Q
"RTN","IBEMTO",80,0)
 ;
"RTN","IBEMTO",81,0)
CHG ; Pass a single charge to Accounts Receivable.
"RTN","IBEMTO",82,0)
 S IBND=$G(^IB(IBREF,0)) I 'IBND K ^IB("AC",20,IBREF) G CHGQ
"RTN","IBEMTO",83,0)
 S IBDT=DT,IBX="O" D TYPE^IBAUTL2
"RTN","IBEMTO",84,0)
 I $$OLDRATE^IBAMTS1(IBRTED,$P(IBND,"^",14)) G CHGQ ; rate still old
"RTN","IBEMTO",85,0)
 S $P(^IB(IBREF,0),"^",7)=IBCHG,IBSEQNO=1,DFN=+$P(IBND,"^",2)
"RTN","IBEMTO",86,0)
 S IBNOS=IBREF D ^IBR S:Y>0 IBCNT=IBCNT+1
"RTN","IBEMTO",87,0)
CHGQ Q
"RTN","IBOMTE")
0^8^B10360703
"RTN","IBOMTE",1,0)
IBOMTE ;ALB/CPM-ESTIMATE MEANS TEST CHARGES ;17-DEC-91
"RTN","IBOMTE",2,0)
 ;;2.0;INTEGRATED BILLING;**153,183,202**;21-MAR-94
"RTN","IBOMTE",3,0)
 ;
"RTN","IBOMTE",4,0)
 S:'$D(DTIME) DTIME=300 D HOME^%ZIS
"RTN","IBOMTE",5,0)
 ; Check the MAS Service pointer first.
"RTN","IBOMTE",6,0)
START ;
"RTN","IBOMTE",7,0)
 ;***
"RTN","IBOMTE",8,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTE" D T1^%ZOSV ;stop rt clock
"RTN","IBOMTE",9,0)
 ;S XRTL=$ZU(0),XRTN="IBOMTE-1" D T0^%ZOSV ;start rt clock
"RTN","IBOMTE",10,0)
 S IBY=1 D SERV^IBAUTL2 I IBY<1 D  G END
"RTN","IBOMTE",11,0)
 . W !!,"Medical Administration Service is not defined in your IB Site Parameter File."
"RTN","IBOMTE",12,0)
 . W !,"Please contact your System Manager, as this impacts on all aspects of",!,"Means Test billing.",!!
"RTN","IBOMTE",13,0)
 ;
"RTN","IBOMTE",14,0)
 ; Select patient to be admitted; check for previously billed charges.
"RTN","IBOMTE",15,0)
 S DPTNOFZY=1 ;Suppress PATIENT file fuzzy lookups
"RTN","IBOMTE",16,0)
 S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC K DIC G END:Y<1 S (DFN,IBDFN)=+Y
"RTN","IBOMTE",17,0)
 K DPTNOFZY
"RTN","IBOMTE",18,0)
 S IBGMT=$$ISGMTPT^IBAGMT(DFN,DT) ;GMT Copay Status
"RTN","IBOMTE",19,0)
 I IBGMT>0 W !!,"The patient has Geographic Means Test Copayment Status.",!
"RTN","IBOMTE",20,0)
 ;
"RTN","IBOMTE",21,0)
 S IBADMDT=0 D EVFIND^IBAUTL3
"RTN","IBOMTE",22,0)
 I IBEVDA D  G EDT
"RTN","IBOMTE",23,0)
 . W !!,"Please note that this patient was admitted on ",$$DAT1^IBOUTL(IBEVDT)," and Means Test charges"
"RTN","IBOMTE",24,0)
 . W !,"have been calculated through ",$$DAT1^IBOUTL(IBEVCAL),".",!
"RTN","IBOMTE",25,0)
 . S X1=IBEVCAL,X2=1 D C^%DTC S IBBDT=X
"RTN","IBOMTE",26,0)
 ;
"RTN","IBOMTE",27,0)
 ; Get proposed Admission and Discharge dates.
"RTN","IBOMTE",28,0)
BDT S %DT="AEPX",%DT("A")="Proposed ADMISSION Date: " D ^%DT K %DT G END:Y<0 S IBBDT=Y
"RTN","IBOMTE",29,0)
 I IBBDT<DT W !!,"Past admissions cannot be accurately estimated.",! G BDT
"RTN","IBOMTE",30,0)
EDT S %DT="EX" R !,"Proposed DISCHARGE Date: ",X:DTIME S:X=" " X=IBBDT
"RTN","IBOMTE",31,0)
 G END:(X="")!(X["^") D ^%DT G EDT:Y<0 S IBEDT=Y
"RTN","IBOMTE",32,0)
 I Y<IBBDT W *7," ??",!,"The DISCHARGE Date must follow the ADMISSION Date." G EDT:IBEVDA,BDT
"RTN","IBOMTE",33,0)
 ;
"RTN","IBOMTE",34,0)
 ; Select the anticipated Facility Treating Specialty, if the patient
"RTN","IBOMTE",35,0)
 ; is not currently admitted, and check to see if a 'billable'
"RTN","IBOMTE",36,0)
 ; bedsection is associated with it.
"RTN","IBOMTE",37,0)
 I IBEVDA S VAIP("D")=IBEVCAL+.2359 D IN5^VADPT S Y=+VAIP(8) G BED
"RTN","IBOMTE",38,0)
 ;
"RTN","IBOMTE",39,0)
 S DIC="^DIC(45.7,",DIC(0)="AEQMN",DIC("A")="Anticipated Facility Treating Specialty: "
"RTN","IBOMTE",40,0)
 D ^DIC K DIC G END:Y<1
"RTN","IBOMTE",41,0)
BED S IBBS=$$SECT^IBAUTL5(+Y) I 'IBBS D  G END
"RTN","IBOMTE",42,0)
 . W !!,"A 'billable' bedsection is not associated with this ",$S(IBEVDA:"Admission",1:"Treating Specialty"),"."
"RTN","IBOMTE",43,0)
 . W !,"Means Test charges ",$S(IBEVDA:"are not being",1:"would not be")," billed for this admission.",!
"RTN","IBOMTE",44,0)
 ;
"RTN","IBOMTE",45,0)
 ; Select an output device.
"RTN","IBOMTE",46,0)
 S %ZIS="QM" D ^%ZIS G:POP END
"RTN","IBOMTE",47,0)
 I $D(IO("Q")) S ZTRTN="^IBOMTE1",ZTDESC="MEANS TEST INPATIENT BILLING ESTIMATOR",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") D HOME^%ZIS,END W ! G START
"RTN","IBOMTE",48,0)
 U IO
"RTN","IBOMTE",49,0)
 ;***
"RTN","IBOMTE",50,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTE" D T1^%ZOSV ;stop rt clock
"RTN","IBOMTE",51,0)
 D ^IBOMTE1 ; generate report
"RTN","IBOMTE",52,0)
 D END W ! G START ; re-run report
"RTN","IBOMTE",53,0)
 ;
"RTN","IBOMTE",54,0)
END K %DT,DFN,IBADMDT,IBBS,IBDFN,IBBDT,IBEVDA,IBEVDT,IBEVCAL,IBEDT,IBSERV,IBY,VAIP,VAERR,X,X1,X2,X3,Y,ZTSK,IBRATE,IBGMT
"RTN","IBOMTE",55,0)
 ;***
"RTN","IBOMTE",56,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTE" D T1^%ZOSV ;stop rt clock
"RTN","IBOMTE",57,0)
 Q
"RTN","IBRUTL")
0^9^B7947297
"RTN","IBRUTL",1,0)
IBRUTL ;ALB/CPM-INTEGRATED BILLING - A/R INTERFACE UTILITIES ;03-MAR-92
"RTN","IBRUTL",2,0)
 ;;2.0;INTEGRATED BILLING;**70,82,132,142,176,179,202**;21-MAR-94
"RTN","IBRUTL",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBRUTL",4,0)
 ;
"RTN","IBRUTL",5,0)
IB(IEN,RETN) ; Are there any IB Actions on hold for this bill?
"RTN","IBRUTL",6,0)
 ;         Input:   IEN         -- ien of Bill(#399), A/R(#430)
"RTN","IBRUTL",7,0)
 ;                  RETN (opt)  -- Want array of IB Actions? (1-Yes,0-No)
"RTN","IBRUTL",8,0)
 ;                                 if yes, returns IBA(num)=ibn
"RTN","IBRUTL",9,0)
 ;         Returns: 1 -- Yes, 0 -- No
"RTN","IBRUTL",10,0)
 ;
"RTN","IBRUTL",11,0)
 N ATYPE,BTYPE,BILLS,DFN,IBFR,IB0,IBTO,IBU,IBN,IBND,IBNUM,IBOK
"RTN","IBRUTL",12,0)
 S:'$D(RETN) RETN=0 S BILLS=0
"RTN","IBRUTL",13,0)
 ;
"RTN","IBRUTL",14,0)
 ; - determine patient, bill type and billing dates
"RTN","IBRUTL",15,0)
 S IB0=$G(^DGCR(399,IEN,0)),IBU=$G(^("U")),DFN=+$P(IB0,"^",2)
"RTN","IBRUTL",16,0)
 S BTYPE=$S(+$P(IB0,"^",5)<3:"I",1:"O"),IBFR=+IBU,IBTO=$P(IBU,"^",2)
"RTN","IBRUTL",17,0)
 ;
"RTN","IBRUTL",18,0)
 ; - loop through all bills on hold, and set flag if there is an
"RTN","IBRUTL",19,0)
 ; - IB Action of the same type as the UB-82 which has been billed
"RTN","IBRUTL",20,0)
 ; - within the statement dates of the UB-82.  Store all actions
"RTN","IBRUTL",21,0)
 ; - in the array IBA if required.
"RTN","IBRUTL",22,0)
 S (IBN,IBNUM)=0 F  S IBN=$O(^IB("AH",DFN,IBN)) Q:'IBN  D  I IBOK Q:'RETN  S IBNUM=IBNUM+1,IBA(IBNUM)=IBN
"RTN","IBRUTL",23,0)
 . S IBOK=0,IBND=$G(^IB(IBN,0)) Q:'IBND
"RTN","IBRUTL",24,0)
 . S ATYPE=$S($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")["OPT":"O",1:"I") Q:ATYPE'=BTYPE
"RTN","IBRUTL",25,0)
 . Q:$P(IBND,"^",15)<IBFR!($P(IBND,"^",14)>IBTO)  S (IBOK,BILLS)=1
"RTN","IBRUTL",26,0)
 ;
"RTN","IBRUTL",27,0)
 Q BILLS
"RTN","IBRUTL",28,0)
 ;
"RTN","IBRUTL",29,0)
 ;
"RTN","IBRUTL",30,0)
HOLD(X,IBN,IBDUZ,IBSEQNO) ; Place IB Action on hold?
"RTN","IBRUTL",31,0)
 ;         Input:        X -- Zeroth node of IB Action
"RTN","IBRUTL",32,0)
 ;                     IBN -- ien of IB Action
"RTN","IBRUTL",33,0)
 ;                   IBDUZ -- User ID
"RTN","IBRUTL",34,0)
 ;                 IBSEQNO -- 1 (New Action), 3 (Update Action)
"RTN","IBRUTL",35,0)
 ;         Returns:      1 -- Yes, 0 -- No
"RTN","IBRUTL",36,0)
 ;
"RTN","IBRUTL",37,0)
 N DFN,IBCOV,IBINDT,IBOUTP,HOLD,IBHOLDP,IBDUZ,I
"RTN","IBRUTL",38,0)
 N IBVDT,IBAT,IBCAT,IBALTC
"RTN","IBRUTL",39,0)
 ;
"RTN","IBRUTL",40,0)
 ;
"RTN","IBRUTL",41,0)
 S HOLD=0
"RTN","IBRUTL",42,0)
 ;
"RTN","IBRUTL",43,0)
 S IBHOLDP=$P($G(^IBE(350.9,1,1)),"^",20) ; Site parameter - HOLD MT BILLS W/INSURANCE
"RTN","IBRUTL",44,0)
 S DFN=+$P(X,"^",2)
"RTN","IBRUTL",45,0)
 ;
"RTN","IBRUTL",46,0)
 I $P(X,"^",5)=8 G HOLDQ ; action is already on hold
"RTN","IBRUTL",47,0)
 I '$P($G(^IBE(350.1,+$P(X,"^",3),0)),"^",10) G HOLDQ ; action can't be placed on hold
"RTN","IBRUTL",48,0)
 ;
"RTN","IBRUTL",49,0)
 ; - see if patient has insurance on Charge 'To' Date (otherwise Event date)
"RTN","IBRUTL",50,0)
 ; - includes check of plan coverage limitation
"RTN","IBRUTL",51,0)
 S IBINDT=+$P($G(^IB(+$G(IBN),0)),U,15)
"RTN","IBRUTL",52,0)
 I 'IBINDT S IBINDT=+$P($G(^IB(+$P(X,"^",16),0)),"^",17) I 'IBINDT S IBINDT=DT
"RTN","IBRUTL",53,0)
 S IBOUTP=1
"RTN","IBRUTL",54,0)
 D ^IBCNS
"RTN","IBRUTL",55,0)
 S IBVDT=$S(IBINDT'="":IBINDT,1:DT),IBAT=$P(^IBE(350.1,(+$P(X,U,3)),0),U,11)
"RTN","IBRUTL",56,0)
 S IBCAT=$S(IBAT<4:"INPATIENT",IBAT=4:"OUTPATIENT",IBAT=5:"PHARMACY",IBAT=8:"OUTPATIENT",IBAT=9:"INPATIENT",1:"")
"RTN","IBRUTL",57,0)
 S IBCOV="" I IBCAT'="" S IBCOV=$$PTCOV^IBCNSU3(DFN,IBVDT,IBCAT),HOLD=IBCOV
"RTN","IBRUTL",58,0)
 I 'IBCOV,+$$BUFFER^IBCNBU1(DFN) S (IBCOV,HOLD)=1 ; if patient has a buffer entry place charge on hold
"RTN","IBRUTL",59,0)
 ;
"RTN","IBRUTL",60,0)
 ;
"RTN","IBRUTL",61,0)
 ; - generate bulletin if patient has insurance, bulletin not suppressed
"RTN","IBRUTL",62,0)
 I IBCOV,'$P($G(^IBE(350.9,1,0)),"^",15) D ^IBRBUL
"RTN","IBRUTL",63,0)
 ;
"RTN","IBRUTL",64,0)
 ; - update action to 'Hold' if parameter is set and vet has insurance
"RTN","IBRUTL",65,0)
 I IBHOLDP,IBCOV S DIE="^IB(",DA=IBN,DR=".05////8" D ^DIE,UP3^IBR:IBSEQNO=3 K DA,DIE,DR
"RTN","IBRUTL",66,0)
 ;
"RTN","IBRUTL",67,0)
HOLDQ Q +$G(HOLD)
"VER")
8.0^22
**END**
**END**
