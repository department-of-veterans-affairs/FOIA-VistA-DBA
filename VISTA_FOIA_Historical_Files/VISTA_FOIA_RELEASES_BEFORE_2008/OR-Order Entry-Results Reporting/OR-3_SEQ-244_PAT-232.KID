Released OR*3*232 SEQ #244
Extracted from mail message
**KIDS**:OR*3.0*232^

**INSTALL NAME**
OR*3.0*232
"BLD",5709,0)
OR*3.0*232^ORDER ENTRY/RESULTS REPORTING^0^3070222^y
"BLD",5709,4,0)
^9.64PA^^
"BLD",5709,6)
25^
"BLD",5709,6.3)
19
"BLD",5709,"INIT")
POST^ORY232
"BLD",5709,"KRN",0)
^9.67PA^8989.52^19
"BLD",5709,"KRN",.4,0)
.4
"BLD",5709,"KRN",.401,0)
.401
"BLD",5709,"KRN",.402,0)
.402
"BLD",5709,"KRN",.403,0)
.403
"BLD",5709,"KRN",.5,0)
.5
"BLD",5709,"KRN",.84,0)
.84
"BLD",5709,"KRN",3.6,0)
3.6
"BLD",5709,"KRN",3.8,0)
3.8
"BLD",5709,"KRN",9.2,0)
9.2
"BLD",5709,"KRN",9.8,0)
9.8
"BLD",5709,"KRN",9.8,"NM",0)
^9.68A^10^8
"BLD",5709,"KRN",9.8,"NM",1,0)
ORRDI1^^0^B50225479
"BLD",5709,"KRN",9.8,"NM",2,0)
ORRDI2^^0^B28359828
"BLD",5709,"KRN",9.8,"NM",3,0)
ORMTIM01^^0^B14510801
"BLD",5709,"KRN",9.8,"NM",5,0)
ORY232^^0^B946091
"BLD",5709,"KRN",9.8,"NM",6,0)
ORKPS^^0^B47529958
"BLD",5709,"KRN",9.8,"NM",7,0)
ORKPS1^^0^B19784774
"BLD",5709,"KRN",9.8,"NM",8,0)
ORKCHK^^0^B40236297
"BLD",5709,"KRN",9.8,"NM",10,0)
ORQQAL^^0^B28005368
"BLD",5709,"KRN",9.8,"NM","B","ORKCHK",8)

"BLD",5709,"KRN",9.8,"NM","B","ORKPS",6)

"BLD",5709,"KRN",9.8,"NM","B","ORKPS1",7)

"BLD",5709,"KRN",9.8,"NM","B","ORMTIM01",3)

"BLD",5709,"KRN",9.8,"NM","B","ORQQAL",10)

"BLD",5709,"KRN",9.8,"NM","B","ORRDI1",1)

"BLD",5709,"KRN",9.8,"NM","B","ORRDI2",2)

"BLD",5709,"KRN",9.8,"NM","B","ORY232",5)

"BLD",5709,"KRN",19,0)
19
"BLD",5709,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",5709,"KRN",19,"NM",1,0)
OR RDI PARAMS^^0
"BLD",5709,"KRN",19,"NM",2,0)
OR PARAM IRM MENU^^2
"BLD",5709,"KRN",19,"NM","B","OR PARAM IRM MENU",2)

"BLD",5709,"KRN",19,"NM","B","OR RDI PARAMS",1)

"BLD",5709,"KRN",19.1,0)
19.1
"BLD",5709,"KRN",101,0)
101
"BLD",5709,"KRN",101,"NM",0)
^9.68A^2^2
"BLD",5709,"KRN",101,"NM",1,0)
ORRDI SUBSCRIBER^^0
"BLD",5709,"KRN",101,"NM",2,0)
ORRDI EVENT^^0
"BLD",5709,"KRN",101,"NM","B","ORRDI EVENT",2)

"BLD",5709,"KRN",101,"NM","B","ORRDI SUBSCRIBER",1)

"BLD",5709,"KRN",409.61,0)
409.61
"BLD",5709,"KRN",771,0)
771
"BLD",5709,"KRN",771,"NM",0)
^9.68A^2^2
"BLD",5709,"KRN",771,"NM",1,0)
OR RDI SENDER^^0
"BLD",5709,"KRN",771,"NM",2,0)
OR RDI RECEIVER^^0
"BLD",5709,"KRN",771,"NM","B","OR RDI RECEIVER",2)

"BLD",5709,"KRN",771,"NM","B","OR RDI SENDER",1)

"BLD",5709,"KRN",870,0)
870
"BLD",5709,"KRN",870,"NM",0)
^9.68A^1^1
"BLD",5709,"KRN",870,"NM",1,0)
ORHDR^^0
"BLD",5709,"KRN",870,"NM","B","ORHDR",1)

"BLD",5709,"KRN",8989.51,0)
8989.51
"BLD",5709,"KRN",8989.51,"NM",0)
^9.68A^7^6
"BLD",5709,"KRN",8989.51,"NM",2,0)
OR RDI HAVE HDR^^0
"BLD",5709,"KRN",8989.51,"NM",3,0)
OR RDI CACHE TIME^^0
"BLD",5709,"KRN",8989.51,"NM",4,0)
ORRDI FAIL THRESH^^0
"BLD",5709,"KRN",8989.51,"NM",5,0)
ORRDI SUCCEED THRESH^^0
"BLD",5709,"KRN",8989.51,"NM",6,0)
ORRDI PING FREQ^^0
"BLD",5709,"KRN",8989.51,"NM",7,0)
ORRDI DUMMY ICN^^0
"BLD",5709,"KRN",8989.51,"NM","B","OR RDI CACHE TIME",3)

"BLD",5709,"KRN",8989.51,"NM","B","OR RDI HAVE HDR",2)

"BLD",5709,"KRN",8989.51,"NM","B","ORRDI DUMMY ICN",7)

"BLD",5709,"KRN",8989.51,"NM","B","ORRDI FAIL THRESH",4)

"BLD",5709,"KRN",8989.51,"NM","B","ORRDI PING FREQ",6)

"BLD",5709,"KRN",8989.51,"NM","B","ORRDI SUCCEED THRESH",5)

"BLD",5709,"KRN",8989.52,0)
8989.52
"BLD",5709,"KRN",8994,0)
8994
"BLD",5709,"KRN","B",.4,.4)

"BLD",5709,"KRN","B",.401,.401)

"BLD",5709,"KRN","B",.402,.402)

"BLD",5709,"KRN","B",.403,.403)

"BLD",5709,"KRN","B",.5,.5)

"BLD",5709,"KRN","B",.84,.84)

"BLD",5709,"KRN","B",3.6,3.6)

"BLD",5709,"KRN","B",3.8,3.8)

"BLD",5709,"KRN","B",9.2,9.2)

"BLD",5709,"KRN","B",9.8,9.8)

"BLD",5709,"KRN","B",19,19)

"BLD",5709,"KRN","B",19.1,19.1)

"BLD",5709,"KRN","B",101,101)

"BLD",5709,"KRN","B",409.61,409.61)

"BLD",5709,"KRN","B",771,771)

"BLD",5709,"KRN","B",870,870)

"BLD",5709,"KRN","B",8989.51,8989.51)

"BLD",5709,"KRN","B",8989.52,8989.52)

"BLD",5709,"KRN","B",8994,8994)

"BLD",5709,"QUES",0)
^9.62^^
"BLD",5709,"REQB",0)
^9.611^3^3
"BLD",5709,"REQB",1,0)
OR*3.0*195^2
"BLD",5709,"REQB",2,0)
GMRA*4.0*26^2
"BLD",5709,"REQB",3,0)
HL*1.6*133^2
"BLD",5709,"REQB","B","GMRA*4.0*26",2)

"BLD",5709,"REQB","B","HL*1.6*133",3)

"BLD",5709,"REQB","B","OR*3.0*195",1)

"INIT")
POST^ORY232
"KRN",19,6545,-1)
2^2
"KRN",19,6545,0)
OR PARAM IRM MENU^CPRS Configuration (IRM)^^M^1450^XUPROG^^^^^^
"KRN",19,6545,10,0)
^19.01IP^10^5
"KRN",19,6545,10,6,0)
9845^RD
"KRN",19,6545,10,6,"^")
OR RDI PARAMS
"KRN",19,6545,"U")
CPRS CONFIGURATION (IRM)
"KRN",19,9845,-1)
0^1
"KRN",19,9845,0)
OR RDI PARAMS^Remote Data Order Checking Parameters^^A^^^^^^^^^^1
"KRN",19,9845,1,0)
^19.06^2^2^3050428^^
"KRN",19,9845,1,1,0)
Use this option to modify parameters involved in performing order checks
"KRN",19,9845,1,2,0)
against remote data
"KRN",19,9845,20)
D SET^ORRDI2
"KRN",19,9845,99)
60018,33944
"KRN",19,9845,"U")
REMOTE DATA ORDER CHECKING PAR
"KRN",101,6687,-1)
0^1
"KRN",101,6687,0)
ORRDI SUBSCRIBER^RDI SUBSCRIBER^^S^^^^^^^^
"KRN",101,6687,1,0)
^^1^1^3050804^
"KRN",101,6687,1,1,0)
USED FOR RDI MESSAGING
"KRN",101,6687,99)
60395,40896
"KRN",101,6687,770)
^OR RDI RECEIVER^^R08^^^^^^^TBR
"KRN",101,6687,771)
Q
"KRN",101,6687,773)
0^0
"KRN",101,6687,774)
Q
"KRN",101,6688,-1)
0^2
"KRN",101,6688,0)
ORRDI EVENT^RDI EVENT^^E^^^^^^^^
"KRN",101,6688,1,0)
^^1^1^3050804^
"KRN",101,6688,1,1,0)
USED FOR RDI MESSAGING
"KRN",101,6688,99)
60395,40896
"KRN",101,6688,770)
OR RDI SENDER^^SPQ^Q08^^^^^^2.3.1^
"KRN",101,6688,772)
Q
"KRN",101,6688,775,0)
^101.0775PA^1^1
"KRN",101,6688,775,1,0)
6687
"KRN",101,6688,775,1,"^")
ORRDI SUBSCRIBER
"KRN",771,167,-1)
0^2
"KRN",771,167,0)
OR RDI RECEIVER^a^^^^^USA
"KRN",771,168,-1)
0^1
"KRN",771,168,0)
OR RDI SENDER^a^^^^^USA
"KRN",870,229,-1)
0^1
"KRN",870,229,0)
ORHDR^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,229,200)
^1^245^10^10^^^^^R
"KRN",870,229,400)
^5001^C^^^
"KRN",8989.5,18396,0)
110;DIC(9.4,^ORRDI FAIL THRESH^1
"KRN",8989.5,18396,1)
2
"KRN",8989.5,18397,0)
110;DIC(9.4,^ORRDI PING FREQ^1
"KRN",8989.5,18397,1)
10
"KRN",8989.5,18398,0)
110;DIC(9.4,^ORRDI SUCCEED THRESH^1
"KRN",8989.5,18398,1)
4
"KRN",8989.5,18399,0)
110;DIC(9.4,^ORRDI DUMMY ICN^1
"KRN",8989.5,18399,1)
99
"KRN",8989.51,4768,-1)
0^3
"KRN",8989.51,4768,0)
OR RDI CACHE TIME^RDI CACHE TIME^0^^RDI CACHE TIME^0
"KRN",8989.51,4768,1)
N^0:9999^Length of time RDI should cache HDR data for order checking
"KRN",8989.51,4768,4,0)
^8989.514^1^1
"KRN",8989.51,4768,4,1,0)
RDI
"KRN",8989.51,4768,4,"B","RDI",1)

"KRN",8989.51,4768,6)
N^MINUTES
"KRN",8989.51,4768,20,0)
^^4^4^3060724^
"KRN",8989.51,4768,20,1,0)
This parameter enables sites to determine the amount of time data will be 
"KRN",8989.51,4768,20,2,0)
cached and considered valid for ordering checking before that data would 
"KRN",8989.51,4768,20,3,0)
need to be refreshed. The value is in minutes and can be set from 0 to 
"KRN",8989.51,4768,20,4,0)
9999.
"KRN",8989.51,4768,30,0)
^8989.513I^2^2
"KRN",8989.51,4768,30,1,0)
0^4.2
"KRN",8989.51,4768,30,2,0)
1^4.2
"KRN",8989.51,4769,-1)
0^2
"KRN",8989.51,4769,0)
OR RDI HAVE HDR^RDI HAVE HDR^0^^RDI HAVE HDR^0
"KRN",8989.51,4769,1)
Y^^DOES THIS SYSTEM HAVE AN HDR
"KRN",8989.51,4769,4,0)
^8989.514^1^1
"KRN",8989.51,4769,4,1,0)
RDI
"KRN",8989.51,4769,4,"B","RDI",1)

"KRN",8989.51,4769,6)
Y^
"KRN",8989.51,4769,20,0)
^8989.512^4^4^3070212^^^
"KRN",8989.51,4769,20,1,0)
The value in this parameter shows if a health data repository exists from 
"KRN",8989.51,4769,20,2,0)
which remote data from other VHA facilities and Department of Defense 
"KRN",8989.51,4769,20,3,0)
medical facilities is retrieved.  This parameter supports the
"KRN",8989.51,4769,20,4,0)
VistAOffice application that can work as a stand-alone application.
"KRN",8989.51,4769,30,0)
^8989.513I^1^1
"KRN",8989.51,4769,30,1,0)
0^4.2
"KRN",8989.51,4819,-1)
0^4
"KRN",8989.51,4819,0)
ORRDI FAIL THRESH^Threshold for HDR read failures^^^THRESHOLD FOR HDR READ FAILURES
"KRN",8989.51,4819,1)
N^^Enter the number of failures to set the threshold at
"KRN",8989.51,4819,20,0)
^^5^5^3070108^
"KRN",8989.51,4819,20,1,0)
This parameter is a threshold value that holds the minimum number of HDR 
"KRN",8989.51,4819,20,2,0)
read failures for RDI before RDI will go into a state of "OUTAGE"  What 
"KRN",8989.51,4819,20,3,0)
this means is that when an OUTAGE state is encountered, RDI will no 
"KRN",8989.51,4819,20,4,0)
longer perform real time HDR read attempts but will instead display to 
"KRN",8989.51,4819,20,5,0)
the user the "Local Data Only" message.
"KRN",8989.51,4819,30,0)
^8989.513I^2^2
"KRN",8989.51,4819,30,1,0)
1^4.2
"KRN",8989.51,4819,30,2,0)
2^9.4
"KRN",8989.51,4820,-1)
0^5
"KRN",8989.51,4820,0)
ORRDI SUCCEED THRESH^Threshold for HDR read successes^^^THRESHOLD FOR HDR READ SUCCESSES
"KRN",8989.51,4820,1)
N^^Enter the number of successful reads to set the threshold at
"KRN",8989.51,4820,20,0)
^^4^4^3070108^
"KRN",8989.51,4820,20,1,0)
This parameter is a threshold value that holds the minimum number of 
"KRN",8989.51,4820,20,2,0)
successfull HDR reads for RDI before RDI will come out of the OUTAGE 
"KRN",8989.51,4820,20,3,0)
state.  The successfull reads are peformed in a task that is spawned when 
"KRN",8989.51,4820,20,4,0)
the OUTAGE state is initiated.
"KRN",8989.51,4820,30,0)
^8989.513I^2^2
"KRN",8989.51,4820,30,1,0)
1^4.2
"KRN",8989.51,4820,30,2,0)
2^9.4
"KRN",8989.51,4821,-1)
0^6
"KRN",8989.51,4821,0)
ORRDI PING FREQ^Frequency of HDR ping attempts^^^FREQUENCY OF HDR PING ATTEMPTS
"KRN",8989.51,4821,1)
N^^Enter the number of seconds to wait between HDR ping attempts
"KRN",8989.51,4821,20,0)
^^3^3^3070108^
"KRN",8989.51,4821,20,1,0)
This parameter represents the number of seconds between the initiation of 
"KRN",8989.51,4821,20,2,0)
attempts to ping the HDR for a successful read.  This pinging takes place 
"KRN",8989.51,4821,20,3,0)
when an OUTAGE state is encountered for RDI.
"KRN",8989.51,4821,30,0)
^8989.513I^2^2
"KRN",8989.51,4821,30,1,0)
1^4.2
"KRN",8989.51,4821,30,2,0)
2^9.4
"KRN",8989.51,4822,-1)
0^7
"KRN",8989.51,4822,0)
ORRDI DUMMY ICN^RDI DUMMY ICN^^^RDI DUMMY ICN
"KRN",8989.51,4822,1)
N^^Enter a fake ICN for the RDI ping test
"KRN",8989.51,4822,20,0)
^^2^2^3070108^
"KRN",8989.51,4822,20,1,0)
This parameter represents the fake ICN that will be used to perform the 
"KRN",8989.51,4822,20,2,0)
ping messages to the HDR when an OUTAGE state is encountered within RDI.  
"KRN",8989.51,4822,30,0)
^8989.513I^2^2
"KRN",8989.51,4822,30,1,0)
1^4.2
"KRN",8989.51,4822,30,2,0)
2^9.4
"MBREQ")
0
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",110,-1)
1^1
"PKG",110,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",110,20,0)
^9.402P^^
"PKG",110,22,0)
^9.49I^1^1
"PKG",110,22,1,0)
3.0^2971217
"PKG",110,22,1,"PAH",1,0)
232^3070222^1450
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","ORKCHK")
0^8^B40236297^B32357006
"RTN","ORKCHK",1,0)
ORKCHK ; slc/CLA - Main routine called by OE/RR to initiate order checks ; 1/16/07 6:28am
"RTN","ORKCHK",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,94,105,123,232**;Dec 17, 1997;Build 19
"RTN","ORKCHK",3,0)
EN(ORKY,ORKDFN,ORKA,ORKMODE) ;initiate order checking
"RTN","ORKCHK",4,0)
 ;ORKY: array of returned msgs in format: ornum^orderchk ien^clin danger^msg
"RTN","ORKCHK",5,0)
 ;ORKDFN: patient dfn
"RTN","ORKCHK",6,0)
 ;ORKA: array of order information in the format:
"RTN","ORKCHK",7,0)
 ; orderable item ien|
"RTN","ORKCHK",8,0)
 ; display group-filler app|
"RTN","ORKCHK",9,0)
 ; nat'l id^nat'l text^nat'l code sys^local id^local text^local code sys|
"RTN","ORKCHK",10,0)
 ; effective d/t|
"RTN","ORKCHK",11,0)
 ; order number|
"RTN","ORKCHK",12,0)
 ; filler data (LR: specimen ien, PS: meds prev ordered during this session in format med1^med2^...)
"RTN","ORKCHK",13,0)
 ;ORKMODE: mode/event trigger (DISPLAY,SELECT,ACCEPT,SESSION,ALL,NOTIF)
"RTN","ORKCHK",14,0)
 ; PS: meds previously ordered during this session med1^med2^...
"RTN","ORKCHK",15,0)
 ;
"RTN","ORKCHK",16,0)
 N ORKQ,ORKN S ORKQ=0,ORKN=1
"RTN","ORKCHK",17,0)
 S:+$G(ORKDFN)<1 ORKY(ORKN)="^^^Order Checking Unavailable - invalid patient id",ORKQ=1,ORKN=ORKN+1
"RTN","ORKCHK",18,0)
 S:'$L($G(ORKMODE)) ORKY(ORKN)="^^^Order Checking Unavailable - invalid mode/event",ORKQ=1,ORKN=ORKN+1
"RTN","ORKCHK",19,0)
 Q:$G(ORKQ)=1
"RTN","ORKCHK",20,0)
 Q:+$G(ORKA)<1
"RTN","ORKCHK",21,0)
 N ORKX,ORKS,DNGR,ORENT,ORKENT,ORKNENT,ORNUM,ORKOFF,ORKTMODE
"RTN","ORKCHK",22,0)
 N ORKADUZ,ORKNDUZ,ORKI,ORKPRIM,ORKNMSG,ORKMSG,ORKLOG,ORKLD,ORKLI,ORKOI
"RTN","ORKCHK",23,0)
 N ORKDG,ORKLPS,ORKPSA,ORKCNT,ORKDGI
"RTN","ORKCHK",24,0)
 ;
"RTN","ORKCHK",25,0)
 ;save array of orders for use in session processing:
"RTN","ORKCHK",26,0)
 M ^TMP("ORKA",$J)=ORKA
"RTN","ORKCHK",27,0)
 ;
"RTN","ORKCHK",28,0)
 ;get patient's location flag (INPATIENT ONLY - outpt locations cannot be
"RTN","ORKCHK",29,0)
 ;reliably determined, and many simultaneous outpt locations can occur):
"RTN","ORKCHK",30,0)
 N DFN,ORKLOC
"RTN","ORKCHK",31,0)
 S DFN=ORKDFN,VA200="" D OERR^VADPT
"RTN","ORKCHK",32,0)
 S ORKLOC=+$G(^DIC(42,+VAIN(4),44))
"RTN","ORKCHK",33,0)
 K VA200,VAIN
"RTN","ORKCHK",34,0)
 ;
"RTN","ORKCHK",35,0)
 ;get user's service/section flag:
"RTN","ORKCHK",36,0)
 N ORKSRV
"RTN","ORKCHK",37,0)
 S ORKSRV=$$GET1^DIQ(200,DUZ,29,"I") I +ORKSRV>0 S ORKSRV=$P(ORKSRV,U)
"RTN","ORKCHK",38,0)
 ;
"RTN","ORKCHK",39,0)
 ;log order check debug messages (or not)
"RTN","ORKCHK",40,0)
 S ORKLOG=$$GET^XPAR("DIV^SYS^PKG","ORK DEBUG ENABLE/DISABLE",1,"I")
"RTN","ORKCHK",41,0)
 I $G(ORKLOG)="D" K ^XTMP("ORKLOG") S ^XTMP("ORKLOG",0)=""
"RTN","ORKCHK",42,0)
 I +$P($G(^XTMP("ORKLOG",0)),U,3)>5000 K ^XTMP("ORKLOG")
"RTN","ORKCHK",43,0)
 ;
"RTN","ORKCHK",44,0)
 ;if SESSION mode & pharmacy order occurred in session get unsigned med orders
"RTN","ORKCHK",45,0)
 I ORKMODE="SESSION" D
"RTN","ORKCHK",46,0)
 .S ORKDG=$P(ORKA(1),"|",2)
"RTN","ORKCHK",47,0)
 .I $E($G(ORKDG),1,2)="PS" D
"RTN","ORKCHK",48,0)
 ..S ORKDGI=0,ORKDGI=$O(^ORD(100.98,"B","PHARMACY",ORKDGI))
"RTN","ORKCHK",49,0)
 ..K ^TMP("ORR",$J)
"RTN","ORKCHK",50,0)
 ..D EN^ORQ1(DFN_";DPT(",ORKDGI,11,"","","",0,0)
"RTN","ORKCHK",51,0)
 ..;store unsigned med orders in ^TMP("ORR",$J for processing in ORKPS
"RTN","ORKCHK",52,0)
 ;
"RTN","ORKCHK",53,0)
 ;main processing loop:
"RTN","ORKCHK",54,0)
 S ORKX="" F  S ORKX=$O(ORKA(ORKX)) Q:ORKX=""  D
"RTN","ORKCHK",55,0)
 .S ORKOI=$P(ORKA(ORKX),"|")
"RTN","ORKCHK",56,0)
 .;
"RTN","ORKCHK",57,0)
 .;log debug msgs if parameter is enabled:
"RTN","ORKCHK",58,0)
 .I $G(ORKLOG)="E" D
"RTN","ORKCHK",59,0)
 ..S ORKLD=$$NOW^XLFDT
"RTN","ORKCHK",60,0)
 ..S ORKLI=0
"RTN","ORKCHK",61,0)
 ..I +$P($G(^XTMP("ORKLOG",0)),U,3)<1 S $P(^XTMP("ORKLOG",0),U,3)=0
"RTN","ORKCHK",62,0)
 ..S ORKCNT=$P(^XTMP("ORKLOG",0),U,3)+1
"RTN","ORKCHK",63,0)
 ..S ^XTMP("ORKLOG",0)=$$FMADD^XLFDT(ORKLD,3,"","","")_U_ORKLD_U_ORKCNT
"RTN","ORKCHK",64,0)
 ..S ^XTMP("ORKLOG",ORKLD,ORKDFN,+$G(ORKOI),ORKMODE,DUZ,ORKLI)=ORKA(ORKX)
"RTN","ORKCHK",65,0)
 .;
"RTN","ORKCHK",66,0)
 .S ORKDG=$P(ORKA(ORKX),"|",2),ORKTMODE=""
"RTN","ORKCHK",67,0)
 .S ORKENT="USR^LOC.`"_+$G(ORKLOC)_"^SRV.`"_+$G(ORKSRV)_"^DIV^SYS^PKG"
"RTN","ORKCHK",68,0)
 .Q:'$L($G(ORKDG))
"RTN","ORKCHK",69,0)
 .;
"RTN","ORKCHK",70,0)
 .;if pharmacy order and multiple pharmacy orders in session add data node:
"RTN","ORKCHK",71,0)
 .I $E(ORKDG,1,2)="PS",($L($G(ORKPSA))) D
"RTN","ORKCHK",72,0)
 ..S $P(ORKA(ORKX),"|",6)=ORKPSA
"RTN","ORKCHK",73,0)
 .;
"RTN","ORKCHK",74,0)
 .S ORNUM=$P(ORKA(ORKX),"|",5)
"RTN","ORKCHK",75,0)
 .; get correct DUZ for notification processing if in NOTIF mode:
"RTN","ORKCHK",76,0)
 .I ORKMODE="NOTIF" D
"RTN","ORKCHK",77,0)
 ..S:+$G(ORNUM)>0 ORKNDUZ=$$ORDERER^ORQOR2(ORNUM) ;ordering provider
"RTN","ORKCHK",78,0)
 ..S:+$G(ORNUM)<1 ORKNDUZ=$P($$PRIM^ORQPTQ4(ORKDFN),U) ;prim provider
"RTN","ORKCHK",79,0)
 ..I +$G(ORKNDUZ)>0 D
"RTN","ORKCHK",80,0)
 ...S ORKSRV=$$GET1^DIQ(200,ORKNDUZ,29,"I") I +ORKSRV>0 S ORKSRV=$P(ORKSRV,U)
"RTN","ORKCHK",81,0)
 ...S ORKNENT="USR.`"_+ORKNDUZ_"^LOC.`"_+$G(ORKLOC)_"^SRV.`"_+$G(ORKSRV)_"^DIV^SYS^PKG"
"RTN","ORKCHK",82,0)
 ..S:+$G(ORKNDUZ)<1 ORKNENT="LOC.`"_+$G(ORKLOC)_"^DIV^SYS^PKG"
"RTN","ORKCHK",83,0)
 .S ORENT=$S(ORKMODE="NOTIF":ORKNENT,1:ORKENT)
"RTN","ORKCHK",84,0)
 .;
"RTN","ORKCHK",85,0)
 .;If the order is a delayed release order (NOTIF) process all nodes.
"RTN","ORKCHK",86,0)
 .;If it is a renewal, edit or delayed signature order (ALL) process all
"RTN","ORKCHK",87,0)
 .;modes except SESSION which gets processed just before signature:
"RTN","ORKCHK",88,0)
 .I ORKMODE="NOTIF"!(ORKMODE="ALL") S ORKTMODE=ORKMODE D
"RTN","ORKCHK",89,0)
 ..D EN^ORKCHK3(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)  ;DISPLAY
"RTN","ORKCHK",90,0)
 ..D EN^ORKCHK4(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)  ;SELECT
"RTN","ORKCHK",91,0)
 ..D EN^ORKCHK5(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)  ;ACCEPT
"RTN","ORKCHK",92,0)
 ..I ORKMODE="NOTIF" D EN^ORKCHK6(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)  ;SESSION
"RTN","ORKCHK",93,0)
 ..S ORKMODE=ORKTMODE
"RTN","ORKCHK",94,0)
 .;
"RTN","ORKCHK",95,0)
 .;Process regular orders/modes:
"RTN","ORKCHK",96,0)
 .I '$L($G(ORKTMODE)) D
"RTN","ORKCHK",97,0)
 ..I ORKMODE="DISPLAY" D EN^ORKCHK3(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)
"RTN","ORKCHK",98,0)
 ..I ORKMODE="SELECT" D EN^ORKCHK4(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)
"RTN","ORKCHK",99,0)
 ..I ORKMODE="ACCEPT" D EN^ORKCHK5(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)
"RTN","ORKCHK",100,0)
 ..I ORKMODE="SESSION" D EN^ORKCHK6(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)
"RTN","ORKCHK",101,0)
 ;
"RTN","ORKCHK",102,0)
 ;set messages into sorting array then into ORKY ORKS("ORK",clinical danger level,oi,msg)=ornum^order check ien^clin danger level^message
"RTN","ORKCHK",103,0)
 S ORKX="",ORKI=1
"RTN","ORKCHK",104,0)
 F  S ORKX=$O(ORKS("ORK",ORKX)) Q:ORKX=""  D
"RTN","ORKCHK",105,0)
 .S ORKY(ORKI)=$E(ORKS("ORK",ORKX),1,250)
"RTN","ORKCHK",106,0)
 .;
"RTN","ORKCHK",107,0)
 .;log debug msgs if parameter is enabled:
"RTN","ORKCHK",108,0)
 .I $G(ORKLOG)="E" D
"RTN","ORKCHK",109,0)
 ..S ORKLI=$G(ORKLI)+1
"RTN","ORKCHK",110,0)
 ..S ^XTMP("ORKLOG",$$NOW^XLFDT,ORKDFN,+$G(ORKOI),ORKMODE,DUZ,ORKLI)=ORKY(ORKI)
"RTN","ORKCHK",111,0)
 ..S $P(^XTMP("ORKLOG",0),U,3)=$P($G(^XTMP("ORKLOG",0)),U,3)+1
"RTN","ORKCHK",112,0)
 .;
"RTN","ORKCHK",113,0)
 .;send moderate and high danger order checks for delayed orders as notifications:
"RTN","ORKCHK",114,0)
 .I ORKMODE="NOTIF" S DNGR=$P(ORKY(ORKI),U,3) I $G(DNGR)<3 D
"RTN","ORKCHK",115,0)
 ..S ORKADUZ="",ORNUM=$P(ORKY(ORKI),U)
"RTN","ORKCHK",116,0)
 ..S:+$G(ORKNDUZ)>0 ORKADUZ(ORKNDUZ)=""
"RTN","ORKCHK",117,0)
 ..S ORKNMSG="Order check: "_$P(ORKY(ORKI),U,4)
"RTN","ORKCHK",118,0)
 ..D EN^ORB3(54,ORKDFN,$G(ORNUM),.ORKADUZ,ORKNMSG,"")
"RTN","ORKCHK",119,0)
 .S ORKI=ORKI+1
"RTN","ORKCHK",120,0)
 ;
"RTN","ORKCHK",121,0)
 K ^TMP("ORKA",$J),^TMP("ORR",$J)
"RTN","ORKCHK",122,0)
 I $G(ORKLOG)="E" D
"RTN","ORKCHK",123,0)
 .S ORKLI=$G(ORKLI)+1
"RTN","ORKCHK",124,0)
 .S ^XTMP("ORKLOG",$$NOW^XLFDT,ORKDFN,+$G(ORKOI),ORKMODE,DUZ,ORKLI)="LEAVING ORDER CHECKING"
"RTN","ORKCHK",125,0)
 .S $P(^XTMP("ORKLOG",0),U,3)=$P($G(^XTMP("ORKLOG",0)),U,3)+1
"RTN","ORKCHK",126,0)
 D CHKRMT
"RTN","ORKCHK",127,0)
 Q
"RTN","ORKCHK",128,0)
 ;
"RTN","ORKCHK",129,0)
OI2DD(ORPSA,OROI,ORPSPKG) ;rtn dispense drugs for a PS OI
"RTN","ORKCHK",130,0)
 N PSOI
"RTN","ORKCHK",131,0)
 Q:'$D(^ORD(101.43,OROI,0))
"RTN","ORKCHK",132,0)
 S PSOI=$P($P(^ORD(101.43,OROI,0),U,2),";")
"RTN","ORKCHK",133,0)
 Q:+$G(PSOI)<1
"RTN","ORKCHK",134,0)
 D DRG^PSSUTIL1(.ORPSA,PSOI,ORPSPKG)
"RTN","ORKCHK",135,0)
 Q
"RTN","ORKCHK",136,0)
CHKRMT ;
"RTN","ORKCHK",137,0)
 N I,ORQFLAG
"RTN","ORKCHK",138,0)
 S ORQFLAG=1
"RTN","ORKCHK",139,0)
 S I=0 F  S I=$O(ORKA(I)) Q:'I  I $E($P(ORKA(I),"|",2),1,2)="PS" S ORQFLAG=0
"RTN","ORKCHK",140,0)
 Q:$G(ORQFLAG)
"RTN","ORKCHK",141,0)
 Q:'$$HAVEHDR^ORRDI1
"RTN","ORKCHK",142,0)
 Q:$$LDPTTVAL^ORRDI2($G(DFN))
"RTN","ORKCHK",143,0)
 Q:$P($G(^XTMP("ORRDI","PSOO",ORKDFN,0)),U,3)'<0&($P($G(^XTMP("ORRDI","ART",ORKDFN,0)),U,3)'<0)
"RTN","ORKCHK",144,0)
 I $G(ORKMODE)="ACCEPT" D
"RTN","ORKCHK",145,0)
 . N IFN
"RTN","ORKCHK",146,0)
 . S IFN=$O(ORKY(""),-1)+1
"RTN","ORKCHK",147,0)
 . S ORKY(IFN)="^99^2^Order check performed on local data only"
"RTN","ORKCHK",148,0)
 . K ^TMP($J,"ORRDI") S ^TMP($J,"ORRDI",ORKDFN)=1
"RTN","ORKCHK",149,0)
 I $G(ORKMODE)="SESSION" D
"RTN","ORKCHK",150,0)
 . N I,IFN,ORARR
"RTN","ORKCHK",151,0)
 . S IFN=$O(ORKY(""),-1)
"RTN","ORKCHK",152,0)
 . S I=0 F  S I=$O(ORKY(I)) Q:'I  S ORARR(+ORKY(I))=""
"RTN","ORKCHK",153,0)
 . S I=0 F  S I=$O(ORARR(I)) Q:'I  S IFN=IFN+1,ORKY(IFN)=I_"^99^2^Order check performed on local data only."
"RTN","ORKCHK",154,0)
 . K ^TMP($J,"ORRDI") S ^TMP($J,"ORRDI",ORKDFN)=1
"RTN","ORKCHK",155,0)
 Q
"RTN","ORKPS")
0^6^B47529958^B71672869
"RTN","ORKPS",1,0)
ORKPS ; slc/CLA - Order checking support procedures for medications ;12/15/97 [8/10/05 3:20pm]
"RTN","ORKPS",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,74,94,123,141,190,232**;Dec 17, 1997;Build 19
"RTN","ORKPS",3,0)
 Q
"RTN","ORKPS",4,0)
CHECK(YY,DFN,MED,OI,ORKDG) ; return drug order checks
"RTN","ORKPS",5,0)
 ;YY:    returned array of data
"RTN","ORKPS",6,0)
 ;DFN:   patient id
"RTN","ORKPS",7,0)
 ;MED:   drug ien [file #50]
"RTN","ORKPS",8,0)
 ;OI:    orderable item ien [file #101.43
"RTN","ORKPS",9,0)
 ;ORKDG: display group (should be PSI, PSIV, PSO or PSH)
"RTN","ORKPS",10,0)
 ; returned info: varies for ^TMP($J x-ref - refer to listings below
"RTN","ORKPS",11,0)
 K ^TMP($J,"DI"),^TMP($J,"DD"),^TMP($J,"DC")
"RTN","ORKPS",12,0)
 N ORDFN S ORDFN=DFN
"RTN","ORKPS",13,0)
 D EN^PSOORDRG(DFN,MED)
"RTN","ORKPS",14,0)
 D PROCESS^ORKPS1(OI,ORDFN,ORKDG)
"RTN","ORKPS",15,0)
 K ^TMP($J,"DI"),^TMP($J,"DD"),^TMP($J,"DC")
"RTN","ORKPS",16,0)
 Q
"RTN","ORKPS",17,0)
CHKSESS(YY,DFN,MED,OI,ORKPDATA,ORKDG) ; return drug order checks for session
"RTN","ORKPS",18,0)
 N ORKDGI,ORKDRUG,ORKDRUGA,ORKORN,HOR,SEQ,CNT,CNTX,ORKOI
"RTN","ORKPS",19,0)
 N ORKFLG,ORSESS,ORPSPKG,ORPSA,ORKDD,ORSNUM,ORNUM,DUPX,DUPORN
"RTN","ORKPS",20,0)
 N ORDFN S ORDFN=DFN
"RTN","ORKPS",21,0)
 S ORKFLG=0
"RTN","ORKPS",22,0)
 S ORNUM=$P(ORKA,"|",5)
"RTN","ORKPS",23,0)
 ;
"RTN","ORKPS",24,0)
 ;get other session med orders:
"RTN","ORKPS",25,0)
 I $D(^TMP("ORKA",$J)) D
"RTN","ORKPS",26,0)
 .S CNT=^TMP("ORKA",$J) F CNTX=1:1:CNT D
"RTN","ORKPS",27,0)
 ..S ORSESS=$G(^TMP("ORKA",$J,CNTX))
"RTN","ORKPS",28,0)
 ..Q:'$L(ORSESS)
"RTN","ORKPS",29,0)
 ..S ORPSPKG=$P(ORSESS,"|",2)
"RTN","ORKPS",30,0)
 ..Q:'$L(ORPSPKG)
"RTN","ORKPS",31,0)
 ..Q:$E(ORPSPKG,1,2)'="PS"
"RTN","ORKPS",32,0)
 ..S ORSNUM=$P(ORSESS,"|",5)
"RTN","ORKPS",33,0)
 ..S ORKOI=$P(ORSESS,"|")
"RTN","ORKPS",34,0)
 ..;quit if same order/oi:
"RTN","ORKPS",35,0)
 ..Q:((+$G(ORNUM)=+$G(ORSNUM))&(+$G(OI)=+$G(ORKOI)))
"RTN","ORKPS",36,0)
 ..S:ORPSPKG="PSJ" ORPSPKG="PSI"
"RTN","ORKPS",37,0)
 ..S ORKDRUG=$P($P(ORSESS,"|",3),U,4)
"RTN","ORKPS",38,0)
 ..;
"RTN","ORKPS",39,0)
 ..;if no disp drug selected get disp drug(s) from OI:
"RTN","ORKPS",40,0)
 ..I +$G(ORKDRUG)<1,$L(ORKOI) D
"RTN","ORKPS",41,0)
 ...I "IOH"[$E(ORPSPKG,3) D OI2DD(.ORPSA,ORKOI,$E(ORPSPKG,3)) D
"RTN","ORKPS",42,0)
 ....S ORKDD=0 F  S ORKDD=$O(ORPSA(ORKDD)) Q:'ORKDD  D
"RTN","ORKPS",43,0)
 .....S ORKDRUG=+ORKDD
"RTN","ORKPS",44,0)
 .....S:+$G(ORKDRUG)>0 ORKDRUGA(ORKDRUG_";"_ORPSPKG_";"_ORSNUM)=ORSNUM
"RTN","ORKPS",45,0)
 ...K ORPSA  ;need to clean out between calls to OI2DD
"RTN","ORKPS",46,0)
 ..;
"RTN","ORKPS",47,0)
 ..Q:+$G(ORKDRUG)<1
"RTN","ORKPS",48,0)
 ..;if dispense drug selected add to array:
"RTN","ORKPS",49,0)
 ..S ORKDRUGA(ORKDRUG_";"_ORPSPKG_";"_ORSNUM)=ORSNUM
"RTN","ORKPS",50,0)
 ;
"RTN","ORKPS",51,0)
 ;get unsigned medication orders:
"RTN","ORKPS",52,0)
 S HOR=0,SEQ=0
"RTN","ORKPS",53,0)
 S HOR=$O(^TMP("ORR",$J,HOR)) I +$G(HOR)>0 D
"RTN","ORKPS",54,0)
 .F  S SEQ=$O(^TMP("ORR",$J,HOR,SEQ)) Q:+SEQ<1  D
"RTN","ORKPS",55,0)
 ..S ORKORN=+$P(^TMP("ORR",$J,HOR,SEQ),U),DUPORN=0
"RTN","ORKPS",56,0)
 ..Q:+$G(ORKORN)<1
"RTN","ORKPS",57,0)
 ..Q:+ORKORN=+ORNUM
"RTN","ORKPS",58,0)
 ..Q:$P(^OR(100,+ORKORN,8,$P(^OR(100,+ORKORN,8,0),U,3),0),U,2)="DC"
"RTN","ORKPS",59,0)
 ..Q:$P(^ORD(100.01,$P(^OR(100,+ORKORN,3),U,3),0),U)="DISCONTINUED"
"RTN","ORKPS",60,0)
 ..S ORKDRUG=$$VALUE^ORCSAVE2(+ORKORN,"DRUG") ;get disp drug for order
"RTN","ORKPS",61,0)
 ..;only process vs. unsigned med order if disp drug is assoc w/order:
"RTN","ORKPS",62,0)
 ..Q:+$G(ORKDRUG)<1
"RTN","ORKPS",63,0)
 ..S ORPSPKG=$$DGRX^ORQOR2(+ORKORN)
"RTN","ORKPS",64,0)
 ..S ORPSPKG=$S(ORPSPKG="UNIT DOSE MEDICATIONS":"PSI",ORPSPKG="OUTPATIENT MEDICATIONS":"PSO",ORPSPKG="IV MEDICATIONS":"PSIV",ORPSPKG="NON-VA MEDICATIONS":"PSH",1:"")
"RTN","ORKPS",65,0)
 ..S DUPX="" F  S DUPX=$O(ORKDRUGA(DUPX)) Q:'DUPX!(DUPORN=1)  D
"RTN","ORKPS",66,0)
 ...S:ORKORN=ORKDRUGA(DUPX) DUPORN=1
"RTN","ORKPS",67,0)
 ..Q:DUPORN=1  ;quit if already processed drug order
"RTN","ORKPS",68,0)
 ..S ORKDRUGA(+ORKDRUG_";"_ORPSPKG_";"_ORKORN)=ORKORN
"RTN","ORKPS",69,0)
 ;
"RTN","ORKPS",70,0)
 K ^TMP($J,"DI"),^TMP($J,"DD"),^TMP($J,"DC")
"RTN","ORKPS",71,0)
 I $D(ORKDRUGA) D DRGCHK^PSOORDRG(DFN,MED,.ORKDRUGA)
"RTN","ORKPS",72,0)
 ;I '$D(ORKDRUGA) D EN^PSOORDRG(DFN,MED)
"RTN","ORKPS",73,0)
 D PROCESS^ORKPS1(OI,ORDFN,ORKDG)
"RTN","ORKPS",74,0)
 K ^TMP($J,"DI"),^TMP($J,"DD"),^TMP($J,"DC")
"RTN","ORKPS",75,0)
 Q
"RTN","ORKPS",76,0)
TAKEMED(ORKDFN,ORKMED) ;extrinsic function returns med orderable item if any
"RTN","ORKPS",77,0)
 ;active med patient is taking contains any piece of ORKMED
"RTN","ORKPS",78,0)
 ;ORKDFN   patient DFN
"RTN","ORKPS",79,0)
 ;ORKMED   meds to check vs. active med list in format MED1^MED2^MED3...
"RTN","ORKPS",80,0)
 Q:'$L($G(ORKDFN)) "0^Patient not identified."
"RTN","ORKPS",81,0)
 Q:'$L($G(ORKMED)) "0^Medication not identified."
"RTN","ORKPS",82,0)
 N ORKARX,ORKY,ORI,ORJ,ORCNT,ORKMEDP,ORKRSLT
"RTN","ORKPS",83,0)
 D LIST^ORQQPS(.ORKY,ORKDFN,"","")
"RTN","ORKPS",84,0)
 Q:$P(ORKY(1),U)="" "0^No active meds found."
"RTN","ORKPS",85,0)
 S ORKRSLT="0^No matching meds found."
"RTN","ORKPS",86,0)
 S ORCNT=$L(ORKMED,U)
"RTN","ORKPS",87,0)
 S ORI=0 F  S ORI=$O(ORKY(ORI)) Q:ORI<1  D
"RTN","ORKPS",88,0)
 .S ORKARX=$P(ORKY(ORI),U,2)
"RTN","ORKPS",89,0)
 .F ORJ=1:1:ORCNT S ORKMEDP=$P(ORKMED,U,ORJ) D
"RTN","ORKPS",90,0)
 ..I $L(ORKMEDP),(ORKARX[ORKMEDP) S ORKRSLT="1^"_ORKARX
"RTN","ORKPS",91,0)
 Q ORKRSLT
"RTN","ORKPS",92,0)
SOLUT(OI) ;extrinsic function returns 1 (true) if the orderable item is
"RTN","ORKPS",93,0)
 ; a solution (IV Base)
"RTN","ORKPS",94,0)
 Q:+$G(OI)<1 ""
"RTN","ORKPS",95,0)
 N OITEXT
"RTN","ORKPS",96,0)
 S OITEXT=$G(^ORD(101.43,OI,0))
"RTN","ORKPS",97,0)
 Q:'$L(OITEXT) ""
"RTN","ORKPS",98,0)
 S OITEXT=$P(OITEXT,U)
"RTN","ORKPS",99,0)
 Q:$D(^ORD(101.43,"S.IVB RX",OITEXT)) 1
"RTN","ORKPS",100,0)
 Q ""
"RTN","ORKPS",101,0)
POLYRX(DFN) ;extrins funct rtns 1 if patient exceeds polypharmacy, 0 if not
"RTN","ORKPS",102,0)
 N ORSLT,ORENT,ORLOC,ORPAR,ORMEDS
"RTN","ORKPS",103,0)
 S ORSLT=0
"RTN","ORKPS",104,0)
 Q:'$L(DFN) ORSLT
"RTN","ORKPS",105,0)
 S VA200="" D OERR^VADPT
"RTN","ORKPS",106,0)
 S ORLOC=+$G(^DIC(42,+VAIN(4),44))
"RTN","ORKPS",107,0)
 K VA200,VAIN
"RTN","ORKPS",108,0)
 S ORENT=+$G(ORLOC)_";SC(^DIV^SYS^PKG"
"RTN","ORKPS",109,0)
 S ORPAR=$$GET^XPAR(ORENT,"ORK POLYPHARMACY",1,"I")
"RTN","ORKPS",110,0)
 S ORMEDS=$$NUMRX(DFN)
"RTN","ORKPS",111,0)
 I $G(ORMEDS)>$G(ORPAR) S ORSLT=1
"RTN","ORKPS",112,0)
 Q ORSLT
"RTN","ORKPS",113,0)
GLCREAT(DFN) ;extrinsic function returns patient's (DFN) most recent serum
"RTN","ORKPS",114,0)
 ; creatinine within # of days from parameter ORK GLUCOPHAGE CREATININE
"RTN","ORKPS",115,0)
 ; results format: test id^result units flag ref range collect d/t^result
"RTN","ORKPS",116,0)
 ; used by order check GLUCOPHAGE-LAB RESULTS
"RTN","ORKPS",117,0)
 N ORLOC,ORPAR,ORDAYS
"RTN","ORKPS",118,0)
 N BDT,CDT,ORY,ORX,ORZ,TEST,ORI,ORJ,CREARSLT,LABFILE,SPECFILE,SPECIMEN
"RTN","ORKPS",119,0)
 Q:'$L(DFN) "0^"
"RTN","ORKPS",120,0)
 S ORDAYS=$$GCDAYS(DFN)
"RTN","ORKPS",121,0)
 Q:'$L(ORDAYS) "0^"
"RTN","ORKPS",122,0)
 D NOW^%DTC
"RTN","ORKPS",123,0)
 S BDT=$$FMADD^XLFDT(%,"-"_ORDAYS,"","","")
"RTN","ORKPS",124,0)
 K %
"RTN","ORKPS",125,0)
 Q:'$L($G(BDT)) "0^"
"RTN","ORKPS",126,0)
 S LABFILE=$$TERMLKUP^ORB31(.ORY,"SERUM CREATININE")
"RTN","ORKPS",127,0)
 Q:'$D(ORY) "0^" ;no link between SERUM CREATININE and local lab test
"RTN","ORKPS",128,0)
 Q:$G(LABFILE)'=60 "0^"
"RTN","ORKPS",129,0)
 S SPECFILE=$$TERMLKUP^ORB31(.ORX,"SERUM SPECIMEN")
"RTN","ORKPS",130,0)
 Q:'$D(ORX) "0^" ;no link between SERUM SPECIMEN and local specimen
"RTN","ORKPS",131,0)
 Q:$G(SPECFILE)'=61 "0^"
"RTN","ORKPS",132,0)
 F ORI=1:1:ORY I +$G(CREARSLT)<1 D
"RTN","ORKPS",133,0)
 .S TEST=$P(ORY(ORI),U)
"RTN","ORKPS",134,0)
 .Q:+$G(TEST)<1
"RTN","ORKPS",135,0)
 .F ORJ=1:1:ORX I +$G(CREARSLT)<1 D
"RTN","ORKPS",136,0)
 ..S SPECIMEN=$P(ORX(ORJ),U)
"RTN","ORKPS",137,0)
 ..Q:+$G(SPECIMEN)<1
"RTN","ORKPS",138,0)
 ..S ORZ=$$LOCL^ORQQLR1(DFN,TEST,SPECIMEN)
"RTN","ORKPS",139,0)
 ..Q:'$L($G(ORZ))
"RTN","ORKPS",140,0)
 ..S CDT=$P(ORZ,U,7)
"RTN","ORKPS",141,0)
 ..I CDT'<BDT S CREARSLT=1
"RTN","ORKPS",142,0)
 Q:+$G(CREARSLT)<1 "0^"
"RTN","ORKPS",143,0)
 Q $P(ORZ,U)_U_$P(ORZ,U,3)_" "_$P(ORZ,U,4)_" "_$P(ORZ,U,5)_" ("_$P(ORZ,U,6)_")  "_$$FMTE^XLFDT(CDT,"2P")_U_$P(ORZ,U,3)
"RTN","ORKPS",144,0)
GCDAYS(DFN) ;extrinsic function to return number of days to look for 
"RTN","ORKPS",145,0)
 ; glucophage serum creatinine result
"RTN","ORKPS",146,0)
 Q:'$L(DFN) ""
"RTN","ORKPS",147,0)
 N ORLOC,ORENT,ORDAYS
"RTN","ORKPS",148,0)
 ;get patient's location flag (INPATIENT ONLY - outpt locations cannot be
"RTN","ORKPS",149,0)
 ;reliably determined, and many simultaneous outpt locations can occur):
"RTN","ORKPS",150,0)
 S VA200="" D OERR^VADPT
"RTN","ORKPS",151,0)
 S ORLOC=+$G(^DIC(42,+VAIN(4),44))
"RTN","ORKPS",152,0)
 K VA200,VAIN
"RTN","ORKPS",153,0)
 S ORENT=+$G(ORLOC)_";SC(^DIV^SYS^PKG"
"RTN","ORKPS",154,0)
 S ORDAYS=$$GET^XPAR(ORENT,"ORK GLUCOPHAGE CREATININE",1,"I")
"RTN","ORKPS",155,0)
 Q:$L(ORDAYS) ORDAYS
"RTN","ORKPS",156,0)
 Q ""
"RTN","ORKPS",157,0)
SUPPLY(OI) ;extrinsic function returns 1 (true) if the orderable item is
"RTN","ORKPS",158,0)
 ; a supply
"RTN","ORKPS",159,0)
 Q:+$G(OI)<1 ""
"RTN","ORKPS",160,0)
 N OITEXT
"RTN","ORKPS",161,0)
 S OITEXT=$G(^ORD(101.43,OI,0))
"RTN","ORKPS",162,0)
 Q:'$L(OITEXT) ""
"RTN","ORKPS",163,0)
 S OITEXT=$P(OITEXT,U)
"RTN","ORKPS",164,0)
 Q:$D(^ORD(101.43,"S.SPLY",OITEXT)) 1
"RTN","ORKPS",165,0)
 Q ""
"RTN","ORKPS",166,0)
NUMRX(DFN) ;extrinsic funct returns number of active meds patient is taking
"RTN","ORKPS",167,0)
 N NUMRX,ORPTYPE,ORX,ORY,ORS,ORNUM,ORPRENEW
"RTN","ORKPS",168,0)
 S NUMRX=0
"RTN","ORKPS",169,0)
 Q:+$G(DFN)<1 NUMRX
"RTN","ORKPS",170,0)
 ;
"RTN","ORKPS",171,0)
 ;check to determine if inpatient or outpatient:
"RTN","ORKPS",172,0)
 D ADM^VADPT2
"RTN","ORKPS",173,0)
 S ORPTYPE=$S(+$G(VADMVT)>0:"I",1:"O")
"RTN","ORKPS",174,0)
 ;
"RTN","ORKPS",175,0)
 K ^TMP("PS",$J)
"RTN","ORKPS",176,0)
 D OCL^PSOORRL(DFN,"","")  ;if no date range, returns active meds for pt
"RTN","ORKPS",177,0)
 N X
"RTN","ORKPS",178,0)
 S X=0
"RTN","ORKPS",179,0)
 F  S X=$O(^TMP("PS",$J,X)) Q:X<1  D
"RTN","ORKPS",180,0)
 .S ORX=$G(^TMP("PS",$J,X,0))
"RTN","ORKPS",181,0)
 .S ORY=$P(ORX,U)
"RTN","ORKPS",182,0)
 .S ORNUM=$P(ORX,U,8) ;order entry order number
"RTN","ORKPS",183,0)
 .S ORS=$P(ORX,U,9) ;medication status from pharmacy
"RTN","ORKPS",184,0)
 .S ORPRENEW=$P(ORX,U,14)  ;pending renewal flag (1: pending renewal)
"RTN","ORKPS",185,0)
 .Q:+ORX<1
"RTN","ORKPS",186,0)
 .Q:$P(ORY,";",2)'=ORPTYPE  ;quit if med is not pt type (inpt/outpt)
"RTN","ORKPS",187,0)
 .;quit if status is a non-active type:
"RTN","ORKPS",188,0)
 .Q:$G(ORS)="EXPIRED"
"RTN","ORKPS",189,0)
 .Q:$G(ORS)["DISCONTINUE"
"RTN","ORKPS",190,0)
 .Q:$G(ORS)="DELETED"
"RTN","ORKPS",191,0)
 .Q:+$G(ORPRENEW)>0
"RTN","ORKPS",192,0)
 .Q:$$SUPPLY($$OI^ORQOR2(ORNUM))=1  ;quit if a supply
"RTN","ORKPS",193,0)
 .S NUMRX=NUMRX+1
"RTN","ORKPS",194,0)
 K ^TMP("PS",$J)
"RTN","ORKPS",195,0)
 Q NUMRX
"RTN","ORKPS",196,0)
OI2DD(ORPSA,OROI,ORPSPKG)       ;rtn dispense drugs for a PS OI
"RTN","ORKPS",197,0)
 N PSOI
"RTN","ORKPS",198,0)
 Q:'$D(^ORD(101.43,OROI,0))
"RTN","ORKPS",199,0)
 S PSOI=$P($P(^ORD(101.43,OROI,0),U,2),";")
"RTN","ORKPS",200,0)
 Q:+$G(PSOI)<1
"RTN","ORKPS",201,0)
 S:ORPSPKG="H" ORPSPKG="X"  ;if non-va med need to pass api "X"
"RTN","ORKPS",202,0)
 D DRG^PSSUTIL1(.ORPSA,PSOI,ORPSPKG)
"RTN","ORKPS",203,0)
 Q
"RTN","ORKPS1")
0^7^B19784774^n/a
"RTN","ORKPS1",1,0)
ORKPS1 ; slc/CLA - Order checking support procedures for medications ;12/15/97 [8/2/05 7:46am]
"RTN","ORKPS1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**232**;Dec 17, 1997;Build 19
"RTN","ORKPS1",3,0)
 Q
"RTN","ORKPS1",4,0)
PROCESS(OI,DFN,ORKDG) ;process data from pharmacy order check API
"RTN","ORKPS1",5,0)
 Q:'$D(^TMP($J))
"RTN","ORKPS1",6,0)
 N II,XX,ZZ,ZZD,ORTYPE,ORMTYPE,ORN,ORZ,RCNT
"RTN","ORKPS1",7,0)
 S II=1,XX=0,ZZ="",ZZD="",RCNT=0
"RTN","ORKPS1",8,0)
 ;
"RTN","ORKPS1",9,0)
 ;check to determine if inpatient or outpatient:
"RTN","ORKPS1",10,0)
 I $L(ORKDG) S ORTYPE=$S($G(ORKDG)="PSI":"I",$G(ORKDG)="PSO":"O",$G(ORKDG)="PSIV":"I",$G(ORKDG)="PSH":"O",1:"")
"RTN","ORKPS1",11,0)
 I '$L(ORTYPE) D  ;if no display group
"RTN","ORKPS1",12,0)
 .D ADM^VADPT2
"RTN","ORKPS1",13,0)
 .S ORTYPE=$S(+$G(VADMVT)>0:"I",1:"O")
"RTN","ORKPS1",14,0)
 .K VADMVT
"RTN","ORKPS1",15,0)
 ;
"RTN","ORKPS1",16,0)
 ; drug-drug interactions:
"RTN","ORKPS1",17,0)
 F  S XX=$O(^TMP($J,"DI",XX)) Q:XX<1  D
"RTN","ORKPS1",18,0)
 .S ZZ=$G(^TMP($J,"DI",XX,0))
"RTN","ORKPS1",19,0)
 .S ORN=$P($P(ZZ,U,7),";"),ORZ=""
"RTN","ORKPS1",20,0)
 .I '$G(ORN),$L($G(^TMP($J,"DI",XX,1))) D  Q
"RTN","ORKPS1",21,0)
 ..N ORTXT,ORLEN,ORFAC,END
"RTN","ORKPS1",22,0)
 ..S RCNT=RCNT+1
"RTN","ORKPS1",23,0)
 ..S $P(ZZ,U,7)="R"_RCNT
"RTN","ORKPS1",24,0)
 ..S ORFAC=$P(ZZ,U,9)
"RTN","ORKPS1",25,0)
 ..S ORTXT=$P(^TMP($J,"DI",XX,1),U)_" "
"RTN","ORKPS1",26,0)
 ..I $L(ORTXT)<242 S ORLEN=242-$L(ORTXT),ORTXT=ORTXT_$E(^TMP($J,"DI",XX,1,0),1,ORLEN)
"RTN","ORKPS1",27,0)
 ..S OREND="["_$P(^TMP($J,"DI",XX,1),U,2)_" -   Last Fill: "_$P(^TMP($J,"DI",XX,1),U,3)_"   Quantity Dispensed: "_$P(^TMP($J,"DI",XX,1),U,5)_"] >> "_ORFAC
"RTN","ORKPS1",28,0)
 ..N ORMAX S ORMAX=250-$L(OREND)-50-$L($P(ZZ,U,4))-$L($P(ZZ,U,5))-$L($P(ZZ,U,6))-$L($P(ZZ,U,7))
"RTN","ORKPS1",29,0)
 ..I ORTXT'=$E(ORTXT,1,ORMAX) S OREND="..."_OREND
"RTN","ORKPS1",30,0)
 ..S ORTXT=$E(ORTXT,1,ORMAX)_OREND
"RTN","ORKPS1",31,0)
 ..S $P(ZZ,U,2)=ORTXT
"RTN","ORKPS1",32,0)
 ..S YY(II)="DI^"_ZZ,II=II+1
"RTN","ORKPS1",33,0)
 .I $L(ORN),$D(^OR(100,ORN,8,0)) S ORZ=^OR(100,ORN,8,0)
"RTN","ORKPS1",34,0)
 .I $L($G(ORZ)),($P(^OR(100,ORN,8,$P(ORZ,U,3),0),U,2)="DC") Q
"RTN","ORKPS1",35,0)
 .I $L(ORN),$P(^ORD(100.01,$P(^OR(100,ORN,3),U,3),0),U)="DISCONTINUED" Q
"RTN","ORKPS1",36,0)
 .I ZZ'="" S YY(II)="DI^"_ZZ,II=II+1
"RTN","ORKPS1",37,0)
 ;
"RTN","ORKPS1",38,0)
 ; duplicate drugs:
"RTN","ORKPS1",39,0)
 Q:$$SOLUT^ORKPS(OI)  ;quit if the orderable item is a solution
"RTN","ORKPS1",40,0)
 ;require that we do not perform dup drug/class OCs for solutions)
"RTN","ORKPS1",41,0)
 S XX=0,ZZ=""
"RTN","ORKPS1",42,0)
 F  S XX=$O(^TMP($J,"DD",XX)) Q:XX<1  D
"RTN","ORKPS1",43,0)
 .S ZZ=$G(^TMP($J,"DD",XX,0)),ORMTYPE=$P($P(ZZ,U,4),";",2)
"RTN","ORKPS1",44,0)
 .I $G(ORTYPE)'=$G(ORMTYPE),'$L($G(^TMP($J,"DD",XX,1))) Q
"RTN","ORKPS1",45,0)
 .S ORN=$P($P(ZZ,U,3),";"),ORZ=""
"RTN","ORKPS1",46,0)
 .I '$G(ORN),$L($G(^TMP($J,"DD",XX,1))) D  Q
"RTN","ORKPS1",47,0)
 ..Q:$$SUPPLY^ORKPS(OI)  ;quit if the orderable item is a supply and it is against remote data
"RTN","ORKPS1",48,0)
 ..N ORTXT,ORLEN,ORFAC,OREND
"RTN","ORKPS1",49,0)
 ..S RCNT=RCNT+1
"RTN","ORKPS1",50,0)
 ..S $P(ZZ,U,3)="R"_RCNT
"RTN","ORKPS1",51,0)
 ..S ORFAC=$P(ZZ,U,5)
"RTN","ORKPS1",52,0)
 ..S ORTXT=$P(^TMP($J,"DD",XX,1),U)_" "
"RTN","ORKPS1",53,0)
 ..I $L(ORTXT)<242 S ORLEN=242-$L(ORTXT),ORTXT=ORTXT_$E(^TMP($J,"DD",XX,1,0),1,ORLEN)
"RTN","ORKPS1",54,0)
 ..S OREND="["_$P(^TMP($J,"DD",XX,1),U,2)_" -   Last Fill: "_$P(^TMP($J,"DD",XX,1),U,3)_"   Quantity Dispensed: "_$P(^TMP($J,"DD",XX,1),U,5)_"] >> "_ORFAC
"RTN","ORKPS1",55,0)
 ..N ORMAX S ORMAX=250-$L(OREND)-40-$L($P(ZZ,U,4))
"RTN","ORKPS1",56,0)
 ..I ORTXT'=$E(ORTXT,1,ORMAX) S OREND="..."_OREND
"RTN","ORKPS1",57,0)
 ..S ORTXT=$E(ORTXT,1,ORMAX)_OREND
"RTN","ORKPS1",58,0)
 ..S $P(ZZ,U,2)=ORTXT
"RTN","ORKPS1",59,0)
 ..S YY(II)="DD^"_ZZ,II=II+1
"RTN","ORKPS1",60,0)
 .Q:+$G(ORN)=+$G(ORIFN)  ;QUIT if dup med ord # = current ord #
"RTN","ORKPS1",61,0)
 .I $L(ORN),$D(^OR(100,ORN,8,0)) S ORZ=^OR(100,ORN,8,0)
"RTN","ORKPS1",62,0)
 .I $L($G(ORZ)),($P(^OR(100,ORN,8,$P(ORZ,U,3),0),U,2)="DC") Q
"RTN","ORKPS1",63,0)
 .I $L(ORN),$P(^ORD(100.01,$P(^OR(100,ORN,3),U,3),0),U)="DISCONTINUED" Q
"RTN","ORKPS1",64,0)
 .I ZZ'="" S YY(II)="DD^"_ZZ,II=II+1
"RTN","ORKPS1",65,0)
 ;
"RTN","ORKPS1",66,0)
 ; duplicate classes:
"RTN","ORKPS1",67,0)
 Q:$$SUPPLY^ORKPS(OI)  ;quit if the orderable item is a supply
"RTN","ORKPS1",68,0)
 S XX=0,ZZ=""
"RTN","ORKPS1",69,0)
 F  S XX=$O(^TMP($J,"DC",XX)) Q:XX<1  D
"RTN","ORKPS1",70,0)
 .S ZZ=$G(^TMP($J,"DC",XX,0)),ORMTYPE=$P($P(ZZ,U,6),";",2)
"RTN","ORKPS1",71,0)
 .I $G(ORTYPE)'=$G(ORMTYPE),'$L($G(^TMP($J,"DC",XX,1))) Q
"RTN","ORKPS1",72,0)
 .S ORN=$P($P(ZZ,U,5),";"),ORZ=""
"RTN","ORKPS1",73,0)
 .I '$G(ORN),$L($G(^TMP($J,"DC",XX,1))) D  Q
"RTN","ORKPS1",74,0)
 ..N ORTXT,ORLEN,ORFAC,OREND
"RTN","ORKPS1",75,0)
 ..S RCNT=RCNT+1
"RTN","ORKPS1",76,0)
 ..S $P(ZZ,U,5)="R"_RCNT
"RTN","ORKPS1",77,0)
 ..S ORFAC=$P(ZZ,U,7)
"RTN","ORKPS1",78,0)
 ..S ORTXT=$P(^TMP($J,"DC",XX,1),U)_" "
"RTN","ORKPS1",79,0)
 ..I $L(ORTXT)<242 S ORLEN=242-$L(ORTXT),ORTXT=ORTXT_$E(^TMP($J,"DC",XX,1,0),1,ORLEN)
"RTN","ORKPS1",80,0)
 ..S OREND="["_$P(^TMP($J,"DC",XX,1),U,2)_" -   Last Fill: "_$P(^TMP($J,"DC",XX,1),U,3)_"   Quantity Dispensed: "_$P(^TMP($J,"DC",XX,1),U,5)_"] >> "_ORFAC
"RTN","ORKPS1",81,0)
 ..N ORMAX S ORMAX=250-$L(OREND)-50-$L($P(ZZ,U,2))-$L($P(ZZ,U,5))
"RTN","ORKPS1",82,0)
 ..I ORTXT'=$E(ORTXT,1,ORMAX) S OREND="..."_OREND
"RTN","ORKPS1",83,0)
 ..S ORTXT=$E(ORTXT,1,ORMAX)_OREND
"RTN","ORKPS1",84,0)
 ..S $P(ZZ,U,4)=ORTXT
"RTN","ORKPS1",85,0)
 ..S YY(II)="DC^"_ZZ,II=II+1
"RTN","ORKPS1",86,0)
 .Q:+$G(ORN)=+$G(ORIFN)  ;QUIT if dup class ord # = current ord #
"RTN","ORKPS1",87,0)
 .I $L(ORN),$D(^OR(100,ORN,8,0)) S ORZ=^OR(100,ORN,8,0)
"RTN","ORKPS1",88,0)
 .I $L($G(ORZ)),($P(^OR(100,ORN,8,$P(ORZ,U,3),0),U,2)="DC") Q
"RTN","ORKPS1",89,0)
 .I $L(ORN),$P(^ORD(100.01,$P(^OR(100,ORN,3),U,3),0),U)="DISCONTINUED" Q
"RTN","ORKPS1",90,0)
 .I ZZ'="" S YY(II)="DC^"_ZZ,II=II+1
"RTN","ORKPS1",91,0)
 Q
"RTN","ORMTIM01")
0^3^B14510801^B14361893
"RTN","ORMTIM01",1,0)
ORMTIM01 ; SLC-ISC/RJS - PROCESS TIME BASED EVENT ;2/01/00  10:30 [8/3/05 7:19am]
"RTN","ORMTIM01",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**31,40,190,232**;Dec 17, 1997;Build 19
"RTN","ORMTIM01",3,0)
 ;
"RTN","ORMTIM01",4,0)
SCAN ;
"RTN","ORMTIM01",5,0)
 S OCXORMTR="ORMTIME: scan"
"RTN","ORMTIM01",6,0)
 N OCXNOW,OCXDATE,OCXTMT,OCXORD S OCXNOW=$$IDATE("NOW"),OCXTMT=$$IDATE("N+1H")
"RTN","ORMTIM01",7,0)
 ;
"RTN","ORMTIM01",8,0)
 ;  Expire orders
"RTN","ORMTIM01",9,0)
 ;
"RTN","ORMTIM01",10,0)
 S OCXORMTR="ORMTIME: scan expiring orders"
"RTN","ORMTIM01",11,0)
 S OCXDATE=0 F  S OCXDATE=$O(^OR(100,"AE",OCXDATE)) Q:'OCXDATE  I '((+OCXDATE)>OCXNOW) D
"RTN","ORMTIM01",12,0)
 .S OCXORD=0 F  S OCXORD=$O(^OR(100,"AE",OCXDATE,OCXORD)) Q:'OCXORD  D
"RTN","ORMTIM01",13,0)
 ..D EXP^OCXOTIME(OCXDATE,OCXORD)
"RTN","ORMTIM01",14,0)
 ..I $G(^OR(100,"AE",OCXDATE,OCXORD)),(^OR(100,"AE",OCXDATE,OCXORD)>OCXNOW) Q
"RTN","ORMTIM01",15,0)
 ..S ^OR(100,"AE",OCXDATE,OCXORD)=OCXTMT
"RTN","ORMTIM01",16,0)
 ..N OCXORMTR S OCXORMTR=" Executing: D EXP^ORMEVNT("_OCXORD_","_OCXDATE_")"
"RTN","ORMTIM01",17,0)
 ..D EXP^ORB3F1(OCXDATE,OCXORD)
"RTN","ORMTIM01",18,0)
 ..D EXP^ORMEVNT(OCXORD,OCXDATE)
"RTN","ORMTIM01",19,0)
 ..S:$D(^OR(100,"AE",OCXDATE,OCXORD)) ^OR(100,"AE",OCXDATE,OCXORD)=""
"RTN","ORMTIM01",20,0)
 D DELEXP^ORB3F1  ;delete old expired orders from ^XTMP("ORAE"
"RTN","ORMTIM01",21,0)
 ;
"RTN","ORMTIM01",22,0)
 ;  Activate orders
"RTN","ORMTIM01",23,0)
 ;
"RTN","ORMTIM01",24,0)
 S OCXORMTR="ORMTIME: scan activating orders"
"RTN","ORMTIM01",25,0)
 S OCXDATE=0 F  S OCXDATE=$O(^OR(100,"AD",OCXDATE)) Q:'OCXDATE  I '((+OCXDATE)>OCXNOW) D
"RTN","ORMTIM01",26,0)
 .S OCXORD=0 F  S OCXORD=$O(^OR(100,"AD",OCXDATE,OCXORD)) Q:'OCXORD  D
"RTN","ORMTIM01",27,0)
 ..D ACT^OCXOTIME(OCXDATE,OCXORD)
"RTN","ORMTIM01",28,0)
 ..I $G(^OR(100,"AD",OCXDATE,OCXORD)),(^OR(100,"AD",OCXDATE,OCXORD)>OCXNOW) Q
"RTN","ORMTIM01",29,0)
 ..S ^OR(100,"AD",OCXDATE,OCXORD)=OCXTMT
"RTN","ORMTIM01",30,0)
 ..N OCXORMTR S OCXORMTR=" Executing: D ACTIVE^ORMEVNT("_OCXORD_","_OCXDATE_")"
"RTN","ORMTIM01",31,0)
 ..D ACTIVE^ORMEVNT(OCXORD,OCXDATE)
"RTN","ORMTIM01",32,0)
 ..S:$D(^OR(100,"AD",OCXDATE,OCXORD)) ^OR(100,"AD",OCXDATE,OCXORD)=""
"RTN","ORMTIM01",33,0)
 ;
"RTN","ORMTIM01",34,0)
 ; Trigger Task/Time-driven Notifications
"RTN","ORMTIM01",35,0)
 ;
"RTN","ORMTIM01",36,0)
 S OCXORMTR=" Executing: D TNOTIFS^ORB3TIM1"
"RTN","ORMTIM01",37,0)
 D TNOTIFS^ORB3TIM1
"RTN","ORMTIM01",38,0)
 ;
"RTN","ORMTIM01",39,0)
 ;   Run Order Check Purges
"RTN","ORMTIM01",40,0)
 ;
"RTN","ORMTIM01",41,0)
 I $L($T(^OCXOPURG)) D
"RTN","ORMTIM01",42,0)
 .S OCXORMTR="ORMTIME: Run purge for order checking"
"RTN","ORMTIM01",43,0)
 .D EN^OCXOPURG
"RTN","ORMTIM01",44,0)
 ;
"RTN","ORMTIM01",45,0)
 ;   ^ORYX("ORERR" CPRS Errors Purge
"RTN","ORMTIM01",46,0)
 ;
"RTN","ORMTIM01",47,0)
 I $O(^ORYX("ORERR",0)) D
"RTN","ORMTIM01",48,0)
 .N %DT,ORD0,ORDATE,ORKILL,ORLIMIT,ORNODE,X,Y
"RTN","ORMTIM01",49,0)
 .;
"RTN","ORMTIM01",50,0)
 .S ORLIMIT=$$GET^XPAR("ALL","ORPF ERROR DAYS") S:(ORLIMIT<1) ORLIMIT=2
"RTN","ORMTIM01",51,0)
 .S X="TODAY-"_ORLIMIT,%DT="" D ^%DT S ORLIMIT=Y
"RTN","ORMTIM01",52,0)
 .;
"RTN","ORMTIM01",53,0)
 .I '$O(^ORYX("ORERR","B",0)) S ORD0=0 F  S ORD0=$O(^ORYX("ORERR",ORD0)) Q:'ORD0  D
"RTN","ORMTIM01",54,0)
 ..S ^ORYX("ORERR","B",+$G(^ORYX("ORERR",ORD0,0)),ORD0)=""
"RTN","ORMTIM01",55,0)
 .;
"RTN","ORMTIM01",56,0)
 .S ORDATE="" F  S ORDATE=$O(^ORYX("ORERR","B",ORDATE)) Q:'$L(ORDATE)  D
"RTN","ORMTIM01",57,0)
 ..S ORD0=0 F  S ORD0=$O(^ORYX("ORERR","B",ORDATE,ORD0)) Q:'ORD0  D
"RTN","ORMTIM01",58,0)
 ...S ORNODE=$G(^ORYX("ORERR",ORD0,0))
"RTN","ORMTIM01",59,0)
 ...I (+ORNODE<ORLIMIT) K ^ORYX("ORERR",ORD0) S ORKILL=1
"RTN","ORMTIM01",60,0)
 ..I (ORDATE<ORLIMIT) K ^ORYX("ORERR","B",ORDATE) S ORKILL=1
"RTN","ORMTIM01",61,0)
 .;
"RTN","ORMTIM01",62,0)
 .S ORLIMIT=10000 ; **NOTE**  This limit is on the number of entries in the CPRS error log
"RTN","ORMTIM01",63,0)
 .;
"RTN","ORMTIM01",64,0)
 .I $G(ORKILL)!($P(^ORYX("ORERR",0),U,4)>ORLIMIT) D
"RTN","ORMTIM01",65,0)
 ..N ORD0,ORD1,ORPREV,ORCNT
"RTN","ORMTIM01",66,0)
 ..S ORD0=0 F ORCNT=0:1 S ORPREV=ORD0,ORD0=$O(^ORYX("ORERR",ORD0)) Q:'ORD0
"RTN","ORMTIM01",67,0)
 ..S $P(^ORYX("ORERR",0),U,3,4)=ORPREV_U_ORCNT
"RTN","ORMTIM01",68,0)
 ..;
"RTN","ORMTIM01",69,0)
 ..S ORD0=0 F ORD1=ORLIMIT:1:ORCNT S ORPREV=ORD0,ORD0=$O(^ORYX("ORERR",ORD0)) Q:'ORD0  D
"RTN","ORMTIM01",70,0)
 ...S ORNODE=$G(^ORYX("ORERR",ORD0,0))
"RTN","ORMTIM01",71,0)
 ...K ^ORYX("ORERR",ORD0),^ORYX("ORERR","B",+ORNODE)
"RTN","ORMTIM01",72,0)
 ..S $P(^ORYX("ORERR",0),U,3,4)=ORPREV_U_ORLIMIT
"RTN","ORMTIM01",73,0)
 ;
"RTN","ORMTIM01",74,0)
 ;  Time Based Events for Order Checking
"RTN","ORMTIM01",75,0)
 ;
"RTN","ORMTIM01",76,0)
 I $L($T(^OCXOTIME)) D
"RTN","ORMTIM01",77,0)
 .S OCXORMTR="ORMTIME: scan time based events for order checking"
"RTN","ORMTIM01",78,0)
 .D EN^OCXOTIME
"RTN","ORMTIM01",79,0)
 ;
"RTN","ORMTIM01",80,0)
 S OCXORMTR="Finish Job #: "_$J_"  at: "_$$EDATE($$IDATE("N"))
"RTN","ORMTIM01",81,0)
 ;
"RTN","ORMTIM01",82,0)
 ;  Clean up cache of Remote Order Checking Data
"RTN","ORMTIM01",83,0)
 ;
"RTN","ORMTIM01",84,0)
 D CLEANUP^ORRDI2
"RTN","ORMTIM01",85,0)
 ;
"RTN","ORMTIM01",86,0)
 Q
"RTN","ORMTIM01",87,0)
 ;
"RTN","ORMTIM01",88,0)
EDATE(Y) X ^DD("DD") S:(Y["@") Y=$P(Y,"@",1)_" at "_$P(Y,"@",2) Q Y
"RTN","ORMTIM01",89,0)
 ;
"RTN","ORMTIM01",90,0)
IDATE(X) N %DT,Y S %DT="TF" D ^%DT Q Y
"RTN","ORMTIM01",91,0)
 ;
"RTN","ORMTIM01",92,0)
TIME(X) N M,H S M=$E(100+(X#60),2,3),H=$E(100+(X\60),2,3) Q H_M
"RTN","ORMTIM01",93,0)
 ;
"RTN","ORQQAL")
0^10^B28005368^B26581467
"RTN","ORQQAL",1,0)
ORQQAL ; slc/CLA,JFR - Functions which return patient allergy data ;6/8/06  14:11
"RTN","ORQQAL",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**9,85,162,190,216,232**;Dec 17, 1997;Build 19
"RTN","ORQQAL",3,0)
LIST(ORAY,ORPT) ; RETURN PATIENT'S ALLERGY/ADVERSE REACTION INFO:
"RTN","ORQQAL",4,0)
 ; null:no allergy assessment, 0:no known allergies, 1:pt has allergies
"RTN","ORQQAL",5,0)
 ; if 1 also get: allergen/reactant^reaction/symptom^severity^allergy ien
"RTN","ORQQAL",6,0)
 N I,J,K
"RTN","ORQQAL",7,0)
 S I=1,J=0,K=0
"RTN","ORQQAL",8,0)
 D EN1^GMRAOR1(ORPT,"GMRARXN")
"RTN","ORQQAL",9,0)
 I $G(GMRARXN)="" S ORAY(I)="^No Allergy Assessment"
"RTN","ORQQAL",10,0)
 I $G(GMRARXN)=0 S ORAY(I)="^No Known Allergies"
"RTN","ORQQAL",11,0)
 I $G(GMRARXN)=1 F  S J=$O(GMRARXN(J)) Q:J=""  S ORAY(I)=$P(GMRARXN(J),"^",3)_"^"_$P(GMRARXN(J),"^")_"^"_$P(GMRARXN(J),"^",2) D SIGNS S I=I+1
"RTN","ORQQAL",12,0)
 S:'$D(ORAY(1)) ORAY(1)="^No allergies found."
"RTN","ORQQAL",13,0)
 K GMRARXN
"RTN","ORQQAL",14,0)
 Q
"RTN","ORQQAL",15,0)
SIGNS S K=0,N=0 F  S K=$O(GMRARXN(J,"S",K)) Q:K'>0  D
"RTN","ORQQAL",16,0)
 .I N=0 S ORAY(I)=ORAY(I)_"^"_$P(GMRARXN(J,"S",K),";")
"RTN","ORQQAL",17,0)
 .E  S ORAY(I)=ORAY(I)_";"_$P(GMRARXN(J,"S",K),";")
"RTN","ORQQAL",18,0)
 .S N=N+1
"RTN","ORQQAL",19,0)
 Q
"RTN","ORQQAL",20,0)
LRPT(ORAY,ORPT) ; RETURN PT'S ALLERGY/ADVERSE REACTION INFO IN REPORT FORMAT:
"RTN","ORQQAL",21,0)
 ; null:no allergy assessment, 0:no known allergies, 1:pt has allergies
"RTN","ORQQAL",22,0)
 ; if 1 also get: allergen/reactant^reaction/symptom^severity^allergy ien
"RTN","ORQQAL",23,0)
 N I,J,K,SEVER,CR,GMRAIDT ;216
"RTN","ORQQAL",24,0)
 S CR=$CHAR(13)
"RTN","ORQQAL",25,0)
 S I=1,J=0,K=0,SEVER="",GMRAIDT=1 ;216
"RTN","ORQQAL",26,0)
 D EN1^GMRAOR1(ORPT,"GMRARXN")
"RTN","ORQQAL",27,0)
 I $G(GMRARXN)="" S ORAY(I)="No Allergy Assessment"
"RTN","ORQQAL",28,0)
 I $G(GMRARXN)=0 S ORAY(I)="No Known Allergies"
"RTN","ORQQAL",29,0)
 I $G(GMRARXN)=1 F  S J=$O(GMRARXN(J)) Q:J=""  D
"RTN","ORQQAL",30,0)
 .S SEVER=$P(GMRARXN(J),U,2)
"RTN","ORQQAL",31,0)
 .S ORAY(I)=$P(GMRARXN(J),U)_"     "_$S($L($G(SEVER)):"[Severity: "_SEVER_"]",1:""),I=I+1
"RTN","ORQQAL",32,0)
 .S K=0,N=0 F  S K=$O(GMRARXN(J,"S",K)) Q:K'>0  D
"RTN","ORQQAL",33,0)
 ..I N=0 S ORAY(I)="    Signs/symptoms: "_$P(GMRARXN(J,"S",K),";")
"RTN","ORQQAL",34,0)
 ..E     S ORAY(I)="                    "_$P(GMRARXN(J,"S",K),";")
"RTN","ORQQAL",35,0)
 ..I $P(GMRARXN(J,"S",K),";",2) S ORAY(I)=ORAY(I)_" ("_$$FMTE^XLFDT($P(GMRARXN(J,"S",K),";",2),2)_")" ;216
"RTN","ORQQAL",36,0)
 ..S N=N+1,I=I+1
"RTN","ORQQAL",37,0)
 .S ORAY(I)=" ",I=I+1
"RTN","ORQQAL",38,0)
 S:'$D(ORAY(1)) ORAY(1)="No allergies found."
"RTN","ORQQAL",39,0)
 K GMRARXN
"RTN","ORQQAL",40,0)
 Q
"RTN","ORQQAL",41,0)
RXN(ORAY,ORPT,SRC,NDF,PSDRUG) ; RETURN TRUE OR FALSE IF PATIENT IS ALLERGIC TO AGENT
"RTN","ORQQAL",42,0)
 ; SRC: ALLERGEN SOURCE (CM=CONTRAST MEDIA, DR=DRUG)
"RTN","ORQQAL",43,0)
 ; NDF: IF SRC=DR, NDF=Nat'l Drug File ien ELSE NDF=""
"RTN","ORQQAL",44,0)
 ; PSDRUG:IF SRC=DR, PSDRUG=(local) Drug file ien ELSE PSDRUG=""
"RTN","ORQQAL",45,0)
 S ORAY=$$ORCHK^GMRAOR(ORPT,SRC,NDF)
"RTN","ORQQAL",46,0)
 I SRC="DR",ORAY=1 D  ;drug ingredient allergy found
"RTN","ORQQAL",47,0)
 .S I=1,J=0 F  S J=$O(GMRAING(J)) Q:J=""  D
"RTN","ORQQAL",48,0)
 ..I I=1 S ORAY=ORAY_U_GMRAING(J)
"RTN","ORQQAL",49,0)
 ..E  S ORAY=ORAY_";"_GMRAING(J)
"RTN","ORQQAL",50,0)
 ..S I=I+1
"RTN","ORQQAL",51,0)
 I SRC="DR",ORAY=2 D  ;drug class allergy found
"RTN","ORQQAL",52,0)
 .S CL="",I=1,J=0 F  S J=$O(GMRADRCL(J)) Q:J=""  D
"RTN","ORQQAL",53,0)
 ..; per test sites 3/17/04 - no oc for pt allergy to entire HERBS class:
"RTN","ORQQAL",54,0)
 ..Q:$P(GMRADRCL(J),U)="HA000"
"RTN","ORQQAL",55,0)
 ..I I=1 S ORAY=ORAY_U_$P(GMRADRCL(J),U,2)
"RTN","ORQQAL",56,0)
 ..E  S CL=$P(GMRADRCL(J),U,2) I ORAY'[CL S ORAY=ORAY_";"_CL
"RTN","ORQQAL",57,0)
 ..S I=I+1
"RTN","ORQQAL",58,0)
 I SRC="DR",(+$G(ORAY)<1) D MEDCLASS(.ORAY,ORPT,PSDRUG)
"RTN","ORQQAL",59,0)
 K I,J,GMRADRCL,GMRAING,CL
"RTN","ORQQAL",60,0)
 Q
"RTN","ORQQAL",61,0)
MEDCLASS(ORAY,DFN,PSDRUG) ;check for allergens with medications in same VA drug class
"RTN","ORQQAL",62,0)
 N ORVACLS,CL,X,I,RET,TYP
"RTN","ORQQAL",63,0)
 S TYP="DR"
"RTN","ORQQAL",64,0)
 Q:+$G(PSDRUG)<1
"RTN","ORQQAL",65,0)
 S ORVACLS=$P(^PSDRUG(PSDRUG,0),U,2)
"RTN","ORQQAL",66,0)
 Q:$L(ORVACLS)<4
"RTN","ORQQAL",67,0)
 Q:$G(ORVACLS)="HA000"  ;don't process herbal drug class for order checks
"RTN","ORQQAL",68,0)
 S CL=$S($E(ORVACLS,1,4)="CN10":5,1:4) ;look at 5 chars if ANALGESICS
"RTN","ORQQAL",69,0)
 D GETDATA^GMRAOR(DFN)
"RTN","ORQQAL",70,0)
 Q:'$D(^TMP("GMRAOC",$J,"APC"))
"RTN","ORQQAL",71,0)
 S I="" F  S I=$O(^TMP("GMRAOC",$J,"APC",I)) Q:'$L(I)  D
"RTN","ORQQAL",72,0)
 .I $E(I,1,CL)=$E(ORVACLS,1,CL) S X=I
"RTN","ORQQAL",73,0)
 I $L($G(X)) D
"RTN","ORQQAL",74,0)
 .N IEN,NAME
"RTN","ORQQAL",75,0)
 .D IEN^PSN50P65(,X,"ORQQAL")
"RTN","ORQQAL",76,0)
 .S IEN=$O(^TMP($J,"ORQQAL","B",X,0))
"RTN","ORQQAL",77,0)
 .I 'IEN S ORAY="2"_U_X Q
"RTN","ORQQAL",78,0)
 .S NAME=$G(^TMP($J,"ORQQAL",IEN,1))
"RTN","ORQQAL",79,0)
 .I '$L(NAME) S ORAY="2"_U_X Q
"RTN","ORQQAL",80,0)
 .S ORAY="2"_U_NAME_": ("_$G(^TMP("GMRAOC",$J,"APC",X))_")"
"RTN","ORQQAL",81,0)
 K ^TMP("GMRAOC",$J)
"RTN","ORQQAL",82,0)
 Q
"RTN","ORQQAL",83,0)
DETAIL(ORAY,DFN,ALLR,ID) ; RETURN DETAILED ALLERGY INFO FOR SPECIFIED ALLERGIC REACTION:
"RTN","ORQQAL",84,0)
 D EN1^GMRAOR2(ALLR,"GMRACT")
"RTN","ORQQAL",85,0)
 N CR,OX,OH S CR=$CHAR(13),I=1
"RTN","ORQQAL",86,0)
 S ORAY(I)="    Causative agent: "_$P(GMRACT,U),I=I+1
"RTN","ORQQAL",87,0)
 S ORAY(I)=" Nature of Reaction: "_$S($P(GMRACT,U,6)="ALLERGY":"Allergy",$P(GMRACT,U,6)="PHARMACOLOGIC":"Adverse Reaction",$P(GMRACT,U,6)="UNKNOWN":"Unknown",1:""),I=I+1 ;216
"RTN","ORQQAL",88,0)
 S ORAY(I)=" ",I=I+1
"RTN","ORQQAL",89,0)
 I $D(GMRACT("S",1)) D SYMP
"RTN","ORQQAL",90,0)
 I $D(GMRACT("V",1)) D CLAS
"RTN","ORQQAL",91,0)
 S ORAY(I)="         Originator: "_$P(GMRACT,U,2)_$S($L($P(GMRACT,U,3)):" ("_$P(GMRACT,U,3)_")",1:""),I=I+1 ;216
"RTN","ORQQAL",92,0)
 S ORAY(I)="         Originated: "_$P(GMRACT,U,10),I=I+1 ;216
"RTN","ORQQAL",93,0)
 I $D(GMRACT("O",1)) D OBS
"RTN","ORQQAL",94,0)
 S ORAY(I)="           Verified: "_$S($P(GMRACT,U,4)="VERIFIED":$P(GMRACT,U,8),1:"No"),I=I+1 ;216
"RTN","ORQQAL",95,0)
 S ORAY(I)="Observed/Historical: "_$S($P(GMRACT,U,5)="OBSERVED":"Observed",$P(GMRACT,U,5)="HISTORICAL":"Historical",1:""),I=I+1
"RTN","ORQQAL",96,0)
 I $D(GMRACT("C",1)) D COM
"RTN","ORQQAL",97,0)
 K GMRACT
"RTN","ORQQAL",98,0)
 Q
"RTN","ORQQAL",99,0)
SYMP S K=0,N=0 F  S K=$O(GMRACT("S",K)) Q:K'>0  D
"RTN","ORQQAL",100,0)
 .I N=0 S ORAY(I)="     Signs/symptoms: "_GMRACT("S",K),I=I+1
"RTN","ORQQAL",101,0)
 .E  S ORAY(I)="                     "_GMRACT("S",K),I=I+1
"RTN","ORQQAL",102,0)
 .S N=N+1
"RTN","ORQQAL",103,0)
 S ORAY(I)=" ",I=I+1
"RTN","ORQQAL",104,0)
 K N,K
"RTN","ORQQAL",105,0)
 Q
"RTN","ORQQAL",106,0)
CLAS S K=0,N=0 F  S K=$O(GMRACT("V",K)) Q:K'>0  D
"RTN","ORQQAL",107,0)
 .I N=0 S ORAY(I)="       Drug Classes: "_$P(GMRACT("V",K),U,2),I=I+1
"RTN","ORQQAL",108,0)
 .E  S ORAY(I)="                     "_$P(GMRACT("V",K),U,2),I=I+1
"RTN","ORQQAL",109,0)
 .S N=N+1
"RTN","ORQQAL",110,0)
 S ORAY(I)=" ",I=I+1
"RTN","ORQQAL",111,0)
 K N,K
"RTN","ORQQAL",112,0)
 Q
"RTN","ORQQAL",113,0)
OBS S K=0,N=0 F  S K=$O(GMRACT("O",K)) Q:K'>0  D
"RTN","ORQQAL",114,0)
 .I N=0 D
"RTN","ORQQAL",115,0)
 ..S Y=$P(GMRACT("O",K),U) D DD^%DT
"RTN","ORQQAL",116,0)
 ..S ORAY(I)=" Obs dates/severity: "_Y_" "_$P(GMRACT("O",K),U,2),I=I+1
"RTN","ORQQAL",117,0)
 .E  D
"RTN","ORQQAL",118,0)
 ..S Y=$P(GMRACT("O",K),U) D DD^%DT
"RTN","ORQQAL",119,0)
 ..S ORAY(I)="                     "_Y_" "_$P(GMRACT("O",K),U,2),I=I+1
"RTN","ORQQAL",120,0)
 .S N=N+1
"RTN","ORQQAL",121,0)
 S ORAY(I)=" ",I=I+1
"RTN","ORQQAL",122,0)
 K N,K,Y
"RTN","ORQQAL",123,0)
 Q
"RTN","ORQQAL",124,0)
COM S K=0,N=0,ORAY(I)=" ",I=I+1
"RTN","ORQQAL",125,0)
 F  S K=$O(GMRACT("C",K)) Q:K'>0  D
"RTN","ORQQAL",126,0)
 .I N=0 S ORAY(I)="Comments:",I=I+1
"RTN","ORQQAL",127,0)
 .S Y=$P(GMRACT("C",K),U) D DD^%DT
"RTN","ORQQAL",128,0)
 .S ORAY(I)="   "_Y_" by "_$P(GMRACT("C",K),U,2),I=I+1
"RTN","ORQQAL",129,0)
 .I $D(GMRACT("C",K,1,0)) S L=0 F  S L=$O(GMRACT("C",K,L)) Q:L'>0  D
"RTN","ORQQAL",130,0)
 ..S ORAY(I)=GMRACT("C",K,L,0),I=I+1
"RTN","ORQQAL",131,0)
 .S N=N+1
"RTN","ORQQAL",132,0)
 S ORAY(I)=" ",I=I+1
"RTN","ORQQAL",133,0)
 K N,K,L,Y
"RTN","ORQQAL",134,0)
 Q
"RTN","ORRDI1")
0^1^B50225479^n/a
"RTN","ORRDI1",1,0)
ORRDI1 ;SLC/JMH - RDI routines for API supporting CDS data; 3/24/05 2:31 [8/11/05 6:25am] ; 1/11/07 8:33am
"RTN","ORRDI1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**232**;Dec 17, 1997;Build 19
"RTN","ORRDI1",3,0)
 ;
"RTN","ORRDI1",4,0)
GET(DFN,DOMAIN) ;API for packages to call in order to get data from HDR for
"RTN","ORRDI1",5,0)
 ; check if in OUTAGE state and quit if so
"RTN","ORRDI1",6,0)
 I $$DOWNXVAL^ORRDI2 D  Q -1
"RTN","ORRDI1",7,0)
 .K ^XTMP("ORRDI",DOMAIN,DFN)
"RTN","ORRDI1",8,0)
 .S ^XTMP("ORRDI",DOMAIN,DFN,0)="^^-1"
"RTN","ORRDI1",9,0)
 ;  order checking purposes
"RTN","ORRDI1",10,0)
 N I,ORCACHE,ORRET,ORRECDT
"RTN","ORRDI1",11,0)
 ;check if data was just retrieved a short time ago and if so return
"RTN","ORRDI1",12,0)
 S ORRECDT=$P($G(^XTMP("ORRDI",DOMAIN,DFN,0)),U)
"RTN","ORRDI1",13,0)
 S ORCACHE=$$GET^XPAR("SYS","OR RDI CACHE TIME")
"RTN","ORRDI1",14,0)
 I $$FMDIFF^XLFDT($$NOW^XLFDT,ORRECDT,2)<(60*ORCACHE),$P(^XTMP("ORRDI",DOMAIN,DFN,0),U,3)>-1 S ORRET=$P(^XTMP("ORRDI",DOMAIN,DFN,0),U,3)
"RTN","ORRDI1",15,0)
 ;check if there has been an HDR down condition within last minute
"RTN","ORRDI1",16,0)
 I $$FMDIFF^XLFDT($$NOW^XLFDT,$P($G(^XTMP("ORRDI","PSOO",DFN,0)),U),2)<60,$P($G(^XTMP("ORRDI","PSOO",DFN,0)),U,3)<0 S ORRET=$P($G(^XTMP("ORRDI","PSOO",DFN,0)),U,3)
"RTN","ORRDI1",17,0)
 I $$FMDIFF^XLFDT($$NOW^XLFDT,$P($G(^XTMP("ORRDI","ART",DFN,0)),U),2)<60,$P($G(^XTMP("ORRDI","ART",DFN,0)),U,3)<0 S ORRET=$P($G(^XTMP("ORRDI","ART",DFN,0)),U,3)
"RTN","ORRDI1",18,0)
 ;if data is not "fresh" then go get it
"RTN","ORRDI1",19,0)
 I '$L($G(ORRET)) D
"RTN","ORRDI1",20,0)
 .S ORRET=$$RETRIEVE(DFN,DOMAIN)
"RTN","ORRDI1",21,0)
 .I ORRET>-1 S ^XTMP("ORRDI","OUTAGE INFO","FAILURES")=0
"RTN","ORRDI1",22,0)
 .I ORRET'>-1 D
"RTN","ORRDI1",23,0)
 ..Q:$P(ORRET,U,2)="PATIENT ICN NOT FOUND"
"RTN","ORRDI1",24,0)
 ..S ^XTMP("ORRDI","OUTAGE INFO","FAILURES")=$$FAILXVAL^ORRDI2+1
"RTN","ORRDI1",25,0)
 ..I $$FAILXVAL^ORRDI2'<$$FAILPVAL^ORRDI2 D
"RTN","ORRDI1",26,0)
 ...S ^XTMP("ORRDI","OUTAGE INFO","DOWN")=1
"RTN","ORRDI1",27,0)
 ...D SPAWN^ORRDI2
"RTN","ORRDI1",28,0)
 S $P(^XTMP("ORRDI",DOMAIN,DFN,0),U,3)=ORRET
"RTN","ORRDI1",29,0)
 I ORRET<1 D
"RTN","ORRDI1",30,0)
 .N TEMP S TEMP=^XTMP("ORRDI",DOMAIN,DFN,0)
"RTN","ORRDI1",31,0)
 .K ^XTMP("ORRDI",DOMAIN,DFN)
"RTN","ORRDI1",32,0)
 .S ^XTMP("ORRDI",DOMAIN,DFN,0)=TEMP
"RTN","ORRDI1",33,0)
 Q ORRET
"RTN","ORRDI1",34,0)
HAVEHDR() ;call to check if this system has an HDR to perform order checks
"RTN","ORRDI1",35,0)
 ;  against
"RTN","ORRDI1",36,0)
 ;check parameter to see if there is an HDR and returns positive if so
"RTN","ORRDI1",37,0)
 I $$GET^XPAR("SYS","OR RDI HAVE HDR") Q 1
"RTN","ORRDI1",38,0)
 ;returns negative because the parameter indicates there is no HDR
"RTN","ORRDI1",39,0)
 Q 0
"RTN","ORRDI1",40,0)
RETRIEVE(DFN,DOMAIN) ;actually go get the data from CDS
"RTN","ORRDI1",41,0)
 K ^XTMP("ORRDI",DOMAIN,DFN)
"RTN","ORRDI1",42,0)
 N START,END,HLL,HLA,ORFS,ORCS,ORRS,ORES,ORSS
"RTN","ORRDI1",43,0)
 N Y,ORRSLT,ICN,WHATOUT,HLNEXT,HLNODE,HLQUIT,ORHLP,RET,HL,HLDOM,HLDONE1,HLECH,HLFS,HLINSTN,HLMTIEN,HLPARAM,HLQ,STATUS,PRE
"RTN","ORRDI1",44,0)
 S (ORFS,ORCS,ORRS,ORES,ORSS)=""
"RTN","ORRDI1",45,0)
 ;S START=$$FMADD^XLFDT($P($$NOW^XLFDT,"."),-120),END=$$FMADD^XLFDT($P($$NOW^XLFDT,"."),485)
"RTN","ORRDI1",46,0)
 ;set up what codes for specific domains
"RTN","ORRDI1",47,0)
 I DOMAIN="ART" S WHATOUT="039OC_AL:ALLERGIES"
"RTN","ORRDI1",48,0)
 I DOMAIN="PSOO" S WHATOUT="055OC_RXOP:PHARMACY ALL OUTPATIENT",START=$$FMADD^XLFDT($P($$NOW^XLFDT,"."),-30)
"RTN","ORRDI1",49,0)
 ;get patient identifier (ICN)
"RTN","ORRDI1",50,0)
 D SELECT^ORWPT(.Y,DFN)
"RTN","ORRDI1",51,0)
 S ICN=$P($G(Y),U,14)
"RTN","ORRDI1",52,0)
 I 'ICN Q -1_"^PATIENT ICN NOT FOUND"
"RTN","ORRDI1",53,0)
 ;build HLA array with request HL7
"RTN","ORRDI1",54,0)
 S HLA("HLS",1)="SPR^XWBDRPC845-569716_0^T^ZREMOTE RPC^@SPR.4.2~003RPC017ORWRP REPORT TEXT&006RPCVER0010&007XWBPCNT0017&007XWBESSO066321214321\F\\F\\F\657\F"
"RTN","ORRDI1",55,0)
 S HLA("HLS",1,1)="\48102&007XWBDVER0011&006XWBSEC0043.14&002P10187369543;"_ICN_"&002P2"_WHATOUT_";1\S\RXOP;ORDV06;28;200&002P3000&002P4000&002P5000&002P600"_$L($G(START))_$G(START)_"&002P700"_$L($G(END))_$G(END)
"RTN","ORRDI1",56,0)
 S HLA("HLS",2)="RDF^1^@DSP.3~TX~300"
"RTN","ORRDI1",57,0)
 ;set HLL("LINKS") node to specify receiver location
"RTN","ORRDI1",58,0)
 S HLL("LINKS",1)="ORRDI SUBSCRIBER^ORHDR"
"RTN","ORRDI1",59,0)
 S ORHLP("OPEN TIMEOUT")=10
"RTN","ORRDI1",60,0)
 S ORHLP("SUBSCRIBER")="^OR RDI SENDER^"_$P($$SITE^VASITE,U,3)_"^OR RDI RECEIVER^^^"
"RTN","ORRDI1",61,0)
 ;call DIRECT^HLMA to send request
"RTN","ORRDI1",62,0)
 D DIRECT^HLMA("ORRDI EVENT","LM",1,.ORRSLT,,.ORHLP)
"RTN","ORRDI1",63,0)
 ;set time stamp of the data
"RTN","ORRDI1",64,0)
 I $G(ORRSLT) S ^XTMP("ORRDI",DOMAIN,DFN,0)=$$NOW^XLFDT
"RTN","ORRDI1",65,0)
 ;check if call failed
"RTN","ORRDI1",66,0)
 I $P($G(ORRSLT),U,2) Q "-1"_U_$G(ORRSLT)
"RTN","ORRDI1",67,0)
 ;get and parse the response HL7
"RTN","ORRDI1",68,0)
 S ORFS=$G(HL("FS")),ORCS=$E($G(HL("ECH")),1),ORRS=$E($G(HL("ECH")),2),ORES=$E($G(HL("ECH")),3),ORSS=$E($G(HL("ECH")),4)
"RTN","ORRDI1",69,0)
 N ORQUIT S ORQUIT=""
"RTN","ORRDI1",70,0)
 F  X HLNEXT Q:HLQUIT'>0!(ORQUIT'="")  D
"RTN","ORRDI1",71,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,ORFS,2)'="AA") S ORQUIT=$P(HLNODE,ORFS,2)
"RTN","ORRDI1",72,0)
 .I $E(HLNODE,1,3)="ERR" S ORQUIT=$P(HLNODE,ORFS,2)
"RTN","ORRDI1",73,0)
 .I $E(HLNODE,1,3)="RDT"&($P(HLNODE,ORFS,2)="S") D
"RTN","ORRDI1",74,0)
 ..S ^XTMP("ORRDI",0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_U_$$NOW^XLFDT
"RTN","ORRDI1",75,0)
 ..I DOMAIN="ART" D ALPARSE(DFN,.HLNODE)
"RTN","ORRDI1",76,0)
 ..I DOMAIN="PSOO" D PSPARSE(DFN,.HLNODE)
"RTN","ORRDI1",77,0)
 I $L(ORQUIT) Q "-2"_U_ORQUIT
"RTN","ORRDI1",78,0)
 S RET=$O(^XTMP("ORRDI",DOMAIN,DFN,""),-1)
"RTN","ORRDI1",79,0)
 Q $G(RET)
"RTN","ORRDI1",80,0)
ALPARSE(DFN,DATA) ;parse an individual ART record that comes from CDS
"RTN","ORRDI1",81,0)
 I '$D(DATA(0)) S DATA(0)=DATA
"RTN","ORRDI1",82,0)
 N Y,I,SEQ,TMPREACT,I,DCCOUNT,DICOUNT
"RTN","ORRDI1",83,0)
 S SEQ=$O(^XTMP("ORRDI","ART",DFN,""),-1)+1
"RTN","ORRDI1",84,0)
 D PIECEOUT^ORRDI2(.Y,.DATA,ORFS)
"RTN","ORRDI1",85,0)
 Q:Y(4)="EE"
"RTN","ORRDI1",86,0)
 ;Q:$$UP^XLFSTR($P(Y(5),ORCS,2))'["DRUG"
"RTN","ORRDI1",87,0)
 ;save the originating facility
"RTN","ORRDI1",88,0)
 S ^XTMP("ORRDI","ART",DFN,SEQ,"FACILITY",0)=Y(3)
"RTN","ORRDI1",89,0)
 ;save reactant to the XTMP if it is coded
"RTN","ORRDI1",90,0)
 S TMPREACT=$TR(Y(6),ORCS,ORFS)
"RTN","ORRDI1",91,0)
 N CODING S CODING=$P(TMPREACT,ORFS,6)
"RTN","ORRDI1",92,0)
 S:$E(CODING,1,4)="99VA" ^XTMP("ORRDI","ART",DFN,SEQ,"REACTANT",0)=$P(TMPREACT,ORFS,4,6)
"RTN","ORRDI1",93,0)
 ;save drug classes to the XTMP (only coded values)
"RTN","ORRDI1",94,0)
 S I=0,DCCOUNT=0 F I=1:1:$L(Y(9),ORRS) D
"RTN","ORRDI1",95,0)
 . N TMP
"RTN","ORRDI1",96,0)
 . S TMP=$TR($P(Y(9),ORRS,I),ORCS,ORFS)
"RTN","ORRDI1",97,0)
 . ;check if drug class is coded
"RTN","ORRDI1",98,0)
 . N CODING S CODING=$P(TMP,ORFS,3) Q:$E(CODING,1,9)'="99VHA_ERT"
"RTN","ORRDI1",99,0)
 . S DCCOUNT=DCCOUNT+1
"RTN","ORRDI1",100,0)
 . S $P(TMP,ORFS,6)="99VA"_$P($P(TMP,ORFS,6),"_",2)
"RTN","ORRDI1",101,0)
 . S ^XTMP("ORRDI","ART",DFN,SEQ,"DRUG CLASSES",DCCOUNT)=$P(TMP,ORFS,4)_U_$P(TMP,ORFS,4)_U_$P(TMP,ORFS,6)_U_$P(TMP,ORFS,5)
"RTN","ORRDI1",102,0)
 ;save drug ingredients to the XTMP (only coded values)
"RTN","ORRDI1",103,0)
 S I=0,DICOUNT=0 F I=1:1:$L(Y(10),ORRS) D
"RTN","ORRDI1",104,0)
 . N TMP
"RTN","ORRDI1",105,0)
 . S TMP=$TR($P(Y(10),ORRS,I),ORCS,ORFS)
"RTN","ORRDI1",106,0)
 . ;check if drug ingredient is coded
"RTN","ORRDI1",107,0)
 . N CODING S CODING=$P(TMP,ORFS,6) Q:$E(CODING,1,4)'="99VA"
"RTN","ORRDI1",108,0)
 . S DICOUNT=DICOUNT+1
"RTN","ORRDI1",109,0)
 . S ^XTMP("ORRDI","ART",DFN,SEQ,"DRUG INGREDIENTS",DICOUNT)=$P(TMP,ORFS,4,6)
"RTN","ORRDI1",110,0)
 S I="" F  S I=$O(^XTMP("ORRDI","ART",DFN,SEQ,"REACTANT",I)) Q:I=""  S ^XTMP("ORRDI","ART",DFN,SEQ,"REACTANT",I)=$$REMESC(^XTMP("ORRDI","ART",DFN,SEQ,"REACTANT",I))
"RTN","ORRDI1",111,0)
 S I="" F  S I=$O(^XTMP("ORRDI","ART",DFN,SEQ,"DRUG INGREDIENTS",I)) Q:I=""  S ^XTMP("ORRDI","ART",DFN,SEQ,"DRUG INGREDIENTS",I)=$$REMESC(^XTMP("ORRDI","ART",DFN,SEQ,"DRUG INGREDIENTS",I))
"RTN","ORRDI1",112,0)
 S I="" F  S I=$O(^XTMP("ORRDI","ART",DFN,SEQ,"DRUG CLASSES",I)) Q:I=""  S ^XTMP("ORRDI","ART",DFN,SEQ,"DRUG CLASSES",I)=$$REMESC(^XTMP("ORRDI","ART",DFN,SEQ,"DRUG CLASSES",I))
"RTN","ORRDI1",113,0)
 Q
"RTN","ORRDI1",114,0)
PSPARSE(DFN,DATA) ;parse an individual PSOO record from CDS
"RTN","ORRDI1",115,0)
 I '$D(DATA(0)) S DATA(0)=DATA
"RTN","ORRDI1",116,0)
 N Y,I,COUNT,MAP,PIECE,SEQ
"RTN","ORRDI1",117,0)
 D PIECEOUT^ORRDI2(.Y,.DATA,ORFS)
"RTN","ORRDI1",118,0)
 S SEQ=$O(^XTMP("ORRDI","PSOO",DFN,""),-1)+1
"RTN","ORRDI1",119,0)
 S I="",COUNT=0,MAP="1,2,4,5,6,7,8,9,10,11,12,14"
"RTN","ORRDI1",120,0)
 F I=18,4,6,7,8,10,11,12,13,14,15,16 S PIECE(I)=Y(I),COUNT=COUNT+1,^XTMP("ORRDI","PSOO",DFN,SEQ,$P(MAP,",",COUNT),0)=PIECE(I)
"RTN","ORRDI1",121,0)
 S ^XTMP("ORRDI","PSOO",DFN,SEQ,1,0)=$P(^XTMP("ORRDI","PSOO",DFN,SEQ,1,0),ORCS,1)
"RTN","ORRDI1",122,0)
 I '$L(^XTMP("ORRDI","PSOO",DFN,SEQ,1,0))!(Y(17)=200) S ^XTMP("ORRDI","PSOO",DFN,SEQ,1,0)=Y(3)
"RTN","ORRDI1",123,0)
 S ^XTMP("ORRDI","PSOO",DFN,SEQ,6,0)=^XTMP("ORRDI","PSOO",DFN,SEQ,6,0)_";"_Y(9)
"RTN","ORRDI1",124,0)
 S ^XTMP("ORRDI","PSOO",DFN,SEQ,5,0)=$P(^XTMP("ORRDI","PSOO",DFN,SEQ,5,0),ORCS,5)
"RTN","ORRDI1",125,0)
 S ^XTMP("ORRDI","PSOO",DFN,SEQ,3,0)=$P($P(^XTMP("ORRDI","PSOO",DFN,SEQ,2,0),ORCS,4),".")
"RTN","ORRDI1",126,0)
 S ^XTMP("ORRDI","PSOO",DFN,SEQ,2,0)=$P(^XTMP("ORRDI","PSOO",DFN,SEQ,2,0),ORCS,5)
"RTN","ORRDI1",127,0)
 S ^XTMP("ORRDI","PSOO",DFN,SEQ,7,0)=$$DTCONV(^XTMP("ORRDI","PSOO",DFN,SEQ,7,0))
"RTN","ORRDI1",128,0)
 S ^XTMP("ORRDI","PSOO",DFN,SEQ,8,0)=$$DTCONV(^XTMP("ORRDI","PSOO",DFN,SEQ,8,0))
"RTN","ORRDI1",129,0)
 S ^XTMP("ORRDI","PSOO",DFN,SEQ,9,0)=$$DTCONV(^XTMP("ORRDI","PSOO",DFN,SEQ,9,0))
"RTN","ORRDI1",130,0)
 S I="" F  S I=$O(^XTMP("ORRDI","PSOO",DFN,SEQ,I)) Q:I=""  S ^XTMP("ORRDI","PSOO",DFN,SEQ,I,0)=$$REMESC($G(^XTMP("ORRDI","PSOO",DFN,SEQ,I,0)))
"RTN","ORRDI1",131,0)
 Q
"RTN","ORRDI1",132,0)
DTCONV(DATE) ;convert date in hl7 format to mm/dd/yy
"RTN","ORRDI1",133,0)
 Q $E(DATE,5,6)_"/"_$E(DATE,7,8)_"/"_$E(DATE,3,4)
"RTN","ORRDI1",134,0)
 ;Q $E(DATE,1,6)_$E($P(DATE,"/",3),3,4)
"RTN","ORRDI1",135,0)
REMESC(ORSTR) ;
"RTN","ORRDI1",136,0)
 ; Remove Escape Characters from HL7 Message Text
"RTN","ORRDI1",137,0)
 ; Escape Sequence codes:
"RTN","ORRDI1",138,0)
 ;         F = field separator (ORFS)
"RTN","ORRDI1",139,0)
 ;         S = component separator (ORCS)
"RTN","ORRDI1",140,0)
 ;         R = repetition separator (ORRS)
"RTN","ORRDI1",141,0)
 ;         E = escape character (ORES)
"RTN","ORRDI1",142,0)
 ;         T = subcomponent separator (ORSS)
"RTN","ORRDI1",143,0)
 N ORCHR,ORREP,I1,I2,J1,J2,K,VALUE
"RTN","ORRDI1",144,0)
 F ORCHR="F","S","R","E","T" S ORREP(ORES_ORCHR_ORES)=$S(ORCHR="F":ORFS,ORCHR="S":ORCS,ORCHR="R":ORRS,ORCHR="E":ORES,ORCHR="T":ORSS)
"RTN","ORRDI1",145,0)
 S ORSTR=$$REPLACE^XLFSTR(ORSTR,.ORREP)
"RTN","ORRDI1",146,0)
 F  S I1=$P(ORSTR,ORES_"X") Q:$L(I1)=$L(ORSTR)  D
"RTN","ORRDI1",147,0)
 .S I2=$P(ORSTR,ORES_"X",2,99)
"RTN","ORRDI1",148,0)
 .S J1=$P(I2,ORES) Q:'$L(J1)
"RTN","ORRDI1",149,0)
 .S J2=$P(I2,ORES,2,99)
"RTN","ORRDI1",150,0)
 .S VALUE=$$BASE^XLFUTL($$UP^XLFSTR(J1),16,10)
"RTN","ORRDI1",151,0)
 .S K=$S(VALUE>255:"?",VALUE<32!(VALUE>127&(VALUE<160)):"",1:$C(VALUE))
"RTN","ORRDI1",152,0)
 .S ORSTR=I1_K_J2
"RTN","ORRDI1",153,0)
 Q ORSTR
"RTN","ORRDI2")
0^2^B28359828^n/a
"RTN","ORRDI2",1,0)
ORRDI2 ; SLC/JMH - RDI routine for user interface and data cleanup; 3/24/05 2:31 ; 1/11/07 8:12am
"RTN","ORRDI2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**232**;Dec 17, 1997;Build 19
"RTN","ORRDI2",3,0)
 ;
"RTN","ORRDI2",4,0)
SET ;utility to set RDI related parameters
"RTN","ORRDI2",5,0)
 I '$$PATCH^XPDUTL("OR*3.0*238") D  Q
"RTN","ORRDI2",6,0)
 . W !,"This menu is locked until patch OR*3.0*238 is installed."
"RTN","ORRDI2",7,0)
 N QUIT,QUITALL
"RTN","ORRDI2",8,0)
 W !!,"Sets System wide parameters to control order checking against"
"RTN","ORRDI2",9,0)
 W !,"  remote data",!
"RTN","ORRDI2",10,0)
 F  Q:$G(QUIT)!($G(QUITALL))  D
"RTN","ORRDI2",11,0)
 . N VAL,VALEXT,DIR,DTOUT,Y
"RTN","ORRDI2",12,0)
 . S VAL=$$GET^XPAR("SYS","OR RDI HAVE HDR")
"RTN","ORRDI2",13,0)
 . S VALEXT="NO" I VAL=1 S VALEXT="YES"
"RTN","ORRDI2",14,0)
 . S DIR("A")="HAVE AN HDR"
"RTN","ORRDI2",15,0)
 . S DIR("B")=VALEXT
"RTN","ORRDI2",16,0)
 . S DIR("?")="^D HELP1^ORRDI2"
"RTN","ORRDI2",17,0)
 . S DIR(0)="Y"
"RTN","ORRDI2",18,0)
 . D ^DIR
"RTN","ORRDI2",19,0)
 . I $G(Y)="^"!($G(DTOUT)) S QUITALL=1
"RTN","ORRDI2",20,0)
 . I $G(Y)=1!($G(Y)=0) S QUIT=1 D
"RTN","ORRDI2",21,0)
 . . D EN^XPAR("SYS","OR RDI HAVE HDR",,Y)
"RTN","ORRDI2",22,0)
 I $G(QUITALL) Q
"RTN","ORRDI2",23,0)
 I '$$GET^XPAR("SYS","OR RDI HAVE HDR") Q
"RTN","ORRDI2",24,0)
 S QUIT=0
"RTN","ORRDI2",25,0)
 F  Q:$G(QUIT)!($G(QUITALL))  D
"RTN","ORRDI2",26,0)
 . N VAL,VALEXT,DIR,DTOUT,Y
"RTN","ORRDI2",27,0)
 . S VAL=$$GET^XPAR("SYS","OR RDI CACHE TIME")
"RTN","ORRDI2",28,0)
 . S VALEXT=$G(VAL,0)
"RTN","ORRDI2",29,0)
 . S DIR("A")="CACHE TIME (Minutes)"
"RTN","ORRDI2",30,0)
 . S DIR("B")=VALEXT
"RTN","ORRDI2",31,0)
 . S DIR("?")="^D HELP3^ORRDI2"
"RTN","ORRDI2",32,0)
 . S DIR(0)="N^0:9999:0"
"RTN","ORRDI2",33,0)
 . D ^DIR
"RTN","ORRDI2",34,0)
 . I $G(Y)="^"!($G(DTOUT)) S QUITALL=1
"RTN","ORRDI2",35,0)
 . I $G(Y)>-1 S QUIT=1 D
"RTN","ORRDI2",36,0)
 . . D EN^XPAR("SYS","OR RDI CACHE TIME",,Y)
"RTN","ORRDI2",37,0)
 Q
"RTN","ORRDI2",38,0)
HELP1 ;
"RTN","ORRDI2",39,0)
 W "Set this to ""YES"" if this system has an HDR system that"
"RTN","ORRDI2",40,0)
 W !,"  it uses to access remote data."
"RTN","ORRDI2",41,0)
 Q
"RTN","ORRDI2",42,0)
HELP3 ;
"RTN","ORRDI2",43,0)
 W "Set this to the number of minutes that the retrieved data is "
"RTN","ORRDI2",44,0)
 W !,"  to be considered valid for order checking purposes."
"RTN","ORRDI2",45,0)
 Q
"RTN","ORRDI2",46,0)
LIST ;
"RTN","ORRDI2",47,0)
 W !
"RTN","ORRDI2",48,0)
 W $$GET^XPAR("SYS","OR RDI HAVE HDR")," "
"RTN","ORRDI2",49,0)
 W $$GET^XPAR("SYS","OR RDI CACHE TIME")
"RTN","ORRDI2",50,0)
 Q
"RTN","ORRDI2",51,0)
CLEANUP ;
"RTN","ORRDI2",52,0)
 N VAL,NOW,THRESH,DOM,DFN,TIME
"RTN","ORRDI2",53,0)
 S VAL=$$GET^XPAR("SYS","OR RDI CACHE TIME")
"RTN","ORRDI2",54,0)
 S NOW=$$NOW^XLFDT
"RTN","ORRDI2",55,0)
 S THRESH=$$FMADD^XLFDT(NOW,,,-VAL)
"RTN","ORRDI2",56,0)
 S DFN=0
"RTN","ORRDI2",57,0)
 F DOM="PSOO","ART" F  S DFN=$O(^XTMP("ORRDI",DOM,DFN)) Q:'DFN  D
"RTN","ORRDI2",58,0)
 . S TIME=$G(^XTMP("ORRDI",DOM,DFN,0))
"RTN","ORRDI2",59,0)
 . I TIME<THRESH K ^XTMP("ORRDI",DOM,DFN)
"RTN","ORRDI2",60,0)
 ; checking if OUTAGE task crashed or hasn't completed successfully
"RTN","ORRDI2",61,0)
 I $$DOWNXVAL D
"RTN","ORRDI2",62,0)
 .I $$FMDIFF^XLFDT($$NOW^XLFDT,$$PINGXVAL,2)>($$PINGPVAL*2) D SPAWN^ORRDI2
"RTN","ORRDI2",63,0)
 Q
"RTN","ORRDI2",64,0)
PIECEOUT(Y,DATA,DEL) ;
"RTN","ORRDI2",65,0)
 K Y
"RTN","ORRDI2",66,0)
 N I,J,COUNT
"RTN","ORRDI2",67,0)
 S I="",COUNT=0 F  S I=$O(DATA(I)) Q:I=""  D
"RTN","ORRDI2",68,0)
 . S J=0 F  S J=J+1 Q:J>$L(DATA(I),DEL)  D
"RTN","ORRDI2",69,0)
 .. I COUNT>0,J=1 S Y(COUNT)=Y(COUNT)_$P(DATA(I),DEL,J) Q
"RTN","ORRDI2",70,0)
 .. S COUNT=COUNT+1,Y(COUNT)=$P(DATA(I),DEL,J)
"RTN","ORRDI2",71,0)
 Q
"RTN","ORRDI2",72,0)
DOWNRPC(ORY) ;can be used in an RPC to check if RDI is in an OUTAGE state (HDR DOWN)
"RTN","ORRDI2",73,0)
 S ORY=$$DOWNXVAL
"RTN","ORRDI2",74,0)
 Q
"RTN","ORRDI2",75,0)
DICNPVAL() ;parameter value for dummy patient ICN
"RTN","ORRDI2",76,0)
 Q $$GET^XPAR("ALL","ORRDI DUMMY ICN")
"RTN","ORRDI2",77,0)
FAILPVAL() ;parameter value for failure threshold
"RTN","ORRDI2",78,0)
 Q $$GET^XPAR("ALL","ORRDI FAIL THRESH")
"RTN","ORRDI2",79,0)
SUCCPVAL() ;parameter value for success threshold
"RTN","ORRDI2",80,0)
 Q $$GET^XPAR("ALL","ORRDI SUCCEED THRESH")
"RTN","ORRDI2",81,0)
PINGPVAL() ;parameter value for ping frequency
"RTN","ORRDI2",82,0)
 Q $$GET^XPAR("ALL","ORRDI PING FREQ")
"RTN","ORRDI2",83,0)
DOWNXVAL() ;xtmp value for OUTAGE state
"RTN","ORRDI2",84,0)
 Q $G(^XTMP("ORRDI","OUTAGE INFO","DOWN"))
"RTN","ORRDI2",85,0)
FAILXVAL() ;xtmp value for number of failed reads
"RTN","ORRDI2",86,0)
 Q $G(^XTMP("ORRDI","OUTAGE INFO","FAILURES"))
"RTN","ORRDI2",87,0)
SUCCXVAL() ;xtmp value for number of successful reads
"RTN","ORRDI2",88,0)
 Q $G(^XTMP("ORRDI","OUTAGE INFO","SUCCEEDS"))
"RTN","ORRDI2",89,0)
PINGXVAL() ;xtmp value for last ping time
"RTN","ORRDI2",90,0)
 Q $G(^XTMP("ORRDI","OUTAGE INFO","DOWN","LAST PING"))
"RTN","ORRDI2",91,0)
LDPTTVAL(DFN) ;tmp value for if the local data only message has been shown to the user during ordering session
"RTN","ORRDI2",92,0)
 Q $G(^TMP($J,"ORRDI",DFN))
"RTN","ORRDI2",93,0)
SPAWN ;subroutine to spawn the DOWNTSK task
"RTN","ORRDI2",94,0)
 K ^XTMP("ORRDI","ART"),^XTMP("ORRDI","PSOO")
"RTN","ORRDI2",95,0)
 N ZTDESC,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDTH
"RTN","ORRDI2",96,0)
 S ZTDESC="RDI TASK TO CHECK IF HDR IS UP"
"RTN","ORRDI2",97,0)
 S ZTRTN="DOWNTSK^ORRDI2"
"RTN","ORRDI2",98,0)
 S ZTIO=""
"RTN","ORRDI2",99,0)
 S ZTDTH=$$NOW^XLFDT+.000001
"RTN","ORRDI2",100,0)
 D ^%ZTLOAD
"RTN","ORRDI2",101,0)
 Q
"RTN","ORRDI2",102,0)
DOWNTSK ;subroutine to check if HDR is back up
"RTN","ORRDI2",103,0)
 F  Q:(($$SUCCXVAL'<$$SUCCPVAL)!('$$DOWNXVAL))  D
"RTN","ORRDI2",104,0)
 .N WAIT,RSLT
"RTN","ORRDI2",105,0)
 .S WAIT=$$FMDIFF^XLFDT($$NOW^XLFDT,$$PINGXVAL,2)
"RTN","ORRDI2",106,0)
 .S WAIT=$$PINGPVAL-WAIT
"RTN","ORRDI2",107,0)
 .;wait until the proper # of seconds has expired before retrying
"RTN","ORRDI2",108,0)
 .I WAIT>0 H WAIT
"RTN","ORRDI2",109,0)
 .S ^XTMP("ORRDI","OUTAGE INFO","DOWN","LAST PING")=$$NOW^XLFDT
"RTN","ORRDI2",110,0)
 .;send dummy message
"RTN","ORRDI2",111,0)
 .S RSLT=$$TESTCALL
"RTN","ORRDI2",112,0)
 .;if successful increment success counter
"RTN","ORRDI2",113,0)
 .I RSLT S ^XTMP("ORRDI","OUTAGE INFO","SUCCEEDS")=1+$$SUCCXVAL
"RTN","ORRDI2",114,0)
 .;if failure set success counter to 0
"RTN","ORRDI2",115,0)
 .I 'RSLT S ^XTMP("ORRDI","OUTAGE INFO","SUCCEEDS")=0
"RTN","ORRDI2",116,0)
 K ^XTMP("ORRDI","OUTAGE INFO")
"RTN","ORRDI2",117,0)
 Q
"RTN","ORRDI2",118,0)
TESTCALL() ;call to send a test call to CDS...returns 1 if successful, 0 if not
"RTN","ORRDI2",119,0)
 N START,END,HLL,HLA,ORFS,ORCS,ORRS,ORES,ORSS
"RTN","ORRDI2",120,0)
 N Y,ORRSLT,ICN,WHATOUT,HLNEXT,HLNODE,HLQUIT,ORHLP,RET,HL,HLDOM,HLDONE1,HLECH,HLFS,HLINSTN,HLMTIEN,HLPARAM,HLQ,STATUS,PRE
"RTN","ORRDI2",121,0)
 S (ORFS,ORCS,ORRS,ORES,ORSS)=""
"RTN","ORRDI2",122,0)
 S START=$P($$NOW^XLFDT,".")
"RTN","ORRDI2",123,0)
 ;build HLA array with request HL7
"RTN","ORRDI2",124,0)
 S HLA("HLS",1)="SPR^XWBDRPC845-569716_0^T^ZREMOTE RPC^@SPR.4.2~003RPC017ORWRP REPORT TEXT&006RPCVER0010&007XWBPCNT0017&007XWBESSO066321214321\F\\F\\F\657\F"
"RTN","ORRDI2",125,0)
 S HLA("HLS",1,1)="\48102&007XWBDVER0011&006XWBSEC0043.14&002P10187369543;"_$$DICNPVAL_"&002P2039OC_AL:ALLERGIES;1\S\RXOP;ORDV06;28;200&002P3000&002P4000&002P5000&002P600"_$L($G(START))_$G(START)_"&002P700"_$L($G(END))_$G(END)
"RTN","ORRDI2",126,0)
 S HLA("HLS",2)="RDF^1^@DSP.3~TX~300"
"RTN","ORRDI2",127,0)
 ;set HLL("LINKS") node to specify receiver location
"RTN","ORRDI2",128,0)
 S HLL("LINKS",1)="ORRDI SUBSCRIBER^ORHDR"
"RTN","ORRDI2",129,0)
 S ORHLP("OPEN TIMEOUT")=10
"RTN","ORRDI2",130,0)
 S ORHLP("SUBSCRIBER")="^OR RDI SENDER^"_$P($$SITE^VASITE,U,3)_"^OR RDI RECEIVER^^^"
"RTN","ORRDI2",131,0)
 ;call DIRECT^HLMA to send request
"RTN","ORRDI2",132,0)
 D DIRECT^HLMA("ORRDI EVENT","LM",1,.ORRSLT,,.ORHLP)
"RTN","ORRDI2",133,0)
 ;check if call failed
"RTN","ORRDI2",134,0)
 I $P($G(ORRSLT),U,2) Q 0
"RTN","ORRDI2",135,0)
 Q 1
"RTN","ORY232")
0^5^B946091^n/a
"RTN","ORY232",1,0)
ORY232 ;SLC/JMH - OR*3*232 INSTALL ROUTINE; [8/10/05 12:30pm]
"RTN","ORY232",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**232**;Dec 17, 1997;Build 19
"RTN","ORY232",3,0)
POST ;
"RTN","ORY232",4,0)
 D EN^XPAR("SYS","OR RDI CACHE TIME",,"120")
"RTN","ORY232",5,0)
 I '$$GET^XPAR("SYS","OR RDI HAVE HDR") D EN^XPAR("SYS","OR RDI HAVE HDR",,"NO")
"RTN","ORY232",6,0)
 D EN^XPAR("SYS","ORRDI FAIL THRESH",,"2")
"RTN","ORY232",7,0)
 D EN^XPAR("SYS","ORRDI SUCCEED THRESH",,"2")
"RTN","ORY232",8,0)
 D EN^XPAR("SYS","ORRDI PING FREQ",,"20")
"RTN","ORY232",9,0)
 D EN^XPAR("SYS","ORRDI DUMMY ICN",,"99")
"RTN","ORY232",10,0)
 N ORHLL
"RTN","ORY232",11,0)
 S ORHLL=$O(^HLCS(870,"B","ORHDR",0))
"RTN","ORY232",12,0)
 I +ORHLL D
"RTN","ORY232",13,0)
 .S $P(^HLCS(870,+ORHLL,200),U,2)=1
"RTN","ORY232",14,0)
 .S $P(^HLCS(870,+ORHLL,200),U,4)=10
"RTN","ORY232",15,0)
 .S $P(^HLCS(870,+ORHLL,200),U,5)=10
"RTN","ORY232",16,0)
 .S $P(^HLCS(870,+ORHLL,200),U,10)="R"
"RTN","ORY232",17,0)
 Q
"VER")
8.0^22.0
"BLD",5709,6)
^244
**END**
**END**
