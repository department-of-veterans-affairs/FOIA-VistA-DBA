Released GMRV*5*13 SEQ #8
Extracted from mail message
**KIDS**:GMRV*5.0*13^

**INSTALL NAME**
GMRV*5.0*13
"BLD",5728,0)
GMRV*5.0*13^GEN. MED. REC. - VITALS^0^3051017^y
"BLD",5728,1,0)
^^1^1^3050725^
"BLD",5728,1,1,0)
NON-CLINICS ALLOWED FOR SELECTION AND OUT OF BOUNDS HEIGHT ISSUE
"BLD",5728,4,0)
^9.64PA^^
"BLD",5728,"KRN",0)
^9.67PA^8989.52^19
"BLD",5728,"KRN",.4,0)
.4
"BLD",5728,"KRN",.401,0)
.401
"BLD",5728,"KRN",.402,0)
.402
"BLD",5728,"KRN",.403,0)
.403
"BLD",5728,"KRN",.5,0)
.5
"BLD",5728,"KRN",.84,0)
.84
"BLD",5728,"KRN",3.6,0)
3.6
"BLD",5728,"KRN",3.8,0)
3.8
"BLD",5728,"KRN",9.2,0)
9.2
"BLD",5728,"KRN",9.8,0)
9.8
"BLD",5728,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",5728,"KRN",9.8,"NM",1,0)
GMVRPCM^^0^B72972413
"BLD",5728,"KRN",9.8,"NM",2,0)
GMRVPCE3^^0^B11637289
"BLD",5728,"KRN",9.8,"NM","B","GMRVPCE3",2)

"BLD",5728,"KRN",9.8,"NM","B","GMVRPCM",1)

"BLD",5728,"KRN",19,0)
19
"BLD",5728,"KRN",19.1,0)
19.1
"BLD",5728,"KRN",101,0)
101
"BLD",5728,"KRN",409.61,0)
409.61
"BLD",5728,"KRN",771,0)
771
"BLD",5728,"KRN",870,0)
870
"BLD",5728,"KRN",8989.51,0)
8989.51
"BLD",5728,"KRN",8989.52,0)
8989.52
"BLD",5728,"KRN",8994,0)
8994
"BLD",5728,"KRN","B",.4,.4)

"BLD",5728,"KRN","B",.401,.401)

"BLD",5728,"KRN","B",.402,.402)

"BLD",5728,"KRN","B",.403,.403)

"BLD",5728,"KRN","B",.5,.5)

"BLD",5728,"KRN","B",.84,.84)

"BLD",5728,"KRN","B",3.6,3.6)

"BLD",5728,"KRN","B",3.8,3.8)

"BLD",5728,"KRN","B",9.2,9.2)

"BLD",5728,"KRN","B",9.8,9.8)

"BLD",5728,"KRN","B",19,19)

"BLD",5728,"KRN","B",19.1,19.1)

"BLD",5728,"KRN","B",101,101)

"BLD",5728,"KRN","B",409.61,409.61)

"BLD",5728,"KRN","B",771,771)

"BLD",5728,"KRN","B",870,870)

"BLD",5728,"KRN","B",8989.51,8989.51)

"BLD",5728,"KRN","B",8989.52,8989.52)

"BLD",5728,"KRN","B",8994,8994)

"BLD",5728,"QUES",0)
^9.62^^
"BLD",5728,"REQB",0)
^9.611^1^1
"BLD",5728,"REQB",1,0)
GMRV*5.0*8^1
"BLD",5728,"REQB","B","GMRV*5.0*8",1)

"MBREQ")
0
"PKG",44,-1)
1^1
"PKG",44,0)
GEN. MED. REC. - VITALS^GMRV^Vitals/Measurements Module of General Medical Record.
"PKG",44,20,0)
^9.402P^^
"PKG",44,22,0)
^9.49I^1^1
"PKG",44,22,1,0)
5.0^3021029
"PKG",44,22,1,"PAH",1,0)
13^3051017
"PKG",44,22,1,"PAH",1,1,0)
^^1^1^3051017
"PKG",44,22,1,"PAH",1,1,1,0)
NON-CLINICS ALLOWED FOR SELECTION AND OUT OF BOUNDS HEIGHT ISSUE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","GMRVPCE3")
0^2^B11637289
"RTN","GMRVPCE3",1,0)
GMRVPCE3 ;HIRMFO/RM,FT-V/M Data Validation for AICS ;07/26/05 8:26am
"RTN","GMRVPCE3",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**13**;Oct 31, 2002
"RTN","GMRVPCE3",3,0)
 ;
"RTN","GMRVPCE3",4,0)
 ; This routine uses the following IAs:
"RTN","GMRVPCE3",5,0)
 ; #10104 - ^XLFSTR calls          (supported)
"RTN","GMRVPCE3",6,0)
 ;07/25/2005 BAY/KAM HD 0000000068371 changed lowest range height from 0 to 10
"RTN","GMRVPCE3",7,0)
 ;
"RTN","GMRVPCE3",8,0)
VALID(TYPE,X) ; This function returns 1 if rate (X) is valid for
"RTN","GMRVPCE3",9,0)
 ; measurement type (TYPE).
"RTN","GMRVPCE3",10,0)
 N FXN S FXN=0
"RTN","GMRVPCE3",11,0)
 I TYPE="VU" S TYPE="VC"
"RTN","GMRVPCE3",12,0)
 D @TYPE I $D(X) S FXN=1
"RTN","GMRVPCE3",13,0)
 Q FXN
"RTN","GMRVPCE3",14,0)
AG ; INPUT TRANSFORM FOR ABDOMINAL GIRTH
"RTN","GMRVPCE3",15,0)
 N UNIT S UNIT=$$UP^XLFSTR($P(X,+X,2,10)) I UNIT="" K X Q
"RTN","GMRVPCE3",16,0)
 S X=+X
"RTN","GMRVPCE3",17,0)
 I $E(UNIT)="C"&("CM"[UNIT) S X=$$CMTOIN(+X,0),UNIT="IN"
"RTN","GMRVPCE3",18,0)
 I $E(UNIT)="I"&("IN"[UNIT) K:+X'=X!(X>150)!(X<0)!(X?.E1"."1N.N) X
"RTN","GMRVPCE3",19,0)
 E  K X
"RTN","GMRVPCE3",20,0)
 Q
"RTN","GMRVPCE3",21,0)
AUD ; INPUT TRANSFORM FOR AUDIOMETRY.
"RTN","GMRVPCE3",22,0)
 N I,R,L
"RTN","GMRVPCE3",23,0)
 K:X'?.N1"/".N1"/".N1"/".N1"/".N1"/".N1"/".N1"/".N1"/".N1"/".N1"/".N1"/".N1"/".N1"/".N1"/".N1"/".N1"/" X
"RTN","GMRVPCE3",24,0)
 I $D(X) F I=1:1:8 S R=$P(X,"/",I) I R]"" K:+R'=R!(R>110)!(R<0) X
"RTN","GMRVPCE3",25,0)
 I $D(X) F I=9:1:16 S L=$P(X,"/",I) I L]"" K:+L'=L!(L>110)!(L<0) X
"RTN","GMRVPCE3",26,0)
 Q
"RTN","GMRVPCE3",27,0)
BP ; INPUT TRANSFORM FOR BLOOD PRESSURE
"RTN","GMRVPCE3",28,0)
 K:X'?2.3N1"/"2.3N1"/"2.3N&(X'?2.3N1"/"2.3N) X I $D(X) K:$P(X,"/",1)>300!($P(X,"/",2)>300)!(+$P(X,"/",3)>300) X
"RTN","GMRVPCE3",29,0)
 I $D(X),$P(X,"/")'>$P(X,"/",$L(X,"/")) K X
"RTN","GMRVPCE3",30,0)
 Q
"RTN","GMRVPCE3",31,0)
FH ; INPUT TRANSFORM FOR FUNDAL HEIGHT
"RTN","GMRVPCE3",32,0)
 N UNIT S UNIT=$$UP^XLFSTR($P(X,+X,2,10)) I UNIT="" K X Q
"RTN","GMRVPCE3",33,0)
 S X=+X
"RTN","GMRVPCE3",34,0)
 I $E(UNIT)="C"&("CM"[UNIT) S X=$$CMTOIN(+X,0),UNIT="IN"
"RTN","GMRVPCE3",35,0)
 I $E(UNIT)="I"&("IN"[UNIT) K:+X'=X!(X>50)!(X<10)!(X?.E1"."1N.N) X
"RTN","GMRVPCE3",36,0)
 E  K X
"RTN","GMRVPCE3",37,0)
 Q
"RTN","GMRVPCE3",38,0)
FT ; INPUT TRANSFORM FOR FETAL HEART TONES
"RTN","GMRVPCE3",39,0)
 K:+X'=X!(X>250)!(X<50)!(X?.E1"."1N.N) X
"RTN","GMRVPCE3",40,0)
 Q
"RTN","GMRVPCE3",41,0)
HC ; INPUT TRANSFORM FOR HEAD CIRCUMFERENCE
"RTN","GMRVPCE3",42,0)
 N UNIT S UNIT=$$UP^XLFSTR($P(X,+X,2,10)) I UNIT="" K X Q
"RTN","GMRVPCE3",43,0)
 I $E(UNIT)="C"&("CM"[UNIT) D  Q
"RTN","GMRVPCE3",44,0)
 .  K:+X>76!(+X<26)!(+X?.E1"."3N.N) X
"RTN","GMRVPCE3",45,0)
 .  I $D(X) S X=$J(.3937*(+X),0,2)
"RTN","GMRVPCE3",46,0)
 .  Q
"RTN","GMRVPCE3",47,0)
 I $E(UNIT)="I" D  Q
"RTN","GMRVPCE3",48,0)
 .  K:+X>30!(+X<10)!(+X?.E1"."4N.N) X
"RTN","GMRVPCE3",49,0)
 .  I $D(X),+X?.E1"."1N.N D
"RTN","GMRVPCE3",50,0)
 .  .  N F S F=$P(+X,".",2)
"RTN","GMRVPCE3",51,0)
 .  .  K:"^125^25^375^5^625^75^875^"'[("^"_F_"^") X
"RTN","GMRVPCE3",52,0)
 .  .  Q
"RTN","GMRVPCE3",53,0)
 .  I $D(X) S X=+X
"RTN","GMRVPCE3",54,0)
 .  Q
"RTN","GMRVPCE3",55,0)
 K X
"RTN","GMRVPCE3",56,0)
 Q
"RTN","GMRVPCE3",57,0)
HE ; INPUT TRANSFORM FOR HEARING
"RTN","GMRVPCE3",58,0)
 K:"^N^A^"'[("^"_$$UP^XLFSTR(X)_"^") X
"RTN","GMRVPCE3",59,0)
 Q
"RTN","GMRVPCE3",60,0)
HT ; INPUT TRANSFORM FOR HEIGHT
"RTN","GMRVPCE3",61,0)
 D EN3^GMRVUT0 K:X=0!(X>100)!(X<10) X
"RTN","GMRVPCE3",62,0)
 Q
"RTN","GMRVPCE3",63,0)
PU ; INPUT TRANSFORM FOR PULSE
"RTN","GMRVPCE3",64,0)
 K:+X'=X!(X>300)!(X<0)!(X?.E1"."1N.N) X
"RTN","GMRVPCE3",65,0)
 Q
"RTN","GMRVPCE3",66,0)
RS ; INPUT TRANSFORM FOR RESPIRATION
"RTN","GMRVPCE3",67,0)
 K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
"RTN","GMRVPCE3",68,0)
 Q
"RTN","GMRVPCE3",69,0)
TON ; INPUT TRANSFORM FOR TONOMETRY
"RTN","GMRVPCE3",70,0)
 N R,L
"RTN","GMRVPCE3",71,0)
 K:X'?.N1"/"1N.N&(X'?1N.N1"/".N) X
"RTN","GMRVPCE3",72,0)
 I $D(X) S R=$P(X,"/") I R]"" K:R'=+R!(R>80)!(R<0) X
"RTN","GMRVPCE3",73,0)
 I $D(X) S L=$P(X,"/",2) I L]"" K:L'=+L!(L>80)!(L<0) X
"RTN","GMRVPCE3",74,0)
 Q
"RTN","GMRVPCE3",75,0)
TMP ; INPUT TRANSFORM FOR TEMPERATURE
"RTN","GMRVPCE3",76,0)
 K:+X'=X!(X>120)!(X<0)!(X?.E1"."3N.N) X I $D(X) S:X<45 X=$J(+X*(9/5)+32,0,1)
"RTN","GMRVPCE3",77,0)
 Q
"RTN","GMRVPCE3",78,0)
VC ; INPUT TRANSFORM FOR VISION CORRECTED (AND VISION UNCORRECTED)
"RTN","GMRVPCE3",79,0)
 N R,L
"RTN","GMRVPCE3",80,0)
 K:X'=+X&(X'?.N1"/"1N.N) X
"RTN","GMRVPCE3",81,0)
 I $D(X) S R=$P(X,"/") I R]"" K:R'=+R!(R>999)!(R<10) X
"RTN","GMRVPCE3",82,0)
 I $D(X) S L=$P(X,"/",2) I L]"" K:L'=+L!(L>999)!(L<10) X
"RTN","GMRVPCE3",83,0)
 Q
"RTN","GMRVPCE3",84,0)
WT ; INPUT TRANSFORM FOR WEIGHT
"RTN","GMRVPCE3",85,0)
 I $L(X)>10 K X Q
"RTN","GMRVPCE3",86,0)
 S GMR=$E($P(X,+X,2)) S X=$S(GMR="":0,"Kk"[GMR:+$J(2.2*(+X),0,2),"Ll"[GMR:+X,1:0) K:X>1500!(X=0)!(X<0) X K GMR
"RTN","GMRVPCE3",87,0)
 Q
"RTN","GMRVPCE3",88,0)
PN ; INPUT TRANSFORM FOR PAIN
"RTN","GMRVPCE3",89,0)
 K:"^0^1^2^3^4^5^6^7^8^9^10^99^"'[(U_X_U) X
"RTN","GMRVPCE3",90,0)
 Q
"RTN","GMRVPCE3",91,0)
UNITRATE(TYPE,RATE,UNIT) ; This function will add the unit of
"RTN","GMRVPCE3",92,0)
 ; measurement to the rate so the input transforms will work properly.
"RTN","GMRVPCE3",93,0)
 ;   Input variables:  TYPE = Measurement type
"RTN","GMRVPCE3",94,0)
 ;                     RATE = Actual measurement (passed in by ref.)
"RTN","GMRVPCE3",95,0)
 ;                     UNIT = Unit of measurement
"RTN","GMRVPCE3",96,0)
 ;   Function value: Transormed rate with units on the end.
"RTN","GMRVPCE3",97,0)
 N FXN S FXN=RATE,UNIT=$G(UNIT)
"RTN","GMRVPCE3",98,0)
 I TYPE="AG"!(TYPE="FH")!(TYPE="HC")!(TYPE="HT") D
"RTN","GMRVPCE3",99,0)
 .  I "^CM^IN^"'[("^"_UNIT_"^") S FXN=""
"RTN","GMRVPCE3",100,0)
 .  E  S FXN=RATE_$E(UNIT)
"RTN","GMRVPCE3",101,0)
 .  Q
"RTN","GMRVPCE3",102,0)
 I TYPE="TMP" D
"RTN","GMRVPCE3",103,0)
 .  I "^C^F^"'[("^"_UNIT_"^") S FXN=""
"RTN","GMRVPCE3",104,0)
 .  I UNIT="F",RATE<45 S FXN=""
"RTN","GMRVPCE3",105,0)
 .  I UNIT="C" S FXN=+$J(+RATE*(9/5)+32,0,1)
"RTN","GMRVPCE3",106,0)
 .  Q
"RTN","GMRVPCE3",107,0)
 I TYPE="WT" D
"RTN","GMRVPCE3",108,0)
 .  I "^LB^KG^"'[("^"_UNIT_"^") S FXN=""
"RTN","GMRVPCE3",109,0)
 .  E  S FXN=RATE_$E(UNIT)
"RTN","GMRVPCE3",110,0)
 .  Q
"RTN","GMRVPCE3",111,0)
 Q FXN
"RTN","GMRVPCE3",112,0)
CMTOIN(X,PREC) ; Convert CM to IN, given CM value (X) this function will
"RTN","GMRVPCE3",113,0)
 ; return IN value.  Optional input value of PREC for precision,
"RTN","GMRVPCE3",114,0)
 ; if not set, 2 decimals will be returned.
"RTN","GMRVPCE3",115,0)
 Q +$J(.3937*(+X),0,+$G(PREC,2))
"RTN","GMVRPCM")
0^1^B72972413
"RTN","GMVRPCM",1,0)
GMVRPCM ; HOIFO/DP - RPC for Vitals Manager ;07/25/05 9:10am
"RTN","GMVRPCM",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**1,8,13**;Oct 31, 2002
"RTN","GMVRPCM",3,0)
 ; Integration Agreements:
"RTN","GMVRPCM",4,0)
 ; #10040 [Supported] File 44 references
"RTN","GMVRPCM",5,0)
 ; #10076 [Supported] XUSEC Calls
"RTN","GMVRPCM",6,0)
 ; #2263 [Supported] XPAR Calls
"RTN","GMVRPCM",7,0)
 ; #2541 [Supported] XUPARAM Calls
"RTN","GMVRPCM",8,0)
 ; #2692 [Controlled] ORQPTQ1
"RTN","GMVRPCM",9,0)
 ; #3227 [Private] NURAPI Calls
"RTN","GMVRPCM",10,0)
 ; #4084 [Private] File 44 AC x-ref
"RTN","GMVRPCM",11,0)
 ;
"RTN","GMVRPCM",12,0)
ADDQUAL ; [P] Add qualifier to vital/category
"RTN","GMVRPCM",13,0)
 S GMVVIT=+$P(DATA,";",1),GMVCAT=+$P(DATA,";",2),GMVQUAL=+$P(DATA,";",3)
"RTN","GMVRPCM",14,0)
 I $O(^GMRD(120.52,GMVQUAL,1,"B",GMVVIT,0)) D  Q
"RTN","GMVRPCM",15,0)
 .S @RESULTS@(0)="1^Qualifier already assigned."
"RTN","GMVRPCM",16,0)
 S GMVFDA(120.521,"+1,"_GMVQUAL_",",.01)=GMVVIT
"RTN","GMVRPCM",17,0)
 S GMVFDA(120.521,"+1,"_GMVQUAL_",",.02)=GMVCAT
"RTN","GMVRPCM",18,0)
 D UPDATE^DIE("","GMVFDA","GMVIEN","GMVERR")
"RTN","GMVRPCM",19,0)
 I $G(GMVIEN(1)) S @RESULTS@(0)=+GMVIEN(1)_"^Qualifier Assigned"
"RTN","GMVRPCM",20,0)
 E  S @RESULTS@(0)="-1^Unable to assign qualifier"
"RTN","GMVRPCM",21,0)
 Q
"RTN","GMVRPCM",22,0)
DELQUAL ; [P] Delete qualifier from vital/category
"RTN","GMVRPCM",23,0)
 S GMVVIT=+$P(DATA,";",1),GMVCAT=+$P(DATA,";",2),GMVQUAL=+$P(DATA,";",3)
"RTN","GMVRPCM",24,0)
 S X=$O(^GMRD(120.52,GMVQUAL,1,"B",GMVVIT,0))
"RTN","GMVRPCM",25,0)
 S GMVFDA(120.521,X_","_GMVQUAL_",",.01)="@"
"RTN","GMVRPCM",26,0)
 D FILE^DIE("","GMVFDA","GMVERR")
"RTN","GMVRPCM",27,0)
 I $D(GMVERR) S @RESULTS@(0)="-1^Unable to remove qualifier."
"RTN","GMVRPCM",28,0)
 E  S @RESULTS@(0)="1^Qualifier removed."
"RTN","GMVRPCM",29,0)
 Q
"RTN","GMVRPCM",30,0)
DELTEMP ; [P] Delete Template
"RTN","GMVRPCM",31,0)
 S GMVENT=$P(DATA,U,1),GMVNAME=$P(DATA,U,2)
"RTN","GMVRPCM",32,0)
 I $$GET^XPAR(GMVENT,"GMV TEMPLATE DEFAULT")=GMVNAME D
"RTN","GMVRPCM",33,0)
 .D DEL^XPAR(GMVENT,"GMV TEMPLATE DEFAULT",1)
"RTN","GMVRPCM",34,0)
 D DEL^XPAR(GMVENT,"GMV TEMPLATE",GMVNAME,.GMVERR)
"RTN","GMVRPCM",35,0)
 I '$G(GMVERR) S @RESULTS@(0)="1^Template Removed."
"RTN","GMVRPCM",36,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCM",37,0)
 Q
"RTN","GMVRPCM",38,0)
GETCATS ; [P] Return Listing of categories
"RTN","GMVRPCM",39,0)
 N GMVQI
"RTN","GMVRPCM",40,0)
 F GMVCAT=0:0 S GMVCAT=$O(^GMRD(120.52,"AA",DATA,GMVCAT)) Q:'GMVCAT  D
"RTN","GMVRPCM",41,0)
 .Q:$$ACTIVE^GMVUID(120.53,"",GMVCAT_",","")
"RTN","GMVRPCM",42,0)
 .S GMVQUAL="",X="" F  S X=$O(^GMRD(120.52,"AA",DATA,GMVCAT,X)) Q:X=""  D
"RTN","GMVRPCM",43,0)
 ..S GMVQI=$O(^GMRD(120.52,"AA",DATA,GMVCAT,X,0))
"RTN","GMVRPCM",44,0)
 ..Q:$$ACTIVE^GMVUID(120.52,"",GMVQI_",","")
"RTN","GMVRPCM",45,0)
 ..S GMVQUAL=GMVQUAL_$S(GMVQUAL]"":", ",1:"")_X
"RTN","GMVRPCM",46,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","GMVRPCM",47,0)
 .S @RESULTS@(Y)=GMVCAT_U_$P(^GMRD(120.53,GMVCAT,0),U)_U_GMVQUAL
"RTN","GMVRPCM",48,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_$P(^GMRD(120.51,DATA,0),U)
"RTN","GMVRPCM",49,0)
 Q
"RTN","GMVRPCM",50,0)
GETDATA ; [P] Generic fileman data call
"RTN","GMVRPCM",51,0)
 ; Variable DATA = File#^IENS^Field#
"RTN","GMVRPCM",52,0)
 S @RESULTS@(0)=$$GET1^DIQ($P(DATA,U,1),$P(DATA,U,2),$P(DATA,U,3))
"RTN","GMVRPCM",53,0)
 Q
"RTN","GMVRPCM",54,0)
GETDEF ; [P] Get Default Template
"RTN","GMVRPCM",55,0)
 I $G(DATA)]"" D  Q
"RTN","GMVRPCM",56,0)
 .S X=$$GET^XPAR($P(DATA,U),"GMV TEMPLATE DEFAULT")
"RTN","GMVRPCM",57,0)
 .I X="" S @RESULTS@(0)="-1^No Default Template"
"RTN","GMVRPCM",58,0)
 .E  S @RESULTS@(0)=X
"RTN","GMVRPCM",59,0)
 D ENVAL^XPAR(.GMV,"GMV TEMPLATE DEFAULT")
"RTN","GMVRPCM",60,0)
 S X="" F  S X=$O(GMV(X)) Q:X=""  D
"RTN","GMVRPCM",61,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","GMVRPCM",62,0)
 .S @RESULTS@(Y)=X_U_GMV(X,1)
"RTN","GMVRPCM",63,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",64,0)
 Q
"RTN","GMVRPCM",65,0)
GETHILO ; [P] Returns an abnormal value
"RTN","GMVRPCM",66,0)
 S @RESULTS@(0)=+$$GET1^DIQ(120.57,"1,",DATA)
"RTN","GMVRPCM",67,0)
 Q
"RTN","GMVRPCM",68,0)
GETLIST ; [P] Return listing of file
"RTN","GMVRPCM",69,0)
 K GMVRET,^TMP("DILIST",$J)
"RTN","GMVRPCM",70,0)
 S GMVSCRN=""
"RTN","GMVRPCM",71,0)
 I +DATA=44 S DATA2=$P(DATA,U,2),DATA=+DATA
"RTN","GMVRPCM",72,0)
 I DATA=120.51 D  ; Set screen for vitals list
"RTN","GMVRPCM",73,0)
 .S GMVSCRN="I $$VITALIEN^GMVUTL8()[("",""_+Y_"","")"
"RTN","GMVRPCM",74,0)
 I DATA=42 D  ; Screen for ward location
"RTN","GMVRPCM",75,0)
 .S GMVSCRN="I '$$INACT42^GMVUT2(+Y)"
"RTN","GMVRPCM",76,0)
 I DATA=44 D  Q  ; Clinics
"RTN","GMVRPCM",77,0)
 .N CNT S X=DATA2,CNT=0
"RTN","GMVRPCM",78,0)
 .F  S X=$O(^SC("AC","C",X)) Q:'X!(CNT>100)  D
"RTN","GMVRPCM",79,0)
 ..Q:+$G(^SC(X,"OOS"))
"RTN","GMVRPCM",80,0)
 ..S Y=$G(^SC(X,"I"))
"RTN","GMVRPCM",81,0)
 ..I Y Q:DT>+Y&($P(Y,U,2)=""!(DT<$P(Y,U,2)))
"RTN","GMVRPCM",82,0)
 ..S @RESULTS@($O(@RESULTS@(""),-1)+1)=DATA_";"_X_U_$P(^SC(X,0),U),CNT=CNT+1
"RTN","GMVRPCM",83,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",84,0)
 I DATA=100.21 D  Q  ; CPRS Teams
"RTN","GMVRPCM",85,0)
 .D TEAMS^ORQPTQ1(.GMVRET)
"RTN","GMVRPCM",86,0)
 .F X=0:0 S X=$O(GMVRET(X)) Q:'X  S @RESULTS@(X)=DATA_";"_GMVRET(X)
"RTN","GMVRPCM",87,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",88,0)
 I DATA=211.4 D  Q  ; NURS Locations
"RTN","GMVRPCM",89,0)
 .D ACTLOCS^NURAPI(.GMVRET)
"RTN","GMVRPCM",90,0)
 .F X=0:0 S X=$O(GMVRET(X)) Q:'X  S @RESULTS@(X)=DATA_";"_GMVRET(X)
"RTN","GMVRPCM",91,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",92,0)
 I DATA=120.52 S GMVSCRN="I '$$ACTIVE^GMVUID(120.52,.01,+Y_"","","""")"
"RTN","GMVRPCM",93,0)
 D LIST^DIC(DATA,"","@;.01","P","","","","",GMVSCRN)
"RTN","GMVRPCM",94,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  D
"RTN","GMVRPCM",95,0)
 .S @RESULTS@(X)=DATA_";"_^TMP("DILIST",$J,X,0)
"RTN","GMVRPCM",96,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_$$GET1^DID(DATA,"","","NAME")
"RTN","GMVRPCM",97,0)
 K ^TMP("DILIST",$J)
"RTN","GMVRPCM",98,0)
 Q
"RTN","GMVRPCM",99,0)
GETQUAL ; [P] Return qualifiers list
"RTN","GMVRPCM",100,0)
 ; DATA=VitalIEN;CatIEN
"RTN","GMVRPCM",101,0)
 ; Uses X-ref of ^GMRD(120.52,"AA",VitalIEN,CategoryIEN,QName,QIEN)
"RTN","GMVRPCM",102,0)
 S GMVIT=+$P(DATA,";",1),GMVCAT=+$P(DATA,";",2)
"RTN","GMVRPCM",103,0)
 I '$D(^GMRD(120.53,GMVCAT,0)) S @RESULTS@(0)="-1^No such category" Q
"RTN","GMVRPCM",104,0)
 I $$ACTIVE^GMVUID(120.53,"",GMVCAT_",","") S @RESULTS@(0)="-1^Inactive category" Q
"RTN","GMVRPCM",105,0)
 I '$D(^GMRD(120.51,GMVIT,0)) S @RESULTS@(0)="-1^No such vital" Q
"RTN","GMVRPCM",106,0)
 I $$ACTIVE^GMVUID(120.51,"",GMVIT_",","") S @RESULTS@(0)="-1^Inactive vital type" Q
"RTN","GMVRPCM",107,0)
 S GMVNAM=""
"RTN","GMVRPCM",108,0)
 F  S GMVNAM=$O(^GMRD(120.52,"AA",GMVIT,GMVCAT,GMVNAM)) Q:GMVNAM=""  D
"RTN","GMVRPCM",109,0)
 .S GMVIEN=$O(^GMRD(120.52,"AA",GMVIT,GMVCAT,GMVNAM,0))  ; Assume only one of this name
"RTN","GMVRPCM",110,0)
 .Q:$$ACTIVE^GMVUID(120.52,"",GMVIEN_",","")
"RTN","GMVRPCM",111,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","GMVRPCM",112,0)
 .S @RESULTS@(Y)=GMVIEN_U_GMVNAM
"RTN","GMVRPCM",113,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_$P(^GMRD(120.53,GMVCAT,0),U)
"RTN","GMVRPCM",114,0)
 Q
"RTN","GMVRPCM",115,0)
GETTEMP ; [P] Get Template List
"RTN","GMVRPCM",116,0)
 I $G(DATA)]"" D
"RTN","GMVRPCM",117,0)
 .S GMVENT=$$ENTITY($P(DATA,U,1)),GMVNAME=$P(DATA,U,2)
"RTN","GMVRPCM",118,0)
 .I GMVNAME="" D
"RTN","GMVRPCM",119,0)
 ..D GETLST^XPAR(.GMVTMP,GMVENT,"GMV TEMPLATE")
"RTN","GMVRPCM",120,0)
 ..F X=0:0 S X=$O(GMVTMP(X)) Q:'X  D
"RTN","GMVRPCM",121,0)
 ...S GMV(GMVENT,$P(GMVTMP(X),U,1))=$P(GMVTMP(X),U,2,10)
"RTN","GMVRPCM",122,0)
 .I GMVNAME]"" S GMV(GMVENT,GMVNAME)=$$GET^XPAR(GMVENT,"GMV TEMPLATE",GMVNAME)
"RTN","GMVRPCM",123,0)
 I $G(DATA)="" D ENVAL^XPAR(.GMV,"GMV TEMPLATE")
"RTN","GMVRPCM",124,0)
 S GMVENT="",GMVNAME=""
"RTN","GMVRPCM",125,0)
 F  S GMVENT=$O(GMV(GMVENT)) Q:GMVENT=""  D
"RTN","GMVRPCM",126,0)
 .S GMVROOT=$P(GMVENT,";",2),GMVTYPE=$$TYPE(GMVROOT),GMVIEN=+GMVENT
"RTN","GMVRPCM",127,0)
 .Q:GMVTYPE=0  ;unknown template type
"RTN","GMVRPCM",128,0)
 .Q:GMVROOT="VA(200,"&('$$GET^XPAR("SYS","GMV ALLOW USER TEMPLATES"))
"RTN","GMVRPCM",129,0)
 .I GMVROOT="VA(200,"&(GMVIEN'=DUZ) Q:'$D(^XUSEC("GMV MANAGER",DUZ))
"RTN","GMVRPCM",130,0)
 .F  S GMVNAME=$O(GMV(GMVENT,GMVNAME)) Q:GMVNAME=""  D
"RTN","GMVRPCM",131,0)
 ..S GMVOWNER=$P($G(@(U_GMVROOT_(+GMVIEN)_",0)"),"Unk"),U)
"RTN","GMVRPCM",132,0)
 ..S Y=$O(@RESULTS@(""),-1)+1
"RTN","GMVRPCM",133,0)
 ..S @RESULTS@(Y)=GMVTYPE_U_GMVENT_U_GMVOWNER_U_GMVNAME_U_GMV(GMVENT,GMVNAME)
"RTN","GMVRPCM",134,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",135,0)
 Q
"RTN","GMVRPCM",136,0)
LOOKUP ; [P] Does a lookup on a file
"RTN","GMVRPCM",137,0)
 N GMVSCRN
"RTN","GMVRPCM",138,0)
 S GMVSCRN=$S(+DATA=44:"I "_"""^C^W^"""_"[$P(^(0),U,3)",1:"")
"RTN","GMVRPCM",139,0)
 I $P(DATA,"^",3)="" S GMVFLD="@;.01"
"RTN","GMVRPCM",140,0)
 E  S GMVFLD="@;"_$P(DATA,"^",3)
"RTN","GMVRPCM",141,0)
 S GMVFLD=$P(GMVFLD,";",1,5) ; Limit lookup to 4 display fields
"RTN","GMVRPCM",142,0)
 D FIND^DIC(+DATA,"",GMVFLD,"P",$P(DATA,"^",2),61,,GMVSCRN)
"RTN","GMVRPCM",143,0)
 I ^TMP("DILIST",$J,0)<1 D  Q
"RTN","GMVRPCM",144,0)
 .S @RESULTS@(0)="-1^No entries found matching '"_$P(DATA,U,2)_"'."
"RTN","GMVRPCM",145,0)
 I ^TMP("DILIST",$J,0)>60 D  Q
"RTN","GMVRPCM",146,0)
 .S @RESULTS@(0)="-1^Too many matches found, please be more specific."
"RTN","GMVRPCM",147,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  D
"RTN","GMVRPCM",148,0)
 .S @RESULTS@(X)=+DATA_";"_^TMP("DILIST",$J,X,0)
"RTN","GMVRPCM",149,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",150,0)
 Q
"RTN","GMVRPCM",151,0)
NEWQUAL ; [P] Create New Qualifier
"RTN","GMVRPCM",152,0)
 S @RESULTS@(0)="-1^Use the New Term Rapid Turnaround (NTRT) process to add qualifiers"
"RTN","GMVRPCM",153,0)
 Q
"RTN","GMVRPCM",154,0)
NEWTEMP ; [P] New Template
"RTN","GMVRPCM",155,0)
 S GMVENT=$P(DATA,"^",1),GMVNAME=$P(DATA,"^",2),GMVDESC=$P(DATA,"^",3)
"RTN","GMVRPCM",156,0)
 S GMVENT=$$ENTITY(GMVENT)
"RTN","GMVRPCM",157,0)
 S GMVTYPE=$$TYPE($P(GMVENT,";",2))
"RTN","GMVRPCM",158,0)
 S GMVOWN=$P($G(@(U_$P(GMVENT,";",2)_+GMVENT_",0)"),"Unk"),U)
"RTN","GMVRPCM",159,0)
 S:GMVDESC="" GMVDESC="No Description"
"RTN","GMVRPCM",160,0)
 D ADD^XPAR(GMVENT,"GMV TEMPLATE",GMVNAME,GMVDESC,.GMVERR)
"RTN","GMVRPCM",161,0)
 I 'GMVERR S @RESULTS@(0)=GMVTYPE_U_GMVENT_U_GMVOWN_U_GMVNAME
"RTN","GMVRPCM",162,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCM",163,0)
 Q
"RTN","GMVRPCM",164,0)
RENTEMP ; [P] Rename a Template
"RTN","GMVRPCM",165,0)
 S GMVENT=$P(DATA,U,1),GMVOLD=$P(DATA,U,2),GMVNEW=$P(DATA,U,3)
"RTN","GMVRPCM",166,0)
 D REP^XPAR(GMVENT,"GMV TEMPLATE",GMVOLD,GMVNEW,.GMVERR)
"RTN","GMVRPCM",167,0)
 I 'GMVERR S @RESULTS@(0)="1^Renamed"
"RTN","GMVRPCM",168,0)
 E  S @RESULTS@(0)="-1^"_GMVERR Q
"RTN","GMVRPCM",169,0)
 ; Reset default template if this was a default template
"RTN","GMVRPCM",170,0)
 D:$$GET^XPAR(GMVENT,"GMV TEMPLATE DEFAULT")=GMVOLD
"RTN","GMVRPCM",171,0)
 .D EN^XPAR(GMVENT,"GMV TEMPLATE DEFAULT",1,GMVNEW)
"RTN","GMVRPCM",172,0)
 Q
"RTN","GMVRPCM",173,0)
RPC(RESULTS,OPTION,DATA) ; [Procedure] Main RPC call tag
"RTN","GMVRPCM",174,0)
 ; RPC: [GMV MANAGER]
"RTN","GMVRPCM",175,0)
 ;
"RTN","GMVRPCM",176,0)
 ; Input parameters
"RTN","GMVRPCM",177,0)
 ;  1. RESULTS [Reference/Required] RPC Return array
"RTN","GMVRPCM",178,0)
 ;  2. OPTION [Literal/Required] RPC Option to execute
"RTN","GMVRPCM",179,0)
 ;  3. DATA [Literal/Required] Other data as required for call
"RTN","GMVRPCM",180,0)
 ;
"RTN","GMVRPCM",181,0)
 N GMV,GMVCAT,GMVDESC,GMVENT,GMVERR,GMVFDA,GMVFLD,GMVIEN,GMVIT,GMVNAM,GMVNAME,GMVNEW,GMVOLD,GMVOWN,GMVOWNER,GMVQUAL,GMVROOT,GMVTYPE,GMVVAL,GMVVIT,GMVSCRN
"RTN","GMVRPCM",182,0)
 S RESULTS=$NA(^TMP("GMVMGR",$J)) K @RESULTS
"RTN","GMVRPCM",183,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","GMVRPCM",184,0)
 S:'$D(@RESULTS) @RESULTS@(0)="-1^No results returned"
"RTN","GMVRPCM",185,0)
 D CLEAN^DILF
"RTN","GMVRPCM",186,0)
 Q
"RTN","GMVRPCM",187,0)
SETDATA ; [P] Save New Qualifier Name/Abbv
"RTN","GMVRPCM",188,0)
 S @RESULTS@(0)="-1^Use the New Term Rapid Turnaround (NTRT) process to add qualifiers"
"RTN","GMVRPCM",189,0)
 Q
"RTN","GMVRPCM",190,0)
SETDEF ; [P] Set Default Template
"RTN","GMVRPCM",191,0)
 D EN^XPAR($P(DATA,U),"GMV TEMPLATE DEFAULT",1,$P(DATA,U,2),.GMVERR)
"RTN","GMVRPCM",192,0)
 I '$G(GMVERR) S @RESULTS@(0)="1^Set As Default."
"RTN","GMVRPCM",193,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCM",194,0)
 Q
"RTN","GMVRPCM",195,0)
SETHILO ; [P] Set abnormal value
"RTN","GMVRPCM",196,0)
 L +(^GMRD(120.57,0)):5
"RTN","GMVRPCM",197,0)
 E  S @RESULTS@(0)="-1^Site File In Use." Q
"RTN","GMVRPCM",198,0)
 S GMVFLD=$P(DATA,"^",1),GMVVAL=$P(DATA,"^",2)
"RTN","GMVRPCM",199,0)
 S GMVFDA(120.57,"1,",GMVFLD)=GMVVAL
"RTN","GMVRPCM",200,0)
 D FILE^DIE("","GMVFDA","GMVERR")
"RTN","GMVRPCM",201,0)
 L -(^GMRD(120.57,0))
"RTN","GMVRPCM",202,0)
 S @RESULTS@(0)="1^Update Complete."
"RTN","GMVRPCM",203,0)
 Q
"RTN","GMVRPCM",204,0)
SETTEMP ; [P] Set Template data
"RTN","GMVRPCM",205,0)
 D EN^XPAR($P(DATA,U),"GMV TEMPLATE",$P(DATA,U,2),$P(DATA,U,3),.GMVERR)
"RTN","GMVRPCM",206,0)
 I '$G(GMVERR) S @RESULTS@(0)="1^Template Saved."
"RTN","GMVRPCM",207,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCM",208,0)
 Q
"RTN","GMVRPCM",209,0)
VALID ; [P] Verify data validity against fileman
"RTN","GMVRPCM",210,0)
 D VAL^DIE($P(DATA,U,1),$P(DATA,U,2),$P(DATA,U,3),"H",$P(DATA,U,4),.GMVRET)
"RTN","GMVRPCM",211,0)
 I GMVRET'="^" S @RESULTS@(0)="1^Valid Data"
"RTN","GMVRPCM",212,0)
 E  S @RESULTS@(0)="-1^"_^TMP("DIERR",$J,1,"TEXT",1)
"RTN","GMVRPCM",213,0)
 Q
"RTN","GMVRPCM",214,0)
ENTITY(X) ; [Function] Convert USR, SYS, and DIV entities
"RTN","GMVRPCM",215,0)
 ; Input parameters
"RTN","GMVRPCM",216,0)
 ;  1. X [Literal/Required] XPAR generic entity to transform to variable pointer format
"RTN","GMVRPCM",217,0)
 ;
"RTN","GMVRPCM",218,0)
 Q:X="USR" DUZ_";VA(200,"
"RTN","GMVRPCM",219,0)
 Q:X="SYS" $$FIND1^DIC(4.2,"","QX",$$KSP^XUPARAM("WHERE"))_";DIC(4.2,"
"RTN","GMVRPCM",220,0)
 Q:X="DIV" DUZ(2)_";DIC(4,"
"RTN","GMVRPCM",221,0)
 Q X
"RTN","GMVRPCM",222,0)
 ;
"RTN","GMVRPCM",223,0)
TYPE(X) ; [F] Returns the type of template
"RTN","GMVRPCM",224,0)
 ; Input parameters
"RTN","GMVRPCM",225,0)
 ;  1. X [Literal/Required] Variable pointer to evaluate
"RTN","GMVRPCM",226,0)
 ;
"RTN","GMVRPCM",227,0)
 Q:X="DIC(4.2," 1 ;Domain
"RTN","GMVRPCM",228,0)
 Q:X="DIC(4," 2 ;  Institution
"RTN","GMVRPCM",229,0)
 Q:X="SC(" 3 ;     Hospital Location
"RTN","GMVRPCM",230,0)
 Q:X="VA(200," 4 ; New Person
"RTN","GMVRPCM",231,0)
 Q 0 ;             Unknown
"RTN","GMVRPCM",232,0)
 ;
"RTN","GMVRPCM",233,0)
VT ;VitalTypeIENS
"RTN","GMVRPCM",234,0)
 N X,Y,Z
"RTN","GMVRPCM",235,0)
 S Y=0,@RESULTS@(0)="-1"
"RTN","GMVRPCM",236,0)
 F X="T","P","R","BP","HT","WT","PN","PO2","CVP","CG" D
"RTN","GMVRPCM",237,0)
 .S Z=$O(^GMRD(120.51,"C",X,0))
"RTN","GMVRPCM",238,0)
 .Q:'Z
"RTN","GMVRPCM",239,0)
 .S Y=Y+1,@RESULTS@(Y)=Z
"RTN","GMVRPCM",240,0)
 Q
"VER")
8.0^22.0
"BLD",5728,6)
^SEQ #8
**END**
**END**
