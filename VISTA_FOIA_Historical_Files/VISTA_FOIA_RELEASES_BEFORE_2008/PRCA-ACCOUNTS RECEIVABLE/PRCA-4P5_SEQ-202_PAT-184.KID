Released PRCA*4.5*184 SEQ #202
Extracted from mail message
**KIDS**:PRCA*4.5*184^

**INSTALL NAME**
PRCA*4.5*184
"BLD",4377,0)
PRCA*4.5*184^ACCOUNTS RECEIVABLE^0^3050609^y
"BLD",4377,1,0)
^^6^6^3050511^^^^
"BLD",4377,1,1,0)
This patch fixes the problem of setting the correct fiscal year for the 
"BLD",4377,1,2,0)
first few days of the new FY that fall in September. This patch also sets
"BLD",4377,1,3,0)
the beginning Fiscal Year (BFY) for all 528701 - 528710 transactions
"BLD",4377,1,4,0)
to "05".  This will be the BFY for all 5287 funds regardless or the FY.
"BLD",4377,1,5,0)
This patch also fixes the reversal date for the Account Receivable End
"BLD",4377,1,6,0)
of Accounting Month processing and some misc. documentation changes.
"BLD",4377,4,0)
^9.64PA^^
"BLD",4377,"ABPKG")
n
"BLD",4377,"KRN",0)
^9.67PA^8989.52^19
"BLD",4377,"KRN",.4,0)
.4
"BLD",4377,"KRN",.4,"NM",0)
^9.68A^^
"BLD",4377,"KRN",.401,0)
.401
"BLD",4377,"KRN",.401,"NM",0)
^9.68A^^
"BLD",4377,"KRN",.402,0)
.402
"BLD",4377,"KRN",.403,0)
.403
"BLD",4377,"KRN",.5,0)
.5
"BLD",4377,"KRN",.84,0)
.84
"BLD",4377,"KRN",3.6,0)
3.6
"BLD",4377,"KRN",3.8,0)
3.8
"BLD",4377,"KRN",9.2,0)
9.2
"BLD",4377,"KRN",9.8,0)
9.8
"BLD",4377,"KRN",9.8,"NM",0)
^9.68A^9^8
"BLD",4377,"KRN",9.8,"NM",1,0)
RCFN01^^0^B7441074
"BLD",4377,"KRN",9.8,"NM",3,0)
RCXFMSTX^^0^B25641570
"BLD",4377,"KRN",9.8,"NM",4,0)
RCXFMST1^^0^B40543326
"BLD",4377,"KRN",9.8,"NM",5,0)
RCXFMSSV^^0^B54145302
"BLD",4377,"KRN",9.8,"NM",6,0)
RCXFMSCR^^0^B30877287
"BLD",4377,"KRN",9.8,"NM",7,0)
PRCAFBD^^0^B15064352
"BLD",4377,"KRN",9.8,"NM",8,0)
RCXFMSWR^^0^B18298185
"BLD",4377,"KRN",9.8,"NM",9,0)
RCRJRBDE^^0^B12066139
"BLD",4377,"KRN",9.8,"NM","B","PRCAFBD",7)

"BLD",4377,"KRN",9.8,"NM","B","RCFN01",1)

"BLD",4377,"KRN",9.8,"NM","B","RCRJRBDE",9)

"BLD",4377,"KRN",9.8,"NM","B","RCXFMSCR",6)

"BLD",4377,"KRN",9.8,"NM","B","RCXFMSSV",5)

"BLD",4377,"KRN",9.8,"NM","B","RCXFMST1",4)

"BLD",4377,"KRN",9.8,"NM","B","RCXFMSTX",3)

"BLD",4377,"KRN",9.8,"NM","B","RCXFMSWR",8)

"BLD",4377,"KRN",19,0)
19
"BLD",4377,"KRN",19,"NM",0)
^9.68A^^
"BLD",4377,"KRN",19.1,0)
19.1
"BLD",4377,"KRN",101,0)
101
"BLD",4377,"KRN",409.61,0)
409.61
"BLD",4377,"KRN",771,0)
771
"BLD",4377,"KRN",870,0)
870
"BLD",4377,"KRN",8989.51,0)
8989.51
"BLD",4377,"KRN",8989.52,0)
8989.52
"BLD",4377,"KRN",8994,0)
8994
"BLD",4377,"KRN","B",.4,.4)

"BLD",4377,"KRN","B",.401,.401)

"BLD",4377,"KRN","B",.402,.402)

"BLD",4377,"KRN","B",.403,.403)

"BLD",4377,"KRN","B",.5,.5)

"BLD",4377,"KRN","B",.84,.84)

"BLD",4377,"KRN","B",3.6,3.6)

"BLD",4377,"KRN","B",3.8,3.8)

"BLD",4377,"KRN","B",9.2,9.2)

"BLD",4377,"KRN","B",9.8,9.8)

"BLD",4377,"KRN","B",19,19)

"BLD",4377,"KRN","B",19.1,19.1)

"BLD",4377,"KRN","B",101,101)

"BLD",4377,"KRN","B",409.61,409.61)

"BLD",4377,"KRN","B",771,771)

"BLD",4377,"KRN","B",870,870)

"BLD",4377,"KRN","B",8989.51,8989.51)

"BLD",4377,"KRN","B",8989.52,8989.52)

"BLD",4377,"KRN","B",8994,8994)

"BLD",4377,"QUES",0)
^9.62^^
"BLD",4377,"REQB",0)
^9.611^7^4
"BLD",4377,"REQB",1,0)
PRCA*4.5*104^1
"BLD",4377,"REQB",3,0)
PRCA*4.5*220^1
"BLD",4377,"REQB",5,0)
PRCA*4.5*138^1
"BLD",4377,"REQB",7,0)
PRCA*4.5*191^1
"BLD",4377,"REQB","B","PRCA*4.5*104",1)

"BLD",4377,"REQB","B","PRCA*4.5*138",5)

"BLD",4377,"REQB","B","PRCA*4.5*191",7)

"BLD",4377,"REQB","B","PRCA*4.5*220",3)

"MBREQ")
0
"PKG",142,-1)
1^1
"PKG",142,0)
ACCOUNTS RECEIVABLE^PRCA^BILL COLLECTIONS
"PKG",142,20,0)
^9.402P^1^1
"PKG",142,20,1,0)
2^^PRCAMRG
"PKG",142,20,1,1)

"PKG",142,20,"B",2,1)

"PKG",142,22,0)
^9.49I^1^1
"PKG",142,22,1,0)
4.5^^2950320
"PKG",142,22,1,"PAH",1,0)
184^3050609
"PKG",142,22,1,"PAH",1,1,0)
^^6^6^3050609
"PKG",142,22,1,"PAH",1,1,1,0)
This patch fixes the problem of setting the correct fiscal year for the 
"PKG",142,22,1,"PAH",1,1,2,0)
first few days of the new FY that fall in September. This patch also sets
"PKG",142,22,1,"PAH",1,1,3,0)
the beginning Fiscal Year (BFY) for all 528701 - 528710 transactions
"PKG",142,22,1,"PAH",1,1,4,0)
to "05".  This will be the BFY for all 5287 funds regardless or the FY.
"PKG",142,22,1,"PAH",1,1,5,0)
This patch also fixes the reversal date for the Account Receivable End
"PKG",142,22,1,"PAH",1,1,6,0)
of Accounting Month processing and some misc. documentation changes.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","PRCAFBD")
0^7^B15064352
"RTN","PRCAFBD",1,0)
PRCAFBD ;WASH-ISC@ALTOONA,PA/CLH-Build FMS Billing Document ;8/2/95  3:14 PM
"RTN","PRCAFBD",2,0)
V ;;4.5;Accounts Receivable;**16,48,86,90,119,165,204,203,173,220,184**;Mar 20, 1995
"RTN","PRCAFBD",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCAFBD",4,0)
EN(BILL,ERR) ;Process NEW BILL to FMS
"RTN","PRCAFBD",5,0)
 S ERR=-1
"RTN","PRCAFBD",6,0)
 Q:$D(RCONVERT)
"RTN","PRCAFBD",7,0)
 I '$D(^PRCA(430,BILL,11)) S ERR="1^ACCOUNTING INFORMATION MISSING.  CANNOT PROCESS BILL" Q
"RTN","PRCAFBD",8,0)
 ;
"RTN","PRCAFBD",9,0)
 ;  funds 5014 (old), 2431 (old), 528701,03,04,09 and 4032 should not create a BD
"RTN","PRCAFBD",10,0)
 S %=$P($G(^PRCA(430,BILL,11)),"^",17)
"RTN","PRCAFBD",11,0)
 I %=5014!(%=2431)!(%=4032) Q
"RTN","PRCAFBD",12,0)
 I %[5287 Q:$$PTACCT^PRCAACC(%)
"RTN","PRCAFBD",13,0)
 ;
"RTN","PRCAFBD",14,0)
 I '$D(PRCA("SITE")) S PRCA("SITE")=$S($G(BILL):$P($P($G(^PRCA(430,BILL,0)),"^"),"-"),1:$$SITE^RCMSITE)
"RTN","PRCAFBD",15,0)
 K ^TMP("PRCABD",$J)
"RTN","PRCAFBD",16,0)
 I $G(BILL)="" S ERR="1^Missing Bill Number"
"RTN","PRCAFBD",17,0)
 I $D(^PRCA(430,BILL,0)),$P(^(0),U,9)="" S ERR="1^No debtor for bill" Q
"RTN","PRCAFBD",18,0)
 N GECSFMS,REC,REC11,VENCODE,BFY,EFY,LINEFUND,%,%I,%H,X,VEN,CAT,CP,ADDR,AC,RJ,FMSNUM,FMSNUM1,VENDORID,ADD,DA,Y
"RTN","PRCAFBD",19,0)
 D NOW^%DTC
"RTN","PRCAFBD",20,0)
 I '$G(PRCA("AUTO_AUDIT")) W !,"Building FMS Billing Document. Please hold...",!
"RTN","PRCAFBD",21,0)
 S REC=$G(^PRCA(430,BILL,0)),REC11=$G(^PRCA(430,BILL,11)),FMSNUM=$P($P(REC,U),"-")_$P($P(REC,U),"-",2)
"RTN","PRCAFBD",22,0)
 ;gather vendor information
"RTN","PRCAFBD",23,0)
 S VENCODE=$$VENDORID^RCXFMSUV(BILL)
"RTN","PRCAFBD",24,0)
 I VENCODE="UNKNOWN" S ERR="1^Need FMS Vendor ID for BD Document" Q
"RTN","PRCAFBD",25,0)
 I VENCODE="LINK" S ERR="1^Debtor must be linked to vendor file" Q
"RTN","PRCAFBD",26,0)
 S ADD=$$SADD^RCFN01(5)
"RTN","PRCAFBD",27,0)
 I (VENCODE="PERSONOTH")!(VENCODE="XEMPL")!(VENCODE="CUREMPL")!($E(VENCODE,1,4)="CHMP")!($E(VENCODE,1,3)="TRI")!(VENCODE="INELIG") D
"RTN","PRCAFBD",28,0)
  . N I F I=1:1:6 S ADDR(I)=$P(ADD,U,I)
"RTN","PRCAFBD",29,0)
  . I ADDR(6)["-" S ADDR(7)=$P(ADDR(6),"-",2),ADDR(6)=$P(ADDR(6),"-")
"RTN","PRCAFBD",30,0)
  . Q
"RTN","PRCAFBD",31,0)
 N FMSDT S FMSDT=$$FMSDATE^RCBEUTRA(DT)
"RTN","PRCAFBD",32,0)
 S ^TMP("PRCABD",$J,1)="BD2^"_$E(FMSDT,4,5)_U_$E(FMSDT,6,7)_U_$E(FMSDT,2,3)_"^^^^^^E^"_$E(VENCODE,1,9)_U_$E(VENCODE,10,11)_U_$J($P(REC,U,3),0,2)_"^^^^"_$E($G(ADDR(1)),1,30)_U_$E($G(ADDR(2)),1,30)_U_$E($G(ADDR(3)),1,30)
"RTN","PRCAFBD",33,0)
 S ^TMP("PRCABD",$J,1)=^TMP("PRCABD",$J,1)_U_$E($G(ADDR(4)),1,19)_U_$G(ADDR(5))_U_$G(ADDR(6))_U_$G(ADDR(7))_"^N^^^^^^W^~"
"RTN","PRCAFBD",34,0)
 S ^TMP("PRCABD",$J,2)="LIN^~"
"RTN","PRCAFBD",35,0)
 ;accouting information - stored on 11th node file 430
"RTN","PRCAFBD",36,0)
 S ^TMP("PRCABD",$J,3)="BDA^"_$$LINE^RCXFMSC1(BILL)_"^"_$P(REC11,U,15)_U_$P(REC11,U,16)_U_$P(REC11,U,17)_U_$P(REC11,U,8)_U_$P(REC11,U,11)_U_$P(REC11,U,20)_U_$P(REC11,U,6)_U_$P(REC11,U,7)_U_$P(REC11,U,21)_U_$P(REC11,U,5)
"RTN","PRCAFBD",37,0)
 S ^TMP("PRCABD",$J,3)=^TMP("PRCABD",$J,3)_U_$P(REC11,U,12)_U_$P(REC11,U,14)_"^^"_$J($P(REC,U,3),0,2)_"^I^AR_INTERFACE^^^^"
"RTN","PRCAFBD",38,0)
 S ^TMP("PRCABD",$J,3)=^TMP("PRCABD",$J,3)_$P(REC11,U,10)_"^^^^^^^^"_$P(REC11,U,2)_U_$P(REC11,U,3)_"^~"
"RTN","PRCAFBD",39,0)
 I $E($P(REC11,U,17),1,4)=5287 S $P(^TMP("PRCABD",$J,3),U,3)="05"
"RTN","PRCAFBD",40,0)
 ;build control segment
"RTN","PRCAFBD",41,0)
 D CONTROL^GECSUFMS("A",PRCA("SITE"),FMSNUM,"BD",10,"","","Billing Document")
"RTN","PRCAFBD",42,0)
 S FMSNUM1=$P($G(GECSFMS("DOC")),U,3)_"-"_$P($G(GECSFMS("DOC")),U,4)
"RTN","PRCAFBD",43,0)
 ;build and send document to FTH
"RTN","PRCAFBD",44,0)
 S DA=0 F  S DA=$O(^TMP("PRCABD",$J,DA)) Q:'DA  D SETCS^GECSSTAA(GECSFMS("DA"),^(DA))
"RTN","PRCAFBD",45,0)
 D OPEN^RCFMDRV1(FMSNUM1,6,"B"_BILL,.ENT,.ERR,BILL) I ERR]"" D
"RTN","PRCAFBD",46,0)
 . S ERR=-1
"RTN","PRCAFBD",47,0)
 . N Z S Z="Unable to create an entry in AR Document file."
"RTN","PRCAFBD",48,0)
 . I '$G(PRCA("AUTO_AUDIT")) W !!,Z,! Q
"RTN","PRCAFBD",49,0)
 . D SETERR^PRCAUDT("BILL: "_$$BILL^PRCAUDT(BILL)),SETERR^PRCAUDT(Z)
"RTN","PRCAFBD",50,0)
 D SETCODE^GECSSDCT(GECSFMS("DA"),"D RETN^RCFMFN02")
"RTN","PRCAFBD",51,0)
 D SETSTAT^GECSSTAA(GECSFMS("DA"),"Q")
"RTN","PRCAFBD",52,0)
 D SSTAT^RCFMFN02(FMSNUM1,1)
"RTN","PRCAFBD",53,0)
 I '$G(PRCA("AUTO_AUDIT")) D
"RTN","PRCAFBD",54,0)
 . S Y=FMSDT D DD^%DT
"RTN","PRCAFBD",55,0)
 . W !!,"FMS document, # ",GECSFMS("DA"),", built and queued for transmission on "_Y,!!
"RTN","PRCAFBD",56,0)
 Q
"RTN","PRCAFBD",57,0)
 ;
"RTN","RCFN01")
0^1^B7441074
"RTN","RCFN01",1,0)
RCFN01 ;WASH-ISC@ALTOONA,PA/RGY-MISCELLANEOUS AR FUNCTIONS ;4/30/96  9:06 AM
"RTN","RCFN01",2,0)
V ;;4.5;Accounts Receivable;**39,65,104,184**;Mar 20, 1995
"RTN","RCFN01",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCFN01",4,0)
SSN(DEBT) ;Get SSN for debtor
"RTN","RCFN01",5,0)
 ;Input Debtor (340)
"RTN","RCFN01",6,0)
 ;Output: SSN # or null
"RTN","RCFN01",7,0)
 NEW Y
"RTN","RCFN01",8,0)
 S Y=-1 G:'$G(DEBT) Q1
"RTN","RCFN01",9,0)
 S:DEBT?1N.N DEBT=$P($G(^RCD(340,DEBT,0)),"^")
"RTN","RCFN01",10,0)
 I DEBT[";DPT(" S Y=$P($G(^DPT(+DEBT,0)),"^",9)
"RTN","RCFN01",11,0)
 I DEBT[";VA(200," S Y=$P($G(^VA(200,+DEBT,1)),"^",9)
"RTN","RCFN01",12,0)
Q1 Q Y
"RTN","RCFN01",13,0)
SADD(TYPE) ;Get AR Group address
"RTN","RCFN01",14,0)
 ;Input Type of Address (342.1)
"RTN","RCFN01",15,0)
 ;Output: Str1^Str2^Str3^City^State^Zip^Phone
"RTN","RCFN01",16,0)
 NEW X
"RTN","RCFN01",17,0)
 S X="" G:$G(TYPE)="" Q2 I ",1,2,3,4,5,8,"'[(","_TYPE_","),TYPE'?1N.N1";RC(342.1," G Q2
"RTN","RCFN01",18,0)
 I TYPE?1N.N S TYPE=$O(^RC(342.1,"AC",TYPE,0)) G:TYPE="" Q2 S TYPE=TYPE_";RC(342.1,"
"RTN","RCFN01",19,0)
 S X=$P($G(^RC(342.1,+TYPE,1)),"^",1,8)
"RTN","RCFN01",20,0)
 S:$P(X,"^",5) $P(X,"^",5)=$P($G(^DIC(5,+$P(X,"^",5),0)),"^",2) S:$P(X,"^",6)?9N $P(X,"^",6)=$E($P(X,"^",6),1,5)_"-"_$E($P(X,"^",6),6,9)
"RTN","RCFN01",21,0)
Q2 Q X
"RTN","RCFN01",22,0)
NAM(DEBT) ;Get DEBTOR name
"RTN","RCFN01",23,0)
 NEW Y
"RTN","RCFN01",24,0)
 S Y="" G:'$G(DEBT) Q3
"RTN","RCFN01",25,0)
 S:DEBT?1N.N DEBT=$P($G(^RCD(340,DEBT,0)),"^") G:DEBT="" Q3
"RTN","RCFN01",26,0)
 S Y=$P($G(@("^"_$P(DEBT,";",2)_(+DEBT)_",0)")),"^")
"RTN","RCFN01",27,0)
Q3 Q Y
"RTN","RCFN01",28,0)
LST(DEBT,TYPE) ;Get last type of event for debtor
"RTN","RCFN01",29,0)
 NEW Y
"RTN","RCFN01",30,0)
 S Y=-1 G:'$G(DEBT)!'$G(TYPE) Q4
"RTN","RCFN01",31,0)
 S:DEBT?1N.N1";"1A.A1"(" DEBT=$O(^RCD(340,"B",DEBT,0))
"RTN","RCFN01",32,0)
 S TYPE=+$O(^RC(341.1,"AC",TYPE,0))
"RTN","RCFN01",33,0)
 S Y=+$O(^RC(341,"AD",DEBT,TYPE,0)) I 'Y S Y=-1 G Q4
"RTN","RCFN01",34,0)
 S Y=9999999.999999-Y_"^"_$O(^RC(341,"AD",DEBT,TYPE,Y,0))
"RTN","RCFN01",35,0)
Q4 Q Y
"RTN","RCFN01",36,0)
DET(DEBT) ;Return type of detail for RX info
"RTN","RCFN01",37,0)
 NEW Y
"RTN","RCFN01",38,0)
 S Y=$S($P($G(^RC(342,1,0)),"^",5):$P(^(0),"^",5),1:1) G:'$G(DEBT) Q5
"RTN","RCFN01",39,0)
 S:DEBT?1N.N1";"1A.A1"(" DEBT=$O(^RCD(340,"B",DEBT,""))
"RTN","RCFN01",40,0)
 I $P($G(^RCD(340,DEBT,0)),"^",2) S Y=$P(^(0),"^",2)
"RTN","RCFN01",41,0)
Q5 Q Y
"RTN","RCFN01",42,0)
SLH(DATE,DEL) ;Return date format of mm/dd/yyyy
"RTN","RCFN01",43,0)
 NEW %DT,X,Y,YR
"RTN","RCFN01",44,0)
 S X=$G(DATE),DEL=$S($G(DEL)="":"/",1:DEL),%DT="T" D ^%DT S DATE=Y S:Y<0 DATE="0000000"
"RTN","RCFN01",45,0)
 S YR=$E(($E(DATE,1,3)+1700),1,2)
"RTN","RCFN01",46,0)
Q6 Q $E(DATE,4,5)_DEL_$E(DATE,6,7)_DEL_$G(YR)_$E(DATE,2,3)
"RTN","RCFN01",47,0)
ARPS(BN,DA) ;Determines the purge status of a bill
"RTN","RCFN01",48,0)
 ;Input: Bill no. (BN) and file 442 record IEN (DA)
"RTN","RCFN01",49,0)
 ;Output: Value of 1 (purge) or 0 (don't purge)
"RTN","RCFN01",50,0)
 NEW X,Y
"RTN","RCFN01",51,0)
 I $G(BN)=""!($G(DA)="") Q 0
"RTN","RCFN01",52,0)
 I '$D(^PRCA(430,"B",BN)),'$D(^PRCA(430,"F",DA)) Q 1
"RTN","RCFN01",53,0)
 I $D(^PRCA(430,"B",BN)) S X=+$O(^(BN,0)) I X>0,$D(^PRCA(430.3,"AC",115,+$P(^PRCA(430,X,0),U,8))) Q 1
"RTN","RCFN01",54,0)
 I $D(^PRCA(430,"F",DA)) S Y=+$O(^(DA,0)) I Y>0,$D(^PRCA(430.3,"AC",115,+$P(^PRCA(430,Y,0),U,8))) Q 1
"RTN","RCFN01",55,0)
 Q 0
"RTN","RCFN01",56,0)
FY(DATE) ;Return FY for date, DT is default
"RTN","RCFN01",57,0)
 NEW FY
"RTN","RCFN01",58,0)
 S:$G(DATE)'?7N.E DATE=DT
"RTN","RCFN01",59,0)
 S FY=$E(DATE,2,3) S:$E(DATE,4,5)>9 FY=FY+1 S:FY=100 FY="00"
"RTN","RCFN01",60,0)
 I +$E(DATE,4,5)=9 D
"RTN","RCFN01",61,0)
 .I $E(DATE,6,7)>$E($$LDATE^RCRJR(DATE),6,7) S FY=FY+1
"RTN","RCFN01",62,0)
 .Q
"RTN","RCFN01",63,0)
 S:$L(FY)<2 FY="0"_FY
"RTN","RCFN01",64,0)
 Q FY
"RTN","RCFN01",65,0)
 ;
"RTN","RCFN01",66,0)
INTEG(SITE) ;integrated site
"RTN","RCFN01",67,0)
 N X
"RTN","RCFN01",68,0)
 S X=+$P($G(^RC(342,1,6)),U)
"RTN","RCFN01",69,0)
 Q X
"RTN","RCFN01",70,0)
 ;
"RTN","RCRJRBDE")
0^9^B12066139
"RTN","RCRJRBDE",1,0)
RCRJRBDE ;WISC/RFJ,TJK-bad debt edit the report ;1 Feb 98
"RTN","RCRJRBDE",2,0)
 ;;4.5;Accounts Receivable;**101,191,184**;Mar 20, 1995
"RTN","RCRJRBDE",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRBDE",4,0)
 Q
"RTN","RCRJRBDE",5,0)
 ;
"RTN","RCRJRBDE",6,0)
 ;
"RTN","RCRJRBDE",7,0)
EDIT ;  over-ride values, called from menu option
"RTN","RCRJRBDE",8,0)
 W !!,"This option will allow you to over-ride the current month allowance"
"RTN","RCRJRBDE",9,0)
 W !,"estimate for the Bad Debt Report.  If you change the allowance estimate,"
"RTN","RCRJRBDE",10,0)
 W !,"it will change the value sent to FMS (on the last workday of the month).",!
"RTN","RCRJRBDE",11,0)
 ;
"RTN","RCRJRBDE",12,0)
 N DIR,X,Y
"RTN","RCRJRBDE",13,0)
 ;I $E(DT,6,7)'<$$WD3^RCRJRBD D  Q
"RTN","RCRJRBDE",14,0)
 I $E(DT,6,7)<$E($$LDATE^RCRJR(DT)+1,6,7)!($E(DT,6,7)'<$E($$LDAY^RCRJR(DT),6,7)) D  Q
"RTN","RCRJRBDE",15,0)
 .   W !,"The Bad Debt Report is submitted to FMS on the next to last workday of the"
"RTN","RCRJRBDE",16,0)
 .   W !,"month.  You can only use this option to change the data from the day"
"RTN","RCRJRBDE",17,0)
 .   W !,"after the EOAM cut off date to the next to last workday of the month."
"RTN","RCRJRBDE",18,0)
 .   ;  ask to print report
"RTN","RCRJRBDE",19,0)
 .   S DIR(0)="YO",DIR("B")="NO"
"RTN","RCRJRBDE",20,0)
 .   S DIR("A")="  Do you want to print the report for last month"
"RTN","RCRJRBDE",21,0)
 .   W ! D ^DIR
"RTN","RCRJRBDE",22,0)
 .   I Y=1 D PRINT^RCRJRBDR
"RTN","RCRJRBDE",23,0)
 ;
"RTN","RCRJRBDE",24,0)
 N CHANGED,D,D0,DA,DATA,DI,DIC,DIE,DQ,DR,RCRJALLO,RCRJFEND,X,Y
"RTN","RCRJRBDE",25,0)
 F  D  Q:$G(RCRJFEND)
"RTN","RCRJRBDE",26,0)
 .   ;  check to see if report is running
"RTN","RCRJRBDE",27,0)
 .   L +^RC(348.1):5
"RTN","RCRJRBDE",28,0)
 .   I '$T W !,"The Bad Debt Report is currently running or being edit by another user.",!,"Try again later." S RCRJFEND=1 Q
"RTN","RCRJRBDE",29,0)
 .   ;
"RTN","RCRJRBDE",30,0)
 .   S (DIC,DIE)="^RC(348.1,",DIC(0)="QEAM"
"RTN","RCRJRBDE",31,0)
 .   W ! D ^DIC
"RTN","RCRJRBDE",32,0)
 .   I Y<1 L -^RC(348.1) S RCRJFEND=1 Q
"RTN","RCRJRBDE",33,0)
 .   S DA=+Y
"RTN","RCRJRBDE",34,0)
 .   ;  store current estimate allowance and show report
"RTN","RCRJRBDE",35,0)
 .   S RCRJALLO=+$P(^RC(348.1,+Y,0),"^",8)
"RTN","RCRJRBDE",36,0)
 .   W !!?20,"This what the CURRENT report looks like:"
"RTN","RCRJRBDE",37,0)
 .   W !?20,"========================================"
"RTN","RCRJRBDE",38,0)
 .   D SHOW(DA)
"RTN","RCRJRBDE",39,0)
 .   W !!,"You now have the option to over-ride the estimated allowance:"
"RTN","RCRJRBDE",40,0)
 .   S DR=".08;" D ^DIE
"RTN","RCRJRBDE",41,0)
 .   L -^RC(348.1)
"RTN","RCRJRBDE",42,0)
 .   ;  no changes to data
"RTN","RCRJRBDE",43,0)
 .   I +$P(^RC(348.1,DA,0),"^",8)=RCRJALLO W "...No changes made." Q
"RTN","RCRJRBDE",44,0)
 .   ;  set flag to show changes made
"RTN","RCRJRBDE",45,0)
 .   S DR=".1////1;" D ^DIE
"RTN","RCRJRBDE",46,0)
 .   ;  show new report
"RTN","RCRJRBDE",47,0)
 .   W !!?20,"This is what the NEW report looks like:"
"RTN","RCRJRBDE",48,0)
 .   W !?20,"======================================="
"RTN","RCRJRBDE",49,0)
 .   D SHOW(DA)
"RTN","RCRJRBDE",50,0)
 Q
"RTN","RCRJRBDE",51,0)
 ;
"RTN","RCRJRBDE",52,0)
 ;
"RTN","RCRJRBDE",53,0)
SHOW(DA) ;  show the values for entry
"RTN","RCRJRBDE",54,0)
 S DATA=$G(^RC(348.1,DA,0))
"RTN","RCRJRBDE",55,0)
 W !!,"Allowance for Bad Debt - SGL ",$P(DATA,"^"),":"
"RTN","RCRJRBDE",56,0)
 W !,"----------------------------------------------------"
"RTN","RCRJRBDE",57,0)
 S CHANGED="  " I $P(DATA,"^",10) S CHANGED="**"
"RTN","RCRJRBDE",58,0)
 W !,"Allowance Estimate for Month",?35,":",$J($P(DATA,"^",8),16,2)," ",CHANGED," (Normally Credit Value)"
"RTN","RCRJRBDE",59,0)
 W !,"Bad Debt Write-Off FYTD (Plus)",?35,":",$J($P(DATA,"^",9),16,2),"    (Normally Debit Value )"
"RTN","RCRJRBDE",60,0)
 W !,"----------------------------------------------------"
"RTN","RCRJRBDE",61,0)
 W !,"Transmitted Amount to FMS for Month",?35,":",$J($P(DATA,"^",8)+$P(DATA,"^",9),16,2)," ",CHANGED," (Normally Credit Value)"
"RTN","RCRJRBDE",62,0)
 I $P(DATA,"^",10) W !?53,"**  Changed Locally"
"RTN","RCRJRBDE",63,0)
 Q
"RTN","RCXFMSCR")
0^6^B30877287
"RTN","RCXFMSCR",1,0)
RCXFMSCR ;WISC/RFJ-fms cash receipt (cr) code sheet generator ;1 Oct 97
"RTN","RCXFMSCR",2,0)
 ;;4.5;Accounts Receivable;**90,114,148,172,204,203,173,220,184**;Mar 20, 1995
"RTN","RCXFMSCR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCXFMSCR",4,0)
 Q
"RTN","RCXFMSCR",5,0)
 ;
"RTN","RCXFMSCR",6,0)
BUILDCR(RCRECTDA,RCGECSDA,RCEFT) ;  generate a cr/tr code sheet for a receipt
"RTN","RCXFMSCR",7,0)
 ;  rcgecsda is the ien for the gcs stack file 2100.1 for rebuilds
"RTN","RCXFMSCR",8,0)
 ;  rceft = 1 if processing CR for an EFT deposit (CR to rev src cd 8NZZ)
"RTN","RCXFMSCR",9,0)
 ;        = 2 if processing TR for the receipt detail relating to an EFT
"RTN","RCXFMSCR",10,0)
 ;              (TR from 528704/8NZZ to original fund/rsc)
"RTN","RCXFMSCR",11,0)
 ;
"RTN","RCXFMSCR",12,0)
 N AMOUNT,BILLDA,COUNT,CR2,DETAIL,DEPOSIT,DESCRIP,DOCTOTAL,FISCALYR,FMSTYPE,FUND,GECSFMS,LINE,RCDEPTDA,REVSRCE,TOTAL,TRANDA,TRANNUMB,UNAPPLY,UNAPPNUM,VENDORID,EFTDEP
"RTN","RCXFMSCR",13,0)
 ;
"RTN","RCXFMSCR",14,0)
 ;  build the lines for all payments on receipt
"RTN","RCXFMSCR",15,0)
 S RCEFT=+$G(RCEFT)
"RTN","RCXFMSCR",16,0)
 K ^TMP($J,"RCFMSCR")  ;  used for 215 report, not used here
"RTN","RCXFMSCR",17,0)
 D FMSLINES^RCXFMSC1(RCRECTDA)
"RTN","RCXFMSCR",18,0)
 K ^TMP($J,"RCFMSCR")
"RTN","RCXFMSCR",19,0)
 ;
"RTN","RCXFMSCR",20,0)
 ;  unapplied payments to accounts
"RTN","RCXFMSCR",21,0)
 S TRANDA=0 F  S TRANDA=$O(^RCY(344,RCRECTDA,1,TRANDA)) Q:'TRANDA  D
"RTN","RCXFMSCR",22,0)
 .   ;  dollars applied in AR
"RTN","RCXFMSCR",23,0)
 .   I $P(^RCY(344,RCRECTDA,1,TRANDA,0),"^",5) Q
"RTN","RCXFMSCR",24,0)
 .   ;  no dollars on transaction
"RTN","RCXFMSCR",25,0)
 .   S AMOUNT=$P(^RCY(344,RCRECTDA,1,TRANDA,0),"^",4) I 'AMOUNT Q
"RTN","RCXFMSCR",26,0)
 .   ;
"RTN","RCXFMSCR",27,0)
 .   I RCEFT=1 S TOTAL("5287"_$S(DT<3030926:"",DT'<3030926&(DT<$$ADDPTEDT^PRCAACC()):".4",1:"04"),"8NZZ","MCCFVALUE")=$G(TOTAL("5287"_$S(DT<3030926:"",1:"04"),"8NZZ","MCCFVALUE"))+AMOUNT Q
"RTN","RCXFMSCR",28,0)
 .   S UNAPPLY($$GETUNAPP(RCRECTDA,TRANDA,1))=AMOUNT
"RTN","RCXFMSCR",29,0)
 ;
"RTN","RCXFMSCR",30,0)
 ;  no code sheets to send
"RTN","RCXFMSCR",31,0)
 I '$D(DETAIL),'$D(TOTAL),'$D(UNAPPLY) Q "-1^No code sheets to send for this receipt"
"RTN","RCXFMSCR",32,0)
 ;
"RTN","RCXFMSCR",33,0)
 ;  get the next common number in the series = station "-" nextnumber
"RTN","RCXFMSCR",34,0)
 ;  use (field 200 in file 344) if document previously sent
"RTN","RCXFMSCR",35,0)
 S TRANNUMB=$P($P($G(^RCY(344,RCRECTDA,2)),"^"),"-",2)
"RTN","RCXFMSCR",36,0)
 I TRANNUMB="" S TRANNUMB=$$ENUM^RCMSNUM
"RTN","RCXFMSCR",37,0)
 I TRANNUMB<0 Q "0^Unable to lookup next transaction number"
"RTN","RCXFMSCR",38,0)
 ;  remove the dash (i,e, 460-K1A05HY)
"RTN","RCXFMSCR",39,0)
 S TRANNUMB=$TR(TRANNUMB,"-")
"RTN","RCXFMSCR",40,0)
 ;
"RTN","RCXFMSCR",41,0)
 S FISCALYR=$$FY^RCFN01(DT)
"RTN","RCXFMSCR",42,0)
 ;
"RTN","RCXFMSCR",43,0)
 S COUNT=0,DOCTOTAL=0
"RTN","RCXFMSCR",44,0)
 ;  build detail line
"RTN","RCXFMSCR",45,0)
 S FMSTYPE="" F  S FMSTYPE=$O(DETAIL(FMSTYPE)) Q:FMSTYPE=""  D
"RTN","RCXFMSCR",46,0)
 .   S BILLDA=0 F  S BILLDA=$O(DETAIL(FMSTYPE,BILLDA)) Q:'BILLDA  D
"RTN","RCXFMSCR",47,0)
 .   .   S AMOUNT=DETAIL(FMSTYPE,BILLDA),DOCTOTAL=DOCTOTAL+AMOUNT
"RTN","RCXFMSCR",48,0)
 .   .   S COUNT=COUNT+1
"RTN","RCXFMSCR",49,0)
 .   .   S LINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSCR",50,0)
 .   .   S $P(LINE(COUNT),"^",20)=$J(AMOUNT,0,2)
"RTN","RCXFMSCR",51,0)
 .   .   S $P(LINE(COUNT),"^",21)="I"
"RTN","RCXFMSCR",52,0)
 .   .   S $P(LINE(COUNT),"^",23)=FMSTYPE
"RTN","RCXFMSCR",53,0)
 .   .   S $P(LINE(COUNT),"^",24)="BD"
"RTN","RCXFMSCR",54,0)
 .   .   S $P(LINE(COUNT),"^",25)=$TR($P(^PRCA(430,BILLDA,0),"^"),"-")
"RTN","RCXFMSCR",55,0)
 .   .   S $P(LINE(COUNT),"^",26)=$$LINE^RCXFMSC1(BILLDA)
"RTN","RCXFMSCR",56,0)
 .   .   S $P(LINE(COUNT),"^",27)="~"
"RTN","RCXFMSCR",57,0)
 ;
"RTN","RCXFMSCR",58,0)
 ;  build summary line
"RTN","RCXFMSCR",59,0)
 S FUND="" F  S FUND=$O(TOTAL(FUND)) Q:FUND=""  D
"RTN","RCXFMSCR",60,0)
 .   S REVSRCE="" F  S REVSRCE=$O(TOTAL(FUND,REVSRCE)) Q:REVSRCE=""  D
"RTN","RCXFMSCR",61,0)
 .   .   S VENDORID="" F  S VENDORID=$O(TOTAL(FUND,REVSRCE,VENDORID)) Q:VENDORID=""  D
"RTN","RCXFMSCR",62,0)
 .   .   .   S AMOUNT=TOTAL(FUND,REVSRCE,VENDORID),DOCTOTAL=DOCTOTAL+AMOUNT
"RTN","RCXFMSCR",63,0)
 .   .   .   S COUNT=COUNT+1
"RTN","RCXFMSCR",64,0)
 .   .   .   S LINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSCR",65,0)
 .   .   .   S $P(LINE(COUNT),"^",4)=$S(FUND=4032:"03",1:FISCALYR)
"RTN","RCXFMSCR",66,0)
 .   .   .   S $P(LINE(COUNT),"^",4)=$S($E(FUND,1,4)=5287:"05",1:FISCALYR)
"RTN","RCXFMSCR",67,0)
 .   .   .   S $P(LINE(COUNT),"^",6)=FUND
"RTN","RCXFMSCR",68,0)
 .   .   .   S $P(LINE(COUNT),"^",7)=$E(TRANNUMB,1,3) ; station #
"RTN","RCXFMSCR",69,0)
 .   .   .   S $P(LINE(COUNT),"^",10)=REVSRCE
"RTN","RCXFMSCR",70,0)
 .   .   .   ;I FUND=4032 S $P(LINE(COUNT),"^",13)="24GX40100"
"RTN","RCXFMSCR",71,0)
 .   .   .   S $P(LINE(COUNT),"^",18)=VENDORID
"RTN","RCXFMSCR",72,0)
 .   .   .   S $P(LINE(COUNT),"^",20)=$J(AMOUNT,0,2)
"RTN","RCXFMSCR",73,0)
 .   .   .   S $P(LINE(COUNT),"^",21)="I"
"RTN","RCXFMSCR",74,0)
 .   .   .   S $P(LINE(COUNT),"^",23)=23
"RTN","RCXFMSCR",75,0)
 .   .   .   S $P(LINE(COUNT),"^",24)="~"
"RTN","RCXFMSCR",76,0)
 ;
"RTN","RCXFMSCR",77,0)
 ;  build unapplied payment lines
"RTN","RCXFMSCR",78,0)
 S UNAPPNUM="" F  S UNAPPNUM=$O(UNAPPLY(UNAPPNUM)) Q:UNAPPNUM=""  D
"RTN","RCXFMSCR",79,0)
 .   S AMOUNT=UNAPPLY(UNAPPNUM),DOCTOTAL=DOCTOTAL+AMOUNT
"RTN","RCXFMSCR",80,0)
 .   S COUNT=COUNT+1
"RTN","RCXFMSCR",81,0)
 .   S LINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSCR",82,0)
 .   S $P(LINE(COUNT),"^",4)=FISCALYR
"RTN","RCXFMSCR",83,0)
 .   S $P(LINE(COUNT),"^",6)=3875
"RTN","RCXFMSCR",84,0)
 .   S $P(LINE(COUNT),"^",7)=$E(TRANNUMB,1,3) ; station #
"RTN","RCXFMSCR",85,0)
 .   S $P(LINE(COUNT),"^",20)=$J(AMOUNT,0,2)
"RTN","RCXFMSCR",86,0)
 .   S $P(LINE(COUNT),"^",21)="I"
"RTN","RCXFMSCR",87,0)
 .   S $P(LINE(COUNT),"^",23)=17
"RTN","RCXFMSCR",88,0)
 .   S $P(LINE(COUNT),"^",24)="~CRB"
"RTN","RCXFMSCR",89,0)
 .   S $P(LINE(COUNT),"^",32)=UNAPPNUM
"RTN","RCXFMSCR",90,0)
 .   S $P(LINE(COUNT),"^",33)="~"
"RTN","RCXFMSCR",91,0)
 ;
"RTN","RCXFMSCR",92,0)
 ;  get data from file 344.1, the ar deposit file
"RTN","RCXFMSCR",93,0)
 S RCDEPTDA=$P(^RCY(344,RCRECTDA,0),"^",6),DEPOSIT=$G(^RCY(344.1,RCDEPTDA,0))
"RTN","RCXFMSCR",94,0)
 ;
"RTN","RCXFMSCR",95,0)
 ;  build cr2, $p(deposit,^,3)=deposit date
"RTN","RCXFMSCR",96,0)
 N FMSDT S FMSDT=$$FMSDATE^RCBEUTRA(DT)
"RTN","RCXFMSCR",97,0)
 S CR2="CR2^"_$E(FMSDT,2,3)_"^"_$E(FMSDT,4,5)_"^"_$E(FMSDT,6,7)_"^^^^^^E^^^"
"RTN","RCXFMSCR",98,0)
 S CR2=CR2_$P(DEPOSIT,"^")_"^^"_$J(DOCTOTAL,0,2)_"^^"
"RTN","RCXFMSCR",99,0)
 S CR2=CR2_$E($P(DEPOSIT,"^",3),2,3)_"^"_$E($P(DEPOSIT,"^",3),4,5)_"^"_$E($P(DEPOSIT,"^",3),6,7)_"^~"
"RTN","RCXFMSCR",100,0)
 ;
"RTN","RCXFMSCR",101,0)
 ;  put together document in gcs
"RTN","RCXFMSCR",102,0)
 N %DT,D,D0,DA,DI,DIC,DIE,DIQ2,DQ,DR
"RTN","RCXFMSCR",103,0)
 S DESCRIP="Receipt: "_$P(^RCY(344,RCRECTDA,0),"^")
"RTN","RCXFMSCR",104,0)
 I 'RCGECSDA D CONTROL^GECSUFMS("A",$E(TRANNUMB,1,3),TRANNUMB,"CR",10,0,"",DESCRIP)
"RTN","RCXFMSCR",105,0)
 I RCGECSDA D REBUILD^GECSUFM1(RCGECSDA,"A",10,"N","Rebuild "_DESCRIP) S GECSFMS("DA")=RCGECSDA
"RTN","RCXFMSCR",106,0)
 ;
"RTN","RCXFMSCR",107,0)
 ;  store document in gcs
"RTN","RCXFMSCR",108,0)
 D SETCS^GECSSTAA(GECSFMS("DA"),CR2)
"RTN","RCXFMSCR",109,0)
 F COUNT=1:1 Q:'$D(LINE(COUNT))  D SETCS^GECSSTAA(GECSFMS("DA"),LINE(COUNT))
"RTN","RCXFMSCR",110,0)
 D SETCODE^GECSSDCT(GECSFMS("DA"),"D RETN^RCFMFN02")
"RTN","RCXFMSCR",111,0)
 D SETSTAT^GECSSTAA(GECSFMS("DA"),"Q")
"RTN","RCXFMSCR",112,0)
 ;
"RTN","RCXFMSCR",113,0)
 ;  add/update entry in file 347 for unprocessed document report
"RTN","RCXFMSCR",114,0)
 N %DT,%X,D,DA347,D0,DI,DQ,DIC,ERROR,FMSDOCNO,X
"RTN","RCXFMSCR",115,0)
 S FMSDOCNO="CR-"_$P(GECSFMS("CTL"),"^",9)
"RTN","RCXFMSCR",116,0)
 S DA347=$O(^RC(347,"C",FMSDOCNO,0))
"RTN","RCXFMSCR",117,0)
 ;  if not in the file, addit   fmsdocid   cr   id
"RTN","RCXFMSCR",118,0)
 I 'DA347 D OPEN^RCFMDRV1(FMSDOCNO,3,"RC"_$P($G(^RCY(344,RCRECTDA,0)),"^"),.DA347,.ERROR)
"RTN","RCXFMSCR",119,0)
 I DA347 D SSTAT^RCFMFN02(FMSDOCNO,1)
"RTN","RCXFMSCR",120,0)
 ;
"RTN","RCXFMSCR",121,0)
 ;  return 1 for success ^ fms document transaction number
"RTN","RCXFMSCR",122,0)
 Q "1^"_FMSDOCNO
"RTN","RCXFMSCR",123,0)
 ;
"RTN","RCXFMSCR",124,0)
 ;
"RTN","RCXFMSCR",125,0)
GETUNAPP(RCRECTDA,RCTRANDA,RCSTORE) ;  get unapplied deposit number for receipt
"RTN","RCXFMSCR",126,0)
 ;  if $g(rcstore) store it with transaction
"RTN","RCXFMSCR",127,0)
 N UNAPPNUM
"RTN","RCXFMSCR",128,0)
 ;  if number is already assigned, use it
"RTN","RCXFMSCR",129,0)
 I $P($G(^RCY(344,RCRECTDA,1,RCTRANDA,2)),"^",5)'="" Q $P(^(2),"^",5)
"RTN","RCXFMSCR",130,0)
 ;
"RTN","RCXFMSCR",131,0)
 S UNAPPNUM=$P(^RCY(344,RCRECTDA,0),"^")
"RTN","RCXFMSCR",132,0)
 ;  if the receipt number is more than 9 characters, take the last 9
"RTN","RCXFMSCR",133,0)
 I $L(UNAPPNUM)>9 S UNAPPNUM=$E(UNAPPNUM,$L(UNAPPNUM)-8,$L(UNAPPNUM))
"RTN","RCXFMSCR",134,0)
 S UNAPPNUM=UNAPPNUM_$TR($J(RCTRANDA,4)," ",0)
"RTN","RCXFMSCR",135,0)
 ;
"RTN","RCXFMSCR",136,0)
 ;  store unapplied number
"RTN","RCXFMSCR",137,0)
 I $G(RCSTORE) D SETUNAPP^RCDPURET(RCRECTDA,RCTRANDA,UNAPPNUM)
"RTN","RCXFMSCR",138,0)
 ;
"RTN","RCXFMSCR",139,0)
 Q UNAPPNUM
"RTN","RCXFMSSV")
0^5^B54145302
"RTN","RCXFMSSV",1,0)
RCXFMSSV ;WISC/RFJ-fms standard voucher (sv) code sheet generator ;1 Nov 97
"RTN","RCXFMSSV",2,0)
 ;;4.5;Accounts Receivable;**96,101,135,139,98,156,170,191,203,220,138,184**;Mar 20, 1995
"RTN","RCXFMSSV",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCXFMSSV",4,0)
 Q
"RTN","RCXFMSSV",5,0)
 ;
"RTN","RCXFMSSV",6,0)
 ;
"RTN","RCXFMSSV",7,0)
STARTSV(RCDATEND) ;  top entry point to generate a sv code sheet
"RTN","RCXFMSSV",8,0)
 ;
"RTN","RCXFMSSV",9,0)
 ;  rcdatend is the ending date of the period.
"RTN","RCXFMSSV",10,0)
 ;  This date is the 3rd work day from the end of the month.
"RTN","RCXFMSSV",11,0)
 ;  The utility $$LDATE^RCRJR is used to figure it out. It will
"RTN","RCXFMSSV",12,0)
 ;  change from month to month and figures in holidays also.
"RTN","RCXFMSSV",13,0)
 ;  For example,  if running the ARDC for the month of June 2003
"RTN","RCXFMSSV",14,0)
 ;  the EOAM will calculate out to be June 25, 2003.
"RTN","RCXFMSSV",15,0)
 ;  This is called by the background monthly data collector
"RTN","RCXFMSSV",16,0)
 ;
"RTN","RCXFMSSV",17,0)
 ;  data stored in tmp($j,rcrjrcolsv,type,fund,revsourcecode)
"RTN","RCXFMSSV",18,0)
 ;  this is called by the background monthly data collector
"RTN","RCXFMSSV",19,0)
 ;
"RTN","RCXFMSSV",20,0)
 N GECSDATA,RCTRANID,RESULT
"RTN","RCXFMSSV",21,0)
 ;  lookup fms document number to see if the monthly sv has been sent
"RTN","RCXFMSSV",22,0)
 ;  example rcdatend=3010531, lookup on 3010500
"RTN","RCXFMSSV",23,0)
 D KEYLOOK^GECSSGET("SV-"_$E(RCDATEND,1,5)_"00",1)
"RTN","RCXFMSSV",24,0)
 ;
"RTN","RCXFMSSV",25,0)
 ;  get the transacion id for the fms document
"RTN","RCXFMSSV",26,0)
 ;  if it is not sent, get the next number available
"RTN","RCXFMSSV",27,0)
 I $G(GECSDATA) S RCTRANID=$E($P(GECSDATA("2100.1",GECSDATA,".01","E"),"-",2),1,11)
"RTN","RCXFMSSV",28,0)
 I $G(RCTRANID)="" S RCTRANID=$$ENUM^RCMSNUM
"RTN","RCXFMSSV",29,0)
 I RCTRANID<0 Q  ;unable to retrieve the next number
"RTN","RCXFMSSV",30,0)
 ;  remove dash (example 460-K1A05HY)
"RTN","RCXFMSSV",31,0)
 S RCTRANID=$TR(RCTRANID,"-")
"RTN","RCXFMSSV",32,0)
 ;
"RTN","RCXFMSSV",33,0)
 ;  build and send the sv document to fms
"RTN","RCXFMSSV",34,0)
 S RESULT=$$BUILDSV(RCDATEND,+$G(GECSDATA),RCTRANID)
"RTN","RCXFMSSV",35,0)
 ;  error in building code sheet
"RTN","RCXFMSSV",36,0)
 I 'RESULT Q
"RTN","RCXFMSSV",37,0)
 ;
"RTN","RCXFMSSV",38,0)
 ;  add/update entry in file 347 for reports
"RTN","RCXFMSSV",39,0)
 N %DT,%X,D,D0,DA347,DI,DQ,DIC,ERROR
"RTN","RCXFMSSV",40,0)
 S DA347=$O(^RC(347,"C",$P(RESULT,"^",2),0))
"RTN","RCXFMSSV",41,0)
 ;  if not in the file, addit   fmsdocid   sv   id
"RTN","RCXFMSSV",42,0)
 I 'DA347 D OPEN^RCFMDRV1($P(RESULT,"^",2),4,"SV-"_$E(RCDATEND,1,5)_"00",.DA347,.ERROR)
"RTN","RCXFMSSV",43,0)
 I DA347 D SSTAT^RCFMFN02($P(RESULT,"^",2),1)
"RTN","RCXFMSSV",44,0)
 Q
"RTN","RCXFMSSV",45,0)
 ;
"RTN","RCXFMSSV",46,0)
 ;
"RTN","RCXFMSSV",47,0)
BUILDSV(RCDATEND,RCGECSDA,RCTRANID) ;  generate a wr code sheet for monthly data
"RTN","RCXFMSSV",48,0)
 ;  rcgecsda is the ien for the gcs stack file 2100.1 for rebuilds
"RTN","RCXFMSSV",49,0)
 ;  data stored in tmp($j,rcrjrcolsv)
"RTN","RCXFMSSV",50,0)
 ;
"RTN","RCXFMSSV",51,0)
 N AMOUNT,COUNT,DESCRIP,DOCTOTAL,FISCALYR,FMSLINE,FUND,FY,GECSFMS,MONTH,REVDATE,REVFY,REVMONTH,RSC,SV2,TYPE
"RTN","RCXFMSSV",52,0)
 ;
"RTN","RCXFMSSV",53,0)
 S FISCALYR=$$FY^RCFN01(RCDATEND)
"RTN","RCXFMSSV",54,0)
 ;
"RTN","RCXFMSSV",55,0)
 S COUNT=0,DOCTOTAL=0
"RTN","RCXFMSSV",56,0)
 S TYPE="" F  S TYPE=$O(^TMP($J,"RCRJRCOLSV",TYPE)) Q:TYPE=""  D
"RTN","RCXFMSSV",57,0)
 . S FUND="" F  S FUND=$O(^TMP($J,"RCRJRCOLSV",TYPE,FUND)) Q:FUND=""  D
"RTN","RCXFMSSV",58,0)
 . . S RSC="" F  S RSC=$O(^TMP($J,"RCRJRCOLSV",TYPE,FUND,RSC)) Q:RSC=""  D
"RTN","RCXFMSSV",59,0)
 . . . S AMOUNT=^TMP($J,"RCRJRCOLSV",TYPE,FUND,RSC),DOCTOTAL=DOCTOTAL+AMOUNT
"RTN","RCXFMSSV",60,0)
 . . . I AMOUNT=0 Q
"RTN","RCXFMSSV",61,0)
 . . . S COUNT=COUNT+1
"RTN","RCXFMSSV",62,0)
 . . . S FMSLINE(COUNT)="LIN^~SVA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSSV",63,0)
 . . . S $P(FMSLINE(COUNT),"^",4)=TYPE
"RTN","RCXFMSSV",64,0)
 . . . S $P(FMSLINE(COUNT),"^",5)=FISCALYR ;begin fy
"RTN","RCXFMSSV",65,0)
 . . . I $E(FUND,1,4)=5287 S $P(FMSLINE(COUNT),"^",5)="05"
"RTN","RCXFMSSV",66,0)
 . . . S $P(FMSLINE(COUNT),"^",7)=FUND
"RTN","RCXFMSSV",67,0)
 . . . S $P(FMSLINE(COUNT),"^",9)=$E(RCTRANID,1,3)  ;site number
"RTN","RCXFMSSV",68,0)
 . . . ;  for transaction types 23,27,2B the RSC is 0, send null
"RTN","RCXFMSSV",69,0)
 . . . S $P(FMSLINE(COUNT),"^",14)=$S(RSC=0:"",1:RSC)
"RTN","RCXFMSSV",70,0)
 . . . ;
"RTN","RCXFMSSV",71,0)
 . . . ;  vendor id
"RTN","RCXFMSSV",72,0)
 . . . S $P(FMSLINE(COUNT),"^",18)="MCCFVALUE"
"RTN","RCXFMSSV",73,0)
 . . . ;  for transaction type P2, send vendorid of PERSONOTH
"RTN","RCXFMSSV",74,0)
 . . . I TYPE="P2" S $P(FMSLINE(COUNT),"^",18)="PERSONOTH"
"RTN","RCXFMSSV",75,0)
 . . . ;  if it is hsif fund 5358.1, send vendorid of HSIFVALUE
"RTN","RCXFMSSV",76,0)
 . . . I FUND=5358.1 S $P(FMSLINE(COUNT),"^",18)="HSIFVALUE"
"RTN","RCXFMSSV",77,0)
 . . . ;  if it is ltc fund 4032 or 528709, send vendorid of EXCFVALUE
"RTN","RCXFMSSV",78,0)
 . . . I FUND=4032!(FUND=528709) D
"RTN","RCXFMSSV",79,0)
 . . . . S $P(FMSLINE(COUNT),"^",18)="EXCFVALUE"
"RTN","RCXFMSSV",80,0)
 . . . . S:FUND=4032 $P(FMSLINE(COUNT),"^",5)="03" ; FY
"RTN","RCXFMSSV",81,0)
 . . . . S:$E(FUND,1,4)=5287 $P(FMSLINE(COUNT),"^",5)="05" ; FY
"RTN","RCXFMSSV",82,0)
 . . . ;
"RTN","RCXFMSSV",83,0)
 . . . S $P(FMSLINE(COUNT),"^",19)="~SVB"
"RTN","RCXFMSSV",84,0)
 . . . S $P(FMSLINE(COUNT),"^",20)=$J(AMOUNT,0,2)
"RTN","RCXFMSSV",85,0)
 . . . S $P(FMSLINE(COUNT),"^",21)="I"
"RTN","RCXFMSSV",86,0)
 . . . ;  for transaction types 23,27,2B the RSC is 0, send G
"RTN","RCXFMSSV",87,0)
 . . . S $P(FMSLINE(COUNT),"^",23)=$S(RSC=0:"G",1:"R")
"RTN","RCXFMSSV",88,0)
 . . . S $P(FMSLINE(COUNT),"^",25)=$E(RCDATEND,2,3)
"RTN","RCXFMSSV",89,0)
 . . . S $P(FMSLINE(COUNT),"^",26)=$E(RCDATEND,4,5)
"RTN","RCXFMSSV",90,0)
 . . . S $P(FMSLINE(COUNT),"^",27)=$E(RCDATEND,6,7)
"RTN","RCXFMSSV",91,0)
 . . . S $P(FMSLINE(COUNT),"^",28)="~"
"RTN","RCXFMSSV",92,0)
 ;
"RTN","RCXFMSSV",93,0)
 ;  no code sheets to send
"RTN","RCXFMSSV",94,0)
 I COUNT=0 Q "0^No sv code sheets to send for this month"
"RTN","RCXFMSSV",95,0)
 ;
"RTN","RCXFMSSV",96,0)
 ;  calculate the accounting month and fy
"RTN","RCXFMSSV",97,0)
 S FY=$E(RCDATEND,2,3) I $E(RCDATEND,4,5)>9 S FY=FY+1 I FY=100 S FY="00"
"RTN","RCXFMSSV",98,0)
 I $L(FY)=1 S FY="0"_FY
"RTN","RCXFMSSV",99,0)
 S MONTH=$P("04^05^06^07^08^09^10^11^12^01^02^03","^",$E(RCDATEND,4,5))
"RTN","RCXFMSSV",100,0)
 ;  calculate the reversal month and fy (next month, add 1 day)
"RTN","RCXFMSSV",101,0)
 S REVDATE=$$FMADD^XLFDT(RCDATEND,9)
"RTN","RCXFMSSV",102,0)
 S REVFY=$E(REVDATE,2,3) I $E(REVDATE,4,5)>9 S REVFY=REVFY+1 I REVFY=100 S REVFY="00"
"RTN","RCXFMSSV",103,0)
 I $L(REVFY)=1 S REVFY="0"_REVFY
"RTN","RCXFMSSV",104,0)
 S REVMONTH=$P("04^05^06^07^08^09^10^11^12^01^02^03","^",$E(REVDATE,4,5))
"RTN","RCXFMSSV",105,0)
 ;
"RTN","RCXFMSSV",106,0)
 S SV2="SV2^"_$E(RCDATEND,2,3)_"^"_$E(RCDATEND,4,5)_"^"_$E(RCDATEND,6,7)
"RTN","RCXFMSSV",107,0)
 S $P(SV2,"^",5)=MONTH         ;accounting period month
"RTN","RCXFMSSV",108,0)
 S $P(SV2,"^",6)=FY            ;accounting period year
"RTN","RCXFMSSV",109,0)
 S $P(SV2,"^",7)="E"
"RTN","RCXFMSSV",110,0)
 S $P(SV2,"^",12)=REVFY        ;reversal period year
"RTN","RCXFMSSV",111,0)
 S $P(SV2,"^",13)=REVMONTH     ;reversal period month
"RTN","RCXFMSSV",112,0)
 S $P(SV2,"^",16)=$J(DOCTOTAL,0,2)_"^~"
"RTN","RCXFMSSV",113,0)
 ;
"RTN","RCXFMSSV",114,0)
 ;  put together document in gcs
"RTN","RCXFMSSV",115,0)
 N %DT,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCXFMSSV",116,0)
 S Y=$E(RCDATEND,1,5)_"00" D DD^%DT
"RTN","RCXFMSSV",117,0)
 S DESCRIP="Monthly Standard Voucher for "_Y
"RTN","RCXFMSSV",118,0)
 I 'RCGECSDA D CONTROL^GECSUFMS("A",$E(RCTRANID,1,3),RCTRANID,"SV",10,0,"",DESCRIP)
"RTN","RCXFMSSV",119,0)
 I RCGECSDA D REBUILD^GECSUFM1(RCGECSDA,"A",10,"","Rebuild "_DESCRIP) S GECSFMS("DA")=RCGECSDA
"RTN","RCXFMSSV",120,0)
 ;
"RTN","RCXFMSSV",121,0)
 ;  store document in gcs
"RTN","RCXFMSSV",122,0)
 D SETCS^GECSSTAA(GECSFMS("DA"),SV2)
"RTN","RCXFMSSV",123,0)
 F COUNT=1:1 Q:'$D(FMSLINE(COUNT))  D SETCS^GECSSTAA(GECSFMS("DA"),FMSLINE(COUNT))
"RTN","RCXFMSSV",124,0)
 D SETCODE^GECSSDCT(GECSFMS("DA"),"D RETN^RCFMFN02")
"RTN","RCXFMSSV",125,0)
 D SETSTAT^GECSSTAA(GECSFMS("DA"),"Q")
"RTN","RCXFMSSV",126,0)
 ;  set the key for lookup
"RTN","RCXFMSSV",127,0)
 D SETKEY^GECSSTAA(GECSFMS("DA"),"SV-"_$E(RCDATEND,1,5)_"00")
"RTN","RCXFMSSV",128,0)
 ;
"RTN","RCXFMSSV",129,0)
 ;  return 1 for success ^ fms document transaction number
"RTN","RCXFMSSV",130,0)
 Q "1^SV-"_$P(GECSFMS("CTL"),"^",9)
"RTN","RCXFMSSV",131,0)
 ;
"RTN","RCXFMSSV",132,0)
 ;
"RTN","RCXFMSSV",133,0)
BADDEBT ;  top entry point to generate a sv code sheet
"RTN","RCXFMSSV",134,0)
 ;  for the bad debt report, transaction types 23, 27, 2B and 2J.
"RTN","RCXFMSSV",135,0)
 ;  The fms document number in file 347 is SV-$e(dateend,1,5)_"01"
"RTN","RCXFMSSV",136,0)
 ;
"RTN","RCXFMSSV",137,0)
 N DATA1319,DATA1338,DATA1339,DATA4032,DATAHSIF,GECSDATA,RCRJDATE,RESULT,RCRJFMM,RCRJFXSV,RCTRANID,X,RCNOHSIF,LTCFUND
"RTN","RCXFMSSV",138,0)
 N DATA133N
"RTN","RCXFMSSV",139,0)
 ;
"RTN","RCXFMSSV",140,0)
 S RCNOHSIF=$$NOHSIF^RCRJRCO() ; disabled HSIF
"RTN","RCXFMSSV",141,0)
 ;
"RTN","RCXFMSSV",142,0)
 ;  lock cannot fail
"RTN","RCXFMSSV",143,0)
 L +^RC(348.1)
"RTN","RCXFMSSV",144,0)
 ;
"RTN","RCXFMSSV",145,0)
 ;  get the data from the bad debt allowance file 348.1
"RTN","RCXFMSSV",146,0)
 K ^TMP($J,"RCRJRCOLSV")
"RTN","RCXFMSSV",147,0)
 S DATA1319=$G(^RC(348.1,+$O(^RC(348.1,"B",1319,0)),0))
"RTN","RCXFMSSV",148,0)
 S DATA1338=$G(^RC(348.1,+$O(^RC(348.1,"B",1338,0)),0))
"RTN","RCXFMSSV",149,0)
 S DATA1339=$G(^RC(348.1,+$O(^RC(348.1,"B",1339,0)),0))
"RTN","RCXFMSSV",150,0)
 S DATA133N=$G(^RC(348.1,+$O(^RC(348.1,"B","133N",0)),0))
"RTN","RCXFMSSV",151,0)
 I 'RCNOHSIF S DATAHSIF=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.1,0)),0))
"RTN","RCXFMSSV",152,0)
 S DATA4032=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.2,0)),0))
"RTN","RCXFMSSV",153,0)
 ; the revenue source code here is a 0
"RTN","RCXFMSSV",154,0)
 S ^TMP($J,"RCRJRCOLSV","23",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.3,1:528703)),0)=$P(DATA1319,"^",8)+$P(DATA1319,"^",9)
"RTN","RCXFMSSV",155,0)
 I 'RCNOHSIF S ^TMP($J,"RCRJRCOLSV","23",5358.1,0)=$P(DATAHSIF,"^",8)+$P(DATAHSIF,"^",9)
"RTN","RCXFMSSV",156,0)
 ;patch 220 replaces 4032 fund with 528709
"RTN","RCXFMSSV",157,0)
 S LTCFUND=$S(DT'<$$ADDPTEDT^PRCAACC():528709,1:4032)
"RTN","RCXFMSSV",158,0)
 S ^TMP($J,"RCRJRCOLSV","23",LTCFUND,0)=$P(DATA4032,"^",8)+$P(DATA4032,"^",9)
"RTN","RCXFMSSV",159,0)
 S ^TMP($J,"RCRJRCOLSV","2B",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.4,1:528704)),0)=$P(DATA1338,"^",8)+$P(DATA1338,"^",9)
"RTN","RCXFMSSV",160,0)
 S ^TMP($J,"RCRJRCOLSV","27",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.4,1:528704)),0)=$P(DATA1339,"^",8)+$P(DATA1339,"^",9)
"RTN","RCXFMSSV",161,0)
 ; post-MRA non-Medicare bills
"RTN","RCXFMSSV",162,0)
 S ^TMP($J,"RCRJRCOLSV","2J",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.4,1:528704)),0)=$P(DATA133N,"^",8)+$P(DATA133N,"^",9)
"RTN","RCXFMSSV",163,0)
 ;
"RTN","RCXFMSSV",164,0)
 ;  the date is for previous month
"RTN","RCXFMSSV",165,0)
 ;S RCRJDATE=$$PREVMONT^RCRJRBD(DT)
"RTN","RCXFMSSV",166,0)
 I $E(DT,6,7)<$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$$PREVMONT^RCRJRBD(DT)
"RTN","RCXFMSSV",167,0)
 ;I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$E($$LDATE^RCRJR(DT),1,5)_"00"
"RTN","RCXFMSSV",168,0)
 I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$$LDATE^RCRJR(DT)
"RTN","RCXFMSSV",169,0)
 ;  find the last day of the month for the end date
"RTN","RCXFMSSV",170,0)
 ;S RCRJDATE=$E(RCRJDATE,1,5)_$P("31^28^31^30^31^30^31^31^30^31^30^31","^",+$E(RCRJDATE,4,5))
"RTN","RCXFMSSV",171,0)
 ;I $E(RCRJDATE,6,7)=28,$E(RCRJDATE,2,3)#4=0 S RCRJDATE=$E(RCRJDATE,1,5)_"29"
"RTN","RCXFMSSV",172,0)
 ;
"RTN","RCXFMSSV",173,0)
 ;  lookup fms document number to see if the monthly sv has been sent
"RTN","RCXFMSSV",174,0)
 ;  example rcdatend=3010531, lookup on 3010501
"RTN","RCXFMSSV",175,0)
 D KEYLOOK^GECSSGET("SV-"_$E(RCRJDATE,1,5)_"01",1)
"RTN","RCXFMSSV",176,0)
 ;
"RTN","RCXFMSSV",177,0)
 ;  get the transacion id for the fms document
"RTN","RCXFMSSV",178,0)
 ;  if it is not sent, get the next number available
"RTN","RCXFMSSV",179,0)
 I $G(GECSDATA) S RCTRANID=$E($P(GECSDATA("2100.1",GECSDATA,".01","E"),"-",2),1,11)
"RTN","RCXFMSSV",180,0)
 I $G(RCTRANID)="" S RCTRANID=$$ENUM^RCMSNUM
"RTN","RCXFMSSV",181,0)
 I RCTRANID<0 Q  ;unable to retrieve the next number
"RTN","RCXFMSSV",182,0)
 ;  remove dash (example 460-K1A05HY)
"RTN","RCXFMSSV",183,0)
 S RCTRANID=$TR(RCTRANID,"-")
"RTN","RCXFMSSV",184,0)
 ;
"RTN","RCXFMSSV",185,0)
 ;  build and send the sv document to fms
"RTN","RCXFMSSV",186,0)
 S RESULT=$$BUILDSV(RCRJDATE,+$G(GECSDATA),RCTRANID)
"RTN","RCXFMSSV",187,0)
 K ^TMP($J,"RCRJRCOLSV")
"RTN","RCXFMSSV",188,0)
 ;  error in building code sheet
"RTN","RCXFMSSV",189,0)
 I 'RESULT D Q Q
"RTN","RCXFMSSV",190,0)
 ;
"RTN","RCXFMSSV",191,0)
 ;  add/update entry in file 347 for reports
"RTN","RCXFMSSV",192,0)
 N %DT,%X,D,D0,DA347,DI,DQ,DIC,ERROR
"RTN","RCXFMSSV",193,0)
 S DA347=$O(^RC(347,"D","SV-"_$E(RCRJDATE,1,5)_"01",0))
"RTN","RCXFMSSV",194,0)
 ;  if not in the file, addit   fmsdocid   sv   id
"RTN","RCXFMSSV",195,0)
 I 'DA347 D OPEN^RCFMDRV1($P(RESULT,"^",2),4,"SV-"_$E(RCRJDATE,1,5)_"01",.DA347,.ERROR)
"RTN","RCXFMSSV",196,0)
 I DA347 D SSTAT^RCFMFN02($P(RESULT,"^",2),1)
"RTN","RCXFMSSV",197,0)
 ;
"RTN","RCXFMSSV",198,0)
Q ;  jump here to finish
"RTN","RCXFMSSV",199,0)
 ;  generate bad debt report
"RTN","RCXFMSSV",200,0)
 S RCRJFXSV=$P(RESULT,"^",2),RCRJFMM=1 D DQ^RCRJRBDR
"RTN","RCXFMSSV",201,0)
 L -^RC(348.1)
"RTN","RCXFMSSV",202,0)
 Q
"RTN","RCXFMST1")
0^4^B40543326
"RTN","RCXFMST1",1,0)
RCXFMST1 ;ALB/TMK-EDI Lockbox fms transfer (tr) cd sht gen ;31 Mar 03
"RTN","RCXFMST1",2,0)
 ;;4.5;Accounts Receivable;**173,220,184**;Mar 20, 1995
"RTN","RCXFMST1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCXFMST1",4,0)
 Q
"RTN","RCXFMST1",5,0)
 ;
"RTN","RCXFMST1",6,0)
 ;
"RTN","RCXFMST1",7,0)
GETTR(RCRECTDA,RCGECSDA) ;  extract transfer data for TR code sheet for
"RTN","RCXFMST1",8,0)
 ;  a receipt in rcrectda
"RTN","RCXFMST1",9,0)
 ;  rcgecsda is the ien for the gcs stack file 2100.1 for rebuilds
"RTN","RCXFMST1",10,0)
 ;
"RTN","RCXFMST1",11,0)
 N TRANDA,AMOUNT,DETAIL,UNAPPLY,TOTAL,RCTOTAL,FUND,REVSRCE,VENDORID,RCSEQ,RESULT,GECSDATA,RCTRANS,UNAPPNUM,TRANNUMB
"RTN","RCXFMST1",12,0)
 ;
"RTN","RCXFMST1",13,0)
 ;  extract all payments on receipt
"RTN","RCXFMST1",14,0)
 S RESULT=""
"RTN","RCXFMST1",15,0)
 K ^TMP($J,"RCFMSCR")  ;  used for 215 report, not used here
"RTN","RCXFMST1",16,0)
 D FMSLINES^RCXFMSC1(RCRECTDA,1)
"RTN","RCXFMST1",17,0)
 K ^TMP($J,"RCFMSCR")
"RTN","RCXFMST1",18,0)
 ;
"RTN","RCXFMST1",19,0)
 ;  unapplied payments to accounts
"RTN","RCXFMST1",20,0)
 S TRANDA=0 F  S TRANDA=$O(^RCY(344,RCRECTDA,1,TRANDA)) Q:'TRANDA  D
"RTN","RCXFMST1",21,0)
 .   ;  dollars applied in AR
"RTN","RCXFMST1",22,0)
 .   I $P(^RCY(344,RCRECTDA,1,TRANDA,0),U,5) Q
"RTN","RCXFMST1",23,0)
 .   ;  no dollars on transaction
"RTN","RCXFMST1",24,0)
 .   S AMOUNT=$P(^RCY(344,RCRECTDA,1,TRANDA,0),U,4) I 'AMOUNT Q
"RTN","RCXFMST1",25,0)
 .   ;
"RTN","RCXFMST1",26,0)
 .   S UNAPPLY($$GETUNAPP^RCXFMSCR(RCRECTDA,TRANDA,1))=AMOUNT
"RTN","RCXFMST1",27,0)
 ;
"RTN","RCXFMST1",28,0)
 ;  no code sheets to send
"RTN","RCXFMST1",29,0)
 I '$D(DETAIL),'$D(TOTAL),'$D(UNAPPLY) S RESULT="-1^No code sheets to send for this receipt" G QUIT
"RTN","RCXFMST1",30,0)
 ;
"RTN","RCXFMST1",31,0)
 ;  get the next common number in the series = station "-" nextnumber
"RTN","RCXFMST1",32,0)
 ;  use (field 200 in file 344) if document previously sent
"RTN","RCXFMST1",33,0)
 S TRANNUMB=$P($P($G(^RCY(344,RCRECTDA,2)),U),"-",2)
"RTN","RCXFMST1",34,0)
 I TRANNUMB="" S TRANNUMB=$$ENUM^RCMSNUM
"RTN","RCXFMST1",35,0)
 I TRANNUMB<0 S RESULT="0^Unable to lookup next transaction number" G QUIT
"RTN","RCXFMST1",36,0)
 ;  remove the dash (i,e, 460-K1A05HY)
"RTN","RCXFMST1",37,0)
 S TRANNUMB=$TR(TRANNUMB,"-")
"RTN","RCXFMST1",38,0)
 ;
"RTN","RCXFMST1",39,0)
 ;  extract transfer from/to array for applied payments
"RTN","RCXFMST1",40,0)
 S (RCTOTAL,RCSEQ)=0
"RTN","RCXFMST1",41,0)
 S FUND="" F  S FUND=$O(TOTAL(FUND)) Q:FUND=""  D
"RTN","RCXFMST1",42,0)
 .   S REVSRCE="" F  S REVSRCE=$O(TOTAL(FUND,REVSRCE)) Q:REVSRCE=""  D
"RTN","RCXFMST1",43,0)
 .   .   S VENDORID="" F  S VENDORID=$O(TOTAL(FUND,REVSRCE,VENDORID)) Q:VENDORID=""  D
"RTN","RCXFMST1",44,0)
 .   .   .   S RCSEQ=RCSEQ+1,RCTRANS($$TRFUND(),"8NZZ",RCSEQ)=FUND_U_REVSRCE_U_TOTAL(FUND,REVSRCE,VENDORID)_U_U_VENDORID
"RTN","RCXFMST1",45,0)
 ;
"RTN","RCXFMST1",46,0)
 ;  extract unapplied payments
"RTN","RCXFMST1",47,0)
 S UNAPPNUM="" F  S UNAPPNUM=$O(UNAPPLY(UNAPPNUM)) Q:UNAPPNUM=""  D
"RTN","RCXFMST1",48,0)
 .   S RCSEQ=RCSEQ+1,RCTRANS($$TRFUND(),"8NZZ",RCSEQ)=3875_U_U_UNAPPLY(UNAPPNUM)_U_UNAPPNUM
"RTN","RCXFMST1",49,0)
 ;
"RTN","RCXFMST1",50,0)
 ;  build the TR document
"RTN","RCXFMST1",51,0)
 S RESULT=$$BUILDTR(.RCTRANS,.DETAIL,+$G(GECSDATA),TRANNUMB,RCRECTDA)
"RTN","RCXFMST1",52,0)
 ;
"RTN","RCXFMST1",53,0)
QUIT Q RESULT
"RTN","RCXFMST1",54,0)
 ;
"RTN","RCXFMST1",55,0)
BUILDTR(RCTRANS,RCDETAIL,RCGECSDA,TRANNUMB,RCRECTDA) ;  generate a tr code
"RTN","RCXFMST1",56,0)
 ;  sheet for transferring dollars out of 528704/8NZZ
"RTN","RCXFMST1",57,0)
 ;
"RTN","RCXFMST1",58,0)
 ;  rctrans(fund,rsc,seq) = data array passed
"RTN","RCXFMST1",59,0)
 ;    fund=fund to transfer from (always 528704)
"RTN","RCXFMST1",60,0)
 ;    rsc = rsc to transfer from (always 8NZZ)
"RTN","RCXFMST1",61,0)
 ;    seq = sequence to make record unique for each 'transferred to' rsc
"RTN","RCXFMST1",62,0)
 ;    data = fund to transfer to (piece 1)
"RTN","RCXFMST1",63,0)
 ;           rsc  to transfer to (piece 2)
"RTN","RCXFMST1",64,0)
 ;           dollars to transfer (piece 3)
"RTN","RCXFMST1",65,0)
 ;           unapplied deposit # for suspense (fund to transfer to=3875)
"RTN","RCXFMST1",66,0)
 ;           vendor id (piece 5)
"RTN","RCXFMST1",67,0)
 ;
"RTN","RCXFMST1",68,0)
 ;  rcgecsda is the ien for the gcs stack file 2100.1 for rebuilds
"RTN","RCXFMST1",69,0)
 ;
"RTN","RCXFMST1",70,0)
 ;  trannumb is the document identifier
"RTN","RCXFMST1",71,0)
 ;
"RTN","RCXFMST1",72,0)
 ;  rcrectda is the ien of the receipt (file 344)
"RTN","RCXFMST1",73,0)
 ;
"RTN","RCXFMST1",74,0)
 ;  rcdetail array contains accrual data for BD transactions
"RTN","RCXFMST1",75,0)
 ;
"RTN","RCXFMST1",76,0)
 N COUNT,DATA,DESCRIP,FISCALYR,FUND,GECSFMS,LINE,REVSRCE,TR2,X,Y,RCSUSP,BILLDA,FMSTYPE,AMOUNT,RCSEQ
"RTN","RCXFMST1",77,0)
 ;
"RTN","RCXFMST1",78,0)
 S FISCALYR=$$FY^RCFN01(DT)
"RTN","RCXFMST1",79,0)
 ;
"RTN","RCXFMST1",80,0)
 ;  build detail lines
"RTN","RCXFMST1",81,0)
 S COUNT=0
"RTN","RCXFMST1",82,0)
 ;
"RTN","RCXFMST1",83,0)
 S FMSTYPE="" F  S FMSTYPE=$O(RCDETAIL(FMSTYPE)) Q:FMSTYPE=""  D
"RTN","RCXFMST1",84,0)
 .   S BILLDA=0 F  S BILLDA=$O(RCDETAIL(FMSTYPE,BILLDA)) Q:'BILLDA  D
"RTN","RCXFMST1",85,0)
 .    .   S AMOUNT=RCDETAIL(FMSTYPE,BILLDA)
"RTN","RCXFMST1",86,0)
 .    . ; Decrease from 528704/8NZZ
"RTN","RCXFMST1",87,0)
 .    .   S COUNT=COUNT+1
"RTN","RCXFMST1",88,0)
 .    .   S LINE(COUNT)=$$DEC(COUNT,FISCALYR,TRANNUMB,AMOUNT)
"RTN","RCXFMST1",89,0)
 .    . ; Send BD
"RTN","RCXFMST1",90,0)
 .    .   S COUNT=COUNT+1
"RTN","RCXFMST1",91,0)
 .    .   S LINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMST1",92,0)
 .    .   S $P(LINE(COUNT),U,20)=$J(AMOUNT,0,2)
"RTN","RCXFMST1",93,0)
 .    .   S $P(LINE(COUNT),U,21)="I"
"RTN","RCXFMST1",94,0)
 .    .   S $P(LINE(COUNT),U,23)=$S(FMSTYPE'=75:FMSTYPE,$$GETFUNDB^RCXFMSUF(BILLDA,1)["5287":33,1:75)
"RTN","RCXFMST1",95,0)
 .    .   S $P(LINE(COUNT),U,24)="BD"
"RTN","RCXFMST1",96,0)
 .    .   S $P(LINE(COUNT),U,25)=$TR($P(^PRCA(430,BILLDA,0),U),"-")
"RTN","RCXFMST1",97,0)
 .    .   S $P(LINE(COUNT),U,26)=$$LINE^RCXFMSC1(BILLDA)
"RTN","RCXFMST1",98,0)
 .    .   S $P(LINE(COUNT),U,27)="~"
"RTN","RCXFMST1",99,0)
 .    ;
"RTN","RCXFMST1",100,0)
 ;
"RTN","RCXFMST1",101,0)
 S FUND=$$TRFUND(),REVSRCE="8NZZ"
"RTN","RCXFMST1",102,0)
 S RCSEQ=0 F  S RCSEQ=$O(RCTRANS(FUND,REVSRCE,RCSEQ)) Q:'RCSEQ  D
"RTN","RCXFMST1",103,0)
 .   S DATA=RCTRANS(FUND,REVSRCE,RCSEQ)
"RTN","RCXFMST1",104,0)
 .   ;  if no value, quit
"RTN","RCXFMST1",105,0)
 .   I '$P(DATA,U,3) Q
"RTN","RCXFMST1",106,0)
 .   ;
"RTN","RCXFMST1",107,0)
 .   ;  create line to transfer from (decrease)
"RTN","RCXFMST1",108,0)
 .   S COUNT=COUNT+1
"RTN","RCXFMST1",109,0)
 .   S LINE(COUNT)=$$DEC(COUNT,FISCALYR,TRANNUMB,$P(DATA,U,3))
"RTN","RCXFMST1",110,0)
 .   ;
"RTN","RCXFMST1",111,0)
 .   ;  create line to transfer to (increase)
"RTN","RCXFMST1",112,0)
 .   S COUNT=COUNT+1
"RTN","RCXFMST1",113,0)
 .   S RCSUSP=($P(DATA,U)=3875)
"RTN","RCXFMST1",114,0)
 .   S LINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMST1",115,0)
 .   S $P(LINE(COUNT),U,4)=FISCALYR
"RTN","RCXFMST1",116,0)
 .   S $P(LINE(COUNT),U,4)=$S($E(FUND,1,4)=5287:"05",1:FISCALYR)
"RTN","RCXFMST1",117,0)
 .   S $P(LINE(COUNT),U,6)=$P(DATA,U)
"RTN","RCXFMST1",118,0)
 .   S $P(LINE(COUNT),U,7)=$E(TRANNUMB,1,3) ; station #
"RTN","RCXFMST1",119,0)
 .   I 'RCSUSP S $P(LINE(COUNT),U,10)=$P(DATA,U,2)
"RTN","RCXFMST1",120,0)
 .   ;
"RTN","RCXFMST1",121,0)
 .   ;  vendor id
"RTN","RCXFMST1",122,0)
 .   I 'RCSUSP S $P(LINE(COUNT),U,18)=$P(DATA,U,5)
"RTN","RCXFMST1",123,0)
 .   ;
"RTN","RCXFMST1",124,0)
 .   S $P(LINE(COUNT),U,20)=$J($P(DATA,U,3),0,2)
"RTN","RCXFMST1",125,0)
 .   S $P(LINE(COUNT),U,21)="I"
"RTN","RCXFMST1",126,0)
 .   S $P(LINE(COUNT),U,23)=$S('RCSUSP:33,1:24)
"RTN","RCXFMST1",127,0)
 .   S $P(LINE(COUNT),U,24)=$S('RCSUSP:"~",1:"~CRB")
"RTN","RCXFMST1",128,0)
 .   I RCSUSP D
"RTN","RCXFMST1",129,0)
 .   .   S $P(LINE(COUNT),U,32)=$P(DATA,U,4)
"RTN","RCXFMST1",130,0)
 .   .   S $P(LINE(COUNT),U,33)="~"
"RTN","RCXFMST1",131,0)
 ;
"RTN","RCXFMST1",132,0)
 ;  build tr2
"RTN","RCXFMST1",133,0)
 N FMSDT S FMSDT=$$FMSDATE^RCBEUTRA(DT)
"RTN","RCXFMST1",134,0)
 S TR2="CR2^"_$E(FMSDT,2,3)_U_$E(FMSDT,4,5)_U_$E(FMSDT,6,7)_"^^^^^^E^^^"
"RTN","RCXFMST1",135,0)
 ;  deposit number which is equal to the gcs id
"RTN","RCXFMST1",136,0)
 ;  $j(0,0,2) is the document total which is zero
"RTN","RCXFMST1",137,0)
 S TR2=TR2_$P(TRANNUMB,U)_"^^"_$J(0,0,2)_"^^"
"RTN","RCXFMST1",138,0)
 ;  deposit/transfer date
"RTN","RCXFMST1",139,0)
 S TR2=TR2_$E(DT,2,3)_U_$E(DT,4,5)_U_$E(DT,6,7)_"^~"
"RTN","RCXFMST1",140,0)
 ;
"RTN","RCXFMST1",141,0)
 ;  put together document in gcs
"RTN","RCXFMST1",142,0)
 N D0,DA,DI,DIC,DIE,DIQ2,DQ,DR
"RTN","RCXFMST1",143,0)
 S DESCRIP="EDI Lockbox Detail Receipt: "_$P(^RCY(344,RCRECTDA,0),U)
"RTN","RCXFMST1",144,0)
 I 'RCGECSDA D CONTROL^GECSUFMS("A",$E(TRANNUMB,1,3),TRANNUMB,"TR",10,0,"",DESCRIP)
"RTN","RCXFMST1",145,0)
 I RCGECSDA D REBUILD^GECSUFM1(RCGECSDA,"A",10,"N","Rebuild "_DESCRIP) S GECSFMS("DA")=RCGECSDA
"RTN","RCXFMST1",146,0)
 ;
"RTN","RCXFMST1",147,0)
 ;  store document in gcs
"RTN","RCXFMST1",148,0)
 D SETCS^GECSSTAA(GECSFMS("DA"),TR2)
"RTN","RCXFMST1",149,0)
 F COUNT=1:1 Q:'$D(LINE(COUNT))  D SETCS^GECSSTAA(GECSFMS("DA"),LINE(COUNT))
"RTN","RCXFMST1",150,0)
 D SETCODE^GECSSDCT(GECSFMS("DA"),"D RETN^RCFMFN02")
"RTN","RCXFMST1",151,0)
 D SETSTAT^GECSSTAA(GECSFMS("DA"),"Q")
"RTN","RCXFMST1",152,0)
 ;
"RTN","RCXFMST1",153,0)
 ;  add/update entry in file 347 for unprocessed document report
"RTN","RCXFMST1",154,0)
 N %DT,%X,D,DA347,D0,DI,DQ,DIC,ERROR,FMSDOCNO,X
"RTN","RCXFMST1",155,0)
 S FMSDOCNO="TR-"_$P(GECSFMS("CTL"),U,9)
"RTN","RCXFMST1",156,0)
 S DA347=$O(^RC(347,"C",FMSDOCNO,0))
"RTN","RCXFMST1",157,0)
 ;  if not in the file, addit   fmsdocid   tr   id
"RTN","RCXFMST1",158,0)
 I 'DA347 D OPEN^RCFMDRV1(FMSDOCNO,9,"TR-"_$P($G(^RCY(344,RCRECTDA,0)),U),.DA347,.ERROR)
"RTN","RCXFMST1",159,0)
 I DA347 D SSTAT^RCFMFN02(FMSDOCNO,1)
"RTN","RCXFMST1",160,0)
 ;
"RTN","RCXFMST1",161,0)
 ;  return 1 for success ^ fms document id
"RTN","RCXFMST1",162,0)
 Q 1_"^TR-"_$P(GECSFMS("CTL"),U,9)
"RTN","RCXFMST1",163,0)
 ;
"RTN","RCXFMST1",164,0)
 ;
"RTN","RCXFMST1",165,0)
DEC(COUNT,FISCALYR,TRANNUMB,AMOUNT) ; Add decrease from 528704/8NZZ
"RTN","RCXFMST1",166,0)
 ; Returns LINE with decrease TR info
"RTN","RCXFMST1",167,0)
 ; FISCALYR/TRANNUMB from above
"RTN","RCXFMST1",168,0)
 ; COUNT = line counter
"RTN","RCXFMST1",169,0)
 ; AMOUNT = amount to be transferred
"RTN","RCXFMST1",170,0)
 ;
"RTN","RCXFMST1",171,0)
 S LINE="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMST1",172,0)
 S $P(LINE,U,4)=FISCALYR
"RTN","RCXFMST1",173,0)
 S $P(LINE(COUNT),U,4)=$S($E(FUND,1,4)=5287:"05",1:FISCALYR)
"RTN","RCXFMST1",174,0)
 S $P(LINE,U,6)=$$TRFUND()
"RTN","RCXFMST1",175,0)
 S $P(LINE,U,7)=$E(TRANNUMB,1,3) ; station #
"RTN","RCXFMST1",176,0)
 S $P(LINE,U,10)="8NZZ"
"RTN","RCXFMST1",177,0)
 ;
"RTN","RCXFMST1",178,0)
 ;  vendor id
"RTN","RCXFMST1",179,0)
 S $P(LINE,U,18)="MCCFVALUE"
"RTN","RCXFMST1",180,0)
 S $P(LINE,U,20)=$J(AMOUNT,0,2)
"RTN","RCXFMST1",181,0)
 S $P(LINE,U,21)="D"
"RTN","RCXFMST1",182,0)
 S $P(LINE,U,23)=33
"RTN","RCXFMST1",183,0)
 S $P(LINE,U,24)="~"
"RTN","RCXFMST1",184,0)
 Q LINE
"RTN","RCXFMST1",185,0)
 ;
"RTN","RCXFMST1",186,0)
TRFUND() ; Determine if fund should be 5287 or 528704, based on date
"RTN","RCXFMST1",187,0)
 I DT<3030926 Q 5287
"RTN","RCXFMST1",188,0)
 I DT<$$ADDPTEDT^PRCAACC() Q 5287.4
"RTN","RCXFMST1",189,0)
 Q 528704
"RTN","RCXFMST1",190,0)
 ;
"RTN","RCXFMSTX")
0^3^B25641570
"RTN","RCXFMSTX",1,0)
RCXFMSTX ;WISC/RFJ-fms transfer (tr) code sheet generator ;1 Oct 97
"RTN","RCXFMSTX",2,0)
 ;;4.5;Accounts Receivable;**170,178,191,184**;Mar 20, 1995
"RTN","RCXFMSTX",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCXFMSTX",4,0)
 Q
"RTN","RCXFMSTX",5,0)
 ;
"RTN","RCXFMSTX",6,0)
 ;
"RTN","RCXFMSTX",7,0)
STARTTR(RCDATEND) ;  top entry point to generate a tr code sheet
"RTN","RCXFMSTX",8,0)
 ;  transferring dollars from mccf to hsif
"RTN","RCXFMSTX",9,0)
 ;
"RTN","RCXFMSTX",10,0)
 ;  rcdatend is the ending date of the period.
"RTN","RCXFMSTX",11,0)
 ;  This date is the 3rd work day from the end of the month.
"RTN","RCXFMSTX",12,0)
 ;  The utility $$LDATE^RCRJR is used to figure it out. It will
"RTN","RCXFMSTX",13,0)
 ;  change from month to month and figures in holidays also.
"RTN","RCXFMSTX",14,0)
 ;  For example,  if running the ARDC for the month of June 2003
"RTN","RCXFMSTX",15,0)
 ;  the EOAM will calculate out to be June 25, 2003.
"RTN","RCXFMSTX",16,0)
 ;  This is called by the background monthly data collector
"RTN","RCXFMSTX",17,0)
 ;
"RTN","RCXFMSTX",18,0)
 ;
"RTN","RCXFMSTX",19,0)
 N GECSDATA,RCTRANID,RESULT
"RTN","RCXFMSTX",20,0)
 ;
"RTN","RCXFMSTX",21,0)
 ;  build the data for the TR document.  this call returns the rctrans
"RTN","RCXFMSTX",22,0)
 ;  array in the format rctrans(fromfund,fromrsc) = tofund ^ torsc ^
"RTN","RCXFMSTX",23,0)
 ;  amount
"RTN","RCXFMSTX",24,0)
 ;    example:
"RTN","RCXFMSTX",25,0)
 ;      rctrans(5287,"8bzz")="5358.1^8gzz^123.45"
"RTN","RCXFMSTX",26,0)
 ;      will transfer 123.45 from 5287 to 5358.1
"RTN","RCXFMSTX",27,0)
 D GETPAY^RCBMILLT(RCDATEND)
"RTN","RCXFMSTX",28,0)
 ;
"RTN","RCXFMSTX",29,0)
 ;  no code sheets to send
"RTN","RCXFMSTX",30,0)
 I $O(RCTRANS(""))="" Q
"RTN","RCXFMSTX",31,0)
 ;
"RTN","RCXFMSTX",32,0)
 ;  lookup fms document number to see if the monthly tr has been sent
"RTN","RCXFMSTX",33,0)
 ;  example rcdatend=3010531, lookup on 3010500
"RTN","RCXFMSTX",34,0)
 D KEYLOOK^GECSSGET("TR-"_$E(RCDATEND,1,5)_"00",1)
"RTN","RCXFMSTX",35,0)
 ;
"RTN","RCXFMSTX",36,0)
 ;  get the transacion id for the fms document
"RTN","RCXFMSTX",37,0)
 ;  if it is not sent, get the next number available
"RTN","RCXFMSTX",38,0)
 I $G(GECSDATA) S RCTRANID=$E($P(GECSDATA("2100.1",GECSDATA,".01","E"),"-",2),1,11)
"RTN","RCXFMSTX",39,0)
 I $G(RCTRANID)="" S RCTRANID=$$ENUM^RCMSNUM
"RTN","RCXFMSTX",40,0)
 I RCTRANID<0 Q  ;unable to retrieve the next number
"RTN","RCXFMSTX",41,0)
 ;  remove dash (example 460-K1A05HY)
"RTN","RCXFMSTX",42,0)
 S RCTRANID=$TR(RCTRANID,"-")
"RTN","RCXFMSTX",43,0)
 ;
"RTN","RCXFMSTX",44,0)
 ;  build the tr document
"RTN","RCXFMSTX",45,0)
 S RESULT=$$BUILDTR(RCDATEND,.RCTRANS,+$G(GECSDATA),RCTRANID)
"RTN","RCXFMSTX",46,0)
 ;  error in building code sheet
"RTN","RCXFMSTX",47,0)
 I 'RESULT Q
"RTN","RCXFMSTX",48,0)
 ;
"RTN","RCXFMSTX",49,0)
 ;  set the 433 fields showing the dollars were transferred
"RTN","RCXFMSTX",50,0)
 D SETPAY^RCBMILLT(RCDATEND)
"RTN","RCXFMSTX",51,0)
 ;
"RTN","RCXFMSTX",52,0)
 ;  add/update entry in file 347 for reports
"RTN","RCXFMSTX",53,0)
 N %DT,%X,D,D0,DA347,DI,DQ,DIC,ERROR
"RTN","RCXFMSTX",54,0)
 S DA347=$O(^RC(347,"C",$P(RESULT,"^",2),0))
"RTN","RCXFMSTX",55,0)
 ;  if not in the file, addit   fmsdocid   sv   id
"RTN","RCXFMSTX",56,0)
 I 'DA347 D OPEN^RCFMDRV1($P(RESULT,"^",2),4,"TR-"_$E(RCDATEND,1,5)_"00",.DA347,.ERROR)
"RTN","RCXFMSTX",57,0)
 I DA347 D SSTAT^RCFMFN02($P(RESULT,"^",2),1)
"RTN","RCXFMSTX",58,0)
 Q
"RTN","RCXFMSTX",59,0)
 ;
"RTN","RCXFMSTX",60,0)
 ;        
"RTN","RCXFMSTX",61,0)
BUILDTR(RCDATEND,RCTRANS,RCGECSDA,RCTRANID) ;  generate a tr code sheet for
"RTN","RCXFMSTX",62,0)
 ;  transferring dollars from mccf to hsif
"RTN","RCXFMSTX",63,0)
 ;
"RTN","RCXFMSTX",64,0)
 ;  rcdatend is the last day of the month for the data
"RTN","RCXFMSTX",65,0)
 ;
"RTN","RCXFMSTX",66,0)
 ;  rctrans(fund,rsc) = data array passed
"RTN","RCXFMSTX",67,0)
 ;    fund=fund to transfer from
"RTN","RCXFMSTX",68,0)
 ;    rsc = rsc to transfer from
"RTN","RCXFMSTX",69,0)
 ;    data = fund to transfer to (piece 1)
"RTN","RCXFMSTX",70,0)
 ;           rsc  to transfer to (piece 2)
"RTN","RCXFMSTX",71,0)
 ;           dollars to transfer (piece 3)
"RTN","RCXFMSTX",72,0)
 ;
"RTN","RCXFMSTX",73,0)
 ;  rcgecsda is the ien for the gcs stack file 2100.1 for rebuilds
"RTN","RCXFMSTX",74,0)
 ;
"RTN","RCXFMSTX",75,0)
 ;  rctranid is the document identifier
"RTN","RCXFMSTX",76,0)
 ;
"RTN","RCXFMSTX",77,0)
 N COUNT,DATA,DESCRIP,FISCALYR,FUND,GECSFMS,LINE,REVSRCE,TR2,X,Y
"RTN","RCXFMSTX",78,0)
 ;
"RTN","RCXFMSTX",79,0)
 S FISCALYR=$$FY^RCFN01(RCDATEND)
"RTN","RCXFMSTX",80,0)
 ;
"RTN","RCXFMSTX",81,0)
 ;  build detail line
"RTN","RCXFMSTX",82,0)
 S COUNT=0
"RTN","RCXFMSTX",83,0)
 S FUND="" F  S FUND=$O(RCTRANS(FUND)) Q:FUND=""  D
"RTN","RCXFMSTX",84,0)
 .   S REVSRCE="" F  S REVSRCE=$O(RCTRANS(FUND,REVSRCE)) Q:'REVSRCE  D
"RTN","RCXFMSTX",85,0)
 .   .   S DATA=RCTRANS(FUND,REVSRCE)
"RTN","RCXFMSTX",86,0)
 .   .   ;  if no value, quit
"RTN","RCXFMSTX",87,0)
 .   .   I '$P(DATA,"^",3) Q
"RTN","RCXFMSTX",88,0)
 .   .   ;
"RTN","RCXFMSTX",89,0)
 .   .   ;  create line to transfer from (decrease)
"RTN","RCXFMSTX",90,0)
 .   .   S COUNT=COUNT+1
"RTN","RCXFMSTX",91,0)
 .   .   S LINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSTX",92,0)
 .   .   S $P(LINE(COUNT),"^",4)=FISCALYR
"RTN","RCXFMSTX",93,0)
 .   .   S $P(LINE(COUNT),U,4)=$S($E(FUND,1,4)=5287:"05",1:FISCALYR)
"RTN","RCXFMSTX",94,0)
 .   .   S $P(LINE(COUNT),"^",6)=FUND
"RTN","RCXFMSTX",95,0)
 .   .   S $P(LINE(COUNT),"^",7)=$E(RCTRANID,1,3) ; station #
"RTN","RCXFMSTX",96,0)
 .   .   S $P(LINE(COUNT),"^",10)=REVSRCE
"RTN","RCXFMSTX",97,0)
 .   .   ;
"RTN","RCXFMSTX",98,0)
 .   .   ;  vendor id
"RTN","RCXFMSTX",99,0)
 .   .   S $P(LINE(COUNT),"^",18)="MCCFVALUE"
"RTN","RCXFMSTX",100,0)
 .   .   I FUND=5358.1 S $P(LINE(COUNT),"^",18)="HSIFVALUE"
"RTN","RCXFMSTX",101,0)
 .   .   ;
"RTN","RCXFMSTX",102,0)
 .   .   S $P(LINE(COUNT),"^",20)=$J($P(DATA,"^",3),0,2)
"RTN","RCXFMSTX",103,0)
 .   .   S $P(LINE(COUNT),"^",21)="D"
"RTN","RCXFMSTX",104,0)
 .   .   S $P(LINE(COUNT),"^",23)=33
"RTN","RCXFMSTX",105,0)
 .   .   S $P(LINE(COUNT),"^",24)="~"
"RTN","RCXFMSTX",106,0)
 .   .   ;
"RTN","RCXFMSTX",107,0)
 .   .   ;  create line to transfer to (increase)
"RTN","RCXFMSTX",108,0)
 .   .   S COUNT=COUNT+1
"RTN","RCXFMSTX",109,0)
 .   .   S LINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSTX",110,0)
 .   .   S $P(LINE(COUNT),"^",4)=FISCALYR
"RTN","RCXFMSTX",111,0)
 .   .   S $P(LINE(COUNT),U,4)=$S($E(FUND,1,4)=5287:"05",1:FISCALYR)
"RTN","RCXFMSTX",112,0)
 .   .   S $P(LINE(COUNT),"^",6)=$P(DATA,"^")
"RTN","RCXFMSTX",113,0)
 .   .   S $P(LINE(COUNT),"^",7)=$E(RCTRANID,1,3) ; station #
"RTN","RCXFMSTX",114,0)
 .   .   S $P(LINE(COUNT),"^",10)=$P(DATA,"^",2)
"RTN","RCXFMSTX",115,0)
 .   .   ;
"RTN","RCXFMSTX",116,0)
 .   .   ;  vendor id
"RTN","RCXFMSTX",117,0)
 .   .   S $P(LINE(COUNT),"^",18)="MCCFVALUE"
"RTN","RCXFMSTX",118,0)
 .   .   I $P(DATA,"^")=5358.1 S $P(LINE(COUNT),"^",18)="HSIFVALUE"
"RTN","RCXFMSTX",119,0)
 .   .   ;
"RTN","RCXFMSTX",120,0)
 .   .   S $P(LINE(COUNT),"^",20)=$J($P(DATA,"^",3),0,2)
"RTN","RCXFMSTX",121,0)
 .   .   S $P(LINE(COUNT),"^",21)="I"
"RTN","RCXFMSTX",122,0)
 .   .   S $P(LINE(COUNT),"^",23)=33
"RTN","RCXFMSTX",123,0)
 .   .   S $P(LINE(COUNT),"^",24)="~"
"RTN","RCXFMSTX",124,0)
 ;
"RTN","RCXFMSTX",125,0)
 ;  build tr2
"RTN","RCXFMSTX",126,0)
 S TR2="CR2^"_$E(RCDATEND,2,3)_"^"_$E(RCDATEND,4,5)_"^"_$E(RCDATEND,6,7)_"^^^^^^E^^^"
"RTN","RCXFMSTX",127,0)
 ;  deposit number which is equal to the gcs id
"RTN","RCXFMSTX",128,0)
 ;  $j(0,0,2) is the document total which is zero
"RTN","RCXFMSTX",129,0)
 S TR2=TR2_$P(RCTRANID,"^")_"^^"_$J(0,0,2)_"^^"
"RTN","RCXFMSTX",130,0)
 ;  deposit/transfer date which is end date of prior month
"RTN","RCXFMSTX",131,0)
 S TR2=TR2_$E(RCDATEND,2,3)_"^"_$E(RCDATEND,4,5)_"^"_$E(RCDATEND,6,7)_"^~"
"RTN","RCXFMSTX",132,0)
 ;
"RTN","RCXFMSTX",133,0)
 ;  put together document in gcs
"RTN","RCXFMSTX",134,0)
 N %DT,D,D0,DA,DI,DIC,DIE,DIQ2,DQ,DR
"RTN","RCXFMSTX",135,0)
 S Y=$E(RCDATEND,1,5)_"00" D DD^%DT
"RTN","RCXFMSTX",136,0)
 S DESCRIP="Monthly Transfer MCCF to HSIF for "_Y
"RTN","RCXFMSTX",137,0)
 I 'RCGECSDA D CONTROL^GECSUFMS("A",$E(RCTRANID,1,3),RCTRANID,"TR",10,0,"",DESCRIP)
"RTN","RCXFMSTX",138,0)
 I RCGECSDA D REBUILD^GECSUFM1(RCGECSDA,"A",10,"N","Rebuild "_DESCRIP) S GECSFMS("DA")=RCGECSDA
"RTN","RCXFMSTX",139,0)
 ;
"RTN","RCXFMSTX",140,0)
 ;  store document in gcs
"RTN","RCXFMSTX",141,0)
 D SETCS^GECSSTAA(GECSFMS("DA"),TR2)
"RTN","RCXFMSTX",142,0)
 F COUNT=1:1 Q:'$D(LINE(COUNT))  D SETCS^GECSSTAA(GECSFMS("DA"),LINE(COUNT))
"RTN","RCXFMSTX",143,0)
 D SETCODE^GECSSDCT(GECSFMS("DA"),"D RETN^RCFMFN02")
"RTN","RCXFMSTX",144,0)
 D SETSTAT^GECSSTAA(GECSFMS("DA"),"Q")
"RTN","RCXFMSTX",145,0)
 ;  set the key for lookup
"RTN","RCXFMSTX",146,0)
 D SETKEY^GECSSTAA(GECSFMS("DA"),"TR-"_$E(RCDATEND,1,5)_"00")
"RTN","RCXFMSTX",147,0)
 ;
"RTN","RCXFMSTX",148,0)
 ;  return 1 for success ^ fms document id
"RTN","RCXFMSTX",149,0)
 Q 1_"^TR-"_$P(GECSFMS("CTL"),"^",9)
"RTN","RCXFMSWR")
0^8^B18298185
"RTN","RCXFMSWR",1,0)
RCXFMSWR ;WISC/RFJ-fms writeoff (wr) code sheet generator ;1 Nov 97
"RTN","RCXFMSWR",2,0)
 ;;4.5;Accounts Receivable;**96,135,98,156,170,191,220,184**;Mar 20, 1995
"RTN","RCXFMSWR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCXFMSWR",4,0)
 Q
"RTN","RCXFMSWR",5,0)
 ;
"RTN","RCXFMSWR",6,0)
 ;
"RTN","RCXFMSWR",7,0)
STARTWR(RCDATEND) ;  top entry point to generate a wr code sheet
"RTN","RCXFMSWR",8,0)
 ;
"RTN","RCXFMSWR",9,0)
 ;  rcdatend is the ending date of the period.
"RTN","RCXFMSWR",10,0)
 ;  This date is the 3rd work day from the end of the month.
"RTN","RCXFMSWR",11,0)
 ;  The utility $$LDATE^RCRJR is used to figure it out. It will
"RTN","RCXFMSWR",12,0)
 ;  change from month to month and figures in holidays also.
"RTN","RCXFMSWR",13,0)
 ;  For example,  if running the ARDC for the month of June 2003
"RTN","RCXFMSWR",14,0)
 ;  the EOAM will calculate out to be June 25, 2003.
"RTN","RCXFMSWR",15,0)
 ;  This is called by the background monthly data collector
"RTN","RCXFMSWR",16,0)
 ;
"RTN","RCXFMSWR",17,0)
 ;  data stored in tmp($j,rcrjrcolwr,type,revsourcecode)
"RTN","RCXFMSWR",18,0)
 ;  this is called by the background monthly data collector
"RTN","RCXFMSWR",19,0)
 ;
"RTN","RCXFMSWR",20,0)
 N GECSDATA,RCTRANID,RESULT
"RTN","RCXFMSWR",21,0)
 ;  lookup fms document number to see if the monthly sv has been sent
"RTN","RCXFMSWR",22,0)
 ;  example rcdatend=3010531, lookup on 3010500
"RTN","RCXFMSWR",23,0)
 D KEYLOOK^GECSSGET("WR-"_$E(RCDATEND,1,5)_"00",1)
"RTN","RCXFMSWR",24,0)
 ;
"RTN","RCXFMSWR",25,0)
 ;  get the transacion id for the fms document
"RTN","RCXFMSWR",26,0)
 ;  if it is not sent, get the next number available
"RTN","RCXFMSWR",27,0)
 I $G(GECSDATA) S RCTRANID=$E($P(GECSDATA("2100.1",GECSDATA,".01","E"),"-",2),1,11)
"RTN","RCXFMSWR",28,0)
 I $G(RCTRANID)="" S RCTRANID=$$ENUM^RCMSNUM
"RTN","RCXFMSWR",29,0)
 I RCTRANID<0 Q  ;unable to retrieve the next number
"RTN","RCXFMSWR",30,0)
 ;  remove dash (example 460-K1A05HY)
"RTN","RCXFMSWR",31,0)
 S RCTRANID=$TR(RCTRANID,"-")
"RTN","RCXFMSWR",32,0)
 ;
"RTN","RCXFMSWR",33,0)
 ;  build and send the sv document to fms
"RTN","RCXFMSWR",34,0)
 S RESULT=$$BUILDWR(RCDATEND,+$G(GECSDATA),RCTRANID)
"RTN","RCXFMSWR",35,0)
 ;  error in building code sheet
"RTN","RCXFMSWR",36,0)
 I 'RESULT Q
"RTN","RCXFMSWR",37,0)
 ;
"RTN","RCXFMSWR",38,0)
 ;  add/update entry in file 347 for reports
"RTN","RCXFMSWR",39,0)
 N %DT,%X,D,D0,DA347,DI,DQ,DIC,ERROR
"RTN","RCXFMSWR",40,0)
 S DA347=$O(^RC(347,"D","WR-"_$E(RCDATEND,1,5)_"00",0))
"RTN","RCXFMSWR",41,0)
 ;  if not in the file, addit   fmsdocid   wr   id
"RTN","RCXFMSWR",42,0)
 I 'DA347 D OPEN^RCFMDRV1($P(RESULT,"^",2),8,"WR-"_$E(RCDATEND,1,5)_"00",.DA347,.ERROR)
"RTN","RCXFMSWR",43,0)
 I DA347 D SSTAT^RCFMFN02($P(RESULT,"^",2),1)
"RTN","RCXFMSWR",44,0)
 Q
"RTN","RCXFMSWR",45,0)
 ;
"RTN","RCXFMSWR",46,0)
 ;
"RTN","RCXFMSWR",47,0)
BUILDWR(RCDATEND,RCGECSDA,RCTRANID) ;  generate a wr code sheet for monthly data
"RTN","RCXFMSWR",48,0)
 ;  rcgecsda is the ien for the gcs stack file 2100.1 for rebuilds
"RTN","RCXFMSWR",49,0)
 ;  data stored in tmp($j,rcrjrcolwr)
"RTN","RCXFMSWR",50,0)
 ;
"RTN","RCXFMSWR",51,0)
 N AMOUNT,COUNT,CR2,DESCRIP,DOCTOTAL,FISCALYR,FMSLINE,FUND,GECSFMS,RSC,TYPE
"RTN","RCXFMSWR",52,0)
 ;
"RTN","RCXFMSWR",53,0)
 S FISCALYR=$$FY^RCFN01(RCDATEND)
"RTN","RCXFMSWR",54,0)
 ;
"RTN","RCXFMSWR",55,0)
 S COUNT=0,DOCTOTAL=0
"RTN","RCXFMSWR",56,0)
 S TYPE="" F  S TYPE=$O(^TMP($J,"RCRJRCOLWR",TYPE)) Q:TYPE=""  D
"RTN","RCXFMSWR",57,0)
 .   S FUND="" F  S FUND=$O(^TMP($J,"RCRJRCOLWR",TYPE,FUND)) Q:FUND=""  D
"RTN","RCXFMSWR",58,0)
 .   .   S RSC="" F  S RSC=$O(^TMP($J,"RCRJRCOLWR",TYPE,FUND,RSC)) Q:RSC=""  D
"RTN","RCXFMSWR",59,0)
 .   .   .   S AMOUNT=^TMP($J,"RCRJRCOLWR",TYPE,FUND,RSC),DOCTOTAL=DOCTOTAL+AMOUNT
"RTN","RCXFMSWR",60,0)
 .   .   .   I AMOUNT=0 Q
"RTN","RCXFMSWR",61,0)
 .   .   .   S COUNT=COUNT+1
"RTN","RCXFMSWR",62,0)
 .   .   .   S FMSLINE(COUNT)="LIN^~CRA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSWR",63,0)
 .   .   .   ;S $P(FMSLINE(COUNT),"^",4)=$S(FUND=4032:"03",1:FISCALYR)          ;begin fy
"RTN","RCXFMSWR",64,0)
 .   .   .   S $P(FMSLINE(COUNT),"^",4)=FISCALYR          ;begin fy
"RTN","RCXFMSWR",65,0)
 .   .   .   S $P(FMSLINE(COUNT),"^",4)=$S($E(FUND,1,4)=5287:"05",1:FISCALYR)  ;begin fy
"RTN","RCXFMSWR",66,0)
 .   .   .   S $P(FMSLINE(COUNT),"^",6)=FUND
"RTN","RCXFMSWR",67,0)
 .   .   .   S $P(FMSLINE(COUNT),"^",7)=$E(RCTRANID,1,3)  ;site number
"RTN","RCXFMSWR",68,0)
 .   .   .   S $P(FMSLINE(COUNT),"^",10)=RSC
"RTN","RCXFMSWR",69,0)
 .   .   .   ;
"RTN","RCXFMSWR",70,0)
 .   .   .   ;  vendor id
"RTN","RCXFMSWR",71,0)
 .   .   .   S $P(FMSLINE(COUNT),"^",18)="MCCFVALUE"
"RTN","RCXFMSWR",72,0)
 .   .   .   I FUND=4032!(FUND=528709) S $P(FMSLINE(COUNT),"^",18)="EXCFVALUE"
"RTN","RCXFMSWR",73,0)
 .   .   .   ;  for transaction type P4, send vendorid of PERSONOTH
"RTN","RCXFMSWR",74,0)
 .   .   .   I TYPE="P4" S $P(FMSLINE(COUNT),"^",18)="PERSONOTH"
"RTN","RCXFMSWR",75,0)
 .   .   .   ;
"RTN","RCXFMSWR",76,0)
 .   .   .   S $P(FMSLINE(COUNT),"^",20)=$J(AMOUNT,0,2)
"RTN","RCXFMSWR",77,0)
 .   .   .   S $P(FMSLINE(COUNT),"^",21)="I"
"RTN","RCXFMSWR",78,0)
 .   .   .   S $P(FMSLINE(COUNT),"^",23)=TYPE_"^~"
"RTN","RCXFMSWR",79,0)
 ;
"RTN","RCXFMSWR",80,0)
 ;  no code sheets to send
"RTN","RCXFMSWR",81,0)
 I COUNT=0 Q "0^No wr code sheets to send for this month"
"RTN","RCXFMSWR",82,0)
 ;
"RTN","RCXFMSWR",83,0)
 S CR2="CR2^"_$E(RCDATEND,2,3)_"^"_$E(RCDATEND,4,5)_"^"_$E(RCDATEND,6,7)
"RTN","RCXFMSWR",84,0)
 S $P(CR2,"^",10)="E"
"RTN","RCXFMSWR",85,0)
 S $P(CR2,"^",13)=999999999999
"RTN","RCXFMSWR",86,0)
 S $P(CR2,"^",15)=$J(DOCTOTAL,0,2)
"RTN","RCXFMSWR",87,0)
 S $P(CR2,"^",17)=$E(RCDATEND,2,3)
"RTN","RCXFMSWR",88,0)
 S $P(CR2,"^",18)=$E(RCDATEND,4,5)
"RTN","RCXFMSWR",89,0)
 S $P(CR2,"^",19)=$E(RCDATEND,6,7)_"^~"
"RTN","RCXFMSWR",90,0)
 ;
"RTN","RCXFMSWR",91,0)
 ;  put together document in gcs
"RTN","RCXFMSWR",92,0)
 N %DT,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCXFMSWR",93,0)
 S Y=$E(RCDATEND,1,5)_"00" D DD^%DT
"RTN","RCXFMSWR",94,0)
 S DESCRIP="Monthly Write Off for "_Y
"RTN","RCXFMSWR",95,0)
 I 'RCGECSDA D CONTROL^GECSUFMS("A",$E(RCTRANID,1,3),RCTRANID,"WR",10,0,"",DESCRIP)
"RTN","RCXFMSWR",96,0)
 I RCGECSDA D REBUILD^GECSUFM1(RCGECSDA,"A",10,"N","Rebuild "_DESCRIP) S GECSFMS("DA")=RCGECSDA
"RTN","RCXFMSWR",97,0)
 ;
"RTN","RCXFMSWR",98,0)
 ;  store document in gcs
"RTN","RCXFMSWR",99,0)
 D SETCS^GECSSTAA(GECSFMS("DA"),CR2)
"RTN","RCXFMSWR",100,0)
 F COUNT=1:1 Q:'$D(FMSLINE(COUNT))  D SETCS^GECSSTAA(GECSFMS("DA"),FMSLINE(COUNT))
"RTN","RCXFMSWR",101,0)
 D SETCODE^GECSSDCT(GECSFMS("DA"),"D RETN^RCFMFN02")
"RTN","RCXFMSWR",102,0)
 D SETSTAT^GECSSTAA(GECSFMS("DA"),"Q")
"RTN","RCXFMSWR",103,0)
 ;  set the key for lookup
"RTN","RCXFMSWR",104,0)
 D SETKEY^GECSSTAA(GECSFMS("DA"),"WR-"_$E(RCDATEND,1,5)_"00")
"RTN","RCXFMSWR",105,0)
 ;
"RTN","RCXFMSWR",106,0)
 ;  return 1 for success ^ fms document transaction number
"RTN","RCXFMSWR",107,0)
 Q "1^WR-"_$P(GECSFMS("CTL"),"^",9)
"VER")
8.0^22.0
"BLD",4377,6)
^SEQ #202
**END**
**END**
