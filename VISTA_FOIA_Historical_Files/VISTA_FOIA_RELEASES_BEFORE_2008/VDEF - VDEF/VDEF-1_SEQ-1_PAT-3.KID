Released VDEF*1*3 SEQ #1
Extracted from mail message
**KIDS**:VDEF*1.0*3^

**INSTALL NAME**
VDEF*1.0*3
"BLD",6196,0)
VDEF*1.0*3^VDEF^0^3051222^y
"BLD",6196,1,0)
^^628^628^3051222^
"BLD",6196,1,1,0)
PLEASE READ THE ENTIRE DESCRIPTION AND INSTALLATION INSTRUCTIONS
"BLD",6196,1,2,0)
BEFORE INSTALLING THIS PATCH.
"BLD",6196,1,3,0)
 
"BLD",6196,1,4,0)
 
"BLD",6196,1,5,0)
DESCRIPTION:
"BLD",6196,1,6,0)
============
"BLD",6196,1,7,0)
 
"BLD",6196,1,8,0)
This patch fixes 4 problems in the VistA Data Extraction Framework
"BLD",6196,1,9,0)
(VDEF) V1.0 functionality:
"BLD",6196,1,10,0)
 
"BLD",6196,1,11,0)
 1) Adds the name of the Request Queue to the VDEF Alert message.
"BLD",6196,1,12,0)
 
"BLD",6196,1,13,0)
 2) Eliminates false VDEF Alerts.
"BLD",6196,1,14,0)
 
"BLD",6196,1,15,0)
 3) Eliminates the problem of VDEF Request Queue processor not being
"BLD",6196,1,16,0)
    restarted by TaskMan.
"BLD",6196,1,17,0)
 
"BLD",6196,1,18,0)
 4) No longer sets the flag for unread VDEF Alerts to be sent to a mail
"BLD",6196,1,19,0)
    group supervisor.
"BLD",6196,1,20,0)
 
"BLD",6196,1,21,0)
This patch also includes numerous enhancements to the VistA Data
"BLD",6196,1,22,0)
Extraction Framework (VDEF) functionality:
"BLD",6196,1,23,0)
 
"BLD",6196,1,24,0)
 1) In the VDEF Configuration and Status Menu [VDEF CONFIGURATION MENU],
"BLD",6196,1,25,0)
    the options marked below with an asterisk now return to the option
"BLD",6196,1,26,0)
    prompt instead of going back to the main VDEF Configuration and Status
"BLD",6196,1,27,0)
    Menu.
"BLD",6196,1,28,0)
 
"BLD",6196,1,29,0)
      Site   Site-Wide Parameters
"BLD",6196,1,30,0)
    * Req    Request Queue Parameters
"BLD",6196,1,31,0)
    * ActR   Activate/Inactivate Requestor
"BLD",6196,1,32,0)
    * SusR   Suspend/Run Request Queue
"BLD",6196,1,33,0)
    * Cust   VDEF Custodial Package Activate/Inactivate
"BLD",6196,1,34,0)
    * API    VDEF Event API Activate/Inactivate
"BLD",6196,1,35,0)
      Stat   Status of VDEF components
"BLD",6196,1,36,0)
    * Sch    Request Processor Schedule
"BLD",6196,1,37,0)
 
"BLD",6196,1,38,0)
 2) A new process, the "VDEF Request Queue Monitor" has been added to
"BLD",6196,1,39,0)
    monitor the VDEF Request Queue process and restart it when it stops
"BLD",6196,1,40,0)
    if the state of the Request Queue is Running. This new monitor is
"BLD",6196,1,41,0)
    automatically started by the VDEF Startup option. This process is
"BLD",6196,1,42,0)
    hardcoded to run every 10 minutes. The VDEF Request Queue Monitor will
"BLD",6196,1,43,0)
    also automatically requeue any Checked Out and Errored Out VDEF
"BLD",6196,1,44,0)
    requests.
"BLD",6196,1,45,0)
 
"BLD",6196,1,46,0)
 3) VDEF Alert messages are now prefixed with the date & time of the
"BLD",6196,1,47,0)
    alert in the format MM/DD/YY@HH:MM:SS.
"BLD",6196,1,48,0)
 
"BLD",6196,1,49,0)
 4) Original VDEF Alert message texts are clearer in context.
"BLD",6196,1,50,0)
 
"BLD",6196,1,51,0)
 5) New VDEF Alerts have been added.
"BLD",6196,1,52,0)
    - VDEF CHECKED OUT MONITOR FAILED TO START. CHECK ERROR TRAP.
"BLD",6196,1,53,0)
    - RECORD <IEN> IN QUEUE <QUEUE NAME> HUNG IN CHECKED OUT STATUS.
"BLD",6196,1,54,0)
    - VDEF REQUEST PROCESS <QUEUE NAME> FAILED TO START. CHECK ERROR
"BLD",6196,1,55,0)
      TRAP.
"BLD",6196,1,56,0)
    - VDEF QUEUE PROCESS MONITOR DID NOT START. CHECK ERROR TRAP.
"BLD",6196,1,57,0)
    - VDEF HAS REQUEUED CHECKED OUT RECORDS. NO ACTION NEEDED.
"BLD",6196,1,58,0)
    - VDEF HAS REQUEUED ERRORED OUT RECORDS. NO ACTION NEEDED.
"BLD",6196,1,59,0)
    - VDEF QUEUE PROCESS MONITOR HAS EXITED.
"BLD",6196,1,60,0)
    - VDEF QUEUE '"_QUEUE_"' AUTO-RESTARTED. NO ACTION REQUIRED.
"BLD",6196,1,61,0)
    - VDEF QUEUE '"_QUEUE_"' IS SUSPENDED. PLEASE START IT.
"BLD",6196,1,62,0)
    - VDEF REQUEST QUEUE PROCESSOR FOR "_$P(QUEUE,U)_" HAS EXITED.
"BLD",6196,1,63,0)
 
"BLD",6196,1,64,0)
 6) All VDEF alerts will send a MailMan message to the VDEF developer
"BLD",6196,1,65,0)
    On FORUM that includes the alert text, the site name and ID and
"BLD",6196,1,66,0)
    the date & time of the alert.
"BLD",6196,1,67,0)
 
"BLD",6196,1,68,0)
 7) Includes a new program VDEFKIDS that has two APIs, VDEFKIDS
"BLD",6196,1,69,0)
    and POSTIN^VDEFKIDS.  These APIs are defined in the build as the
"BLD",6196,1,70,0)
    Environment Check and post install routines.  Although the
"BLD",6196,1,71,0)
    Pre-install routine does pre-installation type functions, it is
"BLD",6196,1,72,0)
    defined in the build as the Environment Check routine, NOT the
"BLD",6196,1,73,0)
    Pre-install routine. This is to prevent any VDEF* routines that
"BLD",6196,1,74,0)
    are in the build from being filed over actively running routines
"BLD",6196,1,75,0)
    causing an EDITED error trap error. By the time KIDS runs the
"BLD",6196,1,76,0)
    Pre-Install routine, ALL the routines in the build have already
"BLD",6196,1,77,0)
    been loaded whereas when the Environment routine is run, no other
"BLD",6196,1,78,0)
    programs in the build have been installed.
"BLD",6196,1,79,0)
 
"BLD",6196,1,80,0)
    The pre-install routine will:
"BLD",6196,1,81,0)
     - suspend all VDEF Request Queues
"BLD",6196,1,82,0)
     - stop the TaskMan tasks associated with these queues
"BLD",6196,1,83,0)
     - stop the VDEF checked out request monitor
"BLD",6196,1,84,0)
     - stop the VDEF Request Queue process monitor
"BLD",6196,1,85,0)
 
"BLD",6196,1,86,0)
    The post-install routine (in production systems only) will:
"BLD",6196,1,87,0)
     - un-suspend all VDEF Request Queues (change state to running)
"BLD",6196,1,88,0)
     - create new TaskMan tasks for these queues
"BLD",6196,1,89,0)
     - start the VDEF checked out request monitor
"BLD",6196,1,90,0)
     - start the VDEF Request Queue process monitor
"BLD",6196,1,91,0)
 
"BLD",6196,1,92,0)
 8) The Status of VDEF components [VDEF Status] option screen has been
"BLD",6196,1,93,0)
    modified. See the example that follows.
"BLD",6196,1,94,0)
     - The VMS Process ID associated with the VDEF Request Queue process
"BLD",6196,1,95,0)
       task has been added.
"BLD",6196,1,96,0)
     - The TaskMan task status has been added.
"BLD",6196,1,97,0)
     - The counter for Processed requests has been deleted.  This was
"BLD",6196,1,98,0)
       useless information because it was simply a count of the number
"BLD",6196,1,99,0)
       of records in the VDEF Request Queue that are in the Processed
"BLD",6196,1,100,0)
       status and the fact that the count stopped at ">100".
"BLD",6196,1,101,0)
     - The counter for Queued Up has been changed to display the actual
"BLD",6196,1,102,0)
       number up to a maximum of 1000. If more than 1000 are queued up,
"BLD",6196,1,103,0)
       the display will show "> 1000".
"BLD",6196,1,104,0)
     - The description "Requests in the queue" has been changed to
"BLD",6196,1,105,0)
       "Requests waiting for purge"
"BLD",6196,1,106,0)
 
"BLD",6196,1,107,0)
   (example)
"BLD",6196,1,108,0)
   Request Processor Status
"BLD",6196,1,109,0)
     MAINTENANCE: Running and not Scheduled
"BLD",6196,1,110,0)
     Current Task # [Proc]: 7399750 [21663B42]
"BLD",6196,1,111,0)
     Requests waiting for purge: 14      Last request#: 14
"BLD",6196,1,112,0)
     Checked Out(0)  Queued Up(0)  Errored Out(0)
"BLD",6196,1,113,0)
 
"BLD",6196,1,114,0)
 9) Changed the M lock used to protect the VDEF Request Queue so that
"BLD",6196,1,115,0)
    it doesn't prevent using FileMan to access the VDEF queue file.
"BLD",6196,1,116,0)
 
"BLD",6196,1,117,0)
10) Creates the new Application "VDEF ALERTS" and the new Mail Group
"BLD",6196,1,118,0)
    "VDEF NATIONAL ALERTS" and changes the VistA Mail Group for VDEF
"BLD",6196,1,119,0)
    Alerts from the HL7 group to the new VDEF group.
"BLD",6196,1,120,0)
 
"BLD",6196,1,121,0)
11) Removed the Scheduled task from the Status of VDEF components [VDEF
"BLD",6196,1,122,0)
    Status] display and added the TaskMan status of the task.
"BLD",6196,1,123,0)
 
"BLD",6196,1,124,0)
12) Removed the XQASUPV variable from the alert call so that VDEF
"BLD",6196,1,125,0)
    alerts are no longer forwarded to unread alerts supervisor mail
"BLD",6196,1,126,0)
    group.
"BLD",6196,1,127,0)
 
"BLD",6196,1,128,0)
13) Added the date and time and the TaskMan task status to the VDEF
"BLD",6196,1,129,0)
    Status display.
"BLD",6196,1,130,0)
 
"BLD",6196,1,131,0)
 
"BLD",6196,1,132,0)
IRM NOTES:
"BLD",6196,1,133,0)
===========
"BLD",6196,1,134,0)
Before installing this patch, make sure you have completely installed 
"BLD",6196,1,135,0)
XU*8.0*339 and run the '% program' conversion RELOAD^ZTMGRSET utility.
"BLD",6196,1,136,0)
 
"BLD",6196,1,137,0)
This patch REQUIRES Kernel patch XU*8.0*339 which fixes a bug in the
"BLD",6196,1,138,0)
$$ASKSTOP^%ZTLOAD() API and also creates a new API JOB^%ZTLOAD().
"BLD",6196,1,139,0)
VDEF requires both of these to be updated by the XU*8.0*339 patch in
"BLD",6196,1,140,0)
Order for VDEF*1*3 to install.
"BLD",6196,1,141,0)
 
"BLD",6196,1,142,0)
This VDEF patch uses the $$JOB^%ZTLOAD functionality released with
"BLD",6196,1,143,0)
XU*8*399. Please confirm that the post-KIDS install steps for XU*8*399
"BLD",6196,1,144,0)
have been done.  The following MUMPS code should indicate that XU*8*399 is
"BLD",6196,1,145,0)
in the second line of the %ZTLOAD routine:
"BLD",6196,1,146,0)
>ZL %ZTLOAD ZP +1:+2
"BLD",6196,1,147,0)
 
"BLD",6196,1,148,0)
For the duration of the installation of this patch, all VDEF Request
"BLD",6196,1,149,0)
Queue processors that were in the Running state will be temporarily 
"BLD",6196,1,150,0)
suspended.  The pre-install and post-install routines will suspend and 
"BLD",6196,1,151,0)
then restart all Request Queue processors that were in the Running state 
"BLD",6196,1,152,0)
after installation of this patch.  VDEF messages will continue to 
"BLD",6196,1,153,0)
accumulate in the queues during suspension and will start processing 
"BLD",6196,1,154,0)
again after the patch has completed installation. This is the equivalent 
"BLD",6196,1,155,0)
of you using the VDEF Configuration and Status Menu option "SusR 
"BLD",6196,1,156,0)
Suspend/Run Request Queue" to suspend and restart the Request Queues.
"BLD",6196,1,157,0)
 
"BLD",6196,1,158,0)
When you see the message "Waiting for processes to quit . .", there
"BLD",6196,1,159,0)
will be approximately a 5 second wait.
"BLD",6196,1,160,0)
 
"BLD",6196,1,161,0)
PLEASE NOTE: The VDEF Post-install program will not start the VDEF 
"BLD",6196,1,162,0)
processes on test or Legacy systems that have the Test System flag set.
"BLD",6196,1,163,0)
 
"BLD",6196,1,164,0)
 
"BLD",6196,1,165,0)
IRM'S POST-INSTALLATION REQUIREMENTS
"BLD",6196,1,166,0)
====================================
"BLD",6196,1,167,0)
1. NEW MAIL GROUP AND APPLICATION FOR VDEF ALERTS
"BLD",6196,1,168,0)
   After you have installed this patch, there will be a new Application
"BLD",6196,1,169,0)
   named VDEF ALERTS which will have the Mail Group VDEF NATIONAL ALERTS
"BLD",6196,1,170,0)
   assigned to it.  The new Mail Group will not have any local members in
"BLD",6196,1,171,0)
   it. YOU MUST ASSIGN THE LOCAL MEMBERS.  It will have the remote member
"BLD",6196,1,172,0)
   GARDNER.JEFF@FORUM.VA.GOV. Please verify these that these two new
"BLD",6196,1,173,0)
   definitions are correctly set up. If a site does not have the Mail
"BLD",6196,1,174,0)
   Group VDEF NATIONAL ALERTS, VDEF will continue the alerts to the HL7
"BLD",6196,1,175,0)
   Mail Group.
"BLD",6196,1,176,0)
 
"BLD",6196,1,177,0)
2. MODIFY THE 'VDEF STARTUP OPTION' SCHEDULED TASK.
"BLD",6196,1,178,0)
   Using the TaskMan option 'Schedule/Unschedule Options', edit the
"BLD",6196,1,179,0)
   parameters for the task VDEF STARTUP OPTION as indicated in the screen
"BLD",6196,1,180,0)
   example shown here.
"BLD",6196,1,181,0)
 
"BLD",6196,1,182,0)
                           Edit Option Schedule
"BLD",6196,1,183,0)
     Option Name: VDEF STARTUP OPTION           
"BLD",6196,1,184,0)
     Menu Text: VDEF STARTUP OPTION                 TASK ID: 5998624
"BLD",6196,1,185,0)
 ___________________________________________________________________
"BLD",6196,1,186,0)
   QUEUED TO RUN AT WHAT TIME: (Enter current date/time + 5 minutes)
"BLD",6196,1,187,0)
 DEVICE FOR QUEUED JOB OUTPUT: 
"BLD",6196,1,188,0)
  QUEUED TO RUN ON VOLUME SET: 
"BLD",6196,1,189,0)
       RESCHEDULING FREQUENCY: 300S  (Enter 300S)
"BLD",6196,1,190,0)
              TASK PARAMETERS: 
"BLD",6196,1,191,0)
             SPECIAL QUEUEING: Startup Persistent (Change from STARTUP
"BLD",6196,1,192,0)
                                                   to Startup Persistent
"BLD",6196,1,193,0)
 
"BLD",6196,1,194,0)
 
"BLD",6196,1,195,0)
This patch addresses the following New Service Request (NSR):
"BLD",6196,1,196,0)
=============================================================
"BLD",6196,1,197,0)
There is no NSR associated with this patch.
"BLD",6196,1,198,0)
 
"BLD",6196,1,199,0)
 
"BLD",6196,1,200,0)
This patch addresses the following Remedy ticket(s):
"BLD",6196,1,201,0)
====================================================
"BLD",6196,1,202,0)
65927,99499,100952,102184,102329,103092,103286,104402,105065,106497
"BLD",6196,1,203,0)
106674,107101,107142,107326,107508,107589,107773,107927,108431,108661
"BLD",6196,1,204,0)
108873,108915,109469,109521,109627,109638,109715,109725,110057,110285
"BLD",6196,1,205,0)
110501,110688,110765,110891,111109,112391,112642
"BLD",6196,1,206,0)
 
"BLD",6196,1,207,0)
 
"BLD",6196,1,208,0)
Overview of Patch Items:
"BLD",6196,1,209,0)
========================
"BLD",6196,1,210,0)
1) A pre-install routine, PREIN^VDEFKIDS, is included in this patch that
"BLD",6196,1,211,0)
   suspends VDEF Request Queue processing through the duration of this
"BLD",6196,1,212,0)
   patch installation. It also stops and deletes the TaskMan tasks driving
"BLD",6196,1,213,0)
   the processes and the VDEF monitor processes.
"BLD",6196,1,214,0)
 
"BLD",6196,1,215,0)
2) A post-install routine, POSTIN^VDEFKIDS, is included in this patch
"BLD",6196,1,216,0)
   that restarts VDEF Request Queues after installation of this patch.
"BLD",6196,1,217,0)
   It also creates new VDEF monitor tasks.
"BLD",6196,1,218,0)
 
"BLD",6196,1,219,0)
3) The routine VDEFUTIL has been changed to not set the flag for an 
"BLD",6196,1,220,0)
   unread VDEF Alert to be sent to the supervisor. This program has also
"BLD",6196,1,221,0)
   been changed to prefix the date & time to the VDEF alert text and to
"BLD",6196,1,222,0)
   use the new VDEF alert mail group to send a MailMan message to the VDEF
"BLD",6196,1,223,0)
   developer whenever a VDEF alert occurs.
"BLD",6196,1,224,0)
 
"BLD",6196,1,225,0)
4) The routine VDEFCONT has been changed to eliminate the false VDEF
"BLD",6196,1,226,0)
   Alerts from being generated.  It has also been changed to include
"BLD",6196,1,227,0)
   the name of the Request Queue in the VDEF Alert message.
"BLD",6196,1,228,0)
 
"BLD",6196,1,229,0)
5) The routine VDEFREQ has been changed to eliminate the problem of
"BLD",6196,1,230,0)
   TaskMan not restarting the VDEF Request Queue processor EN^VDEFREQ.
"BLD",6196,1,231,0)
   Instead, VDEFREQ does not re-schedule itself with TaskMan but uses
"BLD",6196,1,232,0)
   an M HANG command loop based on the number of seconds in file
"BLD",6196,1,233,0)
   #579.3, field .05 - CHECK-OUT TIME LIMIT.
"BLD",6196,1,234,0)
 
"BLD",6196,1,235,0)
6) The routine VDEFMNU has been changed to display the VMS process ID
"BLD",6196,1,236,0)
   for the Request Queue Task in the Status of VDEF components [VDEF
"BLD",6196,1,237,0)
   Status] display. The counter for Processed Requests has been dropped
"BLD",6196,1,238,0)
   from the Status of VDEF components [VDEF Status] display. It was
"BLD",6196,1,239,0)
   useless information.
"BLD",6196,1,240,0)
 
"BLD",6196,1,241,0)
7) The routine VDEFQM has been changed to incorporate two VDEF APIs
"BLD",6196,1,242,0)
   that will requeue requests that are stuck in the Checked Out or
"BLD",6196,1,243,0)
   Errored Out state.
"BLD",6196,1,244,0)
 
"BLD",6196,1,245,0)
8) A new routine VDEFMON has been created to monitor the Request Queue
"BLD",6196,1,246,0)
   process and restart it if it dies as well as automatically re-queuing
"BLD",6196,1,247,0)
   requests that have Errored Out or get stuck in the Checked Out status.
"BLD",6196,1,248,0)
 
"BLD",6196,1,249,0)
9) There are no VDEF global changes in this patch.
"BLD",6196,1,250,0)
 
"BLD",6196,1,251,0)
 
"BLD",6196,1,252,0)
Test Sites:
"BLD",6196,1,253,0)
===========
"BLD",6196,1,254,0)
BAY PINES
"BLD",6196,1,255,0)
EL PASO
"BLD",6196,1,256,0)
LOUISVILLE
"BLD",6196,1,257,0)
MARYLAND (Integrated)
"BLD",6196,1,258,0)
MEMPHIS
"BLD",6196,1,259,0)
PHILADELPHIA
"BLD",6196,1,260,0)
PHOENIX
"BLD",6196,1,261,0)
SAN FRANCISCO
"BLD",6196,1,262,0)
 
"BLD",6196,1,263,0)
 
"BLD",6196,1,264,0)
LOCATION OF DOCUMENTATION FOR THIS PATCH
"BLD",6196,1,265,0)
========================================
"BLD",6196,1,266,0)
There will be a documentation update for this patch to the VDEF V1.0 
"BLD",6196,1,267,0)
Installation & User Configuration Guide and the VDEF V1.0 Technical Manual
"BLD",6196,1,268,0)
 
"BLD",6196,1,269,0)
 
"BLD",6196,1,270,0)
INSTALLATION INSTRUCTIONS
"BLD",6196,1,271,0)
=========================
"BLD",6196,1,272,0)
 
"BLD",6196,1,273,0)
Install Time - less than 5 minutes
"BLD",6196,1,274,0)
 
"BLD",6196,1,275,0)
1. LOAD TRANSPORT GLOBAL
"BLD",6196,1,276,0)
   ---------------------
"BLD",6196,1,277,0)
   Choose the PackMan message containing this patch and invoke the
"BLD",6196,1,278,0)
   INSTALL/CHECK MESSAGE PackMan option.  The build includes an
"BLD",6196,1,279,0)
   Environment check routine VDEFKIDS.
"BLD",6196,1,280,0)
 
"BLD",6196,1,281,0)
Loading Distribution...
"BLD",6196,1,282,0)
 
"BLD",6196,1,283,0)
   VDEF*1.0*3
"BLD",6196,1,284,0)
Will first run the Environment Check Routine, VDEFKIDS
"BLD",6196,1,285,0)
 
"BLD",6196,1,286,0)
2. COMPONENTS SENT WITH PATCH
"BLD",6196,1,287,0)
   --------------------------
"BLD",6196,1,288,0)
   Routine Summary
"BLD",6196,1,289,0)
   The following routines are included in this patch.  The second line
"BLD",6196,1,290,0)
   of Each of these routines now looks like:
"BLD",6196,1,291,0)
   ;;1.0;VDEF;**3**;Dec 28, 2004
"BLD",6196,1,292,0)
 
"BLD",6196,1,293,0)
                 Checksum
"BLD",6196,1,294,0)
Routine         Old       New      Patch List
"BLD",6196,1,295,0)
VDEFCONT      8818367   8818367    **3**
"BLD",6196,1,296,0)
VDEFKIDS     13711730   5283479    **3**
"BLD",6196,1,297,0)
VDEFMNU      47567743  14047707    **3**
"BLD",6196,1,298,0)
VDEFMON       8468795   3113945    **3**
"BLD",6196,1,299,0)
VDEFQM       12629742  12740824    **3**
"BLD",6196,1,300,0)
VDEFREQ       7914740   7914740    **3**
"BLD",6196,1,301,0)
VDEFUTIL      5715842   5715842    **3**
"BLD",6196,1,302,0)
 
"BLD",6196,1,303,0)
Sites should use CHECK^XTSUMBLD to verify checksums.
"BLD",6196,1,304,0)
 
"BLD",6196,1,305,0)
NOTE: The above checksums are based on your site having installed
"BLD",6196,1,306,0)
VDEF*1*3 v9. If you are installing VDEF*1*3 for the first time or if you 
"BLD",6196,1,307,0)
did not install VDEF*1*3 v9, your old checksums will not match those in 
"BLD",6196,1,308,0)
the above list.
"BLD",6196,1,309,0)
 
"BLD",6196,1,310,0)
If you are installing VDEF*1*3 for the first time and all your current
"BLD",6196,1,311,0)
VDEF* programs are V1.0, your old checksums should be:
"BLD",6196,1,312,0)
VDEFCONT    10134570
"BLD",6196,1,313,0)
VDEFKIDS         N/A
"BLD",6196,1,314,0)
VDEFMNU     12329753
"BLD",6196,1,315,0)
VDEFMON          N/A
"BLD",6196,1,316,0)
VDEFQM      11427789
"BLD",6196,1,317,0)
VDEFREQ      7981911
"BLD",6196,1,318,0)
VDEFUTIL     1413855
"BLD",6196,1,319,0)
 
"BLD",6196,1,320,0)
3. START UP KIDS
"BLD",6196,1,321,0)
   -------------
"BLD",6196,1,322,0)
   Start up the Kernel Installation and Distribution System Menu
"BLD",6196,1,323,0)
   [XPD MAIN]:
"BLD",6196,1,324,0)
        Edits and Distribution
"BLD",6196,1,325,0)
        Utilities
"BLD",6196,1,326,0)
        Installation
"BLD",6196,1,327,0)
 
"BLD",6196,1,328,0)
   Select Kernel Installation & Distribution System Option:
"BLD",6196,1,329,0)
     INStallation
"BLD",6196,1,330,0)
 
"BLD",6196,1,331,0)
        Load a Distribution
"BLD",6196,1,332,0)
        Print Transport Global
"BLD",6196,1,333,0)
        Compare Transport Global to Current System
"BLD",6196,1,334,0)
        Verify Checksums in Transport Global
"BLD",6196,1,335,0)
        Install Package(s)
"BLD",6196,1,336,0)
        Restart Install of Package(s)
"BLD",6196,1,337,0)
        Unload a Distribution
"BLD",6196,1,338,0)
        Backup a Transport Global
"BLD",6196,1,339,0)
 
"BLD",6196,1,340,0)
     Select Installation Option:
"BLD",6196,1,341,0)
 
"BLD",6196,1,342,0)
4. Select Installation Option:
"BLD",6196,1,343,0)
   ---------------------------
"BLD",6196,1,344,0)
   When prompted for the INSTALL NAME, enter VDEF*1.0*3.
"BLD",6196,1,345,0)
 
"BLD",6196,1,346,0)
    a.  Backup a Transport Global - This option will create a backup
"BLD",6196,1,347,0)
        message of any routines exported with this patch. It will not
"BLD",6196,1,348,0)
        backup any other changes such as DD's or templates.
"BLD",6196,1,349,0)
    b.  Compare Transport Global to Current System - This option will
"BLD",6196,1,350,0)
        allow you to view all changes that will be made when this
"BLD",6196,1,351,0)
        patch is installed.  It compares all components of this patch
"BLD",6196,1,352,0)
        (routines, DD's, templates, etc.).
"BLD",6196,1,353,0)
    c.  Verify Checksums in Transport Global - This option will allow
"BLD",6196,1,354,0)
        you to ensure the integrity of the routines that are in the
"BLD",6196,1,355,0)
        transport global.
"BLD",6196,1,356,0)
 
"BLD",6196,1,357,0)
5. Select Installation Option: Install Package(s)
"BLD",6196,1,358,0)
   ----------------------------------------------
"BLD",6196,1,359,0)
   Select INSTALL NAME: VDEF*1.0*3   Loaded from Distribution
"BLD",6196,1,360,0)
     MM/DD/YY@HH:MM
"BLD",6196,1,361,0)
       => VDEF*1*3 v9
"BLD",6196,1,362,0)
 
"BLD",6196,1,363,0)
   Select Installation Option: INstall Package(s)
"BLD",6196,1,364,0)
 
"BLD",6196,1,365,0)
     => VDEF*1*3 v9
"BLD",6196,1,366,0)
 
"BLD",6196,1,367,0)
   This Distribution was loaded on Dec 22, 2005@11:48:44 with header of
"BLD",6196,1,368,0)
   VDEF*1*3 v9
"BLD",6196,1,369,0)
   It consisted of the following Install(s):
"BLD",6196,1,370,0)
     VDEF*1.0*3   Checking Install for Package VDEF*1.0*3
"BLD",6196,1,371,0)
 
"BLD",6196,1,372,0)
   Will first run the Environment Check Routine, VDEFKIDS
"BLD",6196,1,373,0)
 
"BLD",6196,1,374,0)
   Suspending Request Queues and stopping associated TaskMan jobs
"BLD",6196,1,375,0)
 
"BLD",6196,1,376,0)
   Stopping the MONITOR^VDEFCONT task
"BLD",6196,1,377,0)
 
"BLD",6196,1,378,0)
   Stopping the MONITOR^VDEFMON task
"BLD",6196,1,379,0)
 
"BLD",6196,1,380,0)
   Waiting for processes to quit  . . .
"BLD",6196,1,381,0)
 
"BLD",6196,1,382,0)
   Install Questions for VDEF*1.0*3
"BLD",6196,1,383,0)
 
"BLD",6196,1,384,0)
 
"BLD",6196,1,385,0)
   Incoming Mail Groups:
"BLD",6196,1,386,0)
 
"BLD",6196,1,387,0)
   Enter the Coordinator for Mail Group 'VDEF NATIONAL ALERTS':  //
"BLD",6196,1,388,0)
    <enter your name>   
"BLD",6196,1,389,0)
 
"BLD",6196,1,390,0)
   Want KIDS to INHIBIT LOGONs during the install? YES// NO
"BLD",6196,1,391,0)
   Want to DISABLE Scheduled Options, Menu Options, and Protocols?
"BLD",6196,1,392,0)
   YES// NO
"BLD",6196,1,393,0)
 
"BLD",6196,1,394,0)
   Enter the Device you want to print the Install messages.
"BLD",6196,1,395,0)
   You can queue the install by enter a 'Q' at the device prompt.
"BLD",6196,1,396,0)
   Enter a '^' to abort the install.
"BLD",6196,1,397,0)
 
"BLD",6196,1,398,0)
   DEVICE: HOME//   TCP
"BLD",6196,1,399,0)
 
"BLD",6196,1,400,0)
 
"BLD",6196,1,401,0)
    Install Started for VDEF*1.0*3 : 
"BLD",6196,1,402,0)
                  Dec 22, 2005@11:50:14
"BLD",6196,1,403,0)
 
"BLD",6196,1,404,0)
   Build Distribution Date: Dec 22, 2005
"BLD",6196,1,405,0)
 
"BLD",6196,1,406,0)
    Installing Routines:
"BLD",6196,1,407,0)
                  Dec 22, 2005@11:50:14
"BLD",6196,1,408,0)
 
"BLD",6196,1,409,0)
    Installing PACKAGE COMPONENTS: 
"BLD",6196,1,410,0)
 
"BLD",6196,1,411,0)
    Installing MAIL GROUP
"BLD",6196,1,412,0)
 
"BLD",6196,1,413,0)
    Installing HL7 APPLICATION PARAMETER
"BLD",6196,1,414,0)
                  Dec 22, 2005@11:50:14
"BLD",6196,1,415,0)
 
"BLD",6196,1,416,0)
    Running Post-Install Routine: POSTIN^VDEFKIDS
"BLD",6196,1,417,0)
 
"BLD",6196,1,418,0)
   (NOTE: the next 4 lines will not be displayed in a test or Legacy
"BLD",6196,1,419,0)
    Environment installation. Instead it will display:
"BLD",6196,1,420,0)
    "VDEF is not started on test systems."
"BLD",6196,1,421,0)
 
"BLD",6196,1,422,0)
   Running Post-Install Routine: POSTIN^VDEFKIDS
"BLD",6196,1,423,0)
 
"BLD",6196,1,424,0)
   Starting the Request Queues and associated Tasks
"BLD",6196,1,425,0)
 
"BLD",6196,1,426,0)
   Starting the MONITOR^VDEFCONT task
"BLD",6196,1,427,0)
 
"BLD",6196,1,428,0)
   Starting the MONITOR^VDEFMON task
"BLD",6196,1,429,0)
 
"BLD",6196,1,430,0)
   Updating Routine file...
"BLD",6196,1,431,0)
 
"BLD",6196,1,432,0)
   Updating KIDS files...
"BLD",6196,1,433,0)
 
"BLD",6196,1,434,0)
   VDEF*1.0*3 Installed.
"BLD",6196,1,435,0)
 
"BLD",6196,1,436,0)
               Dec 22, 2005@11:50:14                                   
"BLD",6196,1,437,0)
 
"BLD",6196,1,438,0)
   NO Install Message sent
"BLD",6196,1,439,0)
 
"BLD",6196,1,440,0)
   100% Complete  
"BLD",6196,1,441,0)
 
"BLD",6196,1,442,0)
   Install Completed
"BLD",6196,1,443,0)
 
"BLD",6196,1,444,0)
 
"BLD",6196,1,445,0)
BUILD COMPONENTS
"BLD",6196,1,446,0)
=================
"BLD",6196,1,447,0)
 
"BLD",6196,1,448,0)
ENVIRONMENT CHECK :  VDEFKIDS            DELETE ENV ROUTINE: No
"BLD",6196,1,449,0)
 PRE-INIT ROUTINE :                      DELETE PRE-INIT ROUTINE: No
"BLD",6196,1,450,0)
 POST-INIT ROUTINE : POSTIN^VDEFKIDS     DELETE POST-INIT ROUTINE: No
"BLD",6196,1,451,0)
 PRE-TRANSPORT RTN : 
"BLD",6196,1,452,0)
 
"BLD",6196,1,453,0)
ROUTINE:
"BLD",6196,1,454,0)
 VDEFCONT                                SEND TO SITE
"BLD",6196,1,455,0)
 VDEFMNU                                 SEND TO SITE
"BLD",6196,1,456,0)
 VDEFMON                                 SEND TO SITE
"BLD",6196,1,457,0)
 VDEFQM                                  SEND TO SITE
"BLD",6196,1,458,0)
 VDEFREQ                                 SEND TO SITE
"BLD",6196,1,459,0)
 VDEFUTIL                                SEND TO SITE
"BLD",6196,1,460,0)
 
"BLD",6196,1,461,0)
REQUIRED BUILDS:                         ACTION:
"BLD",6196,1,462,0)
 VDEF 1.0                                Don't install, remove global
"BLD",6196,1,463,0)
 XU*8.0*339                              Don't install, remove global
"BLD",6196,1,464,0)
 
"BLD",6196,1,465,0)
 
"BLD",6196,1,466,0)
 
"BLD",6196,1,467,0)
POST INSTALLATION CHECKS:
"BLD",6196,1,468,0)
1) Verify that the three VDEF tasks shown in the example exist after
"BLD",6196,1,469,0)
   the install is complete.  The EN^VDEFREQ and MONITOR^VDEFMON tasks
"BLD",6196,1,470,0)
   should be active while the MONITOR^VDEFCONT task may be scheduled
"BLD",6196,1,471,0)
   or active.
"BLD",6196,1,472,0)
 
"BLD",6196,1,473,0)
   (example task list)
"BLD",6196,1,474,0)
 
"BLD",6196,1,475,0)
   Task list  Dec 22, 2005 11:26 am                             Page 1
"BLD",6196,1,476,0)
----------------------------------------------------------------------
"BLD",6196,1,477,0)
7399750: EN^VDEFREQ, VDEF Request Processor for MAINTENANCE.  No device.
"BLD",6196,1,478,0)
         DAYT12.  From Today at 11:26,  By you.  Started running Today
"BLD",6196,1,479,0)
         at 11:26. Job #: 560347970 [21663B42]
"BLD",6196,1,480,0)
----------------------------------------------------------------------
"BLD",6196,1,481,0)
7399751: MONITOR^VDEFCONT, VDEF Checked Out Monitor.  No device. 
"BLD",6196,1,482,0)
         DAYT12,ROU. From Today at 11:26,  By you. Scheduled for Today
"BLD",6196,1,483,0)
         at 11:27
"BLD",6196,1,484,0)
----------------------------------------------------------------------
"BLD",6196,1,485,0)
7399752: MONITOR^VDEFMON, VDEF Request Processor Monitor.  No device.
"BLD",6196,1,486,0)
         DAYT12,ROU.  From Today at 11:26,  By you.
"BLD",6196,1,487,0)
         Started running Today at 11:26.  Job #: 560552879 [21695BAF]
"BLD",6196,1,488,0)
----------------------------------------------------------------------
"BLD",6196,1,489,0)
 
"BLD",6196,1,490,0)
2) Run the Status of VDEF components [VDEF Status] display and verify the
"BLD",6196,1,491,0)
   following:
"BLD",6196,1,492,0)
   - Requestor status is Activated
"BLD",6196,1,493,0)
   - Request Processor Status is "Running"
"BLD",6196,1,494,0)
   - Task status is "Active-Running"
"BLD",6196,1,495,0)
   - the Current Task # matches the task # for the EN^VDEFREQ task.
"BLD",6196,1,496,0)
 
"BLD",6196,1,497,0)
 (example of the Status of VDEF components [VDEF Status] display)
"BLD",6196,1,498,0)
 
"BLD",6196,1,499,0)
                      VDEF Status - Dec 22, 2005@11:50:14
"BLD",6196,1,500,0)
Logical Link Status
"BLD",6196,1,501,0)
  VDEFVIE1: stopped or caught up
"BLD",6196,1,502,0)
  VDEFVIE2: stopped or caught up
"BLD",6196,1,503,0)
  VDEFVIE3: stopped or caught up
"BLD",6196,1,504,0)
 
"BLD",6196,1,505,0)
Requestor Status
"BLD",6196,1,506,0)
  MAINTENANCE: Activated        Dest.: VISTA HL7    Req. Queue: 
"BLD",6196,1,507,0)
MAINTENANCE
"BLD",6196,1,508,0)
 
"BLD",6196,1,509,0)
Request Processor Status
"BLD",6196,1,510,0)
  MAINTENANCE: Running
"BLD",6196,1,511,0)
  Current Task # [Proc]: 7410052 [21A53BA8]  Task status: Active-
"BLD",6196,1,512,0)
  Running
"BLD",6196,1,513,0)
  Requests waiting for purge: 0      Last request#: 
"BLD",6196,1,514,0)
  Checked Out(0)  Queued Up(0)  Errored Out(0)
"BLD",6196,1,515,0)
 
"BLD",6196,1,516,0)
IMPORTANT NOTES ON THE Status of VDEF components [VDEF Status] DISPLAY
"BLD",6196,1,517,0)
==========================================
"BLD",6196,1,518,0)
The "Request Processor Status" is simply the status flag of the process in
"BLD",6196,1,519,0)
a VDEF global. It is possible to have the status "Running" even if the VMS
"BLD",6196,1,520,0)
process of the task had died.
"BLD",6196,1,521,0)
 
"BLD",6196,1,522,0)
IF THE REQUEST QUEUE PROCESSOR TASK (EN^VDEFREQ) IS RUNNING:
"BLD",6196,1,523,0)
The Request Processor Status will show "Running" and the task status will 
"BLD",6196,1,524,0)
show "Active-Running".
"BLD",6196,1,525,0)
 
"BLD",6196,1,526,0)
IF THE REQUEST QUEUE PROCESSOR TASK (EN^VDEFREQ) IS SUSPENDED BY SITE 
"BLD",6196,1,527,0)
USING the VDEF Configuration and Status Menu:
"BLD",6196,1,528,0)
The Request Processor Status will show "Suspended" and the task status 
"BLD",6196,1,529,0)
will show "Interrupted".
"BLD",6196,1,530,0)
 
"BLD",6196,1,531,0)
                      VDEF Status - Dec 22, 2005@11:50:14
"BLD",6196,1,532,0)
Logical Link Status
"BLD",6196,1,533,0)
  VDEFVIE1: stopped or caught up
"BLD",6196,1,534,0)
  VDEFVIE2: stopped or caught up
"BLD",6196,1,535,0)
  VDEFVIE3: stopped or caught up
"BLD",6196,1,536,0)
 
"BLD",6196,1,537,0)
Requestor Status
"BLD",6196,1,538,0)
  MAINTENANCE: Activated      Dest.: VISTA HL7    Req. Queue: MAINTENANCE
"BLD",6196,1,539,0)
 
"BLD",6196,1,540,0)
 Request Processor Status
"BLD",6196,1,541,0)
  MAINTENANCE: Suspended
"BLD",6196,1,542,0)
  Current Task # [Proc]: 7410053 [0]  Task status: Interrupted
"BLD",6196,1,543,0)
  Requests waiting for purge: 0      Last request#: 
"BLD",6196,1,544,0)
  Checked Out(0)  Queued Up(0)  Errored Out(0)
"BLD",6196,1,545,0)
 
"BLD",6196,1,546,0)
IMPORTANT:
"BLD",6196,1,547,0)
IF THE REQUEST QUEUE PROCESSOR TASK (EN^VDEFREQ) IS RUNNING BUT THE VMS 
"BLD",6196,1,548,0)
PROCESS HAS STOPPED:
"BLD",6196,1,549,0)
The Request Processor Status will STILL show "Running" and the task status
"BLD",6196,1,550,0)
will STILL show "Active-Running".
"BLD",6196,1,551,0)
 
"BLD",6196,1,552,0)
This is because of the way that an application communicates with TaskMan 
"BLD",6196,1,553,0)
to stop a task. It makes a request to TaskMan to stop the task and waits 
"BLD",6196,1,554,0)
for the status of the task to go to "stop requested". Then the application
"BLD",6196,1,555,0)
quits back to TaskMan and only then does TaskMan update the task status to
"BLD",6196,1,556,0)
stopped or interrupted.  If the VMS process for the EN^VDEFREQ task had
"BLD",6196,1,557,0)
died, then the VDEFREQ program is not running and cannot quit back to
"BLD",6196,1,558,0)
TaskMan.  This is why the TaskMan task status stays "Active-Running".
"BLD",6196,1,559,0)
 
"BLD",6196,1,560,0)
 
"BLD",6196,1,561,0)
HOW TO VERIFY THAT THIS PATCH TESTS SUCCESSFULLY
"BLD",6196,1,562,0)
================================================
"BLD",6196,1,563,0)
1) From the VDEF Configuration and Status Menu, suspend the MAINTENANCE
"BLD",6196,1,564,0)
   request queue. You should get the two alerts shown below.
"BLD",6196,1,565,0)
 
"BLD",6196,1,566,0)
   MM/DD/YY@HH:MM:SS VDEF REQUEST QUEUE PROCESSOR FOR MAINTENANCE HAS
"BLD",6196,1,567,0)
   EXITED.
"BLD",6196,1,568,0)
   MM/DD/YY@HH:MM:SS VDEF QUEUE MAINTENANCE IS SUSPENDED. PLEASE START IT.
"BLD",6196,1,569,0)
 
"BLD",6196,1,570,0)
   Note that you may have to wait up to ten minutes to get these
"BLD",6196,1,571,0)
   alerts. This is the interval that the VDEF process monitor runs at.
"BLD",6196,1,572,0)
 
"BLD",6196,1,573,0)
2) From the VDEF Configuration and Status Menu, restart the MAINTENANCE
"BLD",6196,1,574,0)
   Request Queue by changing the status to Running.
"BLD",6196,1,575,0)
 
"BLD",6196,1,576,0)
3) WITHOUT suspending the VDEF Request Queue 'MAINTENANCE', use the VDEF 
"BLD",6196,1,577,0)
   Status display to identify the VMS process ID for the Request Queue
"BLD",6196,1,578,0)
   Task. Then use ^RESJOB to kill that job.  You should get the
"BLD",6196,1,579,0)
   following alert:
"BLD",6196,1,580,0)
 
"BLD",6196,1,581,0)
   MM/DD/YY@HH:MM:SS VDEF QUEUE MAINTENANCE AUTO-RESTARTED. NO ACTION
"BLD",6196,1,582,0)
   REQUIRED.
"BLD",6196,1,583,0)
 
"BLD",6196,1,584,0)
   Note that you may have to wait up to ten minutes to get these
"BLD",6196,1,585,0)
   alerts. This is the interval that the VDEF process monitor runs at.
"BLD",6196,1,586,0)
 
"BLD",6196,1,587,0)
   If you kill the process while there is a VDEF Request in the
"BLD",6196,1,588,0)
   Checked Out status, you may also get this alert:
"BLD",6196,1,589,0)
 
"BLD",6196,1,590,0)
   MM/DD/YY@HH:MM:SS RECORD nnn IN QUEUE MAINTENANCE HUNG IN Checked
"BLD",6196,1,591,0)
   Out Status.
"BLD",6196,1,592,0)
 
"BLD",6196,1,593,0)
   NOTE: Doing this will leave an orphaned TaskMan task for EN^VDEFREQ
"BLD",6196,1,594,0)
   that you will have to clean and delete.
"BLD",6196,1,595,0)
 
"BLD",6196,1,596,0)
4) If you do get a Checked Out request alert, use %G and look at the
"BLD",6196,1,597,0)
   record. If it's a valid alert, the data in piece 2 of the zero node
"BLD",6196,1,598,0)
   will be "C".
"BLD",6196,1,599,0)
      ^VDEFHL7(579.3,1,1,record ien,0) = IEN^STATUS^......
"BLD",6196,1,600,0)
 
"BLD",6196,1,601,0)
5) If you get any requests that get hung in the Checked Out or
"BLD",6196,1,602,0)
   Errored Out Status, they will get requeued by the VDEF queue
"BLD",6196,1,603,0)
   process monitor which runs every ten minutes.  If this monitor does
"BLD",6196,1,604,0)
   requeue any requests, you will get one or both of these alerts:
"BLD",6196,1,605,0)
 
"BLD",6196,1,606,0)
   MM/DD/YY@HH:MM:SS VDEF HAS REQUEUED CHECKED OUT RECORDS. NO ACTION
"BLD",6196,1,607,0)
   NEEDED.
"BLD",6196,1,608,0)
 
"BLD",6196,1,609,0)
   MM/DD/YY@HH:MM:SS VDEF HAS REQUEUED ERRORED OUT RECORDS. NO ACTION
"BLD",6196,1,610,0)
   NEEDED.
"BLD",6196,1,611,0)
 
"BLD",6196,1,612,0)
   NOTE: Without direct, intentional intervention in the ^VDEFHL7
"BLD",6196,1,613,0)
         queue by modifying a record, you will have to wait for a
"BLD",6196,1,614,0)
         request to get checked out hung or errored out on it's own. If
"BLD",6196,1,615,0)
         you don't want to wait, instructions on how to do that for the
"BLD",6196,1,616,0)
         purposes of verifying the testing of this patch are available
"BLD",6196,1,617,0)
         from the VDEF developer.
"BLD",6196,1,618,0)
 
"BLD",6196,1,619,0)
6) VDEF alerts will no longer be sent to members of the HL7 mail group
"BLD",6196,1,620,0)
   but will be sent to the members in the new VDEF NATIONAL ALERTS
"BLD",6196,1,621,0)
   mail group.
"BLD",6196,1,622,0)
 
"BLD",6196,1,623,0)
7) You have had the patch in place for 2 weeks and have seen no
"BLD",6196,1,624,0)
   adverse affects and it has not affected the functionality of any
"BLD",6196,1,625,0)
   other option(s).
"BLD",6196,1,626,0)
 
"BLD",6196,1,627,0)
8) You have communicated your test results to the SQA representative
"BLD",6196,1,628,0)
   and given your approval for its release.
"BLD",6196,4,0)
^9.64PA^^
"BLD",6196,6)
8^
"BLD",6196,"ABNS",0)
^9.66A^^
"BLD",6196,"ABPKG")
n^n
"BLD",6196,"INID")
n^n^
"BLD",6196,"INIT")
POSTIN^VDEFKIDS
"BLD",6196,"KRN",0)
^9.67PA^8989.52^19
"BLD",6196,"KRN",.4,0)
.4
"BLD",6196,"KRN",.401,0)
.401
"BLD",6196,"KRN",.402,0)
.402
"BLD",6196,"KRN",.403,0)
.403
"BLD",6196,"KRN",.5,0)
.5
"BLD",6196,"KRN",.84,0)
.84
"BLD",6196,"KRN",3.6,0)
3.6
"BLD",6196,"KRN",3.8,0)
3.8
"BLD",6196,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",6196,"KRN",3.8,"NM",1,0)
VDEF NATIONAL ALERTS^^0
"BLD",6196,"KRN",3.8,"NM","B","VDEF NATIONAL ALERTS",1)
 
"BLD",6196,"KRN",9.2,0)
9.2
"BLD",6196,"KRN",9.8,0)
9.8
"BLD",6196,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",6196,"KRN",9.8,"NM",1,0)
VDEFCONT^^0^37180716
"BLD",6196,"KRN",9.8,"NM",2,0)
VDEFMNU^^0^48929533
"BLD",6196,"KRN",9.8,"NM",3,0)
VDEFMON^^0^8239134
"BLD",6196,"KRN",9.8,"NM",4,0)
VDEFQM^^0^65969413
"BLD",6196,"KRN",9.8,"NM",5,0)
VDEFREQ^^0^31819768
"BLD",6196,"KRN",9.8,"NM",6,0)
VDEFUTIL^^0^20448090
"BLD",6196,"KRN",9.8,"NM","B","VDEFCONT",1)
 
"BLD",6196,"KRN",9.8,"NM","B","VDEFMNU",2)
 
"BLD",6196,"KRN",9.8,"NM","B","VDEFMON",3)
 
"BLD",6196,"KRN",9.8,"NM","B","VDEFQM",4)
 
"BLD",6196,"KRN",9.8,"NM","B","VDEFREQ",5)
 
"BLD",6196,"KRN",9.8,"NM","B","VDEFUTIL",6)
 
"BLD",6196,"KRN",19,0)
19
"BLD",6196,"KRN",19,"NM",0)
^9.68A^^
"BLD",6196,"KRN",19.1,0)
19.1
"BLD",6196,"KRN",101,0)
101
"BLD",6196,"KRN",409.61,0)
409.61
"BLD",6196,"KRN",771,0)
771
"BLD",6196,"KRN",771,"NM",0)
^9.68A^1^1
"BLD",6196,"KRN",771,"NM",1,0)
VDEF ALERTS^^0
"BLD",6196,"KRN",771,"NM","B","VDEF ALERTS",1)
 
"BLD",6196,"KRN",870,0)
870
"BLD",6196,"KRN",8989.51,0)
8989.51
"BLD",6196,"KRN",8989.52,0)
8989.52
"BLD",6196,"KRN",8994,0)
8994
"BLD",6196,"KRN","B",.4,.4)
 
"BLD",6196,"KRN","B",.401,.401)
 
"BLD",6196,"KRN","B",.402,.402)
 
"BLD",6196,"KRN","B",.403,.403)
 
"BLD",6196,"KRN","B",.5,.5)
 
"BLD",6196,"KRN","B",.84,.84)
 
"BLD",6196,"KRN","B",3.6,3.6)
 
"BLD",6196,"KRN","B",3.8,3.8)
 
"BLD",6196,"KRN","B",9.2,9.2)
 
"BLD",6196,"KRN","B",9.8,9.8)
 
"BLD",6196,"KRN","B",19,19)
 
"BLD",6196,"KRN","B",19.1,19.1)
 
"BLD",6196,"KRN","B",101,101)
 
"BLD",6196,"KRN","B",409.61,409.61)
 
"BLD",6196,"KRN","B",771,771)
 
"BLD",6196,"KRN","B",870,870)
 
"BLD",6196,"KRN","B",8989.51,8989.51)
 
"BLD",6196,"KRN","B",8989.52,8989.52)
 
"BLD",6196,"KRN","B",8994,8994)
 
"BLD",6196,"PRE")
VDEFKIDS
"BLD",6196,"QUES",0)
^9.62^^
"BLD",6196,"REQB",0)
^9.611^2^2
"BLD",6196,"REQB",1,0)
VDEF 1.0^1
"BLD",6196,"REQB",2,0)
XU*8.0*339^1
"BLD",6196,"REQB","B","VDEF 1.0",1)
 
"BLD",6196,"REQB","B","XU*8.0*339",2)
 
"INIT")
POSTIN^VDEFKIDS
"KRN",3.8,3827,-1)
0^1
"KRN",3.8,3827,0)
VDEF NATIONAL ALERTS^PU^y^^^^
"KRN",3.8,3827,2,0)
^3.801^1^1^3051222^^^^
"KRN",3.8,3827,2,1,0)
VDEF processing alerts.
"KRN",3.8,3827,3)
 
"KRN",3.8,3827,6,0)
^3.812^1^1
"KRN",3.8,3827,6,1,0)
GARDNER.JEFF@FORUM.VA.GOV
"KRN",3.8,3827,6,"B","GARDNER.JEFF@FORUM.VA.GOV",1)
 
"KRN",771,183,-1)
0^1
"KRN",771,183,0)
VDEF ALERTS^a^^VDEF NATIONAL ALERTS
"MBREQ")
0
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"PKG",573,-1)
1^1
"PKG",573,0)
VDEF^VDEF^VISTA Data Extraction Framework
"PKG",573,20,0)
^9.402P^^
"PKG",573,22,0)
^9.49I^1^1
"PKG",573,22,1,0)
1.0^3041228^3050727^33231
"PKG",573,22,1,"PAH",1,0)
3^3051222^33231
"PKG",573,22,1,"PAH",1,1,0)
^^628^628^3051222
"PKG",573,22,1,"PAH",1,1,1,0)
PLEASE READ THE ENTIRE DESCRIPTION AND INSTALLATION INSTRUCTIONS
"PKG",573,22,1,"PAH",1,1,2,0)
BEFORE INSTALLING THIS PATCH.
"PKG",573,22,1,"PAH",1,1,3,0)
 
"PKG",573,22,1,"PAH",1,1,4,0)
 
"PKG",573,22,1,"PAH",1,1,5,0)
DESCRIPTION:
"PKG",573,22,1,"PAH",1,1,6,0)
============
"PKG",573,22,1,"PAH",1,1,7,0)
 
"PKG",573,22,1,"PAH",1,1,8,0)
This patch fixes 4 problems in the VistA Data Extraction Framework
"PKG",573,22,1,"PAH",1,1,9,0)
(VDEF) V1.0 functionality:
"PKG",573,22,1,"PAH",1,1,10,0)
 
"PKG",573,22,1,"PAH",1,1,11,0)
 1) Adds the name of the Request Queue to the VDEF Alert message.
"PKG",573,22,1,"PAH",1,1,12,0)
 
"PKG",573,22,1,"PAH",1,1,13,0)
 2) Eliminates false VDEF Alerts.
"PKG",573,22,1,"PAH",1,1,14,0)
 
"PKG",573,22,1,"PAH",1,1,15,0)
 3) Eliminates the problem of VDEF Request Queue processor not being
"PKG",573,22,1,"PAH",1,1,16,0)
    restarted by TaskMan.
"PKG",573,22,1,"PAH",1,1,17,0)
 
"PKG",573,22,1,"PAH",1,1,18,0)
 4) No longer sets the flag for unread VDEF Alerts to be sent to a mail
"PKG",573,22,1,"PAH",1,1,19,0)
    group supervisor.
"PKG",573,22,1,"PAH",1,1,20,0)
 
"PKG",573,22,1,"PAH",1,1,21,0)
This patch also includes numerous enhancements to the VistA Data
"PKG",573,22,1,"PAH",1,1,22,0)
Extraction Framework (VDEF) functionality:
"PKG",573,22,1,"PAH",1,1,23,0)
 
"PKG",573,22,1,"PAH",1,1,24,0)
 1) In the VDEF Configuration and Status Menu [VDEF CONFIGURATION MENU],
"PKG",573,22,1,"PAH",1,1,25,0)
    the options marked below with an asterisk now return to the option
"PKG",573,22,1,"PAH",1,1,26,0)
    prompt instead of going back to the main VDEF Configuration and Status
"PKG",573,22,1,"PAH",1,1,27,0)
    Menu.
"PKG",573,22,1,"PAH",1,1,28,0)
 
"PKG",573,22,1,"PAH",1,1,29,0)
      Site   Site-Wide Parameters
"PKG",573,22,1,"PAH",1,1,30,0)
    * Req    Request Queue Parameters
"PKG",573,22,1,"PAH",1,1,31,0)
    * ActR   Activate/Inactivate Requestor
"PKG",573,22,1,"PAH",1,1,32,0)
    * SusR   Suspend/Run Request Queue
"PKG",573,22,1,"PAH",1,1,33,0)
    * Cust   VDEF Custodial Package Activate/Inactivate
"PKG",573,22,1,"PAH",1,1,34,0)
    * API    VDEF Event API Activate/Inactivate
"PKG",573,22,1,"PAH",1,1,35,0)
      Stat   Status of VDEF components
"PKG",573,22,1,"PAH",1,1,36,0)
    * Sch    Request Processor Schedule
"PKG",573,22,1,"PAH",1,1,37,0)
 
"PKG",573,22,1,"PAH",1,1,38,0)
 2) A new process, the "VDEF Request Queue Monitor" has been added to
"PKG",573,22,1,"PAH",1,1,39,0)
    monitor the VDEF Request Queue process and restart it when it stops
"PKG",573,22,1,"PAH",1,1,40,0)
    if the state of the Request Queue is Running. This new monitor is
"PKG",573,22,1,"PAH",1,1,41,0)
    automatically started by the VDEF Startup option. This process is
"PKG",573,22,1,"PAH",1,1,42,0)
    hardcoded to run every 10 minutes. The VDEF Request Queue Monitor will
"PKG",573,22,1,"PAH",1,1,43,0)
    also automatically requeue any Checked Out and Errored Out VDEF
"PKG",573,22,1,"PAH",1,1,44,0)
    requests.
"PKG",573,22,1,"PAH",1,1,45,0)
 
"PKG",573,22,1,"PAH",1,1,46,0)
 3) VDEF Alert messages are now prefixed with the date & time of the
"PKG",573,22,1,"PAH",1,1,47,0)
    alert in the format MM/DD/YY@HH:MM:SS.
"PKG",573,22,1,"PAH",1,1,48,0)
 
"PKG",573,22,1,"PAH",1,1,49,0)
 4) Original VDEF Alert message texts are clearer in context.
"PKG",573,22,1,"PAH",1,1,50,0)
 
"PKG",573,22,1,"PAH",1,1,51,0)
 5) New VDEF Alerts have been added.
"PKG",573,22,1,"PAH",1,1,52,0)
    - VDEF CHECKED OUT MONITOR FAILED TO START. CHECK ERROR TRAP.
"PKG",573,22,1,"PAH",1,1,53,0)
    - RECORD <IEN> IN QUEUE <QUEUE NAME> HUNG IN CHECKED OUT STATUS.
"PKG",573,22,1,"PAH",1,1,54,0)
    - VDEF REQUEST PROCESS <QUEUE NAME> FAILED TO START. CHECK ERROR
"PKG",573,22,1,"PAH",1,1,55,0)
      TRAP.
"PKG",573,22,1,"PAH",1,1,56,0)
    - VDEF QUEUE PROCESS MONITOR DID NOT START. CHECK ERROR TRAP.
"PKG",573,22,1,"PAH",1,1,57,0)
    - VDEF HAS REQUEUED CHECKED OUT RECORDS. NO ACTION NEEDED.
"PKG",573,22,1,"PAH",1,1,58,0)
    - VDEF HAS REQUEUED ERRORED OUT RECORDS. NO ACTION NEEDED.
"PKG",573,22,1,"PAH",1,1,59,0)
    - VDEF QUEUE PROCESS MONITOR HAS EXITED.
"PKG",573,22,1,"PAH",1,1,60,0)
    - VDEF QUEUE '"_QUEUE_"' AUTO-RESTARTED. NO ACTION REQUIRED.
"PKG",573,22,1,"PAH",1,1,61,0)
    - VDEF QUEUE '"_QUEUE_"' IS SUSPENDED. PLEASE START IT.
"PKG",573,22,1,"PAH",1,1,62,0)
    - VDEF REQUEST QUEUE PROCESSOR FOR "_$P(QUEUE,U)_" HAS EXITED.
"PKG",573,22,1,"PAH",1,1,63,0)
 
"PKG",573,22,1,"PAH",1,1,64,0)
 6) All VDEF alerts will send a MailMan message to the VDEF developer
"PKG",573,22,1,"PAH",1,1,65,0)
    On FORUM that includes the alert text, the site name and ID and
"PKG",573,22,1,"PAH",1,1,66,0)
    the date & time of the alert.
"PKG",573,22,1,"PAH",1,1,67,0)
 
"PKG",573,22,1,"PAH",1,1,68,0)
 7) Includes a new program VDEFKIDS that has two APIs, VDEFKIDS
"PKG",573,22,1,"PAH",1,1,69,0)
    and POSTIN^VDEFKIDS.  These APIs are defined in the build as the
"PKG",573,22,1,"PAH",1,1,70,0)
    Environment Check and post install routines.  Although the
"PKG",573,22,1,"PAH",1,1,71,0)
    Pre-install routine does pre-installation type functions, it is
"PKG",573,22,1,"PAH",1,1,72,0)
    defined in the build as the Environment Check routine, NOT the
"PKG",573,22,1,"PAH",1,1,73,0)
    Pre-install routine. This is to prevent any VDEF* routines that
"PKG",573,22,1,"PAH",1,1,74,0)
    are in the build from being filed over actively running routines
"PKG",573,22,1,"PAH",1,1,75,0)
    causing an EDITED error trap error. By the time KIDS runs the
"PKG",573,22,1,"PAH",1,1,76,0)
    Pre-Install routine, ALL the routines in the build have already
"PKG",573,22,1,"PAH",1,1,77,0)
    been loaded whereas when the Environment routine is run, no other
"PKG",573,22,1,"PAH",1,1,78,0)
    programs in the build have been installed.
"PKG",573,22,1,"PAH",1,1,79,0)
 
"PKG",573,22,1,"PAH",1,1,80,0)
    The pre-install routine will:
"PKG",573,22,1,"PAH",1,1,81,0)
     - suspend all VDEF Request Queues
"PKG",573,22,1,"PAH",1,1,82,0)
     - stop the TaskMan tasks associated with these queues
"PKG",573,22,1,"PAH",1,1,83,0)
     - stop the VDEF checked out request monitor
"PKG",573,22,1,"PAH",1,1,84,0)
     - stop the VDEF Request Queue process monitor
"PKG",573,22,1,"PAH",1,1,85,0)
 
"PKG",573,22,1,"PAH",1,1,86,0)
    The post-install routine (in production systems only) will:
"PKG",573,22,1,"PAH",1,1,87,0)
     - un-suspend all VDEF Request Queues (change state to running)
"PKG",573,22,1,"PAH",1,1,88,0)
     - create new TaskMan tasks for these queues
"PKG",573,22,1,"PAH",1,1,89,0)
     - start the VDEF checked out request monitor
"PKG",573,22,1,"PAH",1,1,90,0)
     - start the VDEF Request Queue process monitor
"PKG",573,22,1,"PAH",1,1,91,0)
 
"PKG",573,22,1,"PAH",1,1,92,0)
 8) The Status of VDEF components [VDEF Status] option screen has been
"PKG",573,22,1,"PAH",1,1,93,0)
    modified. See the example that follows.
"PKG",573,22,1,"PAH",1,1,94,0)
     - The VMS Process ID associated with the VDEF Request Queue process
"PKG",573,22,1,"PAH",1,1,95,0)
       task has been added.
"PKG",573,22,1,"PAH",1,1,96,0)
     - The TaskMan task status has been added.
"PKG",573,22,1,"PAH",1,1,97,0)
     - The counter for Processed requests has been deleted.  This was
"PKG",573,22,1,"PAH",1,1,98,0)
       useless information because it was simply a count of the number
"PKG",573,22,1,"PAH",1,1,99,0)
       of records in the VDEF Request Queue that are in the Processed
"PKG",573,22,1,"PAH",1,1,100,0)
       status and the fact that the count stopped at ">100".
"PKG",573,22,1,"PAH",1,1,101,0)
     - The counter for Queued Up has been changed to display the actual
"PKG",573,22,1,"PAH",1,1,102,0)
       number up to a maximum of 1000. If more than 1000 are queued up,
"PKG",573,22,1,"PAH",1,1,103,0)
       the display will show "> 1000".
"PKG",573,22,1,"PAH",1,1,104,0)
     - The description "Requests in the queue" has been changed to
"PKG",573,22,1,"PAH",1,1,105,0)
       "Requests waiting for purge"
"PKG",573,22,1,"PAH",1,1,106,0)
 
"PKG",573,22,1,"PAH",1,1,107,0)
   (example)
"PKG",573,22,1,"PAH",1,1,108,0)
   Request Processor Status
"PKG",573,22,1,"PAH",1,1,109,0)
     MAINTENANCE: Running and not Scheduled
"PKG",573,22,1,"PAH",1,1,110,0)
     Current Task # [Proc]: 7399750 [21663B42]
"PKG",573,22,1,"PAH",1,1,111,0)
     Requests waiting for purge: 14      Last request#: 14
"PKG",573,22,1,"PAH",1,1,112,0)
     Checked Out(0)  Queued Up(0)  Errored Out(0)
"PKG",573,22,1,"PAH",1,1,113,0)
 
"PKG",573,22,1,"PAH",1,1,114,0)
 9) Changed the M lock used to protect the VDEF Request Queue so that
"PKG",573,22,1,"PAH",1,1,115,0)
    it doesn't prevent using FileMan to access the VDEF queue file.
"PKG",573,22,1,"PAH",1,1,116,0)
 
"PKG",573,22,1,"PAH",1,1,117,0)
10) Creates the new Application "VDEF ALERTS" and the new Mail Group
"PKG",573,22,1,"PAH",1,1,118,0)
    "VDEF NATIONAL ALERTS" and changes the VistA Mail Group for VDEF
"PKG",573,22,1,"PAH",1,1,119,0)
    Alerts from the HL7 group to the new VDEF group.
"PKG",573,22,1,"PAH",1,1,120,0)
 
"PKG",573,22,1,"PAH",1,1,121,0)
11) Removed the Scheduled task from the Status of VDEF components [VDEF
"PKG",573,22,1,"PAH",1,1,122,0)
    Status] display and added the TaskMan status of the task.
"PKG",573,22,1,"PAH",1,1,123,0)
 
"PKG",573,22,1,"PAH",1,1,124,0)
12) Removed the XQASUPV variable from the alert call so that VDEF
"PKG",573,22,1,"PAH",1,1,125,0)
    alerts are no longer forwarded to unread alerts supervisor mail
"PKG",573,22,1,"PAH",1,1,126,0)
    group.
"PKG",573,22,1,"PAH",1,1,127,0)
 
"PKG",573,22,1,"PAH",1,1,128,0)
13) Added the date and time and the TaskMan task status to the VDEF
"PKG",573,22,1,"PAH",1,1,129,0)
    Status display.
"PKG",573,22,1,"PAH",1,1,130,0)
 
"PKG",573,22,1,"PAH",1,1,131,0)
 
"PKG",573,22,1,"PAH",1,1,132,0)
IRM NOTES:
"PKG",573,22,1,"PAH",1,1,133,0)
===========
"PKG",573,22,1,"PAH",1,1,134,0)
Before installing this patch, make sure you have completely installed 
"PKG",573,22,1,"PAH",1,1,135,0)
XU*8.0*339 and run the '% program' conversion RELOAD^ZTMGRSET utility.
"PKG",573,22,1,"PAH",1,1,136,0)
 
"PKG",573,22,1,"PAH",1,1,137,0)
This patch REQUIRES Kernel patch XU*8.0*339 which fixes a bug in the
"PKG",573,22,1,"PAH",1,1,138,0)
$$ASKSTOP^%ZTLOAD() API and also creates a new API JOB^%ZTLOAD().
"PKG",573,22,1,"PAH",1,1,139,0)
VDEF requires both of these to be updated by the XU*8.0*339 patch in
"PKG",573,22,1,"PAH",1,1,140,0)
Order for VDEF*1*3 to install.
"PKG",573,22,1,"PAH",1,1,141,0)
 
"PKG",573,22,1,"PAH",1,1,142,0)
This VDEF patch uses the $$JOB^%ZTLOAD functionality released with
"PKG",573,22,1,"PAH",1,1,143,0)
XU*8*399. Please confirm that the post-KIDS install steps for XU*8*399
"PKG",573,22,1,"PAH",1,1,144,0)
have been done.  The following MUMPS code should indicate that XU*8*399 is
"PKG",573,22,1,"PAH",1,1,145,0)
in the second line of the %ZTLOAD routine:
"PKG",573,22,1,"PAH",1,1,146,0)
>ZL %ZTLOAD ZP +1:+2
"PKG",573,22,1,"PAH",1,1,147,0)
 
"PKG",573,22,1,"PAH",1,1,148,0)
For the duration of the installation of this patch, all VDEF Request
"PKG",573,22,1,"PAH",1,1,149,0)
Queue processors that were in the Running state will be temporarily 
"PKG",573,22,1,"PAH",1,1,150,0)
suspended.  The pre-install and post-install routines will suspend and 
"PKG",573,22,1,"PAH",1,1,151,0)
then restart all Request Queue processors that were in the Running state 
"PKG",573,22,1,"PAH",1,1,152,0)
after installation of this patch.  VDEF messages will continue to 
"PKG",573,22,1,"PAH",1,1,153,0)
accumulate in the queues during suspension and will start processing 
"PKG",573,22,1,"PAH",1,1,154,0)
again after the patch has completed installation. This is the equivalent 
"PKG",573,22,1,"PAH",1,1,155,0)
of you using the VDEF Configuration and Status Menu option "SusR 
"PKG",573,22,1,"PAH",1,1,156,0)
Suspend/Run Request Queue" to suspend and restart the Request Queues.
"PKG",573,22,1,"PAH",1,1,157,0)
 
"PKG",573,22,1,"PAH",1,1,158,0)
When you see the message "Waiting for processes to quit . .", there
"PKG",573,22,1,"PAH",1,1,159,0)
will be approximately a 5 second wait.
"PKG",573,22,1,"PAH",1,1,160,0)
 
"PKG",573,22,1,"PAH",1,1,161,0)
PLEASE NOTE: The VDEF Post-install program will not start the VDEF 
"PKG",573,22,1,"PAH",1,1,162,0)
processes on test or Legacy systems that have the Test System flag set.
"PKG",573,22,1,"PAH",1,1,163,0)
 
"PKG",573,22,1,"PAH",1,1,164,0)
 
"PKG",573,22,1,"PAH",1,1,165,0)
IRM'S POST-INSTALLATION REQUIREMENTS
"PKG",573,22,1,"PAH",1,1,166,0)
====================================
"PKG",573,22,1,"PAH",1,1,167,0)
1. NEW MAIL GROUP AND APPLICATION FOR VDEF ALERTS
"PKG",573,22,1,"PAH",1,1,168,0)
   After you have installed this patch, there will be a new Application
"PKG",573,22,1,"PAH",1,1,169,0)
   named VDEF ALERTS which will have the Mail Group VDEF NATIONAL ALERTS
"PKG",573,22,1,"PAH",1,1,170,0)
   assigned to it.  The new Mail Group will not have any local members in
"PKG",573,22,1,"PAH",1,1,171,0)
   it. YOU MUST ASSIGN THE LOCAL MEMBERS.  It will have the remote member
"PKG",573,22,1,"PAH",1,1,172,0)
   GARDNER.JEFF@FORUM.VA.GOV. Please verify these that these two new
"PKG",573,22,1,"PAH",1,1,173,0)
   definitions are correctly set up. If a site does not have the Mail
"PKG",573,22,1,"PAH",1,1,174,0)
   Group VDEF NATIONAL ALERTS, VDEF will continue the alerts to the HL7
"PKG",573,22,1,"PAH",1,1,175,0)
   Mail Group.
"PKG",573,22,1,"PAH",1,1,176,0)
 
"PKG",573,22,1,"PAH",1,1,177,0)
2. MODIFY THE 'VDEF STARTUP OPTION' SCHEDULED TASK.
"PKG",573,22,1,"PAH",1,1,178,0)
   Using the TaskMan option 'Schedule/Unschedule Options', edit the
"PKG",573,22,1,"PAH",1,1,179,0)
   parameters for the task VDEF STARTUP OPTION as indicated in the screen
"PKG",573,22,1,"PAH",1,1,180,0)
   example shown here.
"PKG",573,22,1,"PAH",1,1,181,0)
 
"PKG",573,22,1,"PAH",1,1,182,0)
                           Edit Option Schedule
"PKG",573,22,1,"PAH",1,1,183,0)
     Option Name: VDEF STARTUP OPTION           
"PKG",573,22,1,"PAH",1,1,184,0)
     Menu Text: VDEF STARTUP OPTION                 TASK ID: 5998624
"PKG",573,22,1,"PAH",1,1,185,0)
 ___________________________________________________________________
"PKG",573,22,1,"PAH",1,1,186,0)
   QUEUED TO RUN AT WHAT TIME: (Enter current date/time + 5 minutes)
"PKG",573,22,1,"PAH",1,1,187,0)
 DEVICE FOR QUEUED JOB OUTPUT: 
"PKG",573,22,1,"PAH",1,1,188,0)
  QUEUED TO RUN ON VOLUME SET: 
"PKG",573,22,1,"PAH",1,1,189,0)
       RESCHEDULING FREQUENCY: 300S  (Enter 300S)
"PKG",573,22,1,"PAH",1,1,190,0)
              TASK PARAMETERS: 
"PKG",573,22,1,"PAH",1,1,191,0)
             SPECIAL QUEUEING: Startup Persistent (Change from STARTUP
"PKG",573,22,1,"PAH",1,1,192,0)
                                                   to Startup Persistent
"PKG",573,22,1,"PAH",1,1,193,0)
 
"PKG",573,22,1,"PAH",1,1,194,0)
 
"PKG",573,22,1,"PAH",1,1,195,0)
This patch addresses the following New Service Request (NSR):
"PKG",573,22,1,"PAH",1,1,196,0)
=============================================================
"PKG",573,22,1,"PAH",1,1,197,0)
There is no NSR associated with this patch.
"PKG",573,22,1,"PAH",1,1,198,0)
 
"PKG",573,22,1,"PAH",1,1,199,0)
 
"PKG",573,22,1,"PAH",1,1,200,0)
This patch addresses the following Remedy ticket(s):
"PKG",573,22,1,"PAH",1,1,201,0)
====================================================
"PKG",573,22,1,"PAH",1,1,202,0)
65927,99499,100952,102184,102329,103092,103286,104402,105065,106497
"PKG",573,22,1,"PAH",1,1,203,0)
106674,107101,107142,107326,107508,107589,107773,107927,108431,108661
"PKG",573,22,1,"PAH",1,1,204,0)
108873,108915,109469,109521,109627,109638,109715,109725,110057,110285
"PKG",573,22,1,"PAH",1,1,205,0)
110501,110688,110765,110891,111109,112391,112642
"PKG",573,22,1,"PAH",1,1,206,0)
 
"PKG",573,22,1,"PAH",1,1,207,0)
 
"PKG",573,22,1,"PAH",1,1,208,0)
Overview of Patch Items:
"PKG",573,22,1,"PAH",1,1,209,0)
========================
"PKG",573,22,1,"PAH",1,1,210,0)
1) A pre-install routine, PREIN^VDEFKIDS, is included in this patch that
"PKG",573,22,1,"PAH",1,1,211,0)
   suspends VDEF Request Queue processing through the duration of this
"PKG",573,22,1,"PAH",1,1,212,0)
   patch installation. It also stops and deletes the TaskMan tasks driving
"PKG",573,22,1,"PAH",1,1,213,0)
   the processes and the VDEF monitor processes.
"PKG",573,22,1,"PAH",1,1,214,0)
 
"PKG",573,22,1,"PAH",1,1,215,0)
2) A post-install routine, POSTIN^VDEFKIDS, is included in this patch
"PKG",573,22,1,"PAH",1,1,216,0)
   that restarts VDEF Request Queues after installation of this patch.
"PKG",573,22,1,"PAH",1,1,217,0)
   It also creates new VDEF monitor tasks.
"PKG",573,22,1,"PAH",1,1,218,0)
 
"PKG",573,22,1,"PAH",1,1,219,0)
3) The routine VDEFUTIL has been changed to not set the flag for an 
"PKG",573,22,1,"PAH",1,1,220,0)
   unread VDEF Alert to be sent to the supervisor. This program has also
"PKG",573,22,1,"PAH",1,1,221,0)
   been changed to prefix the date & time to the VDEF alert text and to
"PKG",573,22,1,"PAH",1,1,222,0)
   use the new VDEF alert mail group to send a MailMan message to the VDEF
"PKG",573,22,1,"PAH",1,1,223,0)
   developer whenever a VDEF alert occurs.
"PKG",573,22,1,"PAH",1,1,224,0)
 
"PKG",573,22,1,"PAH",1,1,225,0)
4) The routine VDEFCONT has been changed to eliminate the false VDEF
"PKG",573,22,1,"PAH",1,1,226,0)
   Alerts from being generated.  It has also been changed to include
"PKG",573,22,1,"PAH",1,1,227,0)
   the name of the Request Queue in the VDEF Alert message.
"PKG",573,22,1,"PAH",1,1,228,0)
 
"PKG",573,22,1,"PAH",1,1,229,0)
5) The routine VDEFREQ has been changed to eliminate the problem of
"PKG",573,22,1,"PAH",1,1,230,0)
   TaskMan not restarting the VDEF Request Queue processor EN^VDEFREQ.
"PKG",573,22,1,"PAH",1,1,231,0)
   Instead, VDEFREQ does not re-schedule itself with TaskMan but uses
"PKG",573,22,1,"PAH",1,1,232,0)
   an M HANG command loop based on the number of seconds in file
"PKG",573,22,1,"PAH",1,1,233,0)
   #579.3, field .05 - CHECK-OUT TIME LIMIT.
"PKG",573,22,1,"PAH",1,1,234,0)
 
"PKG",573,22,1,"PAH",1,1,235,0)
6) The routine VDEFMNU has been changed to display the VMS process ID
"PKG",573,22,1,"PAH",1,1,236,0)
   for the Request Queue Task in the Status of VDEF components [VDEF
"PKG",573,22,1,"PAH",1,1,237,0)
   Status] display. The counter for Processed Requests has been dropped
"PKG",573,22,1,"PAH",1,1,238,0)
   from the Status of VDEF components [VDEF Status] display. It was
"PKG",573,22,1,"PAH",1,1,239,0)
   useless information.
"PKG",573,22,1,"PAH",1,1,240,0)
 
"PKG",573,22,1,"PAH",1,1,241,0)
7) The routine VDEFQM has been changed to incorporate two VDEF APIs
"PKG",573,22,1,"PAH",1,1,242,0)
   that will requeue requests that are stuck in the Checked Out or
"PKG",573,22,1,"PAH",1,1,243,0)
   Errored Out state.
"PKG",573,22,1,"PAH",1,1,244,0)
 
"PKG",573,22,1,"PAH",1,1,245,0)
8) A new routine VDEFMON has been created to monitor the Request Queue
"PKG",573,22,1,"PAH",1,1,246,0)
   process and restart it if it dies as well as automatically re-queuing
"PKG",573,22,1,"PAH",1,1,247,0)
   requests that have Errored Out or get stuck in the Checked Out status.
"PKG",573,22,1,"PAH",1,1,248,0)
 
"PKG",573,22,1,"PAH",1,1,249,0)
9) There are no VDEF global changes in this patch.
"PKG",573,22,1,"PAH",1,1,250,0)
 
"PKG",573,22,1,"PAH",1,1,251,0)
 
"PKG",573,22,1,"PAH",1,1,252,0)
Test Sites:
"PKG",573,22,1,"PAH",1,1,253,0)
===========
"PKG",573,22,1,"PAH",1,1,254,0)
BAY PINES
"PKG",573,22,1,"PAH",1,1,255,0)
EL PASO
"PKG",573,22,1,"PAH",1,1,256,0)
LOUISVILLE
"PKG",573,22,1,"PAH",1,1,257,0)
MARYLAND (Integrated)
"PKG",573,22,1,"PAH",1,1,258,0)
MEMPHIS
"PKG",573,22,1,"PAH",1,1,259,0)
PHILADELPHIA
"PKG",573,22,1,"PAH",1,1,260,0)
PHOENIX
"PKG",573,22,1,"PAH",1,1,261,0)
SAN FRANCISCO
"PKG",573,22,1,"PAH",1,1,262,0)
 
"PKG",573,22,1,"PAH",1,1,263,0)
 
"PKG",573,22,1,"PAH",1,1,264,0)
LOCATION OF DOCUMENTATION FOR THIS PATCH
"PKG",573,22,1,"PAH",1,1,265,0)
========================================
"PKG",573,22,1,"PAH",1,1,266,0)
There will be a documentation update for this patch to the VDEF V1.0 
"PKG",573,22,1,"PAH",1,1,267,0)
Installation & User Configuration Guide and the VDEF V1.0 Technical Manual
"PKG",573,22,1,"PAH",1,1,268,0)
 
"PKG",573,22,1,"PAH",1,1,269,0)
 
"PKG",573,22,1,"PAH",1,1,270,0)
INSTALLATION INSTRUCTIONS
"PKG",573,22,1,"PAH",1,1,271,0)
=========================
"PKG",573,22,1,"PAH",1,1,272,0)
 
"PKG",573,22,1,"PAH",1,1,273,0)
Install Time - less than 5 minutes
"PKG",573,22,1,"PAH",1,1,274,0)
 
"PKG",573,22,1,"PAH",1,1,275,0)
1. LOAD TRANSPORT GLOBAL
"PKG",573,22,1,"PAH",1,1,276,0)
   ---------------------
"PKG",573,22,1,"PAH",1,1,277,0)
   Choose the PackMan message containing this patch and invoke the
"PKG",573,22,1,"PAH",1,1,278,0)
   INSTALL/CHECK MESSAGE PackMan option.  The build includes an
"PKG",573,22,1,"PAH",1,1,279,0)
   Environment check routine VDEFKIDS.
"PKG",573,22,1,"PAH",1,1,280,0)
 
"PKG",573,22,1,"PAH",1,1,281,0)
Loading Distribution...
"PKG",573,22,1,"PAH",1,1,282,0)
 
"PKG",573,22,1,"PAH",1,1,283,0)
   VDEF*1.0*3
"PKG",573,22,1,"PAH",1,1,284,0)
Will first run the Environment Check Routine, VDEFKIDS
"PKG",573,22,1,"PAH",1,1,285,0)
 
"PKG",573,22,1,"PAH",1,1,286,0)
2. COMPONENTS SENT WITH PATCH
"PKG",573,22,1,"PAH",1,1,287,0)
   --------------------------
"PKG",573,22,1,"PAH",1,1,288,0)
   Routine Summary
"PKG",573,22,1,"PAH",1,1,289,0)
   The following routines are included in this patch.  The second line
"PKG",573,22,1,"PAH",1,1,290,0)
   of Each of these routines now looks like:
"PKG",573,22,1,"PAH",1,1,291,0)
   ;;1.0;VDEF;**3**;Dec 28, 2004
"PKG",573,22,1,"PAH",1,1,292,0)
 
"PKG",573,22,1,"PAH",1,1,293,0)
                 Checksum
"PKG",573,22,1,"PAH",1,1,294,0)
Routine         Old       New      Patch List
"PKG",573,22,1,"PAH",1,1,295,0)
VDEFCONT      8818367   8818367    **3**
"PKG",573,22,1,"PAH",1,1,296,0)
VDEFKIDS     13711730   5283479    **3**
"PKG",573,22,1,"PAH",1,1,297,0)
VDEFMNU      47567743  14047707    **3**
"PKG",573,22,1,"PAH",1,1,298,0)
VDEFMON       8468795   3113945    **3**
"PKG",573,22,1,"PAH",1,1,299,0)
VDEFQM       12629742  12740824    **3**
"PKG",573,22,1,"PAH",1,1,300,0)
VDEFREQ       7914740   7914740    **3**
"PKG",573,22,1,"PAH",1,1,301,0)
VDEFUTIL      5715842   5715842    **3**
"PKG",573,22,1,"PAH",1,1,302,0)
 
"PKG",573,22,1,"PAH",1,1,303,0)
Sites should use CHECK^XTSUMBLD to verify checksums.
"PKG",573,22,1,"PAH",1,1,304,0)
 
"PKG",573,22,1,"PAH",1,1,305,0)
NOTE: The above checksums are based on your site having installed
"PKG",573,22,1,"PAH",1,1,306,0)
VDEF*1*3 v9. If you are installing VDEF*1*3 for the first time or if you 
"PKG",573,22,1,"PAH",1,1,307,0)
did not install VDEF*1*3 v9, your old checksums will not match those in 
"PKG",573,22,1,"PAH",1,1,308,0)
the above list.
"PKG",573,22,1,"PAH",1,1,309,0)
 
"PKG",573,22,1,"PAH",1,1,310,0)
If you are installing VDEF*1*3 for the first time and all your current
"PKG",573,22,1,"PAH",1,1,311,0)
VDEF* programs are V1.0, your old checksums should be:
"PKG",573,22,1,"PAH",1,1,312,0)
VDEFCONT    10134570
"PKG",573,22,1,"PAH",1,1,313,0)
VDEFKIDS         N/A
"PKG",573,22,1,"PAH",1,1,314,0)
VDEFMNU     12329753
"PKG",573,22,1,"PAH",1,1,315,0)
VDEFMON          N/A
"PKG",573,22,1,"PAH",1,1,316,0)
VDEFQM      11427789
"PKG",573,22,1,"PAH",1,1,317,0)
VDEFREQ      7981911
"PKG",573,22,1,"PAH",1,1,318,0)
VDEFUTIL     1413855
"PKG",573,22,1,"PAH",1,1,319,0)
 
"PKG",573,22,1,"PAH",1,1,320,0)
3. START UP KIDS
"PKG",573,22,1,"PAH",1,1,321,0)
   -------------
"PKG",573,22,1,"PAH",1,1,322,0)
   Start up the Kernel Installation and Distribution System Menu
"PKG",573,22,1,"PAH",1,1,323,0)
   [XPD MAIN]:
"PKG",573,22,1,"PAH",1,1,324,0)
        Edits and Distribution
"PKG",573,22,1,"PAH",1,1,325,0)
        Utilities
"PKG",573,22,1,"PAH",1,1,326,0)
        Installation
"PKG",573,22,1,"PAH",1,1,327,0)
 
"PKG",573,22,1,"PAH",1,1,328,0)
   Select Kernel Installation & Distribution System Option:
"PKG",573,22,1,"PAH",1,1,329,0)
     INStallation
"PKG",573,22,1,"PAH",1,1,330,0)
 
"PKG",573,22,1,"PAH",1,1,331,0)
        Load a Distribution
"PKG",573,22,1,"PAH",1,1,332,0)
        Print Transport Global
"PKG",573,22,1,"PAH",1,1,333,0)
        Compare Transport Global to Current System
"PKG",573,22,1,"PAH",1,1,334,0)
        Verify Checksums in Transport Global
"PKG",573,22,1,"PAH",1,1,335,0)
        Install Package(s)
"PKG",573,22,1,"PAH",1,1,336,0)
        Restart Install of Package(s)
"PKG",573,22,1,"PAH",1,1,337,0)
        Unload a Distribution
"PKG",573,22,1,"PAH",1,1,338,0)
        Backup a Transport Global
"PKG",573,22,1,"PAH",1,1,339,0)
 
"PKG",573,22,1,"PAH",1,1,340,0)
     Select Installation Option:
"PKG",573,22,1,"PAH",1,1,341,0)
 
"PKG",573,22,1,"PAH",1,1,342,0)
4. Select Installation Option:
"PKG",573,22,1,"PAH",1,1,343,0)
   ---------------------------
"PKG",573,22,1,"PAH",1,1,344,0)
   When prompted for the INSTALL NAME, enter VDEF*1.0*3.
"PKG",573,22,1,"PAH",1,1,345,0)
 
"PKG",573,22,1,"PAH",1,1,346,0)
    a.  Backup a Transport Global - This option will create a backup
"PKG",573,22,1,"PAH",1,1,347,0)
        message of any routines exported with this patch. It will not
"PKG",573,22,1,"PAH",1,1,348,0)
        backup any other changes such as DD's or templates.
"PKG",573,22,1,"PAH",1,1,349,0)
    b.  Compare Transport Global to Current System - This option will
"PKG",573,22,1,"PAH",1,1,350,0)
        allow you to view all changes that will be made when this
"PKG",573,22,1,"PAH",1,1,351,0)
        patch is installed.  It compares all components of this patch
"PKG",573,22,1,"PAH",1,1,352,0)
        (routines, DD's, templates, etc.).
"PKG",573,22,1,"PAH",1,1,353,0)
    c.  Verify Checksums in Transport Global - This option will allow
"PKG",573,22,1,"PAH",1,1,354,0)
        you to ensure the integrity of the routines that are in the
"PKG",573,22,1,"PAH",1,1,355,0)
        transport global.
"PKG",573,22,1,"PAH",1,1,356,0)
 
"PKG",573,22,1,"PAH",1,1,357,0)
5. Select Installation Option: Install Package(s)
"PKG",573,22,1,"PAH",1,1,358,0)
   ----------------------------------------------
"PKG",573,22,1,"PAH",1,1,359,0)
   Select INSTALL NAME: VDEF*1.0*3   Loaded from Distribution
"PKG",573,22,1,"PAH",1,1,360,0)
     MM/DD/YY@HH:MM
"PKG",573,22,1,"PAH",1,1,361,0)
       => VDEF*1*3 v9
"PKG",573,22,1,"PAH",1,1,362,0)
 
"PKG",573,22,1,"PAH",1,1,363,0)
   Select Installation Option: INstall Package(s)
"PKG",573,22,1,"PAH",1,1,364,0)
 
"PKG",573,22,1,"PAH",1,1,365,0)
     => VDEF*1*3 v9
"PKG",573,22,1,"PAH",1,1,366,0)
 
"PKG",573,22,1,"PAH",1,1,367,0)
   This Distribution was loaded on Dec 22, 2005@11:48:44 with header of
"PKG",573,22,1,"PAH",1,1,368,0)
   VDEF*1*3 v9
"PKG",573,22,1,"PAH",1,1,369,0)
   It consisted of the following Install(s):
"PKG",573,22,1,"PAH",1,1,370,0)
     VDEF*1.0*3   Checking Install for Package VDEF*1.0*3
"PKG",573,22,1,"PAH",1,1,371,0)
 
"PKG",573,22,1,"PAH",1,1,372,0)
   Will first run the Environment Check Routine, VDEFKIDS
"PKG",573,22,1,"PAH",1,1,373,0)
 
"PKG",573,22,1,"PAH",1,1,374,0)
   Suspending Request Queues and stopping associated TaskMan jobs
"PKG",573,22,1,"PAH",1,1,375,0)
 
"PKG",573,22,1,"PAH",1,1,376,0)
   Stopping the MONITOR^VDEFCONT task
"PKG",573,22,1,"PAH",1,1,377,0)
 
"PKG",573,22,1,"PAH",1,1,378,0)
   Stopping the MONITOR^VDEFMON task
"PKG",573,22,1,"PAH",1,1,379,0)
 
"PKG",573,22,1,"PAH",1,1,380,0)
   Waiting for processes to quit  . . .
"PKG",573,22,1,"PAH",1,1,381,0)
 
"PKG",573,22,1,"PAH",1,1,382,0)
   Install Questions for VDEF*1.0*3
"PKG",573,22,1,"PAH",1,1,383,0)
 
"PKG",573,22,1,"PAH",1,1,384,0)
 
"PKG",573,22,1,"PAH",1,1,385,0)
   Incoming Mail Groups:
"PKG",573,22,1,"PAH",1,1,386,0)
 
"PKG",573,22,1,"PAH",1,1,387,0)
   Enter the Coordinator for Mail Group 'VDEF NATIONAL ALERTS':  //
"PKG",573,22,1,"PAH",1,1,388,0)
    <enter your name>   
"PKG",573,22,1,"PAH",1,1,389,0)
 
"PKG",573,22,1,"PAH",1,1,390,0)
   Want KIDS to INHIBIT LOGONs during the install? YES// NO
"PKG",573,22,1,"PAH",1,1,391,0)
   Want to DISABLE Scheduled Options, Menu Options, and Protocols?
"PKG",573,22,1,"PAH",1,1,392,0)
   YES// NO
"PKG",573,22,1,"PAH",1,1,393,0)
 
"PKG",573,22,1,"PAH",1,1,394,0)
   Enter the Device you want to print the Install messages.
"PKG",573,22,1,"PAH",1,1,395,0)
   You can queue the install by enter a 'Q' at the device prompt.
"PKG",573,22,1,"PAH",1,1,396,0)
   Enter a '^' to abort the install.
"PKG",573,22,1,"PAH",1,1,397,0)
 
"PKG",573,22,1,"PAH",1,1,398,0)
   DEVICE: HOME//   TCP
"PKG",573,22,1,"PAH",1,1,399,0)
 
"PKG",573,22,1,"PAH",1,1,400,0)
 
"PKG",573,22,1,"PAH",1,1,401,0)
    Install Started for VDEF*1.0*3 : 
"PKG",573,22,1,"PAH",1,1,402,0)
                  Dec 22, 2005@11:50:14
"PKG",573,22,1,"PAH",1,1,403,0)
 
"PKG",573,22,1,"PAH",1,1,404,0)
   Build Distribution Date: Dec 22, 2005
"PKG",573,22,1,"PAH",1,1,405,0)
 
"PKG",573,22,1,"PAH",1,1,406,0)
    Installing Routines:
"PKG",573,22,1,"PAH",1,1,407,0)
                  Dec 22, 2005@11:50:14
"PKG",573,22,1,"PAH",1,1,408,0)
 
"PKG",573,22,1,"PAH",1,1,409,0)
    Installing PACKAGE COMPONENTS: 
"PKG",573,22,1,"PAH",1,1,410,0)
 
"PKG",573,22,1,"PAH",1,1,411,0)
    Installing MAIL GROUP
"PKG",573,22,1,"PAH",1,1,412,0)
 
"PKG",573,22,1,"PAH",1,1,413,0)
    Installing HL7 APPLICATION PARAMETER
"PKG",573,22,1,"PAH",1,1,414,0)
                  Dec 22, 2005@11:50:14
"PKG",573,22,1,"PAH",1,1,415,0)
 
"PKG",573,22,1,"PAH",1,1,416,0)
    Running Post-Install Routine: POSTIN^VDEFKIDS
"PKG",573,22,1,"PAH",1,1,417,0)
 
"PKG",573,22,1,"PAH",1,1,418,0)
   (NOTE: the next 4 lines will not be displayed in a test or Legacy
"PKG",573,22,1,"PAH",1,1,419,0)
    Environment installation. Instead it will display:
"PKG",573,22,1,"PAH",1,1,420,0)
    "VDEF is not started on test systems."
"PKG",573,22,1,"PAH",1,1,421,0)
 
"PKG",573,22,1,"PAH",1,1,422,0)
   Running Post-Install Routine: POSTIN^VDEFKIDS
"PKG",573,22,1,"PAH",1,1,423,0)
 
"PKG",573,22,1,"PAH",1,1,424,0)
   Starting the Request Queues and associated Tasks
"PKG",573,22,1,"PAH",1,1,425,0)
 
"PKG",573,22,1,"PAH",1,1,426,0)
   Starting the MONITOR^VDEFCONT task
"PKG",573,22,1,"PAH",1,1,427,0)
 
"PKG",573,22,1,"PAH",1,1,428,0)
   Starting the MONITOR^VDEFMON task
"PKG",573,22,1,"PAH",1,1,429,0)
 
"PKG",573,22,1,"PAH",1,1,430,0)
   Updating Routine file...
"PKG",573,22,1,"PAH",1,1,431,0)
 
"PKG",573,22,1,"PAH",1,1,432,0)
   Updating KIDS files...
"PKG",573,22,1,"PAH",1,1,433,0)
 
"PKG",573,22,1,"PAH",1,1,434,0)
   VDEF*1.0*3 Installed.
"PKG",573,22,1,"PAH",1,1,435,0)
 
"PKG",573,22,1,"PAH",1,1,436,0)
               Dec 22, 2005@11:50:14                                   
"PKG",573,22,1,"PAH",1,1,437,0)
 
"PKG",573,22,1,"PAH",1,1,438,0)
   NO Install Message sent
"PKG",573,22,1,"PAH",1,1,439,0)
 
"PKG",573,22,1,"PAH",1,1,440,0)
   100% Complete  
"PKG",573,22,1,"PAH",1,1,441,0)
 
"PKG",573,22,1,"PAH",1,1,442,0)
   Install Completed
"PKG",573,22,1,"PAH",1,1,443,0)
 
"PKG",573,22,1,"PAH",1,1,444,0)
 
"PKG",573,22,1,"PAH",1,1,445,0)
BUILD COMPONENTS
"PKG",573,22,1,"PAH",1,1,446,0)
=================
"PKG",573,22,1,"PAH",1,1,447,0)
 
"PKG",573,22,1,"PAH",1,1,448,0)
ENVIRONMENT CHECK :  VDEFKIDS            DELETE ENV ROUTINE: No
"PKG",573,22,1,"PAH",1,1,449,0)
 PRE-INIT ROUTINE :                      DELETE PRE-INIT ROUTINE: No
"PKG",573,22,1,"PAH",1,1,450,0)
 POST-INIT ROUTINE : POSTIN^VDEFKIDS     DELETE POST-INIT ROUTINE: No
"PKG",573,22,1,"PAH",1,1,451,0)
 PRE-TRANSPORT RTN : 
"PKG",573,22,1,"PAH",1,1,452,0)
 
"PKG",573,22,1,"PAH",1,1,453,0)
ROUTINE:
"PKG",573,22,1,"PAH",1,1,454,0)
 VDEFCONT                                SEND TO SITE
"PKG",573,22,1,"PAH",1,1,455,0)
 VDEFMNU                                 SEND TO SITE
"PKG",573,22,1,"PAH",1,1,456,0)
 VDEFMON                                 SEND TO SITE
"PKG",573,22,1,"PAH",1,1,457,0)
 VDEFQM                                  SEND TO SITE
"PKG",573,22,1,"PAH",1,1,458,0)
 VDEFREQ                                 SEND TO SITE
"PKG",573,22,1,"PAH",1,1,459,0)
 VDEFUTIL                                SEND TO SITE
"PKG",573,22,1,"PAH",1,1,460,0)
 
"PKG",573,22,1,"PAH",1,1,461,0)
REQUIRED BUILDS:                         ACTION:
"PKG",573,22,1,"PAH",1,1,462,0)
 VDEF 1.0                                Don't install, remove global
"PKG",573,22,1,"PAH",1,1,463,0)
 XU*8.0*339                              Don't install, remove global
"PKG",573,22,1,"PAH",1,1,464,0)
 
"PKG",573,22,1,"PAH",1,1,465,0)
 
"PKG",573,22,1,"PAH",1,1,466,0)
 
"PKG",573,22,1,"PAH",1,1,467,0)
POST INSTALLATION CHECKS:
"PKG",573,22,1,"PAH",1,1,468,0)
1) Verify that the three VDEF tasks shown in the example exist after
"PKG",573,22,1,"PAH",1,1,469,0)
   the install is complete.  The EN^VDEFREQ and MONITOR^VDEFMON tasks
"PKG",573,22,1,"PAH",1,1,470,0)
   should be active while the MONITOR^VDEFCONT task may be scheduled
"PKG",573,22,1,"PAH",1,1,471,0)
   or active.
"PKG",573,22,1,"PAH",1,1,472,0)
 
"PKG",573,22,1,"PAH",1,1,473,0)
   (example task list)
"PKG",573,22,1,"PAH",1,1,474,0)
 
"PKG",573,22,1,"PAH",1,1,475,0)
   Task list  Dec 22, 2005 11:26 am                             Page 1
"PKG",573,22,1,"PAH",1,1,476,0)
----------------------------------------------------------------------
"PKG",573,22,1,"PAH",1,1,477,0)
7399750: EN^VDEFREQ, VDEF Request Processor for MAINTENANCE.  No device.
"PKG",573,22,1,"PAH",1,1,478,0)
         DAYT12.  From Today at 11:26,  By you.  Started running Today
"PKG",573,22,1,"PAH",1,1,479,0)
         at 11:26. Job #: 560347970 [21663B42]
"PKG",573,22,1,"PAH",1,1,480,0)
----------------------------------------------------------------------
"PKG",573,22,1,"PAH",1,1,481,0)
7399751: MONITOR^VDEFCONT, VDEF Checked Out Monitor.  No device. 
"PKG",573,22,1,"PAH",1,1,482,0)
         DAYT12,ROU. From Today at 11:26,  By you. Scheduled for Today
"PKG",573,22,1,"PAH",1,1,483,0)
         at 11:27
"PKG",573,22,1,"PAH",1,1,484,0)
----------------------------------------------------------------------
"PKG",573,22,1,"PAH",1,1,485,0)
7399752: MONITOR^VDEFMON, VDEF Request Processor Monitor.  No device.
"PKG",573,22,1,"PAH",1,1,486,0)
         DAYT12,ROU.  From Today at 11:26,  By you.
"PKG",573,22,1,"PAH",1,1,487,0)
         Started running Today at 11:26.  Job #: 560552879 [21695BAF]
"PKG",573,22,1,"PAH",1,1,488,0)
----------------------------------------------------------------------
"PKG",573,22,1,"PAH",1,1,489,0)
 
"PKG",573,22,1,"PAH",1,1,490,0)
2) Run the Status of VDEF components [VDEF Status] display and verify the
"PKG",573,22,1,"PAH",1,1,491,0)
   following:
"PKG",573,22,1,"PAH",1,1,492,0)
   - Requestor status is Activated
"PKG",573,22,1,"PAH",1,1,493,0)
   - Request Processor Status is "Running"
"PKG",573,22,1,"PAH",1,1,494,0)
   - Task status is "Active-Running"
"PKG",573,22,1,"PAH",1,1,495,0)
   - the Current Task # matches the task # for the EN^VDEFREQ task.
"PKG",573,22,1,"PAH",1,1,496,0)
 
"PKG",573,22,1,"PAH",1,1,497,0)
 (example of the Status of VDEF components [VDEF Status] display)
"PKG",573,22,1,"PAH",1,1,498,0)
 
"PKG",573,22,1,"PAH",1,1,499,0)
                      VDEF Status - Dec 22, 2005@11:50:14
"PKG",573,22,1,"PAH",1,1,500,0)
Logical Link Status
"PKG",573,22,1,"PAH",1,1,501,0)
  VDEFVIE1: stopped or caught up
"PKG",573,22,1,"PAH",1,1,502,0)
  VDEFVIE2: stopped or caught up
"PKG",573,22,1,"PAH",1,1,503,0)
  VDEFVIE3: stopped or caught up
"PKG",573,22,1,"PAH",1,1,504,0)
 
"PKG",573,22,1,"PAH",1,1,505,0)
Requestor Status
"PKG",573,22,1,"PAH",1,1,506,0)
  MAINTENANCE: Activated        Dest.: VISTA HL7    Req. Queue: 
"PKG",573,22,1,"PAH",1,1,507,0)
MAINTENANCE
"PKG",573,22,1,"PAH",1,1,508,0)
 
"PKG",573,22,1,"PAH",1,1,509,0)
Request Processor Status
"PKG",573,22,1,"PAH",1,1,510,0)
  MAINTENANCE: Running
"PKG",573,22,1,"PAH",1,1,511,0)
  Current Task # [Proc]: 7410052 [21A53BA8]  Task status: Active-
"PKG",573,22,1,"PAH",1,1,512,0)
  Running
"PKG",573,22,1,"PAH",1,1,513,0)
  Requests waiting for purge: 0      Last request#: 
"PKG",573,22,1,"PAH",1,1,514,0)
  Checked Out(0)  Queued Up(0)  Errored Out(0)
"PKG",573,22,1,"PAH",1,1,515,0)
 
"PKG",573,22,1,"PAH",1,1,516,0)
IMPORTANT NOTES ON THE Status of VDEF components [VDEF Status] DISPLAY
"PKG",573,22,1,"PAH",1,1,517,0)
==========================================
"PKG",573,22,1,"PAH",1,1,518,0)
The "Request Processor Status" is simply the status flag of the process in
"PKG",573,22,1,"PAH",1,1,519,0)
a VDEF global. It is possible to have the status "Running" even if the VMS
"PKG",573,22,1,"PAH",1,1,520,0)
process of the task had died.
"PKG",573,22,1,"PAH",1,1,521,0)
 
"PKG",573,22,1,"PAH",1,1,522,0)
IF THE REQUEST QUEUE PROCESSOR TASK (EN^VDEFREQ) IS RUNNING:
"PKG",573,22,1,"PAH",1,1,523,0)
The Request Processor Status will show "Running" and the task status will 
"PKG",573,22,1,"PAH",1,1,524,0)
show "Active-Running".
"PKG",573,22,1,"PAH",1,1,525,0)
 
"PKG",573,22,1,"PAH",1,1,526,0)
IF THE REQUEST QUEUE PROCESSOR TASK (EN^VDEFREQ) IS SUSPENDED BY SITE 
"PKG",573,22,1,"PAH",1,1,527,0)
USING the VDEF Configuration and Status Menu:
"PKG",573,22,1,"PAH",1,1,528,0)
The Request Processor Status will show "Suspended" and the task status 
"PKG",573,22,1,"PAH",1,1,529,0)
will show "Interrupted".
"PKG",573,22,1,"PAH",1,1,530,0)
 
"PKG",573,22,1,"PAH",1,1,531,0)
                      VDEF Status - Dec 22, 2005@11:50:14
"PKG",573,22,1,"PAH",1,1,532,0)
Logical Link Status
"PKG",573,22,1,"PAH",1,1,533,0)
  VDEFVIE1: stopped or caught up
"PKG",573,22,1,"PAH",1,1,534,0)
  VDEFVIE2: stopped or caught up
"PKG",573,22,1,"PAH",1,1,535,0)
  VDEFVIE3: stopped or caught up
"PKG",573,22,1,"PAH",1,1,536,0)
 
"PKG",573,22,1,"PAH",1,1,537,0)
Requestor Status
"PKG",573,22,1,"PAH",1,1,538,0)
  MAINTENANCE: Activated      Dest.: VISTA HL7    Req. Queue: MAINTENANCE
"PKG",573,22,1,"PAH",1,1,539,0)
 
"PKG",573,22,1,"PAH",1,1,540,0)
 Request Processor Status
"PKG",573,22,1,"PAH",1,1,541,0)
  MAINTENANCE: Suspended
"PKG",573,22,1,"PAH",1,1,542,0)
  Current Task # [Proc]: 7410053 [0]  Task status: Interrupted
"PKG",573,22,1,"PAH",1,1,543,0)
  Requests waiting for purge: 0      Last request#: 
"PKG",573,22,1,"PAH",1,1,544,0)
  Checked Out(0)  Queued Up(0)  Errored Out(0)
"PKG",573,22,1,"PAH",1,1,545,0)
 
"PKG",573,22,1,"PAH",1,1,546,0)
IMPORTANT:
"PKG",573,22,1,"PAH",1,1,547,0)
IF THE REQUEST QUEUE PROCESSOR TASK (EN^VDEFREQ) IS RUNNING BUT THE VMS 
"PKG",573,22,1,"PAH",1,1,548,0)
PROCESS HAS STOPPED:
"PKG",573,22,1,"PAH",1,1,549,0)
The Request Processor Status will STILL show "Running" and the task status
"PKG",573,22,1,"PAH",1,1,550,0)
will STILL show "Active-Running".
"PKG",573,22,1,"PAH",1,1,551,0)
 
"PKG",573,22,1,"PAH",1,1,552,0)
This is because of the way that an application communicates with TaskMan 
"PKG",573,22,1,"PAH",1,1,553,0)
to stop a task. It makes a request to TaskMan to stop the task and waits 
"PKG",573,22,1,"PAH",1,1,554,0)
for the status of the task to go to "stop requested". Then the application
"PKG",573,22,1,"PAH",1,1,555,0)
quits back to TaskMan and only then does TaskMan update the task status to
"PKG",573,22,1,"PAH",1,1,556,0)
stopped or interrupted.  If the VMS process for the EN^VDEFREQ task had
"PKG",573,22,1,"PAH",1,1,557,0)
died, then the VDEFREQ program is not running and cannot quit back to
"PKG",573,22,1,"PAH",1,1,558,0)
TaskMan.  This is why the TaskMan task status stays "Active-Running".
"PKG",573,22,1,"PAH",1,1,559,0)
 
"PKG",573,22,1,"PAH",1,1,560,0)
 
"PKG",573,22,1,"PAH",1,1,561,0)
HOW TO VERIFY THAT THIS PATCH TESTS SUCCESSFULLY
"PKG",573,22,1,"PAH",1,1,562,0)
================================================
"PKG",573,22,1,"PAH",1,1,563,0)
1) From the VDEF Configuration and Status Menu, suspend the MAINTENANCE
"PKG",573,22,1,"PAH",1,1,564,0)
   request queue. You should get the two alerts shown below.
"PKG",573,22,1,"PAH",1,1,565,0)
 
"PKG",573,22,1,"PAH",1,1,566,0)
   MM/DD/YY@HH:MM:SS VDEF REQUEST QUEUE PROCESSOR FOR MAINTENANCE HAS
"PKG",573,22,1,"PAH",1,1,567,0)
   EXITED.
"PKG",573,22,1,"PAH",1,1,568,0)
   MM/DD/YY@HH:MM:SS VDEF QUEUE MAINTENANCE IS SUSPENDED. PLEASE START IT.
"PKG",573,22,1,"PAH",1,1,569,0)
 
"PKG",573,22,1,"PAH",1,1,570,0)
   Note that you may have to wait up to ten minutes to get these
"PKG",573,22,1,"PAH",1,1,571,0)
   alerts. This is the interval that the VDEF process monitor runs at.
"PKG",573,22,1,"PAH",1,1,572,0)
 
"PKG",573,22,1,"PAH",1,1,573,0)
2) From the VDEF Configuration and Status Menu, restart the MAINTENANCE
"PKG",573,22,1,"PAH",1,1,574,0)
   Request Queue by changing the status to Running.
"PKG",573,22,1,"PAH",1,1,575,0)
 
"PKG",573,22,1,"PAH",1,1,576,0)
3) WITHOUT suspending the VDEF Request Queue 'MAINTENANCE', use the VDEF 
"PKG",573,22,1,"PAH",1,1,577,0)
   Status display to identify the VMS process ID for the Request Queue
"PKG",573,22,1,"PAH",1,1,578,0)
   Task. Then use ^RESJOB to kill that job.  You should get the
"PKG",573,22,1,"PAH",1,1,579,0)
   following alert:
"PKG",573,22,1,"PAH",1,1,580,0)
 
"PKG",573,22,1,"PAH",1,1,581,0)
   MM/DD/YY@HH:MM:SS VDEF QUEUE MAINTENANCE AUTO-RESTARTED. NO ACTION
"PKG",573,22,1,"PAH",1,1,582,0)
   REQUIRED.
"PKG",573,22,1,"PAH",1,1,583,0)
 
"PKG",573,22,1,"PAH",1,1,584,0)
   Note that you may have to wait up to ten minutes to get these
"PKG",573,22,1,"PAH",1,1,585,0)
   alerts. This is the interval that the VDEF process monitor runs at.
"PKG",573,22,1,"PAH",1,1,586,0)
 
"PKG",573,22,1,"PAH",1,1,587,0)
   If you kill the process while there is a VDEF Request in the
"PKG",573,22,1,"PAH",1,1,588,0)
   Checked Out status, you may also get this alert:
"PKG",573,22,1,"PAH",1,1,589,0)
 
"PKG",573,22,1,"PAH",1,1,590,0)
   MM/DD/YY@HH:MM:SS RECORD nnn IN QUEUE MAINTENANCE HUNG IN Checked
"PKG",573,22,1,"PAH",1,1,591,0)
   Out Status.
"PKG",573,22,1,"PAH",1,1,592,0)
 
"PKG",573,22,1,"PAH",1,1,593,0)
   NOTE: Doing this will leave an orphaned TaskMan task for EN^VDEFREQ
"PKG",573,22,1,"PAH",1,1,594,0)
   that you will have to clean and delete.
"PKG",573,22,1,"PAH",1,1,595,0)
 
"PKG",573,22,1,"PAH",1,1,596,0)
4) If you do get a Checked Out request alert, use %G and look at the
"PKG",573,22,1,"PAH",1,1,597,0)
   record. If it's a valid alert, the data in piece 2 of the zero node
"PKG",573,22,1,"PAH",1,1,598,0)
   will be "C".
"PKG",573,22,1,"PAH",1,1,599,0)
      ^VDEFHL7(579.3,1,1,record ien,0) = IEN^STATUS^......
"PKG",573,22,1,"PAH",1,1,600,0)
 
"PKG",573,22,1,"PAH",1,1,601,0)
5) If you get any requests that get hung in the Checked Out or
"PKG",573,22,1,"PAH",1,1,602,0)
   Errored Out Status, they will get requeued by the VDEF queue
"PKG",573,22,1,"PAH",1,1,603,0)
   process monitor which runs every ten minutes.  If this monitor does
"PKG",573,22,1,"PAH",1,1,604,0)
   requeue any requests, you will get one or both of these alerts:
"PKG",573,22,1,"PAH",1,1,605,0)
 
"PKG",573,22,1,"PAH",1,1,606,0)
   MM/DD/YY@HH:MM:SS VDEF HAS REQUEUED CHECKED OUT RECORDS. NO ACTION
"PKG",573,22,1,"PAH",1,1,607,0)
   NEEDED.
"PKG",573,22,1,"PAH",1,1,608,0)
 
"PKG",573,22,1,"PAH",1,1,609,0)
   MM/DD/YY@HH:MM:SS VDEF HAS REQUEUED ERRORED OUT RECORDS. NO ACTION
"PKG",573,22,1,"PAH",1,1,610,0)
   NEEDED.
"PKG",573,22,1,"PAH",1,1,611,0)
 
"PKG",573,22,1,"PAH",1,1,612,0)
   NOTE: Without direct, intentional intervention in the ^VDEFHL7
"PKG",573,22,1,"PAH",1,1,613,0)
         queue by modifying a record, you will have to wait for a
"PKG",573,22,1,"PAH",1,1,614,0)
         request to get checked out hung or errored out on it's own. If
"PKG",573,22,1,"PAH",1,1,615,0)
         you don't want to wait, instructions on how to do that for the
"PKG",573,22,1,"PAH",1,1,616,0)
         purposes of verifying the testing of this patch are available
"PKG",573,22,1,"PAH",1,1,617,0)
         from the VDEF developer.
"PKG",573,22,1,"PAH",1,1,618,0)
 
"PKG",573,22,1,"PAH",1,1,619,0)
6) VDEF alerts will no longer be sent to members of the HL7 mail group
"PKG",573,22,1,"PAH",1,1,620,0)
   but will be sent to the members in the new VDEF NATIONAL ALERTS
"PKG",573,22,1,"PAH",1,1,621,0)
   mail group.
"PKG",573,22,1,"PAH",1,1,622,0)
 
"PKG",573,22,1,"PAH",1,1,623,0)
7) You have had the patch in place for 2 weeks and have seen no
"PKG",573,22,1,"PAH",1,1,624,0)
   adverse affects and it has not affected the functionality of any
"PKG",573,22,1,"PAH",1,1,625,0)
   other option(s).
"PKG",573,22,1,"PAH",1,1,626,0)
 
"PKG",573,22,1,"PAH",1,1,627,0)
8) You have communicated your test results to the SQA representative
"PKG",573,22,1,"PAH",1,1,628,0)
   and given your approval for its release.
"PRE")
VDEFKIDS
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","VDEFCONT")
0^1^B37180716
"RTN","VDEFCONT",1,0)
VDEFCONT ;INTEGIC/AM & BPOIFO/JG - VDEF CONTROL PROGRAM ; 16 Nov 2005  1:08 PM
"RTN","VDEFCONT",2,0)
 ;;1.0;VDEF;**3**;Dec 28, 2004
"RTN","VDEFCONT",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VDEFCONT",4,0)
 ;
"RTN","VDEFCONT",5,0)
 ; IA: 10063 - $$S^%ZTLOAD
"RTN","VDEFCONT",6,0)
 ;     10063 - $$ASKSTOP^%ZTLOAD
"RTN","VDEFCONT",7,0)
 ;
"RTN","VDEFCONT",8,0)
 Q  ; No bozos
"RTN","VDEFCONT",9,0)
 ;
"RTN","VDEFCONT",10,0)
START ; Main entry point for scheduling queue processor jobs at Taskman
"RTN","VDEFCONT",11,0)
 ; Startup time
"RTN","VDEFCONT",12,0)
 I '$D(ZTQUEUED) W !,"Must be run from TaskMan." Q
"RTN","VDEFCONT",13,0)
 ;
"RTN","VDEFCONT",14,0)
 ; Start Request Queue processors
"RTN","VDEFCONT",15,0)
 N QIEN F QIEN=0:0 S QIEN=$O(^VDEFHL7(579.3,QIEN)) Q:'QIEN  D REQ(QIEN)
"RTN","VDEFCONT",16,0)
 ;
"RTN","VDEFCONT",17,0)
 ; Start the checked out request monitor job
"RTN","VDEFCONT",18,0)
 D MONCHKO
"RTN","VDEFCONT",19,0)
 ;
"RTN","VDEFCONT",20,0)
 ; Start the Request Queue processor monitor job
"RTN","VDEFCONT",21,0)
 D START^VDEFMON
"RTN","VDEFCONT",22,0)
 Q
"RTN","VDEFCONT",23,0)
 ;
"RTN","VDEFCONT",24,0)
MONCHKO ; Start the VDEF job to monitor checked out requests
"RTN","VDEFCONT",25,0)
 N ARR,ERR,FDA,ZTDESC,ZTDTH,ZTIO,ZTPRI,ZTRTN,ZTSK
"RTN","VDEFCONT",26,0)
 ;
"RTN","VDEFCONT",27,0)
 ; Check the status of the last VDEF Monitor task.
"RTN","VDEFCONT",28,0)
 D GETS^DIQ(579.5,"1,",".01;.02;.06","I","ARR","ERR")
"RTN","VDEFCONT",29,0)
 ; Don't start a new one if old one is scheduled.
"RTN","VDEFCONT",30,0)
 S ZTSK=+$G(ARR(579.5,"1,",.06,"I")) D STAT^%ZTLOAD
"RTN","VDEFCONT",31,0)
 I ZTSK(1)=1 Q
"RTN","VDEFCONT",32,0)
 ;
"RTN","VDEFCONT",33,0)
 ; Schedule a new task.
"RTN","VDEFCONT",34,0)
 S ZTRTN="MONITOR^VDEFCONT",ZTDESC="VDEF Checked Out Monitor"
"RTN","VDEFCONT",35,0)
 ;
"RTN","VDEFCONT",36,0)
 ; Calculate when to run the VDEF Monitor next time
"RTN","VDEFCONT",37,0)
 S ZTDTH=$$FUTURE^VDEFUTIL($G(ARR(579.5,"1,",.02,"I")))
"RTN","VDEFCONT",38,0)
 S (ZTPRI,ZTIO)=""
"RTN","VDEFCONT",39,0)
 D ^%ZTLOAD
"RTN","VDEFCONT",40,0)
 ;
"RTN","VDEFCONT",41,0)
 ; Check that TaskMan successfully queued up the Monitor task
"RTN","VDEFCONT",42,0)
 I '$G(ZTSK) D ALERT^VDEFUTIL("VDEF CHECKED OUT MONITOR FAILED TO START. CHECK ERROR TRAP.")
"RTN","VDEFCONT",43,0)
 ;
"RTN","VDEFCONT",44,0)
 ; File the task number of the task that has been queued up
"RTN","VDEFCONT",45,0)
 I $G(ZTSK) S FDA(1,579.5,"1,",.06)=ZTSK D FILE^DIE("","FDA(1)","ERR(1)")
"RTN","VDEFCONT",46,0)
 Q
"RTN","VDEFCONT",47,0)
 ;
"RTN","VDEFCONT",48,0)
MONITOR ; VDEF monitor task, executed on a schedule determined by queue
"RTN","VDEFCONT",49,0)
 ; parameter 'CHECK OUT TIME LIMIT'. Checks for potentially hung
"RTN","VDEFCONT",50,0)
 ; 'Checked Out' entries in the Request Queues
"RTN","VDEFCONT",51,0)
 ;
"RTN","VDEFCONT",52,0)
 N QIEN S (ZTSTOP,QIEN)=0
"RTN","VDEFCONT",53,0)
 F  S QIEN=$O(^VDEFHL7(579.3,"C","C",QIEN)) Q:'QIEN  D  Q:ZTSTOP
"RTN","VDEFCONT",54,0)
 . N IEN,LIMIT,QUEUE,QUEUENAM,QUIT
"RTN","VDEFCONT",55,0)
 . ;
"RTN","VDEFCONT",56,0)
 . ; Retrieve queue data
"RTN","VDEFCONT",57,0)
 . D GETS^DIQ(579.3,QIEN_",",".01;.04;.05","I","QUEUE","ERR")
"RTN","VDEFCONT",58,0)
 . S QUEUENAM=$G(QUEUE(579.3,QIEN_",",.01,"I"))
"RTN","VDEFCONT",59,0)
 . ;
"RTN","VDEFCONT",60,0)
 . ; Check-out Time Limit in seconds
"RTN","VDEFCONT",61,0)
 . S LIMIT=$G(QUEUE(579.3,QIEN_",",.05,"I"))
"RTN","VDEFCONT",62,0)
 . ;
"RTN","VDEFCONT",63,0)
 . ; Get a list of currently Checked-out Requests in this queue
"RTN","VDEFCONT",64,0)
 . S IEN=0 F  S IEN=$O(^VDEFHL7(579.3,"C","C",QIEN,IEN)) Q:'IEN  D  Q:ZTSTOP
"RTN","VDEFCONT",65,0)
 .. S ZTSTOP=$$S^%ZTLOAD() Q:ZTSTOP
"RTN","VDEFCONT",66,0)
 .. N CHECKOUT,ENTRY,ERR,FDA
"RTN","VDEFCONT",67,0)
 .. ;
"RTN","VDEFCONT",68,0)
 .. ; Get the related data for the request
"RTN","VDEFCONT",69,0)
 .. D GETS^DIQ(579.31,IEN_","_QIEN_",",".01;.02;.09;.15","I","ENTRY","ERR")
"RTN","VDEFCONT",70,0)
 .. ;
"RTN","VDEFCONT",71,0)
 .. ; Quit if Vista HL7 IRM already notified or if status is not "C"
"RTN","VDEFCONT",72,0)
 .. Q:$G(ENTRY(579.31,IEN_","_QIEN_",",.15,"I"))'=""
"RTN","VDEFCONT",73,0)
 .. Q:$G(ENTRY(579.31,IEN_","_QIEN_",",.02,"I"))'="C"
"RTN","VDEFCONT",74,0)
 .. ;
"RTN","VDEFCONT",75,0)
 .. ; Get the date when the request was checked out and compare with
"RTN","VDEFCONT",76,0)
 .. ; CHECK OUT TIME LIMIT parameter.
"RTN","VDEFCONT",77,0)
 .. S CHECKOUT=$G(ENTRY(579.31,IEN_","_QIEN_",",.09,"I"))
"RTN","VDEFCONT",78,0)
 .. ;
"RTN","VDEFCONT",79,0)
 .. ; If no checkout time, don't create a false alert.
"RTN","VDEFCONT",80,0)
 .. Q:'CHECKOUT
"RTN","VDEFCONT",81,0)
 .. Q:$$DIFF^VDEFUTIL(CHECKOUT,$H)'>LIMIT
"RTN","VDEFCONT",82,0)
 .. ;
"RTN","VDEFCONT",83,0)
 .. ; Request appears hung. Send a message to the Vista HL7 IRM.
"RTN","VDEFCONT",84,0)
 .. D ALERT^VDEFUTIL("RECORD "_IEN_" IN VDEF QUEUE '"_$E(QUEUENAM,1,35)_"' HUNG IN CHECKED OUT STATUS.")
"RTN","VDEFCONT",85,0)
 .. ;
"RTN","VDEFCONT",86,0)
 .. ; Update the time stamp in the entry so that the VDEF Monitor
"RTN","VDEFCONT",87,0)
 .. ; doesn't notify the Vista HL7 IRM more than once.
"RTN","VDEFCONT",88,0)
 .. L +^VDEFHL7(579.3,QIEN,IEN)
"RTN","VDEFCONT",89,0)
 .. D NOW^%DTC S FDA(1,579.31,IEN_","_QIEN_",",.15)=%
"RTN","VDEFCONT",90,0)
 .. D FILE^DIE("","FDA(1)","ERR(1)")
"RTN","VDEFCONT",91,0)
 .. L -^VDEFHL7(579.3,QIEN,IEN)
"RTN","VDEFCONT",92,0)
 .. Q
"RTN","VDEFCONT",93,0)
 ;
"RTN","VDEFCONT",94,0)
 ; Check if TaskMan requested a stop
"RTN","VDEFCONT",95,0)
 I ZTSTOP S X=$$ASKSTOP^%ZTLOAD(ZTSK),ZTREQ="@" Q
"RTN","VDEFCONT",96,0)
 ;
"RTN","VDEFCONT",97,0)
PURGE ; Purge old entries in Request Queues
"RTN","VDEFCONT",98,0)
 S (ZTSTOP,QIEN)=0
"RTN","VDEFCONT",99,0)
 F  S QIEN=$O(^VDEFHL7(579.3,"C","P",QIEN)) Q:'QIEN  D  Q:ZTSTOP
"RTN","VDEFCONT",100,0)
 . N ARCH,IEN,QUEUE,QUIT
"RTN","VDEFCONT",101,0)
 . ; Retrieve queue data
"RTN","VDEFCONT",102,0)
 . D GETS^DIQ(579.3,QIEN_",",".04","I","QUEUE","ERR")
"RTN","VDEFCONT",103,0)
 . ; Retrieve the queue's Archival Parameter (in seconds)
"RTN","VDEFCONT",104,0)
 . S ARCH=$G(QUEUE(579.3,QIEN_",",.04,"I"))
"RTN","VDEFCONT",105,0)
 . ; Initialize the flag that indicates whether the oldest Processed
"RTN","VDEFCONT",106,0)
 . ; entry in a given Request Queue is too recent to be purged
"RTN","VDEFCONT",107,0)
 . S QUIT=0
"RTN","VDEFCONT",108,0)
 . ; Loop through the list of "P"rocesses entries in this Request
"RTN","VDEFCONT",109,0)
 . ; Queue, starting with the oldest
"RTN","VDEFCONT",110,0)
 . F IEN=0:0 S IEN=$O(^VDEFHL7(579.3,"C","P",QIEN,IEN)) Q:'IEN  D  Q:QUIT!ZTSTOP
"RTN","VDEFCONT",111,0)
 .. S ZTSTOP=$$S^%ZTLOAD() Q:ZTSTOP
"RTN","VDEFCONT",112,0)
 .. N DTS,ENTRY,ERR,FDA
"RTN","VDEFCONT",113,0)
 .. ; Get this entry's data
"RTN","VDEFCONT",114,0)
 .. D GETS^DIQ(579.31,IEN_","_QIEN_",",".13","I","ENTRY","ERR")
"RTN","VDEFCONT",115,0)
 .. I $D(ERR) ; Add error processing here
"RTN","VDEFCONT",116,0)
 .. ; Retrieve the DTS when the Request was "P"rocessed
"RTN","VDEFCONT",117,0)
 .. S DTS=$G(ENTRY(579.31,IEN_","_QIEN_",",.13,"I"))
"RTN","VDEFCONT",118,0)
 .. ; Calculate how long it has been since this Request was "P"rocessed
"RTN","VDEFCONT",119,0)
 .. ; and, if the Request is more recent than the Archival Parameter
"RTN","VDEFCONT",120,0)
 .. ; for this Queue, set the "Quit" flag and stop processing the Queue
"RTN","VDEFCONT",121,0)
 .. I $$DIFF^VDEFUTIL(DTS,$H)<ARCH S QUIT=1 Q
"RTN","VDEFCONT",122,0)
 .. ; If we are here, then the entry is older than allowed by the
"RTN","VDEFCONT",123,0)
 .. ; Archival Parameter - purge this entry from the Request Queue
"RTN","VDEFCONT",124,0)
 .. S FDA(1,579.31,IEN_","_QIEN_",",.01)="@"
"RTN","VDEFCONT",125,0)
 .. D FILE^DIE("","FDA(1)","ERR(1)")
"RTN","VDEFCONT",126,0)
 ;
"RTN","VDEFCONT",127,0)
 ; Stop if TaskMan requested
"RTN","VDEFCONT",128,0)
 I ZTSTOP S X=$$ASKSTOP^%ZTLOAD(ZTSK),ZTREQ="@" Q
"RTN","VDEFCONT",129,0)
 ;
"RTN","VDEFCONT",130,0)
 ; Reschedule VDEF checked out monitor
"RTN","VDEFCONT",131,0)
 D MONCHKO
"RTN","VDEFCONT",132,0)
 S ZTREQ="@"
"RTN","VDEFCONT",133,0)
 Q
"RTN","VDEFCONT",134,0)
 ;
"RTN","VDEFCONT",135,0)
REQ(QIEN) ; Start a Request Queue Processor task for a single queue
"RTN","VDEFCONT",136,0)
 ; Try locking the Request Queue - if we fail, then there is 
"RTN","VDEFCONT",137,0)
 ; another Request Processor currently holding the lock, so skip it
"RTN","VDEFCONT",138,0)
 L +^VDEFHL7(579.3,"QUEUE",QIEN):3 Q:'$T
"RTN","VDEFCONT",139,0)
 N ERR,FDA,QNAME,QUEUE,ZTDESC,ZTDTH,ZTIO,ZTPRI,ZTRTN,ZTSAVE,ZTSK
"RTN","VDEFCONT",140,0)
 ; Retrieve queue data
"RTN","VDEFCONT",141,0)
 D GETS^DIQ(579.3,QIEN_",",".01;.02;.07;.08;.09","I","QUEUE","ERR")
"RTN","VDEFCONT",142,0)
 ; If this Request Queue is suspended, quit
"RTN","VDEFCONT",143,0)
 I $G(QUEUE(579.3,QIEN_",",.09,"I"))="S" G REQX
"RTN","VDEFCONT",144,0)
 ; TaskMan task number of the last Request Processor task for this queue
"RTN","VDEFCONT",145,0)
 S ZTSK=+$G(QUEUE(579.3,QIEN_",",.08,"I"))
"RTN","VDEFCONT",146,0)
 ; Check the status of the last Request Processor task
"RTN","VDEFCONT",147,0)
 D STAT^%ZTLOAD
"RTN","VDEFCONT",148,0)
 ; If the task is scheduled to run, then don't submit a new one - this
"RTN","VDEFCONT",149,0)
 ; means that the system is coming back after a restart which occurred
"RTN","VDEFCONT",150,0)
 ; while an old Request Processor task was scheduled for running
"RTN","VDEFCONT",151,0)
 I ZTSK(1)=1 G REQX
"RTN","VDEFCONT",152,0)
 ;
"RTN","VDEFCONT",153,0)
 ; Create TaskMan variables
"RTN","VDEFCONT",154,0)
 S ZTRTN="EN^VDEFREQ",(ZTIO,ZTPRI)=""
"RTN","VDEFCONT",155,0)
 S QNAME=$G(QUEUE(579.3,QIEN_",",.01,"I"))
"RTN","VDEFCONT",156,0)
 S ZTDESC="VDEF Request Processor for "_QNAME
"RTN","VDEFCONT",157,0)
 S ZTSAVE("QIEN")=QIEN,ZTDTH=$H
"RTN","VDEFCONT",158,0)
 D ^%ZTLOAD
"RTN","VDEFCONT",159,0)
 ; Check that TaskMan created the task.
"RTN","VDEFCONT",160,0)
 I '$G(ZTSK) D ALERT^VDEFUTIL("VDEF REQUEST PROCESS "_$E(QNAME,1,20)_" FAILED TO START. CHECK ERROR TRAP.")
"RTN","VDEFCONT",161,0)
 ; File the task number of the task that has been queued up
"RTN","VDEFCONT",162,0)
 I $G(ZTSK) D
"RTN","VDEFCONT",163,0)
 . S FDA(1,579.3,QIEN_",",.08)=ZTSK
"RTN","VDEFCONT",164,0)
 . D FILE^DIE("","FDA(1)","ERR(1)")
"RTN","VDEFCONT",165,0)
REQX L -^VDEFHL7(579.3,"QUEUE",QIEN)
"RTN","VDEFCONT",166,0)
 Q
"RTN","VDEFKIDS")
0^^B14851717
"RTN","VDEFKIDS",1,0)
VDEFKIDS ;BPOIFO/JG - VDEF Patch Pre & Post Install ; 19 Dec 2005  3:06 PM
"RTN","VDEFKIDS",2,0)
 ;;1.0;VDEF;**3**;Dec 28, 2004
"RTN","VDEFKIDS",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VDEFKIDS",4,0)
 ;
"RTN","VDEFKIDS",5,0)
 ; IA: 10063 - $$ASKSTOP^%ZTLOAD
"RTN","VDEFKIDS",6,0)
 ;     10063 - RTN^%ZTLOAD
"RTN","VDEFKIDS",7,0)
 ;     10103 - $$FMADD^XLFDT
"RTN","VDEFKIDS",8,0)
 ;
"RTN","VDEFKIDS",9,0)
PREIN ; This program will suspend all VDEF Request Queues and stop
"RTN","VDEFKIDS",10,0)
 ; the VDEF Monitor tasks for the install of this patch.
"RTN","VDEFKIDS",11,0)
 ; It is run as the KIDS Environment Check Routine because
"RTN","VDEFKIDS",12,0)
 ; if it is run as a Pre-Install routine, all the programs
"RTN","VDEFKIDS",13,0)
 ; in the build are already loaded which may cause
"RTN","VDEFKIDS",14,0)
 ; EDITED error trap errors.
"RTN","VDEFKIDS",15,0)
 ;
"RTN","VDEFKIDS",16,0)
 I $G(XPDNM)'?1"VDEF*".E W !,"Must be run as a KIDS Environment Check." S XPDABORT=1 Q
"RTN","VDEFKIDS",17,0)
 ;
"RTN","VDEFKIDS",18,0)
 ; Check for XU*8.0*339 patch
"RTN","VDEFKIDS",19,0)
 I '$L($T(JOB^%ZTLOAD)) W !,"XU*8.0*339 required for installation of this patch." S XPDABORT=1 Q
"RTN","VDEFKIDS",20,0)
 ;
"RTN","VDEFKIDS",21,0)
 ; Quit if loading a distribution, continue if installing.
"RTN","VDEFKIDS",22,0)
 Q:$G(XPDENV)'=1
"RTN","VDEFKIDS",23,0)
 W !!,"Suspending Request Queues and stopping associated TaskMan jobs"
"RTN","VDEFKIDS",24,0)
 NEW QUEUE,STAT,TMTASKC,TMTASKF,VDEFIDT,X,VDEFUP
"RTN","VDEFKIDS",25,0)
 S VDEFIDT=$$FMADD^XLFDT(DT,2)
"RTN","VDEFKIDS",26,0)
 K ^XTMP("VDEFP1") S ^XTMP("VDEFP1",0)=VDEFIDT_"^"_DT
"RTN","VDEFKIDS",27,0)
 ;
"RTN","VDEFKIDS",28,0)
 ; Suspend running Request Queues
"RTN","VDEFKIDS",29,0)
 S QUEUE=0 F  S QUEUE=$O(^VDEFHL7(579.3,QUEUE)) Q:'QUEUE  D
"RTN","VDEFKIDS",30,0)
 . S STAT=$$GET1^DIQ(579.3,QUEUE_",",.09,"I") I STAT="R" D
"RTN","VDEFKIDS",31,0)
 .. ; Suspend the request queue
"RTN","VDEFKIDS",32,0)
 .. S VDEFUP(579.3,QUEUE_",",.09)="S" D FILE^DIE("","VDEFUP")
"RTN","VDEFKIDS",33,0)
 .. ;
"RTN","VDEFKIDS",34,0)
 .. ; Stop the current & future TaskMan tasks
"RTN","VDEFKIDS",35,0)
 .. ; Wait up to 5 seconds for tasks to stop then delete them
"RTN","VDEFKIDS",36,0)
 .. ; anyway since that means the process probably died.
"RTN","VDEFKIDS",37,0)
 .. S TMTASKF=$$GET1^DIQ(579.3,QUEUE_",",.08,"I") ; Future
"RTN","VDEFKIDS",38,0)
 .. I TMTASKF'="" D
"RTN","VDEFKIDS",39,0)
 ... N ZTSK S ZTSK=TMTASKF S X=$$ASKSTOP^%ZTLOAD(ZTSK)
"RTN","VDEFKIDS",40,0)
 ... N I F I=1:1:5 D STAT^%ZTLOAD Q:ZTSK(1)=0!(ZTSK(1)>2)  H 1
"RTN","VDEFKIDS",41,0)
 ... K I D KILL^%ZTLOAD
"RTN","VDEFKIDS",42,0)
 .. S TMTASKC=$$GET1^DIQ(579.3,QUEUE_",",.11,"I") ; Current
"RTN","VDEFKIDS",43,0)
 .. I TMTASKC'=""&(TMTASKC'=TMTASKF) D
"RTN","VDEFKIDS",44,0)
 ... N ZTSK S ZTSK=TMTASKC S X=$$ASKSTOP^%ZTLOAD(ZTSK)
"RTN","VDEFKIDS",45,0)
 ... N I F I=1:1:5 D STAT^%ZTLOAD Q:ZTSK(1)=0!(ZTSK(1)>2)  H 1
"RTN","VDEFKIDS",46,0)
 ... K I D KILL^%ZTLOAD
"RTN","VDEFKIDS",47,0)
 .. S ^XTMP("VDEFP1",QUEUE)=""
"RTN","VDEFKIDS",48,0)
 ;
"RTN","VDEFKIDS",49,0)
 ; Stop the checked out request monitor
"RTN","VDEFKIDS",50,0)
 W !!,"Stopping the MONITOR^VDEFCONT task"
"RTN","VDEFKIDS",51,0)
 S ZTSK=$$GET1^DIQ(579.5,"1,",.06)
"RTN","VDEFKIDS",52,0)
 I ZTSK'="" D
"RTN","VDEFKIDS",53,0)
 . S X=$$ASKSTOP^%ZTLOAD(ZTSK)
"RTN","VDEFKIDS",54,0)
 . N I F I=1:1:5 D STAT^%ZTLOAD Q:ZTSK(1)=0!(ZTSK(1)>2)  H 1
"RTN","VDEFKIDS",55,0)
 . K I D KILL^%ZTLOAD
"RTN","VDEFKIDS",56,0)
 ;
"RTN","VDEFKIDS",57,0)
 ; Stop the Request Queue process monitor
"RTN","VDEFKIDS",58,0)
 W !!,"Stopping the MONITOR^VDEFMON task"
"RTN","VDEFKIDS",59,0)
 N TASK D RTN^%ZTLOAD("VDEFMON","TASK")
"RTN","VDEFKIDS",60,0)
 S ZTSK=$O(TASK(0)) I ZTSK D
"RTN","VDEFKIDS",61,0)
 . S X=$$ASKSTOP^%ZTLOAD(ZTSK)
"RTN","VDEFKIDS",62,0)
 . N I F I=1:1:5 D STAT^%ZTLOAD Q:ZTSK(1)=0!(ZTSK(1)>2)  H 1
"RTN","VDEFKIDS",63,0)
 . K I D KILL^%ZTLOAD
"RTN","VDEFKIDS",64,0)
 ;
"RTN","VDEFKIDS",65,0)
 ; Allow enough time for the VMS processes to quit.
"RTN","VDEFKIDS",66,0)
 W !!,"Waiting for processes to quit " N I F I=1:1:5 W ". " H 1
"RTN","VDEFKIDS",67,0)
 K I
"RTN","VDEFKIDS",68,0)
 Q
"RTN","VDEFKIDS",69,0)
 ;
"RTN","VDEFKIDS",70,0)
 ;
"RTN","VDEFKIDS",71,0)
POSTIN ; This program will restart suspended Request Queues start the VDEF
"RTN","VDEFKIDS",72,0)
 ; monitor processes after the KIDS install.
"RTN","VDEFKIDS",73,0)
 ;
"RTN","VDEFKIDS",74,0)
 I $G(XPDNM)'?1"VDEF*".E W !,"Must be run as a KIDS Environment Check." S XPDABORT=1 Q
"RTN","VDEFKIDS",75,0)
 ;
"RTN","VDEFKIDS",76,0)
 ; Don't start VDEF processes on test and Legacy systems
"RTN","VDEFKIDS",77,0)
 I '$$PROD^XUPROD(1) D BMES^XPDUTL("VDEF is not started on test systems.") Q
"RTN","VDEFKIDS",78,0)
 D BMES^XPDUTL("Starting the Request Queues and associated Tasks")
"RTN","VDEFKIDS",79,0)
 ;
"RTN","VDEFKIDS",80,0)
 ; For each Request Queue defined, change the status to
"RTN","VDEFKIDS",81,0)
 ; 'Running' and start the Request Queue process for the queue.
"RTN","VDEFKIDS",82,0)
 NEW QUEUE,STAT,VDEFUP,I,QUENAM
"RTN","VDEFKIDS",83,0)
 S QUEUE=0 F  S QUEUE=$O(^XTMP("VDEFP1",QUEUE)) Q:'QUEUE  D
"RTN","VDEFKIDS",84,0)
 . S QUENAM=$P(^VDEFHL7(579.3,QUEUE,0),U)
"RTN","VDEFKIDS",85,0)
 . S STAT=$$GET1^DIQ(579.3,QUEUE_",",.09,"I") I STAT="S" D
"RTN","VDEFKIDS",86,0)
 .. S VDEFUP(579.3,QUEUE_",",.09)="R" D FILE^DIE("","VDEFUP")
"RTN","VDEFKIDS",87,0)
 .. F I=1:1:5 S STAT=$$GET1^DIQ(579.3,QUEUE_",",.09,"I") Q:STAT="R"  H 1
"RTN","VDEFKIDS",88,0)
 .. I STAT="R" D REQ^VDEFCONT(QUEUE)
"RTN","VDEFKIDS",89,0)
 .. E  D BMES^XPDUTL("**** VDEF '"_QUENAM_"' QUEUE DID NOT START. START IT FROM VDEF CONFIG MENU.")
"RTN","VDEFKIDS",90,0)
 K ^XTMP("VDEFP1")
"RTN","VDEFKIDS",91,0)
 ;
"RTN","VDEFKIDS",92,0)
 ; Restart the Checked Out monitor process.
"RTN","VDEFKIDS",93,0)
 D BMES^XPDUTL("Starting the MONITOR^VDEFCONT task")
"RTN","VDEFKIDS",94,0)
 D MONCHKO^VDEFCONT
"RTN","VDEFKIDS",95,0)
 ;
"RTN","VDEFKIDS",96,0)
 ; Restart the Request Queue process monitor.
"RTN","VDEFKIDS",97,0)
 D BMES^XPDUTL("Starting the MONITOR^VDEFMON task")
"RTN","VDEFKIDS",98,0)
 D START1^VDEFMON
"RTN","VDEFKIDS",99,0)
 Q
"RTN","VDEFMNU")
0^2^B48929533
"RTN","VDEFMNU",1,0)
VDEFMNU ;INTEGIC/YG & BPOIFO/JG - Edit VDEF parameters & status ; 20 Dec 2005  12:57 PM
"RTN","VDEFMNU",2,0)
 ;;1.0;VDEF;**3**;Dec 28, 2004;
"RTN","VDEFMNU",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VDEFMNU",4,0)
 ;
"RTN","VDEFMNU",5,0)
 ; IA's: #4322 - ^HLCS(870,<link>,0)
"RTN","VDEFMNU",6,0)
 ;       #1373 - Lookup to file #101
"RTN","VDEFMNU",7,0)
 ;       #10063 - $$JOB^%ZTLOAD
"RTN","VDEFMNU",8,0)
 ;
"RTN","VDEFMNU",9,0)
 Q  ; No bozos
"RTN","VDEFMNU",10,0)
 ;
"RTN","VDEFMNU",11,0)
SITE ; Edit Site-Wide Parameters
"RTN","VDEFMNU",12,0)
 N DA,DIC,DIE,DR S DIE=579.5,DA=1,DR=".01;.02;" D ^DIE
"RTN","VDEFMNU",13,0)
 Q
"RTN","VDEFMNU",14,0)
 ;
"RTN","VDEFMNU",15,0)
REQUEST ; Edit Request Queue Parameters
"RTN","VDEFMNU",16,0)
 N DIC,DLAYGO,X,Y,DIE,DA,DR
"RTN","VDEFMNU",17,0)
REQUEST1 K DIC S DIC=579.3,DIC(0)="AQE",DIC("A")="Select Request Queue: "  W ! D ^DIC Q:Y=-1
"RTN","VDEFMNU",18,0)
 K DIC S DIE=579.3,DA=$P(Y,U),DR=".04;.05;.02" D ^DIE
"RTN","VDEFMNU",19,0)
 G REQUEST1
"RTN","VDEFMNU",20,0)
 ;
"RTN","VDEFMNU",21,0)
REQOFF ; Toggle Requestor On/Off
"RTN","VDEFMNU",22,0)
 N DIC,DLAYGO,X,Y,DIE,DA,DR
"RTN","VDEFMNU",23,0)
REQOFF1 K DIC S DIC=579.1,DIC(0)="AQE",DIC("A")="Select Requestor: " W ! D ^DIC Q:Y=-1
"RTN","VDEFMNU",24,0)
 I $$GET1^DIQ(579.1,$P(Y,U)_",",.05,"I")="A" D
"RTN","VDEFMNU",25,0)
 . W !,!,"Inactivating a requestor has a significant effect on the synchronization"
"RTN","VDEFMNU",26,0)
 . W !,"of VistA and remote system(s).  All VDEF requests made while the requestor"
"RTN","VDEFMNU",27,0)
 . W !,"is inactive will be PERMANENTLY lost.  Make sure you really want to"
"RTN","VDEFMNU",28,0)
 . W !,"turn it off.",!
"RTN","VDEFMNU",29,0)
 K DIC S DIE=579.1,DA=$P(Y,U),DR=".05" D ^DIE
"RTN","VDEFMNU",30,0)
 G REQOFF1
"RTN","VDEFMNU",31,0)
 ;
"RTN","VDEFMNU",32,0)
QUEOFF ; Toggle Request Processor Queue on/off
"RTN","VDEFMNU",33,0)
 N DIC,DLAYGO,X,Y,DIE,DA,DR,QUEUE,STAT,TMTASK
"RTN","VDEFMNU",34,0)
QUEOFF1 K DIC S DIC=579.3,DIC(0)="AQE",DIC("A")="Select Request Queue: " W ! D ^DIC Q:Y=-1
"RTN","VDEFMNU",35,0)
 K DIC S QUEUE=$P(Y,U) S DIE=579.3,DA=QUEUE,DR=".09" D ^DIE
"RTN","VDEFMNU",36,0)
 ;
"RTN","VDEFMNU",37,0)
 ; Get the new status of the Request Processor
"RTN","VDEFMNU",38,0)
 S STAT=$$GET1^DIQ(579.3,QUEUE_",",.09,"I")
"RTN","VDEFMNU",39,0)
 ;
"RTN","VDEFMNU",40,0)
 ; Start the Request Processor
"RTN","VDEFMNU",41,0)
 I STAT="R" D REQ^VDEFCONT(QUEUE)
"RTN","VDEFMNU",42,0)
 ;
"RTN","VDEFMNU",43,0)
 ; Stop the Request Processor
"RTN","VDEFMNU",44,0)
 I STAT="S" D
"RTN","VDEFMNU",45,0)
 . S TMTASK=$$GET1^DIQ(579.3,QUEUE_",",.08,"I") S:TMTASK'="" X=$$ASKSTOP^%ZTLOAD(TMTASK)
"RTN","VDEFMNU",46,0)
 . S TMTASK=$$GET1^DIQ(579.3,QUEUE_",",.11,"I") S:TMTASK'="" X=$$ASKSTOP^%ZTLOAD(TMTASK)
"RTN","VDEFMNU",47,0)
 G QUEOFF1
"RTN","VDEFMNU",48,0)
 ;
"RTN","VDEFMNU",49,0)
SCHED ; Schedule processor
"RTN","VDEFMNU",50,0)
 N DIC,DLAYGO,X,Y,SIEN,DIE,DA,DR,QUEUE,STAT,TMTASK,ENTRY
"RTN","VDEFMNU",51,0)
SCHED1 K DIC S DIC=579.3,DIC(0)="AQE",DIC("A")="Select Request Queue: " W ! D ^DIC Q:Y=-1
"RTN","VDEFMNU",52,0)
 K DIC S QUEUE=$P(Y,U) D DISP S DA(1)=QUEUE,DIC="^VDEFHL7(579.3,"_QUEUE_",2,"
"RTN","VDEFMNU",53,0)
 S DIC(0)="AQEL",DIC("A")="Select Entry: " D ^DIC G SCHED1:Y=-1
"RTN","VDEFMNU",54,0)
 S ENTRY=$P(Y,U),DIE=DIC,DA=ENTRY
"RTN","VDEFMNU",55,0)
 S DR=".01;.02;.03;D SCHFORM^VDEFMNU;.04;D SCHFORM^VDEFMNU;.05" D ^DIE
"RTN","VDEFMNU",56,0)
 W ! D DISP
"RTN","VDEFMNU",57,0)
 ;
"RTN","VDEFMNU",58,0)
 ; Now reschedule the processor task back
"RTN","VDEFMNU",59,0)
 S ZTSK=$P(^VDEFHL7(579.3,QUEUE,0),U,8) D ISQED^%ZTLOAD
"RTN","VDEFMNU",60,0)
 ;
"RTN","VDEFMNU",61,0)
 ; If old task not found or not running, start it.
"RTN","VDEFMNU",62,0)
 I $G(ZTSK("E"))'="" D REQ^VDEFCONT(QUEUE) G SCHED1
"RTN","VDEFMNU",63,0)
 I ZTSK(0)=0 D REQ^VDEFCONT(QUEUE) G SCHED1
"RTN","VDEFMNU",64,0)
 ;
"RTN","VDEFMNU",65,0)
 ; Task is scheduled, so reschedule it.
"RTN","VDEFMNU",66,0)
 K ZTDESC,ZTIO,ZTRTN,ZTSAVE S ZTDTH=$H D REQ^%ZTLOAD
"RTN","VDEFMNU",67,0)
 G SCHED1
"RTN","VDEFMNU",68,0)
 ;
"RTN","VDEFMNU",69,0)
SCHFORM W !,"Enter time in military form as HH:MM"
"RTN","VDEFMNU",70,0)
 Q
"RTN","VDEFMNU",71,0)
 ;
"RTN","VDEFMNU",72,0)
DISP ; Display scheduling rules.
"RTN","VDEFMNU",73,0)
 I '$O(^VDEFHL7(579.3,QUEUE,2,0)) W !,"No Scheduling Rules currently defined for this queue"
"RTN","VDEFMNU",74,0)
 E  S SIEN=0 D
"RTN","VDEFMNU",75,0)
 . W !,"Currently defined Scheduling Rules are :"
"RTN","VDEFMNU",76,0)
 . F  S SIEN=$O(^VDEFHL7(579.3,QUEUE,2,SIEN)) Q:'SIEN  D
"RTN","VDEFMNU",77,0)
 .. W !,$$GET1^DIQ(579.32,SIEN_","_QUEUE_",",.01,"E")
"RTN","VDEFMNU",78,0)
 .. W ") On ",$$GET1^DIQ(579.32,SIEN_","_QUEUE_",",.02,"E")
"RTN","VDEFMNU",79,0)
 .. W " the request processor is "
"RTN","VDEFMNU",80,0)
 .. S STAT=$$GET1^DIQ(579.32,SIEN_","_QUEUE_",",.03,"E")
"RTN","VDEFMNU",81,0)
 .. W STAT," from ",$$GET1^DIQ(579.32,SIEN_","_QUEUE_",",.04,"I")
"RTN","VDEFMNU",82,0)
 .. W " to ",$$GET1^DIQ(579.32,SIEN_","_QUEUE_",",.05,"I")
"RTN","VDEFMNU",83,0)
 Q
"RTN","VDEFMNU",84,0)
 ;
"RTN","VDEFMNU",85,0)
CUSTOD ; Edit Custodial Package Status
"RTN","VDEFMNU",86,0)
 N DIC,DLAYGO,X,Y,DIE,DA,DR,PACK
"RTN","VDEFMNU",87,0)
CUSTOD1 K DIC S DIC=579.6,DIC(0)="AQE",DIC("A")="Select Custodial Package: "
"RTN","VDEFMNU",88,0)
 W ! D ^DIC Q:Y=-1  S PACK=$P(Y,U)
"RTN","VDEFMNU",89,0)
 I $P(Y,U,2)="REGISTRATION" D  G CUSTOD1
"RTN","VDEFMNU",90,0)
 . W !,"Registration custodial package can't be edited"
"RTN","VDEFMNU",91,0)
 I $$GET1^DIQ(579.6,PACK_",",.02,"I")="A" D
"RTN","VDEFMNU",92,0)
 . W !!,"Inactivating a custodial package has a significant effect on the"
"RTN","VDEFMNU",93,0)
 . W !,"synchronization of VistA and remote system(s).  All VDEF requests for HL7"
"RTN","VDEFMNU",94,0)
 . W !,"messages associated with this custodial package made while the package is"
"RTN","VDEFMNU",95,0)
 . W !,"inactivated will be PERMANENTLY lost.  Make sure you really want to turn"
"RTN","VDEFMNU",96,0)
 . W !,"this custodial package off.",!
"RTN","VDEFMNU",97,0)
 K DIC S DIE=579.6,DA=PACK,DR=".02" D ^DIE
"RTN","VDEFMNU",98,0)
 G CUSTOD1
"RTN","VDEFMNU",99,0)
 ;
"RTN","VDEFMNU",100,0)
EVENT ; Edit VDEF API Event Status
"RTN","VDEFMNU",101,0)
 N DIC,DLAYGO,X,Y,DIE,DA,DR,EVENT
"RTN","VDEFMNU",102,0)
EVENT1 K DIC S DIC("W")="N Z,DESC S Z=^(0),DESC=$G(^(1)) W:$P(Z,U,9)'="""" DESC_""   ""_""Status: ""_$S($P(Z,U,11)=""A"":""ACTIVE"",1:""INACTIVE""),!,?8,""Pkg: ""_$P($G(^DIC(9.4,$P($G(^VDEFHL7(579.6,$P(Z,U,9),0),-1),U),0)),U)"
"RTN","VDEFMNU",103,0)
 S DIC=577,DIC(0)="AQES",DIC("A")="Select VDEF API Event: "
"RTN","VDEFMNU",104,0)
 W ! D ^DIC Q:Y=-1  S EVENT=$P(Y,U)
"RTN","VDEFMNU",105,0)
 I $$GET1^DIQ(577,EVENT_",",.2,"I")="A" D
"RTN","VDEFMNU",106,0)
 . W !!,"Inactivating a VDEF API event will cause all requests for that"
"RTN","VDEFMNU",107,0)
 . W !,"API to be PERMANENTLY lost.  Make sure you really want to turn"
"RTN","VDEFMNU",108,0)
 . W !,"this API event off.",!
"RTN","VDEFMNU",109,0)
 K DIC S DIE=577,DA=EVENT,DR=".2" D ^DIE
"RTN","VDEFMNU",110,0)
 G EVENT1
"RTN","VDEFMNU",111,0)
 ;
"RTN","VDEFMNU",112,0)
REPORT ; Display VDEF status/parameters
"RTN","VDEFMNU",113,0)
 N LL,LLN,SUBS,LINX,TNN,TNF,IEN,NZ,VDI,VDJ,VDK,VDA,PROT,STATS,%H,Y
"RTN","VDEFMNU",114,0)
REPORT1 W @IOF,?22,"VDEF Status - " S %H=$H D YX^%DTC W Y
"RTN","VDEFMNU",115,0)
 W !,"Logical Link Status" K LINX
"RTN","VDEFMNU",116,0)
 S VDI=0 F  S VDI=$O(^VDEFHL7(577,VDI)) Q:VDI=""  D
"RTN","VDEFMNU",117,0)
 . K RES S PROT=$P($G(^VDEFHL7(577,VDI,0)),U,7) Q:PROT=""
"RTN","VDEFMNU",118,0)
 . D GETS^DIQ(101,PROT_",","775*","I","RES")
"RTN","VDEFMNU",119,0)
 . S VDJ=0 F  S VDJ=$O(RES(101.0775,VDJ)) Q:VDJ=""  D
"RTN","VDEFMNU",120,0)
 .. S SUBS=RES(101.0775,VDJ,.01,"I")
"RTN","VDEFMNU",121,0)
 .. I SUBS S LLN=$$GET1^DIQ(101,SUBS_",",770.7,"E") I LLN'="" S LINX(LLN)=1
"RTN","VDEFMNU",122,0)
 S LLN=0 F  S LLN=$O(LINX(LLN)) Q:LLN=""  D
"RTN","VDEFMNU",123,0)
 . W !?2,LLN,": " S LL=$O(^HLCS(870,"B",LLN,"")) Q:LL=""
"RTN","VDEFMNU",124,0)
 . N ZTSK S ZTSK=$P($G(^HLCS(870,LL,0)),U,12)
"RTN","VDEFMNU",125,0)
 . I ZTSK'="" D STAT^%ZTLOAD W:$G(ZTSK(1))=2 "running task #",ZTSK K ZTSK
"RTN","VDEFMNU",126,0)
 . E  W "stopped or caught up"
"RTN","VDEFMNU",127,0)
 W !!,"Requestor Status"
"RTN","VDEFMNU",128,0)
 S IEN=0 F  S IEN=$O(^VDEFHL7(579.1,IEN)) Q:'IEN  D
"RTN","VDEFMNU",129,0)
 . S NZ=^VDEFHL7(579.1,IEN,0) W !?2,$P(NZ,U),": "
"RTN","VDEFMNU",130,0)
 . W $S($P(NZ,U,5)="A":"Activated",1:"Inactivated")
"RTN","VDEFMNU",131,0)
 . W ?32,"Dest.: ",$P(^VDEFHL7(579.2,$P(NZ,U,3),0),U)
"RTN","VDEFMNU",132,0)
 . W ?52,"Req. Queue: ",$P(^VDEFHL7(579.3,$P(NZ,U,4),0),U,1)
"RTN","VDEFMNU",133,0)
 W !!,"Request Processor Status"
"RTN","VDEFMNU",134,0)
 S IEN=0 F  S IEN=$O(^VDEFHL7(579.3,IEN)) Q:'IEN  D
"RTN","VDEFMNU",135,0)
 . S NZ=^VDEFHL7(579.3,IEN,0) W !?2,$P(NZ,U),": "
"RTN","VDEFMNU",136,0)
 . W $S($P(NZ,U,9)="R":"Running",1:"Suspended")
"RTN","VDEFMNU",137,0)
 . N ZTSK S TNN=$P(NZ,U,11),ZTSK=TNN D STAT^%ZTLOAD
"RTN","VDEFMNU",138,0)
 . W !?2,"Current Task # [Proc]: ",TNN
"RTN","VDEFMNU",139,0)
 . W " ["_$$CNV^XLFUTL($$JOB^%ZTLOAD(TNN),16)_"]"
"RTN","VDEFMNU",140,0)
 . W "  Task status: "
"RTN","VDEFMNU",141,0)
 . I 'ZTSK(0) W "Undefined"
"RTN","VDEFMNU",142,0)
 . E  W $S(ZTSK(1)=0:"Undefined",ZTSK(1)=1:"Active-Pending",ZTSK(1)=2:"Active-Running",ZTSK(1)=3:"Finished",ZTSK(1)=4:"Available",ZTSK(1)=5:"Interrupted",1:"Unknown")
"RTN","VDEFMNU",143,0)
 . S NZ=$G(^VDEFHL7(579.3,IEN,1,0))
"RTN","VDEFMNU",144,0)
 . I NZ="" W !?2,"No requests in the queue"
"RTN","VDEFMNU",145,0)
 . E  W !?2,"Requests waiting for purge: ",$P(NZ,U,4),"      Last request#: ",$P(NZ,U,3)
"RTN","VDEFMNU",146,0)
 . S STATS="" W !?2
"RTN","VDEFMNU",147,0)
 . F STAT="C","Q","E" D
"RTN","VDEFMNU",148,0)
 .. S (VDJ,VDK)=0 F VDJ=0:1:100+(STAT="Q"*900) S VDK=$O(^VDEFHL7(579.3,"C",STAT,IEN,VDK)) Q:VDK=""
"RTN","VDEFMNU",149,0)
 .. W $S(STAT="C":"Checked Out",STAT="Q":"  Queued Up",STAT="E":"  Errored Out")
"RTN","VDEFMNU",150,0)
 .. W $S(VDJ<(100+(STAT="Q"*900)):"("_VDJ_")",1:"(> "_(100+(STAT="Q"*900))_")")
"RTN","VDEFMNU",151,0)
 ;
"RTN","VDEFMNU",152,0)
 ; Loop added for dashboard monitoring
"RTN","VDEFMNU",153,0)
 R !!,"Hit <return/enter> to continue or '^' to terminate: ",VDA:5
"RTN","VDEFMNU",154,0)
 Q:VDA="^"  G REPORT1
"RTN","VDEFMON")
0^3^B8239134
"RTN","VDEFMON",1,0)
VDEFMON ;BPOIFO/JG - VDEF Queue Process Monitor ; 20 Dec 2005  13:00 PM
"RTN","VDEFMON",2,0)
 ;;1.0;VDEF;**3**;Dec 28, 2004
"RTN","VDEFMON",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VDEFMON",4,0)
 ;
"RTN","VDEFMON",5,0)
 Q  ; No bozos
"RTN","VDEFMON",6,0)
 ;
"RTN","VDEFMON",7,0)
START ; Main entry point for scheduling queue processor monitor in TaskMan
"RTN","VDEFMON",8,0)
 I '$D(ZTQUEUED) W !,"Must be run from TaskMan." Q
"RTN","VDEFMON",9,0)
 ;
"RTN","VDEFMON",10,0)
START1 ; Non-TaskMan entry
"RTN","VDEFMON",11,0)
 ;
"RTN","VDEFMON",12,0)
 ; Only one of these needs to be running.
"RTN","VDEFMON",13,0)
 L +^VDEFHL7("REQMON"):1 Q:'$T
"RTN","VDEFMON",14,0)
 ;
"RTN","VDEFMON",15,0)
 ; Start the Request Queue processor monitor
"RTN","VDEFMON",16,0)
 N ZTDESC,ZTDTH,ZTIO,ZTPRI,ZTRTN,ZTSK
"RTN","VDEFMON",17,0)
 S ZTRTN="MONITOR^VDEFMON",(ZTIO,ZTPRI)="",ZTDTH=$H
"RTN","VDEFMON",18,0)
 S ZTDESC="VDEF Request Processor Monitor"
"RTN","VDEFMON",19,0)
 L -^VDEFHL7("REQMON")
"RTN","VDEFMON",20,0)
 D ^%ZTLOAD
"RTN","VDEFMON",21,0)
 ;
"RTN","VDEFMON",22,0)
 ; Check that TaskMan successfully queued up the Monitor task
"RTN","VDEFMON",23,0)
 I '$G(ZTSK) D ALERT^VDEFUTIL("VDEF QUEUE PROCESS MONITOR DID NOT START. CHECK ERROR TRAP.")
"RTN","VDEFMON",24,0)
 Q
"RTN","VDEFMON",25,0)
 ;
"RTN","VDEFMON",26,0)
 ; Main entry point for the Request Queue process monitor from TaskMan.
"RTN","VDEFMON",27,0)
 ; Check the Request Queue processor for each queue that is defined
"RTN","VDEFMON",28,0)
 ; and has a status of "R" (running). If it is not running, send an alert
"RTN","VDEFMON",29,0)
 ; and restart it.
"RTN","VDEFMON",30,0)
 ; If the Request Queue is currently suspended, send an alert telling
"RTN","VDEFMON",31,0)
 ; site to restart it.
"RTN","VDEFMON",32,0)
MONITOR L +^VDEFHL7("REQMON"):1 Q:'$T
"RTN","VDEFMON",33,0)
 N QIEN,QUEFAIL,QUESTOP,VDEFTSK S VDEFTSK=ZTSK
"RTN","VDEFMON",34,0)
MONITOR1 S QIEN=0
"RTN","VDEFMON",35,0)
 F  S QIEN=+$O(^VDEFHL7(579.3,QIEN)) Q:'QIEN  D  D ALERTSUS:QUESTOP,ALERT:QUEFAIL
"RTN","VDEFMON",36,0)
 . S (QUESTOP,QUEFAIL)=0
"RTN","VDEFMON",37,0)
 . S QUESTOP=$P(^VDEFHL7(579.3,QIEN,0),U,9)="S" Q:QUESTOP
"RTN","VDEFMON",38,0)
 . ;
"RTN","VDEFMON",39,0)
 . ; Try to lock this Request Queue. If it's already locked,
"RTN","VDEFMON",40,0)
 . ; assume that the Request queue processor is running OK.
"RTN","VDEFMON",41,0)
 . L +^VDEFHL7(579.3,"QUEUE",QIEN):1 S QUEFAIL=$T
"RTN","VDEFMON",42,0)
 . L -^VDEFHL7(579.3,"QUEUE",QIEN)
"RTN","VDEFMON",43,0)
 ;
"RTN","VDEFMON",44,0)
 ; Requeue any requests that are stuck in Checked Out or Errored Out status.
"RTN","VDEFMON",45,0)
 S QIEN=0 N RQ
"RTN","VDEFMON",46,0)
 F  S QIEN=+$O(^VDEFHL7(579.3,QIEN)) Q:'QIEN  D
"RTN","VDEFMON",47,0)
 . I +$O(^VDEFHL7(579.3,"C","C",QIEN,"")) D
"RTN","VDEFMON",48,0)
 .. D REQUEUE^VDEFQM(QIEN,.RQ)
"RTN","VDEFMON",49,0)
 .. D:RQ ALERT^VDEFUTIL("VDEF HAS REQUEUED CHECKED OUT RECORDS. NO ACTION NEEDED.")
"RTN","VDEFMON",50,0)
 . I +$O(^VDEFHL7(579.3,"C","E",QIEN,"")) D
"RTN","VDEFMON",51,0)
 .. D RQERR^VDEFQM(QIEN,.RQ)
"RTN","VDEFMON",52,0)
 .. D:RQ ALERT^VDEFUTIL("VDEF HAS REQUEUED ERRORED OUT RECORDS. NO ACTION NEEDED.")
"RTN","VDEFMON",53,0)
 ;
"RTN","VDEFMON",54,0)
 ; Wait for 10 minutes before checking the queue processors again.
"RTN","VDEFMON",55,0)
 ; The wait process is in a loop so it can check if there
"RTN","VDEFMON",56,0)
 ; has been a request to stop processing before the wait expires.
"RTN","VDEFMON",57,0)
WAITLOOP N I F I=1:1:600 D  Q:ZTSTOP
"RTN","VDEFMON",58,0)
 . S ZTSTOP=$$S^%ZTLOAD() Q:ZTSTOP
"RTN","VDEFMON",59,0)
 . H 1
"RTN","VDEFMON",60,0)
 ;
"RTN","VDEFMON",61,0)
 ; Quit or resume processing
"RTN","VDEFMON",62,0)
 G MONITOR1:'$G(ZTSTOP)
"RTN","VDEFMON",63,0)
 ;
"RTN","VDEFMON",64,0)
 ; Send an alert and delete this task's record
"RTN","VDEFMON",65,0)
EXIT D ALERT^VDEFUTIL("VDEF QUEUE PROCESS MONITOR HAS EXITED.")
"RTN","VDEFMON",66,0)
 L -^VDEFHL7("REQMON")
"RTN","VDEFMON",67,0)
 S ZTSK=VDEFTSK,ZTSTOP=1,ZTREQ="@"
"RTN","VDEFMON",68,0)
 Q
"RTN","VDEFMON",69,0)
 ;
"RTN","VDEFMON",70,0)
 ; Generate the failure/restart alert
"RTN","VDEFMON",71,0)
ALERT N QUEUE,Y D ALERTDAT
"RTN","VDEFMON",72,0)
 D ALERT^VDEFUTIL("VDEF QUEUE '"_QUEUE_"' AUTO-RESTARTED. NO ACTION REQUIRED.")
"RTN","VDEFMON",73,0)
 ;
"RTN","VDEFMON",74,0)
 ; Restart the Request Queue processor
"RTN","VDEFMON",75,0)
 D REQ^VDEFCONT(QIEN)
"RTN","VDEFMON",76,0)
 Q
"RTN","VDEFMON",77,0)
 ;
"RTN","VDEFMON",78,0)
 ; Generate the alert that a Request Queue is suspended.
"RTN","VDEFMON",79,0)
ALERTSUS N QUEUE,Y D ALERTDAT
"RTN","VDEFMON",80,0)
 D ALERT^VDEFUTIL("VDEF QUEUE '"_QUEUE_"' IS SUSPENDED. PLEASE START IT.")
"RTN","VDEFMON",81,0)
 Q
"RTN","VDEFMON",82,0)
 ;
"RTN","VDEFMON",83,0)
 ; Get the queue name
"RTN","VDEFMON",84,0)
ALERTDAT S QUEUE=$P(^VDEFHL7(579.3,QIEN,0),U)
"RTN","VDEFMON",85,0)
 Q
"RTN","VDEFQM")
0^4^B65969413
"RTN","VDEFQM",1,0)
VDEFQM ;INTEGIC/AM & BPOIFO/JG - VDEF API ; 21 Dec 2005  11:38 AM
"RTN","VDEFQM",2,0)
 ;;1.0;VDEF;**3**;Dec 28, 2004
"RTN","VDEFQM",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VDEFQM",4,0)
 ;
"RTN","VDEFQM",5,0)
 ; IA's: #4271 - Lookup to file #771.2
"RTN","VDEFQM",6,0)
 ;       #4321 - Lookup to file #779.001
"RTN","VDEFQM",7,0)
 ;
"RTN","VDEFQM",8,0)
 Q  ; No bozos
"RTN","VDEFQM",9,0)
 ;
"RTN","VDEFQM",10,0)
 ; Validates and places a request in the VDEF queue
"RTN","VDEFQM",11,0)
QUEUE(EVENT,PAIR,MSTEXT,REQIEN,DYNAMIC) ;
"RTN","VDEFQM",12,0)
 ; EVENT =  HL7 event in the form Event Type^Message Type (e.g. ADT^A28)
"RTN","VDEFQM",13,0)
 ; PAIR =   Name/value pairs uniquely identifying the IEN
"RTN","VDEFQM",14,0)
 ;          (e.g. SUBTYPE="CHEM"^IEN=1234)
"RTN","VDEFQM",15,0)
 ; MSTEXT = Returned text message, passed by reference
"RTN","VDEFQM",16,0)
 ; REQIEN = Requestor IEN in file 579.1, only valued for solicited
"RTN","VDEFQM",17,0)
 ;          requests
"RTN","VDEFQM",18,0)
 ; DYNAMIC = Dynamic Addressing array in nodes DYNAMIC("LINKS",1-n)
"RTN","VDEFQM",19,0)
 ;
"RTN","VDEFQM",20,0)
 N CNT,CUSTIEN,DATA,DESTIEN,ERR,EVENTIEN,EVTY,EVTYIEN,FDA,VDI,IENROOT
"RTN","VDEFQM",21,0)
 N MESIEN,MSTY,OUTPUT,QUEIEN,RQIEN,SUBTYPE,SUBIEN,NVPIEN
"RTN","VDEFQM",22,0)
 N D0,DA,DH,DI,DIC,DIE,DIK,DIKRFIL,DIN,DIROOT,DR,X,Y
"RTN","VDEFQM",23,0)
 S MSTEXT="",REQIEN=$G(REQIEN) S:$G(U)="" U="^"
"RTN","VDEFQM",24,0)
 ;
"RTN","VDEFQM",25,0)
 ; Check for the existence of the HL7 event
"RTN","VDEFQM",26,0)
 I $G(EVENT)="" S MSTEXT="HL7 event is required" G EXBAD
"RTN","VDEFQM",27,0)
 ;
"RTN","VDEFQM",28,0)
 ; Check for the existence of the name/value pair
"RTN","VDEFQM",29,0)
 I $G(PAIR)="" S MSTEXT="Name/value pair(s) is required" G EXBAD
"RTN","VDEFQM",30,0)
 ;
"RTN","VDEFQM",31,0)
 ; Retrieve the HL7 Message Type and the HL7 Event Type
"RTN","VDEFQM",32,0)
 S MSTY=$P($G(EVENT),U,1),EVTY=$P($G(EVENT),U,2)
"RTN","VDEFQM",33,0)
 ;
"RTN","VDEFQM",34,0)
 ; Validate the HL7 Message type
"RTN","VDEFQM",35,0)
 I MSTY="" S MSTEXT="HL7 Message Type is required" G EXBAD
"RTN","VDEFQM",36,0)
 ;
"RTN","VDEFQM",37,0)
 ; Validate the HL7 Event type
"RTN","VDEFQM",38,0)
 I EVTY="" S MSTEXT="HL7 Event Type is required" G EXBAD
"RTN","VDEFQM",39,0)
 ;
"RTN","VDEFQM",40,0)
 ; Get the default Requestor IEN or '1' if not set up
"RTN","VDEFQM",41,0)
 S REQIEN=$O(^VDEFHL7(579.1,"C","Y",0)) S:REQIEN="" REQIEN=1
"RTN","VDEFQM",42,0)
 ;
"RTN","VDEFQM",43,0)
 ; Retrieve Requestor data and see if Requestor is enabled
"RTN","VDEFQM",44,0)
 S DATA=$G(^VDEFHL7(579.1,REQIEN,0)) I $P(DATA,U,5)="I" D  G EXBAD
"RTN","VDEFQM",45,0)
 . S MSTEXT="VDEF HL7 messaging disabled for this Requestor"
"RTN","VDEFQM",46,0)
 ;
"RTN","VDEFQM",47,0)
 ; Get the Request Queue IEN for this Requestor
"RTN","VDEFQM",48,0)
 S QUEIEN=$P(DATA,U,4) I 'QUEIEN S MSTEXT="Could not get a valid Request Queue" G EXBAD
"RTN","VDEFQM",49,0)
 ;
"RTN","VDEFQM",50,0)
 ; Get the Destination IEN for this Requestor
"RTN","VDEFQM",51,0)
 S DESTIEN=$P(DATA,U,3) I 'DESTIEN S MSTEXT="No Destination for this Requestor" G EXBAD
"RTN","VDEFQM",52,0)
 ;
"RTN","VDEFQM",53,0)
 ; Validate Name/Value Pair
"RTN","VDEFQM",54,0)
 I $P($P(PAIR,U),"=",1)'="SUBTYPE"!($P($P(PAIR,U,2),"=",1)'="IEN") D  G EXBAD
"RTN","VDEFQM",55,0)
 . S MSTEXT="Invalid Name/Value Pair"
"RTN","VDEFQM",56,0)
 S SUBTYPE=$P($P(PAIR,U),"=",2),NVPIEN=$P($P(PAIR,U,2),"=",2)
"RTN","VDEFQM",57,0)
 ;
"RTN","VDEFQM",58,0)
 ; Validate the Subtype
"RTN","VDEFQM",59,0)
 S SUBIEN=$$FIND1^DIC(577.4,"","BX",SUBTYPE)
"RTN","VDEFQM",60,0)
 I 'SUBIEN S MSTEXT="Invalid VDEF Subtype" G EXBAD
"RTN","VDEFQM",61,0)
 ;
"RTN","VDEFQM",62,0)
 ; Validate the HL7 Message and Event Types
"RTN","VDEFQM",63,0)
 S MESIEN=$$FIND1^DIC(771.2,"","BX",MSTY)
"RTN","VDEFQM",64,0)
 I 'MESIEN S MSTEXT="Invalid HL7 Message Type" G EXBAD
"RTN","VDEFQM",65,0)
 S EVTYIEN=$$FIND1^DIC(779.001,,"BX",EVTY)
"RTN","VDEFQM",66,0)
 I 'EVTYIEN S MSTEXT="Invalid HL7 Event Type" G EXBAD
"RTN","VDEFQM",67,0)
 ;
"RTN","VDEFQM",68,0)
 ; Validate the VDEF Event
"RTN","VDEFQM",69,0)
 S EVENTIEN=$O(^VDEFHL7(577,"BB",MESIEN,EVTYIEN,SUBIEN,""))
"RTN","VDEFQM",70,0)
 I 'EVENTIEN S MSTEXT="Invalid 'Message Type-Event Type-Subtype'" G EXBAD
"RTN","VDEFQM",71,0)
 ;
"RTN","VDEFQM",72,0)
 ; Check if this Request is for a disabled custodial package
"RTN","VDEFQM",73,0)
 S X=$G(^VDEFHL7(577,EVENTIEN,0)),CUSTIEN=$P(X,U,9)
"RTN","VDEFQM",74,0)
 I $P($G(^VDEFHL7(579.6,+CUSTIEN,0)),U,2)="I" D  G EXBAD
"RTN","VDEFQM",75,0)
 . S MSTEXT="Custodial package disabled for this event"
"RTN","VDEFQM",76,0)
 ;
"RTN","VDEFQM",77,0)
 ; Check if this VDEF API is disabled
"RTN","VDEFQM",78,0)
 I $P(X,U,11)'="A" D  G EXBAD
"RTN","VDEFQM",79,0)
 . S MSTEXT="VDEF API "_$P(X,U,1)_" is turned off"
"RTN","VDEFQM",80,0)
 ;
"RTN","VDEFQM",81,0)
 ; Start filing request into ^VDEFHL7(579.3
"RTN","VDEFQM",82,0)
 ; Lock the queue to prevent other requests from being added to it
"RTN","VDEFQM",83,0)
 ; doesn't affect the processing of existing requests
"RTN","VDEFQM",84,0)
 L +^VDEFHL7(579.3,QUEIEN,"ADD"):10
"RTN","VDEFQM",85,0)
 E  S MSTEXT="VDEF queuing is currently unavailable" G EXBAD
"RTN","VDEFQM",86,0)
 ;
"RTN","VDEFQM",87,0)
 ; Populate the Request data (579.31) for this queue
"RTN","VDEFQM",88,0)
 S FDA(1,579.31,"+1,"_QUEIEN_",",.01)=9999 ; DINUM placeholder
"RTN","VDEFQM",89,0)
 S FDA(1,579.31,"+1,"_QUEIEN_",",.02)="Q"  ; Request status - "Q"ueued
"RTN","VDEFQM",90,0)
 S FDA(1,579.31,"+1,"_QUEIEN_",",.03)=MSTY ; Message Type
"RTN","VDEFQM",91,0)
 S FDA(1,579.31,"+1,"_QUEIEN_",",.04)=EVTY ; Event Type
"RTN","VDEFQM",92,0)
 S FDA(1,579.31,"+1,"_QUEIEN_",",.06)=REQIEN ; Requestor
"RTN","VDEFQM",93,0)
 S FDA(1,579.31,"+1,"_QUEIEN_",",.07)=DESTIEN ; Destination
"RTN","VDEFQM",94,0)
 D NOW^%DTC S FDA(1,579.31,"+1,"_QUEIEN_",",.08)=% ; DTS when request was added
"RTN","VDEFQM",95,0)
 S FDA(1,579.31,"+1,"_QUEIEN_",",.18)=EVENTIEN ; VDEF Event IEN
"RTN","VDEFQM",96,0)
 D UPDATE^DIE("","FDA(1)","IENROOT","ERR")
"RTN","VDEFQM",97,0)
 S RQIEN=$G(IENROOT(1)) ; Get the assigned Request entry IEN
"RTN","VDEFQM",98,0)
 ;
"RTN","VDEFQM",99,0)
 ; Lock this queue entry to prevent the Request Processor from
"RTN","VDEFQM",100,0)
 ; retrieving an incomplete Request
"RTN","VDEFQM",101,0)
 L +^VDEFHL7(579.3,QUEIEN,RQIEN)
"RTN","VDEFQM",102,0)
 L -^VDEFHL7(579.3,QUEIEN,"ADD") ; Release the queue "ADD" lock
"RTN","VDEFQM",103,0)
 ;
"RTN","VDEFQM",104,0)
 ; Update the DINUM field with the IEN value for this Request
"RTN","VDEFQM",105,0)
 S FDA(1,579.31,RQIEN_","_QUEIEN_",",.01)=RQIEN D FILE^DIE("","FDA(1)","ERR(2)")
"RTN","VDEFQM",106,0)
 ;
"RTN","VDEFQM",107,0)
 ; Set up the name value pairs multiple (579.311)
"RTN","VDEFQM",108,0)
 F VDI=1,2 D
"RTN","VDEFQM",109,0)
 . S FDA(1,579.311,"+"_VDI_","_RQIEN_","_QUEIEN_",",.01)=VDI
"RTN","VDEFQM",110,0)
 . S FDA(1,579.311,"+"_VDI_","_RQIEN_","_QUEIEN_",",.02)=$P(PAIR,U,VDI)
"RTN","VDEFQM",111,0)
 D UPDATE^DIE("","FDA(1)","","ERR")
"RTN","VDEFQM",112,0)
 ;
"RTN","VDEFQM",113,0)
 ; Set up the Dynamic Adressing multiple, if passed in
"RTN","VDEFQM",114,0)
 S (VDI,DATA)="",CNT=0 F  S VDI=$O(DYNAMIC("LINKS",VDI)) Q:'VDI  D
"RTN","VDEFQM",115,0)
 . ; CNT and VDI may be different since the "LINKS" array may be sparse
"RTN","VDEFQM",116,0)
 . S DATA=$G(DYNAMIC("LINKS",VDI)),CNT=CNT+1
"RTN","VDEFQM",117,0)
 . S FDA(1,579.313,"+"_CNT_","_RQIEN_","_QUEIEN_",",.01)=VDI
"RTN","VDEFQM",118,0)
 . S FDA(1,579.313,"+"_CNT_","_RQIEN_","_QUEIEN_",",.02)=DATA
"RTN","VDEFQM",119,0)
 ;
"RTN","VDEFQM",120,0)
 ; File Dynamic Addressing information
"RTN","VDEFQM",121,0)
 I $D(FDA) D UPDATE^DIE("","FDA(1)","","ERR")
"RTN","VDEFQM",122,0)
 L -^VDEFHL7(579.3,QUEIEN,RQIEN) ; Release the lock on this Request
"RTN","VDEFQM",123,0)
 S MSTEXT="Message "_MSTY_", Event "_EVTY_", Subtype "_SUBTYPE_" queued for processing"
"RTN","VDEFQM",124,0)
EXIT Q 1  ; Good exit
"RTN","VDEFQM",125,0)
EXBAD Q 0  ; Bad, bad exit
"RTN","VDEFQM",126,0)
 ;
"RTN","VDEFQM",127,0)
 ; Function to set up a Request Processor Scheduling Rule
"RTN","VDEFQM",128,0)
SCHEDULE(Q,H) ;
"RTN","VDEFQM",129,0)
 N HT,SIEN,NZ,DOW,STM,ETM
"RTN","VDEFQM",130,0)
 I $G(Q)="" Q ""
"RTN","VDEFQM",131,0)
 I $G(H)="" S H=$H
"RTN","VDEFQM",132,0)
 S DOW=H-2#7,SIEN=0,HT=0
"RTN","VDEFQM",133,0)
 F  S SIEN=$O(^VDEFHL7(579.3,Q,2,SIEN)) Q:'SIEN  D  Q:HT'=0
"RTN","VDEFQM",134,0)
 . S NZ=^VDEFHL7(579.3,Q,2,SIEN,0)
"RTN","VDEFQM",135,0)
 . Q:$P(NZ,U,2)'=DOW
"RTN","VDEFQM",136,0)
 . S STM=$P(NZ,U,4),ETM=$P(NZ,U,5)
"RTN","VDEFQM",137,0)
 . S STM=$TR(STM,":- "),STM=$E(STM,1,2)*60+$E(STM,3,4)*60+$E(STM,5,6)
"RTN","VDEFQM",138,0)
 . S ETM=$TR(ETM,":- "),ETM=$E(ETM,1,2)*60+$E(ETM,3,4)*60+$E(ETM,5,6)
"RTN","VDEFQM",139,0)
 . I $P(H,",",2)'<STM,$P(H,",",2)'>ETM S HT=$P(NZ,U,3)
"RTN","VDEFQM",140,0)
 I HT'=0 Q HT_U_(ETM-$P(H,",",2))
"RTN","VDEFQM",141,0)
 Q ""
"RTN","VDEFQM",142,0)
 ;
"RTN","VDEFQM",143,0)
TIMECK(T) N H,M,S I T?4.6N S H=+$E(T,1,2),M=+$E(T,3,4),S=+$E(T,5,6)
"RTN","VDEFQM",144,0)
 E  I T[":" S H=+$P(T,":"),M=+$P(T,":",2),S=+$P(T,":",3)
"RTN","VDEFQM",145,0)
 E  I T["-" S H=+$P(T,"-"),M=+$P(T,"-",2),S=+$P(T,"-",3)
"RTN","VDEFQM",146,0)
 E  I T[" " S H=+$P(T," "),M=+$P(T," ",2),S=+$P(T," ",3)
"RTN","VDEFQM",147,0)
 E  Q 0
"RTN","VDEFQM",148,0)
 I H<24,M<60,S<60 Q 1
"RTN","VDEFQM",149,0)
 Q 0
"RTN","VDEFQM",150,0)
 ;
"RTN","VDEFQM",151,0)
REQUEUE(Q,X) ; Requeue Checked Out requests.
"RTN","VDEFQM",152,0)
 ; Change the status of all "C" entries in a Request Queue to "Q".
"RTN","VDEFQM",153,0)
 ; If ZTQUEUED not set, run this interactively.
"RTN","VDEFQM",154,0)
 ; Input  - Request Queue IEN
"RTN","VDEFQM",155,0)
 ; Output - 0 = no requests requeued
"RTN","VDEFQM",156,0)
 ;          1 = requests weere requeued
"RTN","VDEFQM",157,0)
 S X=0
"RTN","VDEFQM",158,0)
 I $G(Q)="" W:'$D(ZTQUEUED) !,"Invalid queue IEN" Q
"RTN","VDEFQM",159,0)
 ;
"RTN","VDEFQM",160,0)
 ; Quit if no requests are Checked Out
"RTN","VDEFQM",161,0)
 I $O(^VDEFHL7(579.3,"C","C",0))="" W:'$D(ZTQUEUED) !,"No Requests in Checked Out status" Q
"RTN","VDEFQM",162,0)
 ;
"RTN","VDEFQM",163,0)
 ; Get Queue
"RTN","VDEFQM",164,0)
 N QUE S QUE=$P($G(^VDEFHL7(579.3,Q,0)),U)
"RTN","VDEFQM",165,0)
 I QUE="" W:'$D(ZTQUEUED) !,"Invalid queue" Q
"RTN","VDEFQM",166,0)
 G REQUEUE1:$D(ZTQUEUED)
"RTN","VDEFQM",167,0)
 K DIR S DIR(0)="Y",DIR("A")="Are you sure you want to continue",DIR("B")="No"
"RTN","VDEFQM",168,0)
 W !,"This action will reset all entries in the '"_QUE_"' queue to 'Q'ueued."
"RTN","VDEFQM",169,0)
 D ^DIR I Y=0 W !,"Entries not reset." Q
"RTN","VDEFQM",170,0)
REQUEUE1 N FDA,IEN,MSG S IEN=""
"RTN","VDEFQM",171,0)
 F  S IEN=$O(^VDEFHL7(579.3,"C","C",Q,IEN)) Q:'IEN  D
"RTN","VDEFQM",172,0)
 . ;
"RTN","VDEFQM",173,0)
 . ; If request has not had an alert yet or can't be locked,
"RTN","VDEFQM",174,0)
 . ; don't requeue it.
"RTN","VDEFQM",175,0)
 . Q:$$GET1^DIQ(579.31,IEN_","_Q_",",.15,"I")=""
"RTN","VDEFQM",176,0)
 . L +^VDEFHL7(579.3,Q,IEN):1 Q:'$T
"RTN","VDEFQM",177,0)
 . ;
"RTN","VDEFQM",178,0)
 . ; Change status to "Q" (queued up) and delete
"RTN","VDEFQM",179,0)
 . ; the old check out date/time and alert date/time
"RTN","VDEFQM",180,0)
 . ; and error message
"RTN","VDEFQM",181,0)
 . K FDA,MSG S FDA(579.31,IEN_","_Q_",",.02)="Q"
"RTN","VDEFQM",182,0)
 . S FDA(579.31,IEN_","_Q_",",.15)="@"
"RTN","VDEFQM",183,0)
 . S FDA(579.31,IEN_","_Q_",",.09)="@"
"RTN","VDEFQM",184,0)
 . D FILE^DIE(,"FDA","MSG")
"RTN","VDEFQM",185,0)
 . K ^VDEFHL7(579.3,Q,1,IEN,"ERRMSG")
"RTN","VDEFQM",186,0)
 . L -^VDEFHL7(579.3,Q,IEN)
"RTN","VDEFQM",187,0)
 . S X=1
"RTN","VDEFQM",188,0)
 W:'$D(ZTQUEUED) !,"Entries reset to 'Q'ueued status for "_QUE_"."
"RTN","VDEFQM",189,0)
 Q
"RTN","VDEFQM",190,0)
 ;
"RTN","VDEFQM",191,0)
 ; Requeue Errored Out requests.
"RTN","VDEFQM",192,0)
 ; Change the status of all "E" entries in a Request Queue to "Q".
"RTN","VDEFQM",193,0)
 ; If ZTQUEUED not set, run this interactively.
"RTN","VDEFQM",194,0)
RQERR(Q,X) ;
"RTN","VDEFQM",195,0)
 S X=0
"RTN","VDEFQM",196,0)
 I $G(Q)="" W:'$D(ZTQUEUED) !,"Invalid queue IEN" Q
"RTN","VDEFQM",197,0)
 ;
"RTN","VDEFQM",198,0)
 ; Quit if no requests are Errored Out
"RTN","VDEFQM",199,0)
 I $O(^VDEFHL7(579.3,"C","E",0))="" W:'$D(ZTQUEUED) !,"No Requests in Errored Out status" Q
"RTN","VDEFQM",200,0)
 ;
"RTN","VDEFQM",201,0)
 ; Get Queue
"RTN","VDEFQM",202,0)
 N QUE S QUE=$P($G(^VDEFHL7(579.3,Q,0)),U)
"RTN","VDEFQM",203,0)
 I QUE="" W:'$D(ZTQUEUED) !,"Invalid queue" Q
"RTN","VDEFQM",204,0)
 G RQERR1:$D(ZTQUEUED)
"RTN","VDEFQM",205,0)
 K DIR S DIR(0)="Y",DIR("A")="Are you sure you want to continue",DIR("B")="No"
"RTN","VDEFQM",206,0)
 W !,"This action resets all Errored Out entries in the '"_QUE_"' queue to 'Q'ueued."
"RTN","VDEFQM",207,0)
 D ^DIR I Y=0 W !,"Entries not reset." Q
"RTN","VDEFQM",208,0)
RQERR1 N FDA,IEN,MSG S IEN=""
"RTN","VDEFQM",209,0)
 F  S IEN=$O(^VDEFHL7(579.3,"C","E",Q,IEN)) Q:'IEN  D
"RTN","VDEFQM",210,0)
 . L +^VDEFHL7(579.3,Q,IEN):1 Q:'$T
"RTN","VDEFQM",211,0)
 . ;
"RTN","VDEFQM",212,0)
 . ; Fix the actual status in the record if it's not "E".
"RTN","VDEFQM",213,0)
 . I $$GET1^DIQ(579.31,IEN_","_Q_",",.02,"I")'="E" D
"RTN","VDEFQM",214,0)
 .. K FDA,MSG S FDA(579.31,IEN_","_Q_",",.02)="E"
"RTN","VDEFQM",215,0)
 .. D FILE^DIE(,"FDA","MSG")
"RTN","VDEFQM",216,0)
 . ;
"RTN","VDEFQM",217,0)
 . ; Change status to "Q" (queued up) and delete
"RTN","VDEFQM",218,0)
 . ; the old check out date/time and alert date/time
"RTN","VDEFQM",219,0)
 . ; and error message
"RTN","VDEFQM",220,0)
 . K FDA,MSG S FDA(579.31,IEN_","_Q_",",.02)="Q"
"RTN","VDEFQM",221,0)
 . S FDA(579.31,IEN_","_Q_",",.15)="@"
"RTN","VDEFQM",222,0)
 . S FDA(579.31,IEN_","_Q_",",.09)="@"
"RTN","VDEFQM",223,0)
 . D FILE^DIE(,"FDA","MSG")
"RTN","VDEFQM",224,0)
 . K ^VDEFHL7(579.3,Q,1,IEN,"ERRMSG")
"RTN","VDEFQM",225,0)
 . L -^VDEFHL7(579.3,Q,IEN)
"RTN","VDEFQM",226,0)
 . S X=1
"RTN","VDEFQM",227,0)
 W:'$D(ZTQUEUED) !,"Entries reset to 'Q'ueued status for "_QUE_"."
"RTN","VDEFQM",228,0)
 Q
"RTN","VDEFREQ")
0^5^B31819768
"RTN","VDEFREQ",1,0)
VDEFREQ ;INTEGIC/AM & BPOIFO/JG - VDEF Request Processor ; 15 Nov 2005  3:00 PM
"RTN","VDEFREQ",2,0)
 ;;1.0;VDEF;**3**;Dec 28, 2004
"RTN","VDEFREQ",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VDEFREQ",4,0)
 ;
"RTN","VDEFREQ",5,0)
 ; IA: 10063 - $$S^%ZTLOAD
"RTN","VDEFREQ",6,0)
 ;     10063 - $$ASKSTOP^%ZTLOAD
"RTN","VDEFREQ",7,0)
 ;
"RTN","VDEFREQ",8,0)
 Q  ; No bozos
"RTN","VDEFREQ",9,0)
 ;
"RTN","VDEFREQ",10,0)
EN ; Main entry point for the Request Queue processor from TaskMan
"RTN","VDEFREQ",11,0)
 ;
"RTN","VDEFREQ",12,0)
 ; Input parameter:
"RTN","VDEFREQ",13,0)
 ;   QIEN - Request Queue IEN passed in by TaskMan
"RTN","VDEFREQ",14,0)
 ;
"RTN","VDEFREQ",15,0)
 ; Output parameters:
"RTN","VDEFREQ",16,0)
 ;   ZTSTOP - flag indicating whether to stop processing: 0 by default
"RTN","VDEFREQ",17,0)
 ;    1 if an outside request to stop the Processor or internal error
"RTN","VDEFREQ",18,0)
 ;    2 if VistA HL7 API errored out
"RTN","VDEFREQ",19,0)
 ;   ZTREQ  - Tells the Submanager to delete this task's record if "@"
"RTN","VDEFREQ",20,0)
 ;
"RTN","VDEFREQ",21,0)
 N DSTDATA,DSTIEN,ERR,FDA,NVPIEN,QUEUE,SCHED,IEN,VDEFWAIT,VDEFTSK
"RTN","VDEFREQ",22,0)
 S VDEFTSK=ZTSK
"RTN","VDEFREQ",23,0)
 ;
"RTN","VDEFREQ",24,0)
 ; Lock this Request Queue from other processors. If it's already locked,
"RTN","VDEFREQ",25,0)
 ; another process has it.
"RTN","VDEFREQ",26,0)
 L +^VDEFHL7(579.3,"QUEUE",QIEN):1 G EXIT:'$T
"RTN","VDEFREQ",27,0)
 ;
"RTN","VDEFREQ",28,0)
EN1 ; Re-entry point after the wait period has expired
"RTN","VDEFREQ",29,0)
 ;
"RTN","VDEFREQ",30,0)
 ; Quit if there has been a request to stop processing
"RTN","VDEFREQ",31,0)
 S ZTSTOP=$$S^%ZTLOAD() G EXIT:ZTSTOP
"RTN","VDEFREQ",32,0)
 ;
"RTN","VDEFREQ",33,0)
 ; Get the queue data
"RTN","VDEFREQ",34,0)
 S QUEUE=$G(^VDEFHL7(579.3,QIEN,0))
"RTN","VDEFREQ",35,0)
 ;
"RTN","VDEFREQ",36,0)
 ; Quit if this Request Queue is suspended
"RTN","VDEFREQ",37,0)
 G EXIT:$P(QUEUE,U,9)="S"
"RTN","VDEFREQ",38,0)
 ;
"RTN","VDEFREQ",39,0)
 ; Set the wait period to the REQUEST QUEUE WAKEUP
"RTN","VDEFREQ",40,0)
 S VDEFWAIT=+$P(QUEUE,U,2)
"RTN","VDEFREQ",41,0)
 ;
"RTN","VDEFREQ",42,0)
 ; See if current time is in a scheduling rule
"RTN","VDEFREQ",43,0)
 S SCHED=$$SCHEDULE^VDEFQM(QIEN,$H) G EN2:'SCHED
"RTN","VDEFREQ",44,0)
 ;
"RTN","VDEFREQ",45,0)
 ; If current time is in a suspend rule, set wait period to
"RTN","VDEFREQ",46,0)
 ; the next start time or the basic wakeup period whichever is longer.
"RTN","VDEFREQ",47,0)
 I $P(SCHED,U)="S",$P(SCHED,U,2)>VDEFWAIT S VDEFWAIT=$P(SCHED,U,2) G WAITLOOP
"RTN","VDEFREQ",48,0)
 ;
"RTN","VDEFREQ",49,0)
EN2 ; Update the Request Queue definition with the current task #
"RTN","VDEFREQ",50,0)
 K FDA S FDA(1,579.3,QIEN_",",.11)=VDEFTSK D FILE^DIE("","FDA(1)","ERR(1)")
"RTN","VDEFREQ",51,0)
 ;
"RTN","VDEFREQ",52,0)
 ; Store VDEF Destination data in a local array
"RTN","VDEFREQ",53,0)
 S DSTIEN=0 F  S DSTIEN=$O(^VDEFHL7(579.2,DSTIEN)) Q:'DSTIEN  D
"RTN","VDEFREQ",54,0)
 . S DSTDATA(DSTIEN)=$G(^VDEFHL7(579.2,DSTIEN,0))
"RTN","VDEFREQ",55,0)
 ;
"RTN","VDEFREQ",56,0)
 ; Loop through the Queued Up requests for this queue
"RTN","VDEFREQ",57,0)
 S (ZTSTOP,IEN)=0
"RTN","VDEFREQ",58,0)
 F  S IEN=$O(^VDEFHL7(579.3,"C","Q",QIEN,IEN)) Q:IEN=""  D  Q:ZTSTOP
"RTN","VDEFREQ",59,0)
 . ;
"RTN","VDEFREQ",60,0)
 . ; Quit if there has been a request to stop processing
"RTN","VDEFREQ",61,0)
 . S ZTSTOP=$$S^%ZTLOAD() Q:ZTSTOP
"RTN","VDEFREQ",62,0)
 . I $P($G(^VDEFHL7(579.3,QIEN,0)),U,9)="S" S ZTSTOP=1 Q
"RTN","VDEFREQ",63,0)
 . N DSTPROT,DSTTYP,DYNAMIC,ERR,SITEPARM
"RTN","VDEFREQ",64,0)
 . N FDA,VDEFHL,HLA,HLCS,IEN577,IENS,II,HL
"RTN","VDEFREQ",65,0)
 . N NAMEVAL,PAIR,REQUEST,SUBT,VAL,VDEFERR
"RTN","VDEFREQ",66,0)
 . S IENS=IEN_","_QIEN_"," ; Request Queue IEN string
"RTN","VDEFREQ",67,0)
 . L +^VDEFHL7(579.3,QIEN,IEN):5 Q:'$T
"RTN","VDEFREQ",68,0)
 . M VAL=^VDEFHL7(579.3,QIEN,1,IEN) S REQUEST=$G(VAL(0))
"RTN","VDEFREQ",69,0)
 . M NAMEVAL=VAL(.05) ; Name Value pairs
"RTN","VDEFREQ",70,0)
 . M DYNAMIC=VAL(.19) ; Dynamic Addressing information
"RTN","VDEFREQ",71,0)
 . K VAL
"RTN","VDEFREQ",72,0)
 . ;
"RTN","VDEFREQ",73,0)
 . ; Check for an incomplete record
"RTN","VDEFREQ",74,0)
 . I '$D(NAMEVAL(1)) L -^VDEFHL7(579.3,QIEN,IEN) Q
"RTN","VDEFREQ",75,0)
 . ;
"RTN","VDEFREQ",76,0)
 . ; Change request status from "Q"ueued Up to "C"hecked Out
"RTN","VDEFREQ",77,0)
 . S FDA(1,579.31,IENS,.02)="C" D FILE^DIE("","FDA(1)") K FDA
"RTN","VDEFREQ",78,0)
 . ;
"RTN","VDEFREQ",79,0)
 . ; Get the Event Subtype
"RTN","VDEFREQ",80,0)
 . S SUBT="",PAIR=$P($G(NAMEVAL(1,0)),U,2)
"RTN","VDEFREQ",81,0)
 . I $P(PAIR,"=",1)="SUBTYPE" S SUBT=$P(PAIR,"=",2)
"RTN","VDEFREQ",82,0)
 . E  D ERR("Subtype missing from Name/Value Pair") L -^VDEFHL7(579.3,QIEN,IEN) Q
"RTN","VDEFREQ",83,0)
 . ;
"RTN","VDEFREQ",84,0)
 . ; Get the VistA data file IEN
"RTN","VDEFREQ",85,0)
 . S NVPIEN="",PAIR=$P($G(NAMEVAL(2,0)),U,2)
"RTN","VDEFREQ",86,0)
 . I $P(PAIR,"=",1)="IEN" S NVPIEN=$P(PAIR,"=",2)
"RTN","VDEFREQ",87,0)
 . E  D ERR("IEN missing from Name/Value Pair") L -^VDEFHL7(579.3,QIEN,IEN) Q
"RTN","VDEFREQ",88,0)
 . ;
"RTN","VDEFREQ",89,0)
 . ; Retrieve the Destination information for this request
"RTN","VDEFREQ",90,0)
 . S DSTIEN=$P(REQUEST,U,7),DSTTYP=$P($G(DSTDATA(+DSTIEN)),U,2)
"RTN","VDEFREQ",91,0)
 . ;
"RTN","VDEFREQ",92,0)
 . ; Get the VDEF Event IEN
"RTN","VDEFREQ",93,0)
 . S IEN577=$P(REQUEST,U,18)
"RTN","VDEFREQ",94,0)
 . ;
"RTN","VDEFREQ",95,0)
 . ; Get the VISTA HL7 Protocol
"RTN","VDEFREQ",96,0)
 . S DSTPROT=$P($G(^VDEFHL7(577,IEN577,0)),U,7)
"RTN","VDEFREQ",97,0)
 . I DSTPROT="" D ERR("Protocol not defined in VDEF event file") S ZTSTOP=1 L -^VDEFHL7(579.3,QIEN,IEN) Q
"RTN","VDEFREQ",98,0)
 . ;
"RTN","VDEFREQ",99,0)
 . ; Create delimiter structure to use when building segments
"RTN","VDEFREQ",100,0)
 . D INIT^HLFNC2(DSTPROT,.VDEFHL)
"RTN","VDEFREQ",101,0)
 . I '$D(VDEFHL) D ERR("No HL7 parameters for this Protocol") S ZTSTOP=1 L -^VDEFHL7(579.3,QIEN,IEN) Q
"RTN","VDEFREQ",102,0)
 . S HLCS=$E(VDEFHL("ECH")) M HL=VDEFHL ; Some called routines use 'HL' array
"RTN","VDEFREQ",103,0)
 . ;
"RTN","VDEFREQ",104,0)
 . ; Get the site parameters
"RTN","VDEFREQ",105,0)
 . S SITEPARM=$$PARAM^HLCS2
"RTN","VDEFREQ",106,0)
 . ;
"RTN","VDEFREQ",107,0)
 . ; If no IEN don't generate an HL7 message
"RTN","VDEFREQ",108,0)
 . I $G(NVPIEN)="" D STATUS^VDEFREQ1(IENS,"P"),ERR("Invalid IEN") S ZTSTOP=1 L -^VDEFHL7(579.3,QIEN,IEN) Q
"RTN","VDEFREQ",109,0)
 . D NOW^%DTC S FDA(1,579.31,IENS,.09)=%
"RTN","VDEFREQ",110,0)
 . ;
"RTN","VDEFREQ",111,0)
 . ; Update this Request record with the current date & time
"RTN","VDEFREQ",112,0)
 . D FILE^DIE("","FDA(1)","ERR(1)") K FDA
"RTN","VDEFREQ",113,0)
 . ;
"RTN","VDEFREQ",114,0)
 . ; Generate HL7 message for this request
"RTN","VDEFREQ",115,0)
 . D GENERATE^VDEFREQ1(NVPIEN,.HLA,HLCS,IEN577,SUBT,DSTPROT,DSTTYP,.ZTSTOP,.VDEFHL,.DYNAMIC)
"RTN","VDEFREQ",116,0)
 . ;
"RTN","VDEFREQ",117,0)
 . ; Update request status from Checked Out to Processed or Errored Out
"RTN","VDEFREQ",118,0)
 . ; Leave Request Checked Out if VistA HL7 errored out (ZTSTOP=2)
"RTN","VDEFREQ",119,0)
 . I ZTSTOP'=2 D STATUS^VDEFREQ1(IENS,$S(ZTSTOP=1:"E",1:"P")) S ZTSTOP=0
"RTN","VDEFREQ",120,0)
 . I ZTSTOP=2 S ZTSTOP=0 ; If VistA HL7 errored out, continue processing
"RTN","VDEFREQ",121,0)
 . ;
"RTN","VDEFREQ",122,0)
 . ; Unlock the record
"RTN","VDEFREQ",123,0)
 . L -^VDEFHL7(579.3,QIEN,IEN)
"RTN","VDEFREQ",124,0)
 ;
"RTN","VDEFREQ",125,0)
 ; Quit if necessary.
"RTN","VDEFREQ",126,0)
 G EXIT:ZTSTOP
"RTN","VDEFREQ",127,0)
 ; Wait for the next time to run.
"RTN","VDEFREQ",128,0)
 ; The wait process is in a loop so it can check if there
"RTN","VDEFREQ",129,0)
 ; has been a request to stop processing before the wait expires.
"RTN","VDEFREQ",130,0)
WAITLOOP N I S ZTSTOP=0 F I=1:1:VDEFWAIT D  Q:ZTSTOP
"RTN","VDEFREQ",131,0)
 . S ZTSTOP=$$S^%ZTLOAD() Q:ZTSTOP
"RTN","VDEFREQ",132,0)
 . I $P(^VDEFHL7(579.3,QIEN,0),U,9)="S" S ZTSTOP=1 Q
"RTN","VDEFREQ",133,0)
 . H 1
"RTN","VDEFREQ",134,0)
 ;
"RTN","VDEFREQ",135,0)
 ; Quit or resume processing
"RTN","VDEFREQ",136,0)
 I 'ZTSTOP K I G EN1
"RTN","VDEFREQ",137,0)
 ;
"RTN","VDEFREQ",138,0)
 ; Quit
"RTN","VDEFREQ",139,0)
 ; Unlock the record in case it left the loop with an error
"RTN","VDEFREQ",140,0)
EXIT L -^VDEFHL7(579.3,"QUEUE",QIEN),-^VDEFHL7(579.3,QIEN,IEN)
"RTN","VDEFREQ",141,0)
 D ALERT^VDEFUTIL("VDEF REQUEST QUEUE PROCESSOR FOR "_$P(QUEUE,U)_" HAS EXITED.")
"RTN","VDEFREQ",142,0)
 ;
"RTN","VDEFREQ",143,0)
 ; Stop the task and delete this task's record
"RTN","VDEFREQ",144,0)
 N X,I S ZTSK=VDEFTSK,X=$$ASKSTOP^%ZTLOAD(ZTSK),ZTREQ="@"
"RTN","VDEFREQ",145,0)
 F I=1:1:5 D STAT^%ZTLOAD Q:ZTSK(1)=0!(ZTSK(1)>2)  H 1
"RTN","VDEFREQ",146,0)
 K X,I
"RTN","VDEFREQ",147,0)
 Q
"RTN","VDEFREQ",148,0)
 ;
"RTN","VDEFREQ",149,0)
ERR(TEXT) ; Error processing
"RTN","VDEFREQ",150,0)
 N FDA,ERR
"RTN","VDEFREQ",151,0)
 S VDEFERR=$TR(TEXT,"^"),FDA(1,579.31,IENS,.17)=VDEFERR
"RTN","VDEFREQ",152,0)
 D FILE^DIE("","FDA(1)","ERR")
"RTN","VDEFREQ",153,0)
 Q
"RTN","VDEFUTIL")
0^6^B20448090
"RTN","VDEFUTIL",1,0)
VDEFUTIL ;INTEGIC/AM & BPOIFO/JG - VDEF Utilities ; 21 Nov 2005  2:17 PM
"RTN","VDEFUTIL",2,0)
 ;;1.0;VDEF;**3**;Dec 28, 2004
"RTN","VDEFUTIL",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VDEFUTIL",4,0)
 ;
"RTN","VDEFUTIL",5,0)
 ; IA: #10103 - $$HTE^XLFDT
"RTN","VDEFUTIL",6,0)
 ;
"RTN","VDEFUTIL",7,0)
 Q  ; No bozos
"RTN","VDEFUTIL",8,0)
 ;
"RTN","VDEFUTIL",9,0)
FUTURE(WAKEUP) ;
"RTN","VDEFUTIL",10,0)
 ; Function that calculates $H date/time a WAKEUP number of
"RTN","VDEFUTIL",11,0)
 ; seconds in the future
"RTN","VDEFUTIL",12,0)
 ; Calculate the time WAKEUP number of seconds in the future as
"RTN","VDEFUTIL",13,0)
 ; expressed in the number of seconds since 1840
"RTN","VDEFUTIL",14,0)
 N X S X=$H,X=$P(X,",",1)*86400+$P(X,",",2)+WAKEUP
"RTN","VDEFUTIL",15,0)
 ; Convert the time from the number of seconds since 1840 to $H format
"RTN","VDEFUTIL",16,0)
 Q X\86400_","_(X#86400)
"RTN","VDEFUTIL",17,0)
 ;
"RTN","VDEFUTIL",18,0)
 ; Function to calculate the number of seconds between two dates
"RTN","VDEFUTIL",19,0)
DIFF(FIRST,SECOND) ;
"RTN","VDEFUTIL",20,0)
 N X
"RTN","VDEFUTIL",21,0)
 ; Convert the dates from Fileman to $H format if necessary
"RTN","VDEFUTIL",22,0)
 I FIRST?.E1".".E S X=FIRST D H^%DTC S FIRST=%H_","_%T
"RTN","VDEFUTIL",23,0)
 I SECOND?.E1".".E S X=SECOND D H^%DTC S SECOND=%H_","_%T
"RTN","VDEFUTIL",24,0)
 ;
"RTN","VDEFUTIL",25,0)
 ; Convert $H date/time values to the number of seconds since 1840
"RTN","VDEFUTIL",26,0)
 S FIRST=$P(FIRST,",",1)*86400+$P(FIRST,",",2)
"RTN","VDEFUTIL",27,0)
 S SECOND=$P(SECOND,",",1)*86400+$P(SECOND,",",2)
"RTN","VDEFUTIL",28,0)
 ; Return the number of seconds between the two dates
"RTN","VDEFUTIL",29,0)
 Q SECOND-FIRST
"RTN","VDEFUTIL",30,0)
 ;
"RTN","VDEFUTIL",31,0)
ALERT(XQAMSG) ;
"RTN","VDEFUTIL",32,0)
 ; Subroutine to send an Alert message to the VISTA HL7 IRM
"RTN","VDEFUTIL",33,0)
 ; Input Parameters:
"RTN","VDEFUTIL",34,0)
 ;  XQAMSG - Text of the message to send to the Vista HL7 IRM
"RTN","VDEFUTIL",35,0)
 N ALERTS,XQA,X,Y,VDEFMSGX
"RTN","VDEFUTIL",36,0)
 S Y=$$HTE^XLFDT($H,2) S XQAMSG=Y_" "_XQAMSG,VDEFMSGX=XQAMSG
"RTN","VDEFUTIL",37,0)
 ; Retrieve the Mailman Group to send VDEF alerts to.
"RTN","VDEFUTIL",38,0)
 ; If site has no VDEF ALERTS Mail Group,
"RTN","VDEFUTIL",39,0)
 ; send it to HL7 Mail Group.
"RTN","VDEFUTIL",40,0)
 S X=$P($$GETAPP^HLCS2("VDEF ALERTS"),U)
"RTN","VDEFUTIL",41,0)
 I X="" S X=$$GET1^DIQ(869.3,"1,",".05")
"RTN","VDEFUTIL",42,0)
 S XQA("G."_X)="",X=$$SETUP1^XQALERT
"RTN","VDEFUTIL",43,0)
 ;
"RTN","VDEFUTIL",44,0)
 ; Send a mail message to VDEF ALERT group on FORUM
"RTN","VDEFUTIL",45,0)
 N XMDUZ,XMY,XMSUB,XMTEXT,SITEPARM,VDEFMSG
"RTN","VDEFUTIL",46,0)
 S SITEPARM=$$PARAM^HLCS2,SITEPARM=$P(SITEPARM,U,5)_" ("_$P(SITEPARM,U,6)_")"
"RTN","VDEFUTIL",47,0)
 S XMY("G.VDEF NATIONAL ALERTS@FORUM.VA.GOV")=""
"RTN","VDEFUTIL",48,0)
 S XMY("GARDNER.JEFF@FORUM.VA.GOV")=""
"RTN","VDEFUTIL",49,0)
 S XMDUZ="VDEF ALERT - "_SITEPARM,XMSUB="VDEF ALERT - "_SITEPARM,XMTEXT="VDEFMSG("
"RTN","VDEFUTIL",50,0)
 S VDEFMSG(1)="THIS IS AN ALERT GENERATED BY VDEF AT "_SITEPARM
"RTN","VDEFUTIL",51,0)
 S VDEFMSG(2)=" ",VDEFMSG(3)="ALERT TEXT:",VDEFMSG(4)=VDEFMSGX
"RTN","VDEFUTIL",52,0)
 D ^XMD
"RTN","VDEFUTIL",53,0)
 Q
"RTN","VDEFUTIL",54,0)
 ;
"RTN","VDEFUTIL",55,0)
TIMEI(T) ;
"RTN","VDEFUTIL",56,0)
 N TIME,CH,F,I,D,H,M,S,NUM,DONE
"RTN","VDEFUTIL",57,0)
 S TIME="",NUM="",DONE=0,F="DHMS",T=T_" "
"RTN","VDEFUTIL",58,0)
 F I=1:1:$L(T) S CH=$E(T,I) D  Q:DONE
"RTN","VDEFUTIL",59,0)
 . I CH?1.N S NUM=NUM*10+$E(T,I) Q
"RTN","VDEFUTIL",60,0)
 . I CH=" ",NUM="" Q
"RTN","VDEFUTIL",61,0)
 . I CH=" " S CH=$E(F)
"RTN","VDEFUTIL",62,0)
 . I NUM="" S DONE=1 Q
"RTN","VDEFUTIL",63,0)
 . I CH="D" S D=NUM,NUM="",F=$P(F,CH,2) Q
"RTN","VDEFUTIL",64,0)
 . I CH="H" S H=NUM,NUM="",F=$P(F,CH,2) S:H>24 DONE=1 Q
"RTN","VDEFUTIL",65,0)
 . I CH="M" S M=NUM,NUM="",F=$P(F,CH,2) S:M>60 DONE=1 Q
"RTN","VDEFUTIL",66,0)
 . I CH="S" S S=NUM,NUM="",F=$P(F,CH,2) S:S>60 DONE=1 Q
"RTN","VDEFUTIL",67,0)
 . S DONE=1 W "*",CH,"*"
"RTN","VDEFUTIL",68,0)
 I DONE Q ""
"RTN","VDEFUTIL",69,0)
 ;W !,$G(D),"D ",$G(H),"H ",$G(M),"M ",$G(S),"S",!
"RTN","VDEFUTIL",70,0)
 S TIME=TIME+($G(D)*86400)+($G(H)*3600)+($G(M)*60)+$G(S)
"RTN","VDEFUTIL",71,0)
 Q TIME
"RTN","VDEFUTIL",72,0)
 ;
"RTN","VDEFUTIL",73,0)
TIMEE(T) ;
"RTN","VDEFUTIL",74,0)
 N TIME S TIME=""
"RTN","VDEFUTIL",75,0)
 I T'<86400 S TIME=TIME_(T\86400)_"D ",T=T#86400
"RTN","VDEFUTIL",76,0)
 I T'<3600 S TIME=TIME_(T\3600)_"H ",T=T#3600
"RTN","VDEFUTIL",77,0)
 I T'<60 S TIME=TIME_(T\60)_"M ",T=T#60
"RTN","VDEFUTIL",78,0)
 I T>0 S TIME=TIME_T_"S "
"RTN","VDEFUTIL",79,0)
 S TIME=$E(TIME,1,$L(TIME)-1)
"RTN","VDEFUTIL",80,0)
 Q TIME
"RTN","VDEFUTIL",81,0)
 ;
"RTN","VDEFUTIL",82,0)
 ; Delete all entries in a given Request Queue
"RTN","VDEFUTIL",83,0)
CLEANREQ(Q) ;
"RTN","VDEFUTIL",84,0)
 ; For development and testing only.
"RTN","VDEFUTIL",85,0)
 ; DO NOT USE IN PRODUCTION SYSTEMS.
"RTN","VDEFUTIL",86,0)
 I $$PROD^XUPROD(1) W:'$D(ZTQUEUED) !,"Can't be used in a production environment!" Q
"RTN","VDEFUTIL",87,0)
 N QUE S QUE=$P($G(^VDEFHL7(579.3,Q,0)),U)
"RTN","VDEFUTIL",88,0)
 I QUE="" W !,"Invalid queue" Q
"RTN","VDEFUTIL",89,0)
 K DIR S DIR(0)="Y",DIR("A")="Are you sure you want to continue",DIR("B")="No"
"RTN","VDEFUTIL",90,0)
 W !,"This action will delete all entries from Request Queue '"_QUE_"'."
"RTN","VDEFUTIL",91,0)
 D ^DIR I Y=0 W !,"Entries not deleted." Q
"RTN","VDEFUTIL",92,0)
 W !,"Deleting records ..."
"RTN","VDEFUTIL",93,0)
 N IEN S IEN=0 F  S IEN=$O(^VDEFHL7(579.3,Q,1,IEN)) Q:'IEN  D
"RTN","VDEFUTIL",94,0)
 . K FDA,MSG S FDA(579.31,IEN_","_Q_",",.01)="@" D FILE^DIE(,"FDA","MSG")
"RTN","VDEFUTIL",95,0)
 W !,"Entries deleted from "_QUE_" queue."
"RTN","VDEFUTIL",96,0)
 Q
"RTN","VDEFUTIL",97,0)
 ;
"RTN","VDEFUTIL",98,0)
PURGEQ ; Purge all Request Queues of their entries
"RTN","VDEFUTIL",99,0)
 ; For development and testing only.
"RTN","VDEFUTIL",100,0)
 ; DO NOT USE IN PRODUCTION SYSTEMS.
"RTN","VDEFUTIL",101,0)
 I $$PROD^XUPROD(1) W:'$D(ZTQUEUED) !,"Can't be used in a production environment!" Q
"RTN","VDEFUTIL",102,0)
 N QIEN S QIEN=0 F  S QIEN=$O(^VDEFHL7(579.3,QIEN)) Q:'QIEN  D CLEANREQ(QIEN)
"RTN","VDEFUTIL",103,0)
 Q
"RTN","VDEFUTIL",104,0)
 ;
"RTN","VDEFUTIL",105,0)
CLEANUP ; Delete records from VDEF files before installing the VDEF KIDS package
"RTN","VDEFUTIL",106,0)
 ; For development and testing only.
"RTN","VDEFUTIL",107,0)
 ; DO NOT USE IN PRODUCTION SYSTEMS.
"RTN","VDEFUTIL",108,0)
 I $$PROD^XUPROD(1) W:'$D(ZTQUEUED) !,"Can't be used in a production environment!" Q
"RTN","VDEFUTIL",109,0)
 K DIR S DIR(0)="Y",DIR("A")="Do you want to continue",DIR("B")="No"
"RTN","VDEFUTIL",110,0)
 W !,"This action will DELETE all data from VDEF globals in preparation for a KIDS install."
"RTN","VDEFUTIL",111,0)
 D ^DIR K DIR I Y=0 W !,"VDEF Globals not deleted." Q
"RTN","VDEFUTIL",112,0)
 W !,"Deleting records from VDEF globals ..."
"RTN","VDEFUTIL",113,0)
 N SUB S SUB="" F  S SUB=$O(^VDEFHL7(SUB)) Q:SUB=""  D
"RTN","VDEFUTIL",114,0)
 . S X=^VDEFHL7(SUB,0) K ^VDEFHL7(SUB) S ^VDEFHL7(SUB,0)=X
"RTN","VDEFUTIL",115,0)
 S SUB="" F  S SUB=$O(^VDEFOUT(SUB)) Q:SUB=""  D
"RTN","VDEFUTIL",116,0)
 . S X=^VDEFOUT(SUB,0) K ^VDEFOUT(SUB) S ^VDEFOUT(SUB,0)=X
"RTN","VDEFUTIL",117,0)
 W !,"VDEF Globals deleted."
"RTN","VDEFUTIL",118,0)
 Q
"VER")
8.0^22.0
"BLD",6196,6)
^1
**END**
**END**
