Released IB*2*308 SEQ #306
Extracted from mail message
**KIDS**:IB*2.0*308^

**INSTALL NAME**
IB*2.0*308
"BLD",5733,0)
IB*2.0*308^INTEGRATED BILLING^0^3060227^y
"BLD",5733,1,0)
^9.61A^1^1^3050720^^
"BLD",5733,1,1,0)
This patch is the inter-facility copay part of the PFSS project.
"BLD",5733,4,0)
^9.64PA^350^2
"BLD",5733,4,350,0)
350
"BLD",5733,4,350,2,0)
^9.641^350^1
"BLD",5733,4,350,2,350,0)
INTEGRATED BILLING ACTION  (File-top level)
"BLD",5733,4,350,2,350,1,0)
^9.6411^.22^1
"BLD",5733,4,350,2,350,1,.22,0)
PFSS ACCOUNT REFERENCE
"BLD",5733,4,350,222)
y^n^p^^^^n^^n
"BLD",5733,4,350,224)

"BLD",5733,4,354.71,0)
354.71
"BLD",5733,4,354.71,2,0)
^9.641^354.71^1
"BLD",5733,4,354.71,2,354.71,0)
IB COPAY TRANSACTIONS  (File-top level)
"BLD",5733,4,354.71,2,354.71,1,0)
^9.6411^.12^3
"BLD",5733,4,354.71,2,354.71,1,.11,0)
BILLED AMOUNT
"BLD",5733,4,354.71,2,354.71,1,.12,0)
NON-BILLABLE AMOUNT
"BLD",5733,4,354.71,2,354.71,1,.2,0)
PFSS REMOTE TRANSACTION
"BLD",5733,4,354.71,222)
y^n^p^^^^n^^n
"BLD",5733,4,354.71,224)

"BLD",5733,4,"APDD",350,350)

"BLD",5733,4,"APDD",350,350,.22)

"BLD",5733,4,"APDD",354.71,354.71)

"BLD",5733,4,"APDD",354.71,354.71,.11)

"BLD",5733,4,"APDD",354.71,354.71,.12)

"BLD",5733,4,"APDD",354.71,354.71,.2)

"BLD",5733,4,"B",350,350)

"BLD",5733,4,"B",354.71,354.71)

"BLD",5733,6)
10^
"BLD",5733,"KRN",0)
^9.67PA^8989.52^19
"BLD",5733,"KRN",.4,0)
.4
"BLD",5733,"KRN",.401,0)
.401
"BLD",5733,"KRN",.402,0)
.402
"BLD",5733,"KRN",.403,0)
.403
"BLD",5733,"KRN",.5,0)
.5
"BLD",5733,"KRN",.84,0)
.84
"BLD",5733,"KRN",3.6,0)
3.6
"BLD",5733,"KRN",3.8,0)
3.8
"BLD",5733,"KRN",9.2,0)
9.2
"BLD",5733,"KRN",9.8,0)
9.8
"BLD",5733,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",5733,"KRN",9.8,"NM",1,0)
IBARX^^0^B51922608
"BLD",5733,"KRN",9.8,"NM",2,0)
IBARXPFS^^0^B33725607
"BLD",5733,"KRN",9.8,"NM",3,0)
IBARXMN^^0^B37752322
"BLD",5733,"KRN",9.8,"NM",4,0)
IBARXMI^^0^B78946098
"BLD",5733,"KRN",9.8,"NM",5,0)
IBARXMR^^0^B3221986
"BLD",5733,"KRN",9.8,"NM",6,0)
IBCROE^^0^B37147577
"BLD",5733,"KRN",9.8,"NM","B","IBARX",1)

"BLD",5733,"KRN",9.8,"NM","B","IBARXMI",4)

"BLD",5733,"KRN",9.8,"NM","B","IBARXMN",3)

"BLD",5733,"KRN",9.8,"NM","B","IBARXMR",5)

"BLD",5733,"KRN",9.8,"NM","B","IBARXPFS",2)

"BLD",5733,"KRN",9.8,"NM","B","IBCROE",6)

"BLD",5733,"KRN",19,0)
19
"BLD",5733,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",5733,"KRN",19,"NM",1,0)
IBCR RC EXTRACT^^0
"BLD",5733,"KRN",19,"NM",2,0)
IBCR CHARGE MASTER MENU^^2
"BLD",5733,"KRN",19,"NM","B","IBCR CHARGE MASTER MENU",2)

"BLD",5733,"KRN",19,"NM","B","IBCR RC EXTRACT",1)

"BLD",5733,"KRN",19.1,0)
19.1
"BLD",5733,"KRN",101,0)
101
"BLD",5733,"KRN",101,"NM",0)
^9.68A^2^2
"BLD",5733,"KRN",101,"NM",1,0)
IB PFSS DFT-P03 CLIENT^^0
"BLD",5733,"KRN",101,"NM",2,0)
IB PFSS DFT-P03 SERVER^^0
"BLD",5733,"KRN",101,"NM","B","IB PFSS DFT-P03 CLIENT",1)

"BLD",5733,"KRN",101,"NM","B","IB PFSS DFT-P03 SERVER",2)

"BLD",5733,"KRN",409.61,0)
409.61
"BLD",5733,"KRN",771,0)
771
"BLD",5733,"KRN",771,"NM",0)
^9.68A^2^2
"BLD",5733,"KRN",771,"NM",1,0)
IB PFSS RECV^^0
"BLD",5733,"KRN",771,"NM",2,0)
IB PFSS SENDING^^0
"BLD",5733,"KRN",771,"NM","B","IB PFSS RECV",1)

"BLD",5733,"KRN",771,"NM","B","IB PFSS SENDING",2)

"BLD",5733,"KRN",870,0)
870
"BLD",5733,"KRN",8989.51,0)
8989.51
"BLD",5733,"KRN",8989.52,0)
8989.52
"BLD",5733,"KRN",8994,0)
8994
"BLD",5733,"KRN","B",.4,.4)

"BLD",5733,"KRN","B",.401,.401)

"BLD",5733,"KRN","B",.402,.402)

"BLD",5733,"KRN","B",.403,.403)

"BLD",5733,"KRN","B",.5,.5)

"BLD",5733,"KRN","B",.84,.84)

"BLD",5733,"KRN","B",3.6,3.6)

"BLD",5733,"KRN","B",3.8,3.8)

"BLD",5733,"KRN","B",9.2,9.2)

"BLD",5733,"KRN","B",9.8,9.8)

"BLD",5733,"KRN","B",19,19)

"BLD",5733,"KRN","B",19.1,19.1)

"BLD",5733,"KRN","B",101,101)

"BLD",5733,"KRN","B",409.61,409.61)

"BLD",5733,"KRN","B",771,771)

"BLD",5733,"KRN","B",870,870)

"BLD",5733,"KRN","B",8989.51,8989.51)

"BLD",5733,"KRN","B",8989.52,8989.52)

"BLD",5733,"KRN","B",8994,8994)

"BLD",5733,"QUES",0)
^9.62^^
"BLD",5733,"REQB",0)
^9.611^1^1
"BLD",5733,"REQB",1,0)
IB*2.0*237^2
"BLD",5733,"REQB","B","IB*2.0*237",1)

"FIA",350)
INTEGRATED BILLING ACTION
"FIA",350,0)
^IB(
"FIA",350,0,0)
350
"FIA",350,0,1)
y^n^p^^^^n^^n
"FIA",350,0,10)

"FIA",350,0,11)

"FIA",350,0,"RLRO")

"FIA",350,0,"VR")
2.0^IB
"FIA",350,350)
1
"FIA",350,350,.22)

"FIA",354.71)
IB COPAY TRANSACTIONS
"FIA",354.71,0)
^IBAM(354.71,
"FIA",354.71,0,0)
354.71
"FIA",354.71,0,1)
y^n^p^^^^n^^n
"FIA",354.71,0,10)

"FIA",354.71,0,11)

"FIA",354.71,0,"RLRO")

"FIA",354.71,0,"VR")
2.0^IB
"FIA",354.71,354.71)
1
"FIA",354.71,354.71,.11)

"FIA",354.71,354.71,.12)

"FIA",354.71,354.71,.2)

"KRN",19,7076,-1)
2^2
"KRN",19,7076,0)
IBCR CHARGE MASTER MENU^Charge Master Menu^^M^1555^^^^^^^200
"KRN",19,7076,10,0)
^19.01IP^8^8
"KRN",19,7076,10,8,0)
12551
"KRN",19,7076,10,8,"^")
IBCR RC EXTRACT
"KRN",19,7076,"U")
CHARGE MASTER MENU
"KRN",19,12551,-1)
0^1
"KRN",19,12551,0)
IBCR RC EXTRACT^Extract Charge Master RC Rates^^R^^IB SUPERVISOR^^^^^^INTEGRATED BILLING
"KRN",19,12551,1,0)
^^7^7^3060111^
"KRN",19,12551,1,1,0)
This option is used to extract Reasonable Charges rates from Charge 
"KRN",19,12551,1,2,0)
Master in a format that can be imported to Excel.  The extract will allow 
"KRN",19,12551,1,3,0)
you to create a text file that is delimitated by the circumflex/caret (^) 
"KRN",19,12551,1,4,0)
character.  When importing to Excel specify that delimiter.  This can be 
"KRN",19,12551,1,5,0)
used for any version of RC from 2.0 or above.  The output device selected 
"KRN",19,12551,1,6,0)
should be a Host File Server (HFS) or the Current Terminal (for screen 
"KRN",19,12551,1,7,0)
capture).
"KRN",19,12551,25)
EN^IBCROE
"KRN",19,12551,"U")
EXTRACT CHARGE MASTER RC RATES
"KRN",101,8132,-1)
0^2
"KRN",101,8132,0)
IB PFSS DFT-P03 SERVER^IB PFSS DFT-P03 RECEIVER^^E^^^^^^^^
"KRN",101,8132,99)
60282,51872
"KRN",101,8132,770)
IB PFSS SENDING^^DFT^P03^122^T^^^^2.4^
"KRN",101,8132,775,0)
^101.0775PA^1^1
"KRN",101,8132,775,1,0)
8133
"KRN",101,8132,775,1,"^")
IB PFSS DFT-P03 CLIENT
"KRN",101,8133,-1)
0^1
"KRN",101,8133,0)
IB PFSS DFT-P03 CLIENT^^^S^^^^^^^^
"KRN",101,8133,770)
^IB PFSS RECV^^P03^^^^^^^DFT
"KRN",101,8133,771)
D MSG^IBARXPFS
"KRN",101,8133,773)
0^0
"KRN",771,206,-1)
0^2
"KRN",771,206,0)
IB PFSS SENDING^a^^^^^US
"KRN",771,206,"EC")
^~\&
"KRN",771,206,"FS")
|
"KRN",771,207,-1)
0^1
"KRN",771,207,0)
IB PFSS RECV^a^^^^^US
"KRN",771,207,"EC")
^~\&
"KRN",771,207,"FS")
|
"MBREQ")
0
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
308^3060227^2438
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3060227
"PKG",200,22,1,"PAH",1,1,1,0)
This patch is the inter-facility copay part of the PFSS project.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","IBARX")
0^1^B51922608^B50649768
"RTN","IBARX",1,0)
IBARX ;ALB/AAS-INTEGRATED BILLING, PHARMACY COPAY INTERFACE ;14-FEB-91
"RTN","IBARX",2,0)
 ;;2.0;INTEGRATED BILLING;**101,150,156,168,186,237,308**;21-MAR-94
"RTN","IBARX",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBARX",4,0)
 ;
"RTN","IBARX",5,0)
XTYPE ; - tag XTYPE - returns array of billable action types for service
"RTN","IBARX",6,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",7,0)
 ;
"RTN","IBARX",8,0)
X1 K Y D INSTAL I '$T S Y=-1 Q
"RTN","IBARX",9,0)
 N I,J,X1,X2,DA,DFN,IBCAP S Y=1,IBSAVX=X,IBTAG=1,IBWHER=5
"RTN","IBARX",10,0)
 ;
"RTN","IBARX",11,0)
 D CHKX^IBAUTL G:+Y<1 XTYPEQ
"RTN","IBARX",12,0)
 ;
"RTN","IBARX",13,0)
 I '$D(^IBE(350.1,"ANEW",IBSERV,1,1)) D  S Y=-1 G XTYPEQ
"RTN","IBARX",14,0)
 .I '$D(ZTQUEUED) W !!,*7,"WARNING: Pharmacy Copay not working,",!,"         Check IB SERVICE/SECTION in Pharmacy Site File.",!!
"RTN","IBARX",15,0)
 .D E3^IBAERR
"RTN","IBARX",16,0)
 ;
"RTN","IBARX",17,0)
 N X D ELIG^VADPT,INP^VADPT,DOM S Y=1
"RTN","IBARX",18,0)
 F I=0:0 S I=$O(^IBE(350.1,"ANEW",IBSERV,1,I)) Q:'I  I $D(^IBE(350.1,I,40)) S DA=I X ^IBE(350.1,DA,40) S Y(DA,X)=I_"^"_X1_"^"_X2 S:'$G(IBCAP) IBCAP=X
"RTN","IBARX",19,0)
 ;
"RTN","IBARX",20,0)
 I $G(IBCAP),$G(DFN) D NEW^IBARXPFS(DFN)
"RTN","IBARX",21,0)
 ;
"RTN","IBARX",22,0)
XTYPEQ K X1,X2,IBSERV,VAEL,VA,VAERR,IBDOM,VAIN,IBSAVX,IBTAG,IBWHER
"RTN","IBARX",23,0)
 ;
"RTN","IBARX",24,0)
 Q
"RTN","IBARX",25,0)
 ;
"RTN","IBARX",26,0)
DOM S IBDOM=0 I $D(VAIN(4)),$D(^DIC(42,+VAIN(4),0)),$P(^(0),"^",3)="D" S IBDOM=1
"RTN","IBARX",27,0)
 Q
"RTN","IBARX",28,0)
NEW ;  - process new/renew/refill rx for charges
"RTN","IBARX",29,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",30,0)
 ;
"RTN","IBARX",31,0)
N1 K Y,IBSAVX D INSTAL I '$T S Y=-1 Q
"RTN","IBARX",32,0)
 N I,J,X1,X2,DA,DFN,IBEXMP
"RTN","IBARX",33,0)
 S IBWHER=1,IBSAVX=X,Y=1,IBTAG=2 D CHKX^IBAUTL I +Y<1 G NEWQ
"RTN","IBARX",34,0)
 I $D(X)<11 S Y="-1^IB010" G NEWQ
"RTN","IBARX",35,0)
 S J="" F  S J=$O(X(J)) Q:J=""  S IBSAVX(J)=X(J)
"RTN","IBARX",36,0)
 D ARPARM^IBAUTL I +Y<1 G NEWQ
"RTN","IBARX",37,0)
 ;
"RTN","IBARX",38,0)
 ; -- check rx exemption in case refill is exempt
"RTN","IBARX",39,0)
 ; -- if exempt set amount to each rx and total to zero
"RTN","IBARX",40,0)
 ;    1= exempt, 0= non-exempt, -1=copay off (manila)
"RTN","IBARX",41,0)
 S IBEXMP=+$$RXEXMT^IBARXEU0(DFN,DT)
"RTN","IBARX",42,0)
 I IBEXMP'=0 D  S Y="1^0" G NEWQ
"RTN","IBARX",43,0)
 .S IBJ=""
"RTN","IBARX",44,0)
 .; changed return value 6th piece is the exempt flag
"RTN","IBARX",45,0)
 .F  S IBJ=$O(IBSAVX(IBJ)) Q:IBJ=""  S $P(Y(IBJ),"^",6)=IBEXMP
"RTN","IBARX",46,0)
 .Q
"RTN","IBARX",47,0)
 ;
"RTN","IBARX",48,0)
 ; check to see if billing has been tracked across facilities before,
"RTN","IBARX",49,0)
 ; if not, start now.
"RTN","IBARX",50,0)
 D TRACK^IBARXMN(DFN) I +Y<1 G NEWQ
"RTN","IBARX",51,0)
 ;
"RTN","IBARX",52,0)
 S IBTOTL=0
"RTN","IBARX",53,0)
 D BILLNO^IBAUTL I +Y<1 G NEWQ
"RTN","IBARX",54,0)
 ;
"RTN","IBARX",55,0)
 S IBTOTL=0,IBJ="",IBSEQNO=$P(^IBE(350.1,IBATYP,0),"^",5) I 'IBSEQNO S Y="-1^IB023" G NEWQ
"RTN","IBARX",56,0)
 F  S IBJ=$O(IBSAVX(IBJ)) Q:IBJ=""  S IBX=IBSAVX(IBJ) D RX^IBARX1
"RTN","IBARX",57,0)
 I +Y<1 G NEWQ
"RTN","IBARX",58,0)
 ;
"RTN","IBARX",59,0)
 ; changed to only do if charge exists
"RTN","IBARX",60,0)
 D:IBTOTL ^IBAFIL
"RTN","IBARX",61,0)
 ;
"RTN","IBARX",62,0)
 S IBJ="" F  S IBJ=$O(IBSAVY(IBJ)) Q:IBJ=""  S Y(IBJ)=IBSAVY(IBJ)
"RTN","IBARX",63,0)
 S:+Y>0 Y="1^"_IBTOTL S X=IBSAVX
"RTN","IBARX",64,0)
 ;
"RTN","IBARX",65,0)
NEWQ D:+Y<1 ^IBAERR
"RTN","IBARX",66,0)
 D END
"RTN","IBARX",67,0)
 Q
"RTN","IBARX",68,0)
 ;
"RTN","IBARX",69,0)
INSTAL I $S($D(^IBE(350.9,1,0)):1,$D(^IB(0)):1,1:0)
"RTN","IBARX",70,0)
 Q
"RTN","IBARX",71,0)
 ;
"RTN","IBARX",72,0)
CANCEL ;  - cancel charges for a rx
"RTN","IBARX",73,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",74,0)
 ;
"RTN","IBARX",75,0)
C1 K Y,IBSAVX N I,J,X1,X2,DA,DFN I '$G(IBUPDATE) N IBCAP,IBAMP,IBSAVXMC
"RTN","IBARX",76,0)
 S IBWHER=1,IBSAVX=X,Y=1,IBTAG=3 D CHKX^IBAUTL I +Y<1 G CANQ
"RTN","IBARX",77,0)
 I $D(X)<11 S Y="-1^IB010" G CANQ
"RTN","IBARX",78,0)
 S J="" F  S J=$O(X(J)) Q:J=""  S IBSAVX(J)=X(J)
"RTN","IBARX",79,0)
 D ARPARM^IBAUTL I +Y<1 G CANQ
"RTN","IBARX",80,0)
 ;
"RTN","IBARX",81,0)
 S IBJ="",IBTOTL=0
"RTN","IBARX",82,0)
 F  S IBJ=$O(IBSAVX(IBJ)) Q:IBJ=""  S IBX=IBSAVX(IBJ) D CANRX^IBARX1 I +IBY(IBJ)'<1 D ^IBAFIL:$P(IBND,"^",5)'=8 I +Y<1 S IBY(IBJ)=Y
"RTN","IBARX",83,0)
 I +Y<1 S IBT="",IBY=Y,IBM="" F  S IBM=$O(IBY(IBM)) Q:IBM=""  I +IBY(IBM)<1 S Y=IBY(IBM) D ^IBAERR S Y(IBM)=IBY(IBM),Y=IBY
"RTN","IBARX",84,0)
CANQ D:+Y<1 ^IBAERR:('$D(IBT))
"RTN","IBARX",85,0)
 S X=IBSAVX
"RTN","IBARX",86,0)
 M IBSAVXMC=Y
"RTN","IBARX",87,0)
 D END
"RTN","IBARX",88,0)
 ;
"RTN","IBARX",89,0)
 ; now that I have cancelled lets see if there are some to be billed
"RTN","IBARX",90,0)
 I '$G(IBUPDATE),$D(IBCAP)>10 D QCAN^IBARXMC(DFN,.IBCAP,.IBSAVXMC)
"RTN","IBARX",91,0)
 ;S IBD=0 F  S IBD=$O(IBCAP(IBD)) Q:IBD<1  D CANCEL^IBARXMC(DFN,IBD)
"RTN","IBARX",92,0)
 Q
"RTN","IBARX",93,0)
 ;
"RTN","IBARX",94,0)
UPDATE ;  - will cancel current open charge and create updated entry
"RTN","IBARX",95,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",96,0)
 ;
"RTN","IBARX",97,0)
U1 K Y,IBSAVX N I,J,X1,X2,DA,DFN,IBEXMP,IBUPDATE,IBCAP,IBEFDT,IBAMP,IBSAVXMC
"RTN","IBARX",98,0)
 S IBUPDATE=1  ; new flag so we know we are updating
"RTN","IBARX",99,0)
 S IBWHER=1,IBSAVX=X,Y=1,IBTAG=4 D CHKX^IBAUTL I +Y<1 G UPDQ
"RTN","IBARX",100,0)
 S IBSAVXU=IBSAVX
"RTN","IBARX",101,0)
 I $D(X)<11 S Y="-1^IB010" G UPDQ
"RTN","IBARX",102,0)
 S J="" F  S J=$O(X(J)) Q:J=""  S IBSAVXU(J)=X(J),X(J)=$P(X(J),"^",3,4) D EFDT^IBARXMU($P(X(J),"^"),.IBEFDT)
"RTN","IBARX",103,0)
 ;
"RTN","IBARX",104,0)
 D CANCEL
"RTN","IBARX",105,0)
U2 K X
"RTN","IBARX",106,0)
 S X=IBSAVXU S J="" F  S J=$O(IBSAVXU(J)) Q:J=""  S X(J)=$P(IBSAVXU(J),"^",1,3)
"RTN","IBARX",107,0)
 S IBSAVX=X,Y=1,IBTAG=4 D CHKX^IBAUTL I +Y<1 G UPDQ
"RTN","IBARX",108,0)
 D ARPARM^IBAUTL I +Y<1 G UPDQ
"RTN","IBARX",109,0)
 ;
"RTN","IBARX",110,0)
 ; -- check rx exemption in case refill is exempt
"RTN","IBARX",111,0)
 ; -- if exempt set amount to each rx and total to zero
"RTN","IBARX",112,0)
 S IBEXMP=+$$RXEXMT^IBARXEU0(DFN,DT)
"RTN","IBARX",113,0)
 I IBEXMP'=0 D  S Y="1^0" G UPDQ
"RTN","IBARX",114,0)
 .; changed return value 6th piece is the exempt flag
"RTN","IBARX",115,0)
 .S IBJ="" F  S IBJ=$O(IBSAVXU(IBJ)) Q:IBJ=""  S $P(Y(IBJ),"^",6)=IBEXMP
"RTN","IBARX",116,0)
 .Q
"RTN","IBARX",117,0)
 ;
"RTN","IBARX",118,0)
 S IBATYP=$P(^IBE(350.1,+IBATYP,0),"^",7) I '$D(^IBE(350.1,+IBATYP,0)) S Y="-1^IB008" G UPDQ ;update type action
"RTN","IBARX",119,0)
 ;
"RTN","IBARX",120,0)
 D BILLNO^IBAUTL G:+Y<1 UPDQ
"RTN","IBARX",121,0)
 S IBTOTL=0,IBNOS="",IBSEQNO=$P(^IBE(350.1,IBATYP,0),"^",5) I 'IBSEQNO S Y="-1^IB023" G UPDQ
"RTN","IBARX",122,0)
 S IBJ="" F  S IBJ=$O(IBSAVXU(IBJ)) Q:IBJ=""  S IBX=IBSAVXU(IBJ) S:$D(IBEFDT(+$P(IBX,"^",3))) IBEFDT=IBEFDT(+$P(IBX,"^",3)) D UCHPAR,RX^IBARX1:'$D(IBSAVY(IBJ)) S IBEFDT=0
"RTN","IBARX",123,0)
 D ^IBAFIL
"RTN","IBARX",124,0)
 ;
"RTN","IBARX",125,0)
 S IBJ="" F  S IBJ=$O(IBSAVY(IBJ)) Q:IBJ=""  S Y(IBJ)=IBSAVY(IBJ),$P(Y(IBJ),"^",6)=+$G(IBEXMP) S:+Y(IBJ)<1 Y=Y(IBJ)
"RTN","IBARX",126,0)
 S:+Y>0 Y="1^"_IBTOTL S X=IBSAVXU
"RTN","IBARX",127,0)
 ;
"RTN","IBARX",128,0)
 ; now that I have the update done lets see if there are some to be billed
"RTN","IBARX",129,0)
 I $D(IBCAP)>10 D QCAN^IBARXMC(DFN,.IBCAP,.IBSAVXMC)
"RTN","IBARX",130,0)
 ;S IBD=0 F  S IBD=$O(IBCAP(IBD)) Q:IBD<1  D CANCEL^IBARXMC(DFN,IBD)
"RTN","IBARX",131,0)
 ;
"RTN","IBARX",132,0)
UPDQ D:+Y<1 ^IBAERR
"RTN","IBARX",133,0)
 K IBSAVXU
"RTN","IBARX",134,0)
END K %,%H,%I,K,X1,X2,X3,IBSERV,IBATYP,IBAFY,IBDUZ,IBNOW,IBSAVX,IBTOTL,IBX,IBT,IBCHRG,IBDESC,IBFAC,IBIL,IBN,IBNOS,IBSEQNO,IBSITE,IBTAG,IBTRAN,IBCRES,IBJ,IBLAST,IBND,IBY,IBPARNT,IBUNIT,IBJ,IBARTYP,IBI,IBSAVY,IBWHER
"RTN","IBARX",135,0)
 Q
"RTN","IBARX",136,0)
UCHPAR ; Check that IB action and its parent exist.
"RTN","IBARX",137,0)
 S IBPARNT=$P(IBX,"^",3)
"RTN","IBARX",138,0)
 I '$D(^IB(+IBPARNT,0)) S IBSAVY(IBJ)="-1^IB021" G UCHPARQ
"RTN","IBARX",139,0)
 S IBPARNT=$P(^IB(+IBPARNT,0),"^",9)
"RTN","IBARX",140,0)
 I '$D(^IB(+IBPARNT,0)) S IBSAVY(IBJ)="-1^IB027"
"RTN","IBARX",141,0)
UCHPARQ Q
"RTN","IBARX",142,0)
 ;
"RTN","IBARX",143,0)
STATUS(X) ; returns the status of a transaction in 350
"RTN","IBARX",144,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",145,0)
 ;
"RTN","IBARX",146,0)
 N Y S Y=$G(^IB(X,0))
"RTN","IBARX",147,0)
 Q +$S($P(Y,"^",5)=10:2,1:$P($G(^IBE(350.1,+$P(Y,"^",3),0)),"^",5))
"RTN","IBARX",148,0)
 ;
"RTN","IBARX",149,0)
CANIBAM ; used by pso to cancel a 354.71 transaction
"RTN","IBARX",150,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",151,0)
 N IBZ,IBXX,IBYY,IBCAP
"RTN","IBARX",152,0)
 M IBXX=X
"RTN","IBARX",153,0)
 S IBXX=0 F  S IBXX=$O(IBXX(IBXX)) Q:IBXX=""  D
"RTN","IBARX",154,0)
 . N IBY
"RTN","IBARX",155,0)
 . S IBZ=$G(^IBAM(354.71,+IBXX(IBXX),0))
"RTN","IBARX",156,0)
 . I $P(IBZ,"^",4) S IBYY(IBXX)="-1^Transaction has been billed" Q
"RTN","IBARX",157,0)
 . I $P(IBZ,"^",5)="Y"!($P(IBZ,"^",5)="X") S IBYY(IBXX)="-1^Transaction already cancelled" Q
"RTN","IBARX",158,0)
 . S IBZ=$$CANCEL^IBARXMN($P(IBZ,"^",2),+IBXX(IBXX),.IBY,$P(IBXX(IBXX),"^",2))
"RTN","IBARX",159,0)
 . S IBYY(IBXX)=$S($P($G(IBY),"^")=-1:IBY,1:IBZ)
"RTN","IBARX",160,0)
 K Y M Y=IBYY
"RTN","IBARX",161,0)
 Q
"RTN","IBARX",162,0)
 ;
"RTN","IBARX",163,0)
UPIBAM ;  - will cancel current potential charge and create updated entry
"RTN","IBARX",164,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",165,0)
 ;
"RTN","IBARX",166,0)
 N IBXX,IBYY,IBWHER,IBTAG,IBZ,IBX,IBY,IBSAVX,IBA,IBAM,IBATYP,IBCAP,IBDESC,IBDUZ,IBSERV,IBTCH
"RTN","IBARX",167,0)
 M IBXX=X
"RTN","IBARX",168,0)
 S IBA=$O(X("")) I IBA="" S (Y)="-1^Invalid Subscript in X" Q
"RTN","IBARX",169,0)
 S IBWHER=1,Y=1,IBTAG=4,IBSAVX=X D CHKX^IBAUTL I +Y<1 S Y(IBA)=Y Q
"RTN","IBARX",170,0)
 S IBZ=$G(^IBAM(354.71,+$P($G(IBXX(IBA)),"^",3),0))
"RTN","IBARX",171,0)
 ;
"RTN","IBARX",172,0)
 ; check out the transaction sent
"RTN","IBARX",173,0)
 I 'IBZ S (Y,Y(IBA))="-1^Not a valid transaction number" Q
"RTN","IBARX",174,0)
 I $P(IBZ,"^",4) S (Y,Y(IBA))="-1^Transaction has been billed" Q
"RTN","IBARX",175,0)
 I $P(IBZ,"^",5)="Y"!($P(IBZ,"^",5)="X") S (Y,Y(IBA))="-1^Transaction already cancelled" Q
"RTN","IBARX",176,0)
 ;
"RTN","IBARX",177,0)
 ; cancel that transaction
"RTN","IBARX",178,0)
 S IBX=$$CANCEL^IBARXMN($P(IBZ,"^",2),$P($G(IBXX(IBA)),"^",3),.Y,$P(IBXX(IBA),"^",4)) I +Y<1 S Y(IBA)=Y Q
"RTN","IBARX",179,0)
 ;
"RTN","IBARX",180,0)
 ; create the new updated transaction
"RTN","IBARX",181,0)
 S IBX=IBXX(IBA) D BDESC^IBARX1 S IBATYP=$P(^IBE(350.1,+IBATYP,0),"^",7),DA=IBATYP D COST^IBAUTL S IBTCH=$P(IBX,"^",2)*X1
"RTN","IBARX",182,0)
 S IBAM=$$ADD^IBARXMN($P(IBZ,"^",2),"^^"_$P(IBZ,"^",3)_"^^P^"_$P(IBXX(IBA),"^")_"^"_$P(IBXX(IBA),"^",2)_"^"_IBTCH_"^"_IBDESC_"^"_$$PARENT^IBARXMC($P(IBXX(IBA),"^",3))_"^0^"_IBTCH_"^"_(+$P($$SITE^IBARXMU,"^",3)),IBATYP)
"RTN","IBARX",183,0)
 I IBAM<1 S (Y,Y(IBA))="-1^IB316" Q
"RTN","IBARX",184,0)
 ;
"RTN","IBARX",185,0)
 S Y(IBA)=IBAM,Y=1
"RTN","IBARX",186,0)
 ;
"RTN","IBARX",187,0)
 Q
"RTN","IBARXMI")
0^4^B78946098
"RTN","IBARXMI",1,0)
IBARXMI ;OAK/ELZ-HL7 RECEIVER FOR PFSS WORKING ROUTINE ;6-APR-2005
"RTN","IBARXMI",2,0)
 ;;2.0;INTEGRATED BILLING;**308**;21-MAR-94
"RTN","IBARXMI",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBARXMI",4,0)
 ;
"RTN","IBARXMI",5,0)
QUERYVA ; called by HL7 receiver to send queries out to all sites of record
"RTN","IBARXMI",6,0)
 ; for the given patient to look for updated copay cap information.
"RTN","IBARXMI",7,0)
 ; TYPE = ST
"RTN","IBARXMI",8,0)
 ;
"RTN","IBARXMI",9,0)
 N IBADT,IBRX,X,IBX,IBQ
"RTN","IBARXMI",10,0)
 ;
"RTN","IBARXMI",11,0)
 ;check out data received from message (need to get rx/fill number that caused this)
"RTN","IBARXMI",12,0)
 S IBQ=0 F IBX=.091,.092,.03 I $G(IB35471(IBX))="" S IBQ=1 Q
"RTN","IBARXMI",13,0)
 I IBQ S HLERR="354.71 field "_IBX_" missing" Q
"RTN","IBARXMI",14,0)
 S IBRX=$O(^PSRX("B",IB35471(.091),0)) I 'IBRX S HLERR="Rx number not found" Q
"RTN","IBARXMI",15,0)
 I '$D(^PSRX(+IBRX,1,IB35471(.092),0)),IB35471(.092) S HLERR="Refill invalid or not found" Q
"RTN","IBARXMI",16,0)
 ;
"RTN","IBARXMI",17,0)
 ; set DUZ to pharmacy person who caused this to occur DBIA4732 and SACC exemption
"RTN","IBARXMI",18,0)
 D
"RTN","IBARXMI",19,0)
 . I $G(DUZ)<1,$L($T(RPH^PSOPFSU0)) N DUZ S DUZ=$P($$RPH^PSOPFSU0(IB35471(.091),IB35471(.092)),"^",2),DUZ(2)=+$$SITE^VASITE
"RTN","IBARXMI",20,0)
 . ;
"RTN","IBARXMI",21,0)
 . ; call to do query
"RTN","IBARXMI",22,0)
 . S IBADT=IB35471(.03)
"RTN","IBARXMI",23,0)
 . D BBE^IBARXPFS
"RTN","IBARXMI",24,0)
 ;
"RTN","IBARXMI",25,0)
 ; call vdef to say done
"RTN","IBARXMI",26,0)
 S X=$$QUEUE^VDEFQM("DFT^P03","SUBTYPE=CPFI^IEN="_DFN,,"PFSS OUTBOUND")
"RTN","IBARXMI",27,0)
 ;
"RTN","IBARXMI",28,0)
 Q
"RTN","IBARXMI",29,0)
 ;
"RTN","IBARXMI",30,0)
BILLVA ; called by HL7 receiver to initiate back billing at a remote VA site.
"RTN","IBARXMI",31,0)
 ; TYPE = BL
"RTN","IBARXMI",32,0)
 ;
"RTN","IBARXMI",33,0)
 N IBX,IBRX,IBQ
"RTN","IBARXMI",34,0)
 ;
"RTN","IBARXMI",35,0)
 ;check out data received from message
"RTN","IBARXMI",36,0)
 S IBQ=0 F IBX=.01,.11,.091,.092 I $G(IB35471(IBX))="" S IBQ=1 Q
"RTN","IBARXMI",37,0)
 I IBQ S HLERR="354.71 field "_IBX_" missing" Q
"RTN","IBARXMI",38,0)
 I IB35471(.11)<.01 S HLERR="Invalid amount to back bill" Q
"RTN","IBARXMI",39,0)
 S IBX=$O(^IBAM(354.71,"B",IB35471(.01),0)) I 'IBX S HLERR="Invalid 354.71 transaction number" Q
"RTN","IBARXMI",40,0)
 S IBRX=$O(^PSRX("B",IB35471(.091),0)) I 'IBRX S HLERR="Rx number not found" Q
"RTN","IBARXMI",41,0)
 I '$D(^PSRX(+IBRX,1,IB35471(.092),0)),IB35471(.092) S HLERR="Refill invalid or not found" Q
"RTN","IBARXMI",42,0)
 ;
"RTN","IBARXMI",43,0)
 ;need to set DUZ to pharmacy staff person who caused this to occur DBIA4732 and SACC exemption
"RTN","IBARXMI",44,0)
 D
"RTN","IBARXMI",45,0)
 . I $G(DUZ)<1,$L($T(RPH^PSOPFSU0)) N DUZ S DUZ=$P($$RPH^PSOPFSU0(IBRX,IB35471(.092)),"^",2),DUZ(2)=+$$SITE^VASITE
"RTN","IBARXMI",46,0)
 . ;
"RTN","IBARXMI",47,0)
 . ;call remote site to do back billing for specified $ amount
"RTN","IBARXMI",48,0)
 . I +IB35471(.01)'=$P($$SITE^VASITE,"^",3) D SEND^IBARXMB(IB35471(.01),IB35471(.11)) Q
"RTN","IBARXMI",49,0)
 . I +IB35471(.01)=$P($$SITE^VASITE,"^",3),'$P(^IBAM(354.71,IBX,0),"^",20) D BILL^IBARXMB(IB35471(.01),IB35471(.11)) Q
"RTN","IBARXMI",50,0)
 . S HLERR="Transaction from local VistA or remote VA site"
"RTN","IBARXMI",51,0)
 ;
"RTN","IBARXMI",52,0)
 Q
"RTN","IBARXMI",53,0)
 ;
"RTN","IBARXMI",54,0)
35471 ; files data into 354.71 (TYPE = IN)
"RTN","IBARXMI",55,0)
 ; validate data
"RTN","IBARXMI",56,0)
 N IBX,IBQ,IBRX,IBARXDAT,IBATYP,IBAM,IBDESC
"RTN","IBARXMI",57,0)
 I '$L($T(RPH^PSOPFSU0)) S HLERR="Pharmacy API not installed" Q
"RTN","IBARXMI",58,0)
 S IBQ=0 F IBX=.01,.03,.05,.07,.08,.091,.1,.11,.12 I $G(IB35471(IBX))="" S IBQ=1 Q
"RTN","IBARXMI",59,0)
 I IBQ S HLERR="354.71 field "_IBX_" missing" Q
"RTN","IBARXMI",60,0)
 ;
"RTN","IBARXMI",61,0)
 I $P($$SITE^VASITE,"^",3)'=+IB35471(.01)!(IB35471(.01)'?3N1"-"1N.N) S HLERR="354.71 field .01 invalid" Q
"RTN","IBARXMI",62,0)
 I $P($$SITE^VASITE,"^",3)'=+IB35471(.1)!(IB35471(.1)'?3N1"-"1N.N) S HLERR="354.71 field .1 invalid" Q
"RTN","IBARXMI",63,0)
 I IB35471(.1)'=IB35471(.01),$O(^IBAM(354.71,"B",IB35471(.1),0)) S HLERR="354.71 field .1 is not a valid parent" Q
"RTN","IBARXMI",64,0)
 F IBX=.08,.11,.12 S IB35471(IBX)=+IB35471(IBX)
"RTN","IBARXMI",65,0)
 I 'IB35471(.08) S HLERR="Total Charge in-valid" Q
"RTN","IBARXMI",66,0)
 S IBRX=$O(^PSRX("B",IB35471(.091),0)) I 'IBRX S HLERR="Invalid prescription number" Q
"RTN","IBARXMI",67,0)
 I IB35471(.092),'$D(^PSRX(IBX,1,IB35471(.092),0)) S HLERR="Invalid fill/refill number" Q
"RTN","IBARXMI",68,0)
 F IBX=.01,.03,.05,.07,.08,.11,.12 D CHK^DIE(354.71,IBX,,IB35471(IBX),.IBQ) I IBQ="^" S HLERR="File 354.71, field "_IBX_" does not pass DD check" Q
"RTN","IBARXMI",69,0)
 ;
"RTN","IBARXMI",70,0)
 ;look up some needed rx data
"RTN","IBARXMI",71,0)
 S IBARXDAT=$$RPH^PSOPFSU0(IBRX,+IB35471(.092))
"RTN","IBARXMI",72,0)
 I $P(IBARXDAT,"^",3)="" S HLERR="Bad prescription data" Q
"RTN","IBARXMI",73,0)
 ;
"RTN","IBARXMI",74,0)
 ;get brief description
"RTN","IBARXMI",75,0)
 S IBX="52:"_IBRX_$S(IB35471(.092):";1:"_IB35471(.092),1:"")_"^"_IB35471(.07)
"RTN","IBARXMI",76,0)
 D ELIG^VADPT,INP^VADPT,DOM^IBARX
"RTN","IBARXMI",77,0)
 S IBATYP=$O(^IBE(350.1,"ANEW",$P(IBARXDAT,"^",3),1,0))
"RTN","IBARXMI",78,0)
 D BDESC^IBARX1
"RTN","IBARXMI",79,0)
 ;
"RTN","IBARXMI",80,0)
 ;need to set DUZ to pharmacy staff person who caused this to occur
"RTN","IBARXMI",81,0)
 D
"RTN","IBARXMI",82,0)
 . I $G(DUZ)<1 N DUZ S DUZ=$S(IB35471(.05)="NEW":$P(IBARXDAT,"^"),1:$P(IBARXDAT,"^",2)),DUZ(2)=+$$SITE^VASITE
"RTN","IBARXMI",83,0)
 . N DIE,DR,DA
"RTN","IBARXMI",84,0)
 . ;
"RTN","IBARXMI",85,0)
 . ;file in 354.71
"RTN","IBARXMI",86,0)
 . S IBAM=$$ADD^IBARXMN(DFN,IB35471(.01)_"^"_DFN_"^"_IB35471(.03)_"^^"_IB35471(.05)_"^"_$P(IBX,"^")_"^"_IB35471(.07)_"^"_IB35471(.08)_"^"_IBDESC_"^"_IB35471(.1)_"^"_IB35471(.11)_"^"_IB35471(.12)_"^"_$$LKUP^XUAF4(+IB35471(.01)),,1)
"RTN","IBARXMI",87,0)
 . S DIE="^IBAM(354.71,",DA=IBAM,DR=".2////1" D ^DIE
"RTN","IBARXMI",88,0)
 . ;
"RTN","IBARXMI",89,0)
 . ;call to send data to remote sites
"RTN","IBARXMI",90,0)
 . D FOUND^IBARXMA(.IBX,IBAM)
"RTN","IBARXMI",91,0)
 ;
"RTN","IBARXMI",92,0)
 D KVA^VADPT
"RTN","IBARXMI",93,0)
 ;
"RTN","IBARXMI",94,0)
 Q
"RTN","IBARXMI",95,0)
 ;
"RTN","IBARXMI",96,0)
351 ; files data in 351 (MT type)
"RTN","IBARXMI",97,0)
 ;
"RTN","IBARXMI",98,0)
 N IBQ,IBX,DIC,DIE,DR,X,Y,DA,DO
"RTN","IBARXMI",99,0)
 ;
"RTN","IBARXMI",100,0)
 ;validate data
"RTN","IBARXMI",101,0)
 S IBQ=0 F IBX=.03,.04,.05,.06,.07,.08,.09,.1 I $G(IB351(IBX))="" S IBQ=1 Q
"RTN","IBARXMI",102,0)
 I IBQ S HLERR="351 field "_IBX_" missing" Q
"RTN","IBARXMI",103,0)
 I '$G(IB35471(.01)) S HLERR="Clock file number missing or invalid" Q
"RTN","IBARXMI",104,0)
 S IB351(.01)=IB35471(.01)
"RTN","IBARXMI",105,0)
 F IBX=.01,.03,.04,.05,.06,.07,.08,.09,.1 D CHK^DIE(351,IBX,,IB351(IBX),.IBQ) I IBQ="^" S HLERR="File 351, field "_IBX_" does not pass DD check" Q
"RTN","IBARXMI",106,0)
 ;
"RTN","IBARXMI",107,0)
 ; see if clock already exists or add
"RTN","IBARXMI",108,0)
 S IBX=$O(^IBE(351,"B",IB35471(.01),0))
"RTN","IBARXMI",109,0)
 I 'IBX S DIC="^IBE(351,",X=IB351(.01),DIC(0)="",DIC("DR")=".02////^S X=DFN;11////"_$S($D(DUZ):DUZ,1:.5)_";12///NOW;13////"_$S($D(DUZ):DUZ,1:.5)_";14///NOW" K DO D FILE^DICN S IBX=+Y
"RTN","IBARXMI",110,0)
 I DFN'=$P($G(^IBE(351,IBX,0)),"^",2) S HLERR="Patient does not match clock file entry" Q
"RTN","IBARXMI",111,0)
 ;
"RTN","IBARXMI",112,0)
 ; file data received
"RTN","IBARXMI",113,0)
 S DIE="^IBE(351,",DA=IBX,DR=".04///^S X=IB351(.04);13////"_$S($D(DUZ):DUZ,1:.5)_";14///NOW" F X=.03,.05,.06,.07,.08,.09,.1 S DR=DR_";"_X_"////"_+IB351(X)
"RTN","IBARXMI",114,0)
 D ^DIE
"RTN","IBARXMI",115,0)
 Q
"RTN","IBARXMI",116,0)
 ;
"RTN","IBARXMI",117,0)
35181 ; files data in 351.81 (LB type)
"RTN","IBARXMI",118,0)
 ;
"RTN","IBARXMI",119,0)
 N IBQ,IBX,DIC,DIE,DR,X,Y,IBY,DA,DO,DIK,IBLTCX
"RTN","IBARXMI",120,0)
 ;
"RTN","IBARXMI",121,0)
 ;validate data
"RTN","IBARXMI",122,0)
 S IBQ=0 F IBX=.03,.04,.05 I $G(IB35181(IBX))="" S IBQ=1 Q
"RTN","IBARXMI",123,0)
 I IBQ S HLERR="351.81 field "_IBX_" missing" Q
"RTN","IBARXMI",124,0)
 I '$G(IB35471(.01)) S HLERR="LTC Clock file number missing or invalid" Q
"RTN","IBARXMI",125,0)
 S IB35181(.01)=IB35471(.01)
"RTN","IBARXMI",126,0)
 F IBX=.01,.03,.04,.05 D CHK^DIE(351.81,IBX,,IB35181(IBX),.IBQ) I IBQ="^" S HLERR="File 351.81, field "_IBX_" does not pass DD check" Q
"RTN","IBARXMI",127,0)
 S IBX=0 F  S IBX=$O(IBMTDT21(IBX)) Q:'IBX  D CHK^DIE(351.811,.02,,IBMTDT21(IBX),.IBQ)  I IBQ="^" S HLERR="LTC Exempt date "_IBMTDT21(IBX)_" does not pass DD check" Q
"RTN","IBARXMI",128,0)
 ;
"RTN","IBARXMI",129,0)
 ; see if clock already exists or add
"RTN","IBARXMI",130,0)
 S IBX=$O(^IBA(351.81,"B",IB35181(.01),0))
"RTN","IBARXMI",131,0)
 I 'IBX S DIC="^IBA(351.81,",X=IB35181(.01),DIC(0)="",DIC("DR")=".02////^S X=DFN;4.01////"_$S($D(DUZ):DUZ,1:.5)_";4.02///NOW;4.03////"_$S($D(DUZ):DUZ,1:.5)_";4.04///NOW" K DO D FILE^DICN S IBX=+Y
"RTN","IBARXMI",132,0)
 I DFN'=$P($G(^IBA(351.81,IBX,0)),"^",2) S HLERR="Patient does not match LTC clock file entry" Q
"RTN","IBARXMI",133,0)
 ;
"RTN","IBARXMI",134,0)
 ; file top level file data received
"RTN","IBARXMI",135,0)
 S DIE="^IBA(351.81,",DA=IBX,DR="4.03////"_$S($D(DUZ):DUZ,1:.5)_";4.04///NOW" F X=.03,.04,.05 S DR=DR_";"_X_"////"_+IB35181(X)
"RTN","IBARXMI",136,0)
 D ^DIE
"RTN","IBARXMI",137,0)
 ;
"RTN","IBARXMI",138,0)
 ; clean out 21 days and re-file based on data received
"RTN","IBARXMI",139,0)
 S DIK="^IBA(351.81,"_IBX_",1,",DA(1)=IBX,IBY=0 F  S IBY=$O(^IBA(351.81,IBX,1,IBY)) Q:'IBY  S DA=IBY D ^DIK
"RTN","IBARXMI",140,0)
 S DIC=DIK,DIC(0)="",IBY=0 F  S IBY=$O(IBMTDT21(IBY)) Q:'IBY  S X=IBY,DIC("DR")=".02////^S X=IBMTDT21(IBY)" K DO D FILE^DICN
"RTN","IBARXMI",141,0)
 S IBLTCX=IBX D REINDEX^IBAECC
"RTN","IBARXMI",142,0)
 ;
"RTN","IBARXMI",143,0)
 Q
"RTN","IBARXMI",144,0)
 ;
"RTN","IBARXMI",145,0)
350 ; files data in 350 (ML type)
"RTN","IBARXMI",146,0)
 N IBQ,IBX,DIC,DIE,DR,X,Y,IBY,DA,DO,IBDESC
"RTN","IBARXMI",147,0)
 ;
"RTN","IBARXMI",148,0)
 ; do i have data
"RTN","IBARXMI",149,0)
 S IBQ=0 F IBX="TYP","IO","BS","EDT",.06,.07,.17,.14,.15,.05,"IDX" I $G(IB350(IBX))="" S IBQ=1 Q
"RTN","IBARXMI",150,0)
 I IBQ S HLERR="350 field "_IBX_" missing" Q
"RTN","IBARXMI",151,0)
 I $G(IB35471(.01))="" S HLERR="350 field .01 mssing" Q
"RTN","IBARXMI",152,0)
 ;
"RTN","IBARXMI",153,0)
 ;determine action type
"RTN","IBARXMI",154,0)
 S IB350(.03)=$$ATYPE(IB350("TYP"),IB350("IO"),IB350("BS")) I IB350(.03)=-1 S HLERR="Unable to determine Action Type" Q
"RTN","IBARXMI",155,0)
 S IB350(.03)=$O(^IBE(350.1,"B",IB350(.03),0)) I 'IB350(.03) S HLERR="Action Type not found in 350.1" Q
"RTN","IBARXMI",156,0)
 ;
"RTN","IBARXMI",157,0)
 ;determine brief description if any
"RTN","IBARXMI",158,0)
 I $D(^IBE(350.1,IB350(.03),20)) X ^(20)
"RTN","IBARXMI",159,0)
 ;
"RTN","IBARXMI",160,0)
 ;determine institution (defualt to here if not known)
"RTN","IBARXMI",161,0)
 S IB350(.13)=$S($D(IBINST):$$LKUP^XUAF4(IBINST),1:+$$SITE^VASITE)
"RTN","IBARXMI",162,0)
 ;
"RTN","IBARXMI",163,0)
 ;determine clinic stop if needed
"RTN","IBARXMI",164,0)
 I IB350("IO")="O" S IB350(.2)=$$GET3525^IBEMTSCU($E($G(IB350(.2)),1,3),$E($G(IB350(.2)),4,6),IB350(.17)) I 'IB350(.2) S HLERR="Unable to find valid clinic stop code in 352.5" Q
"RTN","IBARXMI",165,0)
 ;
"RTN","IBARXMI",166,0)
 ;check out data
"RTN","IBARXMI",167,0)
 S IB350(.01)=IB35471(.01)
"RTN","IBARXMI",168,0)
 F IBX=.01,.06,.07,.17,.14,.15,.05 D CHK^DIE(350,IBX,,IB350(IBX),.IBQ) I IBQ="^" S HLERR="File 350, field "_IBX_" does not pass DD check" Q
"RTN","IBARXMI",169,0)
 I $L($G(HLERR)) Q
"RTN","IBARXMI",170,0)
 S IB350(.22)=$O(^IBBAA(375,"C",IB350("IDX"),0)) I 'IB350(.22) S HLERR="PFSS Account Number not found" Q
"RTN","IBARXMI",171,0)
 ;
"RTN","IBARXMI",172,0)
 ;see if already exists or add
"RTN","IBARXMI",173,0)
 S IBX=$O(^IB("B",IB350(.01),0))
"RTN","IBARXMI",174,0)
 I 'IBX S DIC="^IB(",X=IB350(.01),DIC(0)="",DIC("DR")=".02////^S X=DFN;11////"_$S($D(DUZ):DUZ,1:.5)_";12///NOW;13////"_$S($D(DUZ):DUZ,1:.5)_";14///NOW" K DO D FILE^DICN S IBX=+Y
"RTN","IBARXMI",175,0)
 I DFN'=$P($G(^IB(IBX,0)),"^",2) S HLERR="Patient does not match IB file entry" Q
"RTN","IBARXMI",176,0)
 ;
"RTN","IBARXMI",177,0)
 ;file data
"RTN","IBARXMI",178,0)
 S DIE="^IB(",DA=IBX,DR=".05///^S X=IB350(.05);13////"_$S($D(DUZ):DUZ,1:.5)_";14///NOW"_$S(IB350("IO")="O":";.2////^S X=IB350(.2)",1:"")_$S($D(IBDESC):";.08////^S X=IBDESC",1:"")
"RTN","IBARXMI",179,0)
 F IBY=.03,.06,.07,.13,.17,.14,.15,.22 S:'$L($P(^IB(IBX,0),"^",IBY*100)) DR=DR_";"_IBY_"////"_(+IB350(IBY))
"RTN","IBARXMI",180,0)
 D ^DIE
"RTN","IBARXMI",181,0)
 ;
"RTN","IBARXMI",182,0)
 Q
"RTN","IBARXMI",183,0)
 ;
"RTN","IBARXMI",184,0)
ERR ; trans type not found, set error
"RTN","IBARXMI",185,0)
 S HLERR="Transaction Type field not valid (.6)."
"RTN","IBARXMI",186,0)
 Q
"RTN","IBARXMI",187,0)
 ;
"RTN","IBARXMI",188,0)
ATYPE(IBTYP,IBIO,IBBS) ; used to determine action type
"RTN","IBARXMI",189,0)
 I IBTYP="MT",IBIO="O" Q "DG OPT COPAY NEW"
"RTN","IBARXMI",190,0)
 I IBTYP="MT",IBIO="I" Q "DG INPT COPAY ("_IBBS_") NEW"
"RTN","IBARXMI",191,0)
 I IBTYP="GMT",IBIO="I" Q "DG INPT COPAY ("_IBBS_") NEW"
"RTN","IBARXMI",192,0)
 I IBTYP="LTC",IBIO="O" Q "DG LTC OPT "_IBBS_" NEW"
"RTN","IBARXMI",193,0)
 I IBTYP="LTC",IBIO="I" Q "DG LTC INPT "_IBBS_" NEW"
"RTN","IBARXMI",194,0)
 I IBTYP="FEE",IBIO="O" Q "DG FEE SERVICE (OPT) NEW"
"RTN","IBARXMI",195,0)
 I IBTYP="FEE",IBIO="I" Q "DG FEE SERVICE (INPT) NEW"
"RTN","IBARXMI",196,0)
 I IBTYP="LTC FEE",IBIO="O" Q "DG LTC FEE OPT "_IBBS_" NEW"
"RTN","IBARXMI",197,0)
 I IBTYP="LTC FEE",IBIO="I" Q "DG LTC FEE INPT "_IBBS_" NEW"
"RTN","IBARXMI",198,0)
 I IBTYP="MT PERDIEM" Q "DG INPT PER DIEM NEW"
"RTN","IBARXMI",199,0)
 I IBTYP="MT",IBBS="OBS" Q "DG OBSERVATION COPAY NEW"
"RTN","IBARXMI",200,0)
 I IBTYP="CHAMPUS",IBIO="O" Q "DG TRICARE OPT COPAY NEW"
"RTN","IBARXMI",201,0)
 I IBTYP="CHAMPUS",IBIO="I" Q "DG TRICARE INPT COPAY NEW"
"RTN","IBARXMI",202,0)
 Q -1
"RTN","IBARXMI",203,0)
 ;
"RTN","IBARXMN")
0^3^B37752322^B32880126
"RTN","IBARXMN",1,0)
IBARXMN ;LL/ELZ-PHARMCAY COPAY CAP RX PROCESSING ;17-NOV-2000
"RTN","IBARXMN",2,0)
 ;;2.0;INTEGRATED BILLING;**150,158,156,186,308**;21-MAR-94
"RTN","IBARXMN",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBARXMN",4,0)
 ;
"RTN","IBARXMN",5,0)
TRACK(DFN) ; checks out patient if tracked already
"RTN","IBARXMN",6,0)
 I '$D(^IBAM(354.7,DFN,0)) D QUERY(DFN,$E(DT,1,5)_"00")
"RTN","IBARXMN",7,0)
 Q
"RTN","IBARXMN",8,0)
 ;
"RTN","IBARXMN",9,0)
QUERY(DFN,IBDT) ; if there are treating facilities, perform query
"RTN","IBARXMN",10,0)
 N IBT,IBX,IBS,IBD,IBB,DIE,DA,DR,X,IBA,IBP,IBZ,IBY,IBFD,IBTD
"RTN","IBARXMN",11,0)
 S IBB=0,IBP=$$PRIORITY^IBARXMU(DFN)
"RTN","IBARXMN",12,0)
 D ADD^IBARXMU(DFN) Q:'IBP
"RTN","IBARXMN",13,0)
 S IBT=$$TFL^IBARXMU(DFN,.IBT) Q:'IBT
"RTN","IBARXMN",14,0)
 D CAP^IBARXMC(IBDT,IBP,.IBZ,.IBY,.IBFD,.IBTD) I 'IBY,'IBZ Q
"RTN","IBARXMN",15,0)
 I 'IBFD!('IBTD) Q
"RTN","IBARXMN",16,0)
 W !!,"This patient has never had billing information tracked before",!,"Now querying other facilities..."
"RTN","IBARXMN",17,0)
 S IBX=0 F  S IBX=$O(IBT(IBX)) Q:IBX<1  W !,"Now sending query to ",$P(IBT(IBX),"^",2)," ..." D
"RTN","IBARXMN",18,0)
 . ;
"RTN","IBARXMN",19,0)
 . ; need to query every month in the cap billing period
"RTN","IBARXMN",20,0)
 . S IBDT=IBFD D  F  S IBDT=$$NEXTMO^IBARXMC(IBDT) Q:IBDT>IBTD  D
"RTN","IBARXMN",21,0)
 .. D UQUERY^IBARXMU(DFN,$E(IBDT,1,5)_"00",IBX,.IBD)
"RTN","IBARXMN",22,0)
 .. ;
"RTN","IBARXMN",23,0)
 .. ; error returned
"RTN","IBARXMN",24,0)
 .. I -1=+$G(IBD,"-1") Q
"RTN","IBARXMN",25,0)
 .. ;
"RTN","IBARXMN",26,0)
 .. ; loop through query and file data
"RTN","IBARXMN",27,0)
 .. S X=0 F  S X=$O(IBD(X)) Q:X<1  S:$E(IBD(X),1,4)=+IBT(IBX)_"-" IBA=$$ADD(DFN,IBD(X)),IBB=IBB+$P(IBD(X),"^",11)
"RTN","IBARXMN",28,0)
 .. K IBD
"RTN","IBARXMN",29,0)
 ;
"RTN","IBARXMN",30,0)
 Q
"RTN","IBARXMN",31,0)
 ;
"RTN","IBARXMN",32,0)
ACCT(DFN,IBB,IBU,IBDT,IBS) ; - update amount in patient account
"RTN","IBARXMN",33,0)
 ; IBB = amount to be added to pt account (billed)
"RTN","IBARXMN",34,0)
 ; IBU = amount to be added to pt account (not billable)
"RTN","IBARXMN",35,0)
 ; IBDT = effective date for amount
"RTN","IBARXMN",36,0)
 ; IBS = flag, if passed the amounts are totals not to be added to what is already there
"RTN","IBARXMN",37,0)
 ;
"RTN","IBARXMN",38,0)
 N DIE,DR,DO,DIC,DA,Y,IBA
"RTN","IBARXMN",39,0)
 ;
"RTN","IBARXMN",40,0)
 S DA(1)=DFN,IBDT=$E(IBDT,1,5)_"00"
"RTN","IBARXMN",41,0)
 ;
"RTN","IBARXMN",42,0)
 ; check to see if there is already that mo/year there and add if not
"RTN","IBARXMN",43,0)
 S DA=$O(^IBAM(354.7,DFN,1,"B",IBDT,0))
"RTN","IBARXMN",44,0)
 I 'DA S DIC="^IBAM(354.7,"_DFN_",1,",DIC(0)="",X=IBDT D FILE^DICN S DA=+Y
"RTN","IBARXMN",45,0)
 ;
"RTN","IBARXMN",46,0)
 ; now edit and add the new amount
"RTN","IBARXMN",47,0)
 S IBA=^IBAM(354.7,DFN,1,DA,0)
"RTN","IBARXMN",48,0)
 S:'$D(IBS) IBB=IBB+$P(IBA,"^",2),IBU=IBU+$P(IBA,"^",4)
"RTN","IBARXMN",49,0)
 L +^IBAM(354.7,DFN):10 I '$T Q
"RTN","IBARXMN",50,0)
 S DIE="^IBAM(354.7,"_DFN_",1,",DR=".02///^S X=IBB;.04///^S X=IBU"
"RTN","IBARXMN",51,0)
 D ^DIE L -^IBAM(354.7,DFN)
"RTN","IBARXMN",52,0)
 ;
"RTN","IBARXMN",53,0)
 D FLAG^IBARXMC(DFN,IBDT)
"RTN","IBARXMN",54,0)
 ;
"RTN","IBARXMN",55,0)
 Q
"RTN","IBARXMN",56,0)
 ;
"RTN","IBARXMN",57,0)
UPCHG(IBX,IBU,IBC) ; update a charge (from one that is on hold only)
"RTN","IBARXMN",58,0)
 ; IBX = ien in 354.71
"RTN","IBARXMN",59,0)
 ; IBU = updated # of units
"RTN","IBARXMN",60,0)
 ; IBC = updated charge amount
"RTN","IBARXMN",61,0)
 N IBO,IBY,DIE,DA,DR
"RTN","IBARXMN",62,0)
 W !,"Updating copay cap account records..."
"RTN","IBARXMN",63,0)
 S IBO=^IBAM(354.71,IBX,0)
"RTN","IBARXMN",64,0)
 ;
"RTN","IBARXMN",65,0)
 ; first update 354.71 entry
"RTN","IBARXMN",66,0)
 S DIE="^IBAM(354.71,",DA=IBX,DR=".07///^S X=IBU;.08///^S X=IBC;.11///^S X=IBC;.05///P"
"RTN","IBARXMN",67,0)
 L +^IBAM(354.71,DA):10 I '$T W !!,"Unable to update records, entry locked!!" Q
"RTN","IBARXMN",68,0)
 D ^DIE L -^IBAM(354.71,DA)
"RTN","IBARXMN",69,0)
 ;
"RTN","IBARXMN",70,0)
 ; now update account
"RTN","IBARXMN",71,0)
 D ACCT($P(IBO,"^",2),IBC-$P(IBO,"^",11),0,$P(IBO,"^",3))
"RTN","IBARXMN",72,0)
 ;
"RTN","IBARXMN",73,0)
 ; send to IDX
"RTN","IBARXMN",74,0)
 I $$SWSTAT^IBBAPI S IBO=$$QUEUE^VDEFQM("DFT^P03","SUBTYPE=CPIN^IEN="_IBX,,"PFSS OUTBOUND")
"RTN","IBARXMN",75,0)
 ;
"RTN","IBARXMN",76,0)
 ; finally clean transmission record
"RTN","IBARXMN",77,0)
 D CLEAN(IBX)
"RTN","IBARXMN",78,0)
 ;
"RTN","IBARXMN",79,0)
 Q
"RTN","IBARXMN",80,0)
CLEAN(IBX) ; clean out transmission record
"RTN","IBARXMN",81,0)
 N IBA,DA,DIK,X,Y
"RTN","IBARXMN",82,0)
 S IBA=0 F  S IBA=$O(^IBAM(354.71,IBX,1,IBA)) Q:IBA<1  S DA=IBA,DA(1)=IBX,DIK="^IBAM(354.71,"_IBX_",1," D ^DIK
"RTN","IBARXMN",83,0)
 Q
"RTN","IBARXMN",84,0)
 ;
"RTN","IBARXMN",85,0)
CANCEL(DFN,IBX,IBY,IBR) ; cancel a transaction (flags old one and creates a new one)
"RTN","IBARXMN",86,0)
 ; IBX is the ien from 354.71, IBY is the error flag (y) passed by ref
"RTN","IBARXMN",87,0)
 ; IBR is optional, it is the reason to cancel
"RTN","IBARXMN",88,0)
 ;
"RTN","IBARXMN",89,0)
 N IBN,IBD,DIE,DA,DR,X,Y
"RTN","IBARXMN",90,0)
 ;
"RTN","IBARXMN",91,0)
 ; is IBX there or is this an old transaction
"RTN","IBARXMN",92,0)
 S IBD=$G(^IBAM(354.71,+IBX,0)) I 'IBD S IBN=0 G CANQ
"RTN","IBARXMN",93,0)
 S IBAMP=$P($G(^IBAM(354.71,+$P(IBD,"^",10),0)),"^")
"RTN","IBARXMN",94,0)
 ;
"RTN","IBARXMN",95,0)
 ; set flag for at or above cap
"RTN","IBARXMN",96,0)
 S:'$D(IBCAP) IBCAP=+$P($G(^IBAM(354.7,DFN,1,+$O(^IBAM(354.7,DFN,1,"B",$E($P(IBD,"^",3),1,5)_"00",0)),0)),"^",3)
"RTN","IBARXMN",97,0)
 ;
"RTN","IBARXMN",98,0)
 ; flag old one as canceled, and clean out transmission record.
"RTN","IBARXMN",99,0)
 S DIE="^IBAM(354.71,",DA=IBX,DR=".05///Y;.16///"_DUZ_";.17///"_$$NOW^XLFDT_";.19///"_$S($D(IBR):IBR,1:16)
"RTN","IBARXMN",100,0)
 L +^IBAM(354.71,IBX):5 I '$T S IBY="-1^IB318",IBN=0 G CANQ
"RTN","IBARXMN",101,0)
 D ^DIE L -^IBAM(354.71,IBX)
"RTN","IBARXMN",102,0)
 D CLEAN(IBX)
"RTN","IBARXMN",103,0)
 ;
"RTN","IBARXMN",104,0)
 ; send to IDX
"RTN","IBARXMN",105,0)
 I $$SWSTAT^IBBAPI S IBO=$$QUEUE^VDEFQM("DFT^P03","SUBTYPE=CPIN^IEN="_IBX,,"PFSS OUTBOUND")
"RTN","IBARXMN",106,0)
 ;
"RTN","IBARXMN",107,0)
 ; now create new transaction to adjust amounts
"RTN","IBARXMN",108,0)
 ; first set up parent, clear out .01, set facility, - dollar amt, status
"RTN","IBARXMN",109,0)
 S $P(IBD,"^",10)=$P(IBD,"^"),$P(IBD,"^")="",$P(IBD,"^",13)=+$P($$FAC^IBARXMU(+$$SITE^IBARXMU),"^",2),$P(IBD,"^",11)=-$P(IBD,"^",11),$P(IBD,"^",12)=-$P(IBD,"^",12),$P(IBD,"^",5)="P"
"RTN","IBARXMN",110,0)
 S IBN=$$ADD(DFN,$P(IBD,"^",1,13)) I IBN<1 S IBY="-1^IB316"
"RTN","IBARXMN",111,0)
 ;
"RTN","IBARXMN",112,0)
 ; set up variable to check for cap and re-bill if necessary
"RTN","IBARXMN",113,0)
 S IBCAP($E($P(IBD,"^",3),1,5)_"00")=""
"RTN","IBARXMN",114,0)
 ;
"RTN","IBARXMN",115,0)
 ; now check to see if the patient has previously reached cap and has some unbilled (only if not updating, check for flag)
"RTN","IBARXMN",116,0)
 ;I '$G(IBUPDATE) D CANCEL^IBARXMC(DFN,$P(IBD,"^",3))
"RTN","IBARXMN",117,0)
 ;D CANCEL^IBARXMC(DFN,$P(IBD,"^",3))
"RTN","IBARXMN",118,0)
 ;
"RTN","IBARXMN",119,0)
CANQ Q IBN
"RTN","IBARXMN",120,0)
 ;
"RTN","IBARXMN",121,0)
ADD(DFN,IBD,IBT,IBPFSS) ; adds a transaction to 354.71
"RTN","IBARXMN",122,0)
 ; IBD = data in 354.71 format, if $p(IBD,"^")="" create new number
"RTN","IBARXMN",123,0)
 ; IBT = action type pointer (optional, but needed for local site)
"RTN","IBARXMN",124,0)
 ; returns ien in 354.71
"RTN","IBARXMN",125,0)
 ; IBPFSS optional to indicate came from PFSS system
"RTN","IBARXMN",126,0)
 ;
"RTN","IBARXMN",127,0)
 N IBA,DIC,X,IBS,IBN
"RTN","IBARXMN",128,0)
 Q:'$G(DFN)
"RTN","IBARXMN",129,0)
 D ADD^IBARXMU(DFN)
"RTN","IBARXMN",130,0)
 I $P(IBD,"^") S IBA=$O(^IBAM(354.71,"B",$P(IBD,"^"),0)) D  Q IBA
"RTN","IBARXMN",131,0)
 . ;I IBA D TRANF(DFN,IBA,IBD,$G(IBT)) Q
"RTN","IBARXMN",132,0)
 . I 'IBA S DIC="^IBAM(354.71,",DIC(0)="",X=$P(IBD,"^") D FILE^DICN S IBA=+Y
"RTN","IBARXMN",133,0)
 . I IBA>0 D TRANF(DFN,IBA,IBD,$G(IBT)),ACCT(DFN,$P(IBD,"^",11),$P(IBD,"^",12),$P(IBD,"^",3))
"RTN","IBARXMN",134,0)
 K DO S DIC="^IBAM(354.71,",DIC(0)="",IBS=+$P($$SITE^IBARXMU,"^",3)
"RTN","IBARXMN",135,0)
 ;
"RTN","IBARXMN",136,0)
 ; get next number and file
"RTN","IBARXMN",137,0)
 F  L +^IBAM(354.71,0):20 I $T S IBN=$P(^IBAM(354.71,0),"^",3) S:'IBN IBN=0 Q
"RTN","IBARXMN",138,0)
 I +$G(^IBAM(354.71,+IBN,0))'=IBS,IBN F  S IBN=$O(^IBAM(354.71,IBN),-1) Q:IBS=+$G(^IBAM(354.71,IBN,0))!('IBN)
"RTN","IBARXMN",139,0)
 S IBN=$P($P($G(^IBAM(354.71,+IBN,0)),"^"),"-",2)+1 F IBN=IBN:1 S X=IBS_"-"_IBN I '$D(^IBAM(354.71,"B",X)) L +^IBAM(354.71,"B",X):10 I $T D FILE^DICN L -^IBAM(354.71,"B",X) I Y>0 S IBA=+Y Q
"RTN","IBARXMN",140,0)
 L -^IBAM(354.71,0)
"RTN","IBARXMN",141,0)
 ;
"RTN","IBARXMN",142,0)
 D TRANF(DFN,IBA,IBD,$G(IBT),$G(IBPFSS)),ACCT(DFN,$P(IBD,"^",11),$P(IBD,"^",12),$P(IBD,"^",3))
"RTN","IBARXMN",143,0)
 ;I '$G(IBUPDATE) D CANCEL^IBARXMC(DFN,$P(IBD,"^",3))
"RTN","IBARXMN",144,0)
 ;
"RTN","IBARXMN",145,0)
 Q IBA
"RTN","IBARXMN",146,0)
 ;
"RTN","IBARXMN",147,0)
TRANF(DFN,IBA,IBD,IBT,IBPFSS) ; file transaction data in 354.71
"RTN","IBARXMN",148,0)
 ; DFN = patient's dfn
"RTN","IBARXMN",149,0)
 ; IBA = ien from file 354.71
"RTN","IBARXMN",150,0)
 ; IBD = data in global file format for file 354.71
"RTN","IBARXMN",151,0)
 ; piece 2 will be changed to dfn
"RTN","IBARXMN",152,0)
 ; pieces 10 and 13 will be resolved
"RTN","IBARXMN",153,0)
 ; pieces 14,15 will be created new if they don't exist
"RTN","IBARXMN",154,0)
 ; pieces 16,17 will be created new
"RTN","IBARXMN",155,0)
 ; piece 18 will be filled if not $g(IBT)=""
"RTN","IBARXMN",156,0)
 ;
"RTN","IBARXMN",157,0)
 N X,Y,IBZ,IBN,D,IBU,DIC,IBPAR,DA,DIK Q:'$D(^IBAM(354.71,IBA,0))
"RTN","IBARXMN",158,0)
 ;
"RTN","IBARXMN",159,0)
 X $S($P(IBD,"^")=$P(IBD,"^",10):"S $P(IBD,""^"",10)=IBA",1:"S X=$P(IBD,""^"",10),D=""B"",DIC=""^IBAM(354.71,"",DIC(0)=""OX"" D IX^DIC S $P(IBD,""^"",10)=$S(Y>0:+Y,1:"""")")
"RTN","IBARXMN",160,0)
 S IBPAR=$$PARENT^IBARXMC(+$P(IBD,"^",10)) S:IBPAR $P(IBD,"^",10)=IBPAR
"RTN","IBARXMN",161,0)
 S DIC="^DIC(4,",DIC(0)="O",X=$P(IBD,"^",13),D="D" D IX^DIC
"RTN","IBARXMN",162,0)
 S IBS=$S(Y>0:+Y,1:"")
"RTN","IBARXMN",163,0)
 S IBN=$$NOW^XLFDT,IBU=$P(^IBAM(354.71,IBA,0),"^",14,15)
"RTN","IBARXMN",164,0)
 ;
"RTN","IBARXMN",165,0)
 S $P(^IBAM(354.71,IBA,0),"^",2,18)=DFN_"^"_$P(IBD,"^",3,12)_"^"_IBS_"^"_$S(+IBU:+IBU,$D(IBDUZ):IBDUZ,1:DUZ)_"^"_$S($P(IBU,"^",2):$P(IBU,"^",2),1:IBN)_"^"_$S($D(IBDUZ):IBDUZ,1:DUZ)_"^"_IBN_$S($G(IBT):"^"_IBT,1:"")
"RTN","IBARXMN",166,0)
 S DA=IBA,DIK="^IBAM(354.71," D IX^DIK
"RTN","IBARXMN",167,0)
 I $$SWSTAT^IBBAPI,'$G(IBPFSS) S X=$$QUEUE^VDEFQM("DFT^P03","SUBTYPE=CPIN^IEN="_IBA,,"PFSS OUTBOUND") ; use IBA as the IEN
"RTN","IBARXMN",168,0)
 Q
"RTN","IBARXMR")
0^5^B3221986^B1920980
"RTN","IBARXMR",1,0)
IBARXMR ;LL/ELZ - PHARMCAY COPAY CAP RPC STUFF ;17-NOV-2000
"RTN","IBARXMR",2,0)
 ;;2.0;INTEGRATED BILLING;**150,158,156,308**;21-MAR-94
"RTN","IBARXMR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBARXMR",4,0)
 ;
"RTN","IBARXMR",5,0)
RQUERY(IBR,IBICN,IBM) ; remote query call
"RTN","IBARXMR",6,0)
 ; called from rpc IBARXM QUERY ONLY
"RTN","IBARXMR",7,0)
 N DFN
"RTN","IBARXMR",8,0)
 S DFN=$$DFN^IBARXMU(IBICN) I 'DFN S IBY(0)=0 Q
"RTN","IBARXMR",9,0)
 D QUERY(.IBR,DFN,IBM)
"RTN","IBARXMR",10,0)
 S IBR=$NA(IBY)
"RTN","IBARXMR",11,0)
 Q
"RTN","IBARXMR",12,0)
 ;
"RTN","IBARXMR",13,0)
QUERY(IBR,DFN,IBM) ; call for querying data
"RTN","IBARXMR",14,0)
 ; IBR = where results are returned
"RTN","IBARXMR",15,0)
 ; IBM = month/year for query
"RTN","IBARXMR",16,0)
 N IBX,IBZ,IBS,IBC
"RTN","IBARXMR",17,0)
 K IBR
"RTN","IBARXMR",18,0)
 ;
"RTN","IBARXMR",19,0)
 S IBS=+$P($$SITE^IBARXMU,"^",3)
"RTN","IBARXMR",20,0)
 S (IBX,IBC)=0 F  S IBX=$O(^IBAM(354.71,"AD",DFN,IBM,IBX)) Q:IBX<1  D
"RTN","IBARXMR",21,0)
 . S IBZ=^IBAM(354.71,IBX,0) Q:(+IBZ)'=IBS
"RTN","IBARXMR",22,0)
 . S IBC=IBC+1
"RTN","IBARXMR",23,0)
 . D SENDF^IBARXMU(.IBZ)
"RTN","IBARXMR",24,0)
 . S IBR(IBC)=IBZ
"RTN","IBARXMR",25,0)
 S IBR(0)=IBC
"RTN","IBARXMR",26,0)
 Q
"RTN","IBARXMR",27,0)
 ;
"RTN","IBARXMR",28,0)
TRANS(IBR,IBICN,IBD) ; remote procedure call for receiving transaction data (new or updated)
"RTN","IBARXMR",29,0)
 ; called from rpc IBARXM TRANS DATA
"RTN","IBARXMR",30,0)
 ; IBICN = the patient's ICN
"RTN","IBARXMR",31,0)
 ; IBR = return acceptance response
"RTN","IBARXMR",32,0)
 ; IBD = data being received on a transaction
"RTN","IBARXMR",33,0)
 N DFN,IBA
"RTN","IBARXMR",34,0)
 S DFN=$$DFN^IBARXMU(IBICN)
"RTN","IBARXMR",35,0)
 S IBR=$S(DFN>0:$$ADD^IBARXMN(DFN,IBD),1:0)
"RTN","IBARXMR",36,0)
 Q
"RTN","IBARXMR",37,0)
 ;
"RTN","IBARXMR",38,0)
BILL(IBR,IBICN,IBT,IBB) ; remote procedure call to indicate a bill should be
"RTN","IBARXMR",39,0)
 ; billed after all, this occurs when a copay bill was cancelled and
"RTN","IBARXMR",40,0)
 ; the patient had previously reached his cap and the bill indicated was
"RTN","IBARXMR",41,0)
 ; not billed.
"RTN","IBARXMR",42,0)
 ; called from rpc IBARXM TRANS BILL
"RTN","IBARXMR",43,0)
 ; IBR = return acceptance response
"RTN","IBARXMR",44,0)
 ; IBICN = patient's icn
"RTN","IBARXMR",45,0)
 ; IBT = 354.71 transaction number to bill
"RTN","IBARXMR",46,0)
 ; IBB = amount to bill
"RTN","IBARXMR",47,0)
 N DFN
"RTN","IBARXMR",48,0)
 S DFN=$$DFN^IBARXMU(IBICN) I 'DFN S IBR="-1^Patient not found" Q
"RTN","IBARXMR",49,0)
 ;
"RTN","IBARXMR",50,0)
 ; if PFSS/IDX transaction call VDEF and quit
"RTN","IBARXMR",51,0)
 I $$SWSTAT^IBBAPI,$P($G(^IBAM(354.71,+^IBAM(354.71,"B",IBT,0),0)),"^",20) S IBR=$$QUEUE^VDEFQM("DFT^P03","SUBTYPE=CPBL^IEN="_IBT_":"_IBB,,"PFSS OUTBOUND") Q
"RTN","IBARXMR",52,0)
 ;
"RTN","IBARXMR",53,0)
 D BILL^IBARXMB(IBT,IBB)
"RTN","IBARXMR",54,0)
 S IBR=1
"RTN","IBARXMR",55,0)
 Q
"RTN","IBARXPFS")
0^2^B33725607
"RTN","IBARXPFS",1,0)
IBARXPFS ;OAK/ELZ - PFSS ROUTINE FOR INTER-FACILITY RX COPAY ;23-MAR-05
"RTN","IBARXPFS",2,0)
 ;;2.0;INTEGRATED BILLING;**308**;21-MAR-94
"RTN","IBARXPFS",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBARXPFS",4,0)
 ;
"RTN","IBARXPFS",5,0)
NEW(DFN) ; this entry point will check patient cap knowledge status and queue to look up as necessary
"RTN","IBARXPFS",6,0)
 N ZTSK,ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSAVE,X,Y,POP
"RTN","IBARXPFS",7,0)
 I $D(^IBAM(354.7,DFN,0)) Q
"RTN","IBARXPFS",8,0)
 L +^IBAM(DFN):5 I '$T Q
"RTN","IBARXPFS",9,0)
 S ZTRTN="DQNEW^IBARXPFS",ZTDESC="IB INTER-FACILITY CAP QUERY",ZTDTH=$$NOW^XLFDT,(ZTIO,ZTSAVE("DFN"),ZTSAVE("IBADT"))=""
"RTN","IBARXPFS",10,0)
 D ^%ZTLOAD
"RTN","IBARXPFS",11,0)
 L -^IBAM(DFN)
"RTN","IBARXPFS",12,0)
 Q
"RTN","IBARXPFS",13,0)
 ;
"RTN","IBARXPFS",14,0)
DQNEW ; tasked entry point for cap information query
"RTN","IBARXPFS",15,0)
 I $D(^IBAM(354.7,DFN,0)) Q
"RTN","IBARXPFS",16,0)
 L +^IBAM(DFN):5 I '$T Q
"RTN","IBARXPFS",17,0)
 D ADD^IBARXMU(DFN)
"RTN","IBARXPFS",18,0)
BBE ; back billing entry assumes IBADT
"RTN","IBARXPFS",19,0)
 N IBDT,IBT,IBX,IBS,IBD,IBB,DIE,DA,DR,X,IBA,IBP,IBZ,IBY,IBFD,IBTD
"RTN","IBARXPFS",20,0)
 S IBDT=$E($S($G(IBADT):IBADT,1:DT),1,5)_"00"
"RTN","IBARXPFS",21,0)
 S IBB=0,IBP=$$PRIORITY^IBARXMU(DFN)
"RTN","IBARXPFS",22,0)
 S IBT=$$TFL^IBARXMU(DFN,.IBT) G:'IBT DQNEWQ
"RTN","IBARXPFS",23,0)
 D CAP^IBARXMC(IBDT,IBP,.IBZ,.IBY,.IBFD,.IBTD) I 'IBY,'IBZ G DQNEWQ
"RTN","IBARXPFS",24,0)
 I 'IBFD!('IBTD) G DQNEWQ
"RTN","IBARXPFS",25,0)
 S IBX=0 F  S IBX=$O(IBT(IBX)) Q:IBX<1  D
"RTN","IBARXPFS",26,0)
 . ;
"RTN","IBARXPFS",27,0)
 . ; need to query every month in the cap billing period
"RTN","IBARXPFS",28,0)
 . S IBDT=IBFD D  F  S IBDT=$$NEXTMO^IBARXMC(IBDT) Q:IBDT>IBTD  D
"RTN","IBARXPFS",29,0)
 .. D UQUERY^IBARXMU(DFN,$E(IBDT,1,5)_"00",IBX,.IBD)
"RTN","IBARXPFS",30,0)
 .. ;
"RTN","IBARXPFS",31,0)
 .. ; error returned
"RTN","IBARXPFS",32,0)
 .. I -1=+$G(IBD,"-1") Q
"RTN","IBARXPFS",33,0)
 .. ;
"RTN","IBARXPFS",34,0)
 .. ; loop through query and file data
"RTN","IBARXPFS",35,0)
 .. S X=0 F  S X=$O(IBD(X)) Q:X<1  S:$E(IBD(X),1,4)=(+IBT(IBX)_"-") IBA=$$ADD^IBARXMN(DFN,IBD(X)),IBB=IBB+$P(IBD(X),"^",11)
"RTN","IBARXPFS",36,0)
 .. K IBD
"RTN","IBARXPFS",37,0)
DQNEWQ ;
"RTN","IBARXPFS",38,0)
 L -^IBAM(DFN)
"RTN","IBARXPFS",39,0)
 ;
"RTN","IBARXPFS",40,0)
 Q
"RTN","IBARXPFS",41,0)
 ;
"RTN","IBARXPFS",42,0)
MSG ; receives HL7 message from COTS product and files in 354.71 or others
"RTN","IBARXPFS",43,0)
 N IBMSG,IBHEADER,IBICN,IBDFN,IBSSN,IBCLAIM,IBALIAS,IBSTAT,IBTYPE,IBINST
"RTN","IBARXPFS",44,0)
 N IBRXDAT,IBRESLT,IB35471,IB351,IB35181,IB350,IBMTDT21,IBCODE,SEG,DFN,HLA
"RTN","IBARXPFS",45,0)
 ;
"RTN","IBARXPFS",46,0)
 ;parse message
"RTN","IBARXPFS",47,0)
 S IBSTAT=$$STARTMSG^HLPRS(.IBMSG,HLMTIENS,.IBHEADER)
"RTN","IBARXPFS",48,0)
 I 'IBSTAT S HLERR="Unable to start parse of message" G NEWTRANQ
"RTN","IBARXPFS",49,0)
 ;
"RTN","IBARXPFS",50,0)
 F  Q:'$$NEXTSEG^HLPRS(.IBMSG,.SEG)  D
"RTN","IBARXPFS",51,0)
 . F IBT=3:1 S IBD=$P($T(HL7DATA+IBT),";",4) Q:IBD=""  D
"RTN","IBARXPFS",52,0)
 . . I $P(IBD,"^",2)=SEG("SEGMENT TYPE") D
"RTN","IBARXPFS",53,0)
 . . . S @$P(IBD,"^")=$$GET^HLOPRS(.SEG,$P(IBD,"^",3),$P(IBD,"^",4),$P(IBD,"^",5),$P(IBD,"^",6))
"RTN","IBARXPFS",54,0)
 . . . S IBCODE=$P(IBD,"^",7,99)
"RTN","IBARXPFS",55,0)
 . . . I $L(IBCODE),$L(@$P(IBD,"^")) S X=@$P(IBD,"^") X IBCODE S @$P(IBD,"^")=X
"RTN","IBARXPFS",56,0)
 ;
"RTN","IBARXPFS",57,0)
 ;check out data received from message
"RTN","IBARXPFS",58,0)
 S DFN=$$PATIENT($G(IBICN),$G(IBDFN),$G(IBSSN),$G(IBVACLM),$G(IBALIAS))
"RTN","IBARXPFS",59,0)
 G:'DFN NEWTRANQ
"RTN","IBARXPFS",60,0)
 S IBTYPE=$G(IBTYPE)
"RTN","IBARXPFS",61,0)
 ;
"RTN","IBARXPFS",62,0)
 D @($S(IBTYPE="IN":"35471",IBTYPE="MT":"351",IBTYPE="LB":"35181",IBTYPE="ML":"350",IBTYPE="ST":"QUERYVA",IBTYPE="BL":"BILLVA",1:"ERR")_"^IBARXMI")
"RTN","IBARXPFS",63,0)
 ;
"RTN","IBARXPFS",64,0)
 ;
"RTN","IBARXPFS",65,0)
NEWTRANQ ;
"RTN","IBARXPFS",66,0)
 S HLA("HLA",1)="MSA"_HL("FS")_$S('$D(HLERR):"AA",1:"AE")_HL("FS")_HL("MID")
"RTN","IBARXPFS",67,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.IBRESLT)
"RTN","IBARXPFS",68,0)
 Q
"RTN","IBARXPFS",69,0)
 ;
"RTN","IBARXPFS",70,0)
PATIENT(IBICN,IBDFN,IBSSN,IBVACLM,IBALIAS) ; this function will receive
"RTN","IBARXPFS",71,0)
 ; several patient data elements and validate them.  Assuming the data
"RTN","IBARXPFS",72,0)
 ; meets expected requirements, the function will return the patient's
"RTN","IBARXPFS",73,0)
 ; DFN.  The requirement is ICN is a must, the patient must also match
"RTN","IBARXPFS",74,0)
 ; at least 2 other data elements.
"RTN","IBARXPFS",75,0)
 ;
"RTN","IBARXPFS",76,0)
 N DFN,IBMATCH,IBX
"RTN","IBARXPFS",77,0)
 S (IBMATCH,IBX)=0,HLERR=""
"RTN","IBARXPFS",78,0)
 S DFN=$$DFN^IBARXMU(IBICN) I 'DFN S HLERR="Invalid ICN: "_IBICN G PATQ
"RTN","IBARXPFS",79,0)
 ;
"RTN","IBARXPFS",80,0)
 I DFN=IBDFN S IBMATCH=1
"RTN","IBARXPFS",81,0)
 E  S HLERR=DFN_" Doesn't match ICN DFN "_IBDFN
"RTN","IBARXPFS",82,0)
 ;
"RTN","IBARXPFS",83,0)
 I IBSSN,$P($G(^DPT(DFN,0)),"^",9)=IBSSN S IBMATCH=IBMATCH+1
"RTN","IBARXPFS",84,0)
 E  S HLERR=HLERR_" SSN Mismatch:"_IBSSN
"RTN","IBARXPFS",85,0)
 I IBMATCH>1 G PATQ
"RTN","IBARXPFS",86,0)
 ;
"RTN","IBARXPFS",87,0)
 I $L(IBVACLM),$P($G(^DPT(DFN,.31)),"^",3)=IBVACLM S IBMATCH=IBMATCH+1
"RTN","IBARXPFS",88,0)
 E  S:$L(IBVACLM) HLERR=HLERR_" VA Claim Mismatch:"_IBVACLM
"RTN","IBARXPFS",89,0)
 I IBMATCH>1 G PATQ
"RTN","IBARXPFS",90,0)
 ;
"RTN","IBARXPFS",91,0)
 F  S IBX=$O(^DPT(DFN,.01,IBX)) Q:'IBX!(IBMATCH>1)  I $L(IBALIAS),$P($G(^DPT(DFN,.01,IBX,0)),"^",2)=IBALIAS S IBMATCH=IBMATCH+1 Q
"RTN","IBARXPFS",92,0)
 I IBMATCH<2 S DFN=0,HLERR=HLERR_" ALIAS Mismatch"
"RTN","IBARXPFS",93,0)
PATQ ;
"RTN","IBARXPFS",94,0)
 I DFN K HLERR
"RTN","IBARXPFS",95,0)
 Q DFN
"RTN","IBARXPFS",96,0)
 ;
"RTN","IBARXPFS",97,0)
HL7DATA ; hl7 data mapping
"RTN","IBARXPFS",98,0)
 ; format:  description ; IB Variable ^ segment ^ seq ^ comp ^ subcomp ^
"RTN","IBARXPFS",99,0)
 ;          extract code
"RTN","IBARXPFS",100,0)
 ;;patient icn;IBICN^PID^3^1^1^1
"RTN","IBARXPFS",101,0)
 ;;patient dfn;IBDFN^PID^3^1^1^2^S IBINST=$E(X,1,3),X=$E(X,4,99)
"RTN","IBARXPFS",102,0)
 ;;patient ssn;IBSSN^PID^3^1^1^3
"RTN","IBARXPFS",103,0)
 ;;patient va claim;IBVACLM^PID^3^1^1^4
"RTN","IBARXPFS",104,0)
 ;;patient alias ssn;IBALIAS^PID^3^1^1^5
"RTN","IBARXPFS",105,0)
 ;;receiver trans type;IBTYPE^FT1^6
"RTN","IBARXPFS",106,0)
 ;;transaction number;IB35471(.01)^FT1^2
"RTN","IBARXPFS",107,0)
 ;;trans eff date;IB35471(.03)^FT1^4^1^1^^S X=$$FMDATE^HLFNC(X)
"RTN","IBARXPFS",108,0)
 ;;trans status;IB35471(.05)^FT1^8
"RTN","IBARXPFS",109,0)
 ;;rx number;IB35471(.091)^RXE^15
"RTN","IBARXPFS",110,0)
 ;;refill number;IB35471(.092)^RXE^12
"RTN","IBARXPFS",111,0)
 ;;units;IB35471(.07)^FT1^12^5^1
"RTN","IBARXPFS",112,0)
 ;;total charge;IB35471(.08)^FT1^12^1^1
"RTN","IBARXPFS",113,0)
 ;;parent transaction;IB35471(.1)^FT1^9
"RTN","IBARXPFS",114,0)
 ;;billed amount;IB35471(.11)^FT1^11^1^1
"RTN","IBARXPFS",115,0)
 ;;unbilled amount;IB35471(.12)^FT1^15^1^1
"RTN","IBARXPFS",116,0)
 ;;mt clock begin date;IB351(.03)^ZMT^35^^^^S X=$$FMDATE^HLFNC(X)
"RTN","IBARXPFS",117,0)
 ;;mt clock status;IB351(.04)^ZMT^36
"RTN","IBARXPFS",118,0)
 ;;1st 90 day amt;IB351(.05)^ZMT^37
"RTN","IBARXPFS",119,0)
 ;;2nd 90 day amt;IB351(.06)^ZMT^38
"RTN","IBARXPFS",120,0)
 ;;3rd 90 day amt;IB351(.07)^ZMT^39
"RTN","IBARXPFS",121,0)
 ;;4th 90 day amt;IB351(.08)^ZMT^40
"RTN","IBARXPFS",122,0)
 ;;number of inpt days;IB351(.09)^ZMT^41
"RTN","IBARXPFS",123,0)
 ;;mt clock end date;IB351(.1)^ZMT^42^^^^S X=$$FMDATE^HLFNC(X)
"RTN","IBARXPFS",124,0)
 ;;ltc clock begin date;IB35181(.03)^ZMT^43^^^^S X=$$FMDATE^HLFNC(X)
"RTN","IBARXPFS",125,0)
 ;;ltc clock end date;IB35181(.04)^ZMT^44^^^^S X=$$FMDATE^HLFNC(X)
"RTN","IBARXPFS",126,0)
 ;;ltc clock status;IB35181(.05)^ZMT^45
"RTN","IBARXPFS",127,0)
 ;;ltc 21 exempt dates;IBMTD21^ZMT^46^^^^S IBMTDT21=$G(IBMTDT21)+1,IBMTDT21(IBMTDT21)=$$FMDATE^HLFNC(X)
"RTN","IBARXPFS",128,0)
 ;;charege type;IB350("TYP")^ZMT^47
"RTN","IBARXPFS",129,0)
 ;;patient type;IB350("IO")^PV1^2
"RTN","IBARXPFS",130,0)
 ;;event date/time;IB350("EDT")^PV1^44^1^^^S X=$$FMDATE^HLFNC(X)
"RTN","IBARXPFS",131,0)
 ;;bed section;IB350("BS")^ZMT^48
"RTN","IBARXPFS",132,0)
 ;;units;IB350(.06)^ZMT^49
"RTN","IBARXPFS",133,0)
 ;;total charge;IB350(.07)^ZMT^50
"RTN","IBARXPFS",134,0)
 ;;event date;IB350(.17)^ZMT^51^^^^S X=$$FMDATE^HLFNC(X)
"RTN","IBARXPFS",135,0)
 ;;from date;IB350(.14)^ZMT^52^^^^S X=$$FMDATE^HLFNC(X)
"RTN","IBARXPFS",136,0)
 ;;to date;IB350(.15)^ZMT^53^^^^S X=$$FMDATE^HLFNC(X)
"RTN","IBARXPFS",137,0)
 ;;stop code;IB350(.2)^ZMT^54
"RTN","IBARXPFS",138,0)
 ;;trans status;IB350(.05)^ZMT^55
"RTN","IBARXPFS",139,0)
 ;;idx visit number;IB350("IDX")^PV1^19^1
"RTN","IBARXPFS",140,0)
 ;;
"RTN","IBARXPFS",141,0)
 ;
"RTN","IBCROE")
0^6^B37147577
"RTN","IBCROE",1,0)
IBCROE ;OAK/ELZ - CHARGE MASTER TO EXCEL OUTPUT ;28-NOV-2005
"RTN","IBCROE",2,0)
 ;;2.0;INTEGRATED BILLING;**308**;21-MAR-94
"RTN","IBCROE",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCROE",4,0)
 ;
"RTN","IBCROE",5,0)
 ; This routine will produce output from Charge Master for the local site in a format that can be imported
"RTN","IBCROE",6,0)
 ; into excel.
"RTN","IBCROE",7,0)
 ; 
"RTN","IBCROE",8,0)
 ; load an Inpatient and a Non-Provider based site for same zip code first
"RTN","IBCROE",9,0)
 ; 
"RTN","IBCROE",10,0)
 ;
"RTN","IBCROE",11,0)
EN ; main option entry point
"RTN","IBCROE",12,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,IBRCVER,IBZIP,POP,%ZIS,IBVERS,ZTRTN,ZTDESC,ZTSAVE,ZTSK
"RTN","IBCROE",13,0)
 ;
"RTN","IBCROE",14,0)
 ;find zip code for extraction
"RTN","IBCROE",15,0)
 S DIR(0)="F^3:3^K:X'?3N X",DIR("A")="Enter a 3 digit zip identifier"
"RTN","IBCROE",16,0)
 S DIR("?")="Enter the first 3 digits of a zip code for which you want to extract data." D ^DIR Q:$D(DIRUT)
"RTN","IBCROE",17,0)
 S IBZIP=Y
"RTN","IBCROE",18,0)
 ;
"RTN","IBCROE",19,0)
 S IBVERS=$$SELVERS Q:'IBVERS
"RTN","IBCROE",20,0)
 ;
"RTN","IBCROE",21,0)
 ; find out where to write output
"RTN","IBCROE",22,0)
 W !!,"Select where you would like the output.  This will be very large and you",!,"should select either a Host File Server (HFS) printer or Current Terminal",!,"(screen capture) to save the output to a file."
"RTN","IBCROE",23,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","IBCROE",24,0)
 I $D(IO("Q")) D  Q
"RTN","IBCROE",25,0)
 . S ZTRTN="DQ^IBCROE",ZTDESC="IB Reasonable Charges Extract"
"RTN","IBCROE",26,0)
 . S (ZTSAVE("IBZIP"),ZTSAVE("IBVERS"))=""
"RTN","IBCROE",27,0)
 . D ^%ZTLOAD D HOME^%ZIS K IO("Q") W !,"QUEUED TASK #",ZTSK
"RTN","IBCROE",28,0)
 ;
"RTN","IBCROE",29,0)
 ;
"RTN","IBCROE",30,0)
DQ ; tasked entry point
"RTN","IBCROE",31,0)
 U IO D EXCEL(IBZIP,IBVERS)
"RTN","IBCROE",32,0)
 ;
"RTN","IBCROE",33,0)
 ;
"RTN","IBCROE",34,0)
 D ^%ZISC
"RTN","IBCROE",35,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","IBCROE",36,0)
 I '$D(ZTQUEUED) D HOME^%ZIS W !,"Done!"
"RTN","IBCROE",37,0)
 ;
"RTN","IBCROE",38,0)
 ;
"RTN","IBCROE",39,0)
 Q
"RTN","IBCROE",40,0)
 ;
"RTN","IBCROE",41,0)
SELVERS() ; get version to extract from user
"RTN","IBCROE",42,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y,IB,IBV,IBVP,IBX,IBVL
"RTN","IBCROE",43,0)
 ; use primary site to list and remove prior to version 2.0 as choices
"RTN","IBCROE",44,0)
 S IBVL=$$VERSITE^IBCRHBRV($P($$SITE^VASITE,"^",3)),IBV=""
"RTN","IBCROE",45,0)
 F X=1:1 Q:'$P(IBVL,",",X)  S:$P(IBVL,",",X)>1.9 IBV=IBV_$S($L($P(IBVL,",",X))>2:$P(IBVL,",",X),1:$P(IBVL,",",X)_".0")_"^"
"RTN","IBCROE",46,0)
 S IBV=$E(IBV,1,$L(IBV)-1)
"RTN","IBCROE",47,0)
 S IBX=0
"RTN","IBCROE",48,0)
 W !!,"Select the version of Reasonable Charges to extract.",!
"RTN","IBCROE",49,0)
 S DIR("?")="Enter a code from the list corresponding to the version of Reasonable Charges to upload.  Must be version 2.0 or greater.  There was no version 2.2 of Reasonable Charges."
"RTN","IBCROE",50,0)
 S DIR(0)="SO^"
"RTN","IBCROE",51,0)
 F IB=1:1:$L(IBV,U) S IBVP=$P(IBV,U,IB),DIR(0)=DIR(0)_+IBVP_":RC version "_IBVP_" eff "_$$FMTE^XLFDT($$VERSDT^IBCRHBRV(+IBVP),"2Z")_" inact "_$$FMTE^XLFDT($$VERSEDT^IBCRHBRV(+IBVP),"2Z")_";"
"RTN","IBCROE",52,0)
 D ^DIR K DIR S:$L(Y)=1 Y=Y_".0" S IBX=+$S(IBV[Y:Y,1:0)
"RTN","IBCROE",53,0)
 Q IBX
"RTN","IBCROE",54,0)
 ;
"RTN","IBCROE",55,0)
 ;
"RTN","IBCROE",56,0)
 ; call at EXEL with zip and version, will print to host file the calculated charges by type
"RTN","IBCROE",57,0)
EXCEL(ZIP,VERS) ;
"RTN","IBCROE",58,0)
 N IB2,IB3,IBZ,COL,IBBI,IBBR,IBBR0,IBCHG,IBCI,IBCI0,IBCM,IBCNT,IBCPT,IBCS,IBCS0,IBCSNM,IBCT,IBDV,IBLNZ,IBMOD,IBMODI,IBNAME,IBPB,IBRG,IBRG0,Z
"RTN","IBCROE",59,0)
 K ^TMP("IBCROE",$J)
"RTN","IBCROE",60,0)
 S IBCNT=0
"RTN","IBCROE",61,0)
 ;
"RTN","IBCROE",62,0)
 S IBCS=0 F  S IBCS=$O(^IBE(363.1,IBCS)) Q:'IBCS  D
"RTN","IBCROE",63,0)
 . S IBCS0=$G(^IBE(363.1,IBCS,0))
"RTN","IBCROE",64,0)
 . ;
"RTN","IBCROE",65,0)
 . S IBCSNM=$P(IBCS0,U,1) Q:$E(IBCSNM,1,3)'="RC-"
"RTN","IBCROE",66,0)
 . S IBBR=+$P(IBCS0,U,2),IBBR0=$G(^IBE(363.3,IBBR,0))
"RTN","IBCROE",67,0)
 . S IBRG=+$P(IBCS0,U,7),IBRG0=$G(^IBE(363.31,IBRG,0)),IBDV=$P(IBRG0," ",2)
"RTN","IBCROE",68,0)
 . ;
"RTN","IBCROE",69,0)
 . I $P(IBRG0,U,2)'=ZIP Q
"RTN","IBCROE",70,0)
 . ;
"RTN","IBCROE",71,0)
 . S IBBI=$$EXPAND^IBCRU1(363.3,.04,$P(IBBR0,U,4))
"RTN","IBCROE",72,0)
 . S IBCT=$S(IBBR0["FACILITY":"FACILITY",IBBR0["PHYSICIAN":"PHYSICIAN",1:$P(IBBR0,U,1))
"RTN","IBCROE",73,0)
 . ;
"RTN","IBCROE",74,0)
 . I IBBI["MISC",IBCSNM'["SNF" S COL=2,IBNAME="Partial Hospitalization"
"RTN","IBCROE",75,0)
 . I IBBI["MISC",IBCSNM["SKILLED" S COL=1,IBNAME="Skilled Nursing"
"RTN","IBCROE",76,0)
 . I IBBI="DRG",IBCSNM["ANC" S COL=1,IBNAME="Inpatient Anc" I IBCSNM["ICU" S COL=COL+1,IBNAME=IBNAME_" ICU"
"RTN","IBCROE",77,0)
 . I IBBI="DRG",IBCSNM["R&B" S COL=3,IBNAME="Inpatient R&B" I IBCSNM["ICU" S COL=COL+1,IBNAME=IBNAME_" ICU"
"RTN","IBCROE",78,0)
 . ;
"RTN","IBCROE",79,0)
 . I IBBI="CPT",IBCSNM["INPT" S COL=1,IBNAME="Inpatient Facility" I IBCT="PHYSICIAN" S COL=COL+1,IBNAME="Inpatient Physician"
"RTN","IBCROE",80,0)
 . I IBBI="CPT",IBCSNM["SNF" S COL=3,IBNAME="SNF Facility" I IBCT="PHYSICIAN" S COL=COL+1,IBNAME="SNF Physician"
"RTN","IBCROE",81,0)
 . I IBBI="CPT",IBCSNM["OPT" S COL=5,IBNAME="Outpatient Facility" I IBCT="PHYSICIAN" S COL=COL+1,IBNAME="Outpatient Physician"
"RTN","IBCROE",82,0)
 . I IBBI="CPT",IBCSNM["FS" S COL=7,IBNAME="Freestanding Physician"
"RTN","IBCROE",83,0)
 . ;
"RTN","IBCROE",84,0)
 . S IBPB=$P(IBRG0,U,3),IBPB=$S(IBPB=1:"VAMC Provider Based",IBPB=2:"Opt Provider Based",IBPB=3:"Non-Provider Based",1:"Provider Based Unknown")
"RTN","IBCROE",85,0)
 . ;
"RTN","IBCROE",86,0)
 . S IBCM=$P(IBBR0,U,5),IBCM=$S(IBCM=4:"ml",IBCM=5:"mn+",IBCM=6:"hr+",1:"")
"RTN","IBCROE",87,0)
 . ;
"RTN","IBCROE",88,0)
 . S IB2(IBCS)=IBBI_U_COL_U_IBNAME_U_IBDV_U_IBPB_U_IBCM
"RTN","IBCROE",89,0)
 . S $P(IB3(IBBI),U,COL)=IBNAME_" "_IBDV_" "_IBPB
"RTN","IBCROE",90,0)
 . ;
"RTN","IBCROE",91,0)
 . S IBCNT=IBCNT+1 I IBCNT#1000=0,'$D(ZTQUEUED) U IO(0) W "." U IO
"RTN","IBCROE",92,0)
 ;
"RTN","IBCROE",93,0)
ITEMS ;
"RTN","IBCROE",94,0)
 S IBBI="" F  S IBBI=$O(IB3(IBBI)) Q:IBBI=""  S ^TMP("IBCROE",$J,IBBI)="Item^Modifier^"_IB3(IBBI)
"RTN","IBCROE",95,0)
 ;
"RTN","IBCROE",96,0)
 S IBCI=0 F  S IBCI=$O(^IBA(363.2,IBCI)) Q:'IBCI  D
"RTN","IBCROE",97,0)
 . S IBCI0=^IBA(363.2,IBCI,0),IBCSNM=$P($G(^IBE(363.1,+$P(IBCI0,U,2),0)),U,1) Q:IBCSNM=""
"RTN","IBCROE",98,0)
 . S IBLNZ=$G(IB2($P(IBCI0,U,2))) I IBLNZ="" S IBZ("NOT DONE ",IBCSNM)="" Q
"RTN","IBCROE",99,0)
 . S IBZ("DONE",IBCSNM)=""
"RTN","IBCROE",100,0)
 . ;
"RTN","IBCROE",101,0)
 . Q:$P(IBCI0,U,3)'=$$VERSDT^IBCRHBRV(VERS)
"RTN","IBCROE",102,0)
 . ;
"RTN","IBCROE",103,0)
 . S IBCHG=$P(IBCI0,U,5)_$P(IBLNZ,U,6)_$P(IBCI0,U,8)
"RTN","IBCROE",104,0)
 . S IBMOD=$P(IBCI0,U,7) I IBMOD'="" S IBMOD=$P($$MOD^ICPTMOD(IBMOD,"I"),U,2)
"RTN","IBCROE",105,0)
 . I IBMOD="" S IBMOD=0
"RTN","IBCROE",106,0)
 . S IBCPT=$$EXPAND^IBCRU1(363.2,.01,$P(IBCI0,U,1))
"RTN","IBCROE",107,0)
 . ;
"RTN","IBCROE",108,0)
 . S IBBI=$P(IBLNZ,U,1)
"RTN","IBCROE",109,0)
 . S COL=$P(IBLNZ,U,2)
"RTN","IBCROE",110,0)
 . I $P($G(^TMP("IBCROE",$J,IBBI,IBCPT,IBMOD)),U,COL)'="" Q  ;DUP
"RTN","IBCROE",111,0)
 . S $P(^TMP("IBCROE",$J,IBBI,IBCPT,IBMOD),U,COL)=IBCHG
"RTN","IBCROE",112,0)
 . ;
"RTN","IBCROE",113,0)
 . S IBCNT=IBCNT+1 I IBCNT#1000=0,'$D(ZTQUEUED) U IO(0) W "." U IO
"RTN","IBCROE",114,0)
 ;
"RTN","IBCROE",115,0)
 ;
"RTN","IBCROE",116,0)
 D WRT
"RTN","IBCROE",117,0)
 K ^TMP("IBCROE",$J)
"RTN","IBCROE",118,0)
 Q
"RTN","IBCROE",119,0)
WRT ;
"RTN","IBCROE",120,0)
 S IBBI="" F  S IBBI=$O(^TMP("IBCROE",$J,IBBI)) Q:IBBI=""  D
"RTN","IBCROE",121,0)
 . W !,^TMP("IBCROE",$J,IBBI)
"RTN","IBCROE",122,0)
 . S IBCPT="" F  S IBCPT=$O(^TMP("IBCROE",$J,IBBI,IBCPT)) Q:IBCPT=""  D
"RTN","IBCROE",123,0)
 .. S IBMOD="" F  S IBMOD=$O(^TMP("IBCROE",$J,IBBI,IBCPT,IBMOD)) Q:IBMOD=""  D
"RTN","IBCROE",124,0)
 ... S IBMODI=IBMOD I IBMOD=0 S IBMODI=""
"RTN","IBCROE",125,0)
 ... W !,IBCPT,U,IBMODI,U,^TMP("IBCROE",$J,IBBI,IBCPT,IBMOD)
"RTN","IBCROE",126,0)
 ... S IBCNT=IBCNT+1 I IBCNT#1000=0,'$D(ZTQUEUED),$E(IOST,1,2)'="C-" U IO(0) W "." U IO
"RTN","IBCROE",127,0)
 Q
"VER")
8.0^22.0
"^DD",350,350,.22,0)
PFSS ACCOUNT REFERENCE^P375'^IBBAA(375,^0;22^Q
"^DD",350,350,.22,3)
Enter the PFSS Account Reference
"^DD",350,350,.22,21,0)
^^2^2^3050715^
"^DD",350,350,.22,21,1,0)
This is the PFSS Account entry for the Integrated Billing Action copayment
"^DD",350,350,.22,21,2,0)
charge.
"^DD",350,350,.22,"DT")
3050715
"^DD",354.71,354.71,.11,0)
BILLED AMOUNT^NJ10,2^^0;11^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999.99)!(X<0)!(X?.E1"."3.N) X
"^DD",354.71,354.71,.11,3)
Type a Dollar amount between 0 and 9999999.99, 2 Decimal Digits
"^DD",354.71,354.71,.11,21,0)
^.001^1^1^3010130^^
"^DD",354.71,354.71,.11,21,1,0)
This is the amount that was billed for this transaction.
"^DD",354.71,354.71,.11,"DT")
3060201
"^DD",354.71,354.71,.12,0)
NON-BILLABLE AMOUNT^NJ10,2^^0;12^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999.99)!(X<0)!(X?.E1"."3.N) X
"^DD",354.71,354.71,.12,3)
Type a Dollar amount between 0 and 9999999.99, 2 Decimal Digits
"^DD",354.71,354.71,.12,21,0)
^.001^1^1^3010130^^
"^DD",354.71,354.71,.12,21,1,0)
This is the non-billable amount for this transaction.
"^DD",354.71,354.71,.12,"DT")
3060201
"^DD",354.71,354.71,.2,0)
PFSS REMOTE TRANSACTION^S^0:NO;1:YES;^0;20^Q
"^DD",354.71,354.71,.2,3)
Enter YES if this transaction came from a PFSS remote system.
"^DD",354.71,354.71,.2,21,0)
^^3^3^3050715^
"^DD",354.71,354.71,.2,21,1,0)
This field is a flag/indicator that this billing transaction is from a 
"^DD",354.71,354.71,.2,21,2,0)
PFSS remote system to the local VistA M system.  It is used to determine 
"^DD",354.71,354.71,.2,21,3,0)
which system should be used for update processing.
"^DD",354.71,354.71,.2,"DT")
3050715
"BLD",5733,6)
^306
**END**
**END**
