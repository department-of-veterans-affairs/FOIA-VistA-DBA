KIDS Distribution saved on Jun 03, 2004@12:28:48
DG*5.3*602 IVM*2*98
**KIDS**:DG*5.3*602^IVM*2.0*98^

**INSTALL NAME**
DG*5.3*602
"BLD",5126,0)
DG*5.3*602^REGISTRATION^0^3040603^y
"BLD",5126,4,0)
^9.64PA^2^1
"BLD",5126,4,2,0)
2
"BLD",5126,4,2,2,0)
^9.641^2^1
"BLD",5126,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",5126,4,2,2,2,1,0)
^9.6411^.5295^1
"BLD",5126,4,2,2,2,1,.5295,0)
COMBAT VETERAN END DATE
"BLD",5126,4,2,222)
y^y^p^^^^n^^n
"BLD",5126,4,2,224)

"BLD",5126,4,"APDD",2,2)

"BLD",5126,4,"APDD",2,2,.5295)

"BLD",5126,4,"B",2,2)

"BLD",5126,"ABPKG")
n
"BLD",5126,"INID")
^n
"BLD",5126,"INIT")
EP^DG53602S
"BLD",5126,"KRN",0)
^9.67PA^8989.52^19
"BLD",5126,"KRN",.4,0)
.4
"BLD",5126,"KRN",.401,0)
.401
"BLD",5126,"KRN",.402,0)
.402
"BLD",5126,"KRN",.403,0)
.403
"BLD",5126,"KRN",.5,0)
.5
"BLD",5126,"KRN",.84,0)
.84
"BLD",5126,"KRN",3.6,0)
3.6
"BLD",5126,"KRN",3.8,0)
3.8
"BLD",5126,"KRN",9.2,0)
9.2
"BLD",5126,"KRN",9.8,0)
9.8
"BLD",5126,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5126,"KRN",9.8,"NM",1,0)
VAFHLZE1^^0^B24115976
"BLD",5126,"KRN",9.8,"NM","B","VAFHLZE1",1)

"BLD",5126,"KRN",19,0)
19
"BLD",5126,"KRN",19.1,0)
19.1
"BLD",5126,"KRN",101,0)
101
"BLD",5126,"KRN",409.61,0)
409.61
"BLD",5126,"KRN",771,0)
771
"BLD",5126,"KRN",870,0)
870
"BLD",5126,"KRN",8989.51,0)
8989.51
"BLD",5126,"KRN",8989.52,0)
8989.52
"BLD",5126,"KRN",8994,0)
8994
"BLD",5126,"KRN","B",.4,.4)

"BLD",5126,"KRN","B",.401,.401)

"BLD",5126,"KRN","B",.402,.402)

"BLD",5126,"KRN","B",.403,.403)

"BLD",5126,"KRN","B",.5,.5)

"BLD",5126,"KRN","B",.84,.84)

"BLD",5126,"KRN","B",3.6,3.6)

"BLD",5126,"KRN","B",3.8,3.8)

"BLD",5126,"KRN","B",9.2,9.2)

"BLD",5126,"KRN","B",9.8,9.8)

"BLD",5126,"KRN","B",19,19)

"BLD",5126,"KRN","B",19.1,19.1)

"BLD",5126,"KRN","B",101,101)

"BLD",5126,"KRN","B",409.61,409.61)

"BLD",5126,"KRN","B",771,771)

"BLD",5126,"KRN","B",870,870)

"BLD",5126,"KRN","B",8989.51,8989.51)

"BLD",5126,"KRN","B",8989.52,8989.52)

"BLD",5126,"KRN","B",8994,8994)

"BLD",5126,"QUES",0)
^9.62^^
"BLD",5126,"REQB",0)
^9.611^1^1
"BLD",5126,"REQB",1,0)
DG*5.3*497^2
"BLD",5126,"REQB","B","DG*5.3*497",1)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^y^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.5295)

"INIT")
EP^DG53602S
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
602^3040603
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DG53602S")
0^^B24504931
"RTN","DG53602S",1,0)
DG53602S ;ALB/TDM,BRM - Combat Veteran End Date Sync ; 6/3/04 12:16pm
"RTN","DG53602S",2,0)
 ;;5.3;Registration;**602**; Aug 13,1993
"RTN","DG53602S",3,0)
 ;This post install routine will loop through the "E" cross reference
"RTN","DG53602S",4,0)
 ;of the PATIENT (#2) file and trigger a Z07 message to the HEC system
"RTN","DG53602S",5,0)
 ;for all entries that have a value in the COMBAT VETERAN END DATE
"RTN","DG53602S",6,0)
 ;(#.5295) field that is greater than 1/16/03.
"RTN","DG53602S",7,0)
 Q
"RTN","DG53602S",8,0)
 ;
"RTN","DG53602S",9,0)
EP ;Entry point
"RTN","DG53602S",10,0)
 N OK
"RTN","DG53602S",11,0)
 D CHK Q:'OK
"RTN","DG53602S",12,0)
 D MSG
"RTN","DG53602S",13,0)
 D QUETASK
"RTN","DG53602S",14,0)
 Q
"RTN","DG53602S",15,0)
 ;
"RTN","DG53602S",16,0)
QUETASK ;Queue the task
"RTN","DG53602S",17,0)
 N TXT,ZTRTN,ZTDESC,ZTSK,ZTIO,ZTDTH
"RTN","DG53602S",18,0)
 S ZTRTN="EP1^DG53602S",ZTIO="",ZTDTH=$$NOW^XLFDT()
"RTN","DG53602S",19,0)
 S ZTDESC="CV END DATE SYNCHRONIZATION"
"RTN","DG53602S",20,0)
 K ^XTMP("DG53602S")
"RTN","DG53602S",21,0)
 D ^%ZTLOAD S ^XTMP("DG53602S","TASK")=ZTSK
"RTN","DG53602S",22,0)
 S TXT(1)="Task: "_ZTSK_" Queued."
"RTN","DG53602S",23,0)
 D BMES^XPDUTL(.TXT)
"RTN","DG53602S",24,0)
 Q
"RTN","DG53602S",25,0)
 ;
"RTN","DG53602S",26,0)
EP1 ;Entry point
"RTN","DG53602S",27,0)
 N X1,X2,X,XCVDT,XIEN,TOT,CVDT,CNT,EVENT,IYR
"RTN","DG53602S",28,0)
 S X1=DT,X2=60 D C^%DTC
"RTN","DG53602S",29,0)
 S ^XTMP("DG53602S",0)=X_"^"_$$DT^XLFDT_"^DG*5.3*602 Combat Vet Information Sharing w/HEC"
"RTN","DG53602S",30,0)
 S $P(^XTMP("DG53602S","DATE"),"^")=$$FMTE^XLFDT($$NOW^XLFDT(),"5P")
"RTN","DG53602S",31,0)
 ;
"RTN","DG53602S",32,0)
 ;Create index by patient.
"RTN","DG53602S",33,0)
 I $D(^DPT("E")) D
"RTN","DG53602S",34,0)
 . S (XCVDT,XIEN)=0
"RTN","DG53602S",35,0)
 . F  S XCVDT=$O(^DPT("E",XCVDT)) Q:XCVDT=""  D
"RTN","DG53602S",36,0)
 . . F  S XIEN=$O(^DPT("E",XCVDT,XIEN)) Q:XIEN=""  D
"RTN","DG53602S",37,0)
 . . . S ^XTMP("DG53602S","INDEX",XIEN)=""
"RTN","DG53602S",38,0)
 ;
"RTN","DG53602S",39,0)
 ;Loop through ^XTMP("DG53602S","INDEX") index.
"RTN","DG53602S",40,0)
 I $D(^XTMP("DG53602S","INDEX")) D
"RTN","DG53602S",41,0)
 . S (XIEN,TOT,CNT)=0,EVENT("ENROLL")=1
"RTN","DG53602S",42,0)
 . F  S XIEN=$O(^XTMP("DG53602S","INDEX",XIEN)) Q:+XIEN=0  D
"RTN","DG53602S",43,0)
 . . S CVDT=$P($G(^DPT(XIEN,.52)),"^",15) Q:'CVDT    ;No CV End Date
"RTN","DG53602S",44,0)
 . . S TOT=TOT+1,$P(^XTMP("DG53602S",1),"^")=TOT     ;Tot records
"RTN","DG53602S",45,0)
 . . Q:(CVDT<3030117)                   ;No CV END DT or CVDT<EGT date
"RTN","DG53602S",46,0)
 . . S IYR=$$INCYR(XIEN) Q:'$$LOG^IVMPLOG(XIEN,IYR,.EVENT)  ;Queue Z07
"RTN","DG53602S",47,0)
 . . S CNT=CNT+1,$P(^XTMP("DG53602S",1),"^",2)=CNT   ;Tot Z07's queued
"RTN","DG53602S",48,0)
 . . S ^XTMP("DG53602S","INDEX",XIEN)="Z07 Queued"
"RTN","DG53602S",49,0)
 S $P(^XTMP("DG53602S","DATE"),"^",2)=$$FMTE^XLFDT($$NOW^XLFDT(),"5P")
"RTN","DG53602S",50,0)
 S ^XTMP("DG53602S","COMPLETED")=1
"RTN","DG53602S",51,0)
 D MAIL  ;send mailman message to User
"RTN","DG53602S",52,0)
 D BMES^XPDUTL("Post install process for Combat Veteran End Date synchronization is complete.")
"RTN","DG53602S",53,0)
 Q
"RTN","DG53602S",54,0)
 ;
"RTN","DG53602S",55,0)
CHK ;check for completion
"RTN","DG53602S",56,0)
 N TXT,TASKNUM,STAT
"RTN","DG53602S",57,0)
 S OK=1
"RTN","DG53602S",58,0)
 I $D(^XTMP("DG53602S","COMPLETED")) D
"RTN","DG53602S",59,0)
 . S OK=0
"RTN","DG53602S",60,0)
 . N TXT
"RTN","DG53602S",61,0)
 . S TXT(1)="The Combat Veteran End Date synchronization process was completed in a"
"RTN","DG53602S",62,0)
 . S TXT(2)="previous run.  Nothing Done!"
"RTN","DG53602S",63,0)
 . D BMES^XPDUTL(.TXT)
"RTN","DG53602S",64,0)
 ;
"RTN","DG53602S",65,0)
 S TASKNUM=$G(^XTMP("DG53602S","TASK"))
"RTN","DG53602S",66,0)
 I +TASKNUM D  Q
"RTN","DG53602S",67,0)
 . S STAT=$$ACTIVE(TASKNUM)
"RTN","DG53602S",68,0)
 . I STAT>0 D
"RTN","DG53602S",69,0)
 . . S OK=0
"RTN","DG53602S",70,0)
 . . S TXT(1)="Task: "_TASKNUM_" is currently running the Combat Veteran End Date"
"RTN","DG53602S",71,0)
 . . S TXT(2)="synchronization process. Duplicate processes cannot be started."
"RTN","DG53602S",72,0)
 . . D BMES^XPDUTL(.TXT)
"RTN","DG53602S",73,0)
 Q
"RTN","DG53602S",74,0)
 ;
"RTN","DG53602S",75,0)
MSG ;create bulletin message in install file.
"RTN","DG53602S",76,0)
 N TXT
"RTN","DG53602S",77,0)
 S TXT(1)="This Post Install routine will queue a Z07 HL7 message to be sent to the"
"RTN","DG53602S",78,0)
 S TXT(2)="Health Eligibility Center (HEC) for all entries in the PATIENT (#2) file"
"RTN","DG53602S",79,0)
 S TXT(3)="that have a value in the COMBAT VETERAN END DATE (#.5295) field that is"
"RTN","DG53602S",80,0)
 S TXT(4)="on or after 1/17/03."
"RTN","DG53602S",81,0)
 S TXT(5)=" "
"RTN","DG53602S",82,0)
 D BMES^XPDUTL(.TXT)
"RTN","DG53602S",83,0)
 Q
"RTN","DG53602S",84,0)
 ;
"RTN","DG53602S",85,0)
MAIL N SITE,STATN,SITENM,XMDUZ,XMSUB,XMY,XMTEXT,MSG,ADR
"RTN","DG53602S",86,0)
 S SITE=$$SITE^VASITE,STATN=$P($G(SITE),"^",3),SITENM=$P($G(SITE),"^",2)
"RTN","DG53602S",87,0)
 S:$$GET1^DIQ(869.3,"1,",.03,"I")'="P" STATN=STATN_" [TEST]"
"RTN","DG53602S",88,0)
 S XMDUZ="CV END DATE SYNCHRONIZATION",XMSUB=XMDUZ_" - "_STATN_" (DG*5.3*602)"
"RTN","DG53602S",89,0)
 S (XMY(DUZ),XMY(.5))=""
"RTN","DG53602S",90,0)
 S XMY("terry.moore3@med.va.gov")="",XMY("pat.wilson@med.va.gov")=""
"RTN","DG53602S",91,0)
 S XMTEXT="MSG("
"RTN","DG53602S",92,0)
 S MSG(1)="Combat Veteran End Date synchronization process has completed successfully."
"RTN","DG53602S",93,0)
 S MSG(1.5)="Task: "_$G(^XTMP("DG53602S","TASK"))
"RTN","DG53602S",94,0)
 S MSG(2)=""
"RTN","DG53602S",95,0)
 S MSG(3)="Site Station number: "_STATN
"RTN","DG53602S",96,0)
 S MSG(4)="Site Name: "_SITENM
"RTN","DG53602S",97,0)
 S MSG(5)=""
"RTN","DG53602S",98,0)
 S MSG(6)="Process started at           : "_$P($G(^XTMP("DG53602S","DATE")),"^",1)
"RTN","DG53602S",99,0)
 S MSG(7)="Process completed at         : "_$P($G(^XTMP("DG53602S","DATE")),"^",2)
"RTN","DG53602S",100,0)
 S MSG(8)="Total Veterans processed     : "_+$P($G(^XTMP("DG53602S",1)),"^",1)
"RTN","DG53602S",101,0)
 S MSG(9)="Total Veterans queued for Z07: "_+$P($G(^XTMP("DG53602S",1)),"^",2)
"RTN","DG53602S",102,0)
 D ^XMD
"RTN","DG53602S",103,0)
 Q
"RTN","DG53602S",104,0)
 ;
"RTN","DG53602S",105,0)
INCYR(XIEN) ;Get valid income year
"RTN","DG53602S",106,0)
 N I,LMT,TMP,INCYR
"RTN","DG53602S",107,0)
 I $D(^IVM(301.5,"APT",XIEN)) Q $O(^IVM(301.5,"APT",XIEN,""),-1)
"RTN","DG53602S",108,0)
 F I=1,2,4 S LMT=$$LST^DGMTU(XIEN,,I) S:+$G(LMT) TMP($P(LMT,"^",2))=""
"RTN","DG53602S",109,0)
 I $D(TMP) S LMT=$O(TMP(""),-1),INCYR=($E(LMT,1,3)-1)_"0000" Q INCYR
"RTN","DG53602S",110,0)
 S INCYR=($E(DT,1,3)-1)_"0000"
"RTN","DG53602S",111,0)
 Q INCYR
"RTN","DG53602S",112,0)
 ;
"RTN","DG53602S",113,0)
ACTIVE(TASK) ;Checks if task is running
"RTN","DG53602S",114,0)
 ;  input  --  The taskman ID
"RTN","DG53602S",115,0)
 ;  output --  1=The task is running
"RTN","DG53602S",116,0)
 ;             0=The task is not running
"RTN","DG53602S",117,0)
 N STAT,ZTSK,Y
"RTN","DG53602S",118,0)
 S STAT=0,ZTSK=+TASK
"RTN","DG53602S",119,0)
 D STAT^%ZTLOAD
"RTN","DG53602S",120,0)
 S Y=ZTSK(1)
"RTN","DG53602S",121,0)
 I Y=0 S STAT=-1
"RTN","DG53602S",122,0)
 I ",1,2,"[(","_Y_",") S STAT=1
"RTN","DG53602S",123,0)
 I ",3,5,"[(","_Y_",") S STAT=0
"RTN","DG53602S",124,0)
 Q STAT
"RTN","VAFHLZE1")
0^1^B24115976
"RTN","VAFHLZE1",1,0)
VAFHLZE1 ;BPFO/JRP,TDM - Data extractor for ZEL segment ; 5/11/04 11:46am
"RTN","VAFHLZE1",2,0)
 ;;5.3;Registration;**342,497,602**;Aug 13, 1993
"RTN","VAFHLZE1",3,0)
 ;
"RTN","VAFHLZE1",4,0)
GETDATA ;Get information needed to build ZEL  segment
"RTN","VAFHLZE1",5,0)
 ;Input: Existance of the following variables is assumed
"RTN","VAFHLZE1",6,0)
 ;   DFN - Pointer to Patient (#2) file
"RTN","VAFHLZE1",7,0)
 ;   VAFPELIG - Primary Eligibility string (.36 node)
"RTN","VAFHLZE1",8,0)
 ;   VAFSTR - Fields to extract (padded with commas)
"RTN","VAFHLZE1",9,0)
 ;   VAFNODE - Eligibility Node (node from Elig. ["E"] mult)
"RTN","VAFHLZE1",10,0)
 ;   VAFMSTDT - Date to use when getting MST status (optional)
"RTN","VAFHLZE1",11,0)
 ;   VAFSETID - Value to use for Set ID (optional)
"RTN","VAFHLZE1",12,0)
 ;   HL7 encoding characters (HLFS, HLENC, HLQ)
"RTN","VAFHLZE1",13,0)
 ;
"RTN","VAFHLZE1",14,0)
 ;Output: VAFHLZEL(SeqNum) = Value
"RTN","VAFHLZE1",15,0)
 ;
"RTN","VAFHLZE1",16,0)
 ;Notes: VAFHLZEL is initialized (KILLed) on entry
"RTN","VAFHLZE1",17,0)
 ;     : If not passed, sequence 1 (Set ID) will have a value of '1'
"RTN","VAFHLZE1",18,0)
 ;       if getting data for the primary eligibility and '2' if getting
"RTN","VAFHLZE1",19,0)
 ;       data for other eligibility
"RTN","VAFHLZE1",20,0)
 ;     : All requested fields will be returned with the primary
"RTN","VAFHLZE1",21,0)
 ;       eligibility.  The Set ID (seq 1), eligibility code (seq 2)
"RTN","VAFHLZE1",22,0)
 ;       long ID (seq 3), and short ID (seq 4) will be the only fields
"RTN","VAFHLZE1",23,0)
 ;       returned for all other eligibilities.
"RTN","VAFHLZE1",24,0)
 ;
"RTN","VAFHLZE1",25,0)
 N PRIME,VAF,VAFMST,X
"RTN","VAFHLZE1",26,0)
 K VAFHLZEL
"RTN","VAFHLZE1",27,0)
 ;If true, primary eligibility (return all fields)
"RTN","VAFHLZE1",28,0)
 S PRIME=+VAFNODE=+VAFPELIG
"RTN","VAFHLZE1",29,0)
 ;Set ID
"RTN","VAFHLZE1",30,0)
 I VAFSTR[",1," S VAFHLZEL(1)=$S($G(VAFSETID):VAFSETID,PRIME:1,1:2)
"RTN","VAFHLZE1",31,0)
 ;Eligibility Code
"RTN","VAFHLZE1",32,0)
 I VAFSTR[",2," S X=$P($G(^DIC(8,+VAFNODE,0)),"^",9),VAFHLZEL(2)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",33,0)
 ;Long ID
"RTN","VAFHLZE1",34,0)
 I VAFSTR[",3," S X=$P(VAFNODE,"^",3),VAFHLZEL(3)=$S(X]"":$$M10^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",35,0)
 ;Short ID
"RTN","VAFHLZE1",36,0)
 I VAFSTR[",4," S X=$P(VAFNODE,"^",4),VAFHLZEL(4)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",37,0)
 ;Done if not getting primary eligibility information
"RTN","VAFHLZE1",38,0)
 I 'PRIME D  Q
"RTN","VAFHLZE1",39,0)
 .N Y,Z
"RTN","VAFHLZE1",40,0)
 .S Y=$L(VAFSTR,",")
"RTN","VAFHLZE1",41,0)
 .F X=1:1:Y S Z=$P(VAFSTR,",",X) I Z S:(Z>4) VAFHLZEL(Z)=HLQ
"RTN","VAFHLZE1",42,0)
 ;Get needed nodes in Patient file (#2)
"RTN","VAFHLZE1",43,0)
 N VAF
"RTN","VAFHLZE1",44,0)
 F X=.3,.31,.321,.322,.362,.361 S VAF(X)=$G(^DPT(DFN,X))
"RTN","VAFHLZE1",45,0)
 ;Disability ret. from military code
"RTN","VAFHLZE1",46,0)
 I VAFSTR[",5," S X=$P(VAFPELIG,"^",2),VAFHLZEL(5)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",47,0)
 ;Claim Number
"RTN","VAFHLZE1",48,0)
 I VAFSTR[",6," S X=$P(VAF(.31),"^",3),VAFHLZEL(6)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",49,0)
 ;Claim Folder Loc
"RTN","VAFHLZE1",50,0)
 I VAFSTR[",7," S X=$P(VAF(.31),"^",2),VAFHLZEL(7)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",51,0)
 ;Veteran?
"RTN","VAFHLZE1",52,0)
 I VAFSTR[",8," S X=$P($G(^DPT(DFN,"VET")),"^"),VAFHLZEL(8)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",53,0)
 ;Type
"RTN","VAFHLZE1",54,0)
 I VAFSTR[",9," S X=$P($G(^DG(391,+$P($G(^DPT(DFN,"TYPE")),"^"),0)),"^"),VAFHLZEL(9)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",55,0)
 ;Elig Status
"RTN","VAFHLZE1",56,0)
 I VAFSTR[10 S X=$P(VAF(.361),"^",1),VAFHLZEL(10)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",57,0)
 ;Elig Status Date
"RTN","VAFHLZE1",58,0)
 I VAFSTR[11 S X=$P(VAF(.361),"^",2),VAFHLZEL(11)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",59,0)
 ;Elig Interim Response
"RTN","VAFHLZE1",60,0)
 I VAFSTR[12 S X=$P(VAF(.361),"^",4),VAFHLZEL(12)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",61,0)
 ;Elig Verif. Method
"RTN","VAFHLZE1",62,0)
 I VAFSTR[13 S X=$P(VAF(.361),"^",5),VAFHLZEL(13)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",63,0)
 ;Rec A&A Benefits?
"RTN","VAFHLZE1",64,0)
 I VAFSTR[14 S X=$P(VAF(.362),"^",12),VAFHLZEL(14)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",65,0)
 ;Rec Housebound Benefits?
"RTN","VAFHLZE1",66,0)
 I VAFSTR[15 S X=$P(VAF(.362),"^",13),VAFHLZEL(15)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",67,0)
 ;Rec VA Pension?
"RTN","VAFHLZE1",68,0)
 I VAFSTR[16 S X=$P(VAF(.362),"^",14),VAFHLZEL(16)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",69,0)
 ;Rec VA Disability?
"RTN","VAFHLZE1",70,0)
 I VAFSTR[17 S X=$P(VAF(.3),"^",11),VAFHLZEL(17)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",71,0)
 ;Agent Orange Expos. Indicated?
"RTN","VAFHLZE1",72,0)
 I VAFSTR[18 S X=$P(VAF(.321),"^",2),VAFHLZEL(18)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",73,0)
 ;Radiation Expos. Indicated?
"RTN","VAFHLZE1",74,0)
 I VAFSTR[19 S X=$P(VAF(.321),"^",3),VAFHLZEL(19)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",75,0)
 ;Environmental Contaminants?
"RTN","VAFHLZE1",76,0)
 I VAFSTR[20 S X=$P(VAF(.322),"^",13),VAFHLZEL(20)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",77,0)
 ;Total Annual VA Check Amount
"RTN","VAFHLZE1",78,0)
 I VAFSTR[21 S X=$P(VAF(.362),"^",20),VAFHLZEL(21)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",79,0)
 ;Radiation Exposure Method
"RTN","VAFHLZE1",80,0)
 I (VAFSTR[22) D
"RTN","VAFHLZE1",81,0)
 .S X=$P(VAF(.321),"^",12)
"RTN","VAFHLZE1",82,0)
 .S:(X="")!($L(X)>1) X=HLQ
"RTN","VAFHLZE1",83,0)
 .S:(X'=HLQ) X=$TR(X,"NTB","234")
"RTN","VAFHLZE1",84,0)
 .S VAFHLZEL(22)=X
"RTN","VAFHLZE1",85,0)
 ;Call MST status API
"RTN","VAFHLZE1",86,0)
 S VAFMST=$$GETSTAT^DGMSTAPI(DFN,$G(VAFMSTDT))
"RTN","VAFHLZE1",87,0)
 I $P(VAFMST,"^",1)<0 D  I 1
"RTN","VAFHLZE1",88,0)
 .F J=23,24,25 I VAFSTR[J S VAFHLZEL(J)=HLQ
"RTN","VAFHLZE1",89,0)
 E  D
"RTN","VAFHLZE1",90,0)
 .;Current MST status
"RTN","VAFHLZE1",91,0)
 .I VAFSTR[23 S X=$P(VAFMST,"^",2),VAFHLZEL(23)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",92,0)
 .;MST status change date
"RTN","VAFHLZE1",93,0)
 .I VAFSTR[24 S X=$P(VAFMST,"^",3),VAFHLZEL(24)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",94,0)
 .;Site determining MST status
"RTN","VAFHLZE1",95,0)
 .I VAFSTR[25 S X=$P(VAFMST,"^",7) S X=$$GET1^DIQ(4,(+X)_",",99) S VAFHLZEL(25)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",96,0)
 ;Agent Orange Registration Date
"RTN","VAFHLZE1",97,0)
 I VAFSTR[26 S X=$P(VAF(.321),"^",7),VAFHLZEL(26)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",98,0)
 ;Agent Orange Exam Date
"RTN","VAFHLZE1",99,0)
 I VAFSTR[27 S X=$P(VAF(.321),"^",9),VAFHLZEL(27)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",100,0)
 ;Agent Orange Registration #
"RTN","VAFHLZE1",101,0)
 I VAFSTR[28 S X=$P(VAF(.321),"^",10),VAFHLZEL(28)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",102,0)
 ;Agent Orange Exposure Location
"RTN","VAFHLZE1",103,0)
 I VAFSTR[29 S X=$P(VAF(.321),"^",13),VAFHLZEL(29)=$S(X]"":X,$P(VAF(.321),U,2)="Y":"U",1:HLQ)
"RTN","VAFHLZE1",104,0)
 ;Radiation Registration Date
"RTN","VAFHLZE1",105,0)
 I VAFSTR[30 S X=$P(VAF(.321),"^",11),VAFHLZEL(30)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",106,0)
 ;Envir. Cont. Exam Date
"RTN","VAFHLZE1",107,0)
 I VAFSTR[31 S X=$P(VAF(.322),"^",15),VAFHLZEL(31)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",108,0)
 ;Envir. Cont. Registration date
"RTN","VAFHLZE1",109,0)
 I VAFSTR[32 S X=$P(VAF(.322),"^",14),VAFHLZEL(32)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",110,0)
 ;Monetary Ben. Verify Date
"RTN","VAFHLZE1",111,0)
 I VAFSTR[33 S X=$P(VAF(.3),"^",6),VAFHLZEL(33)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",112,0)
 ;User Enrollee Valid Through
"RTN","VAFHLZE1",113,0)
 I VAFSTR[34 S X=$P(VAF(.361),"^",7),VAFHLZEL(34)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",114,0)
 ;User Enrollee Site
"RTN","VAFHLZE1",115,0)
 I VAFSTR[35 S X=$P(VAF(.361),"^",8),X=$$GET1^DIQ(4,+X,99),VAFHLZEL(35)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",116,0)
 ;Combat Vet
"RTN","VAFHLZE1",117,0)
 I (VAFSTR[37)!(VAFSTR[38) D
"RTN","VAFHLZE1",118,0)
 .N CVET
"RTN","VAFHLZE1",119,0)
 .S CVET=$$CVEDT^DGCV(DFN)
"RTN","VAFHLZE1",120,0)
 .;Eligible
"RTN","VAFHLZE1",121,0)
 .I VAFSTR[37 D
"RTN","VAFHLZE1",122,0)
 ..S X=+CVET
"RTN","VAFHLZE1",123,0)
 ..S:X<0 X=""
"RTN","VAFHLZE1",124,0)
 ..S VAFHLZEL(37)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",125,0)
 .;End Date
"RTN","VAFHLZE1",126,0)
 .I VAFSTR[38 D
"RTN","VAFHLZE1",127,0)
 ..S X=+$P(CVET,"^",2)
"RTN","VAFHLZE1",128,0)
 ..S VAFHLZEL(38)=$S(X:$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",129,0)
 ;Done
"RTN","VAFHLZE1",130,0)
 Q
"VER")
8.0^22
"^DD",2,2,.5295,0)
COMBAT VETERAN END DATE^D^^.52;15^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2,2,.5295,1,0)
^.1
"^DD",2,2,.5295,1,1,0)
2^AENR5295^MUMPS
"^DD",2,2,.5295,1,1,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.5295,1,1,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.5295,1,1,3)
DO NOT DELETE
"^DD",2,2,.5295,1,1,"%D",0)
^^2^2^3040420^
"^DD",2,2,.5295,1,1,"%D",1,0)
This cross-reference is used to notify HEC of changes
"^DD",2,2,.5295,1,1,"%D",2,0)
to the COMBAT VETERAN END DATE field.
"^DD",2,2,.5295,1,1,"DT")
3040420
"^DD",2,2,.5295,20,0)
^.3LA^1^1
"^DD",2,2,.5295,20,1,0)
CS
"^DD",2,2,.5295,21,0)
^.001^4^4^3040420^^^^
"^DD",2,2,.5295,21,1,0)
This field represents the last day for combat vet eligibility. This field 
"^DD",2,2,.5295,21,2,0)
will only be populated by cross-reference when the veteran's combat vet 
"^DD",2,2,.5295,21,3,0)
eligibility has been determined. This value will remain after the combat 
"^DD",2,2,.5295,21,4,0)
vet eligibility period has expired.
"^DD",2,2,.5295,"AUDIT")

"^DD",2,2,.5295,"AX")

"^DD",2,2,.5295,"DT")
3040420
**INSTALL NAME**
IVM*2.0*98
"BLD",5125,0)
IVM*2.0*98^INCOME VERIFICATION MATCH^0^3040603^y
"BLD",5125,4,0)
^9.64PA^^
"BLD",5125,"ABPKG")
n
"BLD",5125,"KRN",0)
^9.67PA^8989.52^19
"BLD",5125,"KRN",.4,0)
.4
"BLD",5125,"KRN",.401,0)
.401
"BLD",5125,"KRN",.402,0)
.402
"BLD",5125,"KRN",.403,0)
.403
"BLD",5125,"KRN",.5,0)
.5
"BLD",5125,"KRN",.84,0)
.84
"BLD",5125,"KRN",3.6,0)
3.6
"BLD",5125,"KRN",3.8,0)
3.8
"BLD",5125,"KRN",9.2,0)
9.2
"BLD",5125,"KRN",9.8,0)
9.8
"BLD",5125,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5125,"KRN",9.8,"NM",1,0)
IVMPTRN8^^0^B51778618
"BLD",5125,"KRN",9.8,"NM","B","IVMPTRN8",1)

"BLD",5125,"KRN",19,0)
19
"BLD",5125,"KRN",19.1,0)
19.1
"BLD",5125,"KRN",101,0)
101
"BLD",5125,"KRN",409.61,0)
409.61
"BLD",5125,"KRN",771,0)
771
"BLD",5125,"KRN",870,0)
870
"BLD",5125,"KRN",8989.51,0)
8989.51
"BLD",5125,"KRN",8989.52,0)
8989.52
"BLD",5125,"KRN",8994,0)
8994
"BLD",5125,"KRN","B",.4,.4)

"BLD",5125,"KRN","B",.401,.401)

"BLD",5125,"KRN","B",.402,.402)

"BLD",5125,"KRN","B",.403,.403)

"BLD",5125,"KRN","B",.5,.5)

"BLD",5125,"KRN","B",.84,.84)

"BLD",5125,"KRN","B",3.6,3.6)

"BLD",5125,"KRN","B",3.8,3.8)

"BLD",5125,"KRN","B",9.2,9.2)

"BLD",5125,"KRN","B",9.8,9.8)

"BLD",5125,"KRN","B",19,19)

"BLD",5125,"KRN","B",19.1,19.1)

"BLD",5125,"KRN","B",101,101)

"BLD",5125,"KRN","B",409.61,409.61)

"BLD",5125,"KRN","B",771,771)

"BLD",5125,"KRN","B",870,870)

"BLD",5125,"KRN","B",8989.51,8989.51)

"BLD",5125,"KRN","B",8989.52,8989.52)

"BLD",5125,"KRN","B",8994,8994)

"BLD",5125,"QUES",0)
^9.62^^
"BLD",5125,"REQB",0)
^9.611^1^1
"BLD",5125,"REQB",1,0)
IVM*2.0*89^2
"BLD",5125,"REQB","B","IVM*2.0*89",1)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
98^3040603
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IVMPTRN8")
0^1^B51778618
"RTN","IVMPTRN8",1,0)
IVMPTRN8 ;ALB/RKS/PDJ/BRM/TDM - HL7 FULL DATA TRANSMISSION (Z07) BUILDER ; 5/11/04 11:44am
"RTN","IVMPTRN8",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**9,11,19,12,21,17,24,36,37,47,48,42,34,77,76,75,79,85,89,98**; 21-OCT-94
"RTN","IVMPTRN8",3,0)
 ;
"RTN","IVMPTRN8",4,0)
 ;
"RTN","IVMPTRN8",5,0)
BUILD(DFN,IVMMTDT,IVMCT,IVMQUERY) ; --
"RTN","IVMPTRN8",6,0)
 ;  Description: This entry point will be used to create an HL7 
"RTN","IVMPTRN8",7,0)
 ;  "Full Data Transmission" message for a patient.
"RTN","IVMPTRN8",8,0)
 ;
"RTN","IVMPTRN8",9,0)
 ;  Input:
"RTN","IVMPTRN8",10,0)
 ;        DFN - Patient IEN
"RTN","IVMPTRN8",11,0)
 ;    IVMMTDT - date of the patient's Means Test or Copay Test
"RTN","IVMPTRN8",12,0)
 ;      IVMCT - count of hl7 segments transmitted, pass by reference
"RTN","IVMPTRN8",13,0)
 ;   IVMQUERY - array passed in by reference where
"RTN","IVMPTRN8",14,0)
 ;    IVMQUERY("LTD") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",15,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",16,0)
 ;                last treatment date
"RTN","IVMPTRN8",17,0)
 ;    IVMQUERY("OVIS") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",18,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",19,0)
 ;                finding outpatient visits
"RTN","IVMPTRN8",20,0)
 ;
"RTN","IVMPTRN8",21,0)
 ;  HL7 variables as defined by call to INIT^IVMUFNC:
"RTN","IVMPTRN8",22,0)
 ;      HLEVN - HL7 message event counter 
"RTN","IVMPTRN8",23,0)
 ;      HLSDT - a flag that indicates that the data to be sent is
"RTN","IVMPTRN8",24,0)
 ;              stored in the ^TMP("HLS") global array.
"RTN","IVMPTRN8",25,0)
 ;
"RTN","IVMPTRN8",26,0)
 ;  The following variables returned by the INIT^HLTRANS entry point:
"RTN","IVMPTRN8",27,0)
 ;    HLNDAP - Non-DHCP Application Pointer from file 770
"RTN","IVMPTRN8",28,0)
 ;   HLNDAP0 - Zero node from file 770 corresponding to HLNDAP
"RTN","IVMPTRN8",29,0)
 ;     HLDAP - DHCP Application Pointer from file 771
"RTN","IVMPTRN8",30,0)
 ;     HLDAN - The DHCP Application Name (.01 field, file 771) for HLDAP
"RTN","IVMPTRN8",31,0)
 ;     HLPID - HL7 processing ID from file 770
"RTN","IVMPTRN8",32,0)
 ;     HLVER - HL7 version number from file 770
"RTN","IVMPTRN8",33,0)
 ;      HLFS - HL7 Field Separator from the 'FS' node of file 771
"RTN","IVMPTRN8",34,0)
 ;     HLECH - HL7 Encoding Characters from the 'EC' node of file 771
"RTN","IVMPTRN8",35,0)
 ;       HLQ - Double quotes ("") for use in building HL7 segments
"RTN","IVMPTRN8",36,0)
 ;     HLERR - if an error is encountered, an error message is returned
"RTN","IVMPTRN8",37,0)
 ;             in the HLERR variable.
"RTN","IVMPTRN8",38,0)
 ;      HLDA - the internal entry number for the entry created in
"RTN","IVMPTRN8",39,0)
 ;             file #772.
"RTN","IVMPTRN8",40,0)
 ;      HLDT - transmission date/time (associated with the entry in file
"RTN","IVMPTRN8",41,0)
 ;             #772 identified by HLDA) in internal VA FileMan format.
"RTN","IVMPTRN8",42,0)
 ;     HLDT1 - the same transmission date/time as the HLDT variable, 
"RTN","IVMPTRN8",43,0)
 ;             only in HL7 format.
"RTN","IVMPTRN8",44,0)
 ;
"RTN","IVMPTRN8",45,0)
 ; Output:
"RTN","IVMPTRN8",46,0)
 ;  ^TMP("HLS",$J,IVMCT) - global array containing all segments of the HL7 message that the VistA application wishes to send.  The HLSDT variable is defined above and the IVMCT variable is a sequential number incremented by 1.
"RTN","IVMPTRN8",47,0)
 ;
"RTN","IVMPTRN8",48,0)
 ;
"RTN","IVMPTRN8",49,0)
 N DGINC,DGIR,DGREL,I,IVMNTE,IVMPID,IVMSUB,IVMZRD,VAFPID,VAFZEL,FBZFE,IVMZCD,DELETE,NODE,IVMPIEN,TEST,IVMPNODE,TESTTYPE,SEQS,TESTCODE,HARDSHIP,ACTVIEN,IVMZMH,IVMSEQ
"RTN","IVMPTRN8",50,0)
 N EDBMTZ06
"RTN","IVMPTRN8",51,0)
 ;
"RTN","IVMPTRN8",52,0)
 ; create (PID) Patient Identification segment
"RTN","IVMPTRN8",53,0)
 S IVMSEQ="3,5,7,8,11,12,13,14,19"
"RTN","IVMPTRN8",54,0)
 ; do not transmit seq 11 and 12 if the Bad Address Indicator is set
"RTN","IVMPTRN8",55,0)
 ; or other address filters do not pass
"RTN","IVMPTRN8",56,0)
 S:$$FILTER^IVMPTRN9(DFN) IVMSEQ="3,5,7,8,13,14,19"
"RTN","IVMPTRN8",57,0)
 S IVMPID=$$EN^VAFHLPID(DFN,"1,"_IVMSEQ)        ;add SEQ 1 for PID
"RTN","IVMPTRN8",58,0)
 ;
"RTN","IVMPTRN8",59,0)
 ; **** Add ICN to 2nd piece PID segment for MPI@HEC.
"RTN","IVMPTRN8",60,0)
 S IVMCMOR="1,2"
"RTN","IVMPTRN8",61,0)
 ; check to see if site is a legacy site.  If not add ICN to PID segment.
"RTN","IVMPTRN8",62,0)
 I '$D(^PPP(1020.128,"AC",$P($$SITE^VASITE,"^",3))) D
"RTN","IVMPTRN8",63,0)
 .I +$$GETICN^MPIF001(DFN)>0,($$IFLOCAL^MPIF001(DFN)=0) S IVMPID=$$EN^VAFCPID(DFN,"1,2,"_IVMSEQ),IVMCMOR="1,2,3"  ;add SEQ 1 and 2 for PID
"RTN","IVMPTRN8",64,0)
 ;
"RTN","IVMPTRN8",65,0)
 I $D(VAFPID(1)) S IVMPID(1)=VAFPID(1)
"RTN","IVMPTRN8",66,0)
 ; send SSN indicating pseudo
"RTN","IVMPTRN8",67,0)
 ; I $P(IVMPID_$G(IVMPID(1)),HLFS,20)["P" D PSEUDO^IVMPTRN1  ; strip 'P' from pseudo SSNs
"RTN","IVMPTRN8",68,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID
"RTN","IVMPTRN8",69,0)
 I $D(IVMPID(1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID(1)
"RTN","IVMPTRN8",70,0)
 ;
"RTN","IVMPTRN8",71,0)
 ; **** create (PD1) Patient CMOR segment for MPI@HEC.
"RTN","IVMPTRN8",72,0)
 S:'$D(HL("FS")) HL("FS")=HLFS
"RTN","IVMPTRN8",73,0)
 S:'$D(HL("ECH")) HL("ECH")=HLECH
"RTN","IVMPTRN8",74,0)
 S:'$D(HL("Q")) HL("Q")=HLQ
"RTN","IVMPTRN8",75,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLPD1(DFN,IVMCMOR)
"RTN","IVMPTRN8",76,0)
 ;
"RTN","IVMPTRN8",77,0)
 ; create (ZPD) Patient Dependent Info. segment
"RTN","IVMPTRN8",78,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN1^VAFHLZPD(DFN,"1,8,9,11,12,13,17,19,31,32"),IVMINS=$P(^(IVMCT),HLFS,12)
"RTN","IVMPTRN8",79,0)
 ;
"RTN","IVMPTRN8",80,0)
 ; create (ZTA) Temporary Address segment
"RTN","IVMPTRN8",81,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZTA(DFN,"1,2,3,4,5,6,7")
"RTN","IVMPTRN8",82,0)
 ;
"RTN","IVMPTRN8",83,0)
 ; create (ZIE) Ineligible segment
"RTN","IVMPTRN8",84,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIE(DFN,"1,2,3",1)
"RTN","IVMPTRN8",85,0)
 ;
"RTN","IVMPTRN8",86,0)
 ; create (ZEL) Eligibility segment(s) 
"RTN","IVMPTRN8",87,0)
 ; **** Add 5th piece to ZEL to correct consistency check
"RTN","IVMPTRN8",88,0)
 D EN1^VAFHLZEL(DFN,"1,2,5,6,7,10,11,13,14,15,16,17,18,19,20,21,23,24,25,34,35,37,38",2,.VAFZEL)
"RTN","IVMPTRN8",89,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(1))  ; Primary Eligibility
"RTN","IVMPTRN8",90,0)
 ; - other entitled eligibilities
"RTN","IVMPTRN8",91,0)
 F IVMSUB=1:0 S IVMSUB=+$O(VAFZEL(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",92,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(+IVMSUB))
"RTN","IVMPTRN8",93,0)
 ;
"RTN","IVMPTRN8",94,0)
 ; create (ZEN) Enrollment segment
"RTN","IVMPTRN8",95,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEN(DFN)
"RTN","IVMPTRN8",96,0)
 ;
"RTN","IVMPTRN8",97,0)
 ; create (ZCD) Catastrophic Disability segment(s)
"RTN","IVMPTRN8",98,0)
 D BUILD^VAFHLZCD(.IVMZCD,DFN,,HLQ,HLFS)
"RTN","IVMPTRN8",99,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZCD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",100,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZCD(+IVMSUB))
"RTN","IVMPTRN8",101,0)
 ;
"RTN","IVMPTRN8",102,0)
 ; Optionally create (ZMH) Military History segment for Purple Heart
"RTN","IVMPTRN8",103,0)
 D ENTER^VAFHLZMH(DFN,"IVMZMH","13")
"RTN","IVMPTRN8",104,0)
 I $P(IVMZMH(1,0),HLFS,3)="PH","YN"[$E($P(IVMZMH(1,0),HLFS,4)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMZMH(1,0)
"RTN","IVMPTRN8",105,0)
 ;
"RTN","IVMPTRN8",106,0)
 ; create (ZRD) Rated Disabilities segment(s)
"RTN","IVMPTRN8",107,0)
 D EN^VAFHLZRD(DFN,"1,2,3,4",HLQ,HLFS,"IVMZRD")
"RTN","IVMPTRN8",108,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZRD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",109,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZRD(+IVMSUB,0))
"RTN","IVMPTRN8",110,0)
 ;
"RTN","IVMPTRN8",111,0)
 ; create (ZCT) Emergency Contact segment
"RTN","IVMPTRN8",112,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZCT(DFN,"1,2,3,4,5,6,7")
"RTN","IVMPTRN8",113,0)
 ;
"RTN","IVMPTRN8",114,0)
 ; create (ZEM) Employment Info. segment for (1) Patient & (2) Spouse
"RTN","IVMPTRN8",115,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3")
"RTN","IVMPTRN8",116,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3",2,2)
"RTN","IVMPTRN8",117,0)
 ;
"RTN","IVMPTRN8",118,0)
 ; create (ZGD) Guardian segment for (1) VA & (2) Civil 
"RTN","IVMPTRN8",119,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",1)
"RTN","IVMPTRN8",120,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",2)
"RTN","IVMPTRN8",121,0)
 ;
"RTN","IVMPTRN8",122,0)
 ; Income Year requiring transmission from IVM Patient File (301.5)
"RTN","IVMPTRN8",123,0)
 S IVMIY=$S($D(IVMIY):IVMIY,1:(IVMMTDT-10000))
"RTN","IVMPTRN8",124,0)
 N MTINFO S MTINFO=$$FUT^DGMTU(DFN)
"RTN","IVMPTRN8",125,0)
 I ($E(IVMIY,1,3)+1)=$E($P(MTINFO,U,2),1,3) S IVMMTDT=$P(MTINFO,U,2)
"RTN","IVMPTRN8",126,0)
 ;get the primary test for the income year
"RTN","IVMPTRN8",127,0)
 S TESTTYPE=$$GETTYPE^IVMPTRN9(DFN,IVMMTDT,.TESTCODE,.HARDSHIP,.ACTVIEN)
"RTN","IVMPTRN8",128,0)
 ;
"RTN","IVMPTRN8",129,0)
 ; The following function call returns:
"RTN","IVMPTRN8",130,0)
 ;   - Patient Relation IEN array in DGREL
"RTN","IVMPTRN8",131,0)
 ;   - Individual Annual Income IEN array in DGINC
"RTN","IVMPTRN8",132,0)
 ;   - Income Relation IEN array in DGINR
"RTN","IVMPTRN8",133,0)
 D ALL^DGMTU21(DFN,"VSC",IVMMTDT,"IPR",ACTVIEN)
"RTN","IVMPTRN8",134,0)
 ;
"RTN","IVMPTRN8",135,0)
 S EDBMTZ06=0 I $$VERZ06^EASPTRN1(DFN) S EDBMTZ06=1
"RTN","IVMPTRN8",136,0)
 ; create (ZIC) Income segment for veteran
"RTN","IVMPTRN8",137,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20")
"RTN","IVMPTRN8",138,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",139,0)
 I $P(^TMP("HLS",$J,IVMCT),"^",3)=HLQ S $P(^TMP("HLS",$J,IVMCT),"^",3)=$$HLDATE^HLFNC($E(IVMMTDT,1,3)-1_"0000")
"RTN","IVMPTRN8",140,0)
 ;
"RTN","IVMPTRN8",141,0)
 ; create (ZIR) Income Relation segment for veteran
"RTN","IVMPTRN8",142,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("V")),"1,2,3,4,5,10")
"RTN","IVMPTRN8",143,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^1"
"RTN","IVMPTRN8",144,0)
 ;
"RTN","IVMPTRN8",145,0)
 ; create (ZDP) Patient Dependent Info. segment for spouse
"RTN","IVMPTRN8",146,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("S")),"1,2,3,4,5,6,7,8,9")
"RTN","IVMPTRN8",147,0)
 I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",148,0)
 .; - pass non-existant SSNs as 0s
"RTN","IVMPTRN8",149,0)
 .S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",150,0)
 ;
"RTN","IVMPTRN8",151,0)
 ; create (ZIC) Income segment for spouse
"RTN","IVMPTRN8",152,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("S")),"1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,19,20")
"RTN","IVMPTRN8",153,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",154,0)
 ;
"RTN","IVMPTRN8",155,0)
 ; create (ZIR) Income Relation segment for spouse
"RTN","IVMPTRN8",156,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("S")),"1,2,3")
"RTN","IVMPTRN8",157,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",158,0)
 ;
"RTN","IVMPTRN8",159,0)
 ;
"RTN","IVMPTRN8",160,0)
 ; create ZDP, ZIC, and ZIR segments for all Means Test dependents
"RTN","IVMPTRN8",161,0)
 F IVMSUB=0:0 S IVMSUB=$O(DGREL("C",IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",162,0)
 .;
"RTN","IVMPTRN8",163,0)
 .; - create (ZDP) Dependent Info. segment for dependent child
"RTN","IVMPTRN8",164,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("C",IVMSUB)),"1,2,3,4,5,6,7,9")
"RTN","IVMPTRN8",165,0)
 .I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",166,0)
 ..; - pass non-existant SSNs as 0s
"RTN","IVMPTRN8",167,0)
 ..S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",168,0)
 .;
"RTN","IVMPTRN8",169,0)
 .; - create (ZIC) Income segment for dependent child
"RTN","IVMPTRN8",170,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("C",IVMSUB)),"1,2,3,4,5,6,7,8,9,10,11,12,15")
"RTN","IVMPTRN8",171,0)
 .I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",172,0)
 .;
"RTN","IVMPTRN8",173,0)
 .; - create (ZIR) Income Relation segment for dependent child
"RTN","IVMPTRN8",174,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("C",IVMSUB)),"1,2,3,6,7,8,9")
"RTN","IVMPTRN8",175,0)
 .I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",176,0)
 .; 
"RTN","IVMPTRN8",177,0)
 ;
"RTN","IVMPTRN8",178,0)
 ; create (ZIO) Inpatient/Outpatient segment for veteran
"RTN","IVMPTRN8",179,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)="ZIO^1^"_$$EN^IVMUFNC1(DFN,IVMMTDT,.IVMQUERY)_"^"_$$LTD^IVMUFNC(DFN,.IVMQUERY)
"RTN","IVMPTRN8",180,0)
 ;
"RTN","IVMPTRN8",181,0)
 ; create (NTE) Notes and Comments segment
"RTN","IVMPTRN8",182,0)
 D NTE^IVMUFNC4(DFN,.IVMNTE,IVMMTDT)
"RTN","IVMPTRN8",183,0)
 I '$D(IVMNTE) D
"RTN","IVMPTRN8",184,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)="NTE^1"
"RTN","IVMPTRN8",185,0)
 I $D(IVMNTE) D
"RTN","IVMPTRN8",186,0)
 .; - get notes and comments
"RTN","IVMPTRN8",187,0)
 .F IVMSUB=0:0 S IVMSUB=$O(IVMNTE(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",188,0)
 ..S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMNTE(IVMSUB)
"RTN","IVMPTRN8",189,0)
 ;
"RTN","IVMPTRN8",190,0)
 ; create (IN1) Insurance segment(s) for all active insurance
"RTN","IVMPTRN8",191,0)
 K ^TMP("VAFIN1",$J)
"RTN","IVMPTRN8",192,0)
 D EN^VAFHLIN1(DFN,"1,4,5,7,8,9,12,13,15,16,17,28,36")
"RTN","IVMPTRN8",193,0)
 F IVMSUB=0:0 S IVMSUB=$O(^TMP("VAFIN1",$J,IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",194,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=^TMP("VAFIN1",$J,+IVMSUB,0)
"RTN","IVMPTRN8",195,0)
 ;
"RTN","IVMPTRN8",196,0)
 D GOTO^IVMPTRN9
"RTN","IVMPTRN8",197,0)
 Q
"VER")
8.0^22
**END**
**END**
